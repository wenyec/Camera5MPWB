   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"cmdqu.c"
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.align	2
  22              		.global	creatqu
  24              	creatqu:
  25              	.LFB0:
  26              		.file 1 "../cmdqu.c"
   1:../cmdqu.c    **** /*********************************************************
   2:../cmdqu.c    ****  * The cmdqu.c for the ring buffer that can be used any case that needs a buffer.
   3:../cmdqu.c    ****  * Copyright Videology Imaging Solution Inc. 2013
   4:../cmdqu.c    ****  * All Rights Reserved
   5:../cmdqu.c    ****  *
   6:../cmdqu.c    ****  *  Created on: Oct 30, 2013
   7:../cmdqu.c    ****  *  Author: wcheng
   8:../cmdqu.c    ****  *
   9:../cmdqu.c    ****  *  it's used to create a ring buffer for the commands queue for buffering the host
  10:../cmdqu.c    ****  *  commands. it improves the commands performace.
  11:../cmdqu.c    ****  *********************************************************/
  12:../cmdqu.c    **** 
  13:../cmdqu.c    **** #include <cyu3system.h>
  14:../cmdqu.c    **** #include <cyu3os.h>
  15:../cmdqu.c    **** #include <cyu3usb.h>
  16:../cmdqu.c    **** #include "uvc.h"
  17:../cmdqu.c    **** #include "sensor.h"
  18:../cmdqu.c    **** #include "cmdqu.h"
  19:../cmdqu.c    **** 
  20:../cmdqu.c    **** static uint16_t DelayArray[64] = {
  21:../cmdqu.c    **** 		700, //BLC
  22:../cmdqu.c    **** 		260, //Brightness
  23:../cmdqu.c    **** 		260, //Contrast
  24:../cmdqu.c    **** 		260, //0
  25:../cmdqu.c    **** 		700, //MainFreq
  26:../cmdqu.c    **** 		260, //Hue
  27:../cmdqu.c    **** 		260, //Saturation
  28:../cmdqu.c    **** 		260, //Sharpness
  29:../cmdqu.c    **** 		260, //0
  30:../cmdqu.c    **** 		260, //WBMode
  31:../cmdqu.c    **** 		260, //0
  32:../cmdqu.c    **** 		260, //WBComp
  33:../cmdqu.c    **** 		260, //0
  34:../cmdqu.c    **** 		260, //0
  35:../cmdqu.c    **** 		260, //DigZoom
  36:../cmdqu.c    **** 		260, //0
  37:../cmdqu.c    **** 		700, //Shutter
  38:../cmdqu.c    **** 		700, //SenseUp
  39:../cmdqu.c    **** 		400, //MirrMode
  40:../cmdqu.c    **** 		300, //NoiRedu3DMod
  41:../cmdqu.c    **** 		300, //NoiRedu3DLev
  42:../cmdqu.c    **** 		300, //DayNightMod
  43:../cmdqu.c    **** 		300, //DayNightDly
  44:../cmdqu.c    **** 		260, //DayNightLev
  45:../cmdqu.c    **** 		260, //NightDayLev
  46:../cmdqu.c    **** 		700, //AExModee
  47:../cmdqu.c    **** 		700, //AExReferleve
  48:../cmdqu.c    **** 		260, //0
  49:../cmdqu.c    **** 		700, //SensorMode
  50:../cmdqu.c    **** 		260, //0
  51:../cmdqu.c    **** 		500, //SevePars
  52:../cmdqu.c    **** 		260, //0
  53:../cmdqu.c    **** 		260,
  54:../cmdqu.c    **** 		260,
  55:../cmdqu.c    **** 		260,
  56:../cmdqu.c    **** 		0
  57:../cmdqu.c    **** 
  58:../cmdqu.c    **** };
  59:../cmdqu.c    **** 
  60:../cmdqu.c    **** void creatqu(uint8_t para){
  27              		.loc 1 60 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  61:../cmdqu.c    **** 	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
  33              		.loc 1 61 0
  34 0000 08109FE5 		ldr	r1, .L2
  60:../cmdqu.c    **** void creatqu(uint8_t para){
  35              		.loc 1 60 0
  36 0004 0020A0E1 		mov	r2, r0
  37              		.loc 1 61 0
  38 0008 0400A0E3 		mov	r0, #4
  39              	.LVL1:
  62:../cmdqu.c    **** }
  40              		.loc 1 62 0
  61:../cmdqu.c    **** 	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
  41              		.loc 1 61 0
  42 000c FEFFFFEA 		b	CyU3PDebugPrint
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0010 00000000 		.word	.LC0
  47              		.cfi_endproc
  48              	.LFE0:
  50              		.align	2
  51              		.global	cmdquTest
  53              	cmdquTest:
  54              	.LFB1:
  63:../cmdqu.c    **** 
  64:../cmdqu.c    **** /**** it's used test the cmdqu data structure. */
  65:../cmdqu.c    **** void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
  55              		.loc 1 65 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0014 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 20
  66:../cmdqu.c    **** 	uint16_t cmdQuIdx = 0;
  67:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
  68:../cmdqu.c    **** 	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
  63              		.loc 1 68 0
  64 0018 042090E5 		ldr	r2, [r0, #4]
  65:../cmdqu.c    **** void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
  65              		.loc 1 65 0
  66 001c 14D04DE2 		sub	sp, sp, #20
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 40
  65:../cmdqu.c    **** void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
  69              		.loc 1 65 0
  70 0020 0040A0E1 		mov	r4, r0
  71              		.cfi_offset 14, -4
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 6, -12
  74              		.cfi_offset 5, -16
  75              		.cfi_offset 4, -20
  76 0024 0130A0E1 		mov	r3, r1
  77              		.loc 1 68 0
  78 0028 0400A0E3 		mov	r0, #4
  79              	.LVL3:
  80 002c 80139FE5 		ldr	r1, .L5
  81              	.LVL4:
  82 0030 FEFFFFEB 		bl	CyU3PDebugPrint
  69:../cmdqu.c    **** 	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x
  83              		.loc 1 69 0
  84 0034 10E094E5 		ldr	lr, [r4, #16]
  85 0038 0C7094E5 		ldr	r7, [r4, #12]
  86 003c 145094E5 		ldr	r5, [r4, #20]
  87 0040 1AC0D4E5 		ldrb	ip, [r4, #26]	@ zero_extendqisi2
  88 0044 0020D4E5 		ldrb	r2, [r4, #0]	@ zero_extendqisi2
  89 0048 083094E5 		ldr	r3, [r4, #8]
  90 004c 64139FE5 		ldr	r1, .L5+4
  91 0050 0400A0E3 		mov	r0, #4
  92 0054 08E08DE5 		str	lr, [sp, #8]
  93 0058 00708DE5 		str	r7, [sp, #0]
  94 005c 04508DE5 		str	r5, [sp, #4]
  95 0060 0CC08DE5 		str	ip, [sp, #12]
  96 0064 FEFFFFEB 		bl	CyU3PDebugPrint
  70:../cmdqu.c    **** 			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->
  71:../cmdqu.c    **** 	lcCmdDes = cmdbuf->startAdd;
  97              		.loc 1 71 0
  98 0068 085094E5 		ldr	r5, [r4, #8]
  99              	.LVL5:
  72:../cmdqu.c    **** 	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 100              		.loc 1 73 0
 101 006c 0070A0E3 		mov	r7, #0
 102 0070 386095E5 		ldr	r6, [r5, #56]
 103 0074 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 104 0078 00608DE5 		str	r6, [sp, #0]
 105 007c 340095E5 		ldr	r0, [r5, #52]
 106 0080 34439FE5 		ldr	r4, .L5+8
 107              	.LVL6:
 108 0084 81008DE9 		stmib	sp, {r0, r7}	@ phole stm
 109 0088 3CC095E5 		ldr	ip, [r5, #60]
 110 008c 0410A0E1 		mov	r1, r4
 111 0090 0530A0E1 		mov	r3, r5
 112 0094 0400A0E3 		mov	r0, #4
 113 0098 0CC08DE5 		str	ip, [sp, #12]
 114 009c FEFFFFEB 		bl	CyU3PDebugPrint
 115 00a0 781095E5 		ldr	r1, [r5, #120]
 116 00a4 4020D5E5 		ldrb	r2, [r5, #64]	@ zero_extendqisi2
 117 00a8 00108DE5 		str	r1, [sp, #0]
 118 00ac 743095E5 		ldr	r3, [r5, #116]
 119 00b0 0160A0E3 		mov	r6, #1
 120 00b4 48008DE9 		stmib	sp, {r3, r6}	@ phole stm
 121 00b8 7CC095E5 		ldr	ip, [r5, #124]
  74:../cmdqu.c    **** 				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->
  75:../cmdqu.c    **** 		lcCmdDes += 1;
 122              		.loc 1 75 0
 123 00bc 407085E2 		add	r7, r5, #64
 124              	.LVL7:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 125              		.loc 1 73 0
 126 00c0 0410A0E1 		mov	r1, r4
 127 00c4 0730A0E1 		mov	r3, r7
 128 00c8 0400A0E3 		mov	r0, #4
 129 00cc 0CC08DE5 		str	ip, [sp, #12]
 130 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 131 00d4 B80095E5 		ldr	r0, [r5, #184]
 132 00d8 8020D5E5 		ldrb	r2, [r5, #128]	@ zero_extendqisi2
 133 00dc 00008DE5 		str	r0, [sp, #0]
 134 00e0 B41095E5 		ldr	r1, [r5, #180]
 135 00e4 0230A0E3 		mov	r3, #2
 136 00e8 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 137 00ec BCC095E5 		ldr	ip, [r5, #188]
 138              		.loc 1 75 0
 139 00f0 806085E2 		add	r6, r5, #128
 140              	.LVL8:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 141              		.loc 1 73 0
 142 00f4 0410A0E1 		mov	r1, r4
 143 00f8 0630A0E1 		mov	r3, r6
 144 00fc 0400A0E3 		mov	r0, #4
 145 0100 0CC08DE5 		str	ip, [sp, #12]
 146 0104 FEFFFFEB 		bl	CyU3PDebugPrint
 147 0108 B80097E5 		ldr	r0, [r7, #184]
 148 010c 8020D7E5 		ldrb	r2, [r7, #128]	@ zero_extendqisi2
 149 0110 00008DE5 		str	r0, [sp, #0]
 150 0114 B41097E5 		ldr	r1, [r7, #180]
 151 0118 0360A0E3 		mov	r6, #3
 152 011c 42008DE9 		stmib	sp, {r1, r6}	@ phole stm
 153 0120 BCC097E5 		ldr	ip, [r7, #188]
 154              		.loc 1 75 0
 155 0124 C05085E2 		add	r5, r5, #192
 156              	.LVL9:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 157              		.loc 1 73 0
 158 0128 0410A0E1 		mov	r1, r4
 159 012c 0530A0E1 		mov	r3, r5
 160 0130 0400A0E3 		mov	r0, #4
 161 0134 0CC08DE5 		str	ip, [sp, #12]
 162 0138 FEFFFFEB 		bl	CyU3PDebugPrint
 163 013c 783095E5 		ldr	r3, [r5, #120]
 164              		.loc 1 75 0
 165 0140 C06087E2 		add	r6, r7, #192
 166              	.LVL10:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 167              		.loc 1 73 0
 168 0144 4020D5E5 		ldrb	r2, [r5, #64]	@ zero_extendqisi2
 169 0148 00308DE5 		str	r3, [sp, #0]
 170 014c 747095E5 		ldr	r7, [r5, #116]
 171 0150 0450A0E3 		mov	r5, #4
 172 0154 04708DE5 		str	r7, [sp, #4]
 173 0158 08508DE5 		str	r5, [sp, #8]
 174 015c 3CC096E5 		ldr	ip, [r6, #60]
 175 0160 0410A0E1 		mov	r1, r4
 176 0164 0630A0E1 		mov	r3, r6
 177 0168 0500A0E1 		mov	r0, r5
 178 016c 0CC08DE5 		str	ip, [sp, #12]
 179 0170 FEFFFFEB 		bl	CyU3PDebugPrint
 180 0174 780096E5 		ldr	r0, [r6, #120]
 181 0178 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 182 017c 00008DE5 		str	r0, [sp, #0]
 183 0180 741096E5 		ldr	r1, [r6, #116]
 184 0184 0530A0E3 		mov	r3, #5
 185 0188 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 186 018c 7CC096E5 		ldr	ip, [r6, #124]
 187              		.loc 1 75 0
 188 0190 407086E2 		add	r7, r6, #64
 189              	.LVL11:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 190              		.loc 1 73 0
 191 0194 0410A0E1 		mov	r1, r4
 192 0198 0730A0E1 		mov	r3, r7
 193 019c 0500A0E1 		mov	r0, r5
 194 01a0 0CC08DE5 		str	ip, [sp, #12]
 195 01a4 FEFFFFEB 		bl	CyU3PDebugPrint
 196 01a8 780097E5 		ldr	r0, [r7, #120]
 197 01ac 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 198 01b0 00008DE5 		str	r0, [sp, #0]
 199 01b4 741097E5 		ldr	r1, [r7, #116]
 200 01b8 0630A0E3 		mov	r3, #6
 201 01bc 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 202 01c0 7CC097E5 		ldr	ip, [r7, #124]
 203              		.loc 1 75 0
 204 01c4 806086E2 		add	r6, r6, #128
 205              	.LVL12:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 206              		.loc 1 73 0
 207 01c8 0410A0E1 		mov	r1, r4
 208 01cc 0630A0E1 		mov	r3, r6
 209 01d0 0500A0E1 		mov	r0, r5
 210 01d4 0CC08DE5 		str	ip, [sp, #12]
 211 01d8 FEFFFFEB 		bl	CyU3PDebugPrint
 212 01dc 780096E5 		ldr	r0, [r6, #120]
 213 01e0 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 214 01e4 00008DE5 		str	r0, [sp, #0]
 215 01e8 741096E5 		ldr	r1, [r6, #116]
 216 01ec 0730A0E3 		mov	r3, #7
 217 01f0 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 218 01f4 7CC096E5 		ldr	ip, [r6, #124]
 219              		.loc 1 75 0
 220 01f8 807087E2 		add	r7, r7, #128
 221              	.LVL13:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 222              		.loc 1 73 0
 223 01fc 0410A0E1 		mov	r1, r4
 224 0200 0730A0E1 		mov	r3, r7
 225 0204 0500A0E1 		mov	r0, r5
 226 0208 0CC08DE5 		str	ip, [sp, #12]
 227 020c FEFFFFEB 		bl	CyU3PDebugPrint
 228 0210 780097E5 		ldr	r0, [r7, #120]
 229 0214 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 230 0218 00008DE5 		str	r0, [sp, #0]
 231 021c 741097E5 		ldr	r1, [r7, #116]
 232 0220 0830A0E3 		mov	r3, #8
 233 0224 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 234 0228 7CC097E5 		ldr	ip, [r7, #124]
 235              		.loc 1 75 0
 236 022c 806086E2 		add	r6, r6, #128
 237              	.LVL14:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 238              		.loc 1 73 0
 239 0230 0410A0E1 		mov	r1, r4
 240 0234 0630A0E1 		mov	r3, r6
 241 0238 0500A0E1 		mov	r0, r5
 242 023c 0CC08DE5 		str	ip, [sp, #12]
 243 0240 FEFFFFEB 		bl	CyU3PDebugPrint
 244 0244 780096E5 		ldr	r0, [r6, #120]
 245 0248 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 246 024c 00008DE5 		str	r0, [sp, #0]
 247 0250 741096E5 		ldr	r1, [r6, #116]
 248 0254 0930A0E3 		mov	r3, #9
 249 0258 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 250 025c 7CC096E5 		ldr	ip, [r6, #124]
 251              		.loc 1 75 0
 252 0260 807087E2 		add	r7, r7, #128
 253              	.LVL15:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 254              		.loc 1 73 0
 255 0264 0410A0E1 		mov	r1, r4
 256 0268 0730A0E1 		mov	r3, r7
 257 026c 0500A0E1 		mov	r0, r5
 258 0270 0CC08DE5 		str	ip, [sp, #12]
 259 0274 FEFFFFEB 		bl	CyU3PDebugPrint
 260 0278 780097E5 		ldr	r0, [r7, #120]
 261 027c 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 262 0280 00008DE5 		str	r0, [sp, #0]
 263 0284 741097E5 		ldr	r1, [r7, #116]
 264 0288 0A30A0E3 		mov	r3, #10
 265 028c 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 266 0290 7CC097E5 		ldr	ip, [r7, #124]
 267              		.loc 1 75 0
 268 0294 806086E2 		add	r6, r6, #128
 269              	.LVL16:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 270              		.loc 1 73 0
 271 0298 0410A0E1 		mov	r1, r4
 272 029c 0630A0E1 		mov	r3, r6
 273 02a0 0500A0E1 		mov	r0, r5
 274 02a4 0CC08DE5 		str	ip, [sp, #12]
 275 02a8 FEFFFFEB 		bl	CyU3PDebugPrint
 276 02ac 780096E5 		ldr	r0, [r6, #120]
 277 02b0 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 278 02b4 00008DE5 		str	r0, [sp, #0]
 279 02b8 741096E5 		ldr	r1, [r6, #116]
 280 02bc 0B30A0E3 		mov	r3, #11
 281 02c0 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 282 02c4 7CC096E5 		ldr	ip, [r6, #124]
 283              		.loc 1 75 0
 284 02c8 807087E2 		add	r7, r7, #128
 285              	.LVL17:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 286              		.loc 1 73 0
 287 02cc 0410A0E1 		mov	r1, r4
 288 02d0 0730A0E1 		mov	r3, r7
 289 02d4 0500A0E1 		mov	r0, r5
 290 02d8 0CC08DE5 		str	ip, [sp, #12]
 291 02dc FEFFFFEB 		bl	CyU3PDebugPrint
 292 02e0 780097E5 		ldr	r0, [r7, #120]
 293 02e4 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 294 02e8 00008DE5 		str	r0, [sp, #0]
 295 02ec 741097E5 		ldr	r1, [r7, #116]
 296 02f0 0C30A0E3 		mov	r3, #12
 297 02f4 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 298 02f8 7CC097E5 		ldr	ip, [r7, #124]
 299              		.loc 1 75 0
 300 02fc 806086E2 		add	r6, r6, #128
 301              	.LVL18:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 302              		.loc 1 73 0
 303 0300 0410A0E1 		mov	r1, r4
 304 0304 0630A0E1 		mov	r3, r6
 305 0308 0500A0E1 		mov	r0, r5
 306 030c 0CC08DE5 		str	ip, [sp, #12]
 307 0310 FEFFFFEB 		bl	CyU3PDebugPrint
 308 0314 780096E5 		ldr	r0, [r6, #120]
 309 0318 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 310 031c 00008DE5 		str	r0, [sp, #0]
 311 0320 741096E5 		ldr	r1, [r6, #116]
 312 0324 0D30A0E3 		mov	r3, #13
 313 0328 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 314 032c 7CC096E5 		ldr	ip, [r6, #124]
 315              		.loc 1 75 0
 316 0330 807087E2 		add	r7, r7, #128
 317              	.LVL19:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 318              		.loc 1 73 0
 319 0334 0410A0E1 		mov	r1, r4
 320 0338 0730A0E1 		mov	r3, r7
 321 033c 0500A0E1 		mov	r0, r5
 322 0340 0CC08DE5 		str	ip, [sp, #12]
 323 0344 FEFFFFEB 		bl	CyU3PDebugPrint
 324 0348 780097E5 		ldr	r0, [r7, #120]
 325 034c 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 326 0350 00008DE5 		str	r0, [sp, #0]
 327 0354 741097E5 		ldr	r1, [r7, #116]
 328 0358 0E30A0E3 		mov	r3, #14
 329 035c 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 330 0360 7CC097E5 		ldr	ip, [r7, #124]
 331              		.loc 1 75 0
 332 0364 806086E2 		add	r6, r6, #128
 333              	.LVL20:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 334              		.loc 1 73 0
 335 0368 0410A0E1 		mov	r1, r4
 336 036c 0630A0E1 		mov	r3, r6
 337 0370 0500A0E1 		mov	r0, r5
 338 0374 0CC08DE5 		str	ip, [sp, #12]
 339 0378 FEFFFFEB 		bl	CyU3PDebugPrint
 340              		.loc 1 75 0
 341 037c 803087E2 		add	r3, r7, #128
 342              	.LVL21:
  73:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdf
 343              		.loc 1 73 0
 344 0380 38C093E5 		ldr	ip, [r3, #56]
 345 0384 8020D7E5 		ldrb	r2, [r7, #128]	@ zero_extendqisi2
 346 0388 00C08DE5 		str	ip, [sp, #0]
 347 038c 340093E5 		ldr	r0, [r3, #52]
 348 0390 0F10A0E3 		mov	r1, #15
 349 0394 03008DE9 		stmib	sp, {r0, r1}	@ phole stm
 350 0398 3CC093E5 		ldr	ip, [r3, #60]
 351 039c 0500A0E1 		mov	r0, r5
 352 03a0 0410A0E1 		mov	r1, r4
 353 03a4 0CC08DE5 		str	ip, [sp, #12]
 354 03a8 FEFFFFEB 		bl	CyU3PDebugPrint
 355              	.LVL22:
  76:../cmdqu.c    **** 	}
  77:../cmdqu.c    **** 
  78:../cmdqu.c    **** 	return;
  79:../cmdqu.c    **** }
 356              		.loc 1 79 0
 357 03ac 14D08DE2 		add	sp, sp, #20
 358 03b0 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 359              	.L6:
 360              		.align	2
 361              	.L5:
 362 03b4 18000000 		.word	.LC1
 363 03b8 34000000 		.word	.LC2
 364 03bc 94000000 		.word	.LC3
 365              		.cfi_endproc
 366              	.LFE1:
 368              		.align	2
 369              		.global	cmdbufCreate
 371              	cmdbufCreate:
 372              	.LFB2:
  80:../cmdqu.c    **** 
  81:../cmdqu.c    **** /***** create a command buffer. *******/
  82:../cmdqu.c    **** VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
 373              		.loc 1 82 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              	.LVL23:
 378 03c0 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 379              	.LCFI2:
 380              		.cfi_def_cfa_offset 16
 381              		.loc 1 82 0
 382 03c4 0040A0E1 		mov	r4, r0
 383              		.cfi_offset 14, -4
 384              		.cfi_offset 6, -8
 385              		.cfi_offset 5, -12
 386              		.cfi_offset 4, -16
  83:../cmdqu.c    **** 	VdRingBuf cmdque;
  84:../cmdqu.c    **** 
  85:../cmdqu.c    **** 	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue
 387              		.loc 1 85 0
 388 03c8 010AA0E3 		mov	r0, #4096
  82:../cmdqu.c    **** VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
 389              		.loc 1 82 0
 390 03cc 0250A0E1 		mov	r5, r2
 391              		.loc 1 85 0
 392 03d0 FEFFFFEB 		bl	CyU3PMemAlloc
 393              	.LVL24:
  86:../cmdqu.c    **** 	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
  87:../cmdqu.c    **** 	cmdque.bufferName = "I2C command queue";
  88:../cmdqu.c    **** 	cmdque.ringbufID = CMDQU0;
  89:../cmdqu.c    **** 	cmdque.numUnit = MAXCMD;
  90:../cmdqu.c    **** 	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind
  91:../cmdqu.c    **** 	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
  92:../cmdqu.c    **** 	cmdque.ringMux = muxPtr;
  93:../cmdqu.c    **** 	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
 394              		.loc 1 93 0
 395 03d4 0010A0E3 		mov	r1, #0
 396 03d8 0120A0E1 		mov	r2, r1
 397 03dc 3830A0E3 		mov	r3, #56
  85:../cmdqu.c    **** 	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue
 398              		.loc 1 85 0
 399 03e0 0060A0E1 		mov	r6, r0
 400              		.loc 1 93 0
 401 03e4 0500A0E1 		mov	r0, r5
 402 03e8 FEFFFFEB 		bl	_txe_mutex_create
 403 03ec 28109FE5 		ldr	r1, .L8
 404 03f0 0030A0E3 		mov	r3, #0
  90:../cmdqu.c    **** 	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind
 405              		.loc 1 90 0
 406 03f4 010A86E2 		add	r0, r6, #4096
 407              		.loc 1 93 0
 408 03f8 4020A0E3 		mov	r2, #64	@ movhi
 409 03fc 0C0084E5 		str	r0, [r4, #12]
 410 0400 0030C4E5 		strb	r3, [r4, #0]
 411 0404 420084E9 		stmib	r4, {r1, r6}	@ phole stm
 412 0408 B821C4E1 		strh	r2, [r4, #24]	@ movhi
 413 040c 1A30C4E5 		strb	r3, [r4, #26]
 414 0410 1C5084E5 		str	r5, [r4, #28]
  94:../cmdqu.c    **** 	return cmdque;
  95:../cmdqu.c    **** }
 415              		.loc 1 95 0
 416 0414 0400A0E1 		mov	r0, r4
 417 0418 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 418              	.L9:
 419              		.align	2
 420              	.L8:
 421 041c EC000000 		.word	.LC4
 422              		.cfi_endproc
 423              	.LFE2:
 425              		.align	2
 426              		.global	cmdquInit
 428              	cmdquInit:
 429              	.LFB3:
  96:../cmdqu.c    **** 
  97:../cmdqu.c    **** /**** initialize the command queue  *****/
  98:../cmdqu.c    **** void  cmdquInit(VdRingBuf *cmdqu){
 430              		.loc 1 98 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL25:
  99:../cmdqu.c    **** 	uint16_t cmdQuIdx = 0;
 100:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
 101:../cmdqu.c    **** 
 102:../cmdqu.c    **** 	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
 435              		.loc 1 102 0
 436 0420 083090E5 		ldr	r3, [r0, #8]
 437              	.LVL26:
 438 0424 0C2090E5 		ldr	r2, [r0, #12]
  98:../cmdqu.c    **** void  cmdquInit(VdRingBuf *cmdqu){
 439              		.loc 1 98 0
 440 0428 10402DE9 		stmfd	sp!, {r4, lr}
 441              	.LCFI3:
 442              		.cfi_def_cfa_offset 8
 443              		.loc 1 102 0
 444 042c 020053E1 		cmp	r3, r2
  98:../cmdqu.c    **** void  cmdquInit(VdRingBuf *cmdqu){
 445              		.loc 1 98 0
 446 0430 0040A0E1 		mov	r4, r0
 447              		.cfi_offset 14, -4
 448              		.cfi_offset 4, -8
 449              		.loc 1 102 0
 450 0434 1300008A 		bhi	.L11
 451              	.LVL27:
 452 0438 0020A0E3 		mov	r2, #0
 103:../cmdqu.c    **** 		lcCmdDes->CmdID = cmdQuIdx;
 104:../cmdqu.c    **** 		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
 453              		.loc 1 104 0
 454 043c 02E0A0E1 		mov	lr, r2
 455              	.LVL28:
 456              	.L12:
 105:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 457              		.loc 1 105 0
 458 0440 010082E2 		add	r0, r2, #1
 459 0444 0018A0E1 		mov	r1, r0, asl #16
 103:../cmdqu.c    **** 		lcCmdDes->CmdID = cmdQuIdx;
 460              		.loc 1 103 0
 461 0448 0020C3E5 		strb	r2, [r3, #0]
 462              		.loc 1 105 0
 463 044c 2128A0E1 		mov	r2, r1, lsr #16
 464 0450 081094E5 		ldr	r1, [r4, #8]
 106:../cmdqu.c    **** 		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
 465              		.loc 1 106 0
 466 0454 02C042E2 		sub	ip, r2, #2
 105:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 467              		.loc 1 105 0
 468 0458 3F0002E2 		and	r0, r2, #63
 469              		.loc 1 106 0
 470 045c 3FC00CE2 		and	ip, ip, #63
 105:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 471              		.loc 1 105 0
 472 0460 000381E0 		add	r0, r1, r0, asl #6
 473              		.loc 1 106 0
 474 0464 0CC381E0 		add	ip, r1, ip, asl #6
 105:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 475              		.loc 1 105 0
 476 0468 340083E5 		str	r0, [r3, #52]
 477              		.loc 1 106 0
 478 046c 38C083E5 		str	ip, [r3, #56]
 479              	.LVL29:
 102:../cmdqu.c    **** 	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
 480              		.loc 1 102 0
 481 0470 0C1094E5 		ldr	r1, [r4, #12]
 104:../cmdqu.c    **** 		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
 482              		.loc 1 104 0
 483 0474 3CE083E5 		str	lr, [r3, #60]
 102:../cmdqu.c    **** 	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
 484              		.loc 1 102 0
 485 0478 403083E2 		add	r3, r3, #64
 486              	.LVL30:
 487 047c 030051E1 		cmp	r1, r3
 488 0480 EEFFFF2A 		bcs	.L12
 489 0484 083094E5 		ldr	r3, [r4, #8]
 490              	.LVL31:
 491              	.L11:
 107:../cmdqu.c    **** 		if(0/*!cmdQuIdx debug*/) 		CyU3PDebugPrint (4, "Command Queue init 0 cmdID %d CmdDes 0x%x previou
 108:../cmdqu.c    **** 				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, 0, lcCmdDes->cmdFlag
 109:../cmdqu.c    **** 		cmdQuIdx ++;
 110:../cmdqu.c    **** 	}
 111:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 112:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(11) readptr 0x%x next 0x%x previous 0x%x local 0x%x\r\n",
 113:../cmdqu.c    **** 				cmdqu->readPtr, cmdqu->readPtr->cmdDesNext, cmdqu->readPtr->cmdDesPrevious, lcCmdDes);
 114:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
 115:../cmdqu.c    **** 			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
 116:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
 117:../cmdqu.c    **** 			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
 118:../cmdqu.c    **** #endif
 119:../cmdqu.c    **** 	cmdqu->readPtr = cmdqu->startAdd;
 492              		.loc 1 119 0
 493 0488 103084E5 		str	r3, [r4, #16]
 120:../cmdqu.c    **** 	CyU3PThreadSleep(10);
 494              		.loc 1 120 0
 495 048c 0A00A0E3 		mov	r0, #10
 496 0490 FEFFFFEB 		bl	_tx_thread_sleep
 121:../cmdqu.c    **** 	cmdqu->writePtr = cmdqu->readPtr;
 497              		.loc 1 121 0
 498 0494 102094E5 		ldr	r2, [r4, #16]
 122:../cmdqu.c    **** 	CyU3PThreadSleep(10);
 499              		.loc 1 122 0
 500 0498 0A00A0E3 		mov	r0, #10
 121:../cmdqu.c    **** 	cmdqu->writePtr = cmdqu->readPtr;
 501              		.loc 1 121 0
 502 049c 142084E5 		str	r2, [r4, #20]
 503              		.loc 1 122 0
 504 04a0 FEFFFFEB 		bl	_tx_thread_sleep
 123:../cmdqu.c    **** 	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
 505              		.loc 1 123 0
 506 04a4 0130A0E3 		mov	r3, #1
 507 04a8 1A30C4E5 		strb	r3, [r4, #26]
 124:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 125:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(12) readptr 0x%x next 0x%x previous 0x%x local 0x%x\r\n",
 126:../cmdqu.c    **** 				cmdqu->readPtr, cmdqu->readPtr->cmdDesNext, cmdqu->readPtr->cmdDesPrevious, lcCmdDes);
 127:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(12) writeptr 0x%x next 0x%x previous 0x%x\r\n",
 128:../cmdqu.c    **** 			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
 129:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
 130:../cmdqu.c    **** 			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
 131:../cmdqu.c    **** #endif
 132:../cmdqu.c    **** 	return;
 133:../cmdqu.c    **** }
 508              		.loc 1 133 0
 509 04ac 1080BDE8 		ldmfd	sp!, {r4, pc}
 510              		.cfi_endproc
 511              	.LFE3:
 513              		.align	2
 514              		.global	cmdbufDestroy
 516              	cmdbufDestroy:
 517              	.LFB4:
 134:../cmdqu.c    **** 
 135:../cmdqu.c    **** CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
 518              		.loc 1 135 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL32:
 136:../cmdqu.c    **** 	;  //na
 137:../cmdqu.c    **** 	return CyTrue;
 138:../cmdqu.c    **** }
 524              		.loc 1 138 0
 525 04b0 0100A0E3 		mov	r0, #1
 526              	.LVL33:
 527 04b4 1EFF2FE1 		bx	lr
 528              		.cfi_endproc
 529              	.LFE4:
 531              		.align	2
 532              		.global	cmdSet
 534              	cmdSet:
 535              	.LFB5:
 139:../cmdqu.c    **** 
 140:../cmdqu.c    **** /******* set a command into command queue based on the command ID *******/
 141:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 536              		.loc 1 141 0
 537              		.cfi_startproc
 538              		@ args = 8, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              	.LVL34:
 142:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
 143:../cmdqu.c    **** 
 144:../cmdqu.c    **** 	lcCmdDes = cmdqu->startAdd; //get a command descriptor
 541              		.loc 1 144 0
 542 04b8 080090E5 		ldr	r0, [r0, #8]
 543              	.LVL35:
 141:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 544              		.loc 1 141 0
 545 04bc F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 546              	.LCFI4:
 547              		.cfi_def_cfa_offset 20
 145:../cmdqu.c    **** 	lcCmdDes = lcCmdDes + cmdID;
 548              		.loc 1 145 0
 549 04c0 01C380E0 		add	ip, r0, r1, asl #6
 550              	.LVL36:
 146:../cmdqu.c    **** 	if(lcCmdDes->cmdFlag != desusing){
 551              		.loc 1 146 0
 552 04c4 3C409CE5 		ldr	r4, [ip, #60]
 553              		.cfi_offset 14, -4
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 6, -12
 556              		.cfi_offset 5, -16
 557              		.cfi_offset 4, -20
 141:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 558              		.loc 1 141 0
 559 04c8 14D04DE2 		sub	sp, sp, #20
 560              	.LCFI5:
 561              		.cfi_def_cfa_offset 40
 562              		.loc 1 146 0
 563 04cc 0F0054E3 		cmp	r4, #15
 141:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 564              		.loc 1 141 0
 565 04d0 2850DDE5 		ldrb	r5, [sp, #40]	@ zero_extendqisi2
 566 04d4 2C40DDE5 		ldrb	r4, [sp, #44]	@ zero_extendqisi2
 567              		.loc 1 146 0
 568 04d8 1600000A 		beq	.L17
 147:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
 569              		.loc 1 147 0
 570 04dc 847084E0 		add	r7, r4, r4, asl #1
 571 04e0 87708CE0 		add	r7, ip, r7, asl #1
 572 04e4 0530C7E5 		strb	r3, [r7, #5]
 148:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
 149:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
 150:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
 573              		.loc 1 150 0
 574 04e8 54309FE5 		ldr	r3, .L18
 575              	.LVL37:
 148:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
 576              		.loc 1 148 0
 577 04ec 0420C7E5 		strb	r2, [r7, #4]
 149:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
 578              		.loc 1 149 0
 579 04f0 0650C7E5 		strb	r5, [r7, #6]
 151:../cmdqu.c    **** 		lcCmdDes->NumPara = dataIdx;
 152:../cmdqu.c    **** 		lcCmdDes->curNum = 0;
 153:../cmdqu.c    **** 		lcCmdDes->cmdFlag = desReady;
 154:../cmdqu.c    **** //#ifdef USB_DEBUG_PRINT
 155:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 
 580              		.loc 1 155 0
 581 04f4 0123D0E7 		ldrb	r2, [r0, r1, asl #6]	@ zero_extendqisi2
 582              	.LVL38:
 150:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
 583              		.loc 1 150 0
 584 04f8 8100A0E1 		mov	r0, r1, asl #1
 585 04fc B01093E1 		ldrh	r1, [r3, r0]
 586              	.LVL39:
 587              		.loc 1 155 0
 588 0500 34609CE5 		ldr	r6, [ip, #52]
 153:../cmdqu.c    **** 		lcCmdDes->cmdFlag = desReady;
 589              		.loc 1 153 0
 590 0504 FFE0A0E3 		mov	lr, #255
 152:../cmdqu.c    **** 		lcCmdDes->curNum = 0;
 591              		.loc 1 152 0
 592 0508 0030A0E3 		mov	r3, #0
 150:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
 593              		.loc 1 150 0
 594 050c B810C7E1 		strh	r1, [r7, #8]	@ movhi
 152:../cmdqu.c    **** 		lcCmdDes->curNum = 0;
 595              		.loc 1 152 0
 596 0510 0130CCE5 		strb	r3, [ip, #1]
 151:../cmdqu.c    **** 		lcCmdDes->NumPara = dataIdx;
 597              		.loc 1 151 0
 598 0514 0240CCE5 		strb	r4, [ip, #2]
 153:../cmdqu.c    **** 		lcCmdDes->cmdFlag = desReady;
 599              		.loc 1 153 0
 600 0518 3CE08CE5 		str	lr, [ip, #60]
 601              		.loc 1 155 0
 602 051c 0400A0E3 		mov	r0, #4
 603 0520 20109FE5 		ldr	r1, .L18+4
 604 0524 0C30A0E1 		mov	r3, ip
 605 0528 40408DE8 		stmia	sp, {r6, lr}	@ phole stm
 606 052c 08408DE5 		str	r4, [sp, #8]
 607 0530 0C508DE5 		str	r5, [sp, #12]
 608 0534 FEFFFFEB 		bl	CyU3PDebugPrint
 609              	.LVL40:
 610              	.L17:
 156:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesNext, lcCmdDes->cmdFlag, dataIdx, Data);
 157:../cmdqu.c    **** //#endif
 158:../cmdqu.c    **** 	}else{
 159:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 160:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
 161:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes);
 162:../cmdqu.c    **** #endif
 163:../cmdqu.c    **** 	}
 164:../cmdqu.c    **** 	return CyTrue;
 165:../cmdqu.c    **** }
 611              		.loc 1 165 0
 612 0538 0100A0E3 		mov	r0, #1
 613 053c 14D08DE2 		add	sp, sp, #20
 614 0540 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 615              	.L19:
 616              		.align	2
 617              	.L18:
 618 0544 00000000 		.word	.LANCHOR0
 619 0548 00010000 		.word	.LC5
 620              		.cfi_endproc
 621              	.LFE5:
 623              		.align	2
 624              		.global	statGet
 626              	statGet:
 627              	.LFB6:
 166:../cmdqu.c    **** 
 167:../cmdqu.c    **** #if 0 // alternate putting queue approach
 168:../cmdqu.c    **** /******* set a command into command queue based on write pointer *******/
 169:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data){
 170:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
 171:../cmdqu.c    **** 
 172:../cmdqu.c    **** 	lcCmdDes = cmdqu->writePtr; //get a command descriptor
 173:../cmdqu.c    **** 	CyU3PDebugPrint (4, "Command Queue init 0 cmdID %d CmdDes 0x%x previous 0x%x next 0x%x qunext 0x%x
 174:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdqu->writePtr->cm
 175:../cmdqu.c    **** 	//cmdquTest(cmdqu, 0);
 176:../cmdqu.c    **** 	if(lcCmdDes == cmdqu->readPtr){//at first state.
 177:../cmdqu.c    **** 		if(lcCmdDes->cmdFlag == deswait){//the writing available
 178:../cmdqu.c    **** 			lcCmdDes->DevAdd = DevAdd;
 179:../cmdqu.c    **** 			lcCmdDes->RegAdd = RegAdd;
 180:../cmdqu.c    **** 			lcCmdDes->Data[0] = Data;
 181:../cmdqu.c    **** 			lcCmdDes->curNum = 0;
 182:../cmdqu.c    **** 			lcCmdDes->cmdFlag = desReady;
 183:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 184:../cmdqu.c    **** 			CyU3PDebugPrint (4, "CmdQu first state cmdID %d CmdDes 0x%x reader 0x%x next 0x%x\r\n",
 185:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes, cmdqu->readPtr, lcCmdDes->cmdDesNext);
 186:../cmdqu.c    **** #endif
 187:../cmdqu.c    **** 			cmdqu->writePtr = lcCmdDes->cmdDesNext;
 188:../cmdqu.c    **** 
 189:../cmdqu.c    **** 		}else{ //queue fullness
 190:../cmdqu.c    **** 			CyU3PDebugPrint (4, "CmdQu fullness cmdID %d CmdDes 0x%x reader 0x%x\r\n",
 191:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes, cmdqu->readPtr);
 192:../cmdqu.c    **** 			return 0;
 193:../cmdqu.c    **** 		}
 194:../cmdqu.c    **** 	}else{ //in normal state
 195:../cmdqu.c    **** 		//the command descriptor is available.
 196:../cmdqu.c    **** 		if(lcCmdDes->cmdFlag == dewait){
 197:../cmdqu.c    **** 			lcCmdDes->DevAdd = DevAdd;
 198:../cmdqu.c    **** 			lcCmdDes->RegAdd = RegAdd;
 199:../cmdqu.c    **** 			lcCmdDes->Data[0] = Data;
 200:../cmdqu.c    **** 			lcCmdDes->curNum = 0;
 201:../cmdqu.c    **** 			lcCmdDes->cmdFlag = desReady;
 202:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 203:../cmdqu.c    **** 			CyU3PDebugPrint (4, "Command descriptor setting cmdID %d nextID %d data %d cmdAdd 0x%x flag %d %
 204:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes->cmdDesNext->CmdID, lcCmdDes->Data[0], lcCmdDes, cmdqu->writePtr->cm
 205:../cmdqu.c    **** #endif
 206:../cmdqu.c    **** 			cmdqu->writePtr = lcCmdDes->cmdDesNext; // update the command queue writer pointer.
 207:../cmdqu.c    **** 		}else{//reset writer
 208:../cmdqu.c    **** 			while(lcCmdDes != cmdqu->readPtr){
 209:../cmdqu.c    **** 				lcCmdDes = lcCmdDes->cmdDesNext; //update cmdDes.
 210:../cmdqu.c    **** 				if(lcCmdDes->cmdFlag == dewait){
 211:../cmdqu.c    **** 					lcCmdDes->DevAdd = DevAdd;
 212:../cmdqu.c    **** 					lcCmdDes->RegAdd = RegAdd;
 213:../cmdqu.c    **** 					lcCmdDes->Data[0] = Data;
 214:../cmdqu.c    **** 					lcCmdDes->curNum = 0;
 215:../cmdqu.c    **** 					lcCmdDes->cmdFlag = desReady;
 216:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 217:../cmdqu.c    **** 					CyU3PDebugPrint (4, "Command descriptor setting cmdID %d nextID %d data %d cmdAdd 0x%x flag %d
 218:../cmdqu.c    **** 							lcCmdDes->CmdID, lcCmdDes->cmdDesNext->CmdID, lcCmdDes->Data[0], lcCmdDes, cmdqu->writePtr->
 219:../cmdqu.c    **** #endif
 220:../cmdqu.c    **** 					break;
 221:../cmdqu.c    **** 				}
 222:../cmdqu.c    **** 			}
 223:../cmdqu.c    **** 			if(lcCmdDes != cmdqu->readPtr)
 224:../cmdqu.c    **** 				cmdqu->writePtr = lcCmdDes->cmdDesNext; //update writer.
 225:../cmdqu.c    **** 			else cmdqu->writePtr = cmdqu->readPtr; //reset writer.
 226:../cmdqu.c    **** 		}
 227:../cmdqu.c    **** 	}
 228:../cmdqu.c    **** 
 229:../cmdqu.c    **** 	return CyTrue;
 230:../cmdqu.c    **** }
 231:../cmdqu.c    **** #endif
 232:../cmdqu.c    **** 
 233:../cmdqu.c    **** /******* get a state from camera register. *******
 234:../cmdqu.c    ****  * it might be unused, if state request performs immediately
 235:../cmdqu.c    ****  *****/
 236:../cmdqu.c    **** void statGet(VdRingBuf *statqu, uint8_t statID){
 628              		.loc 1 236 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL41:
 237:../cmdqu.c    **** #if 1 // copy
 238:../cmdqu.c    **** 	VdstateDes *lcStatDes;
 239:../cmdqu.c    **** 	uint8_t Data0, Data1;
 240:../cmdqu.c    **** 	uint8_t sendData[2];
 241:../cmdqu.c    **** 
 242:../cmdqu.c    **** 	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any avai
 634              		.loc 1 242 0
 635 054c 083090E5 		ldr	r3, [r0, #8]
 636 0550 013383E0 		add	r3, r3, r1, asl #6
 637              	.LVL42:
 243:../cmdqu.c    **** 
 244:../cmdqu.c    **** 	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
 638              		.loc 1 244 0
 639 0554 3C2093E5 		ldr	r2, [r3, #60]
 640 0558 0F0052E3 		cmp	r2, #15
 641 055c 1EFF2F11 		bxne	lr
 245:../cmdqu.c    **** 		switch(statID){
 642              		.loc 1 245 0
 643 0560 010051E3 		cmp	r1, #1
 644 0564 0E00000A 		beq	.L23
 645 0568 050051E3 		cmp	r1, #5
 646 056c 0700000A 		beq	.L29
 246:../cmdqu.c    **** 			case BrgtCtlID1:
 247:../cmdqu.c    **** 					Data0 = lcStatDes->staPar->Data;
 248:../cmdqu.c    **** 					Data1 = ((lcStatDes->staPar)+1)->Data;
 249:../cmdqu.c    **** 					//CtrlParArry[CtrlID][13] = Data0;
 250:../cmdqu.c    **** 					//CtrlParArry[CtrlID][14] = Data1;
 251:../cmdqu.c    **** 					if (Data1&0x2){ //check the sign bit (bit1)
 252:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 253:../cmdqu.c    **** 					}else{
 254:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 255:../cmdqu.c    **** 					}
 256:../cmdqu.c    **** 					glEp0Buffer[0] = Data1;
 257:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 258:../cmdqu.c    **** 					break;
 259:../cmdqu.c    **** 				case HueCtlID5:
 260:../cmdqu.c    **** 					Data0 = lcStatDes->staPar->Data;
 261:../cmdqu.c    **** 					glEp0Buffer[0] = Data0 + GREEN_BASE;
 262:../cmdqu.c    **** 					sendData[1] = 0;
 263:../cmdqu.c    **** 					break;
 264:../cmdqu.c    **** 				//case SaturCtlID6:
 265:../cmdqu.c    **** 				//case WBTLevCtlID10:
 266:../cmdqu.c    **** 				default:
 267:../cmdqu.c    **** 					glEp0Buffer[0] = lcStatDes->staPar->Data;
 647              		.loc 1 267 0
 648 0570 68C09FE5 		ldr	ip, .L30
 649 0574 0600D3E5 		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 650              	.LVL43:
 268:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 651              		.loc 1 268 0
 652 0578 0020A0E3 		mov	r2, #0
 267:../cmdqu.c    **** 					glEp0Buffer[0] = lcStatDes->staPar->Data;
 653              		.loc 1 267 0
 654 057c 0000CCE5 		strb	r0, [ip, #0]
 655              		.loc 1 268 0
 656 0580 0120CCE5 		strb	r2, [ip, #1]
 657              	.LVL44:
 658              	.L27:
 269:../cmdqu.c    **** 					break;
 270:../cmdqu.c    **** 			 }
 271:../cmdqu.c    **** 			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
 659              		.loc 1 271 0
 660 0584 54109FE5 		ldr	r1, .L30
 661 0588 0200A0E3 		mov	r0, #2
 272:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 273:../cmdqu.c    **** 			  CyU3PDebugPrint (4, "Command Queue init 0 cmdID %d CmdDes 0x%x previous 0x%x next 0x%x qunext 
 274:../cmdqu.c    **** 					  lcStatDes->StatID, lcStatDes, lcStatDes->staDesPrevious, lcStatDes->staDesNext, statqu->writ
 275:../cmdqu.c    **** #endif
 276:../cmdqu.c    **** 		}
 277:../cmdqu.c    **** 		lcStatDes++;
 278:../cmdqu.c    **** #endif
 279:../cmdqu.c    **** 	return;
 280:../cmdqu.c    **** }
 662              		.loc 1 280 0
 271:../cmdqu.c    **** 			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
 663              		.loc 1 271 0
 664 058c FEFFFFEA 		b	CyU3PUsbSendEP0Data
 665              	.LVL45:
 666              	.L29:
 261:../cmdqu.c    **** 					glEp0Buffer[0] = Data0 + GREEN_BASE;
 667              		.loc 1 261 0
 668 0590 0610D3E5 		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 669              	.LVL46:
 670 0594 44309FE5 		ldr	r3, .L30
 671              	.LVL47:
 672 0598 800041E2 		sub	r0, r1, #128
 673              	.LVL48:
 674 059c 0000C3E5 		strb	r0, [r3, #0]
 263:../cmdqu.c    **** 					break;
 675              		.loc 1 263 0
 676 05a0 F7FFFFEA 		b	.L27
 677              	.LVL49:
 678              	.L23:
 251:../cmdqu.c    **** 					if (Data1&0x2){ //check the sign bit (bit1)
 679              		.loc 1 251 0
 680 05a4 0CC0D3E5 		ldrb	ip, [r3, #12]	@ zero_extendqisi2
 247:../cmdqu.c    **** 					Data0 = lcStatDes->staPar->Data;
 681              		.loc 1 247 0
 682 05a8 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 683              	.LVL50:
 251:../cmdqu.c    **** 					if (Data1&0x2){ //check the sign bit (bit1)
 684              		.loc 1 251 0
 685 05ac 02001CE3 		tst	ip, #2
 254:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 686              		.loc 1 254 0
 687 05b0 2221A001 		moveq	r2, r2, lsr #2
 688              	.LVL51:
 252:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 689              		.loc 1 252 0
 690 05b4 0CC3A011 		movne	ip, ip, asl #6
 254:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 691              		.loc 1 254 0
 692 05b8 822CE001 		mvneq	r2, r2, asl #25
 256:../cmdqu.c    **** 					glEp0Buffer[0] = Data1;
 693              		.loc 1 256 0
 694 05bc 1C109FE5 		ldr	r1, .L30
 695              	.LVL52:
 252:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 696              		.loc 1 252 0
 697 05c0 40C00C12 		andne	ip, ip, #64
 254:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 698              		.loc 1 254 0
 699 05c4 A22CE001 		mvneq	r2, r2, lsr #25
 252:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 700              		.loc 1 252 0
 701 05c8 22C18C11 		orrne	ip, ip, r2, lsr #2
 702              	.LVL53:
 254:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 703              		.loc 1 254 0
 704 05cc 0CC38201 		orreq	ip, r2, ip, asl #6
 705              	.LVL54:
 257:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 706              		.loc 1 257 0
 707 05d0 0000A0E3 		mov	r0, #0
 708              	.LVL55:
 256:../cmdqu.c    **** 					glEp0Buffer[0] = Data1;
 709              		.loc 1 256 0
 710 05d4 00C0C1E5 		strb	ip, [r1, #0]
 257:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 711              		.loc 1 257 0
 712 05d8 0100C1E5 		strb	r0, [r1, #1]
 258:../cmdqu.c    **** 					break;
 713              		.loc 1 258 0
 714 05dc E8FFFFEA 		b	.L27
 715              	.L31:
 716              		.align	2
 717              	.L30:
 718 05e0 00000000 		.word	.LANCHOR1
 719              		.cfi_endproc
 720              	.LFE6:
 722              		.align	2
 723              		.global	cmdFind
 725              	cmdFind:
 726              	.LFB7:
 281:../cmdqu.c    **** 
 282:../cmdqu.c    **** /******* find a command form command queue ********/
 283:../cmdqu.c    **** VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
 727              		.loc 1 283 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732              	.LVL56:
 284:../cmdqu.c    **** 	VdcmdDes *cmd = cmdqu->startAdd;
 285:../cmdqu.c    **** 	;  //na
 286:../cmdqu.c    **** 	return cmd;
 287:../cmdqu.c    **** }
 733              		.loc 1 287 0
 734 05e4 080090E5 		ldr	r0, [r0, #8]
 735              	.LVL57:
 736 05e8 1EFF2FE1 		bx	lr
 737              		.cfi_endproc
 738              	.LFE7:
 740              		.section	.rodata
 741              		.align	2
 742              		.set	.LANCHOR0,. + 0
 745              	DelayArray:
 746 0000 BC02     		.short	700
 747 0002 0401     		.short	260
 748 0004 0401     		.short	260
 749 0006 0401     		.short	260
 750 0008 BC02     		.short	700
 751 000a 0401     		.short	260
 752 000c 0401     		.short	260
 753 000e 0401     		.short	260
 754 0010 0401     		.short	260
 755 0012 0401     		.short	260
 756 0014 0401     		.short	260
 757 0016 0401     		.short	260
 758 0018 0401     		.short	260
 759 001a 0401     		.short	260
 760 001c 0401     		.short	260
 761 001e 0401     		.short	260
 762 0020 BC02     		.short	700
 763 0022 BC02     		.short	700
 764 0024 9001     		.short	400
 765 0026 2C01     		.short	300
 766 0028 2C01     		.short	300
 767 002a 2C01     		.short	300
 768 002c 2C01     		.short	300
 769 002e 0401     		.short	260
 770 0030 0401     		.short	260
 771 0032 BC02     		.short	700
 772 0034 BC02     		.short	700
 773 0036 0401     		.short	260
 774 0038 BC02     		.short	700
 775 003a 0401     		.short	260
 776 003c F401     		.short	500
 777 003e 0401     		.short	260
 778 0040 0401     		.short	260
 779 0042 0401     		.short	260
 780 0044 0401     		.short	260
 781 0046 0000     		.short	0
 782 0048 00000000 		.space	56
 782      00000000 
 782      00000000 
 782      00000000 
 782      00000000 
 783              		.section	.rodata.str1.4,"aMS",%progbits,1
 784              		.align	2
 785              	.LC0:
 786 0000 54686520 		.ascii	"The test cmdqu %d \015\012\000"
 786      74657374 
 786      20636D64 
 786      71752025 
 786      64200D0A 
 787 0015 000000   		.space	3
 788              	.LC1:
 789 0018 436F6D6D 		.ascii	"Command Queue %s state %d\015\012\000"
 789      616E6420 
 789      51756575 
 789      65202573 
 789      20737461 
 790              	.LC2:
 791 0034 436F6D6D 		.ascii	"Command Queue check queueID %d startAdd 0x%x endAdd"
 791      616E6420 
 791      51756575 
 791      65206368 
 791      65636B20 
 792 0067 20307825 		.ascii	" 0x%x write 0x%x read 0x%x queueFlag %d\015\012\000"
 792      78207772 
 792      69746520 
 792      30782578 
 792      20726561 
 793 0091 000000   		.space	3
 794              	.LC3:
 795 0094 436F6D6D 		.ascii	"Command Queue check cmdID %d CmdDes 0x%x previous 0"
 795      616E6420 
 795      51756575 
 795      65206368 
 795      65636B20 
 796 00c7 78257820 		.ascii	"x%x next 0x%x Idx %d cmdflag %d\015\012\000"
 796      6E657874 
 796      20307825 
 796      78204964 
 796      78202564 
 797 00e9 000000   		.space	3
 798              	.LC4:
 799 00ec 49324320 		.ascii	"I2C command queue\000"
 799      636F6D6D 
 799      616E6420 
 799      71756575 
 799      6500
 800 00fe 0000     		.space	2
 801              	.LC5:
 802 0100 436F6D6D 		.ascii	"Command Queue set cmdID %d CmdDes 0x%x next 0x%x cm"
 802      616E6420 
 802      51756575 
 802      65207365 
 802      7420636D 
 803 0133 64666C61 		.ascii	"dflag %d dataIdx %d data 0x%x\015\012\000"
 803      67202564 
 803      20646174 
 803      61496478 
 803      20256420 
 804 0153 00       		.bss
 805              		.align	2
 806              		.set	.LANCHOR1,. + 0
 809              	glEp0Buffer:
 810 0000 00000000 		.space	32
 810      00000000 
 810      00000000 
 810      00000000 
 810      00000000 
 811              		.text
 812              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 cmdqu.c
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:21     .text:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:24     .text:00000000 creatqu
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:46     .text:00000010 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:50     .text:00000014 $a
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:53     .text:00000014 cmdquTest
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:362    .text:000003b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:368    .text:000003c0 $a
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:371    .text:000003c0 cmdbufCreate
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:421    .text:0000041c $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:425    .text:00000420 $a
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:428    .text:00000420 cmdquInit
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:516    .text:000004b0 cmdbufDestroy
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:534    .text:000004b8 cmdSet
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:618    .text:00000544 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:623    .text:0000054c $a
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:626    .text:0000054c statGet
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:718    .text:000005e0 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:722    .text:000005e4 $a
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:725    .text:000005e4 cmdFind
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:741    .rodata:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:745    .rodata:00000000 DelayArray
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:784    .rodata.str1.4:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:805    .bss:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccyVWUOj.s:809    .bss:00000000 glEp0Buffer
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CyU3PDebugPrint
CyU3PMemAlloc
_txe_mutex_create
_tx_thread_sleep
CyU3PUsbSendEP0Data
