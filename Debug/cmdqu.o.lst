   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"cmdqu.c"
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.align	2
  22              		.global	creatqu
  24              	creatqu:
  25              	.LFB0:
  26              		.file 1 "../cmdqu.c"
   1:../cmdqu.c    **** /*********************************************************
   2:../cmdqu.c    ****  * The cmdqu.c for the ring buffer that can be used any case that needs a buffer.
   3:../cmdqu.c    ****  * Copyright Videology Imaging Solution Inc. 2013
   4:../cmdqu.c    ****  * All Rights Reserved
   5:../cmdqu.c    ****  *
   6:../cmdqu.c    ****  *  Created on: Oct 30, 2013
   7:../cmdqu.c    ****  *  Author: wcheng
   8:../cmdqu.c    ****  *
   9:../cmdqu.c    ****  *  it's used to create a ring buffer for the commands queue for buffering the host
  10:../cmdqu.c    ****  *  commands. it improves the commands performace.
  11:../cmdqu.c    ****  *********************************************************/
  12:../cmdqu.c    **** 
  13:../cmdqu.c    **** #include <cyu3system.h>
  14:../cmdqu.c    **** #include <cyu3os.h>
  15:../cmdqu.c    **** #include <cyu3usb.h>
  16:../cmdqu.c    **** #include "uvc.h"
  17:../cmdqu.c    **** #include "sensor.h"
  18:../cmdqu.c    **** #include "cmdqu.h"
  19:../cmdqu.c    **** 
  20:../cmdqu.c    **** static uint16_t DelayArray[64] = {
  21:../cmdqu.c    **** 		700, //0: BLC
  22:../cmdqu.c    **** 		260, //1: Brightness
  23:../cmdqu.c    **** 		260, //2: Contrast
  24:../cmdqu.c    **** 		260, //3: 0
  25:../cmdqu.c    **** 		700, //4: MainFreq
  26:../cmdqu.c    **** 		260, //5: Hue
  27:../cmdqu.c    **** 		260, //6: Saturation
  28:../cmdqu.c    **** 		260, //7: Sharpness
  29:../cmdqu.c    **** 		260, //8: 0
  30:../cmdqu.c    **** 		260, //9: WBMode
  31:../cmdqu.c    **** 		260, //A: 0
  32:../cmdqu.c    **** 		260, //B: WBComp
  33:../cmdqu.c    **** 		260, //C: 0
  34:../cmdqu.c    **** 		260, //D: 0
  35:../cmdqu.c    **** 		260, //E: DigZoom
  36:../cmdqu.c    **** 		260, //F: 0
  37:../cmdqu.c    **** 		700, //10: Shutter
  38:../cmdqu.c    **** 		700, //11: SenseUp
  39:../cmdqu.c    **** 		400, //12: MirrMode
  40:../cmdqu.c    **** 		300, //13: NoiRedu3DMod
  41:../cmdqu.c    **** 		300, //14: NoiRedu3DLev
  42:../cmdqu.c    **** 		300, //15: DayNightMod
  43:../cmdqu.c    **** 		300, //16: DayNightDly
  44:../cmdqu.c    **** 		260, //17: DayNightLev
  45:../cmdqu.c    **** 		260, //18: NightDayLev
  46:../cmdqu.c    **** 		700, //19: AExModee
  47:../cmdqu.c    **** 		700, //1A: AExReferleve
  48:../cmdqu.c    **** 		260, //1B: 0
  49:../cmdqu.c    **** 		700, //1C: SensorMode
  50:../cmdqu.c    **** 		260, //1D: 0
  51:../cmdqu.c    **** 		500, //1E: SevePars
  52:../cmdqu.c    **** 		260, //1F: 0
  53:../cmdqu.c    **** 		260, //20: Iris auto (AF Lens)
  54:../cmdqu.c    **** 		260, //21: Iris auto (non AF Lens)
  55:../cmdqu.c    **** 		400, //22: Iris value (DC manual)
  56:../cmdqu.c    **** 		400, //23: Iris value (DC manual)
  57:../cmdqu.c    **** 		400, //24: BLCRange
  58:../cmdqu.c    **** 		260, //25: BLCWeight
  59:../cmdqu.c    **** 		260, //26: BLCGrid
  60:../cmdqu.c    **** 		260, //27: 0
  61:../cmdqu.c    **** 		260, //28: 0
  62:../cmdqu.c    **** 		260, //29: 0
  63:../cmdqu.c    **** 		260, //2A: 0
  64:../cmdqu.c    **** 		260, //2B: 0
  65:../cmdqu.c    **** 		0
  66:../cmdqu.c    **** 
  67:../cmdqu.c    **** };
  68:../cmdqu.c    **** 
  69:../cmdqu.c    **** void creatqu(uint8_t para){
  27              		.loc 1 69 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  70:../cmdqu.c    **** 	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
  33              		.loc 1 70 0
  34 0000 08109FE5 		ldr	r1, .L2
  69:../cmdqu.c    **** void creatqu(uint8_t para){
  35              		.loc 1 69 0
  36 0004 0020A0E1 		mov	r2, r0
  37              		.loc 1 70 0
  38 0008 0400A0E3 		mov	r0, #4
  39              	.LVL1:
  71:../cmdqu.c    **** }
  40              		.loc 1 71 0
  70:../cmdqu.c    **** 	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
  41              		.loc 1 70 0
  42 000c FEFFFFEA 		b	CyU3PDebugPrint
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0010 00000000 		.word	.LC0
  47              		.cfi_endproc
  48              	.LFE0:
  50              		.align	2
  51              		.global	cmdquTest
  53              	cmdquTest:
  54              	.LFB1:
  72:../cmdqu.c    **** 
  73:../cmdqu.c    **** /**** it's used test the queue data structure. */
  74:../cmdqu.c    **** void  cmdquTest(VdRingBuf *quebuf, uint8_t state){
  55              		.loc 1 74 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0014 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 20
  75:../cmdqu.c    **** 	uint16_t QuIdx = 0;
  76:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
  77:../cmdqu.c    **** 	CyU3PDebugPrint (4, "Queue %s state %d\r\n", quebuf->bufferName, state);
  63              		.loc 1 77 0
  64 0018 042090E5 		ldr	r2, [r0, #4]
  74:../cmdqu.c    **** void  cmdquTest(VdRingBuf *quebuf, uint8_t state){
  65              		.loc 1 74 0
  66 001c 14D04DE2 		sub	sp, sp, #20
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 40
  74:../cmdqu.c    **** void  cmdquTest(VdRingBuf *quebuf, uint8_t state){
  69              		.loc 1 74 0
  70 0020 0040A0E1 		mov	r4, r0
  71              		.cfi_offset 14, -4
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 6, -12
  74              		.cfi_offset 5, -16
  75              		.cfi_offset 4, -20
  76 0024 0130A0E1 		mov	r3, r1
  77              		.loc 1 77 0
  78 0028 0400A0E3 		mov	r0, #4
  79              	.LVL3:
  80 002c 80139FE5 		ldr	r1, .L5
  81              	.LVL4:
  82 0030 FEFFFFEB 		bl	CyU3PDebugPrint
  78:../cmdqu.c    **** 	CyU3PDebugPrint (4, "Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFl
  83              		.loc 1 78 0
  84 0034 10E094E5 		ldr	lr, [r4, #16]
  85 0038 0C7094E5 		ldr	r7, [r4, #12]
  86 003c 145094E5 		ldr	r5, [r4, #20]
  87 0040 1AC0D4E5 		ldrb	ip, [r4, #26]	@ zero_extendqisi2
  88 0044 0020D4E5 		ldrb	r2, [r4, #0]	@ zero_extendqisi2
  89 0048 083094E5 		ldr	r3, [r4, #8]
  90 004c 64139FE5 		ldr	r1, .L5+4
  91 0050 0400A0E3 		mov	r0, #4
  92 0054 08E08DE5 		str	lr, [sp, #8]
  93 0058 00708DE5 		str	r7, [sp, #0]
  94 005c 04508DE5 		str	r5, [sp, #4]
  95 0060 0CC08DE5 		str	ip, [sp, #12]
  96 0064 FEFFFFEB 		bl	CyU3PDebugPrint
  79:../cmdqu.c    **** 			quebuf->ringbufID, quebuf->startAdd, quebuf->endAdd, quebuf->writePtr, quebuf->readPtr, quebuf->
  80:../cmdqu.c    **** 	lcCmdDes = quebuf->startAdd;
  97              		.loc 1 80 0
  98 0068 085094E5 		ldr	r5, [r4, #8]
  99              	.LVL5:
  81:../cmdqu.c    **** 	for(QuIdx = 0; QuIdx < 0x10/*MAXCMD*/; QuIdx++){
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 100              		.loc 1 82 0
 101 006c 0070A0E3 		mov	r7, #0
 102 0070 386095E5 		ldr	r6, [r5, #56]
 103 0074 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 104 0078 00608DE5 		str	r6, [sp, #0]
 105 007c 340095E5 		ldr	r0, [r5, #52]
 106 0080 34439FE5 		ldr	r4, .L5+8
 107              	.LVL6:
 108 0084 81008DE9 		stmib	sp, {r0, r7}	@ phole stm
 109 0088 3CC095E5 		ldr	ip, [r5, #60]
 110 008c 0410A0E1 		mov	r1, r4
 111 0090 0530A0E1 		mov	r3, r5
 112 0094 0400A0E3 		mov	r0, #4
 113 0098 0CC08DE5 		str	ip, [sp, #12]
 114 009c FEFFFFEB 		bl	CyU3PDebugPrint
 115 00a0 781095E5 		ldr	r1, [r5, #120]
 116 00a4 4020D5E5 		ldrb	r2, [r5, #64]	@ zero_extendqisi2
 117 00a8 00108DE5 		str	r1, [sp, #0]
 118 00ac 743095E5 		ldr	r3, [r5, #116]
 119 00b0 0160A0E3 		mov	r6, #1
 120 00b4 48008DE9 		stmib	sp, {r3, r6}	@ phole stm
 121 00b8 7CC095E5 		ldr	ip, [r5, #124]
  83:../cmdqu.c    **** 				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, QuIdx, lcCmdDes->cmd
  84:../cmdqu.c    **** 		lcCmdDes += 1;
 122              		.loc 1 84 0
 123 00bc 407085E2 		add	r7, r5, #64
 124              	.LVL7:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 125              		.loc 1 82 0
 126 00c0 0410A0E1 		mov	r1, r4
 127 00c4 0730A0E1 		mov	r3, r7
 128 00c8 0400A0E3 		mov	r0, #4
 129 00cc 0CC08DE5 		str	ip, [sp, #12]
 130 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 131 00d4 B80095E5 		ldr	r0, [r5, #184]
 132 00d8 8020D5E5 		ldrb	r2, [r5, #128]	@ zero_extendqisi2
 133 00dc 00008DE5 		str	r0, [sp, #0]
 134 00e0 B41095E5 		ldr	r1, [r5, #180]
 135 00e4 0230A0E3 		mov	r3, #2
 136 00e8 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 137 00ec BCC095E5 		ldr	ip, [r5, #188]
 138              		.loc 1 84 0
 139 00f0 806085E2 		add	r6, r5, #128
 140              	.LVL8:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 141              		.loc 1 82 0
 142 00f4 0410A0E1 		mov	r1, r4
 143 00f8 0630A0E1 		mov	r3, r6
 144 00fc 0400A0E3 		mov	r0, #4
 145 0100 0CC08DE5 		str	ip, [sp, #12]
 146 0104 FEFFFFEB 		bl	CyU3PDebugPrint
 147 0108 B80097E5 		ldr	r0, [r7, #184]
 148 010c 8020D7E5 		ldrb	r2, [r7, #128]	@ zero_extendqisi2
 149 0110 00008DE5 		str	r0, [sp, #0]
 150 0114 B41097E5 		ldr	r1, [r7, #180]
 151 0118 0360A0E3 		mov	r6, #3
 152 011c 42008DE9 		stmib	sp, {r1, r6}	@ phole stm
 153 0120 BCC097E5 		ldr	ip, [r7, #188]
 154              		.loc 1 84 0
 155 0124 C05085E2 		add	r5, r5, #192
 156              	.LVL9:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 157              		.loc 1 82 0
 158 0128 0410A0E1 		mov	r1, r4
 159 012c 0530A0E1 		mov	r3, r5
 160 0130 0400A0E3 		mov	r0, #4
 161 0134 0CC08DE5 		str	ip, [sp, #12]
 162 0138 FEFFFFEB 		bl	CyU3PDebugPrint
 163 013c 783095E5 		ldr	r3, [r5, #120]
 164              		.loc 1 84 0
 165 0140 C06087E2 		add	r6, r7, #192
 166              	.LVL10:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 167              		.loc 1 82 0
 168 0144 4020D5E5 		ldrb	r2, [r5, #64]	@ zero_extendqisi2
 169 0148 00308DE5 		str	r3, [sp, #0]
 170 014c 747095E5 		ldr	r7, [r5, #116]
 171 0150 0450A0E3 		mov	r5, #4
 172 0154 04708DE5 		str	r7, [sp, #4]
 173 0158 08508DE5 		str	r5, [sp, #8]
 174 015c 3CC096E5 		ldr	ip, [r6, #60]
 175 0160 0410A0E1 		mov	r1, r4
 176 0164 0630A0E1 		mov	r3, r6
 177 0168 0500A0E1 		mov	r0, r5
 178 016c 0CC08DE5 		str	ip, [sp, #12]
 179 0170 FEFFFFEB 		bl	CyU3PDebugPrint
 180 0174 780096E5 		ldr	r0, [r6, #120]
 181 0178 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 182 017c 00008DE5 		str	r0, [sp, #0]
 183 0180 741096E5 		ldr	r1, [r6, #116]
 184 0184 0530A0E3 		mov	r3, #5
 185 0188 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 186 018c 7CC096E5 		ldr	ip, [r6, #124]
 187              		.loc 1 84 0
 188 0190 407086E2 		add	r7, r6, #64
 189              	.LVL11:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 190              		.loc 1 82 0
 191 0194 0410A0E1 		mov	r1, r4
 192 0198 0730A0E1 		mov	r3, r7
 193 019c 0500A0E1 		mov	r0, r5
 194 01a0 0CC08DE5 		str	ip, [sp, #12]
 195 01a4 FEFFFFEB 		bl	CyU3PDebugPrint
 196 01a8 780097E5 		ldr	r0, [r7, #120]
 197 01ac 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 198 01b0 00008DE5 		str	r0, [sp, #0]
 199 01b4 741097E5 		ldr	r1, [r7, #116]
 200 01b8 0630A0E3 		mov	r3, #6
 201 01bc 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 202 01c0 7CC097E5 		ldr	ip, [r7, #124]
 203              		.loc 1 84 0
 204 01c4 806086E2 		add	r6, r6, #128
 205              	.LVL12:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 206              		.loc 1 82 0
 207 01c8 0410A0E1 		mov	r1, r4
 208 01cc 0630A0E1 		mov	r3, r6
 209 01d0 0500A0E1 		mov	r0, r5
 210 01d4 0CC08DE5 		str	ip, [sp, #12]
 211 01d8 FEFFFFEB 		bl	CyU3PDebugPrint
 212 01dc 780096E5 		ldr	r0, [r6, #120]
 213 01e0 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 214 01e4 00008DE5 		str	r0, [sp, #0]
 215 01e8 741096E5 		ldr	r1, [r6, #116]
 216 01ec 0730A0E3 		mov	r3, #7
 217 01f0 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 218 01f4 7CC096E5 		ldr	ip, [r6, #124]
 219              		.loc 1 84 0
 220 01f8 807087E2 		add	r7, r7, #128
 221              	.LVL13:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 222              		.loc 1 82 0
 223 01fc 0410A0E1 		mov	r1, r4
 224 0200 0730A0E1 		mov	r3, r7
 225 0204 0500A0E1 		mov	r0, r5
 226 0208 0CC08DE5 		str	ip, [sp, #12]
 227 020c FEFFFFEB 		bl	CyU3PDebugPrint
 228 0210 780097E5 		ldr	r0, [r7, #120]
 229 0214 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 230 0218 00008DE5 		str	r0, [sp, #0]
 231 021c 741097E5 		ldr	r1, [r7, #116]
 232 0220 0830A0E3 		mov	r3, #8
 233 0224 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 234 0228 7CC097E5 		ldr	ip, [r7, #124]
 235              		.loc 1 84 0
 236 022c 806086E2 		add	r6, r6, #128
 237              	.LVL14:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 238              		.loc 1 82 0
 239 0230 0410A0E1 		mov	r1, r4
 240 0234 0630A0E1 		mov	r3, r6
 241 0238 0500A0E1 		mov	r0, r5
 242 023c 0CC08DE5 		str	ip, [sp, #12]
 243 0240 FEFFFFEB 		bl	CyU3PDebugPrint
 244 0244 780096E5 		ldr	r0, [r6, #120]
 245 0248 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 246 024c 00008DE5 		str	r0, [sp, #0]
 247 0250 741096E5 		ldr	r1, [r6, #116]
 248 0254 0930A0E3 		mov	r3, #9
 249 0258 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 250 025c 7CC096E5 		ldr	ip, [r6, #124]
 251              		.loc 1 84 0
 252 0260 807087E2 		add	r7, r7, #128
 253              	.LVL15:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 254              		.loc 1 82 0
 255 0264 0410A0E1 		mov	r1, r4
 256 0268 0730A0E1 		mov	r3, r7
 257 026c 0500A0E1 		mov	r0, r5
 258 0270 0CC08DE5 		str	ip, [sp, #12]
 259 0274 FEFFFFEB 		bl	CyU3PDebugPrint
 260 0278 780097E5 		ldr	r0, [r7, #120]
 261 027c 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 262 0280 00008DE5 		str	r0, [sp, #0]
 263 0284 741097E5 		ldr	r1, [r7, #116]
 264 0288 0A30A0E3 		mov	r3, #10
 265 028c 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 266 0290 7CC097E5 		ldr	ip, [r7, #124]
 267              		.loc 1 84 0
 268 0294 806086E2 		add	r6, r6, #128
 269              	.LVL16:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 270              		.loc 1 82 0
 271 0298 0410A0E1 		mov	r1, r4
 272 029c 0630A0E1 		mov	r3, r6
 273 02a0 0500A0E1 		mov	r0, r5
 274 02a4 0CC08DE5 		str	ip, [sp, #12]
 275 02a8 FEFFFFEB 		bl	CyU3PDebugPrint
 276 02ac 780096E5 		ldr	r0, [r6, #120]
 277 02b0 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 278 02b4 00008DE5 		str	r0, [sp, #0]
 279 02b8 741096E5 		ldr	r1, [r6, #116]
 280 02bc 0B30A0E3 		mov	r3, #11
 281 02c0 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 282 02c4 7CC096E5 		ldr	ip, [r6, #124]
 283              		.loc 1 84 0
 284 02c8 807087E2 		add	r7, r7, #128
 285              	.LVL17:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 286              		.loc 1 82 0
 287 02cc 0410A0E1 		mov	r1, r4
 288 02d0 0730A0E1 		mov	r3, r7
 289 02d4 0500A0E1 		mov	r0, r5
 290 02d8 0CC08DE5 		str	ip, [sp, #12]
 291 02dc FEFFFFEB 		bl	CyU3PDebugPrint
 292 02e0 780097E5 		ldr	r0, [r7, #120]
 293 02e4 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 294 02e8 00008DE5 		str	r0, [sp, #0]
 295 02ec 741097E5 		ldr	r1, [r7, #116]
 296 02f0 0C30A0E3 		mov	r3, #12
 297 02f4 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 298 02f8 7CC097E5 		ldr	ip, [r7, #124]
 299              		.loc 1 84 0
 300 02fc 806086E2 		add	r6, r6, #128
 301              	.LVL18:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 302              		.loc 1 82 0
 303 0300 0410A0E1 		mov	r1, r4
 304 0304 0630A0E1 		mov	r3, r6
 305 0308 0500A0E1 		mov	r0, r5
 306 030c 0CC08DE5 		str	ip, [sp, #12]
 307 0310 FEFFFFEB 		bl	CyU3PDebugPrint
 308 0314 780096E5 		ldr	r0, [r6, #120]
 309 0318 4020D6E5 		ldrb	r2, [r6, #64]	@ zero_extendqisi2
 310 031c 00008DE5 		str	r0, [sp, #0]
 311 0320 741096E5 		ldr	r1, [r6, #116]
 312 0324 0D30A0E3 		mov	r3, #13
 313 0328 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 314 032c 7CC096E5 		ldr	ip, [r6, #124]
 315              		.loc 1 84 0
 316 0330 807087E2 		add	r7, r7, #128
 317              	.LVL19:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 318              		.loc 1 82 0
 319 0334 0410A0E1 		mov	r1, r4
 320 0338 0730A0E1 		mov	r3, r7
 321 033c 0500A0E1 		mov	r0, r5
 322 0340 0CC08DE5 		str	ip, [sp, #12]
 323 0344 FEFFFFEB 		bl	CyU3PDebugPrint
 324 0348 780097E5 		ldr	r0, [r7, #120]
 325 034c 4020D7E5 		ldrb	r2, [r7, #64]	@ zero_extendqisi2
 326 0350 00008DE5 		str	r0, [sp, #0]
 327 0354 741097E5 		ldr	r1, [r7, #116]
 328 0358 0E30A0E3 		mov	r3, #14
 329 035c 0A008DE9 		stmib	sp, {r1, r3}	@ phole stm
 330 0360 7CC097E5 		ldr	ip, [r7, #124]
 331              		.loc 1 84 0
 332 0364 806086E2 		add	r6, r6, #128
 333              	.LVL20:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 334              		.loc 1 82 0
 335 0368 0410A0E1 		mov	r1, r4
 336 036c 0630A0E1 		mov	r3, r6
 337 0370 0500A0E1 		mov	r0, r5
 338 0374 0CC08DE5 		str	ip, [sp, #12]
 339 0378 FEFFFFEB 		bl	CyU3PDebugPrint
 340              		.loc 1 84 0
 341 037c 803087E2 		add	r3, r7, #128
 342              	.LVL21:
  82:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r
 343              		.loc 1 82 0
 344 0380 38C093E5 		ldr	ip, [r3, #56]
 345 0384 8020D7E5 		ldrb	r2, [r7, #128]	@ zero_extendqisi2
 346 0388 00C08DE5 		str	ip, [sp, #0]
 347 038c 340093E5 		ldr	r0, [r3, #52]
 348 0390 0F10A0E3 		mov	r1, #15
 349 0394 03008DE9 		stmib	sp, {r0, r1}	@ phole stm
 350 0398 3CC093E5 		ldr	ip, [r3, #60]
 351 039c 0500A0E1 		mov	r0, r5
 352 03a0 0410A0E1 		mov	r1, r4
 353 03a4 0CC08DE5 		str	ip, [sp, #12]
 354 03a8 FEFFFFEB 		bl	CyU3PDebugPrint
 355              	.LVL22:
  85:../cmdqu.c    **** 	}
  86:../cmdqu.c    **** 
  87:../cmdqu.c    **** 	return;
  88:../cmdqu.c    **** }
 356              		.loc 1 88 0
 357 03ac 14D08DE2 		add	sp, sp, #20
 358 03b0 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 359              	.L6:
 360              		.align	2
 361              	.L5:
 362 03b4 18000000 		.word	.LC1
 363 03b8 2C000000 		.word	.LC2
 364 03bc 84000000 		.word	.LC3
 365              		.cfi_endproc
 366              	.LFE1:
 368              		.align	2
 369              		.global	cmdbufCreate
 371              	cmdbufCreate:
 372              	.LFB2:
  89:../cmdqu.c    **** 
  90:../cmdqu.c    **** /***** create a command buffer. *******/
  91:../cmdqu.c    **** VdRingBuf  cmdbufCreate(uint16_t size, char * name, uint8_t id, CyU3PMutex *muxPtr){
 373              		.loc 1 91 0
 374              		.cfi_startproc
 375              		@ args = 4, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              	.LVL23:
 378 03c0 F0472DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 379              	.LCFI2:
 380              		.cfi_def_cfa_offset 32
 381              		.loc 1 91 0
 382 03c4 20909DE5 		ldr	r9, [sp, #32]
 383              		.cfi_offset 14, -4
 384              		.cfi_offset 10, -8
 385              		.cfi_offset 9, -12
 386              		.cfi_offset 8, -16
 387              		.cfi_offset 7, -20
 388              		.cfi_offset 6, -24
 389              		.cfi_offset 5, -28
 390              		.cfi_offset 4, -32
  92:../cmdqu.c    **** 	VdRingBuf cmdque;
  93:../cmdqu.c    **** 
  94:../cmdqu.c    **** 	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(size));    //allocate memory for command queue w
 391              		.loc 1 94 0
 392 03c8 0173A0E1 		mov	r7, r1, asl #6
  91:../cmdqu.c    **** VdRingBuf  cmdbufCreate(uint16_t size, char * name, uint8_t id, CyU3PMutex *muxPtr){
 393              		.loc 1 91 0
 394 03cc 0040A0E1 		mov	r4, r0
 395              		.loc 1 94 0
 396 03d0 0700A0E1 		mov	r0, r7
  91:../cmdqu.c    **** VdRingBuf  cmdbufCreate(uint16_t size, char * name, uint8_t id, CyU3PMutex *muxPtr){
 397              		.loc 1 91 0
 398 03d4 0150A0E1 		mov	r5, r1
 399 03d8 02A0A0E1 		mov	sl, r2
 400 03dc 0380A0E1 		mov	r8, r3
 401              		.loc 1 94 0
 402 03e0 FEFFFFEB 		bl	CyU3PMemAlloc
 403              	.LVL24:
  95:../cmdqu.c    **** 	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
  96:../cmdqu.c    **** 	cmdque.bufferName = name; //"I2C command queue";
  97:../cmdqu.c    **** 	cmdque.ringbufID = id; //CMDQU0;
  98:../cmdqu.c    **** 	cmdque.numUnit = size;
  99:../cmdqu.c    **** 	cmdque.endAdd = cmdque.startAdd + size;  //the read pointer is initialed one command unit behind o
 100:../cmdqu.c    **** 	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
 101:../cmdqu.c    **** 	cmdque.ringMux = muxPtr;
 102:../cmdqu.c    **** 	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
 404              		.loc 1 102 0
 405 03e4 0010A0E3 		mov	r1, #0
 406 03e8 0120A0E1 		mov	r2, r1
 407 03ec 3830A0E3 		mov	r3, #56
  94:../cmdqu.c    **** 	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(size));    //allocate memory for command queue w
 408              		.loc 1 94 0
 409 03f0 0060A0E1 		mov	r6, r0
 410              		.loc 1 102 0
 411 03f4 0900A0E1 		mov	r0, r9
 412 03f8 FEFFFFEB 		bl	_txe_mutex_create
  99:../cmdqu.c    **** 	cmdque.endAdd = cmdque.startAdd + size;  //the read pointer is initialed one command unit behind o
 413              		.loc 1 99 0
 414 03fc 077086E0 		add	r7, r6, r7
 415              		.loc 1 102 0
 416 0400 0030A0E3 		mov	r3, #0
 417 0404 0080C4E5 		strb	r8, [r4, #0]
 418 0408 04A084E5 		str	sl, [r4, #4]
 419 040c 086084E5 		str	r6, [r4, #8]
 420 0410 0C7084E5 		str	r7, [r4, #12]
 421 0414 B851C4E1 		strh	r5, [r4, #24]	@ movhi
 422 0418 1A30C4E5 		strb	r3, [r4, #26]
 423 041c 1C9084E5 		str	r9, [r4, #28]
 103:../cmdqu.c    **** 	return cmdque;
 104:../cmdqu.c    **** }
 424              		.loc 1 104 0
 425 0420 0400A0E1 		mov	r0, r4
 426 0424 F087BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 427              		.cfi_endproc
 428              	.LFE2:
 430              		.align	2
 431              		.global	cmdquInit
 433              	cmdquInit:
 434              	.LFB3:
 105:../cmdqu.c    **** 
 106:../cmdqu.c    **** /**** initialize the command queue  *****/
 107:../cmdqu.c    **** void  cmdquInit(VdRingBuf *cmdqu){
 435              		.loc 1 107 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL25:
 440 0428 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 441              	.LCFI3:
 442              		.cfi_def_cfa_offset 20
 108:../cmdqu.c    **** 	uint16_t cmdQuIdx = 0;
 109:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
 110:../cmdqu.c    **** 
 111:../cmdqu.c    **** 	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
 443              		.loc 1 111 0
 444 042c 0C3090E5 		ldr	r3, [r0, #12]
 445 0430 084090E5 		ldr	r4, [r0, #8]
 446              		.cfi_offset 14, -4
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 6, -12
 449              		.cfi_offset 5, -16
 450              		.cfi_offset 4, -20
 451              	.LVL26:
 107:../cmdqu.c    **** void  cmdquInit(VdRingBuf *cmdqu){
 452              		.loc 1 107 0
 453 0434 14D04DE2 		sub	sp, sp, #20
 454              	.LCFI4:
 455              		.cfi_def_cfa_offset 40
 456              		.loc 1 111 0
 457 0438 030054E1 		cmp	r4, r3
 107:../cmdqu.c    **** void  cmdquInit(VdRingBuf *cmdqu){
 458              		.loc 1 107 0
 459 043c 0070A0E1 		mov	r7, r0
 460              		.loc 1 111 0
 461 0440 1C00008A 		bhi	.L9
 462 0444 0050A0E3 		mov	r5, #0
 112:../cmdqu.c    **** 		lcCmdDes->CmdID = cmdQuIdx;
 113:../cmdqu.c    **** 		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
 463              		.loc 1 113 0
 464 0448 0560A0E1 		mov	r6, r5
 465              	.LVL27:
 466              	.L10:
 114:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 467              		.loc 1 114 0
 468 044c 01E085E2 		add	lr, r5, #1
 111:../cmdqu.c    **** 	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
 469              		.loc 1 111 0
 470 0450 FF2005E2 		and	r2, r5, #255
 471              		.loc 1 114 0
 472 0454 0E58A0E1 		mov	r5, lr, asl #16
 112:../cmdqu.c    **** 		lcCmdDes->CmdID = cmdQuIdx;
 473              		.loc 1 112 0
 474 0458 0020C4E5 		strb	r2, [r4, #0]
 475              		.loc 1 114 0
 476 045c 2558A0E1 		mov	r5, r5, lsr #16
 477 0460 083097E5 		ldr	r3, [r7, #8]
 115:../cmdqu.c    **** 		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
 478              		.loc 1 115 0
 479 0464 02C045E2 		sub	ip, r5, #2
 480 0468 3F100CE2 		and	r1, ip, #63
 114:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 481              		.loc 1 114 0
 482 046c 3F0005E2 		and	r0, r5, #63
 483 0470 00C383E0 		add	ip, r3, r0, asl #6
 484              		.loc 1 115 0
 485 0474 01E383E0 		add	lr, r3, r1, asl #6
 113:../cmdqu.c    **** 		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
 486              		.loc 1 113 0
 487 0478 3C6084E5 		str	r6, [r4, #60]
 114:../cmdqu.c    **** 		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
 488              		.loc 1 114 0
 489 047c 34C084E5 		str	ip, [r4, #52]
 490              		.loc 1 115 0
 491 0480 38E084E5 		str	lr, [r4, #56]
 116:../cmdqu.c    **** 		if(1/*!cmdQuIdx debug*/) 		CyU3PDebugPrint (4, "Command Queue init 0 cmdID %d CmdDes 0x%x previou
 492              		.loc 1 116 0
 493 0484 0430A0E1 		mov	r3, r4
 494 0488 0400A0E3 		mov	r0, #4
 495 048c 50109FE5 		ldr	r1, .L13
 496 0490 00E08DE5 		str	lr, [sp, #0]
 497 0494 04C08DE5 		str	ip, [sp, #4]
 498 0498 08608DE5 		str	r6, [sp, #8]
 499 049c 0C608DE5 		str	r6, [sp, #12]
 500 04a0 FEFFFFEB 		bl	CyU3PDebugPrint
 501              	.LVL28:
 111:../cmdqu.c    **** 	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
 502              		.loc 1 111 0
 503 04a4 0C0097E5 		ldr	r0, [r7, #12]
 504 04a8 404084E2 		add	r4, r4, #64
 505              	.LVL29:
 506 04ac 040050E1 		cmp	r0, r4
 507 04b0 E5FFFF2A 		bcs	.L10
 508 04b4 084097E5 		ldr	r4, [r7, #8]
 509              	.LVL30:
 510              	.L9:
 117:../cmdqu.c    **** 				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, 0, lcCmdDes->cmdFlag
 118:../cmdqu.c    **** 		cmdQuIdx ++;
 119:../cmdqu.c    **** 	}
 120:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 121:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(11) readptr 0x%x next 0x%x previous 0x%x local 0x%x\r\n",
 122:../cmdqu.c    **** 				cmdqu->readPtr, cmdqu->readPtr->cmdDesNext, cmdqu->readPtr->cmdDesPrevious, lcCmdDes);
 123:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
 124:../cmdqu.c    **** 			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
 125:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
 126:../cmdqu.c    **** 			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
 127:../cmdqu.c    **** #endif
 128:../cmdqu.c    **** 	cmdqu->readPtr = cmdqu->startAdd;
 511              		.loc 1 128 0
 512 04b8 104087E5 		str	r4, [r7, #16]
 129:../cmdqu.c    **** 	CyU3PThreadSleep(10);
 513              		.loc 1 129 0
 514 04bc 0A00A0E3 		mov	r0, #10
 515 04c0 FEFFFFEB 		bl	_tx_thread_sleep
 130:../cmdqu.c    **** 	cmdqu->writePtr = cmdqu->readPtr;
 516              		.loc 1 130 0
 517 04c4 101097E5 		ldr	r1, [r7, #16]
 131:../cmdqu.c    **** 	CyU3PThreadSleep(10);
 518              		.loc 1 131 0
 519 04c8 0A00A0E3 		mov	r0, #10
 130:../cmdqu.c    **** 	cmdqu->writePtr = cmdqu->readPtr;
 520              		.loc 1 130 0
 521 04cc 141087E5 		str	r1, [r7, #20]
 522              		.loc 1 131 0
 523 04d0 FEFFFFEB 		bl	_tx_thread_sleep
 132:../cmdqu.c    **** 	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
 524              		.loc 1 132 0
 525 04d4 0120A0E3 		mov	r2, #1
 526 04d8 1A20C7E5 		strb	r2, [r7, #26]
 133:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 134:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(12) readptr 0x%x next 0x%x previous 0x%x local 0x%x\r\n",
 135:../cmdqu.c    **** 				cmdqu->readPtr, cmdqu->readPtr->cmdDesNext, cmdqu->readPtr->cmdDesPrevious, lcCmdDes);
 136:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(12) writeptr 0x%x next 0x%x previous 0x%x\r\n",
 137:../cmdqu.c    **** 			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
 138:../cmdqu.c    **** 	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
 139:../cmdqu.c    **** 			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
 140:../cmdqu.c    **** #endif
 141:../cmdqu.c    **** 	return;
 142:../cmdqu.c    **** }
 527              		.loc 1 142 0
 528 04dc 14D08DE2 		add	sp, sp, #20
 529 04e0 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 530              	.L14:
 531              		.align	2
 532              	.L13:
 533 04e4 D4000000 		.word	.LC4
 534              		.cfi_endproc
 535              	.LFE3:
 537              		.align	2
 538              		.global	cmdbufDestroy
 540              	cmdbufDestroy:
 541              	.LFB4:
 143:../cmdqu.c    **** 
 144:../cmdqu.c    **** CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
 542              		.loc 1 144 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547              	.LVL31:
 145:../cmdqu.c    **** 	;  //na
 146:../cmdqu.c    **** 	return CyTrue;
 147:../cmdqu.c    **** }
 548              		.loc 1 147 0
 549 04e8 0100A0E3 		mov	r0, #1
 550              	.LVL32:
 551 04ec 1EFF2FE1 		bx	lr
 552              		.cfi_endproc
 553              	.LFE4:
 555              		.align	2
 556              		.global	cmdSet
 558              	cmdSet:
 559              	.LFB5:
 148:../cmdqu.c    **** 
 149:../cmdqu.c    **** /******* set a command into command queue based on the command ID *******/
 150:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 560              		.loc 1 150 0
 561              		.cfi_startproc
 562              		@ args = 8, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              	.LVL33:
 151:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
 152:../cmdqu.c    **** 
 153:../cmdqu.c    **** 	lcCmdDes = cmdqu->startAdd; //get a command descriptor
 565              		.loc 1 153 0
 566 04f0 080090E5 		ldr	r0, [r0, #8]
 567              	.LVL34:
 150:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 568              		.loc 1 150 0
 569 04f4 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 570              	.LCFI5:
 571              		.cfi_def_cfa_offset 20
 154:../cmdqu.c    **** 	lcCmdDes = lcCmdDes + cmdID;
 572              		.loc 1 154 0
 573 04f8 01C380E0 		add	ip, r0, r1, asl #6
 574              	.LVL35:
 155:../cmdqu.c    **** 	if(lcCmdDes->cmdFlag != desusing){
 575              		.loc 1 155 0
 576 04fc 3C409CE5 		ldr	r4, [ip, #60]
 577              		.cfi_offset 14, -4
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 6, -12
 580              		.cfi_offset 5, -16
 581              		.cfi_offset 4, -20
 150:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 582              		.loc 1 150 0
 583 0500 14D04DE2 		sub	sp, sp, #20
 584              	.LCFI6:
 585              		.cfi_def_cfa_offset 40
 586              		.loc 1 155 0
 587 0504 0F0054E3 		cmp	r4, #15
 150:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uin
 588              		.loc 1 150 0
 589 0508 2850DDE5 		ldrb	r5, [sp, #40]	@ zero_extendqisi2
 590 050c 2C40DDE5 		ldrb	r4, [sp, #44]	@ zero_extendqisi2
 591              		.loc 1 155 0
 592 0510 1600000A 		beq	.L17
 156:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
 593              		.loc 1 156 0
 594 0514 847084E0 		add	r7, r4, r4, asl #1
 595 0518 87708CE0 		add	r7, ip, r7, asl #1
 596 051c 0530C7E5 		strb	r3, [r7, #5]
 157:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
 158:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
 159:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
 597              		.loc 1 159 0
 598 0520 54309FE5 		ldr	r3, .L18
 599              	.LVL36:
 157:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
 600              		.loc 1 157 0
 601 0524 0420C7E5 		strb	r2, [r7, #4]
 158:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
 602              		.loc 1 158 0
 603 0528 0650C7E5 		strb	r5, [r7, #6]
 160:../cmdqu.c    **** 		lcCmdDes->NumPara = dataIdx;
 161:../cmdqu.c    **** 		lcCmdDes->curNum = 0;
 162:../cmdqu.c    **** 		lcCmdDes->cmdFlag = desReady;
 163:../cmdqu.c    **** //#ifdef USB_DEBUG_PRINT
 164:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 
 604              		.loc 1 164 0
 605 052c 0123D0E7 		ldrb	r2, [r0, r1, asl #6]	@ zero_extendqisi2
 606              	.LVL37:
 159:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
 607              		.loc 1 159 0
 608 0530 8100A0E1 		mov	r0, r1, asl #1
 609 0534 B01093E1 		ldrh	r1, [r3, r0]
 610              	.LVL38:
 611              		.loc 1 164 0
 612 0538 34609CE5 		ldr	r6, [ip, #52]
 162:../cmdqu.c    **** 		lcCmdDes->cmdFlag = desReady;
 613              		.loc 1 162 0
 614 053c FFE0A0E3 		mov	lr, #255
 161:../cmdqu.c    **** 		lcCmdDes->curNum = 0;
 615              		.loc 1 161 0
 616 0540 0030A0E3 		mov	r3, #0
 159:../cmdqu.c    **** 		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
 617              		.loc 1 159 0
 618 0544 B810C7E1 		strh	r1, [r7, #8]	@ movhi
 161:../cmdqu.c    **** 		lcCmdDes->curNum = 0;
 619              		.loc 1 161 0
 620 0548 0130CCE5 		strb	r3, [ip, #1]
 160:../cmdqu.c    **** 		lcCmdDes->NumPara = dataIdx;
 621              		.loc 1 160 0
 622 054c 0240CCE5 		strb	r4, [ip, #2]
 162:../cmdqu.c    **** 		lcCmdDes->cmdFlag = desReady;
 623              		.loc 1 162 0
 624 0550 3CE08CE5 		str	lr, [ip, #60]
 625              		.loc 1 164 0
 626 0554 0400A0E3 		mov	r0, #4
 627 0558 20109FE5 		ldr	r1, .L18+4
 628 055c 0C30A0E1 		mov	r3, ip
 629 0560 40408DE8 		stmia	sp, {r6, lr}	@ phole stm
 630 0564 08408DE5 		str	r4, [sp, #8]
 631 0568 0C508DE5 		str	r5, [sp, #12]
 632 056c FEFFFFEB 		bl	CyU3PDebugPrint
 633              	.LVL39:
 634              	.L17:
 165:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesNext, lcCmdDes->cmdFlag, dataIdx, Data);
 166:../cmdqu.c    **** //#endif
 167:../cmdqu.c    **** 	}else{
 168:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 169:../cmdqu.c    **** 		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
 170:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes);
 171:../cmdqu.c    **** #endif
 172:../cmdqu.c    **** 	}
 173:../cmdqu.c    **** 	return CyTrue;
 174:../cmdqu.c    **** }
 635              		.loc 1 174 0
 636 0570 0100A0E3 		mov	r0, #1
 637 0574 14D08DE2 		add	sp, sp, #20
 638 0578 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 639              	.L19:
 640              		.align	2
 641              	.L18:
 642 057c 00000000 		.word	.LANCHOR0
 643 0580 2C010000 		.word	.LC5
 644              		.cfi_endproc
 645              	.LFE5:
 647              		.align	2
 648              		.global	statGet
 650              	statGet:
 651              	.LFB6:
 175:../cmdqu.c    **** 
 176:../cmdqu.c    **** #if 0 // alternate putting queue approach
 177:../cmdqu.c    **** /******* set a command into command queue based on write pointer *******/
 178:../cmdqu.c    **** CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data){
 179:../cmdqu.c    **** 	VdcmdDes *lcCmdDes;
 180:../cmdqu.c    **** 
 181:../cmdqu.c    **** 	lcCmdDes = cmdqu->writePtr; //get a command descriptor
 182:../cmdqu.c    **** 	CyU3PDebugPrint (4, "Command Queue init 0 cmdID %d CmdDes 0x%x previous 0x%x next 0x%x qunext 0x%x
 183:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdqu->writePtr->cm
 184:../cmdqu.c    **** 	//cmdquTest(cmdqu, 0);
 185:../cmdqu.c    **** 	if(lcCmdDes == cmdqu->readPtr){//at first state.
 186:../cmdqu.c    **** 		if(lcCmdDes->cmdFlag == deswait){//the writing available
 187:../cmdqu.c    **** 			lcCmdDes->DevAdd = DevAdd;
 188:../cmdqu.c    **** 			lcCmdDes->RegAdd = RegAdd;
 189:../cmdqu.c    **** 			lcCmdDes->Data[0] = Data;
 190:../cmdqu.c    **** 			lcCmdDes->curNum = 0;
 191:../cmdqu.c    **** 			lcCmdDes->cmdFlag = desReady;
 192:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 193:../cmdqu.c    **** 			CyU3PDebugPrint (4, "CmdQu first state cmdID %d CmdDes 0x%x reader 0x%x next 0x%x\r\n",
 194:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes, cmdqu->readPtr, lcCmdDes->cmdDesNext);
 195:../cmdqu.c    **** #endif
 196:../cmdqu.c    **** 			cmdqu->writePtr = lcCmdDes->cmdDesNext;
 197:../cmdqu.c    **** 
 198:../cmdqu.c    **** 		}else{ //queue fullness
 199:../cmdqu.c    **** 			CyU3PDebugPrint (4, "CmdQu fullness cmdID %d CmdDes 0x%x reader 0x%x\r\n",
 200:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes, cmdqu->readPtr);
 201:../cmdqu.c    **** 			return 0;
 202:../cmdqu.c    **** 		}
 203:../cmdqu.c    **** 	}else{ //in normal state
 204:../cmdqu.c    **** 		//the command descriptor is available.
 205:../cmdqu.c    **** 		if(lcCmdDes->cmdFlag == dewait){
 206:../cmdqu.c    **** 			lcCmdDes->DevAdd = DevAdd;
 207:../cmdqu.c    **** 			lcCmdDes->RegAdd = RegAdd;
 208:../cmdqu.c    **** 			lcCmdDes->Data[0] = Data;
 209:../cmdqu.c    **** 			lcCmdDes->curNum = 0;
 210:../cmdqu.c    **** 			lcCmdDes->cmdFlag = desReady;
 211:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 212:../cmdqu.c    **** 			CyU3PDebugPrint (4, "Command descriptor setting cmdID %d nextID %d data %d cmdAdd 0x%x flag %d %
 213:../cmdqu.c    **** 					lcCmdDes->CmdID, lcCmdDes->cmdDesNext->CmdID, lcCmdDes->Data[0], lcCmdDes, cmdqu->writePtr->cm
 214:../cmdqu.c    **** #endif
 215:../cmdqu.c    **** 			cmdqu->writePtr = lcCmdDes->cmdDesNext; // update the command queue writer pointer.
 216:../cmdqu.c    **** 		}else{//reset writer
 217:../cmdqu.c    **** 			while(lcCmdDes != cmdqu->readPtr){
 218:../cmdqu.c    **** 				lcCmdDes = lcCmdDes->cmdDesNext; //update cmdDes.
 219:../cmdqu.c    **** 				if(lcCmdDes->cmdFlag == dewait){
 220:../cmdqu.c    **** 					lcCmdDes->DevAdd = DevAdd;
 221:../cmdqu.c    **** 					lcCmdDes->RegAdd = RegAdd;
 222:../cmdqu.c    **** 					lcCmdDes->Data[0] = Data;
 223:../cmdqu.c    **** 					lcCmdDes->curNum = 0;
 224:../cmdqu.c    **** 					lcCmdDes->cmdFlag = desReady;
 225:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 226:../cmdqu.c    **** 					CyU3PDebugPrint (4, "Command descriptor setting cmdID %d nextID %d data %d cmdAdd 0x%x flag %d
 227:../cmdqu.c    **** 							lcCmdDes->CmdID, lcCmdDes->cmdDesNext->CmdID, lcCmdDes->Data[0], lcCmdDes, cmdqu->writePtr->
 228:../cmdqu.c    **** #endif
 229:../cmdqu.c    **** 					break;
 230:../cmdqu.c    **** 				}
 231:../cmdqu.c    **** 			}
 232:../cmdqu.c    **** 			if(lcCmdDes != cmdqu->readPtr)
 233:../cmdqu.c    **** 				cmdqu->writePtr = lcCmdDes->cmdDesNext; //update writer.
 234:../cmdqu.c    **** 			else cmdqu->writePtr = cmdqu->readPtr; //reset writer.
 235:../cmdqu.c    **** 		}
 236:../cmdqu.c    **** 	}
 237:../cmdqu.c    **** 
 238:../cmdqu.c    **** 	return CyTrue;
 239:../cmdqu.c    **** }
 240:../cmdqu.c    **** #endif
 241:../cmdqu.c    **** 
 242:../cmdqu.c    **** /******* get a state from camera register. *******
 243:../cmdqu.c    ****  * it might be unused, if state request performs immediately
 244:../cmdqu.c    ****  *****/
 245:../cmdqu.c    **** void statGet(VdRingBuf *statqu, uint8_t statID){
 652              		.loc 1 245 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL40:
 246:../cmdqu.c    **** #if 1 // copy
 247:../cmdqu.c    **** 	VdstateDes *lcStatDes;
 248:../cmdqu.c    **** 	uint8_t Data0, Data1;
 249:../cmdqu.c    **** 	uint8_t sendData[2];
 250:../cmdqu.c    **** 
 251:../cmdqu.c    **** 	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any avai
 658              		.loc 1 251 0
 659 0584 083090E5 		ldr	r3, [r0, #8]
 660 0588 013383E0 		add	r3, r3, r1, asl #6
 661              	.LVL41:
 252:../cmdqu.c    **** 
 253:../cmdqu.c    **** 	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
 662              		.loc 1 253 0
 663 058c 3C2093E5 		ldr	r2, [r3, #60]
 664 0590 0F0052E3 		cmp	r2, #15
 665 0594 1EFF2F11 		bxne	lr
 254:../cmdqu.c    **** 		switch(statID){
 666              		.loc 1 254 0
 667 0598 010051E3 		cmp	r1, #1
 668 059c 0E00000A 		beq	.L23
 669 05a0 050051E3 		cmp	r1, #5
 670 05a4 0700000A 		beq	.L29
 255:../cmdqu.c    **** 			case BrgtCtlID1:
 256:../cmdqu.c    **** 					Data0 = lcStatDes->staPar->Data;
 257:../cmdqu.c    **** 					Data1 = ((lcStatDes->staPar)+1)->Data;
 258:../cmdqu.c    **** 					//CtrlParArry[CtrlID][13] = Data0;
 259:../cmdqu.c    **** 					//CtrlParArry[CtrlID][14] = Data1;
 260:../cmdqu.c    **** 					if (Data1&0x2){ //check the sign bit (bit1)
 261:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 262:../cmdqu.c    **** 					}else{
 263:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 264:../cmdqu.c    **** 					}
 265:../cmdqu.c    **** 					glEp0Buffer[0] = Data1;
 266:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 267:../cmdqu.c    **** 					break;
 268:../cmdqu.c    **** 				case HueCtlID5:
 269:../cmdqu.c    **** 					Data0 = lcStatDes->staPar->Data;
 270:../cmdqu.c    **** 					glEp0Buffer[0] = Data0 + GREEN_BASE;
 271:../cmdqu.c    **** 					sendData[1] = 0;
 272:../cmdqu.c    **** 					break;
 273:../cmdqu.c    **** 				//case SaturCtlID6:
 274:../cmdqu.c    **** 				//case WBTLevCtlID10:
 275:../cmdqu.c    **** 				default:
 276:../cmdqu.c    **** 					glEp0Buffer[0] = lcStatDes->staPar->Data;
 671              		.loc 1 276 0
 672 05a8 68C09FE5 		ldr	ip, .L30
 673 05ac 0600D3E5 		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 674              	.LVL42:
 277:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 675              		.loc 1 277 0
 676 05b0 0020A0E3 		mov	r2, #0
 276:../cmdqu.c    **** 					glEp0Buffer[0] = lcStatDes->staPar->Data;
 677              		.loc 1 276 0
 678 05b4 0000CCE5 		strb	r0, [ip, #0]
 679              		.loc 1 277 0
 680 05b8 0120CCE5 		strb	r2, [ip, #1]
 681              	.LVL43:
 682              	.L27:
 278:../cmdqu.c    **** 					break;
 279:../cmdqu.c    **** 			 }
 280:../cmdqu.c    **** 			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
 683              		.loc 1 280 0
 684 05bc 54109FE5 		ldr	r1, .L30
 685 05c0 0200A0E3 		mov	r0, #2
 281:../cmdqu.c    **** #ifdef USB_DEBUG_PRINT
 282:../cmdqu.c    **** 			  CyU3PDebugPrint (4, "Command Queue init 0 cmdID %d CmdDes 0x%x previous 0x%x next 0x%x qunext 
 283:../cmdqu.c    **** 					  lcStatDes->StatID, lcStatDes, lcStatDes->staDesPrevious, lcStatDes->staDesNext, statqu->writ
 284:../cmdqu.c    **** #endif
 285:../cmdqu.c    **** 		}
 286:../cmdqu.c    **** 		lcStatDes++;
 287:../cmdqu.c    **** #endif
 288:../cmdqu.c    **** 	return;
 289:../cmdqu.c    **** }
 686              		.loc 1 289 0
 280:../cmdqu.c    **** 			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
 687              		.loc 1 280 0
 688 05c4 FEFFFFEA 		b	CyU3PUsbSendEP0Data
 689              	.LVL44:
 690              	.L29:
 270:../cmdqu.c    **** 					glEp0Buffer[0] = Data0 + GREEN_BASE;
 691              		.loc 1 270 0
 692 05c8 0610D3E5 		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 693              	.LVL45:
 694 05cc 44309FE5 		ldr	r3, .L30
 695              	.LVL46:
 696 05d0 800041E2 		sub	r0, r1, #128
 697              	.LVL47:
 698 05d4 0000C3E5 		strb	r0, [r3, #0]
 272:../cmdqu.c    **** 					break;
 699              		.loc 1 272 0
 700 05d8 F7FFFFEA 		b	.L27
 701              	.LVL48:
 702              	.L23:
 260:../cmdqu.c    **** 					if (Data1&0x2){ //check the sign bit (bit1)
 703              		.loc 1 260 0
 704 05dc 0CC0D3E5 		ldrb	ip, [r3, #12]	@ zero_extendqisi2
 256:../cmdqu.c    **** 					Data0 = lcStatDes->staPar->Data;
 705              		.loc 1 256 0
 706 05e0 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 707              	.LVL49:
 260:../cmdqu.c    **** 					if (Data1&0x2){ //check the sign bit (bit1)
 708              		.loc 1 260 0
 709 05e4 02001CE3 		tst	ip, #2
 263:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 710              		.loc 1 263 0
 711 05e8 2221A001 		moveq	r2, r2, lsr #2
 712              	.LVL50:
 261:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 713              		.loc 1 261 0
 714 05ec 0CC3A011 		movne	ip, ip, asl #6
 263:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 715              		.loc 1 263 0
 716 05f0 822CE001 		mvneq	r2, r2, asl #25
 265:../cmdqu.c    **** 					glEp0Buffer[0] = Data1;
 717              		.loc 1 265 0
 718 05f4 1C109FE5 		ldr	r1, .L30
 719              	.LVL51:
 261:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 720              		.loc 1 261 0
 721 05f8 40C00C12 		andne	ip, ip, #64
 263:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 722              		.loc 1 263 0
 723 05fc A22CE001 		mvneq	r2, r2, lsr #25
 261:../cmdqu.c    **** 						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
 724              		.loc 1 261 0
 725 0600 22C18C11 		orrne	ip, ip, r2, lsr #2
 726              	.LVL52:
 263:../cmdqu.c    **** 						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
 727              		.loc 1 263 0
 728 0604 0CC38201 		orreq	ip, r2, ip, asl #6
 729              	.LVL53:
 266:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 730              		.loc 1 266 0
 731 0608 0000A0E3 		mov	r0, #0
 732              	.LVL54:
 265:../cmdqu.c    **** 					glEp0Buffer[0] = Data1;
 733              		.loc 1 265 0
 734 060c 00C0C1E5 		strb	ip, [r1, #0]
 266:../cmdqu.c    **** 					glEp0Buffer[1] = 0;
 735              		.loc 1 266 0
 736 0610 0100C1E5 		strb	r0, [r1, #1]
 267:../cmdqu.c    **** 					break;
 737              		.loc 1 267 0
 738 0614 E8FFFFEA 		b	.L27
 739              	.L31:
 740              		.align	2
 741              	.L30:
 742 0618 00000000 		.word	.LANCHOR1
 743              		.cfi_endproc
 744              	.LFE6:
 746              		.align	2
 747              		.global	cmdFind
 749              	cmdFind:
 750              	.LFB7:
 290:../cmdqu.c    **** 
 291:../cmdqu.c    **** /******* find a command form command queue ********/
 292:../cmdqu.c    **** VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
 751              		.loc 1 292 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756              	.LVL55:
 293:../cmdqu.c    **** 	VdcmdDes *cmd = cmdqu->startAdd;
 294:../cmdqu.c    **** 	;  //na
 295:../cmdqu.c    **** 	return cmd;
 296:../cmdqu.c    **** }
 757              		.loc 1 296 0
 758 061c 080090E5 		ldr	r0, [r0, #8]
 759              	.LVL56:
 760 0620 1EFF2FE1 		bx	lr
 761              		.cfi_endproc
 762              	.LFE7:
 764              		.section	.rodata
 765              		.align	2
 766              		.set	.LANCHOR0,. + 0
 769              	DelayArray:
 770 0000 BC02     		.short	700
 771 0002 0401     		.short	260
 772 0004 0401     		.short	260
 773 0006 0401     		.short	260
 774 0008 BC02     		.short	700
 775 000a 0401     		.short	260
 776 000c 0401     		.short	260
 777 000e 0401     		.short	260
 778 0010 0401     		.short	260
 779 0012 0401     		.short	260
 780 0014 0401     		.short	260
 781 0016 0401     		.short	260
 782 0018 0401     		.short	260
 783 001a 0401     		.short	260
 784 001c 0401     		.short	260
 785 001e 0401     		.short	260
 786 0020 BC02     		.short	700
 787 0022 BC02     		.short	700
 788 0024 9001     		.short	400
 789 0026 2C01     		.short	300
 790 0028 2C01     		.short	300
 791 002a 2C01     		.short	300
 792 002c 2C01     		.short	300
 793 002e 0401     		.short	260
 794 0030 0401     		.short	260
 795 0032 BC02     		.short	700
 796 0034 BC02     		.short	700
 797 0036 0401     		.short	260
 798 0038 BC02     		.short	700
 799 003a 0401     		.short	260
 800 003c F401     		.short	500
 801 003e 0401     		.short	260
 802 0040 0401     		.short	260
 803 0042 0401     		.short	260
 804 0044 9001     		.short	400
 805 0046 9001     		.short	400
 806 0048 9001     		.short	400
 807 004a 0401     		.short	260
 808 004c 0401     		.short	260
 809 004e 0401     		.short	260
 810 0050 0401     		.short	260
 811 0052 0401     		.short	260
 812 0054 0401     		.short	260
 813 0056 0401     		.short	260
 814 0058 0000     		.short	0
 815 005a 00000000 		.space	38
 815      00000000 
 815      00000000 
 815      00000000 
 815      00000000 
 816              		.section	.rodata.str1.4,"aMS",%progbits,1
 817              		.align	2
 818              	.LC0:
 819 0000 54686520 		.ascii	"The test cmdqu %d \015\012\000"
 819      74657374 
 819      20636D64 
 819      71752025 
 819      64200D0A 
 820 0015 000000   		.space	3
 821              	.LC1:
 822 0018 51756575 		.ascii	"Queue %s state %d\015\012\000"
 822      65202573 
 822      20737461 
 822      74652025 
 822      640D0A00 
 823              	.LC2:
 824 002c 51756575 		.ascii	"Queue check queueID %d startAdd 0x%x endAdd 0x%x wr"
 824      65206368 
 824      65636B20 
 824      71756575 
 824      65494420 
 825 005f 69746520 		.ascii	"ite 0x%x read 0x%x queueFlag %d\015\012\000"
 825      30782578 
 825      20726561 
 825      64203078 
 825      25782071 
 826 0081 000000   		.space	3
 827              	.LC3:
 828 0084 51756575 		.ascii	"Queue check cmdID %d CmdDes 0x%x previous 0x%x next"
 828      65206368 
 828      65636B20 
 828      636D6449 
 828      44202564 
 829 00b7 20307825 		.ascii	" 0x%x Idx %d cmdflag %d\015\012\000"
 829      78204964 
 829      78202564 
 829      20636D64 
 829      666C6167 
 830 00d1 000000   		.space	3
 831              	.LC4:
 832 00d4 436F6D6D 		.ascii	"Command Queue init 0 cmdID %d CmdDes 0x%x previous "
 832      616E6420 
 832      51756575 
 832      6520696E 
 832      69742030 
 833 0107 30782578 		.ascii	"0x%x next 0x%x Idx %d cmdflag %d\015\012\000"
 833      206E6578 
 833      74203078 
 833      25782049 
 833      64782025 
 834 012a 0000     		.space	2
 835              	.LC5:
 836 012c 436F6D6D 		.ascii	"Command Queue set cmdID %d CmdDes 0x%x next 0x%x cm"
 836      616E6420 
 836      51756575 
 836      65207365 
 836      7420636D 
 837 015f 64666C61 		.ascii	"dflag %d dataIdx %d data 0x%x\015\012\000"
 837      67202564 
 837      20646174 
 837      61496478 
 837      20256420 
 838 017f 00       		.bss
 839              		.align	2
 840              		.set	.LANCHOR1,. + 0
 843              	glEp0Buffer:
 844 0000 00000000 		.space	32
 844      00000000 
 844      00000000 
 844      00000000 
 844      00000000 
 845              		.text
 846              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 cmdqu.c
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:21     .text:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:24     .text:00000000 creatqu
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:46     .text:00000010 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:50     .text:00000014 $a
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:53     .text:00000014 cmdquTest
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:362    .text:000003b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:368    .text:000003c0 $a
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:371    .text:000003c0 cmdbufCreate
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:433    .text:00000428 cmdquInit
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:533    .text:000004e4 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:537    .text:000004e8 $a
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:540    .text:000004e8 cmdbufDestroy
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:558    .text:000004f0 cmdSet
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:642    .text:0000057c $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:647    .text:00000584 $a
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:650    .text:00000584 statGet
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:742    .text:00000618 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:746    .text:0000061c $a
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:749    .text:0000061c cmdFind
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:765    .rodata:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:769    .rodata:00000000 DelayArray
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:817    .rodata.str1.4:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:839    .bss:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccx5PTEc.s:843    .bss:00000000 glEp0Buffer
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CyU3PDebugPrint
CyU3PMemAlloc
_txe_mutex_create
_tx_thread_sleep
CyU3PUsbSendEP0Data
