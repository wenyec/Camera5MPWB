
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f2d0  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  400122d0  400122d0  000122d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  40012420  40012420  00012420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  400124b8  400124b8  000124b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012924  40012924  00012924  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  40012950  40012950  00012950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012a48  40012a48  00012a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012a54  40012a54  00012a54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012a60  40012a60  00012a60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012a88  40012a88  00012a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012a98  40012a98  00012a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012aa8  40012aa8  00012aa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012ab8  40012ab8  00012ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012acc  40012acc  00012acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012adc  40012adc  00012adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012ae8  40012ae8  00012ae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012afc  40012afc  00012afc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012b38  40012b38  00012b38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012b60  40012b60  00012b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012b98  40012b98  00012b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012bcc  40012bcc  00012bcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012be4  40012be4  00012be4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012bfc  40012bfc  00012bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012c18  40012c18  00012c18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012c9c  40012c9c  00012c9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012d70  40012d70  00012d70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012db8  40012db8  00012db8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40012f48  40012f48  00012f48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40012fc8  40012fc8  00012fc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40012fd8  40012fd8  00012fd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  4001320c  4001320c  0001320c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  40013304  40013304  00013304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  4001359c  4001359c  0001359c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  400135d4  400135d4  000135d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  40013630  40013630  00013630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  40013650  40013650  00013650  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  400136ac  400136ac  000136ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  400136d0  400136d0  000136d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  400136f0  400136f0  000136f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  400137e4  400137e4  000137e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013870  40013870  00013870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013874  40013874  00013874  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013898  40013898  00013898  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  400139ac  400139ac  000139ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013a4c  40013a4c  00013a4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013aa4  40013aa4  00013aa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013af4  40013af4  00013af4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013bf0  40013bf0  00013bf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013ca0  40013ca0  00013ca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013d54  40013d54  00013d54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013d7c  40013d7c  00013d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013d8c  40013d8c  00013d8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40013f2c  40013f2c  00013f2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40014044  40014044  00014044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40014094  40014094  00014094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  40014204  40014204  00014204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  400142dc  400142dc  000142dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  40014360  40014360  00014360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  40014378  40014378  00014378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  400144f8  400144f8  000144f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  40014538  40014538  00014538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  40014548  40014548  00014548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  40014558  40014558  00014558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  40014568  40014568  00014568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  40014578  40014578  00014578  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  40014648  40014648  00014648  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014878  40014878  00014878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014908  40014908  00014908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  4001497c  4001497c  0001497c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  400149a4  400149a4  000149a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  400149e0  400149e0  000149e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014a08  40014a08  00014a08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  40014a30  40014a30  00014a30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014a58  40014a58  00014a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014a80  40014a80  00014a80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014aa8  40014aa8  00014aa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014ad0  40014ad0  00014ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014afc  40014afc  00014afc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014b64  40014b64  00014b64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014b78  40014b78  00014b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014bcc  40014bcc  00014bcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014c2c  40014c2c  00014c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014ccc  40014ccc  00014ccc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014dac  40014dac  00014dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014e8c  40014e8c  00014e8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  40014ed4  40014ed4  00014ed4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40014f80  40014f80  00014f80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40014fc4  40014fc4  00014fc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40015038  40015038  00015038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  4001519c  4001519c  0001519c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  400151f0  400151f0  000151f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  40015244  40015244  00015244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  40015534  40015534  00015534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  400155c4  400155c4  000155c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  40015830  40015830  00015830  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015c18  40015c18  00015c18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015cc8  40015cc8  00015cc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015d9c  40015d9c  00015d9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40015f50  40015f50  00015f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  40016284  40016284  00016284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  400163a4  400163a4  000163a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  40016410  40016410  00016410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  40016508  40016508  00016508  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  400165e4  400165e4  000165e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016784  40016784  00016784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016970  40016970  00016970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016b90  40016b90  00016b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016dc8  40016dc8  00016dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40016ef8  40016ef8  00016ef8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  4001709c  4001709c  0001709c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  4001719c  4001719c  0001719c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  400172b8  400172b8  000172b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  4001730c  4001730c  0001730c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  400176cc  400176cc  000176cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  400179b8  400179b8  000179b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017cb0  40017cb0  00017cb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  400183f4  400183f4  000183f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  40018548  40018548  00018548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  40018678  40018678  00018678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  400187a8  400187a8  000187a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  400188e4  400188e4  000188e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018b54  40018b54  00018b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018db0  40018db0  00018db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40018f30  40018f30  00018f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  400190b8  400190b8  000190b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  4001916c  4001916c  0001916c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  40019224  40019224  00019224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  400192c0  400192c0  000192c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  40019360  40019360  00019360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  400196cc  400196cc  000196cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019c5c  40019c5c  00019c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a23c  4001a23c  0001a23c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001a8c4  4001a8c4  0001a8c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001a928  4001a928  0001a928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001a978  4001a978  0001a978  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001aa70  4001aa70  0001aa70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001ab88  4001ab88  0001ab88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001ac04  4001ac04  0001ac04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001ad38  4001ad38  0001ad38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001ae9c  4001ae9c  0001ae9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001aeec  4001aeec  0001aeec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b19c  4001b19c  0001b19c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b320  4001b320  0001b320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b360  4001b360  0001b360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b418  4001b418  0001b418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b4a8  4001b4a8  0001b4a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b730  4001b730  0001b730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b740  4001b740  0001b740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b894  4001b894  0001b894  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001ba14  4001ba14  0001ba14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bc78  4001bc78  0001bc78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bc88  4001bc88  0001bc88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bd54  4001bd54  0001bd54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001be14  4001be14  0001be14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001be24  4001be24  0001be24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c41c  4001c41c  0001c41c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c4a0  4001c4a0  0001c4a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c668  4001c668  0001c668  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c78c  4001c78c  0001c78c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001c8d4  4001c8d4  0001c8d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001ca48  4001ca48  0001ca48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001cb14  4001cb14  0001cb14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001ccdc  4001ccdc  0001ccdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001ccec  4001ccec  0001ccec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001ccfc  4001ccfc  0001ccfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001cd48  4001cd48  0001cd48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cdb4  4001cdb4  0001cdb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001ce30  4001ce30  0001ce30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001cee4  4001cee4  0001cee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d0bc  4001d0bc  0001d0bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d3dc  4001d3dc  0001d3dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d3e8  4001d3e8  0001d3e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d4cc  4001d4cc  0001d4cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d6a4  4001d6a4  0001d6a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d798  4001d798  0001d798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d888  4001d888  0001d888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001da60  4001da60  0001da60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001dc24  4001dc24  0001dc24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dd78  4001dd78  0001dd78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e108  4001e108  0001e108  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e480  4001e480  0001e480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e4f8  4001e4f8  0001e4f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e570  4001e570  0001e570  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e70c  4001e70c  0001e70c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001e8f0  4001e8f0  0001e8f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001eb60  4001eb60  0001eb60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001ec18  4001ec18  0001ec18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001ec48  4001ec48  0001ec48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001ece8  4001ece8  0001ece8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f0c8  4001f0c8  0001f0c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f1b4  4001f1b4  0001f1b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f7d0  4001f7d0  0001f7d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f86c  4001f86c  0001f86c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001f8dc  4001f8dc  0001f8dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001f958  4001f958  0001f958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001facc  4001facc  0001facc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001fb38  4001fb38  0001fb38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fd6c  4001fd6c  0001fd6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fd88  4001fd88  0001fd88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  4001ff80  4001ff80  0001ff80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  400201f4  400201f4  000201f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  400202ac  400202ac  000202ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  400203c4  400203c4  000203c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  400207c0  400207c0  000207c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  400208b8  400208b8  000208b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  400209c4  400209c4  000209c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020b90  40020b90  00020b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020be4  40020be4  00020be4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020c44  40020c44  00020c44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020d88  40020d88  00020d88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020dd8  40020dd8  00020dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40020fcc  40020fcc  00020fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  4002115c  4002115c  0002115c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  400212f4  400212f4  000212f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  40021504  40021504  00021504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021d10  40021d10  00021d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021d60  40021d60  00021d60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021e64  40021e64  00021e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40021f78  40021f78  00021f78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40021f84  40021f84  00021f84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40021f94  40021f94  00021f94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40021fa8  40021fa8  00021fa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40021fbc  40021fbc  00021fbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40021fc8  40021fc8  00021fc8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40022008  40022008  00022008  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40022020  40022020  00022020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40022038  40022038  00022038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  40022074  40022074  00022074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  400220a4  400220a4  000220a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  400220d0  400220d0  000220d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40022150  40022150  00022150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  400221e4  400221e4  000221e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  40022334  40022334  00022334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  400223c0  400223c0  000223c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  400224a0  400224a0  000224a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  400224b0  400224b0  000224b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  40022504  40022504  00022504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  400225a0  400225a0  000225a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  4002260c  4002260c  0002260c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022678  40022678  00022678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  400227f0  400227f0  000227f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  4002290c  4002290c  0002290c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022ad0  40022ad0  00022ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022bc0  40022bc0  00022bc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022c98  40022c98  00022c98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022d1c  40022d1c  00022d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022d2c  40022d2c  00022d2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022d3c  40022d3c  00022d3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022d98  40022d98  00022d98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022e80  40022e80  00022e80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40022f38  40022f38  00022f38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40022f7c  40022f7c  00022f7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023198  40023198  00023198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  400231e8  400231e8  000231e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  40023374  40023374  00023374  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  400233d0  400233d0  000233d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  400234c4  400234c4  000234c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  400235b4  400235b4  000235b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023770  40023770  00023770  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  400237b4  400237b4  000237b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  400239cc  400239cc  000239cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023bfc  40023bfc  00023bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023c0c  40023c0c  00023c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f20  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f20  40030f20  00028f20  2**5
                  ALLOC
266 .debug_abbrev 000011c9  00000000  00000000  00028f20  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d43f  00000000  00000000  0002a0e9  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023090  00000000  00000000  000a7528  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca5b8  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d645d  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d6494  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6644  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042eb  00000000  00000000  000d724d  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000ea02  00000000  00000000  000db538  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 0000767c  00000000  00000000  000e9f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f15b8  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a758  00000000  00000000  000f1658  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 000004b0  00000000  00000000  000fbdb0  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fc260  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031600 	.word	0x40031600

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp_.debug_frame$13>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp_.debug_frame$13+0x4>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$38+0x2e>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$20+0x34>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp_.debug_frame$13+0xc>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp_.debug_frame$13+0xc>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x14>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$27+0x40>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x1c>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_pubnames$10>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$41+0x1c>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x4>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$48+0x30>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp_.debug_frame$13>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$31>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp_.debug_frame$13>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_frame$62+0x4>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$38+0x1a>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$59+0x12>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp_.debug_frame$13>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$59+0x6>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$66+0x1f>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$66+0x13>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$66+0x2b>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$73+0x17>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0xc>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp_.debug_frame$13>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0xb>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp_.debug_frame$13>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x9>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp_.debug_frame$13>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x2>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp_.debug_frame$13>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d54 	.word	0x40030d54
     af8:	40030d3c 	.word	0x40030d3c
     afc:	40031a3c 	.word	0x40031a3c
     b00:	4003196c 	.word	0x4003196c
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d50 	.word	0x40030d50
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d58 	.word	0x40030d58

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_pubnames$59+0x1a>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp..debug_macinfo$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$24+0x20>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp_.debug_frame$34+0xc>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp_.debug_frame$27+0x3c>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$13+0x1c>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$48+0x18>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$13+0x1c>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$48+0x18>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$115+0x13>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_frame$125+0x4>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$80+0x1a>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_pubnames$24+0x1c>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_frame$118+0x10>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$115+0x27>
     cbc:	ea000000 	b	cc4 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x17>
     cc0:	ea000001 	b	ccc <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x1f>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$17+0x10>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_pubnames$24+0x18>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_line$1>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_pubnames$24+0x18>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_line$1>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$17>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_line$1+0x4>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$52+0xb>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$52+0xb>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_frame$104>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_line$1+0x8>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x2>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_line$1+0x8>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x2>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_line$1+0xc>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_frame$104>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_frame$104>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$73+0xc>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_frame$104>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_line$1+0xc>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$80+0x16>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$17>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_frame$20>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$94+0x1e>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_frame$118+0xc>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_frame$20>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_frame$20+0x4>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_frame$13+0x8>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$10+0x29>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_frame$20>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$24+0x14>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_frame$20+0x8>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x20>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x20>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$24+0x20>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_frame$34>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_frame$41+0x14>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_pubnames$59+0x1a>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x12>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x26>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x12>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_frame$20+0xc>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x2e>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_frame$20+0xc>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_pubnames$24+0x3>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$62+0x18>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_line$1+0x4>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$20+0x10>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_frame$34+0x8>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_line$1+0xc>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$73+0x10>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_frame$20+0x10>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_line$1+0xc>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_line$1+0x4>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_frame$48+0x8>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$73+0x8>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_frame$55+0x4>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_line$1>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_line$1>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x5>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_frame$69+0x10>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_frame$76+0x10>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_pubnames$31+0x6>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_pubnames$31+0xa>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$83+0x40>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_line$15>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp_.debug_frame$83+0x24>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$83+0x38>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp_.debug_frame$90+0x4>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x15>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x31>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_frame$97>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_line$1>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_line$1>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x5>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x2>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$38+0x2e>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$52+0x5>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$59+0xb>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$66+0x12>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_frame$125+0x4>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_pubnames$80+0x1f>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x10>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$132+0x3c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_line$15+0x4>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_line$15+0x4>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$13+0xc>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_line$15+0x4>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030da0 	.word	0x40030da0
    17d0:	40030d80 	.word	0x40030d80
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d8c 	.word	0x40030d8c
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d88 	.word	0x40030d88
    17e4:	40030db8 	.word	0x40030db8
    17e8:	40030d5c 	.word	0x40030d5c
    17ec:	40030dc0 	.word	0x40030dc0
    17f0:	40030dd0 	.word	0x40030dd0
    17f4:	40030d90 	.word	0x40030d90
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d84 	.word	0x40030d84
    1800:	80008000 	.word	0x80008000
    1804:	40030dcc 	.word	0x40030dcc
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a78 	.word	0x40031a78
    1810:	40031b18 	.word	0x40031b18
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$52+0xf>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_pubnames$52+0x13>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$52+0x17>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$52+0x1b>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$52+0x1f>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$52+0x23>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$52+0x27>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$59>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$59+0x4>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$59+0x8>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_frame$41>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_frame$41+0x4>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_frame$41+0x8>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_frame$41+0xc>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_line$22>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_line$22+0x4>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_line$22+0x8>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_line$22+0xc>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_pubnames$66+0x2>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	40012284 	.word	0x40012284
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_frame$83+0x18>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_frame$83+0x18>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_line$71>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dd8 	.word	0x40030dd8

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_frame$90+0x14>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_frame$90+0x14>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315b0 	.word	0x400315b0

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp_.debug_pubnames$143+0xc>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$73+0x2b>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$73+0x23>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp_.debug_pubnames$73+0xb>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$143+0x10>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x1>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_frame$20+0xc>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_frame$20+0x4>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_pubnames$87+0x1>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_frame$27+0x8>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_frame$27>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$101+0x1>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$94+0x11>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$143+0x14>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x4>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$108+0x18>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_pubnames$108>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_frame$20>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_frame$41>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$122+0xf>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$122+0x7>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$115+0x18>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_frame$20+0x4>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp_.debug_pubnames$143+0x8>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_pubnames$143>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$129+0x8>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000adfc 	.word	0x4000adfc

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__CyU3PBusyWait_veneer+0x4>
    1fb4:	4001359c 	.word	0x4001359c

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40022020 	.word	0x40022020

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a590 	.word	0x4000a590

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40021f94 	.word	0x40021f94

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <__ARM_grp_.debug_pubnames$157+0x2>
    1fd4:	4000aeec 	.word	0x4000aeec

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40022150 	.word	0x40022150

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	40014360 	.word	0x40014360

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <___tx_thread_irq_nesting_end_veneer+0x4>
    1fec:	4000b004 	.word	0x4000b004

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000b028 	.word	0x4000b028

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40021f78 	.word	0x40021f78

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001facc 	.word	0x4001facc

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000ada8 	.word	0x4000ada8

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a450 	.word	0x4000a450

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009ec4 	.word	0x40009ec4

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__ARM_grp_.debug_pubnames$171+0x1>
    2024:	40013d54 	.word	0x40013d54

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c668 	.word	0x4001c668

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__ARM_grp_.debug_frame$34>
    2034:	4001b320 	.word	0x4001b320

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	40022678 	.word	0x40022678

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000>
    2044:	40020fcc 	.word	0x40020fcc

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	40016284 	.word	0x40016284

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260,
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea003ff1 	b	40012fd8 <CyU3PDebugPrint>
40003010:	40010c80 	.word	0x40010c80

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb003fe8 	bl	40012fd8 <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb003fdb 	bl	40012fd8 <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb003fcd 	bl	40012fd8 <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb003fc0 	bl	40012fd8 <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb003fb3 	bl	40012fd8 <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb003fa6 	bl	40012fd8 <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003f98 	bl	40012fd8 <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003f8b 	bl	40012fd8 <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003f7e 	bl	40012fd8 <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003f71 	bl	40012fd8 <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003f64 	bl	40012fd8 <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003f57 	bl	40012fd8 <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003f4a 	bl	40012fd8 <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003f3d 	bl	40012fd8 <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003f30 	bl	40012fd8 <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003f23 	bl	40012fd8 <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003f16 	bl	40012fd8 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003f0a 	bl	40012fd8 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010c98 	.word	0x40010c98
400033b8:	40010cb4 	.word	0x40010cb4
400033bc:	40010d14 	.word	0x40010d14

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001acf 	bl	40009f2c <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010d6c 	.word	0x40010d6c

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb001593 	bl	40008ae4 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb00158f 	bl	40008ae4 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003ea7 	bl	40012fd8 <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010c00 	.word	0x40010c00
40003548:	40010d80 	.word	0x40010d80

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea0067ce 	b	4001d4cc <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea00146f 	b	400087cc <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	40033244 	.word	0x40033244

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea004031 	b	400136f0 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb0018d1 	bl	400099a8 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb001492 	bl	400088d0 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb00187e 	bl	40009898 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea00193f 	b	40009bb8 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb0018cd 	bl	40009f2c <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb001331 	bl	400088d0 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb00171d 	bl	40009898 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb0018ea 	bl	4000a0a4 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb0012ee 	bl	400088d0 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb0018ff 	bl	4000a124 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb00179e 	bl	40009bb8 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb001928 	bl	4000a1f8 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea0018d0 	b	4000a0a4 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb0012d6 	bl	400088d0 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb0018e7 	bl	4000a124 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb0018e9 	bl	4000a1f8 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb0018c4 	bl	4000a1f8 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb001273 	bl	400088d0 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb001884 	bl	4000a124 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb0018af 	bl	4000a1f8 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb001227 	bl	400088d0 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb001838 	bl	4000a124 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb0016d6 	bl	40009bb8 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb001860 	bl	4000a1f8 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb001809 	bl	4000a0a4 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb0016ac 	bl	40009b38 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007e3a 	bl	400239cc <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001d 	bne	40004160 <SensorRead2B.clone.1+0xc4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003d2a 	bl	4001359c <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007d25 	bl	400235b4 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003d1b 	bl	4001359c <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f103c 	ldr	r1, [pc, #60]	; 40004184 <SensorRead2B.clone.1+0xe8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003ba0 	bl	40012fd8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004154:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004158:	eb003d0f 	bl	4001359c <CyU3PBusyWait>
4000415c:	eafffff2 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004160:	e5d4c001 	ldrb	ip, [r4, #1]
40004164:	e5d43000 	ldrb	r3, [r4]
40004168:	e59f1018 	ldr	r1, [pc, #24]	; 40004188 <SensorRead2B.clone.1+0xec>
4000416c:	e3a00004 	mov	r0, #4
40004170:	e58dc000 	str	ip, [sp]
40004174:	eb003b97 	bl	40012fd8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004178:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000417c:	eb003d06 	bl	4001359c <CyU3PBusyWait>
40004180:	eaffffda 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004184:	40011080 	.word	0x40011080
40004188:	40011064 	.word	0x40011064

4000418c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000418c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	e35000a0 	cmp	r0, #160	; 0xa0
40004194:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e24dd014 	sub	sp, sp, #20
4000419c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a0:	03a0e000 	moveq	lr, #0
400041a4:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
400041a8:	e1a07001 	mov	r7, r1
400041ac:	e1a06002 	mov	r6, r2
400041b0:	e1a05003 	mov	r5, r3
400041b4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041b8:	1a000020 	bne	40004240 <SensorWrite2B+0xb4>
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041bc:	e1a0300e 	mov	r3, lr
400041c0:	e28d100c 	add	r1, sp, #12
400041c4:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041c8:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041cc:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400041d4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d8:	e5cdc008 	strb	ip, [sp, #8]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041dc:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041e0:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
400041e4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041e8:	eb007df7 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041ec:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400041f0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400041f4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400041f8:	eb003ce7 	bl	4001359c <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004204:	e1a0000d 	mov	r0, sp
40004208:	e28d100c 	add	r1, sp, #12
4000420c:	e1a0200c 	mov	r2, ip
40004210:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004214:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004218:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
4000421c:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004220:	eb007de9 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004224:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004228:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000422c:	13a00ffa 	movne	r0, #1000	; 0x3e8
40004230:	eb003cd9 	bl	4001359c <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004234:	e1a00004 	mov	r0, r4
40004238:	e28dd014 	add	sp, sp, #20
4000423c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004240:	e3a00004 	mov	r0, #4
40004244:	e59f1008 	ldr	r1, [pc, #8]	; 40004254 <SensorWrite2B+0xc8>
40004248:	eb003b62 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
4000424c:	e3a04001 	mov	r4, #1
40004250:	eafffff7 	b	40004234 <SensorWrite2B+0xa8>
40004254:	4001109c 	.word	0x4001109c

40004258 <SensorWrite2B2>:
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004258:	e92d4070 	push	{r4, r5, r6, lr}
4000425c:	e24dd018 	sub	sp, sp, #24
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
40004260:	e3a0c002 	mov	ip, #2
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004264:	e1a06002 	mov	r6, r2
	/* Validate the I2C slave address. */
	//if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
	//	CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004268:	e5cd0008 	strb	r0, [sp, #8]
	preamble.buffer[1] = highAddr;
4000426c:	e5cd1009 	strb	r1, [sp, #9]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;
40004270:	e5cd3014 	strb	r3, [sp, #20]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004274:	e28d1014 	add	r1, sp, #20
40004278:	e3a02001 	mov	r2, #1
4000427c:	e3a03000 	mov	r3, #0
40004280:	e28d0008 	add	r0, sp, #8
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004284:	e3a04000 	mov	r4, #0
	preamble.length = 2; /*  Three byte preamble. */
40004288:	e5cdc010 	strb	ip, [sp, #16]
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
4000428c:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004290:	e1cd41b2 	strh	r4, [sp, #18]
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004294:	eb007dcc 	bl	400239cc <CyU3PI2cTransmitBytes>
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
40004298:	e5dd3014 	ldrb	r3, [sp, #20]
4000429c:	e59f102c 	ldr	r1, [pc, #44]	; 400042d0 <SensorWrite2B2+0x78>
400042a0:	e1a02006 	mov	r2, r6
400042a4:	e58d5000 	str	r5, [sp]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400042a8:	e1a04000 	mov	r4, r0
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
400042ac:	e3a00004 	mov	r0, #4
400042b0:	eb003b48 	bl	40012fd8 <CyU3PDebugPrint>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042b4:	e3540000 	cmp	r4, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400042b8:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400042bc:	13a00ffa 	movne	r0, #1000	; 0x3e8
400042c0:	eb003cb5 	bl	4001359c <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
400042c4:	e1a00004 	mov	r0, r4
400042c8:	e28dd018 	add	sp, sp, #24
400042cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400042d0:	400110c0 	.word	0x400110c0

400042d4 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042d4:	e35000a0 	cmp	r0, #160	; 0xa0
400042d8:	13500070 	cmpne	r0, #112	; 0x70
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
400042dc:	e92d4010 	push	{r4, lr}
400042e0:	e1a0c000 	mov	ip, r0
400042e4:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042e8:	03a0e000 	moveq	lr, #0
400042ec:	13a0e001 	movne	lr, #1
400042f0:	1a00001a 	bne	40004360 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
400042f4:	e3530040 	cmp	r3, #64	; 0x40
400042f8:	8a000013 	bhi	4000434c <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
400042fc:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004300:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004304:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004308:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
4000430c:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004310:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004314:	e28d0004 	add	r0, sp, #4
40004318:	e59d1018 	ldr	r1, [sp, #24]
4000431c:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004320:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
40004324:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004328:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000432c:	eb007da6 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004330:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004334:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004338:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000433c:	eb003c96 	bl	4001359c <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
40004340:	e1a00004 	mov	r0, r4
40004344:	e28dd010 	add	sp, sp, #16
40004348:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
4000434c:	e3a00004 	mov	r0, #4
40004350:	e59f101c 	ldr	r1, [pc, #28]	; 40004374 <SensorWrite+0xa0>
40004354:	eb003b1f 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
40004358:	e3a04001 	mov	r4, #1
4000435c:	eafffff7 	b	40004340 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004360:	e3a00004 	mov	r0, #4
40004364:	e59f100c 	ldr	r1, [pc, #12]	; 40004378 <SensorWrite+0xa4>
40004368:	eb003b1a 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
4000436c:	e3a04001 	mov	r4, #1
40004370:	eafffff2 	b	40004340 <SensorWrite+0x6c>
40004374:	400110e0 	.word	0x400110e0
40004378:	4001109c 	.word	0x4001109c

4000437c <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000437c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004380:	e35000a1 	cmp	r0, #161	; 0xa1
40004384:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004388:	e24dd01c 	sub	sp, sp, #28
4000438c:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004390:	03a0c000 	moveq	ip, #0
40004394:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004398:	e1a06001 	mov	r6, r1
4000439c:	e1a0e002 	mov	lr, r2
400043a0:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400043a4:	1a000021 	bne	40004430 <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400043a8:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043ac:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b0:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400043b4:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b8:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043bc:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043c0:	e1a01005 	mov	r1, r5
400043c4:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043c8:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
400043cc:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043d0:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400043d4:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043d8:	eb007d7b 	bl	400239cc <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400043dc:	e2502000 	subs	r2, r0, #0
400043e0:	1a000017 	bne	40004444 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400043e4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400043e8:	eb003c6b 	bl	4001359c <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400043ec:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400043f0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043f4:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400043f8:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043fc:	e1a01005 	mov	r1, r5
40004400:	e1a0200e 	mov	r2, lr
40004404:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004408:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
4000440c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004410:	eb007c67 	bl	400235b4 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004414:	e2504000 	subs	r4, r0, #0
40004418:	1a000012 	bne	40004468 <SensorRead2B+0xec>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
4000441c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004420:	eb003c5d 	bl	4001359c <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004424:	e1a00004 	mov	r0, r4
40004428:	e28dd01c 	add	sp, sp, #28
4000442c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004430:	e3a00004 	mov	r0, #4
40004434:	e59f1054 	ldr	r1, [pc, #84]	; 40004490 <SensorRead2B+0x114>
40004438:	eb003ae6 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
4000443c:	e3a04001 	mov	r4, #1
40004440:	eafffff7 	b	40004424 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004444:	e5d5c001 	ldrb	ip, [r5, #1]
40004448:	e5d53000 	ldrb	r3, [r5]
4000444c:	e59f1040 	ldr	r1, [pc, #64]	; 40004494 <SensorRead2B+0x118>
40004450:	e3a00004 	mov	r0, #4
40004454:	e58dc000 	str	ip, [sp]
40004458:	eb003ade 	bl	40012fd8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000445c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004460:	eb003c4d 	bl	4001359c <CyU3PBusyWait>
40004464:	eaffffe0 	b	400043ec <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004468:	e5d5c001 	ldrb	ip, [r5, #1]
4000446c:	e5d53000 	ldrb	r3, [r5]
40004470:	e59f1020 	ldr	r1, [pc, #32]	; 40004498 <SensorRead2B+0x11c>
40004474:	e1a02004 	mov	r2, r4
40004478:	e3a00004 	mov	r0, #4
4000447c:	e58dc000 	str	ip, [sp]
40004480:	eb003ad4 	bl	40012fd8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004484:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004488:	eb003c43 	bl	4001359c <CyU3PBusyWait>
4000448c:	eaffffe4 	b	40004424 <SensorRead2B+0xa8>
40004490:	4001109c 	.word	0x4001109c
40004494:	40011064 	.word	0x40011064
40004498:	40011080 	.word	0x40011080

4000449c <SensorRead2B2>:
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000449c:	e92d4070 	push	{r4, r5, r6, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044a0:	e35000a1 	cmp	r0, #161	; 0xa1
400044a4:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044a8:	e24dd018 	sub	sp, sp, #24
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044ac:	03a0c000 	moveq	ip, #0
400044b0:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044b4:	e1a05001 	mov	r5, r1
400044b8:	e1a0e002 	mov	lr, r2
400044bc:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044c0:	1a000013 	bne	40004514 <SensorRead2B2+0x78>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400044c4:	e5c43000 	strb	r3, [r4]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044c8:	e3c06001 	bic	r6, r0, #1
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400044cc:	e5cde00e 	strb	lr, [sp, #14]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d0:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044d4:	e3a0e003 	mov	lr, #3
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d8:	e1a01004 	mov	r1, r4
400044dc:	e3a02001 	mov	r2, #1
400044e0:	e1a0300c 	mov	r3, ip
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400044e4:	e5cd500d 	strb	r5, [sp, #13]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044e8:	e5cd600c 	strb	r6, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044ec:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400044f0:	e1cdc1b6 	strh	ip, [sp, #22]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044f4:	eb007c2e 	bl	400235b4 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400044f8:	e2505000 	subs	r5, r0, #0
400044fc:	1a000009 	bne	40004528 <SensorRead2B2+0x8c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004500:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004504:	eb003c24 	bl	4001359c <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004508:	e1a00005 	mov	r0, r5
4000450c:	e28dd018 	add	sp, sp, #24
40004510:	e8bd8070 	pop	{r4, r5, r6, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004514:	e3a00004 	mov	r0, #4
40004518:	e59f1030 	ldr	r1, [pc, #48]	; 40004550 <SensorRead2B2+0xb4>
4000451c:	eb003aad 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
40004520:	e3a05001 	mov	r5, #1
40004524:	eafffff7 	b	40004508 <SensorRead2B2+0x6c>
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004528:	e5d4c001 	ldrb	ip, [r4, #1]
4000452c:	e5d43000 	ldrb	r3, [r4]
40004530:	e59f101c 	ldr	r1, [pc, #28]	; 40004554 <SensorRead2B2+0xb8>
40004534:	e1a02005 	mov	r2, r5
40004538:	e3a00004 	mov	r0, #4
4000453c:	e58dc000 	str	ip, [sp]
40004540:	eb003aa4 	bl	40012fd8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004544:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004548:	eb003c13 	bl	4001359c <CyU3PBusyWait>
4000454c:	eaffffed 	b	40004508 <SensorRead2B2+0x6c>
40004550:	4001109c 	.word	0x4001109c
40004554:	40011080 	.word	0x40011080

40004558 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004558:	e35000a1 	cmp	r0, #161	; 0xa1
4000455c:	13500071 	cmpne	r0, #113	; 0x71
	return apiRetStatus;
}


CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004560:	e92d4030 	push	{r4, r5, lr}
40004564:	e1a0c000 	mov	ip, r0
40004568:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000456c:	03a0e000 	moveq	lr, #0
40004570:	13a0e001 	movne	lr, #1
40004574:	1a00001c 	bne	400045ec <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004578:	e3530040 	cmp	r3, #64	; 0x40
4000457c:	8a000015 	bhi	400045d8 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004580:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004584:	e1a02003 	mov	r2, r3
40004588:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000458c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004590:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004594:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004598:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000459c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045a0:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
400045a4:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
400045a8:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400045ac:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
400045b0:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
400045b4:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045b8:	eb007bfd 	bl	400235b4 <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400045bc:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400045c0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400045c4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400045c8:	eb003bf3 	bl	4001359c <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400045cc:	e1a00004 	mov	r0, r4
400045d0:	e28dd014 	add	sp, sp, #20
400045d4:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400045d8:	e3a00004 	mov	r0, #4
400045dc:	e59f101c 	ldr	r1, [pc, #28]	; 40004600 <SensorRead+0xa8>
400045e0:	eb003a7c 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
400045e4:	e3a04001 	mov	r4, #1
400045e8:	eafffff7 	b	400045cc <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400045ec:	e3a00004 	mov	r0, #4
400045f0:	e59f100c 	ldr	r1, [pc, #12]	; 40004604 <SensorRead+0xac>
400045f4:	eb003a77 	bl	40012fd8 <CyU3PDebugPrint>
		return 1;
400045f8:	e3a04001 	mov	r4, #1
400045fc:	eafffff2 	b	400045cc <SensorRead+0x74>
40004600:	400110e0 	.word	0x400110e0
40004604:	4001109c 	.word	0x4001109c

40004608 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
40004608:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
4000460c:	e3a00016 	mov	r0, #22
40004610:	e3a01000 	mov	r1, #0
40004614:	eb007969 	bl	40022bc0 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004618:	e2502000 	subs	r2, r0, #0
4000461c:	1a000022 	bne	400046ac <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
40004620:	e59f1094 	ldr	r1, [pc, #148]	; 400046bc <SensorReset+0xb4>
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003a6a 	bl	40012fd8 <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000462c:	eb00131e 	bl	400092ac <_tx_time_get>
40004630:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004634:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004638:	eb001129 	bl	40008ae4 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000463c:	eb00131a 	bl	400092ac <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004640:	e1a04804 	lsl	r4, r4, #16
40004644:	e1a02824 	lsr	r2, r4, #16
40004648:	e59f1070 	ldr	r1, [pc, #112]	; 400046c0 <SensorReset+0xb8>
4000464c:	e1a00800 	lsl	r0, r0, #16
40004650:	e1a03820 	lsr	r3, r0, #16
40004654:	e3a00004 	mov	r0, #4
40004658:	eb003a5e 	bl	40012fd8 <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000465c:	eb001312 	bl	400092ac <_tx_time_get>
40004660:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004664:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004668:	eb00111d 	bl	40008ae4 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000466c:	eb00130e 	bl	400092ac <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004670:	e1a02804 	lsl	r2, r4, #16
40004674:	e1a02822 	lsr	r2, r2, #16
40004678:	e59f1040 	ldr	r1, [pc, #64]	; 400046c0 <SensorReset+0xb8>
4000467c:	e1a03800 	lsl	r3, r0, #16
40004680:	e1a03823 	lsr	r3, r3, #16
40004684:	e3a00004 	mov	r0, #4
40004688:	eb003a52 	bl	40012fd8 <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000468c:	e3a00016 	mov	r0, #22
40004690:	e3a01001 	mov	r1, #1
40004694:	eb007949 	bl	40022bc0 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004698:	e2502000 	subs	r2, r0, #0
4000469c:	1a000002 	bne	400046ac <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a0:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046a4:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a8:	ea00110d 	b	40008ae4 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046ac:	e59f1010 	ldr	r1, [pc, #16]	; 400046c4 <SensorReset+0xbc>
400046b0:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046b4:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046b8:	ea003a46 	b	40012fd8 <CyU3PDebugPrint>
400046bc:	40011128 	.word	0x40011128
400046c0:	4001113c 	.word	0x4001113c
400046c4:	40011100 	.word	0x40011100

400046c8 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
400046c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400046cc:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400046d0:	e3a00052 	mov	r0, #82	; 0x52
400046d4:	e3a01030 	mov	r1, #48	; 0x30
400046d8:	e3a020f2 	mov	r2, #242	; 0xf2
400046dc:	e28d3004 	add	r3, sp, #4
400046e0:	ebfffe6d 	bl	4000409c <SensorRead2B.clone.1>
400046e4:	e3500000 	cmp	r0, #0
400046e8:	1a000002 	bne	400046f8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
400046ec:	e5dd3004 	ldrb	r3, [sp, #4]
400046f0:	e3530056 	cmp	r3, #86	; 0x56
400046f4:	0a000002 	beq	40004704 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400046f8:	e3a00004 	mov	r0, #4
400046fc:	e59f1008 	ldr	r1, [pc, #8]	; 4000470c <SensorInit+0x44>
40004700:	eb003a34 	bl	40012fd8 <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
40004704:	e28dd00c 	add	sp, sp, #12
40004708:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000470c:	40011150 	.word	0x40011150

40004710 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004710:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004714:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004718:	e3a00052 	mov	r0, #82	; 0x52
4000471c:	e3a01030 	mov	r1, #48	; 0x30
40004720:	e3a020f2 	mov	r2, #242	; 0xf2
40004724:	e28d3004 	add	r3, sp, #4
40004728:	ebfffe5b 	bl	4000409c <SensorRead2B.clone.1>
4000472c:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
40004730:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004734:	1a000002 	bne	40004744 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004738:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
4000473c:	e2500056 	subs	r0, r0, #86	; 0x56
40004740:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
40004744:	e28dd00c 	add	sp, sp, #12
40004748:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000474c <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
4000474c:	e92d4010 	push	{r4, lr}
40004750:	e24dd008 	sub	sp, sp, #8
40004754:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004758:	e1a02000 	mov	r2, r0
4000475c:	e28d3004 	add	r3, sp, #4
40004760:	e3a00053 	mov	r0, #83	; 0x53
40004764:	ebfffe4c 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004768:	e59f1018 	ldr	r1, [pc, #24]	; 40004788 <SensorGetControl+0x3c>
4000476c:	e1a02004 	mov	r2, r4
40004770:	e5dd3004 	ldrb	r3, [sp, #4]
40004774:	e3a00004 	mov	r0, #4
40004778:	eb003a16 	bl	40012fd8 <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000477c:	e5dd0004 	ldrb	r0, [sp, #4]
40004780:	e28dd008 	add	sp, sp, #8
40004784:	e8bd8010 	pop	{r4, pc}
40004788:	40011174 	.word	0x40011174

4000478c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000478c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004790:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004794:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004798:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000479c:	e1a04000 	mov	r4, r0
400047a0:	e1a05002 	mov	r5, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
400047a4:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047a8:	e3a02001 	mov	r2, #1
400047ac:	e28d100c 	add	r1, sp, #12
400047b0:	e3a03000 	mov	r3, #0
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400047b4:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
400047b8:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047bc:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
400047c0:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047c4:	e1a0000d 	mov	r0, sp
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047c8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400047cc:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400047d0:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047d4:	eb007c7c 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400047d8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400047dc:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400047e0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400047e4:	eb003b6c 	bl	4001359c <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400047e8:	e3a0c001 	mov	ip, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047ec:	e1a0200c 	mov	r2, ip
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400047f0:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047f4:	e28d100c 	add	r1, sp, #12
400047f8:	e3a03000 	mov	r3, #0
400047fc:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004800:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004804:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004808:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000480c:	eb007c6e 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004810:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004814:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004818:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000481c:	eb003b5e 	bl	4001359c <CyU3PBusyWait>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
40004820:	e59f1018 	ldr	r1, [pc, #24]	; 40004840 <SensorSetControl+0xb4>
40004824:	e1a02004 	mov	r2, r4
40004828:	e1a03005 	mov	r3, r5
4000482c:	e3a00004 	mov	r0, #4
40004830:	eb0039e8 	bl	40012fd8 <CyU3PDebugPrint>
//#endif
	return 0;
};
40004834:	e3a00000 	mov	r0, #0
40004838:	e28dd014 	add	sp, sp, #20
4000483c:	e8bd8030 	pop	{r4, r5, pc}
40004840:	40011194 	.word	0x40011194

40004844 <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
40004844:	e1a0c000 	mov	ip, r0
40004848:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000484c:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004850:	e28d3004 	add	r3, sp, #4
40004854:	e1a00002 	mov	r0, r2
40004858:	e1a0200c 	mov	r2, ip
4000485c:	ebfffe0e 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004860:	e5dd0004 	ldrb	r0, [sp, #4]
40004864:	e28dd00c 	add	sp, sp, #12
40004868:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000486c <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000486c:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004870:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004874:	e24dd010 	sub	sp, sp, #16
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004878:	e3a0e000 	mov	lr, #0
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
4000487c:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004880:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004884:	e5cd000c 	strb	r0, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004888:	e28d100c 	add	r1, sp, #12
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000488c:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004890:	e3a03000 	mov	r3, #0
40004894:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004898:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000489c:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400048a0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400048a4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400048a8:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048ac:	eb007c46 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048b0:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048b4:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048b8:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048bc:	eb003b36 	bl	4001359c <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400048c0:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048c4:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048c8:	e28d100c 	add	r1, sp, #12
400048cc:	e1a0200c 	mov	r2, ip
400048d0:	e3a03000 	mov	r3, #0
400048d4:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048d8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400048dc:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400048e0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048e4:	eb007c38 	bl	400239cc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048e8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048ec:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048f0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048f4:	eb003b28 	bl	4001359c <CyU3PBusyWait>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400048f8:	e3a00000 	mov	r0, #0
400048fc:	e28dd010 	add	sp, sp, #16
40004900:	e8bd8010 	pop	{r4, pc}

40004904 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004904:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004908:	e59f2210 	ldr	r2, [pc, #528]	; 40004b20 <I2cAppThread_Entry+0x21c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
4000490c:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004910:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004914:	e3a0effa 	mov	lr, #1000	; 0x3e8
40004918:	e284c02c 	add	ip, r4, #44	; 0x2c
4000491c:	e3a0300b 	mov	r3, #11
40004920:	e1a01004 	mov	r1, r4
40004924:	e59f01f8 	ldr	r0, [pc, #504]	; 40004b24 <I2cAppThread_Entry+0x220>
40004928:	e58de000 	str	lr, [sp]
4000492c:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
40004930:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004934:	e58d4004 	str	r4, [sp, #4]
40004938:	e58d4008 	str	r4, [sp, #8]
4000493c:	eb001868 	bl	4000aae4 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004940:	eb001259 	bl	400092ac <_tx_time_get>
40004944:	e59f11dc 	ldr	r1, [pc, #476]	; 40004b28 <I2cAppThread_Entry+0x224>
40004948:	e59f51dc 	ldr	r5, [pc, #476]	; 40004b2c <I2cAppThread_Entry+0x228>
4000494c:	e1a02000 	mov	r2, r0
40004950:	e3a00004 	mov	r0, #4
40004954:	eb00399f 	bl	40012fd8 <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004958:	e3a00032 	mov	r0, #50	; 0x32
4000495c:	eb001060 	bl	40008ae4 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004960:	e59f01bc 	ldr	r0, [pc, #444]	; 40004b24 <I2cAppThread_Entry+0x220>
40004964:	eb00182c 	bl	4000aa1c <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004968:	ea000000 	b	40004970 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000496c:	eb00180d 	bl	4000a9a8 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004970:	e5d5201a 	ldrb	r2, [r5, #26]
40004974:	e3520000 	cmp	r2, #0
40004978:	0afffffb 	beq	4000496c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000497c:	e59f01a8 	ldr	r0, [pc, #424]	; 40004b2c <I2cAppThread_Entry+0x228>
40004980:	e59f11a8 	ldr	r1, [pc, #424]	; 40004b30 <I2cAppThread_Entry+0x22c>
40004984:	e5903010 	ldr	r3, [r0, #16]
40004988:	e3a00004 	mov	r0, #4
4000498c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004990:	eb003990 	bl	40012fd8 <CyU3PDebugPrint>
40004994:	e59f7198 	ldr	r7, [pc, #408]	; 40004b34 <I2cAppThread_Entry+0x230>
40004998:	e59fb198 	ldr	fp, [pc, #408]	; 40004b38 <I2cAppThread_Entry+0x234>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000499c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049a0:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
400049a4:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
400049a8:	e3a02003 	mov	r2, #3
400049ac:	e28d3014 	add	r3, sp, #20
400049b0:	e3a01020 	mov	r1, #32
400049b4:	e59f0180 	ldr	r0, [pc, #384]	; 40004b3c <I2cAppThread_Entry+0x238>
400049b8:	e58d6000 	str	r6, [sp]
400049bc:	eb001510 	bl	40009e04 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049c0:	e1a01006 	mov	r1, r6
400049c4:	e597001c 	ldr	r0, [r7, #28]
400049c8:	eb0015d5 	bl	4000a124 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
400049cc:	e597001c 	ldr	r0, [r7, #28]
400049d0:	eb001608 	bl	4000a1f8 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049d4:	e595001c 	ldr	r0, [r5, #28]
400049d8:	e1a01006 	mov	r1, r6
400049dc:	eb0015d0 	bl	4000a124 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400049e0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049e4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400049e8:	e3520000 	cmp	r2, #0
400049ec:	1a000008 	bne	40004a14 <I2cAppThread_Entry+0x110>
400049f0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400049f4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400049f8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049fc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
40004a00:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004a04:	e353003f 	cmp	r3, #63	; 0x3f
40004a08:	93520000 	cmpls	r2, #0
40004a0c:	0afffff8 	beq	400049f4 <I2cAppThread_Entry+0xf0>
40004a10:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
40004a14:	e3520000 	cmp	r2, #0
40004a18:	0a00002d 	beq	40004ad4 <I2cAppThread_Entry+0x1d0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a1c:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a20:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a24:	e083e083 	add	lr, r3, r3, lsl #1
40004a28:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a2c:	e242c014 	sub	ip, r2, #20
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a30:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
40004a34:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
40004a38:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
40004a3c:	e1daa0b8 	ldrh	sl, [sl, #8]
#if 1
					switch(lcCmdDes->CmdID){
40004a40:	e35c0003 	cmp	ip, #3
40004a44:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004a48:	ea00001a 	b	40004ab8 <I2cAppThread_Entry+0x1b4>
40004a4c:	40004ac4 	.word	0x40004ac4
40004a50:	40004aa8 	.word	0x40004aa8
40004a54:	40004a5c 	.word	0x40004a5c
40004a58:	40004a5c 	.word	0x40004a5c
						case 22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40004a5c:	e3a03082 	mov	r3, #130	; 0x82
40004a60:	ebffff81 	bl	4000486c <SensorSetIrisControl>
							delaytime = 300;
							break;
40004a64:	e3a01f4b 	mov	r1, #300	; 0x12c
					}
#endif
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					//delaytime =100; //temp add -6/17/2015
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004a68:	e3a02000 	mov	r2, #0
40004a6c:	e59f00b0 	ldr	r0, [pc, #176]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a70:	eb0017f9 	bl	4000aa5c <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004a74:	e59f00a8 	ldr	r0, [pc, #168]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a78:	eb0017e7 	bl	4000aa1c <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a7c:	e5d40001 	ldrb	r0, [r4, #1]
40004a80:	e5d41002 	ldrb	r1, [r4, #2]
40004a84:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004a88:	12800001 	addne	r0, r0, #1
40004a8c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004a90:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a94:	0a000014 	beq	40004aec <I2cAppThread_Entry+0x1e8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004a98:	e595001c 	ldr	r0, [r5, #28]
40004a9c:	eb0015d5 	bl	4000a1f8 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004aa0:	eb0017c0 	bl	4000a9a8 <_txe_thread_relinquish>
		}
40004aa4:	eaffffbf 	b	400049a8 <I2cAppThread_Entry+0xa4>
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004aa8:	e3a03052 	mov	r3, #82	; 0x52
40004aac:	ebffff6e 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004ab0:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ab4:	eaffffeb 	b	40004a68 <I2cAppThread_Entry+0x164>
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004ab8:	ebffff33 	bl	4000478c <SensorSetControl>
40004abc:	e1a0100a 	mov	r1, sl
							break;
40004ac0:	eaffffe8 	b	40004a68 <I2cAppThread_Entry+0x164>
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40004ac4:	e3a03082 	mov	r3, #130	; 0x82
40004ac8:	ebffff67 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004acc:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ad0:	eaffffe4 	b	40004a68 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004ad4:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004ad8:	e59f0044 	ldr	r0, [pc, #68]	; 40004b24 <I2cAppThread_Entry+0x220>
40004adc:	eb0017de 	bl	4000aa5c <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
40004ae0:	e59f003c 	ldr	r0, [pc, #60]	; 40004b24 <I2cAppThread_Entry+0x220>
40004ae4:	eb0017cc 	bl	4000aa1c <_txe_timer_activate>
40004ae8:	eaffffea 	b	40004a98 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004aec:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
40004af0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004af4:	e35c001f 	cmp	ip, #31
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004af8:	824cc020 	subhi	ip, ip, #32
40004afc:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b00:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b04:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b08:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b0c:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b10:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
40004b14:	e5944034 	ldr	r4, [r4, #52]	; 0x34
40004b18:	e5854010 	str	r4, [r5, #16]
40004b1c:	eaffffdd 	b	40004a98 <I2cAppThread_Entry+0x194>
40004b20:	40004b40 	.word	0x40004b40
40004b24:	40032fc4 	.word	0x40032fc4
40004b28:	40011200 	.word	0x40011200
40004b2c:	40032ec4 	.word	0x40032ec4
40004b30:	40011214 	.word	0x40011214
40004b34:	40033110 	.word	0x40033110
40004b38:	40030000 	.word	0x40030000
40004b3c:	40030f90 	.word	0x40030f90

40004b40 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
40004b40:	e59f0008 	ldr	r0, [pc, #8]	; 40004b50 <I2CCmdCb+0x10>
40004b44:	e3a01020 	mov	r1, #32
40004b48:	e3a02000 	mov	r2, #0
40004b4c:	ea0014dc 	b	40009ec4 <_txe_event_flags_set>
40004b50:	40030f90 	.word	0x40030f90

40004b54 <CyFxUvcApplnDmaCallback>:
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b54:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004b58:	e92d4030 	push	{r4, r5, lr}
40004b5c:	e1a04002 	mov	r4, r2
40004b60:	e24dd00c 	sub	sp, sp, #12
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b64:	0a00000b 	beq	40004b98 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
                        status, input->buffer_p.count, prodCount, consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004b68:	e3510010 	cmp	r1, #16
40004b6c:	1a000007 	bne	40004b90 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004b70:	e59f310c 	ldr	r3, [pc, #268]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
        streamingStarted = CyTrue;
40004b74:	e3a01001 	mov	r1, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b78:	e1d303b6 	ldrh	r0, [r3, #54]	; 0x36
        streamingStarted = CyTrue;
40004b7c:	e5831038 	str	r1, [r3, #56]	; 0x38
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b80:	e080c001 	add	ip, r0, r1
40004b84:	e1a0280c 	lsl	r2, ip, #16
40004b88:	e1a01822 	lsr	r1, r2, #16
40004b8c:	e1c313b6 	strh	r1, [r3, #54]	; 0x36
        streamingStarted = CyTrue;
    }
}
40004b90:	e28dd00c 	add	sp, sp, #12
40004b94:	e8bd8030 	pop	{r4, r5, pc}
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004b98:	e1d220b4 	ldrh	r2, [r2, #4]
40004b9c:	e59f30e4 	ldr	r3, [pc, #228]	; 40004c88 <CyFxUvcApplnDmaCallback+0x134>
40004ba0:	e1520003 	cmp	r2, r3
40004ba4:	0a00002b 	beq	40004c58 <CyFxUvcApplnDmaCallback+0x104>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004ba8:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004bac:	e59f10d8 	ldr	r1, [pc, #216]	; 40004c8c <CyFxUvcApplnDmaCallback+0x138>
40004bb0:	e245000c 	sub	r0, r5, #12
40004bb4:	e3a0200c 	mov	r2, #12
40004bb8:	ebfffb45 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bbc:	e555200b 	ldrb	r2, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bc0:	e59f30bc 	ldr	r3, [pc, #188]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bc4:	e3821002 	orr	r1, r2, #2
40004bc8:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bcc:	e1d3c2ba 	ldrh	ip, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004bd0:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bd4:	e28c0001 	add	r0, ip, #1
                pbc = input->buffer_p.count;
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004bd8:	e3a02001 	mov	r2, #1
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bdc:	e1c302ba 	strh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004be0:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004be4:	e5832030 	str	r2, [r3, #48]	; 0x30
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004be8:	e1d3e3b4 	ldrh	lr, [r3, #52]	; 0x34
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bec:	e281200c 	add	r2, r1, #12
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004bf0:	e28ec001 	add	ip, lr, #1
40004bf4:	e1a0080c 	lsl	r0, ip, #16
40004bf8:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bfc:	e1a01802 	lsl	r1, r2, #16
40004c00:	e1a01821 	lsr	r1, r1, #16
40004c04:	e3a02000 	mov	r2, #0
40004c08:	e59f0080 	ldr	r0, [pc, #128]	; 40004c90 <CyFxUvcApplnDmaCallback+0x13c>
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c0c:	e1c3e3b4 	strh	lr, [r3, #52]	; 0x34
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004c10:	eb0049bd 	bl	4001730c <CyU3PDmaMultiChannelCommitBuffer>
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c14:	e59f1068 	ldr	r1, [pc, #104]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
40004c18:	e2502000 	subs	r2, r0, #0
40004c1c:	0affffdb 	beq	40004b90 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004c20:	e1d103b4 	ldrh	r0, [r1, #52]	; 0x34
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004c24:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
            {
                prodCount--;
40004c28:	e240e001 	sub	lr, r0, #1
40004c2c:	e1a0c80e 	lsl	ip, lr, #16
40004c30:	e1a0082c 	lsr	r0, ip, #16
40004c34:	e1c103b4 	strh	r0, [r1, #52]	; 0x34
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004c38:	e1d1e3b4 	ldrh	lr, [r1, #52]	; 0x34
40004c3c:	e1d1c3b6 	ldrh	ip, [r1, #54]	; 0x36
40004c40:	e3a00004 	mov	r0, #4
40004c44:	e59f1048 	ldr	r1, [pc, #72]	; 40004c94 <CyFxUvcApplnDmaCallback+0x140>
40004c48:	e58de000 	str	lr, [sp]
40004c4c:	e58dc004 	str	ip, [sp, #4]
40004c50:	eb0038e0 	bl	40012fd8 <CyU3PDebugPrint>
40004c54:	eaffffcd 	b	40004b90 <CyFxUvcApplnDmaCallback+0x3c>

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004c58:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004c5c:	e59f1028 	ldr	r1, [pc, #40]	; 40004c8c <CyFxUvcApplnDmaCallback+0x138>
40004c60:	e24e000c 	sub	r0, lr, #12
40004c64:	e3a0200c 	mov	r2, #12
40004c68:	ebfffb19 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c6c:	e59f3010 	ldr	r3, [pc, #16]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
40004c70:	e1d410b4 	ldrh	r1, [r4, #4]
40004c74:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004c78:	e28c0001 	add	r0, ip, #1
40004c7c:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004c80:	eaffffd8 	b	40004be8 <CyFxUvcApplnDmaCallback+0x94>
40004c84:	40030f90 	.word	0x40030f90
40004c88:	00003ff0 	.word	0x00003ff0
40004c8c:	40030480 	.word	0x40030480
40004c90:	40032ee4 	.word	0x40032ee4
40004c94:	40011238 	.word	0x40011238

40004c98 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004c98:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004c9c:	e92d4070 	push	{r4, r5, r6, lr}
40004ca0:	e1a03001 	mov	r3, r1
40004ca4:	e24dd010 	sub	sp, sp, #16
40004ca8:	e1a04000 	mov	r4, r0
    switch (evtype)
40004cac:	0a000036 	beq	40004d8c <CyFxUVCApplnUSBEventCB+0xf4>
40004cb0:	e3500004 	cmp	r0, #4
40004cb4:	0a00001f 	beq	40004d38 <CyFxUVCApplnUSBEventCB+0xa0>
40004cb8:	e3500001 	cmp	r0, #1
40004cbc:	0a000001 	beq	40004cc8 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004cc0:	e28dd010 	add	sp, sp, #16
40004cc4:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cc8:	e59f5128 	ldr	r5, [pc, #296]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004ccc:	e1a02000 	mov	r2, r0
40004cd0:	e59f1124 	ldr	r1, [pc, #292]	; 40004dfc <CyFxUVCApplnUSBEventCB+0x164>
40004cd4:	e3a00004 	mov	r0, #4
40004cd8:	eb0038be 	bl	40012fd8 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004cdc:	e1a00004 	mov	r0, r4
40004ce0:	eb0059cc 	bl	4001b418 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004ce4:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ce8:	e1a01004 	mov	r1, r4
40004cec:	e1a00005 	mov	r0, r5
40004cf0:	e3a02002 	mov	r2, #2
40004cf4:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cf8:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            isUsbConnected = CyFalse;
40004cfc:	e585c040 	str	ip, [r5, #64]	; 0x40
            streamingStarted = CyFalse;
40004d00:	e585c038 	str	ip, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d04:	e58dc000 	str	ip, [sp]
40004d08:	eb00143d 	bl	40009e04 <_txe_event_flags_get>
40004d0c:	e2504000 	subs	r4, r0, #0
40004d10:	1affffea 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d14:	e3e01001 	mvn	r1, #1
40004d18:	e3a02002 	mov	r2, #2
40004d1c:	e1a00005 	mov	r0, r5
40004d20:	eb001467 	bl	40009ec4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004d24:	e1a00005 	mov	r0, r5
40004d28:	e3a01002 	mov	r1, #2
40004d2c:	e1a02004 	mov	r2, r4
40004d30:	eb001463 	bl	40009ec4 <_txe_event_flags_set>
40004d34:	eaffffe1 	b	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d38:	e59f50b8 	ldr	r5, [pc, #184]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d3c:	e59f10bc 	ldr	r1, [pc, #188]	; 40004e00 <CyFxUVCApplnUSBEventCB+0x168>
40004d40:	e1a02000 	mov	r2, r0
40004d44:	eb0038a3 	bl	40012fd8 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004d48:	e3a00001 	mov	r0, #1
40004d4c:	eb0059b1 	bl	4001b418 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004d50:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d54:	e3a01001 	mov	r1, #1
40004d58:	e3a02002 	mov	r2, #2
40004d5c:	e1a00005 	mov	r0, r5
40004d60:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d64:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004d68:	e585c038 	str	ip, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d6c:	e58dc000 	str	ip, [sp]
40004d70:	eb001423 	bl	40009e04 <_txe_event_flags_get>
40004d74:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d78:	01a00005 	moveq	r0, r5
40004d7c:	03e01001 	mvneq	r1, #1
40004d80:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d84:	1affffcd 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
40004d88:	eaffffe4 	b	40004d20 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d8c:	e59f5064 	ldr	r5, [pc, #100]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d90:	e1a02000 	mov	r2, r0
40004d94:	e59f1068 	ldr	r1, [pc, #104]	; 40004e04 <CyFxUVCApplnUSBEventCB+0x16c>
40004d98:	e3a00004 	mov	r0, #4
40004d9c:	eb00388d 	bl	40012fd8 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004da0:	e3a00001 	mov	r0, #1
40004da4:	eb00599b 	bl	4001b418 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004da8:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dac:	e1a00005 	mov	r0, r5
40004db0:	e3a01001 	mov	r1, #1
40004db4:	e1a02004 	mov	r2, r4
40004db8:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004dbc:	e585603c 	str	r6, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004dc0:	e5856038 	str	r6, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dc4:	e58d6000 	str	r6, [sp]
40004dc8:	eb00140d 	bl	40009e04 <_txe_event_flags_get>
40004dcc:	e2506000 	subs	r6, r0, #0
40004dd0:	1affffba 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dd4:	e1a02004 	mov	r2, r4
40004dd8:	e1a00005 	mov	r0, r5
40004ddc:	e3e01001 	mvn	r1, #1
40004de0:	eb001437 	bl	40009ec4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004de4:	e1a00005 	mov	r0, r5
40004de8:	e1a01004 	mov	r1, r4
40004dec:	e1a02006 	mov	r2, r6
40004df0:	eb001433 	bl	40009ec4 <_txe_event_flags_set>
40004df4:	eaffffb1 	b	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
40004df8:	40030f90 	.word	0x40030f90
40004dfc:	400112c8 	.word	0x400112c8
40004e00:	40011284 	.word	0x40011284
40004e04:	400112a4 	.word	0x400112a4

40004e08 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e08:	e59f32c0 	ldr	r3, [pc, #704]	; 400050d0 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e10:	e59fc2bc 	ldr	ip, [pc, #700]	; 400050d4 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e14:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e18:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e1c:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e20:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e24:	e59f22ac 	ldr	r2, [pc, #684]	; 400050d8 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e28:	e59f02ac 	ldr	r0, [pc, #684]	; 400050dc <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e2c:	e59f32ac 	ldr	r3, [pc, #684]	; 400050e0 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e30:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e34:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e38:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e3c:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e40:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e44:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e48:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e4c:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e50:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e54:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e58:	0a00004f 	beq	40004f9c <CyFxUVCApplnUSBSetupCB+0x194>
40004e5c:	9a000006 	bls	40004e7c <CyFxUVCApplnUSBSetupCB+0x74>
40004e60:	e3540021 	cmp	r4, #33	; 0x21
40004e64:	0a00003a 	beq	40004f54 <CyFxUVCApplnUSBSetupCB+0x14c>
40004e68:	e35400a1 	cmp	r4, #161	; 0xa1
40004e6c:	0a000038 	beq	40004f54 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004e70:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004e74:	e28dd010 	add	sp, sp, #16
40004e78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e7c:	e3540001 	cmp	r4, #1
40004e80:	1afffffa 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004e84:	e358000b 	cmp	r8, #11
40004e88:	1afffff8 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004e8c:	e3550001 	cmp	r5, #1
40004e90:	1afffff6 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
40004e94:	e3570000 	cmp	r7, #0
40004e98:	1afffff4 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004e9c:	e59f4240 	ldr	r4, [pc, #576]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004ea0:	e59f1240 	ldr	r1, [pc, #576]	; 400050e8 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004ea4:	e3a00004 	mov	r0, #4
40004ea8:	eb00384a 	bl	40012fd8 <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004eac:	e1a00005 	mov	r0, r5
40004eb0:	eb005958 	bl	4001b418 <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004eb4:	e1a01005 	mov	r1, r5
40004eb8:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004ebc:	e584703c 	str	r7, [r4, #60]	; 0x3c
                    streamingStarted = CyFalse;
40004ec0:	e5847038 	str	r7, [r4, #56]	; 0x38
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ec4:	eb0062e5 	bl	4001da60 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004ec8:	e3a00064 	mov	r0, #100	; 0x64
40004ecc:	eb0039b2 	bl	4001359c <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004ed0:	e59f0214 	ldr	r0, [pc, #532]	; 400050ec <CyFxUVCApplnUSBSetupCB+0x2e4>
40004ed4:	eb004d46 	bl	400183f4 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ed8:	e3a00083 	mov	r0, #131	; 0x83
40004edc:	eb005ed9 	bl	4001ca48 <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004ee0:	e1a01007 	mov	r1, r7
40004ee4:	e3a00083 	mov	r0, #131	; 0x83
40004ee8:	eb0062dc 	bl	4001da60 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004eec:	e3a00064 	mov	r0, #100	; 0x64
40004ef0:	eb0039a9 	bl	4001359c <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004ef4:	e1a01007 	mov	r1, r7
40004ef8:	e1a02005 	mov	r2, r5
40004efc:	e3a00083 	mov	r0, #131	; 0x83
40004f00:	eb00639c 	bl	4001dd78 <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004f04:	eb005dd7 	bl	4001c668 <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004f08:	e5845044 	str	r5, [r4, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f0c:	e1a00004 	mov	r0, r4
40004f10:	e1a01005 	mov	r1, r5
40004f14:	e3a02002 	mov	r2, #2
40004f18:	e28d300c 	add	r3, sp, #12
40004f1c:	e58d7000 	str	r7, [sp]
40004f20:	eb0013b7 	bl	40009e04 <_txe_event_flags_get>
40004f24:	e2506000 	subs	r6, r0, #0
40004f28:	1a00002e 	bne	40004fe8 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f2c:	e3e01001 	mvn	r1, #1
40004f30:	e3a02002 	mov	r2, #2
40004f34:	e1a00004 	mov	r0, r4
40004f38:	eb0013e1 	bl	40009ec4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f3c:	e1a00004 	mov	r0, r4
40004f40:	e3a01002 	mov	r1, #2
40004f44:	e1a02006 	mov	r2, r6
40004f48:	eb0013dd 	bl	40009ec4 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004f4c:	e1a00005 	mov	r0, r5
40004f50:	eaffffc7 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004f54:	e21550ff 	ands	r5, r5, #255	; 0xff
40004f58:	1a00001a 	bne	40004fc8 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004f5c:	e1a02005 	mov	r2, r5
40004f60:	e59f017c 	ldr	r0, [pc, #380]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004f64:	e3a01004 	mov	r1, #4
40004f68:	eb0013d5 	bl	40009ec4 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f6c:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f70:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f74:	0affffbe 	beq	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004f78:	e59f1170 	ldr	r1, [pc, #368]	; 400050f0 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004f7c:	e3a00004 	mov	r0, #4
40004f80:	eb003814 	bl	40012fd8 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004f84:	e1a00005 	mov	r0, r5
40004f88:	e3a01001 	mov	r1, #1
40004f8c:	e1a02005 	mov	r2, r5
40004f90:	eb006378 	bl	4001dd78 <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f94:	e3a00001 	mov	r0, #1
40004f98:	eaffffb5 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004f9c:	e3580001 	cmp	r8, #1
40004fa0:	1affffb2 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004fa4:	e3550083 	cmp	r5, #131	; 0x83
40004fa8:	1affffb0 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004fac:	e59f7130 	ldr	r7, [pc, #304]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fb0:	e5976038 	ldr	r6, [r7, #56]	; 0x38
40004fb4:	e3560001 	cmp	r6, #1
40004fb8:	0a000015 	beq	40005014 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004fbc:	eb005da9 	bl	4001c668 <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004fc0:	e1a00008 	mov	r0, r8
40004fc4:	eaffffaa 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004fc8:	e3550001 	cmp	r5, #1
40004fcc:	1affffa7 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004fd0:	e3a02000 	mov	r2, #0
40004fd4:	e59f0108 	ldr	r0, [pc, #264]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fd8:	e3a01008 	mov	r1, #8
40004fdc:	eb0013b8 	bl	40009ec4 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004fe0:	e2502000 	subs	r2, r0, #0
40004fe4:	1a000001 	bne	40004ff0 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004fe8:	e1a00005 	mov	r0, r5
40004fec:	eaffffa0 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004ff0:	e59f10fc 	ldr	r1, [pc, #252]	; 400050f4 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004ff4:	e3a00004 	mov	r0, #4
40004ff8:	eb0037f6 	bl	40012fd8 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ffc:	e3a00000 	mov	r0, #0
40005000:	e1a01005 	mov	r1, r5
40005004:	e1a02000 	mov	r2, r0
40005008:	eb00635a 	bl	4001dd78 <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
4000500c:	e1a00005 	mov	r0, r5
40005010:	eaffff97 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40005014:	e59f10dc 	ldr	r1, [pc, #220]	; 400050f8 <CyFxUVCApplnUSBSetupCB+0x2f0>
40005018:	e3a00004 	mov	r0, #4
4000501c:	eb0037ed 	bl	40012fd8 <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005020:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40005024:	e1a00006 	mov	r0, r6
40005028:	eb0058fa 	bl	4001b418 <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
4000502c:	e1a01006 	mov	r1, r6
40005030:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005034:	e587803c 	str	r8, [r7, #60]	; 0x3c
                        streamingStarted = CyFalse;
40005038:	e5878038 	str	r8, [r7, #56]	; 0x38

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
4000503c:	eb006287 	bl	4001da60 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005040:	e3a00064 	mov	r0, #100	; 0x64
40005044:	eb003954 	bl	4001359c <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40005048:	e59f009c 	ldr	r0, [pc, #156]	; 400050ec <CyFxUVCApplnUSBSetupCB+0x2e4>
4000504c:	eb004ce8 	bl	400183f4 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40005050:	e1a00005 	mov	r0, r5
40005054:	eb005e7b 	bl	4001ca48 <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40005058:	e1a01008 	mov	r1, r8
4000505c:	e1a00005 	mov	r0, r5
40005060:	eb00627e 	bl	4001da60 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005064:	e3a00064 	mov	r0, #100	; 0x64
40005068:	eb00394b 	bl	4001359c <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
4000506c:	e1a01008 	mov	r1, r8
40005070:	e1a02006 	mov	r2, r6
40005074:	e1a00005 	mov	r0, r5
40005078:	eb00633e 	bl	4001dd78 <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
4000507c:	eb005d79 	bl	4001c668 <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40005080:	e5876044 	str	r6, [r7, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40005084:	e1a00007 	mov	r0, r7
40005088:	e1a01006 	mov	r1, r6
4000508c:	e1a02004 	mov	r2, r4
40005090:	e28d300c 	add	r3, sp, #12
40005094:	e58d8000 	str	r8, [sp]
40005098:	eb001359 	bl	40009e04 <_txe_event_flags_get>
4000509c:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050a0:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
400050a4:	1affff72 	bne	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
400050a8:	e3e01001 	mvn	r1, #1
400050ac:	e1a02004 	mov	r2, r4
400050b0:	e1a00007 	mov	r0, r7
400050b4:	eb001382 	bl	40009ec4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
400050b8:	e1a00007 	mov	r0, r7
400050bc:	e1a01004 	mov	r1, r4
400050c0:	e1a02005 	mov	r2, r5
400050c4:	eb00137e 	bl	40009ec4 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050c8:	e1a00006 	mov	r0, r6
400050cc:	eaffff68 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
400050d0:	40032ec0 	.word	0x40032ec0
400050d4:	4003310c 	.word	0x4003310c
400050d8:	40032fc0 	.word	0x40032fc0
400050dc:	40032ff0 	.word	0x40032ff0
400050e0:	40032ff2 	.word	0x40032ff2
400050e4:	40030f90 	.word	0x40030f90
400050e8:	40011354 	.word	0x40011354
400050ec:	40032ee4 	.word	0x40032ee4
400050f0:	400112e8 	.word	0x400112e8
400050f4:	40011320 	.word	0x40011320
400050f8:	4001136c 	.word	0x4001136c

400050fc <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
400050fc:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40005100:	e92d4010 	push	{r4, lr}
40005104:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40005108:	18bd8010 	popne	{r4, pc}
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
4000510c:	e59f30cc 	ldr	r3, [pc, #204]	; 400051e0 <CyFxGpifCB+0xe4>
40005110:	e5d33048 	ldrb	r3, [r3, #72]	; 0x48
40005114:	e3530003 	cmp	r3, #3
40005118:	0a000021 	beq	400051a4 <CyFxGpifCB+0xa8>
            	//lineCount++;
            	return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
4000511c:	e3530002 	cmp	r3, #2
40005120:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40005124:	e2410008 	sub	r0, r1, #8
40005128:	e350000a 	cmp	r0, #10
4000512c:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40005130:	ea000023 	b	400051c4 <CyFxGpifCB+0xc8>
40005134:	40005164 	.word	0x40005164
40005138:	400051c4 	.word	0x400051c4
4000513c:	400051c4 	.word	0x400051c4
40005140:	40005160 	.word	0x40005160
40005144:	400051c4 	.word	0x400051c4
40005148:	400051c4 	.word	0x400051c4
4000514c:	400051c4 	.word	0x400051c4
40005150:	4000519c 	.word	0x4000519c
40005154:	400051c4 	.word	0x400051c4
40005158:	400051c4 	.word	0x400051c4
4000515c:	40005160 	.word	0x40005160
40005160:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005164:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005168:	e59f0074 	ldr	r0, [pc, #116]	; 400051e4 <CyFxGpifCB+0xe8>
4000516c:	eb004fd1 	bl	400190b8 <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005170:	e2502000 	subs	r2, r0, #0
40005174:	0afffff9 	beq	40005160 <CyFxGpifCB+0x64>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005178:	e3a00004 	mov	r0, #4
4000517c:	e59f1064 	ldr	r1, [pc, #100]	; 400051e8 <CyFxGpifCB+0xec>
40005180:	eb003794 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40005184:	e59f1060 	ldr	r1, [pc, #96]	; 400051ec <CyFxGpifCB+0xf0>
40005188:	e3a00004 	mov	r0, #4
4000518c:	eb003791 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005190:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40005194:	eb000e52 	bl	40008ae4 <_tx_thread_sleep>
40005198:	eafffff9 	b	40005184 <CyFxGpifCB+0x88>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
4000519c:	e3a01001 	mov	r1, #1
400051a0:	eafffff0 	b	40005168 <CyFxGpifCB+0x6c>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
400051a4:	e241200b 	sub	r2, r1, #11
400051a8:	e3520003 	cmp	r2, #3
400051ac:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400051b0:	ea000006 	b	400051d0 <CyFxGpifCB+0xd4>
400051b4:	40005164 	.word	0x40005164
400051b8:	4000519c 	.word	0x4000519c
400051bc:	40005160 	.word	0x40005160
400051c0:	40005160 	.word	0x40005160
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
400051c4:	e59f1024 	ldr	r1, [pc, #36]	; 400051f0 <CyFxGpifCB+0xf4>
400051c8:	e3a00001 	mov	r0, #1
400051cc:	eb003781 	bl	40012fd8 <CyU3PDebugPrint>
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
400051d0:	e59f101c 	ldr	r1, [pc, #28]	; 400051f4 <CyFxGpifCB+0xf8>
400051d4:	e3a00004 	mov	r0, #4
    }
   // CyU3PDebugPrint(4,"\r\n commiteof state = %d",currentState);
}
400051d8:	e8bd4010 	pop	{r4, lr}
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
400051dc:	ea00377d 	b	40012fd8 <CyU3PDebugPrint>
400051e0:	40030f90 	.word	0x40030f90
400051e4:	40032ee4 	.word	0x40032ee4
400051e8:	400113a8 	.word	0x400113a8
400051ec:	400113d8 	.word	0x400113d8
400051f0:	40011390 	.word	0x40011390
400051f4:	400113ec 	.word	0x400113ec

400051f8 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400051f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400051fc:	e59f4208 	ldr	r4, [pc, #520]	; 4000540c <I2CCmdHandler+0x214>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
40005200:	e24dd03c 	sub	sp, sp, #60	; 0x3c
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005204:	e5d41053 	ldrb	r1, [r4, #83]	; 0x53
//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005208:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
4000520c:	e5d4604d 	ldrb	r6, [r4, #77]	; 0x4d
	CmdDataLen = I2CCMDArry[8];
40005210:	e5d47054 	ldrb	r7, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005214:	e5d4e04e 	ldrb	lr, [r4, #78]	; 0x4e
40005218:	e5d4804f 	ldrb	r8, [r4, #79]	; 0x4f
4000521c:	e5d4a050 	ldrb	sl, [r4, #80]	; 0x50
40005220:	e5d49051 	ldrb	r9, [r4, #81]	; 0x51
40005224:	e5d4b052 	ldrb	fp, [r4, #82]	; 0x52
40005228:	e58d1014 	str	r1, [sp, #20]
4000522c:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
40005230:	e3a00004 	mov	r0, #4
40005234:	e58d301c 	str	r3, [sp, #28]
40005238:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
4000523c:	e59f11cc 	ldr	r1, [pc, #460]	; 40005410 <I2CCmdHandler+0x218>
40005240:	e1a02005 	mov	r2, r5
40005244:	e1a03006 	mov	r3, r6
40005248:	e58de000 	str	lr, [sp]
4000524c:	e98d0500 	stmib	sp, {r8, sl}
40005250:	e58d900c 	str	r9, [sp, #12]
40005254:	e58db010 	str	fp, [sp, #16]
40005258:	e58d7018 	str	r7, [sp, #24]
4000525c:	e58dc020 	str	ip, [sp, #32]
40005260:	eb00375c 	bl	40012fd8 <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
40005264:	e3550000 	cmp	r5, #0
40005268:	1a000015 	bne	400052c4 <I2CCmdHandler+0xcc>
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
4000526c:	e3a0000f 	mov	r0, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			if(CmdRegLen == 2){
40005270:	e3560002 	cmp	r6, #2
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005274:	e5c40057 	strb	r0, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			if(CmdRegLen == 2){
40005278:	0a000025 	beq	40005314 <I2CCmdHandler+0x11c>
				SensorRead2B2(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|0x1, 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
4000527c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005280:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005284:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005288:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
4000528c:	e28dc034 	add	ip, sp, #52	; 0x34
40005290:	e3800001 	orr	r0, r0, #1
40005294:	e3811001 	orr	r1, r1, #1
40005298:	e58dc000 	str	ip, [sp]
4000529c:	ebfffc36 	bl	4000437c <SensorRead2B>
				I2CCMDArry[9] = buf[0];
400052a0:	e5dd3034 	ldrb	r3, [sp, #52]	; 0x34
				if(CmdDataLen == 2){
400052a4:	e3570002 	cmp	r7, #2
			if(CmdRegLen == 2){
				SensorRead2B2(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|0x1, 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
				I2CCMDArry[9] = buf[0];
400052a8:	e5c43055 	strb	r3, [r4, #85]	; 0x55
				if(CmdDataLen == 2){
					I2CCMDArry[10] = buf[1];
400052ac:	05dd3035 	ldrbeq	r3, [sp, #53]	; 0x35
400052b0:	05c43056 	strbeq	r3, [r4, #86]	; 0x56
				}
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400052b4:	e3e02000 	mvn	r2, #0
400052b8:	e5c42057 	strb	r2, [r4, #87]	; 0x57
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
400052bc:	e28dd03c 	add	sp, sp, #60	; 0x3c
400052c0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
400052c4:	e3550001 	cmp	r5, #1
400052c8:	1afffffb 	bne	400052bc <I2CCmdHandler+0xc4>
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
400052cc:	e3560002 	cmp	r6, #2
400052d0:	0a000019 	beq	4000533c <I2CCmdHandler+0x144>
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400052d4:	e5d4304f 	ldrb	r3, [r4, #79]	; 0x4f
400052d8:	e20310fe 	and	r1, r3, #254	; 0xfe
400052dc:	e3510082 	cmp	r1, #130	; 0x82
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400052e0:	15d45050 	ldrbne	r5, [r4, #80]	; 0x50
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400052e4:	1a000002 	bne	400052f4 <I2CCmdHandler+0xfc>
400052e8:	e5d45050 	ldrb	r5, [r4, #80]	; 0x50
400052ec:	e3550030 	cmp	r5, #48	; 0x30
400052f0:	0a000032 	beq	400053c0 <I2CCmdHandler+0x1c8>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400052f4:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
				}
				else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
400052f8:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
400052fc:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005300:	e1a02005 	mov	r2, r5
40005304:	e20000fe 	and	r0, r0, #254	; 0xfe
40005308:	e58de000 	str	lr, [sp]
4000530c:	ebfffb9e 	bl	4000418c <SensorWrite2B>
40005310:	eaffffe9 	b	400052bc <I2CCmdHandler+0xc4>

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			if(CmdRegLen == 2){
				SensorRead2B2(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|0x1, 0, I2CCMDArry[4], I2CCMDArry[9]);
40005314:	e5d4204f 	ldrb	r2, [r4, #79]	; 0x4f
40005318:	e5d4e04e 	ldrb	lr, [r4, #78]	; 0x4e
4000531c:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005320:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005324:	e3821001 	orr	r1, r2, #1
40005328:	e38e0001 	orr	r0, lr, #1
4000532c:	e1a02005 	mov	r2, r5
40005330:	e58dc000 	str	ip, [sp]
40005334:	ebfffc58 	bl	4000449c <SensorRead2B2>
40005338:	eaffffdd 	b	400052b4 <I2CCmdHandler+0xbc>
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
4000533c:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
40005340:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005344:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005348:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
4000534c:	e20200fe 	and	r0, r2, #254	; 0xfe
40005350:	e3a02000 	mov	r2, #0
40005354:	e58de000 	str	lr, [sp]
40005358:	ebfffbbe 	bl	40004258 <SensorWrite2B2>
4000535c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005360:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005364:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005368:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
4000536c:	e3a02000 	mov	r2, #0
40005370:	e20000fe 	and	r0, r0, #254	; 0xfe
40005374:	e58dc000 	str	ip, [sp]
40005378:	ebfffbb6 	bl	40004258 <SensorWrite2B2>
4000537c:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
40005380:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005384:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005388:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
4000538c:	e20200fe 	and	r0, r2, #254	; 0xfe
40005390:	e3a02000 	mov	r2, #0
40005394:	e58dc000 	str	ip, [sp]
40005398:	ebfffbae 	bl	40004258 <SensorWrite2B2>
4000539c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
400053a0:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
400053a4:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
400053a8:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
400053ac:	e3a02000 	mov	r2, #0
400053b0:	e20000fe 	and	r0, r0, #254	; 0xfe
400053b4:	e58dc000 	str	ip, [sp]
400053b8:	ebfffba6 	bl	40004258 <SensorWrite2B2>
400053bc:	eaffffbe 	b	400052bc <I2CCmdHandler+0xc4>
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400053c0:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
400053c4:	e3530010 	cmp	r3, #16
400053c8:	1affffca 	bne	400052f8 <I2CCmdHandler+0x100>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
400053cc:	e59f4040 	ldr	r4, [pc, #64]	; 40005414 <I2CCmdHandler+0x21c>
400053d0:	e3e01000 	mvn	r1, #0
400053d4:	e594001c 	ldr	r0, [r4, #28]
400053d8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400053dc:	eb001350 	bl	4000a124 <_txe_mutex_get>
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
400053e0:	e3a0c000 	mov	ip, #0
400053e4:	e1a00004 	mov	r0, r4
400053e8:	e3a01017 	mov	r1, #23
400053ec:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
400053f0:	e1a03005 	mov	r3, r5
400053f4:	e58dc000 	str	ip, [sp]
400053f8:	e58dc004 	str	ip, [sp, #4]
400053fc:	ebfff82d 	bl	400034b8 <cmdSet>
					CyU3PMutexPut(cmdQuptr->ringMux);
40005400:	e594001c 	ldr	r0, [r4, #28]
40005404:	eb00137b 	bl	4000a1f8 <_txe_mutex_put>
40005408:	eaffffab 	b	400052bc <I2CCmdHandler+0xc4>
4000540c:	40030f90 	.word	0x40030f90
40005410:	40011404 	.word	0x40011404
40005414:	40032ec4 	.word	0x40032ec4

40005418 <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005418:	e92d4070 	push	{r4, r5, r6, lr}
4000541c:	e1a06001 	mov	r6, r1
40005420:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005424:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005428:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000542c:	e3e01000 	mvn	r1, #0
40005430:	e590001c 	ldr	r0, [r0, #28]
40005434:	eb00133a 	bl	4000a124 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005438:	e0650006 	rsb	r0, r5, r6
4000543c:	e270c000 	rsbs	ip, r0, #0
40005440:	e0acc000 	adc	ip, ip, r0
40005444:	e3a01014 	mov	r1, #20
40005448:	e3a02027 	mov	r2, #39	; 0x27
4000544c:	e3a03030 	mov	r3, #48	; 0x30
40005450:	e1a00004 	mov	r0, r4
40005454:	e58dc000 	str	ip, [sp]
40005458:	e58d5004 	str	r5, [sp, #4]
4000545c:	ebfff815 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005460:	e1560005 	cmp	r6, r5
40005464:	03a06002 	moveq	r6, #2
40005468:	11a06005 	movne	r6, r5
4000546c:	e1a00004 	mov	r0, r4
40005470:	e3a01015 	mov	r1, #21
40005474:	e3a02025 	mov	r2, #37	; 0x25
40005478:	e3a03030 	mov	r3, #48	; 0x30
4000547c:	e58d6000 	str	r6, [sp]
40005480:	e58d5004 	str	r5, [sp, #4]
40005484:	ebfff80b 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005488:	e594001c 	ldr	r0, [r4, #28]
}
4000548c:	e28dd008 	add	sp, sp, #8
40005490:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005494:	ea001357 	b	4000a1f8 <_txe_mutex_put>

40005498 <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
40005498:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
4000549c:	e350001f 	cmp	r0, #31
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400054a0:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400054a4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400054a8:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400054ac:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400054b0:	9a000023 	bls	40005544 <ControlHandle+0xac>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400054b4:	e59f6ea4 	ldr	r6, [pc, #3748]	; 40006360 <ControlHandle+0xec8>
400054b8:	e0872087 	add	r2, r7, r7, lsl #1
400054bc:	e1a02182 	lsl	r2, r2, #3
400054c0:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
400054c4:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
400054c8:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
400054cc:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400054d0:	e59f3e8c 	ldr	r3, [pc, #3724]	; 40006364 <ControlHandle+0xecc>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400054d4:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400054d8:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400054dc:	e3550083 	cmp	r5, #131	; 0x83
400054e0:	0a000022 	beq	40005570 <ControlHandle+0xd8>
400054e4:	9a00002b 	bls	40005598 <ControlHandle+0x100>
400054e8:	e3550085 	cmp	r5, #133	; 0x85
400054ec:	0a000084 	beq	40005704 <ControlHandle+0x26c>
400054f0:	3a000072 	bcc	400056c0 <ControlHandle+0x228>
400054f4:	e3550086 	cmp	r5, #134	; 0x86
400054f8:	0a0000bd 	beq	400057f4 <ControlHandle+0x35c>
400054fc:	e3550087 	cmp	r5, #135	; 0x87
40005500:	0a0000b1 	beq	400057cc <ControlHandle+0x334>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005504:	e3a00000 	mov	r0, #0
40005508:	e3a01001 	mov	r1, #1
4000550c:	e1a02000 	mov	r2, r0
40005510:	eb006218 	bl	4001dd78 <CyU3PUsbStall>
			  break;
40005514:	e3a0e0ff 	mov	lr, #255	; 0xff
40005518:	e1a0400e 	mov	r4, lr
4000551c:	e1a0c00e 	mov	ip, lr
40005520:	e1a0300e 	mov	r3, lr
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005524:	e59f1e3c 	ldr	r1, [pc, #3644]	; 40006368 <ControlHandle+0xed0>
40005528:	e1a02005 	mov	r2, r5
4000552c:	e3a00004 	mov	r0, #4
40005530:	e58dc000 	str	ip, [sp]
40005534:	e98d4010 	stmib	sp, {r4, lr}
40005538:	eb0036a6 	bl	40012fd8 <CyU3PDebugPrint>
}
4000553c:	e28dd02c 	add	sp, sp, #44	; 0x2c
40005540:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005544:	e59f6e14 	ldr	r6, [pc, #3604]	; 40006360 <ControlHandle+0xec8>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005548:	e59f3e14 	ldr	r3, [pc, #3604]	; 40006364 <ControlHandle+0xecc>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
4000554c:	e0805080 	add	r5, r0, r0, lsl #1
40005550:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005554:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005558:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000555c:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005560:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005564:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
40005568:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000556c:	1affffdc 	bne	400054e4 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005570:	e354001f 	cmp	r4, #31
40005574:	9a0000bc 	bls	4000586c <ControlHandle+0x3d4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005578:	e0877087 	add	r7, r7, r7, lsl #1
4000557c:	e0866187 	add	r6, r6, r7, lsl #3
40005580:	e59fade4 	ldr	sl, [pc, #3556]	; 4000636c <ControlHandle+0xed4>
40005584:	e5d60005 	ldrb	r0, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005588:	e5d6c006 	ldrb	ip, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
4000558c:	e5ca0058 	strb	r0, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005590:	e5cac059 	strb	ip, [sl, #89]	; 0x59
40005594:	ea00000b 	b	400055c8 <ControlHandle+0x130>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005598:	e3550081 	cmp	r5, #129	; 0x81
4000559c:	0a000064 	beq	40005734 <ControlHandle+0x29c>
400055a0:	9a000010 	bls	400055e8 <ControlHandle+0x150>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
400055a4:	e354001f 	cmp	r4, #31
400055a8:	9a0000a3 	bls	4000583c <ControlHandle+0x3a4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400055ac:	e0877087 	add	r7, r7, r7, lsl #1
400055b0:	e0866187 	add	r6, r6, r7, lsl #3
400055b4:	e59fadb0 	ldr	sl, [pc, #3504]	; 4000636c <ControlHandle+0xed4>
400055b8:	e5d64003 	ldrb	r4, [r6, #3]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400055bc:	e5d6e004 	ldrb	lr, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400055c0:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400055c4:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400055c8:	e1a00008 	mov	r0, r8
400055cc:	e59f1d9c 	ldr	r1, [pc, #3484]	; 40006370 <ControlHandle+0xed8>
400055d0:	eb005fbd 	bl	4001d4cc <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400055d4:	e3a0e0ff 	mov	lr, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400055d8:	e5da4058 	ldrb	r4, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400055dc:	e1a0c00e 	mov	ip, lr
400055e0:	e1a0300e 	mov	r3, lr
400055e4:	eaffffce 	b	40005524 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400055e8:	e3550001 	cmp	r5, #1
400055ec:	1affffc4 	bne	40005504 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400055f0:	e59f1d74 	ldr	r1, [pc, #3444]	; 4000636c <ControlHandle+0xed4>
400055f4:	e28d2026 	add	r2, sp, #38	; 0x26
400055f8:	e3a00020 	mov	r0, #32
400055fc:	e2811058 	add	r1, r1, #88	; 0x58
40005600:	eb005d43 	bl	4001cb14 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005604:	e2502000 	subs	r2, r0, #0
40005608:	1a000319 	bne	40006274 <ControlHandle+0xddc>
			   {
				  Data0 = glEp0Buffer[0];
4000560c:	e59fed58 	ldr	lr, [pc, #3416]	; 4000636c <ControlHandle+0xed4>
40005610:	e5de3058 	ldrb	r3, [lr, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
40005614:	e59fed50 	ldr	lr, [pc, #3408]	; 4000636c <ControlHandle+0xed4>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
40005618:	e58d3018 	str	r3, [sp, #24]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
4000561c:	e5de005a 	ldrb	r0, [lr, #90]	; 0x5a
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
40005620:	e5dec059 	ldrb	ip, [lr, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005624:	e58d001c 	str	r0, [sp, #28]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005628:	e3540022 	cmp	r4, #34	; 0x22
4000562c:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
40005630:	ea0002f6 	b	40006210 <ControlHandle+0xd78>
40005634:	400061c0 	.word	0x400061c0
40005638:	40006104 	.word	0x40006104
4000563c:	40006210 	.word	0x40006210
40005640:	40006210 	.word	0x40006210
40005644:	400060bc 	.word	0x400060bc
40005648:	40005f78 	.word	0x40005f78
4000564c:	40005ef8 	.word	0x40005ef8
40005650:	40006210 	.word	0x40006210
40005654:	40006210 	.word	0x40006210
40005658:	40006210 	.word	0x40006210
4000565c:	40006210 	.word	0x40006210
40005660:	40005e74 	.word	0x40005e74
40005664:	40006210 	.word	0x40006210
40005668:	40006210 	.word	0x40006210
4000566c:	40006210 	.word	0x40006210
40005670:	40006210 	.word	0x40006210
40005674:	40005d7c 	.word	0x40005d7c
40005678:	40006210 	.word	0x40006210
4000567c:	40006210 	.word	0x40006210
40005680:	40006210 	.word	0x40006210
40005684:	40006210 	.word	0x40006210
40005688:	40006210 	.word	0x40006210
4000568c:	40006210 	.word	0x40006210
40005690:	40006210 	.word	0x40006210
40005694:	40006210 	.word	0x40006210
40005698:	40005cc0 	.word	0x40005cc0
4000569c:	40006210 	.word	0x40006210
400056a0:	40006210 	.word	0x40006210
400056a4:	40005e04 	.word	0x40005e04
400056a8:	40006210 	.word	0x40006210
400056ac:	40005c64 	.word	0x40005c64
400056b0:	40005be0 	.word	0x40005be0
400056b4:	40005b48 	.word	0x40005b48
400056b8:	40005b30 	.word	0x40005b30
400056bc:	40005acc 	.word	0x40005acc
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400056c0:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056c4:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056c8:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056cc:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056d0:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056d4:	859fac90 	ldrhi	sl, [pc, #3216]	; 4000636c <ControlHandle+0xed4>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056d8:	959fac8c 	ldrls	sl, [pc, #3212]	; 4000636c <ControlHandle+0xed4>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056dc:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
400056e0:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056e4:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400056e8:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400056ec:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056f0:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400056f4:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
400056f8:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400056fc:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
40005700:	eaffffb0 	b	400055c8 <ControlHandle+0x130>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005704:	e59f4c60 	ldr	r4, [pc, #3168]	; 4000636c <ControlHandle+0xed4>
			  glEp0Buffer[1] = 0;
40005708:	e3a0c000 	mov	ip, #0
4000570c:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005710:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005714:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005718:	e3a00002 	mov	r0, #2
4000571c:	eb005f6a 	bl	4001d4cc <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005720:	e3a0e0ff 	mov	lr, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005724:	e5d44058 	ldrb	r4, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005728:	e1a0c00e 	mov	ip, lr
4000572c:	e1a0300e 	mov	r3, lr
40005730:	eaffff7b 	b	40005524 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
40005734:	e2441001 	sub	r1, r4, #1
40005738:	e3510021 	cmp	r1, #33	; 0x21
4000573c:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005740:	ea0000d8 	b	40005aa8 <ControlHandle+0x610>
40005744:	40005a64 	.word	0x40005a64
40005748:	40005aa8 	.word	0x40005aa8
4000574c:	40005aa8 	.word	0x40005aa8
40005750:	40005aa8 	.word	0x40005aa8
40005754:	40005a44 	.word	0x40005a44
40005758:	40005aa8 	.word	0x40005aa8
4000575c:	40005aa8 	.word	0x40005aa8
40005760:	40005aa8 	.word	0x40005aa8
40005764:	40005aa8 	.word	0x40005aa8
40005768:	40005aa8 	.word	0x40005aa8
4000576c:	40005a20 	.word	0x40005a20
40005770:	40005aa8 	.word	0x40005aa8
40005774:	40005aa8 	.word	0x40005aa8
40005778:	40005aa8 	.word	0x40005aa8
4000577c:	40005aa8 	.word	0x40005aa8
40005780:	40005aa8 	.word	0x40005aa8
40005784:	40005aa8 	.word	0x40005aa8
40005788:	40005aa8 	.word	0x40005aa8
4000578c:	40005aa8 	.word	0x40005aa8
40005790:	40005aa8 	.word	0x40005aa8
40005794:	40005aa8 	.word	0x40005aa8
40005798:	40005aa8 	.word	0x40005aa8
4000579c:	40005aa8 	.word	0x40005aa8
400057a0:	40005aa8 	.word	0x40005aa8
400057a4:	400059e4 	.word	0x400059e4
400057a8:	40005aa8 	.word	0x40005aa8
400057ac:	40005aa8 	.word	0x40005aa8
400057b0:	400059bc 	.word	0x400059bc
400057b4:	40005aa8 	.word	0x40005aa8
400057b8:	40005aa8 	.word	0x40005aa8
400057bc:	40005920 	.word	0x40005920
400057c0:	400058e8 	.word	0x400058e8
400057c4:	400058e8 	.word	0x400058e8
400057c8:	400058e8 	.word	0x400058e8
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400057cc:	e354001f 	cmp	r4, #31
400057d0:	9a000031 	bls	4000589c <ControlHandle+0x404>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400057d4:	e0877087 	add	r7, r7, r7, lsl #1
400057d8:	e0866187 	add	r6, r6, r7, lsl #3
400057dc:	e59fab88 	ldr	sl, [pc, #2952]	; 4000636c <ControlHandle+0xed4>
400057e0:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400057e4:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400057e8:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400057ec:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
400057f0:	eaffff74 	b	400055c8 <ControlHandle+0x130>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400057f4:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400057f8:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400057fc:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005800:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005804:	80866187 	addhi	r6, r6, r7, lsl #3
40005808:	859f8b5c 	ldrhi	r8, [pc, #2908]	; 4000636c <ControlHandle+0xed4>
4000580c:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005810:	959f8b54 	ldrls	r8, [pc, #2900]	; 4000636c <ControlHandle+0xed4>
40005814:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005818:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
4000581c:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005820:	e59f1b48 	ldr	r1, [pc, #2888]	; 40006370 <ControlHandle+0xed8>
40005824:	eb005f28 	bl	4001d4cc <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005828:	e3a0e0ff 	mov	lr, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000582c:	e5d84058 	ldrb	r4, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005830:	e1a0c00e 	mov	ip, lr
40005834:	e1a0300e 	mov	r3, lr
40005838:	eaffff39 	b	40005524 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000583c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005840:	10844084 	addne	r4, r4, r4, lsl #1
40005844:	10866184 	addne	r6, r6, r4, lsl #3
40005848:	159fab1c 	ldrne	sl, [pc, #2844]	; 4000636c <ControlHandle+0xed4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000584c:	059fab18 	ldreq	sl, [pc, #2840]	; 4000636c <ControlHandle+0xed4>
40005850:	059f3b1c 	ldreq	r3, [pc, #2844]	; 40006374 <ControlHandle+0xedc>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005854:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005858:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000585c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005860:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005864:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005868:	eaffff56 	b	400055c8 <ControlHandle+0x130>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
4000586c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005870:	10844084 	addne	r4, r4, r4, lsl #1
40005874:	10866184 	addne	r6, r6, r4, lsl #3
40005878:	159faaec 	ldrne	sl, [pc, #2796]	; 4000636c <ControlHandle+0xed4>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000587c:	059faae8 	ldreq	sl, [pc, #2792]	; 4000636c <ControlHandle+0xed4>
40005880:	059f3af0 	ldreq	r3, [pc, #2800]	; 40006378 <ControlHandle+0xee0>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005884:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005888:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000588c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005890:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005894:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005898:	eaffff4a 	b	400055c8 <ControlHandle+0x130>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000589c:	e354000b 	cmp	r4, #11
400058a0:	0a000007 	beq	400058c4 <ControlHandle+0x42c>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058a4:	e084a084 	add	sl, r4, r4, lsl #1
400058a8:	e086618a 	add	r6, r6, sl, lsl #3
400058ac:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
400058b0:	e59faab4 	ldr	sl, [pc, #2740]	; 4000636c <ControlHandle+0xed4>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400058b4:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058b8:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400058bc:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
400058c0:	eaffff40 	b	400055c8 <ControlHandle+0x130>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058c4:	e59faaa0 	ldr	sl, [pc, #2720]	; 4000636c <ControlHandle+0xed4>
400058c8:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400058cc:	e5d64294 	ldrb	r4, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
400058d0:	e3a0e000 	mov	lr, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058d4:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
400058d8:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400058dc:	e5ca405a 	strb	r4, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
400058e0:	e5cae05b 	strb	lr, [sl, #91]	; 0x5b
400058e4:	eaffff37 	b	400055c8 <ControlHandle+0x130>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400058e8:	e0877087 	add	r7, r7, r7, lsl #1
400058ec:	e0866187 	add	r6, r6, r7, lsl #3
400058f0:	e59fea74 	ldr	lr, [pc, #2676]	; 4000636c <ControlHandle+0xed4>
400058f4:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400058f8:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400058fc:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
40005900:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005904:	e1a00008 	mov	r0, r8
40005908:	e59f1a60 	ldr	r1, [pc, #2656]	; 40006370 <ControlHandle+0xed8>
4000590c:	eb005eee 	bl	4001d4cc <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005910:	e3a0c0ff 	mov	ip, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005914:	e1a0e006 	mov	lr, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005918:	e1a0300c 	mov	r3, ip
4000591c:	eaffff00 	b	40005524 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005920:	e3580000 	cmp	r8, #0
40005924:	0a000286 	beq	40006344 <ControlHandle+0xeac>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005928:	e1a0e128 	lsr	lr, r8, #2
4000592c:	e35e0000 	cmp	lr, #0
40005930:	13580003 	cmpne	r8, #3
40005934:	83a02000 	movhi	r2, #0
40005938:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000593c:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005940:	9a000283 	bls	40006354 <ControlHandle+0xebc>
40005944:	e59f1a24 	ldr	r1, [pc, #2596]	; 40006370 <ControlHandle+0xed8>
40005948:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
4000594c:	e4904004 	ldr	r4, [r0], #4
40005950:	e282c001 	add	ip, r2, #1
40005954:	e20c20ff 	and	r2, ip, #255	; 0xff
40005958:	e15e0002 	cmp	lr, r2
4000595c:	e4814004 	str	r4, [r1], #4
40005960:	8afffff9 	bhi	4000594c <ControlHandle+0x4b4>
40005964:	e1580003 	cmp	r8, r3
40005968:	159f09fc 	ldrne	r0, [pc, #2556]	; 4000636c <ControlHandle+0xed4>
4000596c:	0a000274 	beq	40006344 <ControlHandle+0xeac>
40005970:	e080e003 	add	lr, r0, r3
40005974:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005978:	e2836001 	add	r6, r3, #1
4000597c:	e20630ff 	and	r3, r6, #255	; 0xff
40005980:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005984:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005988:	8afffff8 	bhi	40005970 <ControlHandle+0x4d8>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
4000598c:	e5d02057 	ldrb	r2, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005990:	e59f39d4 	ldr	r3, [pc, #2516]	; 4000636c <ControlHandle+0xed4>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005994:	e35200ff 	cmp	r2, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005998:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
4000599c:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400059a0:	0affffd7 	beq	40005904 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
400059a4:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
400059a8:	e59f19cc 	ldr	r1, [pc, #2508]	; 4000637c <ControlHandle+0xee4>
400059ac:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
400059b0:	e3a00004 	mov	r0, #4
400059b4:	eb003587 	bl	40012fd8 <CyU3PDebugPrint>
400059b8:	eaffffd1 	b	40005904 <ControlHandle+0x46c>
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
400059bc:	e59f79a8 	ldr	r7, [pc, #2472]	; 4000636c <ControlHandle+0xed4>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
400059c0:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
400059c4:	e5d72078 	ldrb	r2, [r7, #120]	; 0x78
400059c8:	e3520001 	cmp	r2, #1
400059cc:	0a000230 	beq	40006294 <ControlHandle+0xdfc>
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
400059d0:	e3a00000 	mov	r0, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
400059d4:	e5c74058 	strb	r4, [r7, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400059d8:	e5c70059 	strb	r0, [r7, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400059dc:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400059e0:	eaffffc7 	b	40005904 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400059e4:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400059e8:	e59fc97c 	ldr	ip, [pc, #2428]	; 4000636c <ControlHandle+0xed4>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400059ec:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400059f0:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400059f4:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400059f8:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400059fc:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005a00:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005a04:	e59f1974 	ldr	r1, [pc, #2420]	; 40006380 <ControlHandle+0xee8>
40005a08:	e1a02004 	mov	r2, r4
40005a0c:	e1a0300e 	mov	r3, lr
40005a10:	e3a00004 	mov	r0, #4
40005a14:	e88d4040 	stm	sp, {r6, lr}
40005a18:	eb00356e 	bl	40012fd8 <CyU3PDebugPrint>
					 break;
40005a1c:	eaffffb8 	b	40005904 <ControlHandle+0x46c>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a20:	e59f0944 	ldr	r0, [pc, #2372]	; 4000636c <ControlHandle+0xed4>
40005a24:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a28:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005a2c:	e3a0c000 	mov	ip, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a30:	e5c04058 	strb	r4, [r0, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005a34:	e5c0c059 	strb	ip, [r0, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a38:	e5c0605a 	strb	r6, [r0, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005a3c:	e5c0c05b 	strb	ip, [r0, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005a40:	eaffffaf 	b	40005904 <ControlHandle+0x46c>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005a44:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
40005a48:	e59fe91c 	ldr	lr, [pc, #2332]	; 4000636c <ControlHandle+0xed4>
40005a4c:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005a50:	e3a02000 	mov	r2, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005a54:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005a58:	e5ce2059 	strb	r2, [lr, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005a5c:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005a60:	eaffffa7 	b	40005904 <ControlHandle+0x46c>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005a64:	e5d611a6 	ldrb	r1, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005a68:	e5d661a5 	ldrb	r6, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005a6c:	e3110002 	tst	r1, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005a70:	01a06126 	lsreq	r6, r6, #2
40005a74:	01e06c86 	mvneq	r6, r6, lsl #25
40005a78:	01e06ca6 	mvneq	r6, r6, lsr #25
					 }
					 glEp0Buffer[0] = Data1;
40005a7c:	e59f38e8 	ldr	r3, [pc, #2280]	; 4000636c <ControlHandle+0xed4>

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005a80:	11a01301 	lslne	r1, r1, #6
40005a84:	12014040 	andne	r4, r1, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005a88:	01861301 	orreq	r1, r6, r1, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005a8c:	11844126 	orrne	r4, r4, r6, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005a90:	020140ff 	andeq	r4, r1, #255	; 0xff
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
40005a94:	e3a00000 	mov	r0, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
40005a98:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005a9c:	e5c30059 	strb	r0, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005aa0:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005aa4:	eaffff96 	b	40005904 <ControlHandle+0x46c>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005aa8:	e0842084 	add	r2, r4, r4, lsl #1
40005aac:	e0866182 	add	r6, r6, r2, lsl #3
40005ab0:	e59f38b4 	ldr	r3, [pc, #2228]	; 4000636c <ControlHandle+0xed4>
40005ab4:	e5d6418d 	ldrb	r4, [r6, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005ab8:	e3a01000 	mov	r1, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005abc:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005ac0:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005ac4:	e5c31059 	strb	r1, [r3, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
40005ac8:	eaffff8d 	b	40005904 <ControlHandle+0x46c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005acc:	e59f48b0 	ldr	r4, [pc, #2224]	; 40006384 <ControlHandle+0xeec>
40005ad0:	e3e01000 	mvn	r1, #0
40005ad4:	e594001c 	ldr	r0, [r4, #28]
40005ad8:	eb001191 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005adc:	e3a01022 	mov	r1, #34	; 0x22
40005ae0:	e59dc018 	ldr	ip, [sp, #24]
40005ae4:	e3a0e000 	mov	lr, #0
40005ae8:	e1a0300a 	mov	r3, sl
40005aec:	e1a02009 	mov	r2, r9
40005af0:	e1a00004 	mov	r0, r4
40005af4:	e88d5000 	stm	sp, {ip, lr}
40005af8:	ebfff66e 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005afc:	e594001c 	ldr	r0, [r4, #28]
40005b00:	eb0011bc 	bl	4000a1f8 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005b04:	e59d1018 	ldr	r1, [sp, #24]
40005b08:	e0877087 	add	r7, r7, r7, lsl #1
40005b0c:	e0866187 	add	r6, r6, r7, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b10:	e3a03001 	mov	r3, #1
							 break;
40005b14:	e3a0e0ff 	mov	lr, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b18:	e5c63010 	strb	r3, [r6, #16]
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005b1c:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b20:	e1a03001 	mov	r3, r1
40005b24:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005b28:	e1a0400e 	mov	r4, lr
40005b2c:	eafffe7c 	b	40005524 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID1: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b30:	e59f484c 	ldr	r4, [pc, #2124]	; 40006384 <ControlHandle+0xeec>
40005b34:	e3e01000 	mvn	r1, #0
40005b38:	e594001c 	ldr	r0, [r4, #28]
40005b3c:	eb001178 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005b40:	e3a01021 	mov	r1, #33	; 0x21
40005b44:	eaffffe5 	b	40005ae0 <ControlHandle+0x648>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b48:	e59f4834 	ldr	r4, [pc, #2100]	; 40006384 <ControlHandle+0xeec>
40005b4c:	e3e01000 	mvn	r1, #0
40005b50:	e594001c 	ldr	r0, [r4, #28]
40005b54:	e58dc014 	str	ip, [sp, #20]
40005b58:	eb001171 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005b5c:	e59d2018 	ldr	r2, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005b60:	e3a0e000 	mov	lr, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005b64:	e202807f 	and	r8, r2, #127	; 0x7f
40005b68:	e58d801c 	str	r8, [sp, #28]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005b6c:	e59dc01c 	ldr	ip, [sp, #28]
40005b70:	e3a01020 	mov	r1, #32
40005b74:	e1a02009 	mov	r2, r9
40005b78:	e1a0300a 	mov	r3, sl
40005b7c:	e1a00004 	mov	r0, r4
40005b80:	e88d5000 	stm	sp, {ip, lr}
40005b84:	ebfff64b 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005b88:	e59dc014 	ldr	ip, [sp, #20]
40005b8c:	e1a0300a 	mov	r3, sl
40005b90:	e3a08001 	mov	r8, #1
40005b94:	e3a01020 	mov	r1, #32
40005b98:	e1a0200b 	mov	r2, fp
40005b9c:	e1a00004 	mov	r0, r4
40005ba0:	e58dc000 	str	ip, [sp]
40005ba4:	e58d8004 	str	r8, [sp, #4]
40005ba8:	ebfff642 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005bac:	e594001c 	ldr	r0, [r4, #28]
40005bb0:	eb001190 	bl	4000a1f8 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005bb4:	e59d001c 	ldr	r0, [sp, #28]
40005bb8:	e0877087 	add	r7, r7, r7, lsl #1
40005bbc:	e0866187 	add	r6, r6, r7, lsl #3
40005bc0:	e5c6000d 	strb	r0, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005bc4:	e59dc014 	ldr	ip, [sp, #20]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005bc8:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005bcc:	e5c6c00e 	strb	ip, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005bd0:	e5c68010 	strb	r8, [r6, #16]
40005bd4:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005bd8:	e1a0400e 	mov	r4, lr
40005bdc:	eafffe50 	b	40005524 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005be0:	e3580000 	cmp	r8, #0
40005be4:	0a000018 	beq	40005c4c <ControlHandle+0x7b4>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005be8:	e1a0e128 	lsr	lr, r8, #2
40005bec:	e35e0000 	cmp	lr, #0
40005bf0:	13580003 	cmpne	r8, #3
40005bf4:	83a02000 	movhi	r2, #0
40005bf8:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005bfc:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005c00:	9a0001d1 	bls	4000634c <ControlHandle+0xeb4>
40005c04:	e59f177c 	ldr	r1, [pc, #1916]	; 40006388 <ControlHandle+0xef0>
40005c08:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005c0c:	e4904004 	ldr	r4, [r0], #4
40005c10:	e2822001 	add	r2, r2, #1
40005c14:	e20220ff 	and	r2, r2, #255	; 0xff
40005c18:	e15e0002 	cmp	lr, r2
40005c1c:	e4814004 	str	r4, [r1], #4
40005c20:	8afffff9 	bhi	40005c0c <ControlHandle+0x774>
40005c24:	e1580003 	cmp	r8, r3
40005c28:	0a000007 	beq	40005c4c <ControlHandle+0x7b4>
40005c2c:	e59fc738 	ldr	ip, [pc, #1848]	; 4000636c <ControlHandle+0xed4>
40005c30:	e08ce003 	add	lr, ip, r3
40005c34:	e5de1058 	ldrb	r1, [lr, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c38:	e2833001 	add	r3, r3, #1
40005c3c:	e20330ff 	and	r3, r3, #255	; 0xff
40005c40:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005c44:	e5ce104c 	strb	r1, [lr, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c48:	8afffff7 	bhi	40005c2c <ControlHandle+0x794>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005c4c:	ebfffd69 	bl	400051f8 <I2CCmdHandler>
							 break;
40005c50:	e3a0e0ff 	mov	lr, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005c54:	e59d3018 	ldr	r3, [sp, #24]
40005c58:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005c5c:	e1a0400e 	mov	r4, lr
40005c60:	eafffe2f 	b	40005524 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c64:	e59f4718 	ldr	r4, [pc, #1816]	; 40006384 <ControlHandle+0xeec>
40005c68:	e3e01000 	mvn	r1, #0
40005c6c:	e594001c 	ldr	r0, [r4, #28]
40005c70:	eb00112b 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c74:	e59d0018 	ldr	r0, [sp, #24]
40005c78:	e3a0e000 	mov	lr, #0
40005c7c:	e270c001 	rsbs	ip, r0, #1
40005c80:	33a0c000 	movcc	ip, #0
40005c84:	e1a0300a 	mov	r3, sl
40005c88:	e3a0101e 	mov	r1, #30
40005c8c:	e1a02009 	mov	r2, r9
40005c90:	e1a00004 	mov	r0, r4
40005c94:	e88d5000 	stm	sp, {ip, lr}
40005c98:	ebfff606 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c9c:	e594001c 	ldr	r0, [r4, #28]
40005ca0:	eb001154 	bl	4000a1f8 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ca4:	e3a03001 	mov	r3, #1
							 break;
40005ca8:	e3a0e0ff 	mov	lr, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cac:	e5c63460 	strb	r3, [r6, #1120]	; 0x460
40005cb0:	e59dc01c 	ldr	ip, [sp, #28]
40005cb4:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005cb8:	e1a0400e 	mov	r4, lr
40005cbc:	eafffe18 	b	40005524 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cc0:	e59f46bc 	ldr	r4, [pc, #1724]	; 40006384 <ControlHandle+0xeec>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005cc4:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005cc8:	e59d301c 	ldr	r3, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ccc:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cd0:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005cd4:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cd8:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cdc:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ce0:	eb00110f 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005ce4:	e59dc018 	ldr	ip, [sp, #24]
40005ce8:	e1a00004 	mov	r0, r4
40005cec:	e58dc000 	str	ip, [sp]
40005cf0:	e3a01019 	mov	r1, #25
40005cf4:	e3a0c000 	mov	ip, #0
40005cf8:	e1a02009 	mov	r2, r9
40005cfc:	e1a0300a 	mov	r3, sl
40005d00:	e58dc004 	str	ip, [sp, #4]
40005d04:	ebfff5eb 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005d08:	e59d0018 	ldr	r0, [sp, #24]
40005d0c:	e3500000 	cmp	r0, #0
40005d10:	0a000007 	beq	40005d34 <ControlHandle+0x89c>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005d14:	e59de01c 	ldr	lr, [sp, #28]
40005d18:	e1a00004 	mov	r0, r4
40005d1c:	e3a01019 	mov	r1, #25
40005d20:	e1a0200b 	mov	r2, fp
40005d24:	e1a0300a 	mov	r3, sl
40005d28:	e58de000 	str	lr, [sp]
40005d2c:	e58d7004 	str	r7, [sp, #4]
40005d30:	ebfff5e0 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d34:	e594001c 	ldr	r0, [r4, #28]
40005d38:	eb00112e 	bl	4000a1f8 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d3c:	e59f0628 	ldr	r0, [pc, #1576]	; 4000636c <ControlHandle+0xed4>
40005d40:	e59f1624 	ldr	r1, [pc, #1572]	; 4000636c <ControlHandle+0xed4>
40005d44:	e5d0c05a 	ldrb	ip, [r0, #90]	; 0x5a
40005d48:	e5d1405b 	ldrb	r4, [r1, #91]	; 0x5b
40005d4c:	e5d03059 	ldrb	r3, [r0, #89]	; 0x59
40005d50:	e5d02058 	ldrb	r2, [r0, #88]	; 0x58
40005d54:	e59f1630 	ldr	r1, [pc, #1584]	; 4000638c <ControlHandle+0xef4>
40005d58:	e3a00004 	mov	r0, #4
40005d5c:	e58dc000 	str	ip, [sp]
40005d60:	e58d4004 	str	r4, [sp, #4]
40005d64:	eb00349b 	bl	40012fd8 <CyU3PDebugPrint>
							 break;
40005d68:	e3a0e0ff 	mov	lr, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d6c:	e59d3018 	ldr	r3, [sp, #24]
40005d70:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005d74:	e1a0400e 	mov	r4, lr
40005d78:	eafffde9 	b	40005524 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005d7c:	e2531000 	subs	r1, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005d80:	e5c6130d 	strb	r1, [r6, #781]	; 0x30d
40005d84:	e59f35d4 	ldr	r3, [pc, #1492]	; 40006360 <ControlHandle+0xec8>
							 if(Data0 == 0){//set exposure mode auto
40005d88:	1a00014e 	bne	400062c8 <ControlHandle+0xe30>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005d8c:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40005d90:	e3520002 	cmp	r2, #2
40005d94:	13520008 	cmpne	r2, #8
40005d98:	0a000003 	beq	40005dac <ControlHandle+0x914>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005d9c:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005da0:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005da4:	13a02002 	movne	r2, #2
40005da8:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005dac:	e59f45d0 	ldr	r4, [pc, #1488]	; 40006384 <ControlHandle+0xeec>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005db0:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005db4:	e3e01000 	mvn	r1, #0
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005db8:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005dbc:	e594001c 	ldr	r0, [r4, #28]
40005dc0:	eb0010d7 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005dc4:	e59dc018 	ldr	ip, [sp, #24]
40005dc8:	e3a01010 	mov	r1, #16
40005dcc:	e58dc000 	str	ip, [sp]
40005dd0:	e1a02009 	mov	r2, r9
40005dd4:	e1a0300a 	mov	r3, sl
40005dd8:	e1a00004 	mov	r0, r4
40005ddc:	e3a0c000 	mov	ip, #0
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005de0:	e58dc004 	str	ip, [sp, #4]
40005de4:	ebfff5b3 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005de8:	e594001c 	ldr	r0, [r4, #28]
40005dec:	eb001101 	bl	4000a1f8 <_txe_mutex_put>

					 		 break;
40005df0:	e3a0e0ff 	mov	lr, #255	; 0xff
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005df4:	e59d3018 	ldr	r3, [sp, #24]
40005df8:	e59dc01c 	ldr	ip, [sp, #28]

					 		 break;
40005dfc:	e1a0400e 	mov	r4, lr
40005e00:	eafffdc7 	b	40005524 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
40005e04:	e3530003 	cmp	r3, #3
								 CamMode = 0; //set 1080p flag
40005e08:	959f255c 	ldrls	r2, [pc, #1372]	; 4000636c <ControlHandle+0xed4>
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e0c:	859fe558 	ldrhi	lr, [pc, #1368]	; 4000636c <ControlHandle+0xed4>
40005e10:	e1a04003 	mov	r4, r3
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005e14:	93a03000 	movls	r3, #0
40005e18:	95c23078 	strbls	r3, [r2, #120]	; 0x78
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e1c:	83a02001 	movhi	r2, #1
40005e20:	959d2018 	ldrls	r2, [sp, #24]
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005e24:	91a03004 	movls	r3, r4
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e28:	85ce2078 	strbhi	r2, [lr, #120]	; 0x78
40005e2c:	81a02004 	movhi	r2, r4
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e30:	e59f454c 	ldr	r4, [pc, #1356]	; 40006384 <ControlHandle+0xeec>
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
40005e34:	82433004 	subhi	r3, r3, #4
							 }
							 CtrlParArry[CtrlID][13] = Data0;
40005e38:	e5c6242d 	strb	r2, [r6, #1069]	; 0x42d
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e3c:	e3a02001 	mov	r2, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e40:	e3e01000 	mvn	r1, #0
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
40005e44:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e48:	e5c62430 	strb	r2, [r6, #1072]	; 0x430
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e4c:	e594001c 	ldr	r0, [r4, #28]
40005e50:	eb0010b3 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e54:	e59dc018 	ldr	ip, [sp, #24]
40005e58:	e3a0101c 	mov	r1, #28
40005e5c:	e58dc000 	str	ip, [sp]
40005e60:	e1a02009 	mov	r2, r9
40005e64:	e1a0300a 	mov	r3, sl
40005e68:	e1a00004 	mov	r0, r4
40005e6c:	e3a0c000 	mov	ip, #0
40005e70:	eaffffda 	b	40005de0 <ControlHandle+0x948>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e74:	e59f4508 	ldr	r4, [pc, #1288]	; 40006384 <ControlHandle+0xeec>
40005e78:	e3e01000 	mvn	r1, #0
40005e7c:	e594001c 	ldr	r0, [r4, #28]
40005e80:	eb0010a7 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e84:	e59dc018 	ldr	ip, [sp, #24]
40005e88:	e3a0100b 	mov	r1, #11
40005e8c:	e1a02009 	mov	r2, r9
40005e90:	e1a0300a 	mov	r3, sl
40005e94:	e1a00004 	mov	r0, r4
40005e98:	e58dc000 	str	ip, [sp]
40005e9c:	e3a0c000 	mov	ip, #0
40005ea0:	e58dc004 	str	ip, [sp, #4]
40005ea4:	ebfff583 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005ea8:	e59de01c 	ldr	lr, [sp, #28]
40005eac:	e1a0200b 	mov	r2, fp
40005eb0:	e1a0300a 	mov	r3, sl
40005eb4:	e3a07001 	mov	r7, #1
40005eb8:	e3a0100b 	mov	r1, #11
40005ebc:	e1a00004 	mov	r0, r4
40005ec0:	e58de000 	str	lr, [sp]
40005ec4:	e58d7004 	str	r7, [sp, #4]
40005ec8:	ebfff57a 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ecc:	e594001c 	ldr	r0, [r4, #28]
40005ed0:	eb0010c8 	bl	4000a1f8 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ed4:	e59d201c 	ldr	r2, [sp, #28]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ed8:	e59d3018 	ldr	r3, [sp, #24]
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005edc:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ee0:	e5c6348c 	strb	r3, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ee4:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ee8:	e5c67298 	strb	r7, [r6, #664]	; 0x298
40005eec:	e1a0c002 	mov	ip, r2
							 break;
40005ef0:	e1a0400e 	mov	r4, lr
40005ef4:	eafffd8a 	b	40005524 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ef8:	e59f4484 	ldr	r4, [pc, #1156]	; 40006384 <ControlHandle+0xeec>
40005efc:	e3e01000 	mvn	r1, #0
40005f00:	e594001c 	ldr	r0, [r4, #28]
40005f04:	eb001086 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f08:	e59dc018 	ldr	ip, [sp, #24]
40005f0c:	e3a01006 	mov	r1, #6
40005f10:	e1a02009 	mov	r2, r9
40005f14:	e1a0300a 	mov	r3, sl
40005f18:	e1a00004 	mov	r0, r4
40005f1c:	e58dc000 	str	ip, [sp]
40005f20:	e3a0c000 	mov	ip, #0
40005f24:	e58dc004 	str	ip, [sp, #4]
40005f28:	ebfff562 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005f2c:	e59de018 	ldr	lr, [sp, #24]
40005f30:	e1a0300a 	mov	r3, sl
40005f34:	e3a07001 	mov	r7, #1
40005f38:	e3a01006 	mov	r1, #6
40005f3c:	e1a0200b 	mov	r2, fp
40005f40:	e1a00004 	mov	r0, r4
40005f44:	e58de000 	str	lr, [sp]
40005f48:	e58d7004 	str	r7, [sp, #4]
40005f4c:	ebfff559 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f50:	e594001c 	ldr	r0, [r4, #28]
40005f54:	eb0010a7 	bl	4000a1f8 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005f58:	e59d4018 	ldr	r4, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f5c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005f60:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f64:	e1a03004 	mov	r3, r4
40005f68:	e5c67220 	strb	r7, [r6, #544]	; 0x220
40005f6c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005f70:	e1a0400e 	mov	r4, lr
40005f74:	eafffd6a 	b	40005524 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f78:	e59f4404 	ldr	r4, [pc, #1028]	; 40006384 <ControlHandle+0xeec>
40005f7c:	e3e01000 	mvn	r1, #0
40005f80:	e594001c 	ldr	r0, [r4, #28]
40005f84:	eb001066 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005f88:	e59d1018 	ldr	r1, [sp, #24]
40005f8c:	e3a0e000 	mov	lr, #0
40005f90:	e2412080 	sub	r2, r1, #128	; 0x80
40005f94:	e202c0ff 	and	ip, r2, #255	; 0xff
40005f98:	e3a01005 	mov	r1, #5
40005f9c:	e1a02009 	mov	r2, r9
40005fa0:	e1a0300a 	mov	r3, sl
40005fa4:	e1a00004 	mov	r0, r4
40005fa8:	e88d5000 	stm	sp, {ip, lr}
40005fac:	ebfff541 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005fb0:	e59d0018 	ldr	r0, [sp, #24]
40005fb4:	e3a01005 	mov	r1, #5
40005fb8:	e2407076 	sub	r7, r0, #118	; 0x76
40005fbc:	e207c0ff 	and	ip, r7, #255	; 0xff
40005fc0:	e3a020dc 	mov	r2, #220	; 0xdc
40005fc4:	e3a07001 	mov	r7, #1
40005fc8:	e1a0300a 	mov	r3, sl
40005fcc:	e1a00004 	mov	r0, r4
40005fd0:	e58dc000 	str	ip, [sp]
40005fd4:	e58d7004 	str	r7, [sp, #4]
40005fd8:	ebfff536 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005fdc:	e59d3018 	ldr	r3, [sp, #24]
40005fe0:	e3a020de 	mov	r2, #222	; 0xde
40005fe4:	e283107e 	add	r1, r3, #126	; 0x7e
40005fe8:	e201c0ff 	and	ip, r1, #255	; 0xff
40005fec:	e1a0300a 	mov	r3, sl
40005ff0:	e3a01005 	mov	r1, #5
40005ff4:	e1a00004 	mov	r0, r4
40005ff8:	e58dc000 	str	ip, [sp]
40005ffc:	e3a0c002 	mov	ip, #2
40006000:	e58dc004 	str	ip, [sp, #4]
40006004:	ebfff52b 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40006008:	e59d2018 	ldr	r2, [sp, #24]
4000600c:	e3a01005 	mov	r1, #5
40006010:	e2820072 	add	r0, r2, #114	; 0x72
40006014:	e200c0ff 	and	ip, r0, #255	; 0xff
40006018:	e3a020e0 	mov	r2, #224	; 0xe0
4000601c:	e1a0300a 	mov	r3, sl
40006020:	e1a00004 	mov	r0, r4
40006024:	e58dc000 	str	ip, [sp]
40006028:	e3a0c003 	mov	ip, #3
4000602c:	e58dc004 	str	ip, [sp, #4]
40006030:	ebfff520 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40006034:	e59d3018 	ldr	r3, [sp, #24]
40006038:	e3a020dd 	mov	r2, #221	; 0xdd
4000603c:	e243106f 	sub	r1, r3, #111	; 0x6f
40006040:	e201c0ff 	and	ip, r1, #255	; 0xff
40006044:	e1a0300a 	mov	r3, sl
40006048:	e3a01005 	mov	r1, #5
4000604c:	e1a00004 	mov	r0, r4
40006050:	e58dc000 	str	ip, [sp]
40006054:	e3a0c004 	mov	ip, #4
40006058:	e58dc004 	str	ip, [sp, #4]
4000605c:	ebfff515 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40006060:	e59f2304 	ldr	r2, [pc, #772]	; 4000636c <ControlHandle+0xed4>
40006064:	e3a0e005 	mov	lr, #5
40006068:	e5d20058 	ldrb	r0, [r2, #88]	; 0x58
4000606c:	e1a0100e 	mov	r1, lr
40006070:	e280307f 	add	r3, r0, #127	; 0x7f
40006074:	e203c0ff 	and	ip, r3, #255	; 0xff
40006078:	e1a0200b 	mov	r2, fp
4000607c:	e1a0300a 	mov	r3, sl
40006080:	e1a00004 	mov	r0, r4
40006084:	e88d5000 	stm	sp, {ip, lr}
40006088:	ebfff50a 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000608c:	e594001c 	ldr	r0, [r4, #28]
40006090:	eb001058 	bl	4000a1f8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40006094:	e59f12d0 	ldr	r1, [pc, #720]	; 4000636c <ControlHandle+0xed4>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40006098:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
4000609c:	e5d1c058 	ldrb	ip, [r1, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
400060a0:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
400060a4:	e24c2080 	sub	r2, ip, #128	; 0x80
400060a8:	e5c62205 	strb	r2, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
400060ac:	e59d3018 	ldr	r3, [sp, #24]
400060b0:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
400060b4:	e1a0400e 	mov	r4, lr
400060b8:	eafffd19 	b	40005524 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060bc:	e59f42c0 	ldr	r4, [pc, #704]	; 40006384 <ControlHandle+0xeec>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
400060c0:	e2437001 	sub	r7, r3, #1
400060c4:	e20770ff 	and	r7, r7, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
400060c8:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060cc:	e3e01000 	mvn	r1, #0
400060d0:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
400060d4:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060d8:	eb001011 	bl	4000a124 <_txe_mutex_get>
							 //cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060dc:	e594001c 	ldr	r0, [r4, #28]
400060e0:	eb001044 	bl	4000a1f8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400060e4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 //cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400060e8:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 //cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400060ec:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
400060f0:	e5c601f0 	strb	r0, [r6, #496]	; 0x1f0
400060f4:	e59d3018 	ldr	r3, [sp, #24]
400060f8:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
400060fc:	e1a0400e 	mov	r4, lr
40006100:	eafffd07 	b	40005524 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006104:	e59f7278 	ldr	r7, [pc, #632]	; 40006384 <ControlHandle+0xeec>
40006108:	e3e01000 	mvn	r1, #0
4000610c:	e597001c 	ldr	r0, [r7, #28]
40006110:	eb001003 	bl	4000a124 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40006114:	e59d8018 	ldr	r8, [sp, #24]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40006118:	e5d601a6 	ldrb	r0, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
4000611c:	e3180080 	tst	r8, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40006120:	01a04328 	lsreq	r4, r8, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40006124:	11a04c88 	lslne	r4, r8, #25
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40006128:	03844002 	orreq	r4, r4, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
4000612c:	13c00003 	bicne	r0, r0, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40006130:	03c00003 	biceq	r0, r0, #3
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40006134:	11804fa4 	orrne	r4, r0, r4, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40006138:	01844000 	orreq	r4, r4, r0
							  }
							 Data1 |= ~0x03;
4000613c:	e1e03f04 	mvn	r3, r4, lsl #30
40006140:	e1e01f23 	mvn	r1, r3, lsr #30
							 Data1 &= 0xC7;
40006144:	e201c0c7 	and	ip, r1, #199	; 0xc7
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40006148:	e3a0e000 	mov	lr, #0
4000614c:	e3a01001 	mov	r1, #1
40006150:	e1a0200b 	mov	r2, fp
40006154:	e1a0300a 	mov	r3, sl
40006158:	e59f0224 	ldr	r0, [pc, #548]	; 40006384 <ControlHandle+0xeec>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
4000615c:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40006160:	e88d5000 	stm	sp, {ip, lr}
40006164:	e58dc014 	str	ip, [sp, #20]
40006168:	ebfff4d2 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
4000616c:	e59d2018 	ldr	r2, [sp, #24]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40006170:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40006174:	e1a08102 	lsl	r8, r2, #2
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40006178:	e1a0300a 	mov	r3, sl
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
4000617c:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40006180:	e1a02009 	mov	r2, r9
40006184:	e59f01f8 	ldr	r0, [pc, #504]	; 40006384 <ControlHandle+0xeec>
40006188:	e58d4004 	str	r4, [sp, #4]
4000618c:	e58d8000 	str	r8, [sp]
40006190:	ebfff4c8 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006194:	e597001c 	ldr	r0, [r7, #28]
40006198:	eb001016 	bl	4000a1f8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
4000619c:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
400061a0:	e59d0014 	ldr	r0, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
400061a4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061a8:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8
							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
400061ac:	e5c601a6 	strb	r0, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
400061b0:	e59d3018 	ldr	r3, [sp, #24]
400061b4:	e59dc01c 	ldr	ip, [sp, #28]

							 break;
400061b8:	e1a0400e 	mov	r4, lr
400061bc:	eafffcd8 	b	40005524 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
400061c0:	e59f21a4 	ldr	r2, [pc, #420]	; 4000636c <ControlHandle+0xed4>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061c4:	e3a01001 	mov	r1, #1
							 if(CamMode == 1) //mode 720p
400061c8:	e5d22078 	ldrb	r2, [r2, #120]	; 0x78

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
400061cc:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
400061d0:	e3520001 	cmp	r2, #1
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061d4:	e5c61190 	strb	r1, [r6, #400]	; 0x190
400061d8:	11a07003 	movne	r7, r3
							 if(CamMode == 1) //mode 720p
400061dc:	0a00004e 	beq	4000631c <ControlHandle+0xe84>
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400061e0:	e59f419c 	ldr	r4, [pc, #412]	; 40006384 <ControlHandle+0xeec>
400061e4:	e3e01000 	mvn	r1, #0
400061e8:	e594001c 	ldr	r0, [r4, #28]
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
400061ec:	e5c6742d 	strb	r7, [r6, #1069]	; 0x42d
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400061f0:	eb000fcb 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
400061f4:	e3a0c000 	mov	ip, #0
400061f8:	e1a0100c 	mov	r1, ip
400061fc:	e1a02009 	mov	r2, r9
40006200:	e1a0300a 	mov	r3, sl
40006204:	e1a00004 	mov	r0, r4
40006208:	e58d7000 	str	r7, [sp]
4000620c:	eafffef3 	b	40005de0 <ControlHandle+0x948>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006210:	e59f716c 	ldr	r7, [pc, #364]	; 40006384 <ControlHandle+0xeec>
40006214:	e3e01000 	mvn	r1, #0
40006218:	e597001c 	ldr	r0, [r7, #28]
4000621c:	eb000fc0 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006220:	e59dc018 	ldr	ip, [sp, #24]
40006224:	e3a0e000 	mov	lr, #0
40006228:	e1a01004 	mov	r1, r4
4000622c:	e1a0300a 	mov	r3, sl
40006230:	e1a02009 	mov	r2, r9
40006234:	e1a00007 	mov	r0, r7
40006238:	e88d5000 	stm	sp, {ip, lr}
4000623c:	ebfff49d 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006240:	e597001c 	ldr	r0, [r7, #28]
40006244:	eb000feb 	bl	4000a1f8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40006248:	e59dc018 	ldr	ip, [sp, #24]
4000624c:	e0840084 	add	r0, r4, r4, lsl #1
40006250:	e0866180 	add	r6, r6, r0, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
40006254:	e3a03001 	mov	r3, #1
							 break;
40006258:	e3a0e0ff 	mov	lr, #255	; 0xff

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
4000625c:	e5c6c18d 	strb	ip, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40006260:	e5c63190 	strb	r3, [r6, #400]	; 0x190
							 break;
40006264:	e1a0400e 	mov	r4, lr
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006268:	e1a0300c 	mov	r3, ip
4000626c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40006270:	eafffcab 	b	40005524 <ControlHandle+0x8c>
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
40006274:	e3a00004 	mov	r0, #4
40006278:	e59f1110 	ldr	r1, [pc, #272]	; 40006390 <ControlHandle+0xef8>
4000627c:	eb003355 	bl	40012fd8 <CyU3PDebugPrint>
40006280:	e3a0e0ff 	mov	lr, #255	; 0xff
40006284:	e1a0400e 	mov	r4, lr
40006288:	e1a0c00e 	mov	ip, lr
4000628c:	e1a0300e 	mov	r3, lr
40006290:	eafffca3 	b	40005524 <ControlHandle+0x8c>
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
40006294:	e3540002 	cmp	r4, #2
40006298:	92844004 	addls	r4, r4, #4
4000629c:	920440ff 	andls	r4, r4, #255	; 0xff
400062a0:	9afffdca 	bls	400059d0 <ControlHandle+0x538>
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
400062a4:	e1a03004 	mov	r3, r4
400062a8:	e3a00004 	mov	r0, #4
400062ac:	e59f10e0 	ldr	r1, [pc, #224]	; 40006394 <ControlHandle+0xefc>
400062b0:	eb003348 	bl	40012fd8 <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
400062b4:	e59f30a4 	ldr	r3, [pc, #164]	; 40006360 <ControlHandle+0xec8>
400062b8:	e3a02000 	mov	r2, #0
400062bc:	e3a04004 	mov	r4, #4
400062c0:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
400062c4:	eafffdc1 	b	400059d0 <ControlHandle+0x538>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400062c8:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400062cc:	e2414001 	sub	r4, r1, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400062d0:	e3520004 	cmp	r2, #4
400062d4:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400062d8:	e20410ff 	and	r1, r4, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400062dc:	0a000003 	beq	400062f0 <ControlHandle+0xe58>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
400062e0:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
400062e4:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
400062e8:	13a02004 	movne	r2, #4
400062ec:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
400062f0:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400062f4:	959f309c 	ldrls	r3, [pc, #156]	; 40006398 <ControlHandle+0xf00>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
400062f8:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400062fc:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006300:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006304:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006308:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
4000630c:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006310:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006314:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
40006318:	eafffea3 	b	40005dac <ControlHandle+0x914>
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
4000631c:	e3530002 	cmp	r3, #2
					 				 Data0 += 4;
40006320:	92837004 	addls	r7, r3, #4
40006324:	920770ff 	andls	r7, r7, #255	; 0xff
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
40006328:	9affffac 	bls	400061e0 <ControlHandle+0xd48>
					 				 Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
4000632c:	e3a00004 	mov	r0, #4
40006330:	e59f105c 	ldr	r1, [pc, #92]	; 40006394 <ControlHandle+0xefc>
40006334:	e59d3018 	ldr	r3, [sp, #24]
40006338:	eb003326 	bl	40012fd8 <CyU3PDebugPrint>
									Data0 = 4; //set to default.
4000633c:	e3a07004 	mov	r7, #4
40006340:	eaffffa6 	b	400061e0 <ControlHandle+0xd48>
40006344:	e59f0020 	ldr	r0, [pc, #32]	; 4000636c <ControlHandle+0xed4>
40006348:	eafffd8f 	b	4000598c <ControlHandle+0x4f4>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000634c:	e3a03000 	mov	r3, #0
40006350:	eafffe35 	b	40005c2c <ControlHandle+0x794>
40006354:	e59f0010 	ldr	r0, [pc, #16]	; 4000636c <ControlHandle+0xed4>
40006358:	e3a03000 	mov	r3, #0
4000635c:	eafffd83 	b	40005970 <ControlHandle+0x4d8>
40006360:	40030000 	.word	0x40030000
40006364:	4003310c 	.word	0x4003310c
40006368:	40011548 	.word	0x40011548
4000636c:	40030f90 	.word	0x40030f90
40006370:	40030fe8 	.word	0x40030fe8
40006374:	00010001 	.word	0x00010001
40006378:	00ff00ff 	.word	0x00ff00ff
4000637c:	40011488 	.word	0x40011488
40006380:	400114c4 	.word	0x400114c4
40006384:	40032ec4 	.word	0x40032ec4
40006388:	40030fdc 	.word	0x40030fdc
4000638c:	400114ec 	.word	0x400114ec
40006390:	40011518 	.word	0x40011518
40006394:	40011450 	.word	0x40011450
40006398:	400111b8 	.word	0x400111b8

4000639c <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
4000639c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400063a0:	e59fa960 	ldr	sl, [pc, #2400]	; 40006d08 <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400063a4:	e59f8960 	ldr	r8, [pc, #2400]	; 40006d0c <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400063a8:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400063ac:	e1a09080 	lsl	r9, r0, #1
400063b0:	e0892000 	add	r2, r9, r0
400063b4:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400063b8:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400063bc:	e24dd05c 	sub	sp, sp, #92	; 0x5c
400063c0:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400063c4:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
400063c8:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
400063cc:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400063d0:	0a000076 	beq	400065b0 <CTControlHandle+0x214>
400063d4:	9a000021 	bls	40006460 <CTControlHandle+0xc4>
400063d8:	e3550085 	cmp	r5, #133	; 0x85
400063dc:	0a000059 	beq	40006548 <CTControlHandle+0x1ac>
400063e0:	3a00004e 	bcc	40006520 <CTControlHandle+0x184>
400063e4:	e3550086 	cmp	r5, #134	; 0x86
400063e8:	0a000080 	beq	400065f0 <CTControlHandle+0x254>
400063ec:	e3550087 	cmp	r5, #135	; 0x87
400063f0:	0a000076 	beq	400065d0 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400063f4:	e3a00000 	mov	r0, #0
400063f8:	e3a01001 	mov	r1, #1
400063fc:	e1a02000 	mov	r2, r0
40006400:	eb005e5c 	bl	4001dd78 <CyU3PUsbStall>
40006404:	e59f4904 	ldr	r4, [pc, #2308]	; 40006d10 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006408:	e1a02006 	mov	r2, r6
4000640c:	e3a00004 	mov	r0, #4
40006410:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006d14 <CTControlHandle+0x978>
40006414:	e5da3000 	ldrb	r3, [sl]
40006418:	eb0032ee 	bl	40012fd8 <CyU3PDebugPrint>
			  break;
4000641c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006420:	e1a0600c 	mov	r6, ip
40006424:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
40006428:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
4000642c:	e58dc008 	str	ip, [sp, #8]
40006430:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006d18 <CTControlHandle+0x97c>
40006434:	e3a0c0ff 	mov	ip, #255	; 0xff
40006438:	e1a02005 	mov	r2, r5
4000643c:	e1a03008 	mov	r3, r8
40006440:	e3a00004 	mov	r0, #4
40006444:	e88d4040 	stm	sp, {r6, lr}
40006448:	e58dc00c 	str	ip, [sp, #12]
4000644c:	e58de010 	str	lr, [sp, #16]
40006450:	e58d7014 	str	r7, [sp, #20]
40006454:	eb0032df 	bl	40012fd8 <CyU3PDebugPrint>
}
40006458:	e28dd05c 	add	sp, sp, #92	; 0x5c
4000645c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006460:	e3550081 	cmp	r5, #129	; 0x81
40006464:	0a000042 	beq	40006574 <CTControlHandle+0x1d8>
40006468:	9a000011 	bls	400064b4 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
4000646c:	e59f489c 	ldr	r4, [pc, #2204]	; 40006d10 <CTControlHandle+0x974>
40006470:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006474:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006478:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
4000647c:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006480:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006484:	0a00002c 	beq	4000653c <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
40006488:	e3a0e000 	mov	lr, #0
4000648c:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
40006490:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006494:	e1a00007 	mov	r0, r7
40006498:	e59f187c 	ldr	r1, [pc, #2172]	; 40006d1c <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
4000649c:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
400064a0:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400064a4:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400064a8:	eb005c07 	bl	4001d4cc <CyU3PUsbSendEP0Data>
400064ac:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400064b0:	eaffffdc 	b	40006428 <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400064b4:	e3550001 	cmp	r5, #1
400064b8:	1affffcd 	bne	400063f4 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400064bc:	e59f484c 	ldr	r4, [pc, #2124]	; 40006d10 <CTControlHandle+0x974>
400064c0:	e28d2056 	add	r2, sp, #86	; 0x56
400064c4:	e3a00020 	mov	r0, #32
400064c8:	e2841058 	add	r1, r4, #88	; 0x58
400064cc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400064d0:	eb00598f 	bl	4001cb14 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400064d4:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
400064d8:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
400064dc:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400064e0:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
400064e4:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
400064e8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400064ec:	e3520009 	cmp	r2, #9
400064f0:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400064f4:	ea000155 	b	40006a50 <CTControlHandle+0x6b4>
400064f8:	40006a0c 	.word	0x40006a0c
400064fc:	40006a50 	.word	0x40006a50
40006500:	4000671c 	.word	0x4000671c
40006504:	40006a50 	.word	0x40006a50
40006508:	40006a50 	.word	0x40006a50
4000650c:	40006a50 	.word	0x40006a50
40006510:	40006698 	.word	0x40006698
40006514:	40006a50 	.word	0x40006a50
40006518:	40006a50 	.word	0x40006a50
4000651c:	4000661c 	.word	0x4000661c
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006520:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006d10 <CTControlHandle+0x974>
40006524:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006528:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000652c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006530:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006534:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006538:	1affffd2 	bne	40006488 <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000653c:	e3a01001 	mov	r1, #1
40006540:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
40006544:	eaffffd1 	b	40006490 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006548:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006d10 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
4000654c:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006550:	e3a00002 	mov	r0, #2
40006554:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006558:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
4000655c:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
40006560:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006564:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006568:	eb005bd7 	bl	4001d4cc <CyU3PUsbSendEP0Data>
4000656c:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006570:	eaffffac 	b	40006428 <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006574:	e59f4794 	ldr	r4, [pc, #1940]	; 40006d10 <CTControlHandle+0x974>
40006578:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
4000657c:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
40006580:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006584:	e1a00007 	mov	r0, r7
40006588:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
4000658c:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006590:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
40006594:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40006598:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
4000659c:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400065a0:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400065a4:	eb005bc8 	bl	4001d4cc <CyU3PUsbSendEP0Data>
400065a8:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400065ac:	eaffff9d 	b	40006428 <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400065b0:	e59f4758 	ldr	r4, [pc, #1880]	; 40006d10 <CTControlHandle+0x974>
400065b4:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400065b8:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065bc:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400065c0:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400065c4:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065c8:	1affffae 	bne	40006488 <CTControlHandle+0xec>
400065cc:	eaffffda 	b	4000653c <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400065d0:	e59f4738 	ldr	r4, [pc, #1848]	; 40006d10 <CTControlHandle+0x974>
400065d4:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400065d8:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065dc:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400065e0:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400065e4:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065e8:	1affffa6 	bne	40006488 <CTControlHandle+0xec>
400065ec:	eaffffd2 	b	4000653c <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
400065f0:	e59f4718 	ldr	r4, [pc, #1816]	; 40006d10 <CTControlHandle+0x974>
400065f4:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
400065f8:	e1a01004 	mov	r1, r4
400065fc:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006600:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006604:	e3a00001 	mov	r0, #1
40006608:	eb005baf 	bl	4001d4cc <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000660c:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006610:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006614:	e3a07001 	mov	r7, #1
40006618:	eaffff82 	b	40006428 <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000661c:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006d20 <CTControlHandle+0x984>
40006620:	e3e01000 	mvn	r1, #0
40006624:	e596001c 	ldr	r0, [r6, #28]
40006628:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000662c:	eb000ebc 	bl	4000a124 <_txe_mutex_get>
					  if(getData == 1)
40006630:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006634:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006638:	e35e0001 	cmp	lr, #1
4000663c:	0a0001a9 	beq	40006ce8 <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006640:	e35e00ff 	cmp	lr, #255	; 0xff
40006644:	0a00019e 	beq	40006cc4 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx);
40006648:	e3a08000 	mov	r8, #0
4000664c:	e1a00006 	mov	r0, r6
40006650:	e3a01017 	mov	r1, #23
40006654:	e1a0200b 	mov	r2, fp
40006658:	e58d8000 	str	r8, [sp]
4000665c:	e58d8004 	str	r8, [sp, #4]
40006660:	ebfff394 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006664:	e596001c 	ldr	r0, [r6, #28]
40006668:	eb000ee2 	bl	4000a1f8 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
4000666c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006670:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006674:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
40006678:	e3a00004 	mov	r0, #4
4000667c:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006d24 <CTControlHandle+0x988>
40006680:	e1a02008 	mov	r2, r8
40006684:	e1a03006 	mov	r3, r6
40006688:	e58dc000 	str	ip, [sp]
4000668c:	eb003251 	bl	40012fd8 <CyU3PDebugPrint>
					  break;
40006690:	e3a0c0ff 	mov	ip, #255	; 0xff
40006694:	eaffff63 	b	40006428 <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
40006698:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
4000669c:	e3580001 	cmp	r8, #1
400066a0:	13580008 	cmpne	r8, #8
400066a4:	13a00000 	movne	r0, #0
400066a8:	03a00001 	moveq	r0, #1
400066ac:	1a000180 	bne	40006cb4 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400066b0:	e59f8668 	ldr	r8, [pc, #1640]	; 40006d20 <CTControlHandle+0x984>
400066b4:	e3e01000 	mvn	r1, #0
400066b8:	e598001c 	ldr	r0, [r8, #28]
400066bc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400066c0:	eb000e97 	bl	4000a124 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
400066c4:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400066c8:	e3a01016 	mov	r1, #22
400066cc:	e1a0200b 	mov	r2, fp
400066d0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400066d4:	e3a0c000 	mov	ip, #0
400066d8:	e1a00008 	mov	r0, r8
400066dc:	e88d1400 	stm	sp, {sl, ip}
400066e0:	ebfff374 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400066e4:	e598001c 	ldr	r0, [r8, #28]
400066e8:	eb000ec2 	bl	4000a1f8 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400066ec:	e59f0618 	ldr	r0, [pc, #1560]	; 40006d0c <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
400066f0:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400066f4:	e0891006 	add	r1, r9, r6
400066f8:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400066fc:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006700:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
40006704:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
40006708:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
4000670c:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
40006710:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
40006714:	e3a0c0ff 	mov	ip, #255	; 0xff
40006718:	eaffff42 	b	40006428 <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
4000671c:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
40006720:	e3500001 	cmp	r0, #1
40006724:	13500004 	cmpne	r0, #4
40006728:	1a00015c 	bne	40006ca0 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
4000672c:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006730:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006734:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
40006738:	e35200f9 	cmp	r2, #249	; 0xf9
4000673c:	8a000157 	bhi	40006ca0 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006740:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006744:	e1a0c80a 	lsl	ip, sl, #16
40006748:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
4000674c:	e262a027 	rsb	sl, r2, #39	; 0x27
40006750:	e58da038 	str	sl, [sp, #56]	; 0x38
40006754:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006758:	e26210c8 	rsb	r1, r2, #200	; 0xc8
4000675c:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006760:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006764:	e1a01801 	lsl	r1, r1, #16
40006768:	e262e064 	rsb	lr, r2, #100	; 0x64
4000676c:	81a0182a 	lsrhi	r1, sl, #16
40006770:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006774:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006778:	e3520064 	cmp	r2, #100	; 0x64
4000677c:	e1a0080e 	lsl	r0, lr, #16
40006780:	81a0082c 	lsrhi	r0, ip, #16
40006784:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006788:	e242a014 	sub	sl, r2, #20
4000678c:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006790:	91a00820 	lsrls	r0, r0, #16
40006794:	e262a014 	rsb	sl, r2, #20
40006798:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000679c:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
400067a0:	e1510000 	cmp	r1, r0
400067a4:	31a0a001 	movcc	sl, r1
400067a8:	21a0a000 	movcs	sl, r0
400067ac:	e1a0c80c 	lsl	ip, ip, #16
400067b0:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067b4:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400067b8:	91a0e82c 	lsrls	lr, ip, #16
400067bc:	e59fc564 	ldr	ip, [pc, #1380]	; 40006d28 <CTControlHandle+0x98c>
400067c0:	e58da020 	str	sl, [sp, #32]
400067c4:	e06ca001 	rsb	sl, ip, r1
400067c8:	81a0e82e 	lsrhi	lr, lr, #16
400067cc:	e27ac000 	rsbs	ip, sl, #0
400067d0:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067d4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400067d8:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067dc:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400067e0:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067e4:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
400067e8:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067ec:	e242a00a 	sub	sl, r2, #10
400067f0:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400067f4:	e59da020 	ldr	sl, [sp, #32]
400067f8:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400067fc:	e15e000a 	cmp	lr, sl
40006800:	31a0a00e 	movcc	sl, lr
40006804:	e262c00a 	rsb	ip, r2, #10
40006808:	e58dc040 	str	ip, [sp, #64]	; 0x40
4000680c:	e58da038 	str	sl, [sp, #56]	; 0x38
40006810:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006814:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006818:	e3520014 	cmp	r2, #20
4000681c:	91a0a82c 	lsrls	sl, ip, #16
40006820:	81a0a82a 	lsrhi	sl, sl, #16
40006824:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006828:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000682c:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006830:	33a0c001 	movcc	ip, #1
40006834:	e58da03c 	str	sl, [sp, #60]	; 0x3c
40006838:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000683c:	e1a0a801 	lsl	sl, r1, #16
40006840:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006844:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006848:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
4000684c:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
40006850:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006854:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
40006858:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
4000685c:	e58d104c 	str	r1, [sp, #76]	; 0x4c
40006860:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006864:	e1a00800 	lsl	r0, r0, #16
40006868:	e15c000a 	cmp	ip, sl
4000686c:	21a0c00a 	movcs	ip, sl
40006870:	e352000a 	cmp	r2, #10
40006874:	e59da020 	ldr	sl, [sp, #32]
40006878:	81a00821 	lsrhi	r0, r1, #16
4000687c:	91a00820 	lsrls	r0, r0, #16
40006880:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006884:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006888:	e15e000a 	cmp	lr, sl
4000688c:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006890:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006894:	e58dc044 	str	ip, [sp, #68]	; 0x44
40006898:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000689c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400068a0:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400068a4:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
400068a8:	e59de048 	ldr	lr, [sp, #72]	; 0x48
400068ac:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
400068b0:	e262a002 	rsb	sl, r2, #2
400068b4:	e15e0000 	cmp	lr, r0
400068b8:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068bc:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400068c0:	e3520005 	cmp	r2, #5
400068c4:	e58da040 	str	sl, [sp, #64]	; 0x40
400068c8:	e1a01801 	lsl	r1, r1, #16
400068cc:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400068d0:	81a0182c 	lsrhi	r1, ip, #16
400068d4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400068d8:	e58de04c 	str	lr, [sp, #76]	; 0x4c
400068dc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400068e0:	e59de040 	ldr	lr, [sp, #64]	; 0x40
400068e4:	91a01821 	lsrls	r1, r1, #16
400068e8:	e15a000c 	cmp	sl, ip
400068ec:	e58d1020 	str	r1, [sp, #32]
400068f0:	33a00003 	movcc	r0, #3
400068f4:	e58d0038 	str	r0, [sp, #56]	; 0x38
400068f8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400068fc:	e1a0080e 	lsl	r0, lr, #16
40006900:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006904:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006908:	e15e000a 	cmp	lr, sl
4000690c:	21a0e00a 	movcs	lr, sl
40006910:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006914:	e59da048 	ldr	sl, [sp, #72]	; 0x48
40006918:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000691c:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006920:	91a01820 	lsrls	r1, r0, #16
40006924:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006928:	81a01821 	lsrhi	r1, r1, #16
4000692c:	e15a000c 	cmp	sl, ip
40006930:	33a00004 	movcc	r0, #4
40006934:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006938:	e2420001 	sub	r0, r2, #1
4000693c:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006940:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006944:	e59d0020 	ldr	r0, [sp, #32]
40006948:	e262c001 	rsb	ip, r2, #1
4000694c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006950:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006954:	e59da038 	ldr	sl, [sp, #56]	; 0x38
40006958:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
4000695c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006960:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006964:	e3520001 	cmp	r2, #1
40006968:	91a02800 	lslls	r2, r0, #16
4000696c:	81a0280a 	lslhi	r2, sl, #16
40006970:	e151000e 	cmp	r1, lr
40006974:	31a0a001 	movcc	sl, r1
40006978:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
4000697c:	e151000e 	cmp	r1, lr
40006980:	21a0100c 	movcs	r1, ip
40006984:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006988:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000698c:	e59fa38c 	ldr	sl, [pc, #908]	; 40006d20 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006990:	91a02001 	movls	r2, r1
40006994:	83a02007 	movhi	r2, #7
40006998:	e2822001 	add	r2, r2, #1
4000699c:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069a0:	e3e01000 	mvn	r1, #0
400069a4:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400069a8:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069ac:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400069b0:	eb000ddb 	bl	4000a124 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
400069b4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400069b8:	e3a01003 	mov	r1, #3
400069bc:	e1a0200b 	mov	r2, fp
400069c0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400069c4:	e58dc000 	str	ip, [sp]
400069c8:	e1a0000a 	mov	r0, sl
400069cc:	e3a0c000 	mov	ip, #0
400069d0:	e58dc004 	str	ip, [sp, #4]
400069d4:	ebfff2b7 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069d8:	e59a001c 	ldr	r0, [sl, #28]
400069dc:	eb000e05 	bl	4000a1f8 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400069e0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
400069e4:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400069e8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400069ec:	e0891006 	add	r1, r9, r6
400069f0:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400069f4:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400069f8:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
400069fc:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006a00:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006a04:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
40006a08:	eaffff3f 	b	4000670c <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006a0c:	e0892006 	add	r2, r9, r6
40006a10:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006a14:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006a18:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006a1c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006a20:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006a24:	e35e0007 	cmp	lr, #7
40006a28:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
40006a2c:	ea000097 	b	40006c90 <CTControlHandle+0x8f4>
40006a30:	40006c24 	.word	0x40006c24
40006a34:	40006b88 	.word	0x40006b88
40006a38:	40006c90 	.word	0x40006c90
40006a3c:	40006b24 	.word	0x40006b24
40006a40:	40006c90 	.word	0x40006c90
40006a44:	40006c90 	.word	0x40006c90
40006a48:	40006c90 	.word	0x40006c90
40006a4c:	40006a84 	.word	0x40006a84
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006a50:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006a54:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006a58:	e0899006 	add	r9, r9, r6
40006a5c:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006a60:	e1a02006 	mov	r2, r6
40006a64:	e3a00004 	mov	r0, #4
40006a68:	e59f12bc 	ldr	r1, [pc, #700]	; 40006d2c <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006a6c:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006a70:	eb003158 	bl	40012fd8 <CyU3PDebugPrint>
			  		 break;
40006a74:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a78:	e1a0600c 	mov	r6, ip
40006a7c:	e1a0800c 	mov	r8, ip
40006a80:	eafffe68 	b	40006428 <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a84:	e59f6294 	ldr	r6, [pc, #660]	; 40006d20 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006a88:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a8c:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006a90:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a94:	e3e01000 	mvn	r1, #0
40006a98:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006a9c:	eb000da0 	bl	4000a124 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006aa0:	e1a0200b 	mov	r2, fp
40006aa4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006aa8:	e3a01010 	mov	r1, #16
40006aac:	e1a00006 	mov	r0, r6
40006ab0:	e58da000 	str	sl, [sp]
40006ab4:	e58da004 	str	sl, [sp, #4]
40006ab8:	ebfff27e 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006abc:	e596001c 	ldr	r0, [r6, #28]
40006ac0:	eb000dcc 	bl	4000a1f8 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006ac4:	e3e01000 	mvn	r1, #0
40006ac8:	e596001c 	ldr	r0, [r6, #28]
40006acc:	eb000d94 	bl	4000a124 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006ad0:	e3a08001 	mov	r8, #1
40006ad4:	e3a01014 	mov	r1, #20
40006ad8:	e3a02027 	mov	r2, #39	; 0x27
40006adc:	e3a03030 	mov	r3, #48	; 0x30
40006ae0:	e1a00006 	mov	r0, r6
40006ae4:	e88d0500 	stm	sp, {r8, sl}
40006ae8:	ebfff272 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006aec:	e3a0c002 	mov	ip, #2
40006af0:	e3a01015 	mov	r1, #21
40006af4:	e3a02025 	mov	r2, #37	; 0x25
40006af8:	e3a03030 	mov	r3, #48	; 0x30
40006afc:	e1a00006 	mov	r0, r6
40006b00:	e58dc000 	str	ip, [sp]
40006b04:	e58da004 	str	sl, [sp, #4]
40006b08:	ebfff26a 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006b0c:	e596001c 	ldr	r0, [r6, #28]
40006b10:	eb000db8 	bl	4000a1f8 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006b14:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b18:	e1a0600c 	mov	r6, ip
40006b1c:	e3a08008 	mov	r8, #8
40006b20:	eafffe40 	b	40006428 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b24:	e59f81f4 	ldr	r8, [pc, #500]	; 40006d20 <CTControlHandle+0x984>
40006b28:	e3e01000 	mvn	r1, #0
40006b2c:	e598001c 	ldr	r0, [r8, #28]
40006b30:	eb000d7b 	bl	4000a124 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006b34:	e3a06000 	mov	r6, #0
40006b38:	e3a01014 	mov	r1, #20
40006b3c:	e3a02027 	mov	r2, #39	; 0x27
40006b40:	e3a03030 	mov	r3, #48	; 0x30
40006b44:	e1a00008 	mov	r0, r8
40006b48:	e58d6000 	str	r6, [sp]
40006b4c:	e58d6004 	str	r6, [sp, #4]
40006b50:	ebfff258 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006b54:	e3a01015 	mov	r1, #21
40006b58:	e3a02025 	mov	r2, #37	; 0x25
40006b5c:	e3a03030 	mov	r3, #48	; 0x30
40006b60:	e1a00008 	mov	r0, r8
40006b64:	e58d6000 	str	r6, [sp]
40006b68:	e58d6004 	str	r6, [sp, #4]
40006b6c:	ebfff251 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006b70:	e598001c 	ldr	r0, [r8, #28]
40006b74:	eb000d9f 	bl	4000a1f8 <_txe_mutex_put>
40006b78:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b7c:	e1a0600c 	mov	r6, ip
40006b80:	e3a08004 	mov	r8, #4
40006b84:	eafffe27 	b	40006428 <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b88:	e59fa190 	ldr	sl, [pc, #400]	; 40006d20 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006b8c:	e3a06000 	mov	r6, #0
40006b90:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b94:	e3e01000 	mvn	r1, #0
40006b98:	e59a001c 	ldr	r0, [sl, #28]
40006b9c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006ba0:	eb000d5f 	bl	4000a124 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006ba4:	e1a0200b 	mov	r2, fp
40006ba8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006bac:	e3a01010 	mov	r1, #16
40006bb0:	e1a0000a 	mov	r0, sl
40006bb4:	e58d6000 	str	r6, [sp]
40006bb8:	e58d6004 	str	r6, [sp, #4]
40006bbc:	ebfff23d 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006bc0:	e59a001c 	ldr	r0, [sl, #28]
40006bc4:	eb000d8b 	bl	4000a1f8 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006bc8:	e3e01000 	mvn	r1, #0
40006bcc:	e59a001c 	ldr	r0, [sl, #28]
40006bd0:	eb000d53 	bl	4000a124 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006bd4:	e3a01014 	mov	r1, #20
40006bd8:	e3a02027 	mov	r2, #39	; 0x27
40006bdc:	e3a03030 	mov	r3, #48	; 0x30
40006be0:	e1a0000a 	mov	r0, sl
40006be4:	e58d6000 	str	r6, [sp]
40006be8:	e58d6004 	str	r6, [sp, #4]
40006bec:	ebfff231 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006bf0:	e3a01015 	mov	r1, #21
40006bf4:	e3a02025 	mov	r2, #37	; 0x25
40006bf8:	e3a03030 	mov	r3, #48	; 0x30
40006bfc:	e1a0000a 	mov	r0, sl
40006c00:	e58d6000 	str	r6, [sp]
40006c04:	e58d6004 	str	r6, [sp, #4]
40006c08:	ebfff22a 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006c0c:	e59a001c 	ldr	r0, [sl, #28]
40006c10:	eb000d78 	bl	4000a1f8 <_txe_mutex_put>
40006c14:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c18:	e1a0600c 	mov	r6, ip
40006c1c:	e3a08002 	mov	r8, #2
40006c20:	eafffe00 	b	40006428 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c24:	e59f60f4 	ldr	r6, [pc, #244]	; 40006d20 <CTControlHandle+0x984>
40006c28:	e3e01000 	mvn	r1, #0
40006c2c:	e596001c 	ldr	r0, [r6, #28]
40006c30:	eb000d3b 	bl	4000a124 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006c34:	e3a08000 	mov	r8, #0
40006c38:	e3a0a001 	mov	sl, #1
40006c3c:	e3a01014 	mov	r1, #20
40006c40:	e3a02027 	mov	r2, #39	; 0x27
40006c44:	e3a03030 	mov	r3, #48	; 0x30
40006c48:	e1a00006 	mov	r0, r6
40006c4c:	e58d8004 	str	r8, [sp, #4]
40006c50:	e58da000 	str	sl, [sp]
40006c54:	ebfff217 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006c58:	e3a0c002 	mov	ip, #2
40006c5c:	e3a01015 	mov	r1, #21
40006c60:	e3a02025 	mov	r2, #37	; 0x25
40006c64:	e3a03030 	mov	r3, #48	; 0x30
40006c68:	e1a00006 	mov	r0, r6
40006c6c:	e58dc000 	str	ip, [sp]
40006c70:	e58d8004 	str	r8, [sp, #4]
40006c74:	ebfff20f 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006c78:	e596001c 	ldr	r0, [r6, #28]
40006c7c:	eb000d5d 	bl	4000a1f8 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006c80:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c84:	e1a0600c 	mov	r6, ip
40006c88:	e1a0800a 	mov	r8, sl
40006c8c:	eafffde5 	b	40006428 <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006c90:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c94:	e1a08000 	mov	r8, r0
40006c98:	e1a0600c 	mov	r6, ip
40006c9c:	eafffde1 	b	40006428 <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006ca0:	e3a00000 	mov	r0, #0
40006ca4:	e3a01001 	mov	r1, #1
40006ca8:	e1a02000 	mov	r2, r0
40006cac:	eb005c31 	bl	4001dd78 <CyU3PUsbStall>
40006cb0:	eafffe95 	b	4000670c <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006cb4:	e3a01001 	mov	r1, #1
40006cb8:	e1a02000 	mov	r2, r0
40006cbc:	eb005c2d 	bl	4001dd78 <CyU3PUsbStall>
40006cc0:	eafffe91 	b	4000670c <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006cc4:	e3a0e008 	mov	lr, #8
40006cc8:	e3a0c000 	mov	ip, #0
40006ccc:	e1a00006 	mov	r0, r6
40006cd0:	e3a01017 	mov	r1, #23
40006cd4:	e1a0200b 	mov	r2, fp
40006cd8:	e58de000 	str	lr, [sp]
40006cdc:	e58dc004 	str	ip, [sp, #4]
40006ce0:	ebfff1f4 	bl	400034b8 <cmdSet>
40006ce4:	eafffe5e 	b	40006664 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006ce8:	e3a08004 	mov	r8, #4
40006cec:	e3a0e000 	mov	lr, #0
40006cf0:	e1a00006 	mov	r0, r6
40006cf4:	e3a01017 	mov	r1, #23
40006cf8:	e1a0200b 	mov	r2, fp
40006cfc:	e88d4100 	stm	sp, {r8, lr}
40006d00:	ebfff1ec 	bl	400034b8 <cmdSet>
40006d04:	eafffe56 	b	40006664 <CTControlHandle+0x2c8>
40006d08:	4003310c 	.word	0x4003310c
40006d0c:	40030000 	.word	0x40030000
40006d10:	40030f90 	.word	0x40030f90
40006d14:	400115e4 	.word	0x400115e4
40006d18:	40011608 	.word	0x40011608
40006d1c:	40030fe8 	.word	0x40030fe8
40006d20:	40032ec4 	.word	0x40032ec4
40006d24:	40011598 	.word	0x40011598
40006d28:	0000ffff 	.word	0x0000ffff
40006d2c:	400115c0 	.word	0x400115c0

40006d30 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006d30:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006d34:	e59f4a2c 	ldr	r4, [pc, #2604]	; 40007768 <UVCAppEP0Thread_Entry+0xa38>
40006d38:	e59f6a2c 	ldr	r6, [pc, #2604]	; 4000776c <UVCAppEP0Thread_Entry+0xa3c>
40006d3c:	e59faa2c 	ldr	sl, [pc, #2604]	; 40007770 <UVCAppEP0Thread_Entry+0xa40>
40006d40:	e59f9a2c 	ldr	r9, [pc, #2604]	; 40007774 <UVCAppEP0Thread_Entry+0xa44>
40006d44:	e59f8a2c 	ldr	r8, [pc, #2604]	; 40007778 <UVCAppEP0Thread_Entry+0xa48>
40006d48:	e59f7a2c 	ldr	r7, [pc, #2604]	; 4000777c <UVCAppEP0Thread_Entry+0xa4c>
40006d4c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006d50:	e1a05004 	mov	r5, r4
40006d54:	e3e0c000 	mvn	ip, #0
40006d58:	e59f0a08 	ldr	r0, [pc, #2568]	; 40007768 <UVCAppEP0Thread_Entry+0xa38>
40006d5c:	e3a0104c 	mov	r1, #76	; 0x4c
40006d60:	e3a02001 	mov	r2, #1
40006d64:	e28d3030 	add	r3, sp, #48	; 0x30
40006d68:	e58dc000 	str	ip, [sp]
40006d6c:	eb000c24 	bl	40009e04 <_txe_event_flags_get>
40006d70:	e3500000 	cmp	r0, #0
40006d74:	1a000030 	bne	40006e3c <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006d78:	e5953040 	ldr	r3, [r5, #64]	; 0x40
40006d7c:	e3530000 	cmp	r3, #0
40006d80:	0a000089 	beq	40006fac <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006d84:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d88:	e313000c 	tst	r3, #12
40006d8c:	1a000072 	bne	40006f5c <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006d90:	e3130004 	tst	r3, #4
40006d94:	0a00001c 	beq	40006e0c <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006d98:	e1d8e0b0 	ldrh	lr, [r8]
40006d9c:	e1a0242e 	lsr	r2, lr, #8
40006da0:	e3520003 	cmp	r2, #3
40006da4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006da8:	ea000012 	b	40006df8 <UVCAppEP0Thread_Entry+0xc8>
40006dac:	40006df8 	.word	0x40006df8
40006db0:	40006edc 	.word	0x40006edc
40006db4:	40006dbc 	.word	0x40006dbc
40006db8:	40006f18 	.word	0x40006f18
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006dbc:	e1d920b0 	ldrh	r2, [r9]
40006dc0:	e3520c06 	cmp	r2, #1536	; 0x600
40006dc4:	0a0001e0 	beq	4000754c <UVCAppEP0Thread_Entry+0x81c>
40006dc8:	8a0000d7 	bhi	4000712c <UVCAppEP0Thread_Entry+0x3fc>
40006dcc:	e3520c03 	cmp	r2, #768	; 0x300
40006dd0:	0a0001d9 	beq	4000753c <UVCAppEP0Thread_Entry+0x80c>
40006dd4:	8a0001d0 	bhi	4000751c <UVCAppEP0Thread_Entry+0x7ec>
40006dd8:	e3520c01 	cmp	r2, #256	; 0x100
40006ddc:	0a00016f 	beq	400073a0 <UVCAppEP0Thread_Entry+0x670>
40006de0:	e3520c02 	cmp	r2, #512	; 0x200
40006de4:	0a000169 	beq	40007390 <UVCAppEP0Thread_Entry+0x660>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006de8:	e59f1990 	ldr	r1, [pc, #2448]	; 40007780 <UVCAppEP0Thread_Entry+0xa50>
40006dec:	e5da3000 	ldrb	r3, [sl]
40006df0:	e3a00004 	mov	r0, #4
40006df4:	eb003077 	bl	40012fd8 <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006df8:	e3a00000 	mov	r0, #0
40006dfc:	e3a01001 	mov	r1, #1
40006e00:	e1a02000 	mov	r2, r0
40006e04:	eb005bdb 	bl	4001dd78 <CyU3PUsbStall>
40006e08:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006e0c:	e3130008 	tst	r3, #8
40006e10:	0a000007 	beq	40006e34 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006e14:	e1d830b0 	ldrh	r3, [r8]
40006e18:	e3530001 	cmp	r3, #1
40006e1c:	0a000068 	beq	40006fc4 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006e20:	e3a00000 	mov	r0, #0
40006e24:	e3a01001 	mov	r1, #1
40006e28:	e1a02000 	mov	r2, r0
40006e2c:	eb005bd1 	bl	4001dd78 <CyU3PUsbStall>
40006e30:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006e34:	e3130040 	tst	r3, #64	; 0x40
40006e38:	1a000001 	bne	40006e44 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006e3c:	eb000ed9 	bl	4000a9a8 <_txe_thread_relinquish>
    }
40006e40:	eaffffc3 	b	40006d54 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006e44:	e3a00018 	mov	r0, #24
40006e48:	e28d102c 	add	r1, sp, #44	; 0x2c
40006e4c:	eb006f91 	bl	40022c98 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006e50:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006e54:	e3520000 	cmp	r2, #0
40006e58:	0a00006d 	beq	40007014 <UVCAppEP0Thread_Entry+0x2e4>
40006e5c:	e5d6367b 	ldrb	r3, [r6, #1659]	; 0x67b
40006e60:	e3530000 	cmp	r3, #0
40006e64:	1afffff4 	bne	40006e3c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006e68:	e5972000 	ldr	r2, [r7]
40006e6c:	e3a0b002 	mov	fp, #2
40006e70:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e74:	e5971000 	ldr	r1, [r7]
40006e78:	e3a0b001 	mov	fp, #1
40006e7c:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e80:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e84:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e88:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006e8c:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e90:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006e94:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006e98:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e9c:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ea0:	e59f08dc 	ldr	r0, [pc, #2268]	; 40007784 <UVCAppEP0Thread_Entry+0xa54>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006ea4:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006ea8:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;
40006eac:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006eb0:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006eb4:	eb003fc3 	bl	40016dc8 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006eb8:	e59f08c4 	ldr	r0, [pc, #2244]	; 40007784 <UVCAppEP0Thread_Entry+0xa54>
40006ebc:	e28d1020 	add	r1, sp, #32
40006ec0:	eb003f32 	bl	40016b90 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006ec4:	e2502000 	subs	r2, r0, #0
40006ec8:	1a00016e 	bne	40007488 <UVCAppEP0Thread_Entry+0x758>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006ecc:	e59f3898 	ldr	r3, [pc, #2200]	; 4000776c <UVCAppEP0Thread_Entry+0xa3c>
40006ed0:	e5c3b67b 	strb	fp, [r3, #1659]	; 0x67b
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006ed4:	eb000eb3 	bl	4000a9a8 <_txe_thread_relinquish>
40006ed8:	eaffff9d 	b	40006d54 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006edc:	e1d920b0 	ldrh	r2, [r9]
40006ee0:	e3520c06 	cmp	r2, #1536	; 0x600
40006ee4:	0a0000dc 	beq	4000725c <UVCAppEP0Thread_Entry+0x52c>
40006ee8:	8a00009a 	bhi	40007158 <UVCAppEP0Thread_Entry+0x428>
40006eec:	e3520c03 	cmp	r2, #768	; 0x300
40006ef0:	0a00011e 	beq	40007370 <UVCAppEP0Thread_Entry+0x640>
40006ef4:	8a000115 	bhi	40007350 <UVCAppEP0Thread_Entry+0x620>
40006ef8:	e3520c01 	cmp	r2, #256	; 0x100
40006efc:	0a00015d 	beq	40007478 <UVCAppEP0Thread_Entry+0x748>
40006f00:	e3520c02 	cmp	r2, #512	; 0x200
40006f04:	1affffb7 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006f08:	e3a00001 	mov	r0, #1
40006f0c:	ebfffd22 	bl	4000639c <CTControlHandle>
40006f10:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f14:	eaffffbc 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f18:	e1d930b0 	ldrh	r3, [r9]
40006f1c:	e3530c09 	cmp	r3, #2304	; 0x900
40006f20:	0a0001fd 	beq	4000771c <UVCAppEP0Thread_Entry+0x9ec>
40006f24:	8a000093 	bhi	40007178 <UVCAppEP0Thread_Entry+0x448>
40006f28:	e3530b01 	cmp	r3, #1024	; 0x400
40006f2c:	0a0001f6 	beq	4000770c <UVCAppEP0Thread_Entry+0x9dc>
40006f30:	8a00018e 	bhi	40007570 <UVCAppEP0Thread_Entry+0x840>
40006f34:	e3530c02 	cmp	r3, #512	; 0x200
40006f38:	0a0001ef 	beq	400076fc <UVCAppEP0Thread_Entry+0x9cc>
40006f3c:	e3530c03 	cmp	r3, #768	; 0x300
40006f40:	0a0001e9 	beq	400076ec <UVCAppEP0Thread_Entry+0x9bc>
40006f44:	e3530c01 	cmp	r3, #256	; 0x100
40006f48:	1affffaa 	bne	40006df8 <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006f4c:	e3a00010 	mov	r0, #16
40006f50:	ebfff950 	bl	40005498 <ControlHandle>
40006f54:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f58:	eaffffab 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006f5c:	e59fb824 	ldr	fp, [pc, #2084]	; 40007788 <UVCAppEP0Thread_Entry+0xa58>
40006f60:	e1d9c0b0 	ldrh	ip, [r9]
40006f64:	e1d800b0 	ldrh	r0, [r8]
40006f68:	e59f181c 	ldr	r1, [pc, #2076]	; 4000778c <UVCAppEP0Thread_Entry+0xa5c>
40006f6c:	e5dbe000 	ldrb	lr, [fp]
40006f70:	e5dab000 	ldrb	fp, [sl]
40006f74:	e58d000c 	str	r0, [sp, #12]
40006f78:	e58dc008 	str	ip, [sp, #8]
40006f7c:	e1d1c0b0 	ldrh	ip, [r1]
40006f80:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006f84:	e58db004 	str	fp, [sp, #4]
40006f88:	e3a00004 	mov	r0, #4
40006f8c:	e59f17fc 	ldr	r1, [pc, #2044]	; 40007790 <UVCAppEP0Thread_Entry+0xa60>
40006f90:	e3a0b000 	mov	fp, #0
40006f94:	e58de000 	str	lr, [sp]
40006f98:	e58dc010 	str	ip, [sp, #16]
40006f9c:	e58db014 	str	fp, [sp, #20]
40006fa0:	eb00300c 	bl	40012fd8 <CyU3PDebugPrint>
40006fa4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006fa8:	eaffff78 	b	40006d90 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006fac:	eb00574a 	bl	4001ccdc <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006fb0:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006fb4:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006fb8:	13a00001 	movne	r0, #1
40006fbc:	15850040 	strne	r0, [r5, #64]	; 0x40
40006fc0:	eaffff6f 	b	40006d84 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006fc4:	e1d920b0 	ldrh	r2, [r9]
40006fc8:	e3520c03 	cmp	r2, #768	; 0x300
40006fcc:	0a000088 	beq	400071f4 <UVCAppEP0Thread_Entry+0x4c4>
40006fd0:	8a000033 	bhi	400070a4 <UVCAppEP0Thread_Entry+0x374>
40006fd4:	e3520c01 	cmp	r2, #256	; 0x100
40006fd8:	0a000092 	beq	40007228 <UVCAppEP0Thread_Entry+0x4f8>
40006fdc:	e3520c02 	cmp	r2, #512	; 0x200
40006fe0:	1affff8e 	bne	40006e20 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006fe4:	e5da3000 	ldrb	r3, [sl]
40006fe8:	e3530081 	cmp	r3, #129	; 0x81
40006fec:	0a0001b6 	beq	400076cc <UVCAppEP0Thread_Entry+0x99c>
40006ff0:	8a00012d 	bhi	400074ac <UVCAppEP0Thread_Entry+0x77c>
40006ff4:	e3530001 	cmp	r3, #1
40006ff8:	0a0001a2 	beq	40007688 <UVCAppEP0Thread_Entry+0x958>
                            }
                        }
                        break;

                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006ffc:	e3a00000 	mov	r0, #0
40007000:	e3a01001 	mov	r1, #1
40007004:	e1a02000 	mov	r2, r0
40007008:	eb005b5a 	bl	4001dd78 <CyU3PUsbStall>
4000700c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007010:	eaffff87 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40007014:	e5d6e67b 	ldrb	lr, [r6, #1659]	; 0x67b
40007018:	e35e0000 	cmp	lr, #0
4000701c:	0affff86 	beq	40006e3c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40007020:	e5973000 	ldr	r3, [r7]
40007024:	e3a0b002 	mov	fp, #2
40007028:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
4000702c:	e5971000 	ldr	r1, [r7]
40007030:	e3a0b001 	mov	fp, #1
40007034:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40007038:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
4000703c:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40007040:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40007044:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40007048:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
4000704c:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40007050:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40007054:	e1a0c002 	mov	ip, r2
40007058:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
4000705c:	e59f0720 	ldr	r0, [pc, #1824]	; 40007784 <UVCAppEP0Thread_Entry+0xa54>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40007060:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40007064:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40007068:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
4000706c:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40007070:	e58dc01c 	str	ip, [sp, #28]
40007074:	eb003f53 	bl	40016dc8 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40007078:	e59f0704 	ldr	r0, [pc, #1796]	; 40007784 <UVCAppEP0Thread_Entry+0xa54>
4000707c:	e28d1020 	add	r1, sp, #32
40007080:	eb003ec2 	bl	40016b90 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40007084:	e59d301c 	ldr	r3, [sp, #28]
40007088:	e2502000 	subs	r2, r0, #0
4000708c:	1a0000c7 	bne	400073b0 <UVCAppEP0Thread_Entry+0x680>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40007090:	e59f26d4 	ldr	r2, [pc, #1748]	; 4000776c <UVCAppEP0Thread_Entry+0xa3c>
					stiflag = CyTrue;
40007094:	e584b09c 	str	fp, [r4, #156]	; 0x9c
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40007098:	e5c2367b 	strb	r3, [r2, #1659]	; 0x67b
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
4000709c:	eb000e41 	bl	4000a9a8 <_txe_thread_relinquish>
400070a0:	eaffff2b 	b	40006d54 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
400070a4:	e3520b01 	cmp	r2, #1024	; 0x400
400070a8:	0a00003f 	beq	400071ac <UVCAppEP0Thread_Entry+0x47c>
400070ac:	e3520c05 	cmp	r2, #1280	; 0x500
400070b0:	1affff5a 	bne	40006e20 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
400070b4:	e5da2000 	ldrb	r2, [sl]
400070b8:	e3520081 	cmp	r2, #129	; 0x81
400070bc:	0a000182 	beq	400076cc <UVCAppEP0Thread_Entry+0x99c>
400070c0:	8a000125 	bhi	4000755c <UVCAppEP0Thread_Entry+0x82c>
400070c4:	e3520001 	cmp	r2, #1
400070c8:	1affff54 	bne	40006e20 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400070cc:	e3a00020 	mov	r0, #32
400070d0:	e59f16bc 	ldr	r1, [pc, #1724]	; 40007794 <UVCAppEP0Thread_Entry+0xa64>
400070d4:	e28d2036 	add	r2, sp, #54	; 0x36
400070d8:	eb00568d 	bl	4001cb14 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400070dc:	e3500000 	cmp	r0, #0
400070e0:	1a000162 	bne	40007670 <UVCAppEP0Thread_Entry+0x940>
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
400070e4:	e3a02000 	mov	r2, #0
400070e8:	e59f0678 	ldr	r0, [pc, #1656]	; 40007768 <UVCAppEP0Thread_Entry+0xa38>
400070ec:	e3a01080 	mov	r1, #128	; 0x80
400070f0:	eb000b73 	bl	40009ec4 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
400070f4:	e2502000 	subs	r2, r0, #0
400070f8:	0a000002 	beq	40007108 <UVCAppEP0Thread_Entry+0x3d8>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
400070fc:	e3a00004 	mov	r0, #4
40007100:	e59f1690 	ldr	r1, [pc, #1680]	; 40007798 <UVCAppEP0Thread_Entry+0xa68>
40007104:	eb002fb3 	bl	40012fd8 <CyU3PDebugPrint>
                            }
    #endif
                            stiflag = CyTrue;//set still flag
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40007108:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
4000710c:	e3a00004 	mov	r0, #4
40007110:	e59f1684 	ldr	r1, [pc, #1668]	; 4000779c <UVCAppEP0Thread_Entry+0xa6c>
40007114:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            stiflag = CyTrue;//set still flag
40007118:	e3a0b001 	mov	fp, #1
4000711c:	e584b09c 	str	fp, [r4, #156]	; 0x9c
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40007120:	eb002fac 	bl	40012fd8 <CyU3PDebugPrint>
40007124:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007128:	eaffff41 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000712c:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007130:	0a0000f1 	beq	400074fc <UVCAppEP0Thread_Entry+0x7cc>
40007134:	8a0000e6 	bhi	400074d4 <UVCAppEP0Thread_Entry+0x7a4>
40007138:	e3520c07 	cmp	r2, #1792	; 0x700
4000713c:	0a0000e0 	beq	400074c4 <UVCAppEP0Thread_Entry+0x794>
40007140:	e3520b02 	cmp	r2, #2048	; 0x800
40007144:	1affff27 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40007148:	e3a00007 	mov	r0, #7
4000714c:	ebfff8d1 	bl	40005498 <ControlHandle>
40007150:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007154:	eaffff2c 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007158:	e3520c09 	cmp	r2, #2304	; 0x900
4000715c:	0a000122 	beq	400075ec <UVCAppEP0Thread_Entry+0x8bc>
40007160:	8a000117 	bhi	400075c4 <UVCAppEP0Thread_Entry+0x894>
40007164:	e3520c07 	cmp	r2, #1792	; 0x700
40007168:	0a000109 	beq	40007594 <UVCAppEP0Thread_Entry+0x864>
4000716c:	e3520b02 	cmp	r2, #2048	; 0x800
40007170:	1affff1c 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>
40007174:	eaffff24 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007178:	e3530c0f 	cmp	r3, #3840	; 0xf00
4000717c:	0a000137 	beq	40007660 <UVCAppEP0Thread_Entry+0x930>
40007180:	8a000039 	bhi	4000726c <UVCAppEP0Thread_Entry+0x53c>
40007184:	e3530c0b 	cmp	r3, #2816	; 0xb00
40007188:	0a000130 	beq	40007650 <UVCAppEP0Thread_Entry+0x920>
4000718c:	e3530c0d 	cmp	r3, #3328	; 0xd00
40007190:	0a00012a 	beq	40007640 <UVCAppEP0Thread_Entry+0x910>
40007194:	e3530c0a 	cmp	r3, #2560	; 0xa00
40007198:	1affff16 	bne	40006df8 <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(1||CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
4000719c:	e3a00019 	mov	r0, #25
400071a0:	ebfff8bc 	bl	40005498 <ControlHandle>
400071a4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071a8:	eaffff17 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400071ac:	e5dab000 	ldrb	fp, [sl]
400071b0:	e35b0081 	cmp	fp, #129	; 0x81
400071b4:	0a000013 	beq	40007208 <UVCAppEP0Thread_Entry+0x4d8>
400071b8:	8a000085 	bhi	400073d4 <UVCAppEP0Thread_Entry+0x6a4>
400071bc:	e35b0001 	cmp	fp, #1
400071c0:	1affff8d 	bne	40006ffc <UVCAppEP0Thread_Entry+0x2cc>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400071c4:	e28d2036 	add	r2, sp, #54	; 0x36
400071c8:	e3a00020 	mov	r0, #32
400071cc:	e59f15c0 	ldr	r1, [pc, #1472]	; 40007794 <UVCAppEP0Thread_Entry+0xa64>
400071d0:	eb00564f 	bl	4001cb14 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400071d4:	e2502000 	subs	r2, r0, #0
400071d8:	1affff14 	bne	40006e30 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
400071dc:	e59f0584 	ldr	r0, [pc, #1412]	; 40007768 <UVCAppEP0Thread_Entry+0xa38>
400071e0:	e1a0100b 	mov	r1, fp
400071e4:	eb000b36 	bl	40009ec4 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
400071e8:	e2502000 	subs	r2, r0, #0
400071ec:	0affff0f 	beq	40006e30 <UVCAppEP0Thread_Entry+0x100>
400071f0:	ea000130 	b	400076b8 <UVCAppEP0Thread_Entry+0x988>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400071f4:	e5da2000 	ldrb	r2, [sl]
400071f8:	e3520083 	cmp	r2, #131	; 0x83
400071fc:	8a000098 	bhi	40007464 <UVCAppEP0Thread_Entry+0x734>
40007200:	e3520081 	cmp	r2, #129	; 0x81
40007204:	3a00007d 	bcc	40007400 <UVCAppEP0Thread_Entry+0x6d0>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007208:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
4000720c:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007210:	e3530003 	cmp	r3, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40007214:	059f1584 	ldreq	r1, [pc, #1412]	; 400077a0 <UVCAppEP0Thread_Entry+0xa70>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40007218:	159f1584 	ldrne	r1, [pc, #1412]	; 400077a4 <UVCAppEP0Thread_Entry+0xa74>
4000721c:	eb0058aa 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40007220:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007224:	eaffff02 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007228:	e5da2000 	ldrb	r2, [sl]
4000722c:	e3520083 	cmp	r2, #131	; 0x83
40007230:	8a00002f 	bhi	400072f4 <UVCAppEP0Thread_Entry+0x5c4>
40007234:	e3520081 	cmp	r2, #129	; 0x81
40007238:	3a000014 	bcc	40007290 <UVCAppEP0Thread_Entry+0x560>
                    break;
                case CY_FX_USB_UVC_GET_CUR_REQ:
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
4000723c:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
40007240:	e3530003 	cmp	r3, #3
40007244:	0a0000f8 	beq	4000762c <UVCAppEP0Thread_Entry+0x8fc>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007248:	e3a0001a 	mov	r0, #26
4000724c:	e59f1554 	ldr	r1, [pc, #1364]	; 400077a8 <UVCAppEP0Thread_Entry+0xa78>
40007250:	eb00589d 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40007254:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007258:	eafffef5 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
4000725c:	e3a00005 	mov	r0, #5
40007260:	ebfffc4d 	bl	4000639c <CTControlHandle>
40007264:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007268:	eafffee7 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000726c:	e3530c11 	cmp	r3, #4352	; 0x1100
40007270:	0a0000e9 	beq	4000761c <UVCAppEP0Thread_Entry+0x8ec>
40007274:	8a00002d 	bhi	40007330 <UVCAppEP0Thread_Entry+0x600>
40007278:	e3530a01 	cmp	r3, #4096	; 0x1000
4000727c:	1afffedd 	bne	40006df8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007280:	e3a0001f 	mov	r0, #31
40007284:	ebfff883 	bl	40005498 <ControlHandle>
40007288:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000728c:	eafffede 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007290:	e3520001 	cmp	r2, #1
40007294:	1affff58 	bne	40006ffc <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007298:	e3a00020 	mov	r0, #32
4000729c:	e59f14f0 	ldr	r1, [pc, #1264]	; 40007794 <UVCAppEP0Thread_Entry+0xa64>
400072a0:	e28d2036 	add	r2, sp, #54	; 0x36
400072a4:	eb00561a 	bl	4001cb14 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400072a8:	e3500000 	cmp	r0, #0
400072ac:	1afffedf 	bne	40006e30 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400072b0:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
400072b4:	e3510003 	cmp	r1, #3
400072b8:	1afffedc 	bne	40006e30 <UVCAppEP0Thread_Entry+0x100>
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
400072bc:	e5d43081 	ldrb	r3, [r4, #129]	; 0x81
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
400072c0:	e5d4e07e 	ldrb	lr, [r4, #126]	; 0x7e
                            glProbeCtrlFull[3] = glCommitCtrl[3];
400072c4:	e5d4c07f 	ldrb	ip, [r4, #127]	; 0x7f
                            glProbeCtrlFull[4] = glCommitCtrl[4];
400072c8:	e5d40080 	ldrb	r0, [r4, #128]	; 0x80
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
400072cc:	e5d42082 	ldrb	r2, [r4, #130]	; 0x82
                            glProbeCtrlFull[7] = glCommitCtrl[7];
400072d0:	e5d4b083 	ldrb	fp, [r4, #131]	; 0x83
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
400072d4:	e5c63615 	strb	r3, [r6, #1557]	; 0x615
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
400072d8:	e5c6e612 	strb	lr, [r6, #1554]	; 0x612
                            glProbeCtrlFull[3] = glCommitCtrl[3];
400072dc:	e5c6c613 	strb	ip, [r6, #1555]	; 0x613
                            glProbeCtrlFull[4] = glCommitCtrl[4];
400072e0:	e5c60614 	strb	r0, [r6, #1556]	; 0x614
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
400072e4:	e5c62616 	strb	r2, [r6, #1558]	; 0x616
                            glProbeCtrlFull[7] = glCommitCtrl[7];
400072e8:	e5c6b617 	strb	fp, [r6, #1559]	; 0x617
400072ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072f0:	eafffecf 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400072f4:	e3520086 	cmp	r2, #134	; 0x86
400072f8:	0a000039 	beq	400073e4 <UVCAppEP0Thread_Entry+0x6b4>
400072fc:	e3520087 	cmp	r2, #135	; 0x87
40007300:	0affffcd 	beq	4000723c <UVCAppEP0Thread_Entry+0x50c>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007304:	e3520085 	cmp	r2, #133	; 0x85
40007308:	1affff3b 	bne	40006ffc <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000730c:	e59f1498 	ldr	r1, [pc, #1176]	; 400077ac <UVCAppEP0Thread_Entry+0xa7c>
40007310:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
40007314:	e3a0301a 	mov	r3, #26
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
40007318:	e3a02000 	mov	r2, #0
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
4000731c:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
40007320:	e5c42059 	strb	r2, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007324:	eb005868 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40007328:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000732c:	eafffec0 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007330:	e3530c12 	cmp	r3, #4608	; 0x1200
40007334:	0a000107 	beq	40007758 <UVCAppEP0Thread_Entry+0xa28>
40007338:	e3530c13 	cmp	r3, #4864	; 0x1300
4000733c:	1afffead 	bne	40006df8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID2-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCGridCtlID2);
40007340:	e3a00022 	mov	r0, #34	; 0x22
40007344:	ebfff853 	bl	40005498 <ControlHandle>
40007348:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000734c:	eafffeae 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007350:	e3520b01 	cmp	r2, #1024	; 0x400
40007354:	0a000009 	beq	40007380 <UVCAppEP0Thread_Entry+0x650>
40007358:	e3520c05 	cmp	r2, #1280	; 0x500
4000735c:	1afffea1 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007360:	e3a00004 	mov	r0, #4
40007364:	ebfffc0c 	bl	4000639c <CTControlHandle>
40007368:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000736c:	eafffea6 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007370:	e3a00002 	mov	r0, #2
40007374:	ebfffc08 	bl	4000639c <CTControlHandle>
40007378:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000737c:	eafffea2 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007380:	e3a00003 	mov	r0, #3
40007384:	ebfffc04 	bl	4000639c <CTControlHandle>
40007388:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000738c:	eafffe9e 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007390:	e3a00001 	mov	r0, #1
40007394:	ebfff83f 	bl	40005498 <ControlHandle>
40007398:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000739c:	eafffe9a 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
400073a0:	e3a00000 	mov	r0, #0
400073a4:	ebfff83b 	bl	40005498 <ControlHandle>
400073a8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073ac:	eafffe96 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400073b0:	e3a00004 	mov	r0, #4
400073b4:	e59f13f4 	ldr	r1, [pc, #1012]	; 400077b0 <UVCAppEP0Thread_Entry+0xa80>
400073b8:	eb002f06 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400073bc:	e59f13f0 	ldr	r1, [pc, #1008]	; 400077b4 <UVCAppEP0Thread_Entry+0xa84>
400073c0:	e3a00004 	mov	r0, #4
400073c4:	eb002f03 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400073c8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400073cc:	eb0005c4 	bl	40008ae4 <_tx_thread_sleep>
400073d0:	eafffff9 	b	400073bc <UVCAppEP0Thread_Entry+0x68c>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400073d4:	e35b0085 	cmp	fp, #133	; 0x85
400073d8:	0affffcb 	beq	4000730c <UVCAppEP0Thread_Entry+0x5dc>
400073dc:	e35b0086 	cmp	fp, #134	; 0x86
400073e0:	1affff05 	bne	40006ffc <UVCAppEP0Thread_Entry+0x2cc>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400073e4:	e1a00003 	mov	r0, r3
        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400073e8:	e59f13bc 	ldr	r1, [pc, #956]	; 400077ac <UVCAppEP0Thread_Entry+0xa7c>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400073ec:	e3a0b003 	mov	fp, #3
400073f0:	e5c4b058 	strb	fp, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400073f4:	eb005834 	bl	4001d4cc <CyU3PUsbSendEP0Data>
400073f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073fc:	eafffe8c 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007400:	e3520001 	cmp	r2, #1
40007404:	1afffefc 	bne	40006ffc <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007408:	e3a00020 	mov	r0, #32
4000740c:	e59f1380 	ldr	r1, [pc, #896]	; 40007794 <UVCAppEP0Thread_Entry+0xa64>
40007410:	e28d2036 	add	r2, sp, #54	; 0x36
40007414:	eb0055be 	bl	4001cb14 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007418:	e3500000 	cmp	r0, #0
4000741c:	1afffe83 	bne	40006e30 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
40007420:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
40007424:	e3510003 	cmp	r1, #3
40007428:	1afffe80 	bne	40006e30 <UVCAppEP0Thread_Entry+0x100>
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
4000742c:	e5d53082 	ldrb	r3, [r5, #130]	; 0x82
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007430:	e5d5e07d 	ldrb	lr, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007434:	e5d5c07e 	ldrb	ip, [r5, #126]	; 0x7e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007438:	e5d5007f 	ldrb	r0, [r5, #127]	; 0x7f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
4000743c:	e5d5b080 	ldrb	fp, [r5, #128]	; 0x80
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007440:	e5d52081 	ldrb	r2, [r5, #129]	; 0x81
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007444:	e5c6366a 	strb	r3, [r6, #1642]	; 0x66a
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007448:	e5c6e665 	strb	lr, [r6, #1637]	; 0x665
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
4000744c:	e5c6c666 	strb	ip, [r6, #1638]	; 0x666
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007450:	e5c60667 	strb	r0, [r6, #1639]	; 0x667
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007454:	e5c6b668 	strb	fp, [r6, #1640]	; 0x668
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007458:	e5c62669 	strb	r2, [r6, #1641]	; 0x669
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
4000745c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007460:	eafffe73 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007464:	e3520086 	cmp	r2, #134	; 0x86
40007468:	0affffdd 	beq	400073e4 <UVCAppEP0Thread_Entry+0x6b4>
4000746c:	e3520087 	cmp	r2, #135	; 0x87
40007470:	1affffa3 	bne	40007304 <UVCAppEP0Thread_Entry+0x5d4>
40007474:	eaffff63 	b	40007208 <UVCAppEP0Thread_Entry+0x4d8>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
40007478:	e3a00000 	mov	r0, #0
4000747c:	ebfffbc6 	bl	4000639c <CTControlHandle>
40007480:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007484:	eafffe60 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007488:	e3a00004 	mov	r0, #4
4000748c:	e59f131c 	ldr	r1, [pc, #796]	; 400077b0 <UVCAppEP0Thread_Entry+0xa80>
40007490:	eb002ed0 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007494:	e59f1318 	ldr	r1, [pc, #792]	; 400077b4 <UVCAppEP0Thread_Entry+0xa84>
40007498:	e3a00004 	mov	r0, #4
4000749c:	eb002ecd 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400074a0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400074a4:	eb00058e 	bl	40008ae4 <_tx_thread_sleep>
400074a8:	eafffff9 	b	40007494 <UVCAppEP0Thread_Entry+0x764>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
400074ac:	e3530085 	cmp	r3, #133	; 0x85
400074b0:	0affff95 	beq	4000730c <UVCAppEP0Thread_Entry+0x5dc>
400074b4:	e3530086 	cmp	r3, #134	; 0x86
400074b8:	1afffecf 	bne	40006ffc <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400074bc:	e3a00001 	mov	r0, #1
400074c0:	eaffffc8 	b	400073e8 <UVCAppEP0Thread_Entry+0x6b8>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
400074c4:	e3a00006 	mov	r0, #6
400074c8:	ebfff7f2 	bl	40005498 <ControlHandle>
400074cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074d0:	eafffe4d 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400074d4:	e3520c0d 	cmp	r2, #3328	; 0xd00
400074d8:	0a000007 	beq	400074fc <UVCAppEP0Thread_Entry+0x7cc>
400074dc:	e3520c0e 	cmp	r2, #3584	; 0xe00
400074e0:	0a000009 	beq	4000750c <UVCAppEP0Thread_Entry+0x7dc>
400074e4:	e3520b03 	cmp	r2, #3072	; 0xc00
400074e8:	1afffe3e 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
400074ec:	e3a0000b 	mov	r0, #11
400074f0:	ebfff7e8 	bl	40005498 <ControlHandle>
400074f4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074f8:	eafffe43 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
400074fc:	e3a00009 	mov	r0, #9
40007500:	ebfff7e4 	bl	40005498 <ControlHandle>
40007504:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007508:	eafffe3f 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
4000750c:	e3a0000e 	mov	r0, #14
40007510:	ebfff7e0 	bl	40005498 <ControlHandle>
40007514:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007518:	eafffe3b 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000751c:	e3520b01 	cmp	r2, #1024	; 0x400
40007520:	0afffe39 	beq	40006e0c <UVCAppEP0Thread_Entry+0xdc>
40007524:	e3520c05 	cmp	r2, #1280	; 0x500
40007528:	1afffe2e 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
4000752c:	e3a00004 	mov	r0, #4
40007530:	ebfff7d8 	bl	40005498 <ControlHandle>
40007534:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007538:	eafffe33 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
4000753c:	e3a00002 	mov	r0, #2
40007540:	ebfff7d4 	bl	40005498 <ControlHandle>
40007544:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007548:	eafffe2f 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
4000754c:	e3a00005 	mov	r0, #5
40007550:	ebfff7d0 	bl	40005498 <ControlHandle>
40007554:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007558:	eafffe2b 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
4000755c:	e3520085 	cmp	r2, #133	; 0x85
40007560:	0a000079 	beq	4000774c <UVCAppEP0Thread_Entry+0xa1c>
40007564:	e3520086 	cmp	r2, #134	; 0x86
40007568:	1afffe2c 	bne	40006e20 <UVCAppEP0Thread_Entry+0xf0>
4000756c:	eaffffd2 	b	400074bc <UVCAppEP0Thread_Entry+0x78c>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007570:	e3530c06 	cmp	r3, #1536	; 0x600
40007574:	0a000070 	beq	4000773c <UVCAppEP0Thread_Entry+0xa0c>
40007578:	8a000009 	bhi	400075a4 <UVCAppEP0Thread_Entry+0x874>
4000757c:	e3530c05 	cmp	r3, #1280	; 0x500
40007580:	1afffe1c 	bne	40006df8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
40007584:	e3a00014 	mov	r0, #20
40007588:	ebfff7c2 	bl	40005498 <ControlHandle>
4000758c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007590:	eafffe1d 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007594:	e3a00006 	mov	r0, #6
40007598:	ebfffb7f 	bl	4000639c <CTControlHandle>
4000759c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075a0:	eafffe19 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400075a4:	e3530c07 	cmp	r3, #1792	; 0x700
400075a8:	0a00005f 	beq	4000772c <UVCAppEP0Thread_Entry+0x9fc>
400075ac:	e3530b02 	cmp	r3, #2048	; 0x800
400075b0:	1afffe10 	bne	40006df8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
400075b4:	e3a00017 	mov	r0, #23
400075b8:	ebfff7b6 	bl	40005498 <ControlHandle>
400075bc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075c0:	eafffe11 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400075c4:	e3520c0b 	cmp	r2, #2816	; 0xb00
400075c8:	0a00000f 	beq	4000760c <UVCAppEP0Thread_Entry+0x8dc>
400075cc:	e3520b03 	cmp	r2, #3072	; 0xc00
400075d0:	0a000009 	beq	400075fc <UVCAppEP0Thread_Entry+0x8cc>
400075d4:	e3520c0a 	cmp	r2, #2560	; 0xa00
400075d8:	1afffe02 	bne	40006de8 <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
400075dc:	e3a00008 	mov	r0, #8
400075e0:	ebfffb6d 	bl	4000639c <CTControlHandle>
400075e4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075e8:	eafffe07 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400075ec:	e3a00007 	mov	r0, #7
400075f0:	ebfffb69 	bl	4000639c <CTControlHandle>
400075f4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075f8:	eafffe03 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
400075fc:	e3a0000a 	mov	r0, #10
40007600:	ebfffb65 	bl	4000639c <CTControlHandle>
40007604:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007608:	eafffdff 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
4000760c:	e3a00009 	mov	r0, #9
40007610:	ebfffb61 	bl	4000639c <CTControlHandle>
40007614:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007618:	eafffdfb 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
4000761c:	e3a00020 	mov	r0, #32
40007620:	ebfff79c 	bl	40005498 <ControlHandle>
40007624:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007628:	eafffdf7 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrlFull);
4000762c:	e3a0001a 	mov	r0, #26
40007630:	e59f1180 	ldr	r1, [pc, #384]	; 400077b8 <UVCAppEP0Thread_Entry+0xa88>
40007634:	eb0057a4 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40007638:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000763c:	eafffdfc 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
40007640:	e3a0001c 	mov	r0, #28
40007644:	ebfff793 	bl	40005498 <ControlHandle>
40007648:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000764c:	eafffdee 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
40007650:	e3a0001a 	mov	r0, #26
40007654:	ebfff78f 	bl	40005498 <ControlHandle>
40007658:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000765c:	eafffdea 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
40007660:	e3a0001e 	mov	r0, #30
40007664:	ebfff78b 	bl	40005498 <ControlHandle>
40007668:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000766c:	eafffde6 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    #endif
                            stiflag = CyTrue;//set still flag
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
40007670:	e59f1144 	ldr	r1, [pc, #324]	; 400077bc <UVCAppEP0Thread_Entry+0xa8c>
40007674:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
40007678:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
4000767c:	e3a00004 	mov	r0, #4
40007680:	eb002e54 	bl	40012fd8 <CyU3PDebugPrint>
40007684:	eafffde5 	b	40006e20 <UVCAppEP0Thread_Entry+0xf0>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007688:	e3a00020 	mov	r0, #32
4000768c:	e59f1100 	ldr	r1, [pc, #256]	; 40007794 <UVCAppEP0Thread_Entry+0xa64>
40007690:	e28d2036 	add	r2, sp, #54	; 0x36
40007694:	eb00551e 	bl	4001cb14 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007698:	e3500000 	cmp	r0, #0
4000769c:	1afffde3 	bne	40006e30 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
400076a0:	e3a02000 	mov	r2, #0
400076a4:	e59f00bc 	ldr	r0, [pc, #188]	; 40007768 <UVCAppEP0Thread_Entry+0xa38>
400076a8:	e3a01001 	mov	r1, #1
400076ac:	eb000a04 	bl	40009ec4 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
400076b0:	e2502000 	subs	r2, r0, #0
400076b4:	0afffddd 	beq	40006e30 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
400076b8:	e3a00004 	mov	r0, #4
400076bc:	e59f10d4 	ldr	r1, [pc, #212]	; 40007798 <UVCAppEP0Thread_Entry+0xa68>
400076c0:	eb002e44 	bl	40012fd8 <CyU3PDebugPrint>
400076c4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076c8:	eafffdd9 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400076cc:	e5d41048 	ldrb	r1, [r4, #72]	; 0x48
400076d0:	e3510003 	cmp	r1, #3
400076d4:	1afffedb 	bne	40007248 <UVCAppEP0Thread_Entry+0x518>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
400076d8:	e3a0001a 	mov	r0, #26
400076dc:	e59f10dc 	ldr	r1, [pc, #220]	; 400077c0 <UVCAppEP0Thread_Entry+0xa90>
400076e0:	eb005779 	bl	4001d4cc <CyU3PUsbSendEP0Data>
400076e4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076e8:	eafffdd1 	b	40006e34 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
400076ec:	e3a00012 	mov	r0, #18
400076f0:	ebfff768 	bl	40005498 <ControlHandle>
400076f4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076f8:	eafffdc3 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
400076fc:	e3a00011 	mov	r0, #17
40007700:	ebfff764 	bl	40005498 <ControlHandle>
40007704:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007708:	eafffdbf 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
4000770c:	e3a00013 	mov	r0, #19
40007710:	ebfff760 	bl	40005498 <ControlHandle>
40007714:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007718:	eafffdbb 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
4000771c:	e3a00018 	mov	r0, #24
40007720:	ebfff75c 	bl	40005498 <ControlHandle>
40007724:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007728:	eafffdb7 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
4000772c:	e3a00016 	mov	r0, #22
40007730:	ebfff758 	bl	40005498 <ControlHandle>
40007734:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007738:	eafffdb3 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
4000773c:	e3a00015 	mov	r0, #21
40007740:	ebfff754 	bl	40005498 <ControlHandle>
40007744:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007748:	eafffdaf 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000774c:	e3a00002 	mov	r0, #2
40007750:	e59f1054 	ldr	r1, [pc, #84]	; 400077ac <UVCAppEP0Thread_Entry+0xa7c>
40007754:	eafffeef 	b	40007318 <UVCAppEP0Thread_Entry+0x5e8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
40007758:	e3a00021 	mov	r0, #33	; 0x21
4000775c:	ebfff74d 	bl	40005498 <ControlHandle>
40007760:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007764:	eafffda8 	b	40006e0c <UVCAppEP0Thread_Entry+0xdc>
40007768:	40030f90 	.word	0x40030f90
4000776c:	40030000 	.word	0x40030000
40007770:	4003310c 	.word	0x4003310c
40007774:	40032fc0 	.word	0x40032fc0
40007778:	40032ff0 	.word	0x40032ff0
4000777c:	400330d0 	.word	0x400330d0
40007780:	400116e8 	.word	0x400116e8
40007784:	40033030 	.word	0x40033030
40007788:	40032ec0 	.word	0x40032ec0
4000778c:	40032ff2 	.word	0x40032ff2
40007790:	4001166c 	.word	0x4001166c
40007794:	4003100c 	.word	0x4003100c
40007798:	40011714 	.word	0x40011714
4000779c:	4001173c 	.word	0x4001173c
400077a0:	40030664 	.word	0x40030664
400077a4:	40030670 	.word	0x40030670
400077a8:	4003062c 	.word	0x4003062c
400077ac:	40030fe8 	.word	0x40030fe8
400077b0:	4001178c 	.word	0x4001178c
400077b4:	400113d8 	.word	0x400113d8
400077b8:	40030610 	.word	0x40030610
400077bc:	40011764 	.word	0x40011764
400077c0:	40030648 	.word	0x40030648

400077c4 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400077c4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400077c8:	e59f42ac 	ldr	r4, [pc, #684]	; 40007a7c <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400077cc:	e59f22ac 	ldr	r2, [pc, #684]	; 40007a80 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
400077d0:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400077d4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400077d8:	e592001c 	ldr	r0, [r2, #28]
400077dc:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400077e0:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
400077e4:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400077e8:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400077ec:	eb000a4c 	bl	4000a124 <_txe_mutex_get>
    if(Data1&0x80){
400077f0:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400077f4:	12066001 	andne	r6, r6, #1
400077f8:	11e06006 	mvnne	r6, r6
400077fc:	1206603b 	andne	r6, r6, #59	; 0x3b
40007800:	11e06006 	mvnne	r6, r6
40007804:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
40007808:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
4000780c:	e3a08000 	mov	r8, #0
40007810:	e1a0200a 	mov	r2, sl
40007814:	e1a03007 	mov	r3, r7
40007818:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
4000781c:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007820:	e59f0258 	ldr	r0, [pc, #600]	; 40007a80 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007824:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007828:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
4000782c:	e88d0140 	stm	sp, {r6, r8}
40007830:	ebffef20 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007834:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
40007838:	e1a01009 	mov	r1, r9
4000783c:	e1a03007 	mov	r3, r7
40007840:	e59f0238 	ldr	r0, [pc, #568]	; 40007a80 <CamDefSet+0x2bc>
40007844:	e88d0220 	stm	sp, {r5, r9}
40007848:	ebffef1a 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
4000784c:	e1a02006 	mov	r2, r6
40007850:	e1a03005 	mov	r3, r5
40007854:	e59f1228 	ldr	r1, [pc, #552]	; 40007a84 <CamDefSet+0x2c0>
40007858:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
4000785c:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007860:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007864:	eb002ddb 	bl	40012fd8 <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007868:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
4000786c:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007870:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007874:	e3a01002 	mov	r1, #2
40007878:	e59f0200 	ldr	r0, [pc, #512]	; 40007a80 <CamDefSet+0x2bc>
4000787c:	e58db000 	str	fp, [sp]
40007880:	e58d8004 	str	r8, [sp, #4]
40007884:	ebffef0b 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007888:	e1a0200b 	mov	r2, fp
4000788c:	e1a03005 	mov	r3, r5
40007890:	e59f11ec 	ldr	r1, [pc, #492]	; 40007a84 <CamDefSet+0x2c0>
40007894:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007898:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000789c:	eb002dcd 	bl	40012fd8 <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400078a0:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
400078a4:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078a8:	e247b080 	sub	fp, r7, #128	; 0x80
400078ac:	e20b10ff 	and	r1, fp, #255	; 0xff
400078b0:	e58d1014 	str	r1, [sp, #20]
400078b4:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078b8:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078bc:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078c0:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078c4:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078c8:	e3a01005 	mov	r1, #5
400078cc:	e3a020df 	mov	r2, #223	; 0xdf
400078d0:	e59f01a8 	ldr	r0, [pc, #424]	; 40007a80 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078d4:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078d8:	e58dc000 	str	ip, [sp]
400078dc:	e58d8004 	str	r8, [sp, #4]
400078e0:	ebffeef4 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078e4:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400078e8:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078ec:	e20ac0ff 	and	ip, sl, #255	; 0xff
400078f0:	e1a03006 	mov	r3, r6
400078f4:	e3a01005 	mov	r1, #5
400078f8:	e3a020dc 	mov	r2, #220	; 0xdc
400078fc:	e59f017c 	ldr	r0, [pc, #380]	; 40007a80 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007900:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007904:	e58dc000 	str	ip, [sp]
40007908:	e58d9004 	str	r9, [sp, #4]
4000790c:	ebffeee9 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007910:	e59d001c 	ldr	r0, [sp, #28]
40007914:	e3a0e002 	mov	lr, #2
40007918:	e200c0ff 	and	ip, r0, #255	; 0xff
4000791c:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007920:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007924:	e3a01005 	mov	r1, #5
40007928:	e3a020de 	mov	r2, #222	; 0xde
4000792c:	e59f014c 	ldr	r0, [pc, #332]	; 40007a80 <CamDefSet+0x2bc>
40007930:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007934:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007938:	e58dc000 	str	ip, [sp]
4000793c:	ebffeedd 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007940:	e59da020 	ldr	sl, [sp, #32]
40007944:	e1a03006 	mov	r3, r6
40007948:	e20ac0ff 	and	ip, sl, #255	; 0xff
4000794c:	e58dc000 	str	ip, [sp]
40007950:	e3a01005 	mov	r1, #5
40007954:	e3a0c003 	mov	ip, #3
40007958:	e3a020e0 	mov	r2, #224	; 0xe0
4000795c:	e59f011c 	ldr	r0, [pc, #284]	; 40007a80 <CamDefSet+0x2bc>
40007960:	e58dc004 	str	ip, [sp, #4]
40007964:	ebffeed3 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007968:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000796c:	e3a0a004 	mov	sl, #4
40007970:	e200c0ff 	and	ip, r0, #255	; 0xff
40007974:	e1a03006 	mov	r3, r6
40007978:	e3a01005 	mov	r1, #5
4000797c:	e3a020dd 	mov	r2, #221	; 0xdd
40007980:	e59f00f8 	ldr	r0, [pc, #248]	; 40007a80 <CamDefSet+0x2bc>
40007984:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007988:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
4000798c:	e58da004 	str	sl, [sp, #4]
40007990:	ebffeec8 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007994:	e3a0e005 	mov	lr, #5
40007998:	e1a0100e 	mov	r1, lr
4000799c:	e1a03006 	mov	r3, r6
400079a0:	e3a020e1 	mov	r2, #225	; 0xe1
400079a4:	e20760ff 	and	r6, r7, #255	; 0xff
400079a8:	e59f00d0 	ldr	r0, [pc, #208]	; 40007a80 <CamDefSet+0x2bc>
400079ac:	e88d4040 	stm	sp, {r6, lr}
400079b0:	ebffeec0 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400079b4:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400079b8:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400079bc:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400079c0:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400079c4:	e59dc020 	ldr	ip, [sp, #32]
400079c8:	e1a0200b 	mov	r2, fp
400079cc:	e59d3018 	ldr	r3, [sp, #24]
400079d0:	e59f10b0 	ldr	r1, [pc, #176]	; 40007a88 <CamDefSet+0x2c4>
400079d4:	e1a0000a 	mov	r0, sl
400079d8:	e88d5040 	stm	sp, {r6, ip, lr}
400079dc:	e58d700c 	str	r7, [sp, #12]
400079e0:	eb002d7c 	bl	40012fd8 <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
400079e4:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
400079e8:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
400079ec:	e1a03007 	mov	r3, r7
400079f0:	e3a01006 	mov	r1, #6
400079f4:	e3a02085 	mov	r2, #133	; 0x85
400079f8:	e59f0080 	ldr	r0, [pc, #128]	; 40007a80 <CamDefSet+0x2bc>
400079fc:	e88d0140 	stm	sp, {r6, r8}
40007a00:	ebffeeac 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007a04:	e1a03007 	mov	r3, r7
40007a08:	e3a01006 	mov	r1, #6
40007a0c:	e3a02086 	mov	r2, #134	; 0x86
40007a10:	e59f0068 	ldr	r0, [pc, #104]	; 40007a80 <CamDefSet+0x2bc>
40007a14:	e88d0240 	stm	sp, {r6, r9}
40007a18:	ebffeea6 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a1c:	e1a02006 	mov	r2, r6
40007a20:	e1a03005 	mov	r3, r5
40007a24:	e59f1058 	ldr	r1, [pc, #88]	; 40007a84 <CamDefSet+0x2c0>
40007a28:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
40007a2c:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a30:	eb002d68 	bl	40012fd8 <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007a34:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
40007a38:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
40007a3c:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
40007a40:	e3a01007 	mov	r1, #7
40007a44:	e59f0034 	ldr	r0, [pc, #52]	; 40007a80 <CamDefSet+0x2bc>
40007a48:	e88d0140 	stm	sp, {r6, r8}
40007a4c:	ebffee99 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a50:	e1a03005 	mov	r3, r5
40007a54:	e1a0000a 	mov	r0, sl
40007a58:	e59f1024 	ldr	r1, [pc, #36]	; 40007a84 <CamDefSet+0x2c0>
40007a5c:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007a60:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a64:	eb002d5b 	bl	40012fd8 <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007a68:	e59f3010 	ldr	r3, [pc, #16]	; 40007a80 <CamDefSet+0x2bc>
40007a6c:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007a70:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007a74:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007a78:	ea0009de 	b	4000a1f8 <_txe_mutex_put>
40007a7c:	40030000 	.word	0x40030000
40007a80:	40032ec4 	.word	0x40032ec4
40007a84:	400117c0 	.word	0x400117c0
40007a88:	400117e0 	.word	0x400117e0

40007a8c <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a8c:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a90:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a94:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a98:	e59f1018 	ldr	r1, [pc, #24]	; 40007ab8 <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a9c:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007aa0:	ebffef8b 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007aa4:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007aa8:	15d43001 	ldrbne	r3, [r4, #1]
40007aac:	13833002 	orrne	r3, r3, #2
40007ab0:	15c43001 	strbne	r3, [r4, #1]
40007ab4:	e8bd8038 	pop	{r3, r4, r5, pc}
40007ab8:	40030480 	.word	0x40030480

40007abc <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007abc:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ac0:	e59f1010 	ldr	r1, [pc, #16]	; 40007ad8 <CyFxAppErrorHandler+0x1c>
40007ac4:	e3a00004 	mov	r0, #4
40007ac8:	eb002d42 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007acc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ad0:	eb000403 	bl	40008ae4 <_tx_thread_sleep>
40007ad4:	eafffff9 	b	40007ac0 <CyFxAppErrorHandler+0x4>
40007ad8:	400113d8 	.word	0x400113d8

40007adc <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007adc:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007ae0:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007ae4:	eb006cab 	bl	40022d98 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ae8:	e2504000 	subs	r4, r0, #0
40007aec:	0a000004 	beq	40007b04 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007af0:	e3a00004 	mov	r0, #4
40007af4:	e59f1a4c 	ldr	r1, [pc, #2636]	; 40008548 <UVCAppThread_Entry+0xa6c>
40007af8:	eb002d36 	bl	40012fd8 <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007afc:	e1a00004 	mov	r0, r4
40007b00:	ebffffed 	bl	40007abc <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007b04:	e59fca40 	ldr	ip, [pc, #2624]	; 4000854c <UVCAppThread_Entry+0xa70>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007b08:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007b0c:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007b10:	e28d0050 	add	r0, sp, #80	; 0x50
40007b14:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007b18:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007b1c:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007b20:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007b24:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007b28:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007b2c:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007b30:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007b34:	eb006d10 	bl	40022f7c <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b38:	e3500000 	cmp	r0, #0
40007b3c:	0a000000 	beq	40007b44 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b40:	ebffffdd 	bl	40007abc <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007b44:	e3e00000 	mvn	r0, #0
40007b48:	eb006d92 	bl	40023198 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b4c:	e3500000 	cmp	r0, #0
40007b50:	0a000000 	beq	40007b58 <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b54:	ebffffd8 	bl	40007abc <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007b58:	e3a00003 	mov	r0, #3
40007b5c:	e3a01004 	mov	r1, #4
40007b60:	eb002c94 	bl	40012db8 <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b64:	e3500000 	cmp	r0, #0
40007b68:	0a000000 	beq	40007b70 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b6c:	ebffffd2 	bl	40007abc <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007b70:	e3a00000 	mov	r0, #0
40007b74:	eb002d13 	bl	40012fc8 <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007b78:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b7c:	eb0003d8 	bl	40008ae4 <_tx_thread_sleep>
40007b80:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b84:	eb0003d6 	bl	40008ae4 <_tx_thread_sleep>
40007b88:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b8c:	eb0003d4 	bl	40008ae4 <_tx_thread_sleep>
40007b90:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b94:	eb0003d2 	bl	40008ae4 <_tx_thread_sleep>
40007b98:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b9c:	eb0003d0 	bl	40008ae4 <_tx_thread_sleep>
40007ba0:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007ba4:	eb0003ce 	bl	40008ae4 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007ba8:	eb006e08 	bl	400233d0 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007bac:	e2504000 	subs	r4, r0, #0
40007bb0:	0a000004 	beq	40007bc8 <UVCAppThread_Entry+0xec>
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007bb4:	e3a00004 	mov	r0, #4
40007bb8:	e59f1990 	ldr	r1, [pc, #2448]	; 40008550 <UVCAppThread_Entry+0xa74>
40007bbc:	eb002d05 	bl	40012fd8 <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007bc0:	e1a00004 	mov	r0, r4
40007bc4:	ebffffbc 	bl	40007abc <CyFxAppErrorHandler>
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007bc8:	e59f6984 	ldr	r6, [pc, #2436]	; 40008554 <UVCAppThread_Entry+0xa78>
    i2cConfig.isDma      = CyFalse;
40007bcc:	e3a05000 	mov	r5, #0
    i2cConfig.busTimeout = 0xffffffffU;
40007bd0:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007bd4:	e28d008c 	add	r0, sp, #140	; 0x8c
40007bd8:	e1a01005 	mov	r1, r5
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007bdc:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007be0:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007be4:	e58d608c 	str	r6, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007be8:	e58d5090 	str	r5, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007bec:	eb006ef0 	bl	400237b4 <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007bf0:	e2504000 	subs	r4, r0, #0
40007bf4:	0a000004 	beq	40007c0c <UVCAppThread_Entry+0x130>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007bf8:	e3a00004 	mov	r0, #4
40007bfc:	e59f1954 	ldr	r1, [pc, #2388]	; 40008558 <UVCAppThread_Entry+0xa7c>
40007c00:	eb002cf4 	bl	40012fd8 <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007c04:	e1a00004 	mov	r0, r4
40007c08:	ebffffab 	bl	40007abc <CyFxAppErrorHandler>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007c0c:	e59f6948 	ldr	r6, [pc, #2376]	; 4000855c <UVCAppThread_Entry+0xa80>
40007c10:	e3a02028 	mov	r2, #40	; 0x28
40007c14:	e3a01000 	mov	r1, #0
40007c18:	e1a00006 	mov	r0, r6
40007c1c:	eb000808 	bl	40009c44 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007c20:	e2502000 	subs	r2, r0, #0
40007c24:	1a0000f3 	bne	40007ff8 <UVCAppThread_Entry+0x51c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007c28:	e3a05002 	mov	r5, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007c2c:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007c30:	e5862040 	str	r2, [r6, #64]	; 0x40
    clearFeatureRqtReceived = CyFalse;
40007c34:	e5862044 	str	r2, [r6, #68]	; 0x44

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007c38:	e3a07003 	mov	r7, #3
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007c3c:	e28d009c 	add	r0, sp, #156	; 0x9c
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007c40:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007c44:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007c48:	e5cd509c 	strb	r5, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007c4c:	e5cd509d 	strb	r5, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007c50:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007c54:	eb006ae5 	bl	400227f0 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007c58:	e2502000 	subs	r2, r0, #0
40007c5c:	1a0000f7 	bne	40008040 <UVCAppThread_Entry+0x564>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007c60:	e3a00016 	mov	r0, #22
40007c64:	e3a01001 	mov	r1, #1
40007c68:	eb002bca 	bl	40012b98 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c6c:	e2502000 	subs	r2, r0, #0
40007c70:	1a0000e9 	bne	4000801c <UVCAppThread_Entry+0x540>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007c74:	e3a00014 	mov	r0, #20
40007c78:	e3a01001 	mov	r1, #1
40007c7c:	eb002bc5 	bl	40012b98 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c80:	e2502000 	subs	r2, r0, #0
40007c84:	1a0000f6 	bne	40008064 <UVCAppThread_Entry+0x588>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007c88:	e3a00018 	mov	r0, #24
40007c8c:	e3a01001 	mov	r1, #1
40007c90:	eb002bc0 	bl	40012b98 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c94:	e2502000 	subs	r2, r0, #0
40007c98:	1a0001db 	bne	4000840c <UVCAppThread_Entry+0x930>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007c9c:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007ca0:	e3a00016 	mov	r0, #22
40007ca4:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007ca8:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007cac:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007cb0:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007cb4:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007cb8:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007cbc:	eb006b83 	bl	40022ad0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cc0:	e2502000 	subs	r2, r0, #0
40007cc4:	1a0001c7 	bne	400083e8 <UVCAppThread_Entry+0x90c>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007cc8:	e3a00014 	mov	r0, #20
40007ccc:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007cd0:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007cd4:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007cd8:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007cdc:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007ce0:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007ce4:	eb006b79 	bl	40022ad0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ce8:	e2502000 	subs	r2, r0, #0
40007cec:	1a0001cf 	bne	40008430 <UVCAppThread_Entry+0x954>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007cf0:	e3a00018 	mov	r0, #24
40007cf4:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007cf8:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007cfc:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007d00:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007d04:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007d08:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007d0c:	eb006b6f 	bl	40022ad0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d10:	e2502000 	subs	r2, r0, #0
40007d14:	1a0001aa 	bne	400083c4 <UVCAppThread_Entry+0x8e8>
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007d18:	e1a00004 	mov	r0, r4
40007d1c:	e28d107c 	add	r1, sp, #124	; 0x7c
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007d20:	e58d2084 	str	r2, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007d24:	e58d2080 	str	r2, [sp, #128]	; 0x80
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007d28:	e1cd57bc 	strh	r5, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007d2c:	e5cd7088 	strb	r7, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007d30:	eb004c00 	bl	4001ad38 <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d34:	e2502000 	subs	r2, r0, #0
40007d38:	1a000198 	bne	400083a0 <UVCAppThread_Entry+0x8c4>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007d3c:	e59f081c 	ldr	r0, [pc, #2076]	; 40008560 <UVCAppThread_Entry+0xa84>
40007d40:	eb004e7a 	bl	4001b730 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007d44:	ebfff22f 	bl	40004608 <SensorReset>
    CyU3PThreadSleep(5000);
40007d48:	e59f0814 	ldr	r0, [pc, #2068]	; 40008564 <UVCAppThread_Entry+0xa88>
40007d4c:	eb000364 	bl	40008ae4 <_tx_thread_sleep>
    //SensorInit ();

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007d50:	eb0058ec 	bl	4001e108 <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d54:	e2502000 	subs	r2, r0, #0
40007d58:	1a000187 	bne	4000837c <UVCAppThread_Entry+0x8a0>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007d5c:	e3a01000 	mov	r1, #0
40007d60:	e59f0800 	ldr	r0, [pc, #2048]	; 40008568 <UVCAppThread_Entry+0xa8c>
40007d64:	eb00639e 	bl	40020be4 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007d68:	e59f07fc 	ldr	r0, [pc, #2044]	; 4000856c <UVCAppThread_Entry+0xa90>
40007d6c:	eb006387 	bl	40020b90 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007d70:	e3a01000 	mov	r1, #0
40007d74:	e59f27f4 	ldr	r2, [pc, #2036]	; 40008570 <UVCAppThread_Entry+0xa94>
40007d78:	e3a00001 	mov	r0, #1
40007d7c:	eb0056c1 	bl	4001d888 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007d80:	e3a00000 	mov	r0, #0
40007d84:	e1a01000 	mov	r1, r0
40007d88:	e59f27e4 	ldr	r2, [pc, #2020]	; 40008574 <UVCAppThread_Entry+0xa98>
40007d8c:	eb0056bd 	bl	4001d888 <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007d90:	e3a01000 	mov	r1, #0
40007d94:	e59f27dc 	ldr	r2, [pc, #2012]	; 40008578 <UVCAppThread_Entry+0xa9c>
40007d98:	e3a00002 	mov	r0, #2
40007d9c:	eb0056b9 	bl	4001d888 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007da0:	e3a01000 	mov	r1, #0
40007da4:	e59f27d0 	ldr	r2, [pc, #2000]	; 4000857c <UVCAppThread_Entry+0xaa0>
40007da8:	e3a00007 	mov	r0, #7
40007dac:	eb0056b5 	bl	4001d888 <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007db0:	e3a01000 	mov	r1, #0
40007db4:	e59f27c4 	ldr	r2, [pc, #1988]	; 40008580 <UVCAppThread_Entry+0xaa4>
40007db8:	e3a00004 	mov	r0, #4
40007dbc:	eb0056b1 	bl	4001d888 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007dc0:	e3a01000 	mov	r1, #0
40007dc4:	e59f27b8 	ldr	r2, [pc, #1976]	; 40008584 <UVCAppThread_Entry+0xaa8>
40007dc8:	e3a00003 	mov	r0, #3
40007dcc:	eb0056ad 	bl	4001d888 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007dd0:	e3a01000 	mov	r1, #0
40007dd4:	e59f27ac 	ldr	r2, [pc, #1964]	; 40008588 <UVCAppThread_Entry+0xaac>
40007dd8:	e3a00006 	mov	r0, #6
40007ddc:	eb0056a9 	bl	4001d888 <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007de0:	e3a01000 	mov	r1, #0
40007de4:	e59f27a0 	ldr	r2, [pc, #1952]	; 4000858c <UVCAppThread_Entry+0xab0>
40007de8:	e3a00005 	mov	r0, #5
40007dec:	eb0056a5 	bl	4001d888 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007df0:	e3a01001 	mov	r1, #1
40007df4:	e59f2794 	ldr	r2, [pc, #1940]	; 40008590 <UVCAppThread_Entry+0xab4>
40007df8:	e3a00005 	mov	r0, #5
40007dfc:	eb0056a1 	bl	4001d888 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007e00:	e3a01002 	mov	r1, #2
40007e04:	e59f2788 	ldr	r2, [pc, #1928]	; 40008594 <UVCAppThread_Entry+0xab8>
40007e08:	e3a00005 	mov	r0, #5
40007e0c:	eb00569d 	bl	4001d888 <CyU3PUsbSetDesc>
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40007e10:	e3a07000 	mov	r7, #0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007e14:	e3a04001 	mov	r4, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007e18:	e3a0a003 	mov	sl, #3
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007e1c:	e3a00082 	mov	r0, #130	; 0x82
40007e20:	e28d10a8 	add	r1, sp, #168	; 0xa8
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007e24:	e3a08040 	mov	r8, #64	; 0x40
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007e28:	e5cda0ac 	strb	sl, [sp, #172]	; 0xac
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007e2c:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007e30:	e1cd8bb0 	strh	r8, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007e34:	e5cd70b3 	strb	r7, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007e38:	e1cd7abe 	strh	r7, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007e3c:	e5cd40b2 	strb	r4, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007e40:	eb004ff7 	bl	4001be24 <CyU3PSetEpConfig>
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
40007e44:	e1a0a007 	mov	sl, r7
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007e48:	e2503000 	subs	r3, r0, #0
40007e4c:	1a000140 	bne	40008354 <UVCAppThread_Entry+0x878>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007e50:	e59fc740 	ldr	ip, [pc, #1856]	; 40008598 <UVCAppThread_Entry+0xabc>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007e54:	e59fe740 	ldr	lr, [pc, #1856]	; 4000859c <UVCAppThread_Entry+0xac0>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007e58:	e3a05b01 	mov	r5, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007e5c:	e3a07010 	mov	r7, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007e60:	e59f0738 	ldr	r0, [pc, #1848]	; 400085a0 <UVCAppThread_Entry+0xac4>
40007e64:	e3a01004 	mov	r1, #4
40007e68:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007e6c:	e1cd53b4 	strh	r5, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007e70:	e1cd43b6 	strh	r4, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007e74:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007e78:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007e7c:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007e80:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007e84:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007e88:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007e8c:	e5cda044 	strb	sl, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007e90:	e58d7048 	str	r7, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007e94:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007e98:	eb003664 	bl	40015830 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007e9c:	e2505000 	subs	r5, r0, #0
40007ea0:	1a0000e4 	bne	40008238 <UVCAppThread_Entry+0x75c>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007ea4:	e3a00b01 	mov	r0, #1024	; 0x400
40007ea8:	ebffefae 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007eac:	e59f16f0 	ldr	r1, [pc, #1776]	; 400085a4 <UVCAppThread_Entry+0xac8>
    if (glInterStaBuffer == 0)
40007eb0:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007eb4:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007eb8:	0a0000d5 	beq	40008214 <UVCAppThread_Entry+0x738>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007ebc:	e3a03004 	mov	r3, #4
40007ec0:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007ec4:	e59f36dc 	ldr	r3, [pc, #1756]	; 400085a8 <UVCAppThread_Entry+0xacc>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007ec8:	e3a0e901 	mov	lr, #16384	; 0x4000
40007ecc:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007ed0:	e59fe6d4 	ldr	lr, [pc, #1748]	; 400085ac <UVCAppThread_Entry+0xad0>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007ed4:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007ed8:	e59f36d0 	ldr	r3, [pc, #1744]	; 400085b0 <UVCAppThread_Entry+0xad4>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007edc:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007ee0:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007ee4:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007ee8:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007eec:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007ef0:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007ef4:	e5cda02a 	strb	sl, [sp, #42]	; 0x2a
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007ef8:	e3a08002 	mov	r8, #2
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007efc:	e59f06b0 	ldr	r0, [pc, #1712]	; 400085b4 <UVCAppThread_Entry+0xad8>
40007f00:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007f04:	e3a0a018 	mov	sl, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007f08:	e1cd81b0 	strh	r8, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007f0c:	e1cd52b2 	strh	r5, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007f10:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007f14:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007f18:	e1cd52b8 	strh	r5, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007f1c:	e58da02c 	str	sl, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007f20:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007f24:	eb003f61 	bl	40017cb0 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f28:	e2502000 	subs	r2, r0, #0
40007f2c:	1a0000af 	bne	400081f0 <UVCAppThread_Entry+0x714>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007f30:	e1a00004 	mov	r0, r4
40007f34:	e1a01004 	mov	r1, r4
40007f38:	eb004eb5 	bl	4001ba14 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f3c:	e2502000 	subs	r2, r0, #0
40007f40:	1a0000a1 	bne	400081cc <UVCAppThread_Entry+0x6f0>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007f44:	e3a00064 	mov	r0, #100	; 0x64
40007f48:	eb002d93 	bl	4001359c <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007f4c:	eb005362 	bl	4001ccdc <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007f50:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007f54:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f58:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007f5c:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40007f60:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007f64:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007f68:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007f6c:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007f70:	03a08b01 	moveq	r8, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007f74:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f78:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007f7c:	01cd8bb0 	strheq	r8, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007f80:	05cd70b2 	strbeq	r7, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
40007f84:	15cd40b2 	strbne	r4, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f88:	eb004fa5 	bl	4001be24 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f8c:	e2502000 	subs	r2, r0, #0
40007f90:	1a00004f 	bne	400080d4 <UVCAppThread_Entry+0x5f8>
40007f94:	e59f861c 	ldr	r8, [pc, #1564]	; 400085b8 <UVCAppThread_Entry+0xadc>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007f98:	e59f55bc 	ldr	r5, [pc, #1468]	; 4000855c <UVCAppThread_Entry+0xa80>
40007f9c:	e1a04002 	mov	r4, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007fa0:	e1a07008 	mov	r7, r8
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007fa4:	e59f05b0 	ldr	r0, [pc, #1456]	; 4000855c <UVCAppThread_Entry+0xa80>
40007fa8:	e3a01001 	mov	r1, #1
40007fac:	e3a02002 	mov	r2, #2
40007fb0:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007fb4:	e58d4000 	str	r4, [sp]
40007fb8:	eb000791 	bl	40009e04 <_txe_event_flags_get>
40007fbc:	e3500000 	cmp	r0, #0
40007fc0:	1a000030 	bne	40008088 <UVCAppThread_Entry+0x5ac>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007fc4:	e5951030 	ldr	r1, [r5, #48]	; 0x30
40007fc8:	e3510000 	cmp	r1, #0
40007fcc:	0a000003 	beq	40007fe0 <UVCAppThread_Entry+0x504>
40007fd0:	e1d5a3b4 	ldrh	sl, [r5, #52]	; 0x34
40007fd4:	e1d5c3b6 	ldrh	ip, [r5, #54]	; 0x36
40007fd8:	e15a000c 	cmp	sl, ip
40007fdc:	0a00011c 	beq	40008454 <UVCAppThread_Entry+0x978>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007fe0:	e3a01040 	mov	r1, #64	; 0x40
40007fe4:	e3a02000 	mov	r2, #0
40007fe8:	e59f056c 	ldr	r0, [pc, #1388]	; 4000855c <UVCAppThread_Entry+0xa80>
40007fec:	eb0007b4 	bl	40009ec4 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007ff0:	eb000a6c 	bl	4000a9a8 <_txe_thread_relinquish>
    }
40007ff4:	eaffffea 	b	40007fa4 <UVCAppThread_Entry+0x4c8>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007ff8:	e3a00004 	mov	r0, #4
40007ffc:	e59f15b8 	ldr	r1, [pc, #1464]	; 400085bc <UVCAppThread_Entry+0xae0>
40008000:	eb002bf4 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008004:	e59f15b4 	ldr	r1, [pc, #1460]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008008:	e3a00004 	mov	r0, #4
4000800c:	eb002bf1 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008010:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008014:	eb0002b2 	bl	40008ae4 <_tx_thread_sleep>
40008018:	eafffff9 	b	40008004 <UVCAppThread_Entry+0x528>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
4000801c:	e3a00004 	mov	r0, #4
40008020:	e59f159c 	ldr	r1, [pc, #1436]	; 400085c4 <UVCAppThread_Entry+0xae8>
40008024:	eb002beb 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008028:	e59f1590 	ldr	r1, [pc, #1424]	; 400085c0 <UVCAppThread_Entry+0xae4>
4000802c:	e3a00004 	mov	r0, #4
40008030:	eb002be8 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008034:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008038:	eb0002a9 	bl	40008ae4 <_tx_thread_sleep>
4000803c:	eafffff9 	b	40008028 <UVCAppThread_Entry+0x54c>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40008040:	e3a00004 	mov	r0, #4
40008044:	e59f157c 	ldr	r1, [pc, #1404]	; 400085c8 <UVCAppThread_Entry+0xaec>
40008048:	eb002be2 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000804c:	e59f156c 	ldr	r1, [pc, #1388]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008050:	e3a00004 	mov	r0, #4
40008054:	eb002bdf 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008058:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000805c:	eb0002a0 	bl	40008ae4 <_tx_thread_sleep>
40008060:	eafffff9 	b	4000804c <UVCAppThread_Entry+0x570>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40008064:	e3a00004 	mov	r0, #4
40008068:	e59f155c 	ldr	r1, [pc, #1372]	; 400085cc <UVCAppThread_Entry+0xaf0>
4000806c:	eb002bd9 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008070:	e59f1548 	ldr	r1, [pc, #1352]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008074:	e3a00004 	mov	r0, #4
40008078:	eb002bd6 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000807c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008080:	eb000297 	bl	40008ae4 <_tx_thread_sleep>
40008084:	eafffff9 	b	40008070 <UVCAppThread_Entry+0x594>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40008088:	e59f04cc 	ldr	r0, [pc, #1228]	; 4000855c <UVCAppThread_Entry+0xa80>
4000808c:	e3a01002 	mov	r1, #2
40008090:	e3a02003 	mov	r2, #3
40008094:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008098:	e58d4000 	str	r4, [sp]
4000809c:	eb000758 	bl	40009e04 <_txe_event_flags_get>
400080a0:	e3500000 	cmp	r0, #0
400080a4:	1a000025 	bne	40008140 <UVCAppThread_Entry+0x664>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
400080a8:	e5951044 	ldr	r1, [r5, #68]	; 0x44
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
400080ac:	e5854030 	str	r4, [r5, #48]	; 0x30
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
400080b0:	e3510000 	cmp	r1, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
400080b4:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
400080b8:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
400080bc:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
400080c0:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                pbc=0;
400080c4:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
400080c8:	0a00000a 	beq	400080f8 <UVCAppThread_Entry+0x61c>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
400080cc:	e5864044 	str	r4, [r6, #68]	; 0x44
400080d0:	eaffffc2 	b	40007fe0 <UVCAppThread_Entry+0x504>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400080d4:	e3a00004 	mov	r0, #4
400080d8:	e59f14f0 	ldr	r1, [pc, #1264]	; 400085d0 <UVCAppThread_Entry+0xaf4>
400080dc:	eb002bbd 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080e0:	e59f14d8 	ldr	r1, [pc, #1240]	; 400085c0 <UVCAppThread_Entry+0xae4>
400080e4:	e3a00004 	mov	r0, #4
400080e8:	eb002bba 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080ec:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080f0:	eb00027b 	bl	40008ae4 <_tx_thread_sleep>
400080f4:	eafffff9 	b	400080e0 <UVCAppThread_Entry+0x604>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400080f8:	e59f04b4 	ldr	r0, [pc, #1204]	; 400085b4 <UVCAppThread_Entry+0xad8>
400080fc:	eb0040bc 	bl	400183f4 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40008100:	e3500000 	cmp	r0, #0
40008104:	1a000002 	bne	40008114 <UVCAppThread_Entry+0x638>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008108:	e3a00083 	mov	r0, #131	; 0x83
4000810c:	eb00524d 	bl	4001ca48 <CyU3PUsbFlushEp>
40008110:	eaffffed 	b	400080cc <UVCAppThread_Entry+0x5f0>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008114:	e59f14a4 	ldr	r1, [pc, #1188]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008118:	e3a00004 	mov	r0, #4
4000811c:	eb002bad 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008120:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008124:	eb00026e 	bl	40008ae4 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008128:	e59f1490 	ldr	r1, [pc, #1168]	; 400085c0 <UVCAppThread_Entry+0xae4>
4000812c:	e3a00004 	mov	r0, #4
40008130:	eb002ba8 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008134:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008138:	eb000269 	bl	40008ae4 <_tx_thread_sleep>
4000813c:	eafffff4 	b	40008114 <UVCAppThread_Entry+0x638>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40008140:	e3e0c000 	mvn	ip, #0
40008144:	e3a01001 	mov	r1, #1
40008148:	e3a02002 	mov	r2, #2
4000814c:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008150:	e59f0404 	ldr	r0, [pc, #1028]	; 4000855c <UVCAppThread_Entry+0xa80>
40008154:	e58dc000 	str	ip, [sp]
40008158:	eb000729 	bl	40009e04 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
4000815c:	e1a02004 	mov	r2, r4
40008160:	e59f044c 	ldr	r0, [pc, #1100]	; 400085b4 <UVCAppThread_Entry+0xad8>
40008164:	e1a01004 	mov	r1, r4
40008168:	eb00418e 	bl	400187a8 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
4000816c:	e2502000 	subs	r2, r0, #0
40008170:	1a00006e 	bne	40008330 <UVCAppThread_Entry+0x854>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008174:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40008178:	e3530000 	cmp	r3, #0
4000817c:	1a000063 	bne	40008310 <UVCAppThread_Entry+0x834>
                    CyU3PThreadSleep(1000);
                    SensorSetIrisControl(0x2, 0x30, 0x10, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                    CyU3PThreadSleep(1000);
                    SensorSetIrisControl(0x4, 0x30, 0x80, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
#endif
                    CyU3PThreadSleep(1000);
40008180:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008184:	eb000256 	bl	40008ae4 <_tx_thread_sleep>
                    SensorSetIrisControl(0x1, 0x30, 0x20, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40008188:	e3a03052 	mov	r3, #82	; 0x52
4000818c:	e3a01030 	mov	r1, #48	; 0x30
40008190:	e3a02020 	mov	r2, #32
40008194:	e3a00001 	mov	r0, #1
40008198:	ebfff1b3 	bl	4000486c <SensorSetIrisControl>
                    CyU3PThreadSleep(1000);
4000819c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081a0:	eb00024f 	bl	40008ae4 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
400081a4:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
400081a8:	e3530003 	cmp	r3, #3
400081ac:	0a000047 	beq	400082d0 <UVCAppThread_Entry+0x7f4>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
400081b0:	e3530002 	cmp	r3, #2
400081b4:	0a000029 	beq	40008260 <UVCAppThread_Entry+0x784>
#endif
                    CyU3PThreadSleep(1000);
                    SensorSetIrisControl(0x1, 0x30, 0x20, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                    CyU3PThreadSleep(1000);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
400081b8:	e3a0e001 	mov	lr, #1
400081bc:	e586e03c 	str	lr, [r6, #60]	; 0x3c
                    CyU3PThreadSleep(200);
400081c0:	e3a000c8 	mov	r0, #200	; 0xc8
400081c4:	eb000246 	bl	40008ae4 <_tx_thread_sleep>
400081c8:	eaffff84 	b	40007fe0 <UVCAppThread_Entry+0x504>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
400081cc:	e3a00004 	mov	r0, #4
400081d0:	e59f13fc 	ldr	r1, [pc, #1020]	; 400085d4 <UVCAppThread_Entry+0xaf8>
400081d4:	eb002b7f 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081d8:	e59f13e0 	ldr	r1, [pc, #992]	; 400085c0 <UVCAppThread_Entry+0xae4>
400081dc:	e3a00004 	mov	r0, #4
400081e0:	eb002b7c 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081e4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081e8:	eb00023d 	bl	40008ae4 <_tx_thread_sleep>
400081ec:	eafffff9 	b	400081d8 <UVCAppThread_Entry+0x6fc>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400081f0:	e3a00004 	mov	r0, #4
400081f4:	e59f13dc 	ldr	r1, [pc, #988]	; 400085d8 <UVCAppThread_Entry+0xafc>
400081f8:	eb002b76 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081fc:	e59f13bc 	ldr	r1, [pc, #956]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008200:	e3a00004 	mov	r0, #4
40008204:	eb002b73 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008208:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000820c:	eb000234 	bl	40008ae4 <_tx_thread_sleep>
40008210:	eafffff9 	b	400081fc <UVCAppThread_Entry+0x720>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
40008214:	e2800004 	add	r0, r0, #4
40008218:	e59f13bc 	ldr	r1, [pc, #956]	; 400085dc <UVCAppThread_Entry+0xb00>
4000821c:	eb002b6d 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008220:	e59f1398 	ldr	r1, [pc, #920]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008224:	e3a00004 	mov	r0, #4
40008228:	eb002b6a 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000822c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008230:	eb00022b 	bl	40008ae4 <_tx_thread_sleep>
40008234:	eafffff9 	b	40008220 <UVCAppThread_Entry+0x744>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008238:	e3a00004 	mov	r0, #4
4000823c:	e59f139c 	ldr	r1, [pc, #924]	; 400085e0 <UVCAppThread_Entry+0xb04>
40008240:	e1a02005 	mov	r2, r5
40008244:	eb002b63 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008248:	e59f1370 	ldr	r1, [pc, #880]	; 400085c0 <UVCAppThread_Entry+0xae4>
4000824c:	e3a00004 	mov	r0, #4
40008250:	eb002b60 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008254:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008258:	eb000221 	bl	40008ae4 <_tx_thread_sleep>
4000825c:	eafffff9 	b	40008248 <UVCAppThread_Entry+0x76c>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
40008260:	e59f137c 	ldr	r1, [pc, #892]	; 400085e4 <UVCAppThread_Entry+0xb08>
40008264:	e3a00001 	mov	r0, #1
40008268:	eb002b5a 	bl	40012fd8 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
4000826c:	e59f0374 	ldr	r0, [pc, #884]	; 400085e8 <UVCAppThread_Entry+0xb0c>
40008270:	eb004c8c 	bl	4001b4a8 <CyU3PGpifLoad>
40008274:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008278:	e3520000 	cmp	r2, #0
4000827c:	1a00001a 	bne	400082ec <UVCAppThread_Entry+0x810>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008280:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
40008284:	e3530003 	cmp	r3, #3
40008288:	0a000001 	beq	40008294 <UVCAppThread_Entry+0x7b8>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
4000828c:	e3530002 	cmp	r3, #2
40008290:	1affffc8 	bne	400081b8 <UVCAppThread_Entry+0x6dc>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008294:	e1a00002 	mov	r0, r2
40008298:	e1a01002 	mov	r1, r2
4000829c:	eb004d27 	bl	4001b740 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400082a0:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400082a4:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400082a8:	0affffc2 	beq	400081b8 <UVCAppThread_Entry+0x6dc>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400082ac:	e3a00004 	mov	r0, #4
400082b0:	e59f1334 	ldr	r1, [pc, #820]	; 400085ec <UVCAppThread_Entry+0xb10>
400082b4:	eb002b47 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082b8:	e59f1300 	ldr	r1, [pc, #768]	; 400085c0 <UVCAppThread_Entry+0xae4>
400082bc:	e3a00004 	mov	r0, #4
400082c0:	eb002b44 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082c4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082c8:	eb000205 	bl	40008ae4 <_tx_thread_sleep>
400082cc:	eafffff9 	b	400082b8 <UVCAppThread_Entry+0x7dc>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400082d0:	e59f1318 	ldr	r1, [pc, #792]	; 400085f0 <UVCAppThread_Entry+0xb14>
400082d4:	e3a00001 	mov	r0, #1
400082d8:	eb002b3e 	bl	40012fd8 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400082dc:	e59f0310 	ldr	r0, [pc, #784]	; 400085f4 <UVCAppThread_Entry+0xb18>
400082e0:	eb004c70 	bl	4001b4a8 <CyU3PGpifLoad>
400082e4:	e1a02000 	mov	r2, r0
400082e8:	eaffffe2 	b	40008278 <UVCAppThread_Entry+0x79c>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
400082ec:	e3a00004 	mov	r0, #4
400082f0:	e59f1300 	ldr	r1, [pc, #768]	; 400085f8 <UVCAppThread_Entry+0xb1c>
400082f4:	eb002b37 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082f8:	e59f12c0 	ldr	r1, [pc, #704]	; 400085c0 <UVCAppThread_Entry+0xae4>
400082fc:	e3a00004 	mov	r0, #4
40008300:	eb002b34 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008304:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008308:	eb0001f5 	bl	40008ae4 <_tx_thread_sleep>
4000830c:	eafffff9 	b	400082f8 <UVCAppThread_Entry+0x81c>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40008310:	e59f0294 	ldr	r0, [pc, #660]	; 400085ac <UVCAppThread_Entry+0xad0>
40008314:	e3a0a002 	mov	sl, #2
40008318:	e1a01004 	mov	r1, r4
4000831c:	e1a02000 	mov	r2, r0
40008320:	e1a03004 	mov	r3, r4
40008324:	e58da000 	str	sl, [sp]
40008328:	eb004d59 	bl	4001b894 <CyU3PGpifSMSwitch>
4000832c:	eaffff2b 	b	40007fe0 <UVCAppThread_Entry+0x504>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008330:	e3a00004 	mov	r0, #4
40008334:	e59f12c0 	ldr	r1, [pc, #704]	; 400085fc <UVCAppThread_Entry+0xb20>
40008338:	eb002b26 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000833c:	e59f127c 	ldr	r1, [pc, #636]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008340:	e3a00004 	mov	r0, #4
40008344:	eb002b23 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008348:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000834c:	eb0001e4 	bl	40008ae4 <_tx_thread_sleep>
40008350:	eafffff9 	b	4000833c <UVCAppThread_Entry+0x860>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008354:	e3a00004 	mov	r0, #4
40008358:	e59f1270 	ldr	r1, [pc, #624]	; 400085d0 <UVCAppThread_Entry+0xaf4>
4000835c:	e1a02003 	mov	r2, r3
40008360:	eb002b1c 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008364:	e59f1254 	ldr	r1, [pc, #596]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008368:	e3a00004 	mov	r0, #4
4000836c:	eb002b19 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008370:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008374:	eb0001da 	bl	40008ae4 <_tx_thread_sleep>
40008378:	eafffff9 	b	40008364 <UVCAppThread_Entry+0x888>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
4000837c:	e3a00004 	mov	r0, #4
40008380:	e59f1278 	ldr	r1, [pc, #632]	; 40008600 <UVCAppThread_Entry+0xb24>
40008384:	eb002b13 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008388:	e59f1230 	ldr	r1, [pc, #560]	; 400085c0 <UVCAppThread_Entry+0xae4>
4000838c:	e3a00004 	mov	r0, #4
40008390:	eb002b10 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008394:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008398:	eb0001d1 	bl	40008ae4 <_tx_thread_sleep>
4000839c:	eafffff9 	b	40008388 <UVCAppThread_Entry+0x8ac>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400083a0:	e3a00004 	mov	r0, #4
400083a4:	e59f1258 	ldr	r1, [pc, #600]	; 40008604 <UVCAppThread_Entry+0xb28>
400083a8:	eb002b0a 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083ac:	e59f120c 	ldr	r1, [pc, #524]	; 400085c0 <UVCAppThread_Entry+0xae4>
400083b0:	e3a00004 	mov	r0, #4
400083b4:	eb002b07 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083b8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083bc:	eb0001c8 	bl	40008ae4 <_tx_thread_sleep>
400083c0:	eafffff9 	b	400083ac <UVCAppThread_Entry+0x8d0>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
400083c4:	e3a00004 	mov	r0, #4
400083c8:	e59f1238 	ldr	r1, [pc, #568]	; 40008608 <UVCAppThread_Entry+0xb2c>
400083cc:	eb002b01 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083d0:	e59f11e8 	ldr	r1, [pc, #488]	; 400085c0 <UVCAppThread_Entry+0xae4>
400083d4:	e3a00004 	mov	r0, #4
400083d8:	eb002afe 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083dc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083e0:	eb0001bf 	bl	40008ae4 <_tx_thread_sleep>
400083e4:	eafffff9 	b	400083d0 <UVCAppThread_Entry+0x8f4>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
400083e8:	e3a00004 	mov	r0, #4
400083ec:	e59f1218 	ldr	r1, [pc, #536]	; 4000860c <UVCAppThread_Entry+0xb30>
400083f0:	eb002af8 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083f4:	e59f11c4 	ldr	r1, [pc, #452]	; 400085c0 <UVCAppThread_Entry+0xae4>
400083f8:	e3a00004 	mov	r0, #4
400083fc:	eb002af5 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008400:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008404:	eb0001b6 	bl	40008ae4 <_tx_thread_sleep>
40008408:	eafffff9 	b	400083f4 <UVCAppThread_Entry+0x918>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
4000840c:	e3a00004 	mov	r0, #4
40008410:	e59f11f8 	ldr	r1, [pc, #504]	; 40008610 <UVCAppThread_Entry+0xb34>
40008414:	eb002aef 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008418:	e59f11a0 	ldr	r1, [pc, #416]	; 400085c0 <UVCAppThread_Entry+0xae4>
4000841c:	e3a00004 	mov	r0, #4
40008420:	eb002aec 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008424:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008428:	eb0001ad 	bl	40008ae4 <_tx_thread_sleep>
4000842c:	eafffff9 	b	40008418 <UVCAppThread_Entry+0x93c>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40008430:	e3a00004 	mov	r0, #4
40008434:	e59f11d8 	ldr	r1, [pc, #472]	; 40008614 <UVCAppThread_Entry+0xb38>
40008438:	eb002ae6 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000843c:	e59f117c 	ldr	r1, [pc, #380]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008440:	e3a00004 	mov	r0, #4
40008444:	eb002ae3 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008448:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000844c:	eb0001a4 	bl	40008ae4 <_tx_thread_sleep>
40008450:	eafffff9 	b	4000843c <UVCAppThread_Entry+0x960>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40008454:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                consCount = 0;
40008458:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                hitFV     = CyFalse;
4000845c:	e5854030 	str	r4, [r5, #48]	; 0x30
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008460:	e5d82481 	ldrb	r2, [r8, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40008464:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008468:	e222e001 	eor	lr, r2, #1
4000846c:	e5c8e481 	strb	lr, [r8, #1153]	; 0x481
                if(stiflag){
40008470:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
40008474:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40008478:	e3530000 	cmp	r3, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = CyFalse;
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
4000847c:	05d73481 	ldrbeq	r3, [r7, #1153]	; 0x481
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
40008480:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = CyFalse;
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40008484:	020330df 	andeq	r3, r3, #223	; 0xdf
40008488:	05c73481 	strbeq	r3, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
4000848c:	0a00000a 	beq	400084bc <UVCAppThread_Entry+0x9e0>
                	if (CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008490:	e59f00c4 	ldr	r0, [pc, #196]	; 4000855c <UVCAppThread_Entry+0xa80>
40008494:	e3a01080 	mov	r1, #128	; 0x80
40008498:	e3a02003 	mov	r2, #3
4000849c:	e28d30b4 	add	r3, sp, #180	; 0xb4
400084a0:	e58d4000 	str	r4, [sp]
400084a4:	eb000656 	bl	40009e04 <_txe_event_flags_get>
400084a8:	e3500000 	cmp	r0, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
400084ac:	05d70481 	ldrbeq	r0, [r7, #1153]	; 0x481
400084b0:	03800020 	orreq	r0, r0, #32
400084b4:	05c70481 	strbeq	r0, [r7, #1153]	; 0x481
                		stiflag = CyFalse;
400084b8:	0585409c 	streq	r4, [r5, #156]	; 0x9c
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400084bc:	e59f00f0 	ldr	r0, [pc, #240]	; 400085b4 <UVCAppThread_Entry+0xad8>
400084c0:	eb003fcb 	bl	400183f4 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
400084c4:	e2502000 	subs	r2, r0, #0
400084c8:	1a00000c 	bne	40008500 <UVCAppThread_Entry+0xa24>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
400084cc:	e1a01002 	mov	r1, r2
400084d0:	e59f00dc 	ldr	r0, [pc, #220]	; 400085b4 <UVCAppThread_Entry+0xad8>
400084d4:	eb0040b3 	bl	400187a8 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
400084d8:	e2502000 	subs	r2, r0, #0
400084dc:	1a000010 	bne	40008524 <UVCAppThread_Entry+0xa48>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400084e0:	e59f00c4 	ldr	r0, [pc, #196]	; 400085ac <UVCAppThread_Entry+0xad0>
400084e4:	e1a01002 	mov	r1, r2
400084e8:	e3a0a002 	mov	sl, #2
400084ec:	e1a02000 	mov	r2, r0
400084f0:	e1a03001 	mov	r3, r1
400084f4:	e58da000 	str	sl, [sp]
400084f8:	eb004ce5 	bl	4001b894 <CyU3PGpifSMSwitch>
400084fc:	eafffeb7 	b	40007fe0 <UVCAppThread_Entry+0x504>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008500:	e3a00004 	mov	r0, #4
40008504:	e59f110c 	ldr	r1, [pc, #268]	; 40008618 <UVCAppThread_Entry+0xb3c>
40008508:	eb002ab2 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000850c:	e59f10ac 	ldr	r1, [pc, #172]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008510:	e3a00004 	mov	r0, #4
40008514:	eb002aaf 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008518:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000851c:	eb000170 	bl	40008ae4 <_tx_thread_sleep>
40008520:	eafffff9 	b	4000850c <UVCAppThread_Entry+0xa30>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40008524:	e3a00004 	mov	r0, #4
40008528:	e59f10ec 	ldr	r1, [pc, #236]	; 4000861c <UVCAppThread_Entry+0xb40>
4000852c:	eb002aa9 	bl	40012fd8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008530:	e59f1088 	ldr	r1, [pc, #136]	; 400085c0 <UVCAppThread_Entry+0xae4>
40008534:	e3a00004 	mov	r0, #4
40008538:	eb002aa6 	bl	40012fd8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000853c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008540:	eb000167 	bl	40008ae4 <_tx_thread_sleep>
40008544:	eafffff9 	b	40008530 <UVCAppThread_Entry+0xa54>
40008548:	40011818 	.word	0x40011818
4000854c:	0001c200 	.word	0x0001c200
40008550:	40011838 	.word	0x40011838
40008554:	000186a0 	.word	0x000186a0
40008558:	40011854 	.word	0x40011854
4000855c:	40030f90 	.word	0x40030f90
40008560:	400050fc 	.word	0x400050fc
40008564:	00001388 	.word	0x00001388
40008568:	40004e08 	.word	0x40004e08
4000856c:	40004c98 	.word	0x40004c98
40008570:	40010dd4 	.word	0x40010dd4
40008574:	40010de8 	.word	0x40010de8
40008578:	40010dfc 	.word	0x40010dfc
4000857c:	40010ef4 	.word	0x40010ef4
40008580:	40010e14 	.word	0x40010e14
40008584:	40010e08 	.word	0x40010e08
40008588:	40010f0c 	.word	0x40010f0c
4000858c:	40010ff8 	.word	0x40010ff8
40008590:	40010ffc 	.word	0x40010ffc
40008594:	40011034 	.word	0x40011034
40008598:	00003f01 	.word	0x00003f01
4000859c:	00000302 	.word	0x00000302
400085a0:	40033030 	.word	0x40033030
400085a4:	400330d0 	.word	0x400330d0
400085a8:	00000303 	.word	0x00000303
400085ac:	00000101 	.word	0x00000101
400085b0:	40004b54 	.word	0x40004b54
400085b4:	40032ee4 	.word	0x40032ee4
400085b8:	40030000 	.word	0x40030000
400085bc:	40011870 	.word	0x40011870
400085c0:	400113d8 	.word	0x400113d8
400085c4:	400118c0 	.word	0x400118c0
400085c8:	4001189c 	.word	0x4001189c
400085cc:	400118e8 	.word	0x400118e8
400085d0:	40011a40 	.word	0x40011a40
400085d4:	40011b1c 	.word	0x40011b1c
400085d8:	40011aec 	.word	0x40011aec
400085dc:	40011ab4 	.word	0x40011ab4
400085e0:	40011a74 	.word	0x40011a74
400085e4:	40011be8 	.word	0x40011be8
400085e8:	400111e4 	.word	0x400111e4
400085ec:	40011c30 	.word	0x40011c30
400085f0:	40011bd8 	.word	0x40011bd8
400085f4:	400111c8 	.word	0x400111c8
400085f8:	40011bf8 	.word	0x40011bf8
400085fc:	40011ba4 	.word	0x40011ba4
40008600:	40011a10 	.word	0x40011a10
40008604:	400119e0 	.word	0x400119e0
40008608:	400119a8 	.word	0x400119a8
4000860c:	40011940 	.word	0x40011940
40008610:	40011914 	.word	0x40011914
40008614:	40011974 	.word	0x40011974
40008618:	40011b44 	.word	0x40011b44
4000861c:	40011b70 	.word	0x40011b70

40008620 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008620:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008624:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008628:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000862c:	ebffec10 	bl	40003674 <CyU3PMemAlloc>
40008630:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008634:	e3a00a01 	mov	r0, #4096	; 0x1000
40008638:	ebffec0d 	bl	40003674 <CyU3PMemAlloc>
4000863c:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008640:	e3a00a01 	mov	r0, #4096	; 0x1000
40008644:	ebffec0a 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008648:	e35a0000 	cmp	sl, #0
4000864c:	135b0000 	cmpne	fp, #0
40008650:	13a09000 	movne	r9, #0
40008654:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008658:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
4000865c:	1a000000 	bne	40008664 <CyFxApplicationDefine+0x44>
40008660:	eafffffe 	b	40008660 <CyFxApplicationDefine+0x40>
40008664:	e3500000 	cmp	r0, #0
40008668:	0afffffc 	beq	40008660 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
4000866c:	e28d4028 	add	r4, sp, #40	; 0x28
40008670:	e1a00004 	mov	r0, r4
40008674:	e3a01040 	mov	r1, #64	; 0x40
40008678:	e59f2118 	ldr	r2, [pc, #280]	; 40008798 <CyFxApplicationDefine+0x178>
4000867c:	ebffeb4f 	bl	400033c0 <cmdbufCreate>
40008680:	e1a05004 	mov	r5, r4
40008684:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
40008688:	e59f710c 	ldr	r7, [pc, #268]	; 4000879c <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000868c:	e59f810c 	ldr	r8, [pc, #268]	; 400087a0 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008690:	e1a0c007 	mov	ip, r7
40008694:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008698:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000869c:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400086a0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400086a4:	e59f20f8 	ldr	r2, [pc, #248]	; 400087a4 <CyFxApplicationDefine+0x184>
400086a8:	e1a00004 	mov	r0, r4
400086ac:	e3a01020 	mov	r1, #32
400086b0:	ebffeb42 	bl	400033c0 <cmdbufCreate>
400086b4:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
400086b8:	e1a0c008 	mov	ip, r8
400086bc:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
400086c0:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400086c4:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400086c8:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
400086cc:	e1a00007 	mov	r0, r7
400086d0:	ebffeb52 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
400086d4:	e1a00008 	mov	r0, r8
400086d8:	ebffeb50 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400086dc:	e3a050a8 	mov	r5, #168	; 0xa8
400086e0:	e3a0ca01 	mov	ip, #4096	; 0x1000
400086e4:	e59f00bc 	ldr	r0, [pc, #188]	; 400087a8 <CyFxApplicationDefine+0x188>
400086e8:	e59f10bc 	ldr	r1, [pc, #188]	; 400087ac <CyFxApplicationDefine+0x18c>
400086ec:	e59f20bc 	ldr	r2, [pc, #188]	; 400087b0 <CyFxApplicationDefine+0x190>
400086f0:	e1a03009 	mov	r3, r9
400086f4:	e88d1400 	stm	sp, {sl, ip}
400086f8:	e58d6008 	str	r6, [sp, #8]
400086fc:	e58d600c 	str	r6, [sp, #12]
40008700:	e58d9010 	str	r9, [sp, #16]
40008704:	e58d4014 	str	r4, [sp, #20]
40008708:	e58d5018 	str	r5, [sp, #24]
4000870c:	eb0007c7 	bl	4000a630 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008710:	e250c000 	subs	ip, r0, #0
40008714:	1affffd1 	bne	40008660 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
40008718:	e1a0300c 	mov	r3, ip
4000871c:	e3a07b02 	mov	r7, #2048	; 0x800
40008720:	e59f008c 	ldr	r0, [pc, #140]	; 400087b4 <CyFxApplicationDefine+0x194>
40008724:	e59f108c 	ldr	r1, [pc, #140]	; 400087b8 <CyFxApplicationDefine+0x198>
40008728:	e59f208c 	ldr	r2, [pc, #140]	; 400087bc <CyFxApplicationDefine+0x19c>
4000872c:	e58dc010 	str	ip, [sp, #16]
40008730:	e58db000 	str	fp, [sp]
40008734:	e58d7004 	str	r7, [sp, #4]
40008738:	e58d6008 	str	r6, [sp, #8]
4000873c:	e58d600c 	str	r6, [sp, #12]
40008740:	e58d4014 	str	r4, [sp, #20]
40008744:	e58d5018 	str	r5, [sp, #24]
40008748:	eb0007b8 	bl	4000a630 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
4000874c:	e250c000 	subs	ip, r0, #0
40008750:	1affffc2 	bne	40008660 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
40008754:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40008758:	e59f0060 	ldr	r0, [pc, #96]	; 400087c0 <CyFxApplicationDefine+0x1a0>
4000875c:	e59f1060 	ldr	r1, [pc, #96]	; 400087c4 <CyFxApplicationDefine+0x1a4>
40008760:	e59f2060 	ldr	r2, [pc, #96]	; 400087c8 <CyFxApplicationDefine+0x1a8>
40008764:	e1a0300c 	mov	r3, ip
40008768:	e58de000 	str	lr, [sp]
4000876c:	e58d7004 	str	r7, [sp, #4]
40008770:	e58d6008 	str	r6, [sp, #8]
40008774:	e58d600c 	str	r6, [sp, #12]
40008778:	e58dc010 	str	ip, [sp, #16]
4000877c:	e58d4014 	str	r4, [sp, #20]
40008780:	e58d5018 	str	r5, [sp, #24]
40008784:	eb0007a9 	bl	4000a630 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008788:	e3500000 	cmp	r0, #0
4000878c:	1affffb3 	bne	40008660 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008790:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008794:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008798:	400330d4 	.word	0x400330d4
4000879c:	40032ec4 	.word	0x40032ec4
400087a0:	40033110 	.word	0x40033110
400087a4:	40032ff8 	.word	0x40032ff8
400087a8:	40031030 	.word	0x40031030
400087ac:	40011c68 	.word	0x40011c68
400087b0:	40007adc 	.word	0x40007adc
400087b4:	400310d8 	.word	0x400310d8
400087b8:	40011c7c 	.word	0x40011c7c
400087bc:	40006d30 	.word	0x40006d30
400087c0:	40031180 	.word	0x40031180
400087c4:	40011c94 	.word	0x40011c94
400087c8:	40004904 	.word	0x40004904

400087cc <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
400087cc:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
400087d0:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
400087d4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
400087d8:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
400087dc:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
400087e0:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
400087e4:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
400087e8:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
400087ec:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
400087f0:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
400087f4:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
400087f8:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
400087fc:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008800:	eb00272c 	bl	400124b8 <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008804:	e2504000 	subs	r4, r0, #0
40008808:	0a000000 	beq	40008810 <main+0x44>
4000880c:	eafffffe 	b	4000880c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
40008810:	e1a01004 	mov	r1, r4
40008814:	e1a02004 	mov	r2, r4
40008818:	e1a00005 	mov	r0, r5
4000881c:	eb0026ff 	bl	40012420 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008820:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008824:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
40008828:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
4000882c:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
40008830:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
40008834:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
40008838:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
4000883c:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
40008840:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
40008844:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
40008848:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
4000884c:	eb0028c3 	bl	40012b60 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008850:	e2504000 	subs	r4, r0, #0
40008854:	1affffec 	bne	4000880c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
40008858:	eb000002 	bl	40008868 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
4000885c:	e1a00004 	mov	r0, r4
40008860:	e28dd03c 	add	sp, sp, #60	; 0x3c
40008864:	e8bd8030 	pop	{r4, r5, pc}

40008868 <_tx_initialize_kernel_enter>:
40008868:	e92d4010 	push	{r4, lr}
4000886c:	e59f004c 	ldr	r0, [pc, #76]	; 400088c0 <_tx_initialize_kernel_enter+0x58>
40008870:	e5900000 	ldr	r0, [r0]
40008874:	e59f1048 	ldr	r1, [pc, #72]	; 400088c4 <_tx_initialize_kernel_enter+0x5c>
40008878:	e1500001 	cmp	r0, r1
4000887c:	0a000004 	beq	40008894 <_tx_initialize_kernel_enter+0x2c>
40008880:	e1e00221 	mvn	r0, r1, lsr #4
40008884:	e59f1034 	ldr	r1, [pc, #52]	; 400088c0 <_tx_initialize_kernel_enter+0x58>
40008888:	e5810000 	str	r0, [r1]
4000888c:	eb0009ee 	bl	4000b04c <_tx_initialize_low_level>
40008890:	eb00105f 	bl	4000ca14 <_tx_initialize_high_level>
40008894:	e59f002c 	ldr	r0, [pc, #44]	; 400088c8 <_tx_initialize_kernel_enter+0x60>
40008898:	e59f1020 	ldr	r1, [pc, #32]	; 400088c0 <_tx_initialize_kernel_enter+0x58>
4000889c:	e5810000 	str	r0, [r1]
400088a0:	e59f0024 	ldr	r0, [pc, #36]	; 400088cc <_tx_initialize_kernel_enter+0x64>
400088a4:	e5900000 	ldr	r0, [r0]
400088a8:	ebffeb5d 	bl	40003624 <tx_application_define>
400088ac:	e3a00000 	mov	r0, #0
400088b0:	e59f1008 	ldr	r1, [pc, #8]	; 400088c0 <_tx_initialize_kernel_enter+0x58>
400088b4:	e5810000 	str	r0, [r1]
400088b8:	eb00091f 	bl	4000ad3c <_tx_thread_schedule>
400088bc:	e8bd8010 	pop	{r4, pc}
400088c0:	40030e48 	.word	0x40030e48
400088c4:	f0f0f0f1 	.word	0xf0f0f0f1
400088c8:	f0f0f0f0 	.word	0xf0f0f0f0
400088cc:	40030de0 	.word	0x40030de0

400088d0 <_tx_thread_identify>:
400088d0:	e10f1000 	mrs	r1, CPSR
400088d4:	e3812080 	orr	r2, r1, #128	; 0x80
400088d8:	e121f002 	msr	CPSR_c, r2
400088dc:	e59f30e0 	ldr	r3, [pc, #224]	; 400089c4 <_tx_thread_identify+0xf4>
400088e0:	e5930000 	ldr	r0, [r3]
400088e4:	e3500000 	cmp	r0, #0
400088e8:	0a000031 	beq	400089b4 <_tx_thread_identify+0xe4>
400088ec:	e59f30d4 	ldr	r3, [pc, #212]	; 400089c8 <_tx_thread_identify+0xf8>
400088f0:	e5933000 	ldr	r3, [r3]
400088f4:	e2833001 	add	r3, r3, #1
400088f8:	e59fc0c8 	ldr	ip, [pc, #200]	; 400089c8 <_tx_thread_identify+0xf8>
400088fc:	e58c3000 	str	r3, [ip]
40008900:	e580300c 	str	r3, [r0, #12]
40008904:	e59f30c0 	ldr	r3, [pc, #192]	; 400089cc <_tx_thread_identify+0xfc>
40008908:	e5933000 	ldr	r3, [r3]
4000890c:	e3530000 	cmp	r3, #0
40008910:	1a000006 	bne	40008930 <_tx_thread_identify+0x60>
40008914:	e59f30b4 	ldr	r3, [pc, #180]	; 400089d0 <_tx_thread_identify+0x100>
40008918:	e5933000 	ldr	r3, [r3]
4000891c:	e5803000 	str	r3, [r0]
40008920:	e5903000 	ldr	r3, [r0]
40008924:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008928:	e5803004 	str	r3, [r0, #4]
4000892c:	ea00000d 	b	40008968 <_tx_thread_identify+0x98>
40008930:	e59f3094 	ldr	r3, [pc, #148]	; 400089cc <_tx_thread_identify+0xfc>
40008934:	e5933000 	ldr	r3, [r3]
40008938:	e59fc094 	ldr	ip, [pc, #148]	; 400089d4 <_tx_thread_identify+0x104>
4000893c:	e153000c 	cmp	r3, ip
40008940:	2a000004 	bcs	40008958 <_tx_thread_identify+0x88>
40008944:	e3e03000 	mvn	r3, #0
40008948:	e5803000 	str	r3, [r0]
4000894c:	e3a03000 	mov	r3, #0
40008950:	e5803004 	str	r3, [r0, #4]
40008954:	ea000003 	b	40008968 <_tx_thread_identify+0x98>
40008958:	e59f3074 	ldr	r3, [pc, #116]	; 400089d4 <_tx_thread_identify+0x104>
4000895c:	e5803000 	str	r3, [r0]
40008960:	e3a03000 	mov	r3, #0
40008964:	e5803004 	str	r3, [r0, #4]
40008968:	e3a03067 	mov	r3, #103	; 0x67
4000896c:	e5803008 	str	r3, [r0, #8]
40008970:	e3a03000 	mov	r3, #0
40008974:	e5803010 	str	r3, [r0, #16]
40008978:	e5803014 	str	r3, [r0, #20]
4000897c:	e5803018 	str	r3, [r0, #24]
40008980:	e580301c 	str	r3, [r0, #28]
40008984:	e2800020 	add	r0, r0, #32
40008988:	e59f3048 	ldr	r3, [pc, #72]	; 400089d8 <_tx_thread_identify+0x108>
4000898c:	e5933000 	ldr	r3, [r3]
40008990:	e1500003 	cmp	r0, r3
40008994:	3a000001 	bcc	400089a0 <_tx_thread_identify+0xd0>
40008998:	e59f303c 	ldr	r3, [pc, #60]	; 400089dc <_tx_thread_identify+0x10c>
4000899c:	e5930000 	ldr	r0, [r3]
400089a0:	e59f301c 	ldr	r3, [pc, #28]	; 400089c4 <_tx_thread_identify+0xf4>
400089a4:	e5830000 	str	r0, [r3]
400089a8:	e59f3030 	ldr	r3, [pc, #48]	; 400089e0 <_tx_thread_identify+0x110>
400089ac:	e5933000 	ldr	r3, [r3]
400089b0:	e5830020 	str	r0, [r3, #32]
400089b4:	e121f001 	msr	CPSR_c, r1
400089b8:	e59f0010 	ldr	r0, [pc, #16]	; 400089d0 <_tx_thread_identify+0x100>
400089bc:	e5900000 	ldr	r0, [r0]
400089c0:	e12fff1e 	bx	lr
400089c4:	40030ebc 	.word	0x40030ebc
400089c8:	40030ec0 	.word	0x40030ec0
400089cc:	40030e48 	.word	0x40030e48
400089d0:	40030e50 	.word	0x40030e50
400089d4:	f0f0f0f0 	.word	0xf0f0f0f0
400089d8:	40030eb8 	.word	0x40030eb8
400089dc:	40030eb4 	.word	0x40030eb4
400089e0:	40030ea8 	.word	0x40030ea8

400089e4 <_tx_thread_initialize>:
400089e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400089e8:	e3a00000 	mov	r0, #0
400089ec:	e59f10c0 	ldr	r1, [pc, #192]	; 40008ab4 <_tx_thread_initialize+0xd0>
400089f0:	e5810000 	str	r0, [r1]
400089f4:	e59f10bc 	ldr	r1, [pc, #188]	; 40008ab8 <_tx_thread_initialize+0xd4>
400089f8:	e5810000 	str	r0, [r1]
400089fc:	e59f00b8 	ldr	r0, [pc, #184]	; 40008abc <_tx_thread_initialize+0xd8>
40008a00:	e3a01000 	mov	r1, #0
40008a04:	e5801000 	str	r1, [r0]
40008a08:	e59f00b0 	ldr	r0, [pc, #176]	; 40008ac0 <_tx_thread_initialize+0xdc>
40008a0c:	e5801000 	str	r1, [r0]
40008a10:	e3a00020 	mov	r0, #32
40008a14:	e59f10a8 	ldr	r1, [pc, #168]	; 40008ac4 <_tx_thread_initialize+0xe0>
40008a18:	e5810000 	str	r0, [r1]
40008a1c:	e3a00000 	mov	r0, #0
40008a20:	e59f10a0 	ldr	r1, [pc, #160]	; 40008ac8 <_tx_thread_initialize+0xe4>
40008a24:	e5c10000 	strb	r0, [r1]
40008a28:	e2816001 	add	r6, r1, #1
40008a2c:	e3a04001 	mov	r4, #1
40008a30:	ea000009 	b	40008a5c <_tx_thread_initialize+0x78>
40008a34:	e1a07004 	mov	r7, r4
40008a38:	e3a05000 	mov	r5, #0
40008a3c:	ea000002 	b	40008a4c <_tx_thread_initialize+0x68>
40008a40:	e1a070a7 	lsr	r7, r7, #1
40008a44:	e2850001 	add	r0, r5, #1
40008a48:	e20050ff 	and	r5, r0, #255	; 0xff
40008a4c:	e3170001 	tst	r7, #1
40008a50:	0afffffa 	beq	40008a40 <_tx_thread_initialize+0x5c>
40008a54:	e4c65001 	strb	r5, [r6], #1
40008a58:	e2844001 	add	r4, r4, #1
40008a5c:	e3540c01 	cmp	r4, #256	; 0x100
40008a60:	3afffff3 	bcc	40008a34 <_tx_thread_initialize+0x50>
40008a64:	e3a01080 	mov	r1, #128	; 0x80
40008a68:	e59f005c 	ldr	r0, [pc, #92]	; 40008acc <_tx_thread_initialize+0xe8>
40008a6c:	eb002aef 	bl	40013630 <__aeabi_memclr4>
40008a70:	e3a00000 	mov	r0, #0
40008a74:	e59f1054 	ldr	r1, [pc, #84]	; 40008ad0 <_tx_thread_initialize+0xec>
40008a78:	e5810000 	str	r0, [r1]
40008a7c:	e59f1050 	ldr	r1, [pc, #80]	; 40008ad4 <_tx_thread_initialize+0xf0>
40008a80:	e5810000 	str	r0, [r1]
40008a84:	e59f104c 	ldr	r1, [pc, #76]	; 40008ad8 <_tx_thread_initialize+0xf4>
40008a88:	e5810000 	str	r0, [r1]
40008a8c:	e59f1048 	ldr	r1, [pc, #72]	; 40008adc <_tx_thread_initialize+0xf8>
40008a90:	e5810000 	str	r0, [r1]
40008a94:	e59f0044 	ldr	r0, [pc, #68]	; 40008ae0 <_tx_thread_initialize+0xfc>
40008a98:	e5900000 	ldr	r0, [r0]
40008a9c:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008aa0:	e3800c01 	orr	r0, r0, #256	; 0x100
40008aa4:	e3800002 	orr	r0, r0, #2
40008aa8:	e59f1030 	ldr	r1, [pc, #48]	; 40008ae0 <_tx_thread_initialize+0xfc>
40008aac:	e5810000 	str	r0, [r1]
40008ab0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008ab4:	40030e50 	.word	0x40030e50
40008ab8:	40030e54 	.word	0x40030e54
40008abc:	40030e60 	.word	0x40030e60
40008ac0:	40030e64 	.word	0x40030e64
40008ac4:	40030e68 	.word	0x40030e68
40008ac8:	40032774 	.word	0x40032774
40008acc:	40032874 	.word	0x40032874
40008ad0:	40030e58 	.word	0x40030e58
40008ad4:	40030e5c 	.word	0x40030e5c
40008ad8:	40030e6c 	.word	0x40030e6c
40008adc:	40030e74 	.word	0x40030e74
40008ae0:	40030e70 	.word	0x40030e70

40008ae4 <_tx_thread_sleep>:
40008ae4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008ae8:	e1a04000 	mov	r4, r0
40008aec:	e59f018c 	ldr	r0, [pc, #396]	; 40008c80 <_tx_thread_sleep+0x19c>
40008af0:	e5900000 	ldr	r0, [r0]
40008af4:	e58d0000 	str	r0, [sp]
40008af8:	e59d0000 	ldr	r0, [sp]
40008afc:	e3500000 	cmp	r0, #0
40008b00:	0a000007 	beq	40008b24 <_tx_thread_sleep+0x40>
40008b04:	e59f1178 	ldr	r1, [pc, #376]	; 40008c84 <_tx_thread_sleep+0x1a0>
40008b08:	e59d0000 	ldr	r0, [sp]
40008b0c:	e1500001 	cmp	r0, r1
40008b10:	0a000003 	beq	40008b24 <_tx_thread_sleep+0x40>
40008b14:	e59f016c 	ldr	r0, [pc, #364]	; 40008c88 <_tx_thread_sleep+0x1a4>
40008b18:	e5900000 	ldr	r0, [r0]
40008b1c:	e3500000 	cmp	r0, #0
40008b20:	0a000001 	beq	40008b2c <_tx_thread_sleep+0x48>
40008b24:	e3a00013 	mov	r0, #19
40008b28:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008b2c:	e3540000 	cmp	r4, #0
40008b30:	1a000001 	bne	40008b3c <_tx_thread_sleep+0x58>
40008b34:	e3a00000 	mov	r0, #0
40008b38:	eafffffa 	b	40008b28 <_tx_thread_sleep+0x44>
40008b3c:	e10f5000 	mrs	r5, CPSR
40008b40:	e3856080 	orr	r6, r5, #128	; 0x80
40008b44:	e121f006 	msr	CPSR_c, r6
40008b48:	e59f113c 	ldr	r1, [pc, #316]	; 40008c8c <_tx_thread_sleep+0x1a8>
40008b4c:	e5910000 	ldr	r0, [r1]
40008b50:	e3500000 	cmp	r0, #0
40008b54:	0a000033 	beq	40008c28 <_tx_thread_sleep+0x144>
40008b58:	e59f1130 	ldr	r1, [pc, #304]	; 40008c90 <_tx_thread_sleep+0x1ac>
40008b5c:	e5911000 	ldr	r1, [r1]
40008b60:	e2811001 	add	r1, r1, #1
40008b64:	e59f2124 	ldr	r2, [pc, #292]	; 40008c90 <_tx_thread_sleep+0x1ac>
40008b68:	e5821000 	str	r1, [r2]
40008b6c:	e580100c 	str	r1, [r0, #12]
40008b70:	e59f1110 	ldr	r1, [pc, #272]	; 40008c88 <_tx_thread_sleep+0x1a4>
40008b74:	e5911000 	ldr	r1, [r1]
40008b78:	e3510000 	cmp	r1, #0
40008b7c:	1a000006 	bne	40008b9c <_tx_thread_sleep+0xb8>
40008b80:	e59f10f8 	ldr	r1, [pc, #248]	; 40008c80 <_tx_thread_sleep+0x19c>
40008b84:	e5911000 	ldr	r1, [r1]
40008b88:	e5801000 	str	r1, [r0]
40008b8c:	e5901000 	ldr	r1, [r0]
40008b90:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008b94:	e5801004 	str	r1, [r0, #4]
40008b98:	ea00000d 	b	40008bd4 <_tx_thread_sleep+0xf0>
40008b9c:	e59f10e4 	ldr	r1, [pc, #228]	; 40008c88 <_tx_thread_sleep+0x1a4>
40008ba0:	e5911000 	ldr	r1, [r1]
40008ba4:	e59f20e8 	ldr	r2, [pc, #232]	; 40008c94 <_tx_thread_sleep+0x1b0>
40008ba8:	e1510002 	cmp	r1, r2
40008bac:	2a000004 	bcs	40008bc4 <_tx_thread_sleep+0xe0>
40008bb0:	e3e01000 	mvn	r1, #0
40008bb4:	e5801000 	str	r1, [r0]
40008bb8:	e3a01000 	mov	r1, #0
40008bbc:	e5801004 	str	r1, [r0, #4]
40008bc0:	ea000003 	b	40008bd4 <_tx_thread_sleep+0xf0>
40008bc4:	e59f10c8 	ldr	r1, [pc, #200]	; 40008c94 <_tx_thread_sleep+0x1b0>
40008bc8:	e5801000 	str	r1, [r0]
40008bcc:	e3a01000 	mov	r1, #0
40008bd0:	e5801004 	str	r1, [r0, #4]
40008bd4:	e3a01070 	mov	r1, #112	; 0x70
40008bd8:	e5801008 	str	r1, [r0, #8]
40008bdc:	e5804010 	str	r4, [r0, #16]
40008be0:	e59d1000 	ldr	r1, [sp]
40008be4:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008be8:	e5801014 	str	r1, [r0, #20]
40008bec:	e580d018 	str	sp, [r0, #24]
40008bf0:	e3a01000 	mov	r1, #0
40008bf4:	e580101c 	str	r1, [r0, #28]
40008bf8:	e2800020 	add	r0, r0, #32
40008bfc:	e59f1094 	ldr	r1, [pc, #148]	; 40008c98 <_tx_thread_sleep+0x1b4>
40008c00:	e5911000 	ldr	r1, [r1]
40008c04:	e1500001 	cmp	r0, r1
40008c08:	3a000001 	bcc	40008c14 <_tx_thread_sleep+0x130>
40008c0c:	e59f1088 	ldr	r1, [pc, #136]	; 40008c9c <_tx_thread_sleep+0x1b8>
40008c10:	e5910000 	ldr	r0, [r1]
40008c14:	e59f1070 	ldr	r1, [pc, #112]	; 40008c8c <_tx_thread_sleep+0x1a8>
40008c18:	e5810000 	str	r0, [r1]
40008c1c:	e59f107c 	ldr	r1, [pc, #124]	; 40008ca0 <_tx_thread_sleep+0x1bc>
40008c20:	e5911000 	ldr	r1, [r1]
40008c24:	e5810020 	str	r0, [r1, #32]
40008c28:	e3a00004 	mov	r0, #4
40008c2c:	e59d1000 	ldr	r1, [sp]
40008c30:	e5810030 	str	r0, [r1, #48]	; 0x30
40008c34:	e3a00001 	mov	r0, #1
40008c38:	e59d1000 	ldr	r1, [sp]
40008c3c:	e5810038 	str	r0, [r1, #56]	; 0x38
40008c40:	e3a00000 	mov	r0, #0
40008c44:	e59d1000 	ldr	r1, [sp]
40008c48:	e5810084 	str	r0, [r1, #132]	; 0x84
40008c4c:	e59d0000 	ldr	r0, [sp]
40008c50:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008c54:	e59f0048 	ldr	r0, [pc, #72]	; 40008ca4 <_tx_thread_sleep+0x1c0>
40008c58:	e5900000 	ldr	r0, [r0]
40008c5c:	e2800001 	add	r0, r0, #1
40008c60:	e59f103c 	ldr	r1, [pc, #60]	; 40008ca4 <_tx_thread_sleep+0x1c0>
40008c64:	e5810000 	str	r0, [r1]
40008c68:	e121f005 	msr	CPSR_c, r5
40008c6c:	e59d0000 	ldr	r0, [sp]
40008c70:	eb00000c 	bl	40008ca8 <_tx_thread_system_suspend>
40008c74:	e59d0000 	ldr	r0, [sp]
40008c78:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008c7c:	eaffffa9 	b	40008b28 <_tx_thread_sleep+0x44>
40008c80:	40030e50 	.word	0x40030e50
40008c84:	40032974 	.word	0x40032974
40008c88:	40030e48 	.word	0x40030e48
40008c8c:	40030ebc 	.word	0x40030ebc
40008c90:	40030ec0 	.word	0x40030ec0
40008c94:	f0f0f0f0 	.word	0xf0f0f0f0
40008c98:	40030eb8 	.word	0x40030eb8
40008c9c:	40030eb4 	.word	0x40030eb4
40008ca0:	40030ea8 	.word	0x40030ea8
40008ca4:	40030e6c 	.word	0x40030e6c

40008ca8 <_tx_thread_system_suspend>:
40008ca8:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008cac:	e1a04000 	mov	r4, r0
40008cb0:	e3a0b000 	mov	fp, #0
40008cb4:	e59f05b0 	ldr	r0, [pc, #1456]	; 4000926c <_tx_thread_system_suspend+0x5c4>
40008cb8:	e5900000 	ldr	r0, [r0]
40008cbc:	e1540000 	cmp	r4, r0
40008cc0:	1a000009 	bne	40008cec <_tx_thread_system_suspend+0x44>
40008cc4:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008cc8:	e58d0000 	str	r0, [sp]
40008ccc:	e59d0000 	ldr	r0, [sp]
40008cd0:	e3500000 	cmp	r0, #0
40008cd4:	0a000004 	beq	40008cec <_tx_thread_system_suspend+0x44>
40008cd8:	e59d0000 	ldr	r0, [sp]
40008cdc:	e3700001 	cmn	r0, #1
40008ce0:	0a000001 	beq	40008cec <_tx_thread_system_suspend+0x44>
40008ce4:	e284004c 	add	r0, r4, #76	; 0x4c
40008ce8:	eb00020a 	bl	40009518 <_tx_timer_system_activate>
40008cec:	e5940008 	ldr	r0, [r4, #8]
40008cf0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008cf4:	e1500001 	cmp	r0, r1
40008cf8:	2a000001 	bcs	40008d04 <_tx_thread_system_suspend+0x5c>
40008cfc:	e5940008 	ldr	r0, [r4, #8]
40008d00:	e5840040 	str	r0, [r4, #64]	; 0x40
40008d04:	e594000c 	ldr	r0, [r4, #12]
40008d08:	e5900000 	ldr	r0, [r0]
40008d0c:	e59f155c 	ldr	r1, [pc, #1372]	; 40009270 <_tx_thread_system_suspend+0x5c8>
40008d10:	e1500001 	cmp	r0, r1
40008d14:	1a000007 	bne	40008d38 <_tx_thread_system_suspend+0x90>
40008d18:	e5940010 	ldr	r0, [r4, #16]
40008d1c:	e5900001 	ldr	r0, [r0, #1]
40008d20:	e1500001 	cmp	r0, r1
40008d24:	1a000003 	bne	40008d38 <_tx_thread_system_suspend+0x90>
40008d28:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008d2c:	e594100c 	ldr	r1, [r4, #12]
40008d30:	e1500001 	cmp	r0, r1
40008d34:	2a000001 	bcs	40008d40 <_tx_thread_system_suspend+0x98>
40008d38:	e1a00004 	mov	r0, r4
40008d3c:	eb001941 	bl	4000f248 <_tx_thread_stack_error_handler>
40008d40:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008d44:	e5100004 	ldr	r0, [r0, #-4]
40008d48:	e59f1520 	ldr	r1, [pc, #1312]	; 40009270 <_tx_thread_system_suspend+0x5c8>
40008d4c:	e1500001 	cmp	r0, r1
40008d50:	0a000001 	beq	40008d5c <_tx_thread_system_suspend+0xb4>
40008d54:	e1a00004 	mov	r0, r4
40008d58:	eb001905 	bl	4000f174 <_tx_thread_stack_analyze>
40008d5c:	e10f5000 	mrs	r5, CPSR
40008d60:	e3856080 	orr	r6, r5, #128	; 0x80
40008d64:	e121f006 	msr	CPSR_c, r6
40008d68:	e59f0504 	ldr	r0, [pc, #1284]	; 40009274 <_tx_thread_system_suspend+0x5cc>
40008d6c:	e5900000 	ldr	r0, [r0]
40008d70:	e2400001 	sub	r0, r0, #1
40008d74:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009274 <_tx_thread_system_suspend+0x5cc>
40008d78:	e5810000 	str	r0, [r1]
40008d7c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008d80:	e3500000 	cmp	r0, #0
40008d84:	0a000112 	beq	400091d4 <_tx_thread_system_suspend+0x52c>
40008d88:	e59f04e8 	ldr	r0, [pc, #1256]	; 40009278 <_tx_thread_system_suspend+0x5d0>
40008d8c:	e590a000 	ldr	sl, [r0]
40008d90:	e2801000 	add	r1, r0, #0
40008d94:	e5910000 	ldr	r0, [r1]
40008d98:	e3500000 	cmp	r0, #0
40008d9c:	0a000034 	beq	40008e74 <_tx_thread_system_suspend+0x1cc>
40008da0:	e59f14d4 	ldr	r1, [pc, #1236]	; 4000927c <_tx_thread_system_suspend+0x5d4>
40008da4:	e5911000 	ldr	r1, [r1]
40008da8:	e2811001 	add	r1, r1, #1
40008dac:	e59f24c8 	ldr	r2, [pc, #1224]	; 4000927c <_tx_thread_system_suspend+0x5d4>
40008db0:	e5821000 	str	r1, [r2]
40008db4:	e580100c 	str	r1, [r0, #12]
40008db8:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009280 <_tx_thread_system_suspend+0x5d8>
40008dbc:	e5911000 	ldr	r1, [r1]
40008dc0:	e3510000 	cmp	r1, #0
40008dc4:	1a000006 	bne	40008de4 <_tx_thread_system_suspend+0x13c>
40008dc8:	e59f149c 	ldr	r1, [pc, #1180]	; 4000926c <_tx_thread_system_suspend+0x5c4>
40008dcc:	e5911000 	ldr	r1, [r1]
40008dd0:	e5801000 	str	r1, [r0]
40008dd4:	e5901000 	ldr	r1, [r0]
40008dd8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008ddc:	e5801004 	str	r1, [r0, #4]
40008de0:	ea00000d 	b	40008e1c <_tx_thread_system_suspend+0x174>
40008de4:	e59f1494 	ldr	r1, [pc, #1172]	; 40009280 <_tx_thread_system_suspend+0x5d8>
40008de8:	e5911000 	ldr	r1, [r1]
40008dec:	e59f2490 	ldr	r2, [pc, #1168]	; 40009284 <_tx_thread_system_suspend+0x5dc>
40008df0:	e1510002 	cmp	r1, r2
40008df4:	2a000004 	bcs	40008e0c <_tx_thread_system_suspend+0x164>
40008df8:	e3e01000 	mvn	r1, #0
40008dfc:	e5801000 	str	r1, [r0]
40008e00:	e3a01000 	mov	r1, #0
40008e04:	e5801004 	str	r1, [r0, #4]
40008e08:	ea000003 	b	40008e1c <_tx_thread_system_suspend+0x174>
40008e0c:	e59f1470 	ldr	r1, [pc, #1136]	; 40009284 <_tx_thread_system_suspend+0x5dc>
40008e10:	e5801000 	str	r1, [r0]
40008e14:	e3a01000 	mov	r1, #0
40008e18:	e5801004 	str	r1, [r0, #4]
40008e1c:	e3a01002 	mov	r1, #2
40008e20:	e5801008 	str	r1, [r0, #8]
40008e24:	e5804010 	str	r4, [r0, #16]
40008e28:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008e2c:	e5801014 	str	r1, [r0, #20]
40008e30:	e28d1004 	add	r1, sp, #4
40008e34:	e5801018 	str	r1, [r0, #24]
40008e38:	e59f1448 	ldr	r1, [pc, #1096]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40008e3c:	e5911000 	ldr	r1, [r1]
40008e40:	e580101c 	str	r1, [r0, #28]
40008e44:	e2800020 	add	r0, r0, #32
40008e48:	e59f143c 	ldr	r1, [pc, #1084]	; 4000928c <_tx_thread_system_suspend+0x5e4>
40008e4c:	e5911000 	ldr	r1, [r1]
40008e50:	e1500001 	cmp	r0, r1
40008e54:	3a000001 	bcc	40008e60 <_tx_thread_system_suspend+0x1b8>
40008e58:	e59f1430 	ldr	r1, [pc, #1072]	; 40009290 <_tx_thread_system_suspend+0x5e8>
40008e5c:	e5910000 	ldr	r0, [r1]
40008e60:	e59f1410 	ldr	r1, [pc, #1040]	; 40009278 <_tx_thread_system_suspend+0x5d0>
40008e64:	e5810000 	str	r0, [r1]
40008e68:	e59f1424 	ldr	r1, [pc, #1060]	; 40009294 <_tx_thread_system_suspend+0x5ec>
40008e6c:	e5911000 	ldr	r1, [r1]
40008e70:	e5810020 	str	r0, [r1, #32]
40008e74:	e35a0000 	cmp	sl, #0
40008e78:	0a000000 	beq	40008e80 <_tx_thread_system_suspend+0x1d8>
40008e7c:	e59ab00c 	ldr	fp, [sl, #12]
40008e80:	e3a00000 	mov	r0, #0
40008e84:	e5840038 	str	r0, [r4, #56]	; 0x38
40008e88:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008e8c:	e5940020 	ldr	r0, [r4, #32]
40008e90:	e1500004 	cmp	r0, r4
40008e94:	0a000029 	beq	40008f40 <_tx_thread_system_suspend+0x298>
40008e98:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008e9c:	e5941020 	ldr	r1, [r4, #32]
40008ea0:	e5810024 	str	r0, [r1, #36]	; 0x24
40008ea4:	e5940020 	ldr	r0, [r4, #32]
40008ea8:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008eac:	e5810020 	str	r0, [r1, #32]
40008eb0:	e59f03e0 	ldr	r0, [pc, #992]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40008eb4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008eb8:	e1500004 	cmp	r0, r4
40008ebc:	1a0000c4 	bne	400091d4 <_tx_thread_system_suspend+0x52c>
40008ec0:	e59f13d0 	ldr	r1, [pc, #976]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40008ec4:	e5940020 	ldr	r0, [r4, #32]
40008ec8:	e7810107 	str	r0, [r1, r7, lsl #2]
40008ecc:	e59f03c8 	ldr	r0, [pc, #968]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40008ed0:	e5900000 	ldr	r0, [r0]
40008ed4:	e3500000 	cmp	r0, #0
40008ed8:	0a000005 	beq	40008ef4 <_tx_thread_system_suspend+0x24c>
40008edc:	e59f03b8 	ldr	r0, [pc, #952]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40008ee0:	e5900000 	ldr	r0, [r0]
40008ee4:	e3a01001 	mov	r1, #1
40008ee8:	e1c00711 	bic	r0, r0, r1, lsl r7
40008eec:	e59f13a8 	ldr	r1, [pc, #936]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40008ef0:	e5810000 	str	r0, [r1]
40008ef4:	e59f038c 	ldr	r0, [pc, #908]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40008ef8:	e5900000 	ldr	r0, [r0]
40008efc:	e1540000 	cmp	r4, r0
40008f00:	1a0000b3 	bne	400091d4 <_tx_thread_system_suspend+0x52c>
40008f04:	e59f038c 	ldr	r0, [pc, #908]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40008f08:	e59f1390 	ldr	r1, [pc, #912]	; 400092a0 <_tx_thread_system_suspend+0x5f8>
40008f0c:	e5911000 	ldr	r1, [r1]
40008f10:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008f14:	e59f136c 	ldr	r1, [pc, #876]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40008f18:	e5810000 	str	r0, [r1]
40008f1c:	e35a0000 	cmp	sl, #0
40008f20:	0a0000ab 	beq	400091d4 <_tx_thread_system_suspend+0x52c>
40008f24:	e59a000c 	ldr	r0, [sl, #12]
40008f28:	e150000b 	cmp	r0, fp
40008f2c:	1a0000a8 	bne	400091d4 <_tx_thread_system_suspend+0x52c>
40008f30:	e2810000 	add	r0, r1, #0
40008f34:	e5900000 	ldr	r0, [r0]
40008f38:	e58a001c 	str	r0, [sl, #28]
40008f3c:	ea0000a4 	b	400091d4 <_tx_thread_system_suspend+0x52c>
40008f40:	e3a00000 	mov	r0, #0
40008f44:	e59f134c 	ldr	r1, [pc, #844]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40008f48:	e7810107 	str	r0, [r1, r7, lsl #2]
40008f4c:	e59f0350 	ldr	r0, [pc, #848]	; 400092a4 <_tx_thread_system_suspend+0x5fc>
40008f50:	e5900000 	ldr	r0, [r0]
40008f54:	e3a01001 	mov	r1, #1
40008f58:	e1c00711 	bic	r0, r0, r1, lsl r7
40008f5c:	e59f1340 	ldr	r1, [pc, #832]	; 400092a4 <_tx_thread_system_suspend+0x5fc>
40008f60:	e5810000 	str	r0, [r1]
40008f64:	e59f0330 	ldr	r0, [pc, #816]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40008f68:	e5900000 	ldr	r0, [r0]
40008f6c:	e3500000 	cmp	r0, #0
40008f70:	0a000005 	beq	40008f8c <_tx_thread_system_suspend+0x2e4>
40008f74:	e59f0320 	ldr	r0, [pc, #800]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40008f78:	e5900000 	ldr	r0, [r0]
40008f7c:	e3a01001 	mov	r1, #1
40008f80:	e1c00711 	bic	r0, r0, r1, lsl r7
40008f84:	e59f1310 	ldr	r1, [pc, #784]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40008f88:	e5810000 	str	r0, [r1]
40008f8c:	e3a08000 	mov	r8, #0
40008f90:	e59f030c 	ldr	r0, [pc, #780]	; 400092a4 <_tx_thread_system_suspend+0x5fc>
40008f94:	e5909000 	ldr	r9, [r0]
40008f98:	e20900ff 	and	r0, r9, #255	; 0xff
40008f9c:	e58d0004 	str	r0, [sp, #4]
40008fa0:	e59d0004 	ldr	r0, [sp, #4]
40008fa4:	e3500000 	cmp	r0, #0
40008fa8:	1a00002a 	bne	40009058 <_tx_thread_system_suspend+0x3b0>
40008fac:	e1a09429 	lsr	r9, r9, #8
40008fb0:	e20900ff 	and	r0, r9, #255	; 0xff
40008fb4:	e58d0004 	str	r0, [sp, #4]
40008fb8:	e2888008 	add	r8, r8, #8
40008fbc:	e59d0004 	ldr	r0, [sp, #4]
40008fc0:	e3500000 	cmp	r0, #0
40008fc4:	1a000023 	bne	40009058 <_tx_thread_system_suspend+0x3b0>
40008fc8:	e1a09429 	lsr	r9, r9, #8
40008fcc:	e20900ff 	and	r0, r9, #255	; 0xff
40008fd0:	e58d0004 	str	r0, [sp, #4]
40008fd4:	e2888008 	add	r8, r8, #8
40008fd8:	e59d0004 	ldr	r0, [sp, #4]
40008fdc:	e3500000 	cmp	r0, #0
40008fe0:	1a00001c 	bne	40009058 <_tx_thread_system_suspend+0x3b0>
40008fe4:	e1a09429 	lsr	r9, r9, #8
40008fe8:	e20900ff 	and	r0, r9, #255	; 0xff
40008fec:	e58d0004 	str	r0, [sp, #4]
40008ff0:	e2888008 	add	r8, r8, #8
40008ff4:	e59d0004 	ldr	r0, [sp, #4]
40008ff8:	e3500000 	cmp	r0, #0
40008ffc:	1a000015 	bne	40009058 <_tx_thread_system_suspend+0x3b0>
40009000:	e3a00020 	mov	r0, #32
40009004:	e59f1294 	ldr	r1, [pc, #660]	; 400092a0 <_tx_thread_system_suspend+0x5f8>
40009008:	e5810000 	str	r0, [r1]
4000900c:	e3a00000 	mov	r0, #0
40009010:	e59f1270 	ldr	r1, [pc, #624]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40009014:	e5810000 	str	r0, [r1]
40009018:	e35a0000 	cmp	sl, #0
4000901c:	0a000004 	beq	40009034 <_tx_thread_system_suspend+0x38c>
40009020:	e59a000c 	ldr	r0, [sl, #12]
40009024:	e150000b 	cmp	r0, fp
40009028:	1a000001 	bne	40009034 <_tx_thread_system_suspend+0x38c>
4000902c:	e3a00000 	mov	r0, #0
40009030:	e58a001c 	str	r0, [sl, #28]
40009034:	e121f005 	msr	CPSR_c, r5
40009038:	e59f0240 	ldr	r0, [pc, #576]	; 40009280 <_tx_thread_system_suspend+0x5d8>
4000903c:	e5900000 	ldr	r0, [r0]
40009040:	e59f122c 	ldr	r1, [pc, #556]	; 40009274 <_tx_thread_system_suspend+0x5cc>
40009044:	e5911000 	ldr	r1, [r1]
40009048:	e1900001 	orrs	r0, r0, r1
4000904c:	1a000000 	bne	40009054 <_tx_thread_system_suspend+0x3ac>
40009050:	eb000725 	bl	4000acec <_tx_thread_system_return>
40009054:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009058:	e59f0248 	ldr	r0, [pc, #584]	; 400092a8 <_tx_thread_system_suspend+0x600>
4000905c:	e59d1004 	ldr	r1, [sp, #4]
40009060:	e7d00001 	ldrb	r0, [r0, r1]
40009064:	e0800008 	add	r0, r0, r8
40009068:	e59f1230 	ldr	r1, [pc, #560]	; 400092a0 <_tx_thread_system_suspend+0x5f8>
4000906c:	e5810000 	str	r0, [r1]
40009070:	e59f0210 	ldr	r0, [pc, #528]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40009074:	e5900000 	ldr	r0, [r0]
40009078:	e1540000 	cmp	r4, r0
4000907c:	1a000054 	bne	400091d4 <_tx_thread_system_suspend+0x52c>
40009080:	e59f0210 	ldr	r0, [pc, #528]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40009084:	e5911000 	ldr	r1, [r1]
40009088:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000908c:	e59f11f4 	ldr	r1, [pc, #500]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40009090:	e5810000 	str	r0, [r1]
40009094:	e35a0000 	cmp	sl, #0
40009098:	0a000005 	beq	400090b4 <_tx_thread_system_suspend+0x40c>
4000909c:	e59a000c 	ldr	r0, [sl, #12]
400090a0:	e150000b 	cmp	r0, fp
400090a4:	1a000002 	bne	400090b4 <_tx_thread_system_suspend+0x40c>
400090a8:	e2810000 	add	r0, r1, #0
400090ac:	e5900000 	ldr	r0, [r0]
400090b0:	e58a001c 	str	r0, [sl, #28]
400090b4:	e59f01e0 	ldr	r0, [pc, #480]	; 4000929c <_tx_thread_system_suspend+0x5f4>
400090b8:	e5900000 	ldr	r0, [r0]
400090bc:	e3500000 	cmp	r0, #0
400090c0:	0a000043 	beq	400091d4 <_tx_thread_system_suspend+0x52c>
400090c4:	e59f01a8 	ldr	r0, [pc, #424]	; 40009274 <_tx_thread_system_suspend+0x5cc>
400090c8:	e5900000 	ldr	r0, [r0]
400090cc:	e2800001 	add	r0, r0, #1
400090d0:	e59f119c 	ldr	r1, [pc, #412]	; 40009274 <_tx_thread_system_suspend+0x5cc>
400090d4:	e5810000 	str	r0, [r1]
400090d8:	e121f005 	msr	CPSR_c, r5
400090dc:	e10f5000 	mrs	r5, CPSR
400090e0:	e3856080 	orr	r6, r5, #128	; 0x80
400090e4:	e121f006 	msr	CPSR_c, r6
400090e8:	e2810000 	add	r0, r1, #0
400090ec:	e5900000 	ldr	r0, [r0]
400090f0:	e2400001 	sub	r0, r0, #1
400090f4:	e5810000 	str	r0, [r1]
400090f8:	e3a08000 	mov	r8, #0
400090fc:	e59f0198 	ldr	r0, [pc, #408]	; 4000929c <_tx_thread_system_suspend+0x5f4>
40009100:	e5909000 	ldr	r9, [r0]
40009104:	e20900ff 	and	r0, r9, #255	; 0xff
40009108:	e58d0004 	str	r0, [sp, #4]
4000910c:	e59d0004 	ldr	r0, [sp, #4]
40009110:	e3500000 	cmp	r0, #0
40009114:	1a000011 	bne	40009160 <_tx_thread_system_suspend+0x4b8>
40009118:	e1a09429 	lsr	r9, r9, #8
4000911c:	e20900ff 	and	r0, r9, #255	; 0xff
40009120:	e58d0004 	str	r0, [sp, #4]
40009124:	e2888008 	add	r8, r8, #8
40009128:	e59d0004 	ldr	r0, [sp, #4]
4000912c:	e3500000 	cmp	r0, #0
40009130:	1a00000a 	bne	40009160 <_tx_thread_system_suspend+0x4b8>
40009134:	e1a09429 	lsr	r9, r9, #8
40009138:	e20900ff 	and	r0, r9, #255	; 0xff
4000913c:	e58d0004 	str	r0, [sp, #4]
40009140:	e2888008 	add	r8, r8, #8
40009144:	e59d0004 	ldr	r0, [sp, #4]
40009148:	e3500000 	cmp	r0, #0
4000914c:	1a000003 	bne	40009160 <_tx_thread_system_suspend+0x4b8>
40009150:	e1a09429 	lsr	r9, r9, #8
40009154:	e20900ff 	and	r0, r9, #255	; 0xff
40009158:	e58d0004 	str	r0, [sp, #4]
4000915c:	e2888008 	add	r8, r8, #8
40009160:	e59f0140 	ldr	r0, [pc, #320]	; 400092a8 <_tx_thread_system_suspend+0x600>
40009164:	e59d1004 	ldr	r1, [sp, #4]
40009168:	e7d00001 	ldrb	r0, [r0, r1]
4000916c:	e0807008 	add	r7, r0, r8
40009170:	e59f0120 	ldr	r0, [pc, #288]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40009174:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009178:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000917c:	e59f111c 	ldr	r1, [pc, #284]	; 400092a0 <_tx_thread_system_suspend+0x5f8>
40009180:	e5911000 	ldr	r1, [r1]
40009184:	e1500001 	cmp	r0, r1
40009188:	8a000011 	bhi	400091d4 <_tx_thread_system_suspend+0x52c>
4000918c:	e59f0104 	ldr	r0, [pc, #260]	; 40009298 <_tx_thread_system_suspend+0x5f0>
40009190:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009194:	e59f10ec 	ldr	r1, [pc, #236]	; 40009288 <_tx_thread_system_suspend+0x5e0>
40009198:	e5810000 	str	r0, [r1]
4000919c:	e35a0000 	cmp	sl, #0
400091a0:	0a000005 	beq	400091bc <_tx_thread_system_suspend+0x514>
400091a4:	e59a000c 	ldr	r0, [sl, #12]
400091a8:	e150000b 	cmp	r0, fp
400091ac:	1a000002 	bne	400091bc <_tx_thread_system_suspend+0x514>
400091b0:	e2810000 	add	r0, r1, #0
400091b4:	e5900000 	ldr	r0, [r0]
400091b8:	e58a001c 	str	r0, [sl, #28]
400091bc:	e59f00d8 	ldr	r0, [pc, #216]	; 4000929c <_tx_thread_system_suspend+0x5f4>
400091c0:	e5900000 	ldr	r0, [r0]
400091c4:	e3a01001 	mov	r1, #1
400091c8:	e1c00711 	bic	r0, r0, r1, lsl r7
400091cc:	e59f10c8 	ldr	r1, [pc, #200]	; 4000929c <_tx_thread_system_suspend+0x5f4>
400091d0:	e5810000 	str	r0, [r1]
400091d4:	e121f005 	msr	CPSR_c, r5
400091d8:	e59f008c 	ldr	r0, [pc, #140]	; 4000926c <_tx_thread_system_suspend+0x5c4>
400091dc:	e5900000 	ldr	r0, [r0]
400091e0:	e59f10a0 	ldr	r1, [pc, #160]	; 40009288 <_tx_thread_system_suspend+0x5e0>
400091e4:	e5911000 	ldr	r1, [r1]
400091e8:	e1500001 	cmp	r0, r1
400091ec:	0a00001d 	beq	40009268 <_tx_thread_system_suspend+0x5c0>
400091f0:	e59f0090 	ldr	r0, [pc, #144]	; 40009288 <_tx_thread_system_suspend+0x5e0>
400091f4:	e5904000 	ldr	r4, [r0]
400091f8:	e5940008 	ldr	r0, [r4, #8]
400091fc:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009200:	e1500001 	cmp	r0, r1
40009204:	2a000001 	bcs	40009210 <_tx_thread_system_suspend+0x568>
40009208:	e5940008 	ldr	r0, [r4, #8]
4000920c:	e5840040 	str	r0, [r4, #64]	; 0x40
40009210:	e594000c 	ldr	r0, [r4, #12]
40009214:	e5900000 	ldr	r0, [r0]
40009218:	e59f1050 	ldr	r1, [pc, #80]	; 40009270 <_tx_thread_system_suspend+0x5c8>
4000921c:	e1500001 	cmp	r0, r1
40009220:	1a000007 	bne	40009244 <_tx_thread_system_suspend+0x59c>
40009224:	e5940010 	ldr	r0, [r4, #16]
40009228:	e5900001 	ldr	r0, [r0, #1]
4000922c:	e1500001 	cmp	r0, r1
40009230:	1a000003 	bne	40009244 <_tx_thread_system_suspend+0x59c>
40009234:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009238:	e594100c 	ldr	r1, [r4, #12]
4000923c:	e1500001 	cmp	r0, r1
40009240:	2a000001 	bcs	4000924c <_tx_thread_system_suspend+0x5a4>
40009244:	e1a00004 	mov	r0, r4
40009248:	eb0017fe 	bl	4000f248 <_tx_thread_stack_error_handler>
4000924c:	e59f002c 	ldr	r0, [pc, #44]	; 40009280 <_tx_thread_system_suspend+0x5d8>
40009250:	e5900000 	ldr	r0, [r0]
40009254:	e59f1018 	ldr	r1, [pc, #24]	; 40009274 <_tx_thread_system_suspend+0x5cc>
40009258:	e5911000 	ldr	r1, [r1]
4000925c:	e1900001 	orrs	r0, r0, r1
40009260:	1a000000 	bne	40009268 <_tx_thread_system_suspend+0x5c0>
40009264:	eb0006a0 	bl	4000acec <_tx_thread_system_return>
40009268:	eaffff79 	b	40009054 <_tx_thread_system_suspend+0x3ac>
4000926c:	40030e50 	.word	0x40030e50
40009270:	efefefef 	.word	0xefefefef
40009274:	40030e6c 	.word	0x40030e6c
40009278:	40030ebc 	.word	0x40030ebc
4000927c:	40030ec0 	.word	0x40030ec0
40009280:	40030e48 	.word	0x40030e48
40009284:	f0f0f0f0 	.word	0xf0f0f0f0
40009288:	40030e54 	.word	0x40030e54
4000928c:	40030eb8 	.word	0x40030eb8
40009290:	40030eb4 	.word	0x40030eb4
40009294:	40030ea8 	.word	0x40030ea8
40009298:	40032874 	.word	0x40032874
4000929c:	40030e64 	.word	0x40030e64
400092a0:	40030e68 	.word	0x40030e68
400092a4:	40030e60 	.word	0x40030e60
400092a8:	40032774 	.word	0x40032774

400092ac <_tx_time_get>:
400092ac:	e92d4008 	push	{r3, lr}
400092b0:	e10f1000 	mrs	r1, CPSR
400092b4:	e3812080 	orr	r2, r1, #128	; 0x80
400092b8:	e121f002 	msr	CPSR_c, r2
400092bc:	e59f00ec 	ldr	r0, [pc, #236]	; 400093b0 <_tx_time_get+0x104>
400092c0:	e5900000 	ldr	r0, [r0]
400092c4:	e58d0000 	str	r0, [sp]
400092c8:	e59f30e4 	ldr	r3, [pc, #228]	; 400093b4 <_tx_time_get+0x108>
400092cc:	e5930000 	ldr	r0, [r3]
400092d0:	e3500000 	cmp	r0, #0
400092d4:	0a000032 	beq	400093a4 <_tx_time_get+0xf8>
400092d8:	e59f30d8 	ldr	r3, [pc, #216]	; 400093b8 <_tx_time_get+0x10c>
400092dc:	e5933000 	ldr	r3, [r3]
400092e0:	e2833001 	add	r3, r3, #1
400092e4:	e59fc0cc 	ldr	ip, [pc, #204]	; 400093b8 <_tx_time_get+0x10c>
400092e8:	e58c3000 	str	r3, [ip]
400092ec:	e580300c 	str	r3, [r0, #12]
400092f0:	e59f30c4 	ldr	r3, [pc, #196]	; 400093bc <_tx_time_get+0x110>
400092f4:	e5933000 	ldr	r3, [r3]
400092f8:	e3530000 	cmp	r3, #0
400092fc:	1a000006 	bne	4000931c <_tx_time_get+0x70>
40009300:	e59f30b8 	ldr	r3, [pc, #184]	; 400093c0 <_tx_time_get+0x114>
40009304:	e5933000 	ldr	r3, [r3]
40009308:	e5803000 	str	r3, [r0]
4000930c:	e5903000 	ldr	r3, [r0]
40009310:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40009314:	e5803004 	str	r3, [r0, #4]
40009318:	ea00000d 	b	40009354 <_tx_time_get+0xa8>
4000931c:	e59f3098 	ldr	r3, [pc, #152]	; 400093bc <_tx_time_get+0x110>
40009320:	e5933000 	ldr	r3, [r3]
40009324:	e59fc098 	ldr	ip, [pc, #152]	; 400093c4 <_tx_time_get+0x118>
40009328:	e153000c 	cmp	r3, ip
4000932c:	2a000004 	bcs	40009344 <_tx_time_get+0x98>
40009330:	e3e03000 	mvn	r3, #0
40009334:	e5803000 	str	r3, [r0]
40009338:	e3a03000 	mov	r3, #0
4000933c:	e5803004 	str	r3, [r0, #4]
40009340:	ea000003 	b	40009354 <_tx_time_get+0xa8>
40009344:	e59f3078 	ldr	r3, [pc, #120]	; 400093c4 <_tx_time_get+0x118>
40009348:	e5803000 	str	r3, [r0]
4000934c:	e3a03000 	mov	r3, #0
40009350:	e5803004 	str	r3, [r0, #4]
40009354:	e3a03078 	mov	r3, #120	; 0x78
40009358:	e5803008 	str	r3, [r0, #8]
4000935c:	e59d3000 	ldr	r3, [sp]
40009360:	e5803010 	str	r3, [r0, #16]
40009364:	e580d014 	str	sp, [r0, #20]
40009368:	e3a03000 	mov	r3, #0
4000936c:	e5803018 	str	r3, [r0, #24]
40009370:	e580301c 	str	r3, [r0, #28]
40009374:	e2800020 	add	r0, r0, #32
40009378:	e59f3048 	ldr	r3, [pc, #72]	; 400093c8 <_tx_time_get+0x11c>
4000937c:	e5933000 	ldr	r3, [r3]
40009380:	e1500003 	cmp	r0, r3
40009384:	3a000001 	bcc	40009390 <_tx_time_get+0xe4>
40009388:	e59f303c 	ldr	r3, [pc, #60]	; 400093cc <_tx_time_get+0x120>
4000938c:	e5930000 	ldr	r0, [r3]
40009390:	e59f301c 	ldr	r3, [pc, #28]	; 400093b4 <_tx_time_get+0x108>
40009394:	e5830000 	str	r0, [r3]
40009398:	e59f3030 	ldr	r3, [pc, #48]	; 400093d0 <_tx_time_get+0x124>
4000939c:	e5933000 	ldr	r3, [r3]
400093a0:	e5830020 	str	r0, [r3, #32]
400093a4:	e121f001 	msr	CPSR_c, r1
400093a8:	e59d0000 	ldr	r0, [sp]
400093ac:	e8bd8008 	pop	{r3, pc}
400093b0:	40030e78 	.word	0x40030e78
400093b4:	40030ebc 	.word	0x40030ebc
400093b8:	40030ec0 	.word	0x40030ec0
400093bc:	40030e48 	.word	0x40030e48
400093c0:	40030e50 	.word	0x40030e50
400093c4:	f0f0f0f0 	.word	0xf0f0f0f0
400093c8:	40030eb8 	.word	0x40030eb8
400093cc:	40030eb4 	.word	0x40030eb4
400093d0:	40030ea8 	.word	0x40030ea8

400093d4 <_tx_timer_initialize>:
400093d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400093d8:	e24dd01c 	sub	sp, sp, #28
400093dc:	e3a00000 	mov	r0, #0
400093e0:	e59f10d8 	ldr	r1, [pc, #216]	; 400094c0 <_tx_timer_initialize+0xec>
400093e4:	e5810000 	str	r0, [r1]
400093e8:	e59f10d4 	ldr	r1, [pc, #212]	; 400094c4 <_tx_timer_initialize+0xf0>
400093ec:	e5810000 	str	r0, [r1]
400093f0:	e59f10d0 	ldr	r1, [pc, #208]	; 400094c8 <_tx_timer_initialize+0xf4>
400093f4:	e5810000 	str	r0, [r1]
400093f8:	e59f10cc 	ldr	r1, [pc, #204]	; 400094cc <_tx_timer_initialize+0xf8>
400093fc:	e5810000 	str	r0, [r1]
40009400:	e3a01080 	mov	r1, #128	; 0x80
40009404:	e59f00c4 	ldr	r0, [pc, #196]	; 400094d0 <_tx_timer_initialize+0xfc>
40009408:	eb002888 	bl	40013630 <__aeabi_memclr4>
4000940c:	e59f00bc 	ldr	r0, [pc, #188]	; 400094d0 <_tx_timer_initialize+0xfc>
40009410:	e59f10bc 	ldr	r1, [pc, #188]	; 400094d4 <_tx_timer_initialize+0x100>
40009414:	e5810000 	str	r0, [r1]
40009418:	e59f10b8 	ldr	r1, [pc, #184]	; 400094d8 <_tx_timer_initialize+0x104>
4000941c:	e5810000 	str	r0, [r1]
40009420:	e280007c 	add	r0, r0, #124	; 0x7c
40009424:	e59f10b0 	ldr	r1, [pc, #176]	; 400094dc <_tx_timer_initialize+0x108>
40009428:	e5810000 	str	r0, [r1]
4000942c:	e2810000 	add	r0, r1, #0
40009430:	e5900000 	ldr	r0, [r0]
40009434:	e2800004 	add	r0, r0, #4
40009438:	e5810000 	str	r0, [r1]
4000943c:	e59f009c 	ldr	r0, [pc, #156]	; 400094e0 <_tx_timer_initialize+0x10c>
40009440:	e59f109c 	ldr	r1, [pc, #156]	; 400094e4 <_tx_timer_initialize+0x110>
40009444:	e5810000 	str	r0, [r1]
40009448:	e3a00b01 	mov	r0, #1024	; 0x400
4000944c:	e59f1094 	ldr	r1, [pc, #148]	; 400094e8 <_tx_timer_initialize+0x114>
40009450:	e5810000 	str	r0, [r1]
40009454:	e3a00000 	mov	r0, #0
40009458:	e59f108c 	ldr	r1, [pc, #140]	; 400094ec <_tx_timer_initialize+0x118>
4000945c:	e5810000 	str	r0, [r1]
40009460:	e3a03000 	mov	r3, #0
40009464:	e2810000 	add	r0, r1, #0
40009468:	e5901000 	ldr	r1, [r0]
4000946c:	e5900000 	ldr	r0, [r0]
40009470:	e28d2008 	add	r2, sp, #8
40009474:	e882000b 	stm	r2, {r0, r1, r3}
40009478:	e59f0068 	ldr	r0, [pc, #104]	; 400094e8 <_tx_timer_initialize+0x114>
4000947c:	e58d3014 	str	r3, [sp, #20]
40009480:	e5903000 	ldr	r3, [r0]
40009484:	e59f0058 	ldr	r0, [pc, #88]	; 400094e4 <_tx_timer_initialize+0x110>
40009488:	e5902000 	ldr	r2, [r0]
4000948c:	e1cd20f0 	strd	r2, [sp]
40009490:	e59f3058 	ldr	r3, [pc, #88]	; 400094f0 <_tx_timer_initialize+0x11c>
40009494:	e59f2058 	ldr	r2, [pc, #88]	; 400094f4 <_tx_timer_initialize+0x120>
40009498:	e28f1058 	add	r1, pc, #88	; 0x58
4000949c:	e59f0068 	ldr	r0, [pc, #104]	; 4000950c <_tx_timer_initialize+0x138>
400094a0:	eb00143b 	bl	4000e594 <_tx_thread_create>
400094a4:	e3a00000 	mov	r0, #0
400094a8:	e59f1060 	ldr	r1, [pc, #96]	; 40009510 <_tx_timer_initialize+0x13c>
400094ac:	e5810000 	str	r0, [r1]
400094b0:	e59f105c 	ldr	r1, [pc, #92]	; 40009514 <_tx_timer_initialize+0x140>
400094b4:	e5810000 	str	r0, [r1]
400094b8:	e28dd01c 	add	sp, sp, #28
400094bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400094c0:	40030e78 	.word	0x40030e78
400094c4:	40030e7c 	.word	0x40030e7c
400094c8:	40030e80 	.word	0x40030e80
400094cc:	40030e90 	.word	0x40030e90
400094d0:	400328f4 	.word	0x400328f4
400094d4:	40030e84 	.word	0x40030e84
400094d8:	40030e8c 	.word	0x40030e8c
400094dc:	40030e88 	.word	0x40030e88
400094e0:	40032a1c 	.word	0x40032a1c
400094e4:	40030e9c 	.word	0x40030e9c
400094e8:	40030ea0 	.word	0x40030ea0
400094ec:	40030ea4 	.word	0x40030ea4
400094f0:	4154494d 	.word	0x4154494d
400094f4:	40009604 	.word	0x40009604
400094f8:	74737953 	.word	0x74737953
400094fc:	54206d65 	.word	0x54206d65
40009500:	72656d69 	.word	0x72656d69
40009504:	72685420 	.word	0x72685420
40009508:	00646165 	.word	0x00646165
4000950c:	40032974 	.word	0x40032974
40009510:	40030e94 	.word	0x40030e94
40009514:	40030e98 	.word	0x40030e98

40009518 <_tx_timer_system_activate>:
40009518:	e92d4010 	push	{r4, lr}
4000951c:	e1a01000 	mov	r1, r0
40009520:	e10f2000 	mrs	r2, CPSR
40009524:	e3823080 	orr	r3, r2, #128	; 0x80
40009528:	e121f003 	msr	CPSR_c, r3
4000952c:	e5910000 	ldr	r0, [r1]
40009530:	e3500000 	cmp	r0, #0
40009534:	0a00002c 	beq	400095ec <_tx_timer_system_activate+0xd4>
40009538:	e5910000 	ldr	r0, [r1]
4000953c:	e3700001 	cmn	r0, #1
40009540:	0a000029 	beq	400095ec <_tx_timer_system_activate+0xd4>
40009544:	e5910018 	ldr	r0, [r1, #24]
40009548:	e3500000 	cmp	r0, #0
4000954c:	1a000026 	bne	400095ec <_tx_timer_system_activate+0xd4>
40009550:	e5910000 	ldr	r0, [r1]
40009554:	e3500020 	cmp	r0, #32
40009558:	9a000001 	bls	40009564 <_tx_timer_system_activate+0x4c>
4000955c:	e3a0e01f 	mov	lr, #31
40009560:	ea000001 	b	4000956c <_tx_timer_system_activate+0x54>
40009564:	e5910000 	ldr	r0, [r1]
40009568:	e240e001 	sub	lr, r0, #1
4000956c:	e59f0084 	ldr	r0, [pc, #132]	; 400095f8 <_tx_timer_system_activate+0xe0>
40009570:	e5900000 	ldr	r0, [r0]
40009574:	e080c10e 	add	ip, r0, lr, lsl #2
40009578:	e59f007c 	ldr	r0, [pc, #124]	; 400095fc <_tx_timer_system_activate+0xe4>
4000957c:	e5900000 	ldr	r0, [r0]
40009580:	e15c0000 	cmp	ip, r0
40009584:	3a000006 	bcc	400095a4 <_tx_timer_system_activate+0x8c>
40009588:	e59f006c 	ldr	r0, [pc, #108]	; 400095fc <_tx_timer_system_activate+0xe4>
4000958c:	e5900000 	ldr	r0, [r0]
40009590:	e04c0000 	sub	r0, ip, r0
40009594:	e1a00140 	asr	r0, r0, #2
40009598:	e59f4060 	ldr	r4, [pc, #96]	; 40009600 <_tx_timer_system_activate+0xe8>
4000959c:	e5944000 	ldr	r4, [r4]
400095a0:	e084c100 	add	ip, r4, r0, lsl #2
400095a4:	e59c0000 	ldr	r0, [ip]
400095a8:	e3500000 	cmp	r0, #0
400095ac:	0a00000a 	beq	400095dc <_tx_timer_system_activate+0xc4>
400095b0:	e59c0000 	ldr	r0, [ip]
400095b4:	e5810010 	str	r0, [r1, #16]
400095b8:	e59c0000 	ldr	r0, [ip]
400095bc:	e5900014 	ldr	r0, [r0, #20]
400095c0:	e5810014 	str	r0, [r1, #20]
400095c4:	e5910014 	ldr	r0, [r1, #20]
400095c8:	e5801010 	str	r1, [r0, #16]
400095cc:	e59c0000 	ldr	r0, [ip]
400095d0:	e5801014 	str	r1, [r0, #20]
400095d4:	e581c018 	str	ip, [r1, #24]
400095d8:	ea000003 	b	400095ec <_tx_timer_system_activate+0xd4>
400095dc:	e5811010 	str	r1, [r1, #16]
400095e0:	e5811014 	str	r1, [r1, #20]
400095e4:	e581c018 	str	ip, [r1, #24]
400095e8:	e58c1000 	str	r1, [ip]
400095ec:	e121f002 	msr	CPSR_c, r2
400095f0:	e3a00000 	mov	r0, #0
400095f4:	e8bd8010 	pop	{r4, pc}
400095f8:	40030e8c 	.word	0x40030e8c
400095fc:	40030e88 	.word	0x40030e88
40009600:	40030e84 	.word	0x40030e84

40009604 <_tx_timer_thread_entry>:
40009604:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40009608:	e1a04000 	mov	r4, r0
4000960c:	e3a09000 	mov	r9, #0
40009610:	e59f0214 	ldr	r0, [pc, #532]	; 4000982c <_tx_timer_thread_entry+0x228>
40009614:	e1540000 	cmp	r4, r0
40009618:	0a000000 	beq	40009620 <_tx_timer_thread_entry+0x1c>
4000961c:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40009620:	e3a00000 	mov	r0, #0
40009624:	e58d0000 	str	r0, [sp]
40009628:	e1a00000 	nop			; (mov r0, r0)
4000962c:	e10f5000 	mrs	r5, CPSR
40009630:	e3856080 	orr	r6, r5, #128	; 0x80
40009634:	e121f006 	msr	CPSR_c, r6
40009638:	e59f01f0 	ldr	r0, [pc, #496]	; 40009830 <_tx_timer_thread_entry+0x22c>
4000963c:	e5900000 	ldr	r0, [r0]
40009640:	e5900000 	ldr	r0, [r0]
40009644:	e58d0004 	str	r0, [sp, #4]
40009648:	e59d0004 	ldr	r0, [sp, #4]
4000964c:	e3500000 	cmp	r0, #0
40009650:	0a000002 	beq	40009660 <_tx_timer_thread_entry+0x5c>
40009654:	e28d0004 	add	r0, sp, #4
40009658:	e59d1004 	ldr	r1, [sp, #4]
4000965c:	e5810018 	str	r0, [r1, #24]
40009660:	e3a00000 	mov	r0, #0
40009664:	e59f11c4 	ldr	r1, [pc, #452]	; 40009830 <_tx_timer_thread_entry+0x22c>
40009668:	e5911000 	ldr	r1, [r1]
4000966c:	e5810000 	str	r0, [r1]
40009670:	e59f01b8 	ldr	r0, [pc, #440]	; 40009830 <_tx_timer_thread_entry+0x22c>
40009674:	e5900000 	ldr	r0, [r0]
40009678:	e2800004 	add	r0, r0, #4
4000967c:	e59f11ac 	ldr	r1, [pc, #428]	; 40009830 <_tx_timer_thread_entry+0x22c>
40009680:	e5810000 	str	r0, [r1]
40009684:	e2810000 	add	r0, r1, #0
40009688:	e5900000 	ldr	r0, [r0]
4000968c:	e59f11a0 	ldr	r1, [pc, #416]	; 40009834 <_tx_timer_thread_entry+0x230>
40009690:	e5911000 	ldr	r1, [r1]
40009694:	e1500001 	cmp	r0, r1
40009698:	1a000003 	bne	400096ac <_tx_timer_thread_entry+0xa8>
4000969c:	e59f0194 	ldr	r0, [pc, #404]	; 40009838 <_tx_timer_thread_entry+0x234>
400096a0:	e5900000 	ldr	r0, [r0]
400096a4:	e59f1184 	ldr	r1, [pc, #388]	; 40009830 <_tx_timer_thread_entry+0x22c>
400096a8:	e5810000 	str	r0, [r1]
400096ac:	e3a00000 	mov	r0, #0
400096b0:	e59f1184 	ldr	r1, [pc, #388]	; 4000983c <_tx_timer_thread_entry+0x238>
400096b4:	e5810000 	str	r0, [r1]
400096b8:	e121f005 	msr	CPSR_c, r5
400096bc:	e10f5000 	mrs	r5, CPSR
400096c0:	e3856080 	orr	r6, r5, #128	; 0x80
400096c4:	e121f006 	msr	CPSR_c, r6
400096c8:	ea000040 	b	400097d0 <_tx_timer_thread_entry+0x1cc>
400096cc:	e59d7004 	ldr	r7, [sp, #4]
400096d0:	e59d0004 	ldr	r0, [sp, #4]
400096d4:	e5900010 	ldr	r0, [r0, #16]
400096d8:	e1500007 	cmp	r0, r7
400096dc:	1a000002 	bne	400096ec <_tx_timer_thread_entry+0xe8>
400096e0:	e3a00000 	mov	r0, #0
400096e4:	e58d0004 	str	r0, [sp, #4]
400096e8:	ea00000a 	b	40009718 <_tx_timer_thread_entry+0x114>
400096ec:	e5970014 	ldr	r0, [r7, #20]
400096f0:	e5971010 	ldr	r1, [r7, #16]
400096f4:	e5810014 	str	r0, [r1, #20]
400096f8:	e5970010 	ldr	r0, [r7, #16]
400096fc:	e5971014 	ldr	r1, [r7, #20]
40009700:	e5810010 	str	r0, [r1, #16]
40009704:	e28d0004 	add	r0, sp, #4
40009708:	e5971010 	ldr	r1, [r7, #16]
4000970c:	e5810018 	str	r0, [r1, #24]
40009710:	e5970010 	ldr	r0, [r7, #16]
40009714:	e58d0004 	str	r0, [sp, #4]
40009718:	e5970000 	ldr	r0, [r7]
4000971c:	e3500020 	cmp	r0, #32
40009720:	9a000006 	bls	40009740 <_tx_timer_thread_entry+0x13c>
40009724:	e5970000 	ldr	r0, [r7]
40009728:	e2400020 	sub	r0, r0, #32
4000972c:	e5870000 	str	r0, [r7]
40009730:	e3a08000 	mov	r8, #0
40009734:	e587d018 	str	sp, [r7, #24]
40009738:	e5877010 	str	r7, [r7, #16]
4000973c:	ea00000b 	b	40009770 <_tx_timer_thread_entry+0x16c>
40009740:	e5978008 	ldr	r8, [r7, #8]
40009744:	e597900c 	ldr	r9, [r7, #12]
40009748:	e5970004 	ldr	r0, [r7, #4]
4000974c:	e5870000 	str	r0, [r7]
40009750:	e5970000 	ldr	r0, [r7]
40009754:	e3500000 	cmp	r0, #0
40009758:	0a000002 	beq	40009768 <_tx_timer_thread_entry+0x164>
4000975c:	e587d018 	str	sp, [r7, #24]
40009760:	e5877010 	str	r7, [r7, #16]
40009764:	ea000001 	b	40009770 <_tx_timer_thread_entry+0x16c>
40009768:	e3a00000 	mov	r0, #0
4000976c:	e5870018 	str	r0, [r7, #24]
40009770:	e121f005 	msr	CPSR_c, r5
40009774:	e3580000 	cmp	r8, #0
40009778:	0a000001 	beq	40009784 <_tx_timer_thread_entry+0x180>
4000977c:	e1a00009 	mov	r0, r9
40009780:	e12fff38 	blx	r8
40009784:	e10f5000 	mrs	r5, CPSR
40009788:	e3856080 	orr	r6, r5, #128	; 0x80
4000978c:	e121f006 	msr	CPSR_c, r6
40009790:	e1a0100d 	mov	r1, sp
40009794:	e5970018 	ldr	r0, [r7, #24]
40009798:	e1500001 	cmp	r0, r1
4000979c:	1a000007 	bne	400097c0 <_tx_timer_thread_entry+0x1bc>
400097a0:	e3a00000 	mov	r0, #0
400097a4:	e5870018 	str	r0, [r7, #24]
400097a8:	e121f005 	msr	CPSR_c, r5
400097ac:	e1a00007 	mov	r0, r7
400097b0:	ebffff58 	bl	40009518 <_tx_timer_system_activate>
400097b4:	e10f5000 	mrs	r5, CPSR
400097b8:	e3856080 	orr	r6, r5, #128	; 0x80
400097bc:	e121f006 	msr	CPSR_c, r6
400097c0:	e121f005 	msr	CPSR_c, r5
400097c4:	e10f5000 	mrs	r5, CPSR
400097c8:	e3856080 	orr	r6, r5, #128	; 0x80
400097cc:	e121f006 	msr	CPSR_c, r6
400097d0:	e59d0004 	ldr	r0, [sp, #4]
400097d4:	e3500000 	cmp	r0, #0
400097d8:	1affffbb 	bne	400096cc <_tx_timer_thread_entry+0xc8>
400097dc:	e59f0058 	ldr	r0, [pc, #88]	; 4000983c <_tx_timer_thread_entry+0x238>
400097e0:	e5900000 	ldr	r0, [r0]
400097e4:	e3500000 	cmp	r0, #0
400097e8:	1a00000d 	bne	40009824 <_tx_timer_thread_entry+0x220>
400097ec:	e59fa04c 	ldr	sl, [pc, #76]	; 40009840 <_tx_timer_thread_entry+0x23c>
400097f0:	e3a00003 	mov	r0, #3
400097f4:	e58a0030 	str	r0, [sl, #48]	; 0x30
400097f8:	e3a00001 	mov	r0, #1
400097fc:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009800:	e59f003c 	ldr	r0, [pc, #60]	; 40009844 <_tx_timer_thread_entry+0x240>
40009804:	e5900000 	ldr	r0, [r0]
40009808:	e2800001 	add	r0, r0, #1
4000980c:	e59f1030 	ldr	r1, [pc, #48]	; 40009844 <_tx_timer_thread_entry+0x240>
40009810:	e5810000 	str	r0, [r1]
40009814:	e121f005 	msr	CPSR_c, r5
40009818:	e1a0000a 	mov	r0, sl
4000981c:	ebfffd21 	bl	40008ca8 <_tx_thread_system_suspend>
40009820:	ea000000 	b	40009828 <_tx_timer_thread_entry+0x224>
40009824:	e121f005 	msr	CPSR_c, r5
40009828:	eaffff7f 	b	4000962c <_tx_timer_thread_entry+0x28>
4000982c:	4154494d 	.word	0x4154494d
40009830:	40030e8c 	.word	0x40030e8c
40009834:	40030e88 	.word	0x40030e88
40009838:	40030e84 	.word	0x40030e84
4000983c:	40030e90 	.word	0x40030e90
40009840:	40032974 	.word	0x40032974
40009844:	40030e6c 	.word	0x40030e6c

40009848 <_tx_trace_initialize>:
40009848:	e3a00000 	mov	r0, #0
4000984c:	e59f102c 	ldr	r1, [pc, #44]	; 40009880 <_tx_trace_initialize+0x38>
40009850:	e5810000 	str	r0, [r1]
40009854:	e59f1028 	ldr	r1, [pc, #40]	; 40009884 <_tx_trace_initialize+0x3c>
40009858:	e5810000 	str	r0, [r1]
4000985c:	e59f1024 	ldr	r1, [pc, #36]	; 40009888 <_tx_trace_initialize+0x40>
40009860:	e5810000 	str	r0, [r1]
40009864:	e59f1020 	ldr	r1, [pc, #32]	; 4000988c <_tx_trace_initialize+0x44>
40009868:	e5810000 	str	r0, [r1]
4000986c:	e59f101c 	ldr	r1, [pc, #28]	; 40009890 <_tx_trace_initialize+0x48>
40009870:	e5810000 	str	r0, [r1]
40009874:	e59f1018 	ldr	r1, [pc, #24]	; 40009894 <_tx_trace_initialize+0x4c>
40009878:	e5810000 	str	r0, [r1]
4000987c:	e12fff1e 	bx	lr
40009880:	40030ea8 	.word	0x40030ea8
40009884:	40030eac 	.word	0x40030eac
40009888:	40030eb0 	.word	0x40030eb0
4000988c:	40030eb4 	.word	0x40030eb4
40009890:	40030eb8 	.word	0x40030eb8
40009894:	40030ebc 	.word	0x40030ebc

40009898 <_txe_byte_allocate>:
40009898:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000989c:	e1a04000 	mov	r4, r0
400098a0:	e1a05001 	mov	r5, r1
400098a4:	e1a06002 	mov	r6, r2
400098a8:	e1a07003 	mov	r7, r3
400098ac:	e3540000 	cmp	r4, #0
400098b0:	0a000003 	beq	400098c4 <_txe_byte_allocate+0x2c>
400098b4:	e5940000 	ldr	r0, [r4]
400098b8:	e59f10d4 	ldr	r1, [pc, #212]	; 40009994 <_txe_byte_allocate+0xfc>
400098bc:	e1500001 	cmp	r0, r1
400098c0:	0a000001 	beq	400098cc <_txe_byte_allocate+0x34>
400098c4:	e3a00002 	mov	r0, #2
400098c8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400098cc:	e3550000 	cmp	r5, #0
400098d0:	1a000001 	bne	400098dc <_txe_byte_allocate+0x44>
400098d4:	e3a00003 	mov	r0, #3
400098d8:	eafffffa 	b	400098c8 <_txe_byte_allocate+0x30>
400098dc:	e3560000 	cmp	r6, #0
400098e0:	0a000002 	beq	400098f0 <_txe_byte_allocate+0x58>
400098e4:	e594001c 	ldr	r0, [r4, #28]
400098e8:	e1500006 	cmp	r0, r6
400098ec:	2a000001 	bcs	400098f8 <_txe_byte_allocate+0x60>
400098f0:	e3a00005 	mov	r0, #5
400098f4:	eafffff3 	b	400098c8 <_txe_byte_allocate+0x30>
400098f8:	e59f0098 	ldr	r0, [pc, #152]	; 40009998 <_txe_byte_allocate+0x100>
400098fc:	e5908000 	ldr	r8, [r0]
40009900:	e3570000 	cmp	r7, #0
40009904:	0a000008 	beq	4000992c <_txe_byte_allocate+0x94>
40009908:	e59f008c 	ldr	r0, [pc, #140]	; 4000999c <_txe_byte_allocate+0x104>
4000990c:	e5900000 	ldr	r0, [r0]
40009910:	e3500000 	cmp	r0, #0
40009914:	1a000002 	bne	40009924 <_txe_byte_allocate+0x8c>
40009918:	e59f0080 	ldr	r0, [pc, #128]	; 400099a0 <_txe_byte_allocate+0x108>
4000991c:	e1580000 	cmp	r8, r0
40009920:	1a000001 	bne	4000992c <_txe_byte_allocate+0x94>
40009924:	e3a00004 	mov	r0, #4
40009928:	eaffffe6 	b	400098c8 <_txe_byte_allocate+0x30>
4000992c:	e3580000 	cmp	r8, #0
40009930:	0a000008 	beq	40009958 <_txe_byte_allocate+0xc0>
40009934:	e59f0064 	ldr	r0, [pc, #100]	; 400099a0 <_txe_byte_allocate+0x108>
40009938:	e1580000 	cmp	r8, r0
4000993c:	0a000003 	beq	40009950 <_txe_byte_allocate+0xb8>
40009940:	e59f0054 	ldr	r0, [pc, #84]	; 4000999c <_txe_byte_allocate+0x104>
40009944:	e5900000 	ldr	r0, [r0]
40009948:	e3500000 	cmp	r0, #0
4000994c:	0a000008 	beq	40009974 <_txe_byte_allocate+0xdc>
40009950:	e3a00013 	mov	r0, #19
40009954:	eaffffdb 	b	400098c8 <_txe_byte_allocate+0x30>
40009958:	e59f003c 	ldr	r0, [pc, #60]	; 4000999c <_txe_byte_allocate+0x104>
4000995c:	e5900000 	ldr	r0, [r0]
40009960:	e59f103c 	ldr	r1, [pc, #60]	; 400099a4 <_txe_byte_allocate+0x10c>
40009964:	e1500001 	cmp	r0, r1
40009968:	2a000001 	bcs	40009974 <_txe_byte_allocate+0xdc>
4000996c:	e3a00013 	mov	r0, #19
40009970:	eaffffd4 	b	400098c8 <_txe_byte_allocate+0x30>
40009974:	e1a03007 	mov	r3, r7
40009978:	e1a02006 	mov	r2, r6
4000997c:	e1a01005 	mov	r1, r5
40009980:	e1a00004 	mov	r0, r4
40009984:	eb0005bf 	bl	4000b088 <_tx_byte_allocate>
40009988:	e1a09000 	mov	r9, r0
4000998c:	e1a00009 	mov	r0, r9
40009990:	eaffffcc 	b	400098c8 <_txe_byte_allocate+0x30>
40009994:	42595445 	.word	0x42595445
40009998:	40030e50 	.word	0x40030e50
4000999c:	40030e48 	.word	0x40030e48
400099a0:	40032974 	.word	0x40032974
400099a4:	f0f0f0f0 	.word	0xf0f0f0f0

400099a8 <_txe_byte_pool_create>:
400099a8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400099ac:	e1a04000 	mov	r4, r0
400099b0:	e1a05001 	mov	r5, r1
400099b4:	e1a06002 	mov	r6, r2
400099b8:	e1a07003 	mov	r7, r3
400099bc:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
400099c0:	e3540000 	cmp	r4, #0
400099c4:	0a000001 	beq	400099d0 <_txe_byte_pool_create+0x28>
400099c8:	e3580034 	cmp	r8, #52	; 0x34
400099cc:	0a000001 	beq	400099d8 <_txe_byte_pool_create+0x30>
400099d0:	e3a00002 	mov	r0, #2
400099d4:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400099d8:	e10f9000 	mrs	r9, CPSR
400099dc:	e389a080 	orr	sl, r9, #128	; 0x80
400099e0:	e121f00a 	msr	CPSR_c, sl
400099e4:	e59f0130 	ldr	r0, [pc, #304]	; 40009b1c <_txe_byte_pool_create+0x174>
400099e8:	e5900000 	ldr	r0, [r0]
400099ec:	e2800001 	add	r0, r0, #1
400099f0:	e59f1124 	ldr	r1, [pc, #292]	; 40009b1c <_txe_byte_pool_create+0x174>
400099f4:	e5810000 	str	r0, [r1]
400099f8:	e121f009 	msr	CPSR_c, r9
400099fc:	e59f011c 	ldr	r0, [pc, #284]	; 40009b20 <_txe_byte_pool_create+0x178>
40009a00:	e5900000 	ldr	r0, [r0]
40009a04:	e58d0004 	str	r0, [sp, #4]
40009a08:	e3a0b000 	mov	fp, #0
40009a0c:	ea000007 	b	40009a30 <_txe_byte_pool_create+0x88>
40009a10:	e59d0004 	ldr	r0, [sp, #4]
40009a14:	e1540000 	cmp	r4, r0
40009a18:	1a000000 	bne	40009a20 <_txe_byte_pool_create+0x78>
40009a1c:	ea000007 	b	40009a40 <_txe_byte_pool_create+0x98>
40009a20:	e59d0004 	ldr	r0, [sp, #4]
40009a24:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009a28:	e58d0004 	str	r0, [sp, #4]
40009a2c:	e28bb001 	add	fp, fp, #1
40009a30:	e59f00ec 	ldr	r0, [pc, #236]	; 40009b24 <_txe_byte_pool_create+0x17c>
40009a34:	e5900000 	ldr	r0, [r0]
40009a38:	e15b0000 	cmp	fp, r0
40009a3c:	3afffff3 	bcc	40009a10 <_txe_byte_pool_create+0x68>
40009a40:	e1a00000 	nop			; (mov r0, r0)
40009a44:	e10f9000 	mrs	r9, CPSR
40009a48:	e389a080 	orr	sl, r9, #128	; 0x80
40009a4c:	e121f00a 	msr	CPSR_c, sl
40009a50:	e59f00c4 	ldr	r0, [pc, #196]	; 40009b1c <_txe_byte_pool_create+0x174>
40009a54:	e5900000 	ldr	r0, [r0]
40009a58:	e2400001 	sub	r0, r0, #1
40009a5c:	e59f10b8 	ldr	r1, [pc, #184]	; 40009b1c <_txe_byte_pool_create+0x174>
40009a60:	e5810000 	str	r0, [r1]
40009a64:	e121f009 	msr	CPSR_c, r9
40009a68:	eb001609 	bl	4000f294 <_tx_thread_system_preempt_check>
40009a6c:	e59d0004 	ldr	r0, [sp, #4]
40009a70:	e1540000 	cmp	r4, r0
40009a74:	1a000001 	bne	40009a80 <_txe_byte_pool_create+0xd8>
40009a78:	e3a00002 	mov	r0, #2
40009a7c:	eaffffd4 	b	400099d4 <_txe_byte_pool_create+0x2c>
40009a80:	e3560000 	cmp	r6, #0
40009a84:	1a000001 	bne	40009a90 <_txe_byte_pool_create+0xe8>
40009a88:	e3a00003 	mov	r0, #3
40009a8c:	eaffffd0 	b	400099d4 <_txe_byte_pool_create+0x2c>
40009a90:	e3570064 	cmp	r7, #100	; 0x64
40009a94:	2a000001 	bcs	40009aa0 <_txe_byte_pool_create+0xf8>
40009a98:	e3a00005 	mov	r0, #5
40009a9c:	eaffffcc 	b	400099d4 <_txe_byte_pool_create+0x2c>
40009aa0:	e59f0080 	ldr	r0, [pc, #128]	; 40009b28 <_txe_byte_pool_create+0x180>
40009aa4:	e5900000 	ldr	r0, [r0]
40009aa8:	e58d0000 	str	r0, [sp]
40009aac:	e59d0000 	ldr	r0, [sp]
40009ab0:	e3500000 	cmp	r0, #0
40009ab4:	0a000009 	beq	40009ae0 <_txe_byte_pool_create+0x138>
40009ab8:	e59f106c 	ldr	r1, [pc, #108]	; 40009b2c <_txe_byte_pool_create+0x184>
40009abc:	e59d0000 	ldr	r0, [sp]
40009ac0:	e1500001 	cmp	r0, r1
40009ac4:	0a000003 	beq	40009ad8 <_txe_byte_pool_create+0x130>
40009ac8:	e59f0060 	ldr	r0, [pc, #96]	; 40009b30 <_txe_byte_pool_create+0x188>
40009acc:	e5900000 	ldr	r0, [r0]
40009ad0:	e3500000 	cmp	r0, #0
40009ad4:	0a000008 	beq	40009afc <_txe_byte_pool_create+0x154>
40009ad8:	e3a00013 	mov	r0, #19
40009adc:	eaffffbc 	b	400099d4 <_txe_byte_pool_create+0x2c>
40009ae0:	e59f0048 	ldr	r0, [pc, #72]	; 40009b30 <_txe_byte_pool_create+0x188>
40009ae4:	e5900000 	ldr	r0, [r0]
40009ae8:	e59f1044 	ldr	r1, [pc, #68]	; 40009b34 <_txe_byte_pool_create+0x18c>
40009aec:	e1500001 	cmp	r0, r1
40009af0:	2a000001 	bcs	40009afc <_txe_byte_pool_create+0x154>
40009af4:	e3a00013 	mov	r0, #19
40009af8:	eaffffb5 	b	400099d4 <_txe_byte_pool_create+0x2c>
40009afc:	e1a03007 	mov	r3, r7
40009b00:	e1a02006 	mov	r2, r6
40009b04:	e1a01005 	mov	r1, r5
40009b08:	e1a00004 	mov	r0, r4
40009b0c:	eb000643 	bl	4000b420 <_tx_byte_pool_create>
40009b10:	e58d0008 	str	r0, [sp, #8]
40009b14:	e59d0008 	ldr	r0, [sp, #8]
40009b18:	eaffffad 	b	400099d4 <_txe_byte_pool_create+0x2c>
40009b1c:	40030e6c 	.word	0x40030e6c
40009b20:	40030eec 	.word	0x40030eec
40009b24:	40030ef0 	.word	0x40030ef0
40009b28:	40030e50 	.word	0x40030e50
40009b2c:	40032974 	.word	0x40032974
40009b30:	40030e48 	.word	0x40030e48
40009b34:	f0f0f0f0 	.word	0xf0f0f0f0

40009b38 <_txe_byte_pool_delete>:
40009b38:	e92d4070 	push	{r4, r5, r6, lr}
40009b3c:	e1a04000 	mov	r4, r0
40009b40:	e3540000 	cmp	r4, #0
40009b44:	0a000003 	beq	40009b58 <_txe_byte_pool_delete+0x20>
40009b48:	e5940000 	ldr	r0, [r4]
40009b4c:	e59f1054 	ldr	r1, [pc, #84]	; 40009ba8 <_txe_byte_pool_delete+0x70>
40009b50:	e1500001 	cmp	r0, r1
40009b54:	0a000001 	beq	40009b60 <_txe_byte_pool_delete+0x28>
40009b58:	e3a00002 	mov	r0, #2
40009b5c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009b60:	e59f0044 	ldr	r0, [pc, #68]	; 40009bac <_txe_byte_pool_delete+0x74>
40009b64:	e5905000 	ldr	r5, [r0]
40009b68:	e3550000 	cmp	r5, #0
40009b6c:	0a000006 	beq	40009b8c <_txe_byte_pool_delete+0x54>
40009b70:	e59f0038 	ldr	r0, [pc, #56]	; 40009bb0 <_txe_byte_pool_delete+0x78>
40009b74:	e5900000 	ldr	r0, [r0]
40009b78:	e3500000 	cmp	r0, #0
40009b7c:	1a000002 	bne	40009b8c <_txe_byte_pool_delete+0x54>
40009b80:	e59f002c 	ldr	r0, [pc, #44]	; 40009bb4 <_txe_byte_pool_delete+0x7c>
40009b84:	e1550000 	cmp	r5, r0
40009b88:	1a000001 	bne	40009b94 <_txe_byte_pool_delete+0x5c>
40009b8c:	e3a00013 	mov	r0, #19
40009b90:	eafffff1 	b	40009b5c <_txe_byte_pool_delete+0x24>
40009b94:	e1a00004 	mov	r0, r4
40009b98:	eb0006b6 	bl	4000b678 <_tx_byte_pool_delete>
40009b9c:	e1a06000 	mov	r6, r0
40009ba0:	e1a00006 	mov	r0, r6
40009ba4:	eaffffec 	b	40009b5c <_txe_byte_pool_delete+0x24>
40009ba8:	42595445 	.word	0x42595445
40009bac:	40030e50 	.word	0x40030e50
40009bb0:	40030e48 	.word	0x40030e48
40009bb4:	40032974 	.word	0x40032974

40009bb8 <_txe_byte_release>:
40009bb8:	e92d4070 	push	{r4, r5, r6, lr}
40009bbc:	e1a04000 	mov	r4, r0
40009bc0:	e3540000 	cmp	r4, #0
40009bc4:	1a000001 	bne	40009bd0 <_txe_byte_release+0x18>
40009bc8:	e3a00003 	mov	r0, #3
40009bcc:	e8bd8070 	pop	{r4, r5, r6, pc}
40009bd0:	e59f005c 	ldr	r0, [pc, #92]	; 40009c34 <_txe_byte_release+0x7c>
40009bd4:	e5905000 	ldr	r5, [r0]
40009bd8:	e3550000 	cmp	r5, #0
40009bdc:	0a000008 	beq	40009c04 <_txe_byte_release+0x4c>
40009be0:	e59f0050 	ldr	r0, [pc, #80]	; 40009c38 <_txe_byte_release+0x80>
40009be4:	e1550000 	cmp	r5, r0
40009be8:	0a000003 	beq	40009bfc <_txe_byte_release+0x44>
40009bec:	e59f0048 	ldr	r0, [pc, #72]	; 40009c3c <_txe_byte_release+0x84>
40009bf0:	e5900000 	ldr	r0, [r0]
40009bf4:	e3500000 	cmp	r0, #0
40009bf8:	0a000008 	beq	40009c20 <_txe_byte_release+0x68>
40009bfc:	e3a00013 	mov	r0, #19
40009c00:	eafffff1 	b	40009bcc <_txe_byte_release+0x14>
40009c04:	e59f0030 	ldr	r0, [pc, #48]	; 40009c3c <_txe_byte_release+0x84>
40009c08:	e5900000 	ldr	r0, [r0]
40009c0c:	e59f102c 	ldr	r1, [pc, #44]	; 40009c40 <_txe_byte_release+0x88>
40009c10:	e1500001 	cmp	r0, r1
40009c14:	2a000001 	bcs	40009c20 <_txe_byte_release+0x68>
40009c18:	e3a00013 	mov	r0, #19
40009c1c:	eaffffea 	b	40009bcc <_txe_byte_release+0x14>
40009c20:	e1a00004 	mov	r0, r4
40009c24:	eb000794 	bl	4000ba7c <_tx_byte_release>
40009c28:	e1a06000 	mov	r6, r0
40009c2c:	e1a00006 	mov	r0, r6
40009c30:	eaffffe5 	b	40009bcc <_txe_byte_release+0x14>
40009c34:	40030e50 	.word	0x40030e50
40009c38:	40032974 	.word	0x40032974
40009c3c:	40030e48 	.word	0x40030e48
40009c40:	f0f0f0f0 	.word	0xf0f0f0f0

40009c44 <_txe_event_flags_create>:
40009c44:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009c48:	e1a04000 	mov	r4, r0
40009c4c:	e1a05001 	mov	r5, r1
40009c50:	e1a06002 	mov	r6, r2
40009c54:	e3540000 	cmp	r4, #0
40009c58:	0a000001 	beq	40009c64 <_txe_event_flags_create+0x20>
40009c5c:	e3560028 	cmp	r6, #40	; 0x28
40009c60:	0a000001 	beq	40009c6c <_txe_event_flags_create+0x28>
40009c64:	e3a00006 	mov	r0, #6
40009c68:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009c6c:	e10f7000 	mrs	r7, CPSR
40009c70:	e3878080 	orr	r8, r7, #128	; 0x80
40009c74:	e121f008 	msr	CPSR_c, r8
40009c78:	e59f00e8 	ldr	r0, [pc, #232]	; 40009d68 <_txe_event_flags_create+0x124>
40009c7c:	e5900000 	ldr	r0, [r0]
40009c80:	e2800001 	add	r0, r0, #1
40009c84:	e59f10dc 	ldr	r1, [pc, #220]	; 40009d68 <_txe_event_flags_create+0x124>
40009c88:	e5810000 	str	r0, [r1]
40009c8c:	e121f007 	msr	CPSR_c, r7
40009c90:	e59f00d4 	ldr	r0, [pc, #212]	; 40009d6c <_txe_event_flags_create+0x128>
40009c94:	e590a000 	ldr	sl, [r0]
40009c98:	e3a09000 	mov	r9, #0
40009c9c:	ea000004 	b	40009cb4 <_txe_event_flags_create+0x70>
40009ca0:	e154000a 	cmp	r4, sl
40009ca4:	1a000000 	bne	40009cac <_txe_event_flags_create+0x68>
40009ca8:	ea000005 	b	40009cc4 <_txe_event_flags_create+0x80>
40009cac:	e59aa018 	ldr	sl, [sl, #24]
40009cb0:	e2899001 	add	r9, r9, #1
40009cb4:	e59f00b4 	ldr	r0, [pc, #180]	; 40009d70 <_txe_event_flags_create+0x12c>
40009cb8:	e5900000 	ldr	r0, [r0]
40009cbc:	e1590000 	cmp	r9, r0
40009cc0:	3afffff6 	bcc	40009ca0 <_txe_event_flags_create+0x5c>
40009cc4:	e1a00000 	nop			; (mov r0, r0)
40009cc8:	e10f7000 	mrs	r7, CPSR
40009ccc:	e3878080 	orr	r8, r7, #128	; 0x80
40009cd0:	e121f008 	msr	CPSR_c, r8
40009cd4:	e59f008c 	ldr	r0, [pc, #140]	; 40009d68 <_txe_event_flags_create+0x124>
40009cd8:	e5900000 	ldr	r0, [r0]
40009cdc:	e2400001 	sub	r0, r0, #1
40009ce0:	e59f1080 	ldr	r1, [pc, #128]	; 40009d68 <_txe_event_flags_create+0x124>
40009ce4:	e5810000 	str	r0, [r1]
40009ce8:	e121f007 	msr	CPSR_c, r7
40009cec:	eb001568 	bl	4000f294 <_tx_thread_system_preempt_check>
40009cf0:	e154000a 	cmp	r4, sl
40009cf4:	1a000001 	bne	40009d00 <_txe_event_flags_create+0xbc>
40009cf8:	e3a00006 	mov	r0, #6
40009cfc:	eaffffd9 	b	40009c68 <_txe_event_flags_create+0x24>
40009d00:	e59f006c 	ldr	r0, [pc, #108]	; 40009d74 <_txe_event_flags_create+0x130>
40009d04:	e590b000 	ldr	fp, [r0]
40009d08:	e35b0000 	cmp	fp, #0
40009d0c:	0a000008 	beq	40009d34 <_txe_event_flags_create+0xf0>
40009d10:	e59f0060 	ldr	r0, [pc, #96]	; 40009d78 <_txe_event_flags_create+0x134>
40009d14:	e15b0000 	cmp	fp, r0
40009d18:	0a000003 	beq	40009d2c <_txe_event_flags_create+0xe8>
40009d1c:	e59f0058 	ldr	r0, [pc, #88]	; 40009d7c <_txe_event_flags_create+0x138>
40009d20:	e5900000 	ldr	r0, [r0]
40009d24:	e3500000 	cmp	r0, #0
40009d28:	0a000008 	beq	40009d50 <_txe_event_flags_create+0x10c>
40009d2c:	e3a00013 	mov	r0, #19
40009d30:	eaffffcc 	b	40009c68 <_txe_event_flags_create+0x24>
40009d34:	e59f0040 	ldr	r0, [pc, #64]	; 40009d7c <_txe_event_flags_create+0x138>
40009d38:	e5900000 	ldr	r0, [r0]
40009d3c:	e59f103c 	ldr	r1, [pc, #60]	; 40009d80 <_txe_event_flags_create+0x13c>
40009d40:	e1500001 	cmp	r0, r1
40009d44:	2a000001 	bcs	40009d50 <_txe_event_flags_create+0x10c>
40009d48:	e3a00013 	mov	r0, #19
40009d4c:	eaffffc5 	b	40009c68 <_txe_event_flags_create+0x24>
40009d50:	e1a01005 	mov	r1, r5
40009d54:	e1a00004 	mov	r0, r4
40009d58:	eb0007f9 	bl	4000bd44 <_tx_event_flags_create>
40009d5c:	e58d0000 	str	r0, [sp]
40009d60:	e59d0000 	ldr	r0, [sp]
40009d64:	eaffffbf 	b	40009c68 <_txe_event_flags_create+0x24>
40009d68:	40030e6c 	.word	0x40030e6c
40009d6c:	40030ed4 	.word	0x40030ed4
40009d70:	40030ed8 	.word	0x40030ed8
40009d74:	40030e50 	.word	0x40030e50
40009d78:	40032974 	.word	0x40032974
40009d7c:	40030e48 	.word	0x40030e48
40009d80:	f0f0f0f0 	.word	0xf0f0f0f0

40009d84 <_txe_event_flags_delete>:
40009d84:	e92d4070 	push	{r4, r5, r6, lr}
40009d88:	e1a04000 	mov	r4, r0
40009d8c:	e3540000 	cmp	r4, #0
40009d90:	0a000003 	beq	40009da4 <_txe_event_flags_delete+0x20>
40009d94:	e5940000 	ldr	r0, [r4]
40009d98:	e59f1054 	ldr	r1, [pc, #84]	; 40009df4 <_txe_event_flags_delete+0x70>
40009d9c:	e1500001 	cmp	r0, r1
40009da0:	0a000001 	beq	40009dac <_txe_event_flags_delete+0x28>
40009da4:	e3a00006 	mov	r0, #6
40009da8:	e8bd8070 	pop	{r4, r5, r6, pc}
40009dac:	e59f0044 	ldr	r0, [pc, #68]	; 40009df8 <_txe_event_flags_delete+0x74>
40009db0:	e5905000 	ldr	r5, [r0]
40009db4:	e3550000 	cmp	r5, #0
40009db8:	0a000006 	beq	40009dd8 <_txe_event_flags_delete+0x54>
40009dbc:	e59f0038 	ldr	r0, [pc, #56]	; 40009dfc <_txe_event_flags_delete+0x78>
40009dc0:	e5900000 	ldr	r0, [r0]
40009dc4:	e3500000 	cmp	r0, #0
40009dc8:	1a000002 	bne	40009dd8 <_txe_event_flags_delete+0x54>
40009dcc:	e59f002c 	ldr	r0, [pc, #44]	; 40009e00 <_txe_event_flags_delete+0x7c>
40009dd0:	e1550000 	cmp	r5, r0
40009dd4:	1a000001 	bne	40009de0 <_txe_event_flags_delete+0x5c>
40009dd8:	e3a00013 	mov	r0, #19
40009ddc:	eafffff1 	b	40009da8 <_txe_event_flags_delete+0x24>
40009de0:	e1a00004 	mov	r0, r4
40009de4:	eb000849 	bl	4000bf10 <_tx_event_flags_delete>
40009de8:	e1a06000 	mov	r6, r0
40009dec:	e1a00006 	mov	r0, r6
40009df0:	eaffffec 	b	40009da8 <_txe_event_flags_delete+0x24>
40009df4:	4456444e 	.word	0x4456444e
40009df8:	40030e50 	.word	0x40030e50
40009dfc:	40030e48 	.word	0x40030e48
40009e00:	40032974 	.word	0x40032974

40009e04 <_txe_event_flags_get>:
40009e04:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009e08:	e1a04000 	mov	r4, r0
40009e0c:	e1a05001 	mov	r5, r1
40009e10:	e1a06002 	mov	r6, r2
40009e14:	e1a08003 	mov	r8, r3
40009e18:	e59d9020 	ldr	r9, [sp, #32]
40009e1c:	e3540000 	cmp	r4, #0
40009e20:	0a000003 	beq	40009e34 <_txe_event_flags_get+0x30>
40009e24:	e5940000 	ldr	r0, [r4]
40009e28:	e59f1084 	ldr	r1, [pc, #132]	; 40009eb4 <_txe_event_flags_get+0xb0>
40009e2c:	e1500001 	cmp	r0, r1
40009e30:	0a000001 	beq	40009e3c <_txe_event_flags_get+0x38>
40009e34:	e3a00006 	mov	r0, #6
40009e38:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009e3c:	e3580000 	cmp	r8, #0
40009e40:	1a000001 	bne	40009e4c <_txe_event_flags_get+0x48>
40009e44:	e3a00003 	mov	r0, #3
40009e48:	eafffffa 	b	40009e38 <_txe_event_flags_get+0x34>
40009e4c:	e3590000 	cmp	r9, #0
40009e50:	0a00000a 	beq	40009e80 <_txe_event_flags_get+0x7c>
40009e54:	e59f005c 	ldr	r0, [pc, #92]	; 40009eb8 <_txe_event_flags_get+0xb4>
40009e58:	e5900000 	ldr	r0, [r0]
40009e5c:	e3500000 	cmp	r0, #0
40009e60:	1a000004 	bne	40009e78 <_txe_event_flags_get+0x74>
40009e64:	e59f0050 	ldr	r0, [pc, #80]	; 40009ebc <_txe_event_flags_get+0xb8>
40009e68:	e5900000 	ldr	r0, [r0]
40009e6c:	e59f104c 	ldr	r1, [pc, #76]	; 40009ec0 <_txe_event_flags_get+0xbc>
40009e70:	e1500001 	cmp	r0, r1
40009e74:	1a000001 	bne	40009e80 <_txe_event_flags_get+0x7c>
40009e78:	e3a00004 	mov	r0, #4
40009e7c:	eaffffed 	b	40009e38 <_txe_event_flags_get+0x34>
40009e80:	e3560003 	cmp	r6, #3
40009e84:	9a000001 	bls	40009e90 <_txe_event_flags_get+0x8c>
40009e88:	e3a00008 	mov	r0, #8
40009e8c:	eaffffe9 	b	40009e38 <_txe_event_flags_get+0x34>
40009e90:	e1a03008 	mov	r3, r8
40009e94:	e1a02006 	mov	r2, r6
40009e98:	e1a01005 	mov	r1, r5
40009e9c:	e1a00004 	mov	r0, r4
40009ea0:	e58d9000 	str	r9, [sp]
40009ea4:	eb0008ac 	bl	4000c15c <_tx_event_flags_get>
40009ea8:	e1a07000 	mov	r7, r0
40009eac:	e1a00007 	mov	r0, r7
40009eb0:	eaffffe0 	b	40009e38 <_txe_event_flags_get+0x34>
40009eb4:	4456444e 	.word	0x4456444e
40009eb8:	40030e48 	.word	0x40030e48
40009ebc:	40030e50 	.word	0x40030e50
40009ec0:	40032974 	.word	0x40032974

40009ec4 <_txe_event_flags_set>:
40009ec4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009ec8:	e1a04000 	mov	r4, r0
40009ecc:	e1a05001 	mov	r5, r1
40009ed0:	e1a06002 	mov	r6, r2
40009ed4:	e3540000 	cmp	r4, #0
40009ed8:	0a000003 	beq	40009eec <_txe_event_flags_set+0x28>
40009edc:	e5940000 	ldr	r0, [r4]
40009ee0:	e59f1040 	ldr	r1, [pc, #64]	; 40009f28 <_txe_event_flags_set+0x64>
40009ee4:	e1500001 	cmp	r0, r1
40009ee8:	0a000001 	beq	40009ef4 <_txe_event_flags_set+0x30>
40009eec:	e3a00006 	mov	r0, #6
40009ef0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009ef4:	e3560002 	cmp	r6, #2
40009ef8:	0a000003 	beq	40009f0c <_txe_event_flags_set+0x48>
40009efc:	e3560000 	cmp	r6, #0
40009f00:	0a000001 	beq	40009f0c <_txe_event_flags_set+0x48>
40009f04:	e3a00008 	mov	r0, #8
40009f08:	eafffff8 	b	40009ef0 <_txe_event_flags_set+0x2c>
40009f0c:	e1a02006 	mov	r2, r6
40009f10:	e1a01005 	mov	r1, r5
40009f14:	e1a00004 	mov	r0, r4
40009f18:	eb000943 	bl	4000c42c <_tx_event_flags_set>
40009f1c:	e1a07000 	mov	r7, r0
40009f20:	e1a00007 	mov	r0, r7
40009f24:	eafffff1 	b	40009ef0 <_txe_event_flags_set+0x2c>
40009f28:	4456444e 	.word	0x4456444e

40009f2c <_txe_mutex_create>:
40009f2c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009f30:	e1a04000 	mov	r4, r0
40009f34:	e1a05001 	mov	r5, r1
40009f38:	e1a06002 	mov	r6, r2
40009f3c:	e1a07003 	mov	r7, r3
40009f40:	e3540000 	cmp	r4, #0
40009f44:	0a000001 	beq	40009f50 <_txe_mutex_create+0x24>
40009f48:	e3570038 	cmp	r7, #56	; 0x38
40009f4c:	0a000001 	beq	40009f58 <_txe_mutex_create+0x2c>
40009f50:	e3a0001c 	mov	r0, #28
40009f54:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009f58:	e10f0000 	mrs	r0, CPSR
40009f5c:	e58d0004 	str	r0, [sp, #4]
40009f60:	e59d0004 	ldr	r0, [sp, #4]
40009f64:	e3808080 	orr	r8, r0, #128	; 0x80
40009f68:	e121f008 	msr	CPSR_c, r8
40009f6c:	e59f0114 	ldr	r0, [pc, #276]	; 4000a088 <_txe_mutex_create+0x15c>
40009f70:	e5900000 	ldr	r0, [r0]
40009f74:	e2800001 	add	r0, r0, #1
40009f78:	e59f1108 	ldr	r1, [pc, #264]	; 4000a088 <_txe_mutex_create+0x15c>
40009f7c:	e5810000 	str	r0, [r1]
40009f80:	e59d0004 	ldr	r0, [sp, #4]
40009f84:	e121f000 	msr	CPSR_c, r0
40009f88:	e59f00fc 	ldr	r0, [pc, #252]	; 4000a08c <_txe_mutex_create+0x160>
40009f8c:	e590a000 	ldr	sl, [r0]
40009f90:	e3a09000 	mov	r9, #0
40009f94:	ea000004 	b	40009fac <_txe_mutex_create+0x80>
40009f98:	e154000a 	cmp	r4, sl
40009f9c:	1a000000 	bne	40009fa4 <_txe_mutex_create+0x78>
40009fa0:	ea000005 	b	40009fbc <_txe_mutex_create+0x90>
40009fa4:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009fa8:	e2899001 	add	r9, r9, #1
40009fac:	e59f00dc 	ldr	r0, [pc, #220]	; 4000a090 <_txe_mutex_create+0x164>
40009fb0:	e5900000 	ldr	r0, [r0]
40009fb4:	e1590000 	cmp	r9, r0
40009fb8:	3afffff6 	bcc	40009f98 <_txe_mutex_create+0x6c>
40009fbc:	e1a00000 	nop			; (mov r0, r0)
40009fc0:	e10f0000 	mrs	r0, CPSR
40009fc4:	e58d0004 	str	r0, [sp, #4]
40009fc8:	e59d0004 	ldr	r0, [sp, #4]
40009fcc:	e3808080 	orr	r8, r0, #128	; 0x80
40009fd0:	e121f008 	msr	CPSR_c, r8
40009fd4:	e59f00ac 	ldr	r0, [pc, #172]	; 4000a088 <_txe_mutex_create+0x15c>
40009fd8:	e5900000 	ldr	r0, [r0]
40009fdc:	e2400001 	sub	r0, r0, #1
40009fe0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a088 <_txe_mutex_create+0x15c>
40009fe4:	e5810000 	str	r0, [r1]
40009fe8:	e59d0004 	ldr	r0, [sp, #4]
40009fec:	e121f000 	msr	CPSR_c, r0
40009ff0:	eb0014a7 	bl	4000f294 <_tx_thread_system_preempt_check>
40009ff4:	e154000a 	cmp	r4, sl
40009ff8:	1a000001 	bne	4000a004 <_txe_mutex_create+0xd8>
40009ffc:	e3a0001c 	mov	r0, #28
4000a000:	eaffffd3 	b	40009f54 <_txe_mutex_create+0x28>
4000a004:	e3560001 	cmp	r6, #1
4000a008:	0a000003 	beq	4000a01c <_txe_mutex_create+0xf0>
4000a00c:	e3560000 	cmp	r6, #0
4000a010:	0a000001 	beq	4000a01c <_txe_mutex_create+0xf0>
4000a014:	e3a0001f 	mov	r0, #31
4000a018:	eaffffcd 	b	40009f54 <_txe_mutex_create+0x28>
4000a01c:	e59f0070 	ldr	r0, [pc, #112]	; 4000a094 <_txe_mutex_create+0x168>
4000a020:	e590b000 	ldr	fp, [r0]
4000a024:	e35b0000 	cmp	fp, #0
4000a028:	0a000008 	beq	4000a050 <_txe_mutex_create+0x124>
4000a02c:	e59f0064 	ldr	r0, [pc, #100]	; 4000a098 <_txe_mutex_create+0x16c>
4000a030:	e15b0000 	cmp	fp, r0
4000a034:	0a000003 	beq	4000a048 <_txe_mutex_create+0x11c>
4000a038:	e59f005c 	ldr	r0, [pc, #92]	; 4000a09c <_txe_mutex_create+0x170>
4000a03c:	e5900000 	ldr	r0, [r0]
4000a040:	e3500000 	cmp	r0, #0
4000a044:	0a000008 	beq	4000a06c <_txe_mutex_create+0x140>
4000a048:	e3a00013 	mov	r0, #19
4000a04c:	eaffffc0 	b	40009f54 <_txe_mutex_create+0x28>
4000a050:	e59f0044 	ldr	r0, [pc, #68]	; 4000a09c <_txe_mutex_create+0x170>
4000a054:	e5900000 	ldr	r0, [r0]
4000a058:	e59f1040 	ldr	r1, [pc, #64]	; 4000a0a0 <_txe_mutex_create+0x174>
4000a05c:	e1500001 	cmp	r0, r1
4000a060:	2a000001 	bcs	4000a06c <_txe_mutex_create+0x140>
4000a064:	e3a00013 	mov	r0, #19
4000a068:	eaffffb9 	b	40009f54 <_txe_mutex_create+0x28>
4000a06c:	e1a02006 	mov	r2, r6
4000a070:	e1a01005 	mov	r1, r5
4000a074:	e1a00004 	mov	r0, r4
4000a078:	eb000a8f 	bl	4000cabc <_tx_mutex_create>
4000a07c:	e58d0000 	str	r0, [sp]
4000a080:	e59d0000 	ldr	r0, [sp]
4000a084:	eaffffb2 	b	40009f54 <_txe_mutex_create+0x28>
4000a088:	40030e6c 	.word	0x40030e6c
4000a08c:	40030edc 	.word	0x40030edc
4000a090:	40030ee0 	.word	0x40030ee0
4000a094:	40030e50 	.word	0x40030e50
4000a098:	40032974 	.word	0x40032974
4000a09c:	40030e48 	.word	0x40030e48
4000a0a0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a0a4 <_txe_mutex_delete>:
4000a0a4:	e92d4070 	push	{r4, r5, r6, lr}
4000a0a8:	e1a04000 	mov	r4, r0
4000a0ac:	e3540000 	cmp	r4, #0
4000a0b0:	0a000003 	beq	4000a0c4 <_txe_mutex_delete+0x20>
4000a0b4:	e5940000 	ldr	r0, [r4]
4000a0b8:	e59f1054 	ldr	r1, [pc, #84]	; 4000a114 <_txe_mutex_delete+0x70>
4000a0bc:	e1500001 	cmp	r0, r1
4000a0c0:	0a000001 	beq	4000a0cc <_txe_mutex_delete+0x28>
4000a0c4:	e3a0001c 	mov	r0, #28
4000a0c8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a0cc:	e59f0044 	ldr	r0, [pc, #68]	; 4000a118 <_txe_mutex_delete+0x74>
4000a0d0:	e5905000 	ldr	r5, [r0]
4000a0d4:	e3550000 	cmp	r5, #0
4000a0d8:	0a000006 	beq	4000a0f8 <_txe_mutex_delete+0x54>
4000a0dc:	e59f0038 	ldr	r0, [pc, #56]	; 4000a11c <_txe_mutex_delete+0x78>
4000a0e0:	e5900000 	ldr	r0, [r0]
4000a0e4:	e3500000 	cmp	r0, #0
4000a0e8:	1a000002 	bne	4000a0f8 <_txe_mutex_delete+0x54>
4000a0ec:	e59f002c 	ldr	r0, [pc, #44]	; 4000a120 <_txe_mutex_delete+0x7c>
4000a0f0:	e1550000 	cmp	r5, r0
4000a0f4:	1a000001 	bne	4000a100 <_txe_mutex_delete+0x5c>
4000a0f8:	e3a00013 	mov	r0, #19
4000a0fc:	eafffff1 	b	4000a0c8 <_txe_mutex_delete+0x24>
4000a100:	e1a00004 	mov	r0, r4
4000a104:	eb000ae2 	bl	4000cc94 <_tx_mutex_delete>
4000a108:	e1a06000 	mov	r6, r0
4000a10c:	e1a00006 	mov	r0, r6
4000a110:	eaffffec 	b	4000a0c8 <_txe_mutex_delete+0x24>
4000a114:	4d555445 	.word	0x4d555445
4000a118:	40030e50 	.word	0x40030e50
4000a11c:	40030e48 	.word	0x40030e48
4000a120:	40032974 	.word	0x40032974

4000a124 <_txe_mutex_get>:
4000a124:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a128:	e1a04000 	mov	r4, r0
4000a12c:	e1a05001 	mov	r5, r1
4000a130:	e3540000 	cmp	r4, #0
4000a134:	0a000003 	beq	4000a148 <_txe_mutex_get+0x24>
4000a138:	e5940000 	ldr	r0, [r4]
4000a13c:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a1e4 <_txe_mutex_get+0xc0>
4000a140:	e1500001 	cmp	r0, r1
4000a144:	0a000001 	beq	4000a150 <_txe_mutex_get+0x2c>
4000a148:	e3a0001c 	mov	r0, #28
4000a14c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a150:	e59f0090 	ldr	r0, [pc, #144]	; 4000a1e8 <_txe_mutex_get+0xc4>
4000a154:	e5906000 	ldr	r6, [r0]
4000a158:	e3550000 	cmp	r5, #0
4000a15c:	0a000008 	beq	4000a184 <_txe_mutex_get+0x60>
4000a160:	e59f0084 	ldr	r0, [pc, #132]	; 4000a1ec <_txe_mutex_get+0xc8>
4000a164:	e5900000 	ldr	r0, [r0]
4000a168:	e3500000 	cmp	r0, #0
4000a16c:	1a000002 	bne	4000a17c <_txe_mutex_get+0x58>
4000a170:	e59f0078 	ldr	r0, [pc, #120]	; 4000a1f0 <_txe_mutex_get+0xcc>
4000a174:	e1560000 	cmp	r6, r0
4000a178:	1a000001 	bne	4000a184 <_txe_mutex_get+0x60>
4000a17c:	e3a00004 	mov	r0, #4
4000a180:	eafffff1 	b	4000a14c <_txe_mutex_get+0x28>
4000a184:	e3560000 	cmp	r6, #0
4000a188:	0a000008 	beq	4000a1b0 <_txe_mutex_get+0x8c>
4000a18c:	e59f005c 	ldr	r0, [pc, #92]	; 4000a1f0 <_txe_mutex_get+0xcc>
4000a190:	e1560000 	cmp	r6, r0
4000a194:	0a000003 	beq	4000a1a8 <_txe_mutex_get+0x84>
4000a198:	e59f004c 	ldr	r0, [pc, #76]	; 4000a1ec <_txe_mutex_get+0xc8>
4000a19c:	e5900000 	ldr	r0, [r0]
4000a1a0:	e3500000 	cmp	r0, #0
4000a1a4:	0a000008 	beq	4000a1cc <_txe_mutex_get+0xa8>
4000a1a8:	e3a00013 	mov	r0, #19
4000a1ac:	eaffffe6 	b	4000a14c <_txe_mutex_get+0x28>
4000a1b0:	e59f0034 	ldr	r0, [pc, #52]	; 4000a1ec <_txe_mutex_get+0xc8>
4000a1b4:	e5900000 	ldr	r0, [r0]
4000a1b8:	e59f1034 	ldr	r1, [pc, #52]	; 4000a1f4 <_txe_mutex_get+0xd0>
4000a1bc:	e1500001 	cmp	r0, r1
4000a1c0:	2a000001 	bcs	4000a1cc <_txe_mutex_get+0xa8>
4000a1c4:	e3a00013 	mov	r0, #19
4000a1c8:	eaffffdf 	b	4000a14c <_txe_mutex_get+0x28>
4000a1cc:	e1a01005 	mov	r1, r5
4000a1d0:	e1a00004 	mov	r0, r4
4000a1d4:	eb000b65 	bl	4000cf70 <_tx_mutex_get>
4000a1d8:	e1a07000 	mov	r7, r0
4000a1dc:	e1a00007 	mov	r0, r7
4000a1e0:	eaffffd9 	b	4000a14c <_txe_mutex_get+0x28>
4000a1e4:	4d555445 	.word	0x4d555445
4000a1e8:	40030e50 	.word	0x40030e50
4000a1ec:	40030e48 	.word	0x40030e48
4000a1f0:	40032974 	.word	0x40032974
4000a1f4:	f0f0f0f0 	.word	0xf0f0f0f0

4000a1f8 <_txe_mutex_put>:
4000a1f8:	e92d4070 	push	{r4, r5, r6, lr}
4000a1fc:	e1a04000 	mov	r4, r0
4000a200:	e3540000 	cmp	r4, #0
4000a204:	0a000003 	beq	4000a218 <_txe_mutex_put+0x20>
4000a208:	e5940000 	ldr	r0, [r4]
4000a20c:	e59f1070 	ldr	r1, [pc, #112]	; 4000a284 <_txe_mutex_put+0x8c>
4000a210:	e1500001 	cmp	r0, r1
4000a214:	0a000001 	beq	4000a220 <_txe_mutex_put+0x28>
4000a218:	e3a0001c 	mov	r0, #28
4000a21c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a220:	e59f0060 	ldr	r0, [pc, #96]	; 4000a288 <_txe_mutex_put+0x90>
4000a224:	e5905000 	ldr	r5, [r0]
4000a228:	e3550000 	cmp	r5, #0
4000a22c:	0a000008 	beq	4000a254 <_txe_mutex_put+0x5c>
4000a230:	e59f0054 	ldr	r0, [pc, #84]	; 4000a28c <_txe_mutex_put+0x94>
4000a234:	e1550000 	cmp	r5, r0
4000a238:	0a000003 	beq	4000a24c <_txe_mutex_put+0x54>
4000a23c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a290 <_txe_mutex_put+0x98>
4000a240:	e5900000 	ldr	r0, [r0]
4000a244:	e3500000 	cmp	r0, #0
4000a248:	0a000008 	beq	4000a270 <_txe_mutex_put+0x78>
4000a24c:	e3a00013 	mov	r0, #19
4000a250:	eafffff1 	b	4000a21c <_txe_mutex_put+0x24>
4000a254:	e59f0034 	ldr	r0, [pc, #52]	; 4000a290 <_txe_mutex_put+0x98>
4000a258:	e5900000 	ldr	r0, [r0]
4000a25c:	e59f1030 	ldr	r1, [pc, #48]	; 4000a294 <_txe_mutex_put+0x9c>
4000a260:	e1500001 	cmp	r0, r1
4000a264:	2a000001 	bcs	4000a270 <_txe_mutex_put+0x78>
4000a268:	e3a00013 	mov	r0, #19
4000a26c:	eaffffea 	b	4000a21c <_txe_mutex_put+0x24>
4000a270:	e1a00004 	mov	r0, r4
4000a274:	eb000c1c 	bl	4000d2ec <_tx_mutex_put>
4000a278:	e1a06000 	mov	r6, r0
4000a27c:	e1a00006 	mov	r0, r6
4000a280:	eaffffe5 	b	4000a21c <_txe_mutex_put+0x24>
4000a284:	4d555445 	.word	0x4d555445
4000a288:	40030e50 	.word	0x40030e50
4000a28c:	40032974 	.word	0x40032974
4000a290:	40030e48 	.word	0x40030e48
4000a294:	f0f0f0f0 	.word	0xf0f0f0f0

4000a298 <_txe_queue_create>:
4000a298:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a29c:	e24dd014 	sub	sp, sp, #20
4000a2a0:	e1a04000 	mov	r4, r0
4000a2a4:	e1a05002 	mov	r5, r2
4000a2a8:	e1a06003 	mov	r6, r3
4000a2ac:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a2b0:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a2b4:	e3540000 	cmp	r4, #0
4000a2b8:	0a000001 	beq	4000a2c4 <_txe_queue_create+0x2c>
4000a2bc:	e358003c 	cmp	r8, #60	; 0x3c
4000a2c0:	0a000002 	beq	4000a2d0 <_txe_queue_create+0x38>
4000a2c4:	e3a00009 	mov	r0, #9
4000a2c8:	e28dd024 	add	sp, sp, #36	; 0x24
4000a2cc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a2d0:	e10f9000 	mrs	r9, CPSR
4000a2d4:	e389a080 	orr	sl, r9, #128	; 0x80
4000a2d8:	e121f00a 	msr	CPSR_c, sl
4000a2dc:	e59f0150 	ldr	r0, [pc, #336]	; 4000a434 <_txe_queue_create+0x19c>
4000a2e0:	e5900000 	ldr	r0, [r0]
4000a2e4:	e2800001 	add	r0, r0, #1
4000a2e8:	e59f1144 	ldr	r1, [pc, #324]	; 4000a434 <_txe_queue_create+0x19c>
4000a2ec:	e5810000 	str	r0, [r1]
4000a2f0:	e121f009 	msr	CPSR_c, r9
4000a2f4:	e59f013c 	ldr	r0, [pc, #316]	; 4000a438 <_txe_queue_create+0x1a0>
4000a2f8:	e5900000 	ldr	r0, [r0]
4000a2fc:	e58d0008 	str	r0, [sp, #8]
4000a300:	e3a00000 	mov	r0, #0
4000a304:	e58d000c 	str	r0, [sp, #12]
4000a308:	ea000009 	b	4000a334 <_txe_queue_create+0x9c>
4000a30c:	e59d0008 	ldr	r0, [sp, #8]
4000a310:	e1540000 	cmp	r4, r0
4000a314:	1a000000 	bne	4000a31c <_txe_queue_create+0x84>
4000a318:	ea00000a 	b	4000a348 <_txe_queue_create+0xb0>
4000a31c:	e59d0008 	ldr	r0, [sp, #8]
4000a320:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a324:	e58d0008 	str	r0, [sp, #8]
4000a328:	e59d000c 	ldr	r0, [sp, #12]
4000a32c:	e2800001 	add	r0, r0, #1
4000a330:	e58d000c 	str	r0, [sp, #12]
4000a334:	e59f1100 	ldr	r1, [pc, #256]	; 4000a43c <_txe_queue_create+0x1a4>
4000a338:	e59d000c 	ldr	r0, [sp, #12]
4000a33c:	e5911000 	ldr	r1, [r1]
4000a340:	e1500001 	cmp	r0, r1
4000a344:	3afffff0 	bcc	4000a30c <_txe_queue_create+0x74>
4000a348:	e1a00000 	nop			; (mov r0, r0)
4000a34c:	e10f9000 	mrs	r9, CPSR
4000a350:	e389a080 	orr	sl, r9, #128	; 0x80
4000a354:	e121f00a 	msr	CPSR_c, sl
4000a358:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a434 <_txe_queue_create+0x19c>
4000a35c:	e5900000 	ldr	r0, [r0]
4000a360:	e2400001 	sub	r0, r0, #1
4000a364:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a434 <_txe_queue_create+0x19c>
4000a368:	e5810000 	str	r0, [r1]
4000a36c:	e121f009 	msr	CPSR_c, r9
4000a370:	eb0013c7 	bl	4000f294 <_tx_thread_system_preempt_check>
4000a374:	e59d0008 	ldr	r0, [sp, #8]
4000a378:	e1540000 	cmp	r4, r0
4000a37c:	1a000001 	bne	4000a388 <_txe_queue_create+0xf0>
4000a380:	e3a00009 	mov	r0, #9
4000a384:	eaffffcf 	b	4000a2c8 <_txe_queue_create+0x30>
4000a388:	e3560000 	cmp	r6, #0
4000a38c:	1a000001 	bne	4000a398 <_txe_queue_create+0x100>
4000a390:	e3a00003 	mov	r0, #3
4000a394:	eaffffcb 	b	4000a2c8 <_txe_queue_create+0x30>
4000a398:	e3550000 	cmp	r5, #0
4000a39c:	0a000001 	beq	4000a3a8 <_txe_queue_create+0x110>
4000a3a0:	e3550010 	cmp	r5, #16
4000a3a4:	9a000001 	bls	4000a3b0 <_txe_queue_create+0x118>
4000a3a8:	e3a00005 	mov	r0, #5
4000a3ac:	eaffffc5 	b	4000a2c8 <_txe_queue_create+0x30>
4000a3b0:	e1550127 	cmp	r5, r7, lsr #2
4000a3b4:	9a000001 	bls	4000a3c0 <_txe_queue_create+0x128>
4000a3b8:	e3a00005 	mov	r0, #5
4000a3bc:	eaffffc1 	b	4000a2c8 <_txe_queue_create+0x30>
4000a3c0:	e59f0078 	ldr	r0, [pc, #120]	; 4000a440 <_txe_queue_create+0x1a8>
4000a3c4:	e590b000 	ldr	fp, [r0]
4000a3c8:	e35b0000 	cmp	fp, #0
4000a3cc:	0a000008 	beq	4000a3f4 <_txe_queue_create+0x15c>
4000a3d0:	e59f006c 	ldr	r0, [pc, #108]	; 4000a444 <_txe_queue_create+0x1ac>
4000a3d4:	e15b0000 	cmp	fp, r0
4000a3d8:	0a000003 	beq	4000a3ec <_txe_queue_create+0x154>
4000a3dc:	e59f0064 	ldr	r0, [pc, #100]	; 4000a448 <_txe_queue_create+0x1b0>
4000a3e0:	e5900000 	ldr	r0, [r0]
4000a3e4:	e3500000 	cmp	r0, #0
4000a3e8:	0a000008 	beq	4000a410 <_txe_queue_create+0x178>
4000a3ec:	e3a00013 	mov	r0, #19
4000a3f0:	eaffffb4 	b	4000a2c8 <_txe_queue_create+0x30>
4000a3f4:	e59f004c 	ldr	r0, [pc, #76]	; 4000a448 <_txe_queue_create+0x1b0>
4000a3f8:	e5900000 	ldr	r0, [r0]
4000a3fc:	e59f1048 	ldr	r1, [pc, #72]	; 4000a44c <_txe_queue_create+0x1b4>
4000a400:	e1500001 	cmp	r0, r1
4000a404:	2a000001 	bcs	4000a410 <_txe_queue_create+0x178>
4000a408:	e3a00013 	mov	r0, #19
4000a40c:	eaffffad 	b	4000a2c8 <_txe_queue_create+0x30>
4000a410:	e1a03006 	mov	r3, r6
4000a414:	e1a02005 	mov	r2, r5
4000a418:	e58d7000 	str	r7, [sp]
4000a41c:	e1a00004 	mov	r0, r4
4000a420:	e59d1018 	ldr	r1, [sp, #24]
4000a424:	eb000ce5 	bl	4000d7c0 <_tx_queue_create>
4000a428:	e58d0010 	str	r0, [sp, #16]
4000a42c:	e59d0010 	ldr	r0, [sp, #16]
4000a430:	eaffffa4 	b	4000a2c8 <_txe_queue_create+0x30>
4000a434:	40030e6c 	.word	0x40030e6c
4000a438:	40030ecc 	.word	0x40030ecc
4000a43c:	40030ed0 	.word	0x40030ed0
4000a440:	40030e50 	.word	0x40030e50
4000a444:	40032974 	.word	0x40032974
4000a448:	40030e48 	.word	0x40030e48
4000a44c:	f0f0f0f0 	.word	0xf0f0f0f0

4000a450 <_txe_queue_front_send>:
4000a450:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a454:	e1a04000 	mov	r4, r0
4000a458:	e1a05001 	mov	r5, r1
4000a45c:	e1a06002 	mov	r6, r2
4000a460:	e3540000 	cmp	r4, #0
4000a464:	0a000003 	beq	4000a478 <_txe_queue_front_send+0x28>
4000a468:	e5940000 	ldr	r0, [r4]
4000a46c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a4e0 <_txe_queue_front_send+0x90>
4000a470:	e1500001 	cmp	r0, r1
4000a474:	0a000001 	beq	4000a480 <_txe_queue_front_send+0x30>
4000a478:	e3a00009 	mov	r0, #9
4000a47c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a480:	e3550000 	cmp	r5, #0
4000a484:	1a000001 	bne	4000a490 <_txe_queue_front_send+0x40>
4000a488:	e3a00003 	mov	r0, #3
4000a48c:	eafffffa 	b	4000a47c <_txe_queue_front_send+0x2c>
4000a490:	e3560000 	cmp	r6, #0
4000a494:	0a00000a 	beq	4000a4c4 <_txe_queue_front_send+0x74>
4000a498:	e59f0044 	ldr	r0, [pc, #68]	; 4000a4e4 <_txe_queue_front_send+0x94>
4000a49c:	e5900000 	ldr	r0, [r0]
4000a4a0:	e3500000 	cmp	r0, #0
4000a4a4:	1a000004 	bne	4000a4bc <_txe_queue_front_send+0x6c>
4000a4a8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a4e8 <_txe_queue_front_send+0x98>
4000a4ac:	e5900000 	ldr	r0, [r0]
4000a4b0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a4ec <_txe_queue_front_send+0x9c>
4000a4b4:	e1500001 	cmp	r0, r1
4000a4b8:	1a000001 	bne	4000a4c4 <_txe_queue_front_send+0x74>
4000a4bc:	e3a00004 	mov	r0, #4
4000a4c0:	eaffffed 	b	4000a47c <_txe_queue_front_send+0x2c>
4000a4c4:	e1a02006 	mov	r2, r6
4000a4c8:	e1a01005 	mov	r1, r5
4000a4cc:	e1a00004 	mov	r0, r4
4000a4d0:	eb000d3d 	bl	4000d9cc <_tx_queue_front_send>
4000a4d4:	e1a07000 	mov	r7, r0
4000a4d8:	e1a00007 	mov	r0, r7
4000a4dc:	eaffffe6 	b	4000a47c <_txe_queue_front_send+0x2c>
4000a4e0:	51554555 	.word	0x51554555
4000a4e4:	40030e48 	.word	0x40030e48
4000a4e8:	40030e50 	.word	0x40030e50
4000a4ec:	40032974 	.word	0x40032974

4000a4f0 <_txe_queue_receive>:
4000a4f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a4f4:	e1a04000 	mov	r4, r0
4000a4f8:	e1a05001 	mov	r5, r1
4000a4fc:	e1a06002 	mov	r6, r2
4000a500:	e3540000 	cmp	r4, #0
4000a504:	0a000003 	beq	4000a518 <_txe_queue_receive+0x28>
4000a508:	e5940000 	ldr	r0, [r4]
4000a50c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a580 <_txe_queue_receive+0x90>
4000a510:	e1500001 	cmp	r0, r1
4000a514:	0a000001 	beq	4000a520 <_txe_queue_receive+0x30>
4000a518:	e3a00009 	mov	r0, #9
4000a51c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a520:	e3550000 	cmp	r5, #0
4000a524:	1a000001 	bne	4000a530 <_txe_queue_receive+0x40>
4000a528:	e3a00003 	mov	r0, #3
4000a52c:	eafffffa 	b	4000a51c <_txe_queue_receive+0x2c>
4000a530:	e3560000 	cmp	r6, #0
4000a534:	0a00000a 	beq	4000a564 <_txe_queue_receive+0x74>
4000a538:	e59f0044 	ldr	r0, [pc, #68]	; 4000a584 <_txe_queue_receive+0x94>
4000a53c:	e5900000 	ldr	r0, [r0]
4000a540:	e3500000 	cmp	r0, #0
4000a544:	1a000004 	bne	4000a55c <_txe_queue_receive+0x6c>
4000a548:	e59f0038 	ldr	r0, [pc, #56]	; 4000a588 <_txe_queue_receive+0x98>
4000a54c:	e5900000 	ldr	r0, [r0]
4000a550:	e59f1034 	ldr	r1, [pc, #52]	; 4000a58c <_txe_queue_receive+0x9c>
4000a554:	e1500001 	cmp	r0, r1
4000a558:	1a000001 	bne	4000a564 <_txe_queue_receive+0x74>
4000a55c:	e3a00004 	mov	r0, #4
4000a560:	eaffffed 	b	4000a51c <_txe_queue_receive+0x2c>
4000a564:	e1a02006 	mov	r2, r6
4000a568:	e1a01005 	mov	r1, r5
4000a56c:	e1a00004 	mov	r0, r4
4000a570:	eb000e04 	bl	4000dd88 <_tx_queue_receive>
4000a574:	e1a07000 	mov	r7, r0
4000a578:	e1a00007 	mov	r0, r7
4000a57c:	eaffffe6 	b	4000a51c <_txe_queue_receive+0x2c>
4000a580:	51554555 	.word	0x51554555
4000a584:	40030e48 	.word	0x40030e48
4000a588:	40030e50 	.word	0x40030e50
4000a58c:	40032974 	.word	0x40032974

4000a590 <_txe_queue_send>:
4000a590:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a594:	e1a04000 	mov	r4, r0
4000a598:	e1a05001 	mov	r5, r1
4000a59c:	e1a06002 	mov	r6, r2
4000a5a0:	e3540000 	cmp	r4, #0
4000a5a4:	0a000003 	beq	4000a5b8 <_txe_queue_send+0x28>
4000a5a8:	e5940000 	ldr	r0, [r4]
4000a5ac:	e59f106c 	ldr	r1, [pc, #108]	; 4000a620 <_txe_queue_send+0x90>
4000a5b0:	e1500001 	cmp	r0, r1
4000a5b4:	0a000001 	beq	4000a5c0 <_txe_queue_send+0x30>
4000a5b8:	e3a00009 	mov	r0, #9
4000a5bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a5c0:	e3550000 	cmp	r5, #0
4000a5c4:	1a000001 	bne	4000a5d0 <_txe_queue_send+0x40>
4000a5c8:	e3a00003 	mov	r0, #3
4000a5cc:	eafffffa 	b	4000a5bc <_txe_queue_send+0x2c>
4000a5d0:	e3560000 	cmp	r6, #0
4000a5d4:	0a00000a 	beq	4000a604 <_txe_queue_send+0x74>
4000a5d8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a624 <_txe_queue_send+0x94>
4000a5dc:	e5900000 	ldr	r0, [r0]
4000a5e0:	e3500000 	cmp	r0, #0
4000a5e4:	1a000004 	bne	4000a5fc <_txe_queue_send+0x6c>
4000a5e8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a628 <_txe_queue_send+0x98>
4000a5ec:	e5900000 	ldr	r0, [r0]
4000a5f0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a62c <_txe_queue_send+0x9c>
4000a5f4:	e1500001 	cmp	r0, r1
4000a5f8:	1a000001 	bne	4000a604 <_txe_queue_send+0x74>
4000a5fc:	e3a00004 	mov	r0, #4
4000a600:	eaffffed 	b	4000a5bc <_txe_queue_send+0x2c>
4000a604:	e1a02006 	mov	r2, r6
4000a608:	e1a01005 	mov	r1, r5
4000a60c:	e1a00004 	mov	r0, r4
4000a610:	eb000ef4 	bl	4000e1e8 <_tx_queue_send>
4000a614:	e1a07000 	mov	r7, r0
4000a618:	e1a00007 	mov	r0, r7
4000a61c:	eaffffe6 	b	4000a5bc <_txe_queue_send+0x2c>
4000a620:	51554555 	.word	0x51554555
4000a624:	40030e48 	.word	0x40030e48
4000a628:	40030e50 	.word	0x40030e50
4000a62c:	40032974 	.word	0x40032974

4000a630 <_txe_thread_create>:
4000a630:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a634:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a638:	e1a04000 	mov	r4, r0
4000a63c:	e1a05002 	mov	r5, r2
4000a640:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a644:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a648:	e3540000 	cmp	r4, #0
4000a64c:	0a000002 	beq	4000a65c <_txe_thread_create+0x2c>
4000a650:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a654:	e35000a8 	cmp	r0, #168	; 0xa8
4000a658:	0a000002 	beq	4000a668 <_txe_thread_create+0x38>
4000a65c:	e3a0000e 	mov	r0, #14
4000a660:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a664:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a668:	e10f0000 	mrs	r0, CPSR
4000a66c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a670:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a674:	e3800080 	orr	r0, r0, #128	; 0x80
4000a678:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a67c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a680:	e121f000 	msr	CPSR_c, r0
4000a684:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a878 <_txe_thread_create+0x248>
4000a688:	e5900000 	ldr	r0, [r0]
4000a68c:	e2800001 	add	r0, r0, #1
4000a690:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a878 <_txe_thread_create+0x248>
4000a694:	e5810000 	str	r0, [r1]
4000a698:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a69c:	e121f000 	msr	CPSR_c, r0
4000a6a0:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a87c <_txe_thread_create+0x24c>
4000a6a4:	e5900000 	ldr	r0, [r0]
4000a6a8:	e58d0018 	str	r0, [sp, #24]
4000a6ac:	e2470001 	sub	r0, r7, #1
4000a6b0:	e080b006 	add	fp, r0, r6
4000a6b4:	e3a00000 	mov	r0, #0
4000a6b8:	e58d001c 	str	r0, [sp, #28]
4000a6bc:	ea00001d 	b	4000a738 <_txe_thread_create+0x108>
4000a6c0:	e59d0018 	ldr	r0, [sp, #24]
4000a6c4:	e1540000 	cmp	r4, r0
4000a6c8:	1a000000 	bne	4000a6d0 <_txe_thread_create+0xa0>
4000a6cc:	ea00001e 	b	4000a74c <_txe_thread_create+0x11c>
4000a6d0:	e59d0018 	ldr	r0, [sp, #24]
4000a6d4:	e590000c 	ldr	r0, [r0, #12]
4000a6d8:	e1500006 	cmp	r0, r6
4000a6dc:	8a000005 	bhi	4000a6f8 <_txe_thread_create+0xc8>
4000a6e0:	e59d0018 	ldr	r0, [sp, #24]
4000a6e4:	e5900010 	ldr	r0, [r0, #16]
4000a6e8:	e1500006 	cmp	r0, r6
4000a6ec:	9a000001 	bls	4000a6f8 <_txe_thread_create+0xc8>
4000a6f0:	e3a06000 	mov	r6, #0
4000a6f4:	ea000014 	b	4000a74c <_txe_thread_create+0x11c>
4000a6f8:	e59d0018 	ldr	r0, [sp, #24]
4000a6fc:	e590000c 	ldr	r0, [r0, #12]
4000a700:	e150000b 	cmp	r0, fp
4000a704:	8a000005 	bhi	4000a720 <_txe_thread_create+0xf0>
4000a708:	e59d0018 	ldr	r0, [sp, #24]
4000a70c:	e5900010 	ldr	r0, [r0, #16]
4000a710:	e150000b 	cmp	r0, fp
4000a714:	9a000001 	bls	4000a720 <_txe_thread_create+0xf0>
4000a718:	e3a06000 	mov	r6, #0
4000a71c:	ea00000a 	b	4000a74c <_txe_thread_create+0x11c>
4000a720:	e59d0018 	ldr	r0, [sp, #24]
4000a724:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a728:	e58d0018 	str	r0, [sp, #24]
4000a72c:	e59d001c 	ldr	r0, [sp, #28]
4000a730:	e2800001 	add	r0, r0, #1
4000a734:	e58d001c 	str	r0, [sp, #28]
4000a738:	e59f1140 	ldr	r1, [pc, #320]	; 4000a880 <_txe_thread_create+0x250>
4000a73c:	e59d001c 	ldr	r0, [sp, #28]
4000a740:	e5911000 	ldr	r1, [r1]
4000a744:	e1500001 	cmp	r0, r1
4000a748:	3affffdc 	bcc	4000a6c0 <_txe_thread_create+0x90>
4000a74c:	e1a00000 	nop			; (mov r0, r0)
4000a750:	e10f0000 	mrs	r0, CPSR
4000a754:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a758:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a75c:	e3800080 	orr	r0, r0, #128	; 0x80
4000a760:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a764:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a768:	e121f000 	msr	CPSR_c, r0
4000a76c:	e59f0104 	ldr	r0, [pc, #260]	; 4000a878 <_txe_thread_create+0x248>
4000a770:	e5900000 	ldr	r0, [r0]
4000a774:	e2400001 	sub	r0, r0, #1
4000a778:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a878 <_txe_thread_create+0x248>
4000a77c:	e5810000 	str	r0, [r1]
4000a780:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a784:	e121f000 	msr	CPSR_c, r0
4000a788:	eb0012c1 	bl	4000f294 <_tx_thread_system_preempt_check>
4000a78c:	e59d0018 	ldr	r0, [sp, #24]
4000a790:	e1540000 	cmp	r4, r0
4000a794:	1a000001 	bne	4000a7a0 <_txe_thread_create+0x170>
4000a798:	e3a0000e 	mov	r0, #14
4000a79c:	eaffffaf 	b	4000a660 <_txe_thread_create+0x30>
4000a7a0:	e3560000 	cmp	r6, #0
4000a7a4:	0a000001 	beq	4000a7b0 <_txe_thread_create+0x180>
4000a7a8:	e3550000 	cmp	r5, #0
4000a7ac:	1a000001 	bne	4000a7b8 <_txe_thread_create+0x188>
4000a7b0:	e3a00003 	mov	r0, #3
4000a7b4:	eaffffa9 	b	4000a660 <_txe_thread_create+0x30>
4000a7b8:	e35700c8 	cmp	r7, #200	; 0xc8
4000a7bc:	2a000001 	bcs	4000a7c8 <_txe_thread_create+0x198>
4000a7c0:	e3a00005 	mov	r0, #5
4000a7c4:	eaffffa5 	b	4000a660 <_txe_thread_create+0x30>
4000a7c8:	e3580020 	cmp	r8, #32
4000a7cc:	3a000001 	bcc	4000a7d8 <_txe_thread_create+0x1a8>
4000a7d0:	e3a0000f 	mov	r0, #15
4000a7d4:	eaffffa1 	b	4000a660 <_txe_thread_create+0x30>
4000a7d8:	e1590008 	cmp	r9, r8
4000a7dc:	9a000001 	bls	4000a7e8 <_txe_thread_create+0x1b8>
4000a7e0:	e3a00018 	mov	r0, #24
4000a7e4:	eaffff9d 	b	4000a660 <_txe_thread_create+0x30>
4000a7e8:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a7ec:	e3500001 	cmp	r0, #1
4000a7f0:	9a000001 	bls	4000a7fc <_txe_thread_create+0x1cc>
4000a7f4:	e3a00010 	mov	r0, #16
4000a7f8:	eaffff98 	b	4000a660 <_txe_thread_create+0x30>
4000a7fc:	e59f0080 	ldr	r0, [pc, #128]	; 4000a884 <_txe_thread_create+0x254>
4000a800:	e590a000 	ldr	sl, [r0]
4000a804:	e35a0000 	cmp	sl, #0
4000a808:	0a000008 	beq	4000a830 <_txe_thread_create+0x200>
4000a80c:	e59f0074 	ldr	r0, [pc, #116]	; 4000a888 <_txe_thread_create+0x258>
4000a810:	e15a0000 	cmp	sl, r0
4000a814:	0a000003 	beq	4000a828 <_txe_thread_create+0x1f8>
4000a818:	e59f006c 	ldr	r0, [pc, #108]	; 4000a88c <_txe_thread_create+0x25c>
4000a81c:	e5900000 	ldr	r0, [r0]
4000a820:	e3500000 	cmp	r0, #0
4000a824:	0a000008 	beq	4000a84c <_txe_thread_create+0x21c>
4000a828:	e3a00013 	mov	r0, #19
4000a82c:	eaffff8b 	b	4000a660 <_txe_thread_create+0x30>
4000a830:	e59f0054 	ldr	r0, [pc, #84]	; 4000a88c <_txe_thread_create+0x25c>
4000a834:	e5900000 	ldr	r0, [r0]
4000a838:	e59f1050 	ldr	r1, [pc, #80]	; 4000a890 <_txe_thread_create+0x260>
4000a83c:	e1500001 	cmp	r0, r1
4000a840:	2a000001 	bcs	4000a84c <_txe_thread_create+0x21c>
4000a844:	e3a00013 	mov	r0, #19
4000a848:	eaffff84 	b	4000a660 <_txe_thread_create+0x30>
4000a84c:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a850:	e1cd21f0 	strd	r2, [sp, #16]
4000a854:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a858:	e1a02005 	mov	r2, r5
4000a85c:	e1a00004 	mov	r0, r4
4000a860:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a864:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a868:	eb000f49 	bl	4000e594 <_tx_thread_create>
4000a86c:	e58d0020 	str	r0, [sp, #32]
4000a870:	e59d0020 	ldr	r0, [sp, #32]
4000a874:	eaffff79 	b	4000a660 <_txe_thread_create+0x30>
4000a878:	40030e6c 	.word	0x40030e6c
4000a87c:	40030e58 	.word	0x40030e58
4000a880:	40030e5c 	.word	0x40030e5c
4000a884:	40030e50 	.word	0x40030e50
4000a888:	40032974 	.word	0x40032974
4000a88c:	40030e48 	.word	0x40030e48
4000a890:	f0f0f0f0 	.word	0xf0f0f0f0

4000a894 <_txe_thread_info_get>:
4000a894:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a898:	e24dd01c 	sub	sp, sp, #28
4000a89c:	e1a04000 	mov	r4, r0
4000a8a0:	e1a05001 	mov	r5, r1
4000a8a4:	e1a06002 	mov	r6, r2
4000a8a8:	e1a07003 	mov	r7, r3
4000a8ac:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a8b0:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a8b4:	e3540000 	cmp	r4, #0
4000a8b8:	0a000003 	beq	4000a8cc <_txe_thread_info_get+0x38>
4000a8bc:	e5940000 	ldr	r0, [r4]
4000a8c0:	e59f103c 	ldr	r1, [pc, #60]	; 4000a904 <_txe_thread_info_get+0x70>
4000a8c4:	e1500001 	cmp	r0, r1
4000a8c8:	0a000002 	beq	4000a8d8 <_txe_thread_info_get+0x44>
4000a8cc:	e3a0000e 	mov	r0, #14
4000a8d0:	e28dd01c 	add	sp, sp, #28
4000a8d4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a8d8:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a8dc:	e58d3010 	str	r3, [sp, #16]
4000a8e0:	e1a03007 	mov	r3, r7
4000a8e4:	e1a02006 	mov	r2, r6
4000a8e8:	e1a01005 	mov	r1, r5
4000a8ec:	e1a00004 	mov	r0, r4
4000a8f0:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a8f4:	eb000ff5 	bl	4000e8d0 <_tx_thread_info_get>
4000a8f8:	e58d0018 	str	r0, [sp, #24]
4000a8fc:	e59d0018 	ldr	r0, [sp, #24]
4000a900:	eafffff2 	b	4000a8d0 <_txe_thread_info_get+0x3c>
4000a904:	54485244 	.word	0x54485244

4000a908 <_txe_thread_priority_change>:
4000a908:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a90c:	e1a04000 	mov	r4, r0
4000a910:	e1a05001 	mov	r5, r1
4000a914:	e1a06002 	mov	r6, r2
4000a918:	e3540000 	cmp	r4, #0
4000a91c:	0a000003 	beq	4000a930 <_txe_thread_priority_change+0x28>
4000a920:	e5940000 	ldr	r0, [r4]
4000a924:	e59f1070 	ldr	r1, [pc, #112]	; 4000a99c <_txe_thread_priority_change+0x94>
4000a928:	e1500001 	cmp	r0, r1
4000a92c:	0a000001 	beq	4000a938 <_txe_thread_priority_change+0x30>
4000a930:	e3a0000e 	mov	r0, #14
4000a934:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a938:	e3560000 	cmp	r6, #0
4000a93c:	1a000001 	bne	4000a948 <_txe_thread_priority_change+0x40>
4000a940:	e3a00003 	mov	r0, #3
4000a944:	eafffffa 	b	4000a934 <_txe_thread_priority_change+0x2c>
4000a948:	e3550020 	cmp	r5, #32
4000a94c:	3a000001 	bcc	4000a958 <_txe_thread_priority_change+0x50>
4000a950:	e3a0000f 	mov	r0, #15
4000a954:	eafffff6 	b	4000a934 <_txe_thread_priority_change+0x2c>
4000a958:	e59f0040 	ldr	r0, [pc, #64]	; 4000a9a0 <_txe_thread_priority_change+0x98>
4000a95c:	e5900000 	ldr	r0, [r0]
4000a960:	e3500000 	cmp	r0, #0
4000a964:	0a000003 	beq	4000a978 <_txe_thread_priority_change+0x70>
4000a968:	e59f0034 	ldr	r0, [pc, #52]	; 4000a9a4 <_txe_thread_priority_change+0x9c>
4000a96c:	e5900000 	ldr	r0, [r0]
4000a970:	e3500000 	cmp	r0, #0
4000a974:	0a000001 	beq	4000a980 <_txe_thread_priority_change+0x78>
4000a978:	e3a00013 	mov	r0, #19
4000a97c:	eaffffec 	b	4000a934 <_txe_thread_priority_change+0x2c>
4000a980:	e1a02006 	mov	r2, r6
4000a984:	e1a01005 	mov	r1, r5
4000a988:	e1a00004 	mov	r0, r4
4000a98c:	eb001039 	bl	4000ea78 <_tx_thread_priority_change>
4000a990:	e1a07000 	mov	r7, r0
4000a994:	e1a00007 	mov	r0, r7
4000a998:	eaffffe5 	b	4000a934 <_txe_thread_priority_change+0x2c>
4000a99c:	54485244 	.word	0x54485244
4000a9a0:	40030e50 	.word	0x40030e50
4000a9a4:	40030e48 	.word	0x40030e48

4000a9a8 <_txe_thread_relinquish>:
4000a9a8:	e92d4010 	push	{r4, lr}
4000a9ac:	e59f0020 	ldr	r0, [pc, #32]	; 4000a9d4 <_txe_thread_relinquish+0x2c>
4000a9b0:	e5900000 	ldr	r0, [r0]
4000a9b4:	e3500000 	cmp	r0, #0
4000a9b8:	0a000004 	beq	4000a9d0 <_txe_thread_relinquish+0x28>
4000a9bc:	e59f0014 	ldr	r0, [pc, #20]	; 4000a9d8 <_txe_thread_relinquish+0x30>
4000a9c0:	e5900000 	ldr	r0, [r0]
4000a9c4:	e3500000 	cmp	r0, #0
4000a9c8:	1a000000 	bne	4000a9d0 <_txe_thread_relinquish+0x28>
4000a9cc:	eb001091 	bl	4000ec18 <_tx_thread_relinquish>
4000a9d0:	e8bd8010 	pop	{r4, pc}
4000a9d4:	40030e50 	.word	0x40030e50
4000a9d8:	40030e48 	.word	0x40030e48

4000a9dc <_txe_thread_resume>:
4000a9dc:	e92d4070 	push	{r4, r5, r6, lr}
4000a9e0:	e1a04000 	mov	r4, r0
4000a9e4:	e3540000 	cmp	r4, #0
4000a9e8:	0a000003 	beq	4000a9fc <_txe_thread_resume+0x20>
4000a9ec:	e5940000 	ldr	r0, [r4]
4000a9f0:	e59f1020 	ldr	r1, [pc, #32]	; 4000aa18 <_txe_thread_resume+0x3c>
4000a9f4:	e1500001 	cmp	r0, r1
4000a9f8:	0a000001 	beq	4000aa04 <_txe_thread_resume+0x28>
4000a9fc:	e3a0000e 	mov	r0, #14
4000aa00:	e8bd8070 	pop	{r4, r5, r6, pc}
4000aa04:	e1a00004 	mov	r0, r4
4000aa08:	eb00113e 	bl	4000ef08 <_tx_thread_resume>
4000aa0c:	e1a05000 	mov	r5, r0
4000aa10:	e1a00005 	mov	r0, r5
4000aa14:	eafffff9 	b	4000aa00 <_txe_thread_resume+0x24>
4000aa18:	54485244 	.word	0x54485244

4000aa1c <_txe_timer_activate>:
4000aa1c:	e92d4070 	push	{r4, r5, r6, lr}
4000aa20:	e1a04000 	mov	r4, r0
4000aa24:	e3540000 	cmp	r4, #0
4000aa28:	0a000003 	beq	4000aa3c <_txe_timer_activate+0x20>
4000aa2c:	e5940000 	ldr	r0, [r4]
4000aa30:	e59f1020 	ldr	r1, [pc, #32]	; 4000aa58 <_txe_timer_activate+0x3c>
4000aa34:	e1500001 	cmp	r0, r1
4000aa38:	0a000001 	beq	4000aa44 <_txe_timer_activate+0x28>
4000aa3c:	e3a00015 	mov	r0, #21
4000aa40:	e8bd8070 	pop	{r4, r5, r6, pc}
4000aa44:	e1a00004 	mov	r0, r4
4000aa48:	eb0013a4 	bl	4000f8e0 <_tx_timer_activate>
4000aa4c:	e1a05000 	mov	r5, r0
4000aa50:	e1a00005 	mov	r0, r5
4000aa54:	eafffff9 	b	4000aa40 <_txe_timer_activate+0x24>
4000aa58:	4154494d 	.word	0x4154494d

4000aa5c <_txe_timer_change>:
4000aa5c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000aa60:	e1a04000 	mov	r4, r0
4000aa64:	e1a05001 	mov	r5, r1
4000aa68:	e1a06002 	mov	r6, r2
4000aa6c:	e3540000 	cmp	r4, #0
4000aa70:	0a000003 	beq	4000aa84 <_txe_timer_change+0x28>
4000aa74:	e5940000 	ldr	r0, [r4]
4000aa78:	e59f1058 	ldr	r1, [pc, #88]	; 4000aad8 <_txe_timer_change+0x7c>
4000aa7c:	e1500001 	cmp	r0, r1
4000aa80:	0a000001 	beq	4000aa8c <_txe_timer_change+0x30>
4000aa84:	e3a00015 	mov	r0, #21
4000aa88:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000aa8c:	e3550000 	cmp	r5, #0
4000aa90:	1a000001 	bne	4000aa9c <_txe_timer_change+0x40>
4000aa94:	e3a00016 	mov	r0, #22
4000aa98:	eafffffa 	b	4000aa88 <_txe_timer_change+0x2c>
4000aa9c:	e59f0038 	ldr	r0, [pc, #56]	; 4000aadc <_txe_timer_change+0x80>
4000aaa0:	e5900000 	ldr	r0, [r0]
4000aaa4:	e3c0000f 	bic	r0, r0, #15
4000aaa8:	e59f1030 	ldr	r1, [pc, #48]	; 4000aae0 <_txe_timer_change+0x84>
4000aaac:	e1500001 	cmp	r0, r1
4000aab0:	1a000001 	bne	4000aabc <_txe_timer_change+0x60>
4000aab4:	e3a00013 	mov	r0, #19
4000aab8:	eafffff2 	b	4000aa88 <_txe_timer_change+0x2c>
4000aabc:	e1a02006 	mov	r2, r6
4000aac0:	e1a01005 	mov	r1, r5
4000aac4:	e1a00004 	mov	r0, r4
4000aac8:	eb0013d4 	bl	4000fa20 <_tx_timer_change>
4000aacc:	e1a07000 	mov	r7, r0
4000aad0:	e1a00007 	mov	r0, r7
4000aad4:	eaffffeb 	b	4000aa88 <_txe_timer_change+0x2c>
4000aad8:	4154494d 	.word	0x4154494d
4000aadc:	40030e48 	.word	0x40030e48
4000aae0:	f0f0f0f0 	.word	0xf0f0f0f0

4000aae4 <_txe_timer_create>:
4000aae4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aae8:	e24dd01c 	sub	sp, sp, #28
4000aaec:	e1a04000 	mov	r4, r0
4000aaf0:	e1a05001 	mov	r5, r1
4000aaf4:	e1a06002 	mov	r6, r2
4000aaf8:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000aafc:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000ab00:	e3540000 	cmp	r4, #0
4000ab04:	0a000001 	beq	4000ab10 <_txe_timer_create+0x2c>
4000ab08:	e358002c 	cmp	r8, #44	; 0x2c
4000ab0c:	0a000002 	beq	4000ab1c <_txe_timer_create+0x38>
4000ab10:	e3a00015 	mov	r0, #21
4000ab14:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000ab18:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ab1c:	e10f9000 	mrs	r9, CPSR
4000ab20:	e389a080 	orr	sl, r9, #128	; 0x80
4000ab24:	e121f00a 	msr	CPSR_c, sl
4000ab28:	e59f0160 	ldr	r0, [pc, #352]	; 4000ac90 <_txe_timer_create+0x1ac>
4000ab2c:	e5900000 	ldr	r0, [r0]
4000ab30:	e2800001 	add	r0, r0, #1
4000ab34:	e59f1154 	ldr	r1, [pc, #340]	; 4000ac90 <_txe_timer_create+0x1ac>
4000ab38:	e5810000 	str	r0, [r1]
4000ab3c:	e121f009 	msr	CPSR_c, r9
4000ab40:	e59f014c 	ldr	r0, [pc, #332]	; 4000ac94 <_txe_timer_create+0x1b0>
4000ab44:	e5900000 	ldr	r0, [r0]
4000ab48:	e58d0014 	str	r0, [sp, #20]
4000ab4c:	e3a00000 	mov	r0, #0
4000ab50:	e58d0018 	str	r0, [sp, #24]
4000ab54:	ea000009 	b	4000ab80 <_txe_timer_create+0x9c>
4000ab58:	e59d0014 	ldr	r0, [sp, #20]
4000ab5c:	e1540000 	cmp	r4, r0
4000ab60:	1a000000 	bne	4000ab68 <_txe_timer_create+0x84>
4000ab64:	ea00000a 	b	4000ab94 <_txe_timer_create+0xb0>
4000ab68:	e59d0014 	ldr	r0, [sp, #20]
4000ab6c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000ab70:	e58d0014 	str	r0, [sp, #20]
4000ab74:	e59d0018 	ldr	r0, [sp, #24]
4000ab78:	e2800001 	add	r0, r0, #1
4000ab7c:	e58d0018 	str	r0, [sp, #24]
4000ab80:	e59f1110 	ldr	r1, [pc, #272]	; 4000ac98 <_txe_timer_create+0x1b4>
4000ab84:	e59d0018 	ldr	r0, [sp, #24]
4000ab88:	e5911000 	ldr	r1, [r1]
4000ab8c:	e1500001 	cmp	r0, r1
4000ab90:	3afffff0 	bcc	4000ab58 <_txe_timer_create+0x74>
4000ab94:	e1a00000 	nop			; (mov r0, r0)
4000ab98:	e10f9000 	mrs	r9, CPSR
4000ab9c:	e389a080 	orr	sl, r9, #128	; 0x80
4000aba0:	e121f00a 	msr	CPSR_c, sl
4000aba4:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ac90 <_txe_timer_create+0x1ac>
4000aba8:	e5900000 	ldr	r0, [r0]
4000abac:	e2400001 	sub	r0, r0, #1
4000abb0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ac90 <_txe_timer_create+0x1ac>
4000abb4:	e5810000 	str	r0, [r1]
4000abb8:	e121f009 	msr	CPSR_c, r9
4000abbc:	eb0011b4 	bl	4000f294 <_tx_thread_system_preempt_check>
4000abc0:	e59d0014 	ldr	r0, [sp, #20]
4000abc4:	e1540000 	cmp	r4, r0
4000abc8:	1a000001 	bne	4000abd4 <_txe_timer_create+0xf0>
4000abcc:	e3a00015 	mov	r0, #21
4000abd0:	eaffffcf 	b	4000ab14 <_txe_timer_create+0x30>
4000abd4:	e3570000 	cmp	r7, #0
4000abd8:	1a000001 	bne	4000abe4 <_txe_timer_create+0x100>
4000abdc:	e3a00016 	mov	r0, #22
4000abe0:	eaffffcb 	b	4000ab14 <_txe_timer_create+0x30>
4000abe4:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000abe8:	e3500001 	cmp	r0, #1
4000abec:	0a000004 	beq	4000ac04 <_txe_timer_create+0x120>
4000abf0:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000abf4:	e3500000 	cmp	r0, #0
4000abf8:	0a000001 	beq	4000ac04 <_txe_timer_create+0x120>
4000abfc:	e3a00017 	mov	r0, #23
4000ac00:	eaffffc3 	b	4000ab14 <_txe_timer_create+0x30>
4000ac04:	e59f0090 	ldr	r0, [pc, #144]	; 4000ac9c <_txe_timer_create+0x1b8>
4000ac08:	e5900000 	ldr	r0, [r0]
4000ac0c:	e58d0010 	str	r0, [sp, #16]
4000ac10:	e59d0010 	ldr	r0, [sp, #16]
4000ac14:	e3500000 	cmp	r0, #0
4000ac18:	0a000009 	beq	4000ac44 <_txe_timer_create+0x160>
4000ac1c:	e59f107c 	ldr	r1, [pc, #124]	; 4000aca0 <_txe_timer_create+0x1bc>
4000ac20:	e59d0010 	ldr	r0, [sp, #16]
4000ac24:	e1500001 	cmp	r0, r1
4000ac28:	0a000003 	beq	4000ac3c <_txe_timer_create+0x158>
4000ac2c:	e59f0070 	ldr	r0, [pc, #112]	; 4000aca4 <_txe_timer_create+0x1c0>
4000ac30:	e5900000 	ldr	r0, [r0]
4000ac34:	e3500000 	cmp	r0, #0
4000ac38:	0a000008 	beq	4000ac60 <_txe_timer_create+0x17c>
4000ac3c:	e3a00013 	mov	r0, #19
4000ac40:	eaffffb3 	b	4000ab14 <_txe_timer_create+0x30>
4000ac44:	e59f0058 	ldr	r0, [pc, #88]	; 4000aca4 <_txe_timer_create+0x1c0>
4000ac48:	e5900000 	ldr	r0, [r0]
4000ac4c:	e59f1054 	ldr	r1, [pc, #84]	; 4000aca8 <_txe_timer_create+0x1c4>
4000ac50:	e1500001 	cmp	r0, r1
4000ac54:	2a000001 	bcs	4000ac60 <_txe_timer_create+0x17c>
4000ac58:	e3a00013 	mov	r0, #19
4000ac5c:	eaffffac 	b	4000ab14 <_txe_timer_create+0x30>
4000ac60:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000ac64:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000ac68:	e98d000c 	stmib	sp, {r2, r3}
4000ac6c:	e58d7000 	str	r7, [sp]
4000ac70:	e1a02006 	mov	r2, r6
4000ac74:	e1a01005 	mov	r1, r5
4000ac78:	e1a00004 	mov	r0, r4
4000ac7c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ac80:	eb0013b1 	bl	4000fb4c <_tx_timer_create>
4000ac84:	e1a0b000 	mov	fp, r0
4000ac88:	e1a0000b 	mov	r0, fp
4000ac8c:	eaffffa0 	b	4000ab14 <_txe_timer_create+0x30>
4000ac90:	40030e6c 	.word	0x40030e6c
4000ac94:	40030e94 	.word	0x40030e94
4000ac98:	40030e98 	.word	0x40030e98
4000ac9c:	40030e50 	.word	0x40030e50
4000aca0:	40032974 	.word	0x40032974
4000aca4:	40030e48 	.word	0x40030e48
4000aca8:	f0f0f0f0 	.word	0xf0f0f0f0

4000acac <_txe_timer_deactivate>:
4000acac:	e92d4070 	push	{r4, r5, r6, lr}
4000acb0:	e1a04000 	mov	r4, r0
4000acb4:	e3540000 	cmp	r4, #0
4000acb8:	0a000003 	beq	4000accc <_txe_timer_deactivate+0x20>
4000acbc:	e5940000 	ldr	r0, [r4]
4000acc0:	e59f1020 	ldr	r1, [pc, #32]	; 4000ace8 <_txe_timer_deactivate+0x3c>
4000acc4:	e1500001 	cmp	r0, r1
4000acc8:	0a000001 	beq	4000acd4 <_txe_timer_deactivate+0x28>
4000accc:	e3a00015 	mov	r0, #21
4000acd0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000acd4:	e1a00004 	mov	r0, r4
4000acd8:	eb00141a 	bl	4000fd48 <_tx_timer_deactivate>
4000acdc:	e1a05000 	mov	r5, r0
4000ace0:	e1a00005 	mov	r0, r5
4000ace4:	eafffff9 	b	4000acd0 <_txe_timer_deactivate+0x24>
4000ace8:	4154494d 	.word	0x4154494d

4000acec <_tx_thread_system_return>:
4000acec:	e3a00000 	mov	r0, #0
4000acf0:	e10f1000 	mrs	r1, CPSR
4000acf4:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000acf8:	e3812080 	orr	r2, r1, #128	; 0x80
4000acfc:	e12ff002 	msr	CPSR_fsxc, r2
4000ad00:	e59f302c 	ldr	r3, [pc, #44]	; 4000ad34 <_tx_thread_system_return+0x48>
4000ad04:	e5930000 	ldr	r0, [r3]
4000ad08:	e59f2028 	ldr	r2, [pc, #40]	; 4000ad38 <_tx_thread_system_return+0x4c>
4000ad0c:	e5921000 	ldr	r1, [r2]
4000ad10:	e580d008 	str	sp, [r0, #8]
4000ad14:	e3a04000 	mov	r4, #0
4000ad18:	e3510000 	cmp	r1, #0
4000ad1c:	0a000002 	beq	4000ad2c <_tx_thread_system_return+0x40>
4000ad20:	e590101c 	ldr	r1, [r0, #28]
4000ad24:	e5824000 	str	r4, [r2]
4000ad28:	e5801018 	str	r1, [r0, #24]
4000ad2c:	e5834000 	str	r4, [r3]
4000ad30:	ea000001 	b	4000ad3c <_tx_thread_schedule>
4000ad34:	40030e50 	.word	0x40030e50
4000ad38:	40030e7c 	.word	0x40030e7c

4000ad3c <_tx_thread_schedule>:
4000ad3c:	e10f2000 	mrs	r2, CPSR
4000ad40:	e3c20080 	bic	r0, r2, #128	; 0x80
4000ad44:	e12ff000 	msr	CPSR_fsxc, r0
4000ad48:	e59f104c 	ldr	r1, [pc, #76]	; 4000ad9c <_tx_thread_schedule+0x60>
4000ad4c:	e5910000 	ldr	r0, [r1]
4000ad50:	e3500000 	cmp	r0, #0
4000ad54:	0afffffc 	beq	4000ad4c <_tx_thread_schedule+0x10>
4000ad58:	e12ff002 	msr	CPSR_fsxc, r2
4000ad5c:	e59f103c 	ldr	r1, [pc, #60]	; 4000ada0 <_tx_thread_schedule+0x64>
4000ad60:	e5810000 	str	r0, [r1]
4000ad64:	e5902004 	ldr	r2, [r0, #4]
4000ad68:	e5903018 	ldr	r3, [r0, #24]
4000ad6c:	e2822001 	add	r2, r2, #1
4000ad70:	e5802004 	str	r2, [r0, #4]
4000ad74:	e59f2028 	ldr	r2, [pc, #40]	; 4000ada4 <_tx_thread_schedule+0x68>
4000ad78:	e590d008 	ldr	sp, [r0, #8]
4000ad7c:	e5823000 	str	r3, [r2]
4000ad80:	e8bd0003 	pop	{r0, r1}
4000ad84:	e3500000 	cmp	r0, #0
4000ad88:	116ff001 	msrne	SPSR_fsxc, r1
4000ad8c:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000ad90:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ad94:	e12ff001 	msr	CPSR_fsxc, r1
4000ad98:	e12fff1e 	bx	lr
4000ad9c:	40030e54 	.word	0x40030e54
4000ada0:	40030e50 	.word	0x40030e50
4000ada4:	40030e7c 	.word	0x40030e7c

4000ada8 <_tx_thread_vectored_context_save>:
4000ada8:	e59f3044 	ldr	r3, [pc, #68]	; 4000adf4 <_tx_thread_vectored_context_save+0x4c>
4000adac:	e5932000 	ldr	r2, [r3]
4000adb0:	e3520000 	cmp	r2, #0
4000adb4:	0a000003 	beq	4000adc8 <_tx_thread_vectored_context_save+0x20>
4000adb8:	e2822001 	add	r2, r2, #1
4000adbc:	e5832000 	str	r2, [r3]
4000adc0:	e3a0a000 	mov	sl, #0
4000adc4:	e12fff1e 	bx	lr
4000adc8:	e2822001 	add	r2, r2, #1
4000adcc:	e5832000 	str	r2, [r3]
4000add0:	e59f1020 	ldr	r1, [pc, #32]	; 4000adf8 <_tx_thread_vectored_context_save+0x50>
4000add4:	e5910000 	ldr	r0, [r1]
4000add8:	e3500000 	cmp	r0, #0
4000addc:	0a000001 	beq	4000ade8 <_tx_thread_vectored_context_save+0x40>
4000ade0:	e3a0a000 	mov	sl, #0
4000ade4:	e12fff1e 	bx	lr
4000ade8:	e3a0a000 	mov	sl, #0
4000adec:	e28dd020 	add	sp, sp, #32
4000adf0:	e12fff1e 	bx	lr
4000adf4:	40030e48 	.word	0x40030e48
4000adf8:	40030e50 	.word	0x40030e50

4000adfc <_tx_timer_interrupt>:
4000adfc:	e59f10cc 	ldr	r1, [pc, #204]	; 4000aed0 <_tx_timer_interrupt+0xd4>
4000ae00:	e5910000 	ldr	r0, [r1]
4000ae04:	e2800001 	add	r0, r0, #1
4000ae08:	e5810000 	str	r0, [r1]
4000ae0c:	e59f30c0 	ldr	r3, [pc, #192]	; 4000aed4 <_tx_timer_interrupt+0xd8>
4000ae10:	e5932000 	ldr	r2, [r3]
4000ae14:	e3520000 	cmp	r2, #0
4000ae18:	0a000006 	beq	4000ae38 <_tx_timer_interrupt+0x3c>
4000ae1c:	e2422001 	sub	r2, r2, #1
4000ae20:	e5832000 	str	r2, [r3]
4000ae24:	e3520000 	cmp	r2, #0
4000ae28:	1a000002 	bne	4000ae38 <_tx_timer_interrupt+0x3c>
4000ae2c:	e59f30a4 	ldr	r3, [pc, #164]	; 4000aed8 <_tx_timer_interrupt+0xdc>
4000ae30:	e3a00001 	mov	r0, #1
4000ae34:	e5830000 	str	r0, [r3]
4000ae38:	e59f109c 	ldr	r1, [pc, #156]	; 4000aedc <_tx_timer_interrupt+0xe0>
4000ae3c:	e5910000 	ldr	r0, [r1]
4000ae40:	e5902000 	ldr	r2, [r0]
4000ae44:	e3520000 	cmp	r2, #0
4000ae48:	0a000003 	beq	4000ae5c <_tx_timer_interrupt+0x60>
4000ae4c:	e59f308c 	ldr	r3, [pc, #140]	; 4000aee0 <_tx_timer_interrupt+0xe4>
4000ae50:	e3a02001 	mov	r2, #1
4000ae54:	e5832000 	str	r2, [r3]
4000ae58:	ea000007 	b	4000ae7c <_tx_timer_interrupt+0x80>
4000ae5c:	e2800004 	add	r0, r0, #4
4000ae60:	e59f307c 	ldr	r3, [pc, #124]	; 4000aee4 <_tx_timer_interrupt+0xe8>
4000ae64:	e5932000 	ldr	r2, [r3]
4000ae68:	e1500002 	cmp	r0, r2
4000ae6c:	1a000001 	bne	4000ae78 <_tx_timer_interrupt+0x7c>
4000ae70:	e59f3070 	ldr	r3, [pc, #112]	; 4000aee8 <_tx_timer_interrupt+0xec>
4000ae74:	e5930000 	ldr	r0, [r3]
4000ae78:	e5810000 	str	r0, [r1]
4000ae7c:	e59f3054 	ldr	r3, [pc, #84]	; 4000aed8 <_tx_timer_interrupt+0xdc>
4000ae80:	e5932000 	ldr	r2, [r3]
4000ae84:	e3520000 	cmp	r2, #0
4000ae88:	1a000003 	bne	4000ae9c <_tx_timer_interrupt+0xa0>
4000ae8c:	e59f104c 	ldr	r1, [pc, #76]	; 4000aee0 <_tx_timer_interrupt+0xe4>
4000ae90:	e5910000 	ldr	r0, [r1]
4000ae94:	e3500000 	cmp	r0, #0
4000ae98:	0a00000b 	beq	4000aecc <_tx_timer_interrupt+0xd0>
4000ae9c:	e92d4001 	push	{r0, lr}
4000aea0:	e59f1038 	ldr	r1, [pc, #56]	; 4000aee0 <_tx_timer_interrupt+0xe4>
4000aea4:	e5910000 	ldr	r0, [r1]
4000aea8:	e3500000 	cmp	r0, #0
4000aeac:	0a000000 	beq	4000aeb4 <_tx_timer_interrupt+0xb8>
4000aeb0:	eb001441 	bl	4000ffbc <_tx_timer_expiration_process>
4000aeb4:	e59f301c 	ldr	r3, [pc, #28]	; 4000aed8 <_tx_timer_interrupt+0xdc>
4000aeb8:	e5932000 	ldr	r2, [r3]
4000aebc:	e3520000 	cmp	r2, #0
4000aec0:	0a000000 	beq	4000aec8 <_tx_timer_interrupt+0xcc>
4000aec4:	eb001210 	bl	4000f70c <_tx_thread_time_slice>
4000aec8:	e8bd4001 	pop	{r0, lr}
4000aecc:	e12fff1e 	bx	lr
4000aed0:	40030e78 	.word	0x40030e78
4000aed4:	40030e7c 	.word	0x40030e7c
4000aed8:	40030e80 	.word	0x40030e80
4000aedc:	40030e8c 	.word	0x40030e8c
4000aee0:	40030e90 	.word	0x40030e90
4000aee4:	40030e88 	.word	0x40030e88
4000aee8:	40030e84 	.word	0x40030e84

4000aeec <_tx_thread_context_restore>:
4000aeec:	e10f3000 	mrs	r3, CPSR
4000aef0:	e3830080 	orr	r0, r3, #128	; 0x80
4000aef4:	e12ff000 	msr	CPSR_fsxc, r0
4000aef8:	e59f30f0 	ldr	r3, [pc, #240]	; 4000aff0 <_tx_thread_context_restore+0x104>
4000aefc:	e5932000 	ldr	r2, [r3]
4000af00:	e2422001 	sub	r2, r2, #1
4000af04:	e5832000 	str	r2, [r3]
4000af08:	e3520000 	cmp	r2, #0
4000af0c:	0a000003 	beq	4000af20 <_tx_thread_context_restore+0x34>
4000af10:	e8bd5401 	pop	{r0, sl, ip, lr}
4000af14:	e16ff000 	msr	SPSR_fsxc, r0
4000af18:	e8bd000f 	pop	{r0, r1, r2, r3}
4000af1c:	e1b0f00e 	movs	pc, lr
4000af20:	e59f10cc 	ldr	r1, [pc, #204]	; 4000aff4 <_tx_thread_context_restore+0x108>
4000af24:	e5910000 	ldr	r0, [r1]
4000af28:	e3500000 	cmp	r0, #0
4000af2c:	0a00002a 	beq	4000afdc <_tx_thread_context_restore+0xf0>
4000af30:	e59f30c0 	ldr	r3, [pc, #192]	; 4000aff8 <_tx_thread_context_restore+0x10c>
4000af34:	e5932000 	ldr	r2, [r3]
4000af38:	e3520000 	cmp	r2, #0
4000af3c:	1a000003 	bne	4000af50 <_tx_thread_context_restore+0x64>
4000af40:	e59f30b4 	ldr	r3, [pc, #180]	; 4000affc <_tx_thread_context_restore+0x110>
4000af44:	e5932000 	ldr	r2, [r3]
4000af48:	e1500002 	cmp	r0, r2
4000af4c:	1a000003 	bne	4000af60 <_tx_thread_context_restore+0x74>
4000af50:	e8bd5401 	pop	{r0, sl, ip, lr}
4000af54:	e16ff000 	msr	SPSR_fsxc, r0
4000af58:	e8bd000f 	pop	{r0, r1, r2, r3}
4000af5c:	e1b0f00e 	movs	pc, lr
4000af60:	e8bd5408 	pop	{r3, sl, ip, lr}
4000af64:	e1a0100e 	mov	r1, lr
4000af68:	e3a020d3 	mov	r2, #211	; 0xd3
4000af6c:	e121f002 	msr	CPSR_c, r2
4000af70:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000af74:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000af78:	e1a04003 	mov	r4, r3
4000af7c:	e3a020d2 	mov	r2, #210	; 0xd2
4000af80:	e121f002 	msr	CPSR_c, r2
4000af84:	e8bd000f 	pop	{r0, r1, r2, r3}
4000af88:	e3a050d3 	mov	r5, #211	; 0xd3
4000af8c:	e121f005 	msr	CPSR_c, r5
4000af90:	e92d000f 	push	{r0, r1, r2, r3}
4000af94:	e3a03001 	mov	r3, #1
4000af98:	e92d0018 	push	{r3, r4}
4000af9c:	e59f1050 	ldr	r1, [pc, #80]	; 4000aff4 <_tx_thread_context_restore+0x108>
4000afa0:	e5910000 	ldr	r0, [r1]
4000afa4:	e580d008 	str	sp, [r0, #8]
4000afa8:	e3c44020 	bic	r4, r4, #32
4000afac:	e3843080 	orr	r3, r4, #128	; 0x80
4000afb0:	e12ff003 	msr	CPSR_fsxc, r3
4000afb4:	e59f3044 	ldr	r3, [pc, #68]	; 4000b000 <_tx_thread_context_restore+0x114>
4000afb8:	e5932000 	ldr	r2, [r3]
4000afbc:	e3520000 	cmp	r2, #0
4000afc0:	0a000002 	beq	4000afd0 <_tx_thread_context_restore+0xe4>
4000afc4:	e5802018 	str	r2, [r0, #24]
4000afc8:	e3a02000 	mov	r2, #0
4000afcc:	e5832000 	str	r2, [r3]
4000afd0:	e3a00000 	mov	r0, #0
4000afd4:	e5810000 	str	r0, [r1]
4000afd8:	eaffff57 	b	4000ad3c <_tx_thread_schedule>
4000afdc:	e10f3000 	mrs	r3, CPSR
4000afe0:	e3c3301f 	bic	r3, r3, #31
4000afe4:	e3833013 	orr	r3, r3, #19
4000afe8:	e12ff003 	msr	CPSR_fsxc, r3
4000afec:	eaffff52 	b	4000ad3c <_tx_thread_schedule>
4000aff0:	40030e48 	.word	0x40030e48
4000aff4:	40030e50 	.word	0x40030e50
4000aff8:	40030e6c 	.word	0x40030e6c
4000affc:	40030e54 	.word	0x40030e54
4000b000:	40030e7c 	.word	0x40030e7c

4000b004 <_tx_thread_irq_nesting_end>:
4000b004:	e1a0300e 	mov	r3, lr
4000b008:	e10f0000 	mrs	r0, CPSR
4000b00c:	e3800080 	orr	r0, r0, #128	; 0x80
4000b010:	e12ff000 	msr	CPSR_fsxc, r0
4000b014:	e8bd4002 	pop	{r1, lr}
4000b018:	e3c0001f 	bic	r0, r0, #31
4000b01c:	e3800012 	orr	r0, r0, #18
4000b020:	e12ff000 	msr	CPSR_fsxc, r0
4000b024:	e12fff13 	bx	r3

4000b028 <_tx_thread_irq_nesting_start>:
4000b028:	e1a0300e 	mov	r3, lr
4000b02c:	e10f0000 	mrs	r0, CPSR
4000b030:	e3c0001f 	bic	r0, r0, #31
4000b034:	e380001f 	orr	r0, r0, #31
4000b038:	e12ff000 	msr	CPSR_fsxc, r0
4000b03c:	e92d4002 	push	{r1, lr}
4000b040:	e3c00080 	bic	r0, r0, #128	; 0x80
4000b044:	e12ff000 	msr	CPSR_fsxc, r0
4000b048:	e12fff13 	bx	r3

4000b04c <_tx_initialize_low_level>:
4000b04c:	e1a0100d 	mov	r1, sp
4000b050:	e59f3024 	ldr	r3, [pc, #36]	; 4000b07c <_tx_initialize_low_level+0x30>
4000b054:	e5831000 	str	r1, [r3]
4000b058:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b05c:	e3a00000 	mov	r0, #0
4000b060:	eb005b7f 	bl	40021e64 <CyU3POsTimerInit>
4000b064:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000b068:	e12fff1e 	bx	lr
4000b06c:	e59f200c 	ldr	r2, [pc, #12]	; 4000b080 <_tx_initialize_low_level+0x34>
4000b070:	e5920000 	ldr	r0, [r2]
4000b074:	e59f2008 	ldr	r2, [pc, #8]	; 4000b084 <_tx_initialize_low_level+0x38>
4000b078:	e5920000 	ldr	r0, [r2]
4000b07c:	40030e4c 	.word	0x40030e4c
4000b080:	40030e70 	.word	0x40030e70
4000b084:	40030de4 	.word	0x40030de4

4000b088 <_tx_byte_allocate>:
4000b088:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b08c:	e1a04000 	mov	r4, r0
4000b090:	e1a05001 	mov	r5, r1
4000b094:	e1a06002 	mov	r6, r2
4000b098:	e1a07003 	mov	r7, r3
4000b09c:	e3a00000 	mov	r0, #0
4000b0a0:	e58d0000 	str	r0, [sp]
4000b0a4:	e59f027c 	ldr	r0, [pc, #636]	; 4000b328 <_tx_byte_allocate+0x2a0>
4000b0a8:	e590a000 	ldr	sl, [r0]
4000b0ac:	e10f8000 	mrs	r8, CPSR
4000b0b0:	e3889080 	orr	r9, r8, #128	; 0x80
4000b0b4:	e121f009 	msr	CPSR_c, r9
4000b0b8:	e2860003 	add	r0, r6, #3
4000b0bc:	e1a00120 	lsr	r0, r0, #2
4000b0c0:	e1a06100 	lsl	r6, r0, #2
4000b0c4:	e59f0260 	ldr	r0, [pc, #608]	; 4000b32c <_tx_byte_allocate+0x2a4>
4000b0c8:	e5900000 	ldr	r0, [r0]
4000b0cc:	e58d0004 	str	r0, [sp, #4]
4000b0d0:	e59f1254 	ldr	r1, [pc, #596]	; 4000b32c <_tx_byte_allocate+0x2a4>
4000b0d4:	e5910000 	ldr	r0, [r1]
4000b0d8:	e3500000 	cmp	r0, #0
4000b0dc:	0a000031 	beq	4000b1a8 <_tx_byte_allocate+0x120>
4000b0e0:	e59f1248 	ldr	r1, [pc, #584]	; 4000b330 <_tx_byte_allocate+0x2a8>
4000b0e4:	e5911000 	ldr	r1, [r1]
4000b0e8:	e2811001 	add	r1, r1, #1
4000b0ec:	e59f223c 	ldr	r2, [pc, #572]	; 4000b330 <_tx_byte_allocate+0x2a8>
4000b0f0:	e5821000 	str	r1, [r2]
4000b0f4:	e580100c 	str	r1, [r0, #12]
4000b0f8:	e59f1234 	ldr	r1, [pc, #564]	; 4000b334 <_tx_byte_allocate+0x2ac>
4000b0fc:	e5911000 	ldr	r1, [r1]
4000b100:	e3510000 	cmp	r1, #0
4000b104:	1a000006 	bne	4000b124 <_tx_byte_allocate+0x9c>
4000b108:	e59f1218 	ldr	r1, [pc, #536]	; 4000b328 <_tx_byte_allocate+0x2a0>
4000b10c:	e5911000 	ldr	r1, [r1]
4000b110:	e5801000 	str	r1, [r0]
4000b114:	e5901000 	ldr	r1, [r0]
4000b118:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b11c:	e5801004 	str	r1, [r0, #4]
4000b120:	ea00000d 	b	4000b15c <_tx_byte_allocate+0xd4>
4000b124:	e59f1208 	ldr	r1, [pc, #520]	; 4000b334 <_tx_byte_allocate+0x2ac>
4000b128:	e5911000 	ldr	r1, [r1]
4000b12c:	e59f2204 	ldr	r2, [pc, #516]	; 4000b338 <_tx_byte_allocate+0x2b0>
4000b130:	e1510002 	cmp	r1, r2
4000b134:	2a000004 	bcs	4000b14c <_tx_byte_allocate+0xc4>
4000b138:	e3e01000 	mvn	r1, #0
4000b13c:	e5801000 	str	r1, [r0]
4000b140:	e3a01000 	mov	r1, #0
4000b144:	e5801004 	str	r1, [r0, #4]
4000b148:	ea000003 	b	4000b15c <_tx_byte_allocate+0xd4>
4000b14c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b338 <_tx_byte_allocate+0x2b0>
4000b150:	e5801000 	str	r1, [r0]
4000b154:	e3a01000 	mov	r1, #0
4000b158:	e5801004 	str	r1, [r0, #4]
4000b15c:	e3a01014 	mov	r1, #20
4000b160:	e5801008 	str	r1, [r0, #8]
4000b164:	e5804010 	str	r4, [r0, #16]
4000b168:	e3a01000 	mov	r1, #0
4000b16c:	e5801014 	str	r1, [r0, #20]
4000b170:	e5806018 	str	r6, [r0, #24]
4000b174:	e580701c 	str	r7, [r0, #28]
4000b178:	e2800020 	add	r0, r0, #32
4000b17c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b33c <_tx_byte_allocate+0x2b4>
4000b180:	e5911000 	ldr	r1, [r1]
4000b184:	e1500001 	cmp	r0, r1
4000b188:	3a000001 	bcc	4000b194 <_tx_byte_allocate+0x10c>
4000b18c:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b340 <_tx_byte_allocate+0x2b8>
4000b190:	e5910000 	ldr	r0, [r1]
4000b194:	e59f1190 	ldr	r1, [pc, #400]	; 4000b32c <_tx_byte_allocate+0x2a4>
4000b198:	e5810000 	str	r0, [r1]
4000b19c:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b344 <_tx_byte_allocate+0x2bc>
4000b1a0:	e5911000 	ldr	r1, [r1]
4000b1a4:	e5810020 	str	r0, [r1, #32]
4000b1a8:	e59d0004 	ldr	r0, [sp, #4]
4000b1ac:	e3500000 	cmp	r0, #0
4000b1b0:	0a000002 	beq	4000b1c0 <_tx_byte_allocate+0x138>
4000b1b4:	e59d0004 	ldr	r0, [sp, #4]
4000b1b8:	e590000c 	ldr	r0, [r0, #12]
4000b1bc:	e58d0000 	str	r0, [sp]
4000b1c0:	e1a00000 	nop			; (mov r0, r0)
4000b1c4:	e584a020 	str	sl, [r4, #32]
4000b1c8:	e121f008 	msr	CPSR_c, r8
4000b1cc:	e1a01006 	mov	r1, r6
4000b1d0:	e1a00004 	mov	r0, r4
4000b1d4:	eb0001ba 	bl	4000b8c4 <_tx_byte_pool_search>
4000b1d8:	e1a0b000 	mov	fp, r0
4000b1dc:	e10f8000 	mrs	r8, CPSR
4000b1e0:	e3889080 	orr	r9, r8, #128	; 0x80
4000b1e4:	e121f009 	msr	CPSR_c, r9
4000b1e8:	e35b0000 	cmp	fp, #0
4000b1ec:	1a000002 	bne	4000b1fc <_tx_byte_allocate+0x174>
4000b1f0:	e5940020 	ldr	r0, [r4, #32]
4000b1f4:	e150000a 	cmp	r0, sl
4000b1f8:	1afffff1 	bne	4000b1c4 <_tx_byte_allocate+0x13c>
4000b1fc:	e35b0000 	cmp	fp, #0
4000b200:	0a00000e 	beq	4000b240 <_tx_byte_allocate+0x1b8>
4000b204:	e585b000 	str	fp, [r5]
4000b208:	e59d0004 	ldr	r0, [sp, #4]
4000b20c:	e3500000 	cmp	r0, #0
4000b210:	0a000007 	beq	4000b234 <_tx_byte_allocate+0x1ac>
4000b214:	e59d0004 	ldr	r0, [sp, #4]
4000b218:	e590100c 	ldr	r1, [r0, #12]
4000b21c:	e59d0000 	ldr	r0, [sp]
4000b220:	e1510000 	cmp	r1, r0
4000b224:	1a000002 	bne	4000b234 <_tx_byte_allocate+0x1ac>
4000b228:	e5950000 	ldr	r0, [r5]
4000b22c:	e59d1004 	ldr	r1, [sp, #4]
4000b230:	e5810014 	str	r0, [r1, #20]
4000b234:	e3a00000 	mov	r0, #0
4000b238:	e58d0008 	str	r0, [sp, #8]
4000b23c:	ea000036 	b	4000b31c <_tx_byte_allocate+0x294>
4000b240:	e3570000 	cmp	r7, #0
4000b244:	0a000032 	beq	4000b314 <_tx_byte_allocate+0x28c>
4000b248:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b348 <_tx_byte_allocate+0x2c0>
4000b24c:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b250:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b254:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b258:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b25c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b260:	e3500000 	cmp	r0, #0
4000b264:	0a00000a 	beq	4000b294 <_tx_byte_allocate+0x20c>
4000b268:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b26c:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b270:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b274:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b278:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b27c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b280:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b284:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b288:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b28c:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b290:	ea000002 	b	4000b2a0 <_tx_byte_allocate+0x218>
4000b294:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b298:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b29c:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b2a0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b2a4:	e2800001 	add	r0, r0, #1
4000b2a8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b2ac:	e3a00009 	mov	r0, #9
4000b2b0:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b2b4:	e3a00001 	mov	r0, #1
4000b2b8:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b2bc:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b2c0:	e59f0084 	ldr	r0, [pc, #132]	; 4000b34c <_tx_byte_allocate+0x2c4>
4000b2c4:	e5900000 	ldr	r0, [r0]
4000b2c8:	e2800001 	add	r0, r0, #1
4000b2cc:	e59f1078 	ldr	r1, [pc, #120]	; 4000b34c <_tx_byte_allocate+0x2c4>
4000b2d0:	e5810000 	str	r0, [r1]
4000b2d4:	e121f008 	msr	CPSR_c, r8
4000b2d8:	e1a0000a 	mov	r0, sl
4000b2dc:	ebfff671 	bl	40008ca8 <_tx_thread_system_suspend>
4000b2e0:	e59d0004 	ldr	r0, [sp, #4]
4000b2e4:	e3500000 	cmp	r0, #0
4000b2e8:	0a000007 	beq	4000b30c <_tx_byte_allocate+0x284>
4000b2ec:	e59d0004 	ldr	r0, [sp, #4]
4000b2f0:	e590100c 	ldr	r1, [r0, #12]
4000b2f4:	e59d0000 	ldr	r0, [sp]
4000b2f8:	e1510000 	cmp	r1, r0
4000b2fc:	1a000002 	bne	4000b30c <_tx_byte_allocate+0x284>
4000b300:	e5950000 	ldr	r0, [r5]
4000b304:	e59d1004 	ldr	r1, [sp, #4]
4000b308:	e5810014 	str	r0, [r1, #20]
4000b30c:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b310:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b314:	e3a00010 	mov	r0, #16
4000b318:	e58d0008 	str	r0, [sp, #8]
4000b31c:	e121f008 	msr	CPSR_c, r8
4000b320:	e59d0008 	ldr	r0, [sp, #8]
4000b324:	eafffff9 	b	4000b310 <_tx_byte_allocate+0x288>
4000b328:	40030e50 	.word	0x40030e50
4000b32c:	40030ebc 	.word	0x40030ebc
4000b330:	40030ec0 	.word	0x40030ec0
4000b334:	40030e48 	.word	0x40030e48
4000b338:	f0f0f0f0 	.word	0xf0f0f0f0
4000b33c:	40030eb8 	.word	0x40030eb8
4000b340:	40030eb4 	.word	0x40030eb4
4000b344:	40030ea8 	.word	0x40030ea8
4000b348:	4000b350 	.word	0x4000b350
4000b34c:	40030e6c 	.word	0x40030e6c

4000b350 <_tx_byte_pool_cleanup>:
4000b350:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b354:	e1a04000 	mov	r4, r0
4000b358:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b35c:	e10f5000 	mrs	r5, CPSR
4000b360:	e3856080 	orr	r6, r5, #128	; 0x80
4000b364:	e121f006 	msr	CPSR_c, r6
4000b368:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b36c:	e3500000 	cmp	r0, #0
4000b370:	0a000026 	beq	4000b410 <_tx_byte_pool_cleanup+0xc0>
4000b374:	e3570000 	cmp	r7, #0
4000b378:	0a000024 	beq	4000b410 <_tx_byte_pool_cleanup+0xc0>
4000b37c:	e5970000 	ldr	r0, [r7]
4000b380:	e59f1090 	ldr	r1, [pc, #144]	; 4000b418 <_tx_byte_pool_cleanup+0xc8>
4000b384:	e1500001 	cmp	r0, r1
4000b388:	1a000020 	bne	4000b410 <_tx_byte_pool_cleanup+0xc0>
4000b38c:	e3a00000 	mov	r0, #0
4000b390:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b394:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b398:	e1500004 	cmp	r0, r4
4000b39c:	1a000002 	bne	4000b3ac <_tx_byte_pool_cleanup+0x5c>
4000b3a0:	e3a00000 	mov	r0, #0
4000b3a4:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b3a8:	ea000007 	b	4000b3cc <_tx_byte_pool_cleanup+0x7c>
4000b3ac:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b3b0:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b3b4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b3b8:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b3bc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b3c0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b3c4:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b3c8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b3cc:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b3d0:	e2400001 	sub	r0, r0, #1
4000b3d4:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b3d8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b3dc:	e3500009 	cmp	r0, #9
4000b3e0:	1a00000a 	bne	4000b410 <_tx_byte_pool_cleanup+0xc0>
4000b3e4:	e3a00010 	mov	r0, #16
4000b3e8:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b3ec:	e59f0028 	ldr	r0, [pc, #40]	; 4000b41c <_tx_byte_pool_cleanup+0xcc>
4000b3f0:	e5900000 	ldr	r0, [r0]
4000b3f4:	e2800001 	add	r0, r0, #1
4000b3f8:	e59f101c 	ldr	r1, [pc, #28]	; 4000b41c <_tx_byte_pool_cleanup+0xcc>
4000b3fc:	e5810000 	str	r0, [r1]
4000b400:	e121f005 	msr	CPSR_c, r5
4000b404:	e1a00004 	mov	r0, r4
4000b408:	eb000fcd 	bl	4000f344 <_tx_thread_system_resume>
4000b40c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b410:	e121f005 	msr	CPSR_c, r5
4000b414:	eafffffc 	b	4000b40c <_tx_byte_pool_cleanup+0xbc>
4000b418:	42595445 	.word	0x42595445
4000b41c:	40030e6c 	.word	0x40030e6c

4000b420 <_tx_byte_pool_create>:
4000b420:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b424:	e1a04000 	mov	r4, r0
4000b428:	e1a05001 	mov	r5, r1
4000b42c:	e1a06002 	mov	r6, r2
4000b430:	e1a07003 	mov	r7, r3
4000b434:	e3a01034 	mov	r1, #52	; 0x34
4000b438:	e1a00004 	mov	r0, r4
4000b43c:	eb00207b 	bl	40013630 <__aeabi_memclr4>
4000b440:	e1a00127 	lsr	r0, r7, #2
4000b444:	e1a07100 	lsl	r7, r0, #2
4000b448:	e5845004 	str	r5, [r4, #4]
4000b44c:	e5846018 	str	r6, [r4, #24]
4000b450:	e584701c 	str	r7, [r4, #28]
4000b454:	e5846010 	str	r6, [r4, #16]
4000b458:	e5846014 	str	r6, [r4, #20]
4000b45c:	e2470008 	sub	r0, r7, #8
4000b460:	e5840008 	str	r0, [r4, #8]
4000b464:	e3a00002 	mov	r0, #2
4000b468:	e584000c 	str	r0, [r4, #12]
4000b46c:	e0860007 	add	r0, r6, r7
4000b470:	e58d0004 	str	r0, [sp, #4]
4000b474:	e59d0004 	ldr	r0, [sp, #4]
4000b478:	e2400004 	sub	r0, r0, #4
4000b47c:	e58d0004 	str	r0, [sp, #4]
4000b480:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b644 <_tx_byte_pool_create+0x224>
4000b484:	e59d1004 	ldr	r1, [sp, #4]
4000b488:	e5810000 	str	r0, [r1]
4000b48c:	e59d0004 	ldr	r0, [sp, #4]
4000b490:	e2400004 	sub	r0, r0, #4
4000b494:	e58d0004 	str	r0, [sp, #4]
4000b498:	e59d0004 	ldr	r0, [sp, #4]
4000b49c:	e5806000 	str	r6, [r0]
4000b4a0:	e59d0004 	ldr	r0, [sp, #4]
4000b4a4:	e5860000 	str	r0, [r6]
4000b4a8:	e58d6004 	str	r6, [sp, #4]
4000b4ac:	e59d0004 	ldr	r0, [sp, #4]
4000b4b0:	e2800004 	add	r0, r0, #4
4000b4b4:	e58d0004 	str	r0, [sp, #4]
4000b4b8:	e59f0188 	ldr	r0, [pc, #392]	; 4000b648 <_tx_byte_pool_create+0x228>
4000b4bc:	e59d1004 	ldr	r1, [sp, #4]
4000b4c0:	e5810000 	str	r0, [r1]
4000b4c4:	e3a00000 	mov	r0, #0
4000b4c8:	e5840020 	str	r0, [r4, #32]
4000b4cc:	e10f8000 	mrs	r8, CPSR
4000b4d0:	e3889080 	orr	r9, r8, #128	; 0x80
4000b4d4:	e121f009 	msr	CPSR_c, r9
4000b4d8:	e59f016c 	ldr	r0, [pc, #364]	; 4000b64c <_tx_byte_pool_create+0x22c>
4000b4dc:	e5840000 	str	r0, [r4]
4000b4e0:	e59f0168 	ldr	r0, [pc, #360]	; 4000b650 <_tx_byte_pool_create+0x230>
4000b4e4:	e5900000 	ldr	r0, [r0]
4000b4e8:	e3500000 	cmp	r0, #0
4000b4ec:	0a00000b 	beq	4000b520 <_tx_byte_pool_create+0x100>
4000b4f0:	e59f0158 	ldr	r0, [pc, #344]	; 4000b650 <_tx_byte_pool_create+0x230>
4000b4f4:	e5900000 	ldr	r0, [r0]
4000b4f8:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b4fc:	e59f014c 	ldr	r0, [pc, #332]	; 4000b650 <_tx_byte_pool_create+0x230>
4000b500:	e5900000 	ldr	r0, [r0]
4000b504:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b508:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b50c:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b510:	e59f0138 	ldr	r0, [pc, #312]	; 4000b650 <_tx_byte_pool_create+0x230>
4000b514:	e5900000 	ldr	r0, [r0]
4000b518:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b51c:	ea000003 	b	4000b530 <_tx_byte_pool_create+0x110>
4000b520:	e59f0128 	ldr	r0, [pc, #296]	; 4000b650 <_tx_byte_pool_create+0x230>
4000b524:	e5804000 	str	r4, [r0]
4000b528:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b52c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b530:	e59f011c 	ldr	r0, [pc, #284]	; 4000b654 <_tx_byte_pool_create+0x234>
4000b534:	e5900000 	ldr	r0, [r0]
4000b538:	e2800001 	add	r0, r0, #1
4000b53c:	e59f1110 	ldr	r1, [pc, #272]	; 4000b654 <_tx_byte_pool_create+0x234>
4000b540:	e5810000 	str	r0, [r1]
4000b544:	e3a03000 	mov	r3, #0
4000b548:	e58d3000 	str	r3, [sp]
4000b54c:	e1a03007 	mov	r3, r7
4000b550:	e1a02005 	mov	r2, r5
4000b554:	e1a01004 	mov	r1, r4
4000b558:	e3a00008 	mov	r0, #8
4000b55c:	eb0012ce 	bl	4001009c <_tx_trace_object_register>
4000b560:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b658 <_tx_byte_pool_create+0x238>
4000b564:	e5910000 	ldr	r0, [r1]
4000b568:	e3500000 	cmp	r0, #0
4000b56c:	0a000031 	beq	4000b638 <_tx_byte_pool_create+0x218>
4000b570:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b65c <_tx_byte_pool_create+0x23c>
4000b574:	e5911000 	ldr	r1, [r1]
4000b578:	e2811001 	add	r1, r1, #1
4000b57c:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b65c <_tx_byte_pool_create+0x23c>
4000b580:	e5821000 	str	r1, [r2]
4000b584:	e580100c 	str	r1, [r0, #12]
4000b588:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b660 <_tx_byte_pool_create+0x240>
4000b58c:	e5911000 	ldr	r1, [r1]
4000b590:	e3510000 	cmp	r1, #0
4000b594:	1a000006 	bne	4000b5b4 <_tx_byte_pool_create+0x194>
4000b598:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b664 <_tx_byte_pool_create+0x244>
4000b59c:	e5911000 	ldr	r1, [r1]
4000b5a0:	e5801000 	str	r1, [r0]
4000b5a4:	e5901000 	ldr	r1, [r0]
4000b5a8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b5ac:	e5801004 	str	r1, [r0, #4]
4000b5b0:	ea00000d 	b	4000b5ec <_tx_byte_pool_create+0x1cc>
4000b5b4:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b660 <_tx_byte_pool_create+0x240>
4000b5b8:	e5911000 	ldr	r1, [r1]
4000b5bc:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b668 <_tx_byte_pool_create+0x248>
4000b5c0:	e1510002 	cmp	r1, r2
4000b5c4:	2a000004 	bcs	4000b5dc <_tx_byte_pool_create+0x1bc>
4000b5c8:	e3e01000 	mvn	r1, #0
4000b5cc:	e5801000 	str	r1, [r0]
4000b5d0:	e3a01000 	mov	r1, #0
4000b5d4:	e5801004 	str	r1, [r0, #4]
4000b5d8:	ea000003 	b	4000b5ec <_tx_byte_pool_create+0x1cc>
4000b5dc:	e59f1084 	ldr	r1, [pc, #132]	; 4000b668 <_tx_byte_pool_create+0x248>
4000b5e0:	e5801000 	str	r1, [r0]
4000b5e4:	e3a01000 	mov	r1, #0
4000b5e8:	e5801004 	str	r1, [r0, #4]
4000b5ec:	e3a01015 	mov	r1, #21
4000b5f0:	e5801008 	str	r1, [r0, #8]
4000b5f4:	e5804010 	str	r4, [r0, #16]
4000b5f8:	e5806014 	str	r6, [r0, #20]
4000b5fc:	e5807018 	str	r7, [r0, #24]
4000b600:	e28d1004 	add	r1, sp, #4
4000b604:	e580101c 	str	r1, [r0, #28]
4000b608:	e2800020 	add	r0, r0, #32
4000b60c:	e59f1058 	ldr	r1, [pc, #88]	; 4000b66c <_tx_byte_pool_create+0x24c>
4000b610:	e5911000 	ldr	r1, [r1]
4000b614:	e1500001 	cmp	r0, r1
4000b618:	3a000001 	bcc	4000b624 <_tx_byte_pool_create+0x204>
4000b61c:	e59f104c 	ldr	r1, [pc, #76]	; 4000b670 <_tx_byte_pool_create+0x250>
4000b620:	e5910000 	ldr	r0, [r1]
4000b624:	e59f102c 	ldr	r1, [pc, #44]	; 4000b658 <_tx_byte_pool_create+0x238>
4000b628:	e5810000 	str	r0, [r1]
4000b62c:	e59f1040 	ldr	r1, [pc, #64]	; 4000b674 <_tx_byte_pool_create+0x254>
4000b630:	e5911000 	ldr	r1, [r1]
4000b634:	e5810020 	str	r0, [r1, #32]
4000b638:	e121f008 	msr	CPSR_c, r8
4000b63c:	e3a00000 	mov	r0, #0
4000b640:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b644:	aaaaaaaa 	.word	0xaaaaaaaa
4000b648:	ffffeeee 	.word	0xffffeeee
4000b64c:	42595445 	.word	0x42595445
4000b650:	40030eec 	.word	0x40030eec
4000b654:	40030ef0 	.word	0x40030ef0
4000b658:	40030ebc 	.word	0x40030ebc
4000b65c:	40030ec0 	.word	0x40030ec0
4000b660:	40030e48 	.word	0x40030e48
4000b664:	40030e50 	.word	0x40030e50
4000b668:	f0f0f0f0 	.word	0xf0f0f0f0
4000b66c:	40030eb8 	.word	0x40030eb8
4000b670:	40030eb4 	.word	0x40030eb4
4000b674:	40030ea8 	.word	0x40030ea8

4000b678 <_tx_byte_pool_delete>:
4000b678:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b67c:	e1a04000 	mov	r4, r0
4000b680:	e10f5000 	mrs	r5, CPSR
4000b684:	e3856080 	orr	r6, r5, #128	; 0x80
4000b688:	e121f006 	msr	CPSR_c, r6
4000b68c:	e59f1204 	ldr	r1, [pc, #516]	; 4000b898 <_tx_byte_pool_delete+0x220>
4000b690:	e5910000 	ldr	r0, [r1]
4000b694:	e3500000 	cmp	r0, #0
4000b698:	0a000031 	beq	4000b764 <_tx_byte_pool_delete+0xec>
4000b69c:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b89c <_tx_byte_pool_delete+0x224>
4000b6a0:	e5911000 	ldr	r1, [r1]
4000b6a4:	e2811001 	add	r1, r1, #1
4000b6a8:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b89c <_tx_byte_pool_delete+0x224>
4000b6ac:	e5821000 	str	r1, [r2]
4000b6b0:	e580100c 	str	r1, [r0, #12]
4000b6b4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b8a0 <_tx_byte_pool_delete+0x228>
4000b6b8:	e5911000 	ldr	r1, [r1]
4000b6bc:	e3510000 	cmp	r1, #0
4000b6c0:	1a000006 	bne	4000b6e0 <_tx_byte_pool_delete+0x68>
4000b6c4:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b8a4 <_tx_byte_pool_delete+0x22c>
4000b6c8:	e5911000 	ldr	r1, [r1]
4000b6cc:	e5801000 	str	r1, [r0]
4000b6d0:	e5901000 	ldr	r1, [r0]
4000b6d4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b6d8:	e5801004 	str	r1, [r0, #4]
4000b6dc:	ea00000d 	b	4000b718 <_tx_byte_pool_delete+0xa0>
4000b6e0:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b8a0 <_tx_byte_pool_delete+0x228>
4000b6e4:	e5911000 	ldr	r1, [r1]
4000b6e8:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b8a8 <_tx_byte_pool_delete+0x230>
4000b6ec:	e1510002 	cmp	r1, r2
4000b6f0:	2a000004 	bcs	4000b708 <_tx_byte_pool_delete+0x90>
4000b6f4:	e3e01000 	mvn	r1, #0
4000b6f8:	e5801000 	str	r1, [r0]
4000b6fc:	e3a01000 	mov	r1, #0
4000b700:	e5801004 	str	r1, [r0, #4]
4000b704:	ea000003 	b	4000b718 <_tx_byte_pool_delete+0xa0>
4000b708:	e59f1198 	ldr	r1, [pc, #408]	; 4000b8a8 <_tx_byte_pool_delete+0x230>
4000b70c:	e5801000 	str	r1, [r0]
4000b710:	e3a01000 	mov	r1, #0
4000b714:	e5801004 	str	r1, [r0, #4]
4000b718:	e3a01016 	mov	r1, #22
4000b71c:	e5801008 	str	r1, [r0, #8]
4000b720:	e5804010 	str	r4, [r0, #16]
4000b724:	e580d014 	str	sp, [r0, #20]
4000b728:	e3a01000 	mov	r1, #0
4000b72c:	e5801018 	str	r1, [r0, #24]
4000b730:	e580101c 	str	r1, [r0, #28]
4000b734:	e2800020 	add	r0, r0, #32
4000b738:	e59f116c 	ldr	r1, [pc, #364]	; 4000b8ac <_tx_byte_pool_delete+0x234>
4000b73c:	e5911000 	ldr	r1, [r1]
4000b740:	e1500001 	cmp	r0, r1
4000b744:	3a000001 	bcc	4000b750 <_tx_byte_pool_delete+0xd8>
4000b748:	e59f1160 	ldr	r1, [pc, #352]	; 4000b8b0 <_tx_byte_pool_delete+0x238>
4000b74c:	e5910000 	ldr	r0, [r1]
4000b750:	e59f1140 	ldr	r1, [pc, #320]	; 4000b898 <_tx_byte_pool_delete+0x220>
4000b754:	e5810000 	str	r0, [r1]
4000b758:	e59f1154 	ldr	r1, [pc, #340]	; 4000b8b4 <_tx_byte_pool_delete+0x23c>
4000b75c:	e5911000 	ldr	r1, [r1]
4000b760:	e5810020 	str	r0, [r1, #32]
4000b764:	e1a00004 	mov	r0, r4
4000b768:	eb0012b6 	bl	40010248 <_tx_trace_object_unregister>
4000b76c:	e59f0144 	ldr	r0, [pc, #324]	; 4000b8b8 <_tx_byte_pool_delete+0x240>
4000b770:	e5900000 	ldr	r0, [r0]
4000b774:	e2400001 	sub	r0, r0, #1
4000b778:	e59f1138 	ldr	r1, [pc, #312]	; 4000b8b8 <_tx_byte_pool_delete+0x240>
4000b77c:	e5810000 	str	r0, [r1]
4000b780:	e3a00000 	mov	r0, #0
4000b784:	e5840000 	str	r0, [r4]
4000b788:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b78c:	e1500004 	cmp	r0, r4
4000b790:	1a000003 	bne	4000b7a4 <_tx_byte_pool_delete+0x12c>
4000b794:	e3a00000 	mov	r0, #0
4000b798:	e59f111c 	ldr	r1, [pc, #284]	; 4000b8bc <_tx_byte_pool_delete+0x244>
4000b79c:	e5810000 	str	r0, [r1]
4000b7a0:	ea00000c 	b	4000b7d8 <_tx_byte_pool_delete+0x160>
4000b7a4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b7a8:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b7ac:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b7b0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b7b4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b7b8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b7bc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b8bc <_tx_byte_pool_delete+0x244>
4000b7c0:	e5900000 	ldr	r0, [r0]
4000b7c4:	e1500004 	cmp	r0, r4
4000b7c8:	1a000002 	bne	4000b7d8 <_tx_byte_pool_delete+0x160>
4000b7cc:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b8bc <_tx_byte_pool_delete+0x244>
4000b7d0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b7d4:	e5810000 	str	r0, [r1]
4000b7d8:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b8c0 <_tx_byte_pool_delete+0x248>
4000b7dc:	e5900000 	ldr	r0, [r0]
4000b7e0:	e2800001 	add	r0, r0, #1
4000b7e4:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b8c0 <_tx_byte_pool_delete+0x248>
4000b7e8:	e5810000 	str	r0, [r1]
4000b7ec:	e121f005 	msr	CPSR_c, r5
4000b7f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b7f4:	e58d0000 	str	r0, [sp]
4000b7f8:	ea000017 	b	4000b85c <_tx_byte_pool_delete+0x1e4>
4000b7fc:	e10f5000 	mrs	r5, CPSR
4000b800:	e3856080 	orr	r6, r5, #128	; 0x80
4000b804:	e121f006 	msr	CPSR_c, r6
4000b808:	e3a00000 	mov	r0, #0
4000b80c:	e59d1000 	ldr	r1, [sp]
4000b810:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b814:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b8c0 <_tx_byte_pool_delete+0x248>
4000b818:	e5900000 	ldr	r0, [r0]
4000b81c:	e2800001 	add	r0, r0, #1
4000b820:	e59f1098 	ldr	r1, [pc, #152]	; 4000b8c0 <_tx_byte_pool_delete+0x248>
4000b824:	e5810000 	str	r0, [r1]
4000b828:	e121f005 	msr	CPSR_c, r5
4000b82c:	e3a00001 	mov	r0, #1
4000b830:	e59d1000 	ldr	r1, [sp]
4000b834:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b838:	e59d0000 	ldr	r0, [sp]
4000b83c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b840:	e58d0000 	str	r0, [sp]
4000b844:	e59d1000 	ldr	r1, [sp]
4000b848:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b84c:	eb000ebc 	bl	4000f344 <_tx_thread_system_resume>
4000b850:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b854:	e2400001 	sub	r0, r0, #1
4000b858:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b85c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b860:	e3500000 	cmp	r0, #0
4000b864:	1affffe4 	bne	4000b7fc <_tx_byte_pool_delete+0x184>
4000b868:	e10f5000 	mrs	r5, CPSR
4000b86c:	e3856080 	orr	r6, r5, #128	; 0x80
4000b870:	e121f006 	msr	CPSR_c, r6
4000b874:	e59f0044 	ldr	r0, [pc, #68]	; 4000b8c0 <_tx_byte_pool_delete+0x248>
4000b878:	e5900000 	ldr	r0, [r0]
4000b87c:	e2400001 	sub	r0, r0, #1
4000b880:	e59f1038 	ldr	r1, [pc, #56]	; 4000b8c0 <_tx_byte_pool_delete+0x248>
4000b884:	e5810000 	str	r0, [r1]
4000b888:	e121f005 	msr	CPSR_c, r5
4000b88c:	eb000e80 	bl	4000f294 <_tx_thread_system_preempt_check>
4000b890:	e3a00000 	mov	r0, #0
4000b894:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b898:	40030ebc 	.word	0x40030ebc
4000b89c:	40030ec0 	.word	0x40030ec0
4000b8a0:	40030e48 	.word	0x40030e48
4000b8a4:	40030e50 	.word	0x40030e50
4000b8a8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b8ac:	40030eb8 	.word	0x40030eb8
4000b8b0:	40030eb4 	.word	0x40030eb4
4000b8b4:	40030ea8 	.word	0x40030ea8
4000b8b8:	40030ef0 	.word	0x40030ef0
4000b8bc:	40030eec 	.word	0x40030eec
4000b8c0:	40030e6c 	.word	0x40030e6c

4000b8c4 <_tx_byte_pool_search>:
4000b8c4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b8c8:	e1a02000 	mov	r2, r0
4000b8cc:	e3a08000 	mov	r8, #0
4000b8d0:	e10f3000 	mrs	r3, CPSR
4000b8d4:	e383c080 	orr	ip, r3, #128	; 0x80
4000b8d8:	e121f00c 	msr	CPSR_c, ip
4000b8dc:	e5920008 	ldr	r0, [r2, #8]
4000b8e0:	e1500001 	cmp	r0, r1
4000b8e4:	8a000002 	bhi	4000b8f4 <_tx_byte_pool_search+0x30>
4000b8e8:	e121f003 	msr	CPSR_c, r3
4000b8ec:	e3a00000 	mov	r0, #0
4000b8f0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b8f4:	e5925014 	ldr	r5, [r2, #20]
4000b8f8:	e1a0e005 	mov	lr, r5
4000b8fc:	e592000c 	ldr	r0, [r2, #12]
4000b900:	e2807001 	add	r7, r0, #1
4000b904:	e3a06000 	mov	r6, #0
4000b908:	e1a00000 	nop			; (mov r0, r0)
4000b90c:	e59e0004 	ldr	r0, [lr, #4]
4000b910:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b914:	e29aa012 	adds	sl, sl, #18
4000b918:	1a000020 	bne	4000b9a0 <_tx_byte_pool_search+0xdc>
4000b91c:	e3580000 	cmp	r8, #0
4000b920:	1a000004 	bne	4000b938 <_tx_byte_pool_search+0x74>
4000b924:	e5920014 	ldr	r0, [r2, #20]
4000b928:	e1500005 	cmp	r0, r5
4000b92c:	1a000000 	bne	4000b934 <_tx_byte_pool_search+0x70>
4000b930:	e582e014 	str	lr, [r2, #20]
4000b934:	e3a08001 	mov	r8, #1
4000b938:	e59e4000 	ldr	r4, [lr]
4000b93c:	e044000e 	sub	r0, r4, lr
4000b940:	e2406008 	sub	r6, r0, #8
4000b944:	e1560001 	cmp	r6, r1
4000b948:	3a000000 	bcc	4000b950 <_tx_byte_pool_search+0x8c>
4000b94c:	ea000026 	b	4000b9ec <_tx_byte_pool_search+0x128>
4000b950:	e3a06000 	mov	r6, #0
4000b954:	e5940004 	ldr	r0, [r4, #4]
4000b958:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b95c:	e29aa012 	adds	sl, sl, #18
4000b960:	1a000009 	bne	4000b98c <_tx_byte_pool_search+0xc8>
4000b964:	e5940000 	ldr	r0, [r4]
4000b968:	e58e0000 	str	r0, [lr]
4000b96c:	e592000c 	ldr	r0, [r2, #12]
4000b970:	e2400001 	sub	r0, r0, #1
4000b974:	e582000c 	str	r0, [r2, #12]
4000b978:	e5920014 	ldr	r0, [r2, #20]
4000b97c:	e1500004 	cmp	r0, r4
4000b980:	1a000007 	bne	4000b9a4 <_tx_byte_pool_search+0xe0>
4000b984:	e582e014 	str	lr, [r2, #20]
4000b988:	ea000005 	b	4000b9a4 <_tx_byte_pool_search+0xe0>
4000b98c:	e594e000 	ldr	lr, [r4]
4000b990:	e3570000 	cmp	r7, #0
4000b994:	0a000002 	beq	4000b9a4 <_tx_byte_pool_search+0xe0>
4000b998:	e2477001 	sub	r7, r7, #1
4000b99c:	ea000000 	b	4000b9a4 <_tx_byte_pool_search+0xe0>
4000b9a0:	e59ee000 	ldr	lr, [lr]
4000b9a4:	e3570000 	cmp	r7, #0
4000b9a8:	0a000000 	beq	4000b9b0 <_tx_byte_pool_search+0xec>
4000b9ac:	e2477001 	sub	r7, r7, #1
4000b9b0:	e121f003 	msr	CPSR_c, r3
4000b9b4:	e10f3000 	mrs	r3, CPSR
4000b9b8:	e383c080 	orr	ip, r3, #128	; 0x80
4000b9bc:	e121f00c 	msr	CPSR_c, ip
4000b9c0:	e59f00ac 	ldr	r0, [pc, #172]	; 4000ba74 <_tx_byte_pool_search+0x1b0>
4000b9c4:	e5909000 	ldr	r9, [r0]
4000b9c8:	e5920020 	ldr	r0, [r2, #32]
4000b9cc:	e1500009 	cmp	r0, r9
4000b9d0:	0a000003 	beq	4000b9e4 <_tx_byte_pool_search+0x120>
4000b9d4:	e592e014 	ldr	lr, [r2, #20]
4000b9d8:	e592000c 	ldr	r0, [r2, #12]
4000b9dc:	e2807001 	add	r7, r0, #1
4000b9e0:	e5829020 	str	r9, [r2, #32]
4000b9e4:	e3570000 	cmp	r7, #0
4000b9e8:	1affffc7 	bne	4000b90c <_tx_byte_pool_search+0x48>
4000b9ec:	e1a00000 	nop			; (mov r0, r0)
4000b9f0:	e3560000 	cmp	r6, #0
4000b9f4:	0a00001a 	beq	4000ba64 <_tx_byte_pool_search+0x1a0>
4000b9f8:	e0460001 	sub	r0, r6, r1
4000b9fc:	e3500014 	cmp	r0, #20
4000ba00:	3a00000a 	bcc	4000ba30 <_tx_byte_pool_search+0x16c>
4000ba04:	e08e0001 	add	r0, lr, r1
4000ba08:	e2804008 	add	r4, r0, #8
4000ba0c:	e59e0000 	ldr	r0, [lr]
4000ba10:	e5840000 	str	r0, [r4]
4000ba14:	e59f005c 	ldr	r0, [pc, #92]	; 4000ba78 <_tx_byte_pool_search+0x1b4>
4000ba18:	e5840004 	str	r0, [r4, #4]
4000ba1c:	e592000c 	ldr	r0, [r2, #12]
4000ba20:	e2800001 	add	r0, r0, #1
4000ba24:	e582000c 	str	r0, [r2, #12]
4000ba28:	e58e4000 	str	r4, [lr]
4000ba2c:	e1a06001 	mov	r6, r1
4000ba30:	e58e2004 	str	r2, [lr, #4]
4000ba34:	e5920008 	ldr	r0, [r2, #8]
4000ba38:	e0400006 	sub	r0, r0, r6
4000ba3c:	e2400008 	sub	r0, r0, #8
4000ba40:	e5820008 	str	r0, [r2, #8]
4000ba44:	e5920014 	ldr	r0, [r2, #20]
4000ba48:	e150000e 	cmp	r0, lr
4000ba4c:	1a000001 	bne	4000ba58 <_tx_byte_pool_search+0x194>
4000ba50:	e59e0000 	ldr	r0, [lr]
4000ba54:	e5820014 	str	r0, [r2, #20]
4000ba58:	e121f003 	msr	CPSR_c, r3
4000ba5c:	e28ee008 	add	lr, lr, #8
4000ba60:	ea000001 	b	4000ba6c <_tx_byte_pool_search+0x1a8>
4000ba64:	e121f003 	msr	CPSR_c, r3
4000ba68:	e3a0e000 	mov	lr, #0
4000ba6c:	e1a0000e 	mov	r0, lr
4000ba70:	eaffff9e 	b	4000b8f0 <_tx_byte_pool_search+0x2c>
4000ba74:	40030e50 	.word	0x40030e50
4000ba78:	ffffeeee 	.word	0xffffeeee

4000ba7c <_tx_byte_release>:
4000ba7c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ba80:	e1a04000 	mov	r4, r0
4000ba84:	e1a09004 	mov	r9, r4
4000ba88:	e1b04009 	movs	r4, r9
4000ba8c:	0a00000f 	beq	4000bad0 <_tx_byte_release+0x54>
4000ba90:	e2499008 	sub	r9, r9, #8
4000ba94:	e5990004 	ldr	r0, [r9, #4]
4000ba98:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000ba9c:	e2911012 	adds	r1, r1, #18
4000baa0:	0a000008 	beq	4000bac8 <_tx_byte_release+0x4c>
4000baa4:	e5997004 	ldr	r7, [r9, #4]
4000baa8:	e3570000 	cmp	r7, #0
4000baac:	0a000003 	beq	4000bac0 <_tx_byte_release+0x44>
4000bab0:	e5970000 	ldr	r0, [r7]
4000bab4:	e59f125c 	ldr	r1, [pc, #604]	; 4000bd18 <_tx_byte_release+0x29c>
4000bab8:	e1500001 	cmp	r0, r1
4000babc:	0a000005 	beq	4000bad8 <_tx_byte_release+0x5c>
4000bac0:	e3a00003 	mov	r0, #3
4000bac4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000bac8:	e3a00003 	mov	r0, #3
4000bacc:	eafffffc 	b	4000bac4 <_tx_byte_release+0x48>
4000bad0:	e3a00003 	mov	r0, #3
4000bad4:	eafffffa 	b	4000bac4 <_tx_byte_release+0x48>
4000bad8:	e59f023c 	ldr	r0, [pc, #572]	; 4000bd1c <_tx_byte_release+0x2a0>
4000badc:	e5908000 	ldr	r8, [r0]
4000bae0:	e5878020 	str	r8, [r7, #32]
4000bae4:	e10f5000 	mrs	r5, CPSR
4000bae8:	e3856080 	orr	r6, r5, #128	; 0x80
4000baec:	e121f006 	msr	CPSR_c, r6
4000baf0:	e59f1228 	ldr	r1, [pc, #552]	; 4000bd20 <_tx_byte_release+0x2a4>
4000baf4:	e5910000 	ldr	r0, [r1]
4000baf8:	e3500000 	cmp	r0, #0
4000bafc:	0a000032 	beq	4000bbcc <_tx_byte_release+0x150>
4000bb00:	e59f121c 	ldr	r1, [pc, #540]	; 4000bd24 <_tx_byte_release+0x2a8>
4000bb04:	e5911000 	ldr	r1, [r1]
4000bb08:	e2811001 	add	r1, r1, #1
4000bb0c:	e59f2210 	ldr	r2, [pc, #528]	; 4000bd24 <_tx_byte_release+0x2a8>
4000bb10:	e5821000 	str	r1, [r2]
4000bb14:	e580100c 	str	r1, [r0, #12]
4000bb18:	e59f1208 	ldr	r1, [pc, #520]	; 4000bd28 <_tx_byte_release+0x2ac>
4000bb1c:	e5911000 	ldr	r1, [r1]
4000bb20:	e3510000 	cmp	r1, #0
4000bb24:	1a000006 	bne	4000bb44 <_tx_byte_release+0xc8>
4000bb28:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bd1c <_tx_byte_release+0x2a0>
4000bb2c:	e5911000 	ldr	r1, [r1]
4000bb30:	e5801000 	str	r1, [r0]
4000bb34:	e5901000 	ldr	r1, [r0]
4000bb38:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bb3c:	e5801004 	str	r1, [r0, #4]
4000bb40:	ea00000d 	b	4000bb7c <_tx_byte_release+0x100>
4000bb44:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bd28 <_tx_byte_release+0x2ac>
4000bb48:	e5911000 	ldr	r1, [r1]
4000bb4c:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bd2c <_tx_byte_release+0x2b0>
4000bb50:	e1510002 	cmp	r1, r2
4000bb54:	2a000004 	bcs	4000bb6c <_tx_byte_release+0xf0>
4000bb58:	e3e01000 	mvn	r1, #0
4000bb5c:	e5801000 	str	r1, [r0]
4000bb60:	e3a01000 	mov	r1, #0
4000bb64:	e5801004 	str	r1, [r0, #4]
4000bb68:	ea000003 	b	4000bb7c <_tx_byte_release+0x100>
4000bb6c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bd2c <_tx_byte_release+0x2b0>
4000bb70:	e5801000 	str	r1, [r0]
4000bb74:	e3a01000 	mov	r1, #0
4000bb78:	e5801004 	str	r1, [r0, #4]
4000bb7c:	e3a0101b 	mov	r1, #27
4000bb80:	e5801008 	str	r1, [r0, #8]
4000bb84:	e5807010 	str	r7, [r0, #16]
4000bb88:	e5804014 	str	r4, [r0, #20]
4000bb8c:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000bb90:	e5801018 	str	r1, [r0, #24]
4000bb94:	e5971008 	ldr	r1, [r7, #8]
4000bb98:	e580101c 	str	r1, [r0, #28]
4000bb9c:	e2800020 	add	r0, r0, #32
4000bba0:	e59f1188 	ldr	r1, [pc, #392]	; 4000bd30 <_tx_byte_release+0x2b4>
4000bba4:	e5911000 	ldr	r1, [r1]
4000bba8:	e1500001 	cmp	r0, r1
4000bbac:	3a000001 	bcc	4000bbb8 <_tx_byte_release+0x13c>
4000bbb0:	e59f117c 	ldr	r1, [pc, #380]	; 4000bd34 <_tx_byte_release+0x2b8>
4000bbb4:	e5910000 	ldr	r0, [r1]
4000bbb8:	e59f1160 	ldr	r1, [pc, #352]	; 4000bd20 <_tx_byte_release+0x2a4>
4000bbbc:	e5810000 	str	r0, [r1]
4000bbc0:	e59f1170 	ldr	r1, [pc, #368]	; 4000bd38 <_tx_byte_release+0x2bc>
4000bbc4:	e5911000 	ldr	r1, [r1]
4000bbc8:	e5810020 	str	r0, [r1, #32]
4000bbcc:	e59f0168 	ldr	r0, [pc, #360]	; 4000bd3c <_tx_byte_release+0x2c0>
4000bbd0:	e5890004 	str	r0, [r9, #4]
4000bbd4:	e5970008 	ldr	r0, [r7, #8]
4000bbd8:	e5991000 	ldr	r1, [r9]
4000bbdc:	e0411009 	sub	r1, r1, r9
4000bbe0:	e0800001 	add	r0, r0, r1
4000bbe4:	e5870008 	str	r0, [r7, #8]
4000bbe8:	e5970014 	ldr	r0, [r7, #20]
4000bbec:	e1500009 	cmp	r0, r9
4000bbf0:	9a000000 	bls	4000bbf8 <_tx_byte_release+0x17c>
4000bbf4:	e5879014 	str	r9, [r7, #20]
4000bbf8:	ea00003e 	b	4000bcf8 <_tx_byte_release+0x27c>
4000bbfc:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bc00:	e121f005 	msr	CPSR_c, r5
4000bc04:	e1a00007 	mov	r0, r7
4000bc08:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bc0c:	ebffff2c 	bl	4000b8c4 <_tx_byte_pool_search>
4000bc10:	e1a09000 	mov	r9, r0
4000bc14:	e10f5000 	mrs	r5, CPSR
4000bc18:	e3856080 	orr	r6, r5, #128	; 0x80
4000bc1c:	e121f006 	msr	CPSR_c, r6
4000bc20:	e3590000 	cmp	r9, #0
4000bc24:	1a000000 	bne	4000bc2c <_tx_byte_release+0x1b0>
4000bc28:	ea000035 	b	4000bd04 <_tx_byte_release+0x288>
4000bc2c:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bc30:	e150000a 	cmp	r0, sl
4000bc34:	0a00000c 	beq	4000bc6c <_tx_byte_release+0x1f0>
4000bc38:	e2499008 	sub	r9, r9, #8
4000bc3c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bd3c <_tx_byte_release+0x2c0>
4000bc40:	e5890004 	str	r0, [r9, #4]
4000bc44:	e5970008 	ldr	r0, [r7, #8]
4000bc48:	e5991000 	ldr	r1, [r9]
4000bc4c:	e0411009 	sub	r1, r1, r9
4000bc50:	e0800001 	add	r0, r0, r1
4000bc54:	e5870008 	str	r0, [r7, #8]
4000bc58:	e5970014 	ldr	r0, [r7, #20]
4000bc5c:	e1500009 	cmp	r0, r9
4000bc60:	9a000000 	bls	4000bc68 <_tx_byte_release+0x1ec>
4000bc64:	e5879014 	str	r9, [r7, #20]
4000bc68:	ea000022 	b	4000bcf8 <_tx_byte_release+0x27c>
4000bc6c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bc70:	e150000a 	cmp	r0, sl
4000bc74:	1a000002 	bne	4000bc84 <_tx_byte_release+0x208>
4000bc78:	e3a00000 	mov	r0, #0
4000bc7c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bc80:	ea000007 	b	4000bca4 <_tx_byte_release+0x228>
4000bc84:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bc88:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bc8c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bc90:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bc94:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bc98:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bc9c:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bca0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bca4:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bca8:	e2400001 	sub	r0, r0, #1
4000bcac:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bcb0:	e3a00000 	mov	r0, #0
4000bcb4:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bcb8:	e59f0080 	ldr	r0, [pc, #128]	; 4000bd40 <_tx_byte_release+0x2c4>
4000bcbc:	e5900000 	ldr	r0, [r0]
4000bcc0:	e2800001 	add	r0, r0, #1
4000bcc4:	e59f1074 	ldr	r1, [pc, #116]	; 4000bd40 <_tx_byte_release+0x2c4>
4000bcc8:	e5810000 	str	r0, [r1]
4000bccc:	e121f005 	msr	CPSR_c, r5
4000bcd0:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bcd4:	e5809000 	str	r9, [r0]
4000bcd8:	e3a00000 	mov	r0, #0
4000bcdc:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bce0:	e1a0000a 	mov	r0, sl
4000bce4:	eb000d96 	bl	4000f344 <_tx_thread_system_resume>
4000bce8:	e10f5000 	mrs	r5, CPSR
4000bcec:	e3856080 	orr	r6, r5, #128	; 0x80
4000bcf0:	e121f006 	msr	CPSR_c, r6
4000bcf4:	e1a00000 	nop			; (mov r0, r0)
4000bcf8:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bcfc:	e3500000 	cmp	r0, #0
4000bd00:	1affffbd 	bne	4000bbfc <_tx_byte_release+0x180>
4000bd04:	e1a00000 	nop			; (mov r0, r0)
4000bd08:	e121f005 	msr	CPSR_c, r5
4000bd0c:	eb000d60 	bl	4000f294 <_tx_thread_system_preempt_check>
4000bd10:	e3a00000 	mov	r0, #0
4000bd14:	eaffff6a 	b	4000bac4 <_tx_byte_release+0x48>
4000bd18:	42595445 	.word	0x42595445
4000bd1c:	40030e50 	.word	0x40030e50
4000bd20:	40030ebc 	.word	0x40030ebc
4000bd24:	40030ec0 	.word	0x40030ec0
4000bd28:	40030e48 	.word	0x40030e48
4000bd2c:	f0f0f0f0 	.word	0xf0f0f0f0
4000bd30:	40030eb8 	.word	0x40030eb8
4000bd34:	40030eb4 	.word	0x40030eb4
4000bd38:	40030ea8 	.word	0x40030ea8
4000bd3c:	ffffeeee 	.word	0xffffeeee
4000bd40:	40030e6c 	.word	0x40030e6c

4000bd44 <_tx_event_flags_create>:
4000bd44:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bd48:	e1a04000 	mov	r4, r0
4000bd4c:	e1a05001 	mov	r5, r1
4000bd50:	e3a01028 	mov	r1, #40	; 0x28
4000bd54:	e1a00004 	mov	r0, r4
4000bd58:	eb001e34 	bl	40013630 <__aeabi_memclr4>
4000bd5c:	e5845004 	str	r5, [r4, #4]
4000bd60:	e10f6000 	mrs	r6, CPSR
4000bd64:	e3867080 	orr	r7, r6, #128	; 0x80
4000bd68:	e121f007 	msr	CPSR_c, r7
4000bd6c:	e59f0170 	ldr	r0, [pc, #368]	; 4000bee4 <_tx_event_flags_create+0x1a0>
4000bd70:	e5840000 	str	r0, [r4]
4000bd74:	e59f016c 	ldr	r0, [pc, #364]	; 4000bee8 <_tx_event_flags_create+0x1a4>
4000bd78:	e5900000 	ldr	r0, [r0]
4000bd7c:	e3500000 	cmp	r0, #0
4000bd80:	0a00000e 	beq	4000bdc0 <_tx_event_flags_create+0x7c>
4000bd84:	e59f015c 	ldr	r0, [pc, #348]	; 4000bee8 <_tx_event_flags_create+0x1a4>
4000bd88:	e5900000 	ldr	r0, [r0]
4000bd8c:	e590001c 	ldr	r0, [r0, #28]
4000bd90:	e58d0004 	str	r0, [sp, #4]
4000bd94:	e59f014c 	ldr	r0, [pc, #332]	; 4000bee8 <_tx_event_flags_create+0x1a4>
4000bd98:	e5900000 	ldr	r0, [r0]
4000bd9c:	e580401c 	str	r4, [r0, #28]
4000bda0:	e59d0004 	ldr	r0, [sp, #4]
4000bda4:	e5804018 	str	r4, [r0, #24]
4000bda8:	e59d0004 	ldr	r0, [sp, #4]
4000bdac:	e584001c 	str	r0, [r4, #28]
4000bdb0:	e59f0130 	ldr	r0, [pc, #304]	; 4000bee8 <_tx_event_flags_create+0x1a4>
4000bdb4:	e5900000 	ldr	r0, [r0]
4000bdb8:	e5840018 	str	r0, [r4, #24]
4000bdbc:	ea000003 	b	4000bdd0 <_tx_event_flags_create+0x8c>
4000bdc0:	e59f0120 	ldr	r0, [pc, #288]	; 4000bee8 <_tx_event_flags_create+0x1a4>
4000bdc4:	e5804000 	str	r4, [r0]
4000bdc8:	e5844018 	str	r4, [r4, #24]
4000bdcc:	e584401c 	str	r4, [r4, #28]
4000bdd0:	e59f0114 	ldr	r0, [pc, #276]	; 4000beec <_tx_event_flags_create+0x1a8>
4000bdd4:	e5900000 	ldr	r0, [r0]
4000bdd8:	e2800001 	add	r0, r0, #1
4000bddc:	e59f1108 	ldr	r1, [pc, #264]	; 4000beec <_tx_event_flags_create+0x1a8>
4000bde0:	e5810000 	str	r0, [r1]
4000bde4:	e3a03000 	mov	r3, #0
4000bde8:	e1a02005 	mov	r2, r5
4000bdec:	e1a01004 	mov	r1, r4
4000bdf0:	e3a00006 	mov	r0, #6
4000bdf4:	e58d3000 	str	r3, [sp]
4000bdf8:	eb0010a7 	bl	4001009c <_tx_trace_object_register>
4000bdfc:	e59f10ec 	ldr	r1, [pc, #236]	; 4000bef0 <_tx_event_flags_create+0x1ac>
4000be00:	e5910000 	ldr	r0, [r1]
4000be04:	e3500000 	cmp	r0, #0
4000be08:	0a000032 	beq	4000bed8 <_tx_event_flags_create+0x194>
4000be0c:	e59f10e0 	ldr	r1, [pc, #224]	; 4000bef4 <_tx_event_flags_create+0x1b0>
4000be10:	e5911000 	ldr	r1, [r1]
4000be14:	e2811001 	add	r1, r1, #1
4000be18:	e59f20d4 	ldr	r2, [pc, #212]	; 4000bef4 <_tx_event_flags_create+0x1b0>
4000be1c:	e5821000 	str	r1, [r2]
4000be20:	e580100c 	str	r1, [r0, #12]
4000be24:	e59f10cc 	ldr	r1, [pc, #204]	; 4000bef8 <_tx_event_flags_create+0x1b4>
4000be28:	e5911000 	ldr	r1, [r1]
4000be2c:	e3510000 	cmp	r1, #0
4000be30:	1a000006 	bne	4000be50 <_tx_event_flags_create+0x10c>
4000be34:	e59f10c0 	ldr	r1, [pc, #192]	; 4000befc <_tx_event_flags_create+0x1b8>
4000be38:	e5911000 	ldr	r1, [r1]
4000be3c:	e5801000 	str	r1, [r0]
4000be40:	e5901000 	ldr	r1, [r0]
4000be44:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000be48:	e5801004 	str	r1, [r0, #4]
4000be4c:	ea00000d 	b	4000be88 <_tx_event_flags_create+0x144>
4000be50:	e59f10a0 	ldr	r1, [pc, #160]	; 4000bef8 <_tx_event_flags_create+0x1b4>
4000be54:	e5911000 	ldr	r1, [r1]
4000be58:	e59f20a0 	ldr	r2, [pc, #160]	; 4000bf00 <_tx_event_flags_create+0x1bc>
4000be5c:	e1510002 	cmp	r1, r2
4000be60:	2a000004 	bcs	4000be78 <_tx_event_flags_create+0x134>
4000be64:	e3e01000 	mvn	r1, #0
4000be68:	e5801000 	str	r1, [r0]
4000be6c:	e3a01000 	mov	r1, #0
4000be70:	e5801004 	str	r1, [r0, #4]
4000be74:	ea000003 	b	4000be88 <_tx_event_flags_create+0x144>
4000be78:	e59f1080 	ldr	r1, [pc, #128]	; 4000bf00 <_tx_event_flags_create+0x1bc>
4000be7c:	e5801000 	str	r1, [r0]
4000be80:	e3a01000 	mov	r1, #0
4000be84:	e5801004 	str	r1, [r0, #4]
4000be88:	e3a0101e 	mov	r1, #30
4000be8c:	e5801008 	str	r1, [r0, #8]
4000be90:	e5804010 	str	r4, [r0, #16]
4000be94:	e28d1004 	add	r1, sp, #4
4000be98:	e5801014 	str	r1, [r0, #20]
4000be9c:	e3a01000 	mov	r1, #0
4000bea0:	e5801018 	str	r1, [r0, #24]
4000bea4:	e580101c 	str	r1, [r0, #28]
4000bea8:	e2800020 	add	r0, r0, #32
4000beac:	e59f1050 	ldr	r1, [pc, #80]	; 4000bf04 <_tx_event_flags_create+0x1c0>
4000beb0:	e5911000 	ldr	r1, [r1]
4000beb4:	e1500001 	cmp	r0, r1
4000beb8:	3a000001 	bcc	4000bec4 <_tx_event_flags_create+0x180>
4000bebc:	e59f1044 	ldr	r1, [pc, #68]	; 4000bf08 <_tx_event_flags_create+0x1c4>
4000bec0:	e5910000 	ldr	r0, [r1]
4000bec4:	e59f1024 	ldr	r1, [pc, #36]	; 4000bef0 <_tx_event_flags_create+0x1ac>
4000bec8:	e5810000 	str	r0, [r1]
4000becc:	e59f1038 	ldr	r1, [pc, #56]	; 4000bf0c <_tx_event_flags_create+0x1c8>
4000bed0:	e5911000 	ldr	r1, [r1]
4000bed4:	e5810020 	str	r0, [r1, #32]
4000bed8:	e121f006 	msr	CPSR_c, r6
4000bedc:	e3a00000 	mov	r0, #0
4000bee0:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000bee4:	4456444e 	.word	0x4456444e
4000bee8:	40030ed4 	.word	0x40030ed4
4000beec:	40030ed8 	.word	0x40030ed8
4000bef0:	40030ebc 	.word	0x40030ebc
4000bef4:	40030ec0 	.word	0x40030ec0
4000bef8:	40030e48 	.word	0x40030e48
4000befc:	40030e50 	.word	0x40030e50
4000bf00:	f0f0f0f0 	.word	0xf0f0f0f0
4000bf04:	40030eb8 	.word	0x40030eb8
4000bf08:	40030eb4 	.word	0x40030eb4
4000bf0c:	40030ea8 	.word	0x40030ea8

4000bf10 <_tx_event_flags_delete>:
4000bf10:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000bf14:	e1a04000 	mov	r4, r0
4000bf18:	e10f5000 	mrs	r5, CPSR
4000bf1c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf20:	e121f006 	msr	CPSR_c, r6
4000bf24:	e59f1204 	ldr	r1, [pc, #516]	; 4000c130 <_tx_event_flags_delete+0x220>
4000bf28:	e5910000 	ldr	r0, [r1]
4000bf2c:	e3500000 	cmp	r0, #0
4000bf30:	0a000031 	beq	4000bffc <_tx_event_flags_delete+0xec>
4000bf34:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c134 <_tx_event_flags_delete+0x224>
4000bf38:	e5911000 	ldr	r1, [r1]
4000bf3c:	e2811001 	add	r1, r1, #1
4000bf40:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c134 <_tx_event_flags_delete+0x224>
4000bf44:	e5821000 	str	r1, [r2]
4000bf48:	e580100c 	str	r1, [r0, #12]
4000bf4c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c138 <_tx_event_flags_delete+0x228>
4000bf50:	e5911000 	ldr	r1, [r1]
4000bf54:	e3510000 	cmp	r1, #0
4000bf58:	1a000006 	bne	4000bf78 <_tx_event_flags_delete+0x68>
4000bf5c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c13c <_tx_event_flags_delete+0x22c>
4000bf60:	e5911000 	ldr	r1, [r1]
4000bf64:	e5801000 	str	r1, [r0]
4000bf68:	e5901000 	ldr	r1, [r0]
4000bf6c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bf70:	e5801004 	str	r1, [r0, #4]
4000bf74:	ea00000d 	b	4000bfb0 <_tx_event_flags_delete+0xa0>
4000bf78:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c138 <_tx_event_flags_delete+0x228>
4000bf7c:	e5911000 	ldr	r1, [r1]
4000bf80:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c140 <_tx_event_flags_delete+0x230>
4000bf84:	e1510002 	cmp	r1, r2
4000bf88:	2a000004 	bcs	4000bfa0 <_tx_event_flags_delete+0x90>
4000bf8c:	e3e01000 	mvn	r1, #0
4000bf90:	e5801000 	str	r1, [r0]
4000bf94:	e3a01000 	mov	r1, #0
4000bf98:	e5801004 	str	r1, [r0, #4]
4000bf9c:	ea000003 	b	4000bfb0 <_tx_event_flags_delete+0xa0>
4000bfa0:	e59f1198 	ldr	r1, [pc, #408]	; 4000c140 <_tx_event_flags_delete+0x230>
4000bfa4:	e5801000 	str	r1, [r0]
4000bfa8:	e3a01000 	mov	r1, #0
4000bfac:	e5801004 	str	r1, [r0, #4]
4000bfb0:	e3a0101f 	mov	r1, #31
4000bfb4:	e5801008 	str	r1, [r0, #8]
4000bfb8:	e5804010 	str	r4, [r0, #16]
4000bfbc:	e580d014 	str	sp, [r0, #20]
4000bfc0:	e3a01000 	mov	r1, #0
4000bfc4:	e5801018 	str	r1, [r0, #24]
4000bfc8:	e580101c 	str	r1, [r0, #28]
4000bfcc:	e2800020 	add	r0, r0, #32
4000bfd0:	e59f116c 	ldr	r1, [pc, #364]	; 4000c144 <_tx_event_flags_delete+0x234>
4000bfd4:	e5911000 	ldr	r1, [r1]
4000bfd8:	e1500001 	cmp	r0, r1
4000bfdc:	3a000001 	bcc	4000bfe8 <_tx_event_flags_delete+0xd8>
4000bfe0:	e59f1160 	ldr	r1, [pc, #352]	; 4000c148 <_tx_event_flags_delete+0x238>
4000bfe4:	e5910000 	ldr	r0, [r1]
4000bfe8:	e59f1140 	ldr	r1, [pc, #320]	; 4000c130 <_tx_event_flags_delete+0x220>
4000bfec:	e5810000 	str	r0, [r1]
4000bff0:	e59f1154 	ldr	r1, [pc, #340]	; 4000c14c <_tx_event_flags_delete+0x23c>
4000bff4:	e5911000 	ldr	r1, [r1]
4000bff8:	e5810020 	str	r0, [r1, #32]
4000bffc:	e1a00004 	mov	r0, r4
4000c000:	eb001090 	bl	40010248 <_tx_trace_object_unregister>
4000c004:	e59f0144 	ldr	r0, [pc, #324]	; 4000c150 <_tx_event_flags_delete+0x240>
4000c008:	e5900000 	ldr	r0, [r0]
4000c00c:	e2400001 	sub	r0, r0, #1
4000c010:	e59f1138 	ldr	r1, [pc, #312]	; 4000c150 <_tx_event_flags_delete+0x240>
4000c014:	e5810000 	str	r0, [r1]
4000c018:	e3a00000 	mov	r0, #0
4000c01c:	e5840000 	str	r0, [r4]
4000c020:	e5940018 	ldr	r0, [r4, #24]
4000c024:	e1500004 	cmp	r0, r4
4000c028:	1a000003 	bne	4000c03c <_tx_event_flags_delete+0x12c>
4000c02c:	e3a00000 	mov	r0, #0
4000c030:	e59f111c 	ldr	r1, [pc, #284]	; 4000c154 <_tx_event_flags_delete+0x244>
4000c034:	e5810000 	str	r0, [r1]
4000c038:	ea00000c 	b	4000c070 <_tx_event_flags_delete+0x160>
4000c03c:	e594001c 	ldr	r0, [r4, #28]
4000c040:	e5941018 	ldr	r1, [r4, #24]
4000c044:	e581001c 	str	r0, [r1, #28]
4000c048:	e5940018 	ldr	r0, [r4, #24]
4000c04c:	e594101c 	ldr	r1, [r4, #28]
4000c050:	e5810018 	str	r0, [r1, #24]
4000c054:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c154 <_tx_event_flags_delete+0x244>
4000c058:	e5900000 	ldr	r0, [r0]
4000c05c:	e1500004 	cmp	r0, r4
4000c060:	1a000002 	bne	4000c070 <_tx_event_flags_delete+0x160>
4000c064:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c154 <_tx_event_flags_delete+0x244>
4000c068:	e5940018 	ldr	r0, [r4, #24]
4000c06c:	e5810000 	str	r0, [r1]
4000c070:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c158 <_tx_event_flags_delete+0x248>
4000c074:	e5900000 	ldr	r0, [r0]
4000c078:	e2800001 	add	r0, r0, #1
4000c07c:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c158 <_tx_event_flags_delete+0x248>
4000c080:	e5810000 	str	r0, [r1]
4000c084:	e121f005 	msr	CPSR_c, r5
4000c088:	e5940010 	ldr	r0, [r4, #16]
4000c08c:	e58d0000 	str	r0, [sp]
4000c090:	ea000017 	b	4000c0f4 <_tx_event_flags_delete+0x1e4>
4000c094:	e10f5000 	mrs	r5, CPSR
4000c098:	e3856080 	orr	r6, r5, #128	; 0x80
4000c09c:	e121f006 	msr	CPSR_c, r6
4000c0a0:	e3a00000 	mov	r0, #0
4000c0a4:	e59d1000 	ldr	r1, [sp]
4000c0a8:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c0ac:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c158 <_tx_event_flags_delete+0x248>
4000c0b0:	e5900000 	ldr	r0, [r0]
4000c0b4:	e2800001 	add	r0, r0, #1
4000c0b8:	e59f1098 	ldr	r1, [pc, #152]	; 4000c158 <_tx_event_flags_delete+0x248>
4000c0bc:	e5810000 	str	r0, [r1]
4000c0c0:	e121f005 	msr	CPSR_c, r5
4000c0c4:	e3a00001 	mov	r0, #1
4000c0c8:	e59d1000 	ldr	r1, [sp]
4000c0cc:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c0d0:	e59d0000 	ldr	r0, [sp]
4000c0d4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c0d8:	e58d0000 	str	r0, [sp]
4000c0dc:	e59d1000 	ldr	r1, [sp]
4000c0e0:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c0e4:	eb000c96 	bl	4000f344 <_tx_thread_system_resume>
4000c0e8:	e5940014 	ldr	r0, [r4, #20]
4000c0ec:	e2400001 	sub	r0, r0, #1
4000c0f0:	e5840014 	str	r0, [r4, #20]
4000c0f4:	e5940014 	ldr	r0, [r4, #20]
4000c0f8:	e3500000 	cmp	r0, #0
4000c0fc:	1affffe4 	bne	4000c094 <_tx_event_flags_delete+0x184>
4000c100:	e10f5000 	mrs	r5, CPSR
4000c104:	e3856080 	orr	r6, r5, #128	; 0x80
4000c108:	e121f006 	msr	CPSR_c, r6
4000c10c:	e59f0044 	ldr	r0, [pc, #68]	; 4000c158 <_tx_event_flags_delete+0x248>
4000c110:	e5900000 	ldr	r0, [r0]
4000c114:	e2400001 	sub	r0, r0, #1
4000c118:	e59f1038 	ldr	r1, [pc, #56]	; 4000c158 <_tx_event_flags_delete+0x248>
4000c11c:	e5810000 	str	r0, [r1]
4000c120:	e121f005 	msr	CPSR_c, r5
4000c124:	eb000c5a 	bl	4000f294 <_tx_thread_system_preempt_check>
4000c128:	e3a00000 	mov	r0, #0
4000c12c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c130:	40030ebc 	.word	0x40030ebc
4000c134:	40030ec0 	.word	0x40030ec0
4000c138:	40030e48 	.word	0x40030e48
4000c13c:	40030e50 	.word	0x40030e50
4000c140:	f0f0f0f0 	.word	0xf0f0f0f0
4000c144:	40030eb8 	.word	0x40030eb8
4000c148:	40030eb4 	.word	0x40030eb4
4000c14c:	40030ea8 	.word	0x40030ea8
4000c150:	40030ed8 	.word	0x40030ed8
4000c154:	40030ed4 	.word	0x40030ed4
4000c158:	40030e6c 	.word	0x40030e6c

4000c15c <_tx_event_flags_get>:
4000c15c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c160:	e1a04000 	mov	r4, r0
4000c164:	e1a05001 	mov	r5, r1
4000c168:	e1a06002 	mov	r6, r2
4000c16c:	e1a07003 	mov	r7, r3
4000c170:	e10f8000 	mrs	r8, CPSR
4000c174:	e3880080 	orr	r0, r8, #128	; 0x80
4000c178:	e58d0004 	str	r0, [sp, #4]
4000c17c:	e59d0004 	ldr	r0, [sp, #4]
4000c180:	e121f000 	msr	CPSR_c, r0
4000c184:	e59f1278 	ldr	r1, [pc, #632]	; 4000c404 <_tx_event_flags_get+0x2a8>
4000c188:	e5910000 	ldr	r0, [r1]
4000c18c:	e3500000 	cmp	r0, #0
4000c190:	0a000031 	beq	4000c25c <_tx_event_flags_get+0x100>
4000c194:	e59f126c 	ldr	r1, [pc, #620]	; 4000c408 <_tx_event_flags_get+0x2ac>
4000c198:	e5911000 	ldr	r1, [r1]
4000c19c:	e2811001 	add	r1, r1, #1
4000c1a0:	e59f2260 	ldr	r2, [pc, #608]	; 4000c408 <_tx_event_flags_get+0x2ac>
4000c1a4:	e5821000 	str	r1, [r2]
4000c1a8:	e580100c 	str	r1, [r0, #12]
4000c1ac:	e59f1258 	ldr	r1, [pc, #600]	; 4000c40c <_tx_event_flags_get+0x2b0>
4000c1b0:	e5911000 	ldr	r1, [r1]
4000c1b4:	e3510000 	cmp	r1, #0
4000c1b8:	1a000006 	bne	4000c1d8 <_tx_event_flags_get+0x7c>
4000c1bc:	e59f124c 	ldr	r1, [pc, #588]	; 4000c410 <_tx_event_flags_get+0x2b4>
4000c1c0:	e5911000 	ldr	r1, [r1]
4000c1c4:	e5801000 	str	r1, [r0]
4000c1c8:	e5901000 	ldr	r1, [r0]
4000c1cc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c1d0:	e5801004 	str	r1, [r0, #4]
4000c1d4:	ea00000d 	b	4000c210 <_tx_event_flags_get+0xb4>
4000c1d8:	e59f122c 	ldr	r1, [pc, #556]	; 4000c40c <_tx_event_flags_get+0x2b0>
4000c1dc:	e5911000 	ldr	r1, [r1]
4000c1e0:	e59f222c 	ldr	r2, [pc, #556]	; 4000c414 <_tx_event_flags_get+0x2b8>
4000c1e4:	e1510002 	cmp	r1, r2
4000c1e8:	2a000004 	bcs	4000c200 <_tx_event_flags_get+0xa4>
4000c1ec:	e3e01000 	mvn	r1, #0
4000c1f0:	e5801000 	str	r1, [r0]
4000c1f4:	e3a01000 	mov	r1, #0
4000c1f8:	e5801004 	str	r1, [r0, #4]
4000c1fc:	ea000003 	b	4000c210 <_tx_event_flags_get+0xb4>
4000c200:	e59f120c 	ldr	r1, [pc, #524]	; 4000c414 <_tx_event_flags_get+0x2b8>
4000c204:	e5801000 	str	r1, [r0]
4000c208:	e3a01000 	mov	r1, #0
4000c20c:	e5801004 	str	r1, [r0, #4]
4000c210:	e3a01020 	mov	r1, #32
4000c214:	e5801008 	str	r1, [r0, #8]
4000c218:	e5804010 	str	r4, [r0, #16]
4000c21c:	e5805014 	str	r5, [r0, #20]
4000c220:	e5941008 	ldr	r1, [r4, #8]
4000c224:	e5801018 	str	r1, [r0, #24]
4000c228:	e580601c 	str	r6, [r0, #28]
4000c22c:	e2800020 	add	r0, r0, #32
4000c230:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c418 <_tx_event_flags_get+0x2bc>
4000c234:	e5911000 	ldr	r1, [r1]
4000c238:	e1500001 	cmp	r0, r1
4000c23c:	3a000001 	bcc	4000c248 <_tx_event_flags_get+0xec>
4000c240:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c41c <_tx_event_flags_get+0x2c0>
4000c244:	e5910000 	ldr	r0, [r1]
4000c248:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c404 <_tx_event_flags_get+0x2a8>
4000c24c:	e5810000 	str	r0, [r1]
4000c250:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c420 <_tx_event_flags_get+0x2c4>
4000c254:	e5911000 	ldr	r1, [r1]
4000c258:	e5810020 	str	r0, [r1, #32]
4000c25c:	e594a008 	ldr	sl, [r4, #8]
4000c260:	e594b020 	ldr	fp, [r4, #32]
4000c264:	e35b0000 	cmp	fp, #0
4000c268:	0a000000 	beq	4000c270 <_tx_event_flags_get+0x114>
4000c26c:	e1caa00b 	bic	sl, sl, fp
4000c270:	e3160002 	tst	r6, #2
4000c274:	0a000006 	beq	4000c294 <_tx_event_flags_get+0x138>
4000c278:	e00a0005 	and	r0, sl, r5
4000c27c:	e1500005 	cmp	r0, r5
4000c280:	1a000001 	bne	4000c28c <_tx_event_flags_get+0x130>
4000c284:	e3a09000 	mov	r9, #0
4000c288:	ea000006 	b	4000c2a8 <_tx_event_flags_get+0x14c>
4000c28c:	e3a09007 	mov	r9, #7
4000c290:	ea000004 	b	4000c2a8 <_tx_event_flags_get+0x14c>
4000c294:	e11a0005 	tst	sl, r5
4000c298:	0a000001 	beq	4000c2a4 <_tx_event_flags_get+0x148>
4000c29c:	e3a09000 	mov	r9, #0
4000c2a0:	ea000000 	b	4000c2a8 <_tx_event_flags_get+0x14c>
4000c2a4:	e3a09007 	mov	r9, #7
4000c2a8:	e3590000 	cmp	r9, #0
4000c2ac:	1a000010 	bne	4000c2f4 <_tx_event_flags_get+0x198>
4000c2b0:	e587a000 	str	sl, [r7]
4000c2b4:	e3160001 	tst	r6, #1
4000c2b8:	0a00004e 	beq	4000c3f8 <_tx_event_flags_get+0x29c>
4000c2bc:	e5940014 	ldr	r0, [r4, #20]
4000c2c0:	e3500000 	cmp	r0, #0
4000c2c4:	0a000006 	beq	4000c2e4 <_tx_event_flags_get+0x188>
4000c2c8:	e5940010 	ldr	r0, [r4, #16]
4000c2cc:	e3500000 	cmp	r0, #0
4000c2d0:	1a000003 	bne	4000c2e4 <_tx_event_flags_get+0x188>
4000c2d4:	e5940020 	ldr	r0, [r4, #32]
4000c2d8:	e1800005 	orr	r0, r0, r5
4000c2dc:	e5840020 	str	r0, [r4, #32]
4000c2e0:	ea000044 	b	4000c3f8 <_tx_event_flags_get+0x29c>
4000c2e4:	e5940008 	ldr	r0, [r4, #8]
4000c2e8:	e1c00005 	bic	r0, r0, r5
4000c2ec:	e5840008 	str	r0, [r4, #8]
4000c2f0:	ea000040 	b	4000c3f8 <_tx_event_flags_get+0x29c>
4000c2f4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c2f8:	e3500000 	cmp	r0, #0
4000c2fc:	0a00003c 	beq	4000c3f4 <_tx_event_flags_get+0x298>
4000c300:	e59f0108 	ldr	r0, [pc, #264]	; 4000c410 <_tx_event_flags_get+0x2b4>
4000c304:	e5900000 	ldr	r0, [r0]
4000c308:	e58d0000 	str	r0, [sp]
4000c30c:	e59f1110 	ldr	r1, [pc, #272]	; 4000c424 <_tx_event_flags_get+0x2c8>
4000c310:	e59d0000 	ldr	r0, [sp]
4000c314:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c318:	e59d0000 	ldr	r0, [sp]
4000c31c:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c320:	e59d0000 	ldr	r0, [sp]
4000c324:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c328:	e59d0000 	ldr	r0, [sp]
4000c32c:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c330:	e59d0000 	ldr	r0, [sp]
4000c334:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c338:	e5940010 	ldr	r0, [r4, #16]
4000c33c:	e3500000 	cmp	r0, #0
4000c340:	0a00000e 	beq	4000c380 <_tx_event_flags_get+0x224>
4000c344:	e5941010 	ldr	r1, [r4, #16]
4000c348:	e59d0000 	ldr	r0, [sp]
4000c34c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c350:	e5940010 	ldr	r0, [r4, #16]
4000c354:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c358:	e59d0000 	ldr	r0, [sp]
4000c35c:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c360:	e59d0000 	ldr	r0, [sp]
4000c364:	e5941010 	ldr	r1, [r4, #16]
4000c368:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c36c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c370:	e59d0000 	ldr	r0, [sp]
4000c374:	e5941010 	ldr	r1, [r4, #16]
4000c378:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c37c:	ea000005 	b	4000c398 <_tx_event_flags_get+0x23c>
4000c380:	e59d0000 	ldr	r0, [sp]
4000c384:	e5840010 	str	r0, [r4, #16]
4000c388:	e59d0000 	ldr	r0, [sp]
4000c38c:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c390:	e59d0000 	ldr	r0, [sp]
4000c394:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c398:	e5940014 	ldr	r0, [r4, #20]
4000c39c:	e2800001 	add	r0, r0, #1
4000c3a0:	e5840014 	str	r0, [r4, #20]
4000c3a4:	e3a00007 	mov	r0, #7
4000c3a8:	e59d1000 	ldr	r1, [sp]
4000c3ac:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c3b0:	e3a01001 	mov	r1, #1
4000c3b4:	e59d0000 	ldr	r0, [sp]
4000c3b8:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c3bc:	e59d0000 	ldr	r0, [sp]
4000c3c0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c3c4:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c3c8:	e59f0058 	ldr	r0, [pc, #88]	; 4000c428 <_tx_event_flags_get+0x2cc>
4000c3cc:	e5900000 	ldr	r0, [r0]
4000c3d0:	e2800001 	add	r0, r0, #1
4000c3d4:	e59f104c 	ldr	r1, [pc, #76]	; 4000c428 <_tx_event_flags_get+0x2cc>
4000c3d8:	e5810000 	str	r0, [r1]
4000c3dc:	e121f008 	msr	CPSR_c, r8
4000c3e0:	e59d0000 	ldr	r0, [sp]
4000c3e4:	ebfff22f 	bl	40008ca8 <_tx_thread_system_suspend>
4000c3e8:	e59d0000 	ldr	r0, [sp]
4000c3ec:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c3f0:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c3f4:	e3a09007 	mov	r9, #7
4000c3f8:	e121f008 	msr	CPSR_c, r8
4000c3fc:	e1a00009 	mov	r0, r9
4000c400:	eafffffa 	b	4000c3f0 <_tx_event_flags_get+0x294>
4000c404:	40030ebc 	.word	0x40030ebc
4000c408:	40030ec0 	.word	0x40030ec0
4000c40c:	40030e48 	.word	0x40030e48
4000c410:	40030e50 	.word	0x40030e50
4000c414:	f0f0f0f0 	.word	0xf0f0f0f0
4000c418:	40030eb8 	.word	0x40030eb8
4000c41c:	40030eb4 	.word	0x40030eb4
4000c420:	40030ea8 	.word	0x40030ea8
4000c424:	40010354 	.word	0x40010354
4000c428:	40030e6c 	.word	0x40030e6c

4000c42c <_tx_event_flags_set>:
4000c42c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c430:	e24dd01c 	sub	sp, sp, #28
4000c434:	e1a04000 	mov	r4, r0
4000c438:	e1a05001 	mov	r5, r1
4000c43c:	e1a06002 	mov	r6, r2
4000c440:	e10f7000 	mrs	r7, CPSR
4000c444:	e3870080 	orr	r0, r7, #128	; 0x80
4000c448:	e58d0018 	str	r0, [sp, #24]
4000c44c:	e59d0018 	ldr	r0, [sp, #24]
4000c450:	e121f000 	msr	CPSR_c, r0
4000c454:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c9f0 <_tx_event_flags_set+0x5c4>
4000c458:	e5910000 	ldr	r0, [r1]
4000c45c:	e3500000 	cmp	r0, #0
4000c460:	0a000031 	beq	4000c52c <_tx_event_flags_set+0x100>
4000c464:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c9f4 <_tx_event_flags_set+0x5c8>
4000c468:	e5911000 	ldr	r1, [r1]
4000c46c:	e2811001 	add	r1, r1, #1
4000c470:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c9f4 <_tx_event_flags_set+0x5c8>
4000c474:	e5821000 	str	r1, [r2]
4000c478:	e580100c 	str	r1, [r0, #12]
4000c47c:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c9f8 <_tx_event_flags_set+0x5cc>
4000c480:	e5911000 	ldr	r1, [r1]
4000c484:	e3510000 	cmp	r1, #0
4000c488:	1a000006 	bne	4000c4a8 <_tx_event_flags_set+0x7c>
4000c48c:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c9fc <_tx_event_flags_set+0x5d0>
4000c490:	e5911000 	ldr	r1, [r1]
4000c494:	e5801000 	str	r1, [r0]
4000c498:	e5901000 	ldr	r1, [r0]
4000c49c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c4a0:	e5801004 	str	r1, [r0, #4]
4000c4a4:	ea00000d 	b	4000c4e0 <_tx_event_flags_set+0xb4>
4000c4a8:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c9f8 <_tx_event_flags_set+0x5cc>
4000c4ac:	e5911000 	ldr	r1, [r1]
4000c4b0:	e59f2548 	ldr	r2, [pc, #1352]	; 4000ca00 <_tx_event_flags_set+0x5d4>
4000c4b4:	e1510002 	cmp	r1, r2
4000c4b8:	2a000004 	bcs	4000c4d0 <_tx_event_flags_set+0xa4>
4000c4bc:	e3e01000 	mvn	r1, #0
4000c4c0:	e5801000 	str	r1, [r0]
4000c4c4:	e3a01000 	mov	r1, #0
4000c4c8:	e5801004 	str	r1, [r0, #4]
4000c4cc:	ea000003 	b	4000c4e0 <_tx_event_flags_set+0xb4>
4000c4d0:	e59f1528 	ldr	r1, [pc, #1320]	; 4000ca00 <_tx_event_flags_set+0x5d4>
4000c4d4:	e5801000 	str	r1, [r0]
4000c4d8:	e3a01000 	mov	r1, #0
4000c4dc:	e5801004 	str	r1, [r0, #4]
4000c4e0:	e3a01024 	mov	r1, #36	; 0x24
4000c4e4:	e5801008 	str	r1, [r0, #8]
4000c4e8:	e5804010 	str	r4, [r0, #16]
4000c4ec:	e5805014 	str	r5, [r0, #20]
4000c4f0:	e5806018 	str	r6, [r0, #24]
4000c4f4:	e5941014 	ldr	r1, [r4, #20]
4000c4f8:	e580101c 	str	r1, [r0, #28]
4000c4fc:	e2800020 	add	r0, r0, #32
4000c500:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000ca04 <_tx_event_flags_set+0x5d8>
4000c504:	e5911000 	ldr	r1, [r1]
4000c508:	e1500001 	cmp	r0, r1
4000c50c:	3a000001 	bcc	4000c518 <_tx_event_flags_set+0xec>
4000c510:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000ca08 <_tx_event_flags_set+0x5dc>
4000c514:	e5910000 	ldr	r0, [r1]
4000c518:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c9f0 <_tx_event_flags_set+0x5c4>
4000c51c:	e5810000 	str	r0, [r1]
4000c520:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000ca0c <_tx_event_flags_set+0x5e0>
4000c524:	e5911000 	ldr	r1, [r1]
4000c528:	e5810020 	str	r0, [r1, #32]
4000c52c:	e3160002 	tst	r6, #2
4000c530:	0a000011 	beq	4000c57c <_tx_event_flags_set+0x150>
4000c534:	e5940014 	ldr	r0, [r4, #20]
4000c538:	e3500000 	cmp	r0, #0
4000c53c:	0a000007 	beq	4000c560 <_tx_event_flags_set+0x134>
4000c540:	e5940010 	ldr	r0, [r4, #16]
4000c544:	e3500000 	cmp	r0, #0
4000c548:	1a000004 	bne	4000c560 <_tx_event_flags_set+0x134>
4000c54c:	e1e01005 	mvn	r1, r5
4000c550:	e5940020 	ldr	r0, [r4, #32]
4000c554:	e1800001 	orr	r0, r0, r1
4000c558:	e5840020 	str	r0, [r4, #32]
4000c55c:	ea000002 	b	4000c56c <_tx_event_flags_set+0x140>
4000c560:	e5940008 	ldr	r0, [r4, #8]
4000c564:	e0000005 	and	r0, r0, r5
4000c568:	e5840008 	str	r0, [r4, #8]
4000c56c:	e121f007 	msr	CPSR_c, r7
4000c570:	e3a00000 	mov	r0, #0
4000c574:	e28dd01c 	add	sp, sp, #28
4000c578:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c57c:	e5940008 	ldr	r0, [r4, #8]
4000c580:	e1800005 	orr	r0, r0, r5
4000c584:	e5840008 	str	r0, [r4, #8]
4000c588:	e5940020 	ldr	r0, [r4, #32]
4000c58c:	e3500000 	cmp	r0, #0
4000c590:	0a000002 	beq	4000c5a0 <_tx_event_flags_set+0x174>
4000c594:	e5940020 	ldr	r0, [r4, #32]
4000c598:	e1c00005 	bic	r0, r0, r5
4000c59c:	e5840020 	str	r0, [r4, #32]
4000c5a0:	e5940010 	ldr	r0, [r4, #16]
4000c5a4:	e3500000 	cmp	r0, #0
4000c5a8:	0a000102 	beq	4000c9b8 <_tx_event_flags_set+0x58c>
4000c5ac:	e5940014 	ldr	r0, [r4, #20]
4000c5b0:	e3500001 	cmp	r0, #1
4000c5b4:	1a000048 	bne	4000c6dc <_tx_event_flags_set+0x2b0>
4000c5b8:	e5940010 	ldr	r0, [r4, #16]
4000c5bc:	e58d0014 	str	r0, [sp, #20]
4000c5c0:	e59d0014 	ldr	r0, [sp, #20]
4000c5c4:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c5c8:	e3100002 	tst	r0, #2
4000c5cc:	0a00000b 	beq	4000c600 <_tx_event_flags_set+0x1d4>
4000c5d0:	e5940008 	ldr	r0, [r4, #8]
4000c5d4:	e59d1014 	ldr	r1, [sp, #20]
4000c5d8:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c5dc:	e0000001 	and	r0, r0, r1
4000c5e0:	e59d1014 	ldr	r1, [sp, #20]
4000c5e4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c5e8:	e1500001 	cmp	r0, r1
4000c5ec:	1a000001 	bne	4000c5f8 <_tx_event_flags_set+0x1cc>
4000c5f0:	e3a08000 	mov	r8, #0
4000c5f4:	ea000009 	b	4000c620 <_tx_event_flags_set+0x1f4>
4000c5f8:	e3a08007 	mov	r8, #7
4000c5fc:	ea000007 	b	4000c620 <_tx_event_flags_set+0x1f4>
4000c600:	e5940008 	ldr	r0, [r4, #8]
4000c604:	e59d1014 	ldr	r1, [sp, #20]
4000c608:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c60c:	e1100001 	tst	r0, r1
4000c610:	0a000001 	beq	4000c61c <_tx_event_flags_set+0x1f0>
4000c614:	e3a08000 	mov	r8, #0
4000c618:	ea000000 	b	4000c620 <_tx_event_flags_set+0x1f4>
4000c61c:	e3a08007 	mov	r8, #7
4000c620:	e3580000 	cmp	r8, #0
4000c624:	1a000024 	bne	4000c6bc <_tx_event_flags_set+0x290>
4000c628:	e5941008 	ldr	r1, [r4, #8]
4000c62c:	e59d0014 	ldr	r0, [sp, #20]
4000c630:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c634:	e5801000 	str	r1, [r0]
4000c638:	e59d0014 	ldr	r0, [sp, #20]
4000c63c:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c640:	e3100001 	tst	r0, #1
4000c644:	0a000004 	beq	4000c65c <_tx_event_flags_set+0x230>
4000c648:	e5940008 	ldr	r0, [r4, #8]
4000c64c:	e59d1014 	ldr	r1, [sp, #20]
4000c650:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c654:	e1c00001 	bic	r0, r0, r1
4000c658:	e5840008 	str	r0, [r4, #8]
4000c65c:	e3a00000 	mov	r0, #0
4000c660:	e5840010 	str	r0, [r4, #16]
4000c664:	e5840014 	str	r0, [r4, #20]
4000c668:	e3a01000 	mov	r1, #0
4000c66c:	e59d0014 	ldr	r0, [sp, #20]
4000c670:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c674:	e59f0394 	ldr	r0, [pc, #916]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c678:	e5900000 	ldr	r0, [r0]
4000c67c:	e2800001 	add	r0, r0, #1
4000c680:	e59f1388 	ldr	r1, [pc, #904]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c684:	e5810000 	str	r0, [r1]
4000c688:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c68c:	e121f007 	msr	CPSR_c, r7
4000c690:	e35b0000 	cmp	fp, #0
4000c694:	0a000001 	beq	4000c6a0 <_tx_event_flags_set+0x274>
4000c698:	e1a00004 	mov	r0, r4
4000c69c:	e12fff3b 	blx	fp
4000c6a0:	e3a00000 	mov	r0, #0
4000c6a4:	e59d1014 	ldr	r1, [sp, #20]
4000c6a8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c6ac:	e59d0014 	ldr	r0, [sp, #20]
4000c6b0:	eb000b23 	bl	4000f344 <_tx_thread_system_resume>
4000c6b4:	e3a00000 	mov	r0, #0
4000c6b8:	eaffffad 	b	4000c574 <_tx_event_flags_set+0x148>
4000c6bc:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c6c0:	e121f007 	msr	CPSR_c, r7
4000c6c4:	e35b0000 	cmp	fp, #0
4000c6c8:	0a000001 	beq	4000c6d4 <_tx_event_flags_set+0x2a8>
4000c6cc:	e1a00004 	mov	r0, r4
4000c6d0:	e12fff3b 	blx	fp
4000c6d4:	e3a00000 	mov	r0, #0
4000c6d8:	eaffffa5 	b	4000c574 <_tx_event_flags_set+0x148>
4000c6dc:	e5940010 	ldr	r0, [r4, #16]
4000c6e0:	e58d0004 	str	r0, [sp, #4]
4000c6e4:	e59d0004 	ldr	r0, [sp, #4]
4000c6e8:	e58d0014 	str	r0, [sp, #20]
4000c6ec:	e3a00000 	mov	r0, #0
4000c6f0:	e5840010 	str	r0, [r4, #16]
4000c6f4:	e58d000c 	str	r0, [sp, #12]
4000c6f8:	e58d0008 	str	r0, [sp, #8]
4000c6fc:	e5940014 	ldr	r0, [r4, #20]
4000c700:	e58d0000 	str	r0, [sp]
4000c704:	e5949008 	ldr	r9, [r4, #8]
4000c708:	e59f0300 	ldr	r0, [pc, #768]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c70c:	e5900000 	ldr	r0, [r0]
4000c710:	e2800001 	add	r0, r0, #1
4000c714:	e59f12f4 	ldr	r1, [pc, #756]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c718:	e5810000 	str	r0, [r1]
4000c71c:	e1a00000 	nop			; (mov r0, r0)
4000c720:	e121f007 	msr	CPSR_c, r7
4000c724:	e10f7000 	mrs	r7, CPSR
4000c728:	e3870080 	orr	r0, r7, #128	; 0x80
4000c72c:	e58d0018 	str	r0, [sp, #24]
4000c730:	e59d0018 	ldr	r0, [sp, #24]
4000c734:	e121f000 	msr	CPSR_c, r0
4000c738:	e594000c 	ldr	r0, [r4, #12]
4000c73c:	e3500000 	cmp	r0, #0
4000c740:	0a00000b 	beq	4000c774 <_tx_event_flags_set+0x348>
4000c744:	e3a00000 	mov	r0, #0
4000c748:	e584000c 	str	r0, [r4, #12]
4000c74c:	e59d0004 	ldr	r0, [sp, #4]
4000c750:	e58d0014 	str	r0, [sp, #20]
4000c754:	e5940014 	ldr	r0, [r4, #20]
4000c758:	e58d0000 	str	r0, [sp]
4000c75c:	e5940008 	ldr	r0, [r4, #8]
4000c760:	e1899000 	orr	r9, r9, r0
4000c764:	e59d0014 	ldr	r0, [sp, #20]
4000c768:	e3500000 	cmp	r0, #0
4000c76c:	1a000000 	bne	4000c774 <_tx_event_flags_set+0x348>
4000c770:	ea00005d 	b	4000c8ec <_tx_event_flags_set+0x4c0>
4000c774:	e59d0014 	ldr	r0, [sp, #20]
4000c778:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c77c:	e31a0002 	tst	sl, #2
4000c780:	0a00000a 	beq	4000c7b0 <_tx_event_flags_set+0x384>
4000c784:	e59d0014 	ldr	r0, [sp, #20]
4000c788:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c78c:	e0000009 	and	r0, r0, r9
4000c790:	e59d1014 	ldr	r1, [sp, #20]
4000c794:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c798:	e1500001 	cmp	r0, r1
4000c79c:	1a000001 	bne	4000c7a8 <_tx_event_flags_set+0x37c>
4000c7a0:	e3a08000 	mov	r8, #0
4000c7a4:	ea000008 	b	4000c7cc <_tx_event_flags_set+0x3a0>
4000c7a8:	e3a08007 	mov	r8, #7
4000c7ac:	ea000006 	b	4000c7cc <_tx_event_flags_set+0x3a0>
4000c7b0:	e59d0014 	ldr	r0, [sp, #20]
4000c7b4:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c7b8:	e1100009 	tst	r0, r9
4000c7bc:	0a000001 	beq	4000c7c8 <_tx_event_flags_set+0x39c>
4000c7c0:	e3a08000 	mov	r8, #0
4000c7c4:	ea000000 	b	4000c7cc <_tx_event_flags_set+0x3a0>
4000c7c8:	e3a08007 	mov	r8, #7
4000c7cc:	e59d0014 	ldr	r0, [sp, #20]
4000c7d0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c7d4:	e58d0010 	str	r0, [sp, #16]
4000c7d8:	e3580000 	cmp	r8, #0
4000c7dc:	1a00003c 	bne	4000c8d4 <_tx_event_flags_set+0x4a8>
4000c7e0:	e59d0014 	ldr	r0, [sp, #20]
4000c7e4:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c7e8:	e5809000 	str	r9, [r0]
4000c7ec:	e31a0001 	tst	sl, #1
4000c7f0:	0a000004 	beq	4000c808 <_tx_event_flags_set+0x3dc>
4000c7f4:	e5940008 	ldr	r0, [r4, #8]
4000c7f8:	e59d1014 	ldr	r1, [sp, #20]
4000c7fc:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c800:	e1c00001 	bic	r0, r0, r1
4000c804:	e5840008 	str	r0, [r4, #8]
4000c808:	e59d0014 	ldr	r0, [sp, #20]
4000c80c:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c810:	e1510000 	cmp	r1, r0
4000c814:	1a000002 	bne	4000c824 <_tx_event_flags_set+0x3f8>
4000c818:	e3a00000 	mov	r0, #0
4000c81c:	e58d0004 	str	r0, [sp, #4]
4000c820:	ea000010 	b	4000c868 <_tx_event_flags_set+0x43c>
4000c824:	e59d0004 	ldr	r0, [sp, #4]
4000c828:	e59d1014 	ldr	r1, [sp, #20]
4000c82c:	e1500001 	cmp	r0, r1
4000c830:	1a000002 	bne	4000c840 <_tx_event_flags_set+0x414>
4000c834:	e59d0014 	ldr	r0, [sp, #20]
4000c838:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c83c:	e58d0004 	str	r0, [sp, #4]
4000c840:	e59d0014 	ldr	r0, [sp, #20]
4000c844:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c848:	e59d1014 	ldr	r1, [sp, #20]
4000c84c:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c850:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c854:	e59d0014 	ldr	r0, [sp, #20]
4000c858:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c85c:	e59d1014 	ldr	r1, [sp, #20]
4000c860:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c864:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c868:	e5940014 	ldr	r0, [r4, #20]
4000c86c:	e2400001 	sub	r0, r0, #1
4000c870:	e5840014 	str	r0, [r4, #20]
4000c874:	e3a00000 	mov	r0, #0
4000c878:	e59d1014 	ldr	r1, [sp, #20]
4000c87c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c880:	e59d1014 	ldr	r1, [sp, #20]
4000c884:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c888:	e59d000c 	ldr	r0, [sp, #12]
4000c88c:	e3500000 	cmp	r0, #0
4000c890:	1a000007 	bne	4000c8b4 <_tx_event_flags_set+0x488>
4000c894:	e59d0014 	ldr	r0, [sp, #20]
4000c898:	e58d000c 	str	r0, [sp, #12]
4000c89c:	e59d0014 	ldr	r0, [sp, #20]
4000c8a0:	e58d0008 	str	r0, [sp, #8]
4000c8a4:	e3a01000 	mov	r1, #0
4000c8a8:	e59d0014 	ldr	r0, [sp, #20]
4000c8ac:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c8b0:	ea000007 	b	4000c8d4 <_tx_event_flags_set+0x4a8>
4000c8b4:	e59d0014 	ldr	r0, [sp, #20]
4000c8b8:	e59d1008 	ldr	r1, [sp, #8]
4000c8bc:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c8c0:	e3a00000 	mov	r0, #0
4000c8c4:	e59d1014 	ldr	r1, [sp, #20]
4000c8c8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c8cc:	e59d0014 	ldr	r0, [sp, #20]
4000c8d0:	e58d0008 	str	r0, [sp, #8]
4000c8d4:	e59d0010 	ldr	r0, [sp, #16]
4000c8d8:	e58d0014 	str	r0, [sp, #20]
4000c8dc:	e59d0000 	ldr	r0, [sp]
4000c8e0:	e2500001 	subs	r0, r0, #1
4000c8e4:	e58d0000 	str	r0, [sp]
4000c8e8:	1affff8c 	bne	4000c720 <_tx_event_flags_set+0x2f4>
4000c8ec:	e1a00000 	nop			; (mov r0, r0)
4000c8f0:	e59d0004 	ldr	r0, [sp, #4]
4000c8f4:	e5840010 	str	r0, [r4, #16]
4000c8f8:	e5940020 	ldr	r0, [r4, #32]
4000c8fc:	e3500000 	cmp	r0, #0
4000c900:	0a000005 	beq	4000c91c <_tx_event_flags_set+0x4f0>
4000c904:	e5940008 	ldr	r0, [r4, #8]
4000c908:	e5941020 	ldr	r1, [r4, #32]
4000c90c:	e1c00001 	bic	r0, r0, r1
4000c910:	e5840008 	str	r0, [r4, #8]
4000c914:	e3a00000 	mov	r0, #0
4000c918:	e5840020 	str	r0, [r4, #32]
4000c91c:	e121f007 	msr	CPSR_c, r7
4000c920:	e59d000c 	ldr	r0, [sp, #12]
4000c924:	e58d0014 	str	r0, [sp, #20]
4000c928:	ea000011 	b	4000c974 <_tx_event_flags_set+0x548>
4000c92c:	e59d0014 	ldr	r0, [sp, #20]
4000c930:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c934:	e58d0010 	str	r0, [sp, #16]
4000c938:	e10f7000 	mrs	r7, CPSR
4000c93c:	e3870080 	orr	r0, r7, #128	; 0x80
4000c940:	e58d0018 	str	r0, [sp, #24]
4000c944:	e59d0018 	ldr	r0, [sp, #24]
4000c948:	e121f000 	msr	CPSR_c, r0
4000c94c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c950:	e5900000 	ldr	r0, [r0]
4000c954:	e2800001 	add	r0, r0, #1
4000c958:	e59f10b0 	ldr	r1, [pc, #176]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c95c:	e5810000 	str	r0, [r1]
4000c960:	e121f007 	msr	CPSR_c, r7
4000c964:	e59d0014 	ldr	r0, [sp, #20]
4000c968:	eb000a75 	bl	4000f344 <_tx_thread_system_resume>
4000c96c:	e59d0010 	ldr	r0, [sp, #16]
4000c970:	e58d0014 	str	r0, [sp, #20]
4000c974:	e59d0014 	ldr	r0, [sp, #20]
4000c978:	e3500000 	cmp	r0, #0
4000c97c:	1affffea 	bne	4000c92c <_tx_event_flags_set+0x500>
4000c980:	e10f7000 	mrs	r7, CPSR
4000c984:	e3870080 	orr	r0, r7, #128	; 0x80
4000c988:	e58d0018 	str	r0, [sp, #24]
4000c98c:	e59d0018 	ldr	r0, [sp, #24]
4000c990:	e121f000 	msr	CPSR_c, r0
4000c994:	e59f0074 	ldr	r0, [pc, #116]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c998:	e5900000 	ldr	r0, [r0]
4000c99c:	e2400001 	sub	r0, r0, #1
4000c9a0:	e59f1068 	ldr	r1, [pc, #104]	; 4000ca10 <_tx_event_flags_set+0x5e4>
4000c9a4:	e5810000 	str	r0, [r1]
4000c9a8:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c9ac:	e121f007 	msr	CPSR_c, r7
4000c9b0:	eb000a37 	bl	4000f294 <_tx_thread_system_preempt_check>
4000c9b4:	ea000007 	b	4000c9d8 <_tx_event_flags_set+0x5ac>
4000c9b8:	e5940014 	ldr	r0, [r4, #20]
4000c9bc:	e3500000 	cmp	r0, #0
4000c9c0:	0a000002 	beq	4000c9d0 <_tx_event_flags_set+0x5a4>
4000c9c4:	e594000c 	ldr	r0, [r4, #12]
4000c9c8:	e2800001 	add	r0, r0, #1
4000c9cc:	e584000c 	str	r0, [r4, #12]
4000c9d0:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c9d4:	e121f007 	msr	CPSR_c, r7
4000c9d8:	e35b0000 	cmp	fp, #0
4000c9dc:	0a000001 	beq	4000c9e8 <_tx_event_flags_set+0x5bc>
4000c9e0:	e1a00004 	mov	r0, r4
4000c9e4:	e12fff3b 	blx	fp
4000c9e8:	e3a00000 	mov	r0, #0
4000c9ec:	eafffee0 	b	4000c574 <_tx_event_flags_set+0x148>
4000c9f0:	40030ebc 	.word	0x40030ebc
4000c9f4:	40030ec0 	.word	0x40030ec0
4000c9f8:	40030e48 	.word	0x40030e48
4000c9fc:	40030e50 	.word	0x40030e50
4000ca00:	f0f0f0f0 	.word	0xf0f0f0f0
4000ca04:	40030eb8 	.word	0x40030eb8
4000ca08:	40030eb4 	.word	0x40030eb4
4000ca0c:	40030ea8 	.word	0x40030ea8
4000ca10:	40030e6c 	.word	0x40030e6c

4000ca14 <_tx_initialize_high_level>:
4000ca14:	e92d4010 	push	{r4, lr}
4000ca18:	ebfff38a 	bl	40009848 <_tx_trace_initialize>
4000ca1c:	ebffeff0 	bl	400089e4 <_tx_thread_initialize>
4000ca20:	ebfff26b 	bl	400093d4 <_tx_timer_initialize>
4000ca24:	e3a00000 	mov	r0, #0
4000ca28:	e59f105c 	ldr	r1, [pc, #92]	; 4000ca8c <_tx_initialize_high_level+0x78>
4000ca2c:	e5810000 	str	r0, [r1]
4000ca30:	e59f1058 	ldr	r1, [pc, #88]	; 4000ca90 <_tx_initialize_high_level+0x7c>
4000ca34:	e5810000 	str	r0, [r1]
4000ca38:	e59f1054 	ldr	r1, [pc, #84]	; 4000ca94 <_tx_initialize_high_level+0x80>
4000ca3c:	e5810000 	str	r0, [r1]
4000ca40:	e59f1050 	ldr	r1, [pc, #80]	; 4000ca98 <_tx_initialize_high_level+0x84>
4000ca44:	e5810000 	str	r0, [r1]
4000ca48:	e59f104c 	ldr	r1, [pc, #76]	; 4000ca9c <_tx_initialize_high_level+0x88>
4000ca4c:	e5810000 	str	r0, [r1]
4000ca50:	e59f1048 	ldr	r1, [pc, #72]	; 4000caa0 <_tx_initialize_high_level+0x8c>
4000ca54:	e5810000 	str	r0, [r1]
4000ca58:	e59f1044 	ldr	r1, [pc, #68]	; 4000caa4 <_tx_initialize_high_level+0x90>
4000ca5c:	e5810000 	str	r0, [r1]
4000ca60:	e59f1040 	ldr	r1, [pc, #64]	; 4000caa8 <_tx_initialize_high_level+0x94>
4000ca64:	e5810000 	str	r0, [r1]
4000ca68:	e59f103c 	ldr	r1, [pc, #60]	; 4000caac <_tx_initialize_high_level+0x98>
4000ca6c:	e5810000 	str	r0, [r1]
4000ca70:	e59f1038 	ldr	r1, [pc, #56]	; 4000cab0 <_tx_initialize_high_level+0x9c>
4000ca74:	e5810000 	str	r0, [r1]
4000ca78:	e59f1034 	ldr	r1, [pc, #52]	; 4000cab4 <_tx_initialize_high_level+0xa0>
4000ca7c:	e5810000 	str	r0, [r1]
4000ca80:	e59f1030 	ldr	r1, [pc, #48]	; 4000cab8 <_tx_initialize_high_level+0xa4>
4000ca84:	e5810000 	str	r0, [r1]
4000ca88:	e8bd8010 	pop	{r4, pc}
4000ca8c:	40030ec4 	.word	0x40030ec4
4000ca90:	40030ec8 	.word	0x40030ec8
4000ca94:	40030ecc 	.word	0x40030ecc
4000ca98:	40030ed0 	.word	0x40030ed0
4000ca9c:	40030ed4 	.word	0x40030ed4
4000caa0:	40030ed8 	.word	0x40030ed8
4000caa4:	40030ee4 	.word	0x40030ee4
4000caa8:	40030ee8 	.word	0x40030ee8
4000caac:	40030eec 	.word	0x40030eec
4000cab0:	40030ef0 	.word	0x40030ef0
4000cab4:	40030edc 	.word	0x40030edc
4000cab8:	40030ee0 	.word	0x40030ee0

4000cabc <_tx_mutex_create>:
4000cabc:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000cac0:	e1a04000 	mov	r4, r0
4000cac4:	e1a05001 	mov	r5, r1
4000cac8:	e1a06002 	mov	r6, r2
4000cacc:	e3a01038 	mov	r1, #56	; 0x38
4000cad0:	e1a00004 	mov	r0, r4
4000cad4:	eb001ad5 	bl	40013630 <__aeabi_memclr4>
4000cad8:	e5845004 	str	r5, [r4, #4]
4000cadc:	e5846010 	str	r6, [r4, #16]
4000cae0:	e10f7000 	mrs	r7, CPSR
4000cae4:	e3878080 	orr	r8, r7, #128	; 0x80
4000cae8:	e121f008 	msr	CPSR_c, r8
4000caec:	e59f0174 	ldr	r0, [pc, #372]	; 4000cc68 <_tx_mutex_create+0x1ac>
4000caf0:	e5840000 	str	r0, [r4]
4000caf4:	e59f0170 	ldr	r0, [pc, #368]	; 4000cc6c <_tx_mutex_create+0x1b0>
4000caf8:	e5900000 	ldr	r0, [r0]
4000cafc:	e3500000 	cmp	r0, #0
4000cb00:	0a00000e 	beq	4000cb40 <_tx_mutex_create+0x84>
4000cb04:	e59f0160 	ldr	r0, [pc, #352]	; 4000cc6c <_tx_mutex_create+0x1b0>
4000cb08:	e5900000 	ldr	r0, [r0]
4000cb0c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000cb10:	e58d0004 	str	r0, [sp, #4]
4000cb14:	e59f0150 	ldr	r0, [pc, #336]	; 4000cc6c <_tx_mutex_create+0x1b0>
4000cb18:	e5900000 	ldr	r0, [r0]
4000cb1c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000cb20:	e59d0004 	ldr	r0, [sp, #4]
4000cb24:	e5804024 	str	r4, [r0, #36]	; 0x24
4000cb28:	e59d0004 	ldr	r0, [sp, #4]
4000cb2c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000cb30:	e59f0134 	ldr	r0, [pc, #308]	; 4000cc6c <_tx_mutex_create+0x1b0>
4000cb34:	e5900000 	ldr	r0, [r0]
4000cb38:	e5840024 	str	r0, [r4, #36]	; 0x24
4000cb3c:	ea000003 	b	4000cb50 <_tx_mutex_create+0x94>
4000cb40:	e59f0124 	ldr	r0, [pc, #292]	; 4000cc6c <_tx_mutex_create+0x1b0>
4000cb44:	e5804000 	str	r4, [r0]
4000cb48:	e5844024 	str	r4, [r4, #36]	; 0x24
4000cb4c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000cb50:	e59f0118 	ldr	r0, [pc, #280]	; 4000cc70 <_tx_mutex_create+0x1b4>
4000cb54:	e5900000 	ldr	r0, [r0]
4000cb58:	e2800001 	add	r0, r0, #1
4000cb5c:	e59f110c 	ldr	r1, [pc, #268]	; 4000cc70 <_tx_mutex_create+0x1b4>
4000cb60:	e5810000 	str	r0, [r1]
4000cb64:	e3a03000 	mov	r3, #0
4000cb68:	e58d3000 	str	r3, [sp]
4000cb6c:	e1a03006 	mov	r3, r6
4000cb70:	e1a02005 	mov	r2, r5
4000cb74:	e1a01004 	mov	r1, r4
4000cb78:	e3a00005 	mov	r0, #5
4000cb7c:	eb000d46 	bl	4001009c <_tx_trace_object_register>
4000cb80:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cc74 <_tx_mutex_create+0x1b8>
4000cb84:	e5910000 	ldr	r0, [r1]
4000cb88:	e3500000 	cmp	r0, #0
4000cb8c:	0a000032 	beq	4000cc5c <_tx_mutex_create+0x1a0>
4000cb90:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cc78 <_tx_mutex_create+0x1bc>
4000cb94:	e5911000 	ldr	r1, [r1]
4000cb98:	e2811001 	add	r1, r1, #1
4000cb9c:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cc78 <_tx_mutex_create+0x1bc>
4000cba0:	e5821000 	str	r1, [r2]
4000cba4:	e580100c 	str	r1, [r0, #12]
4000cba8:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cc7c <_tx_mutex_create+0x1c0>
4000cbac:	e5911000 	ldr	r1, [r1]
4000cbb0:	e3510000 	cmp	r1, #0
4000cbb4:	1a000006 	bne	4000cbd4 <_tx_mutex_create+0x118>
4000cbb8:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cc80 <_tx_mutex_create+0x1c4>
4000cbbc:	e5911000 	ldr	r1, [r1]
4000cbc0:	e5801000 	str	r1, [r0]
4000cbc4:	e5901000 	ldr	r1, [r0]
4000cbc8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cbcc:	e5801004 	str	r1, [r0, #4]
4000cbd0:	ea00000d 	b	4000cc0c <_tx_mutex_create+0x150>
4000cbd4:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cc7c <_tx_mutex_create+0x1c0>
4000cbd8:	e5911000 	ldr	r1, [r1]
4000cbdc:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cc84 <_tx_mutex_create+0x1c8>
4000cbe0:	e1510002 	cmp	r1, r2
4000cbe4:	2a000004 	bcs	4000cbfc <_tx_mutex_create+0x140>
4000cbe8:	e3e01000 	mvn	r1, #0
4000cbec:	e5801000 	str	r1, [r0]
4000cbf0:	e3a01000 	mov	r1, #0
4000cbf4:	e5801004 	str	r1, [r0, #4]
4000cbf8:	ea000003 	b	4000cc0c <_tx_mutex_create+0x150>
4000cbfc:	e59f1080 	ldr	r1, [pc, #128]	; 4000cc84 <_tx_mutex_create+0x1c8>
4000cc00:	e5801000 	str	r1, [r0]
4000cc04:	e3a01000 	mov	r1, #0
4000cc08:	e5801004 	str	r1, [r0, #4]
4000cc0c:	e3a01032 	mov	r1, #50	; 0x32
4000cc10:	e5801008 	str	r1, [r0, #8]
4000cc14:	e5804010 	str	r4, [r0, #16]
4000cc18:	e5806014 	str	r6, [r0, #20]
4000cc1c:	e28d1004 	add	r1, sp, #4
4000cc20:	e5801018 	str	r1, [r0, #24]
4000cc24:	e3a01000 	mov	r1, #0
4000cc28:	e580101c 	str	r1, [r0, #28]
4000cc2c:	e2800020 	add	r0, r0, #32
4000cc30:	e59f1050 	ldr	r1, [pc, #80]	; 4000cc88 <_tx_mutex_create+0x1cc>
4000cc34:	e5911000 	ldr	r1, [r1]
4000cc38:	e1500001 	cmp	r0, r1
4000cc3c:	3a000001 	bcc	4000cc48 <_tx_mutex_create+0x18c>
4000cc40:	e59f1044 	ldr	r1, [pc, #68]	; 4000cc8c <_tx_mutex_create+0x1d0>
4000cc44:	e5910000 	ldr	r0, [r1]
4000cc48:	e59f1024 	ldr	r1, [pc, #36]	; 4000cc74 <_tx_mutex_create+0x1b8>
4000cc4c:	e5810000 	str	r0, [r1]
4000cc50:	e59f1038 	ldr	r1, [pc, #56]	; 4000cc90 <_tx_mutex_create+0x1d4>
4000cc54:	e5911000 	ldr	r1, [r1]
4000cc58:	e5810020 	str	r0, [r1, #32]
4000cc5c:	e121f007 	msr	CPSR_c, r7
4000cc60:	e3a00000 	mov	r0, #0
4000cc64:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cc68:	4d555445 	.word	0x4d555445
4000cc6c:	40030edc 	.word	0x40030edc
4000cc70:	40030ee0 	.word	0x40030ee0
4000cc74:	40030ebc 	.word	0x40030ebc
4000cc78:	40030ec0 	.word	0x40030ec0
4000cc7c:	40030e48 	.word	0x40030e48
4000cc80:	40030e50 	.word	0x40030e50
4000cc84:	f0f0f0f0 	.word	0xf0f0f0f0
4000cc88:	40030eb8 	.word	0x40030eb8
4000cc8c:	40030eb4 	.word	0x40030eb4
4000cc90:	40030ea8 	.word	0x40030ea8

4000cc94 <_tx_mutex_delete>:
4000cc94:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cc98:	e1a04000 	mov	r4, r0
4000cc9c:	e10f5000 	mrs	r5, CPSR
4000cca0:	e3856080 	orr	r6, r5, #128	; 0x80
4000cca4:	e121f006 	msr	CPSR_c, r6
4000cca8:	e59f1294 	ldr	r1, [pc, #660]	; 4000cf44 <_tx_mutex_delete+0x2b0>
4000ccac:	e5910000 	ldr	r0, [r1]
4000ccb0:	e3500000 	cmp	r0, #0
4000ccb4:	0a000031 	beq	4000cd80 <_tx_mutex_delete+0xec>
4000ccb8:	e59f1288 	ldr	r1, [pc, #648]	; 4000cf48 <_tx_mutex_delete+0x2b4>
4000ccbc:	e5911000 	ldr	r1, [r1]
4000ccc0:	e2811001 	add	r1, r1, #1
4000ccc4:	e59f227c 	ldr	r2, [pc, #636]	; 4000cf48 <_tx_mutex_delete+0x2b4>
4000ccc8:	e5821000 	str	r1, [r2]
4000cccc:	e580100c 	str	r1, [r0, #12]
4000ccd0:	e59f1274 	ldr	r1, [pc, #628]	; 4000cf4c <_tx_mutex_delete+0x2b8>
4000ccd4:	e5911000 	ldr	r1, [r1]
4000ccd8:	e3510000 	cmp	r1, #0
4000ccdc:	1a000006 	bne	4000ccfc <_tx_mutex_delete+0x68>
4000cce0:	e59f1268 	ldr	r1, [pc, #616]	; 4000cf50 <_tx_mutex_delete+0x2bc>
4000cce4:	e5911000 	ldr	r1, [r1]
4000cce8:	e5801000 	str	r1, [r0]
4000ccec:	e5901000 	ldr	r1, [r0]
4000ccf0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ccf4:	e5801004 	str	r1, [r0, #4]
4000ccf8:	ea00000d 	b	4000cd34 <_tx_mutex_delete+0xa0>
4000ccfc:	e59f1248 	ldr	r1, [pc, #584]	; 4000cf4c <_tx_mutex_delete+0x2b8>
4000cd00:	e5911000 	ldr	r1, [r1]
4000cd04:	e59f2248 	ldr	r2, [pc, #584]	; 4000cf54 <_tx_mutex_delete+0x2c0>
4000cd08:	e1510002 	cmp	r1, r2
4000cd0c:	2a000004 	bcs	4000cd24 <_tx_mutex_delete+0x90>
4000cd10:	e3e01000 	mvn	r1, #0
4000cd14:	e5801000 	str	r1, [r0]
4000cd18:	e3a01000 	mov	r1, #0
4000cd1c:	e5801004 	str	r1, [r0, #4]
4000cd20:	ea000003 	b	4000cd34 <_tx_mutex_delete+0xa0>
4000cd24:	e59f1228 	ldr	r1, [pc, #552]	; 4000cf54 <_tx_mutex_delete+0x2c0>
4000cd28:	e5801000 	str	r1, [r0]
4000cd2c:	e3a01000 	mov	r1, #0
4000cd30:	e5801004 	str	r1, [r0, #4]
4000cd34:	e3a01033 	mov	r1, #51	; 0x33
4000cd38:	e5801008 	str	r1, [r0, #8]
4000cd3c:	e5804010 	str	r4, [r0, #16]
4000cd40:	e580d014 	str	sp, [r0, #20]
4000cd44:	e3a01000 	mov	r1, #0
4000cd48:	e5801018 	str	r1, [r0, #24]
4000cd4c:	e580101c 	str	r1, [r0, #28]
4000cd50:	e2800020 	add	r0, r0, #32
4000cd54:	e59f11fc 	ldr	r1, [pc, #508]	; 4000cf58 <_tx_mutex_delete+0x2c4>
4000cd58:	e5911000 	ldr	r1, [r1]
4000cd5c:	e1500001 	cmp	r0, r1
4000cd60:	3a000001 	bcc	4000cd6c <_tx_mutex_delete+0xd8>
4000cd64:	e59f11f0 	ldr	r1, [pc, #496]	; 4000cf5c <_tx_mutex_delete+0x2c8>
4000cd68:	e5910000 	ldr	r0, [r1]
4000cd6c:	e59f11d0 	ldr	r1, [pc, #464]	; 4000cf44 <_tx_mutex_delete+0x2b0>
4000cd70:	e5810000 	str	r0, [r1]
4000cd74:	e59f11e4 	ldr	r1, [pc, #484]	; 4000cf60 <_tx_mutex_delete+0x2cc>
4000cd78:	e5911000 	ldr	r1, [r1]
4000cd7c:	e5810020 	str	r0, [r1, #32]
4000cd80:	e1a00004 	mov	r0, r4
4000cd84:	eb000d2f 	bl	40010248 <_tx_trace_object_unregister>
4000cd88:	e59f01d4 	ldr	r0, [pc, #468]	; 4000cf64 <_tx_mutex_delete+0x2d0>
4000cd8c:	e5900000 	ldr	r0, [r0]
4000cd90:	e2400001 	sub	r0, r0, #1
4000cd94:	e59f11c8 	ldr	r1, [pc, #456]	; 4000cf64 <_tx_mutex_delete+0x2d0>
4000cd98:	e5810000 	str	r0, [r1]
4000cd9c:	e3a00000 	mov	r0, #0
4000cda0:	e5840000 	str	r0, [r4]
4000cda4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cda8:	e1500004 	cmp	r0, r4
4000cdac:	1a000003 	bne	4000cdc0 <_tx_mutex_delete+0x12c>
4000cdb0:	e3a00000 	mov	r0, #0
4000cdb4:	e59f11ac 	ldr	r1, [pc, #428]	; 4000cf68 <_tx_mutex_delete+0x2d4>
4000cdb8:	e5810000 	str	r0, [r1]
4000cdbc:	ea00000c 	b	4000cdf4 <_tx_mutex_delete+0x160>
4000cdc0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cdc4:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cdc8:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cdcc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cdd0:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cdd4:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cdd8:	e59f0188 	ldr	r0, [pc, #392]	; 4000cf68 <_tx_mutex_delete+0x2d4>
4000cddc:	e5900000 	ldr	r0, [r0]
4000cde0:	e1500004 	cmp	r0, r4
4000cde4:	1a000002 	bne	4000cdf4 <_tx_mutex_delete+0x160>
4000cde8:	e59f1178 	ldr	r1, [pc, #376]	; 4000cf68 <_tx_mutex_delete+0x2d4>
4000cdec:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cdf0:	e5810000 	str	r0, [r1]
4000cdf4:	e594000c 	ldr	r0, [r4, #12]
4000cdf8:	e58d0000 	str	r0, [sp]
4000cdfc:	e5940010 	ldr	r0, [r4, #16]
4000ce00:	e3500000 	cmp	r0, #0
4000ce04:	0a00001c 	beq	4000ce7c <_tx_mutex_delete+0x1e8>
4000ce08:	e59d0000 	ldr	r0, [sp]
4000ce0c:	e3500000 	cmp	r0, #0
4000ce10:	0a000019 	beq	4000ce7c <_tx_mutex_delete+0x1e8>
4000ce14:	e59d0000 	ldr	r0, [sp]
4000ce18:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000ce1c:	e2400001 	sub	r0, r0, #1
4000ce20:	e59d1000 	ldr	r1, [sp]
4000ce24:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000ce28:	e59d0000 	ldr	r0, [sp]
4000ce2c:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000ce30:	e3500000 	cmp	r0, #0
4000ce34:	1a000003 	bne	4000ce48 <_tx_mutex_delete+0x1b4>
4000ce38:	e3a00000 	mov	r0, #0
4000ce3c:	e59d1000 	ldr	r1, [sp]
4000ce40:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ce44:	ea00000c 	b	4000ce7c <_tx_mutex_delete+0x1e8>
4000ce48:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000ce4c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ce50:	e5810034 	str	r0, [r1, #52]	; 0x34
4000ce54:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ce58:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000ce5c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000ce60:	e59d0000 	ldr	r0, [sp]
4000ce64:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000ce68:	e1500004 	cmp	r0, r4
4000ce6c:	1a000002 	bne	4000ce7c <_tx_mutex_delete+0x1e8>
4000ce70:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ce74:	e59d1000 	ldr	r1, [sp]
4000ce78:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ce7c:	e3a00000 	mov	r0, #0
4000ce80:	e584000c 	str	r0, [r4, #12]
4000ce84:	e59f00e0 	ldr	r0, [pc, #224]	; 4000cf6c <_tx_mutex_delete+0x2d8>
4000ce88:	e5900000 	ldr	r0, [r0]
4000ce8c:	e2800001 	add	r0, r0, #1
4000ce90:	e59f10d4 	ldr	r1, [pc, #212]	; 4000cf6c <_tx_mutex_delete+0x2d8>
4000ce94:	e5810000 	str	r0, [r1]
4000ce98:	e121f005 	msr	CPSR_c, r5
4000ce9c:	e594001c 	ldr	r0, [r4, #28]
4000cea0:	e58d0000 	str	r0, [sp]
4000cea4:	ea000017 	b	4000cf08 <_tx_mutex_delete+0x274>
4000cea8:	e10f5000 	mrs	r5, CPSR
4000ceac:	e3856080 	orr	r6, r5, #128	; 0x80
4000ceb0:	e121f006 	msr	CPSR_c, r6
4000ceb4:	e3a00000 	mov	r0, #0
4000ceb8:	e59d1000 	ldr	r1, [sp]
4000cebc:	e5810068 	str	r0, [r1, #104]	; 0x68
4000cec0:	e59f00a4 	ldr	r0, [pc, #164]	; 4000cf6c <_tx_mutex_delete+0x2d8>
4000cec4:	e5900000 	ldr	r0, [r0]
4000cec8:	e2800001 	add	r0, r0, #1
4000cecc:	e59f1098 	ldr	r1, [pc, #152]	; 4000cf6c <_tx_mutex_delete+0x2d8>
4000ced0:	e5810000 	str	r0, [r1]
4000ced4:	e121f005 	msr	CPSR_c, r5
4000ced8:	e3a00001 	mov	r0, #1
4000cedc:	e59d1000 	ldr	r1, [sp]
4000cee0:	e5810084 	str	r0, [r1, #132]	; 0x84
4000cee4:	e59d0000 	ldr	r0, [sp]
4000cee8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000ceec:	e58d0000 	str	r0, [sp]
4000cef0:	e59d1000 	ldr	r1, [sp]
4000cef4:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000cef8:	eb000911 	bl	4000f344 <_tx_thread_system_resume>
4000cefc:	e5940020 	ldr	r0, [r4, #32]
4000cf00:	e2400001 	sub	r0, r0, #1
4000cf04:	e5840020 	str	r0, [r4, #32]
4000cf08:	e5940020 	ldr	r0, [r4, #32]
4000cf0c:	e3500000 	cmp	r0, #0
4000cf10:	1affffe4 	bne	4000cea8 <_tx_mutex_delete+0x214>
4000cf14:	e10f5000 	mrs	r5, CPSR
4000cf18:	e3856080 	orr	r6, r5, #128	; 0x80
4000cf1c:	e121f006 	msr	CPSR_c, r6
4000cf20:	e59f0044 	ldr	r0, [pc, #68]	; 4000cf6c <_tx_mutex_delete+0x2d8>
4000cf24:	e5900000 	ldr	r0, [r0]
4000cf28:	e2400001 	sub	r0, r0, #1
4000cf2c:	e59f1038 	ldr	r1, [pc, #56]	; 4000cf6c <_tx_mutex_delete+0x2d8>
4000cf30:	e5810000 	str	r0, [r1]
4000cf34:	e121f005 	msr	CPSR_c, r5
4000cf38:	eb0008d5 	bl	4000f294 <_tx_thread_system_preempt_check>
4000cf3c:	e3a00000 	mov	r0, #0
4000cf40:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000cf44:	40030ebc 	.word	0x40030ebc
4000cf48:	40030ec0 	.word	0x40030ec0
4000cf4c:	40030e48 	.word	0x40030e48
4000cf50:	40030e50 	.word	0x40030e50
4000cf54:	f0f0f0f0 	.word	0xf0f0f0f0
4000cf58:	40030eb8 	.word	0x40030eb8
4000cf5c:	40030eb4 	.word	0x40030eb4
4000cf60:	40030ea8 	.word	0x40030ea8
4000cf64:	40030ee0 	.word	0x40030ee0
4000cf68:	40030edc 	.word	0x40030edc
4000cf6c:	40030e6c 	.word	0x40030e6c

4000cf70 <_tx_mutex_get>:
4000cf70:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000cf74:	e1a04000 	mov	r4, r0
4000cf78:	e1a05001 	mov	r5, r1
4000cf7c:	e10f6000 	mrs	r6, CPSR
4000cf80:	e3867080 	orr	r7, r6, #128	; 0x80
4000cf84:	e121f007 	msr	CPSR_c, r7
4000cf88:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d23c <_tx_mutex_get+0x2cc>
4000cf8c:	e5910000 	ldr	r0, [r1]
4000cf90:	e3500000 	cmp	r0, #0
4000cf94:	0a000032 	beq	4000d064 <_tx_mutex_get+0xf4>
4000cf98:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d240 <_tx_mutex_get+0x2d0>
4000cf9c:	e5911000 	ldr	r1, [r1]
4000cfa0:	e2811001 	add	r1, r1, #1
4000cfa4:	e59f2294 	ldr	r2, [pc, #660]	; 4000d240 <_tx_mutex_get+0x2d0>
4000cfa8:	e5821000 	str	r1, [r2]
4000cfac:	e580100c 	str	r1, [r0, #12]
4000cfb0:	e59f128c 	ldr	r1, [pc, #652]	; 4000d244 <_tx_mutex_get+0x2d4>
4000cfb4:	e5911000 	ldr	r1, [r1]
4000cfb8:	e3510000 	cmp	r1, #0
4000cfbc:	1a000006 	bne	4000cfdc <_tx_mutex_get+0x6c>
4000cfc0:	e59f1280 	ldr	r1, [pc, #640]	; 4000d248 <_tx_mutex_get+0x2d8>
4000cfc4:	e5911000 	ldr	r1, [r1]
4000cfc8:	e5801000 	str	r1, [r0]
4000cfcc:	e5901000 	ldr	r1, [r0]
4000cfd0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cfd4:	e5801004 	str	r1, [r0, #4]
4000cfd8:	ea00000d 	b	4000d014 <_tx_mutex_get+0xa4>
4000cfdc:	e59f1260 	ldr	r1, [pc, #608]	; 4000d244 <_tx_mutex_get+0x2d4>
4000cfe0:	e5911000 	ldr	r1, [r1]
4000cfe4:	e59f2260 	ldr	r2, [pc, #608]	; 4000d24c <_tx_mutex_get+0x2dc>
4000cfe8:	e1510002 	cmp	r1, r2
4000cfec:	2a000004 	bcs	4000d004 <_tx_mutex_get+0x94>
4000cff0:	e3e01000 	mvn	r1, #0
4000cff4:	e5801000 	str	r1, [r0]
4000cff8:	e3a01000 	mov	r1, #0
4000cffc:	e5801004 	str	r1, [r0, #4]
4000d000:	ea000003 	b	4000d014 <_tx_mutex_get+0xa4>
4000d004:	e59f1240 	ldr	r1, [pc, #576]	; 4000d24c <_tx_mutex_get+0x2dc>
4000d008:	e5801000 	str	r1, [r0]
4000d00c:	e3a01000 	mov	r1, #0
4000d010:	e5801004 	str	r1, [r0, #4]
4000d014:	e3a01034 	mov	r1, #52	; 0x34
4000d018:	e5801008 	str	r1, [r0, #8]
4000d01c:	e5804010 	str	r4, [r0, #16]
4000d020:	e5805014 	str	r5, [r0, #20]
4000d024:	e594100c 	ldr	r1, [r4, #12]
4000d028:	e5801018 	str	r1, [r0, #24]
4000d02c:	e5941008 	ldr	r1, [r4, #8]
4000d030:	e580101c 	str	r1, [r0, #28]
4000d034:	e2800020 	add	r0, r0, #32
4000d038:	e59f1210 	ldr	r1, [pc, #528]	; 4000d250 <_tx_mutex_get+0x2e0>
4000d03c:	e5911000 	ldr	r1, [r1]
4000d040:	e1500001 	cmp	r0, r1
4000d044:	3a000001 	bcc	4000d050 <_tx_mutex_get+0xe0>
4000d048:	e59f1204 	ldr	r1, [pc, #516]	; 4000d254 <_tx_mutex_get+0x2e4>
4000d04c:	e5910000 	ldr	r0, [r1]
4000d050:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d23c <_tx_mutex_get+0x2cc>
4000d054:	e5810000 	str	r0, [r1]
4000d058:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d258 <_tx_mutex_get+0x2e8>
4000d05c:	e5911000 	ldr	r1, [r1]
4000d060:	e5810020 	str	r0, [r1, #32]
4000d064:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d248 <_tx_mutex_get+0x2d8>
4000d068:	e5909000 	ldr	r9, [r0]
4000d06c:	e5940008 	ldr	r0, [r4, #8]
4000d070:	e3500000 	cmp	r0, #0
4000d074:	1a000025 	bne	4000d110 <_tx_mutex_get+0x1a0>
4000d078:	e3a00001 	mov	r0, #1
4000d07c:	e5840008 	str	r0, [r4, #8]
4000d080:	e584900c 	str	r9, [r4, #12]
4000d084:	e5940010 	ldr	r0, [r4, #16]
4000d088:	e3500000 	cmp	r0, #0
4000d08c:	0a00001d 	beq	4000d108 <_tx_mutex_get+0x198>
4000d090:	e3590000 	cmp	r9, #0
4000d094:	0a00001b 	beq	4000d108 <_tx_mutex_get+0x198>
4000d098:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d09c:	e5840014 	str	r0, [r4, #20]
4000d0a0:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d0a4:	e5840018 	str	r0, [r4, #24]
4000d0a8:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d0ac:	e3500000 	cmp	r0, #0
4000d0b0:	0a000008 	beq	4000d0d8 <_tx_mutex_get+0x168>
4000d0b4:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d0b8:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d0bc:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d0c0:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d0c4:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d0c8:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d0cc:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d0d0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d0d4:	ea000006 	b	4000d0f4 <_tx_mutex_get+0x184>
4000d0d8:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d0dc:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d0e0:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d0e4:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d0e8:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d0ec:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d0f0:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d0f4:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d0f8:	e2800001 	add	r0, r0, #1
4000d0fc:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d100:	e3a00020 	mov	r0, #32
4000d104:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d108:	e3a08000 	mov	r8, #0
4000d10c:	ea000047 	b	4000d230 <_tx_mutex_get+0x2c0>
4000d110:	e594000c 	ldr	r0, [r4, #12]
4000d114:	e1500009 	cmp	r0, r9
4000d118:	1a000004 	bne	4000d130 <_tx_mutex_get+0x1c0>
4000d11c:	e5940008 	ldr	r0, [r4, #8]
4000d120:	e2800001 	add	r0, r0, #1
4000d124:	e5840008 	str	r0, [r4, #8]
4000d128:	e3a08000 	mov	r8, #0
4000d12c:	ea00003f 	b	4000d230 <_tx_mutex_get+0x2c0>
4000d130:	e3550000 	cmp	r5, #0
4000d134:	0a00003c 	beq	4000d22c <_tx_mutex_get+0x2bc>
4000d138:	e59f011c 	ldr	r0, [pc, #284]	; 4000d25c <_tx_mutex_get+0x2ec>
4000d13c:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d140:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d144:	e594001c 	ldr	r0, [r4, #28]
4000d148:	e3500000 	cmp	r0, #0
4000d14c:	0a00000a 	beq	4000d17c <_tx_mutex_get+0x20c>
4000d150:	e594001c 	ldr	r0, [r4, #28]
4000d154:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d158:	e594001c 	ldr	r0, [r4, #28]
4000d15c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d160:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d164:	e594001c 	ldr	r0, [r4, #28]
4000d168:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d16c:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d170:	e594001c 	ldr	r0, [r4, #28]
4000d174:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d178:	ea000002 	b	4000d188 <_tx_mutex_get+0x218>
4000d17c:	e584901c 	str	r9, [r4, #28]
4000d180:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d184:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d188:	e5940020 	ldr	r0, [r4, #32]
4000d18c:	e2800001 	add	r0, r0, #1
4000d190:	e5840020 	str	r0, [r4, #32]
4000d194:	e3a0000d 	mov	r0, #13
4000d198:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d19c:	e3a00001 	mov	r0, #1
4000d1a0:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d1a4:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d1a8:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d260 <_tx_mutex_get+0x2f0>
4000d1ac:	e5900000 	ldr	r0, [r0]
4000d1b0:	e2800001 	add	r0, r0, #1
4000d1b4:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d260 <_tx_mutex_get+0x2f0>
4000d1b8:	e5810000 	str	r0, [r1]
4000d1bc:	e121f006 	msr	CPSR_c, r6
4000d1c0:	e5940010 	ldr	r0, [r4, #16]
4000d1c4:	e3500000 	cmp	r0, #0
4000d1c8:	0a000013 	beq	4000d21c <_tx_mutex_get+0x2ac>
4000d1cc:	e594000c 	ldr	r0, [r4, #12]
4000d1d0:	e3500000 	cmp	r0, #0
4000d1d4:	0a000010 	beq	4000d21c <_tx_mutex_get+0x2ac>
4000d1d8:	e3590000 	cmp	r9, #0
4000d1dc:	0a00000e 	beq	4000d21c <_tx_mutex_get+0x2ac>
4000d1e0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d1e4:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d1e8:	e1500001 	cmp	r0, r1
4000d1ec:	9a000001 	bls	4000d1f8 <_tx_mutex_get+0x288>
4000d1f0:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d1f4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d1f8:	e594000c 	ldr	r0, [r4, #12]
4000d1fc:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d200:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d204:	e1500001 	cmp	r0, r1
4000d208:	9a000003 	bls	4000d21c <_tx_mutex_get+0x2ac>
4000d20c:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d210:	e1a01002 	mov	r1, r2
4000d214:	e594000c 	ldr	r0, [r4, #12]
4000d218:	eb000011 	bl	4000d264 <_tx_mutex_priority_change>
4000d21c:	e1a00009 	mov	r0, r9
4000d220:	ebffeea0 	bl	40008ca8 <_tx_thread_system_suspend>
4000d224:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d228:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d22c:	e3a0801d 	mov	r8, #29
4000d230:	e121f006 	msr	CPSR_c, r6
4000d234:	e1a00008 	mov	r0, r8
4000d238:	eafffffa 	b	4000d228 <_tx_mutex_get+0x2b8>
4000d23c:	40030ebc 	.word	0x40030ebc
4000d240:	40030ec0 	.word	0x40030ec0
4000d244:	40030e48 	.word	0x40030e48
4000d248:	40030e50 	.word	0x40030e50
4000d24c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d250:	40030eb8 	.word	0x40030eb8
4000d254:	40030eb4 	.word	0x40030eb4
4000d258:	40030ea8 	.word	0x40030ea8
4000d25c:	40010424 	.word	0x40010424
4000d260:	40030e6c 	.word	0x40030e6c

4000d264 <_tx_mutex_priority_change>:
4000d264:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d268:	e1a04000 	mov	r4, r0
4000d26c:	e1a05001 	mov	r5, r1
4000d270:	e1a06002 	mov	r6, r2
4000d274:	e10f7000 	mrs	r7, CPSR
4000d278:	e3878080 	orr	r8, r7, #128	; 0x80
4000d27c:	e121f008 	msr	CPSR_c, r8
4000d280:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d284:	e3500000 	cmp	r0, #0
4000d288:	0a000003 	beq	4000d29c <_tx_mutex_priority_change+0x38>
4000d28c:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d290:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d294:	e121f007 	msr	CPSR_c, r7
4000d298:	ea000011 	b	4000d2e4 <_tx_mutex_priority_change+0x80>
4000d29c:	e59f0044 	ldr	r0, [pc, #68]	; 4000d2e8 <_tx_mutex_priority_change+0x84>
4000d2a0:	e5900000 	ldr	r0, [r0]
4000d2a4:	e2800002 	add	r0, r0, #2
4000d2a8:	e59f1038 	ldr	r1, [pc, #56]	; 4000d2e8 <_tx_mutex_priority_change+0x84>
4000d2ac:	e5810000 	str	r0, [r1]
4000d2b0:	e3a00003 	mov	r0, #3
4000d2b4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d2b8:	e3a00001 	mov	r0, #1
4000d2bc:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d2c0:	e3a00000 	mov	r0, #0
4000d2c4:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d2c8:	e121f007 	msr	CPSR_c, r7
4000d2cc:	e1a00004 	mov	r0, r4
4000d2d0:	ebffee74 	bl	40008ca8 <_tx_thread_system_suspend>
4000d2d4:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d2d8:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d2dc:	e1a00004 	mov	r0, r4
4000d2e0:	eb000817 	bl	4000f344 <_tx_thread_system_resume>
4000d2e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d2e8:	40030e6c 	.word	0x40030e6c

4000d2ec <_tx_mutex_put>:
4000d2ec:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d2f0:	e1a04000 	mov	r4, r0
4000d2f4:	e10f5000 	mrs	r5, CPSR
4000d2f8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d2fc:	e121f006 	msr	CPSR_c, r6
4000d300:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d79c <_tx_mutex_put+0x4b0>
4000d304:	e5910000 	ldr	r0, [r1]
4000d308:	e3500000 	cmp	r0, #0
4000d30c:	0a000032 	beq	4000d3dc <_tx_mutex_put+0xf0>
4000d310:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d7a0 <_tx_mutex_put+0x4b4>
4000d314:	e5911000 	ldr	r1, [r1]
4000d318:	e2811001 	add	r1, r1, #1
4000d31c:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d7a0 <_tx_mutex_put+0x4b4>
4000d320:	e5821000 	str	r1, [r2]
4000d324:	e580100c 	str	r1, [r0, #12]
4000d328:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d7a4 <_tx_mutex_put+0x4b8>
4000d32c:	e5911000 	ldr	r1, [r1]
4000d330:	e3510000 	cmp	r1, #0
4000d334:	1a000006 	bne	4000d354 <_tx_mutex_put+0x68>
4000d338:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d7a8 <_tx_mutex_put+0x4bc>
4000d33c:	e5911000 	ldr	r1, [r1]
4000d340:	e5801000 	str	r1, [r0]
4000d344:	e5901000 	ldr	r1, [r0]
4000d348:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d34c:	e5801004 	str	r1, [r0, #4]
4000d350:	ea00000d 	b	4000d38c <_tx_mutex_put+0xa0>
4000d354:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d7a4 <_tx_mutex_put+0x4b8>
4000d358:	e5911000 	ldr	r1, [r1]
4000d35c:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d7ac <_tx_mutex_put+0x4c0>
4000d360:	e1510002 	cmp	r1, r2
4000d364:	2a000004 	bcs	4000d37c <_tx_mutex_put+0x90>
4000d368:	e3e01000 	mvn	r1, #0
4000d36c:	e5801000 	str	r1, [r0]
4000d370:	e3a01000 	mov	r1, #0
4000d374:	e5801004 	str	r1, [r0, #4]
4000d378:	ea000003 	b	4000d38c <_tx_mutex_put+0xa0>
4000d37c:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d7ac <_tx_mutex_put+0x4c0>
4000d380:	e5801000 	str	r1, [r0]
4000d384:	e3a01000 	mov	r1, #0
4000d388:	e5801004 	str	r1, [r0, #4]
4000d38c:	e3a01039 	mov	r1, #57	; 0x39
4000d390:	e5801008 	str	r1, [r0, #8]
4000d394:	e5804010 	str	r4, [r0, #16]
4000d398:	e594100c 	ldr	r1, [r4, #12]
4000d39c:	e5801014 	str	r1, [r0, #20]
4000d3a0:	e5941008 	ldr	r1, [r4, #8]
4000d3a4:	e5801018 	str	r1, [r0, #24]
4000d3a8:	e580d01c 	str	sp, [r0, #28]
4000d3ac:	e2800020 	add	r0, r0, #32
4000d3b0:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d7b0 <_tx_mutex_put+0x4c4>
4000d3b4:	e5911000 	ldr	r1, [r1]
4000d3b8:	e1500001 	cmp	r0, r1
4000d3bc:	3a000001 	bcc	4000d3c8 <_tx_mutex_put+0xdc>
4000d3c0:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d7b4 <_tx_mutex_put+0x4c8>
4000d3c4:	e5910000 	ldr	r0, [r1]
4000d3c8:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d79c <_tx_mutex_put+0x4b0>
4000d3cc:	e5810000 	str	r0, [r1]
4000d3d0:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d7b8 <_tx_mutex_put+0x4cc>
4000d3d4:	e5911000 	ldr	r1, [r1]
4000d3d8:	e5810020 	str	r0, [r1, #32]
4000d3dc:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d7a8 <_tx_mutex_put+0x4bc>
4000d3e0:	e5907000 	ldr	r7, [r0]
4000d3e4:	e5940008 	ldr	r0, [r4, #8]
4000d3e8:	e3500000 	cmp	r0, #0
4000d3ec:	0a0000e7 	beq	4000d790 <_tx_mutex_put+0x4a4>
4000d3f0:	e594000c 	ldr	r0, [r4, #12]
4000d3f4:	e1500007 	cmp	r0, r7
4000d3f8:	1a0000e4 	bne	4000d790 <_tx_mutex_put+0x4a4>
4000d3fc:	e5940008 	ldr	r0, [r4, #8]
4000d400:	e2400001 	sub	r0, r0, #1
4000d404:	e5840008 	str	r0, [r4, #8]
4000d408:	e5940008 	ldr	r0, [r4, #8]
4000d40c:	e3500000 	cmp	r0, #0
4000d410:	0a000002 	beq	4000d420 <_tx_mutex_put+0x134>
4000d414:	e121f005 	msr	CPSR_c, r5
4000d418:	e3a00000 	mov	r0, #0
4000d41c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d420:	e3a08000 	mov	r8, #0
4000d424:	e3a09000 	mov	r9, #0
4000d428:	e3a0a000 	mov	sl, #0
4000d42c:	e5940010 	ldr	r0, [r4, #16]
4000d430:	e3500000 	cmp	r0, #0
4000d434:	0a000033 	beq	4000d508 <_tx_mutex_put+0x21c>
4000d438:	e3570000 	cmp	r7, #0
4000d43c:	0a000031 	beq	4000d508 <_tx_mutex_put+0x21c>
4000d440:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d444:	e2400001 	sub	r0, r0, #1
4000d448:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d44c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d450:	e3500000 	cmp	r0, #0
4000d454:	1a000002 	bne	4000d464 <_tx_mutex_put+0x178>
4000d458:	e3a00000 	mov	r0, #0
4000d45c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d460:	ea00000a 	b	4000d490 <_tx_mutex_put+0x1a4>
4000d464:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d468:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d46c:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d470:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d474:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d478:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d47c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d480:	e1500004 	cmp	r0, r4
4000d484:	1a000001 	bne	4000d490 <_tx_mutex_put+0x1a4>
4000d488:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d48c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d490:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d494:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d498:	e59f031c 	ldr	r0, [pc, #796]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d49c:	e5900000 	ldr	r0, [r0]
4000d4a0:	e2800001 	add	r0, r0, #1
4000d4a4:	e59f1310 	ldr	r1, [pc, #784]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d4a8:	e5810000 	str	r0, [r1]
4000d4ac:	e121f005 	msr	CPSR_c, r5
4000d4b0:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d4b4:	ea000009 	b	4000d4e0 <_tx_mutex_put+0x1f4>
4000d4b8:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d4bc:	e1500009 	cmp	r0, r9
4000d4c0:	2a000001 	bcs	4000d4cc <_tx_mutex_put+0x1e0>
4000d4c4:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d4c8:	e1a0a009 	mov	sl, r9
4000d4cc:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d4d0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4d4:	e150000b 	cmp	r0, fp
4000d4d8:	1a000000 	bne	4000d4e0 <_tx_mutex_put+0x1f4>
4000d4dc:	e3a0b000 	mov	fp, #0
4000d4e0:	e35b0000 	cmp	fp, #0
4000d4e4:	1afffff3 	bne	4000d4b8 <_tx_mutex_put+0x1cc>
4000d4e8:	e10f5000 	mrs	r5, CPSR
4000d4ec:	e3856080 	orr	r6, r5, #128	; 0x80
4000d4f0:	e121f006 	msr	CPSR_c, r6
4000d4f4:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d4f8:	e5900000 	ldr	r0, [r0]
4000d4fc:	e2400001 	sub	r0, r0, #1
4000d500:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d504:	e5810000 	str	r0, [r1]
4000d508:	e5940020 	ldr	r0, [r4, #32]
4000d50c:	e3500001 	cmp	r0, #1
4000d510:	9a000012 	bls	4000d560 <_tx_mutex_put+0x274>
4000d514:	e5940010 	ldr	r0, [r4, #16]
4000d518:	e3500000 	cmp	r0, #0
4000d51c:	0a00000f 	beq	4000d560 <_tx_mutex_put+0x274>
4000d520:	e59f0294 	ldr	r0, [pc, #660]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d524:	e5900000 	ldr	r0, [r0]
4000d528:	e2800001 	add	r0, r0, #1
4000d52c:	e59f1288 	ldr	r1, [pc, #648]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d530:	e5810000 	str	r0, [r1]
4000d534:	e121f005 	msr	CPSR_c, r5
4000d538:	e1a00004 	mov	r0, r4
4000d53c:	eb000bec 	bl	400104f4 <_tx_mutex_prioritize>
4000d540:	e10f5000 	mrs	r5, CPSR
4000d544:	e3856080 	orr	r6, r5, #128	; 0x80
4000d548:	e121f006 	msr	CPSR_c, r6
4000d54c:	e59f0268 	ldr	r0, [pc, #616]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d550:	e5900000 	ldr	r0, [r0]
4000d554:	e2400001 	sub	r0, r0, #1
4000d558:	e59f125c 	ldr	r1, [pc, #604]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d55c:	e5810000 	str	r0, [r1]
4000d560:	e594001c 	ldr	r0, [r4, #28]
4000d564:	e3500000 	cmp	r0, #0
4000d568:	1a000024 	bne	4000d600 <_tx_mutex_put+0x314>
4000d56c:	e59f0248 	ldr	r0, [pc, #584]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d570:	e5900000 	ldr	r0, [r0]
4000d574:	e2800001 	add	r0, r0, #1
4000d578:	e59f123c 	ldr	r1, [pc, #572]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d57c:	e5810000 	str	r0, [r1]
4000d580:	e121f005 	msr	CPSR_c, r5
4000d584:	e5940010 	ldr	r0, [r4, #16]
4000d588:	e3500000 	cmp	r0, #0
4000d58c:	0a00000a 	beq	4000d5bc <_tx_mutex_put+0x2d0>
4000d590:	e3a00020 	mov	r0, #32
4000d594:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d598:	e3570000 	cmp	r7, #0
4000d59c:	0a000006 	beq	4000d5bc <_tx_mutex_put+0x2d0>
4000d5a0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d5a4:	e1500009 	cmp	r0, r9
4000d5a8:	0a000003 	beq	4000d5bc <_tx_mutex_put+0x2d0>
4000d5ac:	e1a0200a 	mov	r2, sl
4000d5b0:	e1a01009 	mov	r1, r9
4000d5b4:	e594000c 	ldr	r0, [r4, #12]
4000d5b8:	ebffff29 	bl	4000d264 <_tx_mutex_priority_change>
4000d5bc:	e10f5000 	mrs	r5, CPSR
4000d5c0:	e3856080 	orr	r6, r5, #128	; 0x80
4000d5c4:	e121f006 	msr	CPSR_c, r6
4000d5c8:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d5cc:	e5900000 	ldr	r0, [r0]
4000d5d0:	e2400001 	sub	r0, r0, #1
4000d5d4:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d5d8:	e5810000 	str	r0, [r1]
4000d5dc:	e5940008 	ldr	r0, [r4, #8]
4000d5e0:	e3500000 	cmp	r0, #0
4000d5e4:	1a000001 	bne	4000d5f0 <_tx_mutex_put+0x304>
4000d5e8:	e3a00000 	mov	r0, #0
4000d5ec:	e584000c 	str	r0, [r4, #12]
4000d5f0:	e121f005 	msr	CPSR_c, r5
4000d5f4:	eb000726 	bl	4000f294 <_tx_thread_system_preempt_check>
4000d5f8:	e3a00000 	mov	r0, #0
4000d5fc:	eaffff86 	b	4000d41c <_tx_mutex_put+0x130>
4000d600:	e594701c 	ldr	r7, [r4, #28]
4000d604:	e5940010 	ldr	r0, [r4, #16]
4000d608:	e3500000 	cmp	r0, #0
4000d60c:	0a00001f 	beq	4000d690 <_tx_mutex_put+0x3a4>
4000d610:	e594800c 	ldr	r8, [r4, #12]
4000d614:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d618:	e5840014 	str	r0, [r4, #20]
4000d61c:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d620:	e5840018 	str	r0, [r4, #24]
4000d624:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d628:	e3500000 	cmp	r0, #0
4000d62c:	0a00000b 	beq	4000d660 <_tx_mutex_put+0x374>
4000d630:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d634:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d638:	e58d0000 	str	r0, [sp]
4000d63c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d640:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d644:	e59d0000 	ldr	r0, [sp]
4000d648:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d64c:	e59d0000 	ldr	r0, [sp]
4000d650:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d654:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d658:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d65c:	ea000006 	b	4000d67c <_tx_mutex_put+0x390>
4000d660:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d664:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d668:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d66c:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d670:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d674:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d678:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d67c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d680:	e2800001 	add	r0, r0, #1
4000d684:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d688:	e3a00020 	mov	r0, #32
4000d68c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d690:	e3a00001 	mov	r0, #1
4000d694:	e5840008 	str	r0, [r4, #8]
4000d698:	e584700c 	str	r7, [r4, #12]
4000d69c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d6a0:	e1500007 	cmp	r0, r7
4000d6a4:	1a000002 	bne	4000d6b4 <_tx_mutex_put+0x3c8>
4000d6a8:	e3a00000 	mov	r0, #0
4000d6ac:	e584001c 	str	r0, [r4, #28]
4000d6b0:	ea000007 	b	4000d6d4 <_tx_mutex_put+0x3e8>
4000d6b4:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d6b8:	e584001c 	str	r0, [r4, #28]
4000d6bc:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d6c0:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d6c4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d6c8:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d6cc:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d6d0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d6d4:	e5940020 	ldr	r0, [r4, #32]
4000d6d8:	e2400001 	sub	r0, r0, #1
4000d6dc:	e5840020 	str	r0, [r4, #32]
4000d6e0:	e3a00000 	mov	r0, #0
4000d6e4:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d6e8:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d6ec:	e5900000 	ldr	r0, [r0]
4000d6f0:	e2800001 	add	r0, r0, #1
4000d6f4:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d7bc <_tx_mutex_put+0x4d0>
4000d6f8:	e5810000 	str	r0, [r1]
4000d6fc:	e121f005 	msr	CPSR_c, r5
4000d700:	e3a00000 	mov	r0, #0
4000d704:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d708:	e5940010 	ldr	r0, [r4, #16]
4000d70c:	e3500000 	cmp	r0, #0
4000d710:	0a00001a 	beq	4000d780 <_tx_mutex_put+0x494>
4000d714:	e5940020 	ldr	r0, [r4, #32]
4000d718:	e3500000 	cmp	r0, #0
4000d71c:	0a00000e 	beq	4000d75c <_tx_mutex_put+0x470>
4000d720:	e5940020 	ldr	r0, [r4, #32]
4000d724:	e3500001 	cmp	r0, #1
4000d728:	9a000001 	bls	4000d734 <_tx_mutex_put+0x448>
4000d72c:	e1a00004 	mov	r0, r4
4000d730:	eb000b6f 	bl	400104f4 <_tx_mutex_prioritize>
4000d734:	e10f5000 	mrs	r5, CPSR
4000d738:	e3856080 	orr	r6, r5, #128	; 0x80
4000d73c:	e121f006 	msr	CPSR_c, r6
4000d740:	e594001c 	ldr	r0, [r4, #28]
4000d744:	e3500000 	cmp	r0, #0
4000d748:	0a000002 	beq	4000d758 <_tx_mutex_put+0x46c>
4000d74c:	e594001c 	ldr	r0, [r4, #28]
4000d750:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d754:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d758:	e121f005 	msr	CPSR_c, r5
4000d75c:	e3580000 	cmp	r8, #0
4000d760:	0a000006 	beq	4000d780 <_tx_mutex_put+0x494>
4000d764:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d768:	e1500009 	cmp	r0, r9
4000d76c:	0a000003 	beq	4000d780 <_tx_mutex_put+0x494>
4000d770:	e1a0200a 	mov	r2, sl
4000d774:	e1a01009 	mov	r1, r9
4000d778:	e1a00008 	mov	r0, r8
4000d77c:	ebfffeb8 	bl	4000d264 <_tx_mutex_priority_change>
4000d780:	e1a00007 	mov	r0, r7
4000d784:	eb0006ee 	bl	4000f344 <_tx_thread_system_resume>
4000d788:	e3a00000 	mov	r0, #0
4000d78c:	eaffff22 	b	4000d41c <_tx_mutex_put+0x130>
4000d790:	e121f005 	msr	CPSR_c, r5
4000d794:	e3a0001e 	mov	r0, #30
4000d798:	eaffff1f 	b	4000d41c <_tx_mutex_put+0x130>
4000d79c:	40030ebc 	.word	0x40030ebc
4000d7a0:	40030ec0 	.word	0x40030ec0
4000d7a4:	40030e48 	.word	0x40030e48
4000d7a8:	40030e50 	.word	0x40030e50
4000d7ac:	f0f0f0f0 	.word	0xf0f0f0f0
4000d7b0:	40030eb8 	.word	0x40030eb8
4000d7b4:	40030eb4 	.word	0x40030eb4
4000d7b8:	40030ea8 	.word	0x40030ea8
4000d7bc:	40030e6c 	.word	0x40030e6c

4000d7c0 <_tx_queue_create>:
4000d7c0:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d7c4:	e1a04000 	mov	r4, r0
4000d7c8:	e1a05001 	mov	r5, r1
4000d7cc:	e1a06002 	mov	r6, r2
4000d7d0:	e1a07003 	mov	r7, r3
4000d7d4:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d7d8:	e3a0103c 	mov	r1, #60	; 0x3c
4000d7dc:	e1a00004 	mov	r0, r4
4000d7e0:	eb001792 	bl	40013630 <__aeabi_memclr4>
4000d7e4:	e5845004 	str	r5, [r4, #4]
4000d7e8:	e5846008 	str	r6, [r4, #8]
4000d7ec:	e1a01106 	lsl	r1, r6, #2
4000d7f0:	e1a00008 	mov	r0, r8
4000d7f4:	eb000ca6 	bl	40010a94 <__aeabi_uidivmod>
4000d7f8:	e1a0b000 	mov	fp, r0
4000d7fc:	e000069b 	mul	r0, fp, r6
4000d800:	e58d0004 	str	r0, [sp, #4]
4000d804:	e5847018 	str	r7, [r4, #24]
4000d808:	e59d0004 	ldr	r0, [sp, #4]
4000d80c:	e0870100 	add	r0, r7, r0, lsl #2
4000d810:	e584001c 	str	r0, [r4, #28]
4000d814:	e5847020 	str	r7, [r4, #32]
4000d818:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d81c:	e584b014 	str	fp, [r4, #20]
4000d820:	e584b00c 	str	fp, [r4, #12]
4000d824:	e10f9000 	mrs	r9, CPSR
4000d828:	e3890080 	orr	r0, r9, #128	; 0x80
4000d82c:	e58d0008 	str	r0, [sp, #8]
4000d830:	e59d0008 	ldr	r0, [sp, #8]
4000d834:	e121f000 	msr	CPSR_c, r0
4000d838:	e59f0160 	ldr	r0, [pc, #352]	; 4000d9a0 <_tx_queue_create+0x1e0>
4000d83c:	e5840000 	str	r0, [r4]
4000d840:	e59f015c 	ldr	r0, [pc, #348]	; 4000d9a4 <_tx_queue_create+0x1e4>
4000d844:	e5900000 	ldr	r0, [r0]
4000d848:	e3500000 	cmp	r0, #0
4000d84c:	0a00000b 	beq	4000d880 <_tx_queue_create+0xc0>
4000d850:	e59f014c 	ldr	r0, [pc, #332]	; 4000d9a4 <_tx_queue_create+0x1e4>
4000d854:	e5900000 	ldr	r0, [r0]
4000d858:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d85c:	e59f0140 	ldr	r0, [pc, #320]	; 4000d9a4 <_tx_queue_create+0x1e4>
4000d860:	e5900000 	ldr	r0, [r0]
4000d864:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d868:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d86c:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d870:	e59f012c 	ldr	r0, [pc, #300]	; 4000d9a4 <_tx_queue_create+0x1e4>
4000d874:	e5900000 	ldr	r0, [r0]
4000d878:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d87c:	ea000003 	b	4000d890 <_tx_queue_create+0xd0>
4000d880:	e59f011c 	ldr	r0, [pc, #284]	; 4000d9a4 <_tx_queue_create+0x1e4>
4000d884:	e5804000 	str	r4, [r0]
4000d888:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d88c:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d890:	e59f0110 	ldr	r0, [pc, #272]	; 4000d9a8 <_tx_queue_create+0x1e8>
4000d894:	e5900000 	ldr	r0, [r0]
4000d898:	e2800001 	add	r0, r0, #1
4000d89c:	e59f1104 	ldr	r1, [pc, #260]	; 4000d9a8 <_tx_queue_create+0x1e8>
4000d8a0:	e5810000 	str	r0, [r1]
4000d8a4:	e3a03000 	mov	r3, #0
4000d8a8:	e58d3000 	str	r3, [sp]
4000d8ac:	e1a03008 	mov	r3, r8
4000d8b0:	e1a02005 	mov	r2, r5
4000d8b4:	e1a01004 	mov	r1, r4
4000d8b8:	e3a00003 	mov	r0, #3
4000d8bc:	eb0009f6 	bl	4001009c <_tx_trace_object_register>
4000d8c0:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d9ac <_tx_queue_create+0x1ec>
4000d8c4:	e5910000 	ldr	r0, [r1]
4000d8c8:	e3500000 	cmp	r0, #0
4000d8cc:	0a000030 	beq	4000d994 <_tx_queue_create+0x1d4>
4000d8d0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d9b0 <_tx_queue_create+0x1f0>
4000d8d4:	e5911000 	ldr	r1, [r1]
4000d8d8:	e2811001 	add	r1, r1, #1
4000d8dc:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d9b0 <_tx_queue_create+0x1f0>
4000d8e0:	e5821000 	str	r1, [r2]
4000d8e4:	e580100c 	str	r1, [r0, #12]
4000d8e8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d9b4 <_tx_queue_create+0x1f4>
4000d8ec:	e5911000 	ldr	r1, [r1]
4000d8f0:	e3510000 	cmp	r1, #0
4000d8f4:	1a000006 	bne	4000d914 <_tx_queue_create+0x154>
4000d8f8:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d9b8 <_tx_queue_create+0x1f8>
4000d8fc:	e5911000 	ldr	r1, [r1]
4000d900:	e5801000 	str	r1, [r0]
4000d904:	e5901000 	ldr	r1, [r0]
4000d908:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d90c:	e5801004 	str	r1, [r0, #4]
4000d910:	ea00000d 	b	4000d94c <_tx_queue_create+0x18c>
4000d914:	e59f1098 	ldr	r1, [pc, #152]	; 4000d9b4 <_tx_queue_create+0x1f4>
4000d918:	e5911000 	ldr	r1, [r1]
4000d91c:	e59f2098 	ldr	r2, [pc, #152]	; 4000d9bc <_tx_queue_create+0x1fc>
4000d920:	e1510002 	cmp	r1, r2
4000d924:	2a000004 	bcs	4000d93c <_tx_queue_create+0x17c>
4000d928:	e3e01000 	mvn	r1, #0
4000d92c:	e5801000 	str	r1, [r0]
4000d930:	e3a01000 	mov	r1, #0
4000d934:	e5801004 	str	r1, [r0, #4]
4000d938:	ea000003 	b	4000d94c <_tx_queue_create+0x18c>
4000d93c:	e59f1078 	ldr	r1, [pc, #120]	; 4000d9bc <_tx_queue_create+0x1fc>
4000d940:	e5801000 	str	r1, [r0]
4000d944:	e3a01000 	mov	r1, #0
4000d948:	e5801004 	str	r1, [r0, #4]
4000d94c:	e3a0103c 	mov	r1, #60	; 0x3c
4000d950:	e5801008 	str	r1, [r0, #8]
4000d954:	e5804010 	str	r4, [r0, #16]
4000d958:	e5806014 	str	r6, [r0, #20]
4000d95c:	e5807018 	str	r7, [r0, #24]
4000d960:	e580801c 	str	r8, [r0, #28]
4000d964:	e2800020 	add	r0, r0, #32
4000d968:	e59f1050 	ldr	r1, [pc, #80]	; 4000d9c0 <_tx_queue_create+0x200>
4000d96c:	e5911000 	ldr	r1, [r1]
4000d970:	e1500001 	cmp	r0, r1
4000d974:	3a000001 	bcc	4000d980 <_tx_queue_create+0x1c0>
4000d978:	e59f1044 	ldr	r1, [pc, #68]	; 4000d9c4 <_tx_queue_create+0x204>
4000d97c:	e5910000 	ldr	r0, [r1]
4000d980:	e59f1024 	ldr	r1, [pc, #36]	; 4000d9ac <_tx_queue_create+0x1ec>
4000d984:	e5810000 	str	r0, [r1]
4000d988:	e59f1038 	ldr	r1, [pc, #56]	; 4000d9c8 <_tx_queue_create+0x208>
4000d98c:	e5911000 	ldr	r1, [r1]
4000d990:	e5810020 	str	r0, [r1, #32]
4000d994:	e121f009 	msr	CPSR_c, r9
4000d998:	e3a00000 	mov	r0, #0
4000d99c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d9a0:	51554555 	.word	0x51554555
4000d9a4:	40030ecc 	.word	0x40030ecc
4000d9a8:	40030ed0 	.word	0x40030ed0
4000d9ac:	40030ebc 	.word	0x40030ebc
4000d9b0:	40030ec0 	.word	0x40030ec0
4000d9b4:	40030e48 	.word	0x40030e48
4000d9b8:	40030e50 	.word	0x40030e50
4000d9bc:	f0f0f0f0 	.word	0xf0f0f0f0
4000d9c0:	40030eb8 	.word	0x40030eb8
4000d9c4:	40030eb4 	.word	0x40030eb4
4000d9c8:	40030ea8 	.word	0x40030ea8

4000d9cc <_tx_queue_front_send>:
4000d9cc:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d9d0:	e1a04000 	mov	r4, r0
4000d9d4:	e1a05001 	mov	r5, r1
4000d9d8:	e1a06002 	mov	r6, r2
4000d9dc:	e10f7000 	mrs	r7, CPSR
4000d9e0:	e3870080 	orr	r0, r7, #128	; 0x80
4000d9e4:	e58d0004 	str	r0, [sp, #4]
4000d9e8:	e59d0004 	ldr	r0, [sp, #4]
4000d9ec:	e121f000 	msr	CPSR_c, r0
4000d9f0:	e59f1368 	ldr	r1, [pc, #872]	; 4000dd60 <_tx_queue_front_send+0x394>
4000d9f4:	e5910000 	ldr	r0, [r1]
4000d9f8:	e3500000 	cmp	r0, #0
4000d9fc:	0a000031 	beq	4000dac8 <_tx_queue_front_send+0xfc>
4000da00:	e59f135c 	ldr	r1, [pc, #860]	; 4000dd64 <_tx_queue_front_send+0x398>
4000da04:	e5911000 	ldr	r1, [r1]
4000da08:	e2811001 	add	r1, r1, #1
4000da0c:	e59f2350 	ldr	r2, [pc, #848]	; 4000dd64 <_tx_queue_front_send+0x398>
4000da10:	e5821000 	str	r1, [r2]
4000da14:	e580100c 	str	r1, [r0, #12]
4000da18:	e59f1348 	ldr	r1, [pc, #840]	; 4000dd68 <_tx_queue_front_send+0x39c>
4000da1c:	e5911000 	ldr	r1, [r1]
4000da20:	e3510000 	cmp	r1, #0
4000da24:	1a000006 	bne	4000da44 <_tx_queue_front_send+0x78>
4000da28:	e59f133c 	ldr	r1, [pc, #828]	; 4000dd6c <_tx_queue_front_send+0x3a0>
4000da2c:	e5911000 	ldr	r1, [r1]
4000da30:	e5801000 	str	r1, [r0]
4000da34:	e5901000 	ldr	r1, [r0]
4000da38:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000da3c:	e5801004 	str	r1, [r0, #4]
4000da40:	ea00000d 	b	4000da7c <_tx_queue_front_send+0xb0>
4000da44:	e59f131c 	ldr	r1, [pc, #796]	; 4000dd68 <_tx_queue_front_send+0x39c>
4000da48:	e5911000 	ldr	r1, [r1]
4000da4c:	e59f231c 	ldr	r2, [pc, #796]	; 4000dd70 <_tx_queue_front_send+0x3a4>
4000da50:	e1510002 	cmp	r1, r2
4000da54:	2a000004 	bcs	4000da6c <_tx_queue_front_send+0xa0>
4000da58:	e3e01000 	mvn	r1, #0
4000da5c:	e5801000 	str	r1, [r0]
4000da60:	e3a01000 	mov	r1, #0
4000da64:	e5801004 	str	r1, [r0, #4]
4000da68:	ea000003 	b	4000da7c <_tx_queue_front_send+0xb0>
4000da6c:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dd70 <_tx_queue_front_send+0x3a4>
4000da70:	e5801000 	str	r1, [r0]
4000da74:	e3a01000 	mov	r1, #0
4000da78:	e5801004 	str	r1, [r0, #4]
4000da7c:	e3a0103f 	mov	r1, #63	; 0x3f
4000da80:	e5801008 	str	r1, [r0, #8]
4000da84:	e5804010 	str	r4, [r0, #16]
4000da88:	e5805014 	str	r5, [r0, #20]
4000da8c:	e5806018 	str	r6, [r0, #24]
4000da90:	e5941010 	ldr	r1, [r4, #16]
4000da94:	e580101c 	str	r1, [r0, #28]
4000da98:	e2800020 	add	r0, r0, #32
4000da9c:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dd74 <_tx_queue_front_send+0x3a8>
4000daa0:	e5911000 	ldr	r1, [r1]
4000daa4:	e1500001 	cmp	r0, r1
4000daa8:	3a000001 	bcc	4000dab4 <_tx_queue_front_send+0xe8>
4000daac:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dd78 <_tx_queue_front_send+0x3ac>
4000dab0:	e5910000 	ldr	r0, [r1]
4000dab4:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dd60 <_tx_queue_front_send+0x394>
4000dab8:	e5810000 	str	r0, [r1]
4000dabc:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dd7c <_tx_queue_front_send+0x3b0>
4000dac0:	e5911000 	ldr	r1, [r1]
4000dac4:	e5810020 	str	r0, [r1, #32]
4000dac8:	e5940014 	ldr	r0, [r4, #20]
4000dacc:	e3500000 	cmp	r0, #0
4000dad0:	0a000064 	beq	4000dc68 <_tx_queue_front_send+0x29c>
4000dad4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dad8:	e3500000 	cmp	r0, #0
4000dadc:	1a00002b 	bne	4000db90 <_tx_queue_front_send+0x1c4>
4000dae0:	e5940020 	ldr	r0, [r4, #32]
4000dae4:	e5941018 	ldr	r1, [r4, #24]
4000dae8:	e1500001 	cmp	r0, r1
4000daec:	1a000004 	bne	4000db04 <_tx_queue_front_send+0x138>
4000daf0:	e594001c 	ldr	r0, [r4, #28]
4000daf4:	e5941008 	ldr	r1, [r4, #8]
4000daf8:	e0400101 	sub	r0, r0, r1, lsl #2
4000dafc:	e5840020 	str	r0, [r4, #32]
4000db00:	ea000003 	b	4000db14 <_tx_queue_front_send+0x148>
4000db04:	e5940020 	ldr	r0, [r4, #32]
4000db08:	e5941008 	ldr	r1, [r4, #8]
4000db0c:	e0400101 	sub	r0, r0, r1, lsl #2
4000db10:	e5840020 	str	r0, [r4, #32]
4000db14:	e5940014 	ldr	r0, [r4, #20]
4000db18:	e2400001 	sub	r0, r0, #1
4000db1c:	e5840014 	str	r0, [r4, #20]
4000db20:	e5940010 	ldr	r0, [r4, #16]
4000db24:	e2800001 	add	r0, r0, #1
4000db28:	e5840010 	str	r0, [r4, #16]
4000db2c:	e1a09005 	mov	r9, r5
4000db30:	e594a020 	ldr	sl, [r4, #32]
4000db34:	e594b008 	ldr	fp, [r4, #8]
4000db38:	e1a00000 	nop			; (mov r0, r0)
4000db3c:	e5990000 	ldr	r0, [r9]
4000db40:	e58a0000 	str	r0, [sl]
4000db44:	e24bb001 	sub	fp, fp, #1
4000db48:	e35b0000 	cmp	fp, #0
4000db4c:	1a000000 	bne	4000db54 <_tx_queue_front_send+0x188>
4000db50:	ea000002 	b	4000db60 <_tx_queue_front_send+0x194>
4000db54:	e28aa004 	add	sl, sl, #4
4000db58:	e2899004 	add	r9, r9, #4
4000db5c:	eafffff6 	b	4000db3c <_tx_queue_front_send+0x170>
4000db60:	e1a00000 	nop			; (mov r0, r0)
4000db64:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db68:	e58d0000 	str	r0, [sp]
4000db6c:	e121f007 	msr	CPSR_c, r7
4000db70:	e59d0000 	ldr	r0, [sp]
4000db74:	e3500000 	cmp	r0, #0
4000db78:	0a000002 	beq	4000db88 <_tx_queue_front_send+0x1bc>
4000db7c:	e1a00004 	mov	r0, r4
4000db80:	e59d1000 	ldr	r1, [sp]
4000db84:	e12fff31 	blx	r1
4000db88:	e3a00000 	mov	r0, #0
4000db8c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000db90:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000db94:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000db98:	e1500008 	cmp	r0, r8
4000db9c:	1a000002 	bne	4000dbac <_tx_queue_front_send+0x1e0>
4000dba0:	e3a00000 	mov	r0, #0
4000dba4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dba8:	ea000007 	b	4000dbcc <_tx_queue_front_send+0x200>
4000dbac:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dbb0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dbb4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dbb8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dbbc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dbc0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dbc4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dbc8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dbcc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dbd0:	e2400001 	sub	r0, r0, #1
4000dbd4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dbd8:	e3a00000 	mov	r0, #0
4000dbdc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dbe0:	e59f0198 	ldr	r0, [pc, #408]	; 4000dd80 <_tx_queue_front_send+0x3b4>
4000dbe4:	e5900000 	ldr	r0, [r0]
4000dbe8:	e2800001 	add	r0, r0, #1
4000dbec:	e59f118c 	ldr	r1, [pc, #396]	; 4000dd80 <_tx_queue_front_send+0x3b4>
4000dbf0:	e5810000 	str	r0, [r1]
4000dbf4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dbf8:	e58d0000 	str	r0, [sp]
4000dbfc:	e121f007 	msr	CPSR_c, r7
4000dc00:	e1a09005 	mov	r9, r5
4000dc04:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000dc08:	e594b008 	ldr	fp, [r4, #8]
4000dc0c:	e1a00000 	nop			; (mov r0, r0)
4000dc10:	e5990000 	ldr	r0, [r9]
4000dc14:	e58a0000 	str	r0, [sl]
4000dc18:	e24bb001 	sub	fp, fp, #1
4000dc1c:	e35b0000 	cmp	fp, #0
4000dc20:	1a000000 	bne	4000dc28 <_tx_queue_front_send+0x25c>
4000dc24:	ea000002 	b	4000dc34 <_tx_queue_front_send+0x268>
4000dc28:	e28aa004 	add	sl, sl, #4
4000dc2c:	e2899004 	add	r9, r9, #4
4000dc30:	eafffff6 	b	4000dc10 <_tx_queue_front_send+0x244>
4000dc34:	e1a00000 	nop			; (mov r0, r0)
4000dc38:	e3a00000 	mov	r0, #0
4000dc3c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dc40:	e1a00008 	mov	r0, r8
4000dc44:	eb0005be 	bl	4000f344 <_tx_thread_system_resume>
4000dc48:	e59d0000 	ldr	r0, [sp]
4000dc4c:	e3500000 	cmp	r0, #0
4000dc50:	0a000002 	beq	4000dc60 <_tx_queue_front_send+0x294>
4000dc54:	e1a00004 	mov	r0, r4
4000dc58:	e59d1000 	ldr	r1, [sp]
4000dc5c:	e12fff31 	blx	r1
4000dc60:	e3a00000 	mov	r0, #0
4000dc64:	eaffffc8 	b	4000db8c <_tx_queue_front_send+0x1c0>
4000dc68:	e3560000 	cmp	r6, #0
4000dc6c:	0a000038 	beq	4000dd54 <_tx_queue_front_send+0x388>
4000dc70:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dd6c <_tx_queue_front_send+0x3a0>
4000dc74:	e5908000 	ldr	r8, [r0]
4000dc78:	e59f0104 	ldr	r0, [pc, #260]	; 4000dd84 <_tx_queue_front_send+0x3b8>
4000dc7c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dc80:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000dc84:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000dc88:	e3a00001 	mov	r0, #1
4000dc8c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000dc90:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc94:	e3500000 	cmp	r0, #0
4000dc98:	0a00000b 	beq	4000dccc <_tx_queue_front_send+0x300>
4000dc9c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dca0:	e5880070 	str	r0, [r8, #112]	; 0x70
4000dca4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dca8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dcac:	e5880074 	str	r0, [r8, #116]	; 0x74
4000dcb0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dcb4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dcb8:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dcbc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dcc0:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dcc4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dcc8:	ea000002 	b	4000dcd8 <_tx_queue_front_send+0x30c>
4000dccc:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dcd0:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dcd4:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dcd8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dcdc:	e2800001 	add	r0, r0, #1
4000dce0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dce4:	e3a00005 	mov	r0, #5
4000dce8:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dcec:	e3a00001 	mov	r0, #1
4000dcf0:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dcf4:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dcf8:	e59f0080 	ldr	r0, [pc, #128]	; 4000dd80 <_tx_queue_front_send+0x3b4>
4000dcfc:	e5900000 	ldr	r0, [r0]
4000dd00:	e2800001 	add	r0, r0, #1
4000dd04:	e59f1074 	ldr	r1, [pc, #116]	; 4000dd80 <_tx_queue_front_send+0x3b4>
4000dd08:	e5810000 	str	r0, [r1]
4000dd0c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dd10:	e58d0000 	str	r0, [sp]
4000dd14:	e121f007 	msr	CPSR_c, r7
4000dd18:	e1a00008 	mov	r0, r8
4000dd1c:	ebffebe1 	bl	40008ca8 <_tx_thread_system_suspend>
4000dd20:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dd24:	e58d0000 	str	r0, [sp]
4000dd28:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dd2c:	e3500000 	cmp	r0, #0
4000dd30:	1a000005 	bne	4000dd4c <_tx_queue_front_send+0x380>
4000dd34:	e59d0000 	ldr	r0, [sp]
4000dd38:	e3500000 	cmp	r0, #0
4000dd3c:	0a000002 	beq	4000dd4c <_tx_queue_front_send+0x380>
4000dd40:	e1a00004 	mov	r0, r4
4000dd44:	e59d1000 	ldr	r1, [sp]
4000dd48:	e12fff31 	blx	r1
4000dd4c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dd50:	eaffff8d 	b	4000db8c <_tx_queue_front_send+0x1c0>
4000dd54:	e121f007 	msr	CPSR_c, r7
4000dd58:	e3a0000b 	mov	r0, #11
4000dd5c:	eaffff8a 	b	4000db8c <_tx_queue_front_send+0x1c0>
4000dd60:	40030ebc 	.word	0x40030ebc
4000dd64:	40030ec0 	.word	0x40030ec0
4000dd68:	40030e48 	.word	0x40030e48
4000dd6c:	40030e50 	.word	0x40030e50
4000dd70:	f0f0f0f0 	.word	0xf0f0f0f0
4000dd74:	40030eb8 	.word	0x40030eb8
4000dd78:	40030eb4 	.word	0x40030eb4
4000dd7c:	40030ea8 	.word	0x40030ea8
4000dd80:	40030e6c 	.word	0x40030e6c
4000dd84:	40010768 	.word	0x40010768

4000dd88 <_tx_queue_receive>:
4000dd88:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dd8c:	e1a04000 	mov	r4, r0
4000dd90:	e1a05001 	mov	r5, r1
4000dd94:	e1a06002 	mov	r6, r2
4000dd98:	e10f7000 	mrs	r7, CPSR
4000dd9c:	e3870080 	orr	r0, r7, #128	; 0x80
4000dda0:	e58d0000 	str	r0, [sp]
4000dda4:	e59d0000 	ldr	r0, [sp]
4000dda8:	e121f000 	msr	CPSR_c, r0
4000ddac:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e1c0 <_tx_queue_receive+0x438>
4000ddb0:	e5910000 	ldr	r0, [r1]
4000ddb4:	e3500000 	cmp	r0, #0
4000ddb8:	0a000031 	beq	4000de84 <_tx_queue_receive+0xfc>
4000ddbc:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e1c4 <_tx_queue_receive+0x43c>
4000ddc0:	e5911000 	ldr	r1, [r1]
4000ddc4:	e2811001 	add	r1, r1, #1
4000ddc8:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e1c4 <_tx_queue_receive+0x43c>
4000ddcc:	e5821000 	str	r1, [r2]
4000ddd0:	e580100c 	str	r1, [r0, #12]
4000ddd4:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e1c8 <_tx_queue_receive+0x440>
4000ddd8:	e5911000 	ldr	r1, [r1]
4000dddc:	e3510000 	cmp	r1, #0
4000dde0:	1a000006 	bne	4000de00 <_tx_queue_receive+0x78>
4000dde4:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e1cc <_tx_queue_receive+0x444>
4000dde8:	e5911000 	ldr	r1, [r1]
4000ddec:	e5801000 	str	r1, [r0]
4000ddf0:	e5901000 	ldr	r1, [r0]
4000ddf4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ddf8:	e5801004 	str	r1, [r0, #4]
4000ddfc:	ea00000d 	b	4000de38 <_tx_queue_receive+0xb0>
4000de00:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e1c8 <_tx_queue_receive+0x440>
4000de04:	e5911000 	ldr	r1, [r1]
4000de08:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e1d0 <_tx_queue_receive+0x448>
4000de0c:	e1510002 	cmp	r1, r2
4000de10:	2a000004 	bcs	4000de28 <_tx_queue_receive+0xa0>
4000de14:	e3e01000 	mvn	r1, #0
4000de18:	e5801000 	str	r1, [r0]
4000de1c:	e3a01000 	mov	r1, #0
4000de20:	e5801004 	str	r1, [r0, #4]
4000de24:	ea000003 	b	4000de38 <_tx_queue_receive+0xb0>
4000de28:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e1d0 <_tx_queue_receive+0x448>
4000de2c:	e5801000 	str	r1, [r0]
4000de30:	e3a01000 	mov	r1, #0
4000de34:	e5801004 	str	r1, [r0, #4]
4000de38:	e3a01044 	mov	r1, #68	; 0x44
4000de3c:	e5801008 	str	r1, [r0, #8]
4000de40:	e5804010 	str	r4, [r0, #16]
4000de44:	e5805014 	str	r5, [r0, #20]
4000de48:	e5806018 	str	r6, [r0, #24]
4000de4c:	e5941010 	ldr	r1, [r4, #16]
4000de50:	e580101c 	str	r1, [r0, #28]
4000de54:	e2800020 	add	r0, r0, #32
4000de58:	e59f1374 	ldr	r1, [pc, #884]	; 4000e1d4 <_tx_queue_receive+0x44c>
4000de5c:	e5911000 	ldr	r1, [r1]
4000de60:	e1500001 	cmp	r0, r1
4000de64:	3a000001 	bcc	4000de70 <_tx_queue_receive+0xe8>
4000de68:	e59f1368 	ldr	r1, [pc, #872]	; 4000e1d8 <_tx_queue_receive+0x450>
4000de6c:	e5910000 	ldr	r0, [r1]
4000de70:	e59f1348 	ldr	r1, [pc, #840]	; 4000e1c0 <_tx_queue_receive+0x438>
4000de74:	e5810000 	str	r0, [r1]
4000de78:	e59f135c 	ldr	r1, [pc, #860]	; 4000e1dc <_tx_queue_receive+0x454>
4000de7c:	e5911000 	ldr	r1, [r1]
4000de80:	e5810020 	str	r0, [r1, #32]
4000de84:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000de88:	e3580000 	cmp	r8, #0
4000de8c:	0a00002f 	beq	4000df50 <_tx_queue_receive+0x1c8>
4000de90:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000de94:	e3500000 	cmp	r0, #0
4000de98:	0a00002c 	beq	4000df50 <_tx_queue_receive+0x1c8>
4000de9c:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000dea0:	e1a0a005 	mov	sl, r5
4000dea4:	e594b008 	ldr	fp, [r4, #8]
4000dea8:	e1a00000 	nop			; (mov r0, r0)
4000deac:	e5990000 	ldr	r0, [r9]
4000deb0:	e58a0000 	str	r0, [sl]
4000deb4:	e24bb001 	sub	fp, fp, #1
4000deb8:	e35b0000 	cmp	fp, #0
4000debc:	1a000000 	bne	4000dec4 <_tx_queue_receive+0x13c>
4000dec0:	ea000002 	b	4000ded0 <_tx_queue_receive+0x148>
4000dec4:	e28aa004 	add	sl, sl, #4
4000dec8:	e2899004 	add	r9, r9, #4
4000decc:	eafffff6 	b	4000deac <_tx_queue_receive+0x124>
4000ded0:	e1a00000 	nop			; (mov r0, r0)
4000ded4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000ded8:	e1500008 	cmp	r0, r8
4000dedc:	1a000002 	bne	4000deec <_tx_queue_receive+0x164>
4000dee0:	e3a00000 	mov	r0, #0
4000dee4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dee8:	ea000007 	b	4000df0c <_tx_queue_receive+0x184>
4000deec:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000def0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000def4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000def8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000defc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000df00:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df04:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000df08:	e5810070 	str	r0, [r1, #112]	; 0x70
4000df0c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000df10:	e2400001 	sub	r0, r0, #1
4000df14:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000df18:	e3a00000 	mov	r0, #0
4000df1c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df20:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e1e0 <_tx_queue_receive+0x458>
4000df24:	e5900000 	ldr	r0, [r0]
4000df28:	e2800001 	add	r0, r0, #1
4000df2c:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e1e0 <_tx_queue_receive+0x458>
4000df30:	e5810000 	str	r0, [r1]
4000df34:	e121f007 	msr	CPSR_c, r7
4000df38:	e3a00000 	mov	r0, #0
4000df3c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000df40:	e1a00008 	mov	r0, r8
4000df44:	eb0004fe 	bl	4000f344 <_tx_thread_system_resume>
4000df48:	e3a00000 	mov	r0, #0
4000df4c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000df50:	e5940010 	ldr	r0, [r4, #16]
4000df54:	e3500000 	cmp	r0, #0
4000df58:	0a000068 	beq	4000e100 <_tx_queue_receive+0x378>
4000df5c:	e5949020 	ldr	r9, [r4, #32]
4000df60:	e1a0a005 	mov	sl, r5
4000df64:	e594b008 	ldr	fp, [r4, #8]
4000df68:	e1a00000 	nop			; (mov r0, r0)
4000df6c:	e5990000 	ldr	r0, [r9]
4000df70:	e58a0000 	str	r0, [sl]
4000df74:	e24bb001 	sub	fp, fp, #1
4000df78:	e35b0000 	cmp	fp, #0
4000df7c:	1a000000 	bne	4000df84 <_tx_queue_receive+0x1fc>
4000df80:	ea000002 	b	4000df90 <_tx_queue_receive+0x208>
4000df84:	e28aa004 	add	sl, sl, #4
4000df88:	e2899004 	add	r9, r9, #4
4000df8c:	eafffff6 	b	4000df6c <_tx_queue_receive+0x1e4>
4000df90:	e1a00000 	nop			; (mov r0, r0)
4000df94:	e5940020 	ldr	r0, [r4, #32]
4000df98:	e5941008 	ldr	r1, [r4, #8]
4000df9c:	e0800101 	add	r0, r0, r1, lsl #2
4000dfa0:	e5840020 	str	r0, [r4, #32]
4000dfa4:	e5940020 	ldr	r0, [r4, #32]
4000dfa8:	e594101c 	ldr	r1, [r4, #28]
4000dfac:	e1500001 	cmp	r0, r1
4000dfb0:	3a000001 	bcc	4000dfbc <_tx_queue_receive+0x234>
4000dfb4:	e5940018 	ldr	r0, [r4, #24]
4000dfb8:	e5840020 	str	r0, [r4, #32]
4000dfbc:	e3580000 	cmp	r8, #0
4000dfc0:	1a000008 	bne	4000dfe8 <_tx_queue_receive+0x260>
4000dfc4:	e5940014 	ldr	r0, [r4, #20]
4000dfc8:	e2800001 	add	r0, r0, #1
4000dfcc:	e5840014 	str	r0, [r4, #20]
4000dfd0:	e5940010 	ldr	r0, [r4, #16]
4000dfd4:	e2400001 	sub	r0, r0, #1
4000dfd8:	e5840010 	str	r0, [r4, #16]
4000dfdc:	e121f007 	msr	CPSR_c, r7
4000dfe0:	e3a00000 	mov	r0, #0
4000dfe4:	eaffffd8 	b	4000df4c <_tx_queue_receive+0x1c4>
4000dfe8:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e1e0 <_tx_queue_receive+0x458>
4000dfec:	e5900000 	ldr	r0, [r0]
4000dff0:	e2800001 	add	r0, r0, #1
4000dff4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e1e0 <_tx_queue_receive+0x458>
4000dff8:	e5810000 	str	r0, [r1]
4000dffc:	e121f007 	msr	CPSR_c, r7
4000e000:	e10f7000 	mrs	r7, CPSR
4000e004:	e3870080 	orr	r0, r7, #128	; 0x80
4000e008:	e58d0000 	str	r0, [sp]
4000e00c:	e59d0000 	ldr	r0, [sp]
4000e010:	e121f000 	msr	CPSR_c, r0
4000e014:	e2810000 	add	r0, r1, #0
4000e018:	e5900000 	ldr	r0, [r0]
4000e01c:	e2400001 	sub	r0, r0, #1
4000e020:	e5810000 	str	r0, [r1]
4000e024:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e028:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e02c:	e594b008 	ldr	fp, [r4, #8]
4000e030:	e1a00000 	nop			; (mov r0, r0)
4000e034:	e5990000 	ldr	r0, [r9]
4000e038:	e58a0000 	str	r0, [sl]
4000e03c:	e24bb001 	sub	fp, fp, #1
4000e040:	e35b0000 	cmp	fp, #0
4000e044:	1a000000 	bne	4000e04c <_tx_queue_receive+0x2c4>
4000e048:	ea000002 	b	4000e058 <_tx_queue_receive+0x2d0>
4000e04c:	e28aa004 	add	sl, sl, #4
4000e050:	e2899004 	add	r9, r9, #4
4000e054:	eafffff6 	b	4000e034 <_tx_queue_receive+0x2ac>
4000e058:	e1a00000 	nop			; (mov r0, r0)
4000e05c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e060:	e5941008 	ldr	r1, [r4, #8]
4000e064:	e0800101 	add	r0, r0, r1, lsl #2
4000e068:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e06c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e070:	e594101c 	ldr	r1, [r4, #28]
4000e074:	e1500001 	cmp	r0, r1
4000e078:	3a000001 	bcc	4000e084 <_tx_queue_receive+0x2fc>
4000e07c:	e5940018 	ldr	r0, [r4, #24]
4000e080:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e084:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e088:	e1500008 	cmp	r0, r8
4000e08c:	1a000002 	bne	4000e09c <_tx_queue_receive+0x314>
4000e090:	e3a00000 	mov	r0, #0
4000e094:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e098:	ea000007 	b	4000e0bc <_tx_queue_receive+0x334>
4000e09c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e0a0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e0a4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e0a8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e0ac:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e0b0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e0b4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e0b8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e0bc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e0c0:	e2400001 	sub	r0, r0, #1
4000e0c4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e0c8:	e3a00000 	mov	r0, #0
4000e0cc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e0d0:	e59f0108 	ldr	r0, [pc, #264]	; 4000e1e0 <_tx_queue_receive+0x458>
4000e0d4:	e5900000 	ldr	r0, [r0]
4000e0d8:	e2800001 	add	r0, r0, #1
4000e0dc:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e1e0 <_tx_queue_receive+0x458>
4000e0e0:	e5810000 	str	r0, [r1]
4000e0e4:	e121f007 	msr	CPSR_c, r7
4000e0e8:	e3a00000 	mov	r0, #0
4000e0ec:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e0f0:	e1a00008 	mov	r0, r8
4000e0f4:	eb000492 	bl	4000f344 <_tx_thread_system_resume>
4000e0f8:	e3a00000 	mov	r0, #0
4000e0fc:	eaffff92 	b	4000df4c <_tx_queue_receive+0x1c4>
4000e100:	e3560000 	cmp	r6, #0
4000e104:	0a00002a 	beq	4000e1b4 <_tx_queue_receive+0x42c>
4000e108:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e1cc <_tx_queue_receive+0x444>
4000e10c:	e5908000 	ldr	r8, [r0]
4000e110:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e1e4 <_tx_queue_receive+0x45c>
4000e114:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e118:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e11c:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e120:	e3a00000 	mov	r0, #0
4000e124:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e128:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e12c:	e3500000 	cmp	r0, #0
4000e130:	0a00000a 	beq	4000e160 <_tx_queue_receive+0x3d8>
4000e134:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e138:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e13c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e140:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e144:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e148:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e14c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e150:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e154:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e158:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e15c:	ea000002 	b	4000e16c <_tx_queue_receive+0x3e4>
4000e160:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e164:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e168:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e16c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e170:	e2800001 	add	r0, r0, #1
4000e174:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e178:	e3a00005 	mov	r0, #5
4000e17c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e180:	e3a00001 	mov	r0, #1
4000e184:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e188:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e18c:	e59f004c 	ldr	r0, [pc, #76]	; 4000e1e0 <_tx_queue_receive+0x458>
4000e190:	e5900000 	ldr	r0, [r0]
4000e194:	e2800001 	add	r0, r0, #1
4000e198:	e59f1040 	ldr	r1, [pc, #64]	; 4000e1e0 <_tx_queue_receive+0x458>
4000e19c:	e5810000 	str	r0, [r1]
4000e1a0:	e121f007 	msr	CPSR_c, r7
4000e1a4:	e1a00008 	mov	r0, r8
4000e1a8:	ebffeabe 	bl	40008ca8 <_tx_thread_system_suspend>
4000e1ac:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e1b0:	eaffff65 	b	4000df4c <_tx_queue_receive+0x1c4>
4000e1b4:	e121f007 	msr	CPSR_c, r7
4000e1b8:	e3a0000a 	mov	r0, #10
4000e1bc:	eaffff62 	b	4000df4c <_tx_queue_receive+0x1c4>
4000e1c0:	40030ebc 	.word	0x40030ebc
4000e1c4:	40030ec0 	.word	0x40030ec0
4000e1c8:	40030e48 	.word	0x40030e48
4000e1cc:	40030e50 	.word	0x40030e50
4000e1d0:	f0f0f0f0 	.word	0xf0f0f0f0
4000e1d4:	40030eb8 	.word	0x40030eb8
4000e1d8:	40030eb4 	.word	0x40030eb4
4000e1dc:	40030ea8 	.word	0x40030ea8
4000e1e0:	40030e6c 	.word	0x40030e6c
4000e1e4:	40010768 	.word	0x40010768

4000e1e8 <_tx_queue_send>:
4000e1e8:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e1ec:	e1a04000 	mov	r4, r0
4000e1f0:	e1a05001 	mov	r5, r1
4000e1f4:	e1a06002 	mov	r6, r2
4000e1f8:	e10f7000 	mrs	r7, CPSR
4000e1fc:	e3870080 	orr	r0, r7, #128	; 0x80
4000e200:	e58d0004 	str	r0, [sp, #4]
4000e204:	e59d0004 	ldr	r0, [sp, #4]
4000e208:	e121f000 	msr	CPSR_c, r0
4000e20c:	e59f1358 	ldr	r1, [pc, #856]	; 4000e56c <_tx_queue_send+0x384>
4000e210:	e5910000 	ldr	r0, [r1]
4000e214:	e3500000 	cmp	r0, #0
4000e218:	0a000031 	beq	4000e2e4 <_tx_queue_send+0xfc>
4000e21c:	e59f134c 	ldr	r1, [pc, #844]	; 4000e570 <_tx_queue_send+0x388>
4000e220:	e5911000 	ldr	r1, [r1]
4000e224:	e2811001 	add	r1, r1, #1
4000e228:	e59f2340 	ldr	r2, [pc, #832]	; 4000e570 <_tx_queue_send+0x388>
4000e22c:	e5821000 	str	r1, [r2]
4000e230:	e580100c 	str	r1, [r0, #12]
4000e234:	e59f1338 	ldr	r1, [pc, #824]	; 4000e574 <_tx_queue_send+0x38c>
4000e238:	e5911000 	ldr	r1, [r1]
4000e23c:	e3510000 	cmp	r1, #0
4000e240:	1a000006 	bne	4000e260 <_tx_queue_send+0x78>
4000e244:	e59f132c 	ldr	r1, [pc, #812]	; 4000e578 <_tx_queue_send+0x390>
4000e248:	e5911000 	ldr	r1, [r1]
4000e24c:	e5801000 	str	r1, [r0]
4000e250:	e5901000 	ldr	r1, [r0]
4000e254:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e258:	e5801004 	str	r1, [r0, #4]
4000e25c:	ea00000d 	b	4000e298 <_tx_queue_send+0xb0>
4000e260:	e59f130c 	ldr	r1, [pc, #780]	; 4000e574 <_tx_queue_send+0x38c>
4000e264:	e5911000 	ldr	r1, [r1]
4000e268:	e59f230c 	ldr	r2, [pc, #780]	; 4000e57c <_tx_queue_send+0x394>
4000e26c:	e1510002 	cmp	r1, r2
4000e270:	2a000004 	bcs	4000e288 <_tx_queue_send+0xa0>
4000e274:	e3e01000 	mvn	r1, #0
4000e278:	e5801000 	str	r1, [r0]
4000e27c:	e3a01000 	mov	r1, #0
4000e280:	e5801004 	str	r1, [r0, #4]
4000e284:	ea000003 	b	4000e298 <_tx_queue_send+0xb0>
4000e288:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e57c <_tx_queue_send+0x394>
4000e28c:	e5801000 	str	r1, [r0]
4000e290:	e3a01000 	mov	r1, #0
4000e294:	e5801004 	str	r1, [r0, #4]
4000e298:	e3a01045 	mov	r1, #69	; 0x45
4000e29c:	e5801008 	str	r1, [r0, #8]
4000e2a0:	e5804010 	str	r4, [r0, #16]
4000e2a4:	e5805014 	str	r5, [r0, #20]
4000e2a8:	e5806018 	str	r6, [r0, #24]
4000e2ac:	e5941010 	ldr	r1, [r4, #16]
4000e2b0:	e580101c 	str	r1, [r0, #28]
4000e2b4:	e2800020 	add	r0, r0, #32
4000e2b8:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e580 <_tx_queue_send+0x398>
4000e2bc:	e5911000 	ldr	r1, [r1]
4000e2c0:	e1500001 	cmp	r0, r1
4000e2c4:	3a000001 	bcc	4000e2d0 <_tx_queue_send+0xe8>
4000e2c8:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e584 <_tx_queue_send+0x39c>
4000e2cc:	e5910000 	ldr	r0, [r1]
4000e2d0:	e59f1294 	ldr	r1, [pc, #660]	; 4000e56c <_tx_queue_send+0x384>
4000e2d4:	e5810000 	str	r0, [r1]
4000e2d8:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e588 <_tx_queue_send+0x3a0>
4000e2dc:	e5911000 	ldr	r1, [r1]
4000e2e0:	e5810020 	str	r0, [r1, #32]
4000e2e4:	e5940014 	ldr	r0, [r4, #20]
4000e2e8:	e3500000 	cmp	r0, #0
4000e2ec:	0a000061 	beq	4000e478 <_tx_queue_send+0x290>
4000e2f0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2f4:	e3500000 	cmp	r0, #0
4000e2f8:	1a000028 	bne	4000e3a0 <_tx_queue_send+0x1b8>
4000e2fc:	e5940014 	ldr	r0, [r4, #20]
4000e300:	e2400001 	sub	r0, r0, #1
4000e304:	e5840014 	str	r0, [r4, #20]
4000e308:	e5940010 	ldr	r0, [r4, #16]
4000e30c:	e2800001 	add	r0, r0, #1
4000e310:	e5840010 	str	r0, [r4, #16]
4000e314:	e1a09005 	mov	r9, r5
4000e318:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e31c:	e594b008 	ldr	fp, [r4, #8]
4000e320:	e1a00000 	nop			; (mov r0, r0)
4000e324:	e5990000 	ldr	r0, [r9]
4000e328:	e58a0000 	str	r0, [sl]
4000e32c:	e24bb001 	sub	fp, fp, #1
4000e330:	e35b0000 	cmp	fp, #0
4000e334:	1a000000 	bne	4000e33c <_tx_queue_send+0x154>
4000e338:	ea000002 	b	4000e348 <_tx_queue_send+0x160>
4000e33c:	e28aa004 	add	sl, sl, #4
4000e340:	e2899004 	add	r9, r9, #4
4000e344:	eafffff6 	b	4000e324 <_tx_queue_send+0x13c>
4000e348:	e1a00000 	nop			; (mov r0, r0)
4000e34c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e350:	e5941008 	ldr	r1, [r4, #8]
4000e354:	e0800101 	add	r0, r0, r1, lsl #2
4000e358:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e35c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e360:	e594101c 	ldr	r1, [r4, #28]
4000e364:	e1500001 	cmp	r0, r1
4000e368:	3a000001 	bcc	4000e374 <_tx_queue_send+0x18c>
4000e36c:	e5940018 	ldr	r0, [r4, #24]
4000e370:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e374:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e378:	e58d0000 	str	r0, [sp]
4000e37c:	e121f007 	msr	CPSR_c, r7
4000e380:	e59d0000 	ldr	r0, [sp]
4000e384:	e3500000 	cmp	r0, #0
4000e388:	0a000002 	beq	4000e398 <_tx_queue_send+0x1b0>
4000e38c:	e1a00004 	mov	r0, r4
4000e390:	e59d1000 	ldr	r1, [sp]
4000e394:	e12fff31 	blx	r1
4000e398:	e3a00000 	mov	r0, #0
4000e39c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e3a0:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e3a4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e3a8:	e1500008 	cmp	r0, r8
4000e3ac:	1a000002 	bne	4000e3bc <_tx_queue_send+0x1d4>
4000e3b0:	e3a00000 	mov	r0, #0
4000e3b4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e3b8:	ea000007 	b	4000e3dc <_tx_queue_send+0x1f4>
4000e3bc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e3c0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e3c4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e3c8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e3cc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e3d0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e3d4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e3d8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e3dc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e3e0:	e2400001 	sub	r0, r0, #1
4000e3e4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e3e8:	e3a00000 	mov	r0, #0
4000e3ec:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e3f0:	e59f0194 	ldr	r0, [pc, #404]	; 4000e58c <_tx_queue_send+0x3a4>
4000e3f4:	e5900000 	ldr	r0, [r0]
4000e3f8:	e2800001 	add	r0, r0, #1
4000e3fc:	e59f1188 	ldr	r1, [pc, #392]	; 4000e58c <_tx_queue_send+0x3a4>
4000e400:	e5810000 	str	r0, [r1]
4000e404:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e408:	e58d0000 	str	r0, [sp]
4000e40c:	e121f007 	msr	CPSR_c, r7
4000e410:	e1a09005 	mov	r9, r5
4000e414:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e418:	e594b008 	ldr	fp, [r4, #8]
4000e41c:	e1a00000 	nop			; (mov r0, r0)
4000e420:	e5990000 	ldr	r0, [r9]
4000e424:	e58a0000 	str	r0, [sl]
4000e428:	e24bb001 	sub	fp, fp, #1
4000e42c:	e35b0000 	cmp	fp, #0
4000e430:	1a000000 	bne	4000e438 <_tx_queue_send+0x250>
4000e434:	ea000002 	b	4000e444 <_tx_queue_send+0x25c>
4000e438:	e28aa004 	add	sl, sl, #4
4000e43c:	e2899004 	add	r9, r9, #4
4000e440:	eafffff6 	b	4000e420 <_tx_queue_send+0x238>
4000e444:	e1a00000 	nop			; (mov r0, r0)
4000e448:	e3a00000 	mov	r0, #0
4000e44c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e450:	e1a00008 	mov	r0, r8
4000e454:	eb0003ba 	bl	4000f344 <_tx_thread_system_resume>
4000e458:	e59d0000 	ldr	r0, [sp]
4000e45c:	e3500000 	cmp	r0, #0
4000e460:	0a000002 	beq	4000e470 <_tx_queue_send+0x288>
4000e464:	e1a00004 	mov	r0, r4
4000e468:	e59d1000 	ldr	r1, [sp]
4000e46c:	e12fff31 	blx	r1
4000e470:	e3a00000 	mov	r0, #0
4000e474:	eaffffc8 	b	4000e39c <_tx_queue_send+0x1b4>
4000e478:	e3560000 	cmp	r6, #0
4000e47c:	0a000037 	beq	4000e560 <_tx_queue_send+0x378>
4000e480:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e578 <_tx_queue_send+0x390>
4000e484:	e5908000 	ldr	r8, [r0]
4000e488:	e59f0100 	ldr	r0, [pc, #256]	; 4000e590 <_tx_queue_send+0x3a8>
4000e48c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e490:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e494:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e498:	e3a00000 	mov	r0, #0
4000e49c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e4a0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e4a4:	e3500000 	cmp	r0, #0
4000e4a8:	0a00000a 	beq	4000e4d8 <_tx_queue_send+0x2f0>
4000e4ac:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e4b0:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e4b4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e4bc:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e4c0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e4c4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e4c8:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e4cc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e4d0:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e4d4:	ea000002 	b	4000e4e4 <_tx_queue_send+0x2fc>
4000e4d8:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e4dc:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e4e0:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e4e4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e4e8:	e2800001 	add	r0, r0, #1
4000e4ec:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e4f0:	e3a00005 	mov	r0, #5
4000e4f4:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e4f8:	e3a00001 	mov	r0, #1
4000e4fc:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e500:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e504:	e59f0080 	ldr	r0, [pc, #128]	; 4000e58c <_tx_queue_send+0x3a4>
4000e508:	e5900000 	ldr	r0, [r0]
4000e50c:	e2800001 	add	r0, r0, #1
4000e510:	e59f1074 	ldr	r1, [pc, #116]	; 4000e58c <_tx_queue_send+0x3a4>
4000e514:	e5810000 	str	r0, [r1]
4000e518:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e51c:	e58d0000 	str	r0, [sp]
4000e520:	e121f007 	msr	CPSR_c, r7
4000e524:	e1a00008 	mov	r0, r8
4000e528:	ebffe9de 	bl	40008ca8 <_tx_thread_system_suspend>
4000e52c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e530:	e58d0000 	str	r0, [sp]
4000e534:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e538:	e3500000 	cmp	r0, #0
4000e53c:	1a000005 	bne	4000e558 <_tx_queue_send+0x370>
4000e540:	e59d0000 	ldr	r0, [sp]
4000e544:	e3500000 	cmp	r0, #0
4000e548:	0a000002 	beq	4000e558 <_tx_queue_send+0x370>
4000e54c:	e1a00004 	mov	r0, r4
4000e550:	e59d1000 	ldr	r1, [sp]
4000e554:	e12fff31 	blx	r1
4000e558:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e55c:	eaffff8e 	b	4000e39c <_tx_queue_send+0x1b4>
4000e560:	e121f007 	msr	CPSR_c, r7
4000e564:	e3a0000b 	mov	r0, #11
4000e568:	eaffff8b 	b	4000e39c <_tx_queue_send+0x1b4>
4000e56c:	40030ebc 	.word	0x40030ebc
4000e570:	40030ec0 	.word	0x40030ec0
4000e574:	40030e48 	.word	0x40030e48
4000e578:	40030e50 	.word	0x40030e50
4000e57c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e580:	40030eb8 	.word	0x40030eb8
4000e584:	40030eb4 	.word	0x40030eb4
4000e588:	40030ea8 	.word	0x40030ea8
4000e58c:	40030e6c 	.word	0x40030e6c
4000e590:	40010768 	.word	0x40010768

4000e594 <_tx_thread_create>:
4000e594:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e598:	e24dd014 	sub	sp, sp, #20
4000e59c:	e1a04000 	mov	r4, r0
4000e5a0:	e1a05001 	mov	r5, r1
4000e5a4:	e28da048 	add	sl, sp, #72	; 0x48
4000e5a8:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e5ac:	e3a00000 	mov	r0, #0
4000e5b0:	e58d0004 	str	r0, [sp, #4]
4000e5b4:	e3a020ef 	mov	r2, #239	; 0xef
4000e5b8:	e1a01007 	mov	r1, r7
4000e5bc:	e1a00006 	mov	r0, r6
4000e5c0:	eb001442 	bl	400136d0 <__aeabi_memset>
4000e5c4:	e1a00127 	lsr	r0, r7, #2
4000e5c8:	e3a01004 	mov	r1, #4
4000e5cc:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e5d0:	e3a010a8 	mov	r1, #168	; 0xa8
4000e5d4:	e1a00004 	mov	r0, r4
4000e5d8:	eb001414 	bl	40013630 <__aeabi_memclr4>
4000e5dc:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e5e0:	e59d001c 	ldr	r0, [sp, #28]
4000e5e4:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e5e8:	e59d0020 	ldr	r0, [sp, #32]
4000e5ec:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e5f0:	e584600c 	str	r6, [r4, #12]
4000e5f4:	e5847014 	str	r7, [r4, #20]
4000e5f8:	e2470001 	sub	r0, r7, #1
4000e5fc:	e0800006 	add	r0, r0, r6
4000e600:	e5840010 	str	r0, [r4, #16]
4000e604:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e608:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e60c:	e584a018 	str	sl, [r4, #24]
4000e610:	e584a01c 	str	sl, [r4, #28]
4000e614:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e618:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e61c:	e3a00003 	mov	r0, #3
4000e620:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e624:	e59f0268 	ldr	r0, [pc, #616]	; 4000e894 <_tx_thread_create+0x300>
4000e628:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e62c:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e630:	e59f1260 	ldr	r1, [pc, #608]	; 4000e898 <_tx_thread_create+0x304>
4000e634:	e1a00004 	mov	r0, r4
4000e638:	eb000727 	bl	400102dc <_tx_thread_stack_build>
4000e63c:	e5940008 	ldr	r0, [r4, #8]
4000e640:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e644:	e10f0000 	mrs	r0, CPSR
4000e648:	e58d0010 	str	r0, [sp, #16]
4000e64c:	e59d0010 	ldr	r0, [sp, #16]
4000e650:	e380b080 	orr	fp, r0, #128	; 0x80
4000e654:	e121f00b 	msr	CPSR_c, fp
4000e658:	e59f023c 	ldr	r0, [pc, #572]	; 4000e89c <_tx_thread_create+0x308>
4000e65c:	e5840000 	str	r0, [r4]
4000e660:	e59f0238 	ldr	r0, [pc, #568]	; 4000e8a0 <_tx_thread_create+0x30c>
4000e664:	e5900000 	ldr	r0, [r0]
4000e668:	e3500000 	cmp	r0, #0
4000e66c:	0a00000e 	beq	4000e6ac <_tx_thread_create+0x118>
4000e670:	e59f0228 	ldr	r0, [pc, #552]	; 4000e8a0 <_tx_thread_create+0x30c>
4000e674:	e5900000 	ldr	r0, [r0]
4000e678:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e67c:	e58d000c 	str	r0, [sp, #12]
4000e680:	e59f0218 	ldr	r0, [pc, #536]	; 4000e8a0 <_tx_thread_create+0x30c>
4000e684:	e5900000 	ldr	r0, [r0]
4000e688:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e68c:	e59d000c 	ldr	r0, [sp, #12]
4000e690:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e694:	e59d000c 	ldr	r0, [sp, #12]
4000e698:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e69c:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e8a0 <_tx_thread_create+0x30c>
4000e6a0:	e5900000 	ldr	r0, [r0]
4000e6a4:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e6a8:	ea000003 	b	4000e6bc <_tx_thread_create+0x128>
4000e6ac:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e8a0 <_tx_thread_create+0x30c>
4000e6b0:	e5804000 	str	r4, [r0]
4000e6b4:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e6b8:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e6bc:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e8a4 <_tx_thread_create+0x310>
4000e6c0:	e5900000 	ldr	r0, [r0]
4000e6c4:	e2800001 	add	r0, r0, #1
4000e6c8:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e8a4 <_tx_thread_create+0x310>
4000e6cc:	e5810000 	str	r0, [r1]
4000e6d0:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e8a8 <_tx_thread_create+0x314>
4000e6d4:	e5900000 	ldr	r0, [r0]
4000e6d8:	e2800001 	add	r0, r0, #1
4000e6dc:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e8a8 <_tx_thread_create+0x314>
4000e6e0:	e5810000 	str	r0, [r1]
4000e6e4:	e1a03006 	mov	r3, r6
4000e6e8:	e1a02005 	mov	r2, r5
4000e6ec:	e1a01004 	mov	r1, r4
4000e6f0:	e3a00001 	mov	r0, #1
4000e6f4:	e58d7000 	str	r7, [sp]
4000e6f8:	eb000667 	bl	4001009c <_tx_trace_object_register>
4000e6fc:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e8ac <_tx_thread_create+0x318>
4000e700:	e5910000 	ldr	r0, [r1]
4000e704:	e3500000 	cmp	r0, #0
4000e708:	0a000030 	beq	4000e7d0 <_tx_thread_create+0x23c>
4000e70c:	e59f119c 	ldr	r1, [pc, #412]	; 4000e8b0 <_tx_thread_create+0x31c>
4000e710:	e5911000 	ldr	r1, [r1]
4000e714:	e2811001 	add	r1, r1, #1
4000e718:	e59f2190 	ldr	r2, [pc, #400]	; 4000e8b0 <_tx_thread_create+0x31c>
4000e71c:	e5821000 	str	r1, [r2]
4000e720:	e580100c 	str	r1, [r0, #12]
4000e724:	e59f1188 	ldr	r1, [pc, #392]	; 4000e8b4 <_tx_thread_create+0x320>
4000e728:	e5911000 	ldr	r1, [r1]
4000e72c:	e3510000 	cmp	r1, #0
4000e730:	1a000006 	bne	4000e750 <_tx_thread_create+0x1bc>
4000e734:	e59f117c 	ldr	r1, [pc, #380]	; 4000e8b8 <_tx_thread_create+0x324>
4000e738:	e5911000 	ldr	r1, [r1]
4000e73c:	e5801000 	str	r1, [r0]
4000e740:	e5901000 	ldr	r1, [r0]
4000e744:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e748:	e5801004 	str	r1, [r0, #4]
4000e74c:	ea00000d 	b	4000e788 <_tx_thread_create+0x1f4>
4000e750:	e59f115c 	ldr	r1, [pc, #348]	; 4000e8b4 <_tx_thread_create+0x320>
4000e754:	e5911000 	ldr	r1, [r1]
4000e758:	e59f215c 	ldr	r2, [pc, #348]	; 4000e8bc <_tx_thread_create+0x328>
4000e75c:	e1510002 	cmp	r1, r2
4000e760:	2a000004 	bcs	4000e778 <_tx_thread_create+0x1e4>
4000e764:	e3e01000 	mvn	r1, #0
4000e768:	e5801000 	str	r1, [r0]
4000e76c:	e3a01000 	mov	r1, #0
4000e770:	e5801004 	str	r1, [r0, #4]
4000e774:	ea000003 	b	4000e788 <_tx_thread_create+0x1f4>
4000e778:	e59f113c 	ldr	r1, [pc, #316]	; 4000e8bc <_tx_thread_create+0x328>
4000e77c:	e5801000 	str	r1, [r0]
4000e780:	e3a01000 	mov	r1, #0
4000e784:	e5801004 	str	r1, [r0, #4]
4000e788:	e3a01064 	mov	r1, #100	; 0x64
4000e78c:	e5801008 	str	r1, [r0, #8]
4000e790:	e5804010 	str	r4, [r0, #16]
4000e794:	e5808014 	str	r8, [r0, #20]
4000e798:	e5806018 	str	r6, [r0, #24]
4000e79c:	e580701c 	str	r7, [r0, #28]
4000e7a0:	e2800020 	add	r0, r0, #32
4000e7a4:	e59f1114 	ldr	r1, [pc, #276]	; 4000e8c0 <_tx_thread_create+0x32c>
4000e7a8:	e5911000 	ldr	r1, [r1]
4000e7ac:	e1500001 	cmp	r0, r1
4000e7b0:	3a000001 	bcc	4000e7bc <_tx_thread_create+0x228>
4000e7b4:	e59f1108 	ldr	r1, [pc, #264]	; 4000e8c4 <_tx_thread_create+0x330>
4000e7b8:	e5910000 	ldr	r0, [r1]
4000e7bc:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e8ac <_tx_thread_create+0x318>
4000e7c0:	e5810000 	str	r0, [r1]
4000e7c4:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e8c8 <_tx_thread_create+0x334>
4000e7c8:	e5911000 	ldr	r1, [r1]
4000e7cc:	e5810020 	str	r0, [r1, #32]
4000e7d0:	e59d0010 	ldr	r0, [sp, #16]
4000e7d4:	e121f000 	msr	CPSR_c, r0
4000e7d8:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e7dc:	e3500000 	cmp	r0, #0
4000e7e0:	0a00001c 	beq	4000e858 <_tx_thread_create+0x2c4>
4000e7e4:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e8b4 <_tx_thread_create+0x320>
4000e7e8:	e5900000 	ldr	r0, [r0]
4000e7ec:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e8bc <_tx_thread_create+0x328>
4000e7f0:	e1500001 	cmp	r0, r1
4000e7f4:	3a00000c 	bcc	4000e82c <_tx_thread_create+0x298>
4000e7f8:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e8cc <_tx_thread_create+0x338>
4000e7fc:	e5900000 	ldr	r0, [r0]
4000e800:	e58d0008 	str	r0, [sp, #8]
4000e804:	e59d0008 	ldr	r0, [sp, #8]
4000e808:	e3500000 	cmp	r0, #0
4000e80c:	0a000008 	beq	4000e834 <_tx_thread_create+0x2a0>
4000e810:	e59d0008 	ldr	r0, [sp, #8]
4000e814:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e818:	e58d0004 	str	r0, [sp, #4]
4000e81c:	e59d0008 	ldr	r0, [sp, #8]
4000e820:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e824:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e828:	ea000001 	b	4000e834 <_tx_thread_create+0x2a0>
4000e82c:	e3a00000 	mov	r0, #0
4000e830:	e58d0008 	str	r0, [sp, #8]
4000e834:	e1a00004 	mov	r0, r4
4000e838:	eb0002c1 	bl	4000f344 <_tx_thread_system_resume>
4000e83c:	e59d0008 	ldr	r0, [sp, #8]
4000e840:	e3500000 	cmp	r0, #0
4000e844:	0a00000f 	beq	4000e888 <_tx_thread_create+0x2f4>
4000e848:	e59d0008 	ldr	r0, [sp, #8]
4000e84c:	e59d1004 	ldr	r1, [sp, #4]
4000e850:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e854:	ea00000b 	b	4000e888 <_tx_thread_create+0x2f4>
4000e858:	e10f0000 	mrs	r0, CPSR
4000e85c:	e58d0010 	str	r0, [sp, #16]
4000e860:	e59d0010 	ldr	r0, [sp, #16]
4000e864:	e380b080 	orr	fp, r0, #128	; 0x80
4000e868:	e121f00b 	msr	CPSR_c, fp
4000e86c:	e59f0034 	ldr	r0, [pc, #52]	; 4000e8a8 <_tx_thread_create+0x314>
4000e870:	e5900000 	ldr	r0, [r0]
4000e874:	e2400001 	sub	r0, r0, #1
4000e878:	e59f1028 	ldr	r1, [pc, #40]	; 4000e8a8 <_tx_thread_create+0x314>
4000e87c:	e5810000 	str	r0, [r1]
4000e880:	e59d0010 	ldr	r0, [sp, #16]
4000e884:	e121f000 	msr	CPSR_c, r0
4000e888:	e3a00000 	mov	r0, #0
4000e88c:	e28dd024 	add	sp, sp, #36	; 0x24
4000e890:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e894:	4000f874 	.word	0x4000f874
4000e898:	4000f0d8 	.word	0x4000f0d8
4000e89c:	54485244 	.word	0x54485244
4000e8a0:	40030e58 	.word	0x40030e58
4000e8a4:	40030e5c 	.word	0x40030e5c
4000e8a8:	40030e6c 	.word	0x40030e6c
4000e8ac:	40030ebc 	.word	0x40030ebc
4000e8b0:	40030ec0 	.word	0x40030ec0
4000e8b4:	40030e48 	.word	0x40030e48
4000e8b8:	40030e50 	.word	0x40030e50
4000e8bc:	f0f0f0f0 	.word	0xf0f0f0f0
4000e8c0:	40030eb8 	.word	0x40030eb8
4000e8c4:	40030eb4 	.word	0x40030eb4
4000e8c8:	40030ea8 	.word	0x40030ea8
4000e8cc:	40030e54 	.word	0x40030e54

4000e8d0 <_tx_thread_info_get>:
4000e8d0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e8d4:	e1a0c000 	mov	ip, r0
4000e8d8:	e28d7028 	add	r7, sp, #40	; 0x28
4000e8dc:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e8e0:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e8e4:	e10f8000 	mrs	r8, CPSR
4000e8e8:	e3889080 	orr	r9, r8, #128	; 0x80
4000e8ec:	e121f009 	msr	CPSR_c, r9
4000e8f0:	e59fa160 	ldr	sl, [pc, #352]	; 4000ea58 <_tx_thread_info_get+0x188>
4000e8f4:	e59a0000 	ldr	r0, [sl]
4000e8f8:	e3500000 	cmp	r0, #0
4000e8fc:	0a000032 	beq	4000e9cc <_tx_thread_info_get+0xfc>
4000e900:	e59fa154 	ldr	sl, [pc, #340]	; 4000ea5c <_tx_thread_info_get+0x18c>
4000e904:	e59aa000 	ldr	sl, [sl]
4000e908:	e28aa001 	add	sl, sl, #1
4000e90c:	e59fb148 	ldr	fp, [pc, #328]	; 4000ea5c <_tx_thread_info_get+0x18c>
4000e910:	e58ba000 	str	sl, [fp]
4000e914:	e580a00c 	str	sl, [r0, #12]
4000e918:	e59fa140 	ldr	sl, [pc, #320]	; 4000ea60 <_tx_thread_info_get+0x190>
4000e91c:	e59aa000 	ldr	sl, [sl]
4000e920:	e35a0000 	cmp	sl, #0
4000e924:	1a000006 	bne	4000e944 <_tx_thread_info_get+0x74>
4000e928:	e59fa134 	ldr	sl, [pc, #308]	; 4000ea64 <_tx_thread_info_get+0x194>
4000e92c:	e59aa000 	ldr	sl, [sl]
4000e930:	e580a000 	str	sl, [r0]
4000e934:	e590a000 	ldr	sl, [r0]
4000e938:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e93c:	e580a004 	str	sl, [r0, #4]
4000e940:	ea00000d 	b	4000e97c <_tx_thread_info_get+0xac>
4000e944:	e59fa114 	ldr	sl, [pc, #276]	; 4000ea60 <_tx_thread_info_get+0x190>
4000e948:	e59aa000 	ldr	sl, [sl]
4000e94c:	e59fb114 	ldr	fp, [pc, #276]	; 4000ea68 <_tx_thread_info_get+0x198>
4000e950:	e15a000b 	cmp	sl, fp
4000e954:	2a000004 	bcs	4000e96c <_tx_thread_info_get+0x9c>
4000e958:	e3e0a000 	mvn	sl, #0
4000e95c:	e580a000 	str	sl, [r0]
4000e960:	e3a0a000 	mov	sl, #0
4000e964:	e580a004 	str	sl, [r0, #4]
4000e968:	ea000003 	b	4000e97c <_tx_thread_info_get+0xac>
4000e96c:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000ea68 <_tx_thread_info_get+0x198>
4000e970:	e580a000 	str	sl, [r0]
4000e974:	e3a0a000 	mov	sl, #0
4000e978:	e580a004 	str	sl, [r0, #4]
4000e97c:	e3a0a068 	mov	sl, #104	; 0x68
4000e980:	e580a008 	str	sl, [r0, #8]
4000e984:	e580c010 	str	ip, [r0, #16]
4000e988:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e98c:	e580a014 	str	sl, [r0, #20]
4000e990:	e3a0a000 	mov	sl, #0
4000e994:	e580a018 	str	sl, [r0, #24]
4000e998:	e580a01c 	str	sl, [r0, #28]
4000e99c:	e2800020 	add	r0, r0, #32
4000e9a0:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000ea6c <_tx_thread_info_get+0x19c>
4000e9a4:	e59aa000 	ldr	sl, [sl]
4000e9a8:	e150000a 	cmp	r0, sl
4000e9ac:	3a000001 	bcc	4000e9b8 <_tx_thread_info_get+0xe8>
4000e9b0:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000ea70 <_tx_thread_info_get+0x1a0>
4000e9b4:	e59a0000 	ldr	r0, [sl]
4000e9b8:	e59fa098 	ldr	sl, [pc, #152]	; 4000ea58 <_tx_thread_info_get+0x188>
4000e9bc:	e58a0000 	str	r0, [sl]
4000e9c0:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000ea74 <_tx_thread_info_get+0x1a4>
4000e9c4:	e59aa000 	ldr	sl, [sl]
4000e9c8:	e58a0020 	str	r0, [sl, #32]
4000e9cc:	e3510000 	cmp	r1, #0
4000e9d0:	0a000001 	beq	4000e9dc <_tx_thread_info_get+0x10c>
4000e9d4:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e9d8:	e5810000 	str	r0, [r1]
4000e9dc:	e3520000 	cmp	r2, #0
4000e9e0:	0a000001 	beq	4000e9ec <_tx_thread_info_get+0x11c>
4000e9e4:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e9e8:	e5820000 	str	r0, [r2]
4000e9ec:	e3530000 	cmp	r3, #0
4000e9f0:	0a000001 	beq	4000e9fc <_tx_thread_info_get+0x12c>
4000e9f4:	e59c0004 	ldr	r0, [ip, #4]
4000e9f8:	e5830000 	str	r0, [r3]
4000e9fc:	e35e0000 	cmp	lr, #0
4000ea00:	0a000001 	beq	4000ea0c <_tx_thread_info_get+0x13c>
4000ea04:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000ea08:	e58e0000 	str	r0, [lr]
4000ea0c:	e3540000 	cmp	r4, #0
4000ea10:	0a000001 	beq	4000ea1c <_tx_thread_info_get+0x14c>
4000ea14:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000ea18:	e5840000 	str	r0, [r4]
4000ea1c:	e3550000 	cmp	r5, #0
4000ea20:	0a000001 	beq	4000ea2c <_tx_thread_info_get+0x15c>
4000ea24:	e59c0018 	ldr	r0, [ip, #24]
4000ea28:	e5850000 	str	r0, [r5]
4000ea2c:	e3560000 	cmp	r6, #0
4000ea30:	0a000001 	beq	4000ea3c <_tx_thread_info_get+0x16c>
4000ea34:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000ea38:	e5860000 	str	r0, [r6]
4000ea3c:	e3570000 	cmp	r7, #0
4000ea40:	0a000001 	beq	4000ea4c <_tx_thread_info_get+0x17c>
4000ea44:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000ea48:	e5870000 	str	r0, [r7]
4000ea4c:	e121f008 	msr	CPSR_c, r8
4000ea50:	e3a00000 	mov	r0, #0
4000ea54:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ea58:	40030ebc 	.word	0x40030ebc
4000ea5c:	40030ec0 	.word	0x40030ec0
4000ea60:	40030e48 	.word	0x40030e48
4000ea64:	40030e50 	.word	0x40030e50
4000ea68:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea6c:	40030eb8 	.word	0x40030eb8
4000ea70:	40030eb4 	.word	0x40030eb4
4000ea74:	40030ea8 	.word	0x40030ea8

4000ea78 <_tx_thread_priority_change>:
4000ea78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ea7c:	e1a04000 	mov	r4, r0
4000ea80:	e1a05001 	mov	r5, r1
4000ea84:	e1a06002 	mov	r6, r2
4000ea88:	e10f7000 	mrs	r7, CPSR
4000ea8c:	e3878080 	orr	r8, r7, #128	; 0x80
4000ea90:	e121f008 	msr	CPSR_c, r8
4000ea94:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000ea98:	e5860000 	str	r0, [r6]
4000ea9c:	e59f1150 	ldr	r1, [pc, #336]	; 4000ebf4 <_tx_thread_priority_change+0x17c>
4000eaa0:	e5910000 	ldr	r0, [r1]
4000eaa4:	e3500000 	cmp	r0, #0
4000eaa8:	0a000032 	beq	4000eb78 <_tx_thread_priority_change+0x100>
4000eaac:	e59f1144 	ldr	r1, [pc, #324]	; 4000ebf8 <_tx_thread_priority_change+0x180>
4000eab0:	e5911000 	ldr	r1, [r1]
4000eab4:	e2811001 	add	r1, r1, #1
4000eab8:	e59f2138 	ldr	r2, [pc, #312]	; 4000ebf8 <_tx_thread_priority_change+0x180>
4000eabc:	e5821000 	str	r1, [r2]
4000eac0:	e580100c 	str	r1, [r0, #12]
4000eac4:	e59f1130 	ldr	r1, [pc, #304]	; 4000ebfc <_tx_thread_priority_change+0x184>
4000eac8:	e5911000 	ldr	r1, [r1]
4000eacc:	e3510000 	cmp	r1, #0
4000ead0:	1a000006 	bne	4000eaf0 <_tx_thread_priority_change+0x78>
4000ead4:	e59f1124 	ldr	r1, [pc, #292]	; 4000ec00 <_tx_thread_priority_change+0x188>
4000ead8:	e5911000 	ldr	r1, [r1]
4000eadc:	e5801000 	str	r1, [r0]
4000eae0:	e5901000 	ldr	r1, [r0]
4000eae4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eae8:	e5801004 	str	r1, [r0, #4]
4000eaec:	ea00000d 	b	4000eb28 <_tx_thread_priority_change+0xb0>
4000eaf0:	e59f1104 	ldr	r1, [pc, #260]	; 4000ebfc <_tx_thread_priority_change+0x184>
4000eaf4:	e5911000 	ldr	r1, [r1]
4000eaf8:	e59f2104 	ldr	r2, [pc, #260]	; 4000ec04 <_tx_thread_priority_change+0x18c>
4000eafc:	e1510002 	cmp	r1, r2
4000eb00:	2a000004 	bcs	4000eb18 <_tx_thread_priority_change+0xa0>
4000eb04:	e3e01000 	mvn	r1, #0
4000eb08:	e5801000 	str	r1, [r0]
4000eb0c:	e3a01000 	mov	r1, #0
4000eb10:	e5801004 	str	r1, [r0, #4]
4000eb14:	ea000003 	b	4000eb28 <_tx_thread_priority_change+0xb0>
4000eb18:	e59f10e4 	ldr	r1, [pc, #228]	; 4000ec04 <_tx_thread_priority_change+0x18c>
4000eb1c:	e5801000 	str	r1, [r0]
4000eb20:	e3a01000 	mov	r1, #0
4000eb24:	e5801004 	str	r1, [r0, #4]
4000eb28:	e3a0106c 	mov	r1, #108	; 0x6c
4000eb2c:	e5801008 	str	r1, [r0, #8]
4000eb30:	e5804010 	str	r4, [r0, #16]
4000eb34:	e5805014 	str	r5, [r0, #20]
4000eb38:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000eb3c:	e5801018 	str	r1, [r0, #24]
4000eb40:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000eb44:	e580101c 	str	r1, [r0, #28]
4000eb48:	e2800020 	add	r0, r0, #32
4000eb4c:	e59f10b4 	ldr	r1, [pc, #180]	; 4000ec08 <_tx_thread_priority_change+0x190>
4000eb50:	e5911000 	ldr	r1, [r1]
4000eb54:	e1500001 	cmp	r0, r1
4000eb58:	3a000001 	bcc	4000eb64 <_tx_thread_priority_change+0xec>
4000eb5c:	e59f10a8 	ldr	r1, [pc, #168]	; 4000ec0c <_tx_thread_priority_change+0x194>
4000eb60:	e5910000 	ldr	r0, [r1]
4000eb64:	e59f1088 	ldr	r1, [pc, #136]	; 4000ebf4 <_tx_thread_priority_change+0x17c>
4000eb68:	e5810000 	str	r0, [r1]
4000eb6c:	e59f109c 	ldr	r1, [pc, #156]	; 4000ec10 <_tx_thread_priority_change+0x198>
4000eb70:	e5911000 	ldr	r1, [r1]
4000eb74:	e5810020 	str	r0, [r1, #32]
4000eb78:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000eb7c:	e3500000 	cmp	r0, #0
4000eb80:	0a000005 	beq	4000eb9c <_tx_thread_priority_change+0x124>
4000eb84:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eb88:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eb8c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eb90:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eb94:	e121f007 	msr	CPSR_c, r7
4000eb98:	ea000013 	b	4000ebec <_tx_thread_priority_change+0x174>
4000eb9c:	e59f0070 	ldr	r0, [pc, #112]	; 4000ec14 <_tx_thread_priority_change+0x19c>
4000eba0:	e5900000 	ldr	r0, [r0]
4000eba4:	e2800002 	add	r0, r0, #2
4000eba8:	e59f1064 	ldr	r1, [pc, #100]	; 4000ec14 <_tx_thread_priority_change+0x19c>
4000ebac:	e5810000 	str	r0, [r1]
4000ebb0:	e3a00003 	mov	r0, #3
4000ebb4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000ebb8:	e3a00001 	mov	r0, #1
4000ebbc:	e5840038 	str	r0, [r4, #56]	; 0x38
4000ebc0:	e3a00000 	mov	r0, #0
4000ebc4:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000ebc8:	e121f007 	msr	CPSR_c, r7
4000ebcc:	e1a00004 	mov	r0, r4
4000ebd0:	ebffe834 	bl	40008ca8 <_tx_thread_system_suspend>
4000ebd4:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ebd8:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ebdc:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ebe0:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ebe4:	e1a00004 	mov	r0, r4
4000ebe8:	eb0001d5 	bl	4000f344 <_tx_thread_system_resume>
4000ebec:	e3a00000 	mov	r0, #0
4000ebf0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ebf4:	40030ebc 	.word	0x40030ebc
4000ebf8:	40030ec0 	.word	0x40030ec0
4000ebfc:	40030e48 	.word	0x40030e48
4000ec00:	40030e50 	.word	0x40030e50
4000ec04:	f0f0f0f0 	.word	0xf0f0f0f0
4000ec08:	40030eb8 	.word	0x40030eb8
4000ec0c:	40030eb4 	.word	0x40030eb4
4000ec10:	40030ea8 	.word	0x40030ea8
4000ec14:	40030e6c 	.word	0x40030e6c

4000ec18 <_tx_thread_relinquish>:
4000ec18:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ec1c:	e59f02b0 	ldr	r0, [pc, #688]	; 4000eed4 <_tx_thread_relinquish+0x2bc>
4000ec20:	e5900000 	ldr	r0, [r0]
4000ec24:	e58d0000 	str	r0, [sp]
4000ec28:	e59d0000 	ldr	r0, [sp]
4000ec2c:	e5900008 	ldr	r0, [r0, #8]
4000ec30:	e59d1000 	ldr	r1, [sp]
4000ec34:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ec38:	e1500001 	cmp	r0, r1
4000ec3c:	2a000003 	bcs	4000ec50 <_tx_thread_relinquish+0x38>
4000ec40:	e59d0000 	ldr	r0, [sp]
4000ec44:	e5900008 	ldr	r0, [r0, #8]
4000ec48:	e59d1000 	ldr	r1, [sp]
4000ec4c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ec50:	e59d0000 	ldr	r0, [sp]
4000ec54:	e590000c 	ldr	r0, [r0, #12]
4000ec58:	e5900000 	ldr	r0, [r0]
4000ec5c:	e59f1274 	ldr	r1, [pc, #628]	; 4000eed8 <_tx_thread_relinquish+0x2c0>
4000ec60:	e1500001 	cmp	r0, r1
4000ec64:	1a00000a 	bne	4000ec94 <_tx_thread_relinquish+0x7c>
4000ec68:	e59d0000 	ldr	r0, [sp]
4000ec6c:	e5900010 	ldr	r0, [r0, #16]
4000ec70:	e5900001 	ldr	r0, [r0, #1]
4000ec74:	e1500001 	cmp	r0, r1
4000ec78:	1a000005 	bne	4000ec94 <_tx_thread_relinquish+0x7c>
4000ec7c:	e59d0000 	ldr	r0, [sp]
4000ec80:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ec84:	e59d1000 	ldr	r1, [sp]
4000ec88:	e591100c 	ldr	r1, [r1, #12]
4000ec8c:	e1500001 	cmp	r0, r1
4000ec90:	2a000001 	bcs	4000ec9c <_tx_thread_relinquish+0x84>
4000ec94:	e59d0000 	ldr	r0, [sp]
4000ec98:	eb00016a 	bl	4000f248 <_tx_thread_stack_error_handler>
4000ec9c:	e59d0000 	ldr	r0, [sp]
4000eca0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eca4:	e5100004 	ldr	r0, [r0, #-4]
4000eca8:	e59f1228 	ldr	r1, [pc, #552]	; 4000eed8 <_tx_thread_relinquish+0x2c0>
4000ecac:	e1500001 	cmp	r0, r1
4000ecb0:	0a000001 	beq	4000ecbc <_tx_thread_relinquish+0xa4>
4000ecb4:	e59d0000 	ldr	r0, [sp]
4000ecb8:	eb00012d 	bl	4000f174 <_tx_thread_stack_analyze>
4000ecbc:	e10f4000 	mrs	r4, CPSR
4000ecc0:	e3845080 	orr	r5, r4, #128	; 0x80
4000ecc4:	e121f005 	msr	CPSR_c, r5
4000ecc8:	e59f120c 	ldr	r1, [pc, #524]	; 4000eedc <_tx_thread_relinquish+0x2c4>
4000eccc:	e5910000 	ldr	r0, [r1]
4000ecd0:	e3500000 	cmp	r0, #0
4000ecd4:	0a000031 	beq	4000eda0 <_tx_thread_relinquish+0x188>
4000ecd8:	e59f1200 	ldr	r1, [pc, #512]	; 4000eee0 <_tx_thread_relinquish+0x2c8>
4000ecdc:	e5911000 	ldr	r1, [r1]
4000ece0:	e2811001 	add	r1, r1, #1
4000ece4:	e59f21f4 	ldr	r2, [pc, #500]	; 4000eee0 <_tx_thread_relinquish+0x2c8>
4000ece8:	e5821000 	str	r1, [r2]
4000ecec:	e580100c 	str	r1, [r0, #12]
4000ecf0:	e59f11ec 	ldr	r1, [pc, #492]	; 4000eee4 <_tx_thread_relinquish+0x2cc>
4000ecf4:	e5911000 	ldr	r1, [r1]
4000ecf8:	e3510000 	cmp	r1, #0
4000ecfc:	1a000006 	bne	4000ed1c <_tx_thread_relinquish+0x104>
4000ed00:	e59f11cc 	ldr	r1, [pc, #460]	; 4000eed4 <_tx_thread_relinquish+0x2bc>
4000ed04:	e5911000 	ldr	r1, [r1]
4000ed08:	e5801000 	str	r1, [r0]
4000ed0c:	e5901000 	ldr	r1, [r0]
4000ed10:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ed14:	e5801004 	str	r1, [r0, #4]
4000ed18:	ea00000d 	b	4000ed54 <_tx_thread_relinquish+0x13c>
4000ed1c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000eee4 <_tx_thread_relinquish+0x2cc>
4000ed20:	e5911000 	ldr	r1, [r1]
4000ed24:	e59f21bc 	ldr	r2, [pc, #444]	; 4000eee8 <_tx_thread_relinquish+0x2d0>
4000ed28:	e1510002 	cmp	r1, r2
4000ed2c:	2a000004 	bcs	4000ed44 <_tx_thread_relinquish+0x12c>
4000ed30:	e3e01000 	mvn	r1, #0
4000ed34:	e5801000 	str	r1, [r0]
4000ed38:	e3a01000 	mov	r1, #0
4000ed3c:	e5801004 	str	r1, [r0, #4]
4000ed40:	ea000003 	b	4000ed54 <_tx_thread_relinquish+0x13c>
4000ed44:	e59f119c 	ldr	r1, [pc, #412]	; 4000eee8 <_tx_thread_relinquish+0x2d0>
4000ed48:	e5801000 	str	r1, [r0]
4000ed4c:	e3a01000 	mov	r1, #0
4000ed50:	e5801004 	str	r1, [r0, #4]
4000ed54:	e3a0106d 	mov	r1, #109	; 0x6d
4000ed58:	e5801008 	str	r1, [r0, #8]
4000ed5c:	e580d010 	str	sp, [r0, #16]
4000ed60:	e3a01000 	mov	r1, #0
4000ed64:	e5801014 	str	r1, [r0, #20]
4000ed68:	e5801018 	str	r1, [r0, #24]
4000ed6c:	e580101c 	str	r1, [r0, #28]
4000ed70:	e2800020 	add	r0, r0, #32
4000ed74:	e59f1170 	ldr	r1, [pc, #368]	; 4000eeec <_tx_thread_relinquish+0x2d4>
4000ed78:	e5911000 	ldr	r1, [r1]
4000ed7c:	e1500001 	cmp	r0, r1
4000ed80:	3a000001 	bcc	4000ed8c <_tx_thread_relinquish+0x174>
4000ed84:	e59f1164 	ldr	r1, [pc, #356]	; 4000eef0 <_tx_thread_relinquish+0x2d8>
4000ed88:	e5910000 	ldr	r0, [r1]
4000ed8c:	e59f1148 	ldr	r1, [pc, #328]	; 4000eedc <_tx_thread_relinquish+0x2c4>
4000ed90:	e5810000 	str	r0, [r1]
4000ed94:	e59f1158 	ldr	r1, [pc, #344]	; 4000eef4 <_tx_thread_relinquish+0x2dc>
4000ed98:	e5911000 	ldr	r1, [r1]
4000ed9c:	e5810020 	str	r0, [r1, #32]
4000eda0:	e59d0000 	ldr	r0, [sp]
4000eda4:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000eda8:	e59d0000 	ldr	r0, [sp]
4000edac:	e5900020 	ldr	r0, [r0, #32]
4000edb0:	e59d1000 	ldr	r1, [sp]
4000edb4:	e1500001 	cmp	r0, r1
4000edb8:	0a000013 	beq	4000ee0c <_tx_thread_relinquish+0x1f4>
4000edbc:	e59d0000 	ldr	r0, [sp]
4000edc0:	e5900020 	ldr	r0, [r0, #32]
4000edc4:	e59f112c 	ldr	r1, [pc, #300]	; 4000eef8 <_tx_thread_relinquish+0x2e0>
4000edc8:	e7810106 	str	r0, [r1, r6, lsl #2]
4000edcc:	e59d0000 	ldr	r0, [sp]
4000edd0:	e5900020 	ldr	r0, [r0, #32]
4000edd4:	e59f1120 	ldr	r1, [pc, #288]	; 4000eefc <_tx_thread_relinquish+0x2e4>
4000edd8:	e5810000 	str	r0, [r1]
4000eddc:	e59f011c 	ldr	r0, [pc, #284]	; 4000ef00 <_tx_thread_relinquish+0x2e8>
4000ede0:	e5900000 	ldr	r0, [r0]
4000ede4:	e3500000 	cmp	r0, #0
4000ede8:	0a000007 	beq	4000ee0c <_tx_thread_relinquish+0x1f4>
4000edec:	e59f010c 	ldr	r0, [pc, #268]	; 4000ef00 <_tx_thread_relinquish+0x2e8>
4000edf0:	e5900000 	ldr	r0, [r0]
4000edf4:	e59d1000 	ldr	r1, [sp]
4000edf8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000edfc:	e3a02001 	mov	r2, #1
4000ee00:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ee04:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ef00 <_tx_thread_relinquish+0x2e8>
4000ee08:	e5810000 	str	r0, [r1]
4000ee0c:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ef04 <_tx_thread_relinquish+0x2ec>
4000ee10:	e5900000 	ldr	r0, [r0]
4000ee14:	e1500006 	cmp	r0, r6
4000ee18:	2a000005 	bcs	4000ee34 <_tx_thread_relinquish+0x21c>
4000ee1c:	e59f00d4 	ldr	r0, [pc, #212]	; 4000eef8 <_tx_thread_relinquish+0x2e0>
4000ee20:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ef04 <_tx_thread_relinquish+0x2ec>
4000ee24:	e5911000 	ldr	r1, [r1]
4000ee28:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000ee2c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000eefc <_tx_thread_relinquish+0x2e4>
4000ee30:	e5810000 	str	r0, [r1]
4000ee34:	e121f004 	msr	CPSR_c, r4
4000ee38:	e59f00bc 	ldr	r0, [pc, #188]	; 4000eefc <_tx_thread_relinquish+0x2e4>
4000ee3c:	e5900000 	ldr	r0, [r0]
4000ee40:	e59d1000 	ldr	r1, [sp]
4000ee44:	e1500001 	cmp	r0, r1
4000ee48:	0a000020 	beq	4000eed0 <_tx_thread_relinquish+0x2b8>
4000ee4c:	e59f00a8 	ldr	r0, [pc, #168]	; 4000eefc <_tx_thread_relinquish+0x2e4>
4000ee50:	e5900000 	ldr	r0, [r0]
4000ee54:	e58d0000 	str	r0, [sp]
4000ee58:	e59d0000 	ldr	r0, [sp]
4000ee5c:	e5900008 	ldr	r0, [r0, #8]
4000ee60:	e59d1000 	ldr	r1, [sp]
4000ee64:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ee68:	e1500001 	cmp	r0, r1
4000ee6c:	2a000003 	bcs	4000ee80 <_tx_thread_relinquish+0x268>
4000ee70:	e59d0000 	ldr	r0, [sp]
4000ee74:	e5900008 	ldr	r0, [r0, #8]
4000ee78:	e59d1000 	ldr	r1, [sp]
4000ee7c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ee80:	e59d0000 	ldr	r0, [sp]
4000ee84:	e590000c 	ldr	r0, [r0, #12]
4000ee88:	e5900000 	ldr	r0, [r0]
4000ee8c:	e59f1044 	ldr	r1, [pc, #68]	; 4000eed8 <_tx_thread_relinquish+0x2c0>
4000ee90:	e1500001 	cmp	r0, r1
4000ee94:	1a00000a 	bne	4000eec4 <_tx_thread_relinquish+0x2ac>
4000ee98:	e59d0000 	ldr	r0, [sp]
4000ee9c:	e5900010 	ldr	r0, [r0, #16]
4000eea0:	e5900001 	ldr	r0, [r0, #1]
4000eea4:	e1500001 	cmp	r0, r1
4000eea8:	1a000005 	bne	4000eec4 <_tx_thread_relinquish+0x2ac>
4000eeac:	e59d0000 	ldr	r0, [sp]
4000eeb0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eeb4:	e59d1000 	ldr	r1, [sp]
4000eeb8:	e591100c 	ldr	r1, [r1, #12]
4000eebc:	e1500001 	cmp	r0, r1
4000eec0:	2a000001 	bcs	4000eecc <_tx_thread_relinquish+0x2b4>
4000eec4:	e59d0000 	ldr	r0, [sp]
4000eec8:	eb0000de 	bl	4000f248 <_tx_thread_stack_error_handler>
4000eecc:	ebffef86 	bl	4000acec <_tx_thread_system_return>
4000eed0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000eed4:	40030e50 	.word	0x40030e50
4000eed8:	efefefef 	.word	0xefefefef
4000eedc:	40030ebc 	.word	0x40030ebc
4000eee0:	40030ec0 	.word	0x40030ec0
4000eee4:	40030e48 	.word	0x40030e48
4000eee8:	f0f0f0f0 	.word	0xf0f0f0f0
4000eeec:	40030eb8 	.word	0x40030eb8
4000eef0:	40030eb4 	.word	0x40030eb4
4000eef4:	40030ea8 	.word	0x40030ea8
4000eef8:	40032874 	.word	0x40032874
4000eefc:	40030e54 	.word	0x40030e54
4000ef00:	40030e64 	.word	0x40030e64
4000ef04:	40030e68 	.word	0x40030e68

4000ef08 <_tx_thread_resume>:
4000ef08:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000ef0c:	e1a04000 	mov	r4, r0
4000ef10:	e3a00000 	mov	r0, #0
4000ef14:	e58d0000 	str	r0, [sp]
4000ef18:	e10f5000 	mrs	r5, CPSR
4000ef1c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ef20:	e121f006 	msr	CPSR_c, r6
4000ef24:	e59f1184 	ldr	r1, [pc, #388]	; 4000f0b0 <_tx_thread_resume+0x1a8>
4000ef28:	e5910000 	ldr	r0, [r1]
4000ef2c:	e3500000 	cmp	r0, #0
4000ef30:	0a000032 	beq	4000f000 <_tx_thread_resume+0xf8>
4000ef34:	e59f1178 	ldr	r1, [pc, #376]	; 4000f0b4 <_tx_thread_resume+0x1ac>
4000ef38:	e5911000 	ldr	r1, [r1]
4000ef3c:	e2811001 	add	r1, r1, #1
4000ef40:	e59f216c 	ldr	r2, [pc, #364]	; 4000f0b4 <_tx_thread_resume+0x1ac>
4000ef44:	e5821000 	str	r1, [r2]
4000ef48:	e580100c 	str	r1, [r0, #12]
4000ef4c:	e59f1164 	ldr	r1, [pc, #356]	; 4000f0b8 <_tx_thread_resume+0x1b0>
4000ef50:	e5911000 	ldr	r1, [r1]
4000ef54:	e3510000 	cmp	r1, #0
4000ef58:	1a000006 	bne	4000ef78 <_tx_thread_resume+0x70>
4000ef5c:	e59f1158 	ldr	r1, [pc, #344]	; 4000f0bc <_tx_thread_resume+0x1b4>
4000ef60:	e5911000 	ldr	r1, [r1]
4000ef64:	e5801000 	str	r1, [r0]
4000ef68:	e5901000 	ldr	r1, [r0]
4000ef6c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ef70:	e5801004 	str	r1, [r0, #4]
4000ef74:	ea00000d 	b	4000efb0 <_tx_thread_resume+0xa8>
4000ef78:	e59f1138 	ldr	r1, [pc, #312]	; 4000f0b8 <_tx_thread_resume+0x1b0>
4000ef7c:	e5911000 	ldr	r1, [r1]
4000ef80:	e59f2138 	ldr	r2, [pc, #312]	; 4000f0c0 <_tx_thread_resume+0x1b8>
4000ef84:	e1510002 	cmp	r1, r2
4000ef88:	2a000004 	bcs	4000efa0 <_tx_thread_resume+0x98>
4000ef8c:	e3e01000 	mvn	r1, #0
4000ef90:	e5801000 	str	r1, [r0]
4000ef94:	e3a01000 	mov	r1, #0
4000ef98:	e5801004 	str	r1, [r0, #4]
4000ef9c:	ea000003 	b	4000efb0 <_tx_thread_resume+0xa8>
4000efa0:	e59f1118 	ldr	r1, [pc, #280]	; 4000f0c0 <_tx_thread_resume+0x1b8>
4000efa4:	e5801000 	str	r1, [r0]
4000efa8:	e3a01000 	mov	r1, #0
4000efac:	e5801004 	str	r1, [r0, #4]
4000efb0:	e3a0106f 	mov	r1, #111	; 0x6f
4000efb4:	e5801008 	str	r1, [r0, #8]
4000efb8:	e5804010 	str	r4, [r0, #16]
4000efbc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000efc0:	e5801014 	str	r1, [r0, #20]
4000efc4:	e580d018 	str	sp, [r0, #24]
4000efc8:	e3a01000 	mov	r1, #0
4000efcc:	e580101c 	str	r1, [r0, #28]
4000efd0:	e2800020 	add	r0, r0, #32
4000efd4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f0c4 <_tx_thread_resume+0x1bc>
4000efd8:	e5911000 	ldr	r1, [r1]
4000efdc:	e1500001 	cmp	r0, r1
4000efe0:	3a000001 	bcc	4000efec <_tx_thread_resume+0xe4>
4000efe4:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f0c8 <_tx_thread_resume+0x1c0>
4000efe8:	e5910000 	ldr	r0, [r1]
4000efec:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f0b0 <_tx_thread_resume+0x1a8>
4000eff0:	e5810000 	str	r0, [r1]
4000eff4:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f0cc <_tx_thread_resume+0x1c4>
4000eff8:	e5911000 	ldr	r1, [r1]
4000effc:	e5810020 	str	r0, [r1, #32]
4000f000:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f004:	e3500003 	cmp	r0, #3
4000f008:	1a00001c 	bne	4000f080 <_tx_thread_resume+0x178>
4000f00c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f0d0 <_tx_thread_resume+0x1c8>
4000f010:	e5900000 	ldr	r0, [r0]
4000f014:	e2800001 	add	r0, r0, #1
4000f018:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f0d0 <_tx_thread_resume+0x1c8>
4000f01c:	e5810000 	str	r0, [r1]
4000f020:	e121f005 	msr	CPSR_c, r5
4000f024:	e59f008c 	ldr	r0, [pc, #140]	; 4000f0b8 <_tx_thread_resume+0x1b0>
4000f028:	e5900000 	ldr	r0, [r0]
4000f02c:	e59f108c 	ldr	r1, [pc, #140]	; 4000f0c0 <_tx_thread_resume+0x1b8>
4000f030:	e1500001 	cmp	r0, r1
4000f034:	3a000008 	bcc	4000f05c <_tx_thread_resume+0x154>
4000f038:	e59f0094 	ldr	r0, [pc, #148]	; 4000f0d4 <_tx_thread_resume+0x1cc>
4000f03c:	e5907000 	ldr	r7, [r0]
4000f040:	e3570000 	cmp	r7, #0
4000f044:	0a000005 	beq	4000f060 <_tx_thread_resume+0x158>
4000f048:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000f04c:	e58d0000 	str	r0, [sp]
4000f050:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000f054:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f058:	ea000000 	b	4000f060 <_tx_thread_resume+0x158>
4000f05c:	e3a07000 	mov	r7, #0
4000f060:	e1a00004 	mov	r0, r4
4000f064:	eb0000b6 	bl	4000f344 <_tx_thread_system_resume>
4000f068:	e3570000 	cmp	r7, #0
4000f06c:	0a000001 	beq	4000f078 <_tx_thread_resume+0x170>
4000f070:	e59d0000 	ldr	r0, [sp]
4000f074:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f078:	e3a08000 	mov	r8, #0
4000f07c:	ea000009 	b	4000f0a8 <_tx_thread_resume+0x1a0>
4000f080:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f084:	e3500000 	cmp	r0, #0
4000f088:	0a000004 	beq	4000f0a0 <_tx_thread_resume+0x198>
4000f08c:	e3a00000 	mov	r0, #0
4000f090:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f094:	e121f005 	msr	CPSR_c, r5
4000f098:	e3a08019 	mov	r8, #25
4000f09c:	ea000001 	b	4000f0a8 <_tx_thread_resume+0x1a0>
4000f0a0:	e121f005 	msr	CPSR_c, r5
4000f0a4:	e3a08012 	mov	r8, #18
4000f0a8:	e1a00008 	mov	r0, r8
4000f0ac:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f0b0:	40030ebc 	.word	0x40030ebc
4000f0b4:	40030ec0 	.word	0x40030ec0
4000f0b8:	40030e48 	.word	0x40030e48
4000f0bc:	40030e50 	.word	0x40030e50
4000f0c0:	f0f0f0f0 	.word	0xf0f0f0f0
4000f0c4:	40030eb8 	.word	0x40030eb8
4000f0c8:	40030eb4 	.word	0x40030eb4
4000f0cc:	40030ea8 	.word	0x40030ea8
4000f0d0:	40030e6c 	.word	0x40030e6c
4000f0d4:	40030e54 	.word	0x40030e54

4000f0d8 <_tx_thread_shell_entry>:
4000f0d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f0dc:	e59f0088 	ldr	r0, [pc, #136]	; 4000f16c <_tx_thread_shell_entry+0x94>
4000f0e0:	e5907000 	ldr	r7, [r0]
4000f0e4:	e10f4000 	mrs	r4, CPSR
4000f0e8:	e3845080 	orr	r5, r4, #128	; 0x80
4000f0ec:	e121f005 	msr	CPSR_c, r5
4000f0f0:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f0f4:	e121f004 	msr	CPSR_c, r4
4000f0f8:	e3560000 	cmp	r6, #0
4000f0fc:	0a000002 	beq	4000f10c <_tx_thread_shell_entry+0x34>
4000f100:	e3a01000 	mov	r1, #0
4000f104:	e1a00007 	mov	r0, r7
4000f108:	e12fff36 	blx	r6
4000f10c:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f110:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f114:	e12fff31 	blx	r1
4000f118:	e10f4000 	mrs	r4, CPSR
4000f11c:	e3845080 	orr	r5, r4, #128	; 0x80
4000f120:	e121f005 	msr	CPSR_c, r5
4000f124:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f128:	e3a00001 	mov	r0, #1
4000f12c:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f130:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f134:	e59f0034 	ldr	r0, [pc, #52]	; 4000f170 <_tx_thread_shell_entry+0x98>
4000f138:	e5900000 	ldr	r0, [r0]
4000f13c:	e2800001 	add	r0, r0, #1
4000f140:	e59f1028 	ldr	r1, [pc, #40]	; 4000f170 <_tx_thread_shell_entry+0x98>
4000f144:	e5810000 	str	r0, [r1]
4000f148:	e121f004 	msr	CPSR_c, r4
4000f14c:	e3560000 	cmp	r6, #0
4000f150:	0a000002 	beq	4000f160 <_tx_thread_shell_entry+0x88>
4000f154:	e3a01001 	mov	r1, #1
4000f158:	e1a00007 	mov	r0, r7
4000f15c:	e12fff36 	blx	r6
4000f160:	e1a00007 	mov	r0, r7
4000f164:	ebffe6cf 	bl	40008ca8 <_tx_thread_system_suspend>
4000f168:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f16c:	40030e50 	.word	0x40030e50
4000f170:	40030e6c 	.word	0x40030e6c

4000f174 <_tx_thread_stack_analyze>:
4000f174:	e92d4070 	push	{r4, r5, r6, lr}
4000f178:	e10f1000 	mrs	r1, CPSR
4000f17c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f180:	e121f002 	msr	CPSR_c, r2
4000f184:	e3500000 	cmp	r0, #0
4000f188:	0a000003 	beq	4000f19c <_tx_thread_stack_analyze+0x28>
4000f18c:	e5905000 	ldr	r5, [r0]
4000f190:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f240 <_tx_thread_stack_analyze+0xcc>
4000f194:	e1550006 	cmp	r5, r6
4000f198:	0a000001 	beq	4000f1a4 <_tx_thread_stack_analyze+0x30>
4000f19c:	e121f001 	msr	CPSR_c, r1
4000f1a0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f1a4:	e590c008 	ldr	ip, [r0, #8]
4000f1a8:	e590300c 	ldr	r3, [r0, #12]
4000f1ac:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f1b0:	e121f001 	msr	CPSR_c, r1
4000f1b4:	e24ec004 	sub	ip, lr, #4
4000f1b8:	e04e6003 	sub	r6, lr, r3
4000f1bc:	e1a05146 	asr	r5, r6, #2
4000f1c0:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f1c4:	e1a040c6 	asr	r4, r6, #1
4000f1c8:	e083c104 	add	ip, r3, r4, lsl #2
4000f1cc:	e1a00000 	nop			; (mov r0, r0)
4000f1d0:	e59c5000 	ldr	r5, [ip]
4000f1d4:	e59f6068 	ldr	r6, [pc, #104]	; 4000f244 <_tx_thread_stack_analyze+0xd0>
4000f1d8:	e1550006 	cmp	r5, r6
4000f1dc:	0a000002 	beq	4000f1ec <_tx_thread_stack_analyze+0x78>
4000f1e0:	e1a050a4 	lsr	r5, r4, #1
4000f1e4:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f1e8:	ea000001 	b	4000f1f4 <_tx_thread_stack_analyze+0x80>
4000f1ec:	e1a050a4 	lsr	r5, r4, #1
4000f1f0:	e08cc105 	add	ip, ip, r5, lsl #2
4000f1f4:	e1a040a4 	lsr	r4, r4, #1
4000f1f8:	e3540001 	cmp	r4, #1
4000f1fc:	8afffff3 	bhi	4000f1d0 <_tx_thread_stack_analyze+0x5c>
4000f200:	ea000000 	b	4000f208 <_tx_thread_stack_analyze+0x94>
4000f204:	e28cc004 	add	ip, ip, #4
4000f208:	e59c5000 	ldr	r5, [ip]
4000f20c:	e59f6030 	ldr	r6, [pc, #48]	; 4000f244 <_tx_thread_stack_analyze+0xd0>
4000f210:	e1550006 	cmp	r5, r6
4000f214:	0afffffa 	beq	4000f204 <_tx_thread_stack_analyze+0x90>
4000f218:	e10f1000 	mrs	r1, CPSR
4000f21c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f220:	e121f002 	msr	CPSR_c, r2
4000f224:	e5905000 	ldr	r5, [r0]
4000f228:	e59f6010 	ldr	r6, [pc, #16]	; 4000f240 <_tx_thread_stack_analyze+0xcc>
4000f22c:	e1550006 	cmp	r5, r6
4000f230:	1a000000 	bne	4000f238 <_tx_thread_stack_analyze+0xc4>
4000f234:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f238:	e121f001 	msr	CPSR_c, r1
4000f23c:	eaffffd7 	b	4000f1a0 <_tx_thread_stack_analyze+0x2c>
4000f240:	54485244 	.word	0x54485244
4000f244:	efefefef 	.word	0xefefefef

4000f248 <_tx_thread_stack_error_handler>:
4000f248:	e92d4070 	push	{r4, r5, r6, lr}
4000f24c:	e1a04000 	mov	r4, r0
4000f250:	e10f5000 	mrs	r5, CPSR
4000f254:	e3856080 	orr	r6, r5, #128	; 0x80
4000f258:	e121f006 	msr	CPSR_c, r6
4000f25c:	e59f002c 	ldr	r0, [pc, #44]	; 4000f290 <_tx_thread_stack_error_handler+0x48>
4000f260:	e5900000 	ldr	r0, [r0]
4000f264:	e3500000 	cmp	r0, #0
4000f268:	0a000004 	beq	4000f280 <_tx_thread_stack_error_handler+0x38>
4000f26c:	e1a00004 	mov	r0, r4
4000f270:	e59f1018 	ldr	r1, [pc, #24]	; 4000f290 <_tx_thread_stack_error_handler+0x48>
4000f274:	e5911000 	ldr	r1, [r1]
4000f278:	e12fff31 	blx	r1
4000f27c:	ea000001 	b	4000f288 <_tx_thread_stack_error_handler+0x40>
4000f280:	e1a00000 	nop			; (mov r0, r0)
4000f284:	eafffffe 	b	4000f284 <_tx_thread_stack_error_handler+0x3c>
4000f288:	e121f005 	msr	CPSR_c, r5
4000f28c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f290:	40030e74 	.word	0x40030e74

4000f294 <_tx_thread_system_preempt_check>:
4000f294:	e92d4010 	push	{r4, lr}
4000f298:	e59f0090 	ldr	r0, [pc, #144]	; 4000f330 <_tx_thread_system_preempt_check+0x9c>
4000f29c:	e5900000 	ldr	r0, [r0]
4000f2a0:	e59f108c 	ldr	r1, [pc, #140]	; 4000f334 <_tx_thread_system_preempt_check+0xa0>
4000f2a4:	e5911000 	ldr	r1, [r1]
4000f2a8:	e1500001 	cmp	r0, r1
4000f2ac:	0a00001e 	beq	4000f32c <_tx_thread_system_preempt_check+0x98>
4000f2b0:	e59f0080 	ldr	r0, [pc, #128]	; 4000f338 <_tx_thread_system_preempt_check+0xa4>
4000f2b4:	e5900000 	ldr	r0, [r0]
4000f2b8:	e59f107c 	ldr	r1, [pc, #124]	; 4000f33c <_tx_thread_system_preempt_check+0xa8>
4000f2bc:	e5911000 	ldr	r1, [r1]
4000f2c0:	e1900001 	orrs	r0, r0, r1
4000f2c4:	1a000018 	bne	4000f32c <_tx_thread_system_preempt_check+0x98>
4000f2c8:	e59f0064 	ldr	r0, [pc, #100]	; 4000f334 <_tx_thread_system_preempt_check+0xa0>
4000f2cc:	e5904000 	ldr	r4, [r0]
4000f2d0:	e5940008 	ldr	r0, [r4, #8]
4000f2d4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f2d8:	e1500001 	cmp	r0, r1
4000f2dc:	2a000001 	bcs	4000f2e8 <_tx_thread_system_preempt_check+0x54>
4000f2e0:	e5940008 	ldr	r0, [r4, #8]
4000f2e4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f2e8:	e594000c 	ldr	r0, [r4, #12]
4000f2ec:	e5900000 	ldr	r0, [r0]
4000f2f0:	e59f1048 	ldr	r1, [pc, #72]	; 4000f340 <_tx_thread_system_preempt_check+0xac>
4000f2f4:	e1500001 	cmp	r0, r1
4000f2f8:	1a000007 	bne	4000f31c <_tx_thread_system_preempt_check+0x88>
4000f2fc:	e5940010 	ldr	r0, [r4, #16]
4000f300:	e5900001 	ldr	r0, [r0, #1]
4000f304:	e1500001 	cmp	r0, r1
4000f308:	1a000003 	bne	4000f31c <_tx_thread_system_preempt_check+0x88>
4000f30c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f310:	e594100c 	ldr	r1, [r4, #12]
4000f314:	e1500001 	cmp	r0, r1
4000f318:	2a000001 	bcs	4000f324 <_tx_thread_system_preempt_check+0x90>
4000f31c:	e1a00004 	mov	r0, r4
4000f320:	ebffffc8 	bl	4000f248 <_tx_thread_stack_error_handler>
4000f324:	ebffee70 	bl	4000acec <_tx_thread_system_return>
4000f328:	e1a00000 	nop			; (mov r0, r0)
4000f32c:	e8bd8010 	pop	{r4, pc}
4000f330:	40030e50 	.word	0x40030e50
4000f334:	40030e54 	.word	0x40030e54
4000f338:	40030e48 	.word	0x40030e48
4000f33c:	40030e6c 	.word	0x40030e6c
4000f340:	efefefef 	.word	0xefefefef

4000f344 <_tx_thread_system_resume>:
4000f344:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f348:	e1a04000 	mov	r4, r0
4000f34c:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f350:	e3500000 	cmp	r0, #0
4000f354:	0a000002 	beq	4000f364 <_tx_thread_system_resume+0x20>
4000f358:	e284004c 	add	r0, r4, #76	; 0x4c
4000f35c:	eb000325 	bl	4000fff8 <_tx_timer_system_deactivate>
4000f360:	ea000001 	b	4000f36c <_tx_thread_system_resume+0x28>
4000f364:	e3a00000 	mov	r0, #0
4000f368:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f36c:	e5940008 	ldr	r0, [r4, #8]
4000f370:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f374:	e1500001 	cmp	r0, r1
4000f378:	2a000001 	bcs	4000f384 <_tx_thread_system_resume+0x40>
4000f37c:	e5940008 	ldr	r0, [r4, #8]
4000f380:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f384:	e594000c 	ldr	r0, [r4, #12]
4000f388:	e5900000 	ldr	r0, [r0]
4000f38c:	e59f133c 	ldr	r1, [pc, #828]	; 4000f6d0 <_tx_thread_system_resume+0x38c>
4000f390:	e1500001 	cmp	r0, r1
4000f394:	1a000007 	bne	4000f3b8 <_tx_thread_system_resume+0x74>
4000f398:	e5940010 	ldr	r0, [r4, #16]
4000f39c:	e5900001 	ldr	r0, [r0, #1]
4000f3a0:	e1500001 	cmp	r0, r1
4000f3a4:	1a000003 	bne	4000f3b8 <_tx_thread_system_resume+0x74>
4000f3a8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f3ac:	e594100c 	ldr	r1, [r4, #12]
4000f3b0:	e1500001 	cmp	r0, r1
4000f3b4:	2a000001 	bcs	4000f3c0 <_tx_thread_system_resume+0x7c>
4000f3b8:	e1a00004 	mov	r0, r4
4000f3bc:	ebffffa1 	bl	4000f248 <_tx_thread_stack_error_handler>
4000f3c0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f3c4:	e5100004 	ldr	r0, [r0, #-4]
4000f3c8:	e59f1300 	ldr	r1, [pc, #768]	; 4000f6d0 <_tx_thread_system_resume+0x38c>
4000f3cc:	e1500001 	cmp	r0, r1
4000f3d0:	0a000001 	beq	4000f3dc <_tx_thread_system_resume+0x98>
4000f3d4:	e1a00004 	mov	r0, r4
4000f3d8:	ebffff65 	bl	4000f174 <_tx_thread_stack_analyze>
4000f3dc:	e10f5000 	mrs	r5, CPSR
4000f3e0:	e3856080 	orr	r6, r5, #128	; 0x80
4000f3e4:	e121f006 	msr	CPSR_c, r6
4000f3e8:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f6d4 <_tx_thread_system_resume+0x390>
4000f3ec:	e5900000 	ldr	r0, [r0]
4000f3f0:	e2400001 	sub	r0, r0, #1
4000f3f4:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f6d4 <_tx_thread_system_resume+0x390>
4000f3f8:	e5810000 	str	r0, [r1]
4000f3fc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f400:	e3500000 	cmp	r0, #0
4000f404:	0a000009 	beq	4000f430 <_tx_thread_system_resume+0xec>
4000f408:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f40c:	e3500001 	cmp	r0, #1
4000f410:	0a000084 	beq	4000f628 <_tx_thread_system_resume+0x2e4>
4000f414:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f418:	e3500002 	cmp	r0, #2
4000f41c:	0a000081 	beq	4000f628 <_tx_thread_system_resume+0x2e4>
4000f420:	e3a00000 	mov	r0, #0
4000f424:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f428:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f42c:	ea00007d 	b	4000f628 <_tx_thread_system_resume+0x2e4>
4000f430:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f434:	e3500000 	cmp	r0, #0
4000f438:	0a00007a 	beq	4000f628 <_tx_thread_system_resume+0x2e4>
4000f43c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f440:	e3500000 	cmp	r0, #0
4000f444:	0a000004 	beq	4000f45c <_tx_thread_system_resume+0x118>
4000f448:	e3a00000 	mov	r0, #0
4000f44c:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f450:	e3a00003 	mov	r0, #3
4000f454:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f458:	ea000072 	b	4000f628 <_tx_thread_system_resume+0x2e4>
4000f45c:	e59f1274 	ldr	r1, [pc, #628]	; 4000f6d8 <_tx_thread_system_resume+0x394>
4000f460:	e5910000 	ldr	r0, [r1]
4000f464:	e3500000 	cmp	r0, #0
4000f468:	0a000032 	beq	4000f538 <_tx_thread_system_resume+0x1f4>
4000f46c:	e59f1268 	ldr	r1, [pc, #616]	; 4000f6dc <_tx_thread_system_resume+0x398>
4000f470:	e5911000 	ldr	r1, [r1]
4000f474:	e2811001 	add	r1, r1, #1
4000f478:	e59f225c 	ldr	r2, [pc, #604]	; 4000f6dc <_tx_thread_system_resume+0x398>
4000f47c:	e5821000 	str	r1, [r2]
4000f480:	e580100c 	str	r1, [r0, #12]
4000f484:	e59f1254 	ldr	r1, [pc, #596]	; 4000f6e0 <_tx_thread_system_resume+0x39c>
4000f488:	e5911000 	ldr	r1, [r1]
4000f48c:	e3510000 	cmp	r1, #0
4000f490:	1a000006 	bne	4000f4b0 <_tx_thread_system_resume+0x16c>
4000f494:	e59f1248 	ldr	r1, [pc, #584]	; 4000f6e4 <_tx_thread_system_resume+0x3a0>
4000f498:	e5911000 	ldr	r1, [r1]
4000f49c:	e5801000 	str	r1, [r0]
4000f4a0:	e5901000 	ldr	r1, [r0]
4000f4a4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f4a8:	e5801004 	str	r1, [r0, #4]
4000f4ac:	ea00000d 	b	4000f4e8 <_tx_thread_system_resume+0x1a4>
4000f4b0:	e59f1228 	ldr	r1, [pc, #552]	; 4000f6e0 <_tx_thread_system_resume+0x39c>
4000f4b4:	e5911000 	ldr	r1, [r1]
4000f4b8:	e59f2228 	ldr	r2, [pc, #552]	; 4000f6e8 <_tx_thread_system_resume+0x3a4>
4000f4bc:	e1510002 	cmp	r1, r2
4000f4c0:	2a000004 	bcs	4000f4d8 <_tx_thread_system_resume+0x194>
4000f4c4:	e3e01000 	mvn	r1, #0
4000f4c8:	e5801000 	str	r1, [r0]
4000f4cc:	e3a01000 	mov	r1, #0
4000f4d0:	e5801004 	str	r1, [r0, #4]
4000f4d4:	ea000003 	b	4000f4e8 <_tx_thread_system_resume+0x1a4>
4000f4d8:	e59f1208 	ldr	r1, [pc, #520]	; 4000f6e8 <_tx_thread_system_resume+0x3a4>
4000f4dc:	e5801000 	str	r1, [r0]
4000f4e0:	e3a01000 	mov	r1, #0
4000f4e4:	e5801004 	str	r1, [r0, #4]
4000f4e8:	e3a01001 	mov	r1, #1
4000f4ec:	e5801008 	str	r1, [r0, #8]
4000f4f0:	e5804010 	str	r4, [r0, #16]
4000f4f4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f4f8:	e5801014 	str	r1, [r0, #20]
4000f4fc:	e580d018 	str	sp, [r0, #24]
4000f500:	e3a01000 	mov	r1, #0
4000f504:	e580101c 	str	r1, [r0, #28]
4000f508:	e2800020 	add	r0, r0, #32
4000f50c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f6ec <_tx_thread_system_resume+0x3a8>
4000f510:	e5911000 	ldr	r1, [r1]
4000f514:	e1500001 	cmp	r0, r1
4000f518:	3a000001 	bcc	4000f524 <_tx_thread_system_resume+0x1e0>
4000f51c:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f6f0 <_tx_thread_system_resume+0x3ac>
4000f520:	e5910000 	ldr	r0, [r1]
4000f524:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f6d8 <_tx_thread_system_resume+0x394>
4000f528:	e5810000 	str	r0, [r1]
4000f52c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f6f4 <_tx_thread_system_resume+0x3b0>
4000f530:	e5911000 	ldr	r1, [r1]
4000f534:	e5810020 	str	r0, [r1, #32]
4000f538:	e3a00000 	mov	r0, #0
4000f53c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f540:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f544:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f6f8 <_tx_thread_system_resume+0x3b4>
4000f548:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f54c:	e3580000 	cmp	r8, #0
4000f550:	0a000005 	beq	4000f56c <_tx_thread_system_resume+0x228>
4000f554:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f558:	e5894020 	str	r4, [r9, #32]
4000f55c:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f560:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f564:	e5848020 	str	r8, [r4, #32]
4000f568:	ea00002e 	b	4000f628 <_tx_thread_system_resume+0x2e4>
4000f56c:	e59f0184 	ldr	r0, [pc, #388]	; 4000f6f8 <_tx_thread_system_resume+0x3b4>
4000f570:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f574:	e5844020 	str	r4, [r4, #32]
4000f578:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f57c:	e59f0178 	ldr	r0, [pc, #376]	; 4000f6fc <_tx_thread_system_resume+0x3b8>
4000f580:	e5900000 	ldr	r0, [r0]
4000f584:	e3a01001 	mov	r1, #1
4000f588:	e1800711 	orr	r0, r0, r1, lsl r7
4000f58c:	e59f1168 	ldr	r1, [pc, #360]	; 4000f6fc <_tx_thread_system_resume+0x3b8>
4000f590:	e5810000 	str	r0, [r1]
4000f594:	e59f0164 	ldr	r0, [pc, #356]	; 4000f700 <_tx_thread_system_resume+0x3bc>
4000f598:	e5900000 	ldr	r0, [r0]
4000f59c:	e58d0000 	str	r0, [sp]
4000f5a0:	e59d0000 	ldr	r0, [sp]
4000f5a4:	e3500000 	cmp	r0, #0
4000f5a8:	1a000004 	bne	4000f5c0 <_tx_thread_system_resume+0x27c>
4000f5ac:	e59f014c 	ldr	r0, [pc, #332]	; 4000f700 <_tx_thread_system_resume+0x3bc>
4000f5b0:	e5804000 	str	r4, [r0]
4000f5b4:	e59f0148 	ldr	r0, [pc, #328]	; 4000f704 <_tx_thread_system_resume+0x3c0>
4000f5b8:	e5807000 	str	r7, [r0]
4000f5bc:	ea000019 	b	4000f628 <_tx_thread_system_resume+0x2e4>
4000f5c0:	e59f013c 	ldr	r0, [pc, #316]	; 4000f704 <_tx_thread_system_resume+0x3c0>
4000f5c4:	e5900000 	ldr	r0, [r0]
4000f5c8:	e1570000 	cmp	r7, r0
4000f5cc:	2a000015 	bcs	4000f628 <_tx_thread_system_resume+0x2e4>
4000f5d0:	e59f012c 	ldr	r0, [pc, #300]	; 4000f704 <_tx_thread_system_resume+0x3c0>
4000f5d4:	e5807000 	str	r7, [r0]
4000f5d8:	e59d0000 	ldr	r0, [sp]
4000f5dc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f5e0:	e1500007 	cmp	r0, r7
4000f5e4:	9a00000f 	bls	4000f628 <_tx_thread_system_resume+0x2e4>
4000f5e8:	e59d0000 	ldr	r0, [sp]
4000f5ec:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f5f0:	e59d1000 	ldr	r1, [sp]
4000f5f4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f5f8:	e1500001 	cmp	r0, r1
4000f5fc:	0a000007 	beq	4000f620 <_tx_thread_system_resume+0x2dc>
4000f600:	e59f0100 	ldr	r0, [pc, #256]	; 4000f708 <_tx_thread_system_resume+0x3c4>
4000f604:	e5900000 	ldr	r0, [r0]
4000f608:	e59d1000 	ldr	r1, [sp]
4000f60c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f610:	e3a02001 	mov	r2, #1
4000f614:	e1800112 	orr	r0, r0, r2, lsl r1
4000f618:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f708 <_tx_thread_system_resume+0x3c4>
4000f61c:	e5810000 	str	r0, [r1]
4000f620:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f700 <_tx_thread_system_resume+0x3bc>
4000f624:	e5804000 	str	r4, [r0]
4000f628:	e121f005 	msr	CPSR_c, r5
4000f62c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f6e4 <_tx_thread_system_resume+0x3a0>
4000f630:	e5900000 	ldr	r0, [r0]
4000f634:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f700 <_tx_thread_system_resume+0x3bc>
4000f638:	e5911000 	ldr	r1, [r1]
4000f63c:	e1500001 	cmp	r0, r1
4000f640:	0a000021 	beq	4000f6cc <_tx_thread_system_resume+0x388>
4000f644:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f700 <_tx_thread_system_resume+0x3bc>
4000f648:	e5900000 	ldr	r0, [r0]
4000f64c:	e1540000 	cmp	r4, r0
4000f650:	0a000016 	beq	4000f6b0 <_tx_thread_system_resume+0x36c>
4000f654:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f700 <_tx_thread_system_resume+0x3bc>
4000f658:	e5904000 	ldr	r4, [r0]
4000f65c:	e5940008 	ldr	r0, [r4, #8]
4000f660:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f664:	e1500001 	cmp	r0, r1
4000f668:	2a000001 	bcs	4000f674 <_tx_thread_system_resume+0x330>
4000f66c:	e5940008 	ldr	r0, [r4, #8]
4000f670:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f674:	e594000c 	ldr	r0, [r4, #12]
4000f678:	e5900000 	ldr	r0, [r0]
4000f67c:	e59f104c 	ldr	r1, [pc, #76]	; 4000f6d0 <_tx_thread_system_resume+0x38c>
4000f680:	e1500001 	cmp	r0, r1
4000f684:	1a000007 	bne	4000f6a8 <_tx_thread_system_resume+0x364>
4000f688:	e5940010 	ldr	r0, [r4, #16]
4000f68c:	e5900001 	ldr	r0, [r0, #1]
4000f690:	e1500001 	cmp	r0, r1
4000f694:	1a000003 	bne	4000f6a8 <_tx_thread_system_resume+0x364>
4000f698:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f69c:	e594100c 	ldr	r1, [r4, #12]
4000f6a0:	e1500001 	cmp	r0, r1
4000f6a4:	2a000001 	bcs	4000f6b0 <_tx_thread_system_resume+0x36c>
4000f6a8:	e1a00004 	mov	r0, r4
4000f6ac:	ebfffee5 	bl	4000f248 <_tx_thread_stack_error_handler>
4000f6b0:	e59f0028 	ldr	r0, [pc, #40]	; 4000f6e0 <_tx_thread_system_resume+0x39c>
4000f6b4:	e5900000 	ldr	r0, [r0]
4000f6b8:	e59f1014 	ldr	r1, [pc, #20]	; 4000f6d4 <_tx_thread_system_resume+0x390>
4000f6bc:	e5911000 	ldr	r1, [r1]
4000f6c0:	e1900001 	orrs	r0, r0, r1
4000f6c4:	1a000000 	bne	4000f6cc <_tx_thread_system_resume+0x388>
4000f6c8:	ebffed87 	bl	4000acec <_tx_thread_system_return>
4000f6cc:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f6d0:	efefefef 	.word	0xefefefef
4000f6d4:	40030e6c 	.word	0x40030e6c
4000f6d8:	40030ebc 	.word	0x40030ebc
4000f6dc:	40030ec0 	.word	0x40030ec0
4000f6e0:	40030e48 	.word	0x40030e48
4000f6e4:	40030e50 	.word	0x40030e50
4000f6e8:	f0f0f0f0 	.word	0xf0f0f0f0
4000f6ec:	40030eb8 	.word	0x40030eb8
4000f6f0:	40030eb4 	.word	0x40030eb4
4000f6f4:	40030ea8 	.word	0x40030ea8
4000f6f8:	40032874 	.word	0x40032874
4000f6fc:	40030e60 	.word	0x40030e60
4000f700:	40030e54 	.word	0x40030e54
4000f704:	40030e68 	.word	0x40030e68
4000f708:	40030e64 	.word	0x40030e64

4000f70c <_tx_thread_time_slice>:
4000f70c:	e92d4070 	push	{r4, r5, r6, lr}
4000f710:	e59f0140 	ldr	r0, [pc, #320]	; 4000f858 <_tx_thread_time_slice+0x14c>
4000f714:	e5906000 	ldr	r6, [r0]
4000f718:	e5960008 	ldr	r0, [r6, #8]
4000f71c:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f720:	e1500001 	cmp	r0, r1
4000f724:	2a000001 	bcs	4000f730 <_tx_thread_time_slice+0x24>
4000f728:	e5960008 	ldr	r0, [r6, #8]
4000f72c:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f730:	e596000c 	ldr	r0, [r6, #12]
4000f734:	e5900000 	ldr	r0, [r0]
4000f738:	e59f111c 	ldr	r1, [pc, #284]	; 4000f85c <_tx_thread_time_slice+0x150>
4000f73c:	e1500001 	cmp	r0, r1
4000f740:	1a000007 	bne	4000f764 <_tx_thread_time_slice+0x58>
4000f744:	e5960010 	ldr	r0, [r6, #16]
4000f748:	e5900001 	ldr	r0, [r0, #1]
4000f74c:	e1500001 	cmp	r0, r1
4000f750:	1a000003 	bne	4000f764 <_tx_thread_time_slice+0x58>
4000f754:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f758:	e596100c 	ldr	r1, [r6, #12]
4000f75c:	e1500001 	cmp	r0, r1
4000f760:	2a000001 	bcs	4000f76c <_tx_thread_time_slice+0x60>
4000f764:	e1a00006 	mov	r0, r6
4000f768:	ebfffeb6 	bl	4000f248 <_tx_thread_stack_error_handler>
4000f76c:	e10f4000 	mrs	r4, CPSR
4000f770:	e3845080 	orr	r5, r4, #128	; 0x80
4000f774:	e121f005 	msr	CPSR_c, r5
4000f778:	e3a00000 	mov	r0, #0
4000f77c:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f860 <_tx_thread_time_slice+0x154>
4000f780:	e5810000 	str	r0, [r1]
4000f784:	e3560000 	cmp	r6, #0
4000f788:	0a000030 	beq	4000f850 <_tx_thread_time_slice+0x144>
4000f78c:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f790:	e3500000 	cmp	r0, #0
4000f794:	1a00002d 	bne	4000f850 <_tx_thread_time_slice+0x144>
4000f798:	e596001c 	ldr	r0, [r6, #28]
4000f79c:	e5860018 	str	r0, [r6, #24]
4000f7a0:	e5960020 	ldr	r0, [r6, #32]
4000f7a4:	e1500006 	cmp	r0, r6
4000f7a8:	0a000025 	beq	4000f844 <_tx_thread_time_slice+0x138>
4000f7ac:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f7b0:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f7b4:	e1500001 	cmp	r0, r1
4000f7b8:	1a000021 	bne	4000f844 <_tx_thread_time_slice+0x138>
4000f7bc:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f864 <_tx_thread_time_slice+0x158>
4000f7c0:	e5960020 	ldr	r0, [r6, #32]
4000f7c4:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f7c8:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f7cc:	e2820000 	add	r0, r2, #0
4000f7d0:	e59f1090 	ldr	r1, [pc, #144]	; 4000f868 <_tx_thread_time_slice+0x15c>
4000f7d4:	e5911000 	ldr	r1, [r1]
4000f7d8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f7dc:	e59f1088 	ldr	r1, [pc, #136]	; 4000f86c <_tx_thread_time_slice+0x160>
4000f7e0:	e5810000 	str	r0, [r1]
4000f7e4:	e2810000 	add	r0, r1, #0
4000f7e8:	e5906000 	ldr	r6, [r0]
4000f7ec:	e5960008 	ldr	r0, [r6, #8]
4000f7f0:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f7f4:	e1500001 	cmp	r0, r1
4000f7f8:	2a000001 	bcs	4000f804 <_tx_thread_time_slice+0xf8>
4000f7fc:	e5960008 	ldr	r0, [r6, #8]
4000f800:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f804:	e596000c 	ldr	r0, [r6, #12]
4000f808:	e5900000 	ldr	r0, [r0]
4000f80c:	e59f1048 	ldr	r1, [pc, #72]	; 4000f85c <_tx_thread_time_slice+0x150>
4000f810:	e1500001 	cmp	r0, r1
4000f814:	1a000007 	bne	4000f838 <_tx_thread_time_slice+0x12c>
4000f818:	e5960010 	ldr	r0, [r6, #16]
4000f81c:	e5900001 	ldr	r0, [r0, #1]
4000f820:	e1500001 	cmp	r0, r1
4000f824:	1a000003 	bne	4000f838 <_tx_thread_time_slice+0x12c>
4000f828:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f82c:	e596100c 	ldr	r1, [r6, #12]
4000f830:	e1500001 	cmp	r0, r1
4000f834:	2a000005 	bcs	4000f850 <_tx_thread_time_slice+0x144>
4000f838:	e1a00006 	mov	r0, r6
4000f83c:	ebfffe81 	bl	4000f248 <_tx_thread_stack_error_handler>
4000f840:	ea000002 	b	4000f850 <_tx_thread_time_slice+0x144>
4000f844:	e59f1024 	ldr	r1, [pc, #36]	; 4000f870 <_tx_thread_time_slice+0x164>
4000f848:	e5960018 	ldr	r0, [r6, #24]
4000f84c:	e5810000 	str	r0, [r1]
4000f850:	e121f004 	msr	CPSR_c, r4
4000f854:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f858:	40030e50 	.word	0x40030e50
4000f85c:	efefefef 	.word	0xefefefef
4000f860:	40030e80 	.word	0x40030e80
4000f864:	40032874 	.word	0x40032874
4000f868:	40030e68 	.word	0x40030e68
4000f86c:	40030e54 	.word	0x40030e54
4000f870:	40030e7c 	.word	0x40030e7c

4000f874 <_tx_thread_timeout>:
4000f874:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f878:	e1a04000 	mov	r4, r0
4000f87c:	e1a08004 	mov	r8, r4
4000f880:	e10f5000 	mrs	r5, CPSR
4000f884:	e3856080 	orr	r6, r5, #128	; 0x80
4000f888:	e121f006 	msr	CPSR_c, r6
4000f88c:	e1a04008 	mov	r4, r8
4000f890:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f894:	e3500004 	cmp	r0, #4
4000f898:	1a000008 	bne	4000f8c0 <_tx_thread_timeout+0x4c>
4000f89c:	e59f0038 	ldr	r0, [pc, #56]	; 4000f8dc <_tx_thread_timeout+0x68>
4000f8a0:	e5900000 	ldr	r0, [r0]
4000f8a4:	e2800001 	add	r0, r0, #1
4000f8a8:	e59f102c 	ldr	r1, [pc, #44]	; 4000f8dc <_tx_thread_timeout+0x68>
4000f8ac:	e5810000 	str	r0, [r1]
4000f8b0:	e121f005 	msr	CPSR_c, r5
4000f8b4:	e1a00008 	mov	r0, r8
4000f8b8:	ebfffea1 	bl	4000f344 <_tx_thread_system_resume>
4000f8bc:	ea000005 	b	4000f8d8 <_tx_thread_timeout+0x64>
4000f8c0:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f8c4:	e121f005 	msr	CPSR_c, r5
4000f8c8:	e3570000 	cmp	r7, #0
4000f8cc:	0a000001 	beq	4000f8d8 <_tx_thread_timeout+0x64>
4000f8d0:	e1a00008 	mov	r0, r8
4000f8d4:	e12fff37 	blx	r7
4000f8d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f8dc:	40030e6c 	.word	0x40030e6c

4000f8e0 <_tx_timer_activate>:
4000f8e0:	e92d4070 	push	{r4, r5, r6, lr}
4000f8e4:	e1a04000 	mov	r4, r0
4000f8e8:	e10f5000 	mrs	r5, CPSR
4000f8ec:	e3856080 	orr	r6, r5, #128	; 0x80
4000f8f0:	e121f006 	msr	CPSR_c, r6
4000f8f4:	e59f1104 	ldr	r1, [pc, #260]	; 4000fa00 <_tx_timer_activate+0x120>
4000f8f8:	e5910000 	ldr	r0, [r1]
4000f8fc:	e3500000 	cmp	r0, #0
4000f900:	0a000031 	beq	4000f9cc <_tx_timer_activate+0xec>
4000f904:	e59f10f8 	ldr	r1, [pc, #248]	; 4000fa04 <_tx_timer_activate+0x124>
4000f908:	e5911000 	ldr	r1, [r1]
4000f90c:	e2811001 	add	r1, r1, #1
4000f910:	e59f20ec 	ldr	r2, [pc, #236]	; 4000fa04 <_tx_timer_activate+0x124>
4000f914:	e5821000 	str	r1, [r2]
4000f918:	e580100c 	str	r1, [r0, #12]
4000f91c:	e59f10e4 	ldr	r1, [pc, #228]	; 4000fa08 <_tx_timer_activate+0x128>
4000f920:	e5911000 	ldr	r1, [r1]
4000f924:	e3510000 	cmp	r1, #0
4000f928:	1a000006 	bne	4000f948 <_tx_timer_activate+0x68>
4000f92c:	e59f10d8 	ldr	r1, [pc, #216]	; 4000fa0c <_tx_timer_activate+0x12c>
4000f930:	e5911000 	ldr	r1, [r1]
4000f934:	e5801000 	str	r1, [r0]
4000f938:	e5901000 	ldr	r1, [r0]
4000f93c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f940:	e5801004 	str	r1, [r0, #4]
4000f944:	ea00000d 	b	4000f980 <_tx_timer_activate+0xa0>
4000f948:	e59f10b8 	ldr	r1, [pc, #184]	; 4000fa08 <_tx_timer_activate+0x128>
4000f94c:	e5911000 	ldr	r1, [r1]
4000f950:	e59f20b8 	ldr	r2, [pc, #184]	; 4000fa10 <_tx_timer_activate+0x130>
4000f954:	e1510002 	cmp	r1, r2
4000f958:	2a000004 	bcs	4000f970 <_tx_timer_activate+0x90>
4000f95c:	e3e01000 	mvn	r1, #0
4000f960:	e5801000 	str	r1, [r0]
4000f964:	e3a01000 	mov	r1, #0
4000f968:	e5801004 	str	r1, [r0, #4]
4000f96c:	ea000003 	b	4000f980 <_tx_timer_activate+0xa0>
4000f970:	e59f1098 	ldr	r1, [pc, #152]	; 4000fa10 <_tx_timer_activate+0x130>
4000f974:	e5801000 	str	r1, [r0]
4000f978:	e3a01000 	mov	r1, #0
4000f97c:	e5801004 	str	r1, [r0, #4]
4000f980:	e3a0107a 	mov	r1, #122	; 0x7a
4000f984:	e5801008 	str	r1, [r0, #8]
4000f988:	e5804010 	str	r4, [r0, #16]
4000f98c:	e3a01000 	mov	r1, #0
4000f990:	e5801014 	str	r1, [r0, #20]
4000f994:	e5801018 	str	r1, [r0, #24]
4000f998:	e580101c 	str	r1, [r0, #28]
4000f99c:	e2800020 	add	r0, r0, #32
4000f9a0:	e59f106c 	ldr	r1, [pc, #108]	; 4000fa14 <_tx_timer_activate+0x134>
4000f9a4:	e5911000 	ldr	r1, [r1]
4000f9a8:	e1500001 	cmp	r0, r1
4000f9ac:	3a000001 	bcc	4000f9b8 <_tx_timer_activate+0xd8>
4000f9b0:	e59f1060 	ldr	r1, [pc, #96]	; 4000fa18 <_tx_timer_activate+0x138>
4000f9b4:	e5910000 	ldr	r0, [r1]
4000f9b8:	e59f1040 	ldr	r1, [pc, #64]	; 4000fa00 <_tx_timer_activate+0x120>
4000f9bc:	e5810000 	str	r0, [r1]
4000f9c0:	e59f1054 	ldr	r1, [pc, #84]	; 4000fa1c <_tx_timer_activate+0x13c>
4000f9c4:	e5911000 	ldr	r1, [r1]
4000f9c8:	e5810020 	str	r0, [r1, #32]
4000f9cc:	e121f005 	msr	CPSR_c, r5
4000f9d0:	e5940020 	ldr	r0, [r4, #32]
4000f9d4:	e3500000 	cmp	r0, #0
4000f9d8:	1a000002 	bne	4000f9e8 <_tx_timer_activate+0x108>
4000f9dc:	e5940008 	ldr	r0, [r4, #8]
4000f9e0:	e3500000 	cmp	r0, #0
4000f9e4:	1a000001 	bne	4000f9f0 <_tx_timer_activate+0x110>
4000f9e8:	e3a00017 	mov	r0, #23
4000f9ec:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f9f0:	e2840008 	add	r0, r4, #8
4000f9f4:	ebffe6c7 	bl	40009518 <_tx_timer_system_activate>
4000f9f8:	e3a00000 	mov	r0, #0
4000f9fc:	eafffffa 	b	4000f9ec <_tx_timer_activate+0x10c>
4000fa00:	40030ebc 	.word	0x40030ebc
4000fa04:	40030ec0 	.word	0x40030ec0
4000fa08:	40030e48 	.word	0x40030e48
4000fa0c:	40030e50 	.word	0x40030e50
4000fa10:	f0f0f0f0 	.word	0xf0f0f0f0
4000fa14:	40030eb8 	.word	0x40030eb8
4000fa18:	40030eb4 	.word	0x40030eb4
4000fa1c:	40030ea8 	.word	0x40030ea8

4000fa20 <_tx_timer_change>:
4000fa20:	e92d4030 	push	{r4, r5, lr}
4000fa24:	e1a03000 	mov	r3, r0
4000fa28:	e10fc000 	mrs	ip, CPSR
4000fa2c:	e38ce080 	orr	lr, ip, #128	; 0x80
4000fa30:	e121f00e 	msr	CPSR_c, lr
4000fa34:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fb2c <_tx_timer_change+0x10c>
4000fa38:	e5940000 	ldr	r0, [r4]
4000fa3c:	e3500000 	cmp	r0, #0
4000fa40:	0a000031 	beq	4000fb0c <_tx_timer_change+0xec>
4000fa44:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fb30 <_tx_timer_change+0x110>
4000fa48:	e5944000 	ldr	r4, [r4]
4000fa4c:	e2844001 	add	r4, r4, #1
4000fa50:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fb30 <_tx_timer_change+0x110>
4000fa54:	e5854000 	str	r4, [r5]
4000fa58:	e580400c 	str	r4, [r0, #12]
4000fa5c:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fb34 <_tx_timer_change+0x114>
4000fa60:	e5944000 	ldr	r4, [r4]
4000fa64:	e3540000 	cmp	r4, #0
4000fa68:	1a000006 	bne	4000fa88 <_tx_timer_change+0x68>
4000fa6c:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fb38 <_tx_timer_change+0x118>
4000fa70:	e5944000 	ldr	r4, [r4]
4000fa74:	e5804000 	str	r4, [r0]
4000fa78:	e5904000 	ldr	r4, [r0]
4000fa7c:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000fa80:	e5804004 	str	r4, [r0, #4]
4000fa84:	ea00000d 	b	4000fac0 <_tx_timer_change+0xa0>
4000fa88:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fb34 <_tx_timer_change+0x114>
4000fa8c:	e5944000 	ldr	r4, [r4]
4000fa90:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fb3c <_tx_timer_change+0x11c>
4000fa94:	e1540005 	cmp	r4, r5
4000fa98:	2a000004 	bcs	4000fab0 <_tx_timer_change+0x90>
4000fa9c:	e3e04000 	mvn	r4, #0
4000faa0:	e5804000 	str	r4, [r0]
4000faa4:	e3a04000 	mov	r4, #0
4000faa8:	e5804004 	str	r4, [r0, #4]
4000faac:	ea000003 	b	4000fac0 <_tx_timer_change+0xa0>
4000fab0:	e59f4084 	ldr	r4, [pc, #132]	; 4000fb3c <_tx_timer_change+0x11c>
4000fab4:	e5804000 	str	r4, [r0]
4000fab8:	e3a04000 	mov	r4, #0
4000fabc:	e5804004 	str	r4, [r0, #4]
4000fac0:	e3a0407b 	mov	r4, #123	; 0x7b
4000fac4:	e5804008 	str	r4, [r0, #8]
4000fac8:	e5803010 	str	r3, [r0, #16]
4000facc:	e5801014 	str	r1, [r0, #20]
4000fad0:	e5802018 	str	r2, [r0, #24]
4000fad4:	e3a04000 	mov	r4, #0
4000fad8:	e580401c 	str	r4, [r0, #28]
4000fadc:	e2800020 	add	r0, r0, #32
4000fae0:	e59f4058 	ldr	r4, [pc, #88]	; 4000fb40 <_tx_timer_change+0x120>
4000fae4:	e5944000 	ldr	r4, [r4]
4000fae8:	e1500004 	cmp	r0, r4
4000faec:	3a000001 	bcc	4000faf8 <_tx_timer_change+0xd8>
4000faf0:	e59f404c 	ldr	r4, [pc, #76]	; 4000fb44 <_tx_timer_change+0x124>
4000faf4:	e5940000 	ldr	r0, [r4]
4000faf8:	e59f402c 	ldr	r4, [pc, #44]	; 4000fb2c <_tx_timer_change+0x10c>
4000fafc:	e5840000 	str	r0, [r4]
4000fb00:	e59f4040 	ldr	r4, [pc, #64]	; 4000fb48 <_tx_timer_change+0x128>
4000fb04:	e5944000 	ldr	r4, [r4]
4000fb08:	e5840020 	str	r0, [r4, #32]
4000fb0c:	e5930020 	ldr	r0, [r3, #32]
4000fb10:	e3500000 	cmp	r0, #0
4000fb14:	1a000001 	bne	4000fb20 <_tx_timer_change+0x100>
4000fb18:	e5831008 	str	r1, [r3, #8]
4000fb1c:	e583200c 	str	r2, [r3, #12]
4000fb20:	e121f00c 	msr	CPSR_c, ip
4000fb24:	e3a00000 	mov	r0, #0
4000fb28:	e8bd8030 	pop	{r4, r5, pc}
4000fb2c:	40030ebc 	.word	0x40030ebc
4000fb30:	40030ec0 	.word	0x40030ec0
4000fb34:	40030e48 	.word	0x40030e48
4000fb38:	40030e50 	.word	0x40030e50
4000fb3c:	f0f0f0f0 	.word	0xf0f0f0f0
4000fb40:	40030eb8 	.word	0x40030eb8
4000fb44:	40030eb4 	.word	0x40030eb4
4000fb48:	40030ea8 	.word	0x40030ea8

4000fb4c <_tx_timer_create>:
4000fb4c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fb50:	e1a04000 	mov	r4, r0
4000fb54:	e1a05001 	mov	r5, r1
4000fb58:	e1a06002 	mov	r6, r2
4000fb5c:	e1a07003 	mov	r7, r3
4000fb60:	e28da030 	add	sl, sp, #48	; 0x30
4000fb64:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fb68:	e3a0102c 	mov	r1, #44	; 0x2c
4000fb6c:	e1a00004 	mov	r0, r4
4000fb70:	eb000eae 	bl	40013630 <__aeabi_memclr4>
4000fb74:	e5845004 	str	r5, [r4, #4]
4000fb78:	e5848008 	str	r8, [r4, #8]
4000fb7c:	e584900c 	str	r9, [r4, #12]
4000fb80:	e5846010 	str	r6, [r4, #16]
4000fb84:	e5847014 	str	r7, [r4, #20]
4000fb88:	e10fb000 	mrs	fp, CPSR
4000fb8c:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fb90:	e58d0008 	str	r0, [sp, #8]
4000fb94:	e59d0008 	ldr	r0, [sp, #8]
4000fb98:	e121f000 	msr	CPSR_c, r0
4000fb9c:	e59f0178 	ldr	r0, [pc, #376]	; 4000fd1c <_tx_timer_create+0x1d0>
4000fba0:	e5840000 	str	r0, [r4]
4000fba4:	e59f0174 	ldr	r0, [pc, #372]	; 4000fd20 <_tx_timer_create+0x1d4>
4000fba8:	e5900000 	ldr	r0, [r0]
4000fbac:	e3500000 	cmp	r0, #0
4000fbb0:	0a00000e 	beq	4000fbf0 <_tx_timer_create+0xa4>
4000fbb4:	e59f0164 	ldr	r0, [pc, #356]	; 4000fd20 <_tx_timer_create+0x1d4>
4000fbb8:	e5900000 	ldr	r0, [r0]
4000fbbc:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fbc0:	e58d0004 	str	r0, [sp, #4]
4000fbc4:	e59f0154 	ldr	r0, [pc, #340]	; 4000fd20 <_tx_timer_create+0x1d4>
4000fbc8:	e5900000 	ldr	r0, [r0]
4000fbcc:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fbd0:	e59d0004 	ldr	r0, [sp, #4]
4000fbd4:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fbd8:	e59d0004 	ldr	r0, [sp, #4]
4000fbdc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fbe0:	e59f0138 	ldr	r0, [pc, #312]	; 4000fd20 <_tx_timer_create+0x1d4>
4000fbe4:	e5900000 	ldr	r0, [r0]
4000fbe8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fbec:	ea000003 	b	4000fc00 <_tx_timer_create+0xb4>
4000fbf0:	e59f0128 	ldr	r0, [pc, #296]	; 4000fd20 <_tx_timer_create+0x1d4>
4000fbf4:	e5804000 	str	r4, [r0]
4000fbf8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fbfc:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fc00:	e59f011c 	ldr	r0, [pc, #284]	; 4000fd24 <_tx_timer_create+0x1d8>
4000fc04:	e5900000 	ldr	r0, [r0]
4000fc08:	e2800001 	add	r0, r0, #1
4000fc0c:	e59f1110 	ldr	r1, [pc, #272]	; 4000fd24 <_tx_timer_create+0x1d8>
4000fc10:	e5810000 	str	r0, [r1]
4000fc14:	e1a03008 	mov	r3, r8
4000fc18:	e1a02005 	mov	r2, r5
4000fc1c:	e1a01004 	mov	r1, r4
4000fc20:	e3a00002 	mov	r0, #2
4000fc24:	e58d9000 	str	r9, [sp]
4000fc28:	eb00011b 	bl	4001009c <_tx_trace_object_register>
4000fc2c:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fd28 <_tx_timer_create+0x1dc>
4000fc30:	e5910000 	ldr	r0, [r1]
4000fc34:	e3500000 	cmp	r0, #0
4000fc38:	0a000030 	beq	4000fd00 <_tx_timer_create+0x1b4>
4000fc3c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fd2c <_tx_timer_create+0x1e0>
4000fc40:	e5911000 	ldr	r1, [r1]
4000fc44:	e2811001 	add	r1, r1, #1
4000fc48:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fd2c <_tx_timer_create+0x1e0>
4000fc4c:	e5821000 	str	r1, [r2]
4000fc50:	e580100c 	str	r1, [r0, #12]
4000fc54:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fd30 <_tx_timer_create+0x1e4>
4000fc58:	e5911000 	ldr	r1, [r1]
4000fc5c:	e3510000 	cmp	r1, #0
4000fc60:	1a000006 	bne	4000fc80 <_tx_timer_create+0x134>
4000fc64:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fd34 <_tx_timer_create+0x1e8>
4000fc68:	e5911000 	ldr	r1, [r1]
4000fc6c:	e5801000 	str	r1, [r0]
4000fc70:	e5901000 	ldr	r1, [r0]
4000fc74:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fc78:	e5801004 	str	r1, [r0, #4]
4000fc7c:	ea00000d 	b	4000fcb8 <_tx_timer_create+0x16c>
4000fc80:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fd30 <_tx_timer_create+0x1e4>
4000fc84:	e5911000 	ldr	r1, [r1]
4000fc88:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fd38 <_tx_timer_create+0x1ec>
4000fc8c:	e1510002 	cmp	r1, r2
4000fc90:	2a000004 	bcs	4000fca8 <_tx_timer_create+0x15c>
4000fc94:	e3e01000 	mvn	r1, #0
4000fc98:	e5801000 	str	r1, [r0]
4000fc9c:	e3a01000 	mov	r1, #0
4000fca0:	e5801004 	str	r1, [r0, #4]
4000fca4:	ea000003 	b	4000fcb8 <_tx_timer_create+0x16c>
4000fca8:	e59f1088 	ldr	r1, [pc, #136]	; 4000fd38 <_tx_timer_create+0x1ec>
4000fcac:	e5801000 	str	r1, [r0]
4000fcb0:	e3a01000 	mov	r1, #0
4000fcb4:	e5801004 	str	r1, [r0, #4]
4000fcb8:	e3a0107c 	mov	r1, #124	; 0x7c
4000fcbc:	e5801008 	str	r1, [r0, #8]
4000fcc0:	e5804010 	str	r4, [r0, #16]
4000fcc4:	e5808014 	str	r8, [r0, #20]
4000fcc8:	e5809018 	str	r9, [r0, #24]
4000fccc:	e580a01c 	str	sl, [r0, #28]
4000fcd0:	e2800020 	add	r0, r0, #32
4000fcd4:	e59f1060 	ldr	r1, [pc, #96]	; 4000fd3c <_tx_timer_create+0x1f0>
4000fcd8:	e5911000 	ldr	r1, [r1]
4000fcdc:	e1500001 	cmp	r0, r1
4000fce0:	3a000001 	bcc	4000fcec <_tx_timer_create+0x1a0>
4000fce4:	e59f1054 	ldr	r1, [pc, #84]	; 4000fd40 <_tx_timer_create+0x1f4>
4000fce8:	e5910000 	ldr	r0, [r1]
4000fcec:	e59f1034 	ldr	r1, [pc, #52]	; 4000fd28 <_tx_timer_create+0x1dc>
4000fcf0:	e5810000 	str	r0, [r1]
4000fcf4:	e59f1048 	ldr	r1, [pc, #72]	; 4000fd44 <_tx_timer_create+0x1f8>
4000fcf8:	e5911000 	ldr	r1, [r1]
4000fcfc:	e5810020 	str	r0, [r1, #32]
4000fd00:	e121f00b 	msr	CPSR_c, fp
4000fd04:	e35a0000 	cmp	sl, #0
4000fd08:	0a000001 	beq	4000fd14 <_tx_timer_create+0x1c8>
4000fd0c:	e2840008 	add	r0, r4, #8
4000fd10:	ebffe600 	bl	40009518 <_tx_timer_system_activate>
4000fd14:	e3a00000 	mov	r0, #0
4000fd18:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fd1c:	4154494d 	.word	0x4154494d
4000fd20:	40030e94 	.word	0x40030e94
4000fd24:	40030e98 	.word	0x40030e98
4000fd28:	40030ebc 	.word	0x40030ebc
4000fd2c:	40030ec0 	.word	0x40030ec0
4000fd30:	40030e48 	.word	0x40030e48
4000fd34:	40030e50 	.word	0x40030e50
4000fd38:	f0f0f0f0 	.word	0xf0f0f0f0
4000fd3c:	40030eb8 	.word	0x40030eb8
4000fd40:	40030eb4 	.word	0x40030eb4
4000fd44:	40030ea8 	.word	0x40030ea8

4000fd48 <_tx_timer_deactivate>:
4000fd48:	e92d4018 	push	{r3, r4, lr}
4000fd4c:	e1a01000 	mov	r1, r0
4000fd50:	e281c008 	add	ip, r1, #8
4000fd54:	e10f2000 	mrs	r2, CPSR
4000fd58:	e3823080 	orr	r3, r2, #128	; 0x80
4000fd5c:	e121f003 	msr	CPSR_c, r3
4000fd60:	e59fe228 	ldr	lr, [pc, #552]	; 4000ff90 <_tx_timer_deactivate+0x248>
4000fd64:	e59e0000 	ldr	r0, [lr]
4000fd68:	e3500000 	cmp	r0, #0
4000fd6c:	0a000031 	beq	4000fe38 <_tx_timer_deactivate+0xf0>
4000fd70:	e59fe21c 	ldr	lr, [pc, #540]	; 4000ff94 <_tx_timer_deactivate+0x24c>
4000fd74:	e59ee000 	ldr	lr, [lr]
4000fd78:	e28ee001 	add	lr, lr, #1
4000fd7c:	e59f4210 	ldr	r4, [pc, #528]	; 4000ff94 <_tx_timer_deactivate+0x24c>
4000fd80:	e584e000 	str	lr, [r4]
4000fd84:	e580e00c 	str	lr, [r0, #12]
4000fd88:	e59fe208 	ldr	lr, [pc, #520]	; 4000ff98 <_tx_timer_deactivate+0x250>
4000fd8c:	e59ee000 	ldr	lr, [lr]
4000fd90:	e35e0000 	cmp	lr, #0
4000fd94:	1a000006 	bne	4000fdb4 <_tx_timer_deactivate+0x6c>
4000fd98:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000ff9c <_tx_timer_deactivate+0x254>
4000fd9c:	e59ee000 	ldr	lr, [lr]
4000fda0:	e580e000 	str	lr, [r0]
4000fda4:	e590e000 	ldr	lr, [r0]
4000fda8:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fdac:	e580e004 	str	lr, [r0, #4]
4000fdb0:	ea00000d 	b	4000fdec <_tx_timer_deactivate+0xa4>
4000fdb4:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000ff98 <_tx_timer_deactivate+0x250>
4000fdb8:	e59ee000 	ldr	lr, [lr]
4000fdbc:	e59f41dc 	ldr	r4, [pc, #476]	; 4000ffa0 <_tx_timer_deactivate+0x258>
4000fdc0:	e15e0004 	cmp	lr, r4
4000fdc4:	2a000004 	bcs	4000fddc <_tx_timer_deactivate+0x94>
4000fdc8:	e3e0e000 	mvn	lr, #0
4000fdcc:	e580e000 	str	lr, [r0]
4000fdd0:	e3a0e000 	mov	lr, #0
4000fdd4:	e580e004 	str	lr, [r0, #4]
4000fdd8:	ea000003 	b	4000fdec <_tx_timer_deactivate+0xa4>
4000fddc:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000ffa0 <_tx_timer_deactivate+0x258>
4000fde0:	e580e000 	str	lr, [r0]
4000fde4:	e3a0e000 	mov	lr, #0
4000fde8:	e580e004 	str	lr, [r0, #4]
4000fdec:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fdf0:	e580e008 	str	lr, [r0, #8]
4000fdf4:	e5801010 	str	r1, [r0, #16]
4000fdf8:	e580d014 	str	sp, [r0, #20]
4000fdfc:	e3a0e000 	mov	lr, #0
4000fe00:	e580e018 	str	lr, [r0, #24]
4000fe04:	e580e01c 	str	lr, [r0, #28]
4000fe08:	e2800020 	add	r0, r0, #32
4000fe0c:	e59fe190 	ldr	lr, [pc, #400]	; 4000ffa4 <_tx_timer_deactivate+0x25c>
4000fe10:	e59ee000 	ldr	lr, [lr]
4000fe14:	e150000e 	cmp	r0, lr
4000fe18:	3a000001 	bcc	4000fe24 <_tx_timer_deactivate+0xdc>
4000fe1c:	e59fe184 	ldr	lr, [pc, #388]	; 4000ffa8 <_tx_timer_deactivate+0x260>
4000fe20:	e59e0000 	ldr	r0, [lr]
4000fe24:	e59fe164 	ldr	lr, [pc, #356]	; 4000ff90 <_tx_timer_deactivate+0x248>
4000fe28:	e58e0000 	str	r0, [lr]
4000fe2c:	e59fe178 	ldr	lr, [pc, #376]	; 4000ffac <_tx_timer_deactivate+0x264>
4000fe30:	e59ee000 	ldr	lr, [lr]
4000fe34:	e58e0020 	str	r0, [lr, #32]
4000fe38:	e59fe170 	ldr	lr, [pc, #368]	; 4000ffb0 <_tx_timer_deactivate+0x268>
4000fe3c:	e59c0018 	ldr	r0, [ip, #24]
4000fe40:	e59ee000 	ldr	lr, [lr]
4000fe44:	e150000e 	cmp	r0, lr
4000fe48:	3a00002b 	bcc	4000fefc <_tx_timer_deactivate+0x1b4>
4000fe4c:	e59fe160 	ldr	lr, [pc, #352]	; 4000ffb4 <_tx_timer_deactivate+0x26c>
4000fe50:	e59c0018 	ldr	r0, [ip, #24]
4000fe54:	e59ee000 	ldr	lr, [lr]
4000fe58:	e150000e 	cmp	r0, lr
4000fe5c:	2a000026 	bcs	4000fefc <_tx_timer_deactivate+0x1b4>
4000fe60:	e59fe150 	ldr	lr, [pc, #336]	; 4000ffb8 <_tx_timer_deactivate+0x270>
4000fe64:	e59c0018 	ldr	r0, [ip, #24]
4000fe68:	e59ee000 	ldr	lr, [lr]
4000fe6c:	e150000e 	cmp	r0, lr
4000fe70:	3a000007 	bcc	4000fe94 <_tx_timer_deactivate+0x14c>
4000fe74:	e59fe13c 	ldr	lr, [pc, #316]	; 4000ffb8 <_tx_timer_deactivate+0x270>
4000fe78:	e59c0018 	ldr	r0, [ip, #24]
4000fe7c:	e59ee000 	ldr	lr, [lr]
4000fe80:	e040000e 	sub	r0, r0, lr
4000fe84:	e3a0e001 	mov	lr, #1
4000fe88:	e08e0140 	add	r0, lr, r0, asr #2
4000fe8c:	e58d0000 	str	r0, [sp]
4000fe90:	ea00000e 	b	4000fed0 <_tx_timer_deactivate+0x188>
4000fe94:	e59fe114 	ldr	lr, [pc, #276]	; 4000ffb0 <_tx_timer_deactivate+0x268>
4000fe98:	e59c0018 	ldr	r0, [ip, #24]
4000fe9c:	e59ee000 	ldr	lr, [lr]
4000fea0:	e040000e 	sub	r0, r0, lr
4000fea4:	e1a00140 	asr	r0, r0, #2
4000fea8:	e58d0000 	str	r0, [sp]
4000feac:	e59f0100 	ldr	r0, [pc, #256]	; 4000ffb4 <_tx_timer_deactivate+0x26c>
4000feb0:	e5900000 	ldr	r0, [r0]
4000feb4:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000ffb8 <_tx_timer_deactivate+0x270>
4000feb8:	e59ee000 	ldr	lr, [lr]
4000febc:	e040000e 	sub	r0, r0, lr
4000fec0:	e59de000 	ldr	lr, [sp]
4000fec4:	e08e0140 	add	r0, lr, r0, asr #2
4000fec8:	e2800001 	add	r0, r0, #1
4000fecc:	e58d0000 	str	r0, [sp]
4000fed0:	e59c0000 	ldr	r0, [ip]
4000fed4:	e3500020 	cmp	r0, #32
4000fed8:	9a000005 	bls	4000fef4 <_tx_timer_deactivate+0x1ac>
4000fedc:	e59c0000 	ldr	r0, [ip]
4000fee0:	e2400020 	sub	r0, r0, #32
4000fee4:	e59de000 	ldr	lr, [sp]
4000fee8:	e080000e 	add	r0, r0, lr
4000feec:	e58c0000 	str	r0, [ip]
4000fef0:	ea000001 	b	4000fefc <_tx_timer_deactivate+0x1b4>
4000fef4:	e59d0000 	ldr	r0, [sp]
4000fef8:	e58c0000 	str	r0, [ip]
4000fefc:	e59c0018 	ldr	r0, [ip, #24]
4000ff00:	e3500000 	cmp	r0, #0
4000ff04:	0a00001e 	beq	4000ff84 <_tx_timer_deactivate+0x23c>
4000ff08:	e59c0010 	ldr	r0, [ip, #16]
4000ff0c:	e150000c 	cmp	r0, ip
4000ff10:	1a000009 	bne	4000ff3c <_tx_timer_deactivate+0x1f4>
4000ff14:	e59c0018 	ldr	r0, [ip, #24]
4000ff18:	e5900000 	ldr	r0, [r0]
4000ff1c:	e150000c 	cmp	r0, ip
4000ff20:	1a000002 	bne	4000ff30 <_tx_timer_deactivate+0x1e8>
4000ff24:	e3a00000 	mov	r0, #0
4000ff28:	e59ce018 	ldr	lr, [ip, #24]
4000ff2c:	e58e0000 	str	r0, [lr]
4000ff30:	e3a00000 	mov	r0, #0
4000ff34:	e58c0018 	str	r0, [ip, #24]
4000ff38:	ea000011 	b	4000ff84 <_tx_timer_deactivate+0x23c>
4000ff3c:	e59c0014 	ldr	r0, [ip, #20]
4000ff40:	e59ce010 	ldr	lr, [ip, #16]
4000ff44:	e58e0014 	str	r0, [lr, #20]
4000ff48:	e59c0010 	ldr	r0, [ip, #16]
4000ff4c:	e59ce014 	ldr	lr, [ip, #20]
4000ff50:	e58e0010 	str	r0, [lr, #16]
4000ff54:	e59c0018 	ldr	r0, [ip, #24]
4000ff58:	e5900000 	ldr	r0, [r0]
4000ff5c:	e150000c 	cmp	r0, ip
4000ff60:	1a000005 	bne	4000ff7c <_tx_timer_deactivate+0x234>
4000ff64:	e59c0018 	ldr	r0, [ip, #24]
4000ff68:	e59ce010 	ldr	lr, [ip, #16]
4000ff6c:	e58e0018 	str	r0, [lr, #24]
4000ff70:	e59c0010 	ldr	r0, [ip, #16]
4000ff74:	e59ce018 	ldr	lr, [ip, #24]
4000ff78:	e58e0000 	str	r0, [lr]
4000ff7c:	e3a00000 	mov	r0, #0
4000ff80:	e58c0018 	str	r0, [ip, #24]
4000ff84:	e121f002 	msr	CPSR_c, r2
4000ff88:	e3a00000 	mov	r0, #0
4000ff8c:	e8bd8018 	pop	{r3, r4, pc}
4000ff90:	40030ebc 	.word	0x40030ebc
4000ff94:	40030ec0 	.word	0x40030ec0
4000ff98:	40030e48 	.word	0x40030e48
4000ff9c:	40030e50 	.word	0x40030e50
4000ffa0:	f0f0f0f0 	.word	0xf0f0f0f0
4000ffa4:	40030eb8 	.word	0x40030eb8
4000ffa8:	40030eb4 	.word	0x40030eb4
4000ffac:	40030ea8 	.word	0x40030ea8
4000ffb0:	40030e84 	.word	0x40030e84
4000ffb4:	40030e88 	.word	0x40030e88
4000ffb8:	40030e8c 	.word	0x40030e8c

4000ffbc <_tx_timer_expiration_process>:
4000ffbc:	e92d4070 	push	{r4, r5, r6, lr}
4000ffc0:	e10f4000 	mrs	r4, CPSR
4000ffc4:	e3845080 	orr	r5, r4, #128	; 0x80
4000ffc8:	e121f005 	msr	CPSR_c, r5
4000ffcc:	e59f001c 	ldr	r0, [pc, #28]	; 4000fff0 <_tx_timer_expiration_process+0x34>
4000ffd0:	e5900000 	ldr	r0, [r0]
4000ffd4:	e2800001 	add	r0, r0, #1
4000ffd8:	e59f1010 	ldr	r1, [pc, #16]	; 4000fff0 <_tx_timer_expiration_process+0x34>
4000ffdc:	e5810000 	str	r0, [r1]
4000ffe0:	e121f004 	msr	CPSR_c, r4
4000ffe4:	e59f0008 	ldr	r0, [pc, #8]	; 4000fff4 <_tx_timer_expiration_process+0x38>
4000ffe8:	ebfffcd5 	bl	4000f344 <_tx_thread_system_resume>
4000ffec:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fff0:	40030e6c 	.word	0x40030e6c
4000fff4:	40032974 	.word	0x40032974

4000fff8 <_tx_timer_system_deactivate>:
4000fff8:	e1a01000 	mov	r1, r0
4000fffc:	e10f2000 	mrs	r2, CPSR
40010000:	e3823080 	orr	r3, r2, #128	; 0x80
40010004:	e121f003 	msr	CPSR_c, r3
40010008:	e5910018 	ldr	r0, [r1, #24]
4001000c:	e3500000 	cmp	r0, #0
40010010:	0a00001e 	beq	40010090 <_tx_timer_system_deactivate+0x98>
40010014:	e5910010 	ldr	r0, [r1, #16]
40010018:	e1500001 	cmp	r0, r1
4001001c:	1a000009 	bne	40010048 <_tx_timer_system_deactivate+0x50>
40010020:	e5910018 	ldr	r0, [r1, #24]
40010024:	e5900000 	ldr	r0, [r0]
40010028:	e1500001 	cmp	r0, r1
4001002c:	1a000002 	bne	4001003c <_tx_timer_system_deactivate+0x44>
40010030:	e3a00000 	mov	r0, #0
40010034:	e591c018 	ldr	ip, [r1, #24]
40010038:	e58c0000 	str	r0, [ip]
4001003c:	e3a00000 	mov	r0, #0
40010040:	e5810018 	str	r0, [r1, #24]
40010044:	ea000011 	b	40010090 <_tx_timer_system_deactivate+0x98>
40010048:	e5910014 	ldr	r0, [r1, #20]
4001004c:	e591c010 	ldr	ip, [r1, #16]
40010050:	e58c0014 	str	r0, [ip, #20]
40010054:	e5910010 	ldr	r0, [r1, #16]
40010058:	e591c014 	ldr	ip, [r1, #20]
4001005c:	e58c0010 	str	r0, [ip, #16]
40010060:	e5910018 	ldr	r0, [r1, #24]
40010064:	e5900000 	ldr	r0, [r0]
40010068:	e1500001 	cmp	r0, r1
4001006c:	1a000005 	bne	40010088 <_tx_timer_system_deactivate+0x90>
40010070:	e5910018 	ldr	r0, [r1, #24]
40010074:	e591c010 	ldr	ip, [r1, #16]
40010078:	e58c0018 	str	r0, [ip, #24]
4001007c:	e5910010 	ldr	r0, [r1, #16]
40010080:	e591c018 	ldr	ip, [r1, #24]
40010084:	e58c0000 	str	r0, [ip]
40010088:	e3a00000 	mov	r0, #0
4001008c:	e5810018 	str	r0, [r1, #24]
40010090:	e121f002 	msr	CPSR_c, r2
40010094:	e3a00000 	mov	r0, #0
40010098:	e12fff1e 	bx	lr

4001009c <_tx_trace_object_register>:
4001009c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
400100a0:	e1a04000 	mov	r4, r0
400100a4:	e1a05001 	mov	r5, r1
400100a8:	e1a06002 	mov	r6, r2
400100ac:	e1a07003 	mov	r7, r3
400100b0:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
400100b4:	e59f0184 	ldr	r0, [pc, #388]	; 40010240 <_tx_trace_object_register+0x1a4>
400100b8:	e5900000 	ldr	r0, [r0]
400100bc:	e3500000 	cmp	r0, #0
400100c0:	1a000000 	bne	400100c8 <_tx_trace_object_register+0x2c>
400100c4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400100c8:	e59f1174 	ldr	r1, [pc, #372]	; 40010244 <_tx_trace_object_register+0x1a8>
400100cc:	e5911000 	ldr	r1, [r1]
400100d0:	e59f2168 	ldr	r2, [pc, #360]	; 40010240 <_tx_trace_object_register+0x1a4>
400100d4:	e5922000 	ldr	r2, [r2]
400100d8:	e0410002 	sub	r0, r1, r2
400100dc:	e3a01030 	mov	r1, #48	; 0x30
400100e0:	eb0002bd 	bl	40010bdc <__aeabi_idivmod>
400100e4:	e1a0a000 	mov	sl, r0
400100e8:	e1a0b00a 	mov	fp, sl
400100ec:	e3a09000 	mov	r9, #0
400100f0:	ea00001b 	b	40010164 <_tx_trace_object_register+0xc8>
400100f4:	e0890089 	add	r0, r9, r9, lsl #1
400100f8:	e59f1140 	ldr	r1, [pc, #320]	; 40010240 <_tx_trace_object_register+0x1a4>
400100fc:	e5911000 	ldr	r1, [r1]
40010100:	e0810200 	add	r0, r1, r0, lsl #4
40010104:	e5900004 	ldr	r0, [r0, #4]
40010108:	e1500005 	cmp	r0, r5
4001010c:	1a000001 	bne	40010118 <_tx_trace_object_register+0x7c>
40010110:	e1a0b009 	mov	fp, r9
40010114:	ea000014 	b	4001016c <_tx_trace_object_register+0xd0>
40010118:	e0890089 	add	r0, r9, r9, lsl #1
4001011c:	e59f111c 	ldr	r1, [pc, #284]	; 40010240 <_tx_trace_object_register+0x1a4>
40010120:	e5911000 	ldr	r1, [r1]
40010124:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
40010128:	e3500000 	cmp	r0, #0
4001012c:	0a00000b 	beq	40010160 <_tx_trace_object_register+0xc4>
40010130:	e15b000a 	cmp	fp, sl
40010134:	1a000001 	bne	40010140 <_tx_trace_object_register+0xa4>
40010138:	e1a0b009 	mov	fp, r9
4001013c:	ea000007 	b	40010160 <_tx_trace_object_register+0xc4>
40010140:	e08b008b 	add	r0, fp, fp, lsl #1
40010144:	e59f10f4 	ldr	r1, [pc, #244]	; 40010240 <_tx_trace_object_register+0x1a4>
40010148:	e5911000 	ldr	r1, [r1]
4001014c:	e0810200 	add	r0, r1, r0, lsl #4
40010150:	e5d00001 	ldrb	r0, [r0, #1]
40010154:	e3500000 	cmp	r0, #0
40010158:	0a000000 	beq	40010160 <_tx_trace_object_register+0xc4>
4001015c:	e1a0b009 	mov	fp, r9
40010160:	e2899001 	add	r9, r9, #1
40010164:	e159000a 	cmp	r9, sl
40010168:	3affffe1 	bcc	400100f4 <_tx_trace_object_register+0x58>
4001016c:	e1a00000 	nop			; (mov r0, r0)
40010170:	e15b000a 	cmp	fp, sl
40010174:	2a000030 	bcs	4001023c <_tx_trace_object_register+0x1a0>
40010178:	e3a00000 	mov	r0, #0
4001017c:	e08b108b 	add	r1, fp, fp, lsl #1
40010180:	e59f20b8 	ldr	r2, [pc, #184]	; 40010240 <_tx_trace_object_register+0x1a4>
40010184:	e5922000 	ldr	r2, [r2]
40010188:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001018c:	e08b008b 	add	r0, fp, fp, lsl #1
40010190:	e59f10a8 	ldr	r1, [pc, #168]	; 40010240 <_tx_trace_object_register+0x1a4>
40010194:	e5911000 	ldr	r1, [r1]
40010198:	e0810200 	add	r0, r1, r0, lsl #4
4001019c:	e5c04001 	strb	r4, [r0, #1]
400101a0:	e08b008b 	add	r0, fp, fp, lsl #1
400101a4:	e59f1094 	ldr	r1, [pc, #148]	; 40010240 <_tx_trace_object_register+0x1a4>
400101a8:	e5911000 	ldr	r1, [r1]
400101ac:	e0810200 	add	r0, r1, r0, lsl #4
400101b0:	e5805004 	str	r5, [r0, #4]
400101b4:	e08b008b 	add	r0, fp, fp, lsl #1
400101b8:	e59f1080 	ldr	r1, [pc, #128]	; 40010240 <_tx_trace_object_register+0x1a4>
400101bc:	e5911000 	ldr	r1, [r1]
400101c0:	e0810200 	add	r0, r1, r0, lsl #4
400101c4:	e5807008 	str	r7, [r0, #8]
400101c8:	e08b008b 	add	r0, fp, fp, lsl #1
400101cc:	e59f106c 	ldr	r1, [pc, #108]	; 40010240 <_tx_trace_object_register+0x1a4>
400101d0:	e5911000 	ldr	r1, [r1]
400101d4:	e0810200 	add	r0, r1, r0, lsl #4
400101d8:	e580800c 	str	r8, [r0, #12]
400101dc:	e3a09000 	mov	r9, #0
400101e0:	ea00000b 	b	40010214 <_tx_trace_object_register+0x178>
400101e4:	e7d60009 	ldrb	r0, [r6, r9]
400101e8:	e08b108b 	add	r1, fp, fp, lsl #1
400101ec:	e59f204c 	ldr	r2, [pc, #76]	; 40010240 <_tx_trace_object_register+0x1a4>
400101f0:	e5922000 	ldr	r2, [r2]
400101f4:	e0821201 	add	r1, r2, r1, lsl #4
400101f8:	e2811010 	add	r1, r1, #16
400101fc:	e7c10009 	strb	r0, [r1, r9]
40010200:	e7d60009 	ldrb	r0, [r6, r9]
40010204:	e3500000 	cmp	r0, #0
40010208:	1a000000 	bne	40010210 <_tx_trace_object_register+0x174>
4001020c:	ea000002 	b	4001021c <_tx_trace_object_register+0x180>
40010210:	e2899001 	add	r9, r9, #1
40010214:	e359001f 	cmp	r9, #31
40010218:	3afffff1 	bcc	400101e4 <_tx_trace_object_register+0x148>
4001021c:	e1a00000 	nop			; (mov r0, r0)
40010220:	e3a00000 	mov	r0, #0
40010224:	e08b108b 	add	r1, fp, fp, lsl #1
40010228:	e59f2010 	ldr	r2, [pc, #16]	; 40010240 <_tx_trace_object_register+0x1a4>
4001022c:	e5922000 	ldr	r2, [r2]
40010230:	e0821201 	add	r1, r2, r1, lsl #4
40010234:	e2811010 	add	r1, r1, #16
40010238:	e7c10009 	strb	r0, [r1, r9]
4001023c:	eaffffa0 	b	400100c4 <_tx_trace_object_register+0x28>
40010240:	40030eac 	.word	0x40030eac
40010244:	40030eb0 	.word	0x40030eb0

40010248 <_tx_trace_object_unregister>:
40010248:	e92d4070 	push	{r4, r5, r6, lr}
4001024c:	e1a04000 	mov	r4, r0
40010250:	e59f007c 	ldr	r0, [pc, #124]	; 400102d4 <_tx_trace_object_unregister+0x8c>
40010254:	e5900000 	ldr	r0, [r0]
40010258:	e3500000 	cmp	r0, #0
4001025c:	1a000000 	bne	40010264 <_tx_trace_object_unregister+0x1c>
40010260:	e8bd8070 	pop	{r4, r5, r6, pc}
40010264:	e59f106c 	ldr	r1, [pc, #108]	; 400102d8 <_tx_trace_object_unregister+0x90>
40010268:	e5911000 	ldr	r1, [r1]
4001026c:	e59f2060 	ldr	r2, [pc, #96]	; 400102d4 <_tx_trace_object_unregister+0x8c>
40010270:	e5922000 	ldr	r2, [r2]
40010274:	e0410002 	sub	r0, r1, r2
40010278:	e3a01030 	mov	r1, #48	; 0x30
4001027c:	eb000256 	bl	40010bdc <__aeabi_idivmod>
40010280:	e1a05000 	mov	r5, r0
40010284:	e3a06000 	mov	r6, #0
40010288:	ea00000d 	b	400102c4 <_tx_trace_object_unregister+0x7c>
4001028c:	e0860086 	add	r0, r6, r6, lsl #1
40010290:	e59f103c 	ldr	r1, [pc, #60]	; 400102d4 <_tx_trace_object_unregister+0x8c>
40010294:	e5911000 	ldr	r1, [r1]
40010298:	e0810200 	add	r0, r1, r0, lsl #4
4001029c:	e5900004 	ldr	r0, [r0, #4]
400102a0:	e1500004 	cmp	r0, r4
400102a4:	1a000005 	bne	400102c0 <_tx_trace_object_unregister+0x78>
400102a8:	e3a00001 	mov	r0, #1
400102ac:	e0861086 	add	r1, r6, r6, lsl #1
400102b0:	e59f201c 	ldr	r2, [pc, #28]	; 400102d4 <_tx_trace_object_unregister+0x8c>
400102b4:	e5922000 	ldr	r2, [r2]
400102b8:	e7c20201 	strb	r0, [r2, r1, lsl #4]
400102bc:	ea000002 	b	400102cc <_tx_trace_object_unregister+0x84>
400102c0:	e2866001 	add	r6, r6, #1
400102c4:	e1560005 	cmp	r6, r5
400102c8:	3affffef 	bcc	4001028c <_tx_trace_object_unregister+0x44>
400102cc:	e1a00000 	nop			; (mov r0, r0)
400102d0:	eaffffe2 	b	40010260 <_tx_trace_object_unregister+0x18>
400102d4:	40030eac 	.word	0x40030eac
400102d8:	40030eb0 	.word	0x40030eb0

400102dc <_tx_thread_stack_build>:
400102dc:	e5902010 	ldr	r2, [r0, #16]
400102e0:	e3c22007 	bic	r2, r2, #7
400102e4:	e242204c 	sub	r2, r2, #76	; 0x4c
400102e8:	e3a03001 	mov	r3, #1
400102ec:	e5823000 	str	r3, [r2]
400102f0:	e3a03000 	mov	r3, #0
400102f4:	e5823008 	str	r3, [r2, #8]
400102f8:	e582300c 	str	r3, [r2, #12]
400102fc:	e5823010 	str	r3, [r2, #16]
40010300:	e5823014 	str	r3, [r2, #20]
40010304:	e5823018 	str	r3, [r2, #24]
40010308:	e582301c 	str	r3, [r2, #28]
4001030c:	e5823020 	str	r3, [r2, #32]
40010310:	e5823024 	str	r3, [r2, #36]	; 0x24
40010314:	e5823028 	str	r3, [r2, #40]	; 0x28
40010318:	e582302c 	str	r3, [r2, #44]	; 0x2c
4001031c:	e590300c 	ldr	r3, [r0, #12]
40010320:	e5823030 	str	r3, [r2, #48]	; 0x30
40010324:	e3a03000 	mov	r3, #0
40010328:	e5823034 	str	r3, [r2, #52]	; 0x34
4001032c:	e5823038 	str	r3, [r2, #56]	; 0x38
40010330:	e582303c 	str	r3, [r2, #60]	; 0x3c
40010334:	e5821040 	str	r1, [r2, #64]	; 0x40
40010338:	e5823044 	str	r3, [r2, #68]	; 0x44
4001033c:	e10f1000 	mrs	r1, CPSR
40010340:	e3c1109f 	bic	r1, r1, #159	; 0x9f
40010344:	e3813013 	orr	r3, r1, #19
40010348:	e5823004 	str	r3, [r2, #4]
4001034c:	e5802008 	str	r2, [r0, #8]
40010350:	e12fff1e 	bx	lr

40010354 <_tx_event_flags_cleanup>:
40010354:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010358:	e1a04000 	mov	r4, r0
4001035c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010360:	e10f5000 	mrs	r5, CPSR
40010364:	e3856080 	orr	r6, r5, #128	; 0x80
40010368:	e121f006 	msr	CPSR_c, r6
4001036c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010370:	e3500000 	cmp	r0, #0
40010374:	0a000026 	beq	40010414 <_tx_event_flags_cleanup+0xc0>
40010378:	e3570000 	cmp	r7, #0
4001037c:	0a000024 	beq	40010414 <_tx_event_flags_cleanup+0xc0>
40010380:	e5970000 	ldr	r0, [r7]
40010384:	e59f1090 	ldr	r1, [pc, #144]	; 4001041c <_tx_event_flags_cleanup+0xc8>
40010388:	e1500001 	cmp	r0, r1
4001038c:	1a000020 	bne	40010414 <_tx_event_flags_cleanup+0xc0>
40010390:	e3a00000 	mov	r0, #0
40010394:	e5840068 	str	r0, [r4, #104]	; 0x68
40010398:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001039c:	e1500004 	cmp	r0, r4
400103a0:	1a000002 	bne	400103b0 <_tx_event_flags_cleanup+0x5c>
400103a4:	e3a00000 	mov	r0, #0
400103a8:	e5870010 	str	r0, [r7, #16]
400103ac:	ea000007 	b	400103d0 <_tx_event_flags_cleanup+0x7c>
400103b0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400103b4:	e5870010 	str	r0, [r7, #16]
400103b8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400103bc:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400103c0:	e5810074 	str	r0, [r1, #116]	; 0x74
400103c4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400103c8:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400103cc:	e5810070 	str	r0, [r1, #112]	; 0x70
400103d0:	e5970014 	ldr	r0, [r7, #20]
400103d4:	e2400001 	sub	r0, r0, #1
400103d8:	e5870014 	str	r0, [r7, #20]
400103dc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400103e0:	e3500007 	cmp	r0, #7
400103e4:	1a00000a 	bne	40010414 <_tx_event_flags_cleanup+0xc0>
400103e8:	e3a00007 	mov	r0, #7
400103ec:	e5840084 	str	r0, [r4, #132]	; 0x84
400103f0:	e59f0028 	ldr	r0, [pc, #40]	; 40010420 <_tx_event_flags_cleanup+0xcc>
400103f4:	e5900000 	ldr	r0, [r0]
400103f8:	e2800001 	add	r0, r0, #1
400103fc:	e59f101c 	ldr	r1, [pc, #28]	; 40010420 <_tx_event_flags_cleanup+0xcc>
40010400:	e5810000 	str	r0, [r1]
40010404:	e121f005 	msr	CPSR_c, r5
40010408:	e1a00004 	mov	r0, r4
4001040c:	ebfffbcc 	bl	4000f344 <_tx_thread_system_resume>
40010410:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010414:	e121f005 	msr	CPSR_c, r5
40010418:	eafffffc 	b	40010410 <_tx_event_flags_cleanup+0xbc>
4001041c:	4456444e 	.word	0x4456444e
40010420:	40030e6c 	.word	0x40030e6c

40010424 <_tx_mutex_cleanup>:
40010424:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010428:	e1a04000 	mov	r4, r0
4001042c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010430:	e10f5000 	mrs	r5, CPSR
40010434:	e3856080 	orr	r6, r5, #128	; 0x80
40010438:	e121f006 	msr	CPSR_c, r6
4001043c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010440:	e3500000 	cmp	r0, #0
40010444:	0a000026 	beq	400104e4 <_tx_mutex_cleanup+0xc0>
40010448:	e3570000 	cmp	r7, #0
4001044c:	0a000024 	beq	400104e4 <_tx_mutex_cleanup+0xc0>
40010450:	e5970000 	ldr	r0, [r7]
40010454:	e59f1090 	ldr	r1, [pc, #144]	; 400104ec <_tx_mutex_cleanup+0xc8>
40010458:	e1500001 	cmp	r0, r1
4001045c:	1a000020 	bne	400104e4 <_tx_mutex_cleanup+0xc0>
40010460:	e3a00000 	mov	r0, #0
40010464:	e5840068 	str	r0, [r4, #104]	; 0x68
40010468:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001046c:	e1500004 	cmp	r0, r4
40010470:	1a000002 	bne	40010480 <_tx_mutex_cleanup+0x5c>
40010474:	e3a00000 	mov	r0, #0
40010478:	e587001c 	str	r0, [r7, #28]
4001047c:	ea000007 	b	400104a0 <_tx_mutex_cleanup+0x7c>
40010480:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010484:	e587001c 	str	r0, [r7, #28]
40010488:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001048c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010490:	e5810074 	str	r0, [r1, #116]	; 0x74
40010494:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010498:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001049c:	e5810070 	str	r0, [r1, #112]	; 0x70
400104a0:	e5970020 	ldr	r0, [r7, #32]
400104a4:	e2400001 	sub	r0, r0, #1
400104a8:	e5870020 	str	r0, [r7, #32]
400104ac:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400104b0:	e350000d 	cmp	r0, #13
400104b4:	1a00000a 	bne	400104e4 <_tx_mutex_cleanup+0xc0>
400104b8:	e3a0001d 	mov	r0, #29
400104bc:	e5840084 	str	r0, [r4, #132]	; 0x84
400104c0:	e59f0028 	ldr	r0, [pc, #40]	; 400104f0 <_tx_mutex_cleanup+0xcc>
400104c4:	e5900000 	ldr	r0, [r0]
400104c8:	e2800001 	add	r0, r0, #1
400104cc:	e59f101c 	ldr	r1, [pc, #28]	; 400104f0 <_tx_mutex_cleanup+0xcc>
400104d0:	e5810000 	str	r0, [r1]
400104d4:	e121f005 	msr	CPSR_c, r5
400104d8:	e1a00004 	mov	r0, r4
400104dc:	ebfffb98 	bl	4000f344 <_tx_thread_system_resume>
400104e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400104e4:	e121f005 	msr	CPSR_c, r5
400104e8:	eafffffc 	b	400104e0 <_tx_mutex_cleanup+0xbc>
400104ec:	4d555445 	.word	0x4d555445
400104f0:	40030e6c 	.word	0x40030e6c

400104f4 <_tx_mutex_prioritize>:
400104f4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
400104f8:	e1a04000 	mov	r4, r0
400104fc:	e10f5000 	mrs	r5, CPSR
40010500:	e3856080 	orr	r6, r5, #128	; 0x80
40010504:	e121f006 	msr	CPSR_c, r6
40010508:	e59f1234 	ldr	r1, [pc, #564]	; 40010744 <_tx_mutex_prioritize+0x250>
4001050c:	e5910000 	ldr	r0, [r1]
40010510:	e3500000 	cmp	r0, #0
40010514:	0a000032 	beq	400105e4 <_tx_mutex_prioritize+0xf0>
40010518:	e59f1228 	ldr	r1, [pc, #552]	; 40010748 <_tx_mutex_prioritize+0x254>
4001051c:	e5911000 	ldr	r1, [r1]
40010520:	e2811001 	add	r1, r1, #1
40010524:	e59f221c 	ldr	r2, [pc, #540]	; 40010748 <_tx_mutex_prioritize+0x254>
40010528:	e5821000 	str	r1, [r2]
4001052c:	e580100c 	str	r1, [r0, #12]
40010530:	e59f1214 	ldr	r1, [pc, #532]	; 4001074c <_tx_mutex_prioritize+0x258>
40010534:	e5911000 	ldr	r1, [r1]
40010538:	e3510000 	cmp	r1, #0
4001053c:	1a000006 	bne	4001055c <_tx_mutex_prioritize+0x68>
40010540:	e59f1208 	ldr	r1, [pc, #520]	; 40010750 <_tx_mutex_prioritize+0x25c>
40010544:	e5911000 	ldr	r1, [r1]
40010548:	e5801000 	str	r1, [r0]
4001054c:	e5901000 	ldr	r1, [r0]
40010550:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010554:	e5801004 	str	r1, [r0, #4]
40010558:	ea00000d 	b	40010594 <_tx_mutex_prioritize+0xa0>
4001055c:	e59f11e8 	ldr	r1, [pc, #488]	; 4001074c <_tx_mutex_prioritize+0x258>
40010560:	e5911000 	ldr	r1, [r1]
40010564:	e59f21e8 	ldr	r2, [pc, #488]	; 40010754 <_tx_mutex_prioritize+0x260>
40010568:	e1510002 	cmp	r1, r2
4001056c:	2a000004 	bcs	40010584 <_tx_mutex_prioritize+0x90>
40010570:	e3e01000 	mvn	r1, #0
40010574:	e5801000 	str	r1, [r0]
40010578:	e3a01000 	mov	r1, #0
4001057c:	e5801004 	str	r1, [r0, #4]
40010580:	ea000003 	b	40010594 <_tx_mutex_prioritize+0xa0>
40010584:	e59f11c8 	ldr	r1, [pc, #456]	; 40010754 <_tx_mutex_prioritize+0x260>
40010588:	e5801000 	str	r1, [r0]
4001058c:	e3a01000 	mov	r1, #0
40010590:	e5801004 	str	r1, [r0, #4]
40010594:	e3a01038 	mov	r1, #56	; 0x38
40010598:	e5801008 	str	r1, [r0, #8]
4001059c:	e5804010 	str	r4, [r0, #16]
400105a0:	e5941020 	ldr	r1, [r4, #32]
400105a4:	e5801014 	str	r1, [r0, #20]
400105a8:	e580d018 	str	sp, [r0, #24]
400105ac:	e3a01000 	mov	r1, #0
400105b0:	e580101c 	str	r1, [r0, #28]
400105b4:	e2800020 	add	r0, r0, #32
400105b8:	e59f1198 	ldr	r1, [pc, #408]	; 40010758 <_tx_mutex_prioritize+0x264>
400105bc:	e5911000 	ldr	r1, [r1]
400105c0:	e1500001 	cmp	r0, r1
400105c4:	3a000001 	bcc	400105d0 <_tx_mutex_prioritize+0xdc>
400105c8:	e59f118c 	ldr	r1, [pc, #396]	; 4001075c <_tx_mutex_prioritize+0x268>
400105cc:	e5910000 	ldr	r0, [r1]
400105d0:	e59f116c 	ldr	r1, [pc, #364]	; 40010744 <_tx_mutex_prioritize+0x250>
400105d4:	e5810000 	str	r0, [r1]
400105d8:	e59f1180 	ldr	r1, [pc, #384]	; 40010760 <_tx_mutex_prioritize+0x26c>
400105dc:	e5911000 	ldr	r1, [r1]
400105e0:	e5810020 	str	r0, [r1, #32]
400105e4:	e5940020 	ldr	r0, [r4, #32]
400105e8:	e3500002 	cmp	r0, #2
400105ec:	2a000002 	bcs	400105fc <_tx_mutex_prioritize+0x108>
400105f0:	e121f005 	msr	CPSR_c, r5
400105f4:	e3a00000 	mov	r0, #0
400105f8:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
400105fc:	e5940020 	ldr	r0, [r4, #32]
40010600:	e3500002 	cmp	r0, #2
40010604:	1a00000c 	bne	4001063c <_tx_mutex_prioritize+0x148>
40010608:	e594001c 	ldr	r0, [r4, #28]
4001060c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
40010610:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40010614:	e594101c 	ldr	r1, [r4, #28]
40010618:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4001061c:	e1500001 	cmp	r0, r1
40010620:	2a000002 	bcs	40010630 <_tx_mutex_prioritize+0x13c>
40010624:	e594001c 	ldr	r0, [r4, #28]
40010628:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001062c:	e584001c 	str	r0, [r4, #28]
40010630:	e121f005 	msr	CPSR_c, r5
40010634:	e3a00000 	mov	r0, #0
40010638:	eaffffee 	b	400105f8 <_tx_mutex_prioritize+0x104>
4001063c:	e594901c 	ldr	r9, [r4, #28]
40010640:	e5940020 	ldr	r0, [r4, #32]
40010644:	e58d0000 	str	r0, [sp]
40010648:	e594801c 	ldr	r8, [r4, #28]
4001064c:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010650:	e59f010c 	ldr	r0, [pc, #268]	; 40010764 <_tx_mutex_prioritize+0x270>
40010654:	e5900000 	ldr	r0, [r0]
40010658:	e2800001 	add	r0, r0, #1
4001065c:	e59f1100 	ldr	r1, [pc, #256]	; 40010764 <_tx_mutex_prioritize+0x270>
40010660:	e5810000 	str	r0, [r1]
40010664:	e1a00000 	nop			; (mov r0, r0)
40010668:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4001066c:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010670:	e1500001 	cmp	r0, r1
40010674:	2a000000 	bcs	4001067c <_tx_mutex_prioritize+0x188>
40010678:	e1a08007 	mov	r8, r7
4001067c:	e121f005 	msr	CPSR_c, r5
40010680:	e10f5000 	mrs	r5, CPSR
40010684:	e3856080 	orr	r6, r5, #128	; 0x80
40010688:	e121f006 	msr	CPSR_c, r6
4001068c:	e594001c 	ldr	r0, [r4, #28]
40010690:	e1500009 	cmp	r0, r9
40010694:	1a000005 	bne	400106b0 <_tx_mutex_prioritize+0x1bc>
40010698:	e5940020 	ldr	r0, [r4, #32]
4001069c:	e59d1000 	ldr	r1, [sp]
400106a0:	e1500001 	cmp	r0, r1
400106a4:	1a000001 	bne	400106b0 <_tx_mutex_prioritize+0x1bc>
400106a8:	e5977070 	ldr	r7, [r7, #112]	; 0x70
400106ac:	ea000004 	b	400106c4 <_tx_mutex_prioritize+0x1d0>
400106b0:	e594901c 	ldr	r9, [r4, #28]
400106b4:	e5940020 	ldr	r0, [r4, #32]
400106b8:	e58d0000 	str	r0, [sp]
400106bc:	e594801c 	ldr	r8, [r4, #28]
400106c0:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400106c4:	e594001c 	ldr	r0, [r4, #28]
400106c8:	e1500007 	cmp	r0, r7
400106cc:	1affffe5 	bne	40010668 <_tx_mutex_prioritize+0x174>
400106d0:	e59f008c 	ldr	r0, [pc, #140]	; 40010764 <_tx_mutex_prioritize+0x270>
400106d4:	e5900000 	ldr	r0, [r0]
400106d8:	e2400001 	sub	r0, r0, #1
400106dc:	e59f1080 	ldr	r1, [pc, #128]	; 40010764 <_tx_mutex_prioritize+0x270>
400106e0:	e5810000 	str	r0, [r1]
400106e4:	e594001c 	ldr	r0, [r4, #28]
400106e8:	e1500008 	cmp	r0, r8
400106ec:	0a000010 	beq	40010734 <_tx_mutex_prioritize+0x240>
400106f0:	e5980074 	ldr	r0, [r8, #116]	; 0x74
400106f4:	e5981070 	ldr	r1, [r8, #112]	; 0x70
400106f8:	e5810074 	str	r0, [r1, #116]	; 0x74
400106fc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010700:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010704:	e5810070 	str	r0, [r1, #112]	; 0x70
40010708:	e594001c 	ldr	r0, [r4, #28]
4001070c:	e5880070 	str	r0, [r8, #112]	; 0x70
40010710:	e594001c 	ldr	r0, [r4, #28]
40010714:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010718:	e5880074 	str	r0, [r8, #116]	; 0x74
4001071c:	e594001c 	ldr	r0, [r4, #28]
40010720:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010724:	e5808070 	str	r8, [r0, #112]	; 0x70
40010728:	e594001c 	ldr	r0, [r4, #28]
4001072c:	e5808074 	str	r8, [r0, #116]	; 0x74
40010730:	e584801c 	str	r8, [r4, #28]
40010734:	e121f005 	msr	CPSR_c, r5
40010738:	ebfffad5 	bl	4000f294 <_tx_thread_system_preempt_check>
4001073c:	e3a00000 	mov	r0, #0
40010740:	eaffffac 	b	400105f8 <_tx_mutex_prioritize+0x104>
40010744:	40030ebc 	.word	0x40030ebc
40010748:	40030ec0 	.word	0x40030ec0
4001074c:	40030e48 	.word	0x40030e48
40010750:	40030e50 	.word	0x40030e50
40010754:	f0f0f0f0 	.word	0xf0f0f0f0
40010758:	40030eb8 	.word	0x40030eb8
4001075c:	40030eb4 	.word	0x40030eb4
40010760:	40030ea8 	.word	0x40030ea8
40010764:	40030e6c 	.word	0x40030e6c

40010768 <_tx_queue_cleanup>:
40010768:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001076c:	e1a04000 	mov	r4, r0
40010770:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010774:	e10f5000 	mrs	r5, CPSR
40010778:	e3856080 	orr	r6, r5, #128	; 0x80
4001077c:	e121f006 	msr	CPSR_c, r6
40010780:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010784:	e3500000 	cmp	r0, #0
40010788:	0a00002c 	beq	40010840 <_tx_queue_cleanup+0xd8>
4001078c:	e3570000 	cmp	r7, #0
40010790:	0a00002a 	beq	40010840 <_tx_queue_cleanup+0xd8>
40010794:	e5970000 	ldr	r0, [r7]
40010798:	e59f10a8 	ldr	r1, [pc, #168]	; 40010848 <_tx_queue_cleanup+0xe0>
4001079c:	e1500001 	cmp	r0, r1
400107a0:	1a000026 	bne	40010840 <_tx_queue_cleanup+0xd8>
400107a4:	e3a00000 	mov	r0, #0
400107a8:	e5840068 	str	r0, [r4, #104]	; 0x68
400107ac:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400107b0:	e1500004 	cmp	r0, r4
400107b4:	1a000002 	bne	400107c4 <_tx_queue_cleanup+0x5c>
400107b8:	e3a00000 	mov	r0, #0
400107bc:	e5870028 	str	r0, [r7, #40]	; 0x28
400107c0:	ea000007 	b	400107e4 <_tx_queue_cleanup+0x7c>
400107c4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400107c8:	e5870028 	str	r0, [r7, #40]	; 0x28
400107cc:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400107d0:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400107d4:	e5810074 	str	r0, [r1, #116]	; 0x74
400107d8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400107dc:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400107e0:	e5810070 	str	r0, [r1, #112]	; 0x70
400107e4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400107e8:	e2400001 	sub	r0, r0, #1
400107ec:	e587002c 	str	r0, [r7, #44]	; 0x2c
400107f0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400107f4:	e3500005 	cmp	r0, #5
400107f8:	1a000010 	bne	40010840 <_tx_queue_cleanup+0xd8>
400107fc:	e5970010 	ldr	r0, [r7, #16]
40010800:	e3500000 	cmp	r0, #0
40010804:	0a000002 	beq	40010814 <_tx_queue_cleanup+0xac>
40010808:	e3a0000b 	mov	r0, #11
4001080c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010810:	ea000001 	b	4001081c <_tx_queue_cleanup+0xb4>
40010814:	e3a0000a 	mov	r0, #10
40010818:	e5840084 	str	r0, [r4, #132]	; 0x84
4001081c:	e59f0028 	ldr	r0, [pc, #40]	; 4001084c <_tx_queue_cleanup+0xe4>
40010820:	e5900000 	ldr	r0, [r0]
40010824:	e2800001 	add	r0, r0, #1
40010828:	e59f101c 	ldr	r1, [pc, #28]	; 4001084c <_tx_queue_cleanup+0xe4>
4001082c:	e5810000 	str	r0, [r1]
40010830:	e121f005 	msr	CPSR_c, r5
40010834:	e1a00004 	mov	r0, r4
40010838:	ebfffac1 	bl	4000f344 <_tx_thread_system_resume>
4001083c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010840:	e121f005 	msr	CPSR_c, r5
40010844:	eafffffc 	b	4001083c <_tx_queue_cleanup+0xd4>
40010848:	51554555 	.word	0x51554555
4001084c:	40030e6c 	.word	0x40030e6c

40010850 <strcpy>:
40010850:	e0202001 	eor	r2, r0, r1
40010854:	e1a0c000 	mov	ip, r0
40010858:	e3120003 	tst	r2, #3
4001085c:	1a000032 	bne	4001092c <strcpy+0xdc>
40010860:	e3110003 	tst	r1, #3
40010864:	1a000021 	bne	400108f0 <strcpy+0xa0>
40010868:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
4001086c:	e3a05001 	mov	r5, #1
40010870:	e1855405 	orr	r5, r5, r5, lsl #8
40010874:	e1855805 	orr	r5, r5, r5, lsl #16
40010878:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
4001087c:	e3110004 	tst	r1, #4
40010880:	e4913004 	ldr	r3, [r1], #4
40010884:	0a000005 	beq	400108a0 <strcpy+0x50>
40010888:	e0432005 	sub	r2, r3, r5
4001088c:	e1d22003 	bics	r2, r2, r3
40010890:	e1120385 	tst	r2, r5, lsl #7
40010894:	048c3004 	streq	r3, [ip], #4
40010898:	04913004 	ldreq	r3, [r1], #4
4001089c:	1a00000c 	bne	400108d4 <strcpy+0x84>
400108a0:	e4914004 	ldr	r4, [r1], #4
400108a4:	e0432005 	sub	r2, r3, r5
400108a8:	e1d22003 	bics	r2, r2, r3
400108ac:	e1120385 	tst	r2, r5, lsl #7
400108b0:	e0442005 	sub	r2, r4, r5
400108b4:	1a000006 	bne	400108d4 <strcpy+0x84>
400108b8:	e48c3004 	str	r3, [ip], #4
400108bc:	e1d22004 	bics	r2, r2, r4
400108c0:	e1120385 	tst	r2, r5, lsl #7
400108c4:	04913004 	ldreq	r3, [r1], #4
400108c8:	048c4004 	streq	r4, [ip], #4
400108cc:	0afffff3 	beq	400108a0 <strcpy+0x50>
400108d0:	e1a03004 	mov	r3, r4
400108d4:	e4cc3001 	strb	r3, [ip], #1
400108d8:	e31300ff 	tst	r3, #255	; 0xff
400108dc:	e1a03463 	ror	r3, r3, #8
400108e0:	1afffffb 	bne	400108d4 <strcpy+0x84>
400108e4:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
400108e8:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
400108ec:	e12fff1e 	bx	lr
400108f0:	e3110001 	tst	r1, #1
400108f4:	0a000003 	beq	40010908 <strcpy+0xb8>
400108f8:	e4d12001 	ldrb	r2, [r1], #1
400108fc:	e4cc2001 	strb	r2, [ip], #1
40010900:	e3520000 	cmp	r2, #0
40010904:	012fff1e 	bxeq	lr
40010908:	e3110002 	tst	r1, #2
4001090c:	0affffd5 	beq	40010868 <strcpy+0x18>
40010910:	e0d120b2 	ldrh	r2, [r1], #2
40010914:	e31200ff 	tst	r2, #255	; 0xff
40010918:	10cc20b2 	strhne	r2, [ip], #2
4001091c:	05cc2000 	strbeq	r2, [ip]
40010920:	13120cff 	tstne	r2, #65280	; 0xff00
40010924:	1affffcf 	bne	40010868 <strcpy+0x18>
40010928:	e12fff1e 	bx	lr
4001092c:	e4d12001 	ldrb	r2, [r1], #1
40010930:	e4cc2001 	strb	r2, [ip], #1
40010934:	e3520000 	cmp	r2, #0
40010938:	1afffffb 	bne	4001092c <strcpy+0xdc>
4001093c:	e12fff1e 	bx	lr

40010940 <strlen>:
40010940:	e3c01003 	bic	r1, r0, #3
40010944:	e2100003 	ands	r0, r0, #3
40010948:	e2600000 	rsb	r0, r0, #0
4001094c:	e4913004 	ldr	r3, [r1], #4
40010950:	e280c004 	add	ip, r0, #4
40010954:	e1a0c18c 	lsl	ip, ip, #3
40010958:	e3e02000 	mvn	r2, #0
4001095c:	11833c32 	orrne	r3, r3, r2, lsr ip
40010960:	e3a0c001 	mov	ip, #1
40010964:	e18cc40c 	orr	ip, ip, ip, lsl #8
40010968:	e18cc80c 	orr	ip, ip, ip, lsl #16
4001096c:	e043200c 	sub	r2, r3, ip
40010970:	e1c22003 	bic	r2, r2, r3
40010974:	e012238c 	ands	r2, r2, ip, lsl #7
40010978:	04913004 	ldreq	r3, [r1], #4
4001097c:	02800004 	addeq	r0, r0, #4
40010980:	0afffff9 	beq	4001096c <strlen+0x2c>
40010984:	e31300ff 	tst	r3, #255	; 0xff
40010988:	12800001 	addne	r0, r0, #1
4001098c:	13130cff 	tstne	r3, #65280	; 0xff00
40010990:	12800001 	addne	r0, r0, #1
40010994:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010998:	12800001 	addne	r0, r0, #1
4001099c:	e12fff1e 	bx	lr

400109a0 <__aeabi_uidiv>:
400109a0:	e2512001 	subs	r2, r1, #1
400109a4:	012fff1e 	bxeq	lr
400109a8:	3a000036 	bcc	40010a88 <__aeabi_uidiv+0xe8>
400109ac:	e1500001 	cmp	r0, r1
400109b0:	9a000022 	bls	40010a40 <__aeabi_uidiv+0xa0>
400109b4:	e1110002 	tst	r1, r2
400109b8:	0a000023 	beq	40010a4c <__aeabi_uidiv+0xac>
400109bc:	e311020e 	tst	r1, #-536870912	; 0xe0000000
400109c0:	01a01181 	lsleq	r1, r1, #3
400109c4:	03a03008 	moveq	r3, #8
400109c8:	13a03001 	movne	r3, #1
400109cc:	e3510201 	cmp	r1, #268435456	; 0x10000000
400109d0:	31510000 	cmpcc	r1, r0
400109d4:	31a01201 	lslcc	r1, r1, #4
400109d8:	31a03203 	lslcc	r3, r3, #4
400109dc:	3afffffa 	bcc	400109cc <__aeabi_uidiv+0x2c>
400109e0:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
400109e4:	31510000 	cmpcc	r1, r0
400109e8:	31a01081 	lslcc	r1, r1, #1
400109ec:	31a03083 	lslcc	r3, r3, #1
400109f0:	3afffffa 	bcc	400109e0 <__aeabi_uidiv+0x40>
400109f4:	e3a02000 	mov	r2, #0
400109f8:	e1500001 	cmp	r0, r1
400109fc:	20400001 	subcs	r0, r0, r1
40010a00:	21822003 	orrcs	r2, r2, r3
40010a04:	e15000a1 	cmp	r0, r1, lsr #1
40010a08:	204000a1 	subcs	r0, r0, r1, lsr #1
40010a0c:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010a10:	e1500121 	cmp	r0, r1, lsr #2
40010a14:	20400121 	subcs	r0, r0, r1, lsr #2
40010a18:	21822123 	orrcs	r2, r2, r3, lsr #2
40010a1c:	e15001a1 	cmp	r0, r1, lsr #3
40010a20:	204001a1 	subcs	r0, r0, r1, lsr #3
40010a24:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010a28:	e3500000 	cmp	r0, #0
40010a2c:	11b03223 	lsrsne	r3, r3, #4
40010a30:	11a01221 	lsrne	r1, r1, #4
40010a34:	1affffef 	bne	400109f8 <__aeabi_uidiv+0x58>
40010a38:	e1a00002 	mov	r0, r2
40010a3c:	e12fff1e 	bx	lr
40010a40:	03a00001 	moveq	r0, #1
40010a44:	13a00000 	movne	r0, #0
40010a48:	e12fff1e 	bx	lr
40010a4c:	e3510801 	cmp	r1, #65536	; 0x10000
40010a50:	21a01821 	lsrcs	r1, r1, #16
40010a54:	23a02010 	movcs	r2, #16
40010a58:	33a02000 	movcc	r2, #0
40010a5c:	e3510c01 	cmp	r1, #256	; 0x100
40010a60:	21a01421 	lsrcs	r1, r1, #8
40010a64:	22822008 	addcs	r2, r2, #8
40010a68:	e3510010 	cmp	r1, #16
40010a6c:	21a01221 	lsrcs	r1, r1, #4
40010a70:	22822004 	addcs	r2, r2, #4
40010a74:	e3510004 	cmp	r1, #4
40010a78:	82822003 	addhi	r2, r2, #3
40010a7c:	908220a1 	addls	r2, r2, r1, lsr #1
40010a80:	e1a00230 	lsr	r0, r0, r2
40010a84:	e12fff1e 	bx	lr
40010a88:	e3500000 	cmp	r0, #0
40010a8c:	13e00000 	mvnne	r0, #0
40010a90:	ea000059 	b	40010bfc <__aeabi_idiv0>

40010a94 <__aeabi_uidivmod>:
40010a94:	e3510000 	cmp	r1, #0
40010a98:	0afffffa 	beq	40010a88 <__aeabi_uidiv+0xe8>
40010a9c:	e92d4003 	push	{r0, r1, lr}
40010aa0:	ebffffbe 	bl	400109a0 <__aeabi_uidiv>
40010aa4:	e8bd4006 	pop	{r1, r2, lr}
40010aa8:	e0030092 	mul	r3, r2, r0
40010aac:	e0411003 	sub	r1, r1, r3
40010ab0:	e12fff1e 	bx	lr

40010ab4 <__aeabi_idiv>:
40010ab4:	e3510000 	cmp	r1, #0
40010ab8:	0a000043 	beq	40010bcc <.divsi3_skip_div0_test+0x110>

40010abc <.divsi3_skip_div0_test>:
40010abc:	e020c001 	eor	ip, r0, r1
40010ac0:	42611000 	rsbmi	r1, r1, #0
40010ac4:	e2512001 	subs	r2, r1, #1
40010ac8:	0a000027 	beq	40010b6c <.divsi3_skip_div0_test+0xb0>
40010acc:	e1b03000 	movs	r3, r0
40010ad0:	42603000 	rsbmi	r3, r0, #0
40010ad4:	e1530001 	cmp	r3, r1
40010ad8:	9a000026 	bls	40010b78 <.divsi3_skip_div0_test+0xbc>
40010adc:	e1110002 	tst	r1, r2
40010ae0:	0a000028 	beq	40010b88 <.divsi3_skip_div0_test+0xcc>
40010ae4:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010ae8:	01a01181 	lsleq	r1, r1, #3
40010aec:	03a02008 	moveq	r2, #8
40010af0:	13a02001 	movne	r2, #1
40010af4:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010af8:	31510003 	cmpcc	r1, r3
40010afc:	31a01201 	lslcc	r1, r1, #4
40010b00:	31a02202 	lslcc	r2, r2, #4
40010b04:	3afffffa 	bcc	40010af4 <.divsi3_skip_div0_test+0x38>
40010b08:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010b0c:	31510003 	cmpcc	r1, r3
40010b10:	31a01081 	lslcc	r1, r1, #1
40010b14:	31a02082 	lslcc	r2, r2, #1
40010b18:	3afffffa 	bcc	40010b08 <.divsi3_skip_div0_test+0x4c>
40010b1c:	e3a00000 	mov	r0, #0
40010b20:	e1530001 	cmp	r3, r1
40010b24:	20433001 	subcs	r3, r3, r1
40010b28:	21800002 	orrcs	r0, r0, r2
40010b2c:	e15300a1 	cmp	r3, r1, lsr #1
40010b30:	204330a1 	subcs	r3, r3, r1, lsr #1
40010b34:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010b38:	e1530121 	cmp	r3, r1, lsr #2
40010b3c:	20433121 	subcs	r3, r3, r1, lsr #2
40010b40:	21800122 	orrcs	r0, r0, r2, lsr #2
40010b44:	e15301a1 	cmp	r3, r1, lsr #3
40010b48:	204331a1 	subcs	r3, r3, r1, lsr #3
40010b4c:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010b50:	e3530000 	cmp	r3, #0
40010b54:	11b02222 	lsrsne	r2, r2, #4
40010b58:	11a01221 	lsrne	r1, r1, #4
40010b5c:	1affffef 	bne	40010b20 <.divsi3_skip_div0_test+0x64>
40010b60:	e35c0000 	cmp	ip, #0
40010b64:	42600000 	rsbmi	r0, r0, #0
40010b68:	e12fff1e 	bx	lr
40010b6c:	e13c0000 	teq	ip, r0
40010b70:	42600000 	rsbmi	r0, r0, #0
40010b74:	e12fff1e 	bx	lr
40010b78:	33a00000 	movcc	r0, #0
40010b7c:	01a00fcc 	asreq	r0, ip, #31
40010b80:	03800001 	orreq	r0, r0, #1
40010b84:	e12fff1e 	bx	lr
40010b88:	e3510801 	cmp	r1, #65536	; 0x10000
40010b8c:	21a01821 	lsrcs	r1, r1, #16
40010b90:	23a02010 	movcs	r2, #16
40010b94:	33a02000 	movcc	r2, #0
40010b98:	e3510c01 	cmp	r1, #256	; 0x100
40010b9c:	21a01421 	lsrcs	r1, r1, #8
40010ba0:	22822008 	addcs	r2, r2, #8
40010ba4:	e3510010 	cmp	r1, #16
40010ba8:	21a01221 	lsrcs	r1, r1, #4
40010bac:	22822004 	addcs	r2, r2, #4
40010bb0:	e3510004 	cmp	r1, #4
40010bb4:	82822003 	addhi	r2, r2, #3
40010bb8:	908220a1 	addls	r2, r2, r1, lsr #1
40010bbc:	e35c0000 	cmp	ip, #0
40010bc0:	e1a00233 	lsr	r0, r3, r2
40010bc4:	42600000 	rsbmi	r0, r0, #0
40010bc8:	e12fff1e 	bx	lr
40010bcc:	e3500000 	cmp	r0, #0
40010bd0:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010bd4:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010bd8:	ea000007 	b	40010bfc <__aeabi_idiv0>

40010bdc <__aeabi_idivmod>:
40010bdc:	e3510000 	cmp	r1, #0
40010be0:	0afffff9 	beq	40010bcc <.divsi3_skip_div0_test+0x110>
40010be4:	e92d4003 	push	{r0, r1, lr}
40010be8:	ebffffb3 	bl	40010abc <.divsi3_skip_div0_test>
40010bec:	e8bd4006 	pop	{r1, r2, lr}
40010bf0:	e0030092 	mul	r3, r2, r0
40010bf4:	e0411003 	sub	r1, r1, r3
40010bf8:	e12fff1e 	bx	lr

40010bfc <__aeabi_idiv0>:
40010bfc:	e12fff1e 	bx	lr

40010c00 <DelayArray>:
40010c00:	010402bc 01040104 010402bc 01040104     ................
40010c10:	01040104 01040104 01040104 01040104     ................
40010c20:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010c30:	02bc0104 010402bc 010402bc 010401f4     ................
40010c40:	01040104 00000104 00000000 00000000     ................
	...
40010c80:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010c90:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010ca0:	75657551 73252065 61747320 25206574     Queue %s state %
40010cb0:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010cc0:	68632065 206b6365 75657571 20444965     e check queueID 
40010cd0:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010ce0:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010cf0:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010d00:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010d10:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010d20:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010d30:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010d40:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010d50:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010d60:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010d70:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010d80:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010d90:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010da0:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010db0:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010dc0:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010dd0:	00000a0d                                ....

40010dd4 <CyFxUSBDeviceDscr>:
40010dd4:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010de4:	00000100                                ....

40010de8 <CyFxUSBDeviceDscrSS>:
40010de8:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010df8:	00000100                                ....

40010dfc <CyFxUSBDeviceQualDscr>:
40010dfc:	0200060a 400102ef 00000001              .......@....

40010e08 <CyFxUSBFSConfigDscr>:
40010e08:	00090209 80000100 00000032              ........2...

40010e14 <CyFxUSBHSConfigDscr>:
40010e14:	00dd0209 80000102 000b08fa 00030e02     ................
40010e24:	00040900 010e0100 240d0000 50010001     ...........$...P
40010e34:	6cf71000 12010104 01010224 00000002     ...l....$.......
40010e44:	00000000 059e0300 05240c00 02580102     ..........$...X.
40010e54:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010e64:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010e74:	03240900 00010104 05070003 04000382     ..$.............
40010e84:	03250501 04090040 0e010001 0e000002     ..%.@...........
40010e94:	57010124 04008300 01010102 04241b00     $..W..........$.
40010ea4:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
40010eb4:	0110719b 00000608 0105241e 1c03c002     .q.......$......
40010ec4:	d4e00002 d4e0000e 0fd2000e 05161500     ................
40010ed4:	16150100 240a0005 c0010003 00021c03     .......$........
40010ee4:	000d2406 05070000 02000283 00000001     .$..............

40010ef4 <CyFxUSBBOSDscr>:
40010ef4:	00160f05 02100702 00000000 0003100a     ................
40010f04:	0003000e 00000000                       ........

40010f0c <CyFxUSBSSConfigDscr>:
40010f0c:	00e90209 80000102 000b0864 00030e02     ........d.......
40010f1c:	00040900 010e0100 240d0000 50010001     ...........$...P
40010f2c:	b8d80000 12010105 01010224 00000002     ........$.......
40010f3c:	00000000 00000300 05240c00 02580102     ..........$...X.
40010f4c:	00000003 06241c00 57ca7a03 5b1aa337     ......$..z.W7..[
40010f5c:	8e8d9649 76961f36 02010b50 00860403     I...6..vP.......
40010f6c:	03240900 00010104 05070003 04000382     ..$.............
40010f7c:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010f8c:	00020e01 01240e00 83005701 01020400     ......$..W......
40010f9c:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010fac:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010fbc:	20020205 0007980a 00317040 004814d0     ... ....@p1...H.
40010fcc:	2a0099c6 01000a2c 000a2c2a 0003240a     ...*,...*,...$..
40010fdc:	980a2001 24060007 0000000d 02830507     . .....$........
40010fec:	06010400 00000f30 00000000              ....0.......

40010ff8 <CyFxUSBStringLangIDDscr>:
40010ff8:	04090304                                ....

40010ffc <CyFxUSBManufactureDscr>:
40010ffc:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
4001100c:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
4001101c:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
4001102c:	006f0069 0073006e                       i.o.n.s.

40011034 <CyFxUSBProductDscr>:
40011034:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40011044:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40011054:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40011064:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40011074:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40011084:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40011094:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
400110a4:	64612065 73657264 73692073 746f6e20     e address is not
400110b4:	6c617620 0a216469 00000000 736e6573      valid!.....sens
400110c4:	7720726f 65746972 30284232 64252029     or write2B(0) %d
400110d4:	20642520 0a0d6425 00000000 4f525245      %d %d......ERRO
400110e4:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
400110f4:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40011104:	74655320 6c615620 45206575 726f7272      Set Value Error
40011114:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011124:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
40011134:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40011144:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40011154:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40011164:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40011174:	20656854 20746547 746e6f63 206c6f72     The Get control 
40011184:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011194:	20656854 20746553 746e6f63 206c6f72     The Set control 
400111a4:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
400111b4:	00000a0d                                ....

400111b8 <ExTime>:
400111b8:	004e009c 00140027 0005000a 00010002     ..N.'...........

400111c8 <CyFxGpifConfig>:
400111c8:	0000000f 40030688 400307a8 00000005     .......@...@....
400111d8:	4003067c 0000004c 400307b8              |..@L......@

400111e4 <CyFxGpifConfig_usb2>:
400111e4:	00000093 400308f8 40030aa8 00000008     .......@...@....
400111f4:	400308e8 0000004c 40030b3c 20433249     ...@L...<..@I2C 
40011204:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
40011214:	20656854 6d6d6f63 20646e61 75657571     The command queu
40011224:	73692065 61657220 25207964 64252064     e is ready %d %d
40011234:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
40011244:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
40011254:	65666675 29312872 6f43203a 3d206564     uffer(1): Code =
40011264:	2c642520 7a697320 203d2065 202c7825      %d, size = %x, 
40011274:	44616d64 20656e6f 25206425 000a0d64     dmaDone %d %d...
40011284:	45534552 6e652054 6e756f63 65726574     RESET encountere
40011294:	2e2e2e64 78257830 25783020 000a0d78     d...0x%x 0x%x...
400112a4:	50535553 20444e45 6f636e65 65746e75     SUSPEND encounte
400112b4:	2e646572 78302e2e 30207825 0d782578     red...0x%x 0x%x.
400112c4:	0000000a 20425355 63736964 656e6e6f     ....USB disconne
400112d4:	64657463 302e2e2e 20782578 78257830     cted...0x%x 0x%x
400112e4:	00000a0d 20746553 465f5943 56555f58     ....Set CY_FX_UV
400112f4:	49565f43 5f4f4544 544e4f43 5f4c4f52     C_VIDEO_CONTROL_
40011304:	55514552 5f545345 4e455645 61462054     REQUEST_EVENT Fa
40011314:	64656c69 0a782520 00000000 20746553     iled %x.....Set 
40011324:	465f5943 56555f58 49565f43 5f4f4544     CY_FX_UVC_VIDEO_
40011334:	45525453 525f4d41 45555145 455f5453     STREAM_REQUEST_E
40011344:	544e4556 69614620 2064656c 000a7825     VENT Failed %x..
40011354:	65746c41 74616e72 65732065 6e697474     Alternate settin
40011364:	2e302067 000a0d2e 61656c43 65662072     g 0.....Clear fe
40011374:	72757461 65722065 73657571 65642074     ature request de
40011384:	74636574 2e2e6465 00000a0d 63200a0d     tected........ c
40011394:	696d6d6f 666f6574 61747320 3d206574     ommiteof state =
400113a4:	00642520 6e616843 206c656e 20746553      %d.Channel Set 
400113b4:	70617257 66207055 656c6961 45202c64     WrapUp failed, E
400113c4:	726f7272 646f6320 203d2065 0a0d6425     rror code = %d..
400113d4:	00000000 6f727245 61682072 656c646e     ....Error handle
400113e4:	2e2e2e72 00000a0d 6d6d6f43 45207469     r.......Commit E
400113f4:	6620464f 656c6961 0a0d2164 00000000     OF failed!......
40011404:	20656854 20433249 6d6d6f63 20646e61     The I2C command 
40011414:	30207369 20782578 78257830 25783020     is 0x%x 0x%x 0x%
40011424:	78302078 30207825 20782578 78257830     x 0x%x 0x%x 0x%x
40011434:	25783020 78302078 30207825 20782578      0x%x 0x%x 0x%x 
40011444:	78257830 25783020 000a0d78 6b636162     0x%x 0x%x...back
40011454:	67696c20 63207468 65706d6f 7461736e      light compensat
40011464:	206e6f69 74746573 20676e69 6e207369     ion setting is n
40011474:	6320746f 6572726f 202e7463 25206425     ot correct. %d %
40011484:	000a0d64 20656854 20433249 72727563     d...The I2C curr
40011494:	20746e65 61746164 20736920 20746f6e     ent data is not 
400114a4:	69617661 6c62616c 74202e65 61207972     available. try a
400114b4:	6e696167 6425202e 0d642520 0000000a     gain. %d %d.....
400114c4:	4d707845 43474126 6e657320 6f742074     ExpM&AGC sent to
400114d4:	736f6820 25202e74 64252064 6425203b      host. %d %d; %d
400114e4:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
400114f4:	746f6720 206e6574 6d6f7266 736f6820      gotten from hos
40011504:	25202e74 64252064 6425203b 0d642520     t. %d %d; %d %d.
40011514:	0000000a 20656854 20746567 61746164     ....The get data
40011524:	6f726620 6f68206d 66207473 206c6961      from host fail 
40011534:	6f727265 6f632072 25206564 0a0d2e64     error code %d...
40011544:	00000000 20656854 75716552 20747365     ....The Request 
40011554:	78257830 72617020 74656d61 67207265     0x%x parameter g
40011564:	66207465 206d6f72 74736f68 25783020     et from host 0x%
40011574:	78302078 2f207825 6e657320 6f742064     x 0x%x / send to
40011584:	736f6820 78302074 30207825 0d782578      host 0x%x 0x%x.
40011594:	0000000a 6d6f6f5a 20704f20 65636572     ....Zoom Op rece
400115a4:	73657669 54432820 78302029 30207825     ives (CT) 0x%x 0
400115b4:	20782578 78257830 00000a0d 61666564     x%x 0x%x....defa
400115c4:	20746c75 656c6573 726f7463 54432820     ult selector (CT
400115d4:	78302029 30207825 0d782578 0000000a     ) 0x%x 0x%x.....
400115e4:	61666564 20746c75 75716572 20747365     default request 
400115f4:	29544328 25783020 78302078 0a0d7825     (CT) 0x%x 0x%x..
40011604:	00000000 20656854 75716552 20747365     ....The Request 
40011614:	78257830 72617020 74656d61 67207265     0x%x parameter g
40011624:	66207465 206d6f72 74736f68 54432820     et from host (CT
40011634:	78302029 30207825 20782578 78257830     ) 0x%x 0x%x 0x%x
40011644:	73202f20 20646e65 68206f74 2074736f      / send to host 
40011654:	78257830 25783020 78302078 202c7825     0x%x 0x%x 0x%x, 
40011664:	0a0d6425 00000000 20425355 65657073     %d......USB spee
40011674:	203d2064 65206425 666e6576 2067616c     d = %d evenflag 
40011684:	7830203d 62207825 7165526d 65707954     = 0x%x bmReqType
40011694:	30203d20 0d782578 6552620a 73657571      = 0x%x..bReques
400116a4:	203d2074 78257830 61567720 2065756c     t = 0x%x wValue 
400116b4:	7830203d 77207825 65646e49 203d2078     = 0x%x wIndex = 
400116c4:	78257830 654c7720 6874676e 30203d20     0x%x wLength = 0
400116d4:	20782578 6c667369 30206761 0d782578     x%x isflag 0x%x.
400116e4:	0000000a 20656854 61666564 20746c75     ....The default 
400116f4:	75746573 65722070 73657571 61762074     setup request va
40011704:	2065756c 78257830 25783020 000a0d78     lue 0x%x 0x%x...
40011714:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
40011724:	4d414552 4556455f 6620544e 656c6961     REAM_EVENT faile
40011734:	78252064 0000000a 20746547 20435655     d %x....Get UVC 
40011744:	6c697473 7274206c 65676769 6f632072     still trigger co
40011754:	6f72746e 6425206c 0d642520 0000000a     ntrol %d %d.....
40011764:	20435655 6c697473 7274206c 65676769     UVC still trigge
40011774:	6f632072 6f72746e 6166206c 25206c69     r control fail %
40011784:	64252064 00000a0d 6c696146 74206465     d %d....Failed t
40011794:	6573206f 6920646e 7265746e 74707572     o send interrupt
400117a4:	61747320 2c737574 72724520 6320726f      status, Error c
400117b4:	2065646f 6425203d 00000a0d 20656854     ode = %d....The 
400117c4:	20746573 20666564 61746164 25783020     set def data 0x%
400117d4:	30202c78 2e782578 00000a0d 20656854     x, 0x%x.....The 
400117e4:	20746573 20666564 61746164 25783020     set def data 0x%
400117f4:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
40011804:	2c782578 25783020 30202c78 2e782578     x%x, 0x%x, 0x%x.
40011814:	00000a0d 54524155 696e6920 6c616974     ....UART initial
40011824:	74617a69 206e6f69 6c696166 0a216465     ization failed!.
40011834:	00000000 20433249 74696e69 696c6169     ....I2C initiali
40011844:	6974617a 66206e6f 656c6961 000a2164     zation failed!..
40011854:	20433249 666e6f63 72756769 6f697461     I2C configuratio
40011864:	6166206e 64656c69 00000a21 20435655     n failed!...UVC 
40011874:	61657243 45206574 746e6576 69616620     Create Event fai
40011884:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011894:	6425203d 0000000a 4f495047 696e4920     = %d....GPIO Ini
400118a4:	61662074 64656c69 7245202c 20726f72     t failed, Error 
400118b4:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
400118c4:	65764f20 64697272 61662065 64656c69      Override failed
400118d4:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400118e4:	00000a64 4f495047 29303228 65764f20     d...GPIO(20) Ove
400118f4:	64697272 61662065 64656c69 7245202c     rride failed, Er
40011904:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011914:	4f495047 29343228 65764f20 64697272     GPIO(24) Overrid
40011924:	61662065 64656c69 7245202c 20726f72     e failed, Error 
40011934:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011944:	74655320 65722820 20746573 20293232      Set (reset 22) 
40011954:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
40011964:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011974:	4f495047 74655320 6f702820 20726577     GPIO Set (power 
40011984:	20293032 666e6f43 45206769 726f7272     20) Config Error
40011994:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400119a4:	00000a64 4f495047 74655320 6e732820     d...GPIO Set (sn
400119b4:	73207061 20746f68 20293432 666e6f43     ap shot 24) Conf
400119c4:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
400119d4:	65646f43 25203d20 00000a64 20424950     Code = %d...PIB 
400119e4:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
400119f4:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011a04:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
40011a14:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
40011a24:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011a34:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
40011a44:	20746553 70646e45 746e696f 6e6f6320     Set Endpoint con
40011a54:	20676966 6c696166 202c6465 6f727245     fig failed, Erro
40011a64:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011a74:	20414d44 65746e49 70757272 74532074     DMA Interrupt St
40011a84:	73757461 61684320 6c656e6e 65724320     atus Channel Cre
40011a94:	6f697461 6146206e 64656c69 7245202c     ation Failed, Er
40011aa4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011ab4:	6c696146 74206465 6c61206f 61636f6c     Failed to alloca
40011ac4:	6d206574 726f6d65 6f662079 6e692072     te memory for in
40011ad4:	72726574 20747075 74617473 62207375     terrupt status b
40011ae4:	65666675 000a0d72 20414d44 6e616843     uffer...DMA Chan
40011af4:	206c656e 61657243 6e6f6974 69614620     nel Creation Fai
40011b04:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011b14:	6425203d 0000000a 20425355 6e6e6f43     = %d....USB Conn
40011b24:	20746365 6c696166 202c6465 6f727245     ect failed, Erro
40011b34:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011b44:	20414d44 6e616843 206c656e 65736552     DMA Channel Rese
40011b54:	61462074 64656c69 7245202c 20726f72     t Failed, Error 
40011b64:	65646f43 25203d20 00000a64 20414d44     Code = %d...DMA 
40011b74:	6e616843 206c656e 20746553 6e617254     Channel Set Tran
40011b84:	72656673 69614620 2c64656c 72724520     sfer Failed, Err
40011b94:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011ba4:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
40011bb4:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011bc4:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011bd4:	00000a0d 73200a0d 72657075 69706720     ...... super gpi
40011be4:	00000066 68200a0d 20686769 66697067     f..... high gpif
40011bf4:	00000000 64616f4c 20676e69 46495047     ....Loading GPIF
40011c04:	6e6f4320 75676966 69746172 66206e6f      Configuration f
40011c14:	656c6961 45202c64 726f7272 646f4320     ailed, Error Cod
40011c24:	203d2065 0a0d6425 00000000 72617453     e = %d......Star
40011c34:	676e6974 49504720 74732046 20657461     ting GPIF state 
40011c44:	6863616d 20656e69 6c696166 202c6465     machine failed, 
40011c54:	6f727245 6f432072 3d206564 0d642520     Error Code = %d.
40011c64:	0000000a 553a3033 41204356 54207070     ....30:UVC App T
40011c74:	61657268 00000064 553a3133 41204356     hread...31:UVC A
40011c84:	45207070 54203050 61657268 00000064     pp EP0 Thread...
40011c94:	493a3233 41204332 43207070 204c5254     32:I2C App CTRL 
40011ca4:	65726854 00006461                       Thread..

40011cac <glFx3PartProperties>:
40011cac:	00000000 0000009f 00000010 0000009b     ................
40011cbc:	00000020 0000008f 00000030 0000008b      .......0.......
40011ccc:	00000004 000000ef 00000104 000000ef     ................
40011cdc:	00000184 000000af 00000154 000000e9     ........T.......
40011cec:	000001d4 000000a9 10000004 000000ee     ................
40011cfc:	10000104 000000ee 10000184 000000ae     ................
40011d0c:	10000154 000000e8 100001d4 000000a8     T...............
40011d1c:	00000002 00000077 00000102 00000077     ....w.......w...
40011d2c:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011d3c:	10000002 00000076 10000102 00000076     ....v.......v...
40011d4c:	100001c2 00000034 00000258 00000199     ....4...X.......
40011d5c:	00000248 0000019d 00000458 00000299     H.......X.......
40011d6c:	00000448 0000029d 00000848 0000049d     H.......H.......
40011d7c:	10000448 0000029c                       H.......

40011d84 <glPmmcCsdValue>:
40011d84:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011d94 <glPmmcExtCsdValue>:
40011d94:	40040000 03020200 00000404 32321414     ...@..........22
40011da4:	00406464 00000000                       dd@.....

40011dac <glConstGpifDefaults>:
40011dac:	00000220 00000000 00000000 00000000      ...............
40011dbc:	000f0000 00000000 00000000 00000082     ................
40011dcc:	00000782 00000000 00000000 00000000     ................
	...
40011e20:	00000006 00000000 0000ffff 0000010a     ................
40011e30:	00000000 0000ffff 00000000 0000ffff     ................
40011e40:	0000010a 00000000 0000ffff 00000000     ................
	...
40011ea8:	00010400 00010400 00010400 00010400     ................
40011eb8:	10000000 00000000 00000000 00000000     ................
	...
40011ed8:	00000001                                ....

40011edc <glGpifConstMaxState>:
40011edc:	1f3f7fff                                ..?.

40011ee0 <CyU3PSSEpTypeMap>:
40011ee0:	01020003                                ....

40011ee4 <glUsbMaxPacketSize>:
40011ee4:	000003ff 00000040 00000040 00000400     ....@...@.......
40011ef4:	00000200 00000400 00000400 00000400     ................
40011f04:	00000400                                ....

40011f08 <glUsb3CompliancePatterns>:
40011f08:	00000600 0000044a 00000478 000005bc     ....J...x.......
40011f18:	00000c00 000005fc 000001fc 00001400     ................
40011f28:	00001000                                ....

40011f2c <CyU3PFirmwareEntry>:
40011f2c:	e59f1038 	ldr	r1, [pc, #56]	; 40011f6c <CyU3PFirmwareEntry+0x40>
40011f30:	e3e00000 	mvn	r0, #0
40011f34:	e5810000 	str	r0, [r1]
40011f38:	e59f1030 	ldr	r1, [pc, #48]	; 40011f70 <CyU3PFirmwareEntry+0x44>
40011f3c:	e2411008 	sub	r1, r1, #8
40011f40:	e3a02a01 	mov	r2, #4096	; 0x1000
40011f44:	e3a000d3 	mov	r0, #211	; 0xd3
40011f48:	e121f000 	msr	CPSR_c, r0
40011f4c:	e0811002 	add	r1, r1, r2
40011f50:	e3c11007 	bic	r1, r1, #7
40011f54:	e1a0d001 	mov	sp, r1
40011f58:	eb000271 	bl	40012924 <CyU3PSysSetupMMU>
40011f5c:	eb000620 	bl	400137e4 <CyU3PSysCheckBootState>
40011f60:	eb000003 	bl	40011f74 <CyU3PSetupStackPtrs>
40011f64:	eb0000d1 	bl	400122b0 <__CyU3PEntryKeep>
40011f68:	eaffc5a0 	b	400035f0 <CyU3PToolChainInit>
40011f6c:	fffff014 	.word	0xfffff014
40011f70:	40002000 	.word	0x40002000

40011f74 <CyU3PSetupStackPtrs>:
40011f74:	e3a01201 	mov	r1, #268435456	; 0x10000000
40011f78:	e2411008 	sub	r1, r1, #8
40011f7c:	e3a02b02 	mov	r2, #2048	; 0x800
40011f80:	e3a030df 	mov	r3, #223	; 0xdf
40011f84:	e12ff003 	msr	CPSR_fsxc, r3
40011f88:	e0811002 	add	r1, r1, r2
40011f8c:	e3c11007 	bic	r1, r1, #7
40011f90:	e1a0d001 	mov	sp, r1
40011f94:	e3a0a000 	mov	sl, #0
40011f98:	e3a0b000 	mov	fp, #0
40011f9c:	e3a02c01 	mov	r2, #256	; 0x100
40011fa0:	e3a030d7 	mov	r3, #215	; 0xd7
40011fa4:	e12ff003 	msr	CPSR_fsxc, r3
40011fa8:	e0811002 	add	r1, r1, r2
40011fac:	e3c11007 	bic	r1, r1, #7
40011fb0:	e1a0d001 	mov	sp, r1
40011fb4:	e3a0a000 	mov	sl, #0
40011fb8:	e3a0b000 	mov	fp, #0
40011fbc:	e3a02c01 	mov	r2, #256	; 0x100
40011fc0:	e3a030db 	mov	r3, #219	; 0xdb
40011fc4:	e12ff003 	msr	CPSR_fsxc, r3
40011fc8:	e0811002 	add	r1, r1, r2
40011fcc:	e3c11007 	bic	r1, r1, #7
40011fd0:	e1a0d001 	mov	sp, r1
40011fd4:	e3a0a000 	mov	sl, #0
40011fd8:	e3a0b000 	mov	fp, #0
40011fdc:	e3a02c02 	mov	r2, #512	; 0x200
40011fe0:	e3a000d1 	mov	r0, #209	; 0xd1
40011fe4:	e121f000 	msr	CPSR_c, r0
40011fe8:	e0811002 	add	r1, r1, r2
40011fec:	e3c11007 	bic	r1, r1, #7
40011ff0:	e1a0d001 	mov	sp, r1
40011ff4:	e3a0a000 	mov	sl, #0
40011ff8:	e3a0b000 	mov	fp, #0
40011ffc:	e3a02b01 	mov	r2, #1024	; 0x400
40012000:	e3a000d2 	mov	r0, #210	; 0xd2
40012004:	e121f000 	msr	CPSR_c, r0
40012008:	e0811002 	add	r1, r1, r2
4001200c:	e3c11007 	bic	r1, r1, #7
40012010:	e1a0d001 	mov	sp, r1
40012014:	e3a02a01 	mov	r2, #4096	; 0x1000
40012018:	e3a000d3 	mov	r0, #211	; 0xd3
4001201c:	e121f000 	msr	CPSR_c, r0
40012020:	e0811002 	add	r1, r1, r2
40012024:	e3c11007 	bic	r1, r1, #7
40012028:	e1a0d001 	mov	sp, r1
4001202c:	e12fff1e 	bx	lr

40012030 <CyU3PSysCleanDCache>:
40012030:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40012034:	1afffffd 	bne	40012030 <CyU3PSysCleanDCache>
40012038:	e12fff1e 	bx	lr

4001203c <CyU3PSysClearDCache>:
4001203c:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40012040:	1afffffd 	bne	4001203c <CyU3PSysClearDCache>
40012044:	e12fff1e 	bx	lr

40012048 <CyU3PSysFlushIRegion>:
40012048:	e3510000 	cmp	r1, #0
4001204c:	0a00000a 	beq	4001207c <CyU3PSysFlushIRegion+0x34>
40012050:	e0801001 	add	r1, r0, r1
40012054:	e3c0001f 	bic	r0, r0, #31
40012058:	e3a0201f 	mov	r2, #31
4001205c:	e1110002 	tst	r1, r2
40012060:	e0411000 	sub	r1, r1, r0
40012064:	e1a012a1 	lsr	r1, r1, #5
40012068:	12811001 	addne	r1, r1, #1
4001206c:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40012070:	e2800020 	add	r0, r0, #32
40012074:	e2511001 	subs	r1, r1, #1
40012078:	1afffffb 	bne	4001206c <CyU3PSysFlushIRegion+0x24>
4001207c:	e12fff1e 	bx	lr

40012080 <CyU3PSysClearDRegion>:
40012080:	e3510000 	cmp	r1, #0
40012084:	0a00000a 	beq	400120b4 <CyU3PSysClearDRegion+0x34>
40012088:	e0801001 	add	r1, r0, r1
4001208c:	e3c0001f 	bic	r0, r0, #31
40012090:	e3a0201f 	mov	r2, #31
40012094:	e1110002 	tst	r1, r2
40012098:	e0411000 	sub	r1, r1, r0
4001209c:	e1a012a1 	lsr	r1, r1, #5
400120a0:	12811001 	addne	r1, r1, #1
400120a4:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
400120a8:	e2800020 	add	r0, r0, #32
400120ac:	e2511001 	subs	r1, r1, #1
400120b0:	1afffffb 	bne	400120a4 <CyU3PSysClearDRegion+0x24>
400120b4:	e12fff1e 	bx	lr

400120b8 <CyU3PSysCleanDRegion>:
400120b8:	e3510000 	cmp	r1, #0
400120bc:	0a00000a 	beq	400120ec <CyU3PSysCleanDRegion+0x34>
400120c0:	e0801001 	add	r1, r0, r1
400120c4:	e3c0001f 	bic	r0, r0, #31
400120c8:	e3a0201f 	mov	r2, #31
400120cc:	e1110002 	tst	r1, r2
400120d0:	e0411000 	sub	r1, r1, r0
400120d4:	e1a012a1 	lsr	r1, r1, #5
400120d8:	12811001 	addne	r1, r1, #1
400120dc:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
400120e0:	e2800020 	add	r0, r0, #32
400120e4:	e2511001 	subs	r1, r1, #1
400120e8:	1afffffb 	bne	400120dc <CyU3PSysCleanDRegion+0x24>
400120ec:	e12fff1e 	bx	lr

400120f0 <CyU3PSysFlushDRegion>:
400120f0:	e3510000 	cmp	r1, #0
400120f4:	0a00000a 	beq	40012124 <CyU3PSysFlushDRegion+0x34>
400120f8:	e0801001 	add	r1, r0, r1
400120fc:	e3c0001f 	bic	r0, r0, #31
40012100:	e3a0201f 	mov	r2, #31
40012104:	e1110002 	tst	r1, r2
40012108:	e0411000 	sub	r1, r1, r0
4001210c:	e1a012a1 	lsr	r1, r1, #5
40012110:	12811001 	addne	r1, r1, #1
40012114:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40012118:	e2800020 	add	r0, r0, #32
4001211c:	e2511001 	subs	r1, r1, #1
40012120:	1afffffb 	bne	40012114 <CyU3PSysFlushDRegion+0x24>
40012124:	e12fff1e 	bx	lr

40012128 <CyU3PSysCacheIRegion>:
40012128:	e3a03000 	mov	r3, #0
4001212c:	e3510000 	cmp	r1, #0
40012130:	0a000023 	beq	400121c4 <CyU3PSysCacheIRegion+0x9c>
40012134:	e0801001 	add	r1, r0, r1
40012138:	e3c0001f 	bic	r0, r0, #31
4001213c:	e3a0201f 	mov	r2, #31
40012140:	e1110002 	tst	r1, r2
40012144:	e0411000 	sub	r1, r1, r0
40012148:	e1a012a1 	lsr	r1, r1, #5
4001214c:	12811001 	addne	r1, r1, #1
40012150:	e351003f 	cmp	r1, #63	; 0x3f
40012154:	8a00001a 	bhi	400121c4 <CyU3PSysCacheIRegion+0x9c>
40012158:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
4001215c:	e20c200f 	and	r2, ip, #15
40012160:	e3a03001 	mov	r3, #1
40012164:	e11c0003 	tst	ip, r3
40012168:	11a03083 	lslne	r3, r3, #1
4001216c:	111c0003 	tstne	ip, r3
40012170:	11a03083 	lslne	r3, r3, #1
40012174:	111c0003 	tstne	ip, r3
40012178:	11a03083 	lslne	r3, r3, #1
4001217c:	1a000010 	bne	400121c4 <CyU3PSysCacheIRegion+0x9c>
40012180:	e3510000 	cmp	r1, #0
40012184:	0a00000e 	beq	400121c4 <CyU3PSysCacheIRegion+0x9c>
40012188:	e1e03003 	mvn	r3, r3
4001218c:	e203300f 	and	r3, r3, #15
40012190:	e3ccc00f 	bic	ip, ip, #15
40012194:	e08cc003 	add	ip, ip, r3
40012198:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
4001219c:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
400121a0:	e2800020 	add	r0, r0, #32
400121a4:	e2511001 	subs	r1, r1, #1
400121a8:	1afffffb 	bne	4001219c <CyU3PSysCacheIRegion+0x74>
400121ac:	e1e0300c 	mvn	r3, ip
400121b0:	e203300f 	and	r3, r3, #15
400121b4:	e1822003 	orr	r2, r2, r3
400121b8:	e3ccc00f 	bic	ip, ip, #15
400121bc:	e00cc002 	and	ip, ip, r2
400121c0:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
400121c4:	e1a00003 	mov	r0, r3
400121c8:	e12fff1e 	bx	lr

400121cc <CyU3PSysCacheDRegion>:
400121cc:	e3a03000 	mov	r3, #0
400121d0:	e3510000 	cmp	r1, #0
400121d4:	0a000022 	beq	40012264 <CyU3PSysCacheDRegion+0x98>
400121d8:	e0801001 	add	r1, r0, r1
400121dc:	e3c0001f 	bic	r0, r0, #31
400121e0:	e3a0201f 	mov	r2, #31
400121e4:	e1110002 	tst	r1, r2
400121e8:	e0411000 	sub	r1, r1, r0
400121ec:	e1a012a1 	lsr	r1, r1, #5
400121f0:	12811001 	addne	r1, r1, #1
400121f4:	e351003f 	cmp	r1, #63	; 0x3f
400121f8:	8a000019 	bhi	40012264 <CyU3PSysCacheDRegion+0x98>
400121fc:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012200:	e20c200f 	and	r2, ip, #15
40012204:	e3a03001 	mov	r3, #1
40012208:	e11c0003 	tst	ip, r3
4001220c:	11a03083 	lslne	r3, r3, #1
40012210:	111c0003 	tstne	ip, r3
40012214:	11a03083 	lslne	r3, r3, #1
40012218:	111c0003 	tstne	ip, r3
4001221c:	11a03083 	lslne	r3, r3, #1
40012220:	1a00000f 	bne	40012264 <CyU3PSysCacheDRegion+0x98>
40012224:	e3510000 	cmp	r1, #0
40012228:	0a00000d 	beq	40012264 <CyU3PSysCacheDRegion+0x98>
4001222c:	e1e03003 	mvn	r3, r3
40012230:	e203300f 	and	r3, r3, #15
40012234:	e3ccc00f 	bic	ip, ip, #15
40012238:	e08cc003 	add	ip, ip, r3
4001223c:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
40012240:	e4903020 	ldr	r3, [r0], #32
40012244:	e2511001 	subs	r1, r1, #1
40012248:	1afffffc 	bne	40012240 <CyU3PSysCacheDRegion+0x74>
4001224c:	e1e0300c 	mvn	r3, ip
40012250:	e203300f 	and	r3, r3, #15
40012254:	e1822003 	orr	r2, r2, r3
40012258:	e3ccc00f 	bic	ip, ip, #15
4001225c:	e00cc002 	and	ip, ip, r2
40012260:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
40012264:	e1a00003 	mov	r0, r3
40012268:	e12fff1e 	bx	lr

4001226c <CyU3PSysUnlockICache>:
4001226c:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012270:	e3c0000f 	bic	r0, r0, #15
40012274:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

40012278 <CyU3PSysUnlockDCache>:
40012278:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
4001227c:	e3c0000f 	bic	r0, r0, #15
40012280:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

40012284 <__cyu3p_exception_vectors>:
40012284:	e59ff028 	ldr	pc, [pc, #40]	; 400122b4 <__CyU3PEntryKeep+0x4>
40012288:	e59ff028 	ldr	pc, [pc, #40]	; 400122b8 <__CyU3PEntryKeep+0x8>
4001228c:	e59ff028 	ldr	pc, [pc, #40]	; 400122bc <__CyU3PEntryKeep+0xc>
40012290:	e59ff028 	ldr	pc, [pc, #40]	; 400122c0 <__CyU3PEntryKeep+0x10>
40012294:	e59ff028 	ldr	pc, [pc, #40]	; 400122c4 <__CyU3PEntryKeep+0x14>
40012298:	e59ff028 	ldr	pc, [pc, #40]	; 400122c8 <__CyU3PEntryKeep+0x18>
4001229c:	e51ff120 	ldr	pc, [pc, #-288]	; 40012184 <CyU3PSysCacheIRegion+0x5c>
400122a0:	e59ff024 	ldr	pc, [pc, #36]	; 400122cc <__CyU3PEntryKeep+0x1c>

400122a4 <__CyU3PSWIHandler>:
400122a4:	eafffffe 	b	400122a4 <__CyU3PSWIHandler>

400122a8 <__CyU3PReservedHandler>:
400122a8:	eafffffe 	b	400122a8 <__CyU3PReservedHandler>

400122ac <__CyU3PFiqHandler>:
400122ac:	eafffffe 	b	400122ac <__CyU3PFiqHandler>

400122b0 <__CyU3PEntryKeep>:
400122b0:	e12fff1e 	bx	lr
400122b4:	40011f2c 	.word	0x40011f2c
400122b8:	40003618 	.word	0x40003618
400122bc:	400122a4 	.word	0x400122a4
400122c0:	4000361c 	.word	0x4000361c
400122c4:	40003620 	.word	0x40003620
400122c8:	400122a8 	.word	0x400122a8
400122cc:	400122ac 	.word	0x400122ac

Disassembly of section i.CyU3PDevCheckDevStateStruct:

400122d0 <CyU3PDevCheckDevStateStruct>:
400122d0:	e92d4038 	push	{r3, r4, r5, lr}
400122d4:	e59f4118 	ldr	r4, [pc, #280]	; 400123f4 <_etext+0x124>
400122d8:	e3a00000 	mov	r0, #0
400122dc:	e58d0000 	str	r0, [sp]
400122e0:	e5940000 	ldr	r0, [r4]
400122e4:	e59f110c 	ldr	r1, [pc, #268]	; 400123f8 <_etext+0x128>
400122e8:	e1500001 	cmp	r0, r1
400122ec:	0a000000 	beq	400122f4 <CyU3PDevCheckDevStateStruct+0x24>
400122f0:	ea00003b 	b	400123e4 <CyU3PDevCheckDevStateStruct+0x114>
400122f4:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400122f8:	e59f10fc 	ldr	r1, [pc, #252]	; 400123fc <_etext+0x12c>
400122fc:	e1500001 	cmp	r0, r1
40012300:	1a000005 	bne	4001231c <CyU3PDevCheckDevStateStruct+0x4c>
40012304:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012308:	e59f10f0 	ldr	r1, [pc, #240]	; 40012400 <_etext+0x130>
4001230c:	e1500001 	cmp	r0, r1
40012310:	3a000001 	bcc	4001231c <CyU3PDevCheckDevStateStruct+0x4c>
40012314:	e594500c 	ldr	r5, [r4, #12]
40012318:	ea000001 	b	40012324 <CyU3PDevCheckDevStateStruct+0x54>
4001231c:	e594000c 	ldr	r0, [r4, #12]
40012320:	e20050ff 	and	r5, r0, #255	; 0xff
40012324:	e594000c 	ldr	r0, [r4, #12]
40012328:	e3500000 	cmp	r0, #0
4001232c:	0a000003 	beq	40012340 <CyU3PDevCheckDevStateStruct+0x70>
40012330:	e594000c 	ldr	r0, [r4, #12]
40012334:	e59f10c8 	ldr	r1, [pc, #200]	; 40012404 <_etext+0x134>
40012338:	e1500001 	cmp	r0, r1
4001233c:	9a000000 	bls	40012344 <CyU3PDevCheckDevStateStruct+0x74>
40012340:	ea000027 	b	400123e4 <CyU3PDevCheckDevStateStruct+0x114>
40012344:	e1a0200d 	mov	r2, sp
40012348:	e1a01005 	mov	r1, r5
4001234c:	e59f00a0 	ldr	r0, [pc, #160]	; 400123f4 <_etext+0x124>
40012350:	eb00049f 	bl	400135d4 <CyU3PComputeChecksum>
40012354:	e594000c 	ldr	r0, [r4, #12]
40012358:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
4001235c:	e2800a02 	add	r0, r0, #8192	; 0x2000
40012360:	e5900000 	ldr	r0, [r0]
40012364:	e59d1000 	ldr	r1, [sp]
40012368:	e1500001 	cmp	r0, r1
4001236c:	0a000000 	beq	40012374 <CyU3PDevCheckDevStateStruct+0xa4>
40012370:	ea00001b 	b	400123e4 <CyU3PDevCheckDevStateStruct+0x114>
40012374:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012378:	e59f107c 	ldr	r1, [pc, #124]	; 400123fc <_etext+0x12c>
4001237c:	e1500001 	cmp	r0, r1
40012380:	0a000001 	beq	4001238c <CyU3PDevCheckDevStateStruct+0xbc>
40012384:	e59f007c 	ldr	r0, [pc, #124]	; 40012408 <_etext+0x138>
40012388:	e58400dc 	str	r0, [r4, #220]	; 0xdc
4001238c:	e3a00001 	mov	r0, #1
40012390:	e59f1074 	ldr	r1, [pc, #116]	; 4001240c <_etext+0x13c>
40012394:	e5810000 	str	r0, [r1]
40012398:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
4001239c:	e59f106c 	ldr	r1, [pc, #108]	; 40012410 <_etext+0x140>
400123a0:	e1500001 	cmp	r0, r1
400123a4:	3a00000d 	bcc	400123e0 <CyU3PDevCheckDevStateStruct+0x110>
400123a8:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
400123ac:	e3500000 	cmp	r0, #0
400123b0:	0a00000a 	beq	400123e0 <CyU3PDevCheckDevStateStruct+0x110>
400123b4:	e59f0058 	ldr	r0, [pc, #88]	; 40012414 <_etext+0x144>
400123b8:	e5900018 	ldr	r0, [r0, #24]
400123bc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400123c0:	0a000006 	beq	400123e0 <CyU3PDevCheckDevStateStruct+0x110>
400123c4:	e59f004c 	ldr	r0, [pc, #76]	; 40012418 <_etext+0x148>
400123c8:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400123cc:	e3100001 	tst	r0, #1
400123d0:	0a000002 	beq	400123e0 <CyU3PDevCheckDevStateStruct+0x110>
400123d4:	e3a00001 	mov	r0, #1
400123d8:	e59f103c 	ldr	r1, [pc, #60]	; 4001241c <_etext+0x14c>
400123dc:	e5810000 	str	r0, [r1]
400123e0:	e8bd8038 	pop	{r3, r4, r5, pc}
400123e4:	e1a00000 	nop			; (mov r0, r0)
400123e8:	e3e00000 	mvn	r0, #0
400123ec:	e5840000 	str	r0, [r4]
400123f0:	eafffffa 	b	400123e0 <CyU3PDevCheckDevStateStruct+0x110>
400123f4:	40002000 	.word	0x40002000
400123f8:	42575943 	.word	0x42575943
400123fc:	42335846 	.word	0x42335846
40012400:	00010300 	.word	0x00010300
40012404:	00000ff8 	.word	0x00000ff8
40012408:	00010101 	.word	0x00010101
4001240c:	40030c84 	.word	0x40030c84
40012410:	00010201 	.word	0x00010201
40012414:	e0052000 	.word	0xe0052000
40012418:	e0001000 	.word	0xe0001000
4001241c:	40030c88 	.word	0x40030c88

Disassembly of section i.CyU3PDeviceCacheControl:

40012420 <CyU3PDeviceCacheControl>:
40012420:	e92d4070 	push	{r4, r5, r6, lr}
40012424:	e1a04000 	mov	r4, r0
40012428:	e1a06001 	mov	r6, r1
4001242c:	e1a05002 	mov	r5, r2
40012430:	e3550000 	cmp	r5, #0
40012434:	0a000003 	beq	40012448 <CyU3PDeviceCacheControl+0x28>
40012438:	e3560000 	cmp	r6, #0
4001243c:	1a000001 	bne	40012448 <CyU3PDeviceCacheControl+0x28>
40012440:	e3a00040 	mov	r0, #64	; 0x40
40012444:	e8bd8070 	pop	{r4, r5, r6, pc}
40012448:	eb000181 	bl	40012a54 <CyU3PSysBarrierSync>
4001244c:	ebfffefa 	bl	4001203c <CyU3PSysClearDCache>
40012450:	eb0001a1 	bl	40012adc <CyU3PSysFlushICache>
40012454:	eb00018f 	bl	40012a98 <CyU3PSysDisableICache>
40012458:	eb00018a 	bl	40012a88 <CyU3PSysDisableDCache>
4001245c:	e3540000 	cmp	r4, #0
40012460:	0a000003 	beq	40012474 <CyU3PDeviceCacheControl+0x54>
40012464:	eb000193 	bl	40012ab8 <CyU3PSysEnableICache>
40012468:	eb000179 	bl	40012a54 <CyU3PSysBarrierSync>
4001246c:	e59f0038 	ldr	r0, [pc, #56]	; 400124ac <CyU3PDeviceCacheControl+0x8c>
40012470:	e5804000 	str	r4, [r0]
40012474:	e3a00000 	mov	r0, #0
40012478:	e59f1030 	ldr	r1, [pc, #48]	; 400124b0 <CyU3PDeviceCacheControl+0x90>
4001247c:	e5810000 	str	r0, [r1]
40012480:	e3560000 	cmp	r6, #0
40012484:	0a000005 	beq	400124a0 <CyU3PDeviceCacheControl+0x80>
40012488:	eb000186 	bl	40012aa8 <CyU3PSysEnableDCache>
4001248c:	eb000170 	bl	40012a54 <CyU3PSysBarrierSync>
40012490:	e59f0018 	ldr	r0, [pc, #24]	; 400124b0 <CyU3PDeviceCacheControl+0x90>
40012494:	e5805000 	str	r5, [r0]
40012498:	e59f0014 	ldr	r0, [pc, #20]	; 400124b4 <CyU3PDeviceCacheControl+0x94>
4001249c:	e5806000 	str	r6, [r0]
400124a0:	eb00016b 	bl	40012a54 <CyU3PSysBarrierSync>
400124a4:	e3a00000 	mov	r0, #0
400124a8:	eaffffe5 	b	40012444 <CyU3PDeviceCacheControl+0x24>
400124ac:	40030c78 	.word	0x40030c78
400124b0:	40030c80 	.word	0x40030c80
400124b4:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDeviceInit:

400124b8 <CyU3PDeviceInit>:
400124b8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400124bc:	e1a04000 	mov	r4, r0
400124c0:	e3a06000 	mov	r6, #0
400124c4:	e3a07000 	mov	r7, #0
400124c8:	e3a09000 	mov	r9, #0
400124cc:	e3a0a000 	mov	sl, #0
400124d0:	e3540000 	cmp	r4, #0
400124d4:	0a000033 	beq	400125a8 <CyU3PDeviceInit+0xf0>
400124d8:	e5d40004 	ldrb	r0, [r4, #4]
400124dc:	e3500002 	cmp	r0, #2
400124e0:	ba000002 	blt	400124f0 <CyU3PDeviceInit+0x38>
400124e4:	e5d40004 	ldrb	r0, [r4, #4]
400124e8:	e3500010 	cmp	r0, #16
400124ec:	da000001 	ble	400124f8 <CyU3PDeviceInit+0x40>
400124f0:	e3a00040 	mov	r0, #64	; 0x40
400124f4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400124f8:	e5d40005 	ldrb	r0, [r4, #5]
400124fc:	e3500002 	cmp	r0, #2
40012500:	ba000002 	blt	40012510 <CyU3PDeviceInit+0x58>
40012504:	e5d40005 	ldrb	r0, [r4, #5]
40012508:	e3500010 	cmp	r0, #16
4001250c:	da000001 	ble	40012518 <CyU3PDeviceInit+0x60>
40012510:	e3a00040 	mov	r0, #64	; 0x40
40012514:	eafffff6 	b	400124f4 <CyU3PDeviceInit+0x3c>
40012518:	e5d40006 	ldrb	r0, [r4, #6]
4001251c:	e3500002 	cmp	r0, #2
40012520:	ba000002 	blt	40012530 <CyU3PDeviceInit+0x78>
40012524:	e5d40006 	ldrb	r0, [r4, #6]
40012528:	e3500010 	cmp	r0, #16
4001252c:	da000001 	ble	40012538 <CyU3PDeviceInit+0x80>
40012530:	e3a00040 	mov	r0, #64	; 0x40
40012534:	eaffffee 	b	400124f4 <CyU3PDeviceInit+0x3c>
40012538:	e5d40006 	ldrb	r0, [r4, #6]
4001253c:	e5d41005 	ldrb	r1, [r4, #5]
40012540:	e1500001 	cmp	r0, r1
40012544:	ba000004 	blt	4001255c <CyU3PDeviceInit+0xa4>
40012548:	e5d41005 	ldrb	r1, [r4, #5]
4001254c:	e5d40006 	ldrb	r0, [r4, #6]
40012550:	ebfff9a1 	bl	40010bdc <__aeabi_idivmod>
40012554:	e3510000 	cmp	r1, #0
40012558:	0a000001 	beq	40012564 <CyU3PDeviceInit+0xac>
4001255c:	e3a00040 	mov	r0, #64	; 0x40
40012560:	eaffffe3 	b	400124f4 <CyU3PDeviceInit+0x3c>
40012564:	e5d4000c 	ldrb	r0, [r4, #12]
40012568:	e3500004 	cmp	r0, #4
4001256c:	ba000001 	blt	40012578 <CyU3PDeviceInit+0xc0>
40012570:	e3a00040 	mov	r0, #64	; 0x40
40012574:	eaffffde 	b	400124f4 <CyU3PDeviceInit+0x3c>
40012578:	e5d40004 	ldrb	r0, [r4, #4]
4001257c:	e2400001 	sub	r0, r0, #1
40012580:	e5d41005 	ldrb	r1, [r4, #5]
40012584:	e2411001 	sub	r1, r1, #1
40012588:	e1800401 	orr	r0, r0, r1, lsl #8
4001258c:	e5d41006 	ldrb	r1, [r4, #6]
40012590:	e2411001 	sub	r1, r1, #1
40012594:	e1800601 	orr	r0, r0, r1, lsl #12
40012598:	e5d4100c 	ldrb	r1, [r4, #12]
4001259c:	e1805201 	orr	r5, r0, r1, lsl #4
400125a0:	e594a000 	ldr	sl, [r4]
400125a4:	ea000000 	b	400125ac <CyU3PDeviceInit+0xf4>
400125a8:	e59f5334 	ldr	r5, [pc, #820]	; 400128e4 <CyU3PDeviceInit+0x42c>
400125ac:	e59f0334 	ldr	r0, [pc, #820]	; 400128e8 <CyU3PDeviceInit+0x430>
400125b0:	e5805004 	str	r5, [r0, #4]
400125b4:	e5905004 	ldr	r5, [r0, #4]
400125b8:	e3a0000a 	mov	r0, #10
400125bc:	eb0003f6 	bl	4001359c <CyU3PBusyWait>
400125c0:	e59f0320 	ldr	r0, [pc, #800]	; 400128e8 <CyU3PDeviceInit+0x430>
400125c4:	e5900000 	ldr	r0, [r0]
400125c8:	e2000807 	and	r0, r0, #458752	; 0x70000
400125cc:	e1a05820 	lsr	r5, r0, #16
400125d0:	e2150003 	ands	r0, r5, #3
400125d4:	0a000004 	beq	400125ec <CyU3PDeviceInit+0x134>
400125d8:	e3500001 	cmp	r0, #1
400125dc:	0a00000e 	beq	4001261c <CyU3PDeviceInit+0x164>
400125e0:	e3500002 	cmp	r0, #2
400125e4:	1a000024 	bne	4001267c <CyU3PDeviceInit+0x1c4>
400125e8:	ea000014 	b	40012640 <CyU3PDeviceInit+0x188>
400125ec:	e1a00000 	nop			; (mov r0, r0)
400125f0:	e59f92f4 	ldr	r9, [pc, #756]	; 400128ec <CyU3PDeviceInit+0x434>
400125f4:	e35a0000 	cmp	sl, #0
400125f8:	0a000003 	beq	4001260c <CyU3PDeviceInit+0x154>
400125fc:	e59f02ec 	ldr	r0, [pc, #748]	; 400128f0 <CyU3PDeviceInit+0x438>
40012600:	e59f12ec 	ldr	r1, [pc, #748]	; 400128f4 <CyU3PDeviceInit+0x43c>
40012604:	e5810000 	str	r0, [r1]
40012608:	ea000002 	b	40012618 <CyU3PDeviceInit+0x160>
4001260c:	e59f02e4 	ldr	r0, [pc, #740]	; 400128f8 <CyU3PDeviceInit+0x440>
40012610:	e59f12dc 	ldr	r1, [pc, #732]	; 400128f4 <CyU3PDeviceInit+0x43c>
40012614:	e5810000 	str	r0, [r1]
40012618:	ea000020 	b	400126a0 <CyU3PDeviceInit+0x1e8>
4001261c:	e1a00000 	nop			; (mov r0, r0)
40012620:	e59f92d4 	ldr	r9, [pc, #724]	; 400128fc <CyU3PDeviceInit+0x444>
40012624:	e1a00209 	lsl	r0, r9, #4
40012628:	e59f12c4 	ldr	r1, [pc, #708]	; 400128f4 <CyU3PDeviceInit+0x43c>
4001262c:	e5810000 	str	r0, [r1]
40012630:	e59f02c8 	ldr	r0, [pc, #712]	; 40012900 <CyU3PDeviceInit+0x448>
40012634:	e59f12c8 	ldr	r1, [pc, #712]	; 40012904 <CyU3PDeviceInit+0x44c>
40012638:	e5810000 	str	r0, [r1]
4001263c:	ea000017 	b	400126a0 <CyU3PDeviceInit+0x1e8>
40012640:	e1a00000 	nop			; (mov r0, r0)
40012644:	e59f92bc 	ldr	r9, [pc, #700]	; 40012908 <CyU3PDeviceInit+0x450>
40012648:	e59f02bc 	ldr	r0, [pc, #700]	; 4001290c <CyU3PDeviceInit+0x454>
4001264c:	e59f12b0 	ldr	r1, [pc, #688]	; 40012904 <CyU3PDeviceInit+0x44c>
40012650:	e5810000 	str	r0, [r1]
40012654:	e35a0000 	cmp	sl, #0
40012658:	0a000003 	beq	4001266c <CyU3PDeviceInit+0x1b4>
4001265c:	e59f028c 	ldr	r0, [pc, #652]	; 400128f0 <CyU3PDeviceInit+0x438>
40012660:	e59f128c 	ldr	r1, [pc, #652]	; 400128f4 <CyU3PDeviceInit+0x43c>
40012664:	e5810000 	str	r0, [r1]
40012668:	ea000002 	b	40012678 <CyU3PDeviceInit+0x1c0>
4001266c:	e59f0284 	ldr	r0, [pc, #644]	; 400128f8 <CyU3PDeviceInit+0x440>
40012670:	e59f127c 	ldr	r1, [pc, #636]	; 400128f4 <CyU3PDeviceInit+0x43c>
40012674:	e5810000 	str	r0, [r1]
40012678:	ea000008 	b	400126a0 <CyU3PDeviceInit+0x1e8>
4001267c:	e1a00000 	nop			; (mov r0, r0)
40012680:	e59f9288 	ldr	r9, [pc, #648]	; 40012910 <CyU3PDeviceInit+0x458>
40012684:	e1a00189 	lsl	r0, r9, #3
40012688:	e59f1264 	ldr	r1, [pc, #612]	; 400128f4 <CyU3PDeviceInit+0x43c>
4001268c:	e5810000 	str	r0, [r1]
40012690:	e59f027c 	ldr	r0, [pc, #636]	; 40012914 <CyU3PDeviceInit+0x45c>
40012694:	e59f1268 	ldr	r1, [pc, #616]	; 40012904 <CyU3PDeviceInit+0x44c>
40012698:	e5810000 	str	r0, [r1]
4001269c:	e1a00000 	nop			; (mov r0, r0)
400126a0:	e1a00000 	nop			; (mov r0, r0)
400126a4:	e59f023c 	ldr	r0, [pc, #572]	; 400128e8 <CyU3PDeviceInit+0x430>
400126a8:	e5900000 	ldr	r0, [r0]
400126ac:	e200003f 	and	r0, r0, #63	; 0x3f
400126b0:	e3500015 	cmp	r0, #21
400126b4:	1a000002 	bne	400126c4 <CyU3PDeviceInit+0x20c>
400126b8:	e59f0230 	ldr	r0, [pc, #560]	; 400128f0 <CyU3PDeviceInit+0x438>
400126bc:	e59f1230 	ldr	r1, [pc, #560]	; 400128f4 <CyU3PDeviceInit+0x43c>
400126c0:	e5810000 	str	r0, [r1]
400126c4:	e59f0228 	ldr	r0, [pc, #552]	; 400128f4 <CyU3PDeviceInit+0x43c>
400126c8:	e5900000 	ldr	r0, [r0]
400126cc:	e59f121c 	ldr	r1, [pc, #540]	; 400128f0 <CyU3PDeviceInit+0x438>
400126d0:	e1500001 	cmp	r0, r1
400126d4:	1a000013 	bne	40012728 <CyU3PDeviceInit+0x270>
400126d8:	e59f0208 	ldr	r0, [pc, #520]	; 400128e8 <CyU3PDeviceInit+0x430>
400126dc:	e5900000 	ldr	r0, [r0]
400126e0:	e200003f 	and	r0, r0, #63	; 0x3f
400126e4:	e3500015 	cmp	r0, #21
400126e8:	0a00000e 	beq	40012728 <CyU3PDeviceInit+0x270>
400126ec:	e59f01f4 	ldr	r0, [pc, #500]	; 400128e8 <CyU3PDeviceInit+0x430>
400126f0:	e5900000 	ldr	r0, [r0]
400126f4:	e3c0003f 	bic	r0, r0, #63	; 0x3f
400126f8:	e3800015 	orr	r0, r0, #21
400126fc:	e59f11e4 	ldr	r1, [pc, #484]	; 400128e8 <CyU3PDeviceInit+0x430>
40012700:	e5810000 	str	r0, [r1]
40012704:	e3a00064 	mov	r0, #100	; 0x64
40012708:	eb0003a3 	bl	4001359c <CyU3PBusyWait>
4001270c:	e1a00000 	nop			; (mov r0, r0)
40012710:	e59f01d0 	ldr	r0, [pc, #464]	; 400128e8 <CyU3PDeviceInit+0x430>
40012714:	e5900000 	ldr	r0, [r0]
40012718:	e3100702 	tst	r0, #524288	; 0x80000
4001271c:	0afffffb 	beq	40012710 <CyU3PDeviceInit+0x258>
40012720:	e3a00064 	mov	r0, #100	; 0x64
40012724:	eb00039c 	bl	4001359c <CyU3PBusyWait>
40012728:	e59f01e8 	ldr	r0, [pc, #488]	; 40012918 <CyU3PDeviceInit+0x460>
4001272c:	e5908014 	ldr	r8, [r0, #20]
40012730:	e3a0000a 	mov	r0, #10
40012734:	eb000398 	bl	4001359c <CyU3PBusyWait>
40012738:	e2080003 	and	r0, r8, #3
4001273c:	e3500002 	cmp	r0, #2
40012740:	1a000005 	bne	4001275c <CyU3PDeviceInit+0x2a4>
40012744:	e3a07001 	mov	r7, #1
40012748:	e3880003 	orr	r0, r8, #3
4001274c:	e59f11c4 	ldr	r1, [pc, #452]	; 40012918 <CyU3PDeviceInit+0x460>
40012750:	e5810014 	str	r0, [r1, #20]
40012754:	e3a0000a 	mov	r0, #10
40012758:	eb00038f 	bl	4001359c <CyU3PBusyWait>
4001275c:	e3180102 	tst	r8, #-2147483648	; 0x80000000
40012760:	1a000004 	bne	40012778 <CyU3PDeviceInit+0x2c0>
40012764:	e3540000 	cmp	r4, #0
40012768:	0a000003 	beq	4001277c <CyU3PDeviceInit+0x2c4>
4001276c:	e5940008 	ldr	r0, [r4, #8]
40012770:	e3500000 	cmp	r0, #0
40012774:	1a000000 	bne	4001277c <CyU3PDeviceInit+0x2c4>
40012778:	e3a06001 	mov	r6, #1
4001277c:	e3560000 	cmp	r6, #0
40012780:	1a000014 	bne	400127d8 <CyU3PDeviceInit+0x320>
40012784:	e3c80003 	bic	r0, r8, #3
40012788:	e3800001 	orr	r0, r0, #1
4001278c:	e59f1184 	ldr	r1, [pc, #388]	; 40012918 <CyU3PDeviceInit+0x460>
40012790:	e5810014 	str	r0, [r1, #20]
40012794:	e3a00064 	mov	r0, #100	; 0x64
40012798:	eb00037f 	bl	4001359c <CyU3PBusyWait>
4001279c:	e59f0174 	ldr	r0, [pc, #372]	; 40012918 <CyU3PDeviceInit+0x460>
400127a0:	e5905018 	ldr	r5, [r0, #24]
400127a4:	e3a000c8 	mov	r0, #200	; 0xc8
400127a8:	eb00037b 	bl	4001359c <CyU3PBusyWait>
400127ac:	e59f0164 	ldr	r0, [pc, #356]	; 40012918 <CyU3PDeviceInit+0x460>
400127b0:	e5900018 	ldr	r0, [r0, #24]
400127b4:	e1500005 	cmp	r0, r5
400127b8:	1a000000 	bne	400127c0 <CyU3PDeviceInit+0x308>
400127bc:	e3a06001 	mov	r6, #1
400127c0:	e3a00064 	mov	r0, #100	; 0x64
400127c4:	eb000374 	bl	4001359c <CyU3PBusyWait>
400127c8:	e59f0148 	ldr	r0, [pc, #328]	; 40012918 <CyU3PDeviceInit+0x460>
400127cc:	e5808014 	str	r8, [r0, #20]
400127d0:	e3a00064 	mov	r0, #100	; 0x64
400127d4:	eb000370 	bl	4001359c <CyU3PBusyWait>
400127d8:	e3560000 	cmp	r6, #0
400127dc:	0a000026 	beq	4001287c <CyU3PDeviceInit+0x3c4>
400127e0:	e59f0130 	ldr	r0, [pc, #304]	; 40012918 <CyU3PDeviceInit+0x460>
400127e4:	e5900014 	ldr	r0, [r0, #20]
400127e8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400127ec:	1a000022 	bne	4001287c <CyU3PDeviceInit+0x3c4>
400127f0:	e1a09109 	lsl	r9, r9, #2
400127f4:	e3a01c7d 	mov	r1, #32000	; 0x7d00
400127f8:	e1a00009 	mov	r0, r9
400127fc:	ebfff8a4 	bl	40010a94 <__aeabi_uidivmod>
40012800:	e1a09000 	mov	r9, r0
40012804:	e2095003 	and	r5, r9, #3
40012808:	e1a09129 	lsr	r9, r9, #2
4001280c:	e3550010 	cmp	r5, #16
40012810:	2a000000 	bcs	40012818 <CyU3PDeviceInit+0x360>
40012814:	e2499001 	sub	r9, r9, #1
40012818:	e1a09809 	lsl	r9, r9, #16
4001281c:	e59f00f8 	ldr	r0, [pc, #248]	; 4001291c <CyU3PDeviceInit+0x464>
40012820:	e1590000 	cmp	r9, r0
40012824:	9a000000 	bls	4001282c <CyU3PDeviceInit+0x374>
40012828:	e1a09000 	mov	r9, r0
4001282c:	e3a00064 	mov	r0, #100	; 0x64
40012830:	eb000359 	bl	4001359c <CyU3PBusyWait>
40012834:	e59f00dc 	ldr	r0, [pc, #220]	; 40012918 <CyU3PDeviceInit+0x460>
40012838:	e5905014 	ldr	r5, [r0, #20]
4001283c:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
40012840:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40012844:	e1805009 	orr	r5, r0, r9
40012848:	e3a00064 	mov	r0, #100	; 0x64
4001284c:	eb000352 	bl	4001359c <CyU3PBusyWait>
40012850:	e59f00c0 	ldr	r0, [pc, #192]	; 40012918 <CyU3PDeviceInit+0x460>
40012854:	e5805014 	str	r5, [r0, #20]
40012858:	e3a00064 	mov	r0, #100	; 0x64
4001285c:	eb00034e 	bl	4001359c <CyU3PBusyWait>
40012860:	e59f00b0 	ldr	r0, [pc, #176]	; 40012918 <CyU3PDeviceInit+0x460>
40012864:	e5900014 	ldr	r0, [r0, #20]
40012868:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001286c:	e59f10a4 	ldr	r1, [pc, #164]	; 40012918 <CyU3PDeviceInit+0x460>
40012870:	e5810014 	str	r0, [r1, #20]
40012874:	e3a00064 	mov	r0, #100	; 0x64
40012878:	eb000347 	bl	4001359c <CyU3PBusyWait>
4001287c:	e59f0094 	ldr	r0, [pc, #148]	; 40012918 <CyU3PDeviceInit+0x460>
40012880:	e5900000 	ldr	r0, [r0]
40012884:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012888:	e59f1088 	ldr	r1, [pc, #136]	; 40012918 <CyU3PDeviceInit+0x460>
4001288c:	e5810000 	str	r0, [r1]
40012890:	e3a00064 	mov	r0, #100	; 0x64
40012894:	eb000340 	bl	4001359c <CyU3PBusyWait>
40012898:	eb003dca 	bl	40021fc8 <CyU3PVicInit>
4001289c:	e10f0000 	mrs	r0, CPSR
400128a0:	e3c00080 	bic	r0, r0, #128	; 0x80
400128a4:	e121f000 	msr	CPSR_c, r0
400128a8:	e3570000 	cmp	r7, #0
400128ac:	0a000002 	beq	400128bc <CyU3PDeviceInit+0x404>
400128b0:	e3a01ffa 	mov	r1, #1000	; 0x3e8
400128b4:	e3a00001 	mov	r0, #1
400128b8:	eb000024 	bl	40012950 <CyU3PSysWatchDogConfigure>
400128bc:	e59f005c 	ldr	r0, [pc, #92]	; 40012920 <CyU3PDeviceInit+0x468>
400128c0:	e5900000 	ldr	r0, [r0]
400128c4:	e3500000 	cmp	r0, #0
400128c8:	0a000002 	beq	400128d8 <CyU3PDeviceInit+0x420>
400128cc:	e59f004c 	ldr	r0, [pc, #76]	; 40012920 <CyU3PDeviceInit+0x468>
400128d0:	e5900000 	ldr	r0, [r0]
400128d4:	eb000594 	bl	40013f2c <CyU3PLppRestoreState>
400128d8:	ebfffe7c 	bl	400122d0 <_etext>
400128dc:	e3a00000 	mov	r0, #0
400128e0:	eaffff03 	b	400124f4 <CyU3PDeviceInit+0x3c>
400128e4:	00001131 	.word	0x00001131
400128e8:	e0052000 	.word	0xe0052000
400128ec:	0124f800 	.word	0x0124f800
400128f0:	18085800 	.word	0x18085800
400128f4:	40030c6c 	.word	0x40030c6c
400128f8:	16e36000 	.word	0x16e36000
400128fc:	018cba80 	.word	0x018cba80
40012900:	00910700 	.word	0x00910700
40012904:	40030c74 	.word	0x40030c74
40012908:	0249f000 	.word	0x0249f000
4001290c:	00910608 	.word	0x00910608
40012910:	03197500 	.word	0x03197500
40012914:	00910580 	.word	0x00910580
40012918:	e0050000 	.word	0xe0050000
4001291c:	7fff0000 	.word	0x7fff0000
40012920:	40030ca8 	.word	0x40030ca8

Disassembly of section i.CyU3PSysSetupMMU:

40012924 <CyU3PSysSetupMMU>:
40012924:	e92d4010 	push	{r4, lr}
40012928:	eb000049 	bl	40012a54 <CyU3PSysBarrierSync>
4001292c:	ebfffdc2 	bl	4001203c <CyU3PSysClearDCache>
40012930:	eb000069 	bl	40012adc <CyU3PSysFlushICache>
40012934:	eb000049 	bl	40012a60 <CyU3PSysDisableCacheMMU>
40012938:	eb00006a 	bl	40012ae8 <CyU3PSysInitTCMs>
4001293c:	eb000041 	bl	40012a48 <CyU3PInitPageTable>
40012940:	eb000061 	bl	40012acc <CyU3PSysEnableMMU>
40012944:	eb00006c 	bl	40012afc <CyU3PSysLoadTLB>
40012948:	eb000041 	bl	40012a54 <CyU3PSysBarrierSync>
4001294c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

40012950 <CyU3PSysWatchDogConfigure>:
40012950:	e92d4070 	push	{r4, r5, r6, lr}
40012954:	e1a04000 	mov	r4, r0
40012958:	e1a05001 	mov	r5, r1
4001295c:	e59f00d8 	ldr	r0, [pc, #216]	; 40012a3c <CyU3PSysWatchDogConfigure+0xec>
40012960:	e5906014 	ldr	r6, [r0, #20]
40012964:	e3a00064 	mov	r0, #100	; 0x64
40012968:	eb00030b 	bl	4001359c <CyU3PBusyWait>
4001296c:	e3540000 	cmp	r4, #0
40012970:	0a000023 	beq	40012a04 <CyU3PSysWatchDogConfigure+0xb4>
40012974:	e2060003 	and	r0, r6, #3
40012978:	e3500003 	cmp	r0, #3
4001297c:	0a000004 	beq	40012994 <CyU3PSysWatchDogConfigure+0x44>
40012980:	e3860003 	orr	r0, r6, #3
40012984:	e59f10b0 	ldr	r1, [pc, #176]	; 40012a3c <CyU3PSysWatchDogConfigure+0xec>
40012988:	e5810014 	str	r0, [r1, #20]
4001298c:	e3a00064 	mov	r0, #100	; 0x64
40012990:	eb000301 	bl	4001359c <CyU3PBusyWait>
40012994:	e0850285 	add	r0, r5, r5, lsl #5
40012998:	e59f10a0 	ldr	r1, [pc, #160]	; 40012a40 <CyU3PSysWatchDogConfigure+0xf0>
4001299c:	e5810000 	str	r0, [r1]
400129a0:	e2810000 	add	r0, r1, #0
400129a4:	e5900000 	ldr	r0, [r0]
400129a8:	e1500005 	cmp	r0, r5
400129ac:	2a000001 	bcs	400129b8 <CyU3PSysWatchDogConfigure+0x68>
400129b0:	e3e00000 	mvn	r0, #0
400129b4:	e5810000 	str	r0, [r1]
400129b8:	e59f0080 	ldr	r0, [pc, #128]	; 40012a40 <CyU3PSysWatchDogConfigure+0xf0>
400129bc:	e5900000 	ldr	r0, [r0]
400129c0:	e59f1074 	ldr	r1, [pc, #116]	; 40012a3c <CyU3PSysWatchDogConfigure+0xec>
400129c4:	e5810018 	str	r0, [r1, #24]
400129c8:	e3a00064 	mov	r0, #100	; 0x64
400129cc:	eb0002f2 	bl	4001359c <CyU3PBusyWait>
400129d0:	e3c660fb 	bic	r6, r6, #251	; 0xfb
400129d4:	e38660fa 	orr	r6, r6, #250	; 0xfa
400129d8:	e59f005c 	ldr	r0, [pc, #92]	; 40012a3c <CyU3PSysWatchDogConfigure+0xec>
400129dc:	e5806014 	str	r6, [r0, #20]
400129e0:	e3a00064 	mov	r0, #100	; 0x64
400129e4:	eb0002ec 	bl	4001359c <CyU3PBusyWait>
400129e8:	e2060c03 	and	r0, r6, #768	; 0x300
400129ec:	e3500c03 	cmp	r0, #768	; 0x300
400129f0:	1a000010 	bne	40012a38 <CyU3PSysWatchDogConfigure+0xe8>
400129f4:	e59f0048 	ldr	r0, [pc, #72]	; 40012a44 <CyU3PSysWatchDogConfigure+0xf4>
400129f8:	e1d000b0 	ldrh	r0, [r0]
400129fc:	eb003d18 	bl	40021e64 <CyU3POsTimerInit>
40012a00:	ea00000c 	b	40012a38 <CyU3PSysWatchDogConfigure+0xe8>
40012a04:	e2060003 	and	r0, r6, #3
40012a08:	e3500003 	cmp	r0, #3
40012a0c:	0a000006 	beq	40012a2c <CyU3PSysWatchDogConfigure+0xdc>
40012a10:	e59f0024 	ldr	r0, [pc, #36]	; 40012a3c <CyU3PSysWatchDogConfigure+0xec>
40012a14:	e5900014 	ldr	r0, [r0, #20]
40012a18:	e3800003 	orr	r0, r0, #3
40012a1c:	e59f1018 	ldr	r1, [pc, #24]	; 40012a3c <CyU3PSysWatchDogConfigure+0xec>
40012a20:	e5810014 	str	r0, [r1, #20]
40012a24:	e3a00064 	mov	r0, #100	; 0x64
40012a28:	eb0002db 	bl	4001359c <CyU3PBusyWait>
40012a2c:	e3a00000 	mov	r0, #0
40012a30:	e59f1008 	ldr	r1, [pc, #8]	; 40012a40 <CyU3PSysWatchDogConfigure+0xf0>
40012a34:	e5810000 	str	r0, [r1]
40012a38:	e8bd8070 	pop	{r4, r5, r6, pc}
40012a3c:	e0050000 	.word	0xe0050000
40012a40:	40030c70 	.word	0x40030c70
40012a44:	40030dd4 	.word	0x40030dd4

Disassembly of section i.CyU3PInitPageTable:

40012a48 <CyU3PInitPageTable>:
40012a48:	e92d4010 	push	{r4, lr}
40012a4c:	eb0007ad 	bl	40014908 <CyFx3DevInitPageTables>
40012a50:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012a54 <CyU3PSysBarrierSync>:
40012a54:	e3a00000 	mov	r0, #0
40012a58:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012a5c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012a60 <CyU3PSysDisableCacheMMU>:
40012a60:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a64:	e59f2018 	ldr	r2, [pc, #24]	; 40012a84 <CyU3PSysDisableCacheMMU+0x24>
40012a68:	e1c00002 	bic	r0, r0, r2
40012a6c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a70:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012a74:	e3e01801 	mvn	r1, #65536	; 0x10000
40012a78:	e0000001 	and	r0, r0, r1
40012a7c:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012a80:	e12fff1e 	bx	lr
40012a84:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012a88 <CyU3PSysDisableDCache>:
40012a88:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a8c:	e3c00004 	bic	r0, r0, #4
40012a90:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a94:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012a98 <CyU3PSysDisableICache>:
40012a98:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a9c:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012aa0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012aa4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012aa8 <CyU3PSysEnableDCache>:
40012aa8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012aac:	e3800004 	orr	r0, r0, #4
40012ab0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012ab4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012ab8 <CyU3PSysEnableICache>:
40012ab8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012abc:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012ac0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012ac4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012ac8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012acc <CyU3PSysEnableMMU>:
40012acc:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012ad0:	e3800001 	orr	r0, r0, #1
40012ad4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012ad8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012adc <CyU3PSysFlushICache>:
40012adc:	e3a00000 	mov	r0, #0
40012ae0:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012ae4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012ae8 <CyU3PSysInitTCMs>:
40012ae8:	e3a00015 	mov	r0, #21
40012aec:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012af0:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012af4:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012af8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012afc <CyU3PSysLoadTLB>:
40012afc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012b00:	e3a00000 	mov	r0, #0
40012b04:	eb00000b 	bl	40012b38 <CyU3PSysLockTLBEntry>
40012b08:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012b0c:	eb000009 	bl	40012b38 <CyU3PSysLockTLBEntry>
40012b10:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012b14:	eb000007 	bl	40012b38 <CyU3PSysLockTLBEntry>
40012b18:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012b1c:	eb000005 	bl	40012b38 <CyU3PSysLockTLBEntry>
40012b20:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012b24:	eb000003 	bl	40012b38 <CyU3PSysLockTLBEntry>
40012b28:	e59f0004 	ldr	r0, [pc, #4]	; 40012b34 <CyU3PSysLoadTLB+0x38>
40012b2c:	eb000001 	bl	40012b38 <CyU3PSysLockTLBEntry>
40012b30:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012b34:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012b38 <CyU3PSysLockTLBEntry>:
40012b38:	e3a01000 	mov	r1, #0
40012b3c:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012b40:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012b44:	e3811001 	orr	r1, r1, #1
40012b48:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012b4c:	e5900000 	ldr	r0, [r0]
40012b50:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012b54:	e3c11001 	bic	r1, r1, #1
40012b58:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012b5c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012b60 <CyU3PDeviceConfigureIOMatrix>:
40012b60:	e92d4010 	push	{r4, lr}
40012b64:	e1a04000 	mov	r4, r0
40012b68:	e3540000 	cmp	r4, #0
40012b6c:	1a000001 	bne	40012b78 <CyU3PDeviceConfigureIOMatrix+0x18>
40012b70:	e3a00041 	mov	r0, #65	; 0x41
40012b74:	e8bd8010 	pop	{r4, pc}
40012b78:	e1a00004 	mov	r0, r4
40012b7c:	eb0005fd 	bl	40014378 <CyFx3DevIOConfigure>
40012b80:	e3500000 	cmp	r0, #0
40012b84:	1a000001 	bne	40012b90 <CyU3PDeviceConfigureIOMatrix+0x30>
40012b88:	e3a00040 	mov	r0, #64	; 0x40
40012b8c:	eafffff8 	b	40012b74 <CyU3PDeviceConfigureIOMatrix+0x14>
40012b90:	e3a00000 	mov	r0, #0
40012b94:	eafffff6 	b	40012b74 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012b98 <CyU3PDeviceGpioOverride>:
40012b98:	e92d4070 	push	{r4, r5, r6, lr}
40012b9c:	e1a04000 	mov	r4, r0
40012ba0:	e1a05001 	mov	r5, r1
40012ba4:	e354003d 	cmp	r4, #61	; 0x3d
40012ba8:	ba000001 	blt	40012bb4 <CyU3PDeviceGpioOverride+0x1c>
40012bac:	e3a00040 	mov	r0, #64	; 0x40
40012bb0:	e8bd8070 	pop	{r4, r5, r6, pc}
40012bb4:	e1a02005 	mov	r2, r5
40012bb8:	e3a01001 	mov	r1, #1
40012bbc:	e1a00004 	mov	r0, r4
40012bc0:	eb00066c 	bl	40014578 <CyFx3DevIOSelectGpio>
40012bc4:	e3a00000 	mov	r0, #0
40012bc8:	eafffff8 	b	40012bb0 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012bcc <CyU3PIsGpioComplexIOConfigured>:
40012bcc:	e92d4010 	push	{r4, lr}
40012bd0:	e1a04000 	mov	r4, r0
40012bd4:	e3a01000 	mov	r1, #0
40012bd8:	e1a00004 	mov	r0, r4
40012bdc:	eb000645 	bl	400144f8 <CyFx3DevIOIsGpio>
40012be0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012be4 <CyU3PIsGpioSimpleIOConfigured>:
40012be4:	e92d4010 	push	{r4, lr}
40012be8:	e1a04000 	mov	r4, r0
40012bec:	e3a01001 	mov	r1, #1
40012bf0:	e1a00004 	mov	r0, r4
40012bf4:	eb00063f 	bl	400144f8 <CyFx3DevIOIsGpio>
40012bf8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012bfc <CyU3PIsGpioValid>:
40012bfc:	e1a01000 	mov	r1, r0
40012c00:	e351003d 	cmp	r1, #61	; 0x3d
40012c04:	aa000001 	bge	40012c10 <CyU3PIsGpioValid+0x14>
40012c08:	e3a00001 	mov	r0, #1
40012c0c:	e12fff1e 	bx	lr
40012c10:	e3a00000 	mov	r0, #0
40012c14:	eafffffc 	b	40012c0c <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012c18 <CyU3PIsLppIOConfigured>:
40012c18:	e92d4070 	push	{r4, r5, r6, lr}
40012c1c:	e1a04000 	mov	r4, r0
40012c20:	e3a05000 	mov	r5, #0
40012c24:	e3540000 	cmp	r4, #0
40012c28:	0a00000a 	beq	40012c58 <CyU3PIsLppIOConfigured+0x40>
40012c2c:	e3540001 	cmp	r4, #1
40012c30:	0a000004 	beq	40012c48 <CyU3PIsLppIOConfigured+0x30>
40012c34:	e3540002 	cmp	r4, #2
40012c38:	0a00000e 	beq	40012c78 <CyU3PIsLppIOConfigured+0x60>
40012c3c:	e3540003 	cmp	r4, #3
40012c40:	1a000010 	bne	40012c88 <CyU3PIsLppIOConfigured+0x70>
40012c44:	ea000007 	b	40012c68 <CyU3PIsLppIOConfigured+0x50>
40012c48:	e1a00000 	nop			; (mov r0, r0)
40012c4c:	eb00063d 	bl	40014548 <CyFx3DevIOIsI2sConfigured>
40012c50:	e1a05000 	mov	r5, r0
40012c54:	ea00000d 	b	40012c90 <CyU3PIsLppIOConfigured+0x78>
40012c58:	e1a00000 	nop			; (mov r0, r0)
40012c5c:	eb000635 	bl	40014538 <CyFx3DevIOIsI2cConfigured>
40012c60:	e1a05000 	mov	r5, r0
40012c64:	ea000009 	b	40012c90 <CyU3PIsLppIOConfigured+0x78>
40012c68:	e1a00000 	nop			; (mov r0, r0)
40012c6c:	eb00063d 	bl	40014568 <CyFx3DevIOIsUartConfigured>
40012c70:	e1a05000 	mov	r5, r0
40012c74:	ea000005 	b	40012c90 <CyU3PIsLppIOConfigured+0x78>
40012c78:	e1a00000 	nop			; (mov r0, r0)
40012c7c:	eb000635 	bl	40014558 <CyFx3DevIOIsSpiConfigured>
40012c80:	e1a05000 	mov	r5, r0
40012c84:	ea000001 	b	40012c90 <CyU3PIsLppIOConfigured+0x78>
40012c88:	e1a00000 	nop			; (mov r0, r0)
40012c8c:	e1a00000 	nop			; (mov r0, r0)
40012c90:	e1a00000 	nop			; (mov r0, r0)
40012c94:	e1a00005 	mov	r0, r5
40012c98:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012c9c <CyU3PDebugApplicationDefine>:
40012c9c:	e92d4010 	push	{r4, lr}
40012ca0:	e24dd020 	sub	sp, sp, #32
40012ca4:	e3a00000 	mov	r0, #0
40012ca8:	e59f109c 	ldr	r1, [pc, #156]	; 40012d4c <CyU3PDebugApplicationDefine+0xb0>
40012cac:	e5810000 	str	r0, [r1]
40012cb0:	e3a00001 	mov	r0, #1
40012cb4:	e2811008 	add	r1, r1, #8
40012cb8:	e5810000 	str	r0, [r1]
40012cbc:	e3a00c02 	mov	r0, #512	; 0x200
40012cc0:	ebffc26b 	bl	40003674 <CyU3PMemAlloc>
40012cc4:	e1a04000 	mov	r4, r0
40012cc8:	e3a030a8 	mov	r3, #168	; 0xa8
40012ccc:	e3a02001 	mov	r2, #1
40012cd0:	e3a01000 	mov	r1, #0
40012cd4:	e3a00006 	mov	r0, #6
40012cd8:	e28dc00c 	add	ip, sp, #12
40012cdc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012ce0:	e3a02c02 	mov	r2, #512	; 0x200
40012ce4:	e1a03001 	mov	r3, r1
40012ce8:	e58d2004 	str	r2, [sp, #4]
40012cec:	e59f205c 	ldr	r2, [pc, #92]	; 40012d50 <CyU3PDebugApplicationDefine+0xb4>
40012cf0:	e28f105c 	add	r1, pc, #92	; 0x5c
40012cf4:	e58d0008 	str	r0, [sp, #8]
40012cf8:	e59f0064 	ldr	r0, [pc, #100]	; 40012d64 <CyU3PDebugApplicationDefine+0xc8>
40012cfc:	e58d4000 	str	r4, [sp]
40012d00:	ebffde4a 	bl	4000a630 <_txe_thread_create>
40012d04:	e3a00084 	mov	r0, #132	; 0x84
40012d08:	ebffc259 	bl	40003674 <CyU3PMemAlloc>
40012d0c:	e1a04000 	mov	r4, r0
40012d10:	e3a0303c 	mov	r3, #60	; 0x3c
40012d14:	e3a02084 	mov	r2, #132	; 0x84
40012d18:	e1cd20f0 	strd	r2, [sp]
40012d1c:	e1a03004 	mov	r3, r4
40012d20:	e3a02003 	mov	r2, #3
40012d24:	e3a01000 	mov	r1, #0
40012d28:	e59f0038 	ldr	r0, [pc, #56]	; 40012d68 <CyU3PDebugApplicationDefine+0xcc>
40012d2c:	ebffdd59 	bl	4000a298 <_txe_queue_create>
40012d30:	e3a03038 	mov	r3, #56	; 0x38
40012d34:	e3a02000 	mov	r2, #0
40012d38:	e1a01002 	mov	r1, r2
40012d3c:	e59f0028 	ldr	r0, [pc, #40]	; 40012d6c <CyU3PDebugApplicationDefine+0xd0>
40012d40:	ebffdc79 	bl	40009f2c <_txe_mutex_create>
40012d44:	e28dd020 	add	sp, sp, #32
40012d48:	e8bd8010 	pop	{r4, pc}
40012d4c:	40030c8c 	.word	0x40030c8c
40012d50:	4001320c 	.word	0x4001320c
40012d54:	75626544 	.word	0x75626544
40012d58:	68542067 	.word	0x68542067
40012d5c:	64616572 	.word	0x64616572
40012d60:	00000000 	.word	0x00000000
40012d64:	40031234 	.word	0x40031234
40012d68:	400312dc 	.word	0x400312dc
40012d6c:	40031318 	.word	0x40031318

Disassembly of section i.CyU3PDebugChannelReset:

40012d70 <CyU3PDebugChannelReset>:
40012d70:	e92d4010 	push	{r4, lr}
40012d74:	e59f0034 	ldr	r0, [pc, #52]	; 40012db0 <CyU3PDebugChannelReset+0x40>
40012d78:	eb000d41 	bl	40016284 <CyU3PDmaChannelReset>
40012d7c:	e3a01000 	mov	r1, #0
40012d80:	e59f0028 	ldr	r0, [pc, #40]	; 40012db0 <CyU3PDebugChannelReset+0x40>
40012d84:	eb000ddf 	bl	40016508 <CyU3PDmaChannelSetXfer>
40012d88:	e1a04000 	mov	r4, r0
40012d8c:	e3540000 	cmp	r4, #0
40012d90:	1a000004 	bne	40012da8 <CyU3PDebugChannelReset+0x38>
40012d94:	e3e02000 	mvn	r2, #0
40012d98:	e59f1014 	ldr	r1, [pc, #20]	; 40012db4 <CyU3PDebugChannelReset+0x44>
40012d9c:	e281000c 	add	r0, r1, #12
40012da0:	eb000c6a 	bl	40015f50 <CyU3PDmaChannelGetBuffer>
40012da4:	e1a04000 	mov	r4, r0
40012da8:	e1a00004 	mov	r0, r4
40012dac:	e8bd8010 	pop	{r4, pc}
40012db0:	4003135c 	.word	0x4003135c
40012db4:	40031350 	.word	0x40031350

Disassembly of section i.CyU3PDebugInit:

40012db8 <CyU3PDebugInit>:
40012db8:	e92d4070 	push	{r4, r5, r6, lr}
40012dbc:	e24dd020 	sub	sp, sp, #32
40012dc0:	e1a04000 	mov	r4, r0
40012dc4:	e1a06001 	mov	r6, r1
40012dc8:	e59f0150 	ldr	r0, [pc, #336]	; 40012f20 <CyU3PDebugInit+0x168>
40012dcc:	e5900000 	ldr	r0, [r0]
40012dd0:	e3500000 	cmp	r0, #0
40012dd4:	1a000003 	bne	40012de8 <CyU3PDebugInit+0x30>
40012dd8:	e59f0144 	ldr	r0, [pc, #324]	; 40012f24 <CyU3PDebugInit+0x16c>
40012ddc:	e5900000 	ldr	r0, [r0]
40012de0:	e3500000 	cmp	r0, #0
40012de4:	0a000002 	beq	40012df4 <CyU3PDebugInit+0x3c>
40012de8:	e3a00043 	mov	r0, #67	; 0x43
40012dec:	e28dd020 	add	sp, sp, #32
40012df0:	e8bd8070 	pop	{r4, r5, r6, pc}
40012df4:	e1a00004 	mov	r0, r4
40012df8:	eb0007b3 	bl	40014ccc <CyU3PDmaSocketIsValidConsumer>
40012dfc:	e1a05000 	mov	r5, r0
40012e00:	e3550000 	cmp	r5, #0
40012e04:	1a000001 	bne	40012e10 <CyU3PDebugInit+0x58>
40012e08:	e3a00040 	mov	r0, #64	; 0x40
40012e0c:	eafffff6 	b	40012dec <CyU3PDebugInit+0x34>
40012e10:	e3e01000 	mvn	r1, #0
40012e14:	e59f010c 	ldr	r0, [pc, #268]	; 40012f28 <CyU3PDebugInit+0x170>
40012e18:	ebffdcc1 	bl	4000a124 <_txe_mutex_get>
40012e1c:	e3a00c01 	mov	r0, #256	; 0x100
40012e20:	e1cd00b4 	strh	r0, [sp, #4]
40012e24:	e3a00008 	mov	r0, #8
40012e28:	e1cd00b6 	strh	r0, [sp, #6]
40012e2c:	e3a00000 	mov	r0, #0
40012e30:	e1cd00bc 	strh	r0, [sp, #12]
40012e34:	e59f00f0 	ldr	r0, [pc, #240]	; 40012f2c <CyU3PDebugInit+0x174>
40012e38:	e1cd00b8 	strh	r0, [sp, #8]
40012e3c:	e1cd40ba 	strh	r4, [sp, #10]
40012e40:	e3a00000 	mov	r0, #0
40012e44:	e5cd0014 	strb	r0, [sp, #20]
40012e48:	e1cd00be 	strh	r0, [sp, #14]
40012e4c:	e1cd01b0 	strh	r0, [sp, #16]
40012e50:	e1cd01b2 	strh	r0, [sp, #18]
40012e54:	e58d001c 	str	r0, [sp, #28]
40012e58:	e28d2004 	add	r2, sp, #4
40012e5c:	e3a01004 	mov	r1, #4
40012e60:	e59f00c8 	ldr	r0, [pc, #200]	; 40012f30 <CyU3PDebugInit+0x178>
40012e64:	eb000a71 	bl	40015830 <CyU3PDmaChannelCreate>
40012e68:	e1a05000 	mov	r5, r0
40012e6c:	e3550000 	cmp	r5, #0
40012e70:	1a000007 	bne	40012e94 <CyU3PDebugInit+0xdc>
40012e74:	e59f00b8 	ldr	r0, [pc, #184]	; 40012f34 <CyU3PDebugInit+0x17c>
40012e78:	e5900000 	ldr	r0, [r0]
40012e7c:	e3500000 	cmp	r0, #0
40012e80:	0a000003 	beq	40012e94 <CyU3PDebugInit+0xdc>
40012e84:	e3a01001 	mov	r1, #1
40012e88:	e59f00a0 	ldr	r0, [pc, #160]	; 40012f30 <CyU3PDebugInit+0x178>
40012e8c:	eb0008d7 	bl	400151f0 <CyU3PDmaChannelCacheControl>
40012e90:	e1a05000 	mov	r5, r0
40012e94:	e3550000 	cmp	r5, #0
40012e98:	1a000003 	bne	40012eac <CyU3PDebugInit+0xf4>
40012e9c:	e3a01000 	mov	r1, #0
40012ea0:	e59f0088 	ldr	r0, [pc, #136]	; 40012f30 <CyU3PDebugInit+0x178>
40012ea4:	eb000d97 	bl	40016508 <CyU3PDmaChannelSetXfer>
40012ea8:	e1a05000 	mov	r5, r0
40012eac:	e3550000 	cmp	r5, #0
40012eb0:	1a000004 	bne	40012ec8 <CyU3PDebugInit+0x110>
40012eb4:	e3e02000 	mvn	r2, #0
40012eb8:	e59f1078 	ldr	r1, [pc, #120]	; 40012f38 <CyU3PDebugInit+0x180>
40012ebc:	e281000c 	add	r0, r1, #12
40012ec0:	eb000c22 	bl	40015f50 <CyU3PDmaChannelGetBuffer>
40012ec4:	e1a05000 	mov	r5, r0
40012ec8:	e3550000 	cmp	r5, #0
40012ecc:	0a000005 	beq	40012ee8 <CyU3PDebugInit+0x130>
40012ed0:	e59f0058 	ldr	r0, [pc, #88]	; 40012f30 <CyU3PDebugInit+0x178>
40012ed4:	eb000b4f 	bl	40015c18 <CyU3PDmaChannelDestroy>
40012ed8:	e59f0048 	ldr	r0, [pc, #72]	; 40012f28 <CyU3PDebugInit+0x170>
40012edc:	ebffdcc5 	bl	4000a1f8 <_txe_mutex_put>
40012ee0:	e1a00005 	mov	r0, r5
40012ee4:	eaffffc0 	b	40012dec <CyU3PDebugInit+0x34>
40012ee8:	e3a00000 	mov	r0, #0
40012eec:	e59f1048 	ldr	r1, [pc, #72]	; 40012f3c <CyU3PDebugInit+0x184>
40012ef0:	e1c100b0 	strh	r0, [r1]
40012ef4:	e59f1044 	ldr	r1, [pc, #68]	; 40012f40 <CyU3PDebugInit+0x188>
40012ef8:	e1c100b0 	strh	r0, [r1]
40012efc:	e59f0040 	ldr	r0, [pc, #64]	; 40012f44 <CyU3PDebugInit+0x18c>
40012f00:	e5c06000 	strb	r6, [r0]
40012f04:	e3a00001 	mov	r0, #1
40012f08:	e2411010 	sub	r1, r1, #16
40012f0c:	e5810000 	str	r0, [r1]
40012f10:	e59f0010 	ldr	r0, [pc, #16]	; 40012f28 <CyU3PDebugInit+0x170>
40012f14:	ebffdcb7 	bl	4000a1f8 <_txe_mutex_put>
40012f18:	e1a00005 	mov	r0, r5
40012f1c:	eaffffb2 	b	40012dec <CyU3PDebugInit+0x34>
40012f20:	40030c8c 	.word	0x40030c8c
40012f24:	40030c90 	.word	0x40030c90
40012f28:	40031318 	.word	0x40031318
40012f2c:	00003f01 	.word	0x00003f01
40012f30:	4003135c 	.word	0x4003135c
40012f34:	40030c7c 	.word	0x40030c7c
40012f38:	40031350 	.word	0x40031350
40012f3c:	40030c9a 	.word	0x40030c9a
40012f40:	40030c9c 	.word	0x40030c9c
40012f44:	40030c98 	.word	0x40030c98

Disassembly of section i.CyU3PDebugIntToStr:

40012f48 <CyU3PDebugIntToStr>:
40012f48:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012f4c:	e1a04000 	mov	r4, r0
40012f50:	e1a05001 	mov	r5, r1
40012f54:	e1a08002 	mov	r8, r2
40012f58:	e3a0600a 	mov	r6, #10
40012f5c:	e1a07004 	mov	r7, r4
40012f60:	e3a00000 	mov	r0, #0
40012f64:	e1a04007 	mov	r4, r7
40012f68:	e7c70006 	strb	r0, [r7, r6]
40012f6c:	e1a00000 	nop			; (mov r0, r0)
40012f70:	e1a01008 	mov	r1, r8
40012f74:	e1a00005 	mov	r0, r5
40012f78:	ebfff6c5 	bl	40010a94 <__aeabi_uidivmod>
40012f7c:	e28f0030 	add	r0, pc, #48	; 0x30
40012f80:	e7d00001 	ldrb	r0, [r0, r1]
40012f84:	e2461001 	sub	r1, r6, #1
40012f88:	e20110ff 	and	r1, r1, #255	; 0xff
40012f8c:	e1a06001 	mov	r6, r1
40012f90:	e7c70001 	strb	r0, [r7, r1]
40012f94:	e1a01008 	mov	r1, r8
40012f98:	e1a00005 	mov	r0, r5
40012f9c:	ebfff6bc 	bl	40010a94 <__aeabi_uidivmod>
40012fa0:	e1a05000 	mov	r5, r0
40012fa4:	e3550000 	cmp	r5, #0
40012fa8:	1afffff0 	bne	40012f70 <CyU3PDebugIntToStr+0x28>
40012fac:	e0870006 	add	r0, r7, r6
40012fb0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40012fb4:	33323130 	.word	0x33323130
40012fb8:	37363534 	.word	0x37363534
40012fbc:	42413938 	.word	0x42413938
40012fc0:	46454443 	.word	0x46454443
40012fc4:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40012fc8 <CyU3PDebugPreamble>:
40012fc8:	e59f1004 	ldr	r1, [pc, #4]	; 40012fd4 <CyU3PDebugPreamble+0xc>
40012fcc:	e5810000 	str	r0, [r1]
40012fd0:	e12fff1e 	bx	lr
40012fd4:	40030c94 	.word	0x40030c94

Disassembly of section i.CyU3PDebugPrint:

40012fd8 <CyU3PDebugPrint>:
40012fd8:	e92d000f 	push	{r0, r1, r2, r3}
40012fdc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012fe0:	e24dd028 	sub	sp, sp, #40	; 0x28
40012fe4:	e1a04000 	mov	r4, r0
40012fe8:	e59f0200 	ldr	r0, [pc, #512]	; 400131f0 <CyU3PDebugPrint+0x218>
40012fec:	e5900000 	ldr	r0, [r0]
40012ff0:	e3500000 	cmp	r0, #0
40012ff4:	1a000003 	bne	40013008 <CyU3PDebugPrint+0x30>
40012ff8:	e3a00042 	mov	r0, #66	; 0x42
40012ffc:	e28dd028 	add	sp, sp, #40	; 0x28
40013000:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40013004:	e49df014 	ldr	pc, [sp], #20
40013008:	e59f01e4 	ldr	r0, [pc, #484]	; 400131f4 <CyU3PDebugPrint+0x21c>
4001300c:	e5d00000 	ldrb	r0, [r0]
40013010:	e1540000 	cmp	r4, r0
40013014:	da000001 	ble	40013020 <CyU3PDebugPrint+0x48>
40013018:	e3a00000 	mov	r0, #0
4001301c:	eafffff6 	b	40012ffc <CyU3PDebugPrint+0x24>
40013020:	ebffd62a 	bl	400088d0 <_tx_thread_identify>
40013024:	e1a05000 	mov	r5, r0
40013028:	e3550000 	cmp	r5, #0
4001302c:	1a000001 	bne	40013038 <CyU3PDebugPrint+0x60>
40013030:	e3a00013 	mov	r0, #19
40013034:	eafffff0 	b	40012ffc <CyU3PDebugPrint+0x24>
40013038:	e3a03000 	mov	r3, #0
4001303c:	e58d3004 	str	r3, [sp, #4]
40013040:	e58d3008 	str	r3, [sp, #8]
40013044:	e58d300c 	str	r3, [sp, #12]
40013048:	e58d3010 	str	r3, [sp, #16]
4001304c:	e58d3000 	str	r3, [sp]
40013050:	e1a02003 	mov	r2, r3
40013054:	e28d1018 	add	r1, sp, #24
40013058:	e1a00005 	mov	r0, r5
4001305c:	ebffde0c 	bl	4000a894 <_txe_thread_info_get>
40013060:	e59d0018 	ldr	r0, [sp, #24]
40013064:	e5d00001 	ldrb	r0, [r0, #1]
40013068:	e2400030 	sub	r0, r0, #48	; 0x30
4001306c:	e59d1018 	ldr	r1, [sp, #24]
40013070:	e5d11000 	ldrb	r1, [r1]
40013074:	e2411030 	sub	r1, r1, #48	; 0x30
40013078:	e3a0200a 	mov	r2, #10
4001307c:	e1000182 	smlabb	r0, r2, r1, r0
40013080:	e20080ff 	and	r8, r0, #255	; 0xff
40013084:	e3e01000 	mvn	r1, #0
40013088:	e59f0168 	ldr	r0, [pc, #360]	; 400131f8 <CyU3PDebugPrint+0x220>
4001308c:	ebffdc24 	bl	4000a124 <_txe_mutex_get>
40013090:	e59f0164 	ldr	r0, [pc, #356]	; 400131fc <CyU3PDebugPrint+0x224>
40013094:	e1d000b0 	ldrh	r0, [r0]
40013098:	e3500000 	cmp	r0, #0
4001309c:	0a000011 	beq	400130e8 <CyU3PDebugPrint+0x110>
400130a0:	e3a02000 	mov	r2, #0
400130a4:	e3a01c01 	mov	r1, #256	; 0x100
400130a8:	e59f0150 	ldr	r0, [pc, #336]	; 40013200 <CyU3PDebugPrint+0x228>
400130ac:	eb000864 	bl	40015244 <CyU3PDmaChannelCommitBuffer>
400130b0:	e1a06000 	mov	r6, r0
400130b4:	e3560000 	cmp	r6, #0
400130b8:	1a000004 	bne	400130d0 <CyU3PDebugPrint+0xf8>
400130bc:	e3e02000 	mvn	r2, #0
400130c0:	e59f113c 	ldr	r1, [pc, #316]	; 40013204 <CyU3PDebugPrint+0x22c>
400130c4:	e281000c 	add	r0, r1, #12
400130c8:	eb000ba0 	bl	40015f50 <CyU3PDmaChannelGetBuffer>
400130cc:	e1a06000 	mov	r6, r0
400130d0:	e3560000 	cmp	r6, #0
400130d4:	0a000000 	beq	400130dc <CyU3PDebugPrint+0x104>
400130d8:	ebffff24 	bl	40012d70 <CyU3PDebugChannelReset>
400130dc:	e3a00000 	mov	r0, #0
400130e0:	e59f1114 	ldr	r1, [pc, #276]	; 400131fc <CyU3PDebugPrint+0x224>
400130e4:	e1c100b0 	strh	r0, [r1]
400130e8:	e59f0114 	ldr	r0, [pc, #276]	; 40013204 <CyU3PDebugPrint+0x22c>
400130ec:	e5907000 	ldr	r7, [r0]
400130f0:	e3a00c01 	mov	r0, #256	; 0x100
400130f4:	e58d0014 	str	r0, [sp, #20]
400130f8:	e59f0108 	ldr	r0, [pc, #264]	; 40013208 <CyU3PDebugPrint+0x230>
400130fc:	e5900000 	ldr	r0, [r0]
40013100:	e3500000 	cmp	r0, #0
40013104:	0a000005 	beq	40013120 <CyU3PDebugPrint+0x148>
40013108:	e2877008 	add	r7, r7, #8
4001310c:	e1dd01b4 	ldrh	r0, [sp, #20]
40013110:	e2400008 	sub	r0, r0, #8
40013114:	e1a00800 	lsl	r0, r0, #16
40013118:	e1a00820 	lsr	r0, r0, #16
4001311c:	e58d0014 	str	r0, [sp, #20]
40013120:	e28d0048 	add	r0, sp, #72	; 0x48
40013124:	e58d001c 	str	r0, [sp, #28]
40013128:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
4001312c:	e59d301c 	ldr	r3, [sp, #28]
40013130:	e28d1014 	add	r1, sp, #20
40013134:	e1a00007 	mov	r0, r7
40013138:	eb000071 	bl	40013304 <MyDebugSNPrint>
4001313c:	e1a06000 	mov	r6, r0
40013140:	e59f00c0 	ldr	r0, [pc, #192]	; 40013208 <CyU3PDebugPrint+0x230>
40013144:	e5900000 	ldr	r0, [r0]
40013148:	e3500000 	cmp	r0, #0
4001314c:	0a00000f 	beq	40013190 <CyU3PDebugPrint+0x1b8>
40013150:	e59f00ac 	ldr	r0, [pc, #172]	; 40013204 <CyU3PDebugPrint+0x22c>
40013154:	e5907000 	ldr	r7, [r0]
40013158:	e5cd4020 	strb	r4, [sp, #32]
4001315c:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40013160:	e3e00000 	mvn	r0, #0
40013164:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
40013168:	e1dd01b4 	ldrh	r0, [sp, #20]
4001316c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013170:	e3a02008 	mov	r2, #8
40013174:	e28d1020 	add	r1, sp, #32
40013178:	e1a00007 	mov	r0, r7
4001317c:	ebffc1d4 	bl	400038d4 <CyU3PMemCopy>
40013180:	e1dd01b4 	ldrh	r0, [sp, #20]
40013184:	e2800008 	add	r0, r0, #8
40013188:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001318c:	e58d0014 	str	r0, [sp, #20]
40013190:	e3a02000 	mov	r2, #0
40013194:	e1dd11b4 	ldrh	r1, [sp, #20]
40013198:	e59f0060 	ldr	r0, [pc, #96]	; 40013200 <CyU3PDebugPrint+0x228>
4001319c:	eb000828 	bl	40015244 <CyU3PDmaChannelCommitBuffer>
400131a0:	e1a06000 	mov	r6, r0
400131a4:	e3560000 	cmp	r6, #0
400131a8:	1a000004 	bne	400131c0 <CyU3PDebugPrint+0x1e8>
400131ac:	e3e02000 	mvn	r2, #0
400131b0:	e59f104c 	ldr	r1, [pc, #76]	; 40013204 <CyU3PDebugPrint+0x22c>
400131b4:	e281000c 	add	r0, r1, #12
400131b8:	eb000b64 	bl	40015f50 <CyU3PDmaChannelGetBuffer>
400131bc:	e1a06000 	mov	r6, r0
400131c0:	e3560000 	cmp	r6, #0
400131c4:	0a000002 	beq	400131d4 <CyU3PDebugPrint+0x1fc>
400131c8:	ebfffee8 	bl	40012d70 <CyU3PDebugChannelReset>
400131cc:	e1a00006 	mov	r0, r6
400131d0:	eaffff89 	b	40012ffc <CyU3PDebugPrint+0x24>
400131d4:	e3a00000 	mov	r0, #0
400131d8:	e59f101c 	ldr	r1, [pc, #28]	; 400131fc <CyU3PDebugPrint+0x224>
400131dc:	e1c100b0 	strh	r0, [r1]
400131e0:	e59f0010 	ldr	r0, [pc, #16]	; 400131f8 <CyU3PDebugPrint+0x220>
400131e4:	ebffdc03 	bl	4000a1f8 <_txe_mutex_put>
400131e8:	e3a00000 	mov	r0, #0
400131ec:	eaffff82 	b	40012ffc <CyU3PDebugPrint+0x24>
400131f0:	40030c8c 	.word	0x40030c8c
400131f4:	40030c98 	.word	0x40030c98
400131f8:	40031318 	.word	0x40031318
400131fc:	40030c9c 	.word	0x40030c9c
40013200:	4003135c 	.word	0x4003135c
40013204:	40031350 	.word	0x40031350
40013208:	40030c94 	.word	0x40030c94

Disassembly of section i.CyU3PDebugThreadEntry:

4001320c <CyU3PDebugThreadEntry>:
4001320c:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
40013210:	e1a06000 	mov	r6, r0
40013214:	e3a05000 	mov	r5, #0
40013218:	e1a00000 	nop			; (mov r0, r0)
4001321c:	e3e02000 	mvn	r2, #0
40013220:	e1a0100d 	mov	r1, sp
40013224:	e59f00c4 	ldr	r0, [pc, #196]	; 400132f0 <CyU3PDebugThreadEntry+0xe4>
40013228:	ebffdcb0 	bl	4000a4f0 <_txe_queue_receive>
4001322c:	e1a04000 	mov	r4, r0
40013230:	e3540000 	cmp	r4, #0
40013234:	1afffff8 	bne	4001321c <CyU3PDebugThreadEntry+0x10>
40013238:	e3e01000 	mvn	r1, #0
4001323c:	e59f00b0 	ldr	r0, [pc, #176]	; 400132f4 <CyU3PDebugThreadEntry+0xe8>
40013240:	ebffdbb7 	bl	4000a124 <_txe_mutex_get>
40013244:	e59f00ac 	ldr	r0, [pc, #172]	; 400132f8 <CyU3PDebugThreadEntry+0xec>
40013248:	e1d000b0 	ldrh	r0, [r0]
4001324c:	e3500c01 	cmp	r0, #256	; 0x100
40013250:	0a000007 	beq	40013274 <CyU3PDebugThreadEntry+0x68>
40013254:	e59f10a0 	ldr	r1, [pc, #160]	; 400132fc <CyU3PDebugThreadEntry+0xf0>
40013258:	e5911000 	ldr	r1, [r1]
4001325c:	e59f2094 	ldr	r2, [pc, #148]	; 400132f8 <CyU3PDebugThreadEntry+0xec>
40013260:	e1d220b0 	ldrh	r2, [r2]
40013264:	e0810002 	add	r0, r1, r2
40013268:	e3a02008 	mov	r2, #8
4001326c:	e1a0100d 	mov	r1, sp
40013270:	ebffc197 	bl	400038d4 <CyU3PMemCopy>
40013274:	e59f007c 	ldr	r0, [pc, #124]	; 400132f8 <CyU3PDebugThreadEntry+0xec>
40013278:	e1d000b0 	ldrh	r0, [r0]
4001327c:	e35000f8 	cmp	r0, #248	; 0xf8
40013280:	1a000015 	bne	400132dc <CyU3PDebugThreadEntry+0xd0>
40013284:	e3a02000 	mov	r2, #0
40013288:	e3a01c01 	mov	r1, #256	; 0x100
4001328c:	e59f006c 	ldr	r0, [pc, #108]	; 40013300 <CyU3PDebugThreadEntry+0xf4>
40013290:	eb0007eb 	bl	40015244 <CyU3PDmaChannelCommitBuffer>
40013294:	e1a05000 	mov	r5, r0
40013298:	e3550000 	cmp	r5, #0
4001329c:	1a000004 	bne	400132b4 <CyU3PDebugThreadEntry+0xa8>
400132a0:	e3e02000 	mvn	r2, #0
400132a4:	e59f1050 	ldr	r1, [pc, #80]	; 400132fc <CyU3PDebugThreadEntry+0xf0>
400132a8:	e281000c 	add	r0, r1, #12
400132ac:	eb000b27 	bl	40015f50 <CyU3PDmaChannelGetBuffer>
400132b0:	e1a05000 	mov	r5, r0
400132b4:	e3550000 	cmp	r5, #0
400132b8:	0a000004 	beq	400132d0 <CyU3PDebugThreadEntry+0xc4>
400132bc:	ebfffeab 	bl	40012d70 <CyU3PDebugChannelReset>
400132c0:	e1a05000 	mov	r5, r0
400132c4:	e3550000 	cmp	r5, #0
400132c8:	0a000000 	beq	400132d0 <CyU3PDebugThreadEntry+0xc4>
400132cc:	ea000005 	b	400132e8 <CyU3PDebugThreadEntry+0xdc>
400132d0:	e3a00000 	mov	r0, #0
400132d4:	e59f101c 	ldr	r1, [pc, #28]	; 400132f8 <CyU3PDebugThreadEntry+0xec>
400132d8:	e1c100b0 	strh	r0, [r1]
400132dc:	e59f0010 	ldr	r0, [pc, #16]	; 400132f4 <CyU3PDebugThreadEntry+0xe8>
400132e0:	ebffdbc4 	bl	4000a1f8 <_txe_mutex_put>
400132e4:	eaffffcc 	b	4001321c <CyU3PDebugThreadEntry+0x10>
400132e8:	e1a00000 	nop			; (mov r0, r0)
400132ec:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
400132f0:	400312dc 	.word	0x400312dc
400132f4:	40031318 	.word	0x40031318
400132f8:	40030c9c 	.word	0x40030c9c
400132fc:	40031350 	.word	0x40031350
40013300:	4003135c 	.word	0x4003135c

Disassembly of section i.MyDebugSNPrint:

40013304 <MyDebugSNPrint>:
40013304:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40013308:	e24dd01c 	sub	sp, sp, #28
4001330c:	e1a04000 	mov	r4, r0
40013310:	e1a05001 	mov	r5, r1
40013314:	e1a06002 	mov	r6, r2
40013318:	e3a08000 	mov	r8, #0
4001331c:	e3a00000 	mov	r0, #0
40013320:	e58d0018 	str	r0, [sp, #24]
40013324:	e3a09000 	mov	r9, #0
40013328:	e1d5b0b0 	ldrh	fp, [r5]
4001332c:	e3540000 	cmp	r4, #0
40013330:	1a000002 	bne	40013340 <MyDebugSNPrint+0x3c>
40013334:	e3a00040 	mov	r0, #64	; 0x40
40013338:	e28dd02c 	add	sp, sp, #44	; 0x2c
4001333c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40013340:	e1a07006 	mov	r7, r6
40013344:	ea00008d 	b	40013580 <MyDebugSNPrint+0x27c>
40013348:	e24b0002 	sub	r0, fp, #2
4001334c:	e1500009 	cmp	r0, r9
40013350:	ca000001 	bgt	4001335c <MyDebugSNPrint+0x58>
40013354:	e3a00040 	mov	r0, #64	; 0x40
40013358:	eafffff6 	b	40013338 <MyDebugSNPrint+0x34>
4001335c:	e5d70000 	ldrb	r0, [r7]
40013360:	e3500025 	cmp	r0, #37	; 0x25
40013364:	0a000005 	beq	40013380 <MyDebugSNPrint+0x7c>
40013368:	e5d71000 	ldrb	r1, [r7]
4001336c:	e1a00009 	mov	r0, r9
40013370:	e2892001 	add	r2, r9, #1
40013374:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013378:	e7c41000 	strb	r1, [r4, r0]
4001337c:	ea00007e 	b	4001357c <MyDebugSNPrint+0x278>
40013380:	e2877001 	add	r7, r7, #1
40013384:	e5d70000 	ldrb	r0, [r7]
40013388:	e3500064 	cmp	r0, #100	; 0x64
4001338c:	0a000021 	beq	40013418 <MyDebugSNPrint+0x114>
40013390:	ca000006 	bgt	400133b0 <MyDebugSNPrint+0xac>
40013394:	e3500025 	cmp	r0, #37	; 0x25
40013398:	0a00000b 	beq	400133cc <MyDebugSNPrint+0xc8>
4001339c:	e3500058 	cmp	r0, #88	; 0x58
400133a0:	0a00004c 	beq	400134d8 <MyDebugSNPrint+0x1d4>
400133a4:	e3500063 	cmp	r0, #99	; 0x63
400133a8:	1a00005a 	bne	40013518 <MyDebugSNPrint+0x214>
400133ac:	ea00000d 	b	400133e8 <MyDebugSNPrint+0xe4>
400133b0:	e3500073 	cmp	r0, #115	; 0x73
400133b4:	0a000031 	beq	40013480 <MyDebugSNPrint+0x17c>
400133b8:	e3500075 	cmp	r0, #117	; 0x75
400133bc:	0a000036 	beq	4001349c <MyDebugSNPrint+0x198>
400133c0:	e3500078 	cmp	r0, #120	; 0x78
400133c4:	1a000053 	bne	40013518 <MyDebugSNPrint+0x214>
400133c8:	ea000044 	b	400134e0 <MyDebugSNPrint+0x1dc>
400133cc:	e1a00000 	nop			; (mov r0, r0)
400133d0:	e3a01025 	mov	r1, #37	; 0x25
400133d4:	e1a00009 	mov	r0, r9
400133d8:	e2892001 	add	r2, r9, #1
400133dc:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400133e0:	e7c41000 	strb	r1, [r4, r0]
400133e4:	ea00004e 	b	40013524 <MyDebugSNPrint+0x220>
400133e8:	e1a00000 	nop			; (mov r0, r0)
400133ec:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400133f0:	e5900000 	ldr	r0, [r0]
400133f4:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
400133f8:	e2811004 	add	r1, r1, #4
400133fc:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013400:	e20010ff 	and	r1, r0, #255	; 0xff
40013404:	e1a00009 	mov	r0, r9
40013408:	e2892001 	add	r2, r9, #1
4001340c:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013410:	e7c41000 	strb	r1, [r4, r0]
40013414:	ea000042 	b	40013524 <MyDebugSNPrint+0x220>
40013418:	e1a00000 	nop			; (mov r0, r0)
4001341c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013420:	e5900000 	ldr	r0, [r0]
40013424:	e58d0014 	str	r0, [sp, #20]
40013428:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001342c:	e2800004 	add	r0, r0, #4
40013430:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013434:	e59d0014 	ldr	r0, [sp, #20]
40013438:	e3500000 	cmp	r0, #0
4001343c:	aa000007 	bge	40013460 <MyDebugSNPrint+0x15c>
40013440:	e3a0102d 	mov	r1, #45	; 0x2d
40013444:	e1a00009 	mov	r0, r9
40013448:	e2892001 	add	r2, r9, #1
4001344c:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013450:	e7c41000 	strb	r1, [r4, r0]
40013454:	e59d0014 	ldr	r0, [sp, #20]
40013458:	e2600000 	rsb	r0, r0, #0
4001345c:	e58d0014 	str	r0, [sp, #20]
40013460:	e3a0200a 	mov	r2, #10
40013464:	e59d1014 	ldr	r1, [sp, #20]
40013468:	e28d0004 	add	r0, sp, #4
4001346c:	ebfffeb5 	bl	40012f48 <CyU3PDebugIntToStr>
40013470:	e1a08000 	mov	r8, r0
40013474:	e3a00001 	mov	r0, #1
40013478:	e58d0018 	str	r0, [sp, #24]
4001347c:	ea000028 	b	40013524 <MyDebugSNPrint+0x220>
40013480:	e1a00000 	nop			; (mov r0, r0)
40013484:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013488:	e4908004 	ldr	r8, [r0], #4
4001348c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013490:	e3a00001 	mov	r0, #1
40013494:	e58d0018 	str	r0, [sp, #24]
40013498:	ea000021 	b	40013524 <MyDebugSNPrint+0x220>
4001349c:	e1a00000 	nop			; (mov r0, r0)
400134a0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400134a4:	e5900000 	ldr	r0, [r0]
400134a8:	e58d0010 	str	r0, [sp, #16]
400134ac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400134b0:	e2800004 	add	r0, r0, #4
400134b4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400134b8:	e3a0200a 	mov	r2, #10
400134bc:	e59d1010 	ldr	r1, [sp, #16]
400134c0:	e28d0004 	add	r0, sp, #4
400134c4:	ebfffe9f 	bl	40012f48 <CyU3PDebugIntToStr>
400134c8:	e1a08000 	mov	r8, r0
400134cc:	e3a00001 	mov	r0, #1
400134d0:	e58d0018 	str	r0, [sp, #24]
400134d4:	ea000012 	b	40013524 <MyDebugSNPrint+0x220>
400134d8:	e1a00000 	nop			; (mov r0, r0)
400134dc:	e1a00000 	nop			; (mov r0, r0)
400134e0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400134e4:	e5900000 	ldr	r0, [r0]
400134e8:	e58d0010 	str	r0, [sp, #16]
400134ec:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400134f0:	e2800004 	add	r0, r0, #4
400134f4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400134f8:	e3a02010 	mov	r2, #16
400134fc:	e59d1010 	ldr	r1, [sp, #16]
40013500:	e28d0004 	add	r0, sp, #4
40013504:	ebfffe8f 	bl	40012f48 <CyU3PDebugIntToStr>
40013508:	e1a08000 	mov	r8, r0
4001350c:	e3a00001 	mov	r0, #1
40013510:	e58d0018 	str	r0, [sp, #24]
40013514:	ea000002 	b	40013524 <MyDebugSNPrint+0x220>
40013518:	e1a00000 	nop			; (mov r0, r0)
4001351c:	e3a00040 	mov	r0, #64	; 0x40
40013520:	eaffff84 	b	40013338 <MyDebugSNPrint+0x34>
40013524:	e1a00000 	nop			; (mov r0, r0)
40013528:	e59d0018 	ldr	r0, [sp, #24]
4001352c:	e3500000 	cmp	r0, #0
40013530:	0a000010 	beq	40013578 <MyDebugSNPrint+0x274>
40013534:	e1a00008 	mov	r0, r8
40013538:	ebfff500 	bl	40010940 <strlen>
4001353c:	e1a0a800 	lsl	sl, r0, #16
40013540:	e1a0a82a 	lsr	sl, sl, #16
40013544:	e04b000a 	sub	r0, fp, sl
40013548:	e2400001 	sub	r0, r0, #1
4001354c:	e1500009 	cmp	r0, r9
40013550:	ca000001 	bgt	4001355c <MyDebugSNPrint+0x258>
40013554:	e3a00040 	mov	r0, #64	; 0x40
40013558:	eaffff76 	b	40013338 <MyDebugSNPrint+0x34>
4001355c:	e0840009 	add	r0, r4, r9
40013560:	e1a01008 	mov	r1, r8
40013564:	ebfff4b9 	bl	40010850 <strcpy>
40013568:	e089000a 	add	r0, r9, sl
4001356c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013570:	e3a00000 	mov	r0, #0
40013574:	e58d0018 	str	r0, [sp, #24]
40013578:	e1a00000 	nop			; (mov r0, r0)
4001357c:	e2877001 	add	r7, r7, #1
40013580:	e5d70000 	ldrb	r0, [r7]
40013584:	e3500000 	cmp	r0, #0
40013588:	1affff6e 	bne	40013348 <MyDebugSNPrint+0x44>
4001358c:	e3a00000 	mov	r0, #0
40013590:	e7c40009 	strb	r0, [r4, r9]
40013594:	e1c590b0 	strh	r9, [r5]
40013598:	eaffff66 	b	40013338 <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

4001359c <CyU3PBusyWait>:
4001359c:	ea000006 	b	400135bc <CyU3PBusyWait+0x20>
400135a0:	e3a01000 	mov	r1, #0
400135a4:	ea000002 	b	400135b4 <CyU3PBusyWait+0x18>
400135a8:	e281100a 	add	r1, r1, #10
400135ac:	e241100a 	sub	r1, r1, #10
400135b0:	e2811001 	add	r1, r1, #1
400135b4:	e351001f 	cmp	r1, #31
400135b8:	3afffffa 	bcc	400135a8 <CyU3PBusyWait+0xc>
400135bc:	e1b02000 	movs	r2, r0
400135c0:	e2403001 	sub	r3, r0, #1
400135c4:	e1a00803 	lsl	r0, r3, #16
400135c8:	e1a00820 	lsr	r0, r0, #16
400135cc:	1afffff3 	bne	400135a0 <CyU3PBusyWait+0x4>
400135d0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

400135d4 <CyU3PComputeChecksum>:
400135d4:	e92d4010 	push	{r4, lr}
400135d8:	e1a03000 	mov	r3, r0
400135dc:	e3a00000 	mov	r0, #0
400135e0:	e3530000 	cmp	r3, #0
400135e4:	0a000003 	beq	400135f8 <CyU3PComputeChecksum+0x24>
400135e8:	e3510000 	cmp	r1, #0
400135ec:	0a000001 	beq	400135f8 <CyU3PComputeChecksum+0x24>
400135f0:	e3520000 	cmp	r2, #0
400135f4:	1a000001 	bne	40013600 <CyU3PComputeChecksum+0x2c>
400135f8:	e3a00040 	mov	r0, #64	; 0x40
400135fc:	ea00000a 	b	4001362c <CyU3PComputeChecksum+0x58>
40013600:	e3a0e000 	mov	lr, #0
40013604:	e582e000 	str	lr, [r2]
40013608:	e3a0c000 	mov	ip, #0
4001360c:	ea000004 	b	40013624 <CyU3PComputeChecksum+0x50>
40013610:	e592e000 	ldr	lr, [r2]
40013614:	e793410c 	ldr	r4, [r3, ip, lsl #2]
40013618:	e08ee004 	add	lr, lr, r4
4001361c:	e582e000 	str	lr, [r2]
40013620:	e28cc001 	add	ip, ip, #1
40013624:	e15c0121 	cmp	ip, r1, lsr #2
40013628:	3afffff8 	bcc	40013610 <CyU3PComputeChecksum+0x3c>
4001362c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

40013630 <__aeabi_memclr4>:
40013630:	e92d4030 	push	{r4, r5, lr}
40013634:	e1a04000 	mov	r4, r0
40013638:	e1a05001 	mov	r5, r1
4001363c:	e3a02000 	mov	r2, #0
40013640:	e1a01005 	mov	r1, r5
40013644:	e1a00004 	mov	r0, r4
40013648:	eb000020 	bl	400136d0 <__aeabi_memset>
4001364c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

40013650 <__aeabi_memcpy>:
40013650:	e92d4010 	push	{r4, lr}
40013654:	e1a03000 	mov	r3, r0
40013658:	e1a0c001 	mov	ip, r1
4001365c:	e1500001 	cmp	r0, r1
40013660:	2a000006 	bcs	40013680 <__aeabi_memcpy+0x30>
40013664:	ea000001 	b	40013670 <__aeabi_memcpy+0x20>
40013668:	e4dce001 	ldrb	lr, [ip], #1
4001366c:	e4c3e001 	strb	lr, [r3], #1
40013670:	e1b0e002 	movs	lr, r2
40013674:	e2422001 	sub	r2, r2, #1
40013678:	1afffffa 	bne	40013668 <__aeabi_memcpy+0x18>
4001367c:	ea000009 	b	400136a8 <__aeabi_memcpy+0x58>
40013680:	e080e002 	add	lr, r0, r2
40013684:	e24e3001 	sub	r3, lr, #1
40013688:	e081e002 	add	lr, r1, r2
4001368c:	e24ec001 	sub	ip, lr, #1
40013690:	ea000001 	b	4001369c <__aeabi_memcpy+0x4c>
40013694:	e45ce001 	ldrb	lr, [ip], #-1
40013698:	e443e001 	strb	lr, [r3], #-1
4001369c:	e1b0e002 	movs	lr, r2
400136a0:	e2422001 	sub	r2, r2, #1
400136a4:	1afffffa 	bne	40013694 <__aeabi_memcpy+0x44>
400136a8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

400136ac <__aeabi_memcpy4>:
400136ac:	e92d4070 	push	{r4, r5, r6, lr}
400136b0:	e1a04000 	mov	r4, r0
400136b4:	e1a05001 	mov	r5, r1
400136b8:	e1a06002 	mov	r6, r2
400136bc:	e1a02006 	mov	r2, r6
400136c0:	e1a01005 	mov	r1, r5
400136c4:	e1a00004 	mov	r0, r4
400136c8:	ebffffe0 	bl	40013650 <__aeabi_memcpy>
400136cc:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

400136d0 <__aeabi_memset>:
400136d0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400136d4:	e1a03000 	mov	r3, r0
400136d8:	ea000000 	b	400136e0 <__aeabi_memset+0x10>
400136dc:	e4c32001 	strb	r2, [r3], #1
400136e0:	e1b0c001 	movs	ip, r1
400136e4:	e2411001 	sub	r1, r1, #1
400136e8:	1afffffb 	bne	400136dc <__aeabi_memset+0xc>
400136ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

400136f0 <CyU3PApplicationDefine>:
400136f0:	e92d4010 	push	{r4, lr}
400136f4:	e24dd020 	sub	sp, sp, #32
400136f8:	e3e00000 	mvn	r0, #0
400136fc:	e59f10b4 	ldr	r1, [pc, #180]	; 400137b8 <CyU3PApplicationDefine+0xc8>
40013700:	e5810000 	str	r0, [r1]
40013704:	e3a00000 	mov	r0, #0
40013708:	e59f10ac 	ldr	r1, [pc, #172]	; 400137bc <CyU3PApplicationDefine+0xcc>
4001370c:	e5810000 	str	r0, [r1]
40013710:	ebffbfc4 	bl	40003628 <CyU3PMemInit>
40013714:	eb001694 	bl	4001916c <CyU3PDmaApplicationDefine>
40013718:	e3a02028 	mov	r2, #40	; 0x28
4001371c:	e3a01000 	mov	r1, #0
40013720:	e59f0098 	ldr	r0, [pc, #152]	; 400137c0 <CyU3PApplicationDefine+0xd0>
40013724:	ebffd946 	bl	40009c44 <_txe_event_flags_create>
40013728:	e3a00080 	mov	r0, #128	; 0x80
4001372c:	ebffbfd0 	bl	40003674 <CyU3PMemAlloc>
40013730:	e1a04000 	mov	r4, r0
40013734:	e3a0303c 	mov	r3, #60	; 0x3c
40013738:	e3a02080 	mov	r2, #128	; 0x80
4001373c:	e1cd20f0 	strd	r2, [sp]
40013740:	e1a03004 	mov	r3, r4
40013744:	e3a02006 	mov	r2, #6
40013748:	e3a01000 	mov	r1, #0
4001374c:	e59f0070 	ldr	r0, [pc, #112]	; 400137c4 <CyU3PApplicationDefine+0xd4>
40013750:	ebffdad0 	bl	4000a298 <_txe_queue_create>
40013754:	e3a00b01 	mov	r0, #1024	; 0x400
40013758:	ebffbfc5 	bl	40003674 <CyU3PMemAlloc>
4001375c:	e1a04000 	mov	r4, r0
40013760:	e3a030a8 	mov	r3, #168	; 0xa8
40013764:	e3a02001 	mov	r2, #1
40013768:	e3a01000 	mov	r1, #0
4001376c:	e3a00004 	mov	r0, #4
40013770:	e28dc00c 	add	ip, sp, #12
40013774:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013778:	e3a02b01 	mov	r2, #1024	; 0x400
4001377c:	e1a03001 	mov	r3, r1
40013780:	e58d2004 	str	r2, [sp, #4]
40013784:	e59f203c 	ldr	r2, [pc, #60]	; 400137c8 <CyU3PApplicationDefine+0xd8>
40013788:	e28f103c 	add	r1, pc, #60	; 0x3c
4001378c:	e58d0008 	str	r0, [sp, #8]
40013790:	e59f0048 	ldr	r0, [pc, #72]	; 400137e0 <CyU3PApplicationDefine+0xf0>
40013794:	e58d4000 	str	r4, [sp]
40013798:	ebffdba4 	bl	4000a630 <_txe_thread_create>
4001379c:	eb000082 	bl	400139ac <CyU3PSibApplicationDefine>
400137a0:	ebfffd3d 	bl	40012c9c <CyU3PDebugApplicationDefine>
400137a4:	eb001d16 	bl	4001ac04 <CyU3PPibApplicationDefine>
400137a8:	eb00013c 	bl	40013ca0 <CyU3PLppApplicationDefine>
400137ac:	eb002b6f 	bl	4001e570 <CyU3PUibApplicationDefine>
400137b0:	e28dd020 	add	sp, sp, #32
400137b4:	e8bd8010 	pop	{r4, pc}
400137b8:	40030ca0 	.word	0x40030ca0
400137bc:	40030ca4 	.word	0x40030ca4
400137c0:	400314a4 	.word	0x400314a4
400137c4:	400314cc 	.word	0x400314cc
400137c8:	40013898 	.word	0x40013898
400137cc:	535f3230 	.word	0x535f3230
400137d0:	45545359 	.word	0x45545359
400137d4:	48545f4d 	.word	0x48545f4d
400137d8:	44414552 	.word	0x44414552
400137dc:	00000000 	.word	0x00000000
400137e0:	400313fc 	.word	0x400313fc

Disassembly of section i.CyU3PSysCheckBootState:

400137e4 <CyU3PSysCheckBootState>:
400137e4:	e92d4070 	push	{r4, r5, r6, lr}
400137e8:	e3a00000 	mov	r0, #0
400137ec:	e59f106c 	ldr	r1, [pc, #108]	; 40013860 <CyU3PSysCheckBootState+0x7c>
400137f0:	e5810000 	str	r0, [r1]
400137f4:	e59f0068 	ldr	r0, [pc, #104]	; 40013864 <CyU3PSysCheckBootState+0x80>
400137f8:	e5900000 	ldr	r0, [r0]
400137fc:	e3100401 	tst	r0, #16777216	; 0x1000000
40013800:	0a000015 	beq	4001385c <CyU3PSysCheckBootState+0x78>
40013804:	e59f005c 	ldr	r0, [pc, #92]	; 40013868 <CyU3PSysCheckBootState+0x84>
40013808:	e5900000 	ldr	r0, [r0]
4001380c:	e3500001 	cmp	r0, #1
40013810:	1a000011 	bne	4001385c <CyU3PSysCheckBootState+0x78>
40013814:	e3a00000 	mov	r0, #0
40013818:	e59f1048 	ldr	r1, [pc, #72]	; 40013868 <CyU3PSysCheckBootState+0x84>
4001381c:	e5810000 	str	r0, [r1]
40013820:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013824:	e5904004 	ldr	r4, [r0, #4]
40013828:	e1a05004 	mov	r5, r4
4001382c:	e3a02901 	mov	r2, #16384	; 0x4000
40013830:	e1a01005 	mov	r1, r5
40013834:	e3a00000 	mov	r0, #0
40013838:	ebffc025 	bl	400038d4 <CyU3PMemCopy>
4001383c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013840:	e5900008 	ldr	r0, [r0, #8]
40013844:	e59f1020 	ldr	r1, [pc, #32]	; 4001386c <CyU3PSysCheckBootState+0x88>
40013848:	e1500001 	cmp	r0, r1
4001384c:	1a000002 	bne	4001385c <CyU3PSysCheckBootState+0x78>
40013850:	e2840901 	add	r0, r4, #16384	; 0x4000
40013854:	e59f1004 	ldr	r1, [pc, #4]	; 40013860 <CyU3PSysCheckBootState+0x7c>
40013858:	e5810000 	str	r0, [r1]
4001385c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013860:	40030ca8 	.word	0x40030ca8
40013864:	e0050000 	.word	0xe0050000
40013868:	40030ca4 	.word	0x40030ca4
4001386c:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013870 <CyU3PSysFwMsgHandler>:
40013870:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013874 <CyU3PSysModuleInitCompleteEvt>:
40013874:	e92d4010 	push	{r4, lr}
40013878:	e1a04000 	mov	r4, r0
4001387c:	e3a00010 	mov	r0, #16
40013880:	e1a01410 	lsl	r1, r0, r4
40013884:	e3a02000 	mov	r2, #0
40013888:	e59f0004 	ldr	r0, [pc, #4]	; 40013894 <CyU3PSysModuleInitCompleteEvt+0x20>
4001388c:	ebffd98c 	bl	40009ec4 <_txe_event_flags_set>
40013890:	e8bd8010 	pop	{r4, pc}
40013894:	400314a4 	.word	0x400314a4

Disassembly of section i.CyU3PSysThreadEntry:

40013898 <CyU3PSysThreadEntry>:
40013898:	e92d4010 	push	{r4, lr}
4001389c:	e24dd028 	sub	sp, sp, #40	; 0x28
400138a0:	e3a04c02 	mov	r4, #512	; 0x200
400138a4:	e3844080 	orr	r4, r4, #128	; 0x80
400138a8:	e3e03000 	mvn	r3, #0
400138ac:	e58d3000 	str	r3, [sp]
400138b0:	e28d3024 	add	r3, sp, #36	; 0x24
400138b4:	e3a02003 	mov	r2, #3
400138b8:	e1a01004 	mov	r1, r4
400138bc:	e59f00d8 	ldr	r0, [pc, #216]	; 4001399c <CyU3PSysThreadEntry+0x104>
400138c0:	ebffd94f 	bl	40009e04 <_txe_event_flags_get>
400138c4:	e28d2020 	add	r2, sp, #32
400138c8:	e3a01000 	mov	r1, #0
400138cc:	e59f00cc 	ldr	r0, [pc, #204]	; 400139a0 <CyU3PSysThreadEntry+0x108>
400138d0:	ebffdc0c 	bl	4000a908 <_txe_thread_priority_change>
400138d4:	ebffd351 	bl	40008620 <CyFxApplicationDefine>
400138d8:	e28d2020 	add	r2, sp, #32
400138dc:	e3a01004 	mov	r1, #4
400138e0:	e59f00b8 	ldr	r0, [pc, #184]	; 400139a0 <CyU3PSysThreadEntry+0x108>
400138e4:	ebffdc07 	bl	4000a908 <_txe_thread_priority_change>
400138e8:	ea00002a 	b	40013998 <CyU3PSysThreadEntry+0x100>
400138ec:	e59f00b0 	ldr	r0, [pc, #176]	; 400139a4 <CyU3PSysThreadEntry+0x10c>
400138f0:	e5903000 	ldr	r3, [r0]
400138f4:	e58d3000 	str	r3, [sp]
400138f8:	e28d3024 	add	r3, sp, #36	; 0x24
400138fc:	e3a02001 	mov	r2, #1
40013900:	e3e01000 	mvn	r1, #0
40013904:	e59f0090 	ldr	r0, [pc, #144]	; 4001399c <CyU3PSysThreadEntry+0x104>
40013908:	ebffd93d 	bl	40009e04 <_txe_event_flags_get>
4001390c:	e58d0020 	str	r0, [sp, #32]
40013910:	e59d0020 	ldr	r0, [sp, #32]
40013914:	e3500000 	cmp	r0, #0
40013918:	0a000000 	beq	40013920 <CyU3PSysThreadEntry+0x88>
4001391c:	ea00001d 	b	40013998 <CyU3PSysThreadEntry+0x100>
40013920:	e3a04001 	mov	r4, #1
40013924:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013928:	e0000004 	and	r0, r0, r4
4001392c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013930:	ea000014 	b	40013988 <CyU3PSysThreadEntry+0xf0>
40013934:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013938:	e3100001 	tst	r0, #1
4001393c:	0a000011 	beq	40013988 <CyU3PSysThreadEntry+0xf0>
40013940:	e3a02000 	mov	r2, #0
40013944:	e28d1008 	add	r1, sp, #8
40013948:	e59f0058 	ldr	r0, [pc, #88]	; 400139a8 <CyU3PSysThreadEntry+0x110>
4001394c:	ebffdae7 	bl	4000a4f0 <_txe_queue_receive>
40013950:	e58d0020 	str	r0, [sp, #32]
40013954:	e59d0020 	ldr	r0, [sp, #32]
40013958:	e3500000 	cmp	r0, #0
4001395c:	1a000006 	bne	4001397c <CyU3PSysThreadEntry+0xe4>
40013960:	e1dd00b8 	ldrh	r0, [sp, #8]
40013964:	e2000902 	and	r0, r0, #32768	; 0x8000
40013968:	e1b007a0 	lsrs	r0, r0, #15
4001396c:	1a000005 	bne	40013988 <CyU3PSysThreadEntry+0xf0>
40013970:	e28d0008 	add	r0, sp, #8
40013974:	ebffffbd 	bl	40013870 <CyU3PSysFwMsgHandler>
40013978:	ea000002 	b	40013988 <CyU3PSysThreadEntry+0xf0>
4001397c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013980:	e3c00001 	bic	r0, r0, #1
40013984:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013988:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001398c:	e3500000 	cmp	r0, #0
40013990:	1affffe7 	bne	40013934 <CyU3PSysThreadEntry+0x9c>
40013994:	e1a00000 	nop			; (mov r0, r0)
40013998:	eaffffd3 	b	400138ec <CyU3PSysThreadEntry+0x54>
4001399c:	400314a4 	.word	0x400314a4
400139a0:	400313fc 	.word	0x400313fc
400139a4:	40030ca0 	.word	0x40030ca0
400139a8:	400314cc 	.word	0x400314cc

Disassembly of section i.CyU3PSibApplicationDefine:

400139ac <CyU3PSibApplicationDefine>:
400139ac:	e92d4010 	push	{r4, lr}
400139b0:	e24dd020 	sub	sp, sp, #32
400139b4:	e3a04000 	mov	r4, #0
400139b8:	e3a02028 	mov	r2, #40	; 0x28
400139bc:	e3a01000 	mov	r1, #0
400139c0:	e59f0064 	ldr	r0, [pc, #100]	; 40013a2c <CyU3PSibApplicationDefine+0x80>
400139c4:	ebffd89e 	bl	40009c44 <_txe_event_flags_create>
400139c8:	e3a00000 	mov	r0, #0
400139cc:	e59f105c 	ldr	r1, [pc, #92]	; 40013a30 <CyU3PSibApplicationDefine+0x84>
400139d0:	e5810000 	str	r0, [r1]
400139d4:	e3a00b02 	mov	r0, #2048	; 0x800
400139d8:	ebffbf25 	bl	40003674 <CyU3PMemAlloc>
400139dc:	e1a04000 	mov	r4, r0
400139e0:	e3540000 	cmp	r4, #0
400139e4:	0a00000e 	beq	40013a24 <CyU3PSibApplicationDefine+0x78>
400139e8:	e3a030a8 	mov	r3, #168	; 0xa8
400139ec:	e3a02001 	mov	r2, #1
400139f0:	e3a01000 	mov	r1, #0
400139f4:	e3a00004 	mov	r0, #4
400139f8:	e28dc00c 	add	ip, sp, #12
400139fc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013a00:	e3a02b02 	mov	r2, #2048	; 0x800
40013a04:	e1a03001 	mov	r3, r1
40013a08:	e58d2004 	str	r2, [sp, #4]
40013a0c:	e59f2020 	ldr	r2, [pc, #32]	; 40013a34 <CyU3PSibApplicationDefine+0x88>
40013a10:	e28f1020 	add	r1, pc, #32
40013a14:	e58d0008 	str	r0, [sp, #8]
40013a18:	e59f0028 	ldr	r0, [pc, #40]	; 40013a48 <CyU3PSibApplicationDefine+0x9c>
40013a1c:	e58d4000 	str	r4, [sp]
40013a20:	ebffdb02 	bl	4000a630 <_txe_thread_create>
40013a24:	e28dd020 	add	sp, sp, #32
40013a28:	e8bd8010 	pop	{r4, pc}
40013a2c:	400315b0 	.word	0x400315b0
40013a30:	40030cac 	.word	0x40030cac
40013a34:	40013aa4 	.word	0x40013aa4
40013a38:	535f3630 	.word	0x535f3630
40013a3c:	545f4249 	.word	0x545f4249
40013a40:	41455248 	.word	0x41455248
40013a44:	00000044 	.word	0x00000044
40013a48:	40031508 	.word	0x40031508

Disassembly of section i.CyU3PSibInitIntfParams:

40013a4c <CyU3PSibInitIntfParams>:
40013a4c:	e0802100 	add	r2, r0, r0, lsl #2
40013a50:	e59f3048 	ldr	r3, [pc, #72]	; 40013aa0 <CyU3PSibInitIntfParams+0x54>
40013a54:	e0831102 	add	r1, r3, r2, lsl #2
40013a58:	e3a020ff 	mov	r2, #255	; 0xff
40013a5c:	e5c12000 	strb	r2, [r1]
40013a60:	e3a02002 	mov	r2, #2
40013a64:	e5c12008 	strb	r2, [r1, #8]
40013a68:	e3a02001 	mov	r2, #1
40013a6c:	e5c12009 	strb	r2, [r1, #9]
40013a70:	e3a02000 	mov	r2, #0
40013a74:	e5c12010 	strb	r2, [r1, #16]
40013a78:	e5c1200a 	strb	r2, [r1, #10]
40013a7c:	e3a020ff 	mov	r2, #255	; 0xff
40013a80:	e5c1200b 	strb	r2, [r1, #11]
40013a84:	e3a02000 	mov	r2, #0
40013a88:	e581200c 	str	r2, [r1, #12]
40013a8c:	e3a02004 	mov	r2, #4
40013a90:	e5c12011 	strb	r2, [r1, #17]
40013a94:	e3a02000 	mov	r2, #0
40013a98:	e5c12012 	strb	r2, [r1, #18]
40013a9c:	e12fff1e 	bx	lr
40013aa0:	400315d8 	.word	0x400315d8

Disassembly of section i.CyU3PSibThreadEntry:

40013aa4 <CyU3PSibThreadEntry>:
40013aa4:	e92d4010 	push	{r4, lr}
40013aa8:	e3a00000 	mov	r0, #0
40013aac:	ebffffe6 	bl	40013a4c <CyU3PSibInitIntfParams>
40013ab0:	e3a00001 	mov	r0, #1
40013ab4:	ebffffe4 	bl	40013a4c <CyU3PSibInitIntfParams>
40013ab8:	e3a00003 	mov	r0, #3
40013abc:	ebffff6c 	bl	40013874 <CyU3PSysModuleInitCompleteEvt>
40013ac0:	ea000009 	b	40013aec <CyU3PSibThreadEntry+0x48>
40013ac4:	e59f0024 	ldr	r0, [pc, #36]	; 40013af0 <CyU3PSibThreadEntry+0x4c>
40013ac8:	e5900000 	ldr	r0, [r0]
40013acc:	e3500000 	cmp	r0, #0
40013ad0:	0a000003 	beq	40013ae4 <CyU3PSibThreadEntry+0x40>
40013ad4:	e59f0014 	ldr	r0, [pc, #20]	; 40013af0 <CyU3PSibThreadEntry+0x4c>
40013ad8:	e5900000 	ldr	r0, [r0]
40013adc:	e12fff30 	blx	r0
40013ae0:	ea000001 	b	40013aec <CyU3PSibThreadEntry+0x48>
40013ae4:	e3a0000a 	mov	r0, #10
40013ae8:	ebffd3fd 	bl	40008ae4 <_tx_thread_sleep>
40013aec:	eafffff4 	b	40013ac4 <CyU3PSibThreadEntry+0x20>
40013af0:	40030cac 	.word	0x40030cac

Disassembly of section i.CyU3PGpioSetClock:

40013af4 <CyU3PGpioSetClock>:
40013af4:	e92d4070 	push	{r4, r5, r6, lr}
40013af8:	e1a04000 	mov	r4, r0
40013afc:	e3a05000 	mov	r5, #0
40013b00:	e5d40000 	ldrb	r0, [r4]
40013b04:	e3500002 	cmp	r0, #2
40013b08:	ba000002 	blt	40013b18 <CyU3PGpioSetClock+0x24>
40013b0c:	e5d40000 	ldrb	r0, [r4]
40013b10:	e3500010 	cmp	r0, #16
40013b14:	da000001 	ble	40013b20 <CyU3PGpioSetClock+0x2c>
40013b18:	e3a00040 	mov	r0, #64	; 0x40
40013b1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013b20:	e5d40001 	ldrb	r0, [r4, #1]
40013b24:	e3500000 	cmp	r0, #0
40013b28:	1a000004 	bne	40013b40 <CyU3PGpioSetClock+0x4c>
40013b2c:	e5940004 	ldr	r0, [r4, #4]
40013b30:	e3500000 	cmp	r0, #0
40013b34:	0a000009 	beq	40013b60 <CyU3PGpioSetClock+0x6c>
40013b38:	e3a00040 	mov	r0, #64	; 0x40
40013b3c:	eafffff6 	b	40013b1c <CyU3PGpioSetClock+0x28>
40013b40:	e5d40001 	ldrb	r0, [r4, #1]
40013b44:	e3500002 	cmp	r0, #2
40013b48:	ba000002 	blt	40013b58 <CyU3PGpioSetClock+0x64>
40013b4c:	e5d40001 	ldrb	r0, [r4, #1]
40013b50:	e3500040 	cmp	r0, #64	; 0x40
40013b54:	da000001 	ble	40013b60 <CyU3PGpioSetClock+0x6c>
40013b58:	e3a00040 	mov	r0, #64	; 0x40
40013b5c:	eaffffee 	b	40013b1c <CyU3PGpioSetClock+0x28>
40013b60:	e5d40009 	ldrb	r0, [r4, #9]
40013b64:	e3500004 	cmp	r0, #4
40013b68:	ba000001 	blt	40013b74 <CyU3PGpioSetClock+0x80>
40013b6c:	e3a00040 	mov	r0, #64	; 0x40
40013b70:	eaffffe9 	b	40013b1c <CyU3PGpioSetClock+0x28>
40013b74:	e5d40008 	ldrb	r0, [r4, #8]
40013b78:	e3500004 	cmp	r0, #4
40013b7c:	ba000001 	blt	40013b88 <CyU3PGpioSetClock+0x94>
40013b80:	e3a00040 	mov	r0, #64	; 0x40
40013b84:	eaffffe4 	b	40013b1c <CyU3PGpioSetClock+0x28>
40013b88:	e5d40000 	ldrb	r0, [r4]
40013b8c:	e2400001 	sub	r0, r0, #1
40013b90:	e5d41009 	ldrb	r1, [r4, #9]
40013b94:	e1800281 	orr	r0, r0, r1, lsl #5
40013b98:	e5d41008 	ldrb	r1, [r4, #8]
40013b9c:	e1800381 	orr	r0, r0, r1, lsl #7
40013ba0:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013ba4:	e5940004 	ldr	r0, [r4, #4]
40013ba8:	e3500000 	cmp	r0, #0
40013bac:	0a000000 	beq	40013bb4 <CyU3PGpioSetClock+0xc0>
40013bb0:	e3855010 	orr	r5, r5, #16
40013bb4:	e59f0030 	ldr	r0, [pc, #48]	; 40013bec <CyU3PGpioSetClock+0xf8>
40013bb8:	e5805018 	str	r5, [r0, #24]
40013bbc:	e5d40001 	ldrb	r0, [r4, #1]
40013bc0:	e3500000 	cmp	r0, #0
40013bc4:	0a000006 	beq	40013be4 <CyU3PGpioSetClock+0xf0>
40013bc8:	e3a00001 	mov	r0, #1
40013bcc:	ebfffe72 	bl	4001359c <CyU3PBusyWait>
40013bd0:	e5d40001 	ldrb	r0, [r4, #1]
40013bd4:	e2400001 	sub	r0, r0, #1
40013bd8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013bdc:	e59f1008 	ldr	r1, [pc, #8]	; 40013bec <CyU3PGpioSetClock+0xf8>
40013be0:	e581001c 	str	r0, [r1, #28]
40013be4:	e3a00000 	mov	r0, #0
40013be8:	eaffffcb 	b	40013b1c <CyU3PGpioSetClock+0x28>
40013bec:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013bf0 <CyU3PI2cSetClock>:
40013bf0:	e92d4070 	push	{r4, r5, r6, lr}
40013bf4:	e1a05000 	mov	r5, r0
40013bf8:	e3a06000 	mov	r6, #0
40013bfc:	e3550000 	cmp	r5, #0
40013c00:	1a000001 	bne	40013c0c <CyU3PI2cSetClock+0x1c>
40013c04:	e3a00040 	mov	r0, #64	; 0x40
40013c08:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c0c:	e0852105 	add	r2, r5, r5, lsl #2
40013c10:	e1a01082 	lsl	r1, r2, #1
40013c14:	e59f207c 	ldr	r2, [pc, #124]	; 40013c98 <CyU3PI2cSetClock+0xa8>
40013c18:	e5922000 	ldr	r2, [r2]
40013c1c:	e1a00122 	lsr	r0, r2, #2
40013c20:	ebfff39b 	bl	40010a94 <__aeabi_uidivmod>
40013c24:	e1a04000 	mov	r4, r0
40013c28:	e3140003 	tst	r4, #3
40013c2c:	1a000001 	bne	40013c38 <CyU3PI2cSetClock+0x48>
40013c30:	e1a04144 	asr	r4, r4, #2
40013c34:	ea00000a 	b	40013c64 <CyU3PI2cSetClock+0x74>
40013c38:	e2040003 	and	r0, r4, #3
40013c3c:	e3500001 	cmp	r0, #1
40013c40:	0a000002 	beq	40013c50 <CyU3PI2cSetClock+0x60>
40013c44:	e2040003 	and	r0, r4, #3
40013c48:	e3500002 	cmp	r0, #2
40013c4c:	1a000002 	bne	40013c5c <CyU3PI2cSetClock+0x6c>
40013c50:	e1a04144 	asr	r4, r4, #2
40013c54:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013c58:	ea000001 	b	40013c64 <CyU3PI2cSetClock+0x74>
40013c5c:	e3a00001 	mov	r0, #1
40013c60:	e0804144 	add	r4, r0, r4, asr #2
40013c64:	e2444001 	sub	r4, r4, #1
40013c68:	e3540001 	cmp	r4, #1
40013c6c:	ba000001 	blt	40013c78 <CyU3PI2cSetClock+0x88>
40013c70:	e3540a01 	cmp	r4, #4096	; 0x1000
40013c74:	ba000001 	blt	40013c80 <CyU3PI2cSetClock+0x90>
40013c78:	e3a00040 	mov	r0, #64	; 0x40
40013c7c:	eaffffe1 	b	40013c08 <CyU3PI2cSetClock+0x18>
40013c80:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013c84:	e1866000 	orr	r6, r6, r0
40013c88:	e59f000c 	ldr	r0, [pc, #12]	; 40013c9c <CyU3PI2cSetClock+0xac>
40013c8c:	e5806020 	str	r6, [r0, #32]
40013c90:	e3a00000 	mov	r0, #0
40013c94:	eaffffdb 	b	40013c08 <CyU3PI2cSetClock+0x18>
40013c98:	40030c6c 	.word	0x40030c6c
40013c9c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013ca0 <CyU3PLppApplicationDefine>:
40013ca0:	e92d4010 	push	{r4, lr}
40013ca4:	e24dd020 	sub	sp, sp, #32
40013ca8:	e3a00b01 	mov	r0, #1024	; 0x400
40013cac:	ebffbe70 	bl	40003674 <CyU3PMemAlloc>
40013cb0:	e1a04000 	mov	r4, r0
40013cb4:	e3a030a8 	mov	r3, #168	; 0xa8
40013cb8:	e3a02001 	mov	r2, #1
40013cbc:	e3a01000 	mov	r1, #0
40013cc0:	e3a00004 	mov	r0, #4
40013cc4:	e28dc00c 	add	ip, sp, #12
40013cc8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013ccc:	e3a02b01 	mov	r2, #1024	; 0x400
40013cd0:	e1a03001 	mov	r3, r1
40013cd4:	e58d2004 	str	r2, [sp, #4]
40013cd8:	e59f2054 	ldr	r2, [pc, #84]	; 40013d34 <CyU3PLppApplicationDefine+0x94>
40013cdc:	e28f1054 	add	r1, pc, #84	; 0x54
40013ce0:	e58d0008 	str	r0, [sp, #8]
40013ce4:	e59f005c 	ldr	r0, [pc, #92]	; 40013d48 <CyU3PLppApplicationDefine+0xa8>
40013ce8:	e58d4000 	str	r4, [sp]
40013cec:	ebffda4f 	bl	4000a630 <_txe_thread_create>
40013cf0:	e3a02028 	mov	r2, #40	; 0x28
40013cf4:	e3a01000 	mov	r1, #0
40013cf8:	e59f004c 	ldr	r0, [pc, #76]	; 40013d4c <CyU3PLppApplicationDefine+0xac>
40013cfc:	ebffd7d0 	bl	40009c44 <_txe_event_flags_create>
40013d00:	e3a00040 	mov	r0, #64	; 0x40
40013d04:	ebffbe5a 	bl	40003674 <CyU3PMemAlloc>
40013d08:	e1a04000 	mov	r4, r0
40013d0c:	e3a0303c 	mov	r3, #60	; 0x3c
40013d10:	e3a02040 	mov	r2, #64	; 0x40
40013d14:	e1cd20f0 	strd	r2, [sp]
40013d18:	e1a03004 	mov	r3, r4
40013d1c:	e3a02005 	mov	r2, #5
40013d20:	e3a01000 	mov	r1, #0
40013d24:	e59f0024 	ldr	r0, [pc, #36]	; 40013d50 <CyU3PLppApplicationDefine+0xb0>
40013d28:	ebffd95a 	bl	4000a298 <_txe_queue_create>
40013d2c:	e28dd020 	add	sp, sp, #32
40013d30:	e8bd8010 	pop	{r4, pc}
40013d34:	40014094 	.word	0x40014094
40013d38:	4c5f3530 	.word	0x4c5f3530
40013d3c:	545f5050 	.word	0x545f5050
40013d40:	41455248 	.word	0x41455248
40013d44:	00000044 	.word	0x00000044
40013d48:	4003163c 	.word	0x4003163c
40013d4c:	40031614 	.word	0x40031614
40013d50:	400316e4 	.word	0x400316e4

Disassembly of section i.CyU3PLppEventSend:

40013d54 <CyU3PLppEventSend>:
40013d54:	e92d4070 	push	{r4, r5, r6, lr}
40013d58:	e1a04000 	mov	r4, r0
40013d5c:	e3a02000 	mov	r2, #0
40013d60:	e1a01004 	mov	r1, r4
40013d64:	e59f000c 	ldr	r0, [pc, #12]	; 40013d78 <CyU3PLppEventSend+0x24>
40013d68:	ebffd855 	bl	40009ec4 <_txe_event_flags_set>
40013d6c:	e1a05000 	mov	r5, r0
40013d70:	e1a00005 	mov	r0, r5
40013d74:	e8bd8070 	pop	{r4, r5, r6, pc}
40013d78:	40031614 	.word	0x40031614

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013d7c <CyU3PLppGpioBlockIsOn>:
40013d7c:	e59f0004 	ldr	r0, [pc, #4]	; 40013d88 <CyU3PLppGpioBlockIsOn+0xc>
40013d80:	e5900000 	ldr	r0, [r0]
40013d84:	e12fff1e 	bx	lr
40013d88:	40030c88 	.word	0x40030c88

Disassembly of section i.CyU3PLppInit:

40013d8c <CyU3PLppInit>:
40013d8c:	e92d4070 	push	{r4, r5, r6, lr}
40013d90:	e1a04000 	mov	r4, r0
40013d94:	e1a05001 	mov	r5, r1
40013d98:	e3a06000 	mov	r6, #0
40013d9c:	e3a00001 	mov	r0, #1
40013da0:	e59f1174 	ldr	r1, [pc, #372]	; 40013f1c <CyU3PLppInit+0x190>
40013da4:	e5d11000 	ldrb	r1, [r1]
40013da8:	e1110410 	tst	r1, r0, lsl r4
40013dac:	0a000001 	beq	40013db8 <CyU3PLppInit+0x2c>
40013db0:	e3a00043 	mov	r0, #67	; 0x43
40013db4:	e8bd8070 	pop	{r4, r5, r6, pc}
40013db8:	e3540001 	cmp	r4, #1
40013dbc:	1a000004 	bne	40013dd4 <CyU3PLppInit+0x48>
40013dc0:	eb000310 	bl	40014a08 <CyFx3DevIsI2sSupported>
40013dc4:	e3500000 	cmp	r0, #0
40013dc8:	1a000001 	bne	40013dd4 <CyU3PLppInit+0x48>
40013dcc:	e3a00046 	mov	r0, #70	; 0x46
40013dd0:	eafffff7 	b	40013db4 <CyU3PLppInit+0x28>
40013dd4:	e3540005 	cmp	r4, #5
40013dd8:	308ff104 	addcc	pc, pc, r4, lsl #2
40013ddc:	ea000027 	b	40013e80 <CyU3PLppInit+0xf4>
40013de0:	ea000003 	b	40013df4 <CyU3PLppInit+0x68>
40013de4:	ea000009 	b	40013e10 <CyU3PLppInit+0x84>
40013de8:	ea00000f 	b	40013e2c <CyU3PLppInit+0xa0>
40013dec:	ea000015 	b	40013e48 <CyU3PLppInit+0xbc>
40013df0:	ea00001b 	b	40013e64 <CyU3PLppInit+0xd8>
40013df4:	e1a00000 	nop			; (mov r0, r0)
40013df8:	e59f0120 	ldr	r0, [pc, #288]	; 40013f20 <CyU3PLppInit+0x194>
40013dfc:	e5900020 	ldr	r0, [r0, #32]
40013e00:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013e04:	0a000000 	beq	40013e0c <CyU3PLppInit+0x80>
40013e08:	e3a06001 	mov	r6, #1
40013e0c:	ea00001b 	b	40013e80 <CyU3PLppInit+0xf4>
40013e10:	e1a00000 	nop			; (mov r0, r0)
40013e14:	e59f0104 	ldr	r0, [pc, #260]	; 40013f20 <CyU3PLppInit+0x194>
40013e18:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013e1c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013e20:	0a000000 	beq	40013e28 <CyU3PLppInit+0x9c>
40013e24:	e3a06001 	mov	r6, #1
40013e28:	ea000014 	b	40013e80 <CyU3PLppInit+0xf4>
40013e2c:	e1a00000 	nop			; (mov r0, r0)
40013e30:	e59f00e8 	ldr	r0, [pc, #232]	; 40013f20 <CyU3PLppInit+0x194>
40013e34:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013e38:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013e3c:	0a000000 	beq	40013e44 <CyU3PLppInit+0xb8>
40013e40:	e3a06001 	mov	r6, #1
40013e44:	ea00000d 	b	40013e80 <CyU3PLppInit+0xf4>
40013e48:	e1a00000 	nop			; (mov r0, r0)
40013e4c:	e59f00cc 	ldr	r0, [pc, #204]	; 40013f20 <CyU3PLppInit+0x194>
40013e50:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013e54:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013e58:	0a000000 	beq	40013e60 <CyU3PLppInit+0xd4>
40013e5c:	e3a06001 	mov	r6, #1
40013e60:	ea000006 	b	40013e80 <CyU3PLppInit+0xf4>
40013e64:	e1a00000 	nop			; (mov r0, r0)
40013e68:	e59f00b0 	ldr	r0, [pc, #176]	; 40013f20 <CyU3PLppInit+0x194>
40013e6c:	e5900018 	ldr	r0, [r0, #24]
40013e70:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013e74:	0a000000 	beq	40013e7c <CyU3PLppInit+0xf0>
40013e78:	e3a06001 	mov	r6, #1
40013e7c:	e1a00000 	nop			; (mov r0, r0)
40013e80:	e1a00000 	nop			; (mov r0, r0)
40013e84:	e3560000 	cmp	r6, #0
40013e88:	1a000001 	bne	40013e94 <CyU3PLppInit+0x108>
40013e8c:	e3a00047 	mov	r0, #71	; 0x47
40013e90:	eaffffc7 	b	40013db4 <CyU3PLppInit+0x28>
40013e94:	e59f0080 	ldr	r0, [pc, #128]	; 40013f1c <CyU3PLppInit+0x190>
40013e98:	e5d00000 	ldrb	r0, [r0]
40013e9c:	e3500000 	cmp	r0, #0
40013ea0:	1a000017 	bne	40013f04 <CyU3PLppInit+0x178>
40013ea4:	e59f0078 	ldr	r0, [pc, #120]	; 40013f24 <CyU3PLppInit+0x198>
40013ea8:	e5900000 	ldr	r0, [r0]
40013eac:	e3500000 	cmp	r0, #0
40013eb0:	1a000010 	bne	40013ef8 <CyU3PLppInit+0x16c>
40013eb4:	e59f006c 	ldr	r0, [pc, #108]	; 40013f28 <CyU3PLppInit+0x19c>
40013eb8:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013ebc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40013ec0:	e59f1060 	ldr	r1, [pc, #96]	; 40013f28 <CyU3PLppInit+0x19c>
40013ec4:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013ec8:	e3a0000a 	mov	r0, #10
40013ecc:	ebfffdb2 	bl	4001359c <CyU3PBusyWait>
40013ed0:	e59f0050 	ldr	r0, [pc, #80]	; 40013f28 <CyU3PLppInit+0x19c>
40013ed4:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013ed8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013edc:	e59f1044 	ldr	r1, [pc, #68]	; 40013f28 <CyU3PLppInit+0x19c>
40013ee0:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013ee4:	e1a00000 	nop			; (mov r0, r0)
40013ee8:	e59f0038 	ldr	r0, [pc, #56]	; 40013f28 <CyU3PLppInit+0x19c>
40013eec:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013ef0:	e3100001 	tst	r0, #1
40013ef4:	0afffffb 	beq	40013ee8 <CyU3PLppInit+0x15c>
40013ef8:	eb000051 	bl	40014044 <CyU3PLppSocketInit>
40013efc:	e3a00014 	mov	r0, #20
40013f00:	eb003828 	bl	40021fa8 <CyU3PVicEnableInt>
40013f04:	e1a02005 	mov	r2, r5
40013f08:	e3a01001 	mov	r1, #1
40013f0c:	e1a00004 	mov	r0, r4
40013f10:	eb0000f1 	bl	400142dc <CyU3UpdateLppActiveInfo>
40013f14:	e3a00000 	mov	r0, #0
40013f18:	eaffffa5 	b	40013db4 <CyU3PLppInit+0x28>
40013f1c:	40030cb0 	.word	0x40030cb0
40013f20:	e0052000 	.word	0xe0052000
40013f24:	40030c88 	.word	0x40030c88
40013f28:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40013f2c <CyU3PLppRestoreState>:
40013f2c:	e92d4070 	push	{r4, r5, r6, lr}
40013f30:	e1a04000 	mov	r4, r0
40013f34:	e3a00000 	mov	r0, #0
40013f38:	e59f10ec 	ldr	r1, [pc, #236]	; 4001402c <CyU3PLppRestoreState+0x100>
40013f3c:	e5c10000 	strb	r0, [r1]
40013f40:	e5940000 	ldr	r0, [r4]
40013f44:	e59f10e4 	ldr	r1, [pc, #228]	; 40014030 <CyU3PLppRestoreState+0x104>
40013f48:	e5810018 	str	r0, [r1, #24]
40013f4c:	e3a00001 	mov	r0, #1
40013f50:	ebfffd91 	bl	4001359c <CyU3PBusyWait>
40013f54:	e5940004 	ldr	r0, [r4, #4]
40013f58:	e59f10d0 	ldr	r1, [pc, #208]	; 40014030 <CyU3PLppRestoreState+0x104>
40013f5c:	e581001c 	str	r0, [r1, #28]
40013f60:	e3a00001 	mov	r0, #1
40013f64:	ebfffd8c 	bl	4001359c <CyU3PBusyWait>
40013f68:	e5940008 	ldr	r0, [r4, #8]
40013f6c:	e59f10c0 	ldr	r1, [pc, #192]	; 40014034 <CyU3PLppRestoreState+0x108>
40013f70:	e581000c 	str	r0, [r1, #12]
40013f74:	e3a00001 	mov	r0, #1
40013f78:	ebfffd87 	bl	4001359c <CyU3PBusyWait>
40013f7c:	e594000c 	ldr	r0, [r4, #12]
40013f80:	e59f10ac 	ldr	r1, [pc, #172]	; 40014034 <CyU3PLppRestoreState+0x108>
40013f84:	e5810010 	str	r0, [r1, #16]
40013f88:	e3a00001 	mov	r0, #1
40013f8c:	ebfffd82 	bl	4001359c <CyU3PBusyWait>
40013f90:	e5940010 	ldr	r0, [r4, #16]
40013f94:	e59f1098 	ldr	r1, [pc, #152]	; 40014034 <CyU3PLppRestoreState+0x108>
40013f98:	e5810008 	str	r0, [r1, #8]
40013f9c:	e3a00001 	mov	r0, #1
40013fa0:	ebfffd7d 	bl	4001359c <CyU3PBusyWait>
40013fa4:	e3a00004 	mov	r0, #4
40013fa8:	e5941014 	ldr	r1, [r4, #20]
40013fac:	ebffff76 	bl	40013d8c <CyU3PLppInit>
40013fb0:	e3a00001 	mov	r0, #1
40013fb4:	ebfffd78 	bl	4001359c <CyU3PBusyWait>
40013fb8:	e59f0078 	ldr	r0, [pc, #120]	; 40014038 <CyU3PLppRestoreState+0x10c>
40013fbc:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013fc0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013fc4:	e59f106c 	ldr	r1, [pc, #108]	; 40014038 <CyU3PLppRestoreState+0x10c>
40013fc8:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40013fcc:	e3a0000a 	mov	r0, #10
40013fd0:	ebfffd71 	bl	4001359c <CyU3PBusyWait>
40013fd4:	e1a00000 	nop			; (mov r0, r0)
40013fd8:	e59f0058 	ldr	r0, [pc, #88]	; 40014038 <CyU3PLppRestoreState+0x10c>
40013fdc:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013fe0:	e3100001 	tst	r0, #1
40013fe4:	0afffffb 	beq	40013fd8 <CyU3PLppRestoreState+0xac>
40013fe8:	e3a05000 	mov	r5, #0
40013fec:	ea000006 	b	4001400c <CyU3PLppRestoreState+0xe0>
40013ff0:	e2850006 	add	r0, r5, #6
40013ff4:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40013ff8:	e59f103c 	ldr	r1, [pc, #60]	; 4001403c <CyU3PLppRestoreState+0x110>
40013ffc:	e7810105 	str	r0, [r1, r5, lsl #2]
40014000:	e3a00001 	mov	r0, #1
40014004:	ebfffd64 	bl	4001359c <CyU3PBusyWait>
40014008:	e2855001 	add	r5, r5, #1
4001400c:	e355003d 	cmp	r5, #61	; 0x3d
40014010:	3afffff6 	bcc	40013ff0 <CyU3PLppRestoreState+0xc4>
40014014:	e59f0024 	ldr	r0, [pc, #36]	; 40014040 <CyU3PLppRestoreState+0x114>
40014018:	e5900000 	ldr	r0, [r0]
4001401c:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40014020:	e59f1018 	ldr	r1, [pc, #24]	; 40014040 <CyU3PLppRestoreState+0x114>
40014024:	e5810000 	str	r0, [r1]
40014028:	e8bd8070 	pop	{r4, r5, r6, pc}
4001402c:	40030cb0 	.word	0x40030cb0
40014030:	e0052000 	.word	0xe0052000
40014034:	e0051000 	.word	0xe0051000
40014038:	e0001000 	.word	0xe0001000
4001403c:	e0001100 	.word	0xe0001100
40014040:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40014044 <CyU3PLppSocketInit>:
40014044:	e3a00000 	mov	r0, #0
40014048:	ea00000d 	b	40014084 <CyU3PLppSocketInit+0x40>
4001404c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40014050:	e59f2038 	ldr	r2, [pc, #56]	; 40014090 <CyU3PLppSocketInit+0x4c>
40014054:	e0822380 	add	r2, r2, r0, lsl #7
40014058:	e582100c 	str	r1, [r2, #12]
4001405c:	e3e01000 	mvn	r1, #0
40014060:	e59f2028 	ldr	r2, [pc, #40]	; 40014090 <CyU3PLppSocketInit+0x4c>
40014064:	e0822380 	add	r2, r2, r0, lsl #7
40014068:	e5821010 	str	r1, [r2, #16]
4001406c:	e3a01000 	mov	r1, #0
40014070:	e59f2018 	ldr	r2, [pc, #24]	; 40014090 <CyU3PLppSocketInit+0x4c>
40014074:	e0822380 	add	r2, r2, r0, lsl #7
40014078:	e5821014 	str	r1, [r2, #20]
4001407c:	e2801001 	add	r1, r0, #1
40014080:	e20100ff 	and	r0, r1, #255	; 0xff
40014084:	e3500008 	cmp	r0, #8
40014088:	baffffef 	blt	4001404c <CyU3PLppSocketInit+0x8>
4001408c:	e12fff1e 	bx	lr
40014090:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40014094 <CyU3PLppThreadEntry>:
40014094:	e92d4010 	push	{r4, lr}
40014098:	e24dd020 	sub	sp, sp, #32
4001409c:	e3a00006 	mov	r0, #6
400140a0:	ebfffdf3 	bl	40013874 <CyU3PSysModuleInitCompleteEvt>
400140a4:	e3a000f1 	mov	r0, #241	; 0xf1
400140a8:	e59f1144 	ldr	r1, [pc, #324]	; 400141f4 <CyU3PLppThreadEntry+0x160>
400140ac:	e5810000 	str	r0, [r1]
400140b0:	e1a00000 	nop			; (mov r0, r0)
400140b4:	e3e03000 	mvn	r3, #0
400140b8:	e58d3000 	str	r3, [sp]
400140bc:	e28d301c 	add	r3, sp, #28
400140c0:	e3a02001 	mov	r2, #1
400140c4:	e59f0128 	ldr	r0, [pc, #296]	; 400141f4 <CyU3PLppThreadEntry+0x160>
400140c8:	e5901000 	ldr	r1, [r0]
400140cc:	e59f0124 	ldr	r0, [pc, #292]	; 400141f8 <CyU3PLppThreadEntry+0x164>
400140d0:	ebffd74b 	bl	40009e04 <_txe_event_flags_get>
400140d4:	e1a04000 	mov	r4, r0
400140d8:	e59f1114 	ldr	r1, [pc, #276]	; 400141f4 <CyU3PLppThreadEntry+0x160>
400140dc:	e59d001c 	ldr	r0, [sp, #28]
400140e0:	e5911000 	ldr	r1, [r1]
400140e4:	e0000001 	and	r0, r0, r1
400140e8:	e58d001c 	str	r0, [sp, #28]
400140ec:	e3540000 	cmp	r4, #0
400140f0:	0a000000 	beq	400140f8 <CyU3PLppThreadEntry+0x64>
400140f4:	eaffffee 	b	400140b4 <CyU3PLppThreadEntry+0x20>
400140f8:	ea000009 	b	40014124 <CyU3PLppThreadEntry+0x90>
400140fc:	e3a02000 	mov	r2, #0
40014100:	e28d1008 	add	r1, sp, #8
40014104:	e59f00f0 	ldr	r0, [pc, #240]	; 400141fc <CyU3PLppThreadEntry+0x168>
40014108:	ebffd8f8 	bl	4000a4f0 <_txe_queue_receive>
4001410c:	e1a04000 	mov	r4, r0
40014110:	e3540000 	cmp	r4, #0
40014114:	0a000002 	beq	40014124 <CyU3PLppThreadEntry+0x90>
40014118:	e59d001c 	ldr	r0, [sp, #28]
4001411c:	e3c00001 	bic	r0, r0, #1
40014120:	e58d001c 	str	r0, [sp, #28]
40014124:	e59d001c 	ldr	r0, [sp, #28]
40014128:	e3100001 	tst	r0, #1
4001412c:	1afffff2 	bne	400140fc <CyU3PLppThreadEntry+0x68>
40014130:	e59d001c 	ldr	r0, [sp, #28]
40014134:	e3100020 	tst	r0, #32
40014138:	0a000008 	beq	40014160 <CyU3PLppThreadEntry+0xcc>
4001413c:	e59f00bc 	ldr	r0, [pc, #188]	; 40014200 <CyU3PLppThreadEntry+0x16c>
40014140:	e5900000 	ldr	r0, [r0]
40014144:	e3500000 	cmp	r0, #0
40014148:	0a000002 	beq	40014158 <CyU3PLppThreadEntry+0xc4>
4001414c:	e59f10ac 	ldr	r1, [pc, #172]	; 40014200 <CyU3PLppThreadEntry+0x16c>
40014150:	e5910000 	ldr	r0, [r1]
40014154:	e12fff30 	blx	r0
40014158:	e3a0000f 	mov	r0, #15
4001415c:	eb003791 	bl	40021fa8 <CyU3PVicEnableInt>
40014160:	e59d001c 	ldr	r0, [sp, #28]
40014164:	e3100010 	tst	r0, #16
40014168:	0a000008 	beq	40014190 <CyU3PLppThreadEntry+0xfc>
4001416c:	e59f008c 	ldr	r0, [pc, #140]	; 40014200 <CyU3PLppThreadEntry+0x16c>
40014170:	e5900004 	ldr	r0, [r0, #4]
40014174:	e3500000 	cmp	r0, #0
40014178:	0a000002 	beq	40014188 <CyU3PLppThreadEntry+0xf4>
4001417c:	e59f107c 	ldr	r1, [pc, #124]	; 40014200 <CyU3PLppThreadEntry+0x16c>
40014180:	e5910004 	ldr	r0, [r1, #4]
40014184:	e12fff30 	blx	r0
40014188:	e3a00010 	mov	r0, #16
4001418c:	eb003785 	bl	40021fa8 <CyU3PVicEnableInt>
40014190:	e59d001c 	ldr	r0, [sp, #28]
40014194:	e3100080 	tst	r0, #128	; 0x80
40014198:	0a000008 	beq	400141c0 <CyU3PLppThreadEntry+0x12c>
4001419c:	e59f005c 	ldr	r0, [pc, #92]	; 40014200 <CyU3PLppThreadEntry+0x16c>
400141a0:	e5900008 	ldr	r0, [r0, #8]
400141a4:	e3500000 	cmp	r0, #0
400141a8:	0a000002 	beq	400141b8 <CyU3PLppThreadEntry+0x124>
400141ac:	e59f104c 	ldr	r1, [pc, #76]	; 40014200 <CyU3PLppThreadEntry+0x16c>
400141b0:	e5910008 	ldr	r0, [r1, #8]
400141b4:	e12fff30 	blx	r0
400141b8:	e3a00011 	mov	r0, #17
400141bc:	eb003779 	bl	40021fa8 <CyU3PVicEnableInt>
400141c0:	e59d001c 	ldr	r0, [sp, #28]
400141c4:	e3100040 	tst	r0, #64	; 0x40
400141c8:	0a000008 	beq	400141f0 <CyU3PLppThreadEntry+0x15c>
400141cc:	e59f002c 	ldr	r0, [pc, #44]	; 40014200 <CyU3PLppThreadEntry+0x16c>
400141d0:	e590000c 	ldr	r0, [r0, #12]
400141d4:	e3500000 	cmp	r0, #0
400141d8:	0a000002 	beq	400141e8 <CyU3PLppThreadEntry+0x154>
400141dc:	e59f101c 	ldr	r1, [pc, #28]	; 40014200 <CyU3PLppThreadEntry+0x16c>
400141e0:	e591000c 	ldr	r0, [r1, #12]
400141e4:	e12fff30 	blx	r0
400141e8:	e3a00012 	mov	r0, #18
400141ec:	eb00376d 	bl	40021fa8 <CyU3PVicEnableInt>
400141f0:	eaffffaf 	b	400140b4 <CyU3PLppThreadEntry+0x20>
400141f4:	40030cb4 	.word	0x40030cb4
400141f8:	40031614 	.word	0x40031614
400141fc:	400316e4 	.word	0x400316e4
40014200:	40031600 	.word	0x40031600

Disassembly of section i.CyU3PUartSetClock:

40014204 <CyU3PUartSetClock>:
40014204:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014208:	e1a04000 	mov	r4, r0
4001420c:	e3a06000 	mov	r6, #0
40014210:	e59f00bc 	ldr	r0, [pc, #188]	; 400142d4 <CyU3PUartSetClock+0xd0>
40014214:	e5907000 	ldr	r7, [r0]
40014218:	e3540000 	cmp	r4, #0
4001421c:	1a000001 	bne	40014228 <CyU3PUartSetClock+0x24>
40014220:	e3a00040 	mov	r0, #64	; 0x40
40014224:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014228:	e3540f96 	cmp	r4, #600	; 0x258
4001422c:	2a000002 	bcs	4001423c <CyU3PUartSetClock+0x38>
40014230:	e59f009c 	ldr	r0, [pc, #156]	; 400142d4 <CyU3PUartSetClock+0xd0>
40014234:	e5900000 	ldr	r0, [r0]
40014238:	e1a07220 	lsr	r7, r0, #4
4001423c:	e1a01204 	lsl	r1, r4, #4
40014240:	e1a00107 	lsl	r0, r7, #2
40014244:	ebfff212 	bl	40010a94 <__aeabi_uidivmod>
40014248:	e1a05000 	mov	r5, r0
4001424c:	e3150003 	tst	r5, #3
40014250:	1a000001 	bne	4001425c <CyU3PUartSetClock+0x58>
40014254:	e1a05145 	asr	r5, r5, #2
40014258:	ea00000a 	b	40014288 <CyU3PUartSetClock+0x84>
4001425c:	e2050003 	and	r0, r5, #3
40014260:	e3500001 	cmp	r0, #1
40014264:	0a000002 	beq	40014274 <CyU3PUartSetClock+0x70>
40014268:	e2050003 	and	r0, r5, #3
4001426c:	e3500002 	cmp	r0, #2
40014270:	1a000002 	bne	40014280 <CyU3PUartSetClock+0x7c>
40014274:	e1a05145 	asr	r5, r5, #2
40014278:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001427c:	ea000001 	b	40014288 <CyU3PUartSetClock+0x84>
40014280:	e3a00001 	mov	r0, #1
40014284:	e0805145 	add	r5, r0, r5, asr #2
40014288:	e2455001 	sub	r5, r5, #1
4001428c:	e3550001 	cmp	r5, #1
40014290:	ba000001 	blt	4001429c <CyU3PUartSetClock+0x98>
40014294:	e3550801 	cmp	r5, #65536	; 0x10000
40014298:	ba000001 	blt	400142a4 <CyU3PUartSetClock+0xa0>
4001429c:	e3a00040 	mov	r0, #64	; 0x40
400142a0:	eaffffdf 	b	40014224 <CyU3PUartSetClock+0x20>
400142a4:	e3540f96 	cmp	r4, #600	; 0x258
400142a8:	2a000002 	bcs	400142b8 <CyU3PUartSetClock+0xb4>
400142ac:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400142b0:	e1866000 	orr	r6, r6, r0
400142b4:	ea000002 	b	400142c4 <CyU3PUartSetClock+0xc0>
400142b8:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400142bc:	e3800806 	orr	r0, r0, #393216	; 0x60000
400142c0:	e1866000 	orr	r6, r6, r0
400142c4:	e59f000c 	ldr	r0, [pc, #12]	; 400142d8 <CyU3PUartSetClock+0xd4>
400142c8:	e5806024 	str	r6, [r0, #36]	; 0x24
400142cc:	e3a00000 	mov	r0, #0
400142d0:	eaffffd3 	b	40014224 <CyU3PUartSetClock+0x20>
400142d4:	40030c6c 	.word	0x40030c6c
400142d8:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

400142dc <CyU3UpdateLppActiveInfo>:
400142dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400142e0:	e1a04000 	mov	r4, r0
400142e4:	e1a05001 	mov	r5, r1
400142e8:	e1a06002 	mov	r6, r2
400142ec:	e3a00001 	mov	r0, #1
400142f0:	e1a00410 	lsl	r0, r0, r4
400142f4:	e20070ff 	and	r7, r0, #255	; 0xff
400142f8:	e284000f 	add	r0, r4, #15
400142fc:	e20080ff 	and	r8, r0, #255	; 0xff
40014300:	e59f0050 	ldr	r0, [pc, #80]	; 40014358 <CyU3UpdateLppActiveInfo+0x7c>
40014304:	e7806104 	str	r6, [r0, r4, lsl #2]
40014308:	e3550000 	cmp	r5, #0
4001430c:	0a000009 	beq	40014338 <CyU3UpdateLppActiveInfo+0x5c>
40014310:	e3560000 	cmp	r6, #0
40014314:	0a000001 	beq	40014320 <CyU3UpdateLppActiveInfo+0x44>
40014318:	e1a00008 	mov	r0, r8
4001431c:	eb003721 	bl	40021fa8 <CyU3PVicEnableInt>
40014320:	e59f0034 	ldr	r0, [pc, #52]	; 4001435c <CyU3UpdateLppActiveInfo+0x80>
40014324:	e5d00000 	ldrb	r0, [r0]
40014328:	e1800007 	orr	r0, r0, r7
4001432c:	e59f1028 	ldr	r1, [pc, #40]	; 4001435c <CyU3UpdateLppActiveInfo+0x80>
40014330:	e5c10000 	strb	r0, [r1]
40014334:	ea000006 	b	40014354 <CyU3UpdateLppActiveInfo+0x78>
40014338:	e59f001c 	ldr	r0, [pc, #28]	; 4001435c <CyU3UpdateLppActiveInfo+0x80>
4001433c:	e5d00000 	ldrb	r0, [r0]
40014340:	e1c00007 	bic	r0, r0, r7
40014344:	e59f1010 	ldr	r1, [pc, #16]	; 4001435c <CyU3UpdateLppActiveInfo+0x80>
40014348:	e5c10000 	strb	r0, [r1]
4001434c:	e1a00008 	mov	r0, r8
40014350:	eb00370f 	bl	40021f94 <CyU3PVicDisableInt>
40014354:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014358:	40031600 	.word	0x40031600
4001435c:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevClearSwInterrupt:

40014360 <CyFx3DevClearSwInterrupt>:
40014360:	e59f000c 	ldr	r0, [pc, #12]	; 40014374 <CyFx3DevClearSwInterrupt+0x14>
40014364:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
40014368:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
4001436c:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014370:	e12fff1e 	bx	lr
40014374:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

40014378 <CyFx3DevIOConfigure>:
40014378:	e92d4030 	push	{r4, r5, lr}
4001437c:	e1b04000 	movs	r4, r0
40014380:	e24dd024 	sub	sp, sp, #36	; 0x24
40014384:	0a000045 	beq	400144a0 <CyFx3DevIOConfigure+0x128>
40014388:	eb00017b 	bl	4001497c <CyFx3DevIsGpif32Supported>
4001438c:	e3500000 	cmp	r0, #0
40014390:	e3a05000 	mov	r5, #0
40014394:	05845000 	streq	r5, [r4]
40014398:	eb0001ae 	bl	40014a58 <CyFx3DevIsSib0Supported>
4001439c:	e3500000 	cmp	r0, #0
400143a0:	05c45014 	strbeq	r5, [r4, #20]
400143a4:	eb0001b5 	bl	40014a80 <CyFx3DevIsSib1Supported>
400143a8:	e3500000 	cmp	r0, #0
400143ac:	05c45015 	strbeq	r5, [r4, #21]
400143b0:	eb000194 	bl	40014a08 <CyFx3DevIsI2sSupported>
400143b4:	e3500000 	cmp	r0, #0
400143b8:	1a000002 	bne	400143c8 <CyFx3DevIOConfigure+0x50>
400143bc:	e594000c 	ldr	r0, [r4, #12]
400143c0:	e3500000 	cmp	r0, #0
400143c4:	1a000035 	bne	400144a0 <CyFx3DevIOConfigure+0x128>
400143c8:	e5940000 	ldr	r0, [r4]
400143cc:	e3500000 	cmp	r0, #0
400143d0:	0a000009 	beq	400143fc <CyFx3DevIOConfigure+0x84>
400143d4:	e5d40016 	ldrb	r0, [r4, #22]
400143d8:	e3500000 	cmp	r0, #0
400143dc:	05d40014 	ldrbeq	r0, [r4, #20]
400143e0:	03500000 	cmpeq	r0, #0
400143e4:	05d40015 	ldrbeq	r0, [r4, #21]
400143e8:	03500000 	cmpeq	r0, #0
400143ec:	1a00002b 	bne	400144a0 <CyFx3DevIOConfigure+0x128>
400143f0:	e3a00002 	mov	r0, #2
400143f4:	e5cd0000 	strb	r0, [sp]
400143f8:	ea000022 	b	40014488 <CyFx3DevIOConfigure+0x110>
400143fc:	e5d40014 	ldrb	r0, [r4, #20]
40014400:	e3a02003 	mov	r2, #3
40014404:	e3a03001 	mov	r3, #1
40014408:	e3500000 	cmp	r0, #0
4001440c:	05cd2000 	strbeq	r2, [sp]
40014410:	0a000004 	beq	40014428 <CyFx3DevIOConfigure+0xb0>
40014414:	e3500001 	cmp	r0, #1
40014418:	05cd3000 	strbeq	r3, [sp]
4001441c:	0a000001 	beq	40014428 <CyFx3DevIOConfigure+0xb0>
40014420:	e3500002 	cmp	r0, #2
40014424:	05cd5000 	strbeq	r5, [sp]
40014428:	e5d41015 	ldrb	r1, [r4, #21]
4001442c:	e5d40016 	ldrb	r0, [r4, #22]
40014430:	e3510002 	cmp	r1, #2
40014434:	1a000009 	bne	40014460 <CyFx3DevIOConfigure+0xe8>
40014438:	e3500004 	cmp	r0, #4
4001443c:	05940004 	ldreq	r0, [r4, #4]
40014440:	03500000 	cmpeq	r0, #0
40014444:	05940010 	ldreq	r0, [r4, #16]
40014448:	03500000 	cmpeq	r0, #0
4001444c:	0594000c 	ldreq	r0, [r4, #12]
40014450:	03500000 	cmpeq	r0, #0
40014454:	05cd5001 	strbeq	r5, [sp, #1]
40014458:	0a000013 	beq	400144ac <CyFx3DevIOConfigure+0x134>
4001445c:	ea00000f 	b	400144a0 <CyFx3DevIOConfigure+0x128>
40014460:	e3500000 	cmp	r0, #0
40014464:	0a000009 	beq	40014490 <CyFx3DevIOConfigure+0x118>
40014468:	e3500001 	cmp	r0, #1
4001446c:	13500002 	cmpne	r0, #2
40014470:	13500003 	cmpne	r0, #3
40014474:	1a000009 	bne	400144a0 <CyFx3DevIOConfigure+0x128>
40014478:	e3510001 	cmp	r1, #1
4001447c:	05cd3001 	strbeq	r3, [sp, #1]
40014480:	0a000009 	beq	400144ac <CyFx3DevIOConfigure+0x134>
40014484:	e3a00004 	mov	r0, #4
40014488:	e5cd0001 	strb	r0, [sp, #1]
4001448c:	ea000006 	b	400144ac <CyFx3DevIOConfigure+0x134>
40014490:	e5cd2001 	strb	r2, [sp, #1]
40014494:	e5d40015 	ldrb	r0, [r4, #21]
40014498:	e3500000 	cmp	r0, #0
4001449c:	0a000002 	beq	400144ac <CyFx3DevIOConfigure+0x134>
400144a0:	e3a00000 	mov	r0, #0
400144a4:	e28dd024 	add	sp, sp, #36	; 0x24
400144a8:	e8bd8030 	pop	{r4, r5, pc}
400144ac:	e5940004 	ldr	r0, [r4, #4]
400144b0:	e58d0004 	str	r0, [sp, #4]
400144b4:	e594000c 	ldr	r0, [r4, #12]
400144b8:	e58d000c 	str	r0, [sp, #12]
400144bc:	e5940010 	ldr	r0, [r4, #16]
400144c0:	e58d0010 	str	r0, [sp, #16]
400144c4:	e5940008 	ldr	r0, [r4, #8]
400144c8:	e58d0008 	str	r0, [sp, #8]
400144cc:	e5940018 	ldr	r0, [r4, #24]
400144d0:	e58d0014 	str	r0, [sp, #20]
400144d4:	e594001c 	ldr	r0, [r4, #28]
400144d8:	e58d0018 	str	r0, [sp, #24]
400144dc:	e5940020 	ldr	r0, [r4, #32]
400144e0:	e58d001c 	str	r0, [sp, #28]
400144e4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
400144e8:	e58d0020 	str	r0, [sp, #32]
400144ec:	e1a0000d 	mov	r0, sp
400144f0:	eb000054 	bl	40014648 <CyFx3DevIOSetConfig>
400144f4:	eaffffea 	b	400144a4 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

400144f8 <CyFx3DevIOIsGpio>:
400144f8:	e350003d 	cmp	r0, #61	; 0x3d
400144fc:	e3a02000 	mov	r2, #0
40014500:	23a00000 	movcs	r0, #0
40014504:	212fff1e 	bxcs	lr
40014508:	e3500020 	cmp	r0, #32
4001450c:	83a02001 	movhi	r2, #1
40014510:	82400020 	subhi	r0, r0, #32
40014514:	e59fc018 	ldr	ip, [pc, #24]	; 40014534 <CyFx3DevIOIsGpio+0x3c>
40014518:	e3510000 	cmp	r1, #0
4001451c:	e08c1102 	add	r1, ip, r2, lsl #2
40014520:	0591101c 	ldreq	r1, [r1, #28]
40014524:	15911014 	ldrne	r1, [r1, #20]
40014528:	e3a03001 	mov	r3, #1
4001452c:	e0010013 	and	r0, r1, r3, lsl r0
40014530:	e12fff1e 	bx	lr
40014534:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

40014538 <CyFx3DevIOIsI2cConfigured>:
40014538:	e59f0004 	ldr	r0, [pc, #4]	; 40014544 <CyFx3DevIOIsI2cConfigured+0xc>
4001453c:	e5900008 	ldr	r0, [r0, #8]
40014540:	e12fff1e 	bx	lr
40014544:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

40014548 <CyFx3DevIOIsI2sConfigured>:
40014548:	e59f0004 	ldr	r0, [pc, #4]	; 40014554 <CyFx3DevIOIsI2sConfigured+0xc>
4001454c:	e590000c 	ldr	r0, [r0, #12]
40014550:	e12fff1e 	bx	lr
40014554:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

40014558 <CyFx3DevIOIsSpiConfigured>:
40014558:	e59f0004 	ldr	r0, [pc, #4]	; 40014564 <CyFx3DevIOIsSpiConfigured+0xc>
4001455c:	e5900010 	ldr	r0, [r0, #16]
40014560:	e12fff1e 	bx	lr
40014564:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsUartConfigured:

40014568 <CyFx3DevIOIsUartConfigured>:
40014568:	e59f0004 	ldr	r0, [pc, #4]	; 40014574 <CyFx3DevIOIsUartConfigured+0xc>
4001456c:	e5900004 	ldr	r0, [r0, #4]
40014570:	e12fff1e 	bx	lr
40014574:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOSelectGpio:

40014578 <CyFx3DevIOSelectGpio>:
40014578:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001457c:	e350003d 	cmp	r0, #61	; 0x3d
40014580:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
40014584:	e3a08001 	mov	r8, #1
40014588:	e59f30b0 	ldr	r3, [pc, #176]	; 40014640 <CyFx3DevIOSelectGpio+0xc8>
4001458c:	e1a0c018 	lsl	ip, r8, r0
40014590:	e2837014 	add	r7, r3, #20
40014594:	e89700d0 	ldm	r7, {r4, r6, r7}
40014598:	e5935020 	ldr	r5, [r3, #32]
4001459c:	e3510000 	cmp	r1, #0
400145a0:	e240e020 	sub	lr, r0, #32
400145a4:	0a00000f 	beq	400145e8 <CyFx3DevIOSelectGpio+0x70>
400145a8:	e3500020 	cmp	r0, #32
400145ac:	2a000005 	bcs	400145c8 <CyFx3DevIOSelectGpio+0x50>
400145b0:	e3520000 	cmp	r2, #0
400145b4:	0187000c 	orreq	r0, r7, ip
400145b8:	0a00000f 	beq	400145fc <CyFx3DevIOSelectGpio+0x84>
400145bc:	e184000c 	orr	r0, r4, ip
400145c0:	e5830014 	str	r0, [r3, #20]
400145c4:	ea000013 	b	40014618 <CyFx3DevIOSelectGpio+0xa0>
400145c8:	e3520000 	cmp	r2, #0
400145cc:	e20e00ff 	and	r0, lr, #255	; 0xff
400145d0:	e1a00018 	lsl	r0, r8, r0
400145d4:	01800005 	orreq	r0, r0, r5
400145d8:	0a00000d 	beq	40014614 <CyFx3DevIOSelectGpio+0x9c>
400145dc:	e1800006 	orr	r0, r0, r6
400145e0:	e5830018 	str	r0, [r3, #24]
400145e4:	ea00000b 	b	40014618 <CyFx3DevIOSelectGpio+0xa0>
400145e8:	e3500020 	cmp	r0, #32
400145ec:	2a000004 	bcs	40014604 <CyFx3DevIOSelectGpio+0x8c>
400145f0:	e1c4000c 	bic	r0, r4, ip
400145f4:	e5830014 	str	r0, [r3, #20]
400145f8:	e1c7000c 	bic	r0, r7, ip
400145fc:	e583001c 	str	r0, [r3, #28]
40014600:	ea000004 	b	40014618 <CyFx3DevIOSelectGpio+0xa0>
40014604:	e1a00e18 	lsl	r0, r8, lr
40014608:	e1c61000 	bic	r1, r6, r0
4001460c:	e1c50000 	bic	r0, r5, r0
40014610:	e5831018 	str	r1, [r3, #24]
40014614:	e5830020 	str	r0, [r3, #32]
40014618:	e5931014 	ldr	r1, [r3, #20]
4001461c:	e59f0020 	ldr	r0, [pc, #32]	; 40014644 <CyFx3DevIOSelectGpio+0xcc>
40014620:	e580100c 	str	r1, [r0, #12]
40014624:	e5931018 	ldr	r1, [r3, #24]
40014628:	e5801010 	str	r1, [r0, #16]
4001462c:	e593101c 	ldr	r1, [r3, #28]
40014630:	e5801014 	str	r1, [r0, #20]
40014634:	e5931020 	ldr	r1, [r3, #32]
40014638:	e5801018 	str	r1, [r0, #24]
4001463c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014640:	40030ccc 	.word	0x40030ccc
40014644:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

40014648 <CyFx3DevIOSetConfig>:
40014648:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001464c:	e59f8208 	ldr	r8, [pc, #520]	; 4001485c <CyFx3DevIOSetConfig+0x214>
40014650:	e1a05000 	mov	r5, r0
40014654:	e5980008 	ldr	r0, [r8, #8]
40014658:	e59f7200 	ldr	r7, [pc, #512]	; 40014860 <CyFx3DevIOSetConfig+0x218>
4001465c:	e2006002 	and	r6, r0, #2
40014660:	e5d50000 	ldrb	r0, [r5]
40014664:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
40014668:	e3500000 	cmp	r0, #0
4001466c:	01c44944 	biceq	r4, r4, r4, asr #18
40014670:	0a000008 	beq	40014698 <CyFx3DevIOSetConfig+0x50>
40014674:	e3500001 	cmp	r0, #1
40014678:	059f41e4 	ldreq	r4, [pc, #484]	; 40014864 <CyFx3DevIOSetConfig+0x21c>
4001467c:	0a000005 	beq	40014698 <CyFx3DevIOSetConfig+0x50>
40014680:	e3500002 	cmp	r0, #2
40014684:	059f41dc 	ldreq	r4, [pc, #476]	; 40014868 <CyFx3DevIOSetConfig+0x220>
40014688:	0a000001 	beq	40014694 <CyFx3DevIOSetConfig+0x4c>
4001468c:	e3500003 	cmp	r0, #3
40014690:	1a000058 	bne	400147f8 <CyFx3DevIOSetConfig+0x1b0>
40014694:	e3866010 	orr	r6, r6, #16
40014698:	e5d50001 	ldrb	r0, [r5, #1]
4001469c:	e3500005 	cmp	r0, #5
400146a0:	308ff100 	addcc	pc, pc, r0, lsl #2
400146a4:	ea000053 	b	400147f8 <CyFx3DevIOSetConfig+0x1b0>
400146a8:	ea000003 	b	400146bc <CyFx3DevIOSetConfig+0x74>
400146ac:	ea000005 	b	400146c8 <CyFx3DevIOSetConfig+0x80>
400146b0:	ea000021 	b	4001473c <CyFx3DevIOSetConfig+0xf4>
400146b4:	ea00002c 	b	4001476c <CyFx3DevIOSetConfig+0x124>
400146b8:	ea000002 	b	400146c8 <CyFx3DevIOSetConfig+0x80>
400146bc:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
400146c0:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
400146c4:	ea000032 	b	40014794 <CyFx3DevIOSetConfig+0x14c>
400146c8:	e3500001 	cmp	r0, #1
400146cc:	e5950004 	ldr	r0, [r5, #4]
400146d0:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
400146d4:	e3500000 	cmp	r0, #0
400146d8:	1a000006 	bne	400146f8 <CyFx3DevIOSetConfig+0xb0>
400146dc:	e5950010 	ldr	r0, [r5, #16]
400146e0:	e3500000 	cmp	r0, #0
400146e4:	1a00000b 	bne	40014718 <CyFx3DevIOSetConfig+0xd0>
400146e8:	e595000c 	ldr	r0, [r5, #12]
400146ec:	e3500000 	cmp	r0, #0
400146f0:	1a00000e 	bne	40014730 <CyFx3DevIOSetConfig+0xe8>
400146f4:	ea000005 	b	40014710 <CyFx3DevIOSetConfig+0xc8>
400146f8:	e595000c 	ldr	r0, [r5, #12]
400146fc:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014700:	e3500000 	cmp	r0, #0
40014704:	05950010 	ldreq	r0, [r5, #16]
40014708:	03500000 	cmpeq	r0, #0
4001470c:	1a000039 	bne	400147f8 <CyFx3DevIOSetConfig+0x1b0>
40014710:	e3866c01 	orr	r6, r6, #256	; 0x100
40014714:	ea00001e 	b	40014794 <CyFx3DevIOSetConfig+0x14c>
40014718:	e595000c 	ldr	r0, [r5, #12]
4001471c:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014720:	e3500000 	cmp	r0, #0
40014724:	1a000033 	bne	400147f8 <CyFx3DevIOSetConfig+0x1b0>
40014728:	e3866c02 	orr	r6, r6, #512	; 0x200
4001472c:	ea000018 	b	40014794 <CyFx3DevIOSetConfig+0x14c>
40014730:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
40014734:	e3866c03 	orr	r6, r6, #768	; 0x300
40014738:	ea000015 	b	40014794 <CyFx3DevIOSetConfig+0x14c>
4001473c:	e5950010 	ldr	r0, [r5, #16]
40014740:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
40014744:	e3500000 	cmp	r0, #0
40014748:	1a00002a 	bne	400147f8 <CyFx3DevIOSetConfig+0x1b0>
4001474c:	e5950004 	ldr	r0, [r5, #4]
40014750:	e3866c05 	orr	r6, r6, #1280	; 0x500
40014754:	e3500000 	cmp	r0, #0
40014758:	e595000c 	ldr	r0, [r5, #12]
4001475c:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014760:	e3500000 	cmp	r0, #0
40014764:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014768:	ea000009 	b	40014794 <CyFx3DevIOSetConfig+0x14c>
4001476c:	e5950004 	ldr	r0, [r5, #4]
40014770:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014774:	e3500000 	cmp	r0, #0
40014778:	e5950010 	ldr	r0, [r5, #16]
4001477c:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014780:	e3500000 	cmp	r0, #0
40014784:	e595000c 	ldr	r0, [r5, #12]
40014788:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
4001478c:	e3500000 	cmp	r0, #0
40014790:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014794:	e5950008 	ldr	r0, [r5, #8]
40014798:	e5959014 	ldr	r9, [r5, #20]
4001479c:	e3500000 	cmp	r0, #0
400147a0:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
400147a4:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
400147a8:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
400147ac:	05950018 	ldreq	r0, [r5, #24]
400147b0:	01d00004 	bicseq	r0, r0, r4
400147b4:	0595e01c 	ldreq	lr, [r5, #28]
400147b8:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
400147bc:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
400147c0:	0595c020 	ldreq	ip, [r5, #32]
400147c4:	01dc0004 	bicseq	r0, ip, r4
400147c8:	1a00000a 	bne	400147f8 <CyFx3DevIOSetConfig+0x1b0>
400147cc:	e59f0098 	ldr	r0, [pc, #152]	; 4001486c <CyFx3DevIOSetConfig+0x224>
400147d0:	e3a01000 	mov	r1, #0
400147d4:	e01e2000 	ands	r2, lr, r0
400147d8:	000c2000 	andeq	r2, ip, r0
400147dc:	0a000001 	beq	400147e8 <CyFx3DevIOSetConfig+0x1a0>
400147e0:	e11c0000 	tst	ip, r0
400147e4:	1a000003 	bne	400147f8 <CyFx3DevIOSetConfig+0x1b0>
400147e8:	e2523001 	subs	r3, r2, #1
400147ec:	13a03001 	movne	r3, #1
400147f0:	e1120003 	tst	r2, r3
400147f4:	0a000001 	beq	40014800 <CyFx3DevIOSetConfig+0x1b8>
400147f8:	e3a00000 	mov	r0, #0
400147fc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014800:	e2811001 	add	r1, r1, #1
40014804:	e3510008 	cmp	r1, #8
40014808:	e1a00080 	lsl	r0, r0, #1
4001480c:	3afffff0 	bcc	400147d4 <CyFx3DevIOSetConfig+0x18c>
40014810:	e588900c 	str	r9, [r8, #12]
40014814:	e5950018 	ldr	r0, [r5, #24]
40014818:	e5880010 	str	r0, [r8, #16]
4001481c:	e595001c 	ldr	r0, [r5, #28]
40014820:	e5880014 	str	r0, [r8, #20]
40014824:	e5950020 	ldr	r0, [r5, #32]
40014828:	e5880018 	str	r0, [r8, #24]
4001482c:	e3a00001 	mov	r0, #1
40014830:	eb0000a6 	bl	40014ad0 <CyFx3BusyWait>
40014834:	e5886008 	str	r6, [r8, #8]
40014838:	e59f0030 	ldr	r0, [pc, #48]	; 40014870 <CyFx3DevIOSetConfig+0x228>
4001483c:	e3a02024 	mov	r2, #36	; 0x24
40014840:	e1a01005 	mov	r1, r5
40014844:	ebfffb98 	bl	400136ac <__aeabi_memcpy4>
40014848:	e59f0024 	ldr	r0, [pc, #36]	; 40014874 <CyFx3DevIOSetConfig+0x22c>
4001484c:	e5804004 	str	r4, [r0, #4]
40014850:	e5807000 	str	r7, [r0]
40014854:	e3a00001 	mov	r0, #1
40014858:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001485c:	e0051000 	.word	0xe0051000
40014860:	3fe00000 	.word	0x3fe00000
40014864:	1ffff9e0 	.word	0x1ffff9e0
40014868:	1fffe000 	.word	0x1fffe000
4001486c:	01010101 	.word	0x01010101
40014870:	40030ccc 	.word	0x40030ccc
40014874:	40030cc4 	.word	0x40030cc4

Disassembly of section i.CyFx3DevIdentifyPart:

40014878 <CyFx3DevIdentifyPart>:
40014878:	e59f0078 	ldr	r0, [pc, #120]	; 400148f8 <CyFx3DevIdentifyPart+0x80>
4001487c:	e5901008 	ldr	r1, [r0, #8]
40014880:	e59f2074 	ldr	r2, [pc, #116]	; 400148fc <CyFx3DevIdentifyPart+0x84>
40014884:	e1a01221 	lsr	r1, r1, #4
40014888:	e5923004 	ldr	r3, [r2, #4]
4001488c:	e3530000 	cmp	r3, #0
40014890:	15d20000 	ldrbne	r0, [r2]
40014894:	112fff1e 	bxne	lr
40014898:	e5900004 	ldr	r0, [r0, #4]
4001489c:	e3100040 	tst	r0, #64	; 0x40
400148a0:	e59f2058 	ldr	r2, [pc, #88]	; 40014900 <CyFx3DevIdentifyPart+0x88>
400148a4:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
400148a8:	e3a00000 	mov	r0, #0
400148ac:	e7923180 	ldr	r3, [r2, r0, lsl #3]
400148b0:	e1530001 	cmp	r3, r1
400148b4:	12800001 	addne	r0, r0, #1
400148b8:	120000ff 	andne	r0, r0, #255	; 0xff
400148bc:	1350001b 	cmpne	r0, #27
400148c0:	3afffff9 	bcc	400148ac <CyFx3DevIdentifyPart+0x34>
400148c4:	e350001b 	cmp	r0, #27
400148c8:	03a00003 	moveq	r0, #3
400148cc:	0a000000 	beq	400148d4 <CyFx3DevIdentifyPart+0x5c>
400148d0:	2a000003 	bcs	400148e4 <CyFx3DevIdentifyPart+0x6c>
400148d4:	e0821180 	add	r1, r2, r0, lsl #3
400148d8:	e5911004 	ldr	r1, [r1, #4]
400148dc:	e3110004 	tst	r1, #4
400148e0:	112fff1e 	bxne	lr
400148e4:	e59f1018 	ldr	r1, [pc, #24]	; 40014904 <CyFx3DevIdentifyPart+0x8c>
400148e8:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
400148ec:	e3822004 	orr	r2, r2, #4
400148f0:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
400148f4:	e12fff1e 	bx	lr
400148f8:	e0055000 	.word	0xe0055000
400148fc:	40030cb8 	.word	0x40030cb8
40014900:	40011cac 	.word	0x40011cac
40014904:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014908 <CyFx3DevInitPageTables>:
40014908:	e92d4030 	push	{r4, r5, lr}
4001490c:	e59f0058 	ldr	r0, [pc, #88]	; 4001496c <CyFx3DevInitPageTables+0x64>
40014910:	e3a04000 	mov	r4, #0
40014914:	e59f504c 	ldr	r5, [pc, #76]	; 40014968 <CyFx3DevInitPageTables+0x60>
40014918:	e5804004 	str	r4, [r0, #4]
4001491c:	ebffffd5 	bl	40014878 <CyFx3DevIdentifyPart>
40014920:	e59f1048 	ldr	r1, [pc, #72]	; 40014970 <CyFx3DevInitPageTables+0x68>
40014924:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014928:	e5801000 	str	r1, [r0]
4001492c:	e2811201 	add	r1, r1, #268435456	; 0x10000000
40014930:	e5801008 	str	r1, [r0, #8]
40014934:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014938:	e5801010 	str	r1, [r0, #16]
4001493c:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
40014940:	e5801018 	str	r1, [r0, #24]
40014944:	e59f1028 	ldr	r1, [pc, #40]	; 40014974 <CyFx3DevInitPageTables+0x6c>
40014948:	e5801020 	str	r1, [r0, #32]
4001494c:	e59f1024 	ldr	r1, [pc, #36]	; 40014978 <CyFx3DevInitPageTables+0x70>
40014950:	e580101c 	str	r1, [r0, #28]
40014954:	e5804024 	str	r4, [r0, #36]	; 0x24
40014958:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
4001495c:	e3a00003 	mov	r0, #3
40014960:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014964:	e8bd8030 	pop	{r4, r5, pc}
40014968:	e0058000 	.word	0xe0058000
4001496c:	40030cb8 	.word	0x40030cb8
40014970:	00000c12 	.word	0x00000c12
40014974:	fff00c12 	.word	0xfff00c12
40014978:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

4001497c <CyFx3DevIsGpif32Supported>:
4001497c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014980:	ebffffbc 	bl	40014878 <CyFx3DevIdentifyPart>
40014984:	e350001b 	cmp	r0, #27
40014988:	359f1010 	ldrcc	r1, [pc, #16]	; 400149a0 <CyFx3DevIsGpif32Supported+0x24>
4001498c:	30810180 	addcc	r0, r1, r0, lsl #3
40014990:	35900004 	ldrcc	r0, [r0, #4]
40014994:	32000010 	andcc	r0, r0, #16
40014998:	23a00000 	movcs	r0, #0
4001499c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149a0:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3DevIsGpifConfigurable:

400149a4 <CyFx3DevIsGpifConfigurable>:
400149a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149a8:	ebffffb2 	bl	40014878 <CyFx3DevIdentifyPart>
400149ac:	e350001b 	cmp	r0, #27
400149b0:	2a000006 	bcs	400149d0 <CyFx3DevIsGpifConfigurable+0x2c>
400149b4:	e59f101c 	ldr	r1, [pc, #28]	; 400149d8 <CyFx3DevIsGpifConfigurable+0x34>
400149b8:	e0810180 	add	r0, r1, r0, lsl #3
400149bc:	e5900004 	ldr	r0, [r0, #4]
400149c0:	e3100c0f 	tst	r0, #3840	; 0xf00
400149c4:	159f0010 	ldrne	r0, [pc, #16]	; 400149dc <CyFx3DevIsGpifConfigurable+0x38>
400149c8:	15900008 	ldrne	r0, [r0, #8]
400149cc:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
400149d0:	e3a00001 	mov	r0, #1
400149d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149d8:	40011cac 	.word	0x40011cac
400149dc:	40030cb8 	.word	0x40030cb8

Disassembly of section i.CyFx3DevIsGpifSupported:

400149e0 <CyFx3DevIsGpifSupported>:
400149e0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149e4:	ebffffa3 	bl	40014878 <CyFx3DevIdentifyPart>
400149e8:	e350001b 	cmp	r0, #27
400149ec:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a04 <CyFx3DevIsGpifSupported+0x24>
400149f0:	30810180 	addcc	r0, r1, r0, lsl #3
400149f4:	35900004 	ldrcc	r0, [r0, #4]
400149f8:	32000008 	andcc	r0, r0, #8
400149fc:	23a00000 	movcs	r0, #0
40014a00:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a04:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3DevIsI2sSupported:

40014a08 <CyFx3DevIsI2sSupported>:
40014a08:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a0c:	ebffff99 	bl	40014878 <CyFx3DevIdentifyPart>
40014a10:	e350001b 	cmp	r0, #27
40014a14:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a2c <CyFx3DevIsI2sSupported+0x24>
40014a18:	30810180 	addcc	r0, r1, r0, lsl #3
40014a1c:	35900004 	ldrcc	r0, [r0, #4]
40014a20:	32000080 	andcc	r0, r0, #128	; 0x80
40014a24:	23a00000 	movcs	r0, #0
40014a28:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a2c:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3DevIsOtgSupported:

40014a30 <CyFx3DevIsOtgSupported>:
40014a30:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a34:	ebffff8f 	bl	40014878 <CyFx3DevIdentifyPart>
40014a38:	e350001b 	cmp	r0, #27
40014a3c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a54 <CyFx3DevIsOtgSupported+0x24>
40014a40:	30810180 	addcc	r0, r1, r0, lsl #3
40014a44:	35900004 	ldrcc	r0, [r0, #4]
40014a48:	32000002 	andcc	r0, r0, #2
40014a4c:	23a00000 	movcs	r0, #0
40014a50:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a54:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3DevIsSib0Supported:

40014a58 <CyFx3DevIsSib0Supported>:
40014a58:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a5c:	ebffff85 	bl	40014878 <CyFx3DevIdentifyPart>
40014a60:	e350001b 	cmp	r0, #27
40014a64:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a7c <CyFx3DevIsSib0Supported+0x24>
40014a68:	30810180 	addcc	r0, r1, r0, lsl #3
40014a6c:	35900004 	ldrcc	r0, [r0, #4]
40014a70:	32000020 	andcc	r0, r0, #32
40014a74:	23a00000 	movcs	r0, #0
40014a78:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a7c:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3DevIsSib1Supported:

40014a80 <CyFx3DevIsSib1Supported>:
40014a80:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a84:	ebffff7b 	bl	40014878 <CyFx3DevIdentifyPart>
40014a88:	e350001b 	cmp	r0, #27
40014a8c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014aa4 <CyFx3DevIsSib1Supported+0x24>
40014a90:	30810180 	addcc	r0, r1, r0, lsl #3
40014a94:	35900004 	ldrcc	r0, [r0, #4]
40014a98:	32000040 	andcc	r0, r0, #64	; 0x40
40014a9c:	23a00000 	movcs	r0, #0
40014aa0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014aa4:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014aa8 <CyFx3DevIsUsb3Supported>:
40014aa8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014aac:	ebffff71 	bl	40014878 <CyFx3DevIdentifyPart>
40014ab0:	e350001b 	cmp	r0, #27
40014ab4:	359f1010 	ldrcc	r1, [pc, #16]	; 40014acc <CyFx3DevIsUsb3Supported+0x24>
40014ab8:	30810180 	addcc	r0, r1, r0, lsl #3
40014abc:	35900004 	ldrcc	r0, [r0, #4]
40014ac0:	32000001 	andcc	r0, r0, #1
40014ac4:	23a00000 	movcs	r0, #0
40014ac8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014acc:	40011cac 	.word	0x40011cac

Disassembly of section i.CyFx3BusyWait:

40014ad0 <CyFx3BusyWait>:
40014ad0:	ea000003 	b	40014ae4 <CyFx3BusyWait+0x14>
40014ad4:	e3a01000 	mov	r1, #0
40014ad8:	e2811001 	add	r1, r1, #1
40014adc:	e351002f 	cmp	r1, #47	; 0x2f
40014ae0:	3afffffc 	bcc	40014ad8 <CyFx3BusyWait+0x8>
40014ae4:	e1b01000 	movs	r1, r0
40014ae8:	e2400001 	sub	r0, r0, #1
40014aec:	e1a00800 	lsl	r0, r0, #16
40014af0:	e1a00820 	lsr	r0, r0, #16
40014af4:	1afffff6 	bne	40014ad4 <CyFx3BusyWait+0x4>
40014af8:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014afc <CyFx3PibDllEnable>:
40014afc:	e59f205c 	ldr	r2, [pc, #92]	; 40014b60 <CyFx3PibDllEnable+0x64>
40014b00:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014b04:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014b08:	e3c00001 	bic	r0, r0, #1
40014b0c:	e5820028 	str	r0, [r2, #40]	; 0x28
40014b10:	e3a00001 	mov	r0, #1
40014b14:	ebffffed 	bl	40014ad0 <CyFx3BusyWait>
40014b18:	e3a00003 	mov	r0, #3
40014b1c:	e5820028 	str	r0, [r2, #40]	; 0x28
40014b20:	e3a00001 	mov	r0, #1
40014b24:	ebffffe9 	bl	40014ad0 <CyFx3BusyWait>
40014b28:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014b2c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014b30:	e5820028 	str	r0, [r2, #40]	; 0x28
40014b34:	e3a00001 	mov	r0, #1
40014b38:	ebffffe4 	bl	40014ad0 <CyFx3BusyWait>
40014b3c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014b40:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014b44:	e5820028 	str	r0, [r2, #40]	; 0x28
40014b48:	e3a00001 	mov	r0, #1
40014b4c:	ebffffdf 	bl	40014ad0 <CyFx3BusyWait>
40014b50:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014b54:	e3100004 	tst	r0, #4
40014b58:	0afffffc 	beq	40014b50 <CyFx3PibDllEnable+0x54>
40014b5c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014b60:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014b64 <CyFx3PibGetDllStatus>:
40014b64:	e59f0008 	ldr	r0, [pc, #8]	; 40014b74 <CyFx3PibGetDllStatus+0x10>
40014b68:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014b6c:	e2000004 	and	r0, r0, #4
40014b70:	e12fff1e 	bx	lr
40014b74:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014b78 <CyFx3PibPowerOn>:
40014b78:	e92d4010 	push	{r4, lr}
40014b7c:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014b80:	ebffff96 	bl	400149e0 <CyFx3DevIsGpifSupported>
40014b84:	e3500000 	cmp	r0, #0
40014b88:	1a000002 	bne	40014b98 <CyFx3PibPowerOn+0x20>
40014b8c:	e4940004 	ldr	r0, [r4], #4
40014b90:	e3500000 	cmp	r0, #0
40014b94:	1afffffc 	bne	40014b8c <CyFx3PibPowerOn+0x14>
40014b98:	e59f2028 	ldr	r2, [pc, #40]	; 40014bc8 <CyFx3PibPowerOn+0x50>
40014b9c:	e3a00000 	mov	r0, #0
40014ba0:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014ba4:	e3a0000a 	mov	r0, #10
40014ba8:	ebffffc8 	bl	40014ad0 <CyFx3BusyWait>
40014bac:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014bb0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014bb4:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014bb8:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014bbc:	e3100001 	tst	r0, #1
40014bc0:	0afffffc 	beq	40014bb8 <CyFx3PibPowerOn+0x40>
40014bc4:	e8bd8010 	pop	{r4, pc}
40014bc8:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014bcc <CyU3PDmaSocketDisable>:
40014bcc:	e3a0c03f 	mov	ip, #63	; 0x3f
40014bd0:	e00c1440 	and	r1, ip, r0, asr #8
40014bd4:	e20030ff 	and	r3, r0, #255	; 0xff
40014bd8:	e59fc048 	ldr	ip, [pc, #72]	; 40014c28 <CyU3PDmaSocketDisable+0x5c>
40014bdc:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014be0:	e08cc383 	add	ip, ip, r3, lsl #7
40014be4:	e59c200c 	ldr	r2, [ip, #12]
40014be8:	e3120601 	tst	r2, #1048576	; 0x100000
40014bec:	1a000000 	bne	40014bf4 <CyU3PDmaSocketDisable+0x28>
40014bf0:	e12fff1e 	bx	lr
40014bf4:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014bf8:	e59fc028 	ldr	ip, [pc, #40]	; 40014c28 <CyU3PDmaSocketDisable+0x5c>
40014bfc:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014c00:	e08cc383 	add	ip, ip, r3, lsl #7
40014c04:	e58c200c 	str	r2, [ip, #12]
40014c08:	e1a00000 	nop			; (mov r0, r0)
40014c0c:	e59fc014 	ldr	ip, [pc, #20]	; 40014c28 <CyU3PDmaSocketDisable+0x5c>
40014c10:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014c14:	e08cc383 	add	ip, ip, r3, lsl #7
40014c18:	e59cc00c 	ldr	ip, [ip, #12]
40014c1c:	e31c0601 	tst	ip, #1048576	; 0x100000
40014c20:	1afffff9 	bne	40014c0c <CyU3PDmaSocketDisable+0x40>
40014c24:	eafffff1 	b	40014bf0 <CyU3PDmaSocketDisable+0x24>
40014c28:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014c2c <CyU3PDmaSocketGetConfig>:
40014c2c:	e1a02000 	mov	r2, r0
40014c30:	e3a0003f 	mov	r0, #63	; 0x3f
40014c34:	e0003442 	and	r3, r0, r2, asr #8
40014c38:	e202c0ff 	and	ip, r2, #255	; 0xff
40014c3c:	e3510000 	cmp	r1, #0
40014c40:	1a000001 	bne	40014c4c <CyU3PDmaSocketGetConfig+0x20>
40014c44:	e3a00040 	mov	r0, #64	; 0x40
40014c48:	e12fff1e 	bx	lr
40014c4c:	e59f0074 	ldr	r0, [pc, #116]	; 40014cc8 <CyU3PDmaSocketGetConfig+0x9c>
40014c50:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c54:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014c58:	e5810000 	str	r0, [r1]
40014c5c:	e59f0064 	ldr	r0, [pc, #100]	; 40014cc8 <CyU3PDmaSocketGetConfig+0x9c>
40014c60:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c64:	e080038c 	add	r0, r0, ip, lsl #7
40014c68:	e5900004 	ldr	r0, [r0, #4]
40014c6c:	e5810004 	str	r0, [r1, #4]
40014c70:	e59f0050 	ldr	r0, [pc, #80]	; 40014cc8 <CyU3PDmaSocketGetConfig+0x9c>
40014c74:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c78:	e080038c 	add	r0, r0, ip, lsl #7
40014c7c:	e5900008 	ldr	r0, [r0, #8]
40014c80:	e5810008 	str	r0, [r1, #8]
40014c84:	e59f003c 	ldr	r0, [pc, #60]	; 40014cc8 <CyU3PDmaSocketGetConfig+0x9c>
40014c88:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c8c:	e080038c 	add	r0, r0, ip, lsl #7
40014c90:	e590000c 	ldr	r0, [r0, #12]
40014c94:	e581000c 	str	r0, [r1, #12]
40014c98:	e59f0028 	ldr	r0, [pc, #40]	; 40014cc8 <CyU3PDmaSocketGetConfig+0x9c>
40014c9c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014ca0:	e080038c 	add	r0, r0, ip, lsl #7
40014ca4:	e5900010 	ldr	r0, [r0, #16]
40014ca8:	e5810010 	str	r0, [r1, #16]
40014cac:	e59f0014 	ldr	r0, [pc, #20]	; 40014cc8 <CyU3PDmaSocketGetConfig+0x9c>
40014cb0:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014cb4:	e080038c 	add	r0, r0, ip, lsl #7
40014cb8:	e5900014 	ldr	r0, [r0, #20]
40014cbc:	e5810014 	str	r0, [r1, #20]
40014cc0:	e3a00000 	mov	r0, #0
40014cc4:	eaffffdf 	b	40014c48 <CyU3PDmaSocketGetConfig+0x1c>
40014cc8:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014ccc <CyU3PDmaSocketIsValidConsumer>:
40014ccc:	e92d4010 	push	{r4, lr}
40014cd0:	e1a01000 	mov	r1, r0
40014cd4:	e3a0003f 	mov	r0, #63	; 0x3f
40014cd8:	e0002441 	and	r2, r0, r1, asr #8
40014cdc:	e20130ff 	and	r3, r1, #255	; 0xff
40014ce0:	e3a04000 	mov	r4, #0
40014ce4:	e3520000 	cmp	r2, #0
40014ce8:	0a000006 	beq	40014d08 <CyU3PDmaSocketIsValidConsumer+0x3c>
40014cec:	e3520001 	cmp	r2, #1
40014cf0:	0a000009 	beq	40014d1c <CyU3PDmaSocketIsValidConsumer+0x50>
40014cf4:	e3520002 	cmp	r2, #2
40014cf8:	0a00000c 	beq	40014d30 <CyU3PDmaSocketIsValidConsumer+0x64>
40014cfc:	e3520003 	cmp	r2, #3
40014d00:	1a000014 	bne	40014d58 <CyU3PDmaSocketIsValidConsumer+0x8c>
40014d04:	ea00000e 	b	40014d44 <CyU3PDmaSocketIsValidConsumer+0x78>
40014d08:	e1a00000 	nop			; (mov r0, r0)
40014d0c:	e3a0c000 	mov	ip, #0
40014d10:	e3a0e004 	mov	lr, #4
40014d14:	e59f4080 	ldr	r4, [pc, #128]	; 40014d9c <CyU3PDmaSocketIsValidConsumer+0xd0>
40014d18:	ea000011 	b	40014d64 <CyU3PDmaSocketIsValidConsumer+0x98>
40014d1c:	e1a00000 	nop			; (mov r0, r0)
40014d20:	e3a0c000 	mov	ip, #0
40014d24:	e3a0e00f 	mov	lr, #15
40014d28:	e59f4070 	ldr	r4, [pc, #112]	; 40014da0 <CyU3PDmaSocketIsValidConsumer+0xd4>
40014d2c:	ea00000c 	b	40014d64 <CyU3PDmaSocketIsValidConsumer+0x98>
40014d30:	e1a00000 	nop			; (mov r0, r0)
40014d34:	e3a0c000 	mov	ip, #0
40014d38:	e3a0e007 	mov	lr, #7
40014d3c:	e59f4060 	ldr	r4, [pc, #96]	; 40014da4 <CyU3PDmaSocketIsValidConsumer+0xd8>
40014d40:	ea000007 	b	40014d64 <CyU3PDmaSocketIsValidConsumer+0x98>
40014d44:	e1a00000 	nop			; (mov r0, r0)
40014d48:	e3a0c000 	mov	ip, #0
40014d4c:	e3a0e00f 	mov	lr, #15
40014d50:	e59f4050 	ldr	r4, [pc, #80]	; 40014da8 <CyU3PDmaSocketIsValidConsumer+0xdc>
40014d54:	ea000002 	b	40014d64 <CyU3PDmaSocketIsValidConsumer+0x98>
40014d58:	e1a00000 	nop			; (mov r0, r0)
40014d5c:	e3a00000 	mov	r0, #0
40014d60:	e8bd8010 	pop	{r4, pc}
40014d64:	e1a00000 	nop			; (mov r0, r0)
40014d68:	e5940000 	ldr	r0, [r4]
40014d6c:	e3100001 	tst	r0, #1
40014d70:	1a000001 	bne	40014d7c <CyU3PDmaSocketIsValidConsumer+0xb0>
40014d74:	e3a00000 	mov	r0, #0
40014d78:	eafffff8 	b	40014d60 <CyU3PDmaSocketIsValidConsumer+0x94>
40014d7c:	e153000c 	cmp	r3, ip
40014d80:	ba000003 	blt	40014d94 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014d84:	e153000e 	cmp	r3, lr
40014d88:	ca000001 	bgt	40014d94 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014d8c:	e3a00001 	mov	r0, #1
40014d90:	eafffff2 	b	40014d60 <CyU3PDmaSocketIsValidConsumer+0x94>
40014d94:	e3a00000 	mov	r0, #0
40014d98:	eafffff0 	b	40014d60 <CyU3PDmaSocketIsValidConsumer+0x94>
40014d9c:	e0007f04 	.word	0xe0007f04
40014da0:	e0017f04 	.word	0xe0017f04
40014da4:	e0027f04 	.word	0xe0027f04
40014da8:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014dac <CyU3PDmaSocketIsValidProducer>:
40014dac:	e92d4010 	push	{r4, lr}
40014db0:	e1a01000 	mov	r1, r0
40014db4:	e3a0003f 	mov	r0, #63	; 0x3f
40014db8:	e0002441 	and	r2, r0, r1, asr #8
40014dbc:	e20130ff 	and	r3, r1, #255	; 0xff
40014dc0:	e3a04000 	mov	r4, #0
40014dc4:	e3520000 	cmp	r2, #0
40014dc8:	0a000006 	beq	40014de8 <CyU3PDmaSocketIsValidProducer+0x3c>
40014dcc:	e3520001 	cmp	r2, #1
40014dd0:	0a000009 	beq	40014dfc <CyU3PDmaSocketIsValidProducer+0x50>
40014dd4:	e3520002 	cmp	r2, #2
40014dd8:	0a00000c 	beq	40014e10 <CyU3PDmaSocketIsValidProducer+0x64>
40014ddc:	e3520004 	cmp	r2, #4
40014de0:	1a000014 	bne	40014e38 <CyU3PDmaSocketIsValidProducer+0x8c>
40014de4:	ea00000e 	b	40014e24 <CyU3PDmaSocketIsValidProducer+0x78>
40014de8:	e1a00000 	nop			; (mov r0, r0)
40014dec:	e3a0c005 	mov	ip, #5
40014df0:	e3a0e007 	mov	lr, #7
40014df4:	e59f4080 	ldr	r4, [pc, #128]	; 40014e7c <CyU3PDmaSocketIsValidProducer+0xd0>
40014df8:	ea000011 	b	40014e44 <CyU3PDmaSocketIsValidProducer+0x98>
40014dfc:	e1a00000 	nop			; (mov r0, r0)
40014e00:	e3a0c000 	mov	ip, #0
40014e04:	e3a0e01f 	mov	lr, #31
40014e08:	e59f4070 	ldr	r4, [pc, #112]	; 40014e80 <CyU3PDmaSocketIsValidProducer+0xd4>
40014e0c:	ea00000c 	b	40014e44 <CyU3PDmaSocketIsValidProducer+0x98>
40014e10:	e1a00000 	nop			; (mov r0, r0)
40014e14:	e3a0c000 	mov	ip, #0
40014e18:	e3a0e007 	mov	lr, #7
40014e1c:	e59f4060 	ldr	r4, [pc, #96]	; 40014e84 <CyU3PDmaSocketIsValidProducer+0xd8>
40014e20:	ea000007 	b	40014e44 <CyU3PDmaSocketIsValidProducer+0x98>
40014e24:	e1a00000 	nop			; (mov r0, r0)
40014e28:	e3a0c000 	mov	ip, #0
40014e2c:	e3a0e00f 	mov	lr, #15
40014e30:	e59f4050 	ldr	r4, [pc, #80]	; 40014e88 <CyU3PDmaSocketIsValidProducer+0xdc>
40014e34:	ea000002 	b	40014e44 <CyU3PDmaSocketIsValidProducer+0x98>
40014e38:	e1a00000 	nop			; (mov r0, r0)
40014e3c:	e3a00000 	mov	r0, #0
40014e40:	e8bd8010 	pop	{r4, pc}
40014e44:	e1a00000 	nop			; (mov r0, r0)
40014e48:	e5940000 	ldr	r0, [r4]
40014e4c:	e3100001 	tst	r0, #1
40014e50:	1a000001 	bne	40014e5c <CyU3PDmaSocketIsValidProducer+0xb0>
40014e54:	e3a00000 	mov	r0, #0
40014e58:	eafffff8 	b	40014e40 <CyU3PDmaSocketIsValidProducer+0x94>
40014e5c:	e153000c 	cmp	r3, ip
40014e60:	ba000003 	blt	40014e74 <CyU3PDmaSocketIsValidProducer+0xc8>
40014e64:	e153000e 	cmp	r3, lr
40014e68:	ca000001 	bgt	40014e74 <CyU3PDmaSocketIsValidProducer+0xc8>
40014e6c:	e3a00001 	mov	r0, #1
40014e70:	eafffff2 	b	40014e40 <CyU3PDmaSocketIsValidProducer+0x94>
40014e74:	e3a00000 	mov	r0, #0
40014e78:	eafffff0 	b	40014e40 <CyU3PDmaSocketIsValidProducer+0x94>
40014e7c:	e0007f04 	.word	0xe0007f04
40014e80:	e0017f04 	.word	0xe0017f04
40014e84:	e0027f04 	.word	0xe0027f04
40014e88:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014e8c <CyU3PDmaSocketSendEvent>:
40014e8c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014e90:	e1a04000 	mov	r4, r0
40014e94:	e1a05001 	mov	r5, r1
40014e98:	e1a06002 	mov	r6, r2
40014e9c:	e3a0003f 	mov	r0, #63	; 0x3f
40014ea0:	e0007444 	and	r7, r0, r4, asr #8
40014ea4:	e20480ff 	and	r8, r4, #255	; 0xff
40014ea8:	e1a09005 	mov	r9, r5
40014eac:	e3560001 	cmp	r6, #1
40014eb0:	1a000000 	bne	40014eb8 <CyU3PDmaSocketSendEvent+0x2c>
40014eb4:	e3899801 	orr	r9, r9, #65536	; 0x10000
40014eb8:	e59f0010 	ldr	r0, [pc, #16]	; 40014ed0 <CyU3PDmaSocketSendEvent+0x44>
40014ebc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40014ec0:	e0800388 	add	r0, r0, r8, lsl #7
40014ec4:	e580907c 	str	r9, [r0, #124]	; 0x7c
40014ec8:	ebfff6e1 	bl	40012a54 <CyU3PSysBarrierSync>
40014ecc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014ed0:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketSetConfig:

40014ed4 <CyU3PDmaSocketSetConfig>:
40014ed4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014ed8:	e1a04000 	mov	r4, r0
40014edc:	e1a05001 	mov	r5, r1
40014ee0:	e3a0003f 	mov	r0, #63	; 0x3f
40014ee4:	e0006444 	and	r6, r0, r4, asr #8
40014ee8:	e20470ff 	and	r7, r4, #255	; 0xff
40014eec:	e3550000 	cmp	r5, #0
40014ef0:	1a000001 	bne	40014efc <CyU3PDmaSocketSetConfig+0x28>
40014ef4:	e3a00040 	mov	r0, #64	; 0x40
40014ef8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014efc:	e59f1078 	ldr	r1, [pc, #120]	; 40014f7c <CyU3PDmaSocketSetConfig+0xa8>
40014f00:	e5950000 	ldr	r0, [r5]
40014f04:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f08:	e7810387 	str	r0, [r1, r7, lsl #7]
40014f0c:	e59f1068 	ldr	r1, [pc, #104]	; 40014f7c <CyU3PDmaSocketSetConfig+0xa8>
40014f10:	e5950004 	ldr	r0, [r5, #4]
40014f14:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f18:	e0811387 	add	r1, r1, r7, lsl #7
40014f1c:	e5810004 	str	r0, [r1, #4]
40014f20:	e59f1054 	ldr	r1, [pc, #84]	; 40014f7c <CyU3PDmaSocketSetConfig+0xa8>
40014f24:	e5950008 	ldr	r0, [r5, #8]
40014f28:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f2c:	e0811387 	add	r1, r1, r7, lsl #7
40014f30:	e5810008 	str	r0, [r1, #8]
40014f34:	e59f1040 	ldr	r1, [pc, #64]	; 40014f7c <CyU3PDmaSocketSetConfig+0xa8>
40014f38:	e5950010 	ldr	r0, [r5, #16]
40014f3c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f40:	e0811387 	add	r1, r1, r7, lsl #7
40014f44:	e5810010 	str	r0, [r1, #16]
40014f48:	e59f102c 	ldr	r1, [pc, #44]	; 40014f7c <CyU3PDmaSocketSetConfig+0xa8>
40014f4c:	e5950014 	ldr	r0, [r5, #20]
40014f50:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f54:	e0811387 	add	r1, r1, r7, lsl #7
40014f58:	e5810014 	str	r0, [r1, #20]
40014f5c:	e59f1018 	ldr	r1, [pc, #24]	; 40014f7c <CyU3PDmaSocketSetConfig+0xa8>
40014f60:	e595000c 	ldr	r0, [r5, #12]
40014f64:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f68:	e0811387 	add	r1, r1, r7, lsl #7
40014f6c:	e581000c 	str	r0, [r1, #12]
40014f70:	ebfff6b7 	bl	40012a54 <CyU3PSysBarrierSync>
40014f74:	e3a00000 	mov	r0, #0
40014f78:	eaffffde 	b	40014ef8 <CyU3PDmaSocketSetConfig+0x24>
40014f7c:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40014f80 <CyU3PDmaSocketSetWrapUp>:
40014f80:	e3a0c03f 	mov	ip, #63	; 0x3f
40014f84:	e00c1440 	and	r1, ip, r0, asr #8
40014f88:	e20030ff 	and	r3, r0, #255	; 0xff
40014f8c:	e59fc02c 	ldr	ip, [pc, #44]	; 40014fc0 <CyU3PDmaSocketSetWrapUp+0x40>
40014f90:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f94:	e08cc383 	add	ip, ip, r3, lsl #7
40014f98:	e59c200c 	ldr	r2, [ip, #12]
40014f9c:	e3120601 	tst	r2, #1048576	; 0x100000
40014fa0:	1a000000 	bne	40014fa8 <CyU3PDmaSocketSetWrapUp+0x28>
40014fa4:	e12fff1e 	bx	lr
40014fa8:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40014fac:	e59fc00c 	ldr	ip, [pc, #12]	; 40014fc0 <CyU3PDmaSocketSetWrapUp+0x40>
40014fb0:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014fb4:	e08cc383 	add	ip, ip, r3, lsl #7
40014fb8:	e58c200c 	str	r2, [ip, #12]
40014fbc:	eafffff8 	b	40014fa4 <CyU3PDmaSocketSetWrapUp+0x24>
40014fc0:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40014fc4 <CyU3PDmaSocketUpdateStatus>:
40014fc4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014fc8:	e1a04000 	mov	r4, r0
40014fcc:	e1a05001 	mov	r5, r1
40014fd0:	e3a0003f 	mov	r0, #63	; 0x3f
40014fd4:	e0006444 	and	r6, r0, r4, asr #8
40014fd8:	e20470ff 	and	r7, r4, #255	; 0xff
40014fdc:	e3550000 	cmp	r5, #0
40014fe0:	1a000001 	bne	40014fec <CyU3PDmaSocketUpdateStatus+0x28>
40014fe4:	e3a00040 	mov	r0, #64	; 0x40
40014fe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014fec:	e59f1040 	ldr	r1, [pc, #64]	; 40015034 <CyU3PDmaSocketUpdateStatus+0x70>
40014ff0:	e5950010 	ldr	r0, [r5, #16]
40014ff4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ff8:	e0811387 	add	r1, r1, r7, lsl #7
40014ffc:	e5810010 	str	r0, [r1, #16]
40015000:	e59f102c 	ldr	r1, [pc, #44]	; 40015034 <CyU3PDmaSocketUpdateStatus+0x70>
40015004:	e5950014 	ldr	r0, [r5, #20]
40015008:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001500c:	e0811387 	add	r1, r1, r7, lsl #7
40015010:	e5810014 	str	r0, [r1, #20]
40015014:	e59f1018 	ldr	r1, [pc, #24]	; 40015034 <CyU3PDmaSocketUpdateStatus+0x70>
40015018:	e595000c 	ldr	r0, [r5, #12]
4001501c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015020:	e0811387 	add	r1, r1, r7, lsl #7
40015024:	e581000c 	str	r0, [r1, #12]
40015028:	ebfff689 	bl	40012a54 <CyU3PSysBarrierSync>
4001502c:	e3a00000 	mov	r0, #0
40015030:	eaffffec 	b	40014fe8 <CyU3PDmaSocketUpdateStatus+0x24>
40015034:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40015038 <CyU3PDmaUpdateSocketSuspendOption>:
40015038:	e92d4070 	push	{r4, r5, r6, lr}
4001503c:	e24dd018 	sub	sp, sp, #24
40015040:	e1a04000 	mov	r4, r0
40015044:	e1a06001 	mov	r6, r1
40015048:	e1a0100d 	mov	r1, sp
4001504c:	e1a00004 	mov	r0, r4
40015050:	ebfffef5 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40015054:	e59d000c 	ldr	r0, [sp, #12]
40015058:	e2000702 	and	r0, r0, #524288	; 0x80000
4001505c:	e1a059a0 	lsr	r5, r0, #19
40015060:	e3550001 	cmp	r5, #1
40015064:	1a000010 	bne	400150ac <CyU3PDmaUpdateSocketSuspendOption+0x74>
40015068:	e59d000c 	ldr	r0, [sp, #12]
4001506c:	e3100101 	tst	r0, #1073741824	; 0x40000000
40015070:	1a00000a 	bne	400150a0 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40015074:	e59d000c 	ldr	r0, [sp, #12]
40015078:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
4001507c:	e58d000c 	str	r0, [sp, #12]
40015080:	e3a00000 	mov	r0, #0
40015084:	e58d0010 	str	r0, [sp, #16]
40015088:	e1a0100d 	mov	r1, sp
4001508c:	e1a00004 	mov	r0, r4
40015090:	ebffffcb 	bl	40014fc4 <CyU3PDmaSocketUpdateStatus>
40015094:	e1a0100d 	mov	r1, sp
40015098:	e1a00004 	mov	r0, r4
4001509c:	ebfffee2 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400150a0:	e3a00000 	mov	r0, #0
400150a4:	e58d0010 	str	r0, [sp, #16]
400150a8:	ea000004 	b	400150c0 <CyU3PDmaUpdateSocketSuspendOption+0x88>
400150ac:	e59d000c 	ldr	r0, [sp, #12]
400150b0:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400150b4:	e58d000c 	str	r0, [sp, #12]
400150b8:	e3a00e12 	mov	r0, #288	; 0x120
400150bc:	e58d0010 	str	r0, [sp, #16]
400150c0:	e59d000c 	ldr	r0, [sp, #12]
400150c4:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
400150c8:	e58d000c 	str	r0, [sp, #12]
400150cc:	e59d0014 	ldr	r0, [sp, #20]
400150d0:	e3c00e12 	bic	r0, r0, #288	; 0x120
400150d4:	e58d0014 	str	r0, [sp, #20]
400150d8:	e3560000 	cmp	r6, #0
400150dc:	0a000006 	beq	400150fc <CyU3PDmaUpdateSocketSuspendOption+0xc4>
400150e0:	e3560001 	cmp	r6, #1
400150e4:	0a000006 	beq	40015104 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
400150e8:	e3560002 	cmp	r6, #2
400150ec:	0a00000e 	beq	4001512c <CyU3PDmaUpdateSocketSuspendOption+0xf4>
400150f0:	e3560003 	cmp	r6, #3
400150f4:	1a000020 	bne	4001517c <CyU3PDmaUpdateSocketSuspendOption+0x144>
400150f8:	ea000015 	b	40015154 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
400150fc:	e1a00000 	nop			; (mov r0, r0)
40015100:	ea00001f 	b	40015184 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015104:	e1a00000 	nop			; (mov r0, r0)
40015108:	e59d000c 	ldr	r0, [sp, #12]
4001510c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40015110:	e58d000c 	str	r0, [sp, #12]
40015114:	e3550000 	cmp	r5, #0
40015118:	1a000002 	bne	40015128 <CyU3PDmaUpdateSocketSuspendOption+0xf0>
4001511c:	e59d0014 	ldr	r0, [sp, #20]
40015120:	e3800020 	orr	r0, r0, #32
40015124:	e58d0014 	str	r0, [sp, #20]
40015128:	ea000015 	b	40015184 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
4001512c:	e1a00000 	nop			; (mov r0, r0)
40015130:	e3550000 	cmp	r5, #0
40015134:	1a000005 	bne	40015150 <CyU3PDmaUpdateSocketSuspendOption+0x118>
40015138:	e59d000c 	ldr	r0, [sp, #12]
4001513c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015140:	e58d000c 	str	r0, [sp, #12]
40015144:	e59d0014 	ldr	r0, [sp, #20]
40015148:	e3800020 	orr	r0, r0, #32
4001514c:	e58d0014 	str	r0, [sp, #20]
40015150:	ea00000b 	b	40015184 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015154:	e1a00000 	nop			; (mov r0, r0)
40015158:	e59d000c 	ldr	r0, [sp, #12]
4001515c:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40015160:	e58d000c 	str	r0, [sp, #12]
40015164:	e3550000 	cmp	r5, #0
40015168:	1a000002 	bne	40015178 <CyU3PDmaUpdateSocketSuspendOption+0x140>
4001516c:	e59d0014 	ldr	r0, [sp, #20]
40015170:	e3800c01 	orr	r0, r0, #256	; 0x100
40015174:	e58d0014 	str	r0, [sp, #20]
40015178:	ea000001 	b	40015184 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
4001517c:	e1a00000 	nop			; (mov r0, r0)
40015180:	e1a00000 	nop			; (mov r0, r0)
40015184:	e1a00000 	nop			; (mov r0, r0)
40015188:	e1a0100d 	mov	r1, sp
4001518c:	e1a00004 	mov	r0, r4
40015190:	ebffff8b 	bl	40014fc4 <CyU3PDmaSocketUpdateStatus>
40015194:	e28dd018 	add	sp, sp, #24
40015198:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

4001519c <CyU3PDmaChannelAcquireLock>:
4001519c:	e92d4070 	push	{r4, r5, r6, lr}
400151a0:	e1a04000 	mov	r4, r0
400151a4:	e1a05001 	mov	r5, r1
400151a8:	e3540000 	cmp	r4, #0
400151ac:	1a000001 	bne	400151b8 <CyU3PDmaChannelAcquireLock+0x1c>
400151b0:	e3a00041 	mov	r0, #65	; 0x41
400151b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400151b8:	e5940000 	ldr	r0, [r4]
400151bc:	e3500000 	cmp	r0, #0
400151c0:	1a000001 	bne	400151cc <CyU3PDmaChannelAcquireLock+0x30>
400151c4:	e3a00044 	mov	r0, #68	; 0x44
400151c8:	eafffff9 	b	400151b4 <CyU3PDmaChannelAcquireLock+0x18>
400151cc:	e1a01005 	mov	r1, r5
400151d0:	e284003c 	add	r0, r4, #60	; 0x3c
400151d4:	ebffd3d2 	bl	4000a124 <_txe_mutex_get>
400151d8:	e3500000 	cmp	r0, #0
400151dc:	0a000001 	beq	400151e8 <CyU3PDmaChannelAcquireLock+0x4c>
400151e0:	e3a0001d 	mov	r0, #29
400151e4:	eafffff2 	b	400151b4 <CyU3PDmaChannelAcquireLock+0x18>
400151e8:	e3a00000 	mov	r0, #0
400151ec:	eafffff0 	b	400151b4 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

400151f0 <CyU3PDmaChannelCacheControl>:
400151f0:	e92d4070 	push	{r4, r5, r6, lr}
400151f4:	e1a04000 	mov	r4, r0
400151f8:	e1a05001 	mov	r5, r1
400151fc:	e3e01000 	mvn	r1, #0
40015200:	e1a00004 	mov	r0, r4
40015204:	ebffffe4 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40015208:	e1a06000 	mov	r6, r0
4001520c:	e3560000 	cmp	r6, #0
40015210:	0a000001 	beq	4001521c <CyU3PDmaChannelCacheControl+0x2c>
40015214:	e1a00006 	mov	r0, r6
40015218:	e8bd8070 	pop	{r4, r5, r6, pc}
4001521c:	e5940000 	ldr	r0, [r4]
40015220:	e3500001 	cmp	r0, #1
40015224:	1a000001 	bne	40015230 <CyU3PDmaChannelCacheControl+0x40>
40015228:	e5845038 	str	r5, [r4, #56]	; 0x38
4001522c:	ea000000 	b	40015234 <CyU3PDmaChannelCacheControl+0x44>
40015230:	e3a06047 	mov	r6, #71	; 0x47
40015234:	e284003c 	add	r0, r4, #60	; 0x3c
40015238:	ebffd3ee 	bl	4000a1f8 <_txe_mutex_put>
4001523c:	e1a00006 	mov	r0, r6
40015240:	eafffff4 	b	40015218 <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

40015244 <CyU3PDmaChannelCommitBuffer>:
40015244:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015248:	e24dd03c 	sub	sp, sp, #60	; 0x3c
4001524c:	e1a04000 	mov	r4, r0
40015250:	e1a05001 	mov	r5, r1
40015254:	e1a06002 	mov	r6, r2
40015258:	e3e01000 	mvn	r1, #0
4001525c:	e1a00004 	mov	r0, r4
40015260:	ebffffcd 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40015264:	e1a09000 	mov	r9, r0
40015268:	e3590000 	cmp	r9, #0
4001526c:	0a000002 	beq	4001527c <CyU3PDmaChannelCommitBuffer+0x38>
40015270:	e1a00009 	mov	r0, r9
40015274:	e28dd03c 	add	sp, sp, #60	; 0x3c
40015278:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001527c:	e1d400b6 	ldrh	r0, [r4, #6]
40015280:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015284:	e0400001 	sub	r0, r0, r1
40015288:	e1500005 	cmp	r0, r5
4001528c:	aa000000 	bge	40015294 <CyU3PDmaChannelCommitBuffer+0x50>
40015290:	e3a09040 	mov	r9, #64	; 0x40
40015294:	e5940000 	ldr	r0, [r4]
40015298:	e3500002 	cmp	r0, #2
4001529c:	0a000000 	beq	400152a4 <CyU3PDmaChannelCommitBuffer+0x60>
400152a0:	e3a09042 	mov	r9, #66	; 0x42
400152a4:	e1d400b4 	ldrh	r0, [r4, #4]
400152a8:	e3500003 	cmp	r0, #3
400152ac:	1a000000 	bne	400152b4 <CyU3PDmaChannelCommitBuffer+0x70>
400152b0:	e3a09046 	mov	r9, #70	; 0x46
400152b4:	e3590000 	cmp	r9, #0
400152b8:	0a000003 	beq	400152cc <CyU3PDmaChannelCommitBuffer+0x88>
400152bc:	e284003c 	add	r0, r4, #60	; 0x3c
400152c0:	ebffd3cc 	bl	4000a1f8 <_txe_mutex_put>
400152c4:	e1a00009 	mov	r0, r9
400152c8:	eaffffe9 	b	40015274 <CyU3PDmaChannelCommitBuffer+0x30>
400152cc:	e1d400b4 	ldrh	r0, [r4, #4]
400152d0:	e20070ff 	and	r7, r0, #255	; 0xff
400152d4:	e3570002 	cmp	r7, #2
400152d8:	1a000037 	bne	400153bc <CyU3PDmaChannelCommitBuffer+0x178>
400152dc:	e1d401b6 	ldrh	r0, [r4, #22]
400152e0:	e28d1014 	add	r1, sp, #20
400152e4:	eb0034ad 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400152e8:	e1d401b8 	ldrh	r0, [r4, #24]
400152ec:	e28d1004 	add	r1, sp, #4
400152f0:	eb0034aa 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400152f4:	e59d0020 	ldr	r0, [sp, #32]
400152f8:	e3100008 	tst	r0, #8
400152fc:	1a000000 	bne	40015304 <CyU3PDmaChannelCommitBuffer+0xc0>
40015300:	e3a09047 	mov	r9, #71	; 0x47
40015304:	e59d0010 	ldr	r0, [sp, #16]
40015308:	e3100008 	tst	r0, #8
4001530c:	0a000000 	beq	40015314 <CyU3PDmaChannelCommitBuffer+0xd0>
40015310:	e3a09047 	mov	r9, #71	; 0x47
40015314:	e3590000 	cmp	r9, #0
40015318:	1a000080 	bne	40015520 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001531c:	e59d0010 	ldr	r0, [sp, #16]
40015320:	e59f1208 	ldr	r1, [pc, #520]	; 40015530 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015324:	e0000001 	and	r0, r0, r1
40015328:	e58d0010 	str	r0, [sp, #16]
4001532c:	e59d0010 	ldr	r0, [sp, #16]
40015330:	e1800805 	orr	r0, r0, r5, lsl #16
40015334:	e58d0010 	str	r0, [sp, #16]
40015338:	e3560000 	cmp	r6, #0
4001533c:	1a000005 	bne	40015358 <CyU3PDmaChannelCommitBuffer+0x114>
40015340:	e59d1020 	ldr	r1, [sp, #32]
40015344:	e201100f 	and	r1, r1, #15
40015348:	e59d0010 	ldr	r0, [sp, #16]
4001534c:	e1800001 	orr	r0, r0, r1
40015350:	e58d0010 	str	r0, [sp, #16]
40015354:	ea000004 	b	4001536c <CyU3PDmaChannelCommitBuffer+0x128>
40015358:	e206100e 	and	r1, r6, #14
4001535c:	e3811008 	orr	r1, r1, #8
40015360:	e59d0010 	ldr	r0, [sp, #16]
40015364:	e1800001 	orr	r0, r0, r1
40015368:	e58d0010 	str	r0, [sp, #16]
4001536c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015370:	e3500000 	cmp	r0, #0
40015374:	0a000004 	beq	4001538c <CyU3PDmaChannelCommitBuffer+0x148>
40015378:	e59d2010 	ldr	r2, [sp, #16]
4001537c:	e59f31ac 	ldr	r3, [pc, #428]	; 40015530 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015380:	e0021003 	and	r1, r2, r3
40015384:	e59d0004 	ldr	r0, [sp, #4]
40015388:	ebfff34a 	bl	400120b8 <CyU3PSysCleanDRegion>
4001538c:	e1d401b8 	ldrh	r0, [r4, #24]
40015390:	e28d1004 	add	r1, sp, #4
40015394:	eb00349c 	bl	4002260c <CyU3PDmaDscrSetConfig>
40015398:	e1d411b8 	ldrh	r1, [r4, #24]
4001539c:	e1d401b2 	ldrh	r0, [r4, #18]
400153a0:	e3a02001 	mov	r2, #1
400153a4:	ebfffeb8 	bl	40014e8c <CyU3PDmaSocketSendEvent>
400153a8:	e59d001c 	ldr	r0, [sp, #28]
400153ac:	e1c401b6 	strh	r0, [r4, #22]
400153b0:	e59d000c 	ldr	r0, [sp, #12]
400153b4:	e1c401b8 	strh	r0, [r4, #24]
400153b8:	ea000058 	b	40015520 <CyU3PDmaChannelCommitBuffer+0x2dc>
400153bc:	e3570004 	cmp	r7, #4
400153c0:	1a000027 	bne	40015464 <CyU3PDmaChannelCommitBuffer+0x220>
400153c4:	e1d401b8 	ldrh	r0, [r4, #24]
400153c8:	e28d1004 	add	r1, sp, #4
400153cc:	eb003473 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400153d0:	e59d0010 	ldr	r0, [sp, #16]
400153d4:	e3100008 	tst	r0, #8
400153d8:	0a000000 	beq	400153e0 <CyU3PDmaChannelCommitBuffer+0x19c>
400153dc:	e3a09047 	mov	r9, #71	; 0x47
400153e0:	e3590000 	cmp	r9, #0
400153e4:	1a00004d 	bne	40015520 <CyU3PDmaChannelCommitBuffer+0x2dc>
400153e8:	e59d0010 	ldr	r0, [sp, #16]
400153ec:	e1a00800 	lsl	r0, r0, #16
400153f0:	e1a00820 	lsr	r0, r0, #16
400153f4:	e58d0010 	str	r0, [sp, #16]
400153f8:	e3a01008 	mov	r1, #8
400153fc:	e1811805 	orr	r1, r1, r5, lsl #16
40015400:	e59d0010 	ldr	r0, [sp, #16]
40015404:	e1800001 	orr	r0, r0, r1
40015408:	e58d0010 	str	r0, [sp, #16]
4001540c:	e206100e 	and	r1, r6, #14
40015410:	e59d0010 	ldr	r0, [sp, #16]
40015414:	e1800001 	orr	r0, r0, r1
40015418:	e58d0010 	str	r0, [sp, #16]
4001541c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015420:	e3500000 	cmp	r0, #0
40015424:	0a000004 	beq	4001543c <CyU3PDmaChannelCommitBuffer+0x1f8>
40015428:	e59d2010 	ldr	r2, [sp, #16]
4001542c:	e59f30fc 	ldr	r3, [pc, #252]	; 40015530 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015430:	e0021003 	and	r1, r2, r3
40015434:	e59d0004 	ldr	r0, [sp, #4]
40015438:	ebfff31e 	bl	400120b8 <CyU3PSysCleanDRegion>
4001543c:	e1d401b8 	ldrh	r0, [r4, #24]
40015440:	e28d1004 	add	r1, sp, #4
40015444:	eb003470 	bl	4002260c <CyU3PDmaDscrSetConfig>
40015448:	e1d411b8 	ldrh	r1, [r4, #24]
4001544c:	e1d401b2 	ldrh	r0, [r4, #18]
40015450:	e3a02001 	mov	r2, #1
40015454:	ebfffe8c 	bl	40014e8c <CyU3PDmaSocketSendEvent>
40015458:	e59d000c 	ldr	r0, [sp, #12]
4001545c:	e1c401b8 	strh	r0, [r4, #24]
40015460:	ea00002e 	b	40015520 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015464:	e1d401b2 	ldrh	r0, [r4, #18]
40015468:	e28d1024 	add	r1, sp, #36	; 0x24
4001546c:	ebfffdee 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40015470:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015474:	e3100702 	tst	r0, #524288	; 0x80000
40015478:	0a000027 	beq	4001551c <CyU3PDmaChannelCommitBuffer+0x2d8>
4001547c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015480:	e1a08800 	lsl	r8, r0, #16
40015484:	e1a08828 	lsr	r8, r8, #16
40015488:	e28d1004 	add	r1, sp, #4
4001548c:	e1a00008 	mov	r0, r8
40015490:	eb003442 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40015494:	e59d0010 	ldr	r0, [sp, #16]
40015498:	e3100008 	tst	r0, #8
4001549c:	0a00001c 	beq	40015514 <CyU3PDmaChannelCommitBuffer+0x2d0>
400154a0:	e59d0010 	ldr	r0, [sp, #16]
400154a4:	e1a00800 	lsl	r0, r0, #16
400154a8:	e1a00820 	lsr	r0, r0, #16
400154ac:	e58d0010 	str	r0, [sp, #16]
400154b0:	e59d0010 	ldr	r0, [sp, #16]
400154b4:	e1800805 	orr	r0, r0, r5, lsl #16
400154b8:	e58d0010 	str	r0, [sp, #16]
400154bc:	e3560000 	cmp	r6, #0
400154c0:	0a000007 	beq	400154e4 <CyU3PDmaChannelCommitBuffer+0x2a0>
400154c4:	e59d0010 	ldr	r0, [sp, #16]
400154c8:	e3c0000f 	bic	r0, r0, #15
400154cc:	e58d0010 	str	r0, [sp, #16]
400154d0:	e206100e 	and	r1, r6, #14
400154d4:	e3811008 	orr	r1, r1, #8
400154d8:	e59d0010 	ldr	r0, [sp, #16]
400154dc:	e1800001 	orr	r0, r0, r1
400154e0:	e58d0010 	str	r0, [sp, #16]
400154e4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400154e8:	e3500000 	cmp	r0, #0
400154ec:	0a000004 	beq	40015504 <CyU3PDmaChannelCommitBuffer+0x2c0>
400154f0:	e59d2010 	ldr	r2, [sp, #16]
400154f4:	e59f3034 	ldr	r3, [pc, #52]	; 40015530 <CyU3PDmaChannelCommitBuffer+0x2ec>
400154f8:	e0021003 	and	r1, r2, r3
400154fc:	e59d0004 	ldr	r0, [sp, #4]
40015500:	ebfff2ec 	bl	400120b8 <CyU3PSysCleanDRegion>
40015504:	e28d1004 	add	r1, sp, #4
40015508:	e1a00008 	mov	r0, r8
4001550c:	eb00343e 	bl	4002260c <CyU3PDmaDscrSetConfig>
40015510:	ea000002 	b	40015520 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015514:	e3a09047 	mov	r9, #71	; 0x47
40015518:	ea000000 	b	40015520 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001551c:	e3a09047 	mov	r9, #71	; 0x47
40015520:	e284003c 	add	r0, r4, #60	; 0x3c
40015524:	ebffd333 	bl	4000a1f8 <_txe_mutex_put>
40015528:	e1a00009 	mov	r0, r9
4001552c:	eaffff50 	b	40015274 <CyU3PDmaChannelCommitBuffer+0x30>
40015530:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

40015534 <CyU3PDmaChannelConfigure_TypeAuto>:
40015534:	e92d4070 	push	{r4, r5, r6, lr}
40015538:	e1a05000 	mov	r5, r0
4001553c:	e1d501b2 	ldrh	r0, [r5, #18]
40015540:	e3806901 	orr	r6, r0, #16384	; 0x4000
40015544:	e1d501b0 	ldrh	r0, [r5, #16]
40015548:	e3a01101 	mov	r1, #1073741824	; 0x40000000
4001554c:	e1810800 	orr	r0, r1, r0, lsl #16
40015550:	e1866000 	orr	r6, r6, r0
40015554:	e1d500b4 	ldrh	r0, [r5, #4]
40015558:	e3500001 	cmp	r0, #1
4001555c:	1a000000 	bne	40015564 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
40015560:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40015564:	e1d520b6 	ldrh	r2, [r5, #6]
40015568:	e1d510b8 	ldrh	r1, [r5, #8]
4001556c:	e1a03006 	mov	r3, r6
40015570:	e285000c 	add	r0, r5, #12
40015574:	eb00331a 	bl	400221e4 <CyU3PDmaDscrChainCreate>
40015578:	e1a04000 	mov	r4, r0
4001557c:	e3540000 	cmp	r4, #0
40015580:	0a000001 	beq	4001558c <CyU3PDmaChannelConfigure_TypeAuto+0x58>
40015584:	e1a00004 	mov	r0, r4
40015588:	e8bd8070 	pop	{r4, r5, r6, pc}
4001558c:	e1d500bc 	ldrh	r0, [r5, #12]
40015590:	e1c501b6 	strh	r0, [r5, #22]
40015594:	e1c501ba 	strh	r0, [r5, #26]
40015598:	e1c501be 	strh	r0, [r5, #30]
4001559c:	e1d500be 	ldrh	r0, [r5, #14]
400155a0:	e1c501b8 	strh	r0, [r5, #24]
400155a4:	e1c501bc 	strh	r0, [r5, #28]
400155a8:	e1c502b0 	strh	r0, [r5, #32]
400155ac:	e2850014 	add	r0, r5, #20
400155b0:	eb003382 	bl	400223c0 <CyU3PDmaDscrGet>
400155b4:	e1a00005 	mov	r0, r5
400155b8:	eb0006b7 	bl	4001709c <CyU3PDmaConfigureSockets_TypeAuto>
400155bc:	e3a00000 	mov	r0, #0
400155c0:	eafffff0 	b	40015588 <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

400155c4 <CyU3PDmaChannelConfigure_TypeManual>:
400155c4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400155c8:	e24dd024 	sub	sp, sp, #36	; 0x24
400155cc:	e1a04000 	mov	r4, r0
400155d0:	e284700c 	add	r7, r4, #12
400155d4:	e3a06cff 	mov	r6, #65280	; 0xff00
400155d8:	e1d401b0 	ldrh	r0, [r4, #16]
400155dc:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400155e0:	e1810800 	orr	r0, r1, r0, lsl #16
400155e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400155e8:	e1866000 	orr	r6, r6, r0
400155ec:	e1d400b4 	ldrh	r0, [r4, #4]
400155f0:	e3500003 	cmp	r0, #3
400155f4:	1a000002 	bne	40015604 <CyU3PDmaChannelConfigure_TypeManual+0x40>
400155f8:	e3a00c3f 	mov	r0, #16128	; 0x3f00
400155fc:	e1c401b2 	strh	r0, [r4, #18]
40015600:	ea000009 	b	4001562c <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015604:	e1d400b4 	ldrh	r0, [r4, #4]
40015608:	e3500004 	cmp	r0, #4
4001560c:	1a000006 	bne	4001562c <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015610:	e59f020c 	ldr	r0, [pc, #524]	; 40015824 <CyU3PDmaChannelConfigure_TypeManual+0x260>
40015614:	e1c401b0 	strh	r0, [r4, #16]
40015618:	e284700e 	add	r7, r4, #14
4001561c:	e1d401b2 	ldrh	r0, [r4, #18]
40015620:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015624:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015628:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001562c:	e1d400b8 	ldrh	r0, [r4, #8]
40015630:	e3500000 	cmp	r0, #0
40015634:	0a00006b 	beq	400157e8 <CyU3PDmaChannelConfigure_TypeManual+0x224>
40015638:	e1d420b6 	ldrh	r2, [r4, #6]
4001563c:	e1d410b8 	ldrh	r1, [r4, #8]
40015640:	e1a03006 	mov	r3, r6
40015644:	e1a00007 	mov	r0, r7
40015648:	eb0032e5 	bl	400221e4 <CyU3PDmaDscrChainCreate>
4001564c:	e1a05000 	mov	r5, r0
40015650:	e3550000 	cmp	r5, #0
40015654:	0a000002 	beq	40015664 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
40015658:	e1a00005 	mov	r0, r5
4001565c:	e28dd024 	add	sp, sp, #36	; 0x24
40015660:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015664:	e1d400b4 	ldrh	r0, [r4, #4]
40015668:	e3500002 	cmp	r0, #2
4001566c:	1a000012 	bne	400156bc <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015670:	e1d401b2 	ldrh	r0, [r4, #18]
40015674:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015678:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
4001567c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015680:	e1d410b8 	ldrh	r1, [r4, #8]
40015684:	e1a03006 	mov	r3, r6
40015688:	e3a02000 	mov	r2, #0
4001568c:	e284000e 	add	r0, r4, #14
40015690:	eb0032d3 	bl	400221e4 <CyU3PDmaDscrChainCreate>
40015694:	e1a05000 	mov	r5, r0
40015698:	e3550000 	cmp	r5, #0
4001569c:	0a000006 	beq	400156bc <CyU3PDmaChannelConfigure_TypeManual+0xf8>
400156a0:	e1d410b8 	ldrh	r1, [r4, #8]
400156a4:	e1d700b0 	ldrh	r0, [r7]
400156a8:	e3a03001 	mov	r3, #1
400156ac:	e1a02003 	mov	r2, r3
400156b0:	eb00331f 	bl	40022334 <CyU3PDmaDscrChainDestroy>
400156b4:	e1a00005 	mov	r0, r5
400156b8:	eaffffe7 	b	4001565c <CyU3PDmaChannelConfigure_TypeManual+0x98>
400156bc:	e1d400bc 	ldrh	r0, [r4, #12]
400156c0:	e1c401b6 	strh	r0, [r4, #22]
400156c4:	e1c401ba 	strh	r0, [r4, #26]
400156c8:	e1c401be 	strh	r0, [r4, #30]
400156cc:	e1d400be 	ldrh	r0, [r4, #14]
400156d0:	e1c401b8 	strh	r0, [r4, #24]
400156d4:	e1c401bc 	strh	r0, [r4, #28]
400156d8:	e1c402b0 	strh	r0, [r4, #32]
400156dc:	e3a08000 	mov	r8, #0
400156e0:	e1d790b0 	ldrh	r9, [r7]
400156e4:	ea00003b 	b	400157d8 <CyU3PDmaChannelConfigure_TypeManual+0x214>
400156e8:	e28d1014 	add	r1, sp, #20
400156ec:	e1a00009 	mov	r0, r9
400156f0:	eb0033aa 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400156f4:	e1d400b4 	ldrh	r0, [r4, #4]
400156f8:	e3500004 	cmp	r0, #4
400156fc:	1a00000b 	bne	40015730 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015700:	e59d0014 	ldr	r0, [sp, #20]
40015704:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015708:	e0800001 	add	r0, r0, r1
4001570c:	e58d0014 	str	r0, [sp, #20]
40015710:	e1d400b6 	ldrh	r0, [r4, #6]
40015714:	e280000f 	add	r0, r0, #15
40015718:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
4001571c:	e0400001 	sub	r0, r0, r1
40015720:	e59f1100 	ldr	r1, [pc, #256]	; 40015828 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015724:	e0000001 	and	r0, r0, r1
40015728:	e58d0020 	str	r0, [sp, #32]
4001572c:	ea000021 	b	400157b8 <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
40015730:	e1d400b4 	ldrh	r0, [r4, #4]
40015734:	e3500002 	cmp	r0, #2
40015738:	1a000012 	bne	40015788 <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
4001573c:	e1d401b8 	ldrh	r0, [r4, #24]
40015740:	e28d1004 	add	r1, sp, #4
40015744:	eb003395 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40015748:	e59d0014 	ldr	r0, [sp, #20]
4001574c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015750:	e0800001 	add	r0, r0, r1
40015754:	e58d0004 	str	r0, [sp, #4]
40015758:	e1d400b6 	ldrh	r0, [r4, #6]
4001575c:	e280000f 	add	r0, r0, #15
40015760:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015764:	e0400001 	sub	r0, r0, r1
40015768:	e59f10b8 	ldr	r1, [pc, #184]	; 40015828 <CyU3PDmaChannelConfigure_TypeManual+0x264>
4001576c:	e0000001 	and	r0, r0, r1
40015770:	e58d0010 	str	r0, [sp, #16]
40015774:	e1d401b8 	ldrh	r0, [r4, #24]
40015778:	e28d1004 	add	r1, sp, #4
4001577c:	eb0033a2 	bl	4002260c <CyU3PDmaDscrSetConfig>
40015780:	e59d000c 	ldr	r0, [sp, #12]
40015784:	e1c401b8 	strh	r0, [r4, #24]
40015788:	e59d0014 	ldr	r0, [sp, #20]
4001578c:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015790:	e0800001 	add	r0, r0, r1
40015794:	e58d0014 	str	r0, [sp, #20]
40015798:	e1d400b6 	ldrh	r0, [r4, #6]
4001579c:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
400157a0:	e0400001 	sub	r0, r0, r1
400157a4:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
400157a8:	e0400001 	sub	r0, r0, r1
400157ac:	e59f1074 	ldr	r1, [pc, #116]	; 40015828 <CyU3PDmaChannelConfigure_TypeManual+0x264>
400157b0:	e0000001 	and	r0, r0, r1
400157b4:	e58d0020 	str	r0, [sp, #32]
400157b8:	e28d1014 	add	r1, sp, #20
400157bc:	e1a00009 	mov	r0, r9
400157c0:	eb003391 	bl	4002260c <CyU3PDmaDscrSetConfig>
400157c4:	e59d001c 	ldr	r0, [sp, #28]
400157c8:	e1a09800 	lsl	r9, r0, #16
400157cc:	e1a09829 	lsr	r9, r9, #16
400157d0:	e2880001 	add	r0, r8, #1
400157d4:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400157d8:	e1d400b8 	ldrh	r0, [r4, #8]
400157dc:	e1500008 	cmp	r0, r8
400157e0:	caffffc0 	bgt	400156e8 <CyU3PDmaChannelConfigure_TypeManual+0x124>
400157e4:	ea000008 	b	4001580c <CyU3PDmaChannelConfigure_TypeManual+0x248>
400157e8:	e59f003c 	ldr	r0, [pc, #60]	; 4001582c <CyU3PDmaChannelConfigure_TypeManual+0x268>
400157ec:	e1c400bc 	strh	r0, [r4, #12]
400157f0:	e1c401b6 	strh	r0, [r4, #22]
400157f4:	e1c401ba 	strh	r0, [r4, #26]
400157f8:	e1c401be 	strh	r0, [r4, #30]
400157fc:	e1c400be 	strh	r0, [r4, #14]
40015800:	e1c401b8 	strh	r0, [r4, #24]
40015804:	e1c401bc 	strh	r0, [r4, #28]
40015808:	e1c402b0 	strh	r0, [r4, #32]
4001580c:	e2840014 	add	r0, r4, #20
40015810:	eb0032ea 	bl	400223c0 <CyU3PDmaDscrGet>
40015814:	e1a00004 	mov	r0, r4
40015818:	eb00065f 	bl	4001719c <CyU3PDmaConfigureSockets_TypeManual>
4001581c:	e3a00000 	mov	r0, #0
40015820:	eaffff8d 	b	4001565c <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015824:	00003f01 	.word	0x00003f01
40015828:	0000fff0 	.word	0x0000fff0
4001582c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

40015830 <CyU3PDmaChannelCreate>:
40015830:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015834:	e1a04000 	mov	r4, r0
40015838:	e1a05001 	mov	r5, r1
4001583c:	e1a06002 	mov	r6, r2
40015840:	e3560000 	cmp	r6, #0
40015844:	1a000001 	bne	40015850 <CyU3PDmaChannelCreate+0x20>
40015848:	e3a00041 	mov	r0, #65	; 0x41
4001584c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40015850:	e3540000 	cmp	r4, #0
40015854:	1a000001 	bne	40015860 <CyU3PDmaChannelCreate+0x30>
40015858:	e3a00041 	mov	r0, #65	; 0x41
4001585c:	eafffffa 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015860:	eb00330e 	bl	400224a0 <CyU3PDmaDscrGetFreeCount>
40015864:	e1d610b2 	ldrh	r1, [r6, #2]
40015868:	e2811001 	add	r1, r1, #1
4001586c:	e1500001 	cmp	r0, r1
40015870:	da000007 	ble	40015894 <CyU3PDmaChannelCreate+0x64>
40015874:	e3550002 	cmp	r5, #2
40015878:	1a000007 	bne	4001589c <CyU3PDmaChannelCreate+0x6c>
4001587c:	eb003307 	bl	400224a0 <CyU3PDmaDscrGetFreeCount>
40015880:	e1d610b2 	ldrh	r1, [r6, #2]
40015884:	e3a02001 	mov	r2, #1
40015888:	e0821101 	add	r1, r2, r1, lsl #2
4001588c:	e1500001 	cmp	r0, r1
40015890:	ca000001 	bgt	4001589c <CyU3PDmaChannelCreate+0x6c>
40015894:	e3a00010 	mov	r0, #16
40015898:	eaffffeb 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
4001589c:	e1d600b0 	ldrh	r0, [r6]
400158a0:	e3500000 	cmp	r0, #0
400158a4:	0a000003 	beq	400158b8 <CyU3PDmaChannelCreate+0x88>
400158a8:	e1d600b0 	ldrh	r0, [r6]
400158ac:	e59f1354 	ldr	r1, [pc, #852]	; 40015c08 <CyU3PDmaChannelCreate+0x3d8>
400158b0:	e1500001 	cmp	r0, r1
400158b4:	da000001 	ble	400158c0 <CyU3PDmaChannelCreate+0x90>
400158b8:	e3a00040 	mov	r0, #64	; 0x40
400158bc:	eaffffe2 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
400158c0:	e3550000 	cmp	r5, #0
400158c4:	0a000001 	beq	400158d0 <CyU3PDmaChannelCreate+0xa0>
400158c8:	e3550001 	cmp	r5, #1
400158cc:	1a000009 	bne	400158f8 <CyU3PDmaChannelCreate+0xc8>
400158d0:	e1d600b0 	ldrh	r0, [r6]
400158d4:	e310000f 	tst	r0, #15
400158d8:	0a000001 	beq	400158e4 <CyU3PDmaChannelCreate+0xb4>
400158dc:	e3a00040 	mov	r0, #64	; 0x40
400158e0:	eaffffd9 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
400158e4:	e1d600b2 	ldrh	r0, [r6, #2]
400158e8:	e3500000 	cmp	r0, #0
400158ec:	1a00000b 	bne	40015920 <CyU3PDmaChannelCreate+0xf0>
400158f0:	e3a00040 	mov	r0, #64	; 0x40
400158f4:	eaffffd4 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
400158f8:	e1d600b0 	ldrh	r0, [r6]
400158fc:	e1d610ba 	ldrh	r1, [r6, #10]
40015900:	e0400001 	sub	r0, r0, r1
40015904:	e1d610bc 	ldrh	r1, [r6, #12]
40015908:	e0400001 	sub	r0, r0, r1
4001590c:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015910:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015914:	0a000001 	beq	40015920 <CyU3PDmaChannelCreate+0xf0>
40015918:	e3a00040 	mov	r0, #64	; 0x40
4001591c:	eaffffca 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015920:	e5d60010 	ldrb	r0, [r6, #16]
40015924:	e3500002 	cmp	r0, #2
40015928:	ba000001 	blt	40015934 <CyU3PDmaChannelCreate+0x104>
4001592c:	e3a00040 	mov	r0, #64	; 0x40
40015930:	eaffffc5 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015934:	e3550004 	cmp	r5, #4
40015938:	0a000011 	beq	40015984 <CyU3PDmaChannelCreate+0x154>
4001593c:	e1d600b4 	ldrh	r0, [r6, #4]
40015940:	e3a0103f 	mov	r1, #63	; 0x3f
40015944:	e0018440 	and	r8, r1, r0, asr #8
40015948:	e1d600b4 	ldrh	r0, [r6, #4]
4001594c:	e20090ff 	and	r9, r0, #255	; 0xff
40015950:	e1d600b4 	ldrh	r0, [r6, #4]
40015954:	ebfffd14 	bl	40014dac <CyU3PDmaSocketIsValidProducer>
40015958:	e3500000 	cmp	r0, #0
4001595c:	1a000001 	bne	40015968 <CyU3PDmaChannelCreate+0x138>
40015960:	e3a00040 	mov	r0, #64	; 0x40
40015964:	eaffffb8 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015968:	e59f029c 	ldr	r0, [pc, #668]	; 40015c0c <CyU3PDmaChannelCreate+0x3dc>
4001596c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015970:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015974:	e3500000 	cmp	r0, #0
40015978:	0a000007 	beq	4001599c <CyU3PDmaChannelCreate+0x16c>
4001597c:	e3a00040 	mov	r0, #64	; 0x40
40015980:	eaffffb1 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015984:	e1d600b4 	ldrh	r0, [r6, #4]
40015988:	e59f1280 	ldr	r1, [pc, #640]	; 40015c10 <CyU3PDmaChannelCreate+0x3e0>
4001598c:	e1500001 	cmp	r0, r1
40015990:	0a000001 	beq	4001599c <CyU3PDmaChannelCreate+0x16c>
40015994:	e3a00040 	mov	r0, #64	; 0x40
40015998:	eaffffab 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
4001599c:	e3550003 	cmp	r5, #3
400159a0:	0a000011 	beq	400159ec <CyU3PDmaChannelCreate+0x1bc>
400159a4:	e1d600b6 	ldrh	r0, [r6, #6]
400159a8:	e3a0103f 	mov	r1, #63	; 0x3f
400159ac:	e0018440 	and	r8, r1, r0, asr #8
400159b0:	e1d600b6 	ldrh	r0, [r6, #6]
400159b4:	e20090ff 	and	r9, r0, #255	; 0xff
400159b8:	e1d600b6 	ldrh	r0, [r6, #6]
400159bc:	ebfffcc2 	bl	40014ccc <CyU3PDmaSocketIsValidConsumer>
400159c0:	e3500000 	cmp	r0, #0
400159c4:	1a000001 	bne	400159d0 <CyU3PDmaChannelCreate+0x1a0>
400159c8:	e3a00040 	mov	r0, #64	; 0x40
400159cc:	eaffff9e 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
400159d0:	e59f0234 	ldr	r0, [pc, #564]	; 40015c0c <CyU3PDmaChannelCreate+0x3dc>
400159d4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400159d8:	e7900109 	ldr	r0, [r0, r9, lsl #2]
400159dc:	e3500000 	cmp	r0, #0
400159e0:	0a000006 	beq	40015a00 <CyU3PDmaChannelCreate+0x1d0>
400159e4:	e3a00040 	mov	r0, #64	; 0x40
400159e8:	eaffff97 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
400159ec:	e1d600b6 	ldrh	r0, [r6, #6]
400159f0:	e3500c3f 	cmp	r0, #16128	; 0x3f00
400159f4:	0a000001 	beq	40015a00 <CyU3PDmaChannelCreate+0x1d0>
400159f8:	e3a00040 	mov	r0, #64	; 0x40
400159fc:	eaffff92 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015a00:	e1d600b8 	ldrh	r0, [r6, #8]
40015a04:	e3500000 	cmp	r0, #0
40015a08:	0a000008 	beq	40015a30 <CyU3PDmaChannelCreate+0x200>
40015a0c:	e1d600b8 	ldrh	r0, [r6, #8]
40015a10:	e1d610b2 	ldrh	r1, [r6, #2]
40015a14:	e1500001 	cmp	r0, r1
40015a18:	aa000002 	bge	40015a28 <CyU3PDmaChannelCreate+0x1f8>
40015a1c:	e1d600b2 	ldrh	r0, [r6, #2]
40015a20:	e350001f 	cmp	r0, #31
40015a24:	da000001 	ble	40015a30 <CyU3PDmaChannelCreate+0x200>
40015a28:	e3a00040 	mov	r0, #64	; 0x40
40015a2c:	eaffff86 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015a30:	e3550004 	cmp	r5, #4
40015a34:	0a000007 	beq	40015a58 <CyU3PDmaChannelCreate+0x228>
40015a38:	e1d600b4 	ldrh	r0, [r6, #4]
40015a3c:	e3a0103f 	mov	r1, #63	; 0x3f
40015a40:	e0018440 	and	r8, r1, r0, asr #8
40015a44:	e1d600b4 	ldrh	r0, [r6, #4]
40015a48:	e20090ff 	and	r9, r0, #255	; 0xff
40015a4c:	e59f01b8 	ldr	r0, [pc, #440]	; 40015c0c <CyU3PDmaChannelCreate+0x3dc>
40015a50:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015a54:	e7804109 	str	r4, [r0, r9, lsl #2]
40015a58:	e3550003 	cmp	r5, #3
40015a5c:	0a000007 	beq	40015a80 <CyU3PDmaChannelCreate+0x250>
40015a60:	e1d600b6 	ldrh	r0, [r6, #6]
40015a64:	e3a0103f 	mov	r1, #63	; 0x3f
40015a68:	e0018440 	and	r8, r1, r0, asr #8
40015a6c:	e1d600b6 	ldrh	r0, [r6, #6]
40015a70:	e20090ff 	and	r9, r0, #255	; 0xff
40015a74:	e59f0190 	ldr	r0, [pc, #400]	; 40015c0c <CyU3PDmaChannelCreate+0x3dc>
40015a78:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015a7c:	e7804109 	str	r4, [r0, r9, lsl #2]
40015a80:	e1c450b4 	strh	r5, [r4, #4]
40015a84:	e1d600b0 	ldrh	r0, [r6]
40015a88:	e1c400b6 	strh	r0, [r4, #6]
40015a8c:	e1d600b2 	ldrh	r0, [r6, #2]
40015a90:	e1c400b8 	strh	r0, [r4, #8]
40015a94:	e1d600b8 	ldrh	r0, [r6, #8]
40015a98:	e1c400ba 	strh	r0, [r4, #10]
40015a9c:	e1d600b4 	ldrh	r0, [r6, #4]
40015aa0:	e1c401b0 	strh	r0, [r4, #16]
40015aa4:	e1d600b6 	ldrh	r0, [r6, #6]
40015aa8:	e1c401b2 	strh	r0, [r4, #18]
40015aac:	e1d600ba 	ldrh	r0, [r6, #10]
40015ab0:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015ab4:	e1d600bc 	ldrh	r0, [r6, #12]
40015ab8:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015abc:	e1d600be 	ldrh	r0, [r6, #14]
40015ac0:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015ac4:	e5d60010 	ldrb	r0, [r6, #16]
40015ac8:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015acc:	e5960014 	ldr	r0, [r6, #20]
40015ad0:	e5840030 	str	r0, [r4, #48]	; 0x30
40015ad4:	e3a00000 	mov	r0, #0
40015ad8:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015adc:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015ae0:	e3a03038 	mov	r3, #56	; 0x38
40015ae4:	e3a02000 	mov	r2, #0
40015ae8:	e1a01002 	mov	r1, r2
40015aec:	e284003c 	add	r0, r4, #60	; 0x3c
40015af0:	ebffd10d 	bl	40009f2c <_txe_mutex_create>
40015af4:	e3a02028 	mov	r2, #40	; 0x28
40015af8:	e3a01000 	mov	r1, #0
40015afc:	e2840074 	add	r0, r4, #116	; 0x74
40015b00:	ebffd04f 	bl	40009c44 <_txe_event_flags_create>
40015b04:	e5960018 	ldr	r0, [r6, #24]
40015b08:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015b0c:	e59f0100 	ldr	r0, [pc, #256]	; 40015c14 <CyU3PDmaChannelCreate+0x3e4>
40015b10:	e5900000 	ldr	r0, [r0]
40015b14:	e5840038 	str	r0, [r4, #56]	; 0x38
40015b18:	e3550005 	cmp	r5, #5
40015b1c:	308ff105 	addcc	pc, pc, r5, lsl #2
40015b20:	ea000011 	b	40015b6c <CyU3PDmaChannelCreate+0x33c>
40015b24:	ea000003 	b	40015b38 <CyU3PDmaChannelCreate+0x308>
40015b28:	ea000004 	b	40015b40 <CyU3PDmaChannelCreate+0x310>
40015b2c:	ea00000a 	b	40015b5c <CyU3PDmaChannelCreate+0x32c>
40015b30:	ea000006 	b	40015b50 <CyU3PDmaChannelCreate+0x320>
40015b34:	ea000007 	b	40015b58 <CyU3PDmaChannelCreate+0x328>
40015b38:	e1a00000 	nop			; (mov r0, r0)
40015b3c:	e1a00000 	nop			; (mov r0, r0)
40015b40:	e1a00004 	mov	r0, r4
40015b44:	ebfffe7a 	bl	40015534 <CyU3PDmaChannelConfigure_TypeAuto>
40015b48:	e1a07000 	mov	r7, r0
40015b4c:	ea000009 	b	40015b78 <CyU3PDmaChannelCreate+0x348>
40015b50:	e1a00000 	nop			; (mov r0, r0)
40015b54:	e1a00000 	nop			; (mov r0, r0)
40015b58:	e1a00000 	nop			; (mov r0, r0)
40015b5c:	e1a00004 	mov	r0, r4
40015b60:	ebfffe97 	bl	400155c4 <CyU3PDmaChannelConfigure_TypeManual>
40015b64:	e1a07000 	mov	r7, r0
40015b68:	ea000002 	b	40015b78 <CyU3PDmaChannelCreate+0x348>
40015b6c:	e1a00000 	nop			; (mov r0, r0)
40015b70:	e3a07040 	mov	r7, #64	; 0x40
40015b74:	e1a00000 	nop			; (mov r0, r0)
40015b78:	e1a00000 	nop			; (mov r0, r0)
40015b7c:	e3570000 	cmp	r7, #0
40015b80:	1a000002 	bne	40015b90 <CyU3PDmaChannelCreate+0x360>
40015b84:	e3a00001 	mov	r0, #1
40015b88:	e5840000 	str	r0, [r4]
40015b8c:	ea00001b 	b	40015c00 <CyU3PDmaChannelCreate+0x3d0>
40015b90:	e284003c 	add	r0, r4, #60	; 0x3c
40015b94:	ebffd142 	bl	4000a0a4 <_txe_mutex_delete>
40015b98:	e2840074 	add	r0, r4, #116	; 0x74
40015b9c:	ebffd078 	bl	40009d84 <_txe_event_flags_delete>
40015ba0:	e3550004 	cmp	r5, #4
40015ba4:	0a000008 	beq	40015bcc <CyU3PDmaChannelCreate+0x39c>
40015ba8:	e1d600b4 	ldrh	r0, [r6, #4]
40015bac:	e3a0103f 	mov	r1, #63	; 0x3f
40015bb0:	e0018440 	and	r8, r1, r0, asr #8
40015bb4:	e1d600b4 	ldrh	r0, [r6, #4]
40015bb8:	e20090ff 	and	r9, r0, #255	; 0xff
40015bbc:	e3a00000 	mov	r0, #0
40015bc0:	e59f1044 	ldr	r1, [pc, #68]	; 40015c0c <CyU3PDmaChannelCreate+0x3dc>
40015bc4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015bc8:	e7810109 	str	r0, [r1, r9, lsl #2]
40015bcc:	e3550003 	cmp	r5, #3
40015bd0:	0a000008 	beq	40015bf8 <CyU3PDmaChannelCreate+0x3c8>
40015bd4:	e1d600b6 	ldrh	r0, [r6, #6]
40015bd8:	e3a0103f 	mov	r1, #63	; 0x3f
40015bdc:	e0018440 	and	r8, r1, r0, asr #8
40015be0:	e1d600b6 	ldrh	r0, [r6, #6]
40015be4:	e20090ff 	and	r9, r0, #255	; 0xff
40015be8:	e3a00000 	mov	r0, #0
40015bec:	e59f1018 	ldr	r1, [pc, #24]	; 40015c0c <CyU3PDmaChannelCreate+0x3dc>
40015bf0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015bf4:	e7810109 	str	r0, [r1, r9, lsl #2]
40015bf8:	e3a00000 	mov	r0, #0
40015bfc:	e5840000 	str	r0, [r4]
40015c00:	e1a00007 	mov	r0, r7
40015c04:	eaffff10 	b	4001584c <CyU3PDmaChannelCreate+0x1c>
40015c08:	0000fff0 	.word	0x0000fff0
40015c0c:	40030d1c 	.word	0x40030d1c
40015c10:	00003f01 	.word	0x00003f01
40015c14:	40030c80 	.word	0x40030c80

Disassembly of section i.CyU3PDmaChannelDestroy:

40015c18 <CyU3PDmaChannelDestroy>:
40015c18:	e92d4070 	push	{r4, r5, r6, lr}
40015c1c:	e1a04000 	mov	r4, r0
40015c20:	e3e01000 	mvn	r1, #0
40015c24:	e1a00004 	mov	r0, r4
40015c28:	ebfffd5b 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40015c2c:	e1a05000 	mov	r5, r0
40015c30:	e3550000 	cmp	r5, #0
40015c34:	0a000001 	beq	40015c40 <CyU3PDmaChannelDestroy+0x28>
40015c38:	e1a00005 	mov	r0, r5
40015c3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015c40:	e1d400b4 	ldrh	r0, [r4, #4]
40015c44:	e3500005 	cmp	r0, #5
40015c48:	308ff100 	addcc	pc, pc, r0, lsl #2
40015c4c:	ea00000f 	b	40015c90 <CyU3PDmaChannelDestroy+0x78>
40015c50:	ea000003 	b	40015c64 <CyU3PDmaChannelDestroy+0x4c>
40015c54:	ea000004 	b	40015c6c <CyU3PDmaChannelDestroy+0x54>
40015c58:	ea000009 	b	40015c84 <CyU3PDmaChannelDestroy+0x6c>
40015c5c:	ea000005 	b	40015c78 <CyU3PDmaChannelDestroy+0x60>
40015c60:	ea000006 	b	40015c80 <CyU3PDmaChannelDestroy+0x68>
40015c64:	e1a00000 	nop			; (mov r0, r0)
40015c68:	e1a00000 	nop			; (mov r0, r0)
40015c6c:	e1a00004 	mov	r0, r4
40015c70:	eb000014 	bl	40015cc8 <CyU3PDmaChannelDestroy_TypeAuto>
40015c74:	ea00000a 	b	40015ca4 <CyU3PDmaChannelDestroy+0x8c>
40015c78:	e1a00000 	nop			; (mov r0, r0)
40015c7c:	e1a00000 	nop			; (mov r0, r0)
40015c80:	e1a00000 	nop			; (mov r0, r0)
40015c84:	e1a00004 	mov	r0, r4
40015c88:	eb000043 	bl	40015d9c <CyU3PDmaChannelDestroy_TypeManual>
40015c8c:	ea000004 	b	40015ca4 <CyU3PDmaChannelDestroy+0x8c>
40015c90:	e1a00000 	nop			; (mov r0, r0)
40015c94:	e284003c 	add	r0, r4, #60	; 0x3c
40015c98:	ebffd156 	bl	4000a1f8 <_txe_mutex_put>
40015c9c:	e3a00040 	mov	r0, #64	; 0x40
40015ca0:	eaffffe5 	b	40015c3c <CyU3PDmaChannelDestroy+0x24>
40015ca4:	e1a00000 	nop			; (mov r0, r0)
40015ca8:	e3a00000 	mov	r0, #0
40015cac:	e5840000 	str	r0, [r4]
40015cb0:	e284003c 	add	r0, r4, #60	; 0x3c
40015cb4:	ebffd0fa 	bl	4000a0a4 <_txe_mutex_delete>
40015cb8:	e2840074 	add	r0, r4, #116	; 0x74
40015cbc:	ebffd030 	bl	40009d84 <_txe_event_flags_delete>
40015cc0:	e3a00000 	mov	r0, #0
40015cc4:	eaffffdc 	b	40015c3c <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015cc8 <CyU3PDmaChannelDestroy_TypeAuto>:
40015cc8:	e92d4070 	push	{r4, r5, r6, lr}
40015ccc:	e24dd018 	sub	sp, sp, #24
40015cd0:	e1a04000 	mov	r4, r0
40015cd4:	e1d401b0 	ldrh	r0, [r4, #16]
40015cd8:	ebfffbbb 	bl	40014bcc <CyU3PDmaSocketDisable>
40015cdc:	e1d401b2 	ldrh	r0, [r4, #18]
40015ce0:	ebfffbb9 	bl	40014bcc <CyU3PDmaSocketDisable>
40015ce4:	e1d401b0 	ldrh	r0, [r4, #16]
40015ce8:	e1a0100d 	mov	r1, sp
40015cec:	ebfffbce 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40015cf0:	e59f009c 	ldr	r0, [pc, #156]	; 40015d94 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015cf4:	e58d0000 	str	r0, [sp]
40015cf8:	e1d401b0 	ldrh	r0, [r4, #16]
40015cfc:	e1a0100d 	mov	r1, sp
40015d00:	ebfffc73 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40015d04:	e1d401b0 	ldrh	r0, [r4, #16]
40015d08:	e20050ff 	and	r5, r0, #255	; 0xff
40015d0c:	e1d401b0 	ldrh	r0, [r4, #16]
40015d10:	e3a0103f 	mov	r1, #63	; 0x3f
40015d14:	e0016440 	and	r6, r1, r0, asr #8
40015d18:	e3a00000 	mov	r0, #0
40015d1c:	e59f1074 	ldr	r1, [pc, #116]	; 40015d98 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015d20:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015d24:	e7810105 	str	r0, [r1, r5, lsl #2]
40015d28:	e1d401b2 	ldrh	r0, [r4, #18]
40015d2c:	e1a0100d 	mov	r1, sp
40015d30:	ebfffbbd 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40015d34:	e59f0058 	ldr	r0, [pc, #88]	; 40015d94 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015d38:	e58d0000 	str	r0, [sp]
40015d3c:	e1d401b2 	ldrh	r0, [r4, #18]
40015d40:	e1a0100d 	mov	r1, sp
40015d44:	ebfffc62 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40015d48:	e1d401b2 	ldrh	r0, [r4, #18]
40015d4c:	e20050ff 	and	r5, r0, #255	; 0xff
40015d50:	e1d401b2 	ldrh	r0, [r4, #18]
40015d54:	e3a0103f 	mov	r1, #63	; 0x3f
40015d58:	e0016440 	and	r6, r1, r0, asr #8
40015d5c:	e3a00000 	mov	r0, #0
40015d60:	e59f1030 	ldr	r1, [pc, #48]	; 40015d98 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015d64:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015d68:	e7810105 	str	r0, [r1, r5, lsl #2]
40015d6c:	e1d410b8 	ldrh	r1, [r4, #8]
40015d70:	e1d400bc 	ldrh	r0, [r4, #12]
40015d74:	e3a03001 	mov	r3, #1
40015d78:	e1a02003 	mov	r2, r3
40015d7c:	eb00316c 	bl	40022334 <CyU3PDmaDscrChainDestroy>
40015d80:	e1d401b4 	ldrh	r0, [r4, #20]
40015d84:	eb0031de 	bl	40022504 <CyU3PDmaDscrPut>
40015d88:	e3a00000 	mov	r0, #0
40015d8c:	e28dd018 	add	sp, sp, #24
40015d90:	e8bd8070 	pop	{r4, r5, r6, pc}
40015d94:	0000ffff 	.word	0x0000ffff
40015d98:	40030d1c 	.word	0x40030d1c

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015d9c <CyU3PDmaChannelDestroy_TypeManual>:
40015d9c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015da0:	e24dd028 	sub	sp, sp, #40	; 0x28
40015da4:	e1a04000 	mov	r4, r0
40015da8:	e1d400b4 	ldrh	r0, [r4, #4]
40015dac:	e3500004 	cmp	r0, #4
40015db0:	0a000012 	beq	40015e00 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015db4:	e1d401b0 	ldrh	r0, [r4, #16]
40015db8:	ebfffb83 	bl	40014bcc <CyU3PDmaSocketDisable>
40015dbc:	e1d401b0 	ldrh	r0, [r4, #16]
40015dc0:	e1a0100d 	mov	r1, sp
40015dc4:	ebfffb98 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40015dc8:	e59f0178 	ldr	r0, [pc, #376]	; 40015f48 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015dcc:	e58d0000 	str	r0, [sp]
40015dd0:	e1d401b0 	ldrh	r0, [r4, #16]
40015dd4:	e1a0100d 	mov	r1, sp
40015dd8:	ebfffc3d 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40015ddc:	e1d401b0 	ldrh	r0, [r4, #16]
40015de0:	e20070ff 	and	r7, r0, #255	; 0xff
40015de4:	e1d401b0 	ldrh	r0, [r4, #16]
40015de8:	e3a0103f 	mov	r1, #63	; 0x3f
40015dec:	e0018440 	and	r8, r1, r0, asr #8
40015df0:	e3a00000 	mov	r0, #0
40015df4:	e59f1150 	ldr	r1, [pc, #336]	; 40015f4c <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015df8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015dfc:	e7810107 	str	r0, [r1, r7, lsl #2]
40015e00:	e1d400b4 	ldrh	r0, [r4, #4]
40015e04:	e3500003 	cmp	r0, #3
40015e08:	0a000012 	beq	40015e58 <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015e0c:	e1d401b2 	ldrh	r0, [r4, #18]
40015e10:	ebfffb6d 	bl	40014bcc <CyU3PDmaSocketDisable>
40015e14:	e1d401b2 	ldrh	r0, [r4, #18]
40015e18:	e1a0100d 	mov	r1, sp
40015e1c:	ebfffb82 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40015e20:	e59f0120 	ldr	r0, [pc, #288]	; 40015f48 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015e24:	e58d0000 	str	r0, [sp]
40015e28:	e1d401b2 	ldrh	r0, [r4, #18]
40015e2c:	e1a0100d 	mov	r1, sp
40015e30:	ebfffc27 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40015e34:	e1d401b2 	ldrh	r0, [r4, #18]
40015e38:	e20070ff 	and	r7, r0, #255	; 0xff
40015e3c:	e1d401b2 	ldrh	r0, [r4, #18]
40015e40:	e3a0103f 	mov	r1, #63	; 0x3f
40015e44:	e0018440 	and	r8, r1, r0, asr #8
40015e48:	e3a00000 	mov	r0, #0
40015e4c:	e59f10f8 	ldr	r1, [pc, #248]	; 40015f4c <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015e50:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015e54:	e7810107 	str	r0, [r1, r7, lsl #2]
40015e58:	e1d400b8 	ldrh	r0, [r4, #8]
40015e5c:	e3500000 	cmp	r0, #0
40015e60:	0a000033 	beq	40015f34 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015e64:	e1d400b4 	ldrh	r0, [r4, #4]
40015e68:	e3500004 	cmp	r0, #4
40015e6c:	1a000014 	bne	40015ec4 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015e70:	e1d450be 	ldrh	r5, [r4, #14]
40015e74:	e3a06000 	mov	r6, #0
40015e78:	ea00000d 	b	40015eb4 <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015e7c:	e28d1018 	add	r1, sp, #24
40015e80:	e1a00005 	mov	r0, r5
40015e84:	eb0031c5 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40015e88:	e59d1018 	ldr	r1, [sp, #24]
40015e8c:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015e90:	e0410002 	sub	r0, r1, r2
40015e94:	ebffb816 	bl	40003ef4 <CyU3PDmaBufferFree>
40015e98:	e1a00005 	mov	r0, r5
40015e9c:	eb003198 	bl	40022504 <CyU3PDmaDscrPut>
40015ea0:	e59d0020 	ldr	r0, [sp, #32]
40015ea4:	e1a05800 	lsl	r5, r0, #16
40015ea8:	e1a05825 	lsr	r5, r5, #16
40015eac:	e2860001 	add	r0, r6, #1
40015eb0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015eb4:	e1d400b8 	ldrh	r0, [r4, #8]
40015eb8:	e1500006 	cmp	r0, r6
40015ebc:	caffffee 	bgt	40015e7c <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40015ec0:	ea000013 	b	40015f14 <CyU3PDmaChannelDestroy_TypeManual+0x178>
40015ec4:	e1d450bc 	ldrh	r5, [r4, #12]
40015ec8:	e3a06000 	mov	r6, #0
40015ecc:	ea00000d 	b	40015f08 <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40015ed0:	e28d1018 	add	r1, sp, #24
40015ed4:	e1a00005 	mov	r0, r5
40015ed8:	eb0031b0 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40015edc:	e59d1018 	ldr	r1, [sp, #24]
40015ee0:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40015ee4:	e0410002 	sub	r0, r1, r2
40015ee8:	ebffb801 	bl	40003ef4 <CyU3PDmaBufferFree>
40015eec:	e1a00005 	mov	r0, r5
40015ef0:	eb003183 	bl	40022504 <CyU3PDmaDscrPut>
40015ef4:	e59d0020 	ldr	r0, [sp, #32]
40015ef8:	e1a05800 	lsl	r5, r0, #16
40015efc:	e1a05825 	lsr	r5, r5, #16
40015f00:	e2860001 	add	r0, r6, #1
40015f04:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015f08:	e1d400b8 	ldrh	r0, [r4, #8]
40015f0c:	e1500006 	cmp	r0, r6
40015f10:	caffffee 	bgt	40015ed0 <CyU3PDmaChannelDestroy_TypeManual+0x134>
40015f14:	e1d400b4 	ldrh	r0, [r4, #4]
40015f18:	e3500002 	cmp	r0, #2
40015f1c:	1a000004 	bne	40015f34 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015f20:	e1d410b8 	ldrh	r1, [r4, #8]
40015f24:	e1d400be 	ldrh	r0, [r4, #14]
40015f28:	e3a03000 	mov	r3, #0
40015f2c:	e1a02003 	mov	r2, r3
40015f30:	eb0030ff 	bl	40022334 <CyU3PDmaDscrChainDestroy>
40015f34:	e1d401b4 	ldrh	r0, [r4, #20]
40015f38:	eb003171 	bl	40022504 <CyU3PDmaDscrPut>
40015f3c:	e3a00000 	mov	r0, #0
40015f40:	e28dd028 	add	sp, sp, #40	; 0x28
40015f44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015f48:	0000ffff 	.word	0x0000ffff
40015f4c:	40030d1c 	.word	0x40030d1c

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40015f50 <CyU3PDmaChannelGetBuffer>:
40015f50:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015f54:	e24dd030 	sub	sp, sp, #48	; 0x30
40015f58:	e1a04000 	mov	r4, r0
40015f5c:	e1a05001 	mov	r5, r1
40015f60:	e1a06002 	mov	r6, r2
40015f64:	e3550000 	cmp	r5, #0
40015f68:	1a000002 	bne	40015f78 <CyU3PDmaChannelGetBuffer+0x28>
40015f6c:	e3a00041 	mov	r0, #65	; 0x41
40015f70:	e28dd030 	add	sp, sp, #48	; 0x30
40015f74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015f78:	e1a01006 	mov	r1, r6
40015f7c:	e1a00004 	mov	r0, r4
40015f80:	ebfffc85 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40015f84:	e1a08000 	mov	r8, r0
40015f88:	e3580000 	cmp	r8, #0
40015f8c:	0a000001 	beq	40015f98 <CyU3PDmaChannelGetBuffer+0x48>
40015f90:	e1a00008 	mov	r0, r8
40015f94:	eafffff5 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40015f98:	e5940000 	ldr	r0, [r4]
40015f9c:	e3500002 	cmp	r0, #2
40015fa0:	0a000003 	beq	40015fb4 <CyU3PDmaChannelGetBuffer+0x64>
40015fa4:	e5940000 	ldr	r0, [r4]
40015fa8:	e3500006 	cmp	r0, #6
40015fac:	0a000000 	beq	40015fb4 <CyU3PDmaChannelGetBuffer+0x64>
40015fb0:	e3a08042 	mov	r8, #66	; 0x42
40015fb4:	e5940000 	ldr	r0, [r4]
40015fb8:	e3500005 	cmp	r0, #5
40015fbc:	1a000000 	bne	40015fc4 <CyU3PDmaChannelGetBuffer+0x74>
40015fc0:	e3a08049 	mov	r8, #73	; 0x49
40015fc4:	e5940000 	ldr	r0, [r4]
40015fc8:	e3500007 	cmp	r0, #7
40015fcc:	1a000000 	bne	40015fd4 <CyU3PDmaChannelGetBuffer+0x84>
40015fd0:	e3a08048 	mov	r8, #72	; 0x48
40015fd4:	e3580000 	cmp	r8, #0
40015fd8:	0a000003 	beq	40015fec <CyU3PDmaChannelGetBuffer+0x9c>
40015fdc:	e284003c 	add	r0, r4, #60	; 0x3c
40015fe0:	ebffd084 	bl	4000a1f8 <_txe_mutex_put>
40015fe4:	e1a00008 	mov	r0, r8
40015fe8:	eaffffe0 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40015fec:	e1d400b4 	ldrh	r0, [r4, #4]
40015ff0:	e20070ff 	and	r7, r0, #255	; 0xff
40015ff4:	e3570002 	cmp	r7, #2
40015ff8:	0a000001 	beq	40016004 <CyU3PDmaChannelGetBuffer+0xb4>
40015ffc:	e3570003 	cmp	r7, #3
40016000:	1a00003e 	bne	40016100 <CyU3PDmaChannelGetBuffer+0x1b0>
40016004:	e3a02002 	mov	r2, #2
40016008:	e3e01008 	mvn	r1, #8
4001600c:	e2840074 	add	r0, r4, #116	; 0x74
40016010:	ebffcfab 	bl	40009ec4 <_txe_event_flags_set>
40016014:	e1d401b6 	ldrh	r0, [r4, #22]
40016018:	e28d101c 	add	r1, sp, #28
4001601c:	eb00315f 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40016020:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016024:	e3100008 	tst	r0, #8
40016028:	1a000022 	bne	400160b8 <CyU3PDmaChannelGetBuffer+0x168>
4001602c:	e284003c 	add	r0, r4, #60	; 0x3c
40016030:	ebffd070 	bl	4000a1f8 <_txe_mutex_put>
40016034:	e58d6000 	str	r6, [sp]
40016038:	e28d302c 	add	r3, sp, #44	; 0x2c
4001603c:	e3a02000 	mov	r2, #0
40016040:	e3a01068 	mov	r1, #104	; 0x68
40016044:	e2840074 	add	r0, r4, #116	; 0x74
40016048:	ebffcf6d 	bl	40009e04 <_txe_event_flags_get>
4001604c:	e1a08000 	mov	r8, r0
40016050:	e3580000 	cmp	r8, #0
40016054:	0a000001 	beq	40016060 <CyU3PDmaChannelGetBuffer+0x110>
40016058:	e3a00045 	mov	r0, #69	; 0x45
4001605c:	eaffffc3 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40016060:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016064:	e3100040 	tst	r0, #64	; 0x40
40016068:	0a000001 	beq	40016074 <CyU3PDmaChannelGetBuffer+0x124>
4001606c:	e3a00049 	mov	r0, #73	; 0x49
40016070:	eaffffbe 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40016074:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016078:	e3100020 	tst	r0, #32
4001607c:	0a000001 	beq	40016088 <CyU3PDmaChannelGetBuffer+0x138>
40016080:	e3a00048 	mov	r0, #72	; 0x48
40016084:	eaffffb9 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40016088:	e1a01006 	mov	r1, r6
4001608c:	e1a00004 	mov	r0, r4
40016090:	ebfffc41 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016094:	e1a08000 	mov	r8, r0
40016098:	e3580000 	cmp	r8, #0
4001609c:	0a000001 	beq	400160a8 <CyU3PDmaChannelGetBuffer+0x158>
400160a0:	e1a00008 	mov	r0, r8
400160a4:	eaffffb1 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
400160a8:	e1d401b6 	ldrh	r0, [r4, #22]
400160ac:	e28d101c 	add	r1, sp, #28
400160b0:	eb00313a 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400160b4:	ea000003 	b	400160c8 <CyU3PDmaChannelGetBuffer+0x178>
400160b8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400160bc:	e3500000 	cmp	r0, #0
400160c0:	0a000000 	beq	400160c8 <CyU3PDmaChannelGetBuffer+0x178>
400160c4:	ebffd237 	bl	4000a9a8 <_txe_thread_relinquish>
400160c8:	e59d001c 	ldr	r0, [sp, #28]
400160cc:	e5850000 	str	r0, [r5]
400160d0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160d4:	e59f11a4 	ldr	r1, [pc, #420]	; 40016280 <CyU3PDmaChannelGetBuffer+0x330>
400160d8:	e0010820 	and	r0, r1, r0, lsr #16
400160dc:	e1c500b4 	strh	r0, [r5, #4]
400160e0:	e241100f 	sub	r1, r1, #15
400160e4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160e8:	e0000001 	and	r0, r0, r1
400160ec:	e1c500b6 	strh	r0, [r5, #6]
400160f0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160f4:	e200000f 	and	r0, r0, #15
400160f8:	e1c500b8 	strh	r0, [r5, #8]
400160fc:	ea00005b 	b	40016270 <CyU3PDmaChannelGetBuffer+0x320>
40016100:	e3570004 	cmp	r7, #4
40016104:	1a000036 	bne	400161e4 <CyU3PDmaChannelGetBuffer+0x294>
40016108:	e3a02002 	mov	r2, #2
4001610c:	e3e01010 	mvn	r1, #16
40016110:	e2840074 	add	r0, r4, #116	; 0x74
40016114:	ebffcf6a 	bl	40009ec4 <_txe_event_flags_set>
40016118:	e1d401b8 	ldrh	r0, [r4, #24]
4001611c:	e28d101c 	add	r1, sp, #28
40016120:	eb00311e 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40016124:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016128:	e3100008 	tst	r0, #8
4001612c:	0a000021 	beq	400161b8 <CyU3PDmaChannelGetBuffer+0x268>
40016130:	e284003c 	add	r0, r4, #60	; 0x3c
40016134:	ebffd02f 	bl	4000a1f8 <_txe_mutex_put>
40016138:	e58d6000 	str	r6, [sp]
4001613c:	e28d302c 	add	r3, sp, #44	; 0x2c
40016140:	e3a02000 	mov	r2, #0
40016144:	e3a01070 	mov	r1, #112	; 0x70
40016148:	e2840074 	add	r0, r4, #116	; 0x74
4001614c:	ebffcf2c 	bl	40009e04 <_txe_event_flags_get>
40016150:	e1a08000 	mov	r8, r0
40016154:	e3580000 	cmp	r8, #0
40016158:	0a000001 	beq	40016164 <CyU3PDmaChannelGetBuffer+0x214>
4001615c:	e3a00045 	mov	r0, #69	; 0x45
40016160:	eaffff82 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40016164:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016168:	e3100040 	tst	r0, #64	; 0x40
4001616c:	0a000001 	beq	40016178 <CyU3PDmaChannelGetBuffer+0x228>
40016170:	e3a00049 	mov	r0, #73	; 0x49
40016174:	eaffff7d 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40016178:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001617c:	e3100020 	tst	r0, #32
40016180:	0a000001 	beq	4001618c <CyU3PDmaChannelGetBuffer+0x23c>
40016184:	e3a00048 	mov	r0, #72	; 0x48
40016188:	eaffff78 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
4001618c:	e1a01006 	mov	r1, r6
40016190:	e1a00004 	mov	r0, r4
40016194:	ebfffc00 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016198:	e1a08000 	mov	r8, r0
4001619c:	e3580000 	cmp	r8, #0
400161a0:	0a000001 	beq	400161ac <CyU3PDmaChannelGetBuffer+0x25c>
400161a4:	e1a00008 	mov	r0, r8
400161a8:	eaffff70 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
400161ac:	e1d401b8 	ldrh	r0, [r4, #24]
400161b0:	e28d101c 	add	r1, sp, #28
400161b4:	eb0030f9 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400161b8:	e59d001c 	ldr	r0, [sp, #28]
400161bc:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400161c0:	e0400001 	sub	r0, r0, r1
400161c4:	e5850000 	str	r0, [r5]
400161c8:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
400161cc:	e1c500b4 	strh	r0, [r5, #4]
400161d0:	e1d400b6 	ldrh	r0, [r4, #6]
400161d4:	e1c500b6 	strh	r0, [r5, #6]
400161d8:	e3a00000 	mov	r0, #0
400161dc:	e1c500b8 	strh	r0, [r5, #8]
400161e0:	ea000022 	b	40016270 <CyU3PDmaChannelGetBuffer+0x320>
400161e4:	e1d401b2 	ldrh	r0, [r4, #18]
400161e8:	e28d1004 	add	r1, sp, #4
400161ec:	ebfffa8e 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400161f0:	e59d1004 	ldr	r1, [sp, #4]
400161f4:	e1a00801 	lsl	r0, r1, #16
400161f8:	e1a00820 	lsr	r0, r0, #16
400161fc:	e28d101c 	add	r1, sp, #28
40016200:	eb0030e6 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40016204:	e59d0010 	ldr	r0, [sp, #16]
40016208:	e3100702 	tst	r0, #524288	; 0x80000
4001620c:	0a000016 	beq	4001626c <CyU3PDmaChannelGetBuffer+0x31c>
40016210:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016214:	e3100008 	tst	r0, #8
40016218:	0a000013 	beq	4001626c <CyU3PDmaChannelGetBuffer+0x31c>
4001621c:	e59d001c 	ldr	r0, [sp, #28]
40016220:	e5850000 	str	r0, [r5]
40016224:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016228:	e59f1050 	ldr	r1, [pc, #80]	; 40016280 <CyU3PDmaChannelGetBuffer+0x330>
4001622c:	e0010820 	and	r0, r1, r0, lsr #16
40016230:	e1c500b4 	strh	r0, [r5, #4]
40016234:	e241100f 	sub	r1, r1, #15
40016238:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001623c:	e0000001 	and	r0, r0, r1
40016240:	e1c500b6 	strh	r0, [r5, #6]
40016244:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016248:	e200000f 	and	r0, r0, #15
4001624c:	e1c500b8 	strh	r0, [r5, #8]
40016250:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016254:	e3500000 	cmp	r0, #0
40016258:	0a000004 	beq	40016270 <CyU3PDmaChannelGetBuffer+0x320>
4001625c:	e1d510b6 	ldrh	r1, [r5, #6]
40016260:	e5950000 	ldr	r0, [r5]
40016264:	ebffefa1 	bl	400120f0 <CyU3PSysFlushDRegion>
40016268:	ea000000 	b	40016270 <CyU3PDmaChannelGetBuffer+0x320>
4001626c:	e3a08047 	mov	r8, #71	; 0x47
40016270:	e284003c 	add	r0, r4, #60	; 0x3c
40016274:	ebffcfdf 	bl	4000a1f8 <_txe_mutex_put>
40016278:	e1a00008 	mov	r0, r8
4001627c:	eaffff3b 	b	40015f70 <CyU3PDmaChannelGetBuffer+0x20>
40016280:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

40016284 <CyU3PDmaChannelReset>:
40016284:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40016288:	e1a04000 	mov	r4, r0
4001628c:	e3e01000 	mvn	r1, #0
40016290:	e1a00004 	mov	r0, r4
40016294:	ebfffbc0 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016298:	e1a06000 	mov	r6, r0
4001629c:	e3560000 	cmp	r6, #0
400162a0:	0a000001 	beq	400162ac <CyU3PDmaChannelReset+0x28>
400162a4:	e1a00006 	mov	r0, r6
400162a8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400162ac:	e1d400b4 	ldrh	r0, [r4, #4]
400162b0:	e3500005 	cmp	r0, #5
400162b4:	308ff100 	addcc	pc, pc, r0, lsl #2
400162b8:	ea00000f 	b	400162fc <CyU3PDmaChannelReset+0x78>
400162bc:	ea000003 	b	400162d0 <CyU3PDmaChannelReset+0x4c>
400162c0:	ea000004 	b	400162d8 <CyU3PDmaChannelReset+0x54>
400162c4:	ea000009 	b	400162f0 <CyU3PDmaChannelReset+0x6c>
400162c8:	ea000005 	b	400162e4 <CyU3PDmaChannelReset+0x60>
400162cc:	ea000006 	b	400162ec <CyU3PDmaChannelReset+0x68>
400162d0:	e1a00000 	nop			; (mov r0, r0)
400162d4:	e1a00000 	nop			; (mov r0, r0)
400162d8:	e1a00004 	mov	r0, r4
400162dc:	eb000030 	bl	400163a4 <CyU3PDmaChannelReset_TypeAuto>
400162e0:	ea000007 	b	40016304 <CyU3PDmaChannelReset+0x80>
400162e4:	e1a00000 	nop			; (mov r0, r0)
400162e8:	e1a00000 	nop			; (mov r0, r0)
400162ec:	e1a00000 	nop			; (mov r0, r0)
400162f0:	e1a00004 	mov	r0, r4
400162f4:	eb000045 	bl	40016410 <CyU3PDmaChannelReset_TypeManual>
400162f8:	ea000001 	b	40016304 <CyU3PDmaChannelReset+0x80>
400162fc:	e1a00000 	nop			; (mov r0, r0)
40016300:	e1a00000 	nop			; (mov r0, r0)
40016304:	e1a00000 	nop			; (mov r0, r0)
40016308:	ebffc970 	bl	400088d0 <_tx_thread_identify>
4001630c:	e1a05000 	mov	r5, r0
40016310:	e3550000 	cmp	r5, #0
40016314:	0a000003 	beq	40016328 <CyU3PDmaChannelReset+0xa4>
40016318:	e1a0200d 	mov	r2, sp
4001631c:	e3a01002 	mov	r1, #2
40016320:	e1a00005 	mov	r0, r5
40016324:	ebffd177 	bl	4000a908 <_txe_thread_priority_change>
40016328:	e3a02002 	mov	r2, #2
4001632c:	e3e01007 	mvn	r1, #7
40016330:	e2840074 	add	r0, r4, #116	; 0x74
40016334:	ebffcee2 	bl	40009ec4 <_txe_event_flags_set>
40016338:	e3a02000 	mov	r2, #0
4001633c:	e3a01020 	mov	r1, #32
40016340:	e2840074 	add	r0, r4, #116	; 0x74
40016344:	ebffcede 	bl	40009ec4 <_txe_event_flags_set>
40016348:	e3a00001 	mov	r0, #1
4001634c:	e5840000 	str	r0, [r4]
40016350:	e284003c 	add	r0, r4, #60	; 0x3c
40016354:	ebffcfa7 	bl	4000a1f8 <_txe_mutex_put>
40016358:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
4001635c:	e3500000 	cmp	r0, #0
40016360:	0a000007 	beq	40016384 <CyU3PDmaChannelReset+0x100>
40016364:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40016368:	e3100020 	tst	r0, #32
4001636c:	0a000004 	beq	40016384 <CyU3PDmaChannelReset+0x100>
40016370:	e3a02000 	mov	r2, #0
40016374:	e3a01020 	mov	r1, #32
40016378:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
4001637c:	e1a00004 	mov	r0, r4
40016380:	e12fff33 	blx	r3
40016384:	e3550000 	cmp	r5, #0
40016388:	0a000003 	beq	4001639c <CyU3PDmaChannelReset+0x118>
4001638c:	e1a0200d 	mov	r2, sp
40016390:	e1a00005 	mov	r0, r5
40016394:	e59d1000 	ldr	r1, [sp]
40016398:	ebffd15a 	bl	4000a908 <_txe_thread_priority_change>
4001639c:	e3a00000 	mov	r0, #0
400163a0:	eaffffc0 	b	400162a8 <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

400163a4 <CyU3PDmaChannelReset_TypeAuto>:
400163a4:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400163a8:	e1a04000 	mov	r4, r0
400163ac:	e1d450b8 	ldrh	r5, [r4, #8]
400163b0:	e1d460bc 	ldrh	r6, [r4, #12]
400163b4:	e1a00004 	mov	r0, r4
400163b8:	eb000337 	bl	4001709c <CyU3PDmaConfigureSockets_TypeAuto>
400163bc:	ea00000c 	b	400163f4 <CyU3PDmaChannelReset_TypeAuto+0x50>
400163c0:	e1a0100d 	mov	r1, sp
400163c4:	e1a00006 	mov	r0, r6
400163c8:	eb003074 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400163cc:	e59d000c 	ldr	r0, [sp, #12]
400163d0:	e59f1034 	ldr	r1, [pc, #52]	; 4001640c <CyU3PDmaChannelReset_TypeAuto+0x68>
400163d4:	e0000001 	and	r0, r0, r1
400163d8:	e58d000c 	str	r0, [sp, #12]
400163dc:	e1a0100d 	mov	r1, sp
400163e0:	e1a00006 	mov	r0, r6
400163e4:	eb003088 	bl	4002260c <CyU3PDmaDscrSetConfig>
400163e8:	e59d0008 	ldr	r0, [sp, #8]
400163ec:	e1a06800 	lsl	r6, r0, #16
400163f0:	e1a06826 	lsr	r6, r6, #16
400163f4:	e1b00005 	movs	r0, r5
400163f8:	e2451001 	sub	r1, r5, #1
400163fc:	e1a05801 	lsl	r5, r1, #16
40016400:	e1a05825 	lsr	r5, r5, #16
40016404:	1affffed 	bne	400163c0 <CyU3PDmaChannelReset_TypeAuto+0x1c>
40016408:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
4001640c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

40016410 <CyU3PDmaChannelReset_TypeManual>:
40016410:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016414:	e1a04000 	mov	r4, r0
40016418:	e1d450b8 	ldrh	r5, [r4, #8]
4001641c:	e1a00004 	mov	r0, r4
40016420:	eb00035d 	bl	4001719c <CyU3PDmaConfigureSockets_TypeManual>
40016424:	e1d400b4 	ldrh	r0, [r4, #4]
40016428:	e3500004 	cmp	r0, #4
4001642c:	0a000017 	beq	40016490 <CyU3PDmaChannelReset_TypeManual+0x80>
40016430:	e1d460bc 	ldrh	r6, [r4, #12]
40016434:	ea00000c 	b	4001646c <CyU3PDmaChannelReset_TypeManual+0x5c>
40016438:	e1a0100d 	mov	r1, sp
4001643c:	e1a00006 	mov	r0, r6
40016440:	eb003056 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40016444:	e59d000c 	ldr	r0, [sp, #12]
40016448:	e59f10b4 	ldr	r1, [pc, #180]	; 40016504 <CyU3PDmaChannelReset_TypeManual+0xf4>
4001644c:	e0000001 	and	r0, r0, r1
40016450:	e58d000c 	str	r0, [sp, #12]
40016454:	e1a0100d 	mov	r1, sp
40016458:	e1a00006 	mov	r0, r6
4001645c:	eb00306a 	bl	4002260c <CyU3PDmaDscrSetConfig>
40016460:	e59d0008 	ldr	r0, [sp, #8]
40016464:	e1a06800 	lsl	r6, r0, #16
40016468:	e1a06826 	lsr	r6, r6, #16
4001646c:	e1b00005 	movs	r0, r5
40016470:	e2451001 	sub	r1, r5, #1
40016474:	e1a05801 	lsl	r5, r1, #16
40016478:	e1a05825 	lsr	r5, r5, #16
4001647c:	1affffed 	bne	40016438 <CyU3PDmaChannelReset_TypeManual+0x28>
40016480:	e1d400bc 	ldrh	r0, [r4, #12]
40016484:	e1c401b6 	strh	r0, [r4, #22]
40016488:	e1c401ba 	strh	r0, [r4, #26]
4001648c:	e1c401be 	strh	r0, [r4, #30]
40016490:	e1d400b4 	ldrh	r0, [r4, #4]
40016494:	e3500003 	cmp	r0, #3
40016498:	0a000018 	beq	40016500 <CyU3PDmaChannelReset_TypeManual+0xf0>
4001649c:	e1d460be 	ldrh	r6, [r4, #14]
400164a0:	e1d450b8 	ldrh	r5, [r4, #8]
400164a4:	ea00000c 	b	400164dc <CyU3PDmaChannelReset_TypeManual+0xcc>
400164a8:	e1a0100d 	mov	r1, sp
400164ac:	e1a00006 	mov	r0, r6
400164b0:	eb00303a 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400164b4:	e59d000c 	ldr	r0, [sp, #12]
400164b8:	e59f1044 	ldr	r1, [pc, #68]	; 40016504 <CyU3PDmaChannelReset_TypeManual+0xf4>
400164bc:	e0000001 	and	r0, r0, r1
400164c0:	e58d000c 	str	r0, [sp, #12]
400164c4:	e1a0100d 	mov	r1, sp
400164c8:	e1a00006 	mov	r0, r6
400164cc:	eb00304e 	bl	4002260c <CyU3PDmaDscrSetConfig>
400164d0:	e59d0008 	ldr	r0, [sp, #8]
400164d4:	e1a06800 	lsl	r6, r0, #16
400164d8:	e1a06826 	lsr	r6, r6, #16
400164dc:	e1b00005 	movs	r0, r5
400164e0:	e2451001 	sub	r1, r5, #1
400164e4:	e1a05801 	lsl	r5, r1, #16
400164e8:	e1a05825 	lsr	r5, r5, #16
400164ec:	1affffed 	bne	400164a8 <CyU3PDmaChannelReset_TypeManual+0x98>
400164f0:	e1d400be 	ldrh	r0, [r4, #14]
400164f4:	e1c401b8 	strh	r0, [r4, #24]
400164f8:	e1c401bc 	strh	r0, [r4, #28]
400164fc:	e1c402b0 	strh	r0, [r4, #32]
40016500:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016504:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

40016508 <CyU3PDmaChannelSetXfer>:
40016508:	e92d4070 	push	{r4, r5, r6, lr}
4001650c:	e1a04000 	mov	r4, r0
40016510:	e1a05001 	mov	r5, r1
40016514:	e3e01000 	mvn	r1, #0
40016518:	e1a00004 	mov	r0, r4
4001651c:	ebfffb1e 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016520:	e1a06000 	mov	r6, r0
40016524:	e3560000 	cmp	r6, #0
40016528:	0a000001 	beq	40016534 <CyU3PDmaChannelSetXfer+0x2c>
4001652c:	e1a00006 	mov	r0, r6
40016530:	e8bd8070 	pop	{r4, r5, r6, pc}
40016534:	e5940000 	ldr	r0, [r4]
40016538:	e3500001 	cmp	r0, #1
4001653c:	0a000000 	beq	40016544 <CyU3PDmaChannelSetXfer+0x3c>
40016540:	e3a06043 	mov	r6, #67	; 0x43
40016544:	e1d400b8 	ldrh	r0, [r4, #8]
40016548:	e3500000 	cmp	r0, #0
4001654c:	1a000000 	bne	40016554 <CyU3PDmaChannelSetXfer+0x4c>
40016550:	e3a06046 	mov	r6, #70	; 0x46
40016554:	e3560000 	cmp	r6, #0
40016558:	1a00001d 	bne	400165d4 <CyU3PDmaChannelSetXfer+0xcc>
4001655c:	e3a02002 	mov	r2, #2
40016560:	e3e01027 	mvn	r1, #39	; 0x27
40016564:	e2840074 	add	r0, r4, #116	; 0x74
40016568:	ebffce55 	bl	40009ec4 <_txe_event_flags_set>
4001656c:	e5845034 	str	r5, [r4, #52]	; 0x34
40016570:	e1d400b4 	ldrh	r0, [r4, #4]
40016574:	e3500005 	cmp	r0, #5
40016578:	308ff100 	addcc	pc, pc, r0, lsl #2
4001657c:	ea000011 	b	400165c8 <CyU3PDmaChannelSetXfer+0xc0>
40016580:	ea000003 	b	40016594 <CyU3PDmaChannelSetXfer+0x8c>
40016584:	ea000004 	b	4001659c <CyU3PDmaChannelSetXfer+0x94>
40016588:	ea00000a 	b	400165b8 <CyU3PDmaChannelSetXfer+0xb0>
4001658c:	ea000006 	b	400165ac <CyU3PDmaChannelSetXfer+0xa4>
40016590:	ea000007 	b	400165b4 <CyU3PDmaChannelSetXfer+0xac>
40016594:	e1a00000 	nop			; (mov r0, r0)
40016598:	e1a00000 	nop			; (mov r0, r0)
4001659c:	e1a01005 	mov	r1, r5
400165a0:	e1a00004 	mov	r0, r4
400165a4:	eb00000e 	bl	400165e4 <CyU3PDmaChannelSetXfer_TypeAuto>
400165a8:	ea000008 	b	400165d0 <CyU3PDmaChannelSetXfer+0xc8>
400165ac:	e1a00000 	nop			; (mov r0, r0)
400165b0:	e1a00000 	nop			; (mov r0, r0)
400165b4:	e1a00000 	nop			; (mov r0, r0)
400165b8:	e1a01005 	mov	r1, r5
400165bc:	e1a00004 	mov	r0, r4
400165c0:	eb00006f 	bl	40016784 <CyU3PDmaChannelSetXfer_TypeManual>
400165c4:	ea000001 	b	400165d0 <CyU3PDmaChannelSetXfer+0xc8>
400165c8:	e1a00000 	nop			; (mov r0, r0)
400165cc:	e1a00000 	nop			; (mov r0, r0)
400165d0:	e1a00000 	nop			; (mov r0, r0)
400165d4:	e284003c 	add	r0, r4, #60	; 0x3c
400165d8:	ebffcf06 	bl	4000a1f8 <_txe_mutex_put>
400165dc:	e1a00006 	mov	r0, r6
400165e0:	eaffffd2 	b	40016530 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

400165e4 <CyU3PDmaChannelSetXfer_TypeAuto>:
400165e4:	e92d4030 	push	{r4, r5, lr}
400165e8:	e24dd01c 	sub	sp, sp, #28
400165ec:	e1a04000 	mov	r4, r0
400165f0:	e1a05001 	mov	r5, r1
400165f4:	e1d401b0 	ldrh	r0, [r4, #16]
400165f8:	ebfff973 	bl	40014bcc <CyU3PDmaSocketDisable>
400165fc:	e1d401b2 	ldrh	r0, [r4, #18]
40016600:	ebfff971 	bl	40014bcc <CyU3PDmaSocketDisable>
40016604:	e3a00002 	mov	r0, #2
40016608:	e5840000 	str	r0, [r4]
4001660c:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016610:	e1d401b0 	ldrh	r0, [r4, #16]
40016614:	ebfffa87 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
40016618:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
4001661c:	e1d401b2 	ldrh	r0, [r4, #18]
40016620:	ebfffa84 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
40016624:	e1d401b0 	ldrh	r0, [r4, #16]
40016628:	e28d1004 	add	r1, sp, #4
4001662c:	ebfff97e 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40016630:	e58d5008 	str	r5, [sp, #8]
40016634:	e3a00000 	mov	r0, #0
40016638:	e58d000c 	str	r0, [sp, #12]
4001663c:	e3550000 	cmp	r5, #0
40016640:	1a000003 	bne	40016654 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
40016644:	e59d0010 	ldr	r0, [sp, #16]
40016648:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001664c:	e58d0010 	str	r0, [sp, #16]
40016650:	ea000002 	b	40016660 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
40016654:	e59d0010 	ldr	r0, [sp, #16]
40016658:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001665c:	e58d0010 	str	r0, [sp, #16]
40016660:	e59d0010 	ldr	r0, [sp, #16]
40016664:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016668:	e58d0010 	str	r0, [sp, #16]
4001666c:	e59d0010 	ldr	r0, [sp, #16]
40016670:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016674:	e58d0010 	str	r0, [sp, #16]
40016678:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
4001667c:	e3500001 	cmp	r0, #1
40016680:	1a000003 	bne	40016694 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
40016684:	e59d0010 	ldr	r0, [sp, #16]
40016688:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
4001668c:	e58d0010 	str	r0, [sp, #16]
40016690:	ea000002 	b	400166a0 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016694:	e59d0010 	ldr	r0, [sp, #16]
40016698:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001669c:	e58d0010 	str	r0, [sp, #16]
400166a0:	e1d400ba 	ldrh	r0, [r4, #10]
400166a4:	e3500000 	cmp	r0, #0
400166a8:	0a000006 	beq	400166c8 <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
400166ac:	e1d400b8 	ldrh	r0, [r4, #8]
400166b0:	e3800b01 	orr	r0, r0, #1024	; 0x400
400166b4:	e1d410ba 	ldrh	r1, [r4, #10]
400166b8:	e1800281 	orr	r0, r0, r1, lsl #5
400166bc:	e59d1010 	ldr	r1, [sp, #16]
400166c0:	e1800001 	orr	r0, r0, r1
400166c4:	e58d0010 	str	r0, [sp, #16]
400166c8:	e3e00000 	mvn	r0, #0
400166cc:	e58d0014 	str	r0, [sp, #20]
400166d0:	e1d401b0 	ldrh	r0, [r4, #16]
400166d4:	e28d1004 	add	r1, sp, #4
400166d8:	ebfff9fd 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
400166dc:	e1d401b2 	ldrh	r0, [r4, #18]
400166e0:	e28d1004 	add	r1, sp, #4
400166e4:	ebfff950 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400166e8:	e58d5008 	str	r5, [sp, #8]
400166ec:	e3a00000 	mov	r0, #0
400166f0:	e58d000c 	str	r0, [sp, #12]
400166f4:	e3550000 	cmp	r5, #0
400166f8:	1a000006 	bne	40016718 <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
400166fc:	e59d0018 	ldr	r0, [sp, #24]
40016700:	e3c00080 	bic	r0, r0, #128	; 0x80
40016704:	e58d0018 	str	r0, [sp, #24]
40016708:	e59d0010 	ldr	r0, [sp, #16]
4001670c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016710:	e58d0010 	str	r0, [sp, #16]
40016714:	ea000005 	b	40016730 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
40016718:	e59d0018 	ldr	r0, [sp, #24]
4001671c:	e3800080 	orr	r0, r0, #128	; 0x80
40016720:	e58d0018 	str	r0, [sp, #24]
40016724:	e59d0010 	ldr	r0, [sp, #16]
40016728:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001672c:	e58d0010 	str	r0, [sp, #16]
40016730:	e59d0010 	ldr	r0, [sp, #16]
40016734:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016738:	e58d0010 	str	r0, [sp, #16]
4001673c:	e59d0010 	ldr	r0, [sp, #16]
40016740:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016744:	e58d0010 	str	r0, [sp, #16]
40016748:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
4001674c:	e3500001 	cmp	r0, #1
40016750:	1a000003 	bne	40016764 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
40016754:	e59d0010 	ldr	r0, [sp, #16]
40016758:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
4001675c:	e58d0010 	str	r0, [sp, #16]
40016760:	ea000002 	b	40016770 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016764:	e59d0010 	ldr	r0, [sp, #16]
40016768:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001676c:	e58d0010 	str	r0, [sp, #16]
40016770:	e1d401b2 	ldrh	r0, [r4, #18]
40016774:	e28d1004 	add	r1, sp, #4
40016778:	ebfff9d5 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001677c:	e28dd01c 	add	sp, sp, #28
40016780:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016784 <CyU3PDmaChannelSetXfer_TypeManual>:
40016784:	e92d4030 	push	{r4, r5, lr}
40016788:	e24dd01c 	sub	sp, sp, #28
4001678c:	e1a04000 	mov	r4, r0
40016790:	e1a05001 	mov	r5, r1
40016794:	e3a00002 	mov	r0, #2
40016798:	e5840000 	str	r0, [r4]
4001679c:	e1d400b4 	ldrh	r0, [r4, #4]
400167a0:	e3500004 	cmp	r0, #4
400167a4:	0a00003d 	beq	400168a0 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
400167a8:	e1d401b0 	ldrh	r0, [r4, #16]
400167ac:	ebfff906 	bl	40014bcc <CyU3PDmaSocketDisable>
400167b0:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400167b4:	e1d401b0 	ldrh	r0, [r4, #16]
400167b8:	ebfffa1e 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
400167bc:	e1d401b0 	ldrh	r0, [r4, #16]
400167c0:	e28d1004 	add	r1, sp, #4
400167c4:	ebfff918 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400167c8:	e58d5008 	str	r5, [sp, #8]
400167cc:	e3a00000 	mov	r0, #0
400167d0:	e58d000c 	str	r0, [sp, #12]
400167d4:	e59d0010 	ldr	r0, [sp, #16]
400167d8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400167dc:	e58d0010 	str	r0, [sp, #16]
400167e0:	e59d0010 	ldr	r0, [sp, #16]
400167e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400167e8:	e58d0010 	str	r0, [sp, #16]
400167ec:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400167f0:	e3500001 	cmp	r0, #1
400167f4:	1a000003 	bne	40016808 <CyU3PDmaChannelSetXfer_TypeManual+0x84>
400167f8:	e59d0010 	ldr	r0, [sp, #16]
400167fc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016800:	e58d0010 	str	r0, [sp, #16]
40016804:	ea000002 	b	40016814 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016808:	e59d0010 	ldr	r0, [sp, #16]
4001680c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016810:	e58d0010 	str	r0, [sp, #16]
40016814:	e1d400ba 	ldrh	r0, [r4, #10]
40016818:	e3500000 	cmp	r0, #0
4001681c:	0a000006 	beq	4001683c <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016820:	e1d400b8 	ldrh	r0, [r4, #8]
40016824:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016828:	e1d410ba 	ldrh	r1, [r4, #10]
4001682c:	e1800281 	orr	r0, r0, r1, lsl #5
40016830:	e59d1010 	ldr	r1, [sp, #16]
40016834:	e1800001 	orr	r0, r0, r1
40016838:	e58d0010 	str	r0, [sp, #16]
4001683c:	e3e00000 	mvn	r0, #0
40016840:	e58d0014 	str	r0, [sp, #20]
40016844:	e3550000 	cmp	r5, #0
40016848:	0a000002 	beq	40016858 <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
4001684c:	e1d400b4 	ldrh	r0, [r4, #4]
40016850:	e3500002 	cmp	r0, #2
40016854:	1a000008 	bne	4001687c <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
40016858:	e3a00000 	mov	r0, #0
4001685c:	e58d0008 	str	r0, [sp, #8]
40016860:	e59d0010 	ldr	r0, [sp, #16]
40016864:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016868:	e58d0010 	str	r0, [sp, #16]
4001686c:	e59d0018 	ldr	r0, [sp, #24]
40016870:	e3c00080 	bic	r0, r0, #128	; 0x80
40016874:	e58d0018 	str	r0, [sp, #24]
40016878:	ea000005 	b	40016894 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
4001687c:	e59d0010 	ldr	r0, [sp, #16]
40016880:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016884:	e58d0010 	str	r0, [sp, #16]
40016888:	e59d0018 	ldr	r0, [sp, #24]
4001688c:	e3800080 	orr	r0, r0, #128	; 0x80
40016890:	e58d0018 	str	r0, [sp, #24]
40016894:	e1d401b0 	ldrh	r0, [r4, #16]
40016898:	e28d1004 	add	r1, sp, #4
4001689c:	ebfff98c 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
400168a0:	e1d400b4 	ldrh	r0, [r4, #4]
400168a4:	e3500003 	cmp	r0, #3
400168a8:	0a00002e 	beq	40016968 <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
400168ac:	e1d401b2 	ldrh	r0, [r4, #18]
400168b0:	ebfff8c5 	bl	40014bcc <CyU3PDmaSocketDisable>
400168b4:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
400168b8:	e1d401b2 	ldrh	r0, [r4, #18]
400168bc:	ebfff9dd 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
400168c0:	e1d401b2 	ldrh	r0, [r4, #18]
400168c4:	e28d1004 	add	r1, sp, #4
400168c8:	ebfff8d7 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400168cc:	e58d5008 	str	r5, [sp, #8]
400168d0:	e3a00000 	mov	r0, #0
400168d4:	e58d000c 	str	r0, [sp, #12]
400168d8:	e59d0010 	ldr	r0, [sp, #16]
400168dc:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400168e0:	e58d0010 	str	r0, [sp, #16]
400168e4:	e59d0010 	ldr	r0, [sp, #16]
400168e8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400168ec:	e58d0010 	str	r0, [sp, #16]
400168f0:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400168f4:	e3500001 	cmp	r0, #1
400168f8:	1a000003 	bne	4001690c <CyU3PDmaChannelSetXfer_TypeManual+0x188>
400168fc:	e59d0010 	ldr	r0, [sp, #16]
40016900:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016904:	e58d0010 	str	r0, [sp, #16]
40016908:	ea000002 	b	40016918 <CyU3PDmaChannelSetXfer_TypeManual+0x194>
4001690c:	e59d0010 	ldr	r0, [sp, #16]
40016910:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016914:	e58d0010 	str	r0, [sp, #16]
40016918:	e3e00000 	mvn	r0, #0
4001691c:	e58d0014 	str	r0, [sp, #20]
40016920:	e3550000 	cmp	r5, #0
40016924:	1a000006 	bne	40016944 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016928:	e59d0010 	ldr	r0, [sp, #16]
4001692c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016930:	e58d0010 	str	r0, [sp, #16]
40016934:	e59d0018 	ldr	r0, [sp, #24]
40016938:	e3c00080 	bic	r0, r0, #128	; 0x80
4001693c:	e58d0018 	str	r0, [sp, #24]
40016940:	ea000005 	b	4001695c <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016944:	e59d0010 	ldr	r0, [sp, #16]
40016948:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001694c:	e58d0010 	str	r0, [sp, #16]
40016950:	e59d0018 	ldr	r0, [sp, #24]
40016954:	e3800080 	orr	r0, r0, #128	; 0x80
40016958:	e58d0018 	str	r0, [sp, #24]
4001695c:	e1d401b2 	ldrh	r0, [r4, #18]
40016960:	e28d1004 	add	r1, sp, #4
40016964:	ebfff95a 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40016968:	e28dd01c 	add	sp, sp, #28
4001696c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016970 <CyU3PDmaChannelSetupRecvBuffer>:
40016970:	e92d4070 	push	{r4, r5, r6, lr}
40016974:	e24dd028 	sub	sp, sp, #40	; 0x28
40016978:	e1a04000 	mov	r4, r0
4001697c:	e1a05001 	mov	r5, r1
40016980:	e3550000 	cmp	r5, #0
40016984:	1a000002 	bne	40016994 <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016988:	e3a00041 	mov	r0, #65	; 0x41
4001698c:	e28dd028 	add	sp, sp, #40	; 0x28
40016990:	e8bd8070 	pop	{r4, r5, r6, pc}
40016994:	e5950000 	ldr	r0, [r5]
40016998:	e3500101 	cmp	r0, #1073741824	; 0x40000000
4001699c:	3a000005 	bcc	400169b8 <CyU3PDmaChannelSetupRecvBuffer+0x48>
400169a0:	e5950000 	ldr	r0, [r5]
400169a4:	e1d510b6 	ldrh	r1, [r5, #6]
400169a8:	e0800001 	add	r0, r0, r1
400169ac:	e59f11d4 	ldr	r1, [pc, #468]	; 40016b88 <CyU3PDmaChannelSetupRecvBuffer+0x218>
400169b0:	e1500001 	cmp	r0, r1
400169b4:	3a000001 	bcc	400169c0 <CyU3PDmaChannelSetupRecvBuffer+0x50>
400169b8:	e3a00040 	mov	r0, #64	; 0x40
400169bc:	eafffff2 	b	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400169c0:	e1d500b6 	ldrh	r0, [r5, #6]
400169c4:	e59f11c0 	ldr	r1, [pc, #448]	; 40016b8c <CyU3PDmaChannelSetupRecvBuffer+0x21c>
400169c8:	e1500001 	cmp	r0, r1
400169cc:	da000001 	ble	400169d8 <CyU3PDmaChannelSetupRecvBuffer+0x68>
400169d0:	e3a00040 	mov	r0, #64	; 0x40
400169d4:	eaffffec 	b	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400169d8:	e1d500b6 	ldrh	r0, [r5, #6]
400169dc:	e3500000 	cmp	r0, #0
400169e0:	0a000002 	beq	400169f0 <CyU3PDmaChannelSetupRecvBuffer+0x80>
400169e4:	e1d500b6 	ldrh	r0, [r5, #6]
400169e8:	e310000f 	tst	r0, #15
400169ec:	0a000001 	beq	400169f8 <CyU3PDmaChannelSetupRecvBuffer+0x88>
400169f0:	e3a00040 	mov	r0, #64	; 0x40
400169f4:	eaffffe4 	b	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400169f8:	e3e01000 	mvn	r1, #0
400169fc:	e1a00004 	mov	r0, r4
40016a00:	ebfff9e5 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016a04:	e1a06000 	mov	r6, r0
40016a08:	e3560000 	cmp	r6, #0
40016a0c:	0a000001 	beq	40016a18 <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016a10:	e1a00006 	mov	r0, r6
40016a14:	eaffffdc 	b	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016a18:	e1d400b4 	ldrh	r0, [r4, #4]
40016a1c:	e3500004 	cmp	r0, #4
40016a20:	1a000000 	bne	40016a28 <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016a24:	e3a06046 	mov	r6, #70	; 0x46
40016a28:	e5940000 	ldr	r0, [r4]
40016a2c:	e3500001 	cmp	r0, #1
40016a30:	0a000000 	beq	40016a38 <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016a34:	e3a06043 	mov	r6, #67	; 0x43
40016a38:	e3560000 	cmp	r6, #0
40016a3c:	0a000003 	beq	40016a50 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
40016a40:	e284003c 	add	r0, r4, #60	; 0x3c
40016a44:	ebffcdeb 	bl	4000a1f8 <_txe_mutex_put>
40016a48:	e1a00006 	mov	r0, r6
40016a4c:	eaffffce 	b	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016a50:	e1d401b0 	ldrh	r0, [r4, #16]
40016a54:	ebfff85c 	bl	40014bcc <CyU3PDmaSocketDisable>
40016a58:	e1d401b0 	ldrh	r0, [r4, #16]
40016a5c:	e3a01000 	mov	r1, #0
40016a60:	ebfff974 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
40016a64:	e3a02002 	mov	r2, #2
40016a68:	e3e01027 	mvn	r1, #39	; 0x27
40016a6c:	e2840074 	add	r0, r4, #116	; 0x74
40016a70:	ebffcd13 	bl	40009ec4 <_txe_event_flags_set>
40016a74:	e3a00004 	mov	r0, #4
40016a78:	e5840000 	str	r0, [r4]
40016a7c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016a80:	e3500000 	cmp	r0, #0
40016a84:	0a000002 	beq	40016a94 <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016a88:	e1d510b6 	ldrh	r1, [r5, #6]
40016a8c:	e5950000 	ldr	r0, [r5]
40016a90:	ebffed96 	bl	400120f0 <CyU3PSysFlushDRegion>
40016a94:	e1d401b0 	ldrh	r0, [r4, #16]
40016a98:	e1a0100d 	mov	r1, sp
40016a9c:	ebfff862 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40016aa0:	e59d0000 	ldr	r0, [sp]
40016aa4:	e1c401b6 	strh	r0, [r4, #22]
40016aa8:	e1d401b4 	ldrh	r0, [r4, #20]
40016aac:	e28d1018 	add	r1, sp, #24
40016ab0:	eb002eba 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40016ab4:	e5950000 	ldr	r0, [r5]
40016ab8:	e58d0018 	str	r0, [sp, #24]
40016abc:	e1d401b0 	ldrh	r0, [r4, #16]
40016ac0:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016ac4:	e1810800 	orr	r0, r1, r0, lsl #16
40016ac8:	e58d001c 	str	r0, [sp, #28]
40016acc:	e59d001c 	ldr	r0, [sp, #28]
40016ad0:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016ad4:	e58d001c 	str	r0, [sp, #28]
40016ad8:	e1d401b6 	ldrh	r0, [r4, #22]
40016adc:	e1e01741 	mvn	r1, r1, asr #14
40016ae0:	e1810800 	orr	r0, r1, r0, lsl #16
40016ae4:	e58d0020 	str	r0, [sp, #32]
40016ae8:	e1d500b6 	ldrh	r0, [r5, #6]
40016aec:	e241100f 	sub	r1, r1, #15
40016af0:	e0000001 	and	r0, r0, r1
40016af4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016af8:	e1d401b4 	ldrh	r0, [r4, #20]
40016afc:	e28d1018 	add	r1, sp, #24
40016b00:	eb002ec1 	bl	4002260c <CyU3PDmaDscrSetConfig>
40016b04:	e59d000c 	ldr	r0, [sp, #12]
40016b08:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016b0c:	e58d000c 	str	r0, [sp, #12]
40016b10:	e59d000c 	ldr	r0, [sp, #12]
40016b14:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016b18:	e58d000c 	str	r0, [sp, #12]
40016b1c:	e59d000c 	ldr	r0, [sp, #12]
40016b20:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016b24:	e58d000c 	str	r0, [sp, #12]
40016b28:	e59d000c 	ldr	r0, [sp, #12]
40016b2c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016b30:	e58d000c 	str	r0, [sp, #12]
40016b34:	e3a00001 	mov	r0, #1
40016b38:	e58d0004 	str	r0, [sp, #4]
40016b3c:	e3a00000 	mov	r0, #0
40016b40:	e58d0008 	str	r0, [sp, #8]
40016b44:	e3e00000 	mvn	r0, #0
40016b48:	e58d0010 	str	r0, [sp, #16]
40016b4c:	e59d0014 	ldr	r0, [sp, #20]
40016b50:	e3800001 	orr	r0, r0, #1
40016b54:	e58d0014 	str	r0, [sp, #20]
40016b58:	e59d0014 	ldr	r0, [sp, #20]
40016b5c:	e3c00080 	bic	r0, r0, #128	; 0x80
40016b60:	e58d0014 	str	r0, [sp, #20]
40016b64:	e1d401b4 	ldrh	r0, [r4, #20]
40016b68:	e58d0000 	str	r0, [sp]
40016b6c:	e1d401b0 	ldrh	r0, [r4, #16]
40016b70:	e1a0100d 	mov	r1, sp
40016b74:	ebfff8d6 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40016b78:	e284003c 	add	r0, r4, #60	; 0x3c
40016b7c:	ebffcd9d 	bl	4000a1f8 <_txe_mutex_put>
40016b80:	e3a00000 	mov	r0, #0
40016b84:	eaffff80 	b	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016b88:	40080000 	.word	0x40080000
40016b8c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016b90 <CyU3PDmaChannelSetupSendBuffer>:
40016b90:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016b94:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016b98:	e1a04000 	mov	r4, r0
40016b9c:	e1a05001 	mov	r5, r1
40016ba0:	e3550000 	cmp	r5, #0
40016ba4:	1a000002 	bne	40016bb4 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016ba8:	e3a00041 	mov	r0, #65	; 0x41
40016bac:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016bb0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016bb4:	e5950000 	ldr	r0, [r5]
40016bb8:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016bbc:	3a000005 	bcc	40016bd8 <CyU3PDmaChannelSetupSendBuffer+0x48>
40016bc0:	e5950000 	ldr	r0, [r5]
40016bc4:	e1d510b4 	ldrh	r1, [r5, #4]
40016bc8:	e0800001 	add	r0, r0, r1
40016bcc:	e59f11ec 	ldr	r1, [pc, #492]	; 40016dc0 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016bd0:	e1500001 	cmp	r0, r1
40016bd4:	3a000001 	bcc	40016be0 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016bd8:	e3a00040 	mov	r0, #64	; 0x40
40016bdc:	eafffff2 	b	40016bac <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016be0:	e1d500b4 	ldrh	r0, [r5, #4]
40016be4:	e59f11d8 	ldr	r1, [pc, #472]	; 40016dc4 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016be8:	e1500001 	cmp	r0, r1
40016bec:	da000001 	ble	40016bf8 <CyU3PDmaChannelSetupSendBuffer+0x68>
40016bf0:	e3a00040 	mov	r0, #64	; 0x40
40016bf4:	eaffffec 	b	40016bac <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016bf8:	e3e01000 	mvn	r1, #0
40016bfc:	e1a00004 	mov	r0, r4
40016c00:	ebfff965 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016c04:	e1a07000 	mov	r7, r0
40016c08:	e3570000 	cmp	r7, #0
40016c0c:	0a000001 	beq	40016c18 <CyU3PDmaChannelSetupSendBuffer+0x88>
40016c10:	e1a00007 	mov	r0, r7
40016c14:	eaffffe4 	b	40016bac <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016c18:	e1d400b4 	ldrh	r0, [r4, #4]
40016c1c:	e3500003 	cmp	r0, #3
40016c20:	1a000000 	bne	40016c28 <CyU3PDmaChannelSetupSendBuffer+0x98>
40016c24:	e3a07046 	mov	r7, #70	; 0x46
40016c28:	e5940000 	ldr	r0, [r4]
40016c2c:	e3500001 	cmp	r0, #1
40016c30:	0a000000 	beq	40016c38 <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016c34:	e3a07043 	mov	r7, #67	; 0x43
40016c38:	e3570000 	cmp	r7, #0
40016c3c:	0a000003 	beq	40016c50 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016c40:	e284003c 	add	r0, r4, #60	; 0x3c
40016c44:	ebffcd6b 	bl	4000a1f8 <_txe_mutex_put>
40016c48:	e1a00007 	mov	r0, r7
40016c4c:	eaffffd6 	b	40016bac <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016c50:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016c54:	e3500000 	cmp	r0, #0
40016c58:	0a000005 	beq	40016c74 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016c5c:	e1d500b4 	ldrh	r0, [r5, #4]
40016c60:	e3500000 	cmp	r0, #0
40016c64:	0a000002 	beq	40016c74 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016c68:	e1d510b4 	ldrh	r1, [r5, #4]
40016c6c:	e5950000 	ldr	r0, [r5]
40016c70:	ebffed10 	bl	400120b8 <CyU3PSysCleanDRegion>
40016c74:	e1d401b2 	ldrh	r0, [r4, #18]
40016c78:	ebfff7d3 	bl	40014bcc <CyU3PDmaSocketDisable>
40016c7c:	e1d401b2 	ldrh	r0, [r4, #18]
40016c80:	e3a01000 	mov	r1, #0
40016c84:	ebfff8eb 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
40016c88:	e3a02002 	mov	r2, #2
40016c8c:	e3e01027 	mvn	r1, #39	; 0x27
40016c90:	e2840074 	add	r0, r4, #116	; 0x74
40016c94:	ebffcc8a 	bl	40009ec4 <_txe_event_flags_set>
40016c98:	e3a00003 	mov	r0, #3
40016c9c:	e5840000 	str	r0, [r4]
40016ca0:	e1d401b2 	ldrh	r0, [r4, #18]
40016ca4:	e28d1004 	add	r1, sp, #4
40016ca8:	ebfff7df 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40016cac:	e59d0004 	ldr	r0, [sp, #4]
40016cb0:	e1c401b8 	strh	r0, [r4, #24]
40016cb4:	e1d401b4 	ldrh	r0, [r4, #20]
40016cb8:	e28d101c 	add	r1, sp, #28
40016cbc:	eb002e37 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40016cc0:	e5950000 	ldr	r0, [r5]
40016cc4:	e58d001c 	str	r0, [sp, #28]
40016cc8:	e1d401b2 	ldrh	r0, [r4, #18]
40016ccc:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016cd0:	e58d0020 	str	r0, [sp, #32]
40016cd4:	e59d0020 	ldr	r0, [sp, #32]
40016cd8:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016cdc:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016ce0:	e58d0020 	str	r0, [sp, #32]
40016ce4:	e1d401b8 	ldrh	r0, [r4, #24]
40016ce8:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016cec:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016cf0:	e1d500b4 	ldrh	r0, [r5, #4]
40016cf4:	e280000f 	add	r0, r0, #15
40016cf8:	e59f10c4 	ldr	r1, [pc, #196]	; 40016dc4 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016cfc:	e0006001 	and	r6, r0, r1
40016d00:	e1d500b4 	ldrh	r0, [r5, #4]
40016d04:	e1860800 	orr	r0, r6, r0, lsl #16
40016d08:	e3800008 	orr	r0, r0, #8
40016d0c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016d10:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016d14:	e1d510b8 	ldrh	r1, [r5, #8]
40016d18:	e201100e 	and	r1, r1, #14
40016d1c:	e1800001 	orr	r0, r0, r1
40016d20:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016d24:	e1d401b4 	ldrh	r0, [r4, #20]
40016d28:	e28d101c 	add	r1, sp, #28
40016d2c:	eb002e36 	bl	4002260c <CyU3PDmaDscrSetConfig>
40016d30:	e59d0010 	ldr	r0, [sp, #16]
40016d34:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016d38:	e58d0010 	str	r0, [sp, #16]
40016d3c:	e59d0010 	ldr	r0, [sp, #16]
40016d40:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016d44:	e58d0010 	str	r0, [sp, #16]
40016d48:	e59d0010 	ldr	r0, [sp, #16]
40016d4c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016d50:	e58d0010 	str	r0, [sp, #16]
40016d54:	e59d0010 	ldr	r0, [sp, #16]
40016d58:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016d5c:	e58d0010 	str	r0, [sp, #16]
40016d60:	e59d0010 	ldr	r0, [sp, #16]
40016d64:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016d68:	e58d0010 	str	r0, [sp, #16]
40016d6c:	e1d500b4 	ldrh	r0, [r5, #4]
40016d70:	e58d0008 	str	r0, [sp, #8]
40016d74:	e3a00000 	mov	r0, #0
40016d78:	e58d000c 	str	r0, [sp, #12]
40016d7c:	e3e00000 	mvn	r0, #0
40016d80:	e58d0014 	str	r0, [sp, #20]
40016d84:	e59d0018 	ldr	r0, [sp, #24]
40016d88:	e3800002 	orr	r0, r0, #2
40016d8c:	e58d0018 	str	r0, [sp, #24]
40016d90:	e59d0018 	ldr	r0, [sp, #24]
40016d94:	e3c00080 	bic	r0, r0, #128	; 0x80
40016d98:	e58d0018 	str	r0, [sp, #24]
40016d9c:	e1d401b4 	ldrh	r0, [r4, #20]
40016da0:	e58d0004 	str	r0, [sp, #4]
40016da4:	e1d401b2 	ldrh	r0, [r4, #18]
40016da8:	e28d1004 	add	r1, sp, #4
40016dac:	ebfff848 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40016db0:	e284003c 	add	r0, r4, #60	; 0x3c
40016db4:	ebffcd0f 	bl	4000a1f8 <_txe_mutex_put>
40016db8:	e3a00000 	mov	r0, #0
40016dbc:	eaffff7a 	b	40016bac <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016dc0:	40080000 	.word	0x40080000
40016dc4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016dc8 <CyU3PDmaChannelWaitForCompletion>:
40016dc8:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016dcc:	e1a04000 	mov	r4, r0
40016dd0:	e1a05001 	mov	r5, r1
40016dd4:	e3a08000 	mov	r8, #0
40016dd8:	e1a01005 	mov	r1, r5
40016ddc:	e1a00004 	mov	r0, r4
40016de0:	ebfff8ed 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016de4:	e1a07000 	mov	r7, r0
40016de8:	e3570000 	cmp	r7, #0
40016dec:	0a000001 	beq	40016df8 <CyU3PDmaChannelWaitForCompletion+0x30>
40016df0:	e1a00007 	mov	r0, r7
40016df4:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016df8:	e5946000 	ldr	r6, [r4]
40016dfc:	e3560001 	cmp	r6, #1
40016e00:	1a00000b 	bne	40016e34 <CyU3PDmaChannelWaitForCompletion+0x6c>
40016e04:	e3a03000 	mov	r3, #0
40016e08:	e58d3000 	str	r3, [sp]
40016e0c:	e28d3004 	add	r3, sp, #4
40016e10:	e3a02000 	mov	r2, #0
40016e14:	e3a01007 	mov	r1, #7
40016e18:	e2840074 	add	r0, r4, #116	; 0x74
40016e1c:	ebffcbf8 	bl	40009e04 <_txe_event_flags_get>
40016e20:	e1a07000 	mov	r7, r0
40016e24:	e3570000 	cmp	r7, #0
40016e28:	0a000016 	beq	40016e88 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e2c:	e3a07042 	mov	r7, #66	; 0x42
40016e30:	ea000014 	b	40016e88 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e34:	e3560002 	cmp	r6, #2
40016e38:	1a000005 	bne	40016e54 <CyU3PDmaChannelWaitForCompletion+0x8c>
40016e3c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016e40:	e3500000 	cmp	r0, #0
40016e44:	1a000000 	bne	40016e4c <CyU3PDmaChannelWaitForCompletion+0x84>
40016e48:	e3a07046 	mov	r7, #70	; 0x46
40016e4c:	e3a08061 	mov	r8, #97	; 0x61
40016e50:	ea00000c 	b	40016e88 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e54:	e3560003 	cmp	r6, #3
40016e58:	1a000001 	bne	40016e64 <CyU3PDmaChannelWaitForCompletion+0x9c>
40016e5c:	e3a08062 	mov	r8, #98	; 0x62
40016e60:	ea000008 	b	40016e88 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e64:	e3560004 	cmp	r6, #4
40016e68:	1a000001 	bne	40016e74 <CyU3PDmaChannelWaitForCompletion+0xac>
40016e6c:	e3a08064 	mov	r8, #100	; 0x64
40016e70:	ea000004 	b	40016e88 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e74:	e3560005 	cmp	r6, #5
40016e78:	1a000001 	bne	40016e84 <CyU3PDmaChannelWaitForCompletion+0xbc>
40016e7c:	e3a07049 	mov	r7, #73	; 0x49
40016e80:	ea000000 	b	40016e88 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e84:	e3a07042 	mov	r7, #66	; 0x42
40016e88:	e284003c 	add	r0, r4, #60	; 0x3c
40016e8c:	ebffccd9 	bl	4000a1f8 <_txe_mutex_put>
40016e90:	e3570000 	cmp	r7, #0
40016e94:	1a000015 	bne	40016ef0 <CyU3PDmaChannelWaitForCompletion+0x128>
40016e98:	e3580000 	cmp	r8, #0
40016e9c:	0a000013 	beq	40016ef0 <CyU3PDmaChannelWaitForCompletion+0x128>
40016ea0:	e58d5000 	str	r5, [sp]
40016ea4:	e28d3004 	add	r3, sp, #4
40016ea8:	e3a02000 	mov	r2, #0
40016eac:	e1a01008 	mov	r1, r8
40016eb0:	e2840074 	add	r0, r4, #116	; 0x74
40016eb4:	ebffcbd2 	bl	40009e04 <_txe_event_flags_get>
40016eb8:	e1a07000 	mov	r7, r0
40016ebc:	e3570000 	cmp	r7, #0
40016ec0:	0a000001 	beq	40016ecc <CyU3PDmaChannelWaitForCompletion+0x104>
40016ec4:	e3a07045 	mov	r7, #69	; 0x45
40016ec8:	ea000008 	b	40016ef0 <CyU3PDmaChannelWaitForCompletion+0x128>
40016ecc:	e59d0004 	ldr	r0, [sp, #4]
40016ed0:	e3100040 	tst	r0, #64	; 0x40
40016ed4:	0a000001 	beq	40016ee0 <CyU3PDmaChannelWaitForCompletion+0x118>
40016ed8:	e3a07049 	mov	r7, #73	; 0x49
40016edc:	ea000003 	b	40016ef0 <CyU3PDmaChannelWaitForCompletion+0x128>
40016ee0:	e59d0004 	ldr	r0, [sp, #4]
40016ee4:	e3100020 	tst	r0, #32
40016ee8:	0a000000 	beq	40016ef0 <CyU3PDmaChannelWaitForCompletion+0x128>
40016eec:	e3a07048 	mov	r7, #72	; 0x48
40016ef0:	e1a00007 	mov	r0, r7
40016ef4:	eaffffbe 	b	40016df4 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40016ef8 <CyU3PDmaChannelWaitForRecvBuffer>:
40016ef8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016efc:	e24dd018 	sub	sp, sp, #24
40016f00:	e1a04000 	mov	r4, r0
40016f04:	e1a05001 	mov	r5, r1
40016f08:	e1a06002 	mov	r6, r2
40016f0c:	e3550000 	cmp	r5, #0
40016f10:	1a000002 	bne	40016f20 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40016f14:	e3a00041 	mov	r0, #65	; 0x41
40016f18:	e28dd018 	add	sp, sp, #24
40016f1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016f20:	e1a01006 	mov	r1, r6
40016f24:	e1a00004 	mov	r0, r4
40016f28:	ebfff89b 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016f2c:	e1a07000 	mov	r7, r0
40016f30:	e3570000 	cmp	r7, #0
40016f34:	0a000001 	beq	40016f40 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40016f38:	e1a00007 	mov	r0, r7
40016f3c:	eafffff5 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f40:	e1d400b4 	ldrh	r0, [r4, #4]
40016f44:	e3500004 	cmp	r0, #4
40016f48:	1a000000 	bne	40016f50 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40016f4c:	e3a07046 	mov	r7, #70	; 0x46
40016f50:	e5948000 	ldr	r8, [r4]
40016f54:	e3570000 	cmp	r7, #0
40016f58:	1a000034 	bne	40017030 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016f5c:	e3580004 	cmp	r8, #4
40016f60:	1a00001e 	bne	40016fe0 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40016f64:	e284003c 	add	r0, r4, #60	; 0x3c
40016f68:	ebffcca2 	bl	4000a1f8 <_txe_mutex_put>
40016f6c:	e58d6000 	str	r6, [sp]
40016f70:	e28d3014 	add	r3, sp, #20
40016f74:	e3a02000 	mov	r2, #0
40016f78:	e3a01064 	mov	r1, #100	; 0x64
40016f7c:	e2840074 	add	r0, r4, #116	; 0x74
40016f80:	ebffcb9f 	bl	40009e04 <_txe_event_flags_get>
40016f84:	e1a07000 	mov	r7, r0
40016f88:	e3570000 	cmp	r7, #0
40016f8c:	0a000001 	beq	40016f98 <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40016f90:	e3a00045 	mov	r0, #69	; 0x45
40016f94:	eaffffdf 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f98:	e59d0014 	ldr	r0, [sp, #20]
40016f9c:	e3100040 	tst	r0, #64	; 0x40
40016fa0:	0a000001 	beq	40016fac <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40016fa4:	e3a00049 	mov	r0, #73	; 0x49
40016fa8:	eaffffda 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016fac:	e59d0014 	ldr	r0, [sp, #20]
40016fb0:	e3100020 	tst	r0, #32
40016fb4:	0a000001 	beq	40016fc0 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40016fb8:	e3a00048 	mov	r0, #72	; 0x48
40016fbc:	eaffffd5 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016fc0:	e1a01006 	mov	r1, r6
40016fc4:	e1a00004 	mov	r0, r4
40016fc8:	ebfff873 	bl	4001519c <CyU3PDmaChannelAcquireLock>
40016fcc:	e1a07000 	mov	r7, r0
40016fd0:	e3570000 	cmp	r7, #0
40016fd4:	0a000015 	beq	40017030 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016fd8:	e1a00007 	mov	r0, r7
40016fdc:	eaffffcd 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016fe0:	e3580001 	cmp	r8, #1
40016fe4:	1a000010 	bne	4001702c <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40016fe8:	e3a03000 	mov	r3, #0
40016fec:	e58d3000 	str	r3, [sp]
40016ff0:	e28d3014 	add	r3, sp, #20
40016ff4:	e3a02000 	mov	r2, #0
40016ff8:	e3a01024 	mov	r1, #36	; 0x24
40016ffc:	e2840074 	add	r0, r4, #116	; 0x74
40017000:	ebffcb7f 	bl	40009e04 <_txe_event_flags_get>
40017004:	e1a07000 	mov	r7, r0
40017008:	e3570000 	cmp	r7, #0
4001700c:	0a000001 	beq	40017018 <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40017010:	e3a07047 	mov	r7, #71	; 0x47
40017014:	ea000005 	b	40017030 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017018:	e59d0014 	ldr	r0, [sp, #20]
4001701c:	e3100020 	tst	r0, #32
40017020:	0a000002 	beq	40017030 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017024:	e3a07042 	mov	r7, #66	; 0x42
40017028:	ea000000 	b	40017030 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
4001702c:	e3a07047 	mov	r7, #71	; 0x47
40017030:	e3570000 	cmp	r7, #0
40017034:	0a000003 	beq	40017048 <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40017038:	e284003c 	add	r0, r4, #60	; 0x3c
4001703c:	ebffcc6d 	bl	4000a1f8 <_txe_mutex_put>
40017040:	e1a00007 	mov	r0, r7
40017044:	eaffffb3 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017048:	e1d401b4 	ldrh	r0, [r4, #20]
4001704c:	e28d1004 	add	r1, sp, #4
40017050:	eb002d52 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017054:	e59d0004 	ldr	r0, [sp, #4]
40017058:	e5850000 	str	r0, [r5]
4001705c:	e59d0010 	ldr	r0, [sp, #16]
40017060:	e59f1030 	ldr	r1, [pc, #48]	; 40017098 <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40017064:	e0010820 	and	r0, r1, r0, lsr #16
40017068:	e1c500b4 	strh	r0, [r5, #4]
4001706c:	e241100f 	sub	r1, r1, #15
40017070:	e59d0010 	ldr	r0, [sp, #16]
40017074:	e0000001 	and	r0, r0, r1
40017078:	e1c500b6 	strh	r0, [r5, #6]
4001707c:	e59d0010 	ldr	r0, [sp, #16]
40017080:	e200000f 	and	r0, r0, #15
40017084:	e1c500b8 	strh	r0, [r5, #8]
40017088:	e284003c 	add	r0, r4, #60	; 0x3c
4001708c:	ebffcc59 	bl	4000a1f8 <_txe_mutex_put>
40017090:	e3a00000 	mov	r0, #0
40017094:	eaffff9f 	b	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017098:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

4001709c <CyU3PDmaConfigureSockets_TypeAuto>:
4001709c:	e92d4010 	push	{r4, lr}
400170a0:	e24dd018 	sub	sp, sp, #24
400170a4:	e1a04000 	mov	r4, r0
400170a8:	e1d401b0 	ldrh	r0, [r4, #16]
400170ac:	ebfff6c6 	bl	40014bcc <CyU3PDmaSocketDisable>
400170b0:	e1d401b2 	ldrh	r0, [r4, #18]
400170b4:	ebfff6c4 	bl	40014bcc <CyU3PDmaSocketDisable>
400170b8:	e1d401b0 	ldrh	r0, [r4, #16]
400170bc:	e1a0100d 	mov	r1, sp
400170c0:	ebfff6d9 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400170c4:	e1d400bc 	ldrh	r0, [r4, #12]
400170c8:	e58d0000 	str	r0, [sp]
400170cc:	e3a00000 	mov	r0, #0
400170d0:	e58d0004 	str	r0, [sp, #4]
400170d4:	e58d0008 	str	r0, [sp, #8]
400170d8:	e3a00646 	mov	r0, #73400320	; 0x4600000
400170dc:	e58d000c 	str	r0, [sp, #12]
400170e0:	e1d401b0 	ldrh	r0, [r4, #16]
400170e4:	eb000df6 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
400170e8:	e3500000 	cmp	r0, #0
400170ec:	0a000002 	beq	400170fc <CyU3PDmaConfigureSockets_TypeAuto+0x60>
400170f0:	e59d000c 	ldr	r0, [sp, #12]
400170f4:	e3800b01 	orr	r0, r0, #1024	; 0x400
400170f8:	e58d000c 	str	r0, [sp, #12]
400170fc:	e3e00000 	mvn	r0, #0
40017100:	e58d0010 	str	r0, [sp, #16]
40017104:	e1d400b4 	ldrh	r0, [r4, #4]
40017108:	e3500001 	cmp	r0, #1
4001710c:	1a000001 	bne	40017118 <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40017110:	e3a00041 	mov	r0, #65	; 0x41
40017114:	ea000000 	b	4001711c <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40017118:	e3a00040 	mov	r0, #64	; 0x40
4001711c:	e58d0014 	str	r0, [sp, #20]
40017120:	e1d401b0 	ldrh	r0, [r4, #16]
40017124:	e1a0100d 	mov	r1, sp
40017128:	ebfff769 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001712c:	e1d401b2 	ldrh	r0, [r4, #18]
40017130:	e1a0100d 	mov	r1, sp
40017134:	ebfff6bc 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40017138:	e1d400bc 	ldrh	r0, [r4, #12]
4001713c:	e58d0000 	str	r0, [sp]
40017140:	e3a00000 	mov	r0, #0
40017144:	e58d0004 	str	r0, [sp, #4]
40017148:	e58d0008 	str	r0, [sp, #8]
4001714c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017150:	e58d000c 	str	r0, [sp, #12]
40017154:	e1d401b2 	ldrh	r0, [r4, #18]
40017158:	eb000dd9 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
4001715c:	e3500000 	cmp	r0, #0
40017160:	0a000002 	beq	40017170 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40017164:	e59d000c 	ldr	r0, [sp, #12]
40017168:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001716c:	e58d000c 	str	r0, [sp, #12]
40017170:	e3e00000 	mvn	r0, #0
40017174:	e58d0010 	str	r0, [sp, #16]
40017178:	e3a000c0 	mov	r0, #192	; 0xc0
4001717c:	e58d0014 	str	r0, [sp, #20]
40017180:	e1d401b2 	ldrh	r0, [r4, #18]
40017184:	e1a0100d 	mov	r1, sp
40017188:	ebfff751 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001718c:	e3a00000 	mov	r0, #0
40017190:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017194:	e28dd018 	add	sp, sp, #24
40017198:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

4001719c <CyU3PDmaConfigureSockets_TypeManual>:
4001719c:	e92d4010 	push	{r4, lr}
400171a0:	e24dd018 	sub	sp, sp, #24
400171a4:	e1a04000 	mov	r4, r0
400171a8:	e1d400b4 	ldrh	r0, [r4, #4]
400171ac:	e3500004 	cmp	r0, #4
400171b0:	0a00001f 	beq	40017234 <CyU3PDmaConfigureSockets_TypeManual+0x98>
400171b4:	e1d401b0 	ldrh	r0, [r4, #16]
400171b8:	ebfff683 	bl	40014bcc <CyU3PDmaSocketDisable>
400171bc:	e1d401b0 	ldrh	r0, [r4, #16]
400171c0:	e1a0100d 	mov	r1, sp
400171c4:	ebfff698 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400171c8:	e1d400bc 	ldrh	r0, [r4, #12]
400171cc:	e58d0000 	str	r0, [sp]
400171d0:	e3a00000 	mov	r0, #0
400171d4:	e58d0004 	str	r0, [sp, #4]
400171d8:	e58d0008 	str	r0, [sp, #8]
400171dc:	e3a00646 	mov	r0, #73400320	; 0x4600000
400171e0:	e58d000c 	str	r0, [sp, #12]
400171e4:	e1d401b0 	ldrh	r0, [r4, #16]
400171e8:	eb000db5 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
400171ec:	e3500000 	cmp	r0, #0
400171f0:	0a000002 	beq	40017200 <CyU3PDmaConfigureSockets_TypeManual+0x64>
400171f4:	e59d000c 	ldr	r0, [sp, #12]
400171f8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400171fc:	e58d000c 	str	r0, [sp, #12]
40017200:	e3e00000 	mvn	r0, #0
40017204:	e58d0010 	str	r0, [sp, #16]
40017208:	e3a00041 	mov	r0, #65	; 0x41
4001720c:	e58d0014 	str	r0, [sp, #20]
40017210:	e1d400b4 	ldrh	r0, [r4, #4]
40017214:	e3500003 	cmp	r0, #3
40017218:	1a000002 	bne	40017228 <CyU3PDmaConfigureSockets_TypeManual+0x8c>
4001721c:	e59d0014 	ldr	r0, [sp, #20]
40017220:	e3800080 	orr	r0, r0, #128	; 0x80
40017224:	e58d0014 	str	r0, [sp, #20]
40017228:	e1d401b0 	ldrh	r0, [r4, #16]
4001722c:	e1a0100d 	mov	r1, sp
40017230:	ebfff727 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40017234:	e1d400b4 	ldrh	r0, [r4, #4]
40017238:	e3500003 	cmp	r0, #3
4001723c:	0a000019 	beq	400172a8 <CyU3PDmaConfigureSockets_TypeManual+0x10c>
40017240:	e1d401b2 	ldrh	r0, [r4, #18]
40017244:	ebfff660 	bl	40014bcc <CyU3PDmaSocketDisable>
40017248:	e1d401b2 	ldrh	r0, [r4, #18]
4001724c:	e1a0100d 	mov	r1, sp
40017250:	ebfff675 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40017254:	e1d400be 	ldrh	r0, [r4, #14]
40017258:	e58d0000 	str	r0, [sp]
4001725c:	e3a00000 	mov	r0, #0
40017260:	e58d0004 	str	r0, [sp, #4]
40017264:	e58d0008 	str	r0, [sp, #8]
40017268:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
4001726c:	e58d000c 	str	r0, [sp, #12]
40017270:	e1d401b2 	ldrh	r0, [r4, #18]
40017274:	eb000d92 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
40017278:	e3500000 	cmp	r0, #0
4001727c:	0a000002 	beq	4001728c <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017280:	e59d000c 	ldr	r0, [sp, #12]
40017284:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017288:	e58d000c 	str	r0, [sp, #12]
4001728c:	e3e00000 	mvn	r0, #0
40017290:	e58d0010 	str	r0, [sp, #16]
40017294:	e3a000c2 	mov	r0, #194	; 0xc2
40017298:	e58d0014 	str	r0, [sp, #20]
4001729c:	e1d401b2 	ldrh	r0, [r4, #18]
400172a0:	e1a0100d 	mov	r1, sp
400172a4:	ebfff70a 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
400172a8:	e3a00000 	mov	r0, #0
400172ac:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
400172b0:	e28dd018 	add	sp, sp, #24
400172b4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

400172b8 <CyU3PDmaMultiChannelAcquireLock>:
400172b8:	e92d4070 	push	{r4, r5, r6, lr}
400172bc:	e1a04000 	mov	r4, r0
400172c0:	e1a05001 	mov	r5, r1
400172c4:	e3540000 	cmp	r4, #0
400172c8:	1a000001 	bne	400172d4 <CyU3PDmaMultiChannelAcquireLock+0x1c>
400172cc:	e3a00041 	mov	r0, #65	; 0x41
400172d0:	e8bd8070 	pop	{r4, r5, r6, pc}
400172d4:	e5940000 	ldr	r0, [r4]
400172d8:	e3500000 	cmp	r0, #0
400172dc:	1a000001 	bne	400172e8 <CyU3PDmaMultiChannelAcquireLock+0x30>
400172e0:	e3a00044 	mov	r0, #68	; 0x44
400172e4:	eafffff9 	b	400172d0 <CyU3PDmaMultiChannelAcquireLock+0x18>
400172e8:	e1a01005 	mov	r1, r5
400172ec:	e2840078 	add	r0, r4, #120	; 0x78
400172f0:	ebffcb8b 	bl	4000a124 <_txe_mutex_get>
400172f4:	e3500000 	cmp	r0, #0
400172f8:	0a000001 	beq	40017304 <CyU3PDmaMultiChannelAcquireLock+0x4c>
400172fc:	e3a0001d 	mov	r0, #29
40017300:	eafffff2 	b	400172d0 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017304:	e3a00000 	mov	r0, #0
40017308:	eafffff0 	b	400172d0 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

4001730c <CyU3PDmaMultiChannelCommitBuffer>:
4001730c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40017310:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40017314:	e1a04000 	mov	r4, r0
40017318:	e1a05001 	mov	r5, r1
4001731c:	e1a06002 	mov	r6, r2
40017320:	e3e01000 	mvn	r1, #0
40017324:	e1a00004 	mov	r0, r4
40017328:	ebffffe2 	bl	400172b8 <CyU3PDmaMultiChannelAcquireLock>
4001732c:	e1a0b000 	mov	fp, r0
40017330:	e35b0000 	cmp	fp, #0
40017334:	0a000002 	beq	40017344 <CyU3PDmaMultiChannelCommitBuffer+0x38>
40017338:	e1a0000b 	mov	r0, fp
4001733c:	e28dd03c 	add	sp, sp, #60	; 0x3c
40017340:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40017344:	e1d400b4 	ldrh	r0, [r4, #4]
40017348:	e20070ff 	and	r7, r0, #255	; 0xff
4001734c:	e1d400b6 	ldrh	r0, [r4, #6]
40017350:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017354:	e0400001 	sub	r0, r0, r1
40017358:	e1500005 	cmp	r0, r5
4001735c:	aa000000 	bge	40017364 <CyU3PDmaMultiChannelCommitBuffer+0x58>
40017360:	e3a0b040 	mov	fp, #64	; 0x40
40017364:	e5940000 	ldr	r0, [r4]
40017368:	e3500002 	cmp	r0, #2
4001736c:	0a000000 	beq	40017374 <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017370:	e3a0b042 	mov	fp, #66	; 0x42
40017374:	e5940000 	ldr	r0, [r4]
40017378:	e3500005 	cmp	r0, #5
4001737c:	1a000000 	bne	40017384 <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017380:	e3a0b049 	mov	fp, #73	; 0x49
40017384:	e5940000 	ldr	r0, [r4]
40017388:	e3500007 	cmp	r0, #7
4001738c:	1a000000 	bne	40017394 <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017390:	e3a0b048 	mov	fp, #72	; 0x48
40017394:	e3570006 	cmp	r7, #6
40017398:	1a000000 	bne	400173a0 <CyU3PDmaMultiChannelCommitBuffer+0x94>
4001739c:	e3a0b046 	mov	fp, #70	; 0x46
400173a0:	e3570005 	cmp	r7, #5
400173a4:	1a000034 	bne	4001747c <CyU3PDmaMultiChannelCommitBuffer+0x170>
400173a8:	e35b0000 	cmp	fp, #0
400173ac:	1a000032 	bne	4001747c <CyU3PDmaMultiChannelCommitBuffer+0x170>
400173b0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400173b4:	e28d1024 	add	r1, sp, #36	; 0x24
400173b8:	ebfff61b 	bl	40014c2c <CyU3PDmaSocketGetConfig>
400173bc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400173c0:	e3100702 	tst	r0, #524288	; 0x80000
400173c4:	0a000027 	beq	40017468 <CyU3PDmaMultiChannelCommitBuffer+0x15c>
400173c8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400173cc:	e1a09800 	lsl	r9, r0, #16
400173d0:	e1a09829 	lsr	r9, r9, #16
400173d4:	e28d1004 	add	r1, sp, #4
400173d8:	e1a00009 	mov	r0, r9
400173dc:	eb002c6f 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400173e0:	e59d0010 	ldr	r0, [sp, #16]
400173e4:	e3100008 	tst	r0, #8
400173e8:	0a00001c 	beq	40017460 <CyU3PDmaMultiChannelCommitBuffer+0x154>
400173ec:	e59d0010 	ldr	r0, [sp, #16]
400173f0:	e1a00800 	lsl	r0, r0, #16
400173f4:	e1a00820 	lsr	r0, r0, #16
400173f8:	e58d0010 	str	r0, [sp, #16]
400173fc:	e59d0010 	ldr	r0, [sp, #16]
40017400:	e1800805 	orr	r0, r0, r5, lsl #16
40017404:	e58d0010 	str	r0, [sp, #16]
40017408:	e3560000 	cmp	r6, #0
4001740c:	0a000007 	beq	40017430 <CyU3PDmaMultiChannelCommitBuffer+0x124>
40017410:	e59d0010 	ldr	r0, [sp, #16]
40017414:	e3c0000f 	bic	r0, r0, #15
40017418:	e58d0010 	str	r0, [sp, #16]
4001741c:	e206100e 	and	r1, r6, #14
40017420:	e3811008 	orr	r1, r1, #8
40017424:	e59d0010 	ldr	r0, [sp, #16]
40017428:	e1800001 	orr	r0, r0, r1
4001742c:	e58d0010 	str	r0, [sp, #16]
40017430:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017434:	e3500000 	cmp	r0, #0
40017438:	0a000004 	beq	40017450 <CyU3PDmaMultiChannelCommitBuffer+0x144>
4001743c:	e59d2010 	ldr	r2, [sp, #16]
40017440:	e59f327c 	ldr	r3, [pc, #636]	; 400176c4 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017444:	e0021003 	and	r1, r2, r3
40017448:	e59d0004 	ldr	r0, [sp, #4]
4001744c:	ebffeb19 	bl	400120b8 <CyU3PSysCleanDRegion>
40017450:	e28d1004 	add	r1, sp, #4
40017454:	e1a00009 	mov	r0, r9
40017458:	eb002c6b 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001745c:	ea000002 	b	4001746c <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017460:	e3a0b047 	mov	fp, #71	; 0x47
40017464:	ea000000 	b	4001746c <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017468:	e3a0b047 	mov	fp, #71	; 0x47
4001746c:	e2840078 	add	r0, r4, #120	; 0x78
40017470:	ebffcb60 	bl	4000a1f8 <_txe_mutex_put>
40017474:	e1a0000b 	mov	r0, fp
40017478:	eaffffaf 	b	4001733c <CyU3PDmaMultiChannelCommitBuffer+0x30>
4001747c:	e35b0000 	cmp	fp, #0
40017480:	1a00000d 	bne	400174bc <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017484:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017488:	e28d1014 	add	r1, sp, #20
4001748c:	eb002c43 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017490:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017494:	e28d1004 	add	r1, sp, #4
40017498:	eb002c40 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001749c:	e59d0020 	ldr	r0, [sp, #32]
400174a0:	e3100008 	tst	r0, #8
400174a4:	1a000000 	bne	400174ac <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
400174a8:	e3a0b047 	mov	fp, #71	; 0x47
400174ac:	e59d0010 	ldr	r0, [sp, #16]
400174b0:	e3100008 	tst	r0, #8
400174b4:	0a000000 	beq	400174bc <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400174b8:	e3a0b047 	mov	fp, #71	; 0x47
400174bc:	e35b0000 	cmp	fp, #0
400174c0:	0a000003 	beq	400174d4 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
400174c4:	e2840078 	add	r0, r4, #120	; 0x78
400174c8:	ebffcb4a 	bl	4000a1f8 <_txe_mutex_put>
400174cc:	e1a0000b 	mov	r0, fp
400174d0:	eaffff99 	b	4001733c <CyU3PDmaMultiChannelCommitBuffer+0x30>
400174d4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400174d8:	e3500000 	cmp	r0, #0
400174dc:	0a000004 	beq	400174f4 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
400174e0:	e59d2010 	ldr	r2, [sp, #16]
400174e4:	e59f31d8 	ldr	r3, [pc, #472]	; 400176c4 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400174e8:	e0021003 	and	r1, r2, r3
400174ec:	e59d0004 	ldr	r0, [sp, #4]
400174f0:	ebffeaf0 	bl	400120b8 <CyU3PSysCleanDRegion>
400174f4:	e3570009 	cmp	r7, #9
400174f8:	1a00003a 	bne	400175e8 <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
400174fc:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017500:	e3a0a000 	mov	sl, #0
40017504:	ea00002a 	b	400175b4 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
40017508:	e28d1004 	add	r1, sp, #4
4001750c:	e1a00009 	mov	r0, r9
40017510:	eb002c22 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017514:	e284000c 	add	r0, r4, #12
40017518:	e080008a 	add	r0, r0, sl, lsl #1
4001751c:	e1d000b0 	ldrh	r0, [r0]
40017520:	e3500000 	cmp	r0, #0
40017524:	1a00001d 	bne	400175a0 <CyU3PDmaMultiChannelCommitBuffer+0x294>
40017528:	e59d0010 	ldr	r0, [sp, #16]
4001752c:	e59f1190 	ldr	r1, [pc, #400]	; 400176c4 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017530:	e0000001 	and	r0, r0, r1
40017534:	e58d0010 	str	r0, [sp, #16]
40017538:	e59d0010 	ldr	r0, [sp, #16]
4001753c:	e1800805 	orr	r0, r0, r5, lsl #16
40017540:	e58d0010 	str	r0, [sp, #16]
40017544:	e3560000 	cmp	r6, #0
40017548:	1a000005 	bne	40017564 <CyU3PDmaMultiChannelCommitBuffer+0x258>
4001754c:	e59d1020 	ldr	r1, [sp, #32]
40017550:	e201100f 	and	r1, r1, #15
40017554:	e59d0010 	ldr	r0, [sp, #16]
40017558:	e1800001 	orr	r0, r0, r1
4001755c:	e58d0010 	str	r0, [sp, #16]
40017560:	ea000004 	b	40017578 <CyU3PDmaMultiChannelCommitBuffer+0x26c>
40017564:	e206100e 	and	r1, r6, #14
40017568:	e3811008 	orr	r1, r1, #8
4001756c:	e59d0010 	ldr	r0, [sp, #16]
40017570:	e1800001 	orr	r0, r0, r1
40017574:	e58d0010 	str	r0, [sp, #16]
40017578:	e28d1004 	add	r1, sp, #4
4001757c:	e1a00009 	mov	r0, r9
40017580:	eb002c21 	bl	4002260c <CyU3PDmaDscrSetConfig>
40017584:	e59d0008 	ldr	r0, [sp, #8]
40017588:	e1a08900 	lsl	r8, r0, #18
4001758c:	e1a08928 	lsr	r8, r8, #18
40017590:	e3a02001 	mov	r2, #1
40017594:	e1a01009 	mov	r1, r9
40017598:	e1a00008 	mov	r0, r8
4001759c:	ebfff63a 	bl	40014e8c <CyU3PDmaSocketSendEvent>
400175a0:	e59d000c 	ldr	r0, [sp, #12]
400175a4:	e59f111c 	ldr	r1, [pc, #284]	; 400176c8 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400175a8:	e0019820 	and	r9, r1, r0, lsr #16
400175ac:	e28a0001 	add	r0, sl, #1
400175b0:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
400175b4:	e1d400ba 	ldrh	r0, [r4, #10]
400175b8:	e150000a 	cmp	r0, sl
400175bc:	caffffd1 	bgt	40017508 <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
400175c0:	e59d001c 	ldr	r0, [sp, #28]
400175c4:	e59f10fc 	ldr	r1, [pc, #252]	; 400176c8 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400175c8:	e0010820 	and	r0, r1, r0, lsr #16
400175cc:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400175d0:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400175d4:	e28d1014 	add	r1, sp, #20
400175d8:	eb002bf0 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400175dc:	e59d001c 	ldr	r0, [sp, #28]
400175e0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400175e4:	ea000032 	b	400176b4 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400175e8:	e59d0010 	ldr	r0, [sp, #16]
400175ec:	e59f10d0 	ldr	r1, [pc, #208]	; 400176c4 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400175f0:	e0000001 	and	r0, r0, r1
400175f4:	e58d0010 	str	r0, [sp, #16]
400175f8:	e59d0010 	ldr	r0, [sp, #16]
400175fc:	e1800805 	orr	r0, r0, r5, lsl #16
40017600:	e58d0010 	str	r0, [sp, #16]
40017604:	e3560000 	cmp	r6, #0
40017608:	1a000005 	bne	40017624 <CyU3PDmaMultiChannelCommitBuffer+0x318>
4001760c:	e59d1020 	ldr	r1, [sp, #32]
40017610:	e201100f 	and	r1, r1, #15
40017614:	e59d0010 	ldr	r0, [sp, #16]
40017618:	e1800001 	orr	r0, r0, r1
4001761c:	e58d0010 	str	r0, [sp, #16]
40017620:	ea000004 	b	40017638 <CyU3PDmaMultiChannelCommitBuffer+0x32c>
40017624:	e206100e 	and	r1, r6, #14
40017628:	e3811008 	orr	r1, r1, #8
4001762c:	e59d0010 	ldr	r0, [sp, #16]
40017630:	e1800001 	orr	r0, r0, r1
40017634:	e58d0010 	str	r0, [sp, #16]
40017638:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
4001763c:	e28d1004 	add	r1, sp, #4
40017640:	eb002bf1 	bl	4002260c <CyU3PDmaDscrSetConfig>
40017644:	e59d0008 	ldr	r0, [sp, #8]
40017648:	e1a08900 	lsl	r8, r0, #18
4001764c:	e1a08928 	lsr	r8, r8, #18
40017650:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
40017654:	e3a02001 	mov	r2, #1
40017658:	e1a00008 	mov	r0, r8
4001765c:	ebfff60a 	bl	40014e8c <CyU3PDmaSocketSendEvent>
40017660:	e3570007 	cmp	r7, #7
40017664:	1a000009 	bne	40017690 <CyU3PDmaMultiChannelCommitBuffer+0x384>
40017668:	e59d000c 	ldr	r0, [sp, #12]
4001766c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017670:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017674:	e28d1004 	add	r1, sp, #4
40017678:	eb002bc8 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001767c:	e59d000c 	ldr	r0, [sp, #12]
40017680:	e59f1040 	ldr	r1, [pc, #64]	; 400176c8 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017684:	e0010820 	and	r0, r1, r0, lsr #16
40017688:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
4001768c:	ea000008 	b	400176b4 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017690:	e59d001c 	ldr	r0, [sp, #28]
40017694:	e59f102c 	ldr	r1, [pc, #44]	; 400176c8 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017698:	e0010820 	and	r0, r1, r0, lsr #16
4001769c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400176a0:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400176a4:	e28d1014 	add	r1, sp, #20
400176a8:	eb002bbc 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400176ac:	e59d001c 	ldr	r0, [sp, #28]
400176b0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400176b4:	e2840078 	add	r0, r4, #120	; 0x78
400176b8:	ebffcace 	bl	4000a1f8 <_txe_mutex_put>
400176bc:	e3a00000 	mov	r0, #0
400176c0:	eaffff1d 	b	4001733c <CyU3PDmaMultiChannelCommitBuffer+0x30>
400176c4:	0000fff0 	.word	0x0000fff0
400176c8:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

400176cc <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
400176cc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400176d0:	e24dd024 	sub	sp, sp, #36	; 0x24
400176d4:	e1a04000 	mov	r4, r0
400176d8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400176dc:	e3806903 	orr	r6, r0, #49152	; 0xc000
400176e0:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400176e4:	e3866801 	orr	r6, r6, #65536	; 0x10000
400176e8:	e1d400b8 	ldrh	r0, [r4, #8]
400176ec:	e1d430ba 	ldrh	r3, [r4, #10]
400176f0:	e0000093 	mul	r0, r3, r0
400176f4:	e1a01800 	lsl	r1, r0, #16
400176f8:	e1a01821 	lsr	r1, r1, #16
400176fc:	e1d420b6 	ldrh	r2, [r4, #6]
40017700:	e1a03006 	mov	r3, r6
40017704:	e284001c 	add	r0, r4, #28
40017708:	eb002ab5 	bl	400221e4 <CyU3PDmaDscrChainCreate>
4001770c:	e1a05000 	mov	r5, r0
40017710:	e3550000 	cmp	r5, #0
40017714:	0a000002 	beq	40017724 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
40017718:	e1a00005 	mov	r0, r5
4001771c:	e28dd024 	add	sp, sp, #36	; 0x24
40017720:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017724:	e1d400b4 	ldrh	r0, [r4, #4]
40017728:	e3500005 	cmp	r0, #5
4001772c:	1a00003c 	bne	40017824 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
40017730:	e3a07000 	mov	r7, #0
40017734:	e1d481bc 	ldrh	r8, [r4, #28]
40017738:	ea000035 	b	40017814 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
4001773c:	e3a09000 	mov	r9, #0
40017740:	ea00002e 	b	40017800 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
40017744:	e28d1004 	add	r1, sp, #4
40017748:	e1a00008 	mov	r0, r8
4001774c:	eb002b93 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017750:	e3570000 	cmp	r7, #0
40017754:	1a000003 	bne	40017768 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
40017758:	e2840014 	add	r0, r4, #20
4001775c:	e0800089 	add	r0, r0, r9, lsl #1
40017760:	e1c080b0 	strh	r8, [r0]
40017764:	ea000020 	b	400177ec <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
40017768:	e2841014 	add	r1, r4, #20
4001776c:	e0811089 	add	r1, r1, r9, lsl #1
40017770:	e1d100b0 	ldrh	r0, [r1]
40017774:	e28d1014 	add	r1, sp, #20
40017778:	eb002b88 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001777c:	e59d0018 	ldr	r0, [sp, #24]
40017780:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017784:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017788:	e58d0018 	str	r0, [sp, #24]
4001778c:	e2841024 	add	r1, r4, #36	; 0x24
40017790:	e0811089 	add	r1, r1, r9, lsl #1
40017794:	e59d0018 	ldr	r0, [sp, #24]
40017798:	e1d110b0 	ldrh	r1, [r1]
4001779c:	e3a02101 	mov	r2, #1073741824	; 0x40000000
400177a0:	e1821801 	orr	r1, r2, r1, lsl #16
400177a4:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
400177a8:	e1800001 	orr	r0, r0, r1
400177ac:	e58d0018 	str	r0, [sp, #24]
400177b0:	e59d001c 	ldr	r0, [sp, #28]
400177b4:	e1a00800 	lsl	r0, r0, #16
400177b8:	e1a00820 	lsr	r0, r0, #16
400177bc:	e58d001c 	str	r0, [sp, #28]
400177c0:	e59d001c 	ldr	r0, [sp, #28]
400177c4:	e1800808 	orr	r0, r0, r8, lsl #16
400177c8:	e58d001c 	str	r0, [sp, #28]
400177cc:	e2841014 	add	r1, r4, #20
400177d0:	e0811089 	add	r1, r1, r9, lsl #1
400177d4:	e1d100b0 	ldrh	r0, [r1]
400177d8:	e28d1014 	add	r1, sp, #20
400177dc:	eb002b8a 	bl	4002260c <CyU3PDmaDscrSetConfig>
400177e0:	e2840014 	add	r0, r4, #20
400177e4:	e0800089 	add	r0, r0, r9, lsl #1
400177e8:	e1c080b0 	strh	r8, [r0]
400177ec:	e59d000c 	ldr	r0, [sp, #12]
400177f0:	e1a08800 	lsl	r8, r0, #16
400177f4:	e1a08828 	lsr	r8, r8, #16
400177f8:	e2890001 	add	r0, r9, #1
400177fc:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017800:	e1d400ba 	ldrh	r0, [r4, #10]
40017804:	e1500009 	cmp	r0, r9
40017808:	caffffcd 	bgt	40017744 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
4001780c:	e2870001 	add	r0, r7, #1
40017810:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017814:	e1d400b8 	ldrh	r0, [r4, #8]
40017818:	e1500007 	cmp	r0, r7
4001781c:	aaffffc6 	bge	4001773c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017820:	ea000056 	b	40017980 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017824:	e3a07000 	mov	r7, #0
40017828:	e1d481bc 	ldrh	r8, [r4, #28]
4001782c:	ea000050 	b	40017974 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
40017830:	e3a09000 	mov	r9, #0
40017834:	ea000049 	b	40017960 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
40017838:	e3570000 	cmp	r7, #0
4001783c:	1a00000d 	bne	40017878 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
40017840:	e3a06cff 	mov	r6, #65280	; 0xff00
40017844:	e2840024 	add	r0, r4, #36	; 0x24
40017848:	e0800089 	add	r0, r0, r9, lsl #1
4001784c:	e1d000b0 	ldrh	r0, [r0]
40017850:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017854:	e1810800 	orr	r0, r1, r0, lsl #16
40017858:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001785c:	e1866000 	orr	r6, r6, r0
40017860:	e1d410b8 	ldrh	r1, [r4, #8]
40017864:	e2842014 	add	r2, r4, #20
40017868:	e0820089 	add	r0, r2, r9, lsl #1
4001786c:	e1a03006 	mov	r3, r6
40017870:	e3a02000 	mov	r2, #0
40017874:	eb002a5a 	bl	400221e4 <CyU3PDmaDscrChainCreate>
40017878:	e2841014 	add	r1, r4, #20
4001787c:	e0811089 	add	r1, r1, r9, lsl #1
40017880:	e1d100b0 	ldrh	r0, [r1]
40017884:	e28d1014 	add	r1, sp, #20
40017888:	eb002b44 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001788c:	e28d1004 	add	r1, sp, #4
40017890:	e1a00008 	mov	r0, r8
40017894:	eb002b41 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017898:	e59d0004 	ldr	r0, [sp, #4]
4001789c:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
400178a0:	e0800001 	add	r0, r0, r1
400178a4:	e58d0014 	str	r0, [sp, #20]
400178a8:	e59d0010 	ldr	r0, [sp, #16]
400178ac:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
400178b0:	e0400001 	sub	r0, r0, r1
400178b4:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
400178b8:	e0400001 	sub	r0, r0, r1
400178bc:	e58d0020 	str	r0, [sp, #32]
400178c0:	e2841014 	add	r1, r4, #20
400178c4:	e0811089 	add	r1, r1, r9, lsl #1
400178c8:	e1d100b0 	ldrh	r0, [r1]
400178cc:	e28d1014 	add	r1, sp, #20
400178d0:	eb002b4d 	bl	4002260c <CyU3PDmaDscrSetConfig>
400178d4:	e59d0004 	ldr	r0, [sp, #4]
400178d8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400178dc:	e0800001 	add	r0, r0, r1
400178e0:	e58d0004 	str	r0, [sp, #4]
400178e4:	e1d400b6 	ldrh	r0, [r4, #6]
400178e8:	e280000f 	add	r0, r0, #15
400178ec:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400178f0:	e0400001 	sub	r0, r0, r1
400178f4:	e59f10b4 	ldr	r1, [pc, #180]	; 400179b0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
400178f8:	e0000001 	and	r0, r0, r1
400178fc:	e58d0010 	str	r0, [sp, #16]
40017900:	e59d000c 	ldr	r0, [sp, #12]
40017904:	e1a00800 	lsl	r0, r0, #16
40017908:	e1a00820 	lsr	r0, r0, #16
4001790c:	e58d000c 	str	r0, [sp, #12]
40017910:	e2841014 	add	r1, r4, #20
40017914:	e0811089 	add	r1, r1, r9, lsl #1
40017918:	e59d000c 	ldr	r0, [sp, #12]
4001791c:	e1d110b0 	ldrh	r1, [r1]
40017920:	e1800801 	orr	r0, r0, r1, lsl #16
40017924:	e58d000c 	str	r0, [sp, #12]
40017928:	e28d1004 	add	r1, sp, #4
4001792c:	e1a00008 	mov	r0, r8
40017930:	eb002b35 	bl	4002260c <CyU3PDmaDscrSetConfig>
40017934:	e59d000c 	ldr	r0, [sp, #12]
40017938:	e1a08800 	lsl	r8, r0, #16
4001793c:	e1a08828 	lsr	r8, r8, #16
40017940:	e59d001c 	ldr	r0, [sp, #28]
40017944:	e59f1068 	ldr	r1, [pc, #104]	; 400179b4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017948:	e0010820 	and	r0, r1, r0, lsr #16
4001794c:	e2841014 	add	r1, r4, #20
40017950:	e0811089 	add	r1, r1, r9, lsl #1
40017954:	e1c100b0 	strh	r0, [r1]
40017958:	e2890001 	add	r0, r9, #1
4001795c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017960:	e1d400ba 	ldrh	r0, [r4, #10]
40017964:	e1500009 	cmp	r0, r9
40017968:	caffffb2 	bgt	40017838 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
4001796c:	e2870001 	add	r0, r7, #1
40017970:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017974:	e1d400b8 	ldrh	r0, [r4, #8]
40017978:	e1500007 	cmp	r0, r7
4001797c:	caffffab 	bgt	40017830 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017980:	e1a00004 	mov	r0, r4
40017984:	eb000509 	bl	40018db0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017988:	e1d401b4 	ldrh	r0, [r4, #20]
4001798c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017990:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017994:	e1d401bc 	ldrh	r0, [r4, #28]
40017998:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001799c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400179a0:	e2840034 	add	r0, r4, #52	; 0x34
400179a4:	eb002a85 	bl	400223c0 <CyU3PDmaDscrGet>
400179a8:	e3a00000 	mov	r0, #0
400179ac:	eaffff5a 	b	4001771c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
400179b0:	0000fff0 	.word	0x0000fff0
400179b4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

400179b8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
400179b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400179bc:	e24dd024 	sub	sp, sp, #36	; 0x24
400179c0:	e1a04000 	mov	r4, r0
400179c4:	e3a06cff 	mov	r6, #65280	; 0xff00
400179c8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400179cc:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400179d0:	e1810800 	orr	r0, r1, r0, lsl #16
400179d4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400179d8:	e1866000 	orr	r6, r6, r0
400179dc:	e1d400b8 	ldrh	r0, [r4, #8]
400179e0:	e1d430ba 	ldrh	r3, [r4, #10]
400179e4:	e0000093 	mul	r0, r3, r0
400179e8:	e1a01800 	lsl	r1, r0, #16
400179ec:	e1a01821 	lsr	r1, r1, #16
400179f0:	e1d420b6 	ldrh	r2, [r4, #6]
400179f4:	e1a03006 	mov	r3, r6
400179f8:	e2840014 	add	r0, r4, #20
400179fc:	eb0029f8 	bl	400221e4 <CyU3PDmaDscrChainCreate>
40017a00:	e1a05000 	mov	r5, r0
40017a04:	e3550000 	cmp	r5, #0
40017a08:	0a000002 	beq	40017a18 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017a0c:	e1a00005 	mov	r0, r5
40017a10:	e28dd024 	add	sp, sp, #36	; 0x24
40017a14:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017a18:	e1d400b4 	ldrh	r0, [r4, #4]
40017a1c:	e3500006 	cmp	r0, #6
40017a20:	1a00003a 	bne	40017b10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017a24:	e3a07000 	mov	r7, #0
40017a28:	e1d481b4 	ldrh	r8, [r4, #20]
40017a2c:	ea000033 	b	40017b00 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
40017a30:	e3a09000 	mov	r9, #0
40017a34:	ea00002c 	b	40017aec <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017a38:	e28d1014 	add	r1, sp, #20
40017a3c:	e1a00008 	mov	r0, r8
40017a40:	eb002ad6 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017a44:	e3570000 	cmp	r7, #0
40017a48:	1a000003 	bne	40017a5c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017a4c:	e284001c 	add	r0, r4, #28
40017a50:	e0800089 	add	r0, r0, r9, lsl #1
40017a54:	e1c080b0 	strh	r8, [r0]
40017a58:	ea00001e 	b	40017ad8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017a5c:	e284101c 	add	r1, r4, #28
40017a60:	e0811089 	add	r1, r1, r9, lsl #1
40017a64:	e1d100b0 	ldrh	r0, [r1]
40017a68:	e28d1004 	add	r1, sp, #4
40017a6c:	eb002acb 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017a70:	e59d0008 	ldr	r0, [sp, #8]
40017a74:	e1a00720 	lsr	r0, r0, #14
40017a78:	e1a00700 	lsl	r0, r0, #14
40017a7c:	e58d0008 	str	r0, [sp, #8]
40017a80:	e284102c 	add	r1, r4, #44	; 0x2c
40017a84:	e0811089 	add	r1, r1, r9, lsl #1
40017a88:	e59d0008 	ldr	r0, [sp, #8]
40017a8c:	e1d110b0 	ldrh	r1, [r1]
40017a90:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017a94:	e1800001 	orr	r0, r0, r1
40017a98:	e58d0008 	str	r0, [sp, #8]
40017a9c:	e59d000c 	ldr	r0, [sp, #12]
40017aa0:	e1a00820 	lsr	r0, r0, #16
40017aa4:	e1a00800 	lsl	r0, r0, #16
40017aa8:	e58d000c 	str	r0, [sp, #12]
40017aac:	e59d000c 	ldr	r0, [sp, #12]
40017ab0:	e1800008 	orr	r0, r0, r8
40017ab4:	e58d000c 	str	r0, [sp, #12]
40017ab8:	e284101c 	add	r1, r4, #28
40017abc:	e0811089 	add	r1, r1, r9, lsl #1
40017ac0:	e1d100b0 	ldrh	r0, [r1]
40017ac4:	e28d1004 	add	r1, sp, #4
40017ac8:	eb002acf 	bl	4002260c <CyU3PDmaDscrSetConfig>
40017acc:	e284001c 	add	r0, r4, #28
40017ad0:	e0800089 	add	r0, r0, r9, lsl #1
40017ad4:	e1c080b0 	strh	r8, [r0]
40017ad8:	e59d001c 	ldr	r0, [sp, #28]
40017adc:	e59f11c4 	ldr	r1, [pc, #452]	; 40017ca8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017ae0:	e0018820 	and	r8, r1, r0, lsr #16
40017ae4:	e2890001 	add	r0, r9, #1
40017ae8:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017aec:	e1d400ba 	ldrh	r0, [r4, #10]
40017af0:	e1500009 	cmp	r0, r9
40017af4:	caffffcf 	bgt	40017a38 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017af8:	e2870001 	add	r0, r7, #1
40017afc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017b00:	e1d400b8 	ldrh	r0, [r4, #8]
40017b04:	e1500007 	cmp	r0, r7
40017b08:	aaffffc8 	bge	40017a30 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017b0c:	ea000059 	b	40017c78 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017b10:	e3a07000 	mov	r7, #0
40017b14:	e1d481b4 	ldrh	r8, [r4, #20]
40017b18:	ea000053 	b	40017c6c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017b1c:	e3a09000 	mov	r9, #0
40017b20:	ea00004c 	b	40017c58 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017b24:	e3570000 	cmp	r7, #0
40017b28:	1a00000b 	bne	40017b5c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017b2c:	e284002c 	add	r0, r4, #44	; 0x2c
40017b30:	e0800089 	add	r0, r0, r9, lsl #1
40017b34:	e1d000b0 	ldrh	r0, [r0]
40017b38:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017b3c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017b40:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017b44:	e1d410b8 	ldrh	r1, [r4, #8]
40017b48:	e284201c 	add	r2, r4, #28
40017b4c:	e0820089 	add	r0, r2, r9, lsl #1
40017b50:	e1a03006 	mov	r3, r6
40017b54:	e3a02000 	mov	r2, #0
40017b58:	eb0029a1 	bl	400221e4 <CyU3PDmaDscrChainCreate>
40017b5c:	e284101c 	add	r1, r4, #28
40017b60:	e0811089 	add	r1, r1, r9, lsl #1
40017b64:	e1d100b0 	ldrh	r0, [r1]
40017b68:	e28d1004 	add	r1, sp, #4
40017b6c:	eb002a8b 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017b70:	e28d1014 	add	r1, sp, #20
40017b74:	e1a00008 	mov	r0, r8
40017b78:	eb002a88 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40017b7c:	e59d0014 	ldr	r0, [sp, #20]
40017b80:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017b84:	e0800001 	add	r0, r0, r1
40017b88:	e58d0004 	str	r0, [sp, #4]
40017b8c:	e1d400b6 	ldrh	r0, [r4, #6]
40017b90:	e280000f 	add	r0, r0, #15
40017b94:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017b98:	e0400001 	sub	r0, r0, r1
40017b9c:	e59f1108 	ldr	r1, [pc, #264]	; 40017cac <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017ba0:	e0000001 	and	r0, r0, r1
40017ba4:	e58d0010 	str	r0, [sp, #16]
40017ba8:	e59d000c 	ldr	r0, [sp, #12]
40017bac:	e1a00800 	lsl	r0, r0, #16
40017bb0:	e1a00820 	lsr	r0, r0, #16
40017bb4:	e58d000c 	str	r0, [sp, #12]
40017bb8:	e59d000c 	ldr	r0, [sp, #12]
40017bbc:	e1800808 	orr	r0, r0, r8, lsl #16
40017bc0:	e58d000c 	str	r0, [sp, #12]
40017bc4:	e284101c 	add	r1, r4, #28
40017bc8:	e0811089 	add	r1, r1, r9, lsl #1
40017bcc:	e1d100b0 	ldrh	r0, [r1]
40017bd0:	e28d1004 	add	r1, sp, #4
40017bd4:	eb002a8c 	bl	4002260c <CyU3PDmaDscrSetConfig>
40017bd8:	e59d0014 	ldr	r0, [sp, #20]
40017bdc:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017be0:	e0800001 	add	r0, r0, r1
40017be4:	e58d0014 	str	r0, [sp, #20]
40017be8:	e1d400b6 	ldrh	r0, [r4, #6]
40017bec:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017bf0:	e0400001 	sub	r0, r0, r1
40017bf4:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017bf8:	e0400001 	sub	r0, r0, r1
40017bfc:	e58d0020 	str	r0, [sp, #32]
40017c00:	e59d001c 	ldr	r0, [sp, #28]
40017c04:	e1a00820 	lsr	r0, r0, #16
40017c08:	e1a00800 	lsl	r0, r0, #16
40017c0c:	e58d001c 	str	r0, [sp, #28]
40017c10:	e284101c 	add	r1, r4, #28
40017c14:	e0811089 	add	r1, r1, r9, lsl #1
40017c18:	e59d001c 	ldr	r0, [sp, #28]
40017c1c:	e1d110b0 	ldrh	r1, [r1]
40017c20:	e1800001 	orr	r0, r0, r1
40017c24:	e58d001c 	str	r0, [sp, #28]
40017c28:	e28d1014 	add	r1, sp, #20
40017c2c:	e1a00008 	mov	r0, r8
40017c30:	eb002a75 	bl	4002260c <CyU3PDmaDscrSetConfig>
40017c34:	e59d001c 	ldr	r0, [sp, #28]
40017c38:	e59f1068 	ldr	r1, [pc, #104]	; 40017ca8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017c3c:	e0018820 	and	r8, r1, r0, lsr #16
40017c40:	e284101c 	add	r1, r4, #28
40017c44:	e0811089 	add	r1, r1, r9, lsl #1
40017c48:	e59d000c 	ldr	r0, [sp, #12]
40017c4c:	e1c100b0 	strh	r0, [r1]
40017c50:	e2890001 	add	r0, r9, #1
40017c54:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017c58:	e1d400ba 	ldrh	r0, [r4, #10]
40017c5c:	e1500009 	cmp	r0, r9
40017c60:	caffffaf 	bgt	40017b24 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017c64:	e2870001 	add	r0, r7, #1
40017c68:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017c6c:	e1d400b8 	ldrh	r0, [r4, #8]
40017c70:	e1500007 	cmp	r0, r7
40017c74:	caffffa8 	bgt	40017b1c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017c78:	e1d401b4 	ldrh	r0, [r4, #20]
40017c7c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017c80:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017c84:	e1d401bc 	ldrh	r0, [r4, #28]
40017c88:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017c8c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017c90:	e2840034 	add	r0, r4, #52	; 0x34
40017c94:	eb0029c9 	bl	400223c0 <CyU3PDmaDscrGet>
40017c98:	e1a00004 	mov	r0, r4
40017c9c:	eb0004a3 	bl	40018f30 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017ca0:	e3a00000 	mov	r0, #0
40017ca4:	eaffff59 	b	40017a10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017ca8:	0000ffff 	.word	0x0000ffff
40017cac:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017cb0 <CyU3PDmaMultiChannelCreate>:
40017cb0:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017cb4:	e1a04000 	mov	r4, r0
40017cb8:	e1a05001 	mov	r5, r1
40017cbc:	e1a06002 	mov	r6, r2
40017cc0:	e3560000 	cmp	r6, #0
40017cc4:	1a000001 	bne	40017cd0 <CyU3PDmaMultiChannelCreate+0x20>
40017cc8:	e3a00041 	mov	r0, #65	; 0x41
40017ccc:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017cd0:	e3540000 	cmp	r4, #0
40017cd4:	1a000001 	bne	40017ce0 <CyU3PDmaMultiChannelCreate+0x30>
40017cd8:	e3a00041 	mov	r0, #65	; 0x41
40017cdc:	eafffffa 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017ce0:	e1d600b2 	ldrh	r0, [r6, #2]
40017ce4:	e3500000 	cmp	r0, #0
40017ce8:	1a000001 	bne	40017cf4 <CyU3PDmaMultiChannelCreate+0x44>
40017cec:	e3a00040 	mov	r0, #64	; 0x40
40017cf0:	eafffff5 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017cf4:	e1d600b4 	ldrh	r0, [r6, #4]
40017cf8:	e3500002 	cmp	r0, #2
40017cfc:	ba000002 	blt	40017d0c <CyU3PDmaMultiChannelCreate+0x5c>
40017d00:	e1d600b4 	ldrh	r0, [r6, #4]
40017d04:	e3500004 	cmp	r0, #4
40017d08:	da000001 	ble	40017d14 <CyU3PDmaMultiChannelCreate+0x64>
40017d0c:	e3a00040 	mov	r0, #64	; 0x40
40017d10:	eaffffed 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017d14:	e3550006 	cmp	r5, #6
40017d18:	0a000001 	beq	40017d24 <CyU3PDmaMultiChannelCreate+0x74>
40017d1c:	e3550005 	cmp	r5, #5
40017d20:	1a000007 	bne	40017d44 <CyU3PDmaMultiChannelCreate+0x94>
40017d24:	eb0029dd 	bl	400224a0 <CyU3PDmaDscrGetFreeCount>
40017d28:	e1d610b2 	ldrh	r1, [r6, #2]
40017d2c:	e1d620b4 	ldrh	r2, [r6, #4]
40017d30:	e0010192 	mul	r1, r2, r1
40017d34:	e1500001 	cmp	r0, r1
40017d38:	ca000016 	bgt	40017d98 <CyU3PDmaMultiChannelCreate+0xe8>
40017d3c:	e3a00010 	mov	r0, #16
40017d40:	eaffffe1 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017d44:	e3550008 	cmp	r5, #8
40017d48:	0a000001 	beq	40017d54 <CyU3PDmaMultiChannelCreate+0xa4>
40017d4c:	e3550007 	cmp	r5, #7
40017d50:	1a000007 	bne	40017d74 <CyU3PDmaMultiChannelCreate+0xc4>
40017d54:	eb0029d1 	bl	400224a0 <CyU3PDmaDscrGetFreeCount>
40017d58:	e1d610b2 	ldrh	r1, [r6, #2]
40017d5c:	e1d620b4 	ldrh	r2, [r6, #4]
40017d60:	e0010192 	mul	r1, r2, r1
40017d64:	e1500081 	cmp	r0, r1, lsl #1
40017d68:	ca00000a 	bgt	40017d98 <CyU3PDmaMultiChannelCreate+0xe8>
40017d6c:	e3a00010 	mov	r0, #16
40017d70:	eaffffd5 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017d74:	eb0029c9 	bl	400224a0 <CyU3PDmaDscrGetFreeCount>
40017d78:	e1d610b2 	ldrh	r1, [r6, #2]
40017d7c:	e1d620b4 	ldrh	r2, [r6, #4]
40017d80:	e2822001 	add	r2, r2, #1
40017d84:	e0010192 	mul	r1, r2, r1
40017d88:	e1500001 	cmp	r0, r1
40017d8c:	ca000001 	bgt	40017d98 <CyU3PDmaMultiChannelCreate+0xe8>
40017d90:	e3a00010 	mov	r0, #16
40017d94:	eaffffcc 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017d98:	e1d600b0 	ldrh	r0, [r6]
40017d9c:	e3500000 	cmp	r0, #0
40017da0:	0a000003 	beq	40017db4 <CyU3PDmaMultiChannelCreate+0x104>
40017da4:	e1d600b0 	ldrh	r0, [r6]
40017da8:	e59f1634 	ldr	r1, [pc, #1588]	; 400183e4 <CyU3PDmaMultiChannelCreate+0x734>
40017dac:	e1500001 	cmp	r0, r1
40017db0:	da000001 	ble	40017dbc <CyU3PDmaMultiChannelCreate+0x10c>
40017db4:	e3a00040 	mov	r0, #64	; 0x40
40017db8:	eaffffc3 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017dbc:	e3550005 	cmp	r5, #5
40017dc0:	0a000001 	beq	40017dcc <CyU3PDmaMultiChannelCreate+0x11c>
40017dc4:	e3550006 	cmp	r5, #6
40017dc8:	1a000004 	bne	40017de0 <CyU3PDmaMultiChannelCreate+0x130>
40017dcc:	e1d600b0 	ldrh	r0, [r6]
40017dd0:	e310000f 	tst	r0, #15
40017dd4:	0a00000b 	beq	40017e08 <CyU3PDmaMultiChannelCreate+0x158>
40017dd8:	e3a00040 	mov	r0, #64	; 0x40
40017ddc:	eaffffba 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017de0:	e1d600b0 	ldrh	r0, [r6]
40017de4:	e1d611b8 	ldrh	r1, [r6, #24]
40017de8:	e0400001 	sub	r0, r0, r1
40017dec:	e1d611ba 	ldrh	r1, [r6, #26]
40017df0:	e0400001 	sub	r0, r0, r1
40017df4:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017df8:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017dfc:	0a000001 	beq	40017e08 <CyU3PDmaMultiChannelCreate+0x158>
40017e00:	e3a00040 	mov	r0, #64	; 0x40
40017e04:	eaffffb0 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017e08:	e5d6001e 	ldrb	r0, [r6, #30]
40017e0c:	e3500002 	cmp	r0, #2
40017e10:	ba000001 	blt	40017e1c <CyU3PDmaMultiChannelCreate+0x16c>
40017e14:	e3a00040 	mov	r0, #64	; 0x40
40017e18:	eaffffab 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017e1c:	e3550005 	cmp	r5, #5
40017e20:	0a000001 	beq	40017e2c <CyU3PDmaMultiChannelCreate+0x17c>
40017e24:	e3550007 	cmp	r5, #7
40017e28:	1a000065 	bne	40017fc4 <CyU3PDmaMultiChannelCreate+0x314>
40017e2c:	e1d601b6 	ldrh	r0, [r6, #22]
40017e30:	e3500000 	cmp	r0, #0
40017e34:	0a000008 	beq	40017e5c <CyU3PDmaMultiChannelCreate+0x1ac>
40017e38:	e1d601b6 	ldrh	r0, [r6, #22]
40017e3c:	e1d610b2 	ldrh	r1, [r6, #2]
40017e40:	e1500001 	cmp	r0, r1
40017e44:	aa000002 	bge	40017e54 <CyU3PDmaMultiChannelCreate+0x1a4>
40017e48:	e1d600b2 	ldrh	r0, [r6, #2]
40017e4c:	e350001f 	cmp	r0, #31
40017e50:	da000001 	ble	40017e5c <CyU3PDmaMultiChannelCreate+0x1ac>
40017e54:	e3a00040 	mov	r0, #64	; 0x40
40017e58:	eaffff9b 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017e5c:	e3a09000 	mov	r9, #0
40017e60:	ea00002b 	b	40017f14 <CyU3PDmaMultiChannelCreate+0x264>
40017e64:	e2860006 	add	r0, r6, #6
40017e68:	e0800089 	add	r0, r0, r9, lsl #1
40017e6c:	e1d000b0 	ldrh	r0, [r0]
40017e70:	e3a0103f 	mov	r1, #63	; 0x3f
40017e74:	e0018440 	and	r8, r1, r0, asr #8
40017e78:	e2860006 	add	r0, r6, #6
40017e7c:	e0800089 	add	r0, r0, r9, lsl #1
40017e80:	e1d000b0 	ldrh	r0, [r0]
40017e84:	e20070ff 	and	r7, r0, #255	; 0xff
40017e88:	e2861006 	add	r1, r6, #6
40017e8c:	e0811089 	add	r1, r1, r9, lsl #1
40017e90:	e1d100b0 	ldrh	r0, [r1]
40017e94:	ebfff3c4 	bl	40014dac <CyU3PDmaSocketIsValidProducer>
40017e98:	e3500000 	cmp	r0, #0
40017e9c:	1a000001 	bne	40017ea8 <CyU3PDmaMultiChannelCreate+0x1f8>
40017ea0:	e3a00040 	mov	r0, #64	; 0x40
40017ea4:	eaffff88 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017ea8:	e59f0538 	ldr	r0, [pc, #1336]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40017eac:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017eb0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017eb4:	e3500000 	cmp	r0, #0
40017eb8:	0a000001 	beq	40017ec4 <CyU3PDmaMultiChannelCreate+0x214>
40017ebc:	e3a00040 	mov	r0, #64	; 0x40
40017ec0:	eaffff81 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017ec4:	e2890001 	add	r0, r9, #1
40017ec8:	e200a0ff 	and	sl, r0, #255	; 0xff
40017ecc:	ea00000b 	b	40017f00 <CyU3PDmaMultiChannelCreate+0x250>
40017ed0:	e2860006 	add	r0, r6, #6
40017ed4:	e0800089 	add	r0, r0, r9, lsl #1
40017ed8:	e1d000b0 	ldrh	r0, [r0]
40017edc:	e2861006 	add	r1, r6, #6
40017ee0:	e081108a 	add	r1, r1, sl, lsl #1
40017ee4:	e1d110b0 	ldrh	r1, [r1]
40017ee8:	e1500001 	cmp	r0, r1
40017eec:	1a000001 	bne	40017ef8 <CyU3PDmaMultiChannelCreate+0x248>
40017ef0:	e3a00040 	mov	r0, #64	; 0x40
40017ef4:	eaffff74 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017ef8:	e28a0001 	add	r0, sl, #1
40017efc:	e200a0ff 	and	sl, r0, #255	; 0xff
40017f00:	e1d600b4 	ldrh	r0, [r6, #4]
40017f04:	e150000a 	cmp	r0, sl
40017f08:	cafffff0 	bgt	40017ed0 <CyU3PDmaMultiChannelCreate+0x220>
40017f0c:	e2890001 	add	r0, r9, #1
40017f10:	e20090ff 	and	r9, r0, #255	; 0xff
40017f14:	e1d600b4 	ldrh	r0, [r6, #4]
40017f18:	e1500009 	cmp	r0, r9
40017f1c:	caffffd0 	bgt	40017e64 <CyU3PDmaMultiChannelCreate+0x1b4>
40017f20:	e1d600be 	ldrh	r0, [r6, #14]
40017f24:	e3a0103f 	mov	r1, #63	; 0x3f
40017f28:	e0018440 	and	r8, r1, r0, asr #8
40017f2c:	e1d600be 	ldrh	r0, [r6, #14]
40017f30:	e20070ff 	and	r7, r0, #255	; 0xff
40017f34:	e1d600be 	ldrh	r0, [r6, #14]
40017f38:	ebfff363 	bl	40014ccc <CyU3PDmaSocketIsValidConsumer>
40017f3c:	e3500000 	cmp	r0, #0
40017f40:	1a000001 	bne	40017f4c <CyU3PDmaMultiChannelCreate+0x29c>
40017f44:	e3a00040 	mov	r0, #64	; 0x40
40017f48:	eaffff5f 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017f4c:	e59f0494 	ldr	r0, [pc, #1172]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40017f50:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f54:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017f58:	e3500000 	cmp	r0, #0
40017f5c:	0a000001 	beq	40017f68 <CyU3PDmaMultiChannelCreate+0x2b8>
40017f60:	e3a00040 	mov	r0, #64	; 0x40
40017f64:	eaffff58 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017f68:	e59f0478 	ldr	r0, [pc, #1144]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40017f6c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f70:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f74:	e3a09000 	mov	r9, #0
40017f78:	ea00000d 	b	40017fb4 <CyU3PDmaMultiChannelCreate+0x304>
40017f7c:	e2860006 	add	r0, r6, #6
40017f80:	e0800089 	add	r0, r0, r9, lsl #1
40017f84:	e1d000b0 	ldrh	r0, [r0]
40017f88:	e3a0103f 	mov	r1, #63	; 0x3f
40017f8c:	e0018440 	and	r8, r1, r0, asr #8
40017f90:	e2860006 	add	r0, r6, #6
40017f94:	e0800089 	add	r0, r0, r9, lsl #1
40017f98:	e1d000b0 	ldrh	r0, [r0]
40017f9c:	e20070ff 	and	r7, r0, #255	; 0xff
40017fa0:	e59f0440 	ldr	r0, [pc, #1088]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40017fa4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017fa8:	e7804107 	str	r4, [r0, r7, lsl #2]
40017fac:	e2890001 	add	r0, r9, #1
40017fb0:	e20090ff 	and	r9, r0, #255	; 0xff
40017fb4:	e1d600b4 	ldrh	r0, [r6, #4]
40017fb8:	e1500009 	cmp	r0, r9
40017fbc:	caffffee 	bgt	40017f7c <CyU3PDmaMultiChannelCreate+0x2cc>
40017fc0:	ea00005d 	b	4001813c <CyU3PDmaMultiChannelCreate+0x48c>
40017fc4:	e1d601b6 	ldrh	r0, [r6, #22]
40017fc8:	e3500000 	cmp	r0, #0
40017fcc:	0a000001 	beq	40017fd8 <CyU3PDmaMultiChannelCreate+0x328>
40017fd0:	e3a00040 	mov	r0, #64	; 0x40
40017fd4:	eaffff3c 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40017fd8:	e3a09000 	mov	r9, #0
40017fdc:	ea00002b 	b	40018090 <CyU3PDmaMultiChannelCreate+0x3e0>
40017fe0:	e286000e 	add	r0, r6, #14
40017fe4:	e0800089 	add	r0, r0, r9, lsl #1
40017fe8:	e1d000b0 	ldrh	r0, [r0]
40017fec:	e3a0103f 	mov	r1, #63	; 0x3f
40017ff0:	e0018440 	and	r8, r1, r0, asr #8
40017ff4:	e286000e 	add	r0, r6, #14
40017ff8:	e0800089 	add	r0, r0, r9, lsl #1
40017ffc:	e1d000b0 	ldrh	r0, [r0]
40018000:	e20070ff 	and	r7, r0, #255	; 0xff
40018004:	e286100e 	add	r1, r6, #14
40018008:	e0811089 	add	r1, r1, r9, lsl #1
4001800c:	e1d100b0 	ldrh	r0, [r1]
40018010:	ebfff32d 	bl	40014ccc <CyU3PDmaSocketIsValidConsumer>
40018014:	e3500000 	cmp	r0, #0
40018018:	1a000001 	bne	40018024 <CyU3PDmaMultiChannelCreate+0x374>
4001801c:	e3a00040 	mov	r0, #64	; 0x40
40018020:	eaffff29 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40018024:	e59f03bc 	ldr	r0, [pc, #956]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40018028:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001802c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018030:	e3500000 	cmp	r0, #0
40018034:	0a000001 	beq	40018040 <CyU3PDmaMultiChannelCreate+0x390>
40018038:	e3a00040 	mov	r0, #64	; 0x40
4001803c:	eaffff22 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40018040:	e2890001 	add	r0, r9, #1
40018044:	e200a0ff 	and	sl, r0, #255	; 0xff
40018048:	ea00000b 	b	4001807c <CyU3PDmaMultiChannelCreate+0x3cc>
4001804c:	e286000e 	add	r0, r6, #14
40018050:	e0800089 	add	r0, r0, r9, lsl #1
40018054:	e1d000b0 	ldrh	r0, [r0]
40018058:	e286100e 	add	r1, r6, #14
4001805c:	e081108a 	add	r1, r1, sl, lsl #1
40018060:	e1d110b0 	ldrh	r1, [r1]
40018064:	e1500001 	cmp	r0, r1
40018068:	1a000001 	bne	40018074 <CyU3PDmaMultiChannelCreate+0x3c4>
4001806c:	e3a00040 	mov	r0, #64	; 0x40
40018070:	eaffff15 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
40018074:	e28a0001 	add	r0, sl, #1
40018078:	e200a0ff 	and	sl, r0, #255	; 0xff
4001807c:	e1d600b4 	ldrh	r0, [r6, #4]
40018080:	e150000a 	cmp	r0, sl
40018084:	cafffff0 	bgt	4001804c <CyU3PDmaMultiChannelCreate+0x39c>
40018088:	e2890001 	add	r0, r9, #1
4001808c:	e20090ff 	and	r9, r0, #255	; 0xff
40018090:	e1d600b4 	ldrh	r0, [r6, #4]
40018094:	e1500009 	cmp	r0, r9
40018098:	caffffd0 	bgt	40017fe0 <CyU3PDmaMultiChannelCreate+0x330>
4001809c:	e1d600b6 	ldrh	r0, [r6, #6]
400180a0:	e3a0103f 	mov	r1, #63	; 0x3f
400180a4:	e0018440 	and	r8, r1, r0, asr #8
400180a8:	e1d600b6 	ldrh	r0, [r6, #6]
400180ac:	e20070ff 	and	r7, r0, #255	; 0xff
400180b0:	e1d600b6 	ldrh	r0, [r6, #6]
400180b4:	ebfff33c 	bl	40014dac <CyU3PDmaSocketIsValidProducer>
400180b8:	e3500000 	cmp	r0, #0
400180bc:	1a000001 	bne	400180c8 <CyU3PDmaMultiChannelCreate+0x418>
400180c0:	e3a00040 	mov	r0, #64	; 0x40
400180c4:	eaffff00 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
400180c8:	e59f0318 	ldr	r0, [pc, #792]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
400180cc:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400180d0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400180d4:	e3500000 	cmp	r0, #0
400180d8:	0a000001 	beq	400180e4 <CyU3PDmaMultiChannelCreate+0x434>
400180dc:	e3a00040 	mov	r0, #64	; 0x40
400180e0:	eafffef9 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
400180e4:	e59f02fc 	ldr	r0, [pc, #764]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
400180e8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400180ec:	e7804107 	str	r4, [r0, r7, lsl #2]
400180f0:	e3a09000 	mov	r9, #0
400180f4:	ea00000d 	b	40018130 <CyU3PDmaMultiChannelCreate+0x480>
400180f8:	e286000e 	add	r0, r6, #14
400180fc:	e0800089 	add	r0, r0, r9, lsl #1
40018100:	e1d000b0 	ldrh	r0, [r0]
40018104:	e3a0103f 	mov	r1, #63	; 0x3f
40018108:	e0018440 	and	r8, r1, r0, asr #8
4001810c:	e286000e 	add	r0, r6, #14
40018110:	e0800089 	add	r0, r0, r9, lsl #1
40018114:	e1d000b0 	ldrh	r0, [r0]
40018118:	e20070ff 	and	r7, r0, #255	; 0xff
4001811c:	e59f02c4 	ldr	r0, [pc, #708]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40018120:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018124:	e7804107 	str	r4, [r0, r7, lsl #2]
40018128:	e2890001 	add	r0, r9, #1
4001812c:	e20090ff 	and	r9, r0, #255	; 0xff
40018130:	e1d600b4 	ldrh	r0, [r6, #4]
40018134:	e1500009 	cmp	r0, r9
40018138:	caffffee 	bgt	400180f8 <CyU3PDmaMultiChannelCreate+0x448>
4001813c:	e1c450b4 	strh	r5, [r4, #4]
40018140:	e1d600b0 	ldrh	r0, [r6]
40018144:	e1c400b6 	strh	r0, [r4, #6]
40018148:	e1d600b2 	ldrh	r0, [r6, #2]
4001814c:	e1c400b8 	strh	r0, [r4, #8]
40018150:	e1d601b6 	ldrh	r0, [r6, #22]
40018154:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40018158:	e1d600b4 	ldrh	r0, [r6, #4]
4001815c:	e1c400ba 	strh	r0, [r4, #10]
40018160:	e3a09000 	mov	r9, #0
40018164:	ea000014 	b	400181bc <CyU3PDmaMultiChannelCreate+0x50c>
40018168:	e2860006 	add	r0, r6, #6
4001816c:	e0800089 	add	r0, r0, r9, lsl #1
40018170:	e1d000b0 	ldrh	r0, [r0]
40018174:	e2841024 	add	r1, r4, #36	; 0x24
40018178:	e0811089 	add	r1, r1, r9, lsl #1
4001817c:	e1c100b0 	strh	r0, [r1]
40018180:	e286000e 	add	r0, r6, #14
40018184:	e0800089 	add	r0, r0, r9, lsl #1
40018188:	e1d000b0 	ldrh	r0, [r0]
4001818c:	e284102c 	add	r1, r4, #44	; 0x2c
40018190:	e0811089 	add	r1, r1, r9, lsl #1
40018194:	e1c100b0 	strh	r0, [r1]
40018198:	e3a00000 	mov	r0, #0
4001819c:	e284105c 	add	r1, r4, #92	; 0x5c
400181a0:	e0811089 	add	r1, r1, r9, lsl #1
400181a4:	e1c100b0 	strh	r0, [r1]
400181a8:	e2841064 	add	r1, r4, #100	; 0x64
400181ac:	e0811089 	add	r1, r1, r9, lsl #1
400181b0:	e1c100b0 	strh	r0, [r1]
400181b4:	e2890001 	add	r0, r9, #1
400181b8:	e20090ff 	and	r9, r0, #255	; 0xff
400181bc:	e3590004 	cmp	r9, #4
400181c0:	baffffe8 	blt	40018168 <CyU3PDmaMultiChannelCreate+0x4b8>
400181c4:	e1d601b8 	ldrh	r0, [r6, #24]
400181c8:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
400181cc:	e1d601ba 	ldrh	r0, [r6, #26]
400181d0:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
400181d4:	e1d601bc 	ldrh	r0, [r6, #28]
400181d8:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
400181dc:	e5d6001e 	ldrb	r0, [r6, #30]
400181e0:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
400181e4:	e5960020 	ldr	r0, [r6, #32]
400181e8:	e584006c 	str	r0, [r4, #108]	; 0x6c
400181ec:	e3a03038 	mov	r3, #56	; 0x38
400181f0:	e3a02000 	mov	r2, #0
400181f4:	e1a01002 	mov	r1, r2
400181f8:	e2840078 	add	r0, r4, #120	; 0x78
400181fc:	ebffc74a 	bl	40009f2c <_txe_mutex_create>
40018200:	e3a02028 	mov	r2, #40	; 0x28
40018204:	e3a01000 	mov	r1, #0
40018208:	e28400b0 	add	r0, r4, #176	; 0xb0
4001820c:	ebffc68c 	bl	40009c44 <_txe_event_flags_create>
40018210:	e5960024 	ldr	r0, [r6, #36]	; 0x24
40018214:	e58400d8 	str	r0, [r4, #216]	; 0xd8
40018218:	e59f01cc 	ldr	r0, [pc, #460]	; 400183ec <CyU3PDmaMultiChannelCreate+0x73c>
4001821c:	e5900000 	ldr	r0, [r0]
40018220:	e5840074 	str	r0, [r4, #116]	; 0x74
40018224:	e2450005 	sub	r0, r5, #5
40018228:	e3500005 	cmp	r0, #5
4001822c:	308ff100 	addcc	pc, pc, r0, lsl #2
40018230:	ea00001d 	b	400182ac <CyU3PDmaMultiChannelCreate+0x5fc>
40018234:	ea000003 	b	40018248 <CyU3PDmaMultiChannelCreate+0x598>
40018238:	ea000008 	b	40018260 <CyU3PDmaMultiChannelCreate+0x5b0>
4001823c:	ea000003 	b	40018250 <CyU3PDmaMultiChannelCreate+0x5a0>
40018240:	ea000008 	b	40018268 <CyU3PDmaMultiChannelCreate+0x5b8>
40018244:	ea00000b 	b	40018278 <CyU3PDmaMultiChannelCreate+0x5c8>
40018248:	e1a00000 	nop			; (mov r0, r0)
4001824c:	e1a00000 	nop			; (mov r0, r0)
40018250:	e1a00004 	mov	r0, r4
40018254:	ebfffd1c 	bl	400176cc <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
40018258:	e1a0b000 	mov	fp, r0
4001825c:	ea000015 	b	400182b8 <CyU3PDmaMultiChannelCreate+0x608>
40018260:	e1a00000 	nop			; (mov r0, r0)
40018264:	e1a00000 	nop			; (mov r0, r0)
40018268:	e1a00004 	mov	r0, r4
4001826c:	ebfffdd1 	bl	400179b8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018270:	e1a0b000 	mov	fp, r0
40018274:	ea00000f 	b	400182b8 <CyU3PDmaMultiChannelCreate+0x608>
40018278:	e1a00000 	nop			; (mov r0, r0)
4001827c:	e59f016c 	ldr	r0, [pc, #364]	; 400183f0 <CyU3PDmaMultiChannelCreate+0x740>
40018280:	e5900000 	ldr	r0, [r0]
40018284:	e3500000 	cmp	r0, #0
40018288:	1a000001 	bne	40018294 <CyU3PDmaMultiChannelCreate+0x5e4>
4001828c:	e3a0b047 	mov	fp, #71	; 0x47
40018290:	ea000004 	b	400182a8 <CyU3PDmaMultiChannelCreate+0x5f8>
40018294:	e1a00004 	mov	r0, r4
40018298:	e59f1150 	ldr	r1, [pc, #336]	; 400183f0 <CyU3PDmaMultiChannelCreate+0x740>
4001829c:	e5911000 	ldr	r1, [r1]
400182a0:	e12fff31 	blx	r1
400182a4:	e1a0b000 	mov	fp, r0
400182a8:	ea000002 	b	400182b8 <CyU3PDmaMultiChannelCreate+0x608>
400182ac:	e1a00000 	nop			; (mov r0, r0)
400182b0:	e3a0b040 	mov	fp, #64	; 0x40
400182b4:	e1a00000 	nop			; (mov r0, r0)
400182b8:	e1a00000 	nop			; (mov r0, r0)
400182bc:	e35b0000 	cmp	fp, #0
400182c0:	1a000002 	bne	400182d0 <CyU3PDmaMultiChannelCreate+0x620>
400182c4:	e3a00001 	mov	r0, #1
400182c8:	e5840000 	str	r0, [r4]
400182cc:	ea000042 	b	400183dc <CyU3PDmaMultiChannelCreate+0x72c>
400182d0:	e2840078 	add	r0, r4, #120	; 0x78
400182d4:	ebffc772 	bl	4000a0a4 <_txe_mutex_delete>
400182d8:	e28400b0 	add	r0, r4, #176	; 0xb0
400182dc:	ebffc6a8 	bl	40009d84 <_txe_event_flags_delete>
400182e0:	e3550005 	cmp	r5, #5
400182e4:	0a000001 	beq	400182f0 <CyU3PDmaMultiChannelCreate+0x640>
400182e8:	e3550007 	cmp	r5, #7
400182ec:	1a00001d 	bne	40018368 <CyU3PDmaMultiChannelCreate+0x6b8>
400182f0:	e1d600be 	ldrh	r0, [r6, #14]
400182f4:	e3a0103f 	mov	r1, #63	; 0x3f
400182f8:	e0018440 	and	r8, r1, r0, asr #8
400182fc:	e1d600be 	ldrh	r0, [r6, #14]
40018300:	e20070ff 	and	r7, r0, #255	; 0xff
40018304:	e3a00000 	mov	r0, #0
40018308:	e59f10d8 	ldr	r1, [pc, #216]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
4001830c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018310:	e7810107 	str	r0, [r1, r7, lsl #2]
40018314:	e3a09000 	mov	r9, #0
40018318:	ea00000e 	b	40018358 <CyU3PDmaMultiChannelCreate+0x6a8>
4001831c:	e2860006 	add	r0, r6, #6
40018320:	e0800089 	add	r0, r0, r9, lsl #1
40018324:	e1d000b0 	ldrh	r0, [r0]
40018328:	e3a0103f 	mov	r1, #63	; 0x3f
4001832c:	e0018440 	and	r8, r1, r0, asr #8
40018330:	e2860006 	add	r0, r6, #6
40018334:	e0800089 	add	r0, r0, r9, lsl #1
40018338:	e1d000b0 	ldrh	r0, [r0]
4001833c:	e20070ff 	and	r7, r0, #255	; 0xff
40018340:	e3a00000 	mov	r0, #0
40018344:	e59f109c 	ldr	r1, [pc, #156]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40018348:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001834c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018350:	e2890001 	add	r0, r9, #1
40018354:	e20090ff 	and	r9, r0, #255	; 0xff
40018358:	e1d600b4 	ldrh	r0, [r6, #4]
4001835c:	e1500009 	cmp	r0, r9
40018360:	caffffed 	bgt	4001831c <CyU3PDmaMultiChannelCreate+0x66c>
40018364:	ea00001c 	b	400183dc <CyU3PDmaMultiChannelCreate+0x72c>
40018368:	e1d600b6 	ldrh	r0, [r6, #6]
4001836c:	e3a0103f 	mov	r1, #63	; 0x3f
40018370:	e0018440 	and	r8, r1, r0, asr #8
40018374:	e1d600b6 	ldrh	r0, [r6, #6]
40018378:	e20070ff 	and	r7, r0, #255	; 0xff
4001837c:	e3a00000 	mov	r0, #0
40018380:	e59f1060 	ldr	r1, [pc, #96]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
40018384:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018388:	e7810107 	str	r0, [r1, r7, lsl #2]
4001838c:	e3a09000 	mov	r9, #0
40018390:	ea00000e 	b	400183d0 <CyU3PDmaMultiChannelCreate+0x720>
40018394:	e286000e 	add	r0, r6, #14
40018398:	e0800089 	add	r0, r0, r9, lsl #1
4001839c:	e1d000b0 	ldrh	r0, [r0]
400183a0:	e3a0103f 	mov	r1, #63	; 0x3f
400183a4:	e0018440 	and	r8, r1, r0, asr #8
400183a8:	e286000e 	add	r0, r6, #14
400183ac:	e0800089 	add	r0, r0, r9, lsl #1
400183b0:	e1d000b0 	ldrh	r0, [r0]
400183b4:	e20070ff 	and	r7, r0, #255	; 0xff
400183b8:	e3a00000 	mov	r0, #0
400183bc:	e59f1024 	ldr	r1, [pc, #36]	; 400183e8 <CyU3PDmaMultiChannelCreate+0x738>
400183c0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400183c4:	e7810107 	str	r0, [r1, r7, lsl #2]
400183c8:	e2890001 	add	r0, r9, #1
400183cc:	e20090ff 	and	r9, r0, #255	; 0xff
400183d0:	e1d600b4 	ldrh	r0, [r6, #4]
400183d4:	e1500009 	cmp	r0, r9
400183d8:	caffffed 	bgt	40018394 <CyU3PDmaMultiChannelCreate+0x6e4>
400183dc:	e1a0000b 	mov	r0, fp
400183e0:	eafffe39 	b	40017ccc <CyU3PDmaMultiChannelCreate+0x1c>
400183e4:	0000fff0 	.word	0x0000fff0
400183e8:	40030d1c 	.word	0x40030d1c
400183ec:	40030c80 	.word	0x40030c80
400183f0:	40030d08 	.word	0x40030d08

Disassembly of section i.CyU3PDmaMultiChannelReset:

400183f4 <CyU3PDmaMultiChannelReset>:
400183f4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400183f8:	e1a04000 	mov	r4, r0
400183fc:	e3e01000 	mvn	r1, #0
40018400:	e1a00004 	mov	r0, r4
40018404:	ebfffbab 	bl	400172b8 <CyU3PDmaMultiChannelAcquireLock>
40018408:	e1a06000 	mov	r6, r0
4001840c:	e3560000 	cmp	r6, #0
40018410:	0a000001 	beq	4001841c <CyU3PDmaMultiChannelReset+0x28>
40018414:	e1a00006 	mov	r0, r6
40018418:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4001841c:	e1d400b4 	ldrh	r0, [r4, #4]
40018420:	e2400005 	sub	r0, r0, #5
40018424:	e3500005 	cmp	r0, #5
40018428:	308ff100 	addcc	pc, pc, r0, lsl #2
4001842c:	ea00001a 	b	4001849c <CyU3PDmaMultiChannelReset+0xa8>
40018430:	ea000003 	b	40018444 <CyU3PDmaMultiChannelReset+0x50>
40018434:	ea000007 	b	40018458 <CyU3PDmaMultiChannelReset+0x64>
40018438:	ea000003 	b	4001844c <CyU3PDmaMultiChannelReset+0x58>
4001843c:	ea000007 	b	40018460 <CyU3PDmaMultiChannelReset+0x6c>
40018440:	ea000009 	b	4001846c <CyU3PDmaMultiChannelReset+0x78>
40018444:	e1a00000 	nop			; (mov r0, r0)
40018448:	e1a00000 	nop			; (mov r0, r0)
4001844c:	e1a00004 	mov	r0, r4
40018450:	eb00003c 	bl	40018548 <CyU3PDmaMultiChannelReset_TypeManyToOne>
40018454:	ea000012 	b	400184a4 <CyU3PDmaMultiChannelReset+0xb0>
40018458:	e1a00000 	nop			; (mov r0, r0)
4001845c:	e1a00000 	nop			; (mov r0, r0)
40018460:	e1a00004 	mov	r0, r4
40018464:	eb000083 	bl	40018678 <CyU3PDmaMultiChannelReset_TypeOneToMany>
40018468:	ea00000d 	b	400184a4 <CyU3PDmaMultiChannelReset+0xb0>
4001846c:	e1a00000 	nop			; (mov r0, r0)
40018470:	e59f00cc 	ldr	r0, [pc, #204]	; 40018544 <CyU3PDmaMultiChannelReset+0x150>
40018474:	e5900000 	ldr	r0, [r0]
40018478:	e3500000 	cmp	r0, #0
4001847c:	1a000001 	bne	40018488 <CyU3PDmaMultiChannelReset+0x94>
40018480:	e3a00047 	mov	r0, #71	; 0x47
40018484:	eaffffe3 	b	40018418 <CyU3PDmaMultiChannelReset+0x24>
40018488:	e1a00004 	mov	r0, r4
4001848c:	e59f10b0 	ldr	r1, [pc, #176]	; 40018544 <CyU3PDmaMultiChannelReset+0x150>
40018490:	e5911000 	ldr	r1, [r1]
40018494:	e12fff31 	blx	r1
40018498:	ea000001 	b	400184a4 <CyU3PDmaMultiChannelReset+0xb0>
4001849c:	e1a00000 	nop			; (mov r0, r0)
400184a0:	e1a00000 	nop			; (mov r0, r0)
400184a4:	e1a00000 	nop			; (mov r0, r0)
400184a8:	ebffc108 	bl	400088d0 <_tx_thread_identify>
400184ac:	e1a05000 	mov	r5, r0
400184b0:	e3550000 	cmp	r5, #0
400184b4:	0a000003 	beq	400184c8 <CyU3PDmaMultiChannelReset+0xd4>
400184b8:	e1a0200d 	mov	r2, sp
400184bc:	e3a01002 	mov	r1, #2
400184c0:	e1a00005 	mov	r0, r5
400184c4:	ebffc90f 	bl	4000a908 <_txe_thread_priority_change>
400184c8:	e3a02002 	mov	r2, #2
400184cc:	e3e01047 	mvn	r1, #71	; 0x47
400184d0:	e28400b0 	add	r0, r4, #176	; 0xb0
400184d4:	ebffc67a 	bl	40009ec4 <_txe_event_flags_set>
400184d8:	e3a02000 	mov	r2, #0
400184dc:	e3a01020 	mov	r1, #32
400184e0:	e28400b0 	add	r0, r4, #176	; 0xb0
400184e4:	ebffc676 	bl	40009ec4 <_txe_event_flags_set>
400184e8:	e3a00001 	mov	r0, #1
400184ec:	e5840000 	str	r0, [r4]
400184f0:	e2840078 	add	r0, r4, #120	; 0x78
400184f4:	ebffc73f 	bl	4000a1f8 <_txe_mutex_put>
400184f8:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400184fc:	e3500000 	cmp	r0, #0
40018500:	0a000007 	beq	40018524 <CyU3PDmaMultiChannelReset+0x130>
40018504:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
40018508:	e3100020 	tst	r0, #32
4001850c:	0a000004 	beq	40018524 <CyU3PDmaMultiChannelReset+0x130>
40018510:	e3a02000 	mov	r2, #0
40018514:	e3a01020 	mov	r1, #32
40018518:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001851c:	e1a00004 	mov	r0, r4
40018520:	e12fff33 	blx	r3
40018524:	e3550000 	cmp	r5, #0
40018528:	0a000003 	beq	4001853c <CyU3PDmaMultiChannelReset+0x148>
4001852c:	e1a0200d 	mov	r2, sp
40018530:	e1a00005 	mov	r0, r5
40018534:	e59d1000 	ldr	r1, [sp]
40018538:	ebffc8f2 	bl	4000a908 <_txe_thread_priority_change>
4001853c:	e3a00000 	mov	r0, #0
40018540:	eaffffb4 	b	40018418 <CyU3PDmaMultiChannelReset+0x24>
40018544:	40030d10 	.word	0x40030d10

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

40018548 <CyU3PDmaMultiChannelReset_TypeManyToOne>:
40018548:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
4001854c:	e1a04000 	mov	r4, r0
40018550:	e1a00004 	mov	r0, r4
40018554:	eb000215 	bl	40018db0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40018558:	e1d451bc 	ldrh	r5, [r4, #28]
4001855c:	e1d400b8 	ldrh	r0, [r4, #8]
40018560:	e1d410ba 	ldrh	r1, [r4, #10]
40018564:	e0000091 	mul	r0, r1, r0
40018568:	e1a06800 	lsl	r6, r0, #16
4001856c:	e1a06826 	lsr	r6, r6, #16
40018570:	ea00000c 	b	400185a8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018574:	e1a0100d 	mov	r1, sp
40018578:	e1a00005 	mov	r0, r5
4001857c:	eb002807 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018580:	e59d000c 	ldr	r0, [sp, #12]
40018584:	e59f10e4 	ldr	r1, [pc, #228]	; 40018670 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018588:	e0000001 	and	r0, r0, r1
4001858c:	e58d000c 	str	r0, [sp, #12]
40018590:	e1a0100d 	mov	r1, sp
40018594:	e1a00005 	mov	r0, r5
40018598:	eb00281b 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001859c:	e59d0008 	ldr	r0, [sp, #8]
400185a0:	e1a05800 	lsl	r5, r0, #16
400185a4:	e1a05825 	lsr	r5, r5, #16
400185a8:	e1b00006 	movs	r0, r6
400185ac:	e2461001 	sub	r1, r6, #1
400185b0:	e1a06801 	lsl	r6, r1, #16
400185b4:	e1a06826 	lsr	r6, r6, #16
400185b8:	1affffed 	bne	40018574 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
400185bc:	e1d400b4 	ldrh	r0, [r4, #4]
400185c0:	e3500007 	cmp	r0, #7
400185c4:	1a000021 	bne	40018650 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
400185c8:	e3a07000 	mov	r7, #0
400185cc:	ea00001c 	b	40018644 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
400185d0:	e2840014 	add	r0, r4, #20
400185d4:	e0800087 	add	r0, r0, r7, lsl #1
400185d8:	e1d000b0 	ldrh	r0, [r0]
400185dc:	e284103e 	add	r1, r4, #62	; 0x3e
400185e0:	e0811087 	add	r1, r1, r7, lsl #1
400185e4:	e1c100b0 	strh	r0, [r1]
400185e8:	e1a05000 	mov	r5, r0
400185ec:	e3a06000 	mov	r6, #0
400185f0:	ea00000e 	b	40018630 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
400185f4:	e1a0100d 	mov	r1, sp
400185f8:	e1a00005 	mov	r0, r5
400185fc:	eb0027e7 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018600:	e59d000c 	ldr	r0, [sp, #12]
40018604:	e59f1064 	ldr	r1, [pc, #100]	; 40018670 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018608:	e0000001 	and	r0, r0, r1
4001860c:	e58d000c 	str	r0, [sp, #12]
40018610:	e1a0100d 	mov	r1, sp
40018614:	e1a00005 	mov	r0, r5
40018618:	eb0027fb 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001861c:	e59d0008 	ldr	r0, [sp, #8]
40018620:	e59f104c 	ldr	r1, [pc, #76]	; 40018674 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
40018624:	e0015820 	and	r5, r1, r0, lsr #16
40018628:	e2860001 	add	r0, r6, #1
4001862c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018630:	e1d400b8 	ldrh	r0, [r4, #8]
40018634:	e1500006 	cmp	r0, r6
40018638:	caffffed 	bgt	400185f4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
4001863c:	e2870001 	add	r0, r7, #1
40018640:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018644:	e1d400ba 	ldrh	r0, [r4, #10]
40018648:	e1500007 	cmp	r0, r7
4001864c:	caffffdf 	bgt	400185d0 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
40018650:	e1d401b4 	ldrh	r0, [r4, #20]
40018654:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018658:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
4001865c:	e1d401bc 	ldrh	r0, [r4, #28]
40018660:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018664:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018668:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001866c:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018670:	0000fff0 	.word	0x0000fff0
40018674:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

40018678 <CyU3PDmaMultiChannelReset_TypeOneToMany>:
40018678:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
4001867c:	e1a04000 	mov	r4, r0
40018680:	e1a00004 	mov	r0, r4
40018684:	eb000229 	bl	40018f30 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40018688:	e1d451b4 	ldrh	r5, [r4, #20]
4001868c:	e1d400b8 	ldrh	r0, [r4, #8]
40018690:	e1d410ba 	ldrh	r1, [r4, #10]
40018694:	e0000091 	mul	r0, r1, r0
40018698:	e1a06800 	lsl	r6, r0, #16
4001869c:	e1a06826 	lsr	r6, r6, #16
400186a0:	ea00000c 	b	400186d8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
400186a4:	e1a0100d 	mov	r1, sp
400186a8:	e1a00005 	mov	r0, r5
400186ac:	eb0027bb 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400186b0:	e59d000c 	ldr	r0, [sp, #12]
400186b4:	e59f10e4 	ldr	r1, [pc, #228]	; 400187a0 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400186b8:	e0000001 	and	r0, r0, r1
400186bc:	e58d000c 	str	r0, [sp, #12]
400186c0:	e1a0100d 	mov	r1, sp
400186c4:	e1a00005 	mov	r0, r5
400186c8:	eb0027cf 	bl	4002260c <CyU3PDmaDscrSetConfig>
400186cc:	e59d0008 	ldr	r0, [sp, #8]
400186d0:	e59f10cc 	ldr	r1, [pc, #204]	; 400187a4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
400186d4:	e0015820 	and	r5, r1, r0, lsr #16
400186d8:	e1b00006 	movs	r0, r6
400186dc:	e2461001 	sub	r1, r6, #1
400186e0:	e1a06801 	lsl	r6, r1, #16
400186e4:	e1a06826 	lsr	r6, r6, #16
400186e8:	1affffed 	bne	400186a4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
400186ec:	e1d400b4 	ldrh	r0, [r4, #4]
400186f0:	e3500008 	cmp	r0, #8
400186f4:	1a000021 	bne	40018780 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
400186f8:	e3a07000 	mov	r7, #0
400186fc:	ea00001c 	b	40018774 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018700:	e284001c 	add	r0, r4, #28
40018704:	e0800087 	add	r0, r0, r7, lsl #1
40018708:	e1d000b0 	ldrh	r0, [r0]
4001870c:	e2841046 	add	r1, r4, #70	; 0x46
40018710:	e0811087 	add	r1, r1, r7, lsl #1
40018714:	e1c100b0 	strh	r0, [r1]
40018718:	e1a05000 	mov	r5, r0
4001871c:	e3a06000 	mov	r6, #0
40018720:	ea00000e 	b	40018760 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018724:	e1a0100d 	mov	r1, sp
40018728:	e1a00005 	mov	r0, r5
4001872c:	eb00279b 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018730:	e59d000c 	ldr	r0, [sp, #12]
40018734:	e59f1064 	ldr	r1, [pc, #100]	; 400187a0 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018738:	e0000001 	and	r0, r0, r1
4001873c:	e58d000c 	str	r0, [sp, #12]
40018740:	e1a0100d 	mov	r1, sp
40018744:	e1a00005 	mov	r0, r5
40018748:	eb0027af 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001874c:	e59d0008 	ldr	r0, [sp, #8]
40018750:	e1a05800 	lsl	r5, r0, #16
40018754:	e1a05825 	lsr	r5, r5, #16
40018758:	e2860001 	add	r0, r6, #1
4001875c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018760:	e1d400b8 	ldrh	r0, [r4, #8]
40018764:	e1500006 	cmp	r0, r6
40018768:	caffffed 	bgt	40018724 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
4001876c:	e2870001 	add	r0, r7, #1
40018770:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018774:	e1d400ba 	ldrh	r0, [r4, #10]
40018778:	e1500007 	cmp	r0, r7
4001877c:	caffffdf 	bgt	40018700 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018780:	e1d401b4 	ldrh	r0, [r4, #20]
40018784:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018788:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
4001878c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018790:	e1d401bc 	ldrh	r0, [r4, #28]
40018794:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018798:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001879c:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400187a0:	0000fff0 	.word	0x0000fff0
400187a4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

400187a8 <CyU3PDmaMultiChannelSetXfer>:
400187a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400187ac:	e1a04000 	mov	r4, r0
400187b0:	e1a05001 	mov	r5, r1
400187b4:	e1a06002 	mov	r6, r2
400187b8:	e3e01000 	mvn	r1, #0
400187bc:	e1a00004 	mov	r0, r4
400187c0:	ebfffabc 	bl	400172b8 <CyU3PDmaMultiChannelAcquireLock>
400187c4:	e1a07000 	mov	r7, r0
400187c8:	e3570000 	cmp	r7, #0
400187cc:	0a000001 	beq	400187d8 <CyU3PDmaMultiChannelSetXfer+0x30>
400187d0:	e1a00007 	mov	r0, r7
400187d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400187d8:	e5940000 	ldr	r0, [r4]
400187dc:	e3500001 	cmp	r0, #1
400187e0:	0a000000 	beq	400187e8 <CyU3PDmaMultiChannelSetXfer+0x40>
400187e4:	e3a07043 	mov	r7, #67	; 0x43
400187e8:	e1d400ba 	ldrh	r0, [r4, #10]
400187ec:	e1500006 	cmp	r0, r6
400187f0:	ca000000 	bgt	400187f8 <CyU3PDmaMultiChannelSetXfer+0x50>
400187f4:	e3a07040 	mov	r7, #64	; 0x40
400187f8:	e1d400b4 	ldrh	r0, [r4, #4]
400187fc:	e3500009 	cmp	r0, #9
40018800:	1a000002 	bne	40018810 <CyU3PDmaMultiChannelSetXfer+0x68>
40018804:	e3560000 	cmp	r6, #0
40018808:	0a000000 	beq	40018810 <CyU3PDmaMultiChannelSetXfer+0x68>
4001880c:	e3a07040 	mov	r7, #64	; 0x40
40018810:	e3570000 	cmp	r7, #0
40018814:	1a00002d 	bne	400188d0 <CyU3PDmaMultiChannelSetXfer+0x128>
40018818:	e3a02002 	mov	r2, #2
4001881c:	e3e01027 	mvn	r1, #39	; 0x27
40018820:	e28400b0 	add	r0, r4, #176	; 0xb0
40018824:	ebffc5a6 	bl	40009ec4 <_txe_event_flags_set>
40018828:	e5845070 	str	r5, [r4, #112]	; 0x70
4001882c:	e1d400b4 	ldrh	r0, [r4, #4]
40018830:	e2400005 	sub	r0, r0, #5
40018834:	e3500005 	cmp	r0, #5
40018838:	308ff100 	addcc	pc, pc, r0, lsl #2
4001883c:	ea000020 	b	400188c4 <CyU3PDmaMultiChannelSetXfer+0x11c>
40018840:	ea000003 	b	40018854 <CyU3PDmaMultiChannelSetXfer+0xac>
40018844:	ea000009 	b	40018870 <CyU3PDmaMultiChannelSetXfer+0xc8>
40018848:	ea000003 	b	4001885c <CyU3PDmaMultiChannelSetXfer+0xb4>
4001884c:	ea000009 	b	40018878 <CyU3PDmaMultiChannelSetXfer+0xd0>
40018850:	ea00000d 	b	4001888c <CyU3PDmaMultiChannelSetXfer+0xe4>
40018854:	e1a00000 	nop			; (mov r0, r0)
40018858:	e1a00000 	nop			; (mov r0, r0)
4001885c:	e1a02006 	mov	r2, r6
40018860:	e1a01005 	mov	r1, r5
40018864:	e1a00004 	mov	r0, r4
40018868:	eb00001d 	bl	400188e4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
4001886c:	ea000016 	b	400188cc <CyU3PDmaMultiChannelSetXfer+0x124>
40018870:	e1a00000 	nop			; (mov r0, r0)
40018874:	e1a00000 	nop			; (mov r0, r0)
40018878:	e1a02006 	mov	r2, r6
4001887c:	e1a01005 	mov	r1, r5
40018880:	e1a00004 	mov	r0, r4
40018884:	eb0000b2 	bl	40018b54 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018888:	ea00000f 	b	400188cc <CyU3PDmaMultiChannelSetXfer+0x124>
4001888c:	e1a00000 	nop			; (mov r0, r0)
40018890:	e59f0048 	ldr	r0, [pc, #72]	; 400188e0 <CyU3PDmaMultiChannelSetXfer+0x138>
40018894:	e5900000 	ldr	r0, [r0]
40018898:	e3500000 	cmp	r0, #0
4001889c:	1a000001 	bne	400188a8 <CyU3PDmaMultiChannelSetXfer+0x100>
400188a0:	e3a00047 	mov	r0, #71	; 0x47
400188a4:	eaffffca 	b	400187d4 <CyU3PDmaMultiChannelSetXfer+0x2c>
400188a8:	e1a02006 	mov	r2, r6
400188ac:	e1a01005 	mov	r1, r5
400188b0:	e1a00004 	mov	r0, r4
400188b4:	e59f3024 	ldr	r3, [pc, #36]	; 400188e0 <CyU3PDmaMultiChannelSetXfer+0x138>
400188b8:	e5933000 	ldr	r3, [r3]
400188bc:	e12fff33 	blx	r3
400188c0:	ea000001 	b	400188cc <CyU3PDmaMultiChannelSetXfer+0x124>
400188c4:	e1a00000 	nop			; (mov r0, r0)
400188c8:	e1a00000 	nop			; (mov r0, r0)
400188cc:	e1a00000 	nop			; (mov r0, r0)
400188d0:	e2840078 	add	r0, r4, #120	; 0x78
400188d4:	ebffc647 	bl	4000a1f8 <_txe_mutex_put>
400188d8:	e1a00007 	mov	r0, r7
400188dc:	eaffffbc 	b	400187d4 <CyU3PDmaMultiChannelSetXfer+0x2c>
400188e0:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

400188e4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
400188e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400188e8:	e24dd028 	sub	sp, sp, #40	; 0x28
400188ec:	e1a04000 	mov	r4, r0
400188f0:	e1a05001 	mov	r5, r1
400188f4:	e1a06002 	mov	r6, r2
400188f8:	e3a00002 	mov	r0, #2
400188fc:	e5840000 	str	r0, [r4]
40018900:	e3a07000 	mov	r7, #0
40018904:	ea000005 	b	40018920 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018908:	e2841024 	add	r1, r4, #36	; 0x24
4001890c:	e0811087 	add	r1, r1, r7, lsl #1
40018910:	e1d100b0 	ldrh	r0, [r1]
40018914:	ebfff0ac 	bl	40014bcc <CyU3PDmaSocketDisable>
40018918:	e2870001 	add	r0, r7, #1
4001891c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018920:	e1d400ba 	ldrh	r0, [r4, #10]
40018924:	e1500007 	cmp	r0, r7
40018928:	cafffff6 	bgt	40018908 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
4001892c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018930:	ebfff0a5 	bl	40014bcc <CyU3PDmaSocketDisable>
40018934:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018938:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001893c:	ebfff1bd 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
40018940:	e2840014 	add	r0, r4, #20
40018944:	e0800086 	add	r0, r0, r6, lsl #1
40018948:	e1d000b0 	ldrh	r0, [r0]
4001894c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018950:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018954:	e3a07000 	mov	r7, #0
40018958:	ea000040 	b	40018a60 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
4001895c:	e2841024 	add	r1, r4, #36	; 0x24
40018960:	e0811087 	add	r1, r1, r7, lsl #1
40018964:	e1d100b0 	ldrh	r0, [r1]
40018968:	e28d1010 	add	r1, sp, #16
4001896c:	ebfff0ae 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018970:	e3a00000 	mov	r0, #0
40018974:	e58d0014 	str	r0, [sp, #20]
40018978:	e58d0018 	str	r0, [sp, #24]
4001897c:	e59d001c 	ldr	r0, [sp, #28]
40018980:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018984:	e58d001c 	str	r0, [sp, #28]
40018988:	e59d001c 	ldr	r0, [sp, #28]
4001898c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018990:	e58d001c 	str	r0, [sp, #28]
40018994:	e59d001c 	ldr	r0, [sp, #28]
40018998:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001899c:	e58d001c 	str	r0, [sp, #28]
400189a0:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
400189a4:	e3500001 	cmp	r0, #1
400189a8:	1a000003 	bne	400189bc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
400189ac:	e59d001c 	ldr	r0, [sp, #28]
400189b0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400189b4:	e58d001c 	str	r0, [sp, #28]
400189b8:	ea000002 	b	400189c8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
400189bc:	e59d001c 	ldr	r0, [sp, #28]
400189c0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400189c4:	e58d001c 	str	r0, [sp, #28]
400189c8:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
400189cc:	e3500000 	cmp	r0, #0
400189d0:	0a000006 	beq	400189f0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
400189d4:	e1d400b8 	ldrh	r0, [r4, #8]
400189d8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400189dc:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
400189e0:	e1800281 	orr	r0, r0, r1, lsl #5
400189e4:	e59d101c 	ldr	r1, [sp, #28]
400189e8:	e1800001 	orr	r0, r0, r1
400189ec:	e58d001c 	str	r0, [sp, #28]
400189f0:	e3e00000 	mvn	r0, #0
400189f4:	e58d0020 	str	r0, [sp, #32]
400189f8:	e1570006 	cmp	r7, r6
400189fc:	ba000004 	blt	40018a14 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018a00:	e2840014 	add	r0, r4, #20
40018a04:	e0800087 	add	r0, r0, r7, lsl #1
40018a08:	e1d000b0 	ldrh	r0, [r0]
40018a0c:	e58d0010 	str	r0, [sp, #16]
40018a10:	ea000007 	b	40018a34 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018a14:	e2841014 	add	r1, r4, #20
40018a18:	e0811087 	add	r1, r1, r7, lsl #1
40018a1c:	e1d100b0 	ldrh	r0, [r1]
40018a20:	e1a0100d 	mov	r1, sp
40018a24:	eb0026dd 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018a28:	e59d0008 	ldr	r0, [sp, #8]
40018a2c:	e1a00820 	lsr	r0, r0, #16
40018a30:	e58d0010 	str	r0, [sp, #16]
40018a34:	e284103e 	add	r1, r4, #62	; 0x3e
40018a38:	e0811087 	add	r1, r1, r7, lsl #1
40018a3c:	e59d0010 	ldr	r0, [sp, #16]
40018a40:	e1c100b0 	strh	r0, [r1]
40018a44:	e2841024 	add	r1, r4, #36	; 0x24
40018a48:	e0811087 	add	r1, r1, r7, lsl #1
40018a4c:	e1d100b0 	ldrh	r0, [r1]
40018a50:	e28d1010 	add	r1, sp, #16
40018a54:	ebfff11e 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018a58:	e2870001 	add	r0, r7, #1
40018a5c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a60:	e1d400ba 	ldrh	r0, [r4, #10]
40018a64:	e1500007 	cmp	r0, r7
40018a68:	caffffbb 	bgt	4001895c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018a6c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018a70:	e28d1010 	add	r1, sp, #16
40018a74:	ebfff06c 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018a78:	e58d5014 	str	r5, [sp, #20]
40018a7c:	e3a00000 	mov	r0, #0
40018a80:	e58d0018 	str	r0, [sp, #24]
40018a84:	e3550000 	cmp	r5, #0
40018a88:	1a000006 	bne	40018aa8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018a8c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a90:	e3c00080 	bic	r0, r0, #128	; 0x80
40018a94:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a98:	e59d001c 	ldr	r0, [sp, #28]
40018a9c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018aa0:	e58d001c 	str	r0, [sp, #28]
40018aa4:	ea000005 	b	40018ac0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018aa8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018aac:	e3800080 	orr	r0, r0, #128	; 0x80
40018ab0:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ab4:	e59d001c 	ldr	r0, [sp, #28]
40018ab8:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018abc:	e58d001c 	str	r0, [sp, #28]
40018ac0:	e59d001c 	ldr	r0, [sp, #28]
40018ac4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018ac8:	e58d001c 	str	r0, [sp, #28]
40018acc:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018ad0:	e3500001 	cmp	r0, #1
40018ad4:	1a000003 	bne	40018ae8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018ad8:	e59d001c 	ldr	r0, [sp, #28]
40018adc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018ae0:	e58d001c 	str	r0, [sp, #28]
40018ae4:	ea000002 	b	40018af4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018ae8:	e59d001c 	ldr	r0, [sp, #28]
40018aec:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018af0:	e58d001c 	str	r0, [sp, #28]
40018af4:	e3e00000 	mvn	r0, #0
40018af8:	e58d0020 	str	r0, [sp, #32]
40018afc:	e1d481bc 	ldrh	r8, [r4, #28]
40018b00:	e3a07000 	mov	r7, #0
40018b04:	ea000007 	b	40018b28 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018b08:	e1a0100d 	mov	r1, sp
40018b0c:	e1a00008 	mov	r0, r8
40018b10:	eb0026a2 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018b14:	e59d0008 	ldr	r0, [sp, #8]
40018b18:	e1a08800 	lsl	r8, r0, #16
40018b1c:	e1a08828 	lsr	r8, r8, #16
40018b20:	e2870001 	add	r0, r7, #1
40018b24:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018b28:	e1570006 	cmp	r7, r6
40018b2c:	bafffff5 	blt	40018b08 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018b30:	e58d8010 	str	r8, [sp, #16]
40018b34:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018b38:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018b3c:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018b40:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018b44:	e28d1010 	add	r1, sp, #16
40018b48:	ebfff0e1 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018b4c:	e28dd028 	add	sp, sp, #40	; 0x28
40018b50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018b54 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018b54:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018b58:	e24dd028 	sub	sp, sp, #40	; 0x28
40018b5c:	e1a04000 	mov	r4, r0
40018b60:	e1a05001 	mov	r5, r1
40018b64:	e1a06002 	mov	r6, r2
40018b68:	e3a00002 	mov	r0, #2
40018b6c:	e5840000 	str	r0, [r4]
40018b70:	e3a07000 	mov	r7, #0
40018b74:	ea000005 	b	40018b90 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018b78:	e284102c 	add	r1, r4, #44	; 0x2c
40018b7c:	e0811087 	add	r1, r1, r7, lsl #1
40018b80:	e1d100b0 	ldrh	r0, [r1]
40018b84:	ebfff010 	bl	40014bcc <CyU3PDmaSocketDisable>
40018b88:	e2870001 	add	r0, r7, #1
40018b8c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018b90:	e1d400ba 	ldrh	r0, [r4, #10]
40018b94:	e1500007 	cmp	r0, r7
40018b98:	cafffff6 	bgt	40018b78 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018b9c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ba0:	ebfff009 	bl	40014bcc <CyU3PDmaSocketDisable>
40018ba4:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018ba8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018bac:	ebfff121 	bl	40015038 <CyU3PDmaUpdateSocketSuspendOption>
40018bb0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018bb4:	e28d1010 	add	r1, sp, #16
40018bb8:	ebfff01b 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018bbc:	e58d5014 	str	r5, [sp, #20]
40018bc0:	e3a00000 	mov	r0, #0
40018bc4:	e58d0018 	str	r0, [sp, #24]
40018bc8:	e3550000 	cmp	r5, #0
40018bcc:	1a000006 	bne	40018bec <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018bd0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018bd4:	e3c00080 	bic	r0, r0, #128	; 0x80
40018bd8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018bdc:	e59d001c 	ldr	r0, [sp, #28]
40018be0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018be4:	e58d001c 	str	r0, [sp, #28]
40018be8:	ea000005 	b	40018c04 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018bec:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018bf0:	e3800080 	orr	r0, r0, #128	; 0x80
40018bf4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018bf8:	e59d001c 	ldr	r0, [sp, #28]
40018bfc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018c00:	e58d001c 	str	r0, [sp, #28]
40018c04:	e59d001c 	ldr	r0, [sp, #28]
40018c08:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018c0c:	e58d001c 	str	r0, [sp, #28]
40018c10:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018c14:	e3500001 	cmp	r0, #1
40018c18:	1a000003 	bne	40018c2c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018c1c:	e59d001c 	ldr	r0, [sp, #28]
40018c20:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018c24:	e58d001c 	str	r0, [sp, #28]
40018c28:	ea000002 	b	40018c38 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018c2c:	e59d001c 	ldr	r0, [sp, #28]
40018c30:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018c34:	e58d001c 	str	r0, [sp, #28]
40018c38:	e3e00000 	mvn	r0, #0
40018c3c:	e58d0020 	str	r0, [sp, #32]
40018c40:	e1d481b4 	ldrh	r8, [r4, #20]
40018c44:	e3a07000 	mov	r7, #0
40018c48:	ea000007 	b	40018c6c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018c4c:	e1a0100d 	mov	r1, sp
40018c50:	e1a00008 	mov	r0, r8
40018c54:	eb002651 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018c58:	e59d0008 	ldr	r0, [sp, #8]
40018c5c:	e59f1148 	ldr	r1, [pc, #328]	; 40018dac <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018c60:	e0018820 	and	r8, r1, r0, lsr #16
40018c64:	e2870001 	add	r0, r7, #1
40018c68:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c6c:	e1570006 	cmp	r7, r6
40018c70:	bafffff5 	blt	40018c4c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018c74:	e58d8010 	str	r8, [sp, #16]
40018c78:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018c7c:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018c80:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018c84:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018c88:	e28d1010 	add	r1, sp, #16
40018c8c:	ebfff090 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018c90:	e284001c 	add	r0, r4, #28
40018c94:	e0800086 	add	r0, r0, r6, lsl #1
40018c98:	e1d000b0 	ldrh	r0, [r0]
40018c9c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018ca0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018ca4:	e3a07000 	mov	r7, #0
40018ca8:	ea00003a 	b	40018d98 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018cac:	e284102c 	add	r1, r4, #44	; 0x2c
40018cb0:	e0811087 	add	r1, r1, r7, lsl #1
40018cb4:	e1d100b0 	ldrh	r0, [r1]
40018cb8:	e28d1010 	add	r1, sp, #16
40018cbc:	ebffefda 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018cc0:	e3a00000 	mov	r0, #0
40018cc4:	e58d0014 	str	r0, [sp, #20]
40018cc8:	e58d0018 	str	r0, [sp, #24]
40018ccc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018cd0:	e3c00080 	bic	r0, r0, #128	; 0x80
40018cd4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018cd8:	e59d001c 	ldr	r0, [sp, #28]
40018cdc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018ce0:	e58d001c 	str	r0, [sp, #28]
40018ce4:	e59d001c 	ldr	r0, [sp, #28]
40018ce8:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018cec:	e58d001c 	str	r0, [sp, #28]
40018cf0:	e59d001c 	ldr	r0, [sp, #28]
40018cf4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018cf8:	e58d001c 	str	r0, [sp, #28]
40018cfc:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018d00:	e3500001 	cmp	r0, #1
40018d04:	1a000003 	bne	40018d18 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018d08:	e59d001c 	ldr	r0, [sp, #28]
40018d0c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018d10:	e58d001c 	str	r0, [sp, #28]
40018d14:	ea000002 	b	40018d24 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018d18:	e59d001c 	ldr	r0, [sp, #28]
40018d1c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018d20:	e58d001c 	str	r0, [sp, #28]
40018d24:	e3e00000 	mvn	r0, #0
40018d28:	e58d0020 	str	r0, [sp, #32]
40018d2c:	e1570006 	cmp	r7, r6
40018d30:	ba000004 	blt	40018d48 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018d34:	e284001c 	add	r0, r4, #28
40018d38:	e0800087 	add	r0, r0, r7, lsl #1
40018d3c:	e1d000b0 	ldrh	r0, [r0]
40018d40:	e58d0010 	str	r0, [sp, #16]
40018d44:	ea000008 	b	40018d6c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018d48:	e284101c 	add	r1, r4, #28
40018d4c:	e0811087 	add	r1, r1, r7, lsl #1
40018d50:	e1d100b0 	ldrh	r0, [r1]
40018d54:	e1a0100d 	mov	r1, sp
40018d58:	eb002610 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40018d5c:	e59d0008 	ldr	r0, [sp, #8]
40018d60:	e1a00800 	lsl	r0, r0, #16
40018d64:	e1a00820 	lsr	r0, r0, #16
40018d68:	e58d0010 	str	r0, [sp, #16]
40018d6c:	e2841046 	add	r1, r4, #70	; 0x46
40018d70:	e0811087 	add	r1, r1, r7, lsl #1
40018d74:	e59d0010 	ldr	r0, [sp, #16]
40018d78:	e1c100b0 	strh	r0, [r1]
40018d7c:	e284102c 	add	r1, r4, #44	; 0x2c
40018d80:	e0811087 	add	r1, r1, r7, lsl #1
40018d84:	e1d100b0 	ldrh	r0, [r1]
40018d88:	e28d1010 	add	r1, sp, #16
40018d8c:	ebfff050 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018d90:	e2870001 	add	r0, r7, #1
40018d94:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018d98:	e1d400ba 	ldrh	r0, [r4, #10]
40018d9c:	e1500007 	cmp	r0, r7
40018da0:	caffffc1 	bgt	40018cac <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018da4:	e28dd028 	add	sp, sp, #40	; 0x28
40018da8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018dac:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018db0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018db0:	e92d4030 	push	{r4, r5, lr}
40018db4:	e24dd01c 	sub	sp, sp, #28
40018db8:	e1a04000 	mov	r4, r0
40018dbc:	e3a05000 	mov	r5, #0
40018dc0:	ea000031 	b	40018e8c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018dc4:	e2840014 	add	r0, r4, #20
40018dc8:	e0800085 	add	r0, r0, r5, lsl #1
40018dcc:	e1d000b0 	ldrh	r0, [r0]
40018dd0:	e284103e 	add	r1, r4, #62	; 0x3e
40018dd4:	e0811085 	add	r1, r1, r5, lsl #1
40018dd8:	e1c100b0 	strh	r0, [r1]
40018ddc:	e2841024 	add	r1, r4, #36	; 0x24
40018de0:	e0811085 	add	r1, r1, r5, lsl #1
40018de4:	e1d100b0 	ldrh	r0, [r1]
40018de8:	ebffef77 	bl	40014bcc <CyU3PDmaSocketDisable>
40018dec:	e2841024 	add	r1, r4, #36	; 0x24
40018df0:	e0811085 	add	r1, r1, r5, lsl #1
40018df4:	e1d100b0 	ldrh	r0, [r1]
40018df8:	e28d1004 	add	r1, sp, #4
40018dfc:	ebffef8a 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018e00:	e2840014 	add	r0, r4, #20
40018e04:	e0800085 	add	r0, r0, r5, lsl #1
40018e08:	e1d000b0 	ldrh	r0, [r0]
40018e0c:	e58d0004 	str	r0, [sp, #4]
40018e10:	e3a00000 	mov	r0, #0
40018e14:	e58d0008 	str	r0, [sp, #8]
40018e18:	e58d000c 	str	r0, [sp, #12]
40018e1c:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018e20:	e58d0010 	str	r0, [sp, #16]
40018e24:	e2841024 	add	r1, r4, #36	; 0x24
40018e28:	e0811085 	add	r1, r1, r5, lsl #1
40018e2c:	e1d100b0 	ldrh	r0, [r1]
40018e30:	eb0006a3 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
40018e34:	e3500000 	cmp	r0, #0
40018e38:	0a000002 	beq	40018e48 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018e3c:	e59d0010 	ldr	r0, [sp, #16]
40018e40:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018e44:	e58d0010 	str	r0, [sp, #16]
40018e48:	e3e00000 	mvn	r0, #0
40018e4c:	e58d0014 	str	r0, [sp, #20]
40018e50:	e1d400b4 	ldrh	r0, [r4, #4]
40018e54:	e3500005 	cmp	r0, #5
40018e58:	1a000002 	bne	40018e68 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018e5c:	e3a00040 	mov	r0, #64	; 0x40
40018e60:	e58d0018 	str	r0, [sp, #24]
40018e64:	ea000001 	b	40018e70 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018e68:	e3a00041 	mov	r0, #65	; 0x41
40018e6c:	e58d0018 	str	r0, [sp, #24]
40018e70:	e2841024 	add	r1, r4, #36	; 0x24
40018e74:	e0811085 	add	r1, r1, r5, lsl #1
40018e78:	e1d100b0 	ldrh	r0, [r1]
40018e7c:	e28d1004 	add	r1, sp, #4
40018e80:	ebfff013 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018e84:	e2850001 	add	r0, r5, #1
40018e88:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018e8c:	e1d400ba 	ldrh	r0, [r4, #10]
40018e90:	e1500005 	cmp	r0, r5
40018e94:	caffffca 	bgt	40018dc4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40018e98:	e1d401bc 	ldrh	r0, [r4, #28]
40018e9c:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018ea0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018ea4:	ebffef48 	bl	40014bcc <CyU3PDmaSocketDisable>
40018ea8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018eac:	e28d1004 	add	r1, sp, #4
40018eb0:	ebffef5d 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018eb4:	e1d401bc 	ldrh	r0, [r4, #28]
40018eb8:	e58d0004 	str	r0, [sp, #4]
40018ebc:	e3a00000 	mov	r0, #0
40018ec0:	e58d0008 	str	r0, [sp, #8]
40018ec4:	e58d000c 	str	r0, [sp, #12]
40018ec8:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018ecc:	e58d0010 	str	r0, [sp, #16]
40018ed0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018ed4:	eb00067a 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
40018ed8:	e3500000 	cmp	r0, #0
40018edc:	0a000002 	beq	40018eec <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40018ee0:	e59d0010 	ldr	r0, [sp, #16]
40018ee4:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018ee8:	e58d0010 	str	r0, [sp, #16]
40018eec:	e3e00000 	mvn	r0, #0
40018ef0:	e58d0014 	str	r0, [sp, #20]
40018ef4:	e1d400b4 	ldrh	r0, [r4, #4]
40018ef8:	e3500005 	cmp	r0, #5
40018efc:	1a000002 	bne	40018f0c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40018f00:	e3a000c0 	mov	r0, #192	; 0xc0
40018f04:	e58d0018 	str	r0, [sp, #24]
40018f08:	ea000001 	b	40018f14 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40018f0c:	e3a000c2 	mov	r0, #194	; 0xc2
40018f10:	e58d0018 	str	r0, [sp, #24]
40018f14:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018f18:	e28d1004 	add	r1, sp, #4
40018f1c:	ebffefec 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018f20:	e3a00000 	mov	r0, #0
40018f24:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40018f28:	e28dd01c 	add	sp, sp, #28
40018f2c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40018f30 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40018f30:	e92d4030 	push	{r4, r5, lr}
40018f34:	e24dd01c 	sub	sp, sp, #28
40018f38:	e1a04000 	mov	r4, r0
40018f3c:	e1d401b4 	ldrh	r0, [r4, #20]
40018f40:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018f44:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f48:	ebffef1f 	bl	40014bcc <CyU3PDmaSocketDisable>
40018f4c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f50:	e28d1004 	add	r1, sp, #4
40018f54:	ebffef34 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40018f58:	e1d401b4 	ldrh	r0, [r4, #20]
40018f5c:	e58d0004 	str	r0, [sp, #4]
40018f60:	e3a00000 	mov	r0, #0
40018f64:	e58d0008 	str	r0, [sp, #8]
40018f68:	e58d000c 	str	r0, [sp, #12]
40018f6c:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018f70:	e58d0010 	str	r0, [sp, #16]
40018f74:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f78:	eb000651 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
40018f7c:	e3500000 	cmp	r0, #0
40018f80:	0a000002 	beq	40018f90 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40018f84:	e59d0010 	ldr	r0, [sp, #16]
40018f88:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018f8c:	e58d0010 	str	r0, [sp, #16]
40018f90:	e3e00000 	mvn	r0, #0
40018f94:	e58d0014 	str	r0, [sp, #20]
40018f98:	e1d400b4 	ldrh	r0, [r4, #4]
40018f9c:	e3500006 	cmp	r0, #6
40018fa0:	1a000002 	bne	40018fb0 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40018fa4:	e3a000c0 	mov	r0, #192	; 0xc0
40018fa8:	e58d0018 	str	r0, [sp, #24]
40018fac:	ea000001 	b	40018fb8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40018fb0:	e3a000c1 	mov	r0, #193	; 0xc1
40018fb4:	e58d0018 	str	r0, [sp, #24]
40018fb8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018fbc:	e28d1004 	add	r1, sp, #4
40018fc0:	ebffefc3 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40018fc4:	e3a05000 	mov	r5, #0
40018fc8:	ea000035 	b	400190a4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40018fcc:	e284001c 	add	r0, r4, #28
40018fd0:	e0800085 	add	r0, r0, r5, lsl #1
40018fd4:	e1d000b0 	ldrh	r0, [r0]
40018fd8:	e2841046 	add	r1, r4, #70	; 0x46
40018fdc:	e0811085 	add	r1, r1, r5, lsl #1
40018fe0:	e1c100b0 	strh	r0, [r1]
40018fe4:	e284102c 	add	r1, r4, #44	; 0x2c
40018fe8:	e0811085 	add	r1, r1, r5, lsl #1
40018fec:	e1d100b0 	ldrh	r0, [r1]
40018ff0:	ebffeef5 	bl	40014bcc <CyU3PDmaSocketDisable>
40018ff4:	e284102c 	add	r1, r4, #44	; 0x2c
40018ff8:	e0811085 	add	r1, r1, r5, lsl #1
40018ffc:	e1d100b0 	ldrh	r0, [r1]
40019000:	e28d1004 	add	r1, sp, #4
40019004:	ebffef08 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40019008:	e284001c 	add	r0, r4, #28
4001900c:	e0800085 	add	r0, r0, r5, lsl #1
40019010:	e1d000b0 	ldrh	r0, [r0]
40019014:	e58d0004 	str	r0, [sp, #4]
40019018:	e3a00000 	mov	r0, #0
4001901c:	e58d0008 	str	r0, [sp, #8]
40019020:	e58d000c 	str	r0, [sp, #12]
40019024:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40019028:	e58d0010 	str	r0, [sp, #16]
4001902c:	e284102c 	add	r1, r4, #44	; 0x2c
40019030:	e0811085 	add	r1, r1, r5, lsl #1
40019034:	e1d100b0 	ldrh	r0, [r1]
40019038:	eb000621 	bl	4001a8c4 <CyU3PDmaIsSockAvlEnReqd>
4001903c:	e3500000 	cmp	r0, #0
40019040:	0a000002 	beq	40019050 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40019044:	e59d0010 	ldr	r0, [sp, #16]
40019048:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001904c:	e58d0010 	str	r0, [sp, #16]
40019050:	e3e00000 	mvn	r0, #0
40019054:	e58d0014 	str	r0, [sp, #20]
40019058:	e1d400b4 	ldrh	r0, [r4, #4]
4001905c:	e3500006 	cmp	r0, #6
40019060:	1a000002 	bne	40019070 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40019064:	e3a00040 	mov	r0, #64	; 0x40
40019068:	e58d0018 	str	r0, [sp, #24]
4001906c:	ea000001 	b	40019078 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40019070:	e3a00042 	mov	r0, #66	; 0x42
40019074:	e58d0018 	str	r0, [sp, #24]
40019078:	e284102c 	add	r1, r4, #44	; 0x2c
4001907c:	e0811085 	add	r1, r1, r5, lsl #1
40019080:	e1d100b0 	ldrh	r0, [r1]
40019084:	e28d1004 	add	r1, sp, #4
40019088:	ebffef91 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001908c:	e3a00000 	mov	r0, #0
40019090:	e2841064 	add	r1, r4, #100	; 0x64
40019094:	e0811085 	add	r1, r1, r5, lsl #1
40019098:	e1c100b0 	strh	r0, [r1]
4001909c:	e2850001 	add	r0, r5, #1
400190a0:	e3c05801 	bic	r5, r0, #65536	; 0x10000
400190a4:	e1d400ba 	ldrh	r0, [r4, #10]
400190a8:	e1500005 	cmp	r0, r5
400190ac:	caffffc6 	bgt	40018fcc <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
400190b0:	e28dd01c 	add	sp, sp, #28
400190b4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

400190b8 <CyU3PDmaMultiChannelSetWrapUp>:
400190b8:	e92d4070 	push	{r4, r5, r6, lr}
400190bc:	e1a04000 	mov	r4, r0
400190c0:	e1a05001 	mov	r5, r1
400190c4:	e3e01000 	mvn	r1, #0
400190c8:	e1a00004 	mov	r0, r4
400190cc:	ebfff879 	bl	400172b8 <CyU3PDmaMultiChannelAcquireLock>
400190d0:	e1a06000 	mov	r6, r0
400190d4:	e3560000 	cmp	r6, #0
400190d8:	0a000001 	beq	400190e4 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
400190dc:	e1a00006 	mov	r0, r6
400190e0:	e8bd8070 	pop	{r4, r5, r6, pc}
400190e4:	e5940000 	ldr	r0, [r4]
400190e8:	e3500004 	cmp	r0, #4
400190ec:	0a000003 	beq	40019100 <CyU3PDmaMultiChannelSetWrapUp+0x48>
400190f0:	e5940000 	ldr	r0, [r4]
400190f4:	e3500002 	cmp	r0, #2
400190f8:	0a000000 	beq	40019100 <CyU3PDmaMultiChannelSetWrapUp+0x48>
400190fc:	e3a06047 	mov	r6, #71	; 0x47
40019100:	e1d400b4 	ldrh	r0, [r4, #4]
40019104:	e3500006 	cmp	r0, #6
40019108:	0a000005 	beq	40019124 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
4001910c:	e1d400b4 	ldrh	r0, [r4, #4]
40019110:	e3500008 	cmp	r0, #8
40019114:	0a000002 	beq	40019124 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019118:	e1d400b4 	ldrh	r0, [r4, #4]
4001911c:	e3500009 	cmp	r0, #9
40019120:	1a000003 	bne	40019134 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40019124:	e3550000 	cmp	r5, #0
40019128:	0a000005 	beq	40019144 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
4001912c:	e3a06040 	mov	r6, #64	; 0x40
40019130:	ea000003 	b	40019144 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019134:	e1d400ba 	ldrh	r0, [r4, #10]
40019138:	e1500005 	cmp	r0, r5
4001913c:	ca000000 	bgt	40019144 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019140:	e3a06040 	mov	r6, #64	; 0x40
40019144:	e3560000 	cmp	r6, #0
40019148:	1a000003 	bne	4001915c <CyU3PDmaMultiChannelSetWrapUp+0xa4>
4001914c:	e2841024 	add	r1, r4, #36	; 0x24
40019150:	e0811085 	add	r1, r1, r5, lsl #1
40019154:	e1d100b0 	ldrh	r0, [r1]
40019158:	ebffef88 	bl	40014f80 <CyU3PDmaSocketSetWrapUp>
4001915c:	e2840078 	add	r0, r4, #120	; 0x78
40019160:	ebffc424 	bl	4000a1f8 <_txe_mutex_put>
40019164:	e1a00006 	mov	r0, r6
40019168:	eaffffdc 	b	400190e0 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

4001916c <CyU3PDmaApplicationDefine>:
4001916c:	e92d4010 	push	{r4, lr}
40019170:	e24dd020 	sub	sp, sp, #32
40019174:	eb000051 	bl	400192c0 <CyU3PDmaInit>
40019178:	e3a02028 	mov	r2, #40	; 0x28
4001917c:	e3a01000 	mov	r1, #0
40019180:	e59f007c 	ldr	r0, [pc, #124]	; 40019204 <CyU3PDmaApplicationDefine+0x98>
40019184:	ebffc2ae 	bl	40009c44 <_txe_event_flags_create>
40019188:	e3a00c02 	mov	r0, #512	; 0x200
4001918c:	ebffa938 	bl	40003674 <CyU3PMemAlloc>
40019190:	e1a04000 	mov	r4, r0
40019194:	e3a0303c 	mov	r3, #60	; 0x3c
40019198:	e3a02c02 	mov	r2, #512	; 0x200
4001919c:	e1cd20f0 	strd	r2, [sp]
400191a0:	e1a03004 	mov	r3, r4
400191a4:	e3a02004 	mov	r2, #4
400191a8:	e3a01000 	mov	r1, #0
400191ac:	e59f0054 	ldr	r0, [pc, #84]	; 40019208 <CyU3PDmaApplicationDefine+0x9c>
400191b0:	ebffc438 	bl	4000a298 <_txe_queue_create>
400191b4:	e3a00b01 	mov	r0, #1024	; 0x400
400191b8:	ebffa92d 	bl	40003674 <CyU3PMemAlloc>
400191bc:	e1a04000 	mov	r4, r0
400191c0:	e3a030a8 	mov	r3, #168	; 0xa8
400191c4:	e3a02001 	mov	r2, #1
400191c8:	e3a01000 	mov	r1, #0
400191cc:	e3a00002 	mov	r0, #2
400191d0:	e28dc00c 	add	ip, sp, #12
400191d4:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400191d8:	e3a02b01 	mov	r2, #1024	; 0x400
400191dc:	e1a03001 	mov	r3, r1
400191e0:	e58d2004 	str	r2, [sp, #4]
400191e4:	e59f2020 	ldr	r2, [pc, #32]	; 4001920c <CyU3PDmaApplicationDefine+0xa0>
400191e8:	e28f1020 	add	r1, pc, #32
400191ec:	e58d0008 	str	r0, [sp, #8]
400191f0:	e59f0028 	ldr	r0, [pc, #40]	; 40019220 <CyU3PDmaApplicationDefine+0xb4>
400191f4:	e58d4000 	str	r4, [sp]
400191f8:	ebffc50c 	bl	4000a630 <_txe_thread_create>
400191fc:	e28dd020 	add	sp, sp, #32
40019200:	e8bd8010 	pop	{r4, pc}
40019204:	40031908 	.word	0x40031908
40019208:	40031930 	.word	0x40031930
4001920c:	4001aa70 	.word	0x4001aa70
40019210:	445f3130 	.word	0x445f3130
40019214:	545f414d 	.word	0x545f414d
40019218:	41455248 	.word	0x41455248
4001921c:	00000044 	.word	0x00000044
40019220:	40031860 	.word	0x40031860

Disassembly of section i.CyU3PDmaChannelHandleError:

40019224 <CyU3PDmaChannelHandleError>:
40019224:	e92d4010 	push	{r4, lr}
40019228:	e1a04000 	mov	r4, r0
4001922c:	e3e01000 	mvn	r1, #0
40019230:	e284003c 	add	r0, r4, #60	; 0x3c
40019234:	ebffc3ba 	bl	4000a124 <_txe_mutex_get>
40019238:	e1d400b4 	ldrh	r0, [r4, #4]
4001923c:	e3500004 	cmp	r0, #4
40019240:	0a000001 	beq	4001924c <CyU3PDmaChannelHandleError+0x28>
40019244:	e1d401b0 	ldrh	r0, [r4, #16]
40019248:	ebffee5f 	bl	40014bcc <CyU3PDmaSocketDisable>
4001924c:	e1d400b4 	ldrh	r0, [r4, #4]
40019250:	e3500003 	cmp	r0, #3
40019254:	0a000001 	beq	40019260 <CyU3PDmaChannelHandleError+0x3c>
40019258:	e1d401b2 	ldrh	r0, [r4, #18]
4001925c:	ebffee5a 	bl	40014bcc <CyU3PDmaSocketDisable>
40019260:	e3a02002 	mov	r2, #2
40019264:	e3e01007 	mvn	r1, #7
40019268:	e2840074 	add	r0, r4, #116	; 0x74
4001926c:	ebffc314 	bl	40009ec4 <_txe_event_flags_set>
40019270:	e3a02000 	mov	r2, #0
40019274:	e3a01040 	mov	r1, #64	; 0x40
40019278:	e2840074 	add	r0, r4, #116	; 0x74
4001927c:	ebffc310 	bl	40009ec4 <_txe_event_flags_set>
40019280:	e3a00005 	mov	r0, #5
40019284:	e5840000 	str	r0, [r4]
40019288:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
4001928c:	e3500000 	cmp	r0, #0
40019290:	0a000007 	beq	400192b4 <CyU3PDmaChannelHandleError+0x90>
40019294:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40019298:	e3100040 	tst	r0, #64	; 0x40
4001929c:	0a000004 	beq	400192b4 <CyU3PDmaChannelHandleError+0x90>
400192a0:	e3a02000 	mov	r2, #0
400192a4:	e3a01040 	mov	r1, #64	; 0x40
400192a8:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
400192ac:	e1a00004 	mov	r0, r4
400192b0:	e12fff33 	blx	r3
400192b4:	e284003c 	add	r0, r4, #60	; 0x3c
400192b8:	ebffc3ce 	bl	4000a1f8 <_txe_mutex_put>
400192bc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

400192c0 <CyU3PDmaInit>:
400192c0:	e92d4010 	push	{r4, lr}
400192c4:	e3a02020 	mov	r2, #32
400192c8:	e3a01000 	mov	r1, #0
400192cc:	e59f006c 	ldr	r0, [pc, #108]	; 40019340 <CyU3PDmaInit+0x80>
400192d0:	ebffa8f8 	bl	400036b8 <CyU3PMemSet>
400192d4:	e3a02080 	mov	r2, #128	; 0x80
400192d8:	e3a01000 	mov	r1, #0
400192dc:	e59f0060 	ldr	r0, [pc, #96]	; 40019344 <CyU3PDmaInit+0x84>
400192e0:	ebffa8f4 	bl	400036b8 <CyU3PMemSet>
400192e4:	e3a02020 	mov	r2, #32
400192e8:	e3a01000 	mov	r1, #0
400192ec:	e59f0054 	ldr	r0, [pc, #84]	; 40019348 <CyU3PDmaInit+0x88>
400192f0:	ebffa8f0 	bl	400036b8 <CyU3PMemSet>
400192f4:	e3a02040 	mov	r2, #64	; 0x40
400192f8:	e3a01000 	mov	r1, #0
400192fc:	e59f0048 	ldr	r0, [pc, #72]	; 4001934c <CyU3PDmaInit+0x8c>
40019300:	ebffa8ec 	bl	400036b8 <CyU3PMemSet>
40019304:	e3a02040 	mov	r2, #64	; 0x40
40019308:	e3a01000 	mov	r1, #0
4001930c:	e59f003c 	ldr	r0, [pc, #60]	; 40019350 <CyU3PDmaInit+0x90>
40019310:	ebffa8e8 	bl	400036b8 <CyU3PMemSet>
40019314:	e3a00000 	mov	r0, #0
40019318:	e59f1034 	ldr	r1, [pc, #52]	; 40019354 <CyU3PDmaInit+0x94>
4001931c:	e5810000 	str	r0, [r1]
40019320:	eb002462 	bl	400224b0 <CyU3PDmaDscrListCreate>
40019324:	ebffaa24 	bl	40003bbc <CyU3PDmaBufferInit>
40019328:	e3a00000 	mov	r0, #0
4001932c:	e59f1024 	ldr	r1, [pc, #36]	; 40019358 <CyU3PDmaInit+0x98>
40019330:	e1c100b0 	strh	r0, [r1]
40019334:	e59f1020 	ldr	r1, [pc, #32]	; 4001935c <CyU3PDmaInit+0x9c>
40019338:	e1c100b0 	strh	r0, [r1]
4001933c:	e8bd8010 	pop	{r4, pc}
40019340:	40031720 	.word	0x40031720
40019344:	40031740 	.word	0x40031740
40019348:	400317c0 	.word	0x400317c0
4001934c:	400317e0 	.word	0x400317e0
40019350:	40031820 	.word	0x40031820
40019354:	40030cf0 	.word	0x40030cf0
40019358:	40030d18 	.word	0x40030d18
4001935c:	40030d1a 	.word	0x40030d1a

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

40019360 <CyU3PDmaIntHandler_TypeAuto>:
40019360:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019364:	e24dd01c 	sub	sp, sp, #28
40019368:	e1a04000 	mov	r4, r0
4001936c:	e5949004 	ldr	r9, [r4, #4]
40019370:	e5948008 	ldr	r8, [r4, #8]
40019374:	e3180040 	tst	r8, #64	; 0x40
40019378:	0a000003 	beq	4001938c <CyU3PDmaIntHandler_TypeAuto+0x2c>
4001937c:	e1a00009 	mov	r0, r9
40019380:	ebffffa7 	bl	40019224 <CyU3PDmaChannelHandleError>
40019384:	e28dd01c 	add	sp, sp, #28
40019388:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001938c:	e3e01000 	mvn	r1, #0
40019390:	e289003c 	add	r0, r9, #60	; 0x3c
40019394:	ebffc362 	bl	4000a124 <_txe_mutex_get>
40019398:	e1d901b2 	ldrh	r0, [r9, #18]
4001939c:	e5941000 	ldr	r1, [r4]
400193a0:	e1500821 	cmp	r0, r1, lsr #16
400193a4:	1a00004b 	bne	400194d8 <CyU3PDmaIntHandler_TypeAuto+0x178>
400193a8:	e1d901b2 	ldrh	r0, [r9, #18]
400193ac:	e3a0103f 	mov	r1, #63	; 0x3f
400193b0:	e0015440 	and	r5, r1, r0, asr #8
400193b4:	e1d901b2 	ldrh	r0, [r9, #18]
400193b8:	e20060ff 	and	r6, r0, #255	; 0xff
400193bc:	e594000c 	ldr	r0, [r4, #12]
400193c0:	e1a07800 	lsl	r7, r0, #16
400193c4:	e1a07827 	lsr	r7, r7, #16
400193c8:	e3180080 	tst	r8, #128	; 0x80
400193cc:	0a000012 	beq	4001941c <CyU3PDmaIntHandler_TypeAuto+0xbc>
400193d0:	e3a00001 	mov	r0, #1
400193d4:	e5890000 	str	r0, [r9]
400193d8:	e3a02000 	mov	r2, #0
400193dc:	e3a01001 	mov	r1, #1
400193e0:	e2890074 	add	r0, r9, #116	; 0x74
400193e4:	ebffc2b6 	bl	40009ec4 <_txe_event_flags_set>
400193e8:	ebffe599 	bl	40012a54 <CyU3PSysBarrierSync>
400193ec:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400193f0:	e3500000 	cmp	r0, #0
400193f4:	0a000028 	beq	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
400193f8:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400193fc:	e3100001 	tst	r0, #1
40019400:	0a000025 	beq	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019404:	e3a02000 	mov	r2, #0
40019408:	e3a01001 	mov	r1, #1
4001940c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019410:	e1a00009 	mov	r0, r9
40019414:	e12fff33 	blx	r3
40019418:	ea00001f 	b	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001941c:	e3180002 	tst	r8, #2
40019420:	0a00001d 	beq	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019424:	e5990000 	ldr	r0, [r9]
40019428:	e3500003 	cmp	r0, #3
4001942c:	1a00001a 	bne	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019430:	e3a00001 	mov	r0, #1
40019434:	e5890000 	str	r0, [r9]
40019438:	e59f0284 	ldr	r0, [pc, #644]	; 400196c4 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001943c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019440:	e0800386 	add	r0, r0, r6, lsl #7
40019444:	e5900014 	ldr	r0, [r0, #20]
40019448:	e3c00002 	bic	r0, r0, #2
4001944c:	e59f1270 	ldr	r1, [pc, #624]	; 400196c4 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019450:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019454:	e0811386 	add	r1, r1, r6, lsl #7
40019458:	e5810014 	str	r0, [r1, #20]
4001945c:	e3a02000 	mov	r2, #0
40019460:	e3a01002 	mov	r1, #2
40019464:	e2890074 	add	r0, r9, #116	; 0x74
40019468:	ebffc295 	bl	40009ec4 <_txe_event_flags_set>
4001946c:	ebffe578 	bl	40012a54 <CyU3PSysBarrierSync>
40019470:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019474:	e3500000 	cmp	r0, #0
40019478:	0a000007 	beq	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001947c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019480:	e3100002 	tst	r0, #2
40019484:	0a000004 	beq	4001949c <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019488:	e3a02000 	mov	r2, #0
4001948c:	e3a01002 	mov	r1, #2
40019490:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019494:	e1a00009 	mov	r0, r9
40019498:	e12fff33 	blx	r3
4001949c:	e3180e12 	tst	r8, #288	; 0x120
400194a0:	0a000084 	beq	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
400194a4:	ebffe56a 	bl	40012a54 <CyU3PSysBarrierSync>
400194a8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400194ac:	e3500000 	cmp	r0, #0
400194b0:	0a000080 	beq	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
400194b4:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400194b8:	e3100c01 	tst	r0, #256	; 0x100
400194bc:	0a00007d 	beq	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
400194c0:	e3a02000 	mov	r2, #0
400194c4:	e3a01c01 	mov	r1, #256	; 0x100
400194c8:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400194cc:	e1a00009 	mov	r0, r9
400194d0:	e12fff33 	blx	r3
400194d4:	ea000077 	b	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
400194d8:	e1d901b0 	ldrh	r0, [r9, #16]
400194dc:	e3a0103f 	mov	r1, #63	; 0x3f
400194e0:	e0015440 	and	r5, r1, r0, asr #8
400194e4:	e1d901b0 	ldrh	r0, [r9, #16]
400194e8:	e20060ff 	and	r6, r0, #255	; 0xff
400194ec:	e594000c 	ldr	r0, [r4, #12]
400194f0:	e1a07800 	lsl	r7, r0, #16
400194f4:	e1a07827 	lsr	r7, r7, #16
400194f8:	e3180001 	tst	r8, #1
400194fc:	0a00005f 	beq	40019680 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019500:	e5990000 	ldr	r0, [r9]
40019504:	e3500004 	cmp	r0, #4
40019508:	0a00002b 	beq	400195bc <CyU3PDmaIntHandler_TypeAuto+0x25c>
4001950c:	e1a00000 	nop			; (mov r0, r0)
40019510:	e1d901b6 	ldrh	r0, [r9, #22]
40019514:	e28d100c 	add	r1, sp, #12
40019518:	eb002420 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001951c:	e59d000c 	ldr	r0, [sp, #12]
40019520:	e58d0000 	str	r0, [sp]
40019524:	e59d0018 	ldr	r0, [sp, #24]
40019528:	e59f1198 	ldr	r1, [pc, #408]	; 400196c8 <CyU3PDmaIntHandler_TypeAuto+0x368>
4001952c:	e0010820 	and	r0, r1, r0, lsr #16
40019530:	e1cd00b4 	strh	r0, [sp, #4]
40019534:	e241100f 	sub	r1, r1, #15
40019538:	e59d0018 	ldr	r0, [sp, #24]
4001953c:	e0000001 	and	r0, r0, r1
40019540:	e1cd00b6 	strh	r0, [sp, #6]
40019544:	e59d0018 	ldr	r0, [sp, #24]
40019548:	e200000f 	and	r0, r0, #15
4001954c:	e1cd00b8 	strh	r0, [sp, #8]
40019550:	e1811241 	orr	r1, r1, r1, asr #4
40019554:	e59d0014 	ldr	r0, [sp, #20]
40019558:	e0010820 	and	r0, r1, r0, lsr #16
4001955c:	e1c901b6 	strh	r0, [r9, #22]
40019560:	ebffe53b 	bl	40012a54 <CyU3PSysBarrierSync>
40019564:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019568:	e3500000 	cmp	r0, #0
4001956c:	0a000002 	beq	4001957c <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019570:	e1dd10b6 	ldrh	r1, [sp, #6]
40019574:	e59d0000 	ldr	r0, [sp]
40019578:	ebffe2dc 	bl	400120f0 <CyU3PSysFlushDRegion>
4001957c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019580:	e3500000 	cmp	r0, #0
40019584:	0a000007 	beq	400195a8 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019588:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001958c:	e3100008 	tst	r0, #8
40019590:	0a000004 	beq	400195a8 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019594:	e1a0200d 	mov	r2, sp
40019598:	e3a01008 	mov	r1, #8
4001959c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400195a0:	e1a00009 	mov	r0, r9
400195a4:	e12fff33 	blx	r3
400195a8:	e1d901b6 	ldrh	r0, [r9, #22]
400195ac:	e1500007 	cmp	r0, r7
400195b0:	1affffd6 	bne	40019510 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
400195b4:	e1c971be 	strh	r7, [r9, #30]
400195b8:	ea000030 	b	40019680 <CyU3PDmaIntHandler_TypeAuto+0x320>
400195bc:	e1d901b4 	ldrh	r0, [r9, #20]
400195c0:	e28d100c 	add	r1, sp, #12
400195c4:	eb0023f5 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400195c8:	e59d000c 	ldr	r0, [sp, #12]
400195cc:	e58d0000 	str	r0, [sp]
400195d0:	e59d0018 	ldr	r0, [sp, #24]
400195d4:	e59f10ec 	ldr	r1, [pc, #236]	; 400196c8 <CyU3PDmaIntHandler_TypeAuto+0x368>
400195d8:	e0010820 	and	r0, r1, r0, lsr #16
400195dc:	e1cd00b4 	strh	r0, [sp, #4]
400195e0:	e241100f 	sub	r1, r1, #15
400195e4:	e59d0018 	ldr	r0, [sp, #24]
400195e8:	e0000001 	and	r0, r0, r1
400195ec:	e1cd00b6 	strh	r0, [sp, #6]
400195f0:	e59d0018 	ldr	r0, [sp, #24]
400195f4:	e200000f 	and	r0, r0, #15
400195f8:	e1cd00b8 	strh	r0, [sp, #8]
400195fc:	e3a00001 	mov	r0, #1
40019600:	e5890000 	str	r0, [r9]
40019604:	e59f00b8 	ldr	r0, [pc, #184]	; 400196c4 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019608:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001960c:	e0800386 	add	r0, r0, r6, lsl #7
40019610:	e5900014 	ldr	r0, [r0, #20]
40019614:	e3c00001 	bic	r0, r0, #1
40019618:	e59f10a4 	ldr	r1, [pc, #164]	; 400196c4 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001961c:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019620:	e0811386 	add	r1, r1, r6, lsl #7
40019624:	e5810014 	str	r0, [r1, #20]
40019628:	e5990038 	ldr	r0, [r9, #56]	; 0x38
4001962c:	e3500000 	cmp	r0, #0
40019630:	0a000002 	beq	40019640 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
40019634:	e1dd10b6 	ldrh	r1, [sp, #6]
40019638:	e59d0000 	ldr	r0, [sp]
4001963c:	ebffe2ab 	bl	400120f0 <CyU3PSysFlushDRegion>
40019640:	e3a02000 	mov	r2, #0
40019644:	e3a01004 	mov	r1, #4
40019648:	e2890074 	add	r0, r9, #116	; 0x74
4001964c:	ebffc21c 	bl	40009ec4 <_txe_event_flags_set>
40019650:	ebffe4ff 	bl	40012a54 <CyU3PSysBarrierSync>
40019654:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019658:	e3500000 	cmp	r0, #0
4001965c:	0a000007 	beq	40019680 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019660:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019664:	e3100004 	tst	r0, #4
40019668:	0a000004 	beq	40019680 <CyU3PDmaIntHandler_TypeAuto+0x320>
4001966c:	e1a0200d 	mov	r2, sp
40019670:	e3a01004 	mov	r1, #4
40019674:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019678:	e1a00009 	mov	r0, r9
4001967c:	e12fff33 	blx	r3
40019680:	e3180020 	tst	r8, #32
40019684:	0a00000b 	beq	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019688:	ebffe4f1 	bl	40012a54 <CyU3PSysBarrierSync>
4001968c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019690:	e3500000 	cmp	r0, #0
40019694:	0a000007 	beq	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019698:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001969c:	e3100080 	tst	r0, #128	; 0x80
400196a0:	0a000004 	beq	400196b8 <CyU3PDmaIntHandler_TypeAuto+0x358>
400196a4:	e3a02000 	mov	r2, #0
400196a8:	e3a01080 	mov	r1, #128	; 0x80
400196ac:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400196b0:	e1a00009 	mov	r0, r9
400196b4:	e12fff33 	blx	r3
400196b8:	e289003c 	add	r0, r9, #60	; 0x3c
400196bc:	ebffc2cd 	bl	4000a1f8 <_txe_mutex_put>
400196c0:	eaffff2f 	b	40019384 <CyU3PDmaIntHandler_TypeAuto+0x24>
400196c4:	40030cf4 	.word	0x40030cf4
400196c8:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

400196cc <CyU3PDmaIntHandler_TypeManual>:
400196cc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400196d0:	e24dd034 	sub	sp, sp, #52	; 0x34
400196d4:	e1a04000 	mov	r4, r0
400196d8:	e5945004 	ldr	r5, [r4, #4]
400196dc:	e5946008 	ldr	r6, [r4, #8]
400196e0:	e3160040 	tst	r6, #64	; 0x40
400196e4:	0a000003 	beq	400196f8 <CyU3PDmaIntHandler_TypeManual+0x2c>
400196e8:	e1a00005 	mov	r0, r5
400196ec:	ebfffecc 	bl	40019224 <CyU3PDmaChannelHandleError>
400196f0:	e28dd034 	add	sp, sp, #52	; 0x34
400196f4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400196f8:	e3e01000 	mvn	r1, #0
400196fc:	e285003c 	add	r0, r5, #60	; 0x3c
40019700:	ebffc287 	bl	4000a124 <_txe_mutex_get>
40019704:	e1d501b2 	ldrh	r0, [r5, #18]
40019708:	e5941000 	ldr	r1, [r4]
4001970c:	e1500821 	cmp	r0, r1, lsr #16
40019710:	1a0000d6 	bne	40019a70 <CyU3PDmaIntHandler_TypeManual+0x3a4>
40019714:	e594000c 	ldr	r0, [r4, #12]
40019718:	e1a07800 	lsl	r7, r0, #16
4001971c:	e1a07827 	lsr	r7, r7, #16
40019720:	e3160002 	tst	r6, #2
40019724:	0a000060 	beq	400198ac <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019728:	e5950000 	ldr	r0, [r5]
4001972c:	e3500003 	cmp	r0, #3
40019730:	1a000013 	bne	40019784 <CyU3PDmaIntHandler_TypeManual+0xb8>
40019734:	e3a00001 	mov	r0, #1
40019738:	e5850000 	str	r0, [r5]
4001973c:	e3a02000 	mov	r2, #0
40019740:	e3a01002 	mov	r1, #2
40019744:	e2850074 	add	r0, r5, #116	; 0x74
40019748:	ebffc1dd 	bl	40009ec4 <_txe_event_flags_set>
4001974c:	e3c66080 	bic	r6, r6, #128	; 0x80
40019750:	ebffe4bf 	bl	40012a54 <CyU3PSysBarrierSync>
40019754:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019758:	e3500000 	cmp	r0, #0
4001975c:	0a000052 	beq	400198ac <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019760:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019764:	e3100002 	tst	r0, #2
40019768:	0a00004f 	beq	400198ac <CyU3PDmaIntHandler_TypeManual+0x1e0>
4001976c:	e3a02000 	mov	r2, #0
40019770:	e3a01002 	mov	r1, #2
40019774:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019778:	e1a00005 	mov	r0, r5
4001977c:	e12fff33 	blx	r3
40019780:	ea000049 	b	400198ac <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019784:	e1d500b4 	ldrh	r0, [r5, #4]
40019788:	e3500002 	cmp	r0, #2
4001978c:	1a000027 	bne	40019830 <CyU3PDmaIntHandler_TypeManual+0x164>
40019790:	e1a00000 	nop			; (mov r0, r0)
40019794:	e1d501ba 	ldrh	r0, [r5, #26]
40019798:	e28d1024 	add	r1, sp, #36	; 0x24
4001979c:	eb00237f 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400197a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400197a4:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019c54 <CyU3PDmaIntHandler_TypeManual+0x588>
400197a8:	e0000001 	and	r0, r0, r1
400197ac:	e58d0030 	str	r0, [sp, #48]	; 0x30
400197b0:	e1d501ba 	ldrh	r0, [r5, #26]
400197b4:	e28d1024 	add	r1, sp, #36	; 0x24
400197b8:	eb002393 	bl	4002260c <CyU3PDmaDscrSetConfig>
400197bc:	e1d511ba 	ldrh	r1, [r5, #26]
400197c0:	e1d501b0 	ldrh	r0, [r5, #16]
400197c4:	e3a02000 	mov	r2, #0
400197c8:	ebffedaf 	bl	40014e8c <CyU3PDmaSocketSendEvent>
400197cc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400197d0:	e59f1480 	ldr	r1, [pc, #1152]	; 40019c58 <CyU3PDmaIntHandler_TypeManual+0x58c>
400197d4:	e0010820 	and	r0, r1, r0, lsr #16
400197d8:	e1c501ba 	strh	r0, [r5, #26]
400197dc:	e1d502b0 	ldrh	r0, [r5, #32]
400197e0:	e28d1024 	add	r1, sp, #36	; 0x24
400197e4:	eb00236d 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400197e8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400197ec:	e1c502b0 	strh	r0, [r5, #32]
400197f0:	ebffe497 	bl	40012a54 <CyU3PSysBarrierSync>
400197f4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400197f8:	e3500000 	cmp	r0, #0
400197fc:	0a000007 	beq	40019820 <CyU3PDmaIntHandler_TypeManual+0x154>
40019800:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019804:	e3100010 	tst	r0, #16
40019808:	0a000004 	beq	40019820 <CyU3PDmaIntHandler_TypeManual+0x154>
4001980c:	e3a02000 	mov	r2, #0
40019810:	e3a01010 	mov	r1, #16
40019814:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019818:	e1a00005 	mov	r0, r5
4001981c:	e12fff33 	blx	r3
40019820:	e1d502b0 	ldrh	r0, [r5, #32]
40019824:	e1500007 	cmp	r0, r7
40019828:	1affffd9 	bne	40019794 <CyU3PDmaIntHandler_TypeManual+0xc8>
4001982c:	ea00001e 	b	400198ac <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019830:	e1a00000 	nop			; (mov r0, r0)
40019834:	e1d501b8 	ldrh	r0, [r5, #24]
40019838:	e28d1024 	add	r1, sp, #36	; 0x24
4001983c:	eb002357 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019840:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019844:	e3100008 	tst	r0, #8
40019848:	1a000003 	bne	4001985c <CyU3PDmaIntHandler_TypeManual+0x190>
4001984c:	e3a02000 	mov	r2, #0
40019850:	e3a01010 	mov	r1, #16
40019854:	e2850074 	add	r0, r5, #116	; 0x74
40019858:	ebffc199 	bl	40009ec4 <_txe_event_flags_set>
4001985c:	e1d502b0 	ldrh	r0, [r5, #32]
40019860:	e28d1024 	add	r1, sp, #36	; 0x24
40019864:	eb00234d 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019868:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001986c:	e1c502b0 	strh	r0, [r5, #32]
40019870:	ebffe477 	bl	40012a54 <CyU3PSysBarrierSync>
40019874:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019878:	e3500000 	cmp	r0, #0
4001987c:	0a000007 	beq	400198a0 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019880:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019884:	e3100010 	tst	r0, #16
40019888:	0a000004 	beq	400198a0 <CyU3PDmaIntHandler_TypeManual+0x1d4>
4001988c:	e3a02000 	mov	r2, #0
40019890:	e3a01010 	mov	r1, #16
40019894:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019898:	e1a00005 	mov	r0, r5
4001989c:	e12fff33 	blx	r3
400198a0:	e1d502b0 	ldrh	r0, [r5, #32]
400198a4:	e1500007 	cmp	r0, r7
400198a8:	1affffe1 	bne	40019834 <CyU3PDmaIntHandler_TypeManual+0x168>
400198ac:	e3160010 	tst	r6, #16
400198b0:	0a000046 	beq	400199d0 <CyU3PDmaIntHandler_TypeManual+0x304>
400198b4:	e1d502b0 	ldrh	r0, [r5, #32]
400198b8:	e28d1024 	add	r1, sp, #36	; 0x24
400198bc:	eb002337 	bl	400225a0 <CyU3PDmaDscrGetConfig>
400198c0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400198c4:	e3100001 	tst	r0, #1
400198c8:	0a000040 	beq	400199d0 <CyU3PDmaIntHandler_TypeManual+0x304>
400198cc:	e1d501b2 	ldrh	r0, [r5, #18]
400198d0:	ebffecbd 	bl	40014bcc <CyU3PDmaSocketDisable>
400198d4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400198d8:	e59f1374 	ldr	r1, [pc, #884]	; 40019c54 <CyU3PDmaIntHandler_TypeManual+0x588>
400198dc:	e0000001 	and	r0, r0, r1
400198e0:	e58d0030 	str	r0, [sp, #48]	; 0x30
400198e4:	e1d502b0 	ldrh	r0, [r5, #32]
400198e8:	e28d1024 	add	r1, sp, #36	; 0x24
400198ec:	eb002346 	bl	4002260c <CyU3PDmaDscrSetConfig>
400198f0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400198f4:	e1c502b0 	strh	r0, [r5, #32]
400198f8:	e1d501b2 	ldrh	r0, [r5, #18]
400198fc:	e28d100c 	add	r1, sp, #12
40019900:	ebffecc9 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40019904:	e59d0018 	ldr	r0, [sp, #24]
40019908:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001990c:	e58d0018 	str	r0, [sp, #24]
40019910:	e59d0018 	ldr	r0, [sp, #24]
40019914:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019918:	e58d0018 	str	r0, [sp, #24]
4001991c:	e3a00000 	mov	r0, #0
40019920:	e58d001c 	str	r0, [sp, #28]
40019924:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019928:	e2400001 	sub	r0, r0, #1
4001992c:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
40019930:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019934:	e3500000 	cmp	r0, #0
40019938:	1a000004 	bne	40019950 <CyU3PDmaIntHandler_TypeManual+0x284>
4001993c:	e3a00010 	mov	r0, #16
40019940:	e58d001c 	str	r0, [sp, #28]
40019944:	e59d0020 	ldr	r0, [sp, #32]
40019948:	e3c00010 	bic	r0, r0, #16
4001994c:	e58d0020 	str	r0, [sp, #32]
40019950:	e1d502b0 	ldrh	r0, [r5, #32]
40019954:	e58d000c 	str	r0, [sp, #12]
40019958:	e1d501b2 	ldrh	r0, [r5, #18]
4001995c:	e28d100c 	add	r1, sp, #12
40019960:	ebffed5b 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40019964:	e1d501ba 	ldrh	r0, [r5, #26]
40019968:	e28d1024 	add	r1, sp, #36	; 0x24
4001996c:	eb00230b 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019970:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019974:	e59f12d8 	ldr	r1, [pc, #728]	; 40019c54 <CyU3PDmaIntHandler_TypeManual+0x588>
40019978:	e0000001 	and	r0, r0, r1
4001997c:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019980:	e1d501ba 	ldrh	r0, [r5, #26]
40019984:	e28d1024 	add	r1, sp, #36	; 0x24
40019988:	eb00231f 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001998c:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019990:	e3500000 	cmp	r0, #0
40019994:	0a000004 	beq	400199ac <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019998:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
4001999c:	e59f32b0 	ldr	r3, [pc, #688]	; 40019c54 <CyU3PDmaIntHandler_TypeManual+0x588>
400199a0:	e0021003 	and	r1, r2, r3
400199a4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400199a8:	ebffe1d0 	bl	400120f0 <CyU3PSysFlushDRegion>
400199ac:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400199b0:	e59f12a0 	ldr	r1, [pc, #672]	; 40019c58 <CyU3PDmaIntHandler_TypeManual+0x58c>
400199b4:	e0010820 	and	r0, r1, r0, lsr #16
400199b8:	e1c501ba 	strh	r0, [r5, #26]
400199bc:	e1d511ba 	ldrh	r1, [r5, #26]
400199c0:	e1d501b0 	ldrh	r0, [r5, #16]
400199c4:	e3a02000 	mov	r2, #0
400199c8:	ebffed2f 	bl	40014e8c <CyU3PDmaSocketSendEvent>
400199cc:	ebffe420 	bl	40012a54 <CyU3PSysBarrierSync>
400199d0:	e3160080 	tst	r6, #128	; 0x80
400199d4:	0a000016 	beq	40019a34 <CyU3PDmaIntHandler_TypeManual+0x368>
400199d8:	e1d500b4 	ldrh	r0, [r5, #4]
400199dc:	e3500002 	cmp	r0, #2
400199e0:	1a000001 	bne	400199ec <CyU3PDmaIntHandler_TypeManual+0x320>
400199e4:	e1d501b0 	ldrh	r0, [r5, #16]
400199e8:	ebffec77 	bl	40014bcc <CyU3PDmaSocketDisable>
400199ec:	e3a00001 	mov	r0, #1
400199f0:	e5850000 	str	r0, [r5]
400199f4:	e3a02000 	mov	r2, #0
400199f8:	e3a01001 	mov	r1, #1
400199fc:	e2850074 	add	r0, r5, #116	; 0x74
40019a00:	ebffc12f 	bl	40009ec4 <_txe_event_flags_set>
40019a04:	ebffe412 	bl	40012a54 <CyU3PSysBarrierSync>
40019a08:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a0c:	e3500000 	cmp	r0, #0
40019a10:	0a000007 	beq	40019a34 <CyU3PDmaIntHandler_TypeManual+0x368>
40019a14:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a18:	e3100001 	tst	r0, #1
40019a1c:	0a000004 	beq	40019a34 <CyU3PDmaIntHandler_TypeManual+0x368>
40019a20:	e3a02000 	mov	r2, #0
40019a24:	e3a01001 	mov	r1, #1
40019a28:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a2c:	e1a00005 	mov	r0, r5
40019a30:	e12fff33 	blx	r3
40019a34:	e3160e12 	tst	r6, #288	; 0x120
40019a38:	0a000082 	beq	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a3c:	ebffe404 	bl	40012a54 <CyU3PSysBarrierSync>
40019a40:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a44:	e3500000 	cmp	r0, #0
40019a48:	0a00007e 	beq	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a4c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a50:	e3100c01 	tst	r0, #256	; 0x100
40019a54:	0a00007b 	beq	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a58:	e3a02000 	mov	r2, #0
40019a5c:	e3a01c01 	mov	r1, #256	; 0x100
40019a60:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a64:	e1a00005 	mov	r0, r5
40019a68:	e12fff33 	blx	r3
40019a6c:	ea000075 	b	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a70:	e594000c 	ldr	r0, [r4, #12]
40019a74:	e1a07800 	lsl	r7, r0, #16
40019a78:	e1a07827 	lsr	r7, r7, #16
40019a7c:	e3160001 	tst	r6, #1
40019a80:	0a00005d 	beq	40019bfc <CyU3PDmaIntHandler_TypeManual+0x530>
40019a84:	e5950000 	ldr	r0, [r5]
40019a88:	e3500004 	cmp	r0, #4
40019a8c:	0a000031 	beq	40019b58 <CyU3PDmaIntHandler_TypeManual+0x48c>
40019a90:	e1a00000 	nop			; (mov r0, r0)
40019a94:	e1d501be 	ldrh	r0, [r5, #30]
40019a98:	e28d1024 	add	r1, sp, #36	; 0x24
40019a9c:	eb0022bf 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019aa0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019aa4:	e58d0000 	str	r0, [sp]
40019aa8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019aac:	e59f11a4 	ldr	r1, [pc, #420]	; 40019c58 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019ab0:	e0010820 	and	r0, r1, r0, lsr #16
40019ab4:	e1cd00b4 	strh	r0, [sp, #4]
40019ab8:	e241100f 	sub	r1, r1, #15
40019abc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ac0:	e0000001 	and	r0, r0, r1
40019ac4:	e1cd00b6 	strh	r0, [sp, #6]
40019ac8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019acc:	e200000f 	and	r0, r0, #15
40019ad0:	e1cd00b8 	strh	r0, [sp, #8]
40019ad4:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019ad8:	e3500000 	cmp	r0, #0
40019adc:	0a000002 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x420>
40019ae0:	e1dd10b6 	ldrh	r1, [sp, #6]
40019ae4:	e59d0000 	ldr	r0, [sp]
40019ae8:	ebffe180 	bl	400120f0 <CyU3PSysFlushDRegion>
40019aec:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019af0:	e3100008 	tst	r0, #8
40019af4:	0a000003 	beq	40019b08 <CyU3PDmaIntHandler_TypeManual+0x43c>
40019af8:	e3a02000 	mov	r2, #0
40019afc:	e3a01008 	mov	r1, #8
40019b00:	e2850074 	add	r0, r5, #116	; 0x74
40019b04:	ebffc0ee 	bl	40009ec4 <_txe_event_flags_set>
40019b08:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b0c:	e59f1144 	ldr	r1, [pc, #324]	; 40019c58 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019b10:	e0010820 	and	r0, r1, r0, lsr #16
40019b14:	e1c501be 	strh	r0, [r5, #30]
40019b18:	ebffe3cd 	bl	40012a54 <CyU3PSysBarrierSync>
40019b1c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b20:	e3500000 	cmp	r0, #0
40019b24:	0a000007 	beq	40019b48 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019b28:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b2c:	e3100008 	tst	r0, #8
40019b30:	0a000004 	beq	40019b48 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019b34:	e1a0200d 	mov	r2, sp
40019b38:	e3a01008 	mov	r1, #8
40019b3c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b40:	e1a00005 	mov	r0, r5
40019b44:	e12fff33 	blx	r3
40019b48:	e1d501be 	ldrh	r0, [r5, #30]
40019b4c:	e1500007 	cmp	r0, r7
40019b50:	1affffcf 	bne	40019a94 <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019b54:	ea000028 	b	40019bfc <CyU3PDmaIntHandler_TypeManual+0x530>
40019b58:	e1d501b4 	ldrh	r0, [r5, #20]
40019b5c:	e28d1024 	add	r1, sp, #36	; 0x24
40019b60:	eb00228e 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019b64:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019b68:	e58d0000 	str	r0, [sp]
40019b6c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b70:	e59f10e0 	ldr	r1, [pc, #224]	; 40019c58 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019b74:	e0010820 	and	r0, r1, r0, lsr #16
40019b78:	e1cd00b4 	strh	r0, [sp, #4]
40019b7c:	e241100f 	sub	r1, r1, #15
40019b80:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b84:	e0000001 	and	r0, r0, r1
40019b88:	e1cd00b6 	strh	r0, [sp, #6]
40019b8c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b90:	e200000f 	and	r0, r0, #15
40019b94:	e1cd00b8 	strh	r0, [sp, #8]
40019b98:	e3a00001 	mov	r0, #1
40019b9c:	e5850000 	str	r0, [r5]
40019ba0:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019ba4:	e3500000 	cmp	r0, #0
40019ba8:	0a000002 	beq	40019bb8 <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019bac:	e1dd10b6 	ldrh	r1, [sp, #6]
40019bb0:	e59d0000 	ldr	r0, [sp]
40019bb4:	ebffe14d 	bl	400120f0 <CyU3PSysFlushDRegion>
40019bb8:	e3a02000 	mov	r2, #0
40019bbc:	e3a01004 	mov	r1, #4
40019bc0:	e2850074 	add	r0, r5, #116	; 0x74
40019bc4:	ebffc0be 	bl	40009ec4 <_txe_event_flags_set>
40019bc8:	e3c66080 	bic	r6, r6, #128	; 0x80
40019bcc:	ebffe3a0 	bl	40012a54 <CyU3PSysBarrierSync>
40019bd0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019bd4:	e3500000 	cmp	r0, #0
40019bd8:	0a000007 	beq	40019bfc <CyU3PDmaIntHandler_TypeManual+0x530>
40019bdc:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019be0:	e3100004 	tst	r0, #4
40019be4:	0a000004 	beq	40019bfc <CyU3PDmaIntHandler_TypeManual+0x530>
40019be8:	e1a0200d 	mov	r2, sp
40019bec:	e3a01004 	mov	r1, #4
40019bf0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019bf4:	e1a00005 	mov	r0, r5
40019bf8:	e12fff33 	blx	r3
40019bfc:	e3160080 	tst	r6, #128	; 0x80
40019c00:	0a000002 	beq	40019c10 <CyU3PDmaIntHandler_TypeManual+0x544>
40019c04:	e3a00006 	mov	r0, #6
40019c08:	e5850000 	str	r0, [r5]
40019c0c:	ebffe390 	bl	40012a54 <CyU3PSysBarrierSync>
40019c10:	e3160020 	tst	r6, #32
40019c14:	0a00000b 	beq	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019c18:	ebffe38d 	bl	40012a54 <CyU3PSysBarrierSync>
40019c1c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019c20:	e3500000 	cmp	r0, #0
40019c24:	0a000007 	beq	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019c28:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019c2c:	e3100080 	tst	r0, #128	; 0x80
40019c30:	0a000004 	beq	40019c48 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019c34:	e3a02000 	mov	r2, #0
40019c38:	e3a01080 	mov	r1, #128	; 0x80
40019c3c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019c40:	e1a00005 	mov	r0, r5
40019c44:	e12fff33 	blx	r3
40019c48:	e285003c 	add	r0, r5, #60	; 0x3c
40019c4c:	ebffc169 	bl	4000a1f8 <_txe_mutex_put>
40019c50:	eafffea6 	b	400196f0 <CyU3PDmaIntHandler_TypeManual+0x24>
40019c54:	0000fff0 	.word	0x0000fff0
40019c58:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019c5c <CyU3PDmaIntHandler_TypeManyToOne>:
40019c5c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019c60:	e24dd034 	sub	sp, sp, #52	; 0x34
40019c64:	e1a04000 	mov	r4, r0
40019c68:	e5945004 	ldr	r5, [r4, #4]
40019c6c:	e5946008 	ldr	r6, [r4, #8]
40019c70:	e3160040 	tst	r6, #64	; 0x40
40019c74:	0a000003 	beq	40019c88 <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019c78:	e1a00005 	mov	r0, r5
40019c7c:	eb00033d 	bl	4001a978 <CyU3PDmaMultiChannelHandleError>
40019c80:	e28dd034 	add	sp, sp, #52	; 0x34
40019c84:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019c88:	e3e01000 	mvn	r1, #0
40019c8c:	e2850078 	add	r0, r5, #120	; 0x78
40019c90:	ebffc123 	bl	4000a124 <_txe_mutex_get>
40019c94:	e5940000 	ldr	r0, [r4]
40019c98:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a230 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019c9c:	e0019820 	and	r9, r1, r0, lsr #16
40019ca0:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019ca4:	e1500009 	cmp	r0, r9
40019ca8:	1a0000d8 	bne	4001a010 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019cac:	e594000c 	ldr	r0, [r4, #12]
40019cb0:	e0007001 	and	r7, r0, r1
40019cb4:	e3160002 	tst	r6, #2
40019cb8:	0a000054 	beq	40019e10 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019cbc:	e5950000 	ldr	r0, [r5]
40019cc0:	e3500003 	cmp	r0, #3
40019cc4:	0a000030 	beq	40019d8c <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019cc8:	e1a00000 	nop			; (mov r0, r0)
40019ccc:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019cd0:	e28d1024 	add	r1, sp, #36	; 0x24
40019cd4:	eb002231 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019cd8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cdc:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a230 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019ce0:	e0010820 	and	r0, r1, r0, lsr #16
40019ce4:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019ce8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cec:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019cf0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019cf4:	e28d1024 	add	r1, sp, #36	; 0x24
40019cf8:	eb002228 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019cfc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d00:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a234 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d04:	e0000001 	and	r0, r0, r1
40019d08:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019d0c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d10:	e28d1024 	add	r1, sp, #36	; 0x24
40019d14:	eb00223c 	bl	4002260c <CyU3PDmaDscrSetConfig>
40019d18:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019d1c:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a238 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019d20:	e0000001 	and	r0, r0, r1
40019d24:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019d28:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019d2c:	e1a00820 	lsr	r0, r0, #16
40019d30:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019d34:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019d38:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019d3c:	e1a00802 	lsl	r0, r2, #16
40019d40:	e1a00820 	lsr	r0, r0, #16
40019d44:	e3a02000 	mov	r2, #0
40019d48:	ebffec4f 	bl	40014e8c <CyU3PDmaSocketSendEvent>
40019d4c:	ebffe340 	bl	40012a54 <CyU3PSysBarrierSync>
40019d50:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019d54:	e3500000 	cmp	r0, #0
40019d58:	0a000007 	beq	40019d7c <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019d5c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019d60:	e3100010 	tst	r0, #16
40019d64:	0a000004 	beq	40019d7c <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019d68:	e3a02000 	mov	r2, #0
40019d6c:	e3a01010 	mov	r1, #16
40019d70:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019d74:	e1a00005 	mov	r0, r5
40019d78:	e12fff33 	blx	r3
40019d7c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d80:	e1500007 	cmp	r0, r7
40019d84:	1affffd0 	bne	40019ccc <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019d88:	ea000020 	b	40019e10 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019d8c:	e3a00001 	mov	r0, #1
40019d90:	e5850000 	str	r0, [r5]
40019d94:	e1d500b4 	ldrh	r0, [r5, #4]
40019d98:	e3500005 	cmp	r0, #5
40019d9c:	1a00000a 	bne	40019dcc <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019da0:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019da4:	e1a0100d 	mov	r1, sp
40019da8:	ebffeb9f 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40019dac:	e3a00000 	mov	r0, #0
40019db0:	e58d0010 	str	r0, [sp, #16]
40019db4:	e59d0014 	ldr	r0, [sp, #20]
40019db8:	e3c00002 	bic	r0, r0, #2
40019dbc:	e58d0014 	str	r0, [sp, #20]
40019dc0:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019dc4:	e1a0100d 	mov	r1, sp
40019dc8:	ebffec41 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40019dcc:	e3a02000 	mov	r2, #0
40019dd0:	e3a01002 	mov	r1, #2
40019dd4:	e28500b0 	add	r0, r5, #176	; 0xb0
40019dd8:	ebffc039 	bl	40009ec4 <_txe_event_flags_set>
40019ddc:	e3c66080 	bic	r6, r6, #128	; 0x80
40019de0:	ebffe31b 	bl	40012a54 <CyU3PSysBarrierSync>
40019de4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019de8:	e3500000 	cmp	r0, #0
40019dec:	0a000007 	beq	40019e10 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019df0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019df4:	e3100002 	tst	r0, #2
40019df8:	0a000004 	beq	40019e10 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019dfc:	e3a02000 	mov	r2, #0
40019e00:	e3a01002 	mov	r1, #2
40019e04:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019e08:	e1a00005 	mov	r0, r5
40019e0c:	e12fff33 	blx	r3
40019e10:	e3160010 	tst	r6, #16
40019e14:	0a00004f 	beq	40019f58 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019e18:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019e1c:	e28d1024 	add	r1, sp, #36	; 0x24
40019e20:	eb0021de 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019e24:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019e28:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a230 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019e2c:	e0010820 	and	r0, r1, r0, lsr #16
40019e30:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019e34:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e38:	e3100001 	tst	r0, #1
40019e3c:	0a000045 	beq	40019f58 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019e40:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019e44:	ebffeb60 	bl	40014bcc <CyU3PDmaSocketDisable>
40019e48:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e4c:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a234 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019e50:	e0000001 	and	r0, r0, r1
40019e54:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019e58:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019e5c:	e28d1024 	add	r1, sp, #36	; 0x24
40019e60:	eb0021e9 	bl	4002260c <CyU3PDmaDscrSetConfig>
40019e64:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019e68:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019e6c:	e1a0100d 	mov	r1, sp
40019e70:	e1a00009 	mov	r0, r9
40019e74:	ebffeb6c 	bl	40014c2c <CyU3PDmaSocketGetConfig>
40019e78:	e59d000c 	ldr	r0, [sp, #12]
40019e7c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019e80:	e58d000c 	str	r0, [sp, #12]
40019e84:	e59d000c 	ldr	r0, [sp, #12]
40019e88:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019e8c:	e58d000c 	str	r0, [sp, #12]
40019e90:	e3a00000 	mov	r0, #0
40019e94:	e58d0010 	str	r0, [sp, #16]
40019e98:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019e9c:	e2400001 	sub	r0, r0, #1
40019ea0:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
40019ea4:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019ea8:	e3500000 	cmp	r0, #0
40019eac:	1a000004 	bne	40019ec4 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
40019eb0:	e3a00010 	mov	r0, #16
40019eb4:	e58d0010 	str	r0, [sp, #16]
40019eb8:	e59d0014 	ldr	r0, [sp, #20]
40019ebc:	e3c00010 	bic	r0, r0, #16
40019ec0:	e58d0014 	str	r0, [sp, #20]
40019ec4:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019ec8:	e58d0000 	str	r0, [sp]
40019ecc:	e1a0100d 	mov	r1, sp
40019ed0:	e1a00009 	mov	r0, r9
40019ed4:	ebffebfe 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
40019ed8:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019edc:	e28d1024 	add	r1, sp, #36	; 0x24
40019ee0:	eb0021ae 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40019ee4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ee8:	e59f1344 	ldr	r1, [pc, #836]	; 4001a234 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019eec:	e0000001 	and	r0, r0, r1
40019ef0:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ef4:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019ef8:	e28d1024 	add	r1, sp, #36	; 0x24
40019efc:	eb0021c2 	bl	4002260c <CyU3PDmaDscrSetConfig>
40019f00:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019f04:	e3500000 	cmp	r0, #0
40019f08:	0a000004 	beq	40019f20 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
40019f0c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019f10:	e59f331c 	ldr	r3, [pc, #796]	; 4001a234 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019f14:	e0021003 	and	r1, r2, r3
40019f18:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019f1c:	ebffe073 	bl	400120f0 <CyU3PSysFlushDRegion>
40019f20:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019f24:	e59f130c 	ldr	r1, [pc, #780]	; 4001a238 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019f28:	e0000001 	and	r0, r0, r1
40019f2c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019f30:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019f34:	e1a00820 	lsr	r0, r0, #16
40019f38:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019f3c:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019f40:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019f44:	e1a00802 	lsl	r0, r2, #16
40019f48:	e1a00820 	lsr	r0, r0, #16
40019f4c:	e3a02000 	mov	r2, #0
40019f50:	ebffebcd 	bl	40014e8c <CyU3PDmaSocketSendEvent>
40019f54:	ebffe2be 	bl	40012a54 <CyU3PSysBarrierSync>
40019f58:	e3160080 	tst	r6, #128	; 0x80
40019f5c:	0a00001c 	beq	40019fd4 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019f60:	e3a08000 	mov	r8, #0
40019f64:	ea000005 	b	40019f80 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
40019f68:	e2851024 	add	r1, r5, #36	; 0x24
40019f6c:	e0811088 	add	r1, r1, r8, lsl #1
40019f70:	e1d100b0 	ldrh	r0, [r1]
40019f74:	ebffeb14 	bl	40014bcc <CyU3PDmaSocketDisable>
40019f78:	e2880001 	add	r0, r8, #1
40019f7c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019f80:	e1d500ba 	ldrh	r0, [r5, #10]
40019f84:	e1500008 	cmp	r0, r8
40019f88:	cafffff6 	bgt	40019f68 <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
40019f8c:	e3a00001 	mov	r0, #1
40019f90:	e5850000 	str	r0, [r5]
40019f94:	e3a02000 	mov	r2, #0
40019f98:	e3a01001 	mov	r1, #1
40019f9c:	e28500b0 	add	r0, r5, #176	; 0xb0
40019fa0:	ebffbfc7 	bl	40009ec4 <_txe_event_flags_set>
40019fa4:	ebffe2aa 	bl	40012a54 <CyU3PSysBarrierSync>
40019fa8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019fac:	e3500000 	cmp	r0, #0
40019fb0:	0a000007 	beq	40019fd4 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019fb4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019fb8:	e3100001 	tst	r0, #1
40019fbc:	0a000004 	beq	40019fd4 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019fc0:	e3a02000 	mov	r2, #0
40019fc4:	e3a01001 	mov	r1, #1
40019fc8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019fcc:	e1a00005 	mov	r0, r5
40019fd0:	e12fff33 	blx	r3
40019fd4:	e3160e12 	tst	r6, #288	; 0x120
40019fd8:	0a000091 	beq	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fdc:	ebffe29c 	bl	40012a54 <CyU3PSysBarrierSync>
40019fe0:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019fe4:	e3500000 	cmp	r0, #0
40019fe8:	0a00008d 	beq	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fec:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019ff0:	e3100c01 	tst	r0, #256	; 0x100
40019ff4:	0a00008a 	beq	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019ff8:	e3a02000 	mov	r2, #0
40019ffc:	e3a01c01 	mov	r1, #256	; 0x100
4001a000:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a004:	e1a00005 	mov	r0, r5
4001a008:	e12fff33 	blx	r3
4001a00c:	ea000084 	b	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a010:	e594000c 	ldr	r0, [r4, #12]
4001a014:	e1a07800 	lsl	r7, r0, #16
4001a018:	e1a07827 	lsr	r7, r7, #16
4001a01c:	e3160001 	tst	r6, #1
4001a020:	0a000048 	beq	4001a148 <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
4001a024:	e5950000 	ldr	r0, [r5]
4001a028:	e3500004 	cmp	r0, #4
4001a02c:	0a00007c 	beq	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a030:	e3a08000 	mov	r8, #0
4001a034:	ea000007 	b	4001a058 <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
4001a038:	e2850024 	add	r0, r5, #36	; 0x24
4001a03c:	e0800088 	add	r0, r0, r8, lsl #1
4001a040:	e1d000b0 	ldrh	r0, [r0]
4001a044:	e1500009 	cmp	r0, r9
4001a048:	1a000000 	bne	4001a050 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
4001a04c:	ea000004 	b	4001a064 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
4001a050:	e2880001 	add	r0, r8, #1
4001a054:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a058:	e1d500ba 	ldrh	r0, [r5, #10]
4001a05c:	e1500008 	cmp	r0, r8
4001a060:	cafffff4 	bgt	4001a038 <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
4001a064:	e1a00000 	nop			; (mov r0, r0)
4001a068:	e1a00000 	nop			; (mov r0, r0)
4001a06c:	e285103e 	add	r1, r5, #62	; 0x3e
4001a070:	e0811088 	add	r1, r1, r8, lsl #1
4001a074:	e1d100b0 	ldrh	r0, [r1]
4001a078:	e28d1024 	add	r1, sp, #36	; 0x24
4001a07c:	eb002147 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a080:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a084:	e58d0018 	str	r0, [sp, #24]
4001a088:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a08c:	e59f119c 	ldr	r1, [pc, #412]	; 4001a230 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a090:	e0010820 	and	r0, r1, r0, lsr #16
4001a094:	e1cd01bc 	strh	r0, [sp, #28]
4001a098:	e241100f 	sub	r1, r1, #15
4001a09c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a0a0:	e0000001 	and	r0, r0, r1
4001a0a4:	e1cd01be 	strh	r0, [sp, #30]
4001a0a8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a0ac:	e200000f 	and	r0, r0, #15
4001a0b0:	e1cd02b0 	strh	r0, [sp, #32]
4001a0b4:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a0b8:	e3500000 	cmp	r0, #0
4001a0bc:	0a000002 	beq	4001a0cc <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a0c0:	e1dd11be 	ldrh	r1, [sp, #30]
4001a0c4:	e59d0018 	ldr	r0, [sp, #24]
4001a0c8:	ebffe008 	bl	400120f0 <CyU3PSysFlushDRegion>
4001a0cc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a0d0:	e3100008 	tst	r0, #8
4001a0d4:	0a000003 	beq	4001a0e8 <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a0d8:	e3a02000 	mov	r2, #0
4001a0dc:	e3a01008 	mov	r1, #8
4001a0e0:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a0e4:	ebffbf76 	bl	40009ec4 <_txe_event_flags_set>
4001a0e8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a0ec:	e59f113c 	ldr	r1, [pc, #316]	; 4001a230 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a0f0:	e0010820 	and	r0, r1, r0, lsr #16
4001a0f4:	e285103e 	add	r1, r5, #62	; 0x3e
4001a0f8:	e0811088 	add	r1, r1, r8, lsl #1
4001a0fc:	e1c100b0 	strh	r0, [r1]
4001a100:	ebffe253 	bl	40012a54 <CyU3PSysBarrierSync>
4001a104:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a108:	e3500000 	cmp	r0, #0
4001a10c:	0a000007 	beq	4001a130 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a110:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a114:	e3100008 	tst	r0, #8
4001a118:	0a000004 	beq	4001a130 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a11c:	e28d2018 	add	r2, sp, #24
4001a120:	e3a01008 	mov	r1, #8
4001a124:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a128:	e1a00005 	mov	r0, r5
4001a12c:	e12fff33 	blx	r3
4001a130:	e285003e 	add	r0, r5, #62	; 0x3e
4001a134:	e0800088 	add	r0, r0, r8, lsl #1
4001a138:	e1d000b0 	ldrh	r0, [r0]
4001a13c:	e1500007 	cmp	r0, r7
4001a140:	1affffc9 	bne	4001a06c <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a144:	ea000036 	b	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a148:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a14c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a150:	eb002112 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a154:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a158:	e58d0018 	str	r0, [sp, #24]
4001a15c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a160:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a230 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a164:	e0010820 	and	r0, r1, r0, lsr #16
4001a168:	e1cd01bc 	strh	r0, [sp, #28]
4001a16c:	e241100f 	sub	r1, r1, #15
4001a170:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a174:	e0000001 	and	r0, r0, r1
4001a178:	e1cd01be 	strh	r0, [sp, #30]
4001a17c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a180:	e200000f 	and	r0, r0, #15
4001a184:	e1cd02b0 	strh	r0, [sp, #32]
4001a188:	e3a00001 	mov	r0, #1
4001a18c:	e5850000 	str	r0, [r5]
4001a190:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a194:	e3500000 	cmp	r0, #0
4001a198:	0a000002 	beq	4001a1a8 <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a19c:	e1dd11be 	ldrh	r1, [sp, #30]
4001a1a0:	e59d0018 	ldr	r0, [sp, #24]
4001a1a4:	ebffdfd1 	bl	400120f0 <CyU3PSysFlushDRegion>
4001a1a8:	e1d500b4 	ldrh	r0, [r5, #4]
4001a1ac:	e3500005 	cmp	r0, #5
4001a1b0:	1a00000a 	bne	4001a1e0 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a1b4:	e1a0100d 	mov	r1, sp
4001a1b8:	e1a00009 	mov	r0, r9
4001a1bc:	ebffea9a 	bl	40014c2c <CyU3PDmaSocketGetConfig>
4001a1c0:	e3a00000 	mov	r0, #0
4001a1c4:	e58d0010 	str	r0, [sp, #16]
4001a1c8:	e59d0014 	ldr	r0, [sp, #20]
4001a1cc:	e3c00001 	bic	r0, r0, #1
4001a1d0:	e58d0014 	str	r0, [sp, #20]
4001a1d4:	e1a0100d 	mov	r1, sp
4001a1d8:	e1a00009 	mov	r0, r9
4001a1dc:	ebffeb3c 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001a1e0:	e3a02000 	mov	r2, #0
4001a1e4:	e3a01004 	mov	r1, #4
4001a1e8:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a1ec:	ebffbf34 	bl	40009ec4 <_txe_event_flags_set>
4001a1f0:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a1f4:	ebffe216 	bl	40012a54 <CyU3PSysBarrierSync>
4001a1f8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a1fc:	e3500000 	cmp	r0, #0
4001a200:	0a000007 	beq	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a204:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a208:	e3100004 	tst	r0, #4
4001a20c:	0a000004 	beq	4001a224 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a210:	e28d2018 	add	r2, sp, #24
4001a214:	e3a01004 	mov	r1, #4
4001a218:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a21c:	e1a00005 	mov	r0, r5
4001a220:	e12fff33 	blx	r3
4001a224:	e2850078 	add	r0, r5, #120	; 0x78
4001a228:	ebffbff2 	bl	4000a1f8 <_txe_mutex_put>
4001a22c:	eafffe93 	b	40019c80 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a230:	0000ffff 	.word	0x0000ffff
4001a234:	0000fff0 	.word	0x0000fff0
4001a238:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a23c <CyU3PDmaIntHandler_TypeOneToMany>:
4001a23c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a240:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a244:	e1a04000 	mov	r4, r0
4001a248:	e594a004 	ldr	sl, [r4, #4]
4001a24c:	e5940000 	ldr	r0, [r4]
4001a250:	e59f1664 	ldr	r1, [pc, #1636]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a254:	e0016820 	and	r6, r1, r0, lsr #16
4001a258:	e5945008 	ldr	r5, [r4, #8]
4001a25c:	e3150040 	tst	r5, #64	; 0x40
4001a260:	0a000003 	beq	4001a274 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a264:	e1a0000a 	mov	r0, sl
4001a268:	eb0001c2 	bl	4001a978 <CyU3PDmaMultiChannelHandleError>
4001a26c:	e28dd038 	add	sp, sp, #56	; 0x38
4001a270:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a274:	e3e01000 	mvn	r1, #0
4001a278:	e28a0078 	add	r0, sl, #120	; 0x78
4001a27c:	ebffbfa8 	bl	4000a124 <_txe_mutex_get>
4001a280:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a284:	e1500006 	cmp	r0, r6
4001a288:	0a0000fc 	beq	4001a680 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a28c:	e594000c 	ldr	r0, [r4, #12]
4001a290:	e1a09800 	lsl	r9, r0, #16
4001a294:	e1a09829 	lsr	r9, r9, #16
4001a298:	e3a08000 	mov	r8, #0
4001a29c:	ea000007 	b	4001a2c0 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a2a0:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a2a4:	e0800088 	add	r0, r0, r8, lsl #1
4001a2a8:	e1d000b0 	ldrh	r0, [r0]
4001a2ac:	e1500006 	cmp	r0, r6
4001a2b0:	1a000000 	bne	4001a2b8 <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a2b4:	ea000004 	b	4001a2cc <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a2b8:	e2880001 	add	r0, r8, #1
4001a2bc:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a2c0:	e1da00ba 	ldrh	r0, [sl, #10]
4001a2c4:	e1500008 	cmp	r0, r8
4001a2c8:	cafffff4 	bgt	4001a2a0 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a2cc:	e1a00000 	nop			; (mov r0, r0)
4001a2d0:	e3150002 	tst	r5, #2
4001a2d4:	0a00007e 	beq	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2d8:	e59a0000 	ldr	r0, [sl]
4001a2dc:	e3500003 	cmp	r0, #3
4001a2e0:	0a00005a 	beq	4001a450 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a2e4:	e1a00000 	nop			; (mov r0, r0)
4001a2e8:	e28a1046 	add	r1, sl, #70	; 0x46
4001a2ec:	e0811088 	add	r1, r1, r8, lsl #1
4001a2f0:	e1d100b0 	ldrh	r0, [r1]
4001a2f4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a2f8:	eb0020a8 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a2fc:	e28a1046 	add	r1, sl, #70	; 0x46
4001a300:	e0811088 	add	r1, r1, r8, lsl #1
4001a304:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a308:	e1c100b0 	strh	r0, [r1]
4001a30c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a310:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a314:	e0017820 	and	r7, r1, r0, lsr #16
4001a318:	e28d1028 	add	r1, sp, #40	; 0x28
4001a31c:	e1a00007 	mov	r0, r7
4001a320:	eb00209e 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a324:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a328:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a8c0 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a32c:	e0000001 	and	r0, r0, r1
4001a330:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a334:	e28d1028 	add	r1, sp, #40	; 0x28
4001a338:	e1a00007 	mov	r0, r7
4001a33c:	eb0020b2 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001a340:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a344:	e3a02000 	mov	r2, #0
4001a348:	e1a01007 	mov	r1, r7
4001a34c:	ebffeace 	bl	40014e8c <CyU3PDmaSocketSendEvent>
4001a350:	ebffe1bf 	bl	40012a54 <CyU3PSysBarrierSync>
4001a354:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a358:	e3500000 	cmp	r0, #0
4001a35c:	0a000007 	beq	4001a380 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a360:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a364:	e3100010 	tst	r0, #16
4001a368:	0a000004 	beq	4001a380 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a36c:	e3a02000 	mov	r2, #0
4001a370:	e3a01010 	mov	r1, #16
4001a374:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a378:	e1a0000a 	mov	r0, sl
4001a37c:	e12fff33 	blx	r3
4001a380:	e28a0046 	add	r0, sl, #70	; 0x46
4001a384:	e0800088 	add	r0, r0, r8, lsl #1
4001a388:	e1d000b0 	ldrh	r0, [r0]
4001a38c:	e1500009 	cmp	r0, r9
4001a390:	1affffd4 	bne	4001a2e8 <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a394:	e59a0000 	ldr	r0, [sl]
4001a398:	e3500006 	cmp	r0, #6
4001a39c:	1a00004c 	bne	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a3a0:	e1da00b8 	ldrh	r0, [sl, #8]
4001a3a4:	e1da10ba 	ldrh	r1, [sl, #10]
4001a3a8:	e0000091 	mul	r0, r1, r0
4001a3ac:	e1a08800 	lsl	r8, r0, #16
4001a3b0:	e1a08828 	lsr	r8, r8, #16
4001a3b4:	e1da71b4 	ldrh	r7, [sl, #20]
4001a3b8:	ea00000c 	b	4001a3f0 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a3bc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a3c0:	e1a00007 	mov	r0, r7
4001a3c4:	eb002075 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a3c8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a3cc:	e3100008 	tst	r0, #8
4001a3d0:	0a000000 	beq	4001a3d8 <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a3d4:	ea000007 	b	4001a3f8 <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a3d8:	e2480001 	sub	r0, r8, #1
4001a3dc:	e1a08800 	lsl	r8, r0, #16
4001a3e0:	e1a08828 	lsr	r8, r8, #16
4001a3e4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3e8:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a3ec:	e0017820 	and	r7, r1, r0, lsr #16
4001a3f0:	e3580000 	cmp	r8, #0
4001a3f4:	1afffff0 	bne	4001a3bc <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a3f8:	e1a00000 	nop			; (mov r0, r0)
4001a3fc:	e3580000 	cmp	r8, #0
4001a400:	1a000033 	bne	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a404:	e3a00001 	mov	r0, #1
4001a408:	e58a0000 	str	r0, [sl]
4001a40c:	e3a02000 	mov	r2, #0
4001a410:	e3a01001 	mov	r1, #1
4001a414:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a418:	ebffbea9 	bl	40009ec4 <_txe_event_flags_set>
4001a41c:	ebffe18c 	bl	40012a54 <CyU3PSysBarrierSync>
4001a420:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a424:	e3500000 	cmp	r0, #0
4001a428:	0a000029 	beq	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a42c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a430:	e3100001 	tst	r0, #1
4001a434:	0a000026 	beq	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a438:	e3a02000 	mov	r2, #0
4001a43c:	e3a01001 	mov	r1, #1
4001a440:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a444:	e1a0000a 	mov	r0, sl
4001a448:	e12fff33 	blx	r3
4001a44c:	ea000020 	b	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a450:	e3a00001 	mov	r0, #1
4001a454:	e58a0000 	str	r0, [sl]
4001a458:	e1da00b4 	ldrh	r0, [sl, #4]
4001a45c:	e3500006 	cmp	r0, #6
4001a460:	1a00000a 	bne	4001a490 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a464:	e28d1004 	add	r1, sp, #4
4001a468:	e1a00006 	mov	r0, r6
4001a46c:	ebffe9ee 	bl	40014c2c <CyU3PDmaSocketGetConfig>
4001a470:	e3a00000 	mov	r0, #0
4001a474:	e58d0014 	str	r0, [sp, #20]
4001a478:	e59d0018 	ldr	r0, [sp, #24]
4001a47c:	e3c00002 	bic	r0, r0, #2
4001a480:	e58d0018 	str	r0, [sp, #24]
4001a484:	e28d1004 	add	r1, sp, #4
4001a488:	e1a00006 	mov	r0, r6
4001a48c:	ebffea90 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001a490:	e3a02000 	mov	r2, #0
4001a494:	e3a01002 	mov	r1, #2
4001a498:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a49c:	ebffbe88 	bl	40009ec4 <_txe_event_flags_set>
4001a4a0:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a4a4:	ebffe16a 	bl	40012a54 <CyU3PSysBarrierSync>
4001a4a8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a4ac:	e3500000 	cmp	r0, #0
4001a4b0:	0a000007 	beq	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a4b4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a4b8:	e3100002 	tst	r0, #2
4001a4bc:	0a000004 	beq	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a4c0:	e3a02000 	mov	r2, #0
4001a4c4:	e3a01002 	mov	r1, #2
4001a4c8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a4cc:	e1a0000a 	mov	r0, sl
4001a4d0:	e12fff33 	blx	r3
4001a4d4:	e3150010 	tst	r5, #16
4001a4d8:	0a000059 	beq	4001a644 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a4dc:	e28a1046 	add	r1, sl, #70	; 0x46
4001a4e0:	e0811088 	add	r1, r1, r8, lsl #1
4001a4e4:	e1d100b0 	ldrh	r0, [r1]
4001a4e8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a4ec:	eb00202b 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a4f0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a4f4:	e3100001 	tst	r0, #1
4001a4f8:	0a000051 	beq	4001a644 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a4fc:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a500:	e0811088 	add	r1, r1, r8, lsl #1
4001a504:	e1d100b0 	ldrh	r0, [r1]
4001a508:	ebffe9af 	bl	40014bcc <CyU3PDmaSocketDisable>
4001a50c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a510:	e59f13a8 	ldr	r1, [pc, #936]	; 4001a8c0 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a514:	e0000001 	and	r0, r0, r1
4001a518:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a51c:	e28a1046 	add	r1, sl, #70	; 0x46
4001a520:	e0811088 	add	r1, r1, r8, lsl #1
4001a524:	e1d100b0 	ldrh	r0, [r1]
4001a528:	e28d1028 	add	r1, sp, #40	; 0x28
4001a52c:	eb002036 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001a530:	e28a1046 	add	r1, sl, #70	; 0x46
4001a534:	e0811088 	add	r1, r1, r8, lsl #1
4001a538:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a53c:	e1c100b0 	strh	r0, [r1]
4001a540:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a544:	e0811088 	add	r1, r1, r8, lsl #1
4001a548:	e1d100b0 	ldrh	r0, [r1]
4001a54c:	e28d1004 	add	r1, sp, #4
4001a550:	ebffe9b5 	bl	40014c2c <CyU3PDmaSocketGetConfig>
4001a554:	e59d0010 	ldr	r0, [sp, #16]
4001a558:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a55c:	e58d0010 	str	r0, [sp, #16]
4001a560:	e59d0010 	ldr	r0, [sp, #16]
4001a564:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a568:	e58d0010 	str	r0, [sp, #16]
4001a56c:	e3a00000 	mov	r0, #0
4001a570:	e58d0014 	str	r0, [sp, #20]
4001a574:	e28a0064 	add	r0, sl, #100	; 0x64
4001a578:	e0800088 	add	r0, r0, r8, lsl #1
4001a57c:	e1d000b0 	ldrh	r0, [r0]
4001a580:	e2400001 	sub	r0, r0, #1
4001a584:	e28a1064 	add	r1, sl, #100	; 0x64
4001a588:	e0811088 	add	r1, r1, r8, lsl #1
4001a58c:	e1c100b0 	strh	r0, [r1]
4001a590:	e28a0064 	add	r0, sl, #100	; 0x64
4001a594:	e0800088 	add	r0, r0, r8, lsl #1
4001a598:	e1d000b0 	ldrh	r0, [r0]
4001a59c:	e3500000 	cmp	r0, #0
4001a5a0:	1a000004 	bne	4001a5b8 <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a5a4:	e3a00010 	mov	r0, #16
4001a5a8:	e58d0014 	str	r0, [sp, #20]
4001a5ac:	e59d0018 	ldr	r0, [sp, #24]
4001a5b0:	e3c00010 	bic	r0, r0, #16
4001a5b4:	e58d0018 	str	r0, [sp, #24]
4001a5b8:	e28a0046 	add	r0, sl, #70	; 0x46
4001a5bc:	e0800088 	add	r0, r0, r8, lsl #1
4001a5c0:	e1d000b0 	ldrh	r0, [r0]
4001a5c4:	e58d0004 	str	r0, [sp, #4]
4001a5c8:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a5cc:	e0811088 	add	r1, r1, r8, lsl #1
4001a5d0:	e1d100b0 	ldrh	r0, [r1]
4001a5d4:	e28d1004 	add	r1, sp, #4
4001a5d8:	ebffea3d 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001a5dc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a5e0:	e59f12d4 	ldr	r1, [pc, #724]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a5e4:	e0017820 	and	r7, r1, r0, lsr #16
4001a5e8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a5ec:	e1a00007 	mov	r0, r7
4001a5f0:	eb001fea 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a5f4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5f8:	e59f12c0 	ldr	r1, [pc, #704]	; 4001a8c0 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a5fc:	e0000001 	and	r0, r0, r1
4001a600:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a604:	e28d1028 	add	r1, sp, #40	; 0x28
4001a608:	e1a00007 	mov	r0, r7
4001a60c:	eb001ffe 	bl	4002260c <CyU3PDmaDscrSetConfig>
4001a610:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a614:	e3500000 	cmp	r0, #0
4001a618:	0a000004 	beq	4001a630 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a61c:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a620:	e59f3298 	ldr	r3, [pc, #664]	; 4001a8c0 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a624:	e0021003 	and	r1, r2, r3
4001a628:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a62c:	ebffdeaf 	bl	400120f0 <CyU3PSysFlushDRegion>
4001a630:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a634:	e3a02000 	mov	r2, #0
4001a638:	e1a01007 	mov	r1, r7
4001a63c:	ebffea12 	bl	40014e8c <CyU3PDmaSocketSendEvent>
4001a640:	ebffe103 	bl	40012a54 <CyU3PSysBarrierSync>
4001a644:	e3150020 	tst	r5, #32
4001a648:	0a000098 	beq	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a64c:	ebffe100 	bl	40012a54 <CyU3PSysBarrierSync>
4001a650:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a654:	e3500000 	cmp	r0, #0
4001a658:	0a000094 	beq	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a65c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a660:	e3100080 	tst	r0, #128	; 0x80
4001a664:	0a000091 	beq	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a668:	e3a02000 	mov	r2, #0
4001a66c:	e3a01080 	mov	r1, #128	; 0x80
4001a670:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a674:	e1a0000a 	mov	r0, sl
4001a678:	e12fff33 	blx	r3
4001a67c:	ea00008b 	b	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a680:	e594000c 	ldr	r0, [r4, #12]
4001a684:	e1a09800 	lsl	r9, r0, #16
4001a688:	e1a09829 	lsr	r9, r9, #16
4001a68c:	e3150001 	tst	r5, #1
4001a690:	0a00006b 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a694:	e59a0000 	ldr	r0, [sl]
4001a698:	e3500004 	cmp	r0, #4
4001a69c:	0a000031 	beq	4001a768 <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a6a0:	e1a00000 	nop			; (mov r0, r0)
4001a6a4:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a6a8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a6ac:	eb001fbb 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a6b0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a6b4:	e58d001c 	str	r0, [sp, #28]
4001a6b8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6bc:	e59f11f8 	ldr	r1, [pc, #504]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a6c0:	e0010820 	and	r0, r1, r0, lsr #16
4001a6c4:	e1cd02b0 	strh	r0, [sp, #32]
4001a6c8:	e241100f 	sub	r1, r1, #15
4001a6cc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6d0:	e0000001 	and	r0, r0, r1
4001a6d4:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a6d8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6dc:	e200000f 	and	r0, r0, #15
4001a6e0:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a6e4:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a6e8:	e3500000 	cmp	r0, #0
4001a6ec:	0a000002 	beq	4001a6fc <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a6f0:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a6f4:	e59d001c 	ldr	r0, [sp, #28]
4001a6f8:	ebffde7c 	bl	400120f0 <CyU3PSysFlushDRegion>
4001a6fc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a700:	e3100008 	tst	r0, #8
4001a704:	0a000003 	beq	4001a718 <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a708:	e3a02000 	mov	r2, #0
4001a70c:	e3a01008 	mov	r1, #8
4001a710:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a714:	ebffbdea 	bl	40009ec4 <_txe_event_flags_set>
4001a718:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a71c:	e59f1198 	ldr	r1, [pc, #408]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a720:	e0010820 	and	r0, r1, r0, lsr #16
4001a724:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a728:	ebffe0c9 	bl	40012a54 <CyU3PSysBarrierSync>
4001a72c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a730:	e3500000 	cmp	r0, #0
4001a734:	0a000007 	beq	4001a758 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a738:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a73c:	e3100008 	tst	r0, #8
4001a740:	0a000004 	beq	4001a758 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a744:	e28d201c 	add	r2, sp, #28
4001a748:	e3a01008 	mov	r1, #8
4001a74c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a750:	e1a0000a 	mov	r0, sl
4001a754:	e12fff33 	blx	r3
4001a758:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a75c:	e1500009 	cmp	r0, r9
4001a760:	1affffcf 	bne	4001a6a4 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a764:	ea000036 	b	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a768:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a76c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a770:	eb001f8a 	bl	400225a0 <CyU3PDmaDscrGetConfig>
4001a774:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a778:	e58d001c 	str	r0, [sp, #28]
4001a77c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a780:	e59f1134 	ldr	r1, [pc, #308]	; 4001a8bc <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a784:	e0010820 	and	r0, r1, r0, lsr #16
4001a788:	e1cd02b0 	strh	r0, [sp, #32]
4001a78c:	e241100f 	sub	r1, r1, #15
4001a790:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a794:	e0000001 	and	r0, r0, r1
4001a798:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a79c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a7a0:	e200000f 	and	r0, r0, #15
4001a7a4:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a7a8:	e3a00001 	mov	r0, #1
4001a7ac:	e58a0000 	str	r0, [sl]
4001a7b0:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a7b4:	e3500000 	cmp	r0, #0
4001a7b8:	0a000002 	beq	4001a7c8 <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a7bc:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a7c0:	e59d001c 	ldr	r0, [sp, #28]
4001a7c4:	ebffde49 	bl	400120f0 <CyU3PSysFlushDRegion>
4001a7c8:	e1da00b4 	ldrh	r0, [sl, #4]
4001a7cc:	e3500006 	cmp	r0, #6
4001a7d0:	1a00000a 	bne	4001a800 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a7d4:	e28d1004 	add	r1, sp, #4
4001a7d8:	e1a00006 	mov	r0, r6
4001a7dc:	ebffe912 	bl	40014c2c <CyU3PDmaSocketGetConfig>
4001a7e0:	e3a00000 	mov	r0, #0
4001a7e4:	e58d0014 	str	r0, [sp, #20]
4001a7e8:	e59d0018 	ldr	r0, [sp, #24]
4001a7ec:	e3c00001 	bic	r0, r0, #1
4001a7f0:	e58d0018 	str	r0, [sp, #24]
4001a7f4:	e28d1004 	add	r1, sp, #4
4001a7f8:	e1a00006 	mov	r0, r6
4001a7fc:	ebffe9b4 	bl	40014ed4 <CyU3PDmaSocketSetConfig>
4001a800:	e3a02000 	mov	r2, #0
4001a804:	e3a01004 	mov	r1, #4
4001a808:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a80c:	ebffbdac 	bl	40009ec4 <_txe_event_flags_set>
4001a810:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a814:	ebffe08e 	bl	40012a54 <CyU3PSysBarrierSync>
4001a818:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a81c:	e3500000 	cmp	r0, #0
4001a820:	0a000007 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a824:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a828:	e3100004 	tst	r0, #4
4001a82c:	0a000004 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a830:	e28d201c 	add	r2, sp, #28
4001a834:	e3a01004 	mov	r1, #4
4001a838:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a83c:	e1a0000a 	mov	r0, sl
4001a840:	e12fff33 	blx	r3
4001a844:	e3150080 	tst	r5, #128	; 0x80
4001a848:	0a000018 	beq	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a84c:	e1da00b4 	ldrh	r0, [sl, #4]
4001a850:	e3500006 	cmp	r0, #6
4001a854:	1a000012 	bne	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a858:	e3a00001 	mov	r0, #1
4001a85c:	e58a0000 	str	r0, [sl]
4001a860:	e3a02000 	mov	r2, #0
4001a864:	e3a01001 	mov	r1, #1
4001a868:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a86c:	ebffbd94 	bl	40009ec4 <_txe_event_flags_set>
4001a870:	ebffe077 	bl	40012a54 <CyU3PSysBarrierSync>
4001a874:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a878:	e3500000 	cmp	r0, #0
4001a87c:	0a00000b 	beq	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a880:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a884:	e3100001 	tst	r0, #1
4001a888:	0a000008 	beq	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a88c:	e3a02000 	mov	r2, #0
4001a890:	e3a01001 	mov	r1, #1
4001a894:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a898:	e1a0000a 	mov	r0, sl
4001a89c:	e12fff33 	blx	r3
4001a8a0:	ea000002 	b	4001a8b0 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a8a4:	e3a00006 	mov	r0, #6
4001a8a8:	e58a0000 	str	r0, [sl]
4001a8ac:	ebffe068 	bl	40012a54 <CyU3PSysBarrierSync>
4001a8b0:	e28a0078 	add	r0, sl, #120	; 0x78
4001a8b4:	ebffbe4f 	bl	4000a1f8 <_txe_mutex_put>
4001a8b8:	eafffe6b 	b	4001a26c <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001a8bc:	0000ffff 	.word	0x0000ffff
4001a8c0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001a8c4 <CyU3PDmaIsSockAvlEnReqd>:
4001a8c4:	e1a01000 	mov	r1, r0
4001a8c8:	e3a0003f 	mov	r0, #63	; 0x3f
4001a8cc:	e0000441 	and	r0, r0, r1, asr #8
4001a8d0:	e3500003 	cmp	r0, #3
4001a8d4:	1a000004 	bne	4001a8ec <CyU3PDmaIsSockAvlEnReqd+0x28>
4001a8d8:	e3a00001 	mov	r0, #1
4001a8dc:	e59f203c 	ldr	r2, [pc, #60]	; 4001a920 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001a8e0:	e1d220b0 	ldrh	r2, [r2]
4001a8e4:	e1120110 	tst	r2, r0, lsl r1
4001a8e8:	1a000008 	bne	4001a910 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001a8ec:	e3a0003f 	mov	r0, #63	; 0x3f
4001a8f0:	e0000441 	and	r0, r0, r1, asr #8
4001a8f4:	e3500004 	cmp	r0, #4
4001a8f8:	1a000006 	bne	4001a918 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a8fc:	e3a00001 	mov	r0, #1
4001a900:	e59f201c 	ldr	r2, [pc, #28]	; 4001a924 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001a904:	e1d220b0 	ldrh	r2, [r2]
4001a908:	e1120110 	tst	r2, r0, lsl r1
4001a90c:	0a000001 	beq	4001a918 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a910:	e3a00001 	mov	r0, #1
4001a914:	e12fff1e 	bx	lr
4001a918:	e3a00000 	mov	r0, #0
4001a91c:	eafffffc 	b	4001a914 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001a920:	40030d18 	.word	0x40030d18
4001a924:	40030d1a 	.word	0x40030d1a

Disassembly of section i.CyU3PDmaMsgSend:

4001a928 <CyU3PDmaMsgSend>:
4001a928:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a92c:	e1a04000 	mov	r4, r0
4001a930:	e1a05001 	mov	r5, r1
4001a934:	e1a07002 	mov	r7, r2
4001a938:	e3570001 	cmp	r7, #1
4001a93c:	1a000005 	bne	4001a958 <CyU3PDmaMsgSend+0x30>
4001a940:	e1a02005 	mov	r2, r5
4001a944:	e1a01004 	mov	r1, r4
4001a948:	e59f0024 	ldr	r0, [pc, #36]	; 4001a974 <CyU3PDmaMsgSend+0x4c>
4001a94c:	ebffbebf 	bl	4000a450 <_txe_queue_front_send>
4001a950:	e1a06000 	mov	r6, r0
4001a954:	ea000004 	b	4001a96c <CyU3PDmaMsgSend+0x44>
4001a958:	e1a02005 	mov	r2, r5
4001a95c:	e1a01004 	mov	r1, r4
4001a960:	e59f000c 	ldr	r0, [pc, #12]	; 4001a974 <CyU3PDmaMsgSend+0x4c>
4001a964:	ebffbf09 	bl	4000a590 <_txe_queue_send>
4001a968:	e1a06000 	mov	r6, r0
4001a96c:	e1a00006 	mov	r0, r6
4001a970:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a974:	40031930 	.word	0x40031930

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001a978 <CyU3PDmaMultiChannelHandleError>:
4001a978:	e92d4070 	push	{r4, r5, r6, lr}
4001a97c:	e1a04000 	mov	r4, r0
4001a980:	e3e01000 	mvn	r1, #0
4001a984:	e2840078 	add	r0, r4, #120	; 0x78
4001a988:	ebffbde5 	bl	4000a124 <_txe_mutex_get>
4001a98c:	e1d400b4 	ldrh	r0, [r4, #4]
4001a990:	e3500005 	cmp	r0, #5
4001a994:	0a000002 	beq	4001a9a4 <CyU3PDmaMultiChannelHandleError+0x2c>
4001a998:	e1d400b4 	ldrh	r0, [r4, #4]
4001a99c:	e3500007 	cmp	r0, #7
4001a9a0:	1a00000d 	bne	4001a9dc <CyU3PDmaMultiChannelHandleError+0x64>
4001a9a4:	e3a05000 	mov	r5, #0
4001a9a8:	ea000005 	b	4001a9c4 <CyU3PDmaMultiChannelHandleError+0x4c>
4001a9ac:	e2841024 	add	r1, r4, #36	; 0x24
4001a9b0:	e0811085 	add	r1, r1, r5, lsl #1
4001a9b4:	e1d100b0 	ldrh	r0, [r1]
4001a9b8:	ebffe883 	bl	40014bcc <CyU3PDmaSocketDisable>
4001a9bc:	e2850001 	add	r0, r5, #1
4001a9c0:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a9c4:	e1d400ba 	ldrh	r0, [r4, #10]
4001a9c8:	e1500005 	cmp	r0, r5
4001a9cc:	cafffff6 	bgt	4001a9ac <CyU3PDmaMultiChannelHandleError+0x34>
4001a9d0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001a9d4:	ebffe87c 	bl	40014bcc <CyU3PDmaSocketDisable>
4001a9d8:	ea00000c 	b	4001aa10 <CyU3PDmaMultiChannelHandleError+0x98>
4001a9dc:	e3a05000 	mov	r5, #0
4001a9e0:	ea000005 	b	4001a9fc <CyU3PDmaMultiChannelHandleError+0x84>
4001a9e4:	e284102c 	add	r1, r4, #44	; 0x2c
4001a9e8:	e0811085 	add	r1, r1, r5, lsl #1
4001a9ec:	e1d100b0 	ldrh	r0, [r1]
4001a9f0:	ebffe875 	bl	40014bcc <CyU3PDmaSocketDisable>
4001a9f4:	e2850001 	add	r0, r5, #1
4001a9f8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a9fc:	e1d400ba 	ldrh	r0, [r4, #10]
4001aa00:	e1500005 	cmp	r0, r5
4001aa04:	cafffff6 	bgt	4001a9e4 <CyU3PDmaMultiChannelHandleError+0x6c>
4001aa08:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001aa0c:	ebffe86e 	bl	40014bcc <CyU3PDmaSocketDisable>
4001aa10:	e3a02002 	mov	r2, #2
4001aa14:	e3e01007 	mvn	r1, #7
4001aa18:	e28400b0 	add	r0, r4, #176	; 0xb0
4001aa1c:	ebffbd28 	bl	40009ec4 <_txe_event_flags_set>
4001aa20:	e3a02000 	mov	r2, #0
4001aa24:	e3a01040 	mov	r1, #64	; 0x40
4001aa28:	e28400b0 	add	r0, r4, #176	; 0xb0
4001aa2c:	ebffbd24 	bl	40009ec4 <_txe_event_flags_set>
4001aa30:	e3a00005 	mov	r0, #5
4001aa34:	e5840000 	str	r0, [r4]
4001aa38:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001aa3c:	e3500000 	cmp	r0, #0
4001aa40:	0a000007 	beq	4001aa64 <CyU3PDmaMultiChannelHandleError+0xec>
4001aa44:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001aa48:	e3100040 	tst	r0, #64	; 0x40
4001aa4c:	0a000004 	beq	4001aa64 <CyU3PDmaMultiChannelHandleError+0xec>
4001aa50:	e3a02000 	mov	r2, #0
4001aa54:	e3a01040 	mov	r1, #64	; 0x40
4001aa58:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001aa5c:	e1a00004 	mov	r0, r4
4001aa60:	e12fff33 	blx	r3
4001aa64:	e2840078 	add	r0, r4, #120	; 0x78
4001aa68:	ebffbde2 	bl	4000a1f8 <_txe_mutex_put>
4001aa6c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001aa70 <CyU3PDmaThreadEntry>:
4001aa70:	e92d4070 	push	{r4, r5, r6, lr}
4001aa74:	e24dd040 	sub	sp, sp, #64	; 0x40
4001aa78:	ea00003f 	b	4001ab7c <CyU3PDmaThreadEntry+0x10c>
4001aa7c:	e3e02000 	mvn	r2, #0
4001aa80:	e1a0100d 	mov	r1, sp
4001aa84:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ab80 <CyU3PDmaThreadEntry+0x110>
4001aa88:	ebffbe98 	bl	4000a4f0 <_txe_queue_receive>
4001aa8c:	e1a05000 	mov	r5, r0
4001aa90:	e3550000 	cmp	r5, #0
4001aa94:	0a000000 	beq	4001aa9c <CyU3PDmaThreadEntry+0x2c>
4001aa98:	ea000037 	b	4001ab7c <CyU3PDmaThreadEntry+0x10c>
4001aa9c:	e59d0000 	ldr	r0, [sp]
4001aaa0:	e20040ff 	and	r4, r0, #255	; 0xff
4001aaa4:	e3540000 	cmp	r4, #0
4001aaa8:	0a000000 	beq	4001aab0 <CyU3PDmaThreadEntry+0x40>
4001aaac:	ea000032 	b	4001ab7c <CyU3PDmaThreadEntry+0x10c>
4001aab0:	e59d6004 	ldr	r6, [sp, #4]
4001aab4:	e1d600b4 	ldrh	r0, [r6, #4]
4001aab8:	e350000a 	cmp	r0, #10
4001aabc:	308ff100 	addcc	pc, pc, r0, lsl #2
4001aac0:	ea000028 	b	4001ab68 <CyU3PDmaThreadEntry+0xf8>
4001aac4:	ea000008 	b	4001aaec <CyU3PDmaThreadEntry+0x7c>
4001aac8:	ea000009 	b	4001aaf4 <CyU3PDmaThreadEntry+0x84>
4001aacc:	ea00000e 	b	4001ab0c <CyU3PDmaThreadEntry+0x9c>
4001aad0:	ea00000a 	b	4001ab00 <CyU3PDmaThreadEntry+0x90>
4001aad4:	ea00000b 	b	4001ab08 <CyU3PDmaThreadEntry+0x98>
4001aad8:	ea00000e 	b	4001ab18 <CyU3PDmaThreadEntry+0xa8>
4001aadc:	ea000012 	b	4001ab2c <CyU3PDmaThreadEntry+0xbc>
4001aae0:	ea00000e 	b	4001ab20 <CyU3PDmaThreadEntry+0xb0>
4001aae4:	ea000012 	b	4001ab34 <CyU3PDmaThreadEntry+0xc4>
4001aae8:	ea000014 	b	4001ab40 <CyU3PDmaThreadEntry+0xd0>
4001aaec:	e1a00000 	nop			; (mov r0, r0)
4001aaf0:	e1a00000 	nop			; (mov r0, r0)
4001aaf4:	e1a0000d 	mov	r0, sp
4001aaf8:	ebfffa18 	bl	40019360 <CyU3PDmaIntHandler_TypeAuto>
4001aafc:	ea00001b 	b	4001ab70 <CyU3PDmaThreadEntry+0x100>
4001ab00:	e1a00000 	nop			; (mov r0, r0)
4001ab04:	e1a00000 	nop			; (mov r0, r0)
4001ab08:	e1a00000 	nop			; (mov r0, r0)
4001ab0c:	e1a0000d 	mov	r0, sp
4001ab10:	ebfffaed 	bl	400196cc <CyU3PDmaIntHandler_TypeManual>
4001ab14:	ea000015 	b	4001ab70 <CyU3PDmaThreadEntry+0x100>
4001ab18:	e1a00000 	nop			; (mov r0, r0)
4001ab1c:	e1a00000 	nop			; (mov r0, r0)
4001ab20:	e1a0000d 	mov	r0, sp
4001ab24:	ebfffc4c 	bl	40019c5c <CyU3PDmaIntHandler_TypeManyToOne>
4001ab28:	ea000010 	b	4001ab70 <CyU3PDmaThreadEntry+0x100>
4001ab2c:	e1a00000 	nop			; (mov r0, r0)
4001ab30:	e1a00000 	nop			; (mov r0, r0)
4001ab34:	e1a0000d 	mov	r0, sp
4001ab38:	ebfffdbf 	bl	4001a23c <CyU3PDmaIntHandler_TypeOneToMany>
4001ab3c:	ea00000b 	b	4001ab70 <CyU3PDmaThreadEntry+0x100>
4001ab40:	e1a00000 	nop			; (mov r0, r0)
4001ab44:	e59f0038 	ldr	r0, [pc, #56]	; 4001ab84 <CyU3PDmaThreadEntry+0x114>
4001ab48:	e5900000 	ldr	r0, [r0]
4001ab4c:	e3500000 	cmp	r0, #0
4001ab50:	0a000003 	beq	4001ab64 <CyU3PDmaThreadEntry+0xf4>
4001ab54:	e1a0000d 	mov	r0, sp
4001ab58:	e59f1024 	ldr	r1, [pc, #36]	; 4001ab84 <CyU3PDmaThreadEntry+0x114>
4001ab5c:	e5911000 	ldr	r1, [r1]
4001ab60:	e12fff31 	blx	r1
4001ab64:	ea000001 	b	4001ab70 <CyU3PDmaThreadEntry+0x100>
4001ab68:	e1a00000 	nop			; (mov r0, r0)
4001ab6c:	e1a00000 	nop			; (mov r0, r0)
4001ab70:	e1a00000 	nop			; (mov r0, r0)
4001ab74:	ebffbf8b 	bl	4000a9a8 <_txe_thread_relinquish>
4001ab78:	e1a00000 	nop			; (mov r0, r0)
4001ab7c:	eaffffbe 	b	4001aa7c <CyU3PDmaThreadEntry+0xc>
4001ab80:	40031930 	.word	0x40031930
4001ab84:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PGpifInit:

4001ab88 <CyU3PGpifInit>:
4001ab88:	e92d4010 	push	{r4, lr}
4001ab8c:	e1a04000 	mov	r4, r0
4001ab90:	e3540000 	cmp	r4, #0
4001ab94:	0a000006 	beq	4001abb4 <CyU3PGpifInit+0x2c>
4001ab98:	e59f005c 	ldr	r0, [pc, #92]	; 4001abfc <CyU3PGpifInit+0x74>
4001ab9c:	e5900000 	ldr	r0, [r0]
4001aba0:	e1a00800 	lsl	r0, r0, #16
4001aba4:	e1a00820 	lsr	r0, r0, #16
4001aba8:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001abac:	e59f1048 	ldr	r1, [pc, #72]	; 4001abfc <CyU3PGpifInit+0x74>
4001abb0:	e5810000 	str	r0, [r1]
4001abb4:	e3e00000 	mvn	r0, #0
4001abb8:	e59f1040 	ldr	r1, [pc, #64]	; 4001ac00 <CyU3PGpifInit+0x78>
4001abbc:	e5810014 	str	r0, [r1, #20]
4001abc0:	e3a00000 	mov	r0, #0
4001abc4:	e5810018 	str	r0, [r1, #24]
4001abc8:	e3a00e11 	mov	r0, #272	; 0x110
4001abcc:	e1c11300 	bic	r1, r1, r0, lsl #6
4001abd0:	e5810008 	str	r0, [r1, #8]
4001abd4:	ebffdf9e 	bl	40012a54 <CyU3PSysBarrierSync>
4001abd8:	e59f001c 	ldr	r0, [pc, #28]	; 4001abfc <CyU3PGpifInit+0x74>
4001abdc:	e5900000 	ldr	r0, [r0]
4001abe0:	e1a00800 	lsl	r0, r0, #16
4001abe4:	e1a00820 	lsr	r0, r0, #16
4001abe8:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001abec:	e59f1008 	ldr	r1, [pc, #8]	; 4001abfc <CyU3PGpifInit+0x74>
4001abf0:	e5810000 	str	r0, [r1]
4001abf4:	e3a00000 	mov	r0, #0
4001abf8:	e8bd8010 	pop	{r4, pc}
4001abfc:	e0010000 	.word	0xe0010000
4001ac00:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001ac04 <CyU3PPibApplicationDefine>:
4001ac04:	e92d4010 	push	{r4, lr}
4001ac08:	e24dd020 	sub	sp, sp, #32
4001ac0c:	e3a00000 	mov	r0, #0
4001ac10:	e59f10dc 	ldr	r1, [pc, #220]	; 4001acf4 <CyU3PPibApplicationDefine+0xf0>
4001ac14:	e5810000 	str	r0, [r1]
4001ac18:	e59f10d8 	ldr	r1, [pc, #216]	; 4001acf8 <CyU3PPibApplicationDefine+0xf4>
4001ac1c:	e5810000 	str	r0, [r1]
4001ac20:	e59f10d4 	ldr	r1, [pc, #212]	; 4001acfc <CyU3PPibApplicationDefine+0xf8>
4001ac24:	e5810000 	str	r0, [r1]
4001ac28:	e59f10d0 	ldr	r1, [pc, #208]	; 4001ad00 <CyU3PPibApplicationDefine+0xfc>
4001ac2c:	e5810000 	str	r0, [r1]
4001ac30:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ad04 <CyU3PPibApplicationDefine+0x100>
4001ac34:	e5810000 	str	r0, [r1]
4001ac38:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ad08 <CyU3PPibApplicationDefine+0x104>
4001ac3c:	e5810000 	str	r0, [r1]
4001ac40:	e59f10c4 	ldr	r1, [pc, #196]	; 4001ad0c <CyU3PPibApplicationDefine+0x108>
4001ac44:	e5810000 	str	r0, [r1]
4001ac48:	e59f10c0 	ldr	r1, [pc, #192]	; 4001ad10 <CyU3PPibApplicationDefine+0x10c>
4001ac4c:	e5810000 	str	r0, [r1]
4001ac50:	e59f10bc 	ldr	r1, [pc, #188]	; 4001ad14 <CyU3PPibApplicationDefine+0x110>
4001ac54:	e5810000 	str	r0, [r1]
4001ac58:	e3a00b01 	mov	r0, #1024	; 0x400
4001ac5c:	ebffa284 	bl	40003674 <CyU3PMemAlloc>
4001ac60:	e1a04000 	mov	r4, r0
4001ac64:	e3a030a8 	mov	r3, #168	; 0xa8
4001ac68:	e3a02001 	mov	r2, #1
4001ac6c:	e3a01000 	mov	r1, #0
4001ac70:	e3a00004 	mov	r0, #4
4001ac74:	e28dc00c 	add	ip, sp, #12
4001ac78:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001ac7c:	e3a02b01 	mov	r2, #1024	; 0x400
4001ac80:	e1a03001 	mov	r3, r1
4001ac84:	e58d2004 	str	r2, [sp, #4]
4001ac88:	e59f2088 	ldr	r2, [pc, #136]	; 4001ad18 <CyU3PPibApplicationDefine+0x114>
4001ac8c:	e28f1088 	add	r1, pc, #136	; 0x88
4001ac90:	e58d0008 	str	r0, [sp, #8]
4001ac94:	e59f0090 	ldr	r0, [pc, #144]	; 4001ad2c <CyU3PPibApplicationDefine+0x128>
4001ac98:	e58d4000 	str	r4, [sp]
4001ac9c:	ebffbe63 	bl	4000a630 <_txe_thread_create>
4001aca0:	e3a02028 	mov	r2, #40	; 0x28
4001aca4:	e3a01000 	mov	r1, #0
4001aca8:	e59f0080 	ldr	r0, [pc, #128]	; 4001ad30 <CyU3PPibApplicationDefine+0x12c>
4001acac:	ebffbbe4 	bl	40009c44 <_txe_event_flags_create>
4001acb0:	e3a02000 	mov	r2, #0
4001acb4:	e3a01010 	mov	r1, #16
4001acb8:	e59f0070 	ldr	r0, [pc, #112]	; 4001ad30 <CyU3PPibApplicationDefine+0x12c>
4001acbc:	ebffbc80 	bl	40009ec4 <_txe_event_flags_set>
4001acc0:	e3a00040 	mov	r0, #64	; 0x40
4001acc4:	ebffa26a 	bl	40003674 <CyU3PMemAlloc>
4001acc8:	e1a04000 	mov	r4, r0
4001accc:	e3a0303c 	mov	r3, #60	; 0x3c
4001acd0:	e3a02040 	mov	r2, #64	; 0x40
4001acd4:	e1cd20f0 	strd	r2, [sp]
4001acd8:	e1a03004 	mov	r3, r4
4001acdc:	e3a02001 	mov	r2, #1
4001ace0:	e3a01000 	mov	r1, #0
4001ace4:	e59f0048 	ldr	r0, [pc, #72]	; 4001ad34 <CyU3PPibApplicationDefine+0x130>
4001ace8:	ebffbd6a 	bl	4000a298 <_txe_queue_create>
4001acec:	e28dd020 	add	sp, sp, #32
4001acf0:	e8bd8010 	pop	{r4, pc}
4001acf4:	40030d34 	.word	0x40030d34
4001acf8:	40030d38 	.word	0x40030d38
4001acfc:	40030d40 	.word	0x40030d40
4001ad00:	40030d58 	.word	0x40030d58
4001ad04:	40030d4c 	.word	0x40030d4c
4001ad08:	40030d50 	.word	0x40030d50
4001ad0c:	40030d44 	.word	0x40030d44
4001ad10:	40030d48 	.word	0x40030d48
4001ad14:	40030d3c 	.word	0x40030d3c
4001ad18:	4001aeec 	.word	0x4001aeec
4001ad1c:	505f3330 	.word	0x505f3330
4001ad20:	545f4249 	.word	0x545f4249
4001ad24:	41455248 	.word	0x41455248
4001ad28:	00000044 	.word	0x00000044
4001ad2c:	40031994 	.word	0x40031994
4001ad30:	4003196c 	.word	0x4003196c
4001ad34:	40031a3c 	.word	0x40031a3c

Disassembly of section i.CyU3PPibInit:

4001ad38 <CyU3PPibInit>:
4001ad38:	e92d4070 	push	{r4, r5, r6, lr}
4001ad3c:	e1a04000 	mov	r4, r0
4001ad40:	e1a05001 	mov	r5, r1
4001ad44:	e3a06000 	mov	r6, #0
4001ad48:	ebffe724 	bl	400149e0 <CyFx3DevIsGpifSupported>
4001ad4c:	e3500000 	cmp	r0, #0
4001ad50:	1a000001 	bne	4001ad5c <CyU3PPibInit+0x24>
4001ad54:	e3a00046 	mov	r0, #70	; 0x46
4001ad58:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ad5c:	e59f0128 	ldr	r0, [pc, #296]	; 4001ae8c <CyU3PPibInit+0x154>
4001ad60:	e5900000 	ldr	r0, [r0]
4001ad64:	e3500000 	cmp	r0, #0
4001ad68:	0a000001 	beq	4001ad74 <CyU3PPibInit+0x3c>
4001ad6c:	e3a00043 	mov	r0, #67	; 0x43
4001ad70:	eafffff8 	b	4001ad58 <CyU3PPibInit+0x20>
4001ad74:	e3550000 	cmp	r5, #0
4001ad78:	1a000001 	bne	4001ad84 <CyU3PPibInit+0x4c>
4001ad7c:	e3a00041 	mov	r0, #65	; 0x41
4001ad80:	eafffff4 	b	4001ad58 <CyU3PPibInit+0x20>
4001ad84:	e5d5000c 	ldrb	r0, [r5, #12]
4001ad88:	e3500004 	cmp	r0, #4
4001ad8c:	ba000001 	blt	4001ad98 <CyU3PPibInit+0x60>
4001ad90:	e3a00040 	mov	r0, #64	; 0x40
4001ad94:	eaffffef 	b	4001ad58 <CyU3PPibInit+0x20>
4001ad98:	e1d500b0 	ldrh	r0, [r5]
4001ad9c:	e3500002 	cmp	r0, #2
4001ada0:	ba000002 	blt	4001adb0 <CyU3PPibInit+0x78>
4001ada4:	e1d500b0 	ldrh	r0, [r5]
4001ada8:	e3500b01 	cmp	r0, #1024	; 0x400
4001adac:	da000001 	ble	4001adb8 <CyU3PPibInit+0x80>
4001adb0:	e3a00040 	mov	r0, #64	; 0x40
4001adb4:	eaffffe7 	b	4001ad58 <CyU3PPibInit+0x20>
4001adb8:	e3a00001 	mov	r0, #1
4001adbc:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ae8c <CyU3PPibInit+0x154>
4001adc0:	e5810000 	str	r0, [r1]
4001adc4:	e5d5000c 	ldrb	r0, [r5, #12]
4001adc8:	e3a01b06 	mov	r1, #6144	; 0x1800
4001adcc:	e0010580 	and	r0, r1, r0, lsl #11
4001add0:	e1d510b0 	ldrh	r1, [r5]
4001add4:	e2411001 	sub	r1, r1, #1
4001add8:	e1a01b01 	lsl	r1, r1, #22
4001addc:	e1a01b21 	lsr	r1, r1, #22
4001ade0:	e1800001 	orr	r0, r0, r1
4001ade4:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ae90 <CyU3PPibInit+0x158>
4001ade8:	e581000c 	str	r0, [r1, #12]
4001adec:	e5950004 	ldr	r0, [r5, #4]
4001adf0:	e3500000 	cmp	r0, #0
4001adf4:	0a000003 	beq	4001ae08 <CyU3PPibInit+0xd0>
4001adf8:	e1a00001 	mov	r0, r1
4001adfc:	e590000c 	ldr	r0, [r0, #12]
4001ae00:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ae04:	e581000c 	str	r0, [r1, #12]
4001ae08:	e59f0080 	ldr	r0, [pc, #128]	; 4001ae90 <CyU3PPibInit+0x158>
4001ae0c:	e590000c 	ldr	r0, [r0, #12]
4001ae10:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ae14:	e59f1074 	ldr	r1, [pc, #116]	; 4001ae90 <CyU3PPibInit+0x158>
4001ae18:	e581000c 	str	r0, [r1, #12]
4001ae1c:	ebffe755 	bl	40014b78 <CyFx3PibPowerOn>
4001ae20:	e5950008 	ldr	r0, [r5, #8]
4001ae24:	e3500000 	cmp	r0, #0
4001ae28:	0a000000 	beq	4001ae30 <CyU3PPibInit+0xf8>
4001ae2c:	ebffe732 	bl	40014afc <CyFx3PibDllEnable>
4001ae30:	e59f005c 	ldr	r0, [pc, #92]	; 4001ae94 <CyU3PPibInit+0x15c>
4001ae34:	e5900000 	ldr	r0, [r0]
4001ae38:	e3500000 	cmp	r0, #0
4001ae3c:	0a000003 	beq	4001ae50 <CyU3PPibInit+0x118>
4001ae40:	e1a00004 	mov	r0, r4
4001ae44:	eb0000d4 	bl	4001b19c <CyU3PPmmcInit>
4001ae48:	e1a06000 	mov	r6, r0
4001ae4c:	ea000002 	b	4001ae5c <CyU3PPibInit+0x124>
4001ae50:	e1a00004 	mov	r0, r4
4001ae54:	ebffff4b 	bl	4001ab88 <CyU3PGpifInit>
4001ae58:	e1a06000 	mov	r6, r0
4001ae5c:	e3e00000 	mvn	r0, #0
4001ae60:	e59f1030 	ldr	r1, [pc, #48]	; 4001ae98 <CyU3PPibInit+0x160>
4001ae64:	e5810024 	str	r0, [r1, #36]	; 0x24
4001ae68:	e3560000 	cmp	r6, #0
4001ae6c:	1a000004 	bne	4001ae84 <CyU3PPibInit+0x14c>
4001ae70:	eb000009 	bl	4001ae9c <CyU3PPibSocketInit>
4001ae74:	e3a00007 	mov	r0, #7
4001ae78:	eb001c4a 	bl	40021fa8 <CyU3PVicEnableInt>
4001ae7c:	e3a00006 	mov	r0, #6
4001ae80:	eb001c48 	bl	40021fa8 <CyU3PVicEnableInt>
4001ae84:	e1a00006 	mov	r0, r6
4001ae88:	eaffffb2 	b	4001ad58 <CyU3PPibInit+0x20>
4001ae8c:	40030d34 	.word	0x40030d34
4001ae90:	e0052000 	.word	0xe0052000
4001ae94:	40030d38 	.word	0x40030d38
4001ae98:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001ae9c <CyU3PPibSocketInit>:
4001ae9c:	e3a00000 	mov	r0, #0
4001aea0:	ea00000d 	b	4001aedc <CyU3PPibSocketInit+0x40>
4001aea4:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001aea8:	e59f2038 	ldr	r2, [pc, #56]	; 4001aee8 <CyU3PPibSocketInit+0x4c>
4001aeac:	e0822380 	add	r2, r2, r0, lsl #7
4001aeb0:	e582100c 	str	r1, [r2, #12]
4001aeb4:	e3e01000 	mvn	r1, #0
4001aeb8:	e59f2028 	ldr	r2, [pc, #40]	; 4001aee8 <CyU3PPibSocketInit+0x4c>
4001aebc:	e0822380 	add	r2, r2, r0, lsl #7
4001aec0:	e5821010 	str	r1, [r2, #16]
4001aec4:	e3a01000 	mov	r1, #0
4001aec8:	e59f2018 	ldr	r2, [pc, #24]	; 4001aee8 <CyU3PPibSocketInit+0x4c>
4001aecc:	e0822380 	add	r2, r2, r0, lsl #7
4001aed0:	e5821014 	str	r1, [r2, #20]
4001aed4:	e2801001 	add	r1, r0, #1
4001aed8:	e20100ff 	and	r0, r1, #255	; 0xff
4001aedc:	e3500020 	cmp	r0, #32
4001aee0:	baffffef 	blt	4001aea4 <CyU3PPibSocketInit+0x8>
4001aee4:	e12fff1e 	bx	lr
4001aee8:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001aeec <CyU3PPibThreadEntry>:
4001aeec:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001aef0:	e3a00005 	mov	r0, #5
4001aef4:	ebffe25e 	bl	40013874 <CyU3PSysModuleInitCompleteEvt>
4001aef8:	e59f0278 	ldr	r0, [pc, #632]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001aefc:	e5900000 	ldr	r0, [r0]
4001af00:	e1a00800 	lsl	r0, r0, #16
4001af04:	e1a00820 	lsr	r0, r0, #16
4001af08:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001af0c:	e59f1264 	ldr	r1, [pc, #612]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001af10:	e5810000 	str	r0, [r1]
4001af14:	e3a000e1 	mov	r0, #225	; 0xe1
4001af18:	e59f125c 	ldr	r1, [pc, #604]	; 4001b17c <CyU3PPibThreadEntry+0x290>
4001af1c:	e5810000 	str	r0, [r1]
4001af20:	ea000093 	b	4001b174 <CyU3PPibThreadEntry+0x288>
4001af24:	e3e03000 	mvn	r3, #0
4001af28:	e58d3000 	str	r3, [sp]
4001af2c:	e28d3008 	add	r3, sp, #8
4001af30:	e3a02001 	mov	r2, #1
4001af34:	e59f0240 	ldr	r0, [pc, #576]	; 4001b17c <CyU3PPibThreadEntry+0x290>
4001af38:	e5901000 	ldr	r1, [r0]
4001af3c:	e59f023c 	ldr	r0, [pc, #572]	; 4001b180 <CyU3PPibThreadEntry+0x294>
4001af40:	ebffbbaf 	bl	40009e04 <_txe_event_flags_get>
4001af44:	e1a04000 	mov	r4, r0
4001af48:	e59f122c 	ldr	r1, [pc, #556]	; 4001b17c <CyU3PPibThreadEntry+0x290>
4001af4c:	e59d0008 	ldr	r0, [sp, #8]
4001af50:	e5911000 	ldr	r1, [r1]
4001af54:	e0000001 	and	r0, r0, r1
4001af58:	e58d0008 	str	r0, [sp, #8]
4001af5c:	e3540000 	cmp	r4, #0
4001af60:	0a000000 	beq	4001af68 <CyU3PPibThreadEntry+0x7c>
4001af64:	ea000082 	b	4001b174 <CyU3PPibThreadEntry+0x288>
4001af68:	ea00007d 	b	4001b164 <CyU3PPibThreadEntry+0x278>
4001af6c:	e59d0008 	ldr	r0, [sp, #8]
4001af70:	e3100020 	tst	r0, #32
4001af74:	0a000017 	beq	4001afd8 <CyU3PPibThreadEntry+0xec>
4001af78:	e59f0204 	ldr	r0, [pc, #516]	; 4001b184 <CyU3PPibThreadEntry+0x298>
4001af7c:	e5900000 	ldr	r0, [r0]
4001af80:	e3500000 	cmp	r0, #0
4001af84:	0a00000b 	beq	4001afb8 <CyU3PPibThreadEntry+0xcc>
4001af88:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b188 <CyU3PPibThreadEntry+0x29c>
4001af8c:	e5900000 	ldr	r0, [r0]
4001af90:	e3100002 	tst	r0, #2
4001af94:	0a000007 	beq	4001afb8 <CyU3PPibThreadEntry+0xcc>
4001af98:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b18c <CyU3PPibThreadEntry+0x2a0>
4001af9c:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001afa0:	e1a01800 	lsl	r1, r0, #16
4001afa4:	e1a01821 	lsr	r1, r1, #16
4001afa8:	e3a00002 	mov	r0, #2
4001afac:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b184 <CyU3PPibThreadEntry+0x298>
4001afb0:	e5922000 	ldr	r2, [r2]
4001afb4:	e12fff32 	blx	r2
4001afb8:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001afbc:	e5900000 	ldr	r0, [r0]
4001afc0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001afc4:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001afc8:	e5810000 	str	r0, [r1]
4001afcc:	e59d0008 	ldr	r0, [sp, #8]
4001afd0:	e3c00020 	bic	r0, r0, #32
4001afd4:	e58d0008 	str	r0, [sp, #8]
4001afd8:	e59d0008 	ldr	r0, [sp, #8]
4001afdc:	e3100040 	tst	r0, #64	; 0x40
4001afe0:	0a000027 	beq	4001b084 <CyU3PPibThreadEntry+0x198>
4001afe4:	e59f0198 	ldr	r0, [pc, #408]	; 4001b184 <CyU3PPibThreadEntry+0x298>
4001afe8:	e5900000 	ldr	r0, [r0]
4001afec:	e3500000 	cmp	r0, #0
4001aff0:	0a000017 	beq	4001b054 <CyU3PPibThreadEntry+0x168>
4001aff4:	e59f018c 	ldr	r0, [pc, #396]	; 4001b188 <CyU3PPibThreadEntry+0x29c>
4001aff8:	e5900000 	ldr	r0, [r0]
4001affc:	e3100004 	tst	r0, #4
4001b000:	0a000013 	beq	4001b054 <CyU3PPibThreadEntry+0x168>
4001b004:	e59f016c 	ldr	r0, [pc, #364]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001b008:	e5900020 	ldr	r0, [r0, #32]
4001b00c:	e1a05800 	lsl	r5, r0, #16
4001b010:	e1a05825 	lsr	r5, r5, #16
4001b014:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001b018:	e3500a02 	cmp	r0, #8192	; 0x2000
4001b01c:	1a000000 	bne	4001b024 <CyU3PPibThreadEntry+0x138>
4001b020:	e3a05a02 	mov	r5, #8192	; 0x2000
4001b024:	e59f0164 	ldr	r0, [pc, #356]	; 4001b190 <CyU3PPibThreadEntry+0x2a4>
4001b028:	e5900000 	ldr	r0, [r0]
4001b02c:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001b030:	1a000001 	bne	4001b03c <CyU3PPibThreadEntry+0x150>
4001b034:	e3550004 	cmp	r5, #4
4001b038:	da000004 	ble	4001b050 <CyU3PPibThreadEntry+0x164>
4001b03c:	e1a01005 	mov	r1, r5
4001b040:	e3a00004 	mov	r0, #4
4001b044:	e59f2138 	ldr	r2, [pc, #312]	; 4001b184 <CyU3PPibThreadEntry+0x298>
4001b048:	e5922000 	ldr	r2, [r2]
4001b04c:	e12fff32 	blx	r2
4001b050:	e1a00000 	nop			; (mov r0, r0)
4001b054:	e59f012c 	ldr	r0, [pc, #300]	; 4001b188 <CyU3PPibThreadEntry+0x29c>
4001b058:	e5900000 	ldr	r0, [r0]
4001b05c:	e3100004 	tst	r0, #4
4001b060:	0a000004 	beq	4001b078 <CyU3PPibThreadEntry+0x18c>
4001b064:	e59f010c 	ldr	r0, [pc, #268]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001b068:	e5900008 	ldr	r0, [r0, #8]
4001b06c:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b070:	e59f1100 	ldr	r1, [pc, #256]	; 4001b178 <CyU3PPibThreadEntry+0x28c>
4001b074:	e5810008 	str	r0, [r1, #8]
4001b078:	e59d0008 	ldr	r0, [sp, #8]
4001b07c:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b080:	e58d0008 	str	r0, [sp, #8]
4001b084:	e59d0008 	ldr	r0, [sp, #8]
4001b088:	e3100080 	tst	r0, #128	; 0x80
4001b08c:	0a000011 	beq	4001b0d8 <CyU3PPibThreadEntry+0x1ec>
4001b090:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b184 <CyU3PPibThreadEntry+0x298>
4001b094:	e5900000 	ldr	r0, [r0]
4001b098:	e3500000 	cmp	r0, #0
4001b09c:	0a00000a 	beq	4001b0cc <CyU3PPibThreadEntry+0x1e0>
4001b0a0:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b188 <CyU3PPibThreadEntry+0x29c>
4001b0a4:	e5900000 	ldr	r0, [r0]
4001b0a8:	e3100001 	tst	r0, #1
4001b0ac:	0a000006 	beq	4001b0cc <CyU3PPibThreadEntry+0x1e0>
4001b0b0:	ebffe6ab 	bl	40014b64 <CyFx3PibGetDllStatus>
4001b0b4:	e1a05000 	mov	r5, r0
4001b0b8:	e1a01000 	mov	r1, r0
4001b0bc:	e3a00001 	mov	r0, #1
4001b0c0:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b184 <CyU3PPibThreadEntry+0x298>
4001b0c4:	e5922000 	ldr	r2, [r2]
4001b0c8:	e12fff32 	blx	r2
4001b0cc:	e59d0008 	ldr	r0, [sp, #8]
4001b0d0:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b0d4:	e58d0008 	str	r0, [sp, #8]
4001b0d8:	e59d0008 	ldr	r0, [sp, #8]
4001b0dc:	e3100001 	tst	r0, #1
4001b0e0:	0a00001f 	beq	4001b164 <CyU3PPibThreadEntry+0x278>
4001b0e4:	e3a02000 	mov	r2, #0
4001b0e8:	e28d1004 	add	r1, sp, #4
4001b0ec:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b194 <CyU3PPibThreadEntry+0x2a8>
4001b0f0:	ebffbcfe 	bl	4000a4f0 <_txe_queue_receive>
4001b0f4:	e1a04000 	mov	r4, r0
4001b0f8:	e3540000 	cmp	r4, #0
4001b0fc:	1a000015 	bne	4001b158 <CyU3PPibThreadEntry+0x26c>
4001b100:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b104:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b108:	e1b00720 	lsrs	r0, r0, #14
4001b10c:	0a000014 	beq	4001b164 <CyU3PPibThreadEntry+0x278>
4001b110:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b114:	e20000ff 	and	r0, r0, #255	; 0xff
4001b118:	e3500004 	cmp	r0, #4
4001b11c:	1a00000a 	bne	4001b14c <CyU3PPibThreadEntry+0x260>
4001b120:	e59f0070 	ldr	r0, [pc, #112]	; 4001b198 <CyU3PPibThreadEntry+0x2ac>
4001b124:	e5900000 	ldr	r0, [r0]
4001b128:	e3500000 	cmp	r0, #0
4001b12c:	0a000005 	beq	4001b148 <CyU3PPibThreadEntry+0x25c>
4001b130:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b134:	e1a01442 	asr	r1, r2, #8
4001b138:	e20200ff 	and	r0, r2, #255	; 0xff
4001b13c:	e59f2054 	ldr	r2, [pc, #84]	; 4001b198 <CyU3PPibThreadEntry+0x2ac>
4001b140:	e5922000 	ldr	r2, [r2]
4001b144:	e12fff32 	blx	r2
4001b148:	ea000001 	b	4001b154 <CyU3PPibThreadEntry+0x268>
4001b14c:	e1a00000 	nop			; (mov r0, r0)
4001b150:	e1a00000 	nop			; (mov r0, r0)
4001b154:	ea000002 	b	4001b164 <CyU3PPibThreadEntry+0x278>
4001b158:	e59d0008 	ldr	r0, [sp, #8]
4001b15c:	e3c00001 	bic	r0, r0, #1
4001b160:	e58d0008 	str	r0, [sp, #8]
4001b164:	e59d0008 	ldr	r0, [sp, #8]
4001b168:	e3500000 	cmp	r0, #0
4001b16c:	1affff7e 	bne	4001af6c <CyU3PPibThreadEntry+0x80>
4001b170:	e1a00000 	nop			; (mov r0, r0)
4001b174:	eaffff6a 	b	4001af24 <CyU3PPibThreadEntry+0x38>
4001b178:	e0010000 	.word	0xe0010000
4001b17c:	40030d40 	.word	0x40030d40
4001b180:	4003196c 	.word	0x4003196c
4001b184:	40030d44 	.word	0x40030d44
4001b188:	40030d48 	.word	0x40030d48
4001b18c:	e0017000 	.word	0xe0017000
4001b190:	e0014000 	.word	0xe0014000
4001b194:	40031a3c 	.word	0x40031a3c
4001b198:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3PPmmcInit:

4001b19c <CyU3PPmmcInit>:
4001b19c:	e92d4010 	push	{r4, lr}
4001b1a0:	e1a04000 	mov	r4, r0
4001b1a4:	e3540000 	cmp	r4, #0
4001b1a8:	0a000042 	beq	4001b2b8 <CyU3PPmmcInit+0x11c>
4001b1ac:	e3e00000 	mvn	r0, #0
4001b1b0:	e59f1148 	ldr	r1, [pc, #328]	; 4001b300 <CyU3PPmmcInit+0x164>
4001b1b4:	e581000c 	str	r0, [r1, #12]
4001b1b8:	e3a00000 	mov	r0, #0
4001b1bc:	e5810010 	str	r0, [r1, #16]
4001b1c0:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b1c4:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b1c8:	e3a00000 	mov	r0, #0
4001b1cc:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b1d0:	e5810008 	str	r0, [r1, #8]
4001b1d4:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b1d8:	e5900000 	ldr	r0, [r0]
4001b1dc:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b1e0:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b1e4:	e5810000 	str	r0, [r1]
4001b1e8:	e59f0114 	ldr	r0, [pc, #276]	; 4001b304 <CyU3PPmmcInit+0x168>
4001b1ec:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b1f0:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b1f4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b1f8:	e3a00001 	mov	r0, #1
4001b1fc:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b200:	e59f0100 	ldr	r0, [pc, #256]	; 4001b308 <CyU3PPmmcInit+0x16c>
4001b204:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b208:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b30c <CyU3PPmmcInit+0x170>
4001b20c:	e5900000 	ldr	r0, [r0]
4001b210:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b214:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b30c <CyU3PPmmcInit+0x170>
4001b218:	e5900004 	ldr	r0, [r0, #4]
4001b21c:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b220:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b30c <CyU3PPmmcInit+0x170>
4001b224:	e5900008 	ldr	r0, [r0, #8]
4001b228:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b22c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b30c <CyU3PPmmcInit+0x170>
4001b230:	e590000c 	ldr	r0, [r0, #12]
4001b234:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b238:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b310 <CyU3PPmmcInit+0x174>
4001b23c:	e5900000 	ldr	r0, [r0]
4001b240:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b244:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b310 <CyU3PPmmcInit+0x174>
4001b248:	e5900004 	ldr	r0, [r0, #4]
4001b24c:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b250:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b310 <CyU3PPmmcInit+0x174>
4001b254:	e5900008 	ldr	r0, [r0, #8]
4001b258:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b25c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b310 <CyU3PPmmcInit+0x174>
4001b260:	e590000c 	ldr	r0, [r0, #12]
4001b264:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b268:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b310 <CyU3PPmmcInit+0x174>
4001b26c:	e5900010 	ldr	r0, [r0, #16]
4001b270:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b274:	e59f0094 	ldr	r0, [pc, #148]	; 4001b310 <CyU3PPmmcInit+0x174>
4001b278:	e5900014 	ldr	r0, [r0, #20]
4001b27c:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b280:	e59f008c 	ldr	r0, [pc, #140]	; 4001b314 <CyU3PPmmcInit+0x178>
4001b284:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b288:	e3a00000 	mov	r0, #0
4001b28c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b290:	e3a00c02 	mov	r0, #512	; 0x200
4001b294:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b298:	e3a00000 	mov	r0, #0
4001b29c:	e5810004 	str	r0, [r1, #4]
4001b2a0:	e59f0070 	ldr	r0, [pc, #112]	; 4001b318 <CyU3PPmmcInit+0x17c>
4001b2a4:	e5810010 	str	r0, [r1, #16]
4001b2a8:	e3a00008 	mov	r0, #8
4001b2ac:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b2b0:	e5810008 	str	r0, [r1, #8]
4001b2b4:	ea000002 	b	4001b2c4 <CyU3PPmmcInit+0x128>
4001b2b8:	e3a00000 	mov	r0, #0
4001b2bc:	e59f103c 	ldr	r1, [pc, #60]	; 4001b300 <CyU3PPmmcInit+0x164>
4001b2c0:	e5810010 	str	r0, [r1, #16]
4001b2c4:	e59f0034 	ldr	r0, [pc, #52]	; 4001b300 <CyU3PPmmcInit+0x164>
4001b2c8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b2cc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b2d0:	e59f1028 	ldr	r1, [pc, #40]	; 4001b300 <CyU3PPmmcInit+0x164>
4001b2d4:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b2d8:	ebffdddd 	bl	40012a54 <CyU3PSysBarrierSync>
4001b2dc:	e59f0038 	ldr	r0, [pc, #56]	; 4001b31c <CyU3PPmmcInit+0x180>
4001b2e0:	e5900000 	ldr	r0, [r0]
4001b2e4:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b2e8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b2ec:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b2f0:	e59f1024 	ldr	r1, [pc, #36]	; 4001b31c <CyU3PPmmcInit+0x180>
4001b2f4:	e5810000 	str	r0, [r1]
4001b2f8:	e3a00000 	mov	r0, #0
4001b2fc:	e8bd8010 	pop	{r4, pc}
4001b300:	e0011000 	.word	0xe0011000
4001b304:	00019201 	.word	0x00019201
4001b308:	04010302 	.word	0x04010302
4001b30c:	40011d84 	.word	0x40011d84
4001b310:	40011d94 	.word	0x40011d94
4001b314:	00ff8080 	.word	0x00ff8080
4001b318:	400a00fb 	.word	0x400a00fb
4001b31c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b320 <CyU3PMboxReset>:
4001b320:	e92d4010 	push	{r4, lr}
4001b324:	e3a00002 	mov	r0, #2
4001b328:	e59f1028 	ldr	r1, [pc, #40]	; 4001b358 <CyU3PMboxReset+0x38>
4001b32c:	e5810004 	str	r0, [r1, #4]
4001b330:	e3a02002 	mov	r2, #2
4001b334:	e3a01010 	mov	r1, #16
4001b338:	e59f001c 	ldr	r0, [pc, #28]	; 4001b35c <CyU3PMboxReset+0x3c>
4001b33c:	ebffbae0 	bl	40009ec4 <_txe_event_flags_set>
4001b340:	e59f0010 	ldr	r0, [pc, #16]	; 4001b358 <CyU3PMboxReset+0x38>
4001b344:	e5900008 	ldr	r0, [r0, #8]
4001b348:	e3800003 	orr	r0, r0, #3
4001b34c:	e59f1004 	ldr	r1, [pc, #4]	; 4001b358 <CyU3PMboxReset+0x38>
4001b350:	e5810008 	str	r0, [r1, #8]
4001b354:	e8bd8010 	pop	{r4, pc}
4001b358:	e0010000 	.word	0xe0010000
4001b35c:	4003196c 	.word	0x4003196c

Disassembly of section i.CyU3PGpifConfigure:

4001b360 <CyU3PGpifConfigure>:
4001b360:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b364:	e1a04000 	mov	r4, r0
4001b368:	e1a05001 	mov	r5, r1
4001b36c:	e59f609c 	ldr	r6, [pc, #156]	; 4001b410 <CyU3PGpifConfigure+0xb0>
4001b370:	e3540000 	cmp	r4, #0
4001b374:	0a000001 	beq	4001b380 <CyU3PGpifConfigure+0x20>
4001b378:	e3550000 	cmp	r5, #0
4001b37c:	1a000001 	bne	4001b388 <CyU3PGpifConfigure+0x28>
4001b380:	e3a00040 	mov	r0, #64	; 0x40
4001b384:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b388:	ebffe585 	bl	400149a4 <CyFx3DevIsGpifConfigurable>
4001b38c:	e3500000 	cmp	r0, #0
4001b390:	1a000001 	bne	4001b39c <CyU3PGpifConfigure+0x3c>
4001b394:	e3a00046 	mov	r0, #70	; 0x46
4001b398:	eafffff9 	b	4001b384 <CyU3PGpifConfigure+0x24>
4001b39c:	ebffe576 	bl	4001497c <CyFx3DevIsGpif32Supported>
4001b3a0:	e3500000 	cmp	r0, #0
4001b3a4:	1a000007 	bne	4001b3c8 <CyU3PGpifConfigure+0x68>
4001b3a8:	e3540001 	cmp	r4, #1
4001b3ac:	da000005 	ble	4001b3c8 <CyU3PGpifConfigure+0x68>
4001b3b0:	e5950004 	ldr	r0, [r5, #4]
4001b3b4:	e200000c 	and	r0, r0, #12
4001b3b8:	e3500004 	cmp	r0, #4
4001b3bc:	9a000001 	bls	4001b3c8 <CyU3PGpifConfigure+0x68>
4001b3c0:	e3a00046 	mov	r0, #70	; 0x46
4001b3c4:	eaffffee 	b	4001b384 <CyU3PGpifConfigure+0x24>
4001b3c8:	e59f0044 	ldr	r0, [pc, #68]	; 4001b414 <CyU3PGpifConfigure+0xb4>
4001b3cc:	e5900000 	ldr	r0, [r0]
4001b3d0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b3d4:	0a000001 	beq	4001b3e0 <CyU3PGpifConfigure+0x80>
4001b3d8:	e3a00043 	mov	r0, #67	; 0x43
4001b3dc:	eaffffe8 	b	4001b384 <CyU3PGpifConfigure+0x24>
4001b3e0:	e3a07001 	mov	r7, #1
4001b3e4:	ea000002 	b	4001b3f4 <CyU3PGpifConfigure+0x94>
4001b3e8:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b3ec:	e4860004 	str	r0, [r6], #4
4001b3f0:	e2877001 	add	r7, r7, #1
4001b3f4:	e1570004 	cmp	r7, r4
4001b3f8:	bafffffa 	blt	4001b3e8 <CyU3PGpifConfigure+0x88>
4001b3fc:	e5950000 	ldr	r0, [r5]
4001b400:	e59f100c 	ldr	r1, [pc, #12]	; 4001b414 <CyU3PGpifConfigure+0xb4>
4001b404:	e5810000 	str	r0, [r1]
4001b408:	e3a00000 	mov	r0, #0
4001b40c:	eaffffdc 	b	4001b384 <CyU3PGpifConfigure+0x24>
4001b410:	e0014004 	.word	0xe0014004
4001b414:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b418 <CyU3PGpifDisable>:
4001b418:	e92d4070 	push	{r4, r5, r6, lr}
4001b41c:	e1a04000 	mov	r4, r0
4001b420:	e59f0070 	ldr	r0, [pc, #112]	; 4001b498 <CyU3PGpifDisable+0x80>
4001b424:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b428:	e3800002 	orr	r0, r0, #2
4001b42c:	e59f1064 	ldr	r1, [pc, #100]	; 4001b498 <CyU3PGpifDisable+0x80>
4001b430:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b434:	e3a0000a 	mov	r0, #10
4001b438:	ebffe057 	bl	4001359c <CyU3PBusyWait>
4001b43c:	e3a00000 	mov	r0, #0
4001b440:	e59f1050 	ldr	r1, [pc, #80]	; 4001b498 <CyU3PGpifDisable+0x80>
4001b444:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b448:	e3540000 	cmp	r4, #0
4001b44c:	0a000010 	beq	4001b494 <CyU3PGpifDisable+0x7c>
4001b450:	e3a00e22 	mov	r0, #544	; 0x220
4001b454:	e5810000 	str	r0, [r1]
4001b458:	e3a05000 	mov	r5, #0
4001b45c:	ea000007 	b	4001b480 <CyU3PGpifDisable+0x68>
4001b460:	e3a00000 	mov	r0, #0
4001b464:	e59f1030 	ldr	r1, [pc, #48]	; 4001b49c <CyU3PGpifDisable+0x84>
4001b468:	e0811205 	add	r1, r1, r5, lsl #4
4001b46c:	e5810008 	str	r0, [r1, #8]
4001b470:	e59f1028 	ldr	r1, [pc, #40]	; 4001b4a0 <CyU3PGpifDisable+0x88>
4001b474:	e0811205 	add	r1, r1, r5, lsl #4
4001b478:	e5810008 	str	r0, [r1, #8]
4001b47c:	e2855001 	add	r5, r5, #1
4001b480:	e3550c01 	cmp	r5, #256	; 0x100
4001b484:	3afffff5 	bcc	4001b460 <CyU3PGpifDisable+0x48>
4001b488:	e59f1014 	ldr	r1, [pc, #20]	; 4001b4a4 <CyU3PGpifDisable+0x8c>
4001b48c:	e3a0004c 	mov	r0, #76	; 0x4c
4001b490:	ebffffb2 	bl	4001b360 <CyU3PGpifConfigure>
4001b494:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b498:	e0014000 	.word	0xe0014000
4001b49c:	e0015000 	.word	0xe0015000
4001b4a0:	e0016000 	.word	0xe0016000
4001b4a4:	40011dac 	.word	0x40011dac

Disassembly of section i.CyU3PGpifLoad:

4001b4a8 <CyU3PGpifLoad>:
4001b4a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b4ac:	e1a04000 	mov	r4, r0
4001b4b0:	e59f7264 	ldr	r7, [pc, #612]	; 4001b71c <CyU3PGpifLoad+0x274>
4001b4b4:	e3540000 	cmp	r4, #0
4001b4b8:	0a000008 	beq	4001b4e0 <CyU3PGpifLoad+0x38>
4001b4bc:	e1d400b0 	ldrh	r0, [r4]
4001b4c0:	e3500000 	cmp	r0, #0
4001b4c4:	1a000007 	bne	4001b4e8 <CyU3PGpifLoad+0x40>
4001b4c8:	e1d400bc 	ldrh	r0, [r4, #12]
4001b4cc:	e3500000 	cmp	r0, #0
4001b4d0:	1a000004 	bne	4001b4e8 <CyU3PGpifLoad+0x40>
4001b4d4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b4d8:	e3500000 	cmp	r0, #0
4001b4dc:	1a000001 	bne	4001b4e8 <CyU3PGpifLoad+0x40>
4001b4e0:	e3a00040 	mov	r0, #64	; 0x40
4001b4e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b4e8:	e59f0230 	ldr	r0, [pc, #560]	; 4001b720 <CyU3PGpifLoad+0x278>
4001b4ec:	e5900000 	ldr	r0, [r0]
4001b4f0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b4f4:	1a000003 	bne	4001b508 <CyU3PGpifLoad+0x60>
4001b4f8:	e59f0220 	ldr	r0, [pc, #544]	; 4001b720 <CyU3PGpifLoad+0x278>
4001b4fc:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b500:	e3100001 	tst	r0, #1
4001b504:	0a000001 	beq	4001b510 <CyU3PGpifLoad+0x68>
4001b508:	e3a00043 	mov	r0, #67	; 0x43
4001b50c:	eafffff4 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b510:	ebffe523 	bl	400149a4 <CyFx3DevIsGpifConfigurable>
4001b514:	e3500000 	cmp	r0, #0
4001b518:	1a000001 	bne	4001b524 <CyU3PGpifLoad+0x7c>
4001b51c:	e3a00046 	mov	r0, #70	; 0x46
4001b520:	eaffffef 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b524:	ebffe514 	bl	4001497c <CyFx3DevIsGpif32Supported>
4001b528:	e3500000 	cmp	r0, #0
4001b52c:	1a00000c 	bne	4001b564 <CyU3PGpifLoad+0xbc>
4001b530:	e1d401b4 	ldrh	r0, [r4, #20]
4001b534:	e3500002 	cmp	r0, #2
4001b538:	ba000009 	blt	4001b564 <CyU3PGpifLoad+0xbc>
4001b53c:	e5940018 	ldr	r0, [r4, #24]
4001b540:	e3500000 	cmp	r0, #0
4001b544:	0a000006 	beq	4001b564 <CyU3PGpifLoad+0xbc>
4001b548:	e5940018 	ldr	r0, [r4, #24]
4001b54c:	e5900004 	ldr	r0, [r0, #4]
4001b550:	e200000c 	and	r0, r0, #12
4001b554:	e3500004 	cmp	r0, #4
4001b558:	9a000001 	bls	4001b564 <CyU3PGpifLoad+0xbc>
4001b55c:	e3a00046 	mov	r0, #70	; 0x46
4001b560:	eaffffdf 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b564:	e1d400b0 	ldrh	r0, [r4]
4001b568:	e3500000 	cmp	r0, #0
4001b56c:	0a00003b 	beq	4001b660 <CyU3PGpifLoad+0x1b8>
4001b570:	e5940004 	ldr	r0, [r4, #4]
4001b574:	e3500000 	cmp	r0, #0
4001b578:	1a000001 	bne	4001b584 <CyU3PGpifLoad+0xdc>
4001b57c:	e3a00040 	mov	r0, #64	; 0x40
4001b580:	eaffffd7 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b584:	e3a05000 	mov	r5, #0
4001b588:	ea000031 	b	4001b654 <CyU3PGpifLoad+0x1ac>
4001b58c:	e5940008 	ldr	r0, [r4, #8]
4001b590:	e3500000 	cmp	r0, #0
4001b594:	0a000002 	beq	4001b5a4 <CyU3PGpifLoad+0xfc>
4001b598:	e5940008 	ldr	r0, [r4, #8]
4001b59c:	e7d00005 	ldrb	r0, [r0, r5]
4001b5a0:	ea000000 	b	4001b5a8 <CyU3PGpifLoad+0x100>
4001b5a4:	e1a00005 	mov	r0, r5
4001b5a8:	e1a06800 	lsl	r6, r0, #16
4001b5ac:	e1a06826 	lsr	r6, r6, #16
4001b5b0:	e0861086 	add	r1, r6, r6, lsl #1
4001b5b4:	e5940004 	ldr	r0, [r4, #4]
4001b5b8:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b5bc:	e59f1160 	ldr	r1, [pc, #352]	; 4001b724 <CyU3PGpifLoad+0x27c>
4001b5c0:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b5c4:	e0861086 	add	r1, r6, r6, lsl #1
4001b5c8:	e5940004 	ldr	r0, [r4, #4]
4001b5cc:	e0800181 	add	r0, r0, r1, lsl #3
4001b5d0:	e5900004 	ldr	r0, [r0, #4]
4001b5d4:	e59f1148 	ldr	r1, [pc, #328]	; 4001b724 <CyU3PGpifLoad+0x27c>
4001b5d8:	e0811205 	add	r1, r1, r5, lsl #4
4001b5dc:	e5810004 	str	r0, [r1, #4]
4001b5e0:	e0861086 	add	r1, r6, r6, lsl #1
4001b5e4:	e5940004 	ldr	r0, [r4, #4]
4001b5e8:	e0800181 	add	r0, r0, r1, lsl #3
4001b5ec:	e5900008 	ldr	r0, [r0, #8]
4001b5f0:	e59f112c 	ldr	r1, [pc, #300]	; 4001b724 <CyU3PGpifLoad+0x27c>
4001b5f4:	e0811205 	add	r1, r1, r5, lsl #4
4001b5f8:	e5810008 	str	r0, [r1, #8]
4001b5fc:	e0861086 	add	r1, r6, r6, lsl #1
4001b600:	e5940004 	ldr	r0, [r4, #4]
4001b604:	e0800181 	add	r0, r0, r1, lsl #3
4001b608:	e590000c 	ldr	r0, [r0, #12]
4001b60c:	e59f1114 	ldr	r1, [pc, #276]	; 4001b728 <CyU3PGpifLoad+0x280>
4001b610:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b614:	e0861086 	add	r1, r6, r6, lsl #1
4001b618:	e5940004 	ldr	r0, [r4, #4]
4001b61c:	e0800181 	add	r0, r0, r1, lsl #3
4001b620:	e5900010 	ldr	r0, [r0, #16]
4001b624:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b728 <CyU3PGpifLoad+0x280>
4001b628:	e0811205 	add	r1, r1, r5, lsl #4
4001b62c:	e5810004 	str	r0, [r1, #4]
4001b630:	e0861086 	add	r1, r6, r6, lsl #1
4001b634:	e5940004 	ldr	r0, [r4, #4]
4001b638:	e0800181 	add	r0, r0, r1, lsl #3
4001b63c:	e5900014 	ldr	r0, [r0, #20]
4001b640:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b728 <CyU3PGpifLoad+0x280>
4001b644:	e0811205 	add	r1, r1, r5, lsl #4
4001b648:	e5810008 	str	r0, [r1, #8]
4001b64c:	e2850001 	add	r0, r5, #1
4001b650:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b654:	e1d400b0 	ldrh	r0, [r4]
4001b658:	e1500005 	cmp	r0, r5
4001b65c:	caffffca 	bgt	4001b58c <CyU3PGpifLoad+0xe4>
4001b660:	e1d400bc 	ldrh	r0, [r4, #12]
4001b664:	e3500000 	cmp	r0, #0
4001b668:	0a000013 	beq	4001b6bc <CyU3PGpifLoad+0x214>
4001b66c:	e5940010 	ldr	r0, [r4, #16]
4001b670:	e3500000 	cmp	r0, #0
4001b674:	0a000002 	beq	4001b684 <CyU3PGpifLoad+0x1dc>
4001b678:	e1d400bc 	ldrh	r0, [r4, #12]
4001b67c:	e3500020 	cmp	r0, #32
4001b680:	da000001 	ble	4001b68c <CyU3PGpifLoad+0x1e4>
4001b684:	e3a00040 	mov	r0, #64	; 0x40
4001b688:	eaffff95 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b68c:	e3a05000 	mov	r5, #0
4001b690:	ea000006 	b	4001b6b0 <CyU3PGpifLoad+0x208>
4001b694:	e5940010 	ldr	r0, [r4, #16]
4001b698:	e0800085 	add	r0, r0, r5, lsl #1
4001b69c:	e1d000b0 	ldrh	r0, [r0]
4001b6a0:	e59f1084 	ldr	r1, [pc, #132]	; 4001b72c <CyU3PGpifLoad+0x284>
4001b6a4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b6a8:	e2850001 	add	r0, r5, #1
4001b6ac:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b6b0:	e1d400bc 	ldrh	r0, [r4, #12]
4001b6b4:	e1500005 	cmp	r0, r5
4001b6b8:	cafffff5 	bgt	4001b694 <CyU3PGpifLoad+0x1ec>
4001b6bc:	e1d401b4 	ldrh	r0, [r4, #20]
4001b6c0:	e3500000 	cmp	r0, #0
4001b6c4:	0a000012 	beq	4001b714 <CyU3PGpifLoad+0x26c>
4001b6c8:	e5940018 	ldr	r0, [r4, #24]
4001b6cc:	e3500000 	cmp	r0, #0
4001b6d0:	1a000001 	bne	4001b6dc <CyU3PGpifLoad+0x234>
4001b6d4:	e3a00040 	mov	r0, #64	; 0x40
4001b6d8:	eaffff81 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b6dc:	e3a05001 	mov	r5, #1
4001b6e0:	ea000004 	b	4001b6f8 <CyU3PGpifLoad+0x250>
4001b6e4:	e5940018 	ldr	r0, [r4, #24]
4001b6e8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b6ec:	e4870004 	str	r0, [r7], #4
4001b6f0:	e2850001 	add	r0, r5, #1
4001b6f4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b6f8:	e1d401b4 	ldrh	r0, [r4, #20]
4001b6fc:	e1500005 	cmp	r0, r5
4001b700:	cafffff7 	bgt	4001b6e4 <CyU3PGpifLoad+0x23c>
4001b704:	e5940018 	ldr	r0, [r4, #24]
4001b708:	e5900000 	ldr	r0, [r0]
4001b70c:	e59f100c 	ldr	r1, [pc, #12]	; 4001b720 <CyU3PGpifLoad+0x278>
4001b710:	e5810000 	str	r0, [r1]
4001b714:	e3a00000 	mov	r0, #0
4001b718:	eaffff71 	b	4001b4e4 <CyU3PGpifLoad+0x3c>
4001b71c:	e0014004 	.word	0xe0014004
4001b720:	e0014000 	.word	0xe0014000
4001b724:	e0015000 	.word	0xe0015000
4001b728:	e0016000 	.word	0xe0016000
4001b72c:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b730 <CyU3PGpifRegisterCallback>:
4001b730:	e59f1004 	ldr	r1, [pc, #4]	; 4001b73c <CyU3PGpifRegisterCallback+0xc>
4001b734:	e5810000 	str	r0, [r1]
4001b738:	e12fff1e 	bx	lr
4001b73c:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3PGpifSMStart:

4001b740 <CyU3PGpifSMStart>:
4001b740:	e92d4010 	push	{r4, lr}
4001b744:	e1a02000 	mov	r2, r0
4001b748:	e59f012c 	ldr	r0, [pc, #300]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b74c:	e5900000 	ldr	r0, [r0]
4001b750:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b754:	0a000004 	beq	4001b76c <CyU3PGpifSMStart+0x2c>
4001b758:	e59f0120 	ldr	r0, [pc, #288]	; 4001b880 <CyU3PGpifSMStart+0x140>
4001b75c:	e0800202 	add	r0, r0, r2, lsl #4
4001b760:	e5900008 	ldr	r0, [r0, #8]
4001b764:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b768:	1a000001 	bne	4001b774 <CyU3PGpifSMStart+0x34>
4001b76c:	e3a00044 	mov	r0, #68	; 0x44
4001b770:	e8bd8010 	pop	{r4, pc}
4001b774:	e59f0100 	ldr	r0, [pc, #256]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b778:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b77c:	e3100001 	tst	r0, #1
4001b780:	0a000001 	beq	4001b78c <CyU3PGpifSMStart+0x4c>
4001b784:	e3a00043 	mov	r0, #67	; 0x43
4001b788:	eafffff8 	b	4001b770 <CyU3PGpifSMStart+0x30>
4001b78c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b790:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b794:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b798:	e1800801 	orr	r0, r0, r1, lsl #16
4001b79c:	e3800001 	orr	r0, r0, #1
4001b7a0:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b7a4:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b7a8:	e1a00004 	mov	r0, r4
4001b7ac:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b7b0:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b884 <CyU3PGpifSMStart+0x144>
4001b7b4:	e000000e 	and	r0, r0, lr
4001b7b8:	e180e802 	orr	lr, r0, r2, lsl #16
4001b7bc:	e1a00004 	mov	r0, r4
4001b7c0:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b7c4:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b7c8:	e3800005 	orr	r0, r0, #5
4001b7cc:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b7d0:	e1a00004 	mov	r0, r4
4001b7d4:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b7d8:	e5900008 	ldr	r0, [r0, #8]
4001b7dc:	e2003007 	and	r3, r0, #7
4001b7e0:	e3530001 	cmp	r3, #1
4001b7e4:	0a000004 	beq	4001b7fc <CyU3PGpifSMStart+0xbc>
4001b7e8:	e3530002 	cmp	r3, #2
4001b7ec:	0a00000b 	beq	4001b820 <CyU3PGpifSMStart+0xe0>
4001b7f0:	e3530003 	cmp	r3, #3
4001b7f4:	1a00001b 	bne	4001b868 <CyU3PGpifSMStart+0x128>
4001b7f8:	ea000011 	b	4001b844 <CyU3PGpifSMStart+0x104>
4001b7fc:	e1a00000 	nop			; (mov r0, r0)
4001b800:	e59f0080 	ldr	r0, [pc, #128]	; 4001b888 <CyU3PGpifSMStart+0x148>
4001b804:	e1ce0000 	bic	r0, lr, r0
4001b808:	e3800005 	orr	r0, r0, #5
4001b80c:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b810:	e1800424 	orr	r0, r0, r4, lsr #8
4001b814:	e59f4060 	ldr	r4, [pc, #96]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b818:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b81c:	ea000013 	b	4001b870 <CyU3PGpifSMStart+0x130>
4001b820:	e1a00000 	nop			; (mov r0, r0)
4001b824:	e59f0060 	ldr	r0, [pc, #96]	; 4001b88c <CyU3PGpifSMStart+0x14c>
4001b828:	e1ce0000 	bic	r0, lr, r0
4001b82c:	e3800005 	orr	r0, r0, #5
4001b830:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b834:	e1800424 	orr	r0, r0, r4, lsr #8
4001b838:	e59f403c 	ldr	r4, [pc, #60]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b83c:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b840:	ea00000a 	b	4001b870 <CyU3PGpifSMStart+0x130>
4001b844:	e1a00000 	nop			; (mov r0, r0)
4001b848:	e59f0040 	ldr	r0, [pc, #64]	; 4001b890 <CyU3PGpifSMStart+0x150>
4001b84c:	e1ce0000 	bic	r0, lr, r0
4001b850:	e3800005 	orr	r0, r0, #5
4001b854:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b858:	e1800424 	orr	r0, r0, r4, lsr #8
4001b85c:	e59f4018 	ldr	r4, [pc, #24]	; 4001b87c <CyU3PGpifSMStart+0x13c>
4001b860:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b864:	ea000001 	b	4001b870 <CyU3PGpifSMStart+0x130>
4001b868:	e1a00000 	nop			; (mov r0, r0)
4001b86c:	e1a00000 	nop			; (mov r0, r0)
4001b870:	e1a00000 	nop			; (mov r0, r0)
4001b874:	e3a00000 	mov	r0, #0
4001b878:	eaffffbc 	b	4001b770 <CyU3PGpifSMStart+0x30>
4001b87c:	e0014000 	.word	0xe0014000
4001b880:	e0015000 	.word	0xe0015000
4001b884:	ff00003a 	.word	0xff00003a
4001b888:	0080ffc5 	.word	0x0080ffc5
4001b88c:	00c0ffc5 	.word	0x00c0ffc5
4001b890:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b894 <CyU3PGpifSMSwitch>:
4001b894:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b898:	e1a0c000 	mov	ip, r0
4001b89c:	e59de018 	ldr	lr, [sp, #24]
4001b8a0:	e3a04000 	mov	r4, #0
4001b8a4:	e3510c01 	cmp	r1, #256	; 0x100
4001b8a8:	ba000001 	blt	4001b8b4 <CyU3PGpifSMSwitch+0x20>
4001b8ac:	e3a00040 	mov	r0, #64	; 0x40
4001b8b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b8b4:	e59f0150 	ldr	r0, [pc, #336]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b8b8:	e5900000 	ldr	r0, [r0]
4001b8bc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b8c0:	1a000001 	bne	4001b8cc <CyU3PGpifSMSwitch+0x38>
4001b8c4:	e3a00044 	mov	r0, #68	; 0x44
4001b8c8:	eafffff8 	b	4001b8b0 <CyU3PGpifSMSwitch+0x1c>
4001b8cc:	e59f0138 	ldr	r0, [pc, #312]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b8d0:	e5900008 	ldr	r0, [r0, #8]
4001b8d4:	e2006007 	and	r6, r0, #7
4001b8d8:	e59f012c 	ldr	r0, [pc, #300]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b8dc:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b8e0:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b8e4:	e1800803 	orr	r0, r0, r3, lsl #16
4001b8e8:	e3800001 	orr	r0, r0, #1
4001b8ec:	e59f8118 	ldr	r8, [pc, #280]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b8f0:	e5880118 	str	r0, [r8, #280]	; 0x118
4001b8f4:	e3a00001 	mov	r0, #1
4001b8f8:	e1804801 	orr	r4, r0, r1, lsl #16
4001b8fc:	e35c0c01 	cmp	ip, #256	; 0x100
4001b900:	aa000012 	bge	4001b950 <CyU3PGpifSMSwitch+0xbc>
4001b904:	e1c80000 	bic	r0, r8, r0
4001b908:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b90c:	e1a05c20 	lsr	r5, r0, #24
4001b910:	e59f00f8 	ldr	r0, [pc, #248]	; 4001ba10 <CyU3PGpifSMSwitch+0x17c>
4001b914:	e7d00006 	ldrb	r0, [r0, r6]
4001b918:	e0000005 	and	r0, r0, r5
4001b91c:	e59f80ec 	ldr	r8, [pc, #236]	; 4001ba10 <CyU3PGpifSMSwitch+0x17c>
4001b920:	e7d88006 	ldrb	r8, [r8, r6]
4001b924:	e008800c 	and	r8, r8, ip
4001b928:	e1500008 	cmp	r0, r8
4001b92c:	1a000001 	bne	4001b938 <CyU3PGpifSMSwitch+0xa4>
4001b930:	e3844004 	orr	r4, r4, #4
4001b934:	ea000006 	b	4001b954 <CyU3PGpifSMSwitch+0xc0>
4001b938:	e3a00008 	mov	r0, #8
4001b93c:	e180040c 	orr	r0, r0, ip, lsl #8
4001b940:	e1844000 	orr	r4, r4, r0
4001b944:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b948:	e580e120 	str	lr, [r0, #288]	; 0x120
4001b94c:	ea000000 	b	4001b954 <CyU3PGpifSMSwitch+0xc0>
4001b950:	e3844004 	orr	r4, r4, #4
4001b954:	e3520c01 	cmp	r2, #256	; 0x100
4001b958:	aa000007 	bge	4001b97c <CyU3PGpifSMSwitch+0xe8>
4001b95c:	e3a00002 	mov	r0, #2
4001b960:	e1800c02 	orr	r0, r0, r2, lsl #24
4001b964:	e1844000 	orr	r4, r4, r0
4001b968:	e59f009c 	ldr	r0, [pc, #156]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b96c:	e5900018 	ldr	r0, [r0, #24]
4001b970:	e3800001 	orr	r0, r0, #1
4001b974:	e59f8090 	ldr	r8, [pc, #144]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b978:	e5880018 	str	r0, [r8, #24]
4001b97c:	e59f0088 	ldr	r0, [pc, #136]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b980:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001b984:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001b988:	e3560001 	cmp	r6, #1
4001b98c:	0a000004 	beq	4001b9a4 <CyU3PGpifSMSwitch+0x110>
4001b990:	e3560002 	cmp	r6, #2
4001b994:	0a000009 	beq	4001b9c0 <CyU3PGpifSMSwitch+0x12c>
4001b998:	e3560003 	cmp	r6, #3
4001b99c:	1a000015 	bne	4001b9f8 <CyU3PGpifSMSwitch+0x164>
4001b9a0:	ea00000d 	b	4001b9dc <CyU3PGpifSMSwitch+0x148>
4001b9a4:	e1a00000 	nop			; (mov r0, r0)
4001b9a8:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001b9ac:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001b9b0:	e1800428 	orr	r0, r0, r8, lsr #8
4001b9b4:	e59f8050 	ldr	r8, [pc, #80]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b9b8:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b9bc:	ea00000f 	b	4001ba00 <CyU3PGpifSMSwitch+0x16c>
4001b9c0:	e1a00000 	nop			; (mov r0, r0)
4001b9c4:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001b9c8:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001b9cc:	e1800428 	orr	r0, r0, r8, lsr #8
4001b9d0:	e59f8034 	ldr	r8, [pc, #52]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b9d4:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b9d8:	ea000008 	b	4001ba00 <CyU3PGpifSMSwitch+0x16c>
4001b9dc:	e1a00000 	nop			; (mov r0, r0)
4001b9e0:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001b9e4:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001b9e8:	e1800428 	orr	r0, r0, r8, lsr #8
4001b9ec:	e59f8018 	ldr	r8, [pc, #24]	; 4001ba0c <CyU3PGpifSMSwitch+0x178>
4001b9f0:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b9f4:	ea000001 	b	4001ba00 <CyU3PGpifSMSwitch+0x16c>
4001b9f8:	e1a00000 	nop			; (mov r0, r0)
4001b9fc:	e1a00000 	nop			; (mov r0, r0)
4001ba00:	e1a00000 	nop			; (mov r0, r0)
4001ba04:	e3a00000 	mov	r0, #0
4001ba08:	eaffffa8 	b	4001b8b0 <CyU3PGpifSMSwitch+0x1c>
4001ba0c:	e0014000 	.word	0xe0014000
4001ba10:	40011edc 	.word	0x40011edc

Disassembly of section i.CyU3PConnectState:

4001ba14 <CyU3PConnectState>:
4001ba14:	e92d4070 	push	{r4, r5, r6, lr}
4001ba18:	e1a04000 	mov	r4, r0
4001ba1c:	e1a06001 	mov	r6, r1
4001ba20:	e59f0234 	ldr	r0, [pc, #564]	; 4001bc5c <CyU3PConnectState+0x248>
4001ba24:	e5d00008 	ldrb	r0, [r0, #8]
4001ba28:	e3500000 	cmp	r0, #0
4001ba2c:	1a000001 	bne	4001ba38 <CyU3PConnectState+0x24>
4001ba30:	e3a00042 	mov	r0, #66	; 0x42
4001ba34:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ba38:	ebffe41a 	bl	40014aa8 <CyFx3DevIsUsb3Supported>
4001ba3c:	e3500000 	cmp	r0, #0
4001ba40:	1a000000 	bne	4001ba48 <CyU3PConnectState+0x34>
4001ba44:	e3a06000 	mov	r6, #0
4001ba48:	e3a05000 	mov	r5, #0
4001ba4c:	e3e01000 	mvn	r1, #0
4001ba50:	e59f0208 	ldr	r0, [pc, #520]	; 4001bc60 <CyU3PConnectState+0x24c>
4001ba54:	ebffb9b2 	bl	4000a124 <_txe_mutex_get>
4001ba58:	e3540000 	cmp	r4, #0
4001ba5c:	1a00001a 	bne	4001bacc <CyU3PConnectState+0xb8>
4001ba60:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bc5c <CyU3PConnectState+0x248>
4001ba64:	e5d00008 	ldrb	r0, [r0, #8]
4001ba68:	e3500004 	cmp	r0, #4
4001ba6c:	ba000012 	blt	4001babc <CyU3PConnectState+0xa8>
4001ba70:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bc5c <CyU3PConnectState+0x248>
4001ba74:	e5d00008 	ldrb	r0, [r0, #8]
4001ba78:	e3500005 	cmp	r0, #5
4001ba7c:	ba000008 	blt	4001baa4 <CyU3PConnectState+0x90>
4001ba80:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bc5c <CyU3PConnectState+0x248>
4001ba84:	e5d11009 	ldrb	r1, [r1, #9]
4001ba88:	e3510003 	cmp	r1, #3
4001ba8c:	1a000001 	bne	4001ba98 <CyU3PConnectState+0x84>
4001ba90:	e3a01001 	mov	r1, #1
4001ba94:	ea000000 	b	4001ba9c <CyU3PConnectState+0x88>
4001ba98:	e3a01000 	mov	r1, #0
4001ba9c:	e1a00001 	mov	r0, r1
4001baa0:	eb00050f 	bl	4001cee4 <CyU3PUsbPhyDisable>
4001baa4:	e3a00003 	mov	r0, #3
4001baa8:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bc5c <CyU3PConnectState+0x248>
4001baac:	e5c10008 	strb	r0, [r1, #8]
4001bab0:	e3a00000 	mov	r0, #0
4001bab4:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001bab8:	e5810058 	str	r0, [r1, #88]	; 0x58
4001babc:	e3a00000 	mov	r0, #0
4001bac0:	e59f1194 	ldr	r1, [pc, #404]	; 4001bc5c <CyU3PConnectState+0x248>
4001bac4:	e5810044 	str	r0, [r1, #68]	; 0x44
4001bac8:	ea00005f 	b	4001bc4c <CyU3PConnectState+0x238>
4001bacc:	e59f0188 	ldr	r0, [pc, #392]	; 4001bc5c <CyU3PConnectState+0x248>
4001bad0:	e5d00008 	ldrb	r0, [r0, #8]
4001bad4:	e3500003 	cmp	r0, #3
4001bad8:	0a00000b 	beq	4001bb0c <CyU3PConnectState+0xf8>
4001badc:	e3500004 	cmp	r0, #4
4001bae0:	0a000004 	beq	4001baf8 <CyU3PConnectState+0xe4>
4001bae4:	e3500005 	cmp	r0, #5
4001bae8:	0a000004 	beq	4001bb00 <CyU3PConnectState+0xec>
4001baec:	e3500006 	cmp	r0, #6
4001baf0:	1a000051 	bne	4001bc3c <CyU3PConnectState+0x228>
4001baf4:	ea000002 	b	4001bb04 <CyU3PConnectState+0xf0>
4001baf8:	e1a00000 	nop			; (mov r0, r0)
4001bafc:	e1a00000 	nop			; (mov r0, r0)
4001bb00:	e1a00000 	nop			; (mov r0, r0)
4001bb04:	e3a05043 	mov	r5, #67	; 0x43
4001bb08:	ea00004e 	b	4001bc48 <CyU3PConnectState+0x234>
4001bb0c:	e1a00000 	nop			; (mov r0, r0)
4001bb10:	e59f0144 	ldr	r0, [pc, #324]	; 4001bc5c <CyU3PConnectState+0x248>
4001bb14:	e5d00007 	ldrb	r0, [r0, #7]
4001bb18:	e3500001 	cmp	r0, #1
4001bb1c:	0a00000f 	beq	4001bb60 <CyU3PConnectState+0x14c>
4001bb20:	e59f013c 	ldr	r0, [pc, #316]	; 4001bc64 <CyU3PConnectState+0x250>
4001bb24:	e590001c 	ldr	r0, [r0, #28]
4001bb28:	e3500000 	cmp	r0, #0
4001bb2c:	0a000007 	beq	4001bb50 <CyU3PConnectState+0x13c>
4001bb30:	e59f012c 	ldr	r0, [pc, #300]	; 4001bc64 <CyU3PConnectState+0x250>
4001bb34:	e5900014 	ldr	r0, [r0, #20]
4001bb38:	e3500000 	cmp	r0, #0
4001bb3c:	0a000003 	beq	4001bb50 <CyU3PConnectState+0x13c>
4001bb40:	e59f011c 	ldr	r0, [pc, #284]	; 4001bc64 <CyU3PConnectState+0x250>
4001bb44:	e5900018 	ldr	r0, [r0, #24]
4001bb48:	e3500000 	cmp	r0, #0
4001bb4c:	1a000003 	bne	4001bb60 <CyU3PConnectState+0x14c>
4001bb50:	e59f0108 	ldr	r0, [pc, #264]	; 4001bc60 <CyU3PConnectState+0x24c>
4001bb54:	ebffb9a7 	bl	4000a1f8 <_txe_mutex_put>
4001bb58:	e3a00044 	mov	r0, #68	; 0x44
4001bb5c:	eaffffb4 	b	4001ba34 <CyU3PConnectState+0x20>
4001bb60:	e3560000 	cmp	r6, #0
4001bb64:	0a000007 	beq	4001bb88 <CyU3PConnectState+0x174>
4001bb68:	e3a00000 	mov	r0, #0
4001bb6c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bc68 <CyU3PConnectState+0x254>
4001bb70:	e5810014 	str	r0, [r1, #20]
4001bb74:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bc6c <CyU3PConnectState+0x258>
4001bb78:	e5810000 	str	r0, [r1]
4001bb7c:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bc70 <CyU3PConnectState+0x25c>
4001bb80:	e5810000 	str	r0, [r1]
4001bb84:	ea000007 	b	4001bba8 <CyU3PConnectState+0x194>
4001bb88:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bc5c <CyU3PConnectState+0x248>
4001bb8c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001bb90:	e3500000 	cmp	r0, #0
4001bb94:	0a000003 	beq	4001bba8 <CyU3PConnectState+0x194>
4001bb98:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bc60 <CyU3PConnectState+0x24c>
4001bb9c:	ebffb995 	bl	4000a1f8 <_txe_mutex_put>
4001bba0:	e3a000ff 	mov	r0, #255	; 0xff
4001bba4:	eaffffa2 	b	4001ba34 <CyU3PConnectState+0x20>
4001bba8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bc5c <CyU3PConnectState+0x248>
4001bbac:	e5806024 	str	r6, [r0, #36]	; 0x24
4001bbb0:	e3a00000 	mov	r0, #0
4001bbb4:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bc5c <CyU3PConnectState+0x248>
4001bbb8:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bbbc:	e2810000 	add	r0, r1, #0
4001bbc0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bbc4:	e3500000 	cmp	r0, #0
4001bbc8:	0a000004 	beq	4001bbe0 <CyU3PConnectState+0x1cc>
4001bbcc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bc74 <CyU3PConnectState+0x260>
4001bbd0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001bbd4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bbd8:	e1100001 	tst	r0, r1
4001bbdc:	0a000012 	beq	4001bc2c <CyU3PConnectState+0x218>
4001bbe0:	e3560000 	cmp	r6, #0
4001bbe4:	0a000007 	beq	4001bc08 <CyU3PConnectState+0x1f4>
4001bbe8:	e3a00000 	mov	r0, #0
4001bbec:	e59f1068 	ldr	r1, [pc, #104]	; 4001bc5c <CyU3PConnectState+0x248>
4001bbf0:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bbf4:	e3a00001 	mov	r0, #1
4001bbf8:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bbfc:	e3a00000 	mov	r0, #0
4001bc00:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bc04:	ea000002 	b	4001bc14 <CyU3PConnectState+0x200>
4001bc08:	e3a00000 	mov	r0, #0
4001bc0c:	e59f1048 	ldr	r1, [pc, #72]	; 4001bc5c <CyU3PConnectState+0x248>
4001bc10:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bc14:	e1a00006 	mov	r0, r6
4001bc18:	eb000527 	bl	4001d0bc <CyU3PUsbPhyEnable>
4001bc1c:	e3a00005 	mov	r0, #5
4001bc20:	e59f1034 	ldr	r1, [pc, #52]	; 4001bc5c <CyU3PConnectState+0x248>
4001bc24:	e5c10008 	strb	r0, [r1, #8]
4001bc28:	ea000002 	b	4001bc38 <CyU3PConnectState+0x224>
4001bc2c:	e3a00004 	mov	r0, #4
4001bc30:	e59f1024 	ldr	r1, [pc, #36]	; 4001bc5c <CyU3PConnectState+0x248>
4001bc34:	e5c10008 	strb	r0, [r1, #8]
4001bc38:	ea000002 	b	4001bc48 <CyU3PConnectState+0x234>
4001bc3c:	e1a00000 	nop			; (mov r0, r0)
4001bc40:	e3a05044 	mov	r5, #68	; 0x44
4001bc44:	e1a00000 	nop			; (mov r0, r0)
4001bc48:	e1a00000 	nop			; (mov r0, r0)
4001bc4c:	e59f000c 	ldr	r0, [pc, #12]	; 4001bc60 <CyU3PConnectState+0x24c>
4001bc50:	ebffb968 	bl	4000a1f8 <_txe_mutex_put>
4001bc54:	e1a00005 	mov	r0, r5
4001bc58:	eaffff75 	b	4001ba34 <CyU3PConnectState+0x20>
4001bc5c:	40031d40 	.word	0x40031d40
4001bc60:	40031ee0 	.word	0x40031ee0
4001bc64:	40031f98 	.word	0x40031f98
4001bc68:	e0033000 	.word	0xe0033000
4001bc6c:	40030da0 	.word	0x40030da0
4001bc70:	40030da4 	.word	0x40030da4
4001bc74:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bc78 <CyU3POtgGetMode>:
4001bc78:	e59f0004 	ldr	r0, [pc, #4]	; 4001bc84 <CyU3POtgGetMode+0xc>
4001bc7c:	e5d00000 	ldrb	r0, [r0]
4001bc80:	e12fff1e 	bx	lr
4001bc84:	40030d70 	.word	0x40030d70

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bc88 <CyU3POtgIsDeviceMode>:
4001bc88:	e3a01000 	mov	r1, #0
4001bc8c:	e59f00b4 	ldr	r0, [pc, #180]	; 4001bd48 <CyU3POtgIsDeviceMode+0xc0>
4001bc90:	e5d00000 	ldrb	r0, [r0]
4001bc94:	e3500000 	cmp	r0, #0
4001bc98:	0a000003 	beq	4001bcac <CyU3POtgIsDeviceMode+0x24>
4001bc9c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001bd48 <CyU3POtgIsDeviceMode+0xc0>
4001bca0:	e5d00000 	ldrb	r0, [r0]
4001bca4:	e3500002 	cmp	r0, #2
4001bca8:	1a000024 	bne	4001bd40 <CyU3POtgIsDeviceMode+0xb8>
4001bcac:	e59f0098 	ldr	r0, [pc, #152]	; 4001bd4c <CyU3POtgIsDeviceMode+0xc4>
4001bcb0:	e5d00000 	ldrb	r0, [r0]
4001bcb4:	e3500000 	cmp	r0, #0
4001bcb8:	0a000006 	beq	4001bcd8 <CyU3POtgIsDeviceMode+0x50>
4001bcbc:	e3500002 	cmp	r0, #2
4001bcc0:	0a00000c 	beq	4001bcf8 <CyU3POtgIsDeviceMode+0x70>
4001bcc4:	e3500004 	cmp	r0, #4
4001bcc8:	0a00000b 	beq	4001bcfc <CyU3POtgIsDeviceMode+0x74>
4001bccc:	e3500005 	cmp	r0, #5
4001bcd0:	1a00000c 	bne	4001bd08 <CyU3POtgIsDeviceMode+0x80>
4001bcd4:	ea000009 	b	4001bd00 <CyU3POtgIsDeviceMode+0x78>
4001bcd8:	e1a00000 	nop			; (mov r0, r0)
4001bcdc:	e59f0064 	ldr	r0, [pc, #100]	; 4001bd48 <CyU3POtgIsDeviceMode+0xc0>
4001bce0:	e5d00000 	ldrb	r0, [r0]
4001bce4:	e3500002 	cmp	r0, #2
4001bce8:	1a000001 	bne	4001bcf4 <CyU3POtgIsDeviceMode+0x6c>
4001bcec:	e3a00000 	mov	r0, #0
4001bcf0:	e12fff1e 	bx	lr
4001bcf4:	e1a00000 	nop			; (mov r0, r0)
4001bcf8:	e1a00000 	nop			; (mov r0, r0)
4001bcfc:	e1a00000 	nop			; (mov r0, r0)
4001bd00:	e3a01001 	mov	r1, #1
4001bd04:	ea000002 	b	4001bd14 <CyU3POtgIsDeviceMode+0x8c>
4001bd08:	e1a00000 	nop			; (mov r0, r0)
4001bd0c:	e3a01000 	mov	r1, #0
4001bd10:	e1a00000 	nop			; (mov r0, r0)
4001bd14:	e1a00000 	nop			; (mov r0, r0)
4001bd18:	e59f0030 	ldr	r0, [pc, #48]	; 4001bd50 <CyU3POtgIsDeviceMode+0xc8>
4001bd1c:	e5900000 	ldr	r0, [r0]
4001bd20:	e3500000 	cmp	r0, #0
4001bd24:	0a000005 	beq	4001bd40 <CyU3POtgIsDeviceMode+0xb8>
4001bd28:	e3510000 	cmp	r1, #0
4001bd2c:	1a000001 	bne	4001bd38 <CyU3POtgIsDeviceMode+0xb0>
4001bd30:	e3a00001 	mov	r0, #1
4001bd34:	ea000000 	b	4001bd3c <CyU3POtgIsDeviceMode+0xb4>
4001bd38:	e3a00000 	mov	r0, #0
4001bd3c:	e1a01000 	mov	r1, r0
4001bd40:	e1a00001 	mov	r0, r1
4001bd44:	eaffffe9 	b	4001bcf0 <CyU3POtgIsDeviceMode+0x68>
4001bd48:	40030d70 	.word	0x40030d70
4001bd4c:	40030d6c 	.word	0x40030d6c
4001bd50:	40030d68 	.word	0x40030d68

Disassembly of section i.CyU3POtgIsHostMode:

4001bd54 <CyU3POtgIsHostMode>:
4001bd54:	e3a01000 	mov	r1, #0
4001bd58:	e59f00a8 	ldr	r0, [pc, #168]	; 4001be08 <CyU3POtgIsHostMode+0xb4>
4001bd5c:	e5d00000 	ldrb	r0, [r0]
4001bd60:	e3500001 	cmp	r0, #1
4001bd64:	0a000003 	beq	4001bd78 <CyU3POtgIsHostMode+0x24>
4001bd68:	e59f0098 	ldr	r0, [pc, #152]	; 4001be08 <CyU3POtgIsHostMode+0xb4>
4001bd6c:	e5d00000 	ldrb	r0, [r0]
4001bd70:	e3500002 	cmp	r0, #2
4001bd74:	1a000021 	bne	4001be00 <CyU3POtgIsHostMode+0xac>
4001bd78:	e59f008c 	ldr	r0, [pc, #140]	; 4001be0c <CyU3POtgIsHostMode+0xb8>
4001bd7c:	e5d00000 	ldrb	r0, [r0]
4001bd80:	e3500000 	cmp	r0, #0
4001bd84:	0a000004 	beq	4001bd9c <CyU3POtgIsHostMode+0x48>
4001bd88:	e3500001 	cmp	r0, #1
4001bd8c:	0a00000a 	beq	4001bdbc <CyU3POtgIsHostMode+0x68>
4001bd90:	e3500003 	cmp	r0, #3
4001bd94:	1a00000b 	bne	4001bdc8 <CyU3POtgIsHostMode+0x74>
4001bd98:	ea000008 	b	4001bdc0 <CyU3POtgIsHostMode+0x6c>
4001bd9c:	e1a00000 	nop			; (mov r0, r0)
4001bda0:	e59f0060 	ldr	r0, [pc, #96]	; 4001be08 <CyU3POtgIsHostMode+0xb4>
4001bda4:	e5d00000 	ldrb	r0, [r0]
4001bda8:	e3500002 	cmp	r0, #2
4001bdac:	1a000001 	bne	4001bdb8 <CyU3POtgIsHostMode+0x64>
4001bdb0:	e3a00000 	mov	r0, #0
4001bdb4:	e12fff1e 	bx	lr
4001bdb8:	e1a00000 	nop			; (mov r0, r0)
4001bdbc:	e1a00000 	nop			; (mov r0, r0)
4001bdc0:	e3a01001 	mov	r1, #1
4001bdc4:	ea000002 	b	4001bdd4 <CyU3POtgIsHostMode+0x80>
4001bdc8:	e1a00000 	nop			; (mov r0, r0)
4001bdcc:	e3a01000 	mov	r1, #0
4001bdd0:	e1a00000 	nop			; (mov r0, r0)
4001bdd4:	e1a00000 	nop			; (mov r0, r0)
4001bdd8:	e59f0030 	ldr	r0, [pc, #48]	; 4001be10 <CyU3POtgIsHostMode+0xbc>
4001bddc:	e5900000 	ldr	r0, [r0]
4001bde0:	e3500000 	cmp	r0, #0
4001bde4:	0a000005 	beq	4001be00 <CyU3POtgIsHostMode+0xac>
4001bde8:	e3510000 	cmp	r1, #0
4001bdec:	1a000001 	bne	4001bdf8 <CyU3POtgIsHostMode+0xa4>
4001bdf0:	e3a00001 	mov	r0, #1
4001bdf4:	ea000000 	b	4001bdfc <CyU3POtgIsHostMode+0xa8>
4001bdf8:	e3a00000 	mov	r0, #0
4001bdfc:	e1a01000 	mov	r1, r0
4001be00:	e1a00001 	mov	r0, r1
4001be04:	eaffffea 	b	4001bdb4 <CyU3POtgIsHostMode+0x60>
4001be08:	40030d70 	.word	0x40030d70
4001be0c:	40030d6c 	.word	0x40030d6c
4001be10:	40030d68 	.word	0x40030d68

Disassembly of section i.CyU3POtgIsStarted:

4001be14 <CyU3POtgIsStarted>:
4001be14:	e59f0004 	ldr	r0, [pc, #4]	; 4001be20 <CyU3POtgIsStarted+0xc>
4001be18:	e5900000 	ldr	r0, [r0]
4001be1c:	e12fff1e 	bx	lr
4001be20:	40030d64 	.word	0x40030d64

Disassembly of section i.CyU3PSetEpConfig:

4001be24 <CyU3PSetEpConfig>:
4001be24:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001be28:	e1a04000 	mov	r4, r0
4001be2c:	e1a05001 	mov	r5, r1
4001be30:	e204607f 	and	r6, r4, #127	; 0x7f
4001be34:	e3a07000 	mov	r7, #0
4001be38:	e3a08000 	mov	r8, #0
4001be3c:	e3a09000 	mov	r9, #0
4001be40:	e3a0a000 	mov	sl, #0
4001be44:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c3d4 <CyU3PSetEpConfig+0x5b0>
4001be48:	e5d00008 	ldrb	r0, [r0, #8]
4001be4c:	e3500000 	cmp	r0, #0
4001be50:	1a000001 	bne	4001be5c <CyU3PSetEpConfig+0x38>
4001be54:	e3a00042 	mov	r0, #66	; 0x42
4001be58:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001be5c:	e3550000 	cmp	r5, #0
4001be60:	1a000001 	bne	4001be6c <CyU3PSetEpConfig+0x48>
4001be64:	e3a00041 	mov	r0, #65	; 0x41
4001be68:	eafffffa 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001be6c:	e5950000 	ldr	r0, [r5]
4001be70:	e3500000 	cmp	r0, #0
4001be74:	0a000074 	beq	4001c04c <CyU3PSetEpConfig+0x228>
4001be78:	e1d500b8 	ldrh	r0, [r5, #8]
4001be7c:	e3500b01 	cmp	r0, #1024	; 0x400
4001be80:	ca000001 	bgt	4001be8c <CyU3PSetEpConfig+0x68>
4001be84:	e356000f 	cmp	r6, #15
4001be88:	da000001 	ble	4001be94 <CyU3PSetEpConfig+0x70>
4001be8c:	e3a00040 	mov	r0, #64	; 0x40
4001be90:	eafffff0 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001be94:	e5d50004 	ldrb	r0, [r5, #4]
4001be98:	e3500000 	cmp	r0, #0
4001be9c:	0a000002 	beq	4001beac <CyU3PSetEpConfig+0x88>
4001bea0:	e5d50004 	ldrb	r0, [r5, #4]
4001bea4:	e3500003 	cmp	r0, #3
4001bea8:	da000001 	ble	4001beb4 <CyU3PSetEpConfig+0x90>
4001beac:	e3a00040 	mov	r0, #64	; 0x40
4001beb0:	eaffffe8 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001beb4:	e5d5000a 	ldrb	r0, [r5, #10]
4001beb8:	e3500010 	cmp	r0, #16
4001bebc:	ca000008 	bgt	4001bee4 <CyU3PSetEpConfig+0xc0>
4001bec0:	e5d5000a 	ldrb	r0, [r5, #10]
4001bec4:	e3500001 	cmp	r0, #1
4001bec8:	da000007 	ble	4001beec <CyU3PSetEpConfig+0xc8>
4001becc:	e1d500b8 	ldrh	r0, [r5, #8]
4001bed0:	e3500b01 	cmp	r0, #1024	; 0x400
4001bed4:	aa000004 	bge	4001beec <CyU3PSetEpConfig+0xc8>
4001bed8:	e1d500b8 	ldrh	r0, [r5, #8]
4001bedc:	e3500000 	cmp	r0, #0
4001bee0:	0a000001 	beq	4001beec <CyU3PSetEpConfig+0xc8>
4001bee4:	e3a00040 	mov	r0, #64	; 0x40
4001bee8:	eaffffda 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001beec:	e5d50004 	ldrb	r0, [r5, #4]
4001bef0:	e1a00f00 	lsl	r0, r0, #30
4001bef4:	e1a08a20 	lsr	r8, r0, #20
4001bef8:	e5d50004 	ldrb	r0, [r5, #4]
4001befc:	e2000003 	and	r0, r0, #3
4001bf00:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c3d8 <CyU3PSetEpConfig+0x5b4>
4001bf04:	e7d1a000 	ldrb	sl, [r1, r0]
4001bf08:	e5d5000a 	ldrb	r0, [r5, #10]
4001bf0c:	e3500000 	cmp	r0, #0
4001bf10:	0a000004 	beq	4001bf28 <CyU3PSetEpConfig+0x104>
4001bf14:	e5d5000a 	ldrb	r0, [r5, #10]
4001bf18:	e2400001 	sub	r0, r0, #1
4001bf1c:	e200000f 	and	r0, r0, #15
4001bf20:	e18aa400 	orr	sl, sl, r0, lsl #8
4001bf24:	ea000001 	b	4001bf30 <CyU3PSetEpConfig+0x10c>
4001bf28:	e3a00001 	mov	r0, #1
4001bf2c:	e5c5000a 	strb	r0, [r5, #10]
4001bf30:	e5d50004 	ldrb	r0, [r5, #4]
4001bf34:	e3500001 	cmp	r0, #1
4001bf38:	1a000013 	bne	4001bf8c <CyU3PSetEpConfig+0x168>
4001bf3c:	e5950000 	ldr	r0, [r5]
4001bf40:	e3500000 	cmp	r0, #0
4001bf44:	0a000010 	beq	4001bf8c <CyU3PSetEpConfig+0x168>
4001bf48:	e5d5000b 	ldrb	r0, [r5, #11]
4001bf4c:	e2000003 	and	r0, r0, #3
4001bf50:	e1888600 	orr	r8, r8, r0, lsl #12
4001bf54:	e5d5000a 	ldrb	r0, [r5, #10]
4001bf58:	e5d5100b 	ldrb	r1, [r5, #11]
4001bf5c:	e1600180 	smulbb	r0, r0, r1
4001bf60:	e200003f 	and	r0, r0, #63	; 0x3f
4001bf64:	e18aa100 	orr	sl, sl, r0, lsl #2
4001bf68:	e5d5000b 	ldrb	r0, [r5, #11]
4001bf6c:	e3500001 	cmp	r0, #1
4001bf70:	da000005 	ble	4001bf8c <CyU3PSetEpConfig+0x168>
4001bf74:	e3560003 	cmp	r6, #3
4001bf78:	0a000003 	beq	4001bf8c <CyU3PSetEpConfig+0x168>
4001bf7c:	e3560007 	cmp	r6, #7
4001bf80:	0a000001 	beq	4001bf8c <CyU3PSetEpConfig+0x168>
4001bf84:	e3a0004d 	mov	r0, #77	; 0x4d
4001bf88:	eaffffb2 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001bf8c:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf90:	e3500000 	cmp	r0, #0
4001bf94:	0a000004 	beq	4001bfac <CyU3PSetEpConfig+0x188>
4001bf98:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf9c:	e3500b01 	cmp	r0, #1024	; 0x400
4001bfa0:	ca000001 	bgt	4001bfac <CyU3PSetEpConfig+0x188>
4001bfa4:	e1d500b8 	ldrh	r0, [r5, #8]
4001bfa8:	ea000000 	b	4001bfb0 <CyU3PSetEpConfig+0x18c>
4001bfac:	e3a00b01 	mov	r0, #1024	; 0x400
4001bfb0:	e1a07800 	lsl	r7, r0, #16
4001bfb4:	e1a07827 	lsr	r7, r7, #16
4001bfb8:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c3d4 <CyU3PSetEpConfig+0x5b0>
4001bfbc:	e5d00008 	ldrb	r0, [r0, #8]
4001bfc0:	e3500005 	cmp	r0, #5
4001bfc4:	da00001e 	ble	4001c044 <CyU3PSetEpConfig+0x220>
4001bfc8:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c3d4 <CyU3PSetEpConfig+0x5b0>
4001bfcc:	e5d00009 	ldrb	r0, [r0, #9]
4001bfd0:	e3500001 	cmp	r0, #1
4001bfd4:	0a000008 	beq	4001bffc <CyU3PSetEpConfig+0x1d8>
4001bfd8:	e3500002 	cmp	r0, #2
4001bfdc:	1a000015 	bne	4001c038 <CyU3PSetEpConfig+0x214>
4001bfe0:	e5d50004 	ldrb	r0, [r5, #4]
4001bfe4:	e3500002 	cmp	r0, #2
4001bfe8:	1a000002 	bne	4001bff8 <CyU3PSetEpConfig+0x1d4>
4001bfec:	e3570c02 	cmp	r7, #512	; 0x200
4001bff0:	da000000 	ble	4001bff8 <CyU3PSetEpConfig+0x1d4>
4001bff4:	e3a07c02 	mov	r7, #512	; 0x200
4001bff8:	ea000010 	b	4001c040 <CyU3PSetEpConfig+0x21c>
4001bffc:	e1a00000 	nop			; (mov r0, r0)
4001c000:	e5d50004 	ldrb	r0, [r5, #4]
4001c004:	e3500001 	cmp	r0, #1
4001c008:	1a000003 	bne	4001c01c <CyU3PSetEpConfig+0x1f8>
4001c00c:	e3570b01 	cmp	r7, #1024	; 0x400
4001c010:	ba000001 	blt	4001c01c <CyU3PSetEpConfig+0x1f8>
4001c014:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c3dc <CyU3PSetEpConfig+0x5b8>
4001c018:	ea000005 	b	4001c034 <CyU3PSetEpConfig+0x210>
4001c01c:	e5d50004 	ldrb	r0, [r5, #4]
4001c020:	e3500001 	cmp	r0, #1
4001c024:	0a000002 	beq	4001c034 <CyU3PSetEpConfig+0x210>
4001c028:	e3570040 	cmp	r7, #64	; 0x40
4001c02c:	da000000 	ble	4001c034 <CyU3PSetEpConfig+0x210>
4001c030:	e3a07040 	mov	r7, #64	; 0x40
4001c034:	ea000001 	b	4001c040 <CyU3PSetEpConfig+0x21c>
4001c038:	e1a00000 	nop			; (mov r0, r0)
4001c03c:	e1a00000 	nop			; (mov r0, r0)
4001c040:	e1a00000 	nop			; (mov r0, r0)
4001c044:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001c048:	e1888000 	orr	r8, r8, r0
4001c04c:	e3e01000 	mvn	r1, #0
4001c050:	e59f0388 	ldr	r0, [pc, #904]	; 4001c3e0 <CyU3PSetEpConfig+0x5bc>
4001c054:	ebffb832 	bl	4000a124 <_txe_mutex_get>
4001c058:	e3140080 	tst	r4, #128	; 0x80
4001c05c:	0a000062 	beq	4001c1ec <CyU3PSetEpConfig+0x3c8>
4001c060:	e5950000 	ldr	r0, [r5]
4001c064:	e3500000 	cmp	r0, #0
4001c068:	1a00001d 	bne	4001c0e4 <CyU3PSetEpConfig+0x2c0>
4001c06c:	e59f0370 	ldr	r0, [pc, #880]	; 4001c3e4 <CyU3PSetEpConfig+0x5c0>
4001c070:	e59f1370 	ldr	r1, [pc, #880]	; 4001c3e8 <CyU3PSetEpConfig+0x5c4>
4001c074:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c078:	e3a00020 	mov	r0, #32
4001c07c:	e59f1368 	ldr	r1, [pc, #872]	; 4001c3ec <CyU3PSetEpConfig+0x5c8>
4001c080:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c084:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c088:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c08c:	e3a01001 	mov	r1, #1
4001c090:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c094:	e59f1354 	ldr	r1, [pc, #852]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c098:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c09c:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c0a0:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c0a4:	e3a01001 	mov	r1, #1
4001c0a8:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c0ac:	e59f1340 	ldr	r1, [pc, #832]	; 4001c3f4 <CyU3PSetEpConfig+0x5d0>
4001c0b0:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c0b4:	e3a00000 	mov	r0, #0
4001c0b8:	e0861086 	add	r1, r6, r6, lsl #1
4001c0bc:	e59f2334 	ldr	r2, [pc, #820]	; 4001c3f8 <CyU3PSetEpConfig+0x5d4>
4001c0c0:	e0821101 	add	r1, r2, r1, lsl #2
4001c0c4:	e5810004 	str	r0, [r1, #4]
4001c0c8:	e0861086 	add	r1, r6, r6, lsl #1
4001c0cc:	e0821101 	add	r1, r2, r1, lsl #2
4001c0d0:	e5810008 	str	r0, [r1, #8]
4001c0d4:	e59f0304 	ldr	r0, [pc, #772]	; 4001c3e0 <CyU3PSetEpConfig+0x5bc>
4001c0d8:	ebffb846 	bl	4000a1f8 <_txe_mutex_put>
4001c0dc:	e3a00000 	mov	r0, #0
4001c0e0:	eaffff5c 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001c0e4:	e3a00001 	mov	r0, #1
4001c0e8:	e0861086 	add	r1, r6, r6, lsl #1
4001c0ec:	e59f2304 	ldr	r2, [pc, #772]	; 4001c3f8 <CyU3PSetEpConfig+0x5d4>
4001c0f0:	e0821101 	add	r1, r2, r1, lsl #2
4001c0f4:	e5810004 	str	r0, [r1, #4]
4001c0f8:	e0861086 	add	r1, r6, r6, lsl #1
4001c0fc:	e0821101 	add	r1, r2, r1, lsl #2
4001c100:	e5810008 	str	r0, [r1, #8]
4001c104:	e1d500b8 	ldrh	r0, [r5, #8]
4001c108:	e0861086 	add	r1, r6, r6, lsl #1
4001c10c:	e0821101 	add	r1, r2, r1, lsl #2
4001c110:	e1c100b0 	strh	r0, [r1]
4001c114:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c3fc <CyU3PSetEpConfig+0x5d8>
4001c118:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c11c:	e5d50004 	ldrb	r0, [r5, #4]
4001c120:	e3500002 	cmp	r0, #2
4001c124:	1a000007 	bne	4001c148 <CyU3PSetEpConfig+0x324>
4001c128:	e1d500b6 	ldrh	r0, [r5, #6]
4001c12c:	e3500000 	cmp	r0, #0
4001c130:	da000004 	ble	4001c148 <CyU3PSetEpConfig+0x324>
4001c134:	e3a02001 	mov	r2, #1
4001c138:	e1a01006 	mov	r1, r6
4001c13c:	e1a00004 	mov	r0, r4
4001c140:	eb00031b 	bl	4001cdb4 <CyU3PUsbMapStream>
4001c144:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c400 <CyU3PSetEpConfig+0x5dc>
4001c148:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c14c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c150:	e3a01001 	mov	r1, #1
4001c154:	e1800611 	orr	r0, r0, r1, lsl r6
4001c158:	e59f1290 	ldr	r1, [pc, #656]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c15c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c160:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c164:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c168:	e59f1278 	ldr	r1, [pc, #632]	; 4001c3e8 <CyU3PSetEpConfig+0x5c4>
4001c16c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c170:	e3890001 	orr	r0, r9, #1
4001c174:	e59f1270 	ldr	r1, [pc, #624]	; 4001c3ec <CyU3PSetEpConfig+0x5c8>
4001c178:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c17c:	e2810040 	add	r0, r1, #64	; 0x40
4001c180:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c184:	e59f0278 	ldr	r0, [pc, #632]	; 4001c404 <CyU3PSetEpConfig+0x5e0>
4001c188:	e5900000 	ldr	r0, [r0]
4001c18c:	e3500000 	cmp	r0, #0
4001c190:	0a00007f 	beq	4001c394 <CyU3PSetEpConfig+0x570>
4001c194:	e3a00001 	mov	r0, #1
4001c198:	e59f1268 	ldr	r1, [pc, #616]	; 4001c408 <CyU3PSetEpConfig+0x5e4>
4001c19c:	e5911000 	ldr	r1, [r1]
4001c1a0:	e1110610 	tst	r1, r0, lsl r6
4001c1a4:	0a00007a 	beq	4001c394 <CyU3PSetEpConfig+0x570>
4001c1a8:	e59f0244 	ldr	r0, [pc, #580]	; 4001c3f4 <CyU3PSetEpConfig+0x5d0>
4001c1ac:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c1b0:	e3a01001 	mov	r1, #1
4001c1b4:	e1800611 	orr	r0, r0, r1, lsl r6
4001c1b8:	e59f1234 	ldr	r1, [pc, #564]	; 4001c3f4 <CyU3PSetEpConfig+0x5d0>
4001c1bc:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c1c0:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c1c4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c1c8:	e3a01001 	mov	r1, #1
4001c1cc:	e1800611 	orr	r0, r0, r1, lsl r6
4001c1d0:	e59f1218 	ldr	r1, [pc, #536]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c1d4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c1d8:	e59f0224 	ldr	r0, [pc, #548]	; 4001c404 <CyU3PSetEpConfig+0x5e0>
4001c1dc:	e5901000 	ldr	r1, [r0]
4001c1e0:	e1a00004 	mov	r0, r4
4001c1e4:	eb0001ba 	bl	4001c8d4 <CyU3PUsbEnableEpInterrupts>
4001c1e8:	ea000069 	b	4001c394 <CyU3PSetEpConfig+0x570>
4001c1ec:	e5950000 	ldr	r0, [r5]
4001c1f0:	e3500000 	cmp	r0, #0
4001c1f4:	1a00001e 	bne	4001c274 <CyU3PSetEpConfig+0x450>
4001c1f8:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c3e4 <CyU3PSetEpConfig+0x5c0>
4001c1fc:	e59f1208 	ldr	r1, [pc, #520]	; 4001c40c <CyU3PSetEpConfig+0x5e8>
4001c200:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c204:	e3a00020 	mov	r0, #32
4001c208:	e59f1200 	ldr	r1, [pc, #512]	; 4001c410 <CyU3PSetEpConfig+0x5ec>
4001c20c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c210:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c214:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c218:	e2861010 	add	r1, r6, #16
4001c21c:	e3a02001 	mov	r2, #1
4001c220:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c224:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c3f4 <CyU3PSetEpConfig+0x5d0>
4001c228:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c22c:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c230:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c234:	e2861010 	add	r1, r6, #16
4001c238:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c23c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c240:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c244:	e3a00000 	mov	r0, #0
4001c248:	e0861086 	add	r1, r6, r6, lsl #1
4001c24c:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c414 <CyU3PSetEpConfig+0x5f0>
4001c250:	e0821101 	add	r1, r2, r1, lsl #2
4001c254:	e5810004 	str	r0, [r1, #4]
4001c258:	e0861086 	add	r1, r6, r6, lsl #1
4001c25c:	e0821101 	add	r1, r2, r1, lsl #2
4001c260:	e5810008 	str	r0, [r1, #8]
4001c264:	e59f0174 	ldr	r0, [pc, #372]	; 4001c3e0 <CyU3PSetEpConfig+0x5bc>
4001c268:	ebffb7e2 	bl	4000a1f8 <_txe_mutex_put>
4001c26c:	e3a00000 	mov	r0, #0
4001c270:	eafffef8 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001c274:	e3a00001 	mov	r0, #1
4001c278:	e0861086 	add	r1, r6, r6, lsl #1
4001c27c:	e59f2190 	ldr	r2, [pc, #400]	; 4001c414 <CyU3PSetEpConfig+0x5f0>
4001c280:	e0821101 	add	r1, r2, r1, lsl #2
4001c284:	e5810004 	str	r0, [r1, #4]
4001c288:	e0861086 	add	r1, r6, r6, lsl #1
4001c28c:	e0821101 	add	r1, r2, r1, lsl #2
4001c290:	e5810008 	str	r0, [r1, #8]
4001c294:	e1d500b8 	ldrh	r0, [r5, #8]
4001c298:	e0861086 	add	r1, r6, r6, lsl #1
4001c29c:	e0821101 	add	r1, r2, r1, lsl #2
4001c2a0:	e1c100b0 	strh	r0, [r1]
4001c2a4:	e59f016c 	ldr	r0, [pc, #364]	; 4001c418 <CyU3PSetEpConfig+0x5f4>
4001c2a8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c2ac:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c2b0:	e1800007 	orr	r0, r0, r7
4001c2b4:	e59f115c 	ldr	r1, [pc, #348]	; 4001c418 <CyU3PSetEpConfig+0x5f4>
4001c2b8:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c2bc:	e5d50004 	ldrb	r0, [r5, #4]
4001c2c0:	e3500002 	cmp	r0, #2
4001c2c4:	1a00000e 	bne	4001c304 <CyU3PSetEpConfig+0x4e0>
4001c2c8:	e1d500b6 	ldrh	r0, [r5, #6]
4001c2cc:	e3500000 	cmp	r0, #0
4001c2d0:	da00000b 	ble	4001c304 <CyU3PSetEpConfig+0x4e0>
4001c2d4:	e3a02001 	mov	r2, #1
4001c2d8:	e1a01006 	mov	r1, r6
4001c2dc:	e1a00004 	mov	r0, r4
4001c2e0:	eb0002b3 	bl	4001cdb4 <CyU3PUsbMapStream>
4001c2e4:	e59f0104 	ldr	r0, [pc, #260]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c2e8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c2ec:	e2861010 	add	r1, r6, #16
4001c2f0:	e3a02001 	mov	r2, #1
4001c2f4:	e1800112 	orr	r0, r0, r2, lsl r1
4001c2f8:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c2fc:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c300:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c400 <CyU3PSetEpConfig+0x5dc>
4001c304:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c308:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c40c <CyU3PSetEpConfig+0x5e8>
4001c30c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c310:	e3890001 	orr	r0, r9, #1
4001c314:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c410 <CyU3PSetEpConfig+0x5ec>
4001c318:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c31c:	e2810040 	add	r0, r1, #64	; 0x40
4001c320:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c324:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c404 <CyU3PSetEpConfig+0x5e0>
4001c328:	e5900000 	ldr	r0, [r0]
4001c32c:	e3500000 	cmp	r0, #0
4001c330:	0a000017 	beq	4001c394 <CyU3PSetEpConfig+0x570>
4001c334:	e2860010 	add	r0, r6, #16
4001c338:	e3a01001 	mov	r1, #1
4001c33c:	e1a00011 	lsl	r0, r1, r0
4001c340:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c408 <CyU3PSetEpConfig+0x5e4>
4001c344:	e5911000 	ldr	r1, [r1]
4001c348:	e1100001 	tst	r0, r1
4001c34c:	0a000010 	beq	4001c394 <CyU3PSetEpConfig+0x570>
4001c350:	e59f009c 	ldr	r0, [pc, #156]	; 4001c3f4 <CyU3PSetEpConfig+0x5d0>
4001c354:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c358:	e2861010 	add	r1, r6, #16
4001c35c:	e3a02001 	mov	r2, #1
4001c360:	e1800112 	orr	r0, r0, r2, lsl r1
4001c364:	e59f1088 	ldr	r1, [pc, #136]	; 4001c3f4 <CyU3PSetEpConfig+0x5d0>
4001c368:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c36c:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c370:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c374:	e2861010 	add	r1, r6, #16
4001c378:	e1800112 	orr	r0, r0, r2, lsl r1
4001c37c:	e59f106c 	ldr	r1, [pc, #108]	; 4001c3f0 <CyU3PSetEpConfig+0x5cc>
4001c380:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c384:	e59f0078 	ldr	r0, [pc, #120]	; 4001c404 <CyU3PSetEpConfig+0x5e0>
4001c388:	e5901000 	ldr	r1, [r0]
4001c38c:	e1a00004 	mov	r0, r4
4001c390:	eb00014f 	bl	4001c8d4 <CyU3PUsbEnableEpInterrupts>
4001c394:	e59f0038 	ldr	r0, [pc, #56]	; 4001c3d4 <CyU3PSetEpConfig+0x5b0>
4001c398:	e5d00008 	ldrb	r0, [r0, #8]
4001c39c:	e3500005 	cmp	r0, #5
4001c3a0:	ba000007 	blt	4001c3c4 <CyU3PSetEpConfig+0x5a0>
4001c3a4:	e1a00004 	mov	r0, r4
4001c3a8:	eb00040e 	bl	4001d3e8 <CyU3PUsbResetEp>
4001c3ac:	e1a00004 	mov	r0, r4
4001c3b0:	eb0001a4 	bl	4001ca48 <CyU3PUsbFlushEp>
4001c3b4:	e3a02001 	mov	r2, #1
4001c3b8:	e3a01000 	mov	r1, #0
4001c3bc:	e1a00004 	mov	r0, r4
4001c3c0:	eb00066c 	bl	4001dd78 <CyU3PUsbStall>
4001c3c4:	e59f0014 	ldr	r0, [pc, #20]	; 4001c3e0 <CyU3PSetEpConfig+0x5bc>
4001c3c8:	ebffb78a 	bl	4000a1f8 <_txe_mutex_put>
4001c3cc:	e3a00000 	mov	r0, #0
4001c3d0:	eafffea0 	b	4001be58 <CyU3PSetEpConfig+0x34>
4001c3d4:	40031d40 	.word	0x40031d40
4001c3d8:	40011ee0 	.word	0x40011ee0
4001c3dc:	000003ff 	.word	0x000003ff
4001c3e0:	40031ee0 	.word	0x40031ee0
4001c3e4:	00004040 	.word	0x00004040
4001c3e8:	e0031418 	.word	0xe0031418
4001c3ec:	e0033500 	.word	0xe0033500
4001c3f0:	e0033000 	.word	0xe0033000
4001c3f4:	e0031000 	.word	0xe0031000
4001c3f8:	40031bb8 	.word	0x40031bb8
4001c3fc:	e0031c40 	.word	0xe0031c40
4001c400:	00400028 	.word	0x00400028
4001c404:	40030d98 	.word	0x40030d98
4001c408:	40030d9c 	.word	0x40030d9c
4001c40c:	e0031498 	.word	0xe0031498
4001c410:	e0033600 	.word	0xe0033600
4001c414:	40031c78 	.word	0x40031c78
4001c418:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c41c <CyU3PSetUsbCoreClock>:
4001c41c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c420:	e1a04000 	mov	r4, r0
4001c424:	e1a05001 	mov	r5, r1
4001c428:	eb0016d5 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
4001c42c:	e1a06000 	mov	r6, r0
4001c430:	e59f0064 	ldr	r0, [pc, #100]	; 4001c49c <CyU3PSetUsbCoreClock+0x80>
4001c434:	e5900008 	ldr	r0, [r0, #8]
4001c438:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c43c:	e59f1058 	ldr	r1, [pc, #88]	; 4001c49c <CyU3PSetUsbCoreClock+0x80>
4001c440:	e5810008 	str	r0, [r1, #8]
4001c444:	e3a07014 	mov	r7, #20
4001c448:	ea000001 	b	4001c454 <CyU3PSetUsbCoreClock+0x38>
4001c44c:	e1a00000 	nop			; (mov r0, r0)
4001c450:	e2477001 	sub	r7, r7, #1
4001c454:	e3570000 	cmp	r7, #0
4001c458:	1afffffb 	bne	4001c44c <CyU3PSetUsbCoreClock+0x30>
4001c45c:	e1850104 	orr	r0, r5, r4, lsl #2
4001c460:	e59f1034 	ldr	r1, [pc, #52]	; 4001c49c <CyU3PSetUsbCoreClock+0x80>
4001c464:	e5810008 	str	r0, [r1, #8]
4001c468:	e1a00001 	mov	r0, r1
4001c46c:	e5900008 	ldr	r0, [r0, #8]
4001c470:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c474:	e5810008 	str	r0, [r1, #8]
4001c478:	e3a07050 	mov	r7, #80	; 0x50
4001c47c:	ea000001 	b	4001c488 <CyU3PSetUsbCoreClock+0x6c>
4001c480:	e1a00000 	nop			; (mov r0, r0)
4001c484:	e2477001 	sub	r7, r7, #1
4001c488:	e3570000 	cmp	r7, #0
4001c48c:	1afffffb 	bne	4001c480 <CyU3PSetUsbCoreClock+0x64>
4001c490:	e1a00006 	mov	r0, r6
4001c494:	eb0016c8 	bl	40021fbc <CyU3PVicEnableInterrupts>
4001c498:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c49c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c4a0 <CyU3PUibInit>:
4001c4a0:	e92d4010 	push	{r4, lr}
4001c4a4:	e3a04000 	mov	r4, #0
4001c4a8:	e3a00000 	mov	r0, #0
4001c4ac:	e59f117c 	ldr	r1, [pc, #380]	; 4001c630 <CyU3PUibInit+0x190>
4001c4b0:	e5810004 	str	r0, [r1, #4]
4001c4b4:	e5810008 	str	r0, [r1, #8]
4001c4b8:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c4bc:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c4c0:	e581001c 	str	r0, [r1, #28]
4001c4c4:	e3e00000 	mvn	r0, #0
4001c4c8:	e581000c 	str	r0, [r1, #12]
4001c4cc:	e5810004 	str	r0, [r1, #4]
4001c4d0:	e59f015c 	ldr	r0, [pc, #348]	; 4001c634 <CyU3PUibInit+0x194>
4001c4d4:	e5810008 	str	r0, [r1, #8]
4001c4d8:	e3a00000 	mov	r0, #0
4001c4dc:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c4e0:	e3e00000 	mvn	r0, #0
4001c4e4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c4e8:	e59f0148 	ldr	r0, [pc, #328]	; 4001c638 <CyU3PUibInit+0x198>
4001c4ec:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c4f0:	eb0016c4 	bl	40022008 <CyFx3Usb2PhySetup>
4001c4f4:	e3e00000 	mvn	r0, #0
4001c4f8:	e59f113c 	ldr	r1, [pc, #316]	; 4001c63c <CyU3PUibInit+0x19c>
4001c4fc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c500:	e59f0138 	ldr	r0, [pc, #312]	; 4001c640 <CyU3PUibInit+0x1a0>
4001c504:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c508:	e3e00000 	mvn	r0, #0
4001c50c:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c510:	e3a00000 	mov	r0, #0
4001c514:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c518:	e3a00001 	mov	r0, #1
4001c51c:	e1811680 	orr	r1, r1, r0, lsl #13
4001c520:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c524:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c528:	e3a00043 	mov	r0, #67	; 0x43
4001c52c:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c530:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c534:	e59f0108 	ldr	r0, [pc, #264]	; 4001c644 <CyU3PUibInit+0x1a4>
4001c538:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c53c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c540:	e3a00040 	mov	r0, #64	; 0x40
4001c544:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c548:	e1800400 	orr	r0, r0, r0, lsl #8
4001c54c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c550:	e3a00040 	mov	r0, #64	; 0x40
4001c554:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c558:	e3a04001 	mov	r4, #1
4001c55c:	ea000015 	b	4001c5b8 <CyU3PUibInit+0x118>
4001c560:	e1a00004 	mov	r0, r4
4001c564:	eb000137 	bl	4001ca48 <CyU3PUsbFlushEp>
4001c568:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c648 <CyU3PUibInit+0x1a8>
4001c56c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c570:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c574:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c648 <CyU3PUibInit+0x1a8>
4001c578:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c57c:	e3a00000 	mov	r0, #0
4001c580:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c64c <CyU3PUibInit+0x1ac>
4001c584:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c588:	e3840080 	orr	r0, r4, #128	; 0x80
4001c58c:	eb00012d 	bl	4001ca48 <CyU3PUsbFlushEp>
4001c590:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c650 <CyU3PUibInit+0x1b0>
4001c594:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c598:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c59c:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c650 <CyU3PUibInit+0x1b0>
4001c5a0:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c5a4:	e3a00000 	mov	r0, #0
4001c5a8:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c654 <CyU3PUibInit+0x1b4>
4001c5ac:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c5b0:	e2840001 	add	r0, r4, #1
4001c5b4:	e20040ff 	and	r4, r0, #255	; 0xff
4001c5b8:	e3540010 	cmp	r4, #16
4001c5bc:	baffffe7 	blt	4001c560 <CyU3PUibInit+0xc0>
4001c5c0:	e59f0090 	ldr	r0, [pc, #144]	; 4001c658 <CyU3PUibInit+0x1b8>
4001c5c4:	e5900004 	ldr	r0, [r0, #4]
4001c5c8:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c5cc:	e59f1084 	ldr	r1, [pc, #132]	; 4001c658 <CyU3PUibInit+0x1b8>
4001c5d0:	e5810004 	str	r0, [r1, #4]
4001c5d4:	e3e00000 	mvn	r0, #0
4001c5d8:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c5dc:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c5e0:	e3a00b01 	mov	r0, #1024	; 0x400
4001c5e4:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c5e8:	e59f106c 	ldr	r1, [pc, #108]	; 4001c65c <CyU3PUibInit+0x1bc>
4001c5ec:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c5f0:	e3a00015 	mov	r0, #21
4001c5f4:	eb00166b 	bl	40021fa8 <CyU3PVicEnableInt>
4001c5f8:	e59f0060 	ldr	r0, [pc, #96]	; 4001c660 <CyU3PUibInit+0x1c0>
4001c5fc:	e5900000 	ldr	r0, [r0]
4001c600:	e3500000 	cmp	r0, #0
4001c604:	0a000008 	beq	4001c62c <CyU3PUibInit+0x18c>
4001c608:	e59f0054 	ldr	r0, [pc, #84]	; 4001c664 <CyU3PUibInit+0x1c4>
4001c60c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c610:	e3100b01 	tst	r0, #1024	; 0x400
4001c614:	0a000004 	beq	4001c62c <CyU3PUibInit+0x18c>
4001c618:	e3a01000 	mov	r1, #0
4001c61c:	e3a0000b 	mov	r0, #11
4001c620:	e59f2038 	ldr	r2, [pc, #56]	; 4001c660 <CyU3PUibInit+0x1c0>
4001c624:	e5922000 	ldr	r2, [r2]
4001c628:	e12fff32 	blx	r2
4001c62c:	e8bd8010 	pop	{r4, pc}
4001c630:	e0050000 	.word	0xe0050000
4001c634:	00038081 	.word	0x00038081
4001c638:	00004a3d 	.word	0x00004a3d
4001c63c:	e0031000 	.word	0xe0031000
4001c640:	0000095c 	.word	0x0000095c
4001c644:	00004040 	.word	0x00004040
4001c648:	e0031498 	.word	0xe0031498
4001c64c:	e0033600 	.word	0xe0033600
4001c650:	e0031418 	.word	0xe0031418
4001c654:	e0033500 	.word	0xe0033500
4001c658:	e0030000 	.word	0xe0030000
4001c65c:	40031d40 	.word	0x40031d40
4001c660:	40030db8 	.word	0x40030db8
4001c664:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c668 <CyU3PUsbAckSetup>:
4001c668:	e92d4010 	push	{r4, lr}
4001c66c:	e3e01000 	mvn	r1, #0
4001c670:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c774 <CyU3PUsbAckSetup+0x10c>
4001c674:	ebffb6aa 	bl	4000a124 <_txe_mutex_get>
4001c678:	eb000780 	bl	4001e480 <GetUsbLinkActive>
4001c67c:	eb00019e 	bl	4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>
4001c680:	e3500000 	cmp	r0, #0
4001c684:	0a000002 	beq	4001c694 <CyU3PUsbAckSetup+0x2c>
4001c688:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c774 <CyU3PUsbAckSetup+0x10c>
4001c68c:	ebffb6d9 	bl	4000a1f8 <_txe_mutex_put>
4001c690:	e8bd8010 	pop	{r4, pc}
4001c694:	e3a00000 	mov	r0, #0
4001c698:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c778 <CyU3PUsbAckSetup+0x110>
4001c69c:	e5810014 	str	r0, [r1, #20]
4001c6a0:	e2810000 	add	r0, r1, #0
4001c6a4:	e5d00009 	ldrb	r0, [r0, #9]
4001c6a8:	e3500003 	cmp	r0, #3
4001c6ac:	1a000026 	bne	4001c74c <CyU3PUsbAckSetup+0xe4>
4001c6b0:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c77c <CyU3PUsbAckSetup+0x114>
4001c6b4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c6b8:	e3c00004 	bic	r0, r0, #4
4001c6bc:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c77c <CyU3PUsbAckSetup+0x114>
4001c6c0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c6c4:	e1a00001 	mov	r0, r1
4001c6c8:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c6cc:	e3c00004 	bic	r0, r0, #4
4001c6d0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c6d4:	eb00162a 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
4001c6d8:	e1a04000 	mov	r4, r0
4001c6dc:	e3a00001 	mov	r0, #1
4001c6e0:	ebffdbad 	bl	4001359c <CyU3PBusyWait>
4001c6e4:	e59f0090 	ldr	r0, [pc, #144]	; 4001c77c <CyU3PUsbAckSetup+0x114>
4001c6e8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c6ec:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c6f0:	e59f1084 	ldr	r1, [pc, #132]	; 4001c77c <CyU3PUsbAckSetup+0x114>
4001c6f4:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c6f8:	e1a00004 	mov	r0, r4
4001c6fc:	eb00162e 	bl	40021fbc <CyU3PVicEnableInterrupts>
4001c700:	e3a00c02 	mov	r0, #512	; 0x200
4001c704:	e59f1074 	ldr	r1, [pc, #116]	; 4001c780 <CyU3PUsbAckSetup+0x118>
4001c708:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c70c:	e3a00016 	mov	r0, #22
4001c710:	eb000ced 	bl	4001facc <CyU3PUsbAddToEventLog>
4001c714:	e59f005c 	ldr	r0, [pc, #92]	; 4001c778 <CyU3PUsbAckSetup+0x110>
4001c718:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c71c:	e3500000 	cmp	r0, #0
4001c720:	1a000010 	bne	4001c768 <CyU3PUsbAckSetup+0x100>
4001c724:	e3a00001 	mov	r0, #1
4001c728:	e59f1054 	ldr	r1, [pc, #84]	; 4001c784 <CyU3PUsbAckSetup+0x11c>
4001c72c:	e5810000 	str	r0, [r1]
4001c730:	e3a02000 	mov	r2, #0
4001c734:	e3a01064 	mov	r1, #100	; 0x64
4001c738:	e59f0048 	ldr	r0, [pc, #72]	; 4001c788 <CyU3PUsbAckSetup+0x120>
4001c73c:	ebffb8c6 	bl	4000aa5c <_txe_timer_change>
4001c740:	e59f0040 	ldr	r0, [pc, #64]	; 4001c788 <CyU3PUsbAckSetup+0x120>
4001c744:	ebffb8b4 	bl	4000aa1c <_txe_timer_activate>
4001c748:	ea000006 	b	4001c768 <CyU3PUsbAckSetup+0x100>
4001c74c:	e59f002c 	ldr	r0, [pc, #44]	; 4001c780 <CyU3PUsbAckSetup+0x118>
4001c750:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c754:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c758:	e59f1020 	ldr	r1, [pc, #32]	; 4001c780 <CyU3PUsbAckSetup+0x118>
4001c75c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c760:	e3a00040 	mov	r0, #64	; 0x40
4001c764:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c768:	e59f0004 	ldr	r0, [pc, #4]	; 4001c774 <CyU3PUsbAckSetup+0x10c>
4001c76c:	ebffb6a1 	bl	4000a1f8 <_txe_mutex_put>
4001c770:	eaffffc6 	b	4001c690 <CyU3PUsbAckSetup+0x28>
4001c774:	40031ee0 	.word	0x40031ee0
4001c778:	40031d40 	.word	0x40031d40
4001c77c:	e0033000 	.word	0xe0033000
4001c780:	e0031000 	.word	0xe0031000
4001c784:	40030dcc 	.word	0x40030dcc
4001c788:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c78c <CyU3PUsbCreateDmaChannels>:
4001c78c:	e92d4010 	push	{r4, lr}
4001c790:	e24dd020 	sub	sp, sp, #32
4001c794:	e3a00c02 	mov	r0, #512	; 0x200
4001c798:	e1cd00b4 	strh	r0, [sp, #4]
4001c79c:	e3a00001 	mov	r0, #1
4001c7a0:	e1cd00b6 	strh	r0, [sp, #6]
4001c7a4:	e3a00000 	mov	r0, #0
4001c7a8:	e1cd00bc 	strh	r0, [sp, #12]
4001c7ac:	e3a00c03 	mov	r0, #768	; 0x300
4001c7b0:	e1cd00ba 	strh	r0, [sp, #10]
4001c7b4:	e3a00000 	mov	r0, #0
4001c7b8:	e5cd0014 	strb	r0, [sp, #20]
4001c7bc:	e1cd00be 	strh	r0, [sp, #14]
4001c7c0:	e1cd01b0 	strh	r0, [sp, #16]
4001c7c4:	e1cd01b2 	strh	r0, [sp, #18]
4001c7c8:	e58d0018 	str	r0, [sp, #24]
4001c7cc:	e58d001c 	str	r0, [sp, #28]
4001c7d0:	e59f00ec 	ldr	r0, [pc, #236]	; 4001c8c4 <CyU3PUsbCreateDmaChannels+0x138>
4001c7d4:	e1cd00b8 	strh	r0, [sp, #8]
4001c7d8:	e28d2004 	add	r2, sp, #4
4001c7dc:	e3a01004 	mov	r1, #4
4001c7e0:	e59f00e0 	ldr	r0, [pc, #224]	; 4001c8c8 <CyU3PUsbCreateDmaChannels+0x13c>
4001c7e4:	ebffe411 	bl	40015830 <CyU3PDmaChannelCreate>
4001c7e8:	e1a04000 	mov	r4, r0
4001c7ec:	e3540000 	cmp	r4, #0
4001c7f0:	0a000002 	beq	4001c800 <CyU3PUsbCreateDmaChannels+0x74>
4001c7f4:	e3a0004e 	mov	r0, #78	; 0x4e
4001c7f8:	e28dd020 	add	sp, sp, #32
4001c7fc:	e8bd8010 	pop	{r4, pc}
4001c800:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c8cc <CyU3PUsbCreateDmaChannels+0x140>
4001c804:	e5900000 	ldr	r0, [r0]
4001c808:	e3500000 	cmp	r0, #0
4001c80c:	0a000009 	beq	4001c838 <CyU3PUsbCreateDmaChannels+0xac>
4001c810:	e3a01001 	mov	r1, #1
4001c814:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c8c8 <CyU3PUsbCreateDmaChannels+0x13c>
4001c818:	ebffe274 	bl	400151f0 <CyU3PDmaChannelCacheControl>
4001c81c:	e1a04000 	mov	r4, r0
4001c820:	e3540000 	cmp	r4, #0
4001c824:	0a000003 	beq	4001c838 <CyU3PUsbCreateDmaChannels+0xac>
4001c828:	e59f0098 	ldr	r0, [pc, #152]	; 4001c8c8 <CyU3PUsbCreateDmaChannels+0x13c>
4001c82c:	ebffe4f9 	bl	40015c18 <CyU3PDmaChannelDestroy>
4001c830:	e3a0004e 	mov	r0, #78	; 0x4e
4001c834:	eaffffef 	b	4001c7f8 <CyU3PUsbCreateDmaChannels+0x6c>
4001c838:	e3a00b01 	mov	r0, #1024	; 0x400
4001c83c:	e1cd00b8 	strh	r0, [sp, #8]
4001c840:	e3a00000 	mov	r0, #0
4001c844:	e58d001c 	str	r0, [sp, #28]
4001c848:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c84c:	e1cd00ba 	strh	r0, [sp, #10]
4001c850:	e28d2004 	add	r2, sp, #4
4001c854:	e3a01003 	mov	r1, #3
4001c858:	e59f0070 	ldr	r0, [pc, #112]	; 4001c8d0 <CyU3PUsbCreateDmaChannels+0x144>
4001c85c:	ebffe3f3 	bl	40015830 <CyU3PDmaChannelCreate>
4001c860:	e1a04000 	mov	r4, r0
4001c864:	e3540000 	cmp	r4, #0
4001c868:	0a000003 	beq	4001c87c <CyU3PUsbCreateDmaChannels+0xf0>
4001c86c:	e59f0054 	ldr	r0, [pc, #84]	; 4001c8c8 <CyU3PUsbCreateDmaChannels+0x13c>
4001c870:	ebffe4e8 	bl	40015c18 <CyU3PDmaChannelDestroy>
4001c874:	e3a0004e 	mov	r0, #78	; 0x4e
4001c878:	eaffffde 	b	4001c7f8 <CyU3PUsbCreateDmaChannels+0x6c>
4001c87c:	e59f0048 	ldr	r0, [pc, #72]	; 4001c8cc <CyU3PUsbCreateDmaChannels+0x140>
4001c880:	e5900000 	ldr	r0, [r0]
4001c884:	e3500000 	cmp	r0, #0
4001c888:	0a00000b 	beq	4001c8bc <CyU3PUsbCreateDmaChannels+0x130>
4001c88c:	e3a01001 	mov	r1, #1
4001c890:	e59f0038 	ldr	r0, [pc, #56]	; 4001c8d0 <CyU3PUsbCreateDmaChannels+0x144>
4001c894:	ebffe255 	bl	400151f0 <CyU3PDmaChannelCacheControl>
4001c898:	e1a04000 	mov	r4, r0
4001c89c:	e3540000 	cmp	r4, #0
4001c8a0:	0a000005 	beq	4001c8bc <CyU3PUsbCreateDmaChannels+0x130>
4001c8a4:	e59f001c 	ldr	r0, [pc, #28]	; 4001c8c8 <CyU3PUsbCreateDmaChannels+0x13c>
4001c8a8:	ebffe4da 	bl	40015c18 <CyU3PDmaChannelDestroy>
4001c8ac:	e59f001c 	ldr	r0, [pc, #28]	; 4001c8d0 <CyU3PUsbCreateDmaChannels+0x144>
4001c8b0:	ebffe4d8 	bl	40015c18 <CyU3PDmaChannelDestroy>
4001c8b4:	e3a0004e 	mov	r0, #78	; 0x4e
4001c8b8:	eaffffce 	b	4001c7f8 <CyU3PUsbCreateDmaChannels+0x6c>
4001c8bc:	e1a00004 	mov	r0, r4
4001c8c0:	eaffffcc 	b	4001c7f8 <CyU3PUsbCreateDmaChannels+0x6c>
4001c8c4:	00003f01 	.word	0x00003f01
4001c8c8:	40031a78 	.word	0x40031a78
4001c8cc:	40030c7c 	.word	0x40030c7c
4001c8d0:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001c8d4 <CyU3PUsbEnableEpInterrupts>:
4001c8d4:	e200300f 	and	r3, r0, #15
4001c8d8:	e3100080 	tst	r0, #128	; 0x80
4001c8dc:	0a00002a 	beq	4001c98c <CyU3PUsbEnableEpInterrupts+0xb8>
4001c8e0:	e59fc150 	ldr	ip, [pc, #336]	; 4001ca38 <CyU3PUsbEnableEpInterrupts+0x164>
4001c8e4:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c8e8:	e3120901 	tst	r2, #16384	; 0x4000
4001c8ec:	0a00000d 	beq	4001c928 <CyU3PUsbEnableEpInterrupts+0x54>
4001c8f0:	e3110001 	tst	r1, #1
4001c8f4:	0a000000 	beq	4001c8fc <CyU3PUsbEnableEpInterrupts+0x28>
4001c8f8:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c8fc:	e3110002 	tst	r1, #2
4001c900:	0a000000 	beq	4001c908 <CyU3PUsbEnableEpInterrupts+0x34>
4001c904:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c908:	e3110004 	tst	r1, #4
4001c90c:	0a000000 	beq	4001c914 <CyU3PUsbEnableEpInterrupts+0x40>
4001c910:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c914:	e3110008 	tst	r1, #8
4001c918:	0a000000 	beq	4001c920 <CyU3PUsbEnableEpInterrupts+0x4c>
4001c91c:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c920:	e59fc110 	ldr	ip, [pc, #272]	; 4001ca38 <CyU3PUsbEnableEpInterrupts+0x164>
4001c924:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c928:	e59fc10c 	ldr	ip, [pc, #268]	; 4001ca3c <CyU3PUsbEnableEpInterrupts+0x168>
4001c92c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c930:	e3120001 	tst	r2, #1
4001c934:	0a00003e 	beq	4001ca34 <CyU3PUsbEnableEpInterrupts+0x160>
4001c938:	e3110001 	tst	r1, #1
4001c93c:	0a000000 	beq	4001c944 <CyU3PUsbEnableEpInterrupts+0x70>
4001c940:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c944:	e3110002 	tst	r1, #2
4001c948:	0a000000 	beq	4001c950 <CyU3PUsbEnableEpInterrupts+0x7c>
4001c94c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c950:	e3110004 	tst	r1, #4
4001c954:	0a000000 	beq	4001c95c <CyU3PUsbEnableEpInterrupts+0x88>
4001c958:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c95c:	e3110010 	tst	r1, #16
4001c960:	0a000000 	beq	4001c968 <CyU3PUsbEnableEpInterrupts+0x94>
4001c964:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c968:	e3110020 	tst	r1, #32
4001c96c:	0a000000 	beq	4001c974 <CyU3PUsbEnableEpInterrupts+0xa0>
4001c970:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c974:	e3110040 	tst	r1, #64	; 0x40
4001c978:	0a000000 	beq	4001c980 <CyU3PUsbEnableEpInterrupts+0xac>
4001c97c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c980:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001ca3c <CyU3PUsbEnableEpInterrupts+0x168>
4001c984:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c988:	ea000029 	b	4001ca34 <CyU3PUsbEnableEpInterrupts+0x160>
4001c98c:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001ca40 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c990:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c994:	e3120901 	tst	r2, #16384	; 0x4000
4001c998:	0a00000d 	beq	4001c9d4 <CyU3PUsbEnableEpInterrupts+0x100>
4001c99c:	e3110001 	tst	r1, #1
4001c9a0:	0a000000 	beq	4001c9a8 <CyU3PUsbEnableEpInterrupts+0xd4>
4001c9a4:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c9a8:	e3110002 	tst	r1, #2
4001c9ac:	0a000000 	beq	4001c9b4 <CyU3PUsbEnableEpInterrupts+0xe0>
4001c9b0:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c9b4:	e3110004 	tst	r1, #4
4001c9b8:	0a000000 	beq	4001c9c0 <CyU3PUsbEnableEpInterrupts+0xec>
4001c9bc:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c9c0:	e3110008 	tst	r1, #8
4001c9c4:	0a000000 	beq	4001c9cc <CyU3PUsbEnableEpInterrupts+0xf8>
4001c9c8:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c9cc:	e59fc06c 	ldr	ip, [pc, #108]	; 4001ca40 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c9d0:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c9d4:	e59fc068 	ldr	ip, [pc, #104]	; 4001ca44 <CyU3PUsbEnableEpInterrupts+0x170>
4001c9d8:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c9dc:	e3120001 	tst	r2, #1
4001c9e0:	0a000013 	beq	4001ca34 <CyU3PUsbEnableEpInterrupts+0x160>
4001c9e4:	e3110001 	tst	r1, #1
4001c9e8:	0a000000 	beq	4001c9f0 <CyU3PUsbEnableEpInterrupts+0x11c>
4001c9ec:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c9f0:	e3110002 	tst	r1, #2
4001c9f4:	0a000000 	beq	4001c9fc <CyU3PUsbEnableEpInterrupts+0x128>
4001c9f8:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c9fc:	e3110004 	tst	r1, #4
4001ca00:	0a000000 	beq	4001ca08 <CyU3PUsbEnableEpInterrupts+0x134>
4001ca04:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001ca08:	e3110010 	tst	r1, #16
4001ca0c:	0a000000 	beq	4001ca14 <CyU3PUsbEnableEpInterrupts+0x140>
4001ca10:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001ca14:	e3110020 	tst	r1, #32
4001ca18:	0a000000 	beq	4001ca20 <CyU3PUsbEnableEpInterrupts+0x14c>
4001ca1c:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001ca20:	e3110040 	tst	r1, #64	; 0x40
4001ca24:	0a000000 	beq	4001ca2c <CyU3PUsbEnableEpInterrupts+0x158>
4001ca28:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001ca2c:	e59fc010 	ldr	ip, [pc, #16]	; 4001ca44 <CyU3PUsbEnableEpInterrupts+0x170>
4001ca30:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ca34:	e12fff1e 	bx	lr
4001ca38:	e0031418 	.word	0xe0031418
4001ca3c:	e0033500 	.word	0xe0033500
4001ca40:	e0031498 	.word	0xe0031498
4001ca44:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001ca48 <CyU3PUsbFlushEp>:
4001ca48:	e92d4070 	push	{r4, r5, r6, lr}
4001ca4c:	e1a04000 	mov	r4, r0
4001ca50:	e204507f 	and	r5, r4, #127	; 0x7f
4001ca54:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cb04 <CyU3PUsbFlushEp+0xbc>
4001ca58:	e5d00008 	ldrb	r0, [r0, #8]
4001ca5c:	e3500000 	cmp	r0, #0
4001ca60:	1a000001 	bne	4001ca6c <CyU3PUsbFlushEp+0x24>
4001ca64:	e3a00042 	mov	r0, #66	; 0x42
4001ca68:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ca6c:	e355000f 	cmp	r5, #15
4001ca70:	da000001 	ble	4001ca7c <CyU3PUsbFlushEp+0x34>
4001ca74:	e3a00040 	mov	r0, #64	; 0x40
4001ca78:	eafffffa 	b	4001ca68 <CyU3PUsbFlushEp+0x20>
4001ca7c:	e3e01000 	mvn	r1, #0
4001ca80:	e59f0080 	ldr	r0, [pc, #128]	; 4001cb08 <CyU3PUsbFlushEp+0xc0>
4001ca84:	ebffb5a6 	bl	4000a124 <_txe_mutex_get>
4001ca88:	e3140080 	tst	r4, #128	; 0x80
4001ca8c:	0a00000c 	beq	4001cac4 <CyU3PUsbFlushEp+0x7c>
4001ca90:	e59f0074 	ldr	r0, [pc, #116]	; 4001cb0c <CyU3PUsbFlushEp+0xc4>
4001ca94:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ca98:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ca9c:	e59f1068 	ldr	r1, [pc, #104]	; 4001cb0c <CyU3PUsbFlushEp+0xc4>
4001caa0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001caa4:	e3a0000a 	mov	r0, #10
4001caa8:	ebffdabb 	bl	4001359c <CyU3PBusyWait>
4001caac:	e59f0058 	ldr	r0, [pc, #88]	; 4001cb0c <CyU3PUsbFlushEp+0xc4>
4001cab0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cab4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cab8:	e59f104c 	ldr	r1, [pc, #76]	; 4001cb0c <CyU3PUsbFlushEp+0xc4>
4001cabc:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cac0:	ea00000b 	b	4001caf4 <CyU3PUsbFlushEp+0xac>
4001cac4:	e59f0044 	ldr	r0, [pc, #68]	; 4001cb10 <CyU3PUsbFlushEp+0xc8>
4001cac8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cacc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cad0:	e59f1038 	ldr	r1, [pc, #56]	; 4001cb10 <CyU3PUsbFlushEp+0xc8>
4001cad4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cad8:	e3a0000a 	mov	r0, #10
4001cadc:	ebffdaae 	bl	4001359c <CyU3PBusyWait>
4001cae0:	e59f0028 	ldr	r0, [pc, #40]	; 4001cb10 <CyU3PUsbFlushEp+0xc8>
4001cae4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cae8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001caec:	e59f101c 	ldr	r1, [pc, #28]	; 4001cb10 <CyU3PUsbFlushEp+0xc8>
4001caf0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001caf4:	e59f000c 	ldr	r0, [pc, #12]	; 4001cb08 <CyU3PUsbFlushEp+0xc0>
4001caf8:	ebffb5be 	bl	4000a1f8 <_txe_mutex_put>
4001cafc:	e3a00000 	mov	r0, #0
4001cb00:	eaffffd8 	b	4001ca68 <CyU3PUsbFlushEp+0x20>
4001cb04:	40031d40 	.word	0x40031d40
4001cb08:	40031ee0 	.word	0x40031ee0
4001cb0c:	e0031c40 	.word	0xe0031c40
4001cb10:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001cb14 <CyU3PUsbGetEP0Data>:
4001cb14:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001cb18:	e1a04000 	mov	r4, r0
4001cb1c:	e1a05001 	mov	r5, r1
4001cb20:	e1a06002 	mov	r6, r2
4001cb24:	e59f8198 	ldr	r8, [pc, #408]	; 4001ccc4 <CyU3PUsbGetEP0Data+0x1b0>
4001cb28:	e59f0198 	ldr	r0, [pc, #408]	; 4001ccc8 <CyU3PUsbGetEP0Data+0x1b4>
4001cb2c:	e5d00008 	ldrb	r0, [r0, #8]
4001cb30:	e3500000 	cmp	r0, #0
4001cb34:	1a000001 	bne	4001cb40 <CyU3PUsbGetEP0Data+0x2c>
4001cb38:	e3a00042 	mov	r0, #66	; 0x42
4001cb3c:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001cb40:	e3550000 	cmp	r5, #0
4001cb44:	1a000001 	bne	4001cb50 <CyU3PUsbGetEP0Data+0x3c>
4001cb48:	e3a00040 	mov	r0, #64	; 0x40
4001cb4c:	eafffffa 	b	4001cb3c <CyU3PUsbGetEP0Data+0x28>
4001cb50:	e3e01000 	mvn	r1, #0
4001cb54:	e59f0170 	ldr	r0, [pc, #368]	; 4001cccc <CyU3PUsbGetEP0Data+0x1b8>
4001cb58:	ebffb571 	bl	4000a124 <_txe_mutex_get>
4001cb5c:	e284000f 	add	r0, r4, #15
4001cb60:	e59f1168 	ldr	r1, [pc, #360]	; 4001ccd0 <CyU3PUsbGetEP0Data+0x1bc>
4001cb64:	e0004001 	and	r4, r0, r1
4001cb68:	e59f0164 	ldr	r0, [pc, #356]	; 4001ccd4 <CyU3PUsbGetEP0Data+0x1c0>
4001cb6c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cb70:	e3c00008 	bic	r0, r0, #8
4001cb74:	e59f1158 	ldr	r1, [pc, #344]	; 4001ccd4 <CyU3PUsbGetEP0Data+0x1c0>
4001cb78:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cb7c:	e59f0144 	ldr	r0, [pc, #324]	; 4001ccc8 <CyU3PUsbGetEP0Data+0x1b4>
4001cb80:	e5900018 	ldr	r0, [r0, #24]
4001cb84:	e3500000 	cmp	r0, #0
4001cb88:	1a000002 	bne	4001cb98 <CyU3PUsbGetEP0Data+0x84>
4001cb8c:	eb00005a 	bl	4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>
4001cb90:	e3500000 	cmp	r0, #0
4001cb94:	0a000008 	beq	4001cbbc <CyU3PUsbGetEP0Data+0xa8>
4001cb98:	e59f0134 	ldr	r0, [pc, #308]	; 4001ccd4 <CyU3PUsbGetEP0Data+0x1c0>
4001cb9c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cba0:	e3800008 	orr	r0, r0, #8
4001cba4:	e59f1128 	ldr	r1, [pc, #296]	; 4001ccd4 <CyU3PUsbGetEP0Data+0x1c0>
4001cba8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cbac:	e59f0118 	ldr	r0, [pc, #280]	; 4001cccc <CyU3PUsbGetEP0Data+0x1b8>
4001cbb0:	ebffb590 	bl	4000a1f8 <_txe_mutex_put>
4001cbb4:	e3a00051 	mov	r0, #81	; 0x51
4001cbb8:	eaffffdf 	b	4001cb3c <CyU3PUsbGetEP0Data+0x28>
4001cbbc:	e59f0110 	ldr	r0, [pc, #272]	; 4001ccd4 <CyU3PUsbGetEP0Data+0x1c0>
4001cbc0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cbc4:	e3800008 	orr	r0, r0, #8
4001cbc8:	e59f1104 	ldr	r1, [pc, #260]	; 4001ccd4 <CyU3PUsbGetEP0Data+0x1c0>
4001cbcc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cbd0:	eb00062a 	bl	4001e480 <GetUsbLinkActive>
4001cbd4:	e1cd40b6 	strh	r4, [sp, #6]
4001cbd8:	e58d5000 	str	r5, [sp]
4001cbdc:	e3a00000 	mov	r0, #0
4001cbe0:	e1cd00b8 	strh	r0, [sp, #8]
4001cbe4:	e1a0100d 	mov	r1, sp
4001cbe8:	e59f00e8 	ldr	r0, [pc, #232]	; 4001ccd8 <CyU3PUsbGetEP0Data+0x1c4>
4001cbec:	ebffe75f 	bl	40016970 <CyU3PDmaChannelSetupRecvBuffer>
4001cbf0:	e20070ff 	and	r7, r0, #255	; 0xff
4001cbf4:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cccc <CyU3PUsbGetEP0Data+0x1b8>
4001cbf8:	ebffb57e 	bl	4000a1f8 <_txe_mutex_put>
4001cbfc:	e3570000 	cmp	r7, #0
4001cc00:	1a00002d 	bne	4001ccbc <CyU3PUsbGetEP0Data+0x1a8>
4001cc04:	e59f00bc 	ldr	r0, [pc, #188]	; 4001ccc8 <CyU3PUsbGetEP0Data+0x1b4>
4001cc08:	e5900014 	ldr	r0, [r0, #20]
4001cc0c:	e3500000 	cmp	r0, #0
4001cc10:	0a000000 	beq	4001cc18 <CyU3PUsbGetEP0Data+0x104>
4001cc14:	ebfffe93 	bl	4001c668 <CyU3PUsbAckSetup>
4001cc18:	ea00000e 	b	4001cc58 <CyU3PUsbGetEP0Data+0x144>
4001cc1c:	e3a02064 	mov	r2, #100	; 0x64
4001cc20:	e1a0100d 	mov	r1, sp
4001cc24:	e59f00ac 	ldr	r0, [pc, #172]	; 4001ccd8 <CyU3PUsbGetEP0Data+0x1c4>
4001cc28:	ebffe8b2 	bl	40016ef8 <CyU3PDmaChannelWaitForRecvBuffer>
4001cc2c:	e20070ff 	and	r7, r0, #255	; 0xff
4001cc30:	e3570045 	cmp	r7, #69	; 0x45
4001cc34:	1a000006 	bne	4001cc54 <CyU3PUsbGetEP0Data+0x140>
4001cc38:	eb00002f 	bl	4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>
4001cc3c:	e3500000 	cmp	r0, #0
4001cc40:	0a000001 	beq	4001cc4c <CyU3PUsbGetEP0Data+0x138>
4001cc44:	e3a00051 	mov	r0, #81	; 0x51
4001cc48:	eaffffbb 	b	4001cb3c <CyU3PUsbGetEP0Data+0x28>
4001cc4c:	e2488064 	sub	r8, r8, #100	; 0x64
4001cc50:	ea000000 	b	4001cc58 <CyU3PUsbGetEP0Data+0x144>
4001cc54:	ea000001 	b	4001cc60 <CyU3PUsbGetEP0Data+0x14c>
4001cc58:	e3580000 	cmp	r8, #0
4001cc5c:	1affffee 	bne	4001cc1c <CyU3PUsbGetEP0Data+0x108>
4001cc60:	e1a00000 	nop			; (mov r0, r0)
4001cc64:	e3570000 	cmp	r7, #0
4001cc68:	0a00000f 	beq	4001ccac <CyU3PUsbGetEP0Data+0x198>
4001cc6c:	e3e01000 	mvn	r1, #0
4001cc70:	e59f0054 	ldr	r0, [pc, #84]	; 4001cccc <CyU3PUsbGetEP0Data+0x1b8>
4001cc74:	ebffb52a 	bl	4000a124 <_txe_mutex_get>
4001cc78:	e3a01001 	mov	r1, #1
4001cc7c:	e3a00000 	mov	r0, #0
4001cc80:	eb000376 	bl	4001da60 <CyU3PUsbSetEpNak>
4001cc84:	e3a00064 	mov	r0, #100	; 0x64
4001cc88:	ebffda43 	bl	4001359c <CyU3PBusyWait>
4001cc8c:	e59f0044 	ldr	r0, [pc, #68]	; 4001ccd8 <CyU3PUsbGetEP0Data+0x1c4>
4001cc90:	ebffe57b 	bl	40016284 <CyU3PDmaChannelReset>
4001cc94:	e3a01000 	mov	r1, #0
4001cc98:	e1a00001 	mov	r0, r1
4001cc9c:	eb00036f 	bl	4001da60 <CyU3PUsbSetEpNak>
4001cca0:	e59f0024 	ldr	r0, [pc, #36]	; 4001cccc <CyU3PUsbGetEP0Data+0x1b8>
4001cca4:	ebffb553 	bl	4000a1f8 <_txe_mutex_put>
4001cca8:	ea000003 	b	4001ccbc <CyU3PUsbGetEP0Data+0x1a8>
4001ccac:	e3560000 	cmp	r6, #0
4001ccb0:	0a000001 	beq	4001ccbc <CyU3PUsbGetEP0Data+0x1a8>
4001ccb4:	e1dd00b4 	ldrh	r0, [sp, #4]
4001ccb8:	e1c600b0 	strh	r0, [r6]
4001ccbc:	e1a00007 	mov	r0, r7
4001ccc0:	eaffff9d 	b	4001cb3c <CyU3PUsbGetEP0Data+0x28>
4001ccc4:	00001388 	.word	0x00001388
4001ccc8:	40031d40 	.word	0x40031d40
4001cccc:	40031ee0 	.word	0x40031ee0
4001ccd0:	0000fff0 	.word	0x0000fff0
4001ccd4:	e0031000 	.word	0xe0031000
4001ccd8:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbGetSpeed:

4001ccdc <CyU3PUsbGetSpeed>:
4001ccdc:	e59f0004 	ldr	r0, [pc, #4]	; 4001cce8 <CyU3PUsbGetSpeed+0xc>
4001cce0:	e5d00009 	ldrb	r0, [r0, #9]
4001cce4:	e12fff1e 	bx	lr
4001cce8:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001ccec <CyU3PUsbHostIsStarted>:
4001ccec:	e59f0004 	ldr	r0, [pc, #4]	; 4001ccf8 <CyU3PUsbHostIsStarted+0xc>
4001ccf0:	e5900000 	ldr	r0, [r0]
4001ccf4:	e12fff1e 	bx	lr
4001ccf8:	40030d78 	.word	0x40030d78

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>:
4001ccfc:	e59f0038 	ldr	r0, [pc, #56]	; 4001cd3c <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cd00:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cd04:	e3500000 	cmp	r0, #0
4001cd08:	1a000007 	bne	4001cd2c <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cd0c:	e59f002c 	ldr	r0, [pc, #44]	; 4001cd40 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cd10:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cd14:	e3100040 	tst	r0, #64	; 0x40
4001cd18:	1a000003 	bne	4001cd2c <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cd1c:	e59f0020 	ldr	r0, [pc, #32]	; 4001cd44 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001cd20:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001cd24:	e3100c02 	tst	r0, #512	; 0x200
4001cd28:	0a000001 	beq	4001cd34 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001cd2c:	e3a00001 	mov	r0, #1
4001cd30:	e12fff1e 	bx	lr
4001cd34:	e3a00000 	mov	r0, #0
4001cd38:	eafffffc 	b	4001cd30 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001cd3c:	40031d40 	.word	0x40031d40
4001cd40:	e0031000 	.word	0xe0031000
4001cd44:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001cd48 <CyU3PUsbLoadBootloaderDescs>:
4001cd48:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001cd4c:	e1a04000 	mov	r4, r0
4001cd50:	e3a06000 	mov	r6, #0
4001cd54:	e5940008 	ldr	r0, [r4, #8]
4001cd58:	e20070ff 	and	r7, r0, #255	; 0xff
4001cd5c:	e1a00000 	nop			; (mov r0, r0)
4001cd60:	ea00000f 	b	4001cda4 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001cd64:	e2843010 	add	r3, r4, #16
4001cd68:	e0833186 	add	r3, r3, r6, lsl #3
4001cd6c:	e5932004 	ldr	r2, [r3, #4]
4001cd70:	e2843010 	add	r3, r4, #16
4001cd74:	e0833186 	add	r3, r3, r6, lsl #3
4001cd78:	e5d31001 	ldrb	r1, [r3, #1]
4001cd7c:	e2843010 	add	r3, r4, #16
4001cd80:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001cd84:	eb0002bf 	bl	4001d888 <CyU3PUsbSetDesc>
4001cd88:	e1a05000 	mov	r5, r0
4001cd8c:	e3550000 	cmp	r5, #0
4001cd90:	0a000001 	beq	4001cd9c <CyU3PUsbLoadBootloaderDescs+0x54>
4001cd94:	e1a00005 	mov	r0, r5
4001cd98:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cd9c:	e2860001 	add	r0, r6, #1
4001cda0:	e20060ff 	and	r6, r0, #255	; 0xff
4001cda4:	e1560007 	cmp	r6, r7
4001cda8:	baffffed 	blt	4001cd64 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cdac:	e3a00000 	mov	r0, #0
4001cdb0:	eafffff8 	b	4001cd98 <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cdb4 <CyU3PUsbMapStream>:
4001cdb4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cdb8:	e1a03000 	mov	r3, r0
4001cdbc:	e203c07f 	and	ip, r3, #127	; 0x7f
4001cdc0:	e59f005c 	ldr	r0, [pc, #92]	; 4001ce24 <CyU3PUsbMapStream+0x70>
4001cdc4:	e5d00008 	ldrb	r0, [r0, #8]
4001cdc8:	e3500000 	cmp	r0, #0
4001cdcc:	1a000001 	bne	4001cdd8 <CyU3PUsbMapStream+0x24>
4001cdd0:	e3a00042 	mov	r0, #66	; 0x42
4001cdd4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cdd8:	e35c000f 	cmp	ip, #15
4001cddc:	da000001 	ble	4001cde8 <CyU3PUsbMapStream+0x34>
4001cde0:	e3a00040 	mov	r0, #64	; 0x40
4001cde4:	eafffffa 	b	4001cdd4 <CyU3PUsbMapStream+0x20>
4001cde8:	e3130080 	tst	r3, #128	; 0x80
4001cdec:	0a000005 	beq	4001ce08 <CyU3PUsbMapStream+0x54>
4001cdf0:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cdf4:	e180080c 	orr	r0, r0, ip, lsl #16
4001cdf8:	e1800002 	orr	r0, r0, r2
4001cdfc:	e59fe024 	ldr	lr, [pc, #36]	; 4001ce28 <CyU3PUsbMapStream+0x74>
4001ce00:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001ce04:	ea000004 	b	4001ce1c <CyU3PUsbMapStream+0x68>
4001ce08:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001ce0c:	e180080c 	orr	r0, r0, ip, lsl #16
4001ce10:	e1800002 	orr	r0, r0, r2
4001ce14:	e59fe010 	ldr	lr, [pc, #16]	; 4001ce2c <CyU3PUsbMapStream+0x78>
4001ce18:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001ce1c:	e3a00000 	mov	r0, #0
4001ce20:	eaffffeb 	b	4001cdd4 <CyU3PUsbMapStream+0x20>
4001ce24:	40031d40 	.word	0x40031d40
4001ce28:	e00335c0 	.word	0xe00335c0
4001ce2c:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001ce30 <CyU3PUsbOtgVbusChangeHandler>:
4001ce30:	e92d4010 	push	{r4, lr}
4001ce34:	e3a04000 	mov	r4, #0
4001ce38:	e59f0094 	ldr	r0, [pc, #148]	; 4001ced4 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ce3c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ce40:	e3500000 	cmp	r0, #0
4001ce44:	0a000005 	beq	4001ce60 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001ce48:	e59f0088 	ldr	r0, [pc, #136]	; 4001ced8 <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001ce4c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ce50:	e59f107c 	ldr	r1, [pc, #124]	; 4001ced4 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ce54:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ce58:	e1100001 	tst	r0, r1
4001ce5c:	0a000008 	beq	4001ce84 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001ce60:	e3a04001 	mov	r4, #1
4001ce64:	e3a00018 	mov	r0, #24
4001ce68:	e59f106c 	ldr	r1, [pc, #108]	; 4001cedc <CyU3PUsbOtgVbusChangeHandler+0xac>
4001ce6c:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ce70:	e1c10000 	bic	r0, r1, r0
4001ce74:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001ce78:	e3c00018 	bic	r0, r0, #24
4001ce7c:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001ce80:	ea000009 	b	4001ceac <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001ce84:	ebfffbb2 	bl	4001bd54 <CyU3POtgIsHostMode>
4001ce88:	e3500000 	cmp	r0, #0
4001ce8c:	0a000006 	beq	4001ceac <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001ce90:	e3a00018 	mov	r0, #24
4001ce94:	e59f1040 	ldr	r1, [pc, #64]	; 4001cedc <CyU3PUsbOtgVbusChangeHandler+0xac>
4001ce98:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ce9c:	e1c10000 	bic	r0, r1, r0
4001cea0:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cea4:	e3800018 	orr	r0, r0, #24
4001cea8:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001ceac:	e59f002c 	ldr	r0, [pc, #44]	; 4001cee0 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001ceb0:	e5900004 	ldr	r0, [r0, #4]
4001ceb4:	e3500000 	cmp	r0, #0
4001ceb8:	0a000004 	beq	4001ced0 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001cebc:	e59f001c 	ldr	r0, [pc, #28]	; 4001cee0 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cec0:	e1a01004 	mov	r1, r4
4001cec4:	e5902004 	ldr	r2, [r0, #4]
4001cec8:	e3a00002 	mov	r0, #2
4001cecc:	e12fff32 	blx	r2
4001ced0:	e8bd8010 	pop	{r4, pc}
4001ced4:	40031d40 	.word	0x40031d40
4001ced8:	e0051000 	.word	0xe0051000
4001cedc:	e0031000 	.word	0xe0031000
4001cee0:	40030d70 	.word	0x40030d70

Disassembly of section i.CyU3PUsbPhyDisable:

4001cee4 <CyU3PUsbPhyDisable>:
4001cee4:	e92d4010 	push	{r4, lr}
4001cee8:	e1a04000 	mov	r4, r0
4001ceec:	e2841003 	add	r1, r4, #3
4001cef0:	e20100ff 	and	r0, r1, #255	; 0xff
4001cef4:	eb000af4 	bl	4001facc <CyU3PUsbAddToEventLog>
4001cef8:	e3a00000 	mov	r0, #0
4001cefc:	e59f1184 	ldr	r1, [pc, #388]	; 4001d088 <CyU3PUsbPhyDisable+0x1a4>
4001cf00:	e5810000 	str	r0, [r1]
4001cf04:	e59f0180 	ldr	r0, [pc, #384]	; 4001d08c <CyU3PUsbPhyDisable+0x1a8>
4001cf08:	ebffb767 	bl	4000acac <_txe_timer_deactivate>
4001cf0c:	e3a00008 	mov	r0, #8
4001cf10:	eb00141f 	bl	40021f94 <CyU3PVicDisableInt>
4001cf14:	e59f0174 	ldr	r0, [pc, #372]	; 4001d090 <CyU3PUsbPhyDisable+0x1ac>
4001cf18:	e5900004 	ldr	r0, [r0, #4]
4001cf1c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001cf20:	e59f1168 	ldr	r1, [pc, #360]	; 4001d090 <CyU3PUsbPhyDisable+0x1ac>
4001cf24:	e5810004 	str	r0, [r1, #4]
4001cf28:	e3e00000 	mvn	r0, #0
4001cf2c:	e0411600 	sub	r1, r1, r0, lsl #12
4001cf30:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cf34:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cf38:	e59f0154 	ldr	r0, [pc, #340]	; 4001d094 <CyU3PUsbPhyDisable+0x1b0>
4001cf3c:	ebffe4d0 	bl	40016284 <CyU3PDmaChannelReset>
4001cf40:	e59f0150 	ldr	r0, [pc, #336]	; 4001d098 <CyU3PUsbPhyDisable+0x1b4>
4001cf44:	ebffe4ce 	bl	40016284 <CyU3PDmaChannelReset>
4001cf48:	e3540000 	cmp	r4, #0
4001cf4c:	0a00002b 	beq	4001d000 <CyU3PUsbPhyDisable+0x11c>
4001cf50:	e3a00001 	mov	r0, #1
4001cf54:	e59f1140 	ldr	r1, [pc, #320]	; 4001d09c <CyU3PUsbPhyDisable+0x1b8>
4001cf58:	e5810060 	str	r0, [r1, #96]	; 0x60
4001cf5c:	ebffb691 	bl	4000a9a8 <_txe_thread_relinquish>
4001cf60:	e3e00000 	mvn	r0, #0
4001cf64:	e59f1134 	ldr	r1, [pc, #308]	; 4001d0a0 <CyU3PUsbPhyDisable+0x1bc>
4001cf68:	e5810004 	str	r0, [r1, #4]
4001cf6c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cf70:	e0010000 	and	r0, r1, r0
4001cf74:	e5900014 	ldr	r0, [r0, #20]
4001cf78:	e59f1124 	ldr	r1, [pc, #292]	; 4001d0a4 <CyU3PUsbPhyDisable+0x1c0>
4001cf7c:	e5810000 	str	r0, [r1]
4001cf80:	e3a00000 	mov	r0, #0
4001cf84:	e59f111c 	ldr	r1, [pc, #284]	; 4001d0a8 <CyU3PUsbPhyDisable+0x1c4>
4001cf88:	e5810000 	str	r0, [r1]
4001cf8c:	e3a01000 	mov	r1, #0
4001cf90:	e59f0114 	ldr	r0, [pc, #276]	; 4001d0ac <CyU3PUsbPhyDisable+0x1c8>
4001cf94:	eb00146d 	bl	40022150 <CyFx3UsbWritePhyReg>
4001cf98:	e3a01002 	mov	r1, #2
4001cf9c:	e1a00001 	mov	r0, r1
4001cfa0:	ebfffd1d 	bl	4001c41c <CyU3PSetUsbCoreClock>
4001cfa4:	e3a00002 	mov	r0, #2
4001cfa8:	ebffd97b 	bl	4001359c <CyU3PBusyWait>
4001cfac:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001cfb0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cfb4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001cfb8:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001cfbc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cfc0:	e3a00002 	mov	r0, #2
4001cfc4:	ebffd974 	bl	4001359c <CyU3PBusyWait>
4001cfc8:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001cfcc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cfd0:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001cfd4:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001cfd8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cfdc:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001cfe0:	e590001c 	ldr	r0, [r0, #28]
4001cfe4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001cfe8:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001cfec:	e581001c 	str	r0, [r1, #28]
4001cff0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d0b4 <CyU3PUsbPhyDisable+0x1d0>
4001cff4:	e5900000 	ldr	r0, [r0]
4001cff8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001cffc:	ea00000e 	b	4001d03c <CyU3PUsbPhyDisable+0x158>
4001d000:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001d004:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d008:	e3800008 	orr	r0, r0, #8
4001d00c:	e59f109c 	ldr	r1, [pc, #156]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001d010:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d014:	e3a01002 	mov	r1, #2
4001d018:	e1a00001 	mov	r0, r1
4001d01c:	ebfffcfe 	bl	4001c41c <CyU3PSetUsbCoreClock>
4001d020:	e3a00002 	mov	r0, #2
4001d024:	ebffd95c 	bl	4001359c <CyU3PBusyWait>
4001d028:	e59f0080 	ldr	r0, [pc, #128]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001d02c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d030:	e2000001 	and	r0, r0, #1
4001d034:	e59f1074 	ldr	r1, [pc, #116]	; 4001d0b0 <CyU3PUsbPhyDisable+0x1cc>
4001d038:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d03c:	e59f0074 	ldr	r0, [pc, #116]	; 4001d0b8 <CyU3PUsbPhyDisable+0x1d4>
4001d040:	e5900000 	ldr	r0, [r0]
4001d044:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001d048:	e59f1068 	ldr	r1, [pc, #104]	; 4001d0b8 <CyU3PUsbPhyDisable+0x1d4>
4001d04c:	e5810000 	str	r0, [r1]
4001d050:	e3a00000 	mov	r0, #0
4001d054:	e59f1040 	ldr	r1, [pc, #64]	; 4001d09c <CyU3PUsbPhyDisable+0x1b8>
4001d058:	e5c10009 	strb	r0, [r1, #9]
4001d05c:	ebfffb6c 	bl	4001be14 <CyU3POtgIsStarted>
4001d060:	e3500000 	cmp	r0, #0
4001d064:	0a000006 	beq	4001d084 <CyU3PUsbPhyDisable+0x1a0>
4001d068:	e3a00064 	mov	r0, #100	; 0x64
4001d06c:	ebffd94a 	bl	4001359c <CyU3PBusyWait>
4001d070:	e59f0040 	ldr	r0, [pc, #64]	; 4001d0b8 <CyU3PUsbPhyDisable+0x1d4>
4001d074:	e5900000 	ldr	r0, [r0]
4001d078:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d07c:	e59f1034 	ldr	r1, [pc, #52]	; 4001d0b8 <CyU3PUsbPhyDisable+0x1d4>
4001d080:	e5810000 	str	r0, [r1]
4001d084:	e8bd8010 	pop	{r4, pc}
4001d088:	40030dcc 	.word	0x40030dcc
4001d08c:	400326a0 	.word	0x400326a0
4001d090:	e0030000 	.word	0xe0030000
4001d094:	40031a78 	.word	0x40031a78
4001d098:	40031b18 	.word	0x40031b18
4001d09c:	40031d40 	.word	0x40031d40
4001d0a0:	e0033000 	.word	0xe0033000
4001d0a4:	40030da0 	.word	0x40030da0
4001d0a8:	40030dd0 	.word	0x40030dd0
4001d0ac:	00001005 	.word	0x00001005
4001d0b0:	e0031000 	.word	0xe0031000
4001d0b4:	40030c74 	.word	0x40030c74
4001d0b8:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d0bc <CyU3PUsbPhyEnable>:
4001d0bc:	e92d4070 	push	{r4, r5, r6, lr}
4001d0c0:	e1a04000 	mov	r4, r0
4001d0c4:	e2841005 	add	r1, r4, #5
4001d0c8:	e20100ff 	and	r0, r1, #255	; 0xff
4001d0cc:	eb000a7e 	bl	4001facc <CyU3PUsbAddToEventLog>
4001d0d0:	e3e00000 	mvn	r0, #0
4001d0d4:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d0d8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d0dc:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d0e0:	e3a00008 	mov	r0, #8
4001d0e4:	eb0013af 	bl	40021fa8 <CyU3PVicEnableInt>
4001d0e8:	e3a00009 	mov	r0, #9
4001d0ec:	eb0013ad 	bl	40021fa8 <CyU3PVicEnableInt>
4001d0f0:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d398 <CyU3PUsbPhyEnable+0x2dc>
4001d0f4:	e5900004 	ldr	r0, [r0, #4]
4001d0f8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d0fc:	e59f1294 	ldr	r1, [pc, #660]	; 4001d398 <CyU3PUsbPhyEnable+0x2dc>
4001d100:	e5810004 	str	r0, [r1, #4]
4001d104:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d108:	e5900000 	ldr	r0, [r0]
4001d10c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d110:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d114:	e5810000 	str	r0, [r1]
4001d118:	e3540000 	cmp	r4, #0
4001d11c:	0a000069 	beq	4001d2c8 <CyU3PUsbPhyEnable+0x20c>
4001d120:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d124:	e5900014 	ldr	r0, [r0, #20]
4001d128:	e59f126c 	ldr	r1, [pc, #620]	; 4001d39c <CyU3PUsbPhyEnable+0x2e0>
4001d12c:	e5810000 	str	r0, [r1]
4001d130:	e3a00000 	mov	r0, #0
4001d134:	e59f1264 	ldr	r1, [pc, #612]	; 4001d3a0 <CyU3PUsbPhyEnable+0x2e4>
4001d138:	e5810000 	str	r0, [r1]
4001d13c:	e3e00000 	mvn	r0, #0
4001d140:	e59f125c 	ldr	r1, [pc, #604]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d144:	e5810004 	str	r0, [r1, #4]
4001d148:	e59f0258 	ldr	r0, [pc, #600]	; 4001d3a8 <CyU3PUsbPhyEnable+0x2ec>
4001d14c:	e5810008 	str	r0, [r1, #8]
4001d150:	e3e00000 	mvn	r0, #0
4001d154:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d158:	e59f024c 	ldr	r0, [pc, #588]	; 4001d3ac <CyU3PUsbPhyEnable+0x2f0>
4001d15c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d160:	e59f0248 	ldr	r0, [pc, #584]	; 4001d3b0 <CyU3PUsbPhyEnable+0x2f4>
4001d164:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d168:	e3500000 	cmp	r0, #0
4001d16c:	0a000003 	beq	4001d180 <CyU3PUsbPhyEnable+0xc4>
4001d170:	e1a00001 	mov	r0, r1
4001d174:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d178:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d17c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d180:	e3a00000 	mov	r0, #0
4001d184:	e59f1224 	ldr	r1, [pc, #548]	; 4001d3b0 <CyU3PUsbPhyEnable+0x2f4>
4001d188:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d18c:	e59f0220 	ldr	r0, [pc, #544]	; 4001d3b4 <CyU3PUsbPhyEnable+0x2f8>
4001d190:	e5900000 	ldr	r0, [r0]
4001d194:	e3500000 	cmp	r0, #0
4001d198:	0a000003 	beq	4001d1ac <CyU3PUsbPhyEnable+0xf0>
4001d19c:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d1a0:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d1a4:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d1a8:	ea000002 	b	4001d1b8 <CyU3PUsbPhyEnable+0xfc>
4001d1ac:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d1b0:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d1b4:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d1b8:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d3b8 <CyU3PUsbPhyEnable+0x2fc>
4001d1bc:	e5900000 	ldr	r0, [r0]
4001d1c0:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d1c4:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d1c8:	eb00139a 	bl	40022038 <CyFx3Usb3LnkSetup>
4001d1cc:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d3bc <CyU3PUsbPhyEnable+0x300>
4001d1d0:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d1d4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d1d8:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d1dc:	e1c10000 	bic	r0, r1, r0
4001d1e0:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d1e4:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d1e8:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d1ec:	e3a00000 	mov	r0, #0
4001d1f0:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d3b0 <CyU3PUsbPhyEnable+0x2f4>
4001d1f4:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d1f8:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d1fc:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d200:	e581001c 	str	r0, [r1, #28]
4001d204:	e3a01002 	mov	r1, #2
4001d208:	e1a00001 	mov	r0, r1
4001d20c:	ebfffc82 	bl	4001c41c <CyU3PSetUsbCoreClock>
4001d210:	eb00135b 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
4001d214:	e1a05000 	mov	r5, r0
4001d218:	e3a00000 	mov	r0, #0
4001d21c:	e59f119c 	ldr	r1, [pc, #412]	; 4001d3c0 <CyU3PUsbPhyEnable+0x304>
4001d220:	e5810000 	str	r0, [r1]
4001d224:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d228:	e59f1174 	ldr	r1, [pc, #372]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d22c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d230:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d234:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d238:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d23c:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d240:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d244:	e3a00064 	mov	r0, #100	; 0x64
4001d248:	ebffd8d3 	bl	4001359c <CyU3PBusyWait>
4001d24c:	e59f0150 	ldr	r0, [pc, #336]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d250:	e5900000 	ldr	r0, [r0]
4001d254:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d258:	e59f1144 	ldr	r1, [pc, #324]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d25c:	e5810000 	str	r0, [r1]
4001d260:	e59f015c 	ldr	r0, [pc, #348]	; 4001d3c4 <CyU3PUsbPhyEnable+0x308>
4001d264:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d268:	e3a01080 	mov	r1, #128	; 0x80
4001d26c:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d270:	eb0013b6 	bl	40022150 <CyFx3UsbWritePhyReg>
4001d274:	e3a01d06 	mov	r1, #384	; 0x180
4001d278:	e59f0148 	ldr	r0, [pc, #328]	; 4001d3c8 <CyU3PUsbPhyEnable+0x30c>
4001d27c:	eb0013b3 	bl	40022150 <CyFx3UsbWritePhyReg>
4001d280:	e3a01080 	mov	r1, #128	; 0x80
4001d284:	e59f0140 	ldr	r0, [pc, #320]	; 4001d3cc <CyU3PUsbPhyEnable+0x310>
4001d288:	eb0013b0 	bl	40022150 <CyFx3UsbWritePhyReg>
4001d28c:	e1a00005 	mov	r0, r5
4001d290:	eb001349 	bl	40021fbc <CyU3PVicEnableInterrupts>
4001d294:	e59f0108 	ldr	r0, [pc, #264]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d298:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d29c:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d2a0:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d3a4 <CyU3PUsbPhyEnable+0x2e8>
4001d2a4:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d2a8:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d2ac:	e581001c 	str	r0, [r1, #28]
4001d2b0:	e3a00064 	mov	r0, #100	; 0x64
4001d2b4:	ebffd8b8 	bl	4001359c <CyU3PBusyWait>
4001d2b8:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d2bc:	e59f110c 	ldr	r1, [pc, #268]	; 4001d3d0 <CyU3PUsbPhyEnable+0x314>
4001d2c0:	e5810008 	str	r0, [r1, #8]
4001d2c4:	ea000031 	b	4001d390 <CyU3PUsbPhyEnable+0x2d4>
4001d2c8:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d3b0 <CyU3PUsbPhyEnable+0x2f4>
4001d2cc:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d2d0:	e3500000 	cmp	r0, #0
4001d2d4:	0a000000 	beq	4001d2dc <CyU3PUsbPhyEnable+0x220>
4001d2d8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d2dc:	e3a00001 	mov	r0, #1
4001d2e0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d3b0 <CyU3PUsbPhyEnable+0x2f4>
4001d2e4:	e5c10009 	strb	r0, [r1, #9]
4001d2e8:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d2ec:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d3d4 <CyU3PUsbPhyEnable+0x318>
4001d2f0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d2f4:	e3a00000 	mov	r0, #0
4001d2f8:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d3b0 <CyU3PUsbPhyEnable+0x2f4>
4001d2fc:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d300:	e59f008c 	ldr	r0, [pc, #140]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d304:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d308:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d30c:	e59f1080 	ldr	r1, [pc, #128]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d310:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d314:	e1a00001 	mov	r0, r1
4001d318:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d31c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d320:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d324:	e3a00002 	mov	r0, #2
4001d328:	ebffd89b 	bl	4001359c <CyU3PBusyWait>
4001d32c:	e59f0060 	ldr	r0, [pc, #96]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d330:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d334:	e2000001 	and	r0, r0, #1
4001d338:	e59f1054 	ldr	r1, [pc, #84]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d33c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d340:	e1a00001 	mov	r0, r1
4001d344:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d348:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d34c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d350:	e3a00064 	mov	r0, #100	; 0x64
4001d354:	ebffd890 	bl	4001359c <CyU3PBusyWait>
4001d358:	eb00132a 	bl	40022008 <CyFx3Usb2PhySetup>
4001d35c:	e59f0074 	ldr	r0, [pc, #116]	; 4001d3d8 <CyU3PUsbPhyEnable+0x31c>
4001d360:	e59f102c 	ldr	r1, [pc, #44]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d364:	e5810008 	str	r0, [r1, #8]
4001d368:	e3a00050 	mov	r0, #80	; 0x50
4001d36c:	ebffd88a 	bl	4001359c <CyU3PBusyWait>
4001d370:	e3a01000 	mov	r1, #0
4001d374:	e3a00002 	mov	r0, #2
4001d378:	ebfffc27 	bl	4001c41c <CyU3PSetUsbCoreClock>
4001d37c:	e59f0010 	ldr	r0, [pc, #16]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d380:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d384:	e3c00008 	bic	r0, r0, #8
4001d388:	e59f1004 	ldr	r1, [pc, #4]	; 4001d394 <CyU3PUsbPhyEnable+0x2d8>
4001d38c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d390:	eaffffd0 	b	4001d2d8 <CyU3PUsbPhyEnable+0x21c>
4001d394:	e0031000 	.word	0xe0031000
4001d398:	e0030000 	.word	0xe0030000
4001d39c:	40030da0 	.word	0x40030da0
4001d3a0:	40030dd0 	.word	0x40030dd0
4001d3a4:	e0033000 	.word	0xe0033000
4001d3a8:	00038081 	.word	0x00038081
4001d3ac:	00004a3d 	.word	0x00004a3d
4001d3b0:	40031d40 	.word	0x40031d40
4001d3b4:	40030d5c 	.word	0x40030d5c
4001d3b8:	40030da8 	.word	0x40030da8
4001d3bc:	00000908 	.word	0x00000908
4001d3c0:	40030d90 	.word	0x40030d90
4001d3c4:	00310418 	.word	0x00310418
4001d3c8:	00001006 	.word	0x00001006
4001d3cc:	00001024 	.word	0x00001024
4001d3d0:	e0052000 	.word	0xe0052000
4001d3d4:	e0032000 	.word	0xe0032000
4001d3d8:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d3dc <CyU3PUsbPowerOn>:
4001d3dc:	e92d4010 	push	{r4, lr}
4001d3e0:	eb00133a 	bl	400220d0 <CyFx3UsbPowerOn>
4001d3e4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d3e8 <CyU3PUsbResetEp>:
4001d3e8:	e92d4070 	push	{r4, r5, r6, lr}
4001d3ec:	e1a04000 	mov	r4, r0
4001d3f0:	e204507f 	and	r5, r4, #127	; 0x7f
4001d3f4:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d4b8 <CyU3PUsbResetEp+0xd0>
4001d3f8:	e5d00008 	ldrb	r0, [r0, #8]
4001d3fc:	e3500000 	cmp	r0, #0
4001d400:	1a000001 	bne	4001d40c <CyU3PUsbResetEp+0x24>
4001d404:	e3a00042 	mov	r0, #66	; 0x42
4001d408:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d40c:	e355000f 	cmp	r5, #15
4001d410:	da000001 	ble	4001d41c <CyU3PUsbResetEp+0x34>
4001d414:	e3a00040 	mov	r0, #64	; 0x40
4001d418:	eafffffa 	b	4001d408 <CyU3PUsbResetEp+0x20>
4001d41c:	e3e01000 	mvn	r1, #0
4001d420:	e59f0094 	ldr	r0, [pc, #148]	; 4001d4bc <CyU3PUsbResetEp+0xd4>
4001d424:	ebffb33e 	bl	4000a124 <_txe_mutex_get>
4001d428:	ebfffe2b 	bl	4001ccdc <CyU3PUsbGetSpeed>
4001d42c:	e3500003 	cmp	r0, #3
4001d430:	1a00001c 	bne	4001d4a8 <CyU3PUsbResetEp+0xc0>
4001d434:	e59f0084 	ldr	r0, [pc, #132]	; 4001d4c0 <CyU3PUsbResetEp+0xd8>
4001d438:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d43c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d440:	e59f1078 	ldr	r1, [pc, #120]	; 4001d4c0 <CyU3PUsbResetEp+0xd8>
4001d444:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d448:	e3140080 	tst	r4, #128	; 0x80
4001d44c:	0a00000a 	beq	4001d47c <CyU3PUsbResetEp+0x94>
4001d450:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d454:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d458:	e3866011 	orr	r6, r6, #17
4001d45c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d460:	e3a00002 	mov	r0, #2
4001d464:	ebffd84c 	bl	4001359c <CyU3PBusyWait>
4001d468:	e3c60010 	bic	r0, r6, #16
4001d46c:	e3806001 	orr	r6, r0, #1
4001d470:	e59f004c 	ldr	r0, [pc, #76]	; 4001d4c4 <CyU3PUsbResetEp+0xdc>
4001d474:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d478:	ea00000a 	b	4001d4a8 <CyU3PUsbResetEp+0xc0>
4001d47c:	e59f0044 	ldr	r0, [pc, #68]	; 4001d4c8 <CyU3PUsbResetEp+0xe0>
4001d480:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d484:	e3806011 	orr	r6, r0, #17
4001d488:	e59f0038 	ldr	r0, [pc, #56]	; 4001d4c8 <CyU3PUsbResetEp+0xe0>
4001d48c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d490:	e3a00002 	mov	r0, #2
4001d494:	ebffd840 	bl	4001359c <CyU3PBusyWait>
4001d498:	e3c60010 	bic	r0, r6, #16
4001d49c:	e3806001 	orr	r6, r0, #1
4001d4a0:	e59f0020 	ldr	r0, [pc, #32]	; 4001d4c8 <CyU3PUsbResetEp+0xe0>
4001d4a4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d4a8:	e59f000c 	ldr	r0, [pc, #12]	; 4001d4bc <CyU3PUsbResetEp+0xd4>
4001d4ac:	ebffb351 	bl	4000a1f8 <_txe_mutex_put>
4001d4b0:	e3a00000 	mov	r0, #0
4001d4b4:	eaffffd3 	b	4001d408 <CyU3PUsbResetEp+0x20>
4001d4b8:	40031d40 	.word	0x40031d40
4001d4bc:	40031ee0 	.word	0x40031ee0
4001d4c0:	e0033000 	.word	0xe0033000
4001d4c4:	e0033500 	.word	0xe0033500
4001d4c8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d4cc <CyU3PUsbSendEP0Data>:
4001d4cc:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d4d0:	e1a04000 	mov	r4, r0
4001d4d4:	e1a05001 	mov	r5, r1
4001d4d8:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d68c <CyU3PUsbSendEP0Data+0x1c0>
4001d4dc:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d690 <CyU3PUsbSendEP0Data+0x1c4>
4001d4e0:	e5d00008 	ldrb	r0, [r0, #8]
4001d4e4:	e3500000 	cmp	r0, #0
4001d4e8:	1a000001 	bne	4001d4f4 <CyU3PUsbSendEP0Data+0x28>
4001d4ec:	e3a00042 	mov	r0, #66	; 0x42
4001d4f0:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d4f4:	e3550000 	cmp	r5, #0
4001d4f8:	1a000001 	bne	4001d504 <CyU3PUsbSendEP0Data+0x38>
4001d4fc:	e3a00040 	mov	r0, #64	; 0x40
4001d500:	eafffffa 	b	4001d4f0 <CyU3PUsbSendEP0Data+0x24>
4001d504:	e3e01000 	mvn	r1, #0
4001d508:	e59f0184 	ldr	r0, [pc, #388]	; 4001d694 <CyU3PUsbSendEP0Data+0x1c8>
4001d50c:	ebffb304 	bl	4000a124 <_txe_mutex_get>
4001d510:	e59f0180 	ldr	r0, [pc, #384]	; 4001d698 <CyU3PUsbSendEP0Data+0x1cc>
4001d514:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d518:	e3c00008 	bic	r0, r0, #8
4001d51c:	e59f1174 	ldr	r1, [pc, #372]	; 4001d698 <CyU3PUsbSendEP0Data+0x1cc>
4001d520:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d524:	e59f0164 	ldr	r0, [pc, #356]	; 4001d690 <CyU3PUsbSendEP0Data+0x1c4>
4001d528:	e5900018 	ldr	r0, [r0, #24]
4001d52c:	e3500000 	cmp	r0, #0
4001d530:	1a000002 	bne	4001d540 <CyU3PUsbSendEP0Data+0x74>
4001d534:	ebfffdf0 	bl	4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>
4001d538:	e3500000 	cmp	r0, #0
4001d53c:	0a000008 	beq	4001d564 <CyU3PUsbSendEP0Data+0x98>
4001d540:	e59f0150 	ldr	r0, [pc, #336]	; 4001d698 <CyU3PUsbSendEP0Data+0x1cc>
4001d544:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d548:	e3800008 	orr	r0, r0, #8
4001d54c:	e59f1144 	ldr	r1, [pc, #324]	; 4001d698 <CyU3PUsbSendEP0Data+0x1cc>
4001d550:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d554:	e59f0138 	ldr	r0, [pc, #312]	; 4001d694 <CyU3PUsbSendEP0Data+0x1c8>
4001d558:	ebffb326 	bl	4000a1f8 <_txe_mutex_put>
4001d55c:	e3a00000 	mov	r0, #0
4001d560:	eaffffe2 	b	4001d4f0 <CyU3PUsbSendEP0Data+0x24>
4001d564:	e59f012c 	ldr	r0, [pc, #300]	; 4001d698 <CyU3PUsbSendEP0Data+0x1cc>
4001d568:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d56c:	e3800008 	orr	r0, r0, #8
4001d570:	e59f1120 	ldr	r1, [pc, #288]	; 4001d698 <CyU3PUsbSendEP0Data+0x1cc>
4001d574:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d578:	e1a00001 	mov	r0, r1
4001d57c:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d580:	e1500004 	cmp	r0, r4
4001d584:	2a000003 	bcs	4001d598 <CyU3PUsbSendEP0Data+0xcc>
4001d588:	e1a00001 	mov	r0, r1
4001d58c:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d590:	e1a04800 	lsl	r4, r0, #16
4001d594:	e1a04824 	lsr	r4, r4, #16
4001d598:	eb0003b8 	bl	4001e480 <GetUsbLinkActive>
4001d59c:	e1cd40b4 	strh	r4, [sp, #4]
4001d5a0:	e284000f 	add	r0, r4, #15
4001d5a4:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d69c <CyU3PUsbSendEP0Data+0x1d0>
4001d5a8:	e0000001 	and	r0, r0, r1
4001d5ac:	e1cd00b6 	strh	r0, [sp, #6]
4001d5b0:	e58d5000 	str	r5, [sp]
4001d5b4:	e3a00000 	mov	r0, #0
4001d5b8:	e1cd00b8 	strh	r0, [sp, #8]
4001d5bc:	e1a0100d 	mov	r1, sp
4001d5c0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d6a0 <CyU3PUsbSendEP0Data+0x1d4>
4001d5c4:	ebffe571 	bl	40016b90 <CyU3PDmaChannelSetupSendBuffer>
4001d5c8:	e20060ff 	and	r6, r0, #255	; 0xff
4001d5cc:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d694 <CyU3PUsbSendEP0Data+0x1c8>
4001d5d0:	ebffb308 	bl	4000a1f8 <_txe_mutex_put>
4001d5d4:	e3560000 	cmp	r6, #0
4001d5d8:	1a000029 	bne	4001d684 <CyU3PUsbSendEP0Data+0x1b8>
4001d5dc:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d690 <CyU3PUsbSendEP0Data+0x1c4>
4001d5e0:	e5900014 	ldr	r0, [r0, #20]
4001d5e4:	e3500000 	cmp	r0, #0
4001d5e8:	0a000000 	beq	4001d5f0 <CyU3PUsbSendEP0Data+0x124>
4001d5ec:	ebfffc1d 	bl	4001c668 <CyU3PUsbAckSetup>
4001d5f0:	ea00000d 	b	4001d62c <CyU3PUsbSendEP0Data+0x160>
4001d5f4:	e3a01064 	mov	r1, #100	; 0x64
4001d5f8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d6a0 <CyU3PUsbSendEP0Data+0x1d4>
4001d5fc:	ebffe5f1 	bl	40016dc8 <CyU3PDmaChannelWaitForCompletion>
4001d600:	e20060ff 	and	r6, r0, #255	; 0xff
4001d604:	e3560045 	cmp	r6, #69	; 0x45
4001d608:	1a000006 	bne	4001d628 <CyU3PUsbSendEP0Data+0x15c>
4001d60c:	ebfffdba 	bl	4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>
4001d610:	e3500000 	cmp	r0, #0
4001d614:	0a000001 	beq	4001d620 <CyU3PUsbSendEP0Data+0x154>
4001d618:	e3a00000 	mov	r0, #0
4001d61c:	eaffffb3 	b	4001d4f0 <CyU3PUsbSendEP0Data+0x24>
4001d620:	e2477064 	sub	r7, r7, #100	; 0x64
4001d624:	ea000000 	b	4001d62c <CyU3PUsbSendEP0Data+0x160>
4001d628:	ea000001 	b	4001d634 <CyU3PUsbSendEP0Data+0x168>
4001d62c:	e3570000 	cmp	r7, #0
4001d630:	1affffef 	bne	4001d5f4 <CyU3PUsbSendEP0Data+0x128>
4001d634:	e1a00000 	nop			; (mov r0, r0)
4001d638:	e3560000 	cmp	r6, #0
4001d63c:	0a000010 	beq	4001d684 <CyU3PUsbSendEP0Data+0x1b8>
4001d640:	e3e01000 	mvn	r1, #0
4001d644:	e59f0048 	ldr	r0, [pc, #72]	; 4001d694 <CyU3PUsbSendEP0Data+0x1c8>
4001d648:	ebffb2b5 	bl	4000a124 <_txe_mutex_get>
4001d64c:	e3a01001 	mov	r1, #1
4001d650:	e3a00080 	mov	r0, #128	; 0x80
4001d654:	eb000101 	bl	4001da60 <CyU3PUsbSetEpNak>
4001d658:	e3a00064 	mov	r0, #100	; 0x64
4001d65c:	ebffd7ce 	bl	4001359c <CyU3PBusyWait>
4001d660:	e59f0038 	ldr	r0, [pc, #56]	; 4001d6a0 <CyU3PUsbSendEP0Data+0x1d4>
4001d664:	ebffe306 	bl	40016284 <CyU3PDmaChannelReset>
4001d668:	e3a00080 	mov	r0, #128	; 0x80
4001d66c:	ebfffcf5 	bl	4001ca48 <CyU3PUsbFlushEp>
4001d670:	e3a01000 	mov	r1, #0
4001d674:	e3a00080 	mov	r0, #128	; 0x80
4001d678:	eb0000f8 	bl	4001da60 <CyU3PUsbSetEpNak>
4001d67c:	e59f0010 	ldr	r0, [pc, #16]	; 4001d694 <CyU3PUsbSendEP0Data+0x1c8>
4001d680:	ebffb2dc 	bl	4000a1f8 <_txe_mutex_put>
4001d684:	e1a00006 	mov	r0, r6
4001d688:	eaffff98 	b	4001d4f0 <CyU3PUsbSendEP0Data+0x24>
4001d68c:	00001388 	.word	0x00001388
4001d690:	40031d40 	.word	0x40031d40
4001d694:	40031ee0 	.word	0x40031ee0
4001d698:	e0031000 	.word	0xe0031000
4001d69c:	0000fff0 	.word	0x0000fff0
4001d6a0:	40031a78 	.word	0x40031a78

Disassembly of section i.CyU3PUsbSendErdy:

4001d6a4 <CyU3PUsbSendErdy>:
4001d6a4:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d6a8:	e1a04000 	mov	r4, r0
4001d6ac:	e1a05001 	mov	r5, r1
4001d6b0:	e1a0000d 	mov	r0, sp
4001d6b4:	e3a02000 	mov	r2, #0
4001d6b8:	e1a03002 	mov	r3, r2
4001d6bc:	e1a06002 	mov	r6, r2
4001d6c0:	e880004c 	stm	r0, {r2, r3, r6}
4001d6c4:	e204600f 	and	r6, r4, #15
4001d6c8:	e2047080 	and	r7, r4, #128	; 0x80
4001d6cc:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d788 <CyU3PUsbSendErdy+0xe4>
4001d6d0:	e5d00008 	ldrb	r0, [r0, #8]
4001d6d4:	e3500000 	cmp	r0, #0
4001d6d8:	1a000001 	bne	4001d6e4 <CyU3PUsbSendErdy+0x40>
4001d6dc:	e3a00042 	mov	r0, #66	; 0x42
4001d6e0:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d6e4:	ebfffd7c 	bl	4001ccdc <CyU3PUsbGetSpeed>
4001d6e8:	e3500003 	cmp	r0, #3
4001d6ec:	1a000004 	bne	4001d704 <CyU3PUsbSendErdy+0x60>
4001d6f0:	e59f0094 	ldr	r0, [pc, #148]	; 4001d78c <CyU3PUsbSendErdy+0xe8>
4001d6f4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d6f8:	e200003f 	and	r0, r0, #63	; 0x3f
4001d6fc:	e3500010 	cmp	r0, #16
4001d700:	0a000001 	beq	4001d70c <CyU3PUsbSendErdy+0x68>
4001d704:	e3a000ff 	mov	r0, #255	; 0xff
4001d708:	eafffff4 	b	4001d6e0 <CyU3PUsbSendErdy+0x3c>
4001d70c:	e204007f 	and	r0, r4, #127	; 0x7f
4001d710:	e350000f 	cmp	r0, #15
4001d714:	da000001 	ble	4001d720 <CyU3PUsbSendErdy+0x7c>
4001d718:	e3a00040 	mov	r0, #64	; 0x40
4001d71c:	eaffffef 	b	4001d6e0 <CyU3PUsbSendErdy+0x3c>
4001d720:	e59f0064 	ldr	r0, [pc, #100]	; 4001d78c <CyU3PUsbSendErdy+0xe8>
4001d724:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d728:	e3a01004 	mov	r1, #4
4001d72c:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d730:	e58d0000 	str	r0, [sp]
4001d734:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d738:	e3800003 	orr	r0, r0, #3
4001d73c:	e1800406 	orr	r0, r0, r6, lsl #8
4001d740:	e58d0004 	str	r0, [sp, #4]
4001d744:	e3570000 	cmp	r7, #0
4001d748:	0a000005 	beq	4001d764 <CyU3PUsbSendErdy+0xc0>
4001d74c:	e59f003c 	ldr	r0, [pc, #60]	; 4001d790 <CyU3PUsbSendErdy+0xec>
4001d750:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d754:	e3100008 	tst	r0, #8
4001d758:	0a000006 	beq	4001d778 <CyU3PUsbSendErdy+0xd4>
4001d75c:	e58d5008 	str	r5, [sp, #8]
4001d760:	ea000004 	b	4001d778 <CyU3PUsbSendErdy+0xd4>
4001d764:	e59f0028 	ldr	r0, [pc, #40]	; 4001d794 <CyU3PUsbSendErdy+0xf0>
4001d768:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d76c:	e3100008 	tst	r0, #8
4001d770:	0a000000 	beq	4001d778 <CyU3PUsbSendErdy+0xd4>
4001d774:	e58d5008 	str	r5, [sp, #8]
4001d778:	e1a0000d 	mov	r0, sp
4001d77c:	eb00123c 	bl	40022074 <CyFx3Usb3SendTP>
4001d780:	e3a00000 	mov	r0, #0
4001d784:	eaffffd5 	b	4001d6e0 <CyU3PUsbSendErdy+0x3c>
4001d788:	40031d40 	.word	0x40031d40
4001d78c:	e0033000 	.word	0xe0033000
4001d790:	e0033500 	.word	0xe0033500
4001d794:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d798 <CyU3PUsbSendNrdy>:
4001d798:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d79c:	e1a04000 	mov	r4, r0
4001d7a0:	e1a05001 	mov	r5, r1
4001d7a4:	e1a0000d 	mov	r0, sp
4001d7a8:	e3a02000 	mov	r2, #0
4001d7ac:	e1a03002 	mov	r3, r2
4001d7b0:	e1a06002 	mov	r6, r2
4001d7b4:	e880004c 	stm	r0, {r2, r3, r6}
4001d7b8:	e204600f 	and	r6, r4, #15
4001d7bc:	e2047080 	and	r7, r4, #128	; 0x80
4001d7c0:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d878 <CyU3PUsbSendNrdy+0xe0>
4001d7c4:	e5d00008 	ldrb	r0, [r0, #8]
4001d7c8:	e3500000 	cmp	r0, #0
4001d7cc:	1a000001 	bne	4001d7d8 <CyU3PUsbSendNrdy+0x40>
4001d7d0:	e3a00042 	mov	r0, #66	; 0x42
4001d7d4:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d7d8:	ebfffd3f 	bl	4001ccdc <CyU3PUsbGetSpeed>
4001d7dc:	e3500003 	cmp	r0, #3
4001d7e0:	1a000004 	bne	4001d7f8 <CyU3PUsbSendNrdy+0x60>
4001d7e4:	e59f0090 	ldr	r0, [pc, #144]	; 4001d87c <CyU3PUsbSendNrdy+0xe4>
4001d7e8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d7ec:	e200003f 	and	r0, r0, #63	; 0x3f
4001d7f0:	e3500010 	cmp	r0, #16
4001d7f4:	0a000001 	beq	4001d800 <CyU3PUsbSendNrdy+0x68>
4001d7f8:	e3a000ff 	mov	r0, #255	; 0xff
4001d7fc:	eafffff4 	b	4001d7d4 <CyU3PUsbSendNrdy+0x3c>
4001d800:	e204007f 	and	r0, r4, #127	; 0x7f
4001d804:	e350000f 	cmp	r0, #15
4001d808:	da000001 	ble	4001d814 <CyU3PUsbSendNrdy+0x7c>
4001d80c:	e3a00040 	mov	r0, #64	; 0x40
4001d810:	eaffffef 	b	4001d7d4 <CyU3PUsbSendNrdy+0x3c>
4001d814:	e59f0060 	ldr	r0, [pc, #96]	; 4001d87c <CyU3PUsbSendNrdy+0xe4>
4001d818:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d81c:	e3a01004 	mov	r1, #4
4001d820:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d824:	e58d0000 	str	r0, [sp]
4001d828:	e3870002 	orr	r0, r7, #2
4001d82c:	e1800406 	orr	r0, r0, r6, lsl #8
4001d830:	e58d0004 	str	r0, [sp, #4]
4001d834:	e3570000 	cmp	r7, #0
4001d838:	0a000005 	beq	4001d854 <CyU3PUsbSendNrdy+0xbc>
4001d83c:	e59f003c 	ldr	r0, [pc, #60]	; 4001d880 <CyU3PUsbSendNrdy+0xe8>
4001d840:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d844:	e3100008 	tst	r0, #8
4001d848:	0a000006 	beq	4001d868 <CyU3PUsbSendNrdy+0xd0>
4001d84c:	e58d5008 	str	r5, [sp, #8]
4001d850:	ea000004 	b	4001d868 <CyU3PUsbSendNrdy+0xd0>
4001d854:	e59f0028 	ldr	r0, [pc, #40]	; 4001d884 <CyU3PUsbSendNrdy+0xec>
4001d858:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d85c:	e3100008 	tst	r0, #8
4001d860:	0a000000 	beq	4001d868 <CyU3PUsbSendNrdy+0xd0>
4001d864:	e58d5008 	str	r5, [sp, #8]
4001d868:	e1a0000d 	mov	r0, sp
4001d86c:	eb001200 	bl	40022074 <CyFx3Usb3SendTP>
4001d870:	e3a00000 	mov	r0, #0
4001d874:	eaffffd6 	b	4001d7d4 <CyU3PUsbSendNrdy+0x3c>
4001d878:	40031d40 	.word	0x40031d40
4001d87c:	e0033000 	.word	0xe0033000
4001d880:	e0033500 	.word	0xe0033500
4001d884:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d888 <CyU3PUsbSetDesc>:
4001d888:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d88c:	e1a03000 	mov	r3, r0
4001d890:	e3a0c000 	mov	ip, #0
4001d894:	e59f01b8 	ldr	r0, [pc, #440]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d898:	e5d00008 	ldrb	r0, [r0, #8]
4001d89c:	e3500000 	cmp	r0, #0
4001d8a0:	1a000001 	bne	4001d8ac <CyU3PUsbSetDesc+0x24>
4001d8a4:	e3a00042 	mov	r0, #66	; 0x42
4001d8a8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d8ac:	e3520000 	cmp	r2, #0
4001d8b0:	1a000001 	bne	4001d8bc <CyU3PUsbSetDesc+0x34>
4001d8b4:	e3a00040 	mov	r0, #64	; 0x40
4001d8b8:	eafffffa 	b	4001d8a8 <CyU3PUsbSetDesc+0x20>
4001d8bc:	e3530009 	cmp	r3, #9
4001d8c0:	308ff103 	addcc	pc, pc, r3, lsl #2
4001d8c4:	ea00004d 	b	4001da00 <CyU3PUsbSetDesc+0x178>
4001d8c8:	ea000007 	b	4001d8ec <CyU3PUsbSetDesc+0x64>
4001d8cc:	ea00000a 	b	4001d8fc <CyU3PUsbSetDesc+0x74>
4001d8d0:	ea000011 	b	4001d91c <CyU3PUsbSetDesc+0x94>
4001d8d4:	ea000022 	b	4001d964 <CyU3PUsbSetDesc+0xdc>
4001d8d8:	ea00002f 	b	4001d99c <CyU3PUsbSetDesc+0x114>
4001d8dc:	ea00003c 	b	4001d9d4 <CyU3PUsbSetDesc+0x14c>
4001d8e0:	ea000011 	b	4001d92c <CyU3PUsbSetDesc+0xa4>
4001d8e4:	ea000008 	b	4001d90c <CyU3PUsbSetDesc+0x84>
4001d8e8:	ea000040 	b	4001d9f0 <CyU3PUsbSetDesc+0x168>
4001d8ec:	e1a00000 	nop			; (mov r0, r0)
4001d8f0:	e59f0160 	ldr	r0, [pc, #352]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d8f4:	e5802004 	str	r2, [r0, #4]
4001d8f8:	ea000043 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d8fc:	e1a00000 	nop			; (mov r0, r0)
4001d900:	e59f0150 	ldr	r0, [pc, #336]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d904:	e5802000 	str	r2, [r0]
4001d908:	ea00003f 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d90c:	e1a00000 	nop			; (mov r0, r0)
4001d910:	e59f0140 	ldr	r0, [pc, #320]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d914:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001d918:	ea00003b 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d91c:	e1a00000 	nop			; (mov r0, r0)
4001d920:	e59f0130 	ldr	r0, [pc, #304]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d924:	e5802008 	str	r2, [r0, #8]
4001d928:	ea000037 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d92c:	e1a00000 	nop			; (mov r0, r0)
4001d930:	e59f0120 	ldr	r0, [pc, #288]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d934:	e580201c 	str	r2, [r0, #28]
4001d938:	e5d20007 	ldrb	r0, [r2, #7]
4001d93c:	e3100040 	tst	r0, #64	; 0x40
4001d940:	0a000003 	beq	4001d954 <CyU3PUsbSetDesc+0xcc>
4001d944:	e3a00001 	mov	r0, #1
4001d948:	e59fe104 	ldr	lr, [pc, #260]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d94c:	e5ce0006 	strb	r0, [lr, #6]
4001d950:	ea000002 	b	4001d960 <CyU3PUsbSetDesc+0xd8>
4001d954:	e3a00000 	mov	r0, #0
4001d958:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d95c:	e5ce0006 	strb	r0, [lr, #6]
4001d960:	ea000029 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d964:	e1a00000 	nop			; (mov r0, r0)
4001d968:	e59f00e8 	ldr	r0, [pc, #232]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d96c:	e5802018 	str	r2, [r0, #24]
4001d970:	e5d20007 	ldrb	r0, [r2, #7]
4001d974:	e3100040 	tst	r0, #64	; 0x40
4001d978:	0a000003 	beq	4001d98c <CyU3PUsbSetDesc+0x104>
4001d97c:	e3a00001 	mov	r0, #1
4001d980:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d984:	e5ce0006 	strb	r0, [lr, #6]
4001d988:	ea000002 	b	4001d998 <CyU3PUsbSetDesc+0x110>
4001d98c:	e3a00000 	mov	r0, #0
4001d990:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d994:	e5ce0006 	strb	r0, [lr, #6]
4001d998:	ea00001b 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d99c:	e1a00000 	nop			; (mov r0, r0)
4001d9a0:	e59f00b0 	ldr	r0, [pc, #176]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d9a4:	e5802014 	str	r2, [r0, #20]
4001d9a8:	e5d20007 	ldrb	r0, [r2, #7]
4001d9ac:	e3100040 	tst	r0, #64	; 0x40
4001d9b0:	0a000003 	beq	4001d9c4 <CyU3PUsbSetDesc+0x13c>
4001d9b4:	e3a00001 	mov	r0, #1
4001d9b8:	e59fe094 	ldr	lr, [pc, #148]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d9bc:	e5ce0006 	strb	r0, [lr, #6]
4001d9c0:	ea000002 	b	4001d9d0 <CyU3PUsbSetDesc+0x148>
4001d9c4:	e3a00000 	mov	r0, #0
4001d9c8:	e59fe084 	ldr	lr, [pc, #132]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001d9cc:	e5ce0006 	strb	r0, [lr, #6]
4001d9d0:	ea00000d 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d9d4:	e1a00000 	nop			; (mov r0, r0)
4001d9d8:	e3510010 	cmp	r1, #16
4001d9dc:	da000000 	ble	4001d9e4 <CyU3PUsbSetDesc+0x15c>
4001d9e0:	e3a0c04b 	mov	ip, #75	; 0x4b
4001d9e4:	e59f0070 	ldr	r0, [pc, #112]	; 4001da5c <CyU3PUsbSetDesc+0x1d4>
4001d9e8:	e7802101 	str	r2, [r0, r1, lsl #2]
4001d9ec:	ea000006 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001d9f0:	e1a00000 	nop			; (mov r0, r0)
4001d9f4:	e59f005c 	ldr	r0, [pc, #92]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001d9f8:	e5802070 	str	r2, [r0, #112]	; 0x70
4001d9fc:	ea000002 	b	4001da0c <CyU3PUsbSetDesc+0x184>
4001da00:	e1a00000 	nop			; (mov r0, r0)
4001da04:	e3a00050 	mov	r0, #80	; 0x50
4001da08:	eaffffa6 	b	4001d8a8 <CyU3PUsbSetDesc+0x20>
4001da0c:	e1a00000 	nop			; (mov r0, r0)
4001da10:	e59f0040 	ldr	r0, [pc, #64]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001da14:	e5900000 	ldr	r0, [r0]
4001da18:	e3500000 	cmp	r0, #0
4001da1c:	0a00000a 	beq	4001da4c <CyU3PUsbSetDesc+0x1c4>
4001da20:	e59f0030 	ldr	r0, [pc, #48]	; 4001da58 <CyU3PUsbSetDesc+0x1d0>
4001da24:	e5900020 	ldr	r0, [r0, #32]
4001da28:	e3500000 	cmp	r0, #0
4001da2c:	0a000006 	beq	4001da4c <CyU3PUsbSetDesc+0x1c4>
4001da30:	e59f001c 	ldr	r0, [pc, #28]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001da34:	e5d00008 	ldrb	r0, [r0, #8]
4001da38:	e3500003 	cmp	r0, #3
4001da3c:	aa000002 	bge	4001da4c <CyU3PUsbSetDesc+0x1c4>
4001da40:	e3a00003 	mov	r0, #3
4001da44:	e59fe008 	ldr	lr, [pc, #8]	; 4001da54 <CyU3PUsbSetDesc+0x1cc>
4001da48:	e5ce0008 	strb	r0, [lr, #8]
4001da4c:	e1a0000c 	mov	r0, ip
4001da50:	eaffff94 	b	4001d8a8 <CyU3PUsbSetDesc+0x20>
4001da54:	40031d40 	.word	0x40031d40
4001da58:	40031f98 	.word	0x40031f98
4001da5c:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001da60 <CyU3PUsbSetEpNak>:
4001da60:	e92d4070 	push	{r4, r5, r6, lr}
4001da64:	e1a04000 	mov	r4, r0
4001da68:	e1a06001 	mov	r6, r1
4001da6c:	e59f0198 	ldr	r0, [pc, #408]	; 4001dc0c <CyU3PUsbSetEpNak+0x1ac>
4001da70:	e5d00008 	ldrb	r0, [r0, #8]
4001da74:	e3500000 	cmp	r0, #0
4001da78:	1a000001 	bne	4001da84 <CyU3PUsbSetEpNak+0x24>
4001da7c:	e3a00042 	mov	r0, #66	; 0x42
4001da80:	e8bd8070 	pop	{r4, r5, r6, pc}
4001da84:	e204007f 	and	r0, r4, #127	; 0x7f
4001da88:	e350000f 	cmp	r0, #15
4001da8c:	da000001 	ble	4001da98 <CyU3PUsbSetEpNak+0x38>
4001da90:	e3a00040 	mov	r0, #64	; 0x40
4001da94:	eafffff9 	b	4001da80 <CyU3PUsbSetEpNak+0x20>
4001da98:	e3e01000 	mvn	r1, #0
4001da9c:	e59f016c 	ldr	r0, [pc, #364]	; 4001dc10 <CyU3PUsbSetEpNak+0x1b0>
4001daa0:	ebffb19f 	bl	4000a124 <_txe_mutex_get>
4001daa4:	e3560000 	cmp	r6, #0
4001daa8:	0a000028 	beq	4001db50 <CyU3PUsbSetEpNak+0xf0>
4001daac:	e3140080 	tst	r4, #128	; 0x80
4001dab0:	0a000012 	beq	4001db00 <CyU3PUsbSetEpNak+0xa0>
4001dab4:	e59f0150 	ldr	r0, [pc, #336]	; 4001dc0c <CyU3PUsbSetEpNak+0x1ac>
4001dab8:	e5d00009 	ldrb	r0, [r0, #9]
4001dabc:	e3500003 	cmp	r0, #3
4001dac0:	1a000006 	bne	4001dae0 <CyU3PUsbSetEpNak+0x80>
4001dac4:	e59f0148 	ldr	r0, [pc, #328]	; 4001dc14 <CyU3PUsbSetEpNak+0x1b4>
4001dac8:	e204100f 	and	r1, r4, #15
4001dacc:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001dad0:	e3855003 	orr	r5, r5, #3
4001dad4:	e204100f 	and	r1, r4, #15
4001dad8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dadc:	ea000046 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001dae0:	e59f0130 	ldr	r0, [pc, #304]	; 4001dc18 <CyU3PUsbSetEpNak+0x1b8>
4001dae4:	e204100f 	and	r1, r4, #15
4001dae8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001daec:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001daf0:	e59f1120 	ldr	r1, [pc, #288]	; 4001dc18 <CyU3PUsbSetEpNak+0x1b8>
4001daf4:	e204200f 	and	r2, r4, #15
4001daf8:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dafc:	ea00003e 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001db00:	e59f0104 	ldr	r0, [pc, #260]	; 4001dc0c <CyU3PUsbSetEpNak+0x1ac>
4001db04:	e5d00009 	ldrb	r0, [r0, #9]
4001db08:	e3500003 	cmp	r0, #3
4001db0c:	1a000007 	bne	4001db30 <CyU3PUsbSetEpNak+0xd0>
4001db10:	e59f0104 	ldr	r0, [pc, #260]	; 4001dc1c <CyU3PUsbSetEpNak+0x1bc>
4001db14:	e204100f 	and	r1, r4, #15
4001db18:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001db1c:	e3805003 	orr	r5, r0, #3
4001db20:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dc1c <CyU3PUsbSetEpNak+0x1bc>
4001db24:	e204100f 	and	r1, r4, #15
4001db28:	e7805101 	str	r5, [r0, r1, lsl #2]
4001db2c:	ea000032 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001db30:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dc20 <CyU3PUsbSetEpNak+0x1c0>
4001db34:	e204100f 	and	r1, r4, #15
4001db38:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001db3c:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001db40:	e59f10d8 	ldr	r1, [pc, #216]	; 4001dc20 <CyU3PUsbSetEpNak+0x1c0>
4001db44:	e204200f 	and	r2, r4, #15
4001db48:	e7810102 	str	r0, [r1, r2, lsl #2]
4001db4c:	ea00002a 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001db50:	e3140080 	tst	r4, #128	; 0x80
4001db54:	0a000014 	beq	4001dbac <CyU3PUsbSetEpNak+0x14c>
4001db58:	e59f00ac 	ldr	r0, [pc, #172]	; 4001dc0c <CyU3PUsbSetEpNak+0x1ac>
4001db5c:	e5d00009 	ldrb	r0, [r0, #9]
4001db60:	e3500003 	cmp	r0, #3
4001db64:	1a000008 	bne	4001db8c <CyU3PUsbSetEpNak+0x12c>
4001db68:	e59f00a4 	ldr	r0, [pc, #164]	; 4001dc14 <CyU3PUsbSetEpNak+0x1b4>
4001db6c:	e204100f 	and	r1, r4, #15
4001db70:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001db74:	e3c50002 	bic	r0, r5, #2
4001db78:	e3805001 	orr	r5, r0, #1
4001db7c:	e59f0090 	ldr	r0, [pc, #144]	; 4001dc14 <CyU3PUsbSetEpNak+0x1b4>
4001db80:	e204100f 	and	r1, r4, #15
4001db84:	e7805101 	str	r5, [r0, r1, lsl #2]
4001db88:	ea00001b 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001db8c:	e59f0084 	ldr	r0, [pc, #132]	; 4001dc18 <CyU3PUsbSetEpNak+0x1b8>
4001db90:	e204100f 	and	r1, r4, #15
4001db94:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001db98:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001db9c:	e59f1074 	ldr	r1, [pc, #116]	; 4001dc18 <CyU3PUsbSetEpNak+0x1b8>
4001dba0:	e204200f 	and	r2, r4, #15
4001dba4:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dba8:	ea000013 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001dbac:	e59f0058 	ldr	r0, [pc, #88]	; 4001dc0c <CyU3PUsbSetEpNak+0x1ac>
4001dbb0:	e5d00009 	ldrb	r0, [r0, #9]
4001dbb4:	e3500003 	cmp	r0, #3
4001dbb8:	1a000008 	bne	4001dbe0 <CyU3PUsbSetEpNak+0x180>
4001dbbc:	e59f0058 	ldr	r0, [pc, #88]	; 4001dc1c <CyU3PUsbSetEpNak+0x1bc>
4001dbc0:	e204100f 	and	r1, r4, #15
4001dbc4:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dbc8:	e3c00002 	bic	r0, r0, #2
4001dbcc:	e3805001 	orr	r5, r0, #1
4001dbd0:	e59f0044 	ldr	r0, [pc, #68]	; 4001dc1c <CyU3PUsbSetEpNak+0x1bc>
4001dbd4:	e204100f 	and	r1, r4, #15
4001dbd8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dbdc:	ea000006 	b	4001dbfc <CyU3PUsbSetEpNak+0x19c>
4001dbe0:	e59f0038 	ldr	r0, [pc, #56]	; 4001dc20 <CyU3PUsbSetEpNak+0x1c0>
4001dbe4:	e204100f 	and	r1, r4, #15
4001dbe8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dbec:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001dbf0:	e59f1028 	ldr	r1, [pc, #40]	; 4001dc20 <CyU3PUsbSetEpNak+0x1c0>
4001dbf4:	e204200f 	and	r2, r4, #15
4001dbf8:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dbfc:	e59f000c 	ldr	r0, [pc, #12]	; 4001dc10 <CyU3PUsbSetEpNak+0x1b0>
4001dc00:	ebffb17c 	bl	4000a1f8 <_txe_mutex_put>
4001dc04:	e3a00000 	mov	r0, #0
4001dc08:	eaffff9c 	b	4001da80 <CyU3PUsbSetEpNak+0x20>
4001dc0c:	40031d40 	.word	0x40031d40
4001dc10:	40031ee0 	.word	0x40031ee0
4001dc14:	e0033500 	.word	0xe0033500
4001dc18:	e0031418 	.word	0xe0031418
4001dc1c:	e0033600 	.word	0xe0033600
4001dc20:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001dc24 <CyU3PUsbSetLinkPowerState>:
4001dc24:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dc28:	e1a01000 	mov	r1, r0
4001dc2c:	e3a030ff 	mov	r3, #255	; 0xff
4001dc30:	e59f0138 	ldr	r0, [pc, #312]	; 4001dd70 <CyU3PUsbSetLinkPowerState+0x14c>
4001dc34:	e5d00008 	ldrb	r0, [r0, #8]
4001dc38:	e3500000 	cmp	r0, #0
4001dc3c:	1a000001 	bne	4001dc48 <CyU3PUsbSetLinkPowerState+0x24>
4001dc40:	e3a00042 	mov	r0, #66	; 0x42
4001dc44:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dc48:	e59f0120 	ldr	r0, [pc, #288]	; 4001dd70 <CyU3PUsbSetLinkPowerState+0x14c>
4001dc4c:	e5d00008 	ldrb	r0, [r0, #8]
4001dc50:	e3500005 	cmp	r0, #5
4001dc54:	aa000001 	bge	4001dc60 <CyU3PUsbSetLinkPowerState+0x3c>
4001dc58:	e3a00044 	mov	r0, #68	; 0x44
4001dc5c:	eafffff8 	b	4001dc44 <CyU3PUsbSetLinkPowerState+0x20>
4001dc60:	ebfffc1d 	bl	4001ccdc <CyU3PUsbGetSpeed>
4001dc64:	e3500003 	cmp	r0, #3
4001dc68:	0a000001 	beq	4001dc74 <CyU3PUsbSetLinkPowerState+0x50>
4001dc6c:	e3a000ff 	mov	r0, #255	; 0xff
4001dc70:	eafffff3 	b	4001dc44 <CyU3PUsbSetLinkPowerState+0x20>
4001dc74:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dc78:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dc7c:	e200203f 	and	r2, r0, #63	; 0x3f
4001dc80:	e3510000 	cmp	r1, #0
4001dc84:	0a000004 	beq	4001dc9c <CyU3PUsbSetLinkPowerState+0x78>
4001dc88:	e3510001 	cmp	r1, #1
4001dc8c:	0a000015 	beq	4001dce8 <CyU3PUsbSetLinkPowerState+0xc4>
4001dc90:	e3510002 	cmp	r1, #2
4001dc94:	1a00002f 	bne	4001dd58 <CyU3PUsbSetLinkPowerState+0x134>
4001dc98:	ea000020 	b	4001dd20 <CyU3PUsbSetLinkPowerState+0xfc>
4001dc9c:	e1a00000 	nop			; (mov r0, r0)
4001dca0:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dca4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dca8:	e3100c02 	tst	r0, #512	; 0x200
4001dcac:	1a00000b 	bne	4001dce0 <CyU3PUsbSetLinkPowerState+0xbc>
4001dcb0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dcb4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dcb8:	e200203f 	and	r2, r0, #63	; 0x3f
4001dcbc:	e3520011 	cmp	r2, #17
4001dcc0:	ba000006 	blt	4001dce0 <CyU3PUsbSetLinkPowerState+0xbc>
4001dcc4:	e3520013 	cmp	r2, #19
4001dcc8:	ca000004 	bgt	4001dce0 <CyU3PUsbSetLinkPowerState+0xbc>
4001dccc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dcd0:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dcd4:	e3800c02 	orr	r0, r0, #512	; 0x200
4001dcd8:	e59fc094 	ldr	ip, [pc, #148]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dcdc:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dce0:	e3a03000 	mov	r3, #0
4001dce4:	ea00001e 	b	4001dd64 <CyU3PUsbSetLinkPowerState+0x140>
4001dce8:	e1a00000 	nop			; (mov r0, r0)
4001dcec:	e3520010 	cmp	r2, #16
4001dcf0:	1a000009 	bne	4001dd1c <CyU3PUsbSetLinkPowerState+0xf8>
4001dcf4:	e59f0074 	ldr	r0, [pc, #116]	; 4001dd70 <CyU3PUsbSetLinkPowerState+0x14c>
4001dcf8:	e5d00006 	ldrb	r0, [r0, #6]
4001dcfc:	e3100004 	tst	r0, #4
4001dd00:	0a000005 	beq	4001dd1c <CyU3PUsbSetLinkPowerState+0xf8>
4001dd04:	e59f0068 	ldr	r0, [pc, #104]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dd08:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dd0c:	e3800001 	orr	r0, r0, #1
4001dd10:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dd14:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dd18:	e3a03000 	mov	r3, #0
4001dd1c:	ea000010 	b	4001dd64 <CyU3PUsbSetLinkPowerState+0x140>
4001dd20:	e1a00000 	nop			; (mov r0, r0)
4001dd24:	e3520010 	cmp	r2, #16
4001dd28:	1a000009 	bne	4001dd54 <CyU3PUsbSetLinkPowerState+0x130>
4001dd2c:	e59f003c 	ldr	r0, [pc, #60]	; 4001dd70 <CyU3PUsbSetLinkPowerState+0x14c>
4001dd30:	e5d00006 	ldrb	r0, [r0, #6]
4001dd34:	e3100008 	tst	r0, #8
4001dd38:	0a000005 	beq	4001dd54 <CyU3PUsbSetLinkPowerState+0x130>
4001dd3c:	e59f0030 	ldr	r0, [pc, #48]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dd40:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dd44:	e3800002 	orr	r0, r0, #2
4001dd48:	e59fc024 	ldr	ip, [pc, #36]	; 4001dd74 <CyU3PUsbSetLinkPowerState+0x150>
4001dd4c:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dd50:	e3a03000 	mov	r3, #0
4001dd54:	ea000002 	b	4001dd64 <CyU3PUsbSetLinkPowerState+0x140>
4001dd58:	e1a00000 	nop			; (mov r0, r0)
4001dd5c:	e3a03040 	mov	r3, #64	; 0x40
4001dd60:	e1a00000 	nop			; (mov r0, r0)
4001dd64:	e1a00000 	nop			; (mov r0, r0)
4001dd68:	e1a00003 	mov	r0, r3
4001dd6c:	eaffffb4 	b	4001dc44 <CyU3PUsbSetLinkPowerState+0x20>
4001dd70:	40031d40 	.word	0x40031d40
4001dd74:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dd78 <CyU3PUsbStall>:
4001dd78:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dd7c:	e1a04000 	mov	r4, r0
4001dd80:	e1a05001 	mov	r5, r1
4001dd84:	e1a06002 	mov	r6, r2
4001dd88:	e204700f 	and	r7, r4, #15
4001dd8c:	e3a08000 	mov	r8, #0
4001dd90:	e59f0344 	ldr	r0, [pc, #836]	; 4001e0dc <CyU3PUsbStall+0x364>
4001dd94:	e5d00008 	ldrb	r0, [r0, #8]
4001dd98:	e3500000 	cmp	r0, #0
4001dd9c:	1a000001 	bne	4001dda8 <CyU3PUsbStall+0x30>
4001dda0:	e3a00042 	mov	r0, #66	; 0x42
4001dda4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001dda8:	e204007f 	and	r0, r4, #127	; 0x7f
4001ddac:	e350000f 	cmp	r0, #15
4001ddb0:	da000001 	ble	4001ddbc <CyU3PUsbStall+0x44>
4001ddb4:	e3a00040 	mov	r0, #64	; 0x40
4001ddb8:	eafffff9 	b	4001dda4 <CyU3PUsbStall+0x2c>
4001ddbc:	e3570000 	cmp	r7, #0
4001ddc0:	1a000003 	bne	4001ddd4 <CyU3PUsbStall+0x5c>
4001ddc4:	e3550000 	cmp	r5, #0
4001ddc8:	1a000001 	bne	4001ddd4 <CyU3PUsbStall+0x5c>
4001ddcc:	e3a00040 	mov	r0, #64	; 0x40
4001ddd0:	eafffff3 	b	4001dda4 <CyU3PUsbStall+0x2c>
4001ddd4:	e59f0300 	ldr	r0, [pc, #768]	; 4001e0dc <CyU3PUsbStall+0x364>
4001ddd8:	e5d00009 	ldrb	r0, [r0, #9]
4001dddc:	e3500000 	cmp	r0, #0
4001dde0:	1a000001 	bne	4001ddec <CyU3PUsbStall+0x74>
4001dde4:	e3a00000 	mov	r0, #0
4001dde8:	eaffffed 	b	4001dda4 <CyU3PUsbStall+0x2c>
4001ddec:	e3e01000 	mvn	r1, #0
4001ddf0:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e0e0 <CyU3PUsbStall+0x368>
4001ddf4:	ebffb0ca 	bl	4000a124 <_txe_mutex_get>
4001ddf8:	e3570000 	cmp	r7, #0
4001ddfc:	1a000037 	bne	4001dee0 <CyU3PUsbStall+0x168>
4001de00:	ebfffbbd 	bl	4001ccfc <CyU3PUsbIsNewCtrlRqtRecvd>
4001de04:	e3500000 	cmp	r0, #0
4001de08:	0a000003 	beq	4001de1c <CyU3PUsbStall+0xa4>
4001de0c:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e0e0 <CyU3PUsbStall+0x368>
4001de10:	ebffb0f8 	bl	4000a1f8 <_txe_mutex_put>
4001de14:	e3a00000 	mov	r0, #0
4001de18:	eaffffe1 	b	4001dda4 <CyU3PUsbStall+0x2c>
4001de1c:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e0dc <CyU3PUsbStall+0x364>
4001de20:	e5d00009 	ldrb	r0, [r0, #9]
4001de24:	e3500003 	cmp	r0, #3
4001de28:	1a00001b 	bne	4001de9c <CyU3PUsbStall+0x124>
4001de2c:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e0e4 <CyU3PUsbStall+0x36c>
4001de30:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001de34:	e3800004 	orr	r0, r0, #4
4001de38:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e0e4 <CyU3PUsbStall+0x36c>
4001de3c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001de40:	e1a00001 	mov	r0, r1
4001de44:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001de48:	e3800004 	orr	r0, r0, #4
4001de4c:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001de50:	eb00104b 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
4001de54:	e1a0a000 	mov	sl, r0
4001de58:	e3a00001 	mov	r0, #1
4001de5c:	ebffd5ce 	bl	4001359c <CyU3PBusyWait>
4001de60:	e59f027c 	ldr	r0, [pc, #636]	; 4001e0e4 <CyU3PUsbStall+0x36c>
4001de64:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001de68:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de6c:	e59f1270 	ldr	r1, [pc, #624]	; 4001e0e4 <CyU3PUsbStall+0x36c>
4001de70:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001de74:	e1a0000a 	mov	r0, sl
4001de78:	eb00104f 	bl	40021fbc <CyU3PVicEnableInterrupts>
4001de7c:	e3a00000 	mov	r0, #0
4001de80:	e59f1260 	ldr	r1, [pc, #608]	; 4001e0e8 <CyU3PUsbStall+0x370>
4001de84:	e5810000 	str	r0, [r1]
4001de88:	e59f125c 	ldr	r1, [pc, #604]	; 4001e0ec <CyU3PUsbStall+0x374>
4001de8c:	e5810000 	str	r0, [r1]
4001de90:	e59f0258 	ldr	r0, [pc, #600]	; 4001e0f0 <CyU3PUsbStall+0x378>
4001de94:	ebffb384 	bl	4000acac <_txe_timer_deactivate>
4001de98:	ea00000c 	b	4001ded0 <CyU3PUsbStall+0x158>
4001de9c:	e59f0250 	ldr	r0, [pc, #592]	; 4001e0f4 <CyU3PUsbStall+0x37c>
4001dea0:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001dea4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dea8:	e59f1244 	ldr	r1, [pc, #580]	; 4001e0f4 <CyU3PUsbStall+0x37c>
4001deac:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001deb0:	e1a00001 	mov	r0, r1
4001deb4:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001deb8:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001debc:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001dec0:	e1a00001 	mov	r0, r1
4001dec4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dec8:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001decc:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ded0:	e59f0208 	ldr	r0, [pc, #520]	; 4001e0e0 <CyU3PUsbStall+0x368>
4001ded4:	ebffb0c7 	bl	4000a1f8 <_txe_mutex_put>
4001ded8:	e3a00000 	mov	r0, #0
4001dedc:	eaffffb0 	b	4001dda4 <CyU3PUsbStall+0x2c>
4001dee0:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e0dc <CyU3PUsbStall+0x364>
4001dee4:	e5d00009 	ldrb	r0, [r0, #9]
4001dee8:	e3500003 	cmp	r0, #3
4001deec:	1a000033 	bne	4001dfc0 <CyU3PUsbStall+0x248>
4001def0:	e3140080 	tst	r4, #128	; 0x80
4001def4:	0a000017 	beq	4001df58 <CyU3PUsbStall+0x1e0>
4001def8:	e3550000 	cmp	r5, #0
4001defc:	0a00000a 	beq	4001df2c <CyU3PUsbStall+0x1b4>
4001df00:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e0f8 <CyU3PUsbStall+0x380>
4001df04:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001df08:	e3899005 	orr	r9, r9, #5
4001df0c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df10:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001df14:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df18:	e1a01800 	lsl	r1, r0, #16
4001df1c:	e1a01821 	lsr	r1, r1, #16
4001df20:	e1a00004 	mov	r0, r4
4001df24:	ebfffdde 	bl	4001d6a4 <CyU3PUsbSendErdy>
4001df28:	ea000041 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001df2c:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e0f8 <CyU3PUsbStall+0x380>
4001df30:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001df34:	e3899011 	orr	r9, r9, #17
4001df38:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df3c:	e3a00001 	mov	r0, #1
4001df40:	ebffd595 	bl	4001359c <CyU3PBusyWait>
4001df44:	e3c90014 	bic	r0, r9, #20
4001df48:	e3809001 	orr	r9, r0, #1
4001df4c:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e0f8 <CyU3PUsbStall+0x380>
4001df50:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df54:	ea000036 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001df58:	e3550000 	cmp	r5, #0
4001df5c:	0a00000b 	beq	4001df90 <CyU3PUsbStall+0x218>
4001df60:	e59f0194 	ldr	r0, [pc, #404]	; 4001e0fc <CyU3PUsbStall+0x384>
4001df64:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df68:	e3809005 	orr	r9, r0, #5
4001df6c:	e59f0188 	ldr	r0, [pc, #392]	; 4001e0fc <CyU3PUsbStall+0x384>
4001df70:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df74:	e28000c0 	add	r0, r0, #192	; 0xc0
4001df78:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df7c:	e1a01800 	lsl	r1, r0, #16
4001df80:	e1a01821 	lsr	r1, r1, #16
4001df84:	e1a00004 	mov	r0, r4
4001df88:	ebfffdc5 	bl	4001d6a4 <CyU3PUsbSendErdy>
4001df8c:	ea000028 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001df90:	e59f0164 	ldr	r0, [pc, #356]	; 4001e0fc <CyU3PUsbStall+0x384>
4001df94:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df98:	e3809011 	orr	r9, r0, #17
4001df9c:	e59f0158 	ldr	r0, [pc, #344]	; 4001e0fc <CyU3PUsbStall+0x384>
4001dfa0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dfa4:	e3a00001 	mov	r0, #1
4001dfa8:	ebffd57b 	bl	4001359c <CyU3PBusyWait>
4001dfac:	e3c90014 	bic	r0, r9, #20
4001dfb0:	e3809001 	orr	r9, r0, #1
4001dfb4:	e59f0140 	ldr	r0, [pc, #320]	; 4001e0fc <CyU3PUsbStall+0x384>
4001dfb8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dfbc:	ea00001c 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001dfc0:	e3140080 	tst	r4, #128	; 0x80
4001dfc4:	0a00000d 	beq	4001e000 <CyU3PUsbStall+0x288>
4001dfc8:	e3550000 	cmp	r5, #0
4001dfcc:	0a000005 	beq	4001dfe8 <CyU3PUsbStall+0x270>
4001dfd0:	e59f0128 	ldr	r0, [pc, #296]	; 4001e100 <CyU3PUsbStall+0x388>
4001dfd4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dfd8:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dfdc:	e59f111c 	ldr	r1, [pc, #284]	; 4001e100 <CyU3PUsbStall+0x388>
4001dfe0:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dfe4:	ea000012 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001dfe8:	e59f0110 	ldr	r0, [pc, #272]	; 4001e100 <CyU3PUsbStall+0x388>
4001dfec:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dff0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001dff4:	e59f1104 	ldr	r1, [pc, #260]	; 4001e100 <CyU3PUsbStall+0x388>
4001dff8:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dffc:	ea00000c 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001e000:	e3550000 	cmp	r5, #0
4001e004:	0a000005 	beq	4001e020 <CyU3PUsbStall+0x2a8>
4001e008:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e104 <CyU3PUsbStall+0x38c>
4001e00c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e010:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e014:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e104 <CyU3PUsbStall+0x38c>
4001e018:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e01c:	ea000004 	b	4001e034 <CyU3PUsbStall+0x2bc>
4001e020:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e104 <CyU3PUsbStall+0x38c>
4001e024:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e028:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e02c:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e104 <CyU3PUsbStall+0x38c>
4001e030:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e034:	e3560000 	cmp	r6, #0
4001e038:	0a000023 	beq	4001e0cc <CyU3PUsbStall+0x354>
4001e03c:	e3550000 	cmp	r5, #0
4001e040:	1a000021 	bne	4001e0cc <CyU3PUsbStall+0x354>
4001e044:	e59f0090 	ldr	r0, [pc, #144]	; 4001e0dc <CyU3PUsbStall+0x364>
4001e048:	e5d00009 	ldrb	r0, [r0, #9]
4001e04c:	e3500003 	cmp	r0, #3
4001e050:	1a00000b 	bne	4001e084 <CyU3PUsbStall+0x30c>
4001e054:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001e058:	e3140080 	tst	r4, #128	; 0x80
4001e05c:	0a000000 	beq	4001e064 <CyU3PUsbStall+0x2ec>
4001e060:	e3888010 	orr	r8, r8, #16
4001e064:	e59f0078 	ldr	r0, [pc, #120]	; 4001e0e4 <CyU3PUsbStall+0x36c>
4001e068:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e06c:	e1a00000 	nop			; (mov r0, r0)
4001e070:	e59f006c 	ldr	r0, [pc, #108]	; 4001e0e4 <CyU3PUsbStall+0x36c>
4001e074:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e078:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e07c:	0afffffb 	beq	4001e070 <CyU3PUsbStall+0x2f8>
4001e080:	ea000011 	b	4001e0cc <CyU3PUsbStall+0x354>
4001e084:	e3140080 	tst	r4, #128	; 0x80
4001e088:	0a000000 	beq	4001e090 <CyU3PUsbStall+0x318>
4001e08c:	e3877010 	orr	r7, r7, #16
4001e090:	e59f005c 	ldr	r0, [pc, #92]	; 4001e0f4 <CyU3PUsbStall+0x37c>
4001e094:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e098:	e1a00000 	nop			; (mov r0, r0)
4001e09c:	e59f0050 	ldr	r0, [pc, #80]	; 4001e0f4 <CyU3PUsbStall+0x37c>
4001e0a0:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e0a4:	e3100c01 	tst	r0, #256	; 0x100
4001e0a8:	0afffffb 	beq	4001e09c <CyU3PUsbStall+0x324>
4001e0ac:	e3877020 	orr	r7, r7, #32
4001e0b0:	e59f003c 	ldr	r0, [pc, #60]	; 4001e0f4 <CyU3PUsbStall+0x37c>
4001e0b4:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e0b8:	e1a00000 	nop			; (mov r0, r0)
4001e0bc:	e59f0030 	ldr	r0, [pc, #48]	; 4001e0f4 <CyU3PUsbStall+0x37c>
4001e0c0:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e0c4:	e3100c01 	tst	r0, #256	; 0x100
4001e0c8:	0afffffb 	beq	4001e0bc <CyU3PUsbStall+0x344>
4001e0cc:	e59f000c 	ldr	r0, [pc, #12]	; 4001e0e0 <CyU3PUsbStall+0x368>
4001e0d0:	ebffb048 	bl	4000a1f8 <_txe_mutex_put>
4001e0d4:	e3a00000 	mov	r0, #0
4001e0d8:	eaffff31 	b	4001dda4 <CyU3PUsbStall+0x2c>
4001e0dc:	40031d40 	.word	0x40031d40
4001e0e0:	40031ee0 	.word	0x40031ee0
4001e0e4:	e0033000 	.word	0xe0033000
4001e0e8:	40030dcc 	.word	0x40030dcc
4001e0ec:	40030dd0 	.word	0x40030dd0
4001e0f0:	400326a0 	.word	0x400326a0
4001e0f4:	e0031000 	.word	0xe0031000
4001e0f8:	e0033500 	.word	0xe0033500
4001e0fc:	e0033600 	.word	0xe0033600
4001e100:	e0031418 	.word	0xe0031418
4001e104:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e108 <CyU3PUsbStart>:
4001e108:	e92d4070 	push	{r4, r5, r6, lr}
4001e10c:	e59f0324 	ldr	r0, [pc, #804]	; 4001e438 <CyU3PUsbStart+0x330>
4001e110:	e5900000 	ldr	r0, [r0]
4001e114:	e3500000 	cmp	r0, #0
4001e118:	1a000001 	bne	4001e124 <CyU3PUsbStart+0x1c>
4001e11c:	e3a00010 	mov	r0, #16
4001e120:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e124:	e59f0310 	ldr	r0, [pc, #784]	; 4001e43c <CyU3PUsbStart+0x334>
4001e128:	e5d00008 	ldrb	r0, [r0, #8]
4001e12c:	e3500000 	cmp	r0, #0
4001e130:	0a000001 	beq	4001e13c <CyU3PUsbStart+0x34>
4001e134:	e3a00043 	mov	r0, #67	; 0x43
4001e138:	eafffff8 	b	4001e120 <CyU3PUsbStart+0x18>
4001e13c:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e440 <CyU3PUsbStart+0x338>
4001e140:	e5900000 	ldr	r0, [r0]
4001e144:	e3500000 	cmp	r0, #0
4001e148:	0a00006b 	beq	4001e2fc <CyU3PUsbStart+0x1f4>
4001e14c:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e444 <CyU3PUsbStart+0x33c>
4001e150:	eb00059e 	bl	4001f7d0 <CyU3PUibSocketInit>
4001e154:	ebfff98c 	bl	4001c78c <CyU3PUsbCreateDmaChannels>
4001e158:	e1a04000 	mov	r4, r0
4001e15c:	e3540000 	cmp	r4, #0
4001e160:	0a000001 	beq	4001e16c <CyU3PUsbStart+0x64>
4001e164:	e1a00004 	mov	r0, r4
4001e168:	eaffffec 	b	4001e120 <CyU3PUsbStart+0x18>
4001e16c:	e3a00001 	mov	r0, #1
4001e170:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e43c <CyU3PUsbStart+0x334>
4001e174:	e5c10008 	strb	r0, [r1, #8]
4001e178:	e5950004 	ldr	r0, [r5, #4]
4001e17c:	e5c10009 	strb	r0, [r1, #9]
4001e180:	e1a00005 	mov	r0, r5
4001e184:	ebfffaef 	bl	4001cd48 <CyU3PUsbLoadBootloaderDescs>
4001e188:	e1a04000 	mov	r4, r0
4001e18c:	e3540000 	cmp	r4, #0
4001e190:	0a000001 	beq	4001e19c <CyU3PUsbStart+0x94>
4001e194:	e1a00004 	mov	r0, r4
4001e198:	eaffffe0 	b	4001e120 <CyU3PUsbStart+0x18>
4001e19c:	e3a00006 	mov	r0, #6
4001e1a0:	e59f1294 	ldr	r1, [pc, #660]	; 4001e43c <CyU3PUsbStart+0x334>
4001e1a4:	e5c10008 	strb	r0, [r1, #8]
4001e1a8:	e2810000 	add	r0, r1, #0
4001e1ac:	e5d00009 	ldrb	r0, [r0, #9]
4001e1b0:	e3500003 	cmp	r0, #3
4001e1b4:	1a000002 	bne	4001e1c4 <CyU3PUsbStart+0xbc>
4001e1b8:	e3a00001 	mov	r0, #1
4001e1bc:	e59f1284 	ldr	r1, [pc, #644]	; 4001e448 <CyU3PUsbStart+0x340>
4001e1c0:	e5810000 	str	r0, [r1]
4001e1c4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e1c8:	e59f127c 	ldr	r1, [pc, #636]	; 4001e44c <CyU3PUsbStart+0x344>
4001e1cc:	e1500001 	cmp	r0, r1
4001e1d0:	1a000015 	bne	4001e22c <CyU3PUsbStart+0x124>
4001e1d4:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e1d8:	e59f1270 	ldr	r1, [pc, #624]	; 4001e450 <CyU3PUsbStart+0x348>
4001e1dc:	e1500001 	cmp	r0, r1
4001e1e0:	3a000007 	bcc	4001e204 <CyU3PUsbStart+0xfc>
4001e1e4:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e1e8:	e3500000 	cmp	r0, #0
4001e1ec:	0a000001 	beq	4001e1f8 <CyU3PUsbStart+0xf0>
4001e1f0:	e3a00001 	mov	r0, #1
4001e1f4:	ea000000 	b	4001e1fc <CyU3PUsbStart+0xf4>
4001e1f8:	e3a00000 	mov	r0, #0
4001e1fc:	e59f1238 	ldr	r1, [pc, #568]	; 4001e43c <CyU3PUsbStart+0x334>
4001e200:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e204:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e208:	e59f1244 	ldr	r1, [pc, #580]	; 4001e454 <CyU3PUsbStart+0x34c>
4001e20c:	e1500001 	cmp	r0, r1
4001e210:	3a000008 	bcc	4001e238 <CyU3PUsbStart+0x130>
4001e214:	e59f023c 	ldr	r0, [pc, #572]	; 4001e458 <CyU3PUsbStart+0x350>
4001e218:	e5900000 	ldr	r0, [r0]
4001e21c:	e3800002 	orr	r0, r0, #2
4001e220:	e59f1230 	ldr	r1, [pc, #560]	; 4001e458 <CyU3PUsbStart+0x350>
4001e224:	e5810000 	str	r0, [r1]
4001e228:	ea000002 	b	4001e238 <CyU3PUsbStart+0x130>
4001e22c:	e3a00001 	mov	r0, #1
4001e230:	e59f1204 	ldr	r1, [pc, #516]	; 4001e43c <CyU3PUsbStart+0x334>
4001e234:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e238:	e3e00000 	mvn	r0, #0
4001e23c:	e59f1218 	ldr	r1, [pc, #536]	; 4001e45c <CyU3PUsbStart+0x354>
4001e240:	e5810004 	str	r0, [r1, #4]
4001e244:	e59f0214 	ldr	r0, [pc, #532]	; 4001e460 <CyU3PUsbStart+0x358>
4001e248:	e5810008 	str	r0, [r1, #8]
4001e24c:	e3e00000 	mvn	r0, #0
4001e250:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e254:	e59f0208 	ldr	r0, [pc, #520]	; 4001e464 <CyU3PUsbStart+0x35c>
4001e258:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e25c:	e3a00000 	mov	r0, #0
4001e260:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e264:	e3e00000 	mvn	r0, #0
4001e268:	e0811680 	add	r1, r1, r0, lsl #13
4001e26c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e270:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e468 <CyU3PUsbStart+0x360>
4001e274:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e278:	e3e00000 	mvn	r0, #0
4001e27c:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e280:	e3a00000 	mov	r0, #0
4001e284:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e288:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e28c:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e290:	e5810004 	str	r0, [r1, #4]
4001e294:	e3a00008 	mov	r0, #8
4001e298:	eb000f42 	bl	40021fa8 <CyU3PVicEnableInt>
4001e29c:	e3a00009 	mov	r0, #9
4001e2a0:	eb000f40 	bl	40021fa8 <CyU3PVicEnableInt>
4001e2a4:	ebfffa8c 	bl	4001ccdc <CyU3PUsbGetSpeed>
4001e2a8:	e1a06000 	mov	r6, r0
4001e2ac:	eb0006b5 	bl	4001fd88 <CyU3PUsbEpPrepare>
4001e2b0:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e458 <CyU3PUsbStart+0x350>
4001e2b4:	e5900000 	ldr	r0, [r0]
4001e2b8:	e3100002 	tst	r0, #2
4001e2bc:	1a000003 	bne	4001e2d0 <CyU3PUsbStart+0x1c8>
4001e2c0:	e3e00000 	mvn	r0, #0
4001e2c4:	e5850000 	str	r0, [r5]
4001e2c8:	e3a00000 	mov	r0, #0
4001e2cc:	e585000c 	str	r0, [r5, #12]
4001e2d0:	e3e00000 	mvn	r0, #0
4001e2d4:	e59f1190 	ldr	r1, [pc, #400]	; 4001e46c <CyU3PUsbStart+0x364>
4001e2d8:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e2dc:	e3a00b01 	mov	r0, #1024	; 0x400
4001e2e0:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e2e4:	e59f1150 	ldr	r1, [pc, #336]	; 4001e43c <CyU3PUsbStart+0x334>
4001e2e8:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e2ec:	e3a00015 	mov	r0, #21
4001e2f0:	eb000f2c 	bl	40021fa8 <CyU3PVicEnableInt>
4001e2f4:	e3a000fe 	mov	r0, #254	; 0xfe
4001e2f8:	eaffff88 	b	4001e120 <CyU3PUsbStart+0x18>
4001e2fc:	e1a00000 	nop			; (mov r0, r0)
4001e300:	e59f0168 	ldr	r0, [pc, #360]	; 4001e470 <CyU3PUsbStart+0x368>
4001e304:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e308:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e30c:	e59f115c 	ldr	r1, [pc, #348]	; 4001e470 <CyU3PUsbStart+0x368>
4001e310:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e314:	e3a00002 	mov	r0, #2
4001e318:	ebffd49f 	bl	4001359c <CyU3PBusyWait>
4001e31c:	e59f014c 	ldr	r0, [pc, #332]	; 4001e470 <CyU3PUsbStart+0x368>
4001e320:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e324:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e328:	e59f1140 	ldr	r1, [pc, #320]	; 4001e470 <CyU3PUsbStart+0x368>
4001e32c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e330:	e1a00001 	mov	r0, r1
4001e334:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e338:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e33c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e340:	e1a00001 	mov	r0, r1
4001e344:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e348:	e3800008 	orr	r0, r0, #8
4001e34c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e350:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e354:	e5900008 	ldr	r0, [r0, #8]
4001e358:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e35c:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e360:	e5810008 	str	r0, [r1, #8]
4001e364:	e3a00002 	mov	r0, #2
4001e368:	ebffd48b 	bl	4001359c <CyU3PBusyWait>
4001e36c:	ebfff645 	bl	4001bc88 <CyU3POtgIsDeviceMode>
4001e370:	e3500000 	cmp	r0, #0
4001e374:	0a000002 	beq	4001e384 <CyU3PUsbStart+0x27c>
4001e378:	ebfffa5b 	bl	4001ccec <CyU3PUsbHostIsStarted>
4001e37c:	e3500000 	cmp	r0, #0
4001e380:	0a000001 	beq	4001e38c <CyU3PUsbStart+0x284>
4001e384:	e3a00047 	mov	r0, #71	; 0x47
4001e388:	eaffff64 	b	4001e120 <CyU3PUsbStart+0x18>
4001e38c:	e3a01002 	mov	r1, #2
4001e390:	e1a00001 	mov	r0, r1
4001e394:	ebfff820 	bl	4001c41c <CyU3PSetUsbCoreClock>
4001e398:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e474 <CyU3PUsbStart+0x36c>
4001e39c:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e478 <CyU3PUsbStart+0x370>
4001e3a0:	e5810000 	str	r0, [r1]
4001e3a4:	ebfff633 	bl	4001bc78 <CyU3POtgGetMode>
4001e3a8:	e3500000 	cmp	r0, #0
4001e3ac:	1a000003 	bne	4001e3c0 <CyU3PUsbStart+0x2b8>
4001e3b0:	ebfffc09 	bl	4001d3dc <CyU3PUsbPowerOn>
4001e3b4:	e3a00000 	mov	r0, #0
4001e3b8:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e470 <CyU3PUsbStart+0x368>
4001e3bc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e3c0:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e47c <CyU3PUsbStart+0x374>
4001e3c4:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e470 <CyU3PUsbStart+0x368>
4001e3c8:	e5810008 	str	r0, [r1, #8]
4001e3cc:	e00108c0 	and	r0, r1, r0, asr #17
4001e3d0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e3d4:	e3800008 	orr	r0, r0, #8
4001e3d8:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e3dc:	eb000662 	bl	4001fd6c <CyU3PUsbDescInit>
4001e3e0:	ebfff8e9 	bl	4001c78c <CyU3PUsbCreateDmaChannels>
4001e3e4:	e1a04000 	mov	r4, r0
4001e3e8:	e3540000 	cmp	r4, #0
4001e3ec:	0a000001 	beq	4001e3f8 <CyU3PUsbStart+0x2f0>
4001e3f0:	e1a00004 	mov	r0, r4
4001e3f4:	eaffff49 	b	4001e120 <CyU3PUsbStart+0x18>
4001e3f8:	e3a00001 	mov	r0, #1
4001e3fc:	e59f1038 	ldr	r1, [pc, #56]	; 4001e43c <CyU3PUsbStart+0x334>
4001e400:	e5c10008 	strb	r0, [r1, #8]
4001e404:	e2810000 	add	r0, r1, #0
4001e408:	e5d00007 	ldrb	r0, [r0, #7]
4001e40c:	e3500001 	cmp	r0, #1
4001e410:	1a000002 	bne	4001e420 <CyU3PUsbStart+0x318>
4001e414:	e3a00003 	mov	r0, #3
4001e418:	e5c10008 	strb	r0, [r1, #8]
4001e41c:	ea000002 	b	4001e42c <CyU3PUsbStart+0x324>
4001e420:	e3a00002 	mov	r0, #2
4001e424:	e59f1010 	ldr	r1, [pc, #16]	; 4001e43c <CyU3PUsbStart+0x334>
4001e428:	e5c10008 	strb	r0, [r1, #8]
4001e42c:	ebfff81b 	bl	4001c4a0 <CyU3PUibInit>
4001e430:	e1a00004 	mov	r0, r4
4001e434:	eaffff39 	b	4001e120 <CyU3PUsbStart+0x18>
4001e438:	40030d7c 	.word	0x40030d7c
4001e43c:	40031d40 	.word	0x40031d40
4001e440:	40030c84 	.word	0x40030c84
4001e444:	40002000 	.word	0x40002000
4001e448:	40030d8c 	.word	0x40030d8c
4001e44c:	42335846 	.word	0x42335846
4001e450:	00010101 	.word	0x00010101
4001e454:	00010200 	.word	0x00010200
4001e458:	40030d60 	.word	0x40030d60
4001e45c:	e0033000 	.word	0xe0033000
4001e460:	00038081 	.word	0x00038081
4001e464:	00004a3d 	.word	0x00004a3d
4001e468:	0000095c 	.word	0x0000095c
4001e46c:	e0051000 	.word	0xe0051000
4001e470:	e0031000 	.word	0xe0031000
4001e474:	de001011 	.word	0xde001011
4001e478:	e0050000 	.word	0xe0050000
4001e47c:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e480 <GetUsbLinkActive>:
4001e480:	e92d4010 	push	{r4, lr}
4001e484:	e59f0064 	ldr	r0, [pc, #100]	; 4001e4f0 <GetUsbLinkActive+0x70>
4001e488:	e5d00009 	ldrb	r0, [r0, #9]
4001e48c:	e3500003 	cmp	r0, #3
4001e490:	1a000015 	bne	4001e4ec <GetUsbLinkActive+0x6c>
4001e494:	e59f0058 	ldr	r0, [pc, #88]	; 4001e4f4 <GetUsbLinkActive+0x74>
4001e498:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e49c:	e3c00004 	bic	r0, r0, #4
4001e4a0:	e59f104c 	ldr	r1, [pc, #76]	; 4001e4f4 <GetUsbLinkActive+0x74>
4001e4a4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e4a8:	e1a00001 	mov	r0, r1
4001e4ac:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e4b0:	e3c00004 	bic	r0, r0, #4
4001e4b4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e4b8:	e59f0030 	ldr	r0, [pc, #48]	; 4001e4f0 <GetUsbLinkActive+0x70>
4001e4bc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e4c0:	e3500000 	cmp	r0, #0
4001e4c4:	1a000008 	bne	4001e4ec <GetUsbLinkActive+0x6c>
4001e4c8:	e1a00001 	mov	r0, r1
4001e4cc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e4d0:	e200403f 	and	r4, r0, #63	; 0x3f
4001e4d4:	e3540011 	cmp	r4, #17
4001e4d8:	0a000001 	beq	4001e4e4 <GetUsbLinkActive+0x64>
4001e4dc:	e3540012 	cmp	r4, #18
4001e4e0:	1a000001 	bne	4001e4ec <GetUsbLinkActive+0x6c>
4001e4e4:	e3a00000 	mov	r0, #0
4001e4e8:	ebfffdcd 	bl	4001dc24 <CyU3PUsbSetLinkPowerState>
4001e4ec:	e8bd8010 	pop	{r4, pc}
4001e4f0:	40031d40 	.word	0x40031d40
4001e4f4:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e4f8 <CyU3PHsGrantIntrHandler>:
4001e4f8:	e92d4010 	push	{r4, lr}
4001e4fc:	e59f005c 	ldr	r0, [pc, #92]	; 4001e560 <CyU3PHsGrantIntrHandler+0x68>
4001e500:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e504:	e3100080 	tst	r0, #128	; 0x80
4001e508:	0a000013 	beq	4001e55c <CyU3PHsGrantIntrHandler+0x64>
4001e50c:	e59f0050 	ldr	r0, [pc, #80]	; 4001e564 <CyU3PHsGrantIntrHandler+0x6c>
4001e510:	e5900014 	ldr	r0, [r0, #20]
4001e514:	e59f1048 	ldr	r1, [pc, #72]	; 4001e564 <CyU3PHsGrantIntrHandler+0x6c>
4001e518:	e581000c 	str	r0, [r1, #12]
4001e51c:	e2810000 	add	r0, r1, #0
4001e520:	e5900018 	ldr	r0, [r0, #24]
4001e524:	e5810010 	str	r0, [r1, #16]
4001e528:	e59f0038 	ldr	r0, [pc, #56]	; 4001e568 <CyU3PHsGrantIntrHandler+0x70>
4001e52c:	e5900000 	ldr	r0, [r0]
4001e530:	e3500000 	cmp	r0, #0
4001e534:	0a000004 	beq	4001e54c <CyU3PHsGrantIntrHandler+0x54>
4001e538:	e3a01001 	mov	r1, #1
4001e53c:	e3a00006 	mov	r0, #6
4001e540:	e59f2020 	ldr	r2, [pc, #32]	; 4001e568 <CyU3PHsGrantIntrHandler+0x70>
4001e544:	e5922000 	ldr	r2, [r2]
4001e548:	e12fff32 	blx	r2
4001e54c:	e3a00002 	mov	r0, #2
4001e550:	e59f1014 	ldr	r1, [pc, #20]	; 4001e56c <CyU3PHsGrantIntrHandler+0x74>
4001e554:	e5c10009 	strb	r0, [r1, #9]
4001e558:	eb00060a 	bl	4001fd88 <CyU3PUsbEpPrepare>
4001e55c:	e8bd8010 	pop	{r4, pc}
4001e560:	e0031000 	.word	0xe0031000
4001e564:	40031f98 	.word	0x40031f98
4001e568:	40030db8 	.word	0x40030db8
4001e56c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e570 <CyU3PUibApplicationDefine>:
4001e570:	e92d4030 	push	{r4, r5, lr}
4001e574:	e24dd01c 	sub	sp, sp, #28
4001e578:	eb000178 	bl	4001eb60 <CyU3PUibInitVars>
4001e57c:	e3a00b01 	mov	r0, #1024	; 0x400
4001e580:	ebff943b 	bl	40003674 <CyU3PMemAlloc>
4001e584:	e1a05000 	mov	r5, r0
4001e588:	e3550000 	cmp	r5, #0
4001e58c:	0a00004f 	beq	4001e6d0 <CyU3PUibApplicationDefine+0x160>
4001e590:	e3a030a8 	mov	r3, #168	; 0xa8
4001e594:	e3a02000 	mov	r2, #0
4001e598:	e3a00004 	mov	r0, #4
4001e59c:	e58d000c 	str	r0, [sp, #12]
4001e5a0:	e58d2010 	str	r2, [sp, #16]
4001e5a4:	e58d2014 	str	r2, [sp, #20]
4001e5a8:	e58d3018 	str	r3, [sp, #24]
4001e5ac:	e3a02b01 	mov	r2, #1024	; 0x400
4001e5b0:	e3a03000 	mov	r3, #0
4001e5b4:	e58d2004 	str	r2, [sp, #4]
4001e5b8:	e59f2118 	ldr	r2, [pc, #280]	; 4001e6d8 <CyU3PUibApplicationDefine+0x168>
4001e5bc:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e5c0:	e58d0008 	str	r0, [sp, #8]
4001e5c4:	e59f0120 	ldr	r0, [pc, #288]	; 4001e6ec <CyU3PUibApplicationDefine+0x17c>
4001e5c8:	e58d5000 	str	r5, [sp]
4001e5cc:	ebffb017 	bl	4000a630 <_txe_thread_create>
4001e5d0:	e1a04000 	mov	r4, r0
4001e5d4:	e3540000 	cmp	r4, #0
4001e5d8:	1a00003c 	bne	4001e6d0 <CyU3PUibApplicationDefine+0x160>
4001e5dc:	e3a00080 	mov	r0, #128	; 0x80
4001e5e0:	ebff9423 	bl	40003674 <CyU3PMemAlloc>
4001e5e4:	e1a05000 	mov	r5, r0
4001e5e8:	e3550000 	cmp	r5, #0
4001e5ec:	0a000009 	beq	4001e618 <CyU3PUibApplicationDefine+0xa8>
4001e5f0:	e3a0303c 	mov	r3, #60	; 0x3c
4001e5f4:	e3a02080 	mov	r2, #128	; 0x80
4001e5f8:	e1cd20f0 	strd	r2, [sp]
4001e5fc:	e1a03005 	mov	r3, r5
4001e600:	e3a02004 	mov	r2, #4
4001e604:	e3a01000 	mov	r1, #0
4001e608:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e6f0 <CyU3PUibApplicationDefine+0x180>
4001e60c:	ebffaf21 	bl	4000a298 <_txe_queue_create>
4001e610:	e1a04000 	mov	r4, r0
4001e614:	ea000000 	b	4001e61c <CyU3PUibApplicationDefine+0xac>
4001e618:	e3a04010 	mov	r4, #16
4001e61c:	e3540000 	cmp	r4, #0
4001e620:	1a000004 	bne	4001e638 <CyU3PUibApplicationDefine+0xc8>
4001e624:	e3a02028 	mov	r2, #40	; 0x28
4001e628:	e3a01000 	mov	r1, #0
4001e62c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e6f4 <CyU3PUibApplicationDefine+0x184>
4001e630:	ebffad83 	bl	40009c44 <_txe_event_flags_create>
4001e634:	e1a04000 	mov	r4, r0
4001e638:	e3540000 	cmp	r4, #0
4001e63c:	1a000005 	bne	4001e658 <CyU3PUibApplicationDefine+0xe8>
4001e640:	e3a03038 	mov	r3, #56	; 0x38
4001e644:	e3a02000 	mov	r2, #0
4001e648:	e1a01002 	mov	r1, r2
4001e64c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e6f8 <CyU3PUibApplicationDefine+0x188>
4001e650:	ebffae35 	bl	40009f2c <_txe_mutex_create>
4001e654:	e1a04000 	mov	r4, r0
4001e658:	e3540000 	cmp	r4, #0
4001e65c:	1a00000a 	bne	4001e68c <CyU3PUibApplicationDefine+0x11c>
4001e660:	e3a0302c 	mov	r3, #44	; 0x2c
4001e664:	e3a02000 	mov	r2, #0
4001e668:	e3a00064 	mov	r0, #100	; 0x64
4001e66c:	e88d0005 	stm	sp, {r0, r2}
4001e670:	e1cd20f8 	strd	r2, [sp, #8]
4001e674:	e1a03002 	mov	r3, r2
4001e678:	e59f207c 	ldr	r2, [pc, #124]	; 4001e6fc <CyU3PUibApplicationDefine+0x18c>
4001e67c:	e3a01000 	mov	r1, #0
4001e680:	e59f0078 	ldr	r0, [pc, #120]	; 4001e700 <CyU3PUibApplicationDefine+0x190>
4001e684:	ebffb116 	bl	4000aae4 <_txe_timer_create>
4001e688:	e1a04000 	mov	r4, r0
4001e68c:	e3540000 	cmp	r4, #0
4001e690:	1a00000a 	bne	4001e6c0 <CyU3PUibApplicationDefine+0x150>
4001e694:	e3a0302c 	mov	r3, #44	; 0x2c
4001e698:	e3a02001 	mov	r2, #1
4001e69c:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e6a0:	e58d1000 	str	r1, [sp]
4001e6a4:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e6a8:	e3a03000 	mov	r3, #0
4001e6ac:	e59f2050 	ldr	r2, [pc, #80]	; 4001e704 <CyU3PUibApplicationDefine+0x194>
4001e6b0:	e1a01003 	mov	r1, r3
4001e6b4:	e59f004c 	ldr	r0, [pc, #76]	; 4001e708 <CyU3PUibApplicationDefine+0x198>
4001e6b8:	ebffb109 	bl	4000aae4 <_txe_timer_create>
4001e6bc:	e1a04000 	mov	r4, r0
4001e6c0:	e3540000 	cmp	r4, #0
4001e6c4:	1a000001 	bne	4001e6d0 <CyU3PUibApplicationDefine+0x160>
4001e6c8:	e59f001c 	ldr	r0, [pc, #28]	; 4001e6ec <CyU3PUibApplicationDefine+0x17c>
4001e6cc:	ebffb0c2 	bl	4000a9dc <_txe_thread_resume>
4001e6d0:	e28dd01c 	add	sp, sp, #28
4001e6d4:	e8bd8030 	pop	{r4, r5, pc}
4001e6d8:	4001f8dc 	.word	0x4001f8dc
4001e6dc:	555f3430 	.word	0x555f3430
4001e6e0:	545f4249 	.word	0x545f4249
4001e6e4:	41455248 	.word	0x41455248
4001e6e8:	00000044 	.word	0x00000044
4001e6ec:	40031dd4 	.word	0x40031dd4
4001e6f0:	40031e7c 	.word	0x40031e7c
4001e6f4:	40031eb8 	.word	0x40031eb8
4001e6f8:	40031ee0 	.word	0x40031ee0
4001e6fc:	4001f86c 	.word	0x4001f86c
4001e700:	400326a0 	.word	0x400326a0
4001e704:	4001ec18 	.word	0x4001ec18
4001e708:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e70c <CyU3PUibDevCtrlEvtHandler>:
4001e70c:	e92d4010 	push	{r4, lr}
4001e710:	e59f01c8 	ldr	r0, [pc, #456]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e714:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e718:	e3140c01 	tst	r4, #256	; 0x100
4001e71c:	0a000008 	beq	4001e744 <CyU3PUibDevCtrlEvtHandler+0x38>
4001e720:	e3a00c01 	mov	r0, #256	; 0x100
4001e724:	e59f11b4 	ldr	r1, [pc, #436]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e728:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e72c:	eb000995 	bl	40020d88 <CyU3PUsbResumeHandler>
4001e730:	e59f01a8 	ldr	r0, [pc, #424]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e734:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e738:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e73c:	e59f119c 	ldr	r1, [pc, #412]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e740:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e744:	e3140004 	tst	r4, #4
4001e748:	0a000008 	beq	4001e770 <CyU3PUibDevCtrlEvtHandler+0x64>
4001e74c:	e3a00004 	mov	r0, #4
4001e750:	e59f1188 	ldr	r1, [pc, #392]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e754:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e758:	eb000d6c 	bl	40021d10 <CyU3PUsbSuspendHandler>
4001e75c:	e59f017c 	ldr	r0, [pc, #380]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e760:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e764:	e3800004 	orr	r0, r0, #4
4001e768:	e59f1170 	ldr	r1, [pc, #368]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e76c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e770:	e3140008 	tst	r4, #8
4001e774:	0a000008 	beq	4001e79c <CyU3PUibDevCtrlEvtHandler+0x90>
4001e778:	e3a00008 	mov	r0, #8
4001e77c:	e59f115c 	ldr	r1, [pc, #348]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e780:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e784:	eb00092e 	bl	40020c44 <CyU3PUsbResetHandler>
4001e788:	e59f0150 	ldr	r0, [pc, #336]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e78c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e790:	e3800008 	orr	r0, r0, #8
4001e794:	e59f1144 	ldr	r1, [pc, #324]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e798:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e79c:	e3140010 	tst	r4, #16
4001e7a0:	0a000008 	beq	4001e7c8 <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e7a4:	e3a00010 	mov	r0, #16
4001e7a8:	e59f1130 	ldr	r1, [pc, #304]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7ac:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e7b0:	ebffff50 	bl	4001e4f8 <CyU3PHsGrantIntrHandler>
4001e7b4:	e59f0124 	ldr	r0, [pc, #292]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7b8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e7bc:	e3800010 	orr	r0, r0, #16
4001e7c0:	e59f1118 	ldr	r1, [pc, #280]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7c4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e7c8:	e3140040 	tst	r4, #64	; 0x40
4001e7cc:	0a000018 	beq	4001e834 <CyU3PUibDevCtrlEvtHandler+0x128>
4001e7d0:	e59f010c 	ldr	r0, [pc, #268]	; 4001e8e4 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e7d4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e7d8:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e7dc:	e59f1100 	ldr	r1, [pc, #256]	; 4001e8e4 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e7e0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e7e4:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e7e8:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e7ec:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e7f0:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e7f4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e7f8:	e1a00001 	mov	r0, r1
4001e7fc:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e800:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e804:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e808:	e3a00040 	mov	r0, #64	; 0x40
4001e80c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e810:	e3a00001 	mov	r0, #1
4001e814:	e59f10cc 	ldr	r1, [pc, #204]	; 4001e8e8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e818:	e5810014 	str	r0, [r1, #20]
4001e81c:	eb000b38 	bl	40021504 <CyU3PUsbSetupCommand>
4001e820:	e59f00b8 	ldr	r0, [pc, #184]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e824:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e828:	e3800040 	orr	r0, r0, #64	; 0x40
4001e82c:	e59f10ac 	ldr	r1, [pc, #172]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e830:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e834:	e3140080 	tst	r4, #128	; 0x80
4001e838:	0a000006 	beq	4001e858 <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e83c:	e3a00080 	mov	r0, #128	; 0x80
4001e840:	e59f1098 	ldr	r1, [pc, #152]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e844:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e848:	e1c10000 	bic	r0, r1, r0
4001e84c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e850:	e3800080 	orr	r0, r0, #128	; 0x80
4001e854:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e858:	e3140b02 	tst	r4, #2048	; 0x800
4001e85c:	0a00001e 	beq	4001e8dc <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e860:	e59f0080 	ldr	r0, [pc, #128]	; 4001e8e8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e864:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e868:	e3500000 	cmp	r0, #0
4001e86c:	1a000002 	bne	4001e87c <CyU3PUibDevCtrlEvtHandler+0x170>
4001e870:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e874:	e59f1068 	ldr	r1, [pc, #104]	; 4001e8e4 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e878:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e87c:	e3a00b02 	mov	r0, #2048	; 0x800
4001e880:	e59f1058 	ldr	r1, [pc, #88]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e884:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e888:	e59f0058 	ldr	r0, [pc, #88]	; 4001e8e8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e88c:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e890:	e3500000 	cmp	r0, #0
4001e894:	0a00000b 	beq	4001e8c8 <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001e898:	e59f004c 	ldr	r0, [pc, #76]	; 4001e8ec <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e89c:	e5900000 	ldr	r0, [r0]
4001e8a0:	e3500000 	cmp	r0, #0
4001e8a4:	0a000004 	beq	4001e8bc <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001e8a8:	e3a01000 	mov	r1, #0
4001e8ac:	e3a0000a 	mov	r0, #10
4001e8b0:	e59f2034 	ldr	r2, [pc, #52]	; 4001e8ec <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e8b4:	e5922000 	ldr	r2, [r2]
4001e8b8:	e12fff32 	blx	r2
4001e8bc:	e3a00000 	mov	r0, #0
4001e8c0:	e59f1020 	ldr	r1, [pc, #32]	; 4001e8e8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e8c4:	e5810040 	str	r0, [r1, #64]	; 0x40
4001e8c8:	e59f0010 	ldr	r0, [pc, #16]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8cc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e8d0:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001e8d4:	e59f1004 	ldr	r1, [pc, #4]	; 4001e8e0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e8d8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e8dc:	e8bd8010 	pop	{r4, pc}
4001e8e0:	e0031000 	.word	0xe0031000
4001e8e4:	e0032000 	.word	0xe0032000
4001e8e8:	40031d40 	.word	0x40031d40
4001e8ec:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUibEPEvtHandler:

4001e8f0 <CyU3PUibEPEvtHandler>:
4001e8f0:	e92d4070 	push	{r4, r5, r6, lr}
4001e8f4:	e59f0244 	ldr	r0, [pc, #580]	; 4001eb40 <CyU3PUibEPEvtHandler+0x250>
4001e8f8:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001e8fc:	e59f123c 	ldr	r1, [pc, #572]	; 4001eb40 <CyU3PUibEPEvtHandler+0x250>
4001e900:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001e904:	e0004001 	and	r4, r0, r1
4001e908:	e59f0234 	ldr	r0, [pc, #564]	; 4001eb44 <CyU3PUibEPEvtHandler+0x254>
4001e90c:	e5900000 	ldr	r0, [r0]
4001e910:	e0044000 	and	r4, r4, r0
4001e914:	e3a05001 	mov	r5, #1
4001e918:	ea000080 	b	4001eb20 <CyU3PUibEPEvtHandler+0x230>
4001e91c:	e3a00001 	mov	r0, #1
4001e920:	e1140510 	tst	r4, r0, lsl r5
4001e924:	0a00003b 	beq	4001ea18 <CyU3PUibEPEvtHandler+0x128>
4001e928:	e59f0218 	ldr	r0, [pc, #536]	; 4001eb48 <CyU3PUibEPEvtHandler+0x258>
4001e92c:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e930:	e59f0214 	ldr	r0, [pc, #532]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001e934:	e5900000 	ldr	r0, [r0]
4001e938:	e3500000 	cmp	r0, #0
4001e93c:	0a000033 	beq	4001ea10 <CyU3PUibEPEvtHandler+0x120>
4001e940:	e59f0208 	ldr	r0, [pc, #520]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001e944:	e5900000 	ldr	r0, [r0]
4001e948:	e3100001 	tst	r0, #1
4001e94c:	0a000008 	beq	4001e974 <CyU3PUibEPEvtHandler+0x84>
4001e950:	e3160702 	tst	r6, #524288	; 0x80000
4001e954:	0a000006 	beq	4001e974 <CyU3PUibEPEvtHandler+0x84>
4001e958:	e3852080 	orr	r2, r5, #128	; 0x80
4001e95c:	e59f01f0 	ldr	r0, [pc, #496]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001e960:	e5d01009 	ldrb	r1, [r0, #9]
4001e964:	e3a00001 	mov	r0, #1
4001e968:	e59f31dc 	ldr	r3, [pc, #476]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001e96c:	e5933000 	ldr	r3, [r3]
4001e970:	e12fff33 	blx	r3
4001e974:	e59f01d4 	ldr	r0, [pc, #468]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001e978:	e5900000 	ldr	r0, [r0]
4001e97c:	e3100002 	tst	r0, #2
4001e980:	0a000008 	beq	4001e9a8 <CyU3PUibEPEvtHandler+0xb8>
4001e984:	e3160602 	tst	r6, #2097152	; 0x200000
4001e988:	0a000006 	beq	4001e9a8 <CyU3PUibEPEvtHandler+0xb8>
4001e98c:	e3852080 	orr	r2, r5, #128	; 0x80
4001e990:	e59f01bc 	ldr	r0, [pc, #444]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001e994:	e5d01009 	ldrb	r1, [r0, #9]
4001e998:	e3a00002 	mov	r0, #2
4001e99c:	e59f31a8 	ldr	r3, [pc, #424]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001e9a0:	e5933000 	ldr	r3, [r3]
4001e9a4:	e12fff33 	blx	r3
4001e9a8:	e59f01a0 	ldr	r0, [pc, #416]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001e9ac:	e5900000 	ldr	r0, [r0]
4001e9b0:	e3100004 	tst	r0, #4
4001e9b4:	0a000008 	beq	4001e9dc <CyU3PUibEPEvtHandler+0xec>
4001e9b8:	e3160501 	tst	r6, #4194304	; 0x400000
4001e9bc:	0a000006 	beq	4001e9dc <CyU3PUibEPEvtHandler+0xec>
4001e9c0:	e3852080 	orr	r2, r5, #128	; 0x80
4001e9c4:	e59f0188 	ldr	r0, [pc, #392]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001e9c8:	e5d01009 	ldrb	r1, [r0, #9]
4001e9cc:	e3a00004 	mov	r0, #4
4001e9d0:	e59f3174 	ldr	r3, [pc, #372]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001e9d4:	e5933000 	ldr	r3, [r3]
4001e9d8:	e12fff33 	blx	r3
4001e9dc:	e59f016c 	ldr	r0, [pc, #364]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001e9e0:	e5900000 	ldr	r0, [r0]
4001e9e4:	e3100008 	tst	r0, #8
4001e9e8:	0a000008 	beq	4001ea10 <CyU3PUibEPEvtHandler+0x120>
4001e9ec:	e3160502 	tst	r6, #8388608	; 0x800000
4001e9f0:	0a000006 	beq	4001ea10 <CyU3PUibEPEvtHandler+0x120>
4001e9f4:	e3852080 	orr	r2, r5, #128	; 0x80
4001e9f8:	e59f0154 	ldr	r0, [pc, #340]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001e9fc:	e5d01009 	ldrb	r1, [r0, #9]
4001ea00:	e3a00008 	mov	r0, #8
4001ea04:	e59f3140 	ldr	r3, [pc, #320]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001ea08:	e5933000 	ldr	r3, [r3]
4001ea0c:	e12fff33 	blx	r3
4001ea10:	e59f0130 	ldr	r0, [pc, #304]	; 4001eb48 <CyU3PUibEPEvtHandler+0x258>
4001ea14:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ea18:	e2850010 	add	r0, r5, #16
4001ea1c:	e3a01001 	mov	r1, #1
4001ea20:	e1140011 	tst	r4, r1, lsl r0
4001ea24:	0a00003b 	beq	4001eb18 <CyU3PUibEPEvtHandler+0x228>
4001ea28:	e59f0128 	ldr	r0, [pc, #296]	; 4001eb58 <CyU3PUibEPEvtHandler+0x268>
4001ea2c:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ea30:	e59f0114 	ldr	r0, [pc, #276]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001ea34:	e5900000 	ldr	r0, [r0]
4001ea38:	e3500000 	cmp	r0, #0
4001ea3c:	0a000033 	beq	4001eb10 <CyU3PUibEPEvtHandler+0x220>
4001ea40:	e59f0108 	ldr	r0, [pc, #264]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001ea44:	e5900000 	ldr	r0, [r0]
4001ea48:	e3100001 	tst	r0, #1
4001ea4c:	0a000008 	beq	4001ea74 <CyU3PUibEPEvtHandler+0x184>
4001ea50:	e3160702 	tst	r6, #524288	; 0x80000
4001ea54:	0a000006 	beq	4001ea74 <CyU3PUibEPEvtHandler+0x184>
4001ea58:	e59f00f4 	ldr	r0, [pc, #244]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001ea5c:	e5d01009 	ldrb	r1, [r0, #9]
4001ea60:	e1a02005 	mov	r2, r5
4001ea64:	e3a00001 	mov	r0, #1
4001ea68:	e59f30dc 	ldr	r3, [pc, #220]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001ea6c:	e5933000 	ldr	r3, [r3]
4001ea70:	e12fff33 	blx	r3
4001ea74:	e59f00d4 	ldr	r0, [pc, #212]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001ea78:	e5900000 	ldr	r0, [r0]
4001ea7c:	e3100002 	tst	r0, #2
4001ea80:	0a000008 	beq	4001eaa8 <CyU3PUibEPEvtHandler+0x1b8>
4001ea84:	e3160602 	tst	r6, #2097152	; 0x200000
4001ea88:	0a000006 	beq	4001eaa8 <CyU3PUibEPEvtHandler+0x1b8>
4001ea8c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001ea90:	e5d01009 	ldrb	r1, [r0, #9]
4001ea94:	e1a02005 	mov	r2, r5
4001ea98:	e3a00002 	mov	r0, #2
4001ea9c:	e59f30a8 	ldr	r3, [pc, #168]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001eaa0:	e5933000 	ldr	r3, [r3]
4001eaa4:	e12fff33 	blx	r3
4001eaa8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001eaac:	e5900000 	ldr	r0, [r0]
4001eab0:	e3100004 	tst	r0, #4
4001eab4:	0a000008 	beq	4001eadc <CyU3PUibEPEvtHandler+0x1ec>
4001eab8:	e3160501 	tst	r6, #4194304	; 0x400000
4001eabc:	0a000006 	beq	4001eadc <CyU3PUibEPEvtHandler+0x1ec>
4001eac0:	e59f008c 	ldr	r0, [pc, #140]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001eac4:	e5d01009 	ldrb	r1, [r0, #9]
4001eac8:	e1a02005 	mov	r2, r5
4001eacc:	e3a00004 	mov	r0, #4
4001ead0:	e59f3074 	ldr	r3, [pc, #116]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001ead4:	e5933000 	ldr	r3, [r3]
4001ead8:	e12fff33 	blx	r3
4001eadc:	e59f006c 	ldr	r0, [pc, #108]	; 4001eb50 <CyU3PUibEPEvtHandler+0x260>
4001eae0:	e5900000 	ldr	r0, [r0]
4001eae4:	e3100008 	tst	r0, #8
4001eae8:	0a000008 	beq	4001eb10 <CyU3PUibEPEvtHandler+0x220>
4001eaec:	e3160502 	tst	r6, #8388608	; 0x800000
4001eaf0:	0a000006 	beq	4001eb10 <CyU3PUibEPEvtHandler+0x220>
4001eaf4:	e59f0058 	ldr	r0, [pc, #88]	; 4001eb54 <CyU3PUibEPEvtHandler+0x264>
4001eaf8:	e5d01009 	ldrb	r1, [r0, #9]
4001eafc:	e1a02005 	mov	r2, r5
4001eb00:	e3a00008 	mov	r0, #8
4001eb04:	e59f3040 	ldr	r3, [pc, #64]	; 4001eb4c <CyU3PUibEPEvtHandler+0x25c>
4001eb08:	e5933000 	ldr	r3, [r3]
4001eb0c:	e12fff33 	blx	r3
4001eb10:	e59f0040 	ldr	r0, [pc, #64]	; 4001eb58 <CyU3PUibEPEvtHandler+0x268>
4001eb14:	e7806105 	str	r6, [r0, r5, lsl #2]
4001eb18:	e2850001 	add	r0, r5, #1
4001eb1c:	e20050ff 	and	r5, r0, #255	; 0xff
4001eb20:	e3550010 	cmp	r5, #16
4001eb24:	baffff7c 	blt	4001e91c <CyU3PUibEPEvtHandler+0x2c>
4001eb28:	e59f002c 	ldr	r0, [pc, #44]	; 4001eb5c <CyU3PUibEPEvtHandler+0x26c>
4001eb2c:	e5900004 	ldr	r0, [r0, #4]
4001eb30:	e3800010 	orr	r0, r0, #16
4001eb34:	e59f1020 	ldr	r1, [pc, #32]	; 4001eb5c <CyU3PUibEPEvtHandler+0x26c>
4001eb38:	e5810004 	str	r0, [r1, #4]
4001eb3c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001eb40:	e0031000 	.word	0xe0031000
4001eb44:	40030d9c 	.word	0x40030d9c
4001eb48:	e0031418 	.word	0xe0031418
4001eb4c:	40030d94 	.word	0x40030d94
4001eb50:	40030d98 	.word	0x40030d98
4001eb54:	40031d40 	.word	0x40031d40
4001eb58:	e0031498 	.word	0xe0031498
4001eb5c:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001eb60 <CyU3PUibInitVars>:
4001eb60:	e92d4010 	push	{r4, lr}
4001eb64:	e3a0207c 	mov	r2, #124	; 0x7c
4001eb68:	e3a01000 	mov	r1, #0
4001eb6c:	e59f0070 	ldr	r0, [pc, #112]	; 4001ebe4 <CyU3PUibInitVars+0x84>
4001eb70:	ebff92d0 	bl	400036b8 <CyU3PMemSet>
4001eb74:	e3a02074 	mov	r2, #116	; 0x74
4001eb78:	e3a01000 	mov	r1, #0
4001eb7c:	e59f0064 	ldr	r0, [pc, #100]	; 4001ebe8 <CyU3PUibInitVars+0x88>
4001eb80:	ebff92cc 	bl	400036b8 <CyU3PMemSet>
4001eb84:	e3a00000 	mov	r0, #0
4001eb88:	e59f105c 	ldr	r1, [pc, #92]	; 4001ebec <CyU3PUibInitVars+0x8c>
4001eb8c:	e5810000 	str	r0, [r1]
4001eb90:	e59f1058 	ldr	r1, [pc, #88]	; 4001ebf0 <CyU3PUibInitVars+0x90>
4001eb94:	e5810000 	str	r0, [r1]
4001eb98:	e59f1054 	ldr	r1, [pc, #84]	; 4001ebf4 <CyU3PUibInitVars+0x94>
4001eb9c:	e5810000 	str	r0, [r1]
4001eba0:	e59f1050 	ldr	r1, [pc, #80]	; 4001ebf8 <CyU3PUibInitVars+0x98>
4001eba4:	e5810000 	str	r0, [r1]
4001eba8:	e59f104c 	ldr	r1, [pc, #76]	; 4001ebfc <CyU3PUibInitVars+0x9c>
4001ebac:	e5810000 	str	r0, [r1]
4001ebb0:	e59f1048 	ldr	r1, [pc, #72]	; 4001ec00 <CyU3PUibInitVars+0xa0>
4001ebb4:	e5810000 	str	r0, [r1]
4001ebb8:	e59f1044 	ldr	r1, [pc, #68]	; 4001ec04 <CyU3PUibInitVars+0xa4>
4001ebbc:	e5810000 	str	r0, [r1]
4001ebc0:	e59f1040 	ldr	r1, [pc, #64]	; 4001ec08 <CyU3PUibInitVars+0xa8>
4001ebc4:	e5810000 	str	r0, [r1]
4001ebc8:	e59f103c 	ldr	r1, [pc, #60]	; 4001ec0c <CyU3PUibInitVars+0xac>
4001ebcc:	e5810000 	str	r0, [r1]
4001ebd0:	e59f1038 	ldr	r1, [pc, #56]	; 4001ec10 <CyU3PUibInitVars+0xb0>
4001ebd4:	e5810000 	str	r0, [r1]
4001ebd8:	e59f1034 	ldr	r1, [pc, #52]	; 4001ec14 <CyU3PUibInitVars+0xb4>
4001ebdc:	e5810000 	str	r0, [r1]
4001ebe0:	e8bd8010 	pop	{r4, pc}
4001ebe4:	40031d40 	.word	0x40031d40
4001ebe8:	40031f98 	.word	0x40031f98
4001ebec:	40030d7c 	.word	0x40030d7c
4001ebf0:	40030d80 	.word	0x40030d80
4001ebf4:	40030d84 	.word	0x40030d84
4001ebf8:	40030dd0 	.word	0x40030dd0
4001ebfc:	40030db8 	.word	0x40030db8
4001ec00:	40030dbc 	.word	0x40030dbc
4001ec04:	40030dc0 	.word	0x40030dc0
4001ec08:	40030d94 	.word	0x40030d94
4001ec0c:	40030d98 	.word	0x40030d98
4001ec10:	40030d9c 	.word	0x40030d9c
4001ec14:	40030d5c 	.word	0x40030d5c

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001ec18 <CyU3PUibLnkErrClrTimerCb>:
4001ec18:	e92d4010 	push	{r4, lr}
4001ec1c:	e1a04000 	mov	r4, r0
4001ec20:	ebfff82d 	bl	4001ccdc <CyU3PUsbGetSpeed>
4001ec24:	e3500003 	cmp	r0, #3
4001ec28:	1a000003 	bne	4001ec3c <CyU3PUibLnkErrClrTimerCb+0x24>
4001ec2c:	e59f000c 	ldr	r0, [pc, #12]	; 4001ec40 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ec30:	e5900014 	ldr	r0, [r0, #20]
4001ec34:	e59f1008 	ldr	r1, [pc, #8]	; 4001ec44 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001ec38:	e5810000 	str	r0, [r1]
4001ec3c:	e8bd8010 	pop	{r4, pc}
4001ec40:	e0033000 	.word	0xe0033000
4001ec44:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001ec48 <CyU3PUibLnkIntrEvtHandler>:
4001ec48:	e92d4010 	push	{r4, lr}
4001ec4c:	e59f008c 	ldr	r0, [pc, #140]	; 4001ece0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ec50:	e5904004 	ldr	r4, [r0, #4]
4001ec54:	e3140902 	tst	r4, #32768	; 0x8000
4001ec58:	0a00000b 	beq	4001ec8c <CyU3PUibLnkIntrEvtHandler+0x44>
4001ec5c:	e59f0080 	ldr	r0, [pc, #128]	; 4001ece4 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001ec60:	e5900000 	ldr	r0, [r0]
4001ec64:	e59f1074 	ldr	r1, [pc, #116]	; 4001ece0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ec68:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001ec6c:	eb000859 	bl	40020dd8 <CyU3PUsbSSConnecthandler>
4001ec70:	e3a00902 	mov	r0, #32768	; 0x8000
4001ec74:	e59f1064 	ldr	r1, [pc, #100]	; 4001ece0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ec78:	e5810004 	str	r0, [r1, #4]
4001ec7c:	e1c10000 	bic	r0, r1, r0
4001ec80:	e5900008 	ldr	r0, [r0, #8]
4001ec84:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001ec88:	e5810008 	str	r0, [r1, #8]
4001ec8c:	e3140801 	tst	r4, #65536	; 0x10000
4001ec90:	0a000007 	beq	4001ecb4 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001ec94:	eb0008cc 	bl	40020fcc <CyU3PUsbSSDisConnecthandler>
4001ec98:	e3a00801 	mov	r0, #65536	; 0x10000
4001ec9c:	e59f103c 	ldr	r1, [pc, #60]	; 4001ece0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eca0:	e5810004 	str	r0, [r1, #4]
4001eca4:	e1810000 	orr	r0, r1, r0
4001eca8:	e5900008 	ldr	r0, [r0, #8]
4001ecac:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ecb0:	e5810008 	str	r0, [r1, #8]
4001ecb4:	e3140802 	tst	r4, #131072	; 0x20000
4001ecb8:	0a000007 	beq	4001ecdc <CyU3PUibLnkIntrEvtHandler+0x94>
4001ecbc:	eb000926 	bl	4002115c <CyU3PUsbSSReset>
4001ecc0:	e3a00802 	mov	r0, #131072	; 0x20000
4001ecc4:	e59f1014 	ldr	r1, [pc, #20]	; 4001ece0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ecc8:	e5810004 	str	r0, [r1, #4]
4001eccc:	e1810000 	orr	r0, r1, r0
4001ecd0:	e5900008 	ldr	r0, [r0, #8]
4001ecd4:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001ecd8:	e5810008 	str	r0, [r1, #8]
4001ecdc:	e8bd8010 	pop	{r4, pc}
4001ece0:	e0033000 	.word	0xe0033000
4001ece4:	40030da8 	.word	0x40030da8

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001ece8 <CyU3PUibProtEpIntrEvtHandler>:
4001ece8:	e92d4070 	push	{r4, r5, r6, lr}
4001ecec:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f0a8 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ecf0:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001ecf4:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f0a8 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ecf8:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001ecfc:	e0005001 	and	r5, r0, r1
4001ed00:	e3a04001 	mov	r4, #1
4001ed04:	ea0000df 	b	4001f088 <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001ed08:	e3a00001 	mov	r0, #1
4001ed0c:	e1150410 	tst	r5, r0, lsl r4
4001ed10:	0a000081 	beq	4001ef1c <CyU3PUibProtEpIntrEvtHandler+0x234>
4001ed14:	e59f0390 	ldr	r0, [pc, #912]	; 4001f0ac <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ed18:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ed1c:	e3160901 	tst	r6, #16384	; 0x4000
4001ed20:	0a00002a 	beq	4001edd0 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ed24:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ed28:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ed2c:	e3800002 	orr	r0, r0, #2
4001ed30:	e59f1374 	ldr	r1, [pc, #884]	; 4001f0ac <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ed34:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ed38:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001ed3c:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ed40:	e1a01802 	lsl	r1, r2, #16
4001ed44:	e1a01821 	lsr	r1, r1, #16
4001ed48:	e20420ff 	and	r2, r4, #255	; 0xff
4001ed4c:	e3820080 	orr	r0, r2, #128	; 0x80
4001ed50:	ebfffa90 	bl	4001d798 <CyU3PUsbSendNrdy>
4001ed54:	e20410ff 	and	r1, r4, #255	; 0xff
4001ed58:	e3810080 	orr	r0, r1, #128	; 0x80
4001ed5c:	ebfff9a1 	bl	4001d3e8 <CyU3PUsbResetEp>
4001ed60:	e3a0000a 	mov	r0, #10
4001ed64:	ebffd20c 	bl	4001359c <CyU3PBusyWait>
4001ed68:	e59f2340 	ldr	r2, [pc, #832]	; 4001f0b0 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001ed6c:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ed70:	e1a01802 	lsl	r1, r2, #16
4001ed74:	e1a01821 	lsr	r1, r1, #16
4001ed78:	e20420ff 	and	r2, r4, #255	; 0xff
4001ed7c:	e3820080 	orr	r0, r2, #128	; 0x80
4001ed80:	ebfffa47 	bl	4001d6a4 <CyU3PUsbSendErdy>
4001ed84:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001ed88:	e59f131c 	ldr	r1, [pc, #796]	; 4001f0ac <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ed8c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ed90:	e59f031c 	ldr	r0, [pc, #796]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed94:	e5900000 	ldr	r0, [r0]
4001ed98:	e3100020 	tst	r0, #32
4001ed9c:	0a00000b 	beq	4001edd0 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001eda0:	e3a00001 	mov	r0, #1
4001eda4:	e59f130c 	ldr	r1, [pc, #780]	; 4001f0b8 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001eda8:	e5911000 	ldr	r1, [r1]
4001edac:	e1110410 	tst	r1, r0, lsl r4
4001edb0:	0a000006 	beq	4001edd0 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001edb4:	e20400ff 	and	r0, r4, #255	; 0xff
4001edb8:	e3802080 	orr	r2, r0, #128	; 0x80
4001edbc:	e3a01003 	mov	r1, #3
4001edc0:	e3a00020 	mov	r0, #32
4001edc4:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edc8:	e5933000 	ldr	r3, [r3]
4001edcc:	e12fff33 	blx	r3
4001edd0:	e3160801 	tst	r6, #65536	; 0x10000
4001edd4:	0a000004 	beq	4001edec <CyU3PUibProtEpIntrEvtHandler+0x104>
4001edd8:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001eddc:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ede0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ede4:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f0ac <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ede8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001edec:	e3a00001 	mov	r0, #1
4001edf0:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f0b8 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001edf4:	e5911000 	ldr	r1, [r1]
4001edf8:	e1110410 	tst	r1, r0, lsl r4
4001edfc:	0a000044 	beq	4001ef14 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ee00:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee04:	e5900000 	ldr	r0, [r0]
4001ee08:	e3500000 	cmp	r0, #0
4001ee0c:	0a000040 	beq	4001ef14 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ee10:	e59f029c 	ldr	r0, [pc, #668]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee14:	e5900000 	ldr	r0, [r0]
4001ee18:	e3100001 	tst	r0, #1
4001ee1c:	0a000008 	beq	4001ee44 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ee20:	e3160b01 	tst	r6, #1024	; 0x400
4001ee24:	0a000006 	beq	4001ee44 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ee28:	e20400ff 	and	r0, r4, #255	; 0xff
4001ee2c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ee30:	e3a01003 	mov	r1, #3
4001ee34:	e3a00001 	mov	r0, #1
4001ee38:	e59f327c 	ldr	r3, [pc, #636]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee3c:	e5933000 	ldr	r3, [r3]
4001ee40:	e12fff33 	blx	r3
4001ee44:	e59f0268 	ldr	r0, [pc, #616]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee48:	e5900000 	ldr	r0, [r0]
4001ee4c:	e3100002 	tst	r0, #2
4001ee50:	0a000008 	beq	4001ee78 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ee54:	e3160a01 	tst	r6, #4096	; 0x1000
4001ee58:	0a000006 	beq	4001ee78 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ee5c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ee60:	e3802080 	orr	r2, r0, #128	; 0x80
4001ee64:	e3a01003 	mov	r1, #3
4001ee68:	e3a00002 	mov	r0, #2
4001ee6c:	e59f3248 	ldr	r3, [pc, #584]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee70:	e5933000 	ldr	r3, [r3]
4001ee74:	e12fff33 	blx	r3
4001ee78:	e59f0234 	ldr	r0, [pc, #564]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee7c:	e5900000 	ldr	r0, [r0]
4001ee80:	e3100004 	tst	r0, #4
4001ee84:	0a000008 	beq	4001eeac <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ee88:	e3160a02 	tst	r6, #8192	; 0x2000
4001ee8c:	0a000006 	beq	4001eeac <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ee90:	e20400ff 	and	r0, r4, #255	; 0xff
4001ee94:	e3802080 	orr	r2, r0, #128	; 0x80
4001ee98:	e3a01003 	mov	r1, #3
4001ee9c:	e3a00004 	mov	r0, #4
4001eea0:	e59f3214 	ldr	r3, [pc, #532]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eea4:	e5933000 	ldr	r3, [r3]
4001eea8:	e12fff33 	blx	r3
4001eeac:	e59f0200 	ldr	r0, [pc, #512]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eeb0:	e5900000 	ldr	r0, [r0]
4001eeb4:	e3100010 	tst	r0, #16
4001eeb8:	0a000008 	beq	4001eee0 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001eebc:	e3160c02 	tst	r6, #512	; 0x200
4001eec0:	0a000006 	beq	4001eee0 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001eec4:	e20400ff 	and	r0, r4, #255	; 0xff
4001eec8:	e3802080 	orr	r2, r0, #128	; 0x80
4001eecc:	e3a01003 	mov	r1, #3
4001eed0:	e3a00010 	mov	r0, #16
4001eed4:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eed8:	e5933000 	ldr	r3, [r3]
4001eedc:	e12fff33 	blx	r3
4001eee0:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eee4:	e5900000 	ldr	r0, [r0]
4001eee8:	e3100040 	tst	r0, #64	; 0x40
4001eeec:	0a000008 	beq	4001ef14 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001eef0:	e3160802 	tst	r6, #131072	; 0x20000
4001eef4:	0a000006 	beq	4001ef14 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001eef8:	e20400ff 	and	r0, r4, #255	; 0xff
4001eefc:	e3802080 	orr	r2, r0, #128	; 0x80
4001ef00:	e3a01003 	mov	r1, #3
4001ef04:	e3a00040 	mov	r0, #64	; 0x40
4001ef08:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef0c:	e5933000 	ldr	r3, [r3]
4001ef10:	e12fff33 	blx	r3
4001ef14:	e59f0190 	ldr	r0, [pc, #400]	; 4001f0ac <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ef18:	e7806104 	str	r6, [r0, r4, lsl #2]
4001ef1c:	e2840010 	add	r0, r4, #16
4001ef20:	e3a01001 	mov	r1, #1
4001ef24:	e1150011 	tst	r5, r1, lsl r0
4001ef28:	0a000055 	beq	4001f084 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001ef2c:	e59f018c 	ldr	r0, [pc, #396]	; 4001f0c0 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001ef30:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ef34:	e2840010 	add	r0, r4, #16
4001ef38:	e1a00011 	lsl	r0, r1, r0
4001ef3c:	e59f1174 	ldr	r1, [pc, #372]	; 4001f0b8 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ef40:	e5911000 	ldr	r1, [r1]
4001ef44:	e1100001 	tst	r0, r1
4001ef48:	0a00004b 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ef4c:	e59f0168 	ldr	r0, [pc, #360]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef50:	e5900000 	ldr	r0, [r0]
4001ef54:	e3500000 	cmp	r0, #0
4001ef58:	0a000047 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ef5c:	e59f0150 	ldr	r0, [pc, #336]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef60:	e5900000 	ldr	r0, [r0]
4001ef64:	e3100001 	tst	r0, #1
4001ef68:	0a000007 	beq	4001ef8c <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ef6c:	e3160b01 	tst	r6, #1024	; 0x400
4001ef70:	0a000005 	beq	4001ef8c <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ef74:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef78:	e3a01003 	mov	r1, #3
4001ef7c:	e3a00001 	mov	r0, #1
4001ef80:	e59f3134 	ldr	r3, [pc, #308]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef84:	e5933000 	ldr	r3, [r3]
4001ef88:	e12fff33 	blx	r3
4001ef8c:	e59f0120 	ldr	r0, [pc, #288]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef90:	e5900000 	ldr	r0, [r0]
4001ef94:	e3100002 	tst	r0, #2
4001ef98:	0a000007 	beq	4001efbc <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ef9c:	e3160a01 	tst	r6, #4096	; 0x1000
4001efa0:	0a000005 	beq	4001efbc <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001efa4:	e20420ff 	and	r2, r4, #255	; 0xff
4001efa8:	e3a01003 	mov	r1, #3
4001efac:	e3a00002 	mov	r0, #2
4001efb0:	e59f3104 	ldr	r3, [pc, #260]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001efb4:	e5933000 	ldr	r3, [r3]
4001efb8:	e12fff33 	blx	r3
4001efbc:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001efc0:	e5900000 	ldr	r0, [r0]
4001efc4:	e3100004 	tst	r0, #4
4001efc8:	0a000007 	beq	4001efec <CyU3PUibProtEpIntrEvtHandler+0x304>
4001efcc:	e3160a02 	tst	r6, #8192	; 0x2000
4001efd0:	0a000005 	beq	4001efec <CyU3PUibProtEpIntrEvtHandler+0x304>
4001efd4:	e20420ff 	and	r2, r4, #255	; 0xff
4001efd8:	e3a01003 	mov	r1, #3
4001efdc:	e3a00004 	mov	r0, #4
4001efe0:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001efe4:	e5933000 	ldr	r3, [r3]
4001efe8:	e12fff33 	blx	r3
4001efec:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eff0:	e5900000 	ldr	r0, [r0]
4001eff4:	e3100010 	tst	r0, #16
4001eff8:	0a000007 	beq	4001f01c <CyU3PUibProtEpIntrEvtHandler+0x334>
4001effc:	e3160c02 	tst	r6, #512	; 0x200
4001f000:	0a000005 	beq	4001f01c <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f004:	e20420ff 	and	r2, r4, #255	; 0xff
4001f008:	e3a01003 	mov	r1, #3
4001f00c:	e3a00010 	mov	r0, #16
4001f010:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f014:	e5933000 	ldr	r3, [r3]
4001f018:	e12fff33 	blx	r3
4001f01c:	e59f0090 	ldr	r0, [pc, #144]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f020:	e5900000 	ldr	r0, [r0]
4001f024:	e3100040 	tst	r0, #64	; 0x40
4001f028:	0a000007 	beq	4001f04c <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f02c:	e3160802 	tst	r6, #131072	; 0x20000
4001f030:	0a000005 	beq	4001f04c <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f034:	e20420ff 	and	r2, r4, #255	; 0xff
4001f038:	e3a01003 	mov	r1, #3
4001f03c:	e3a00040 	mov	r0, #64	; 0x40
4001f040:	e59f3074 	ldr	r3, [pc, #116]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f044:	e5933000 	ldr	r3, [r3]
4001f048:	e12fff33 	blx	r3
4001f04c:	e59f0060 	ldr	r0, [pc, #96]	; 4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f050:	e5900000 	ldr	r0, [r0]
4001f054:	e3100020 	tst	r0, #32
4001f058:	0a000007 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f05c:	e3160901 	tst	r6, #16384	; 0x4000
4001f060:	0a000005 	beq	4001f07c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f064:	e20420ff 	and	r2, r4, #255	; 0xff
4001f068:	e3a01003 	mov	r1, #3
4001f06c:	e3a00020 	mov	r0, #32
4001f070:	e59f3044 	ldr	r3, [pc, #68]	; 4001f0bc <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f074:	e5933000 	ldr	r3, [r3]
4001f078:	e12fff33 	blx	r3
4001f07c:	e59f003c 	ldr	r0, [pc, #60]	; 4001f0c0 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f080:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f084:	e2844001 	add	r4, r4, #1
4001f088:	e3540010 	cmp	r4, #16
4001f08c:	baffff1d 	blt	4001ed08 <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f090:	e59f002c 	ldr	r0, [pc, #44]	; 4001f0c4 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f094:	e5900004 	ldr	r0, [r0, #4]
4001f098:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f09c:	e59f1020 	ldr	r1, [pc, #32]	; 4001f0c4 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f0a0:	e5810004 	str	r0, [r1, #4]
4001f0a4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f0a8:	e0033000 	.word	0xe0033000
4001f0ac:	e0033500 	.word	0xe0033500
4001f0b0:	e00335c0 	.word	0xe00335c0
4001f0b4:	40030d98 	.word	0x40030d98
4001f0b8:	40030d9c 	.word	0x40030d9c
4001f0bc:	40030d94 	.word	0x40030d94
4001f0c0:	e0033600 	.word	0xe0033600
4001f0c4:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f0c8 <CyU3PUibProtIntrEvtHandler>:
4001f0c8:	e92d4010 	push	{r4, lr}
4001f0cc:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f1a4 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f0d0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f0d4:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f1a4 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f0d8:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f0dc:	e0004001 	and	r4, r0, r1
4001f0e0:	e3140c02 	tst	r4, #512	; 0x200
4001f0e4:	0a000006 	beq	4001f104 <CyU3PUibProtIntrEvtHandler+0x3c>
4001f0e8:	e3a00c02 	mov	r0, #512	; 0x200
4001f0ec:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f1a4 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f0f0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f0f4:	e3a00001 	mov	r0, #1
4001f0f8:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f1a8 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f0fc:	e5810014 	str	r0, [r1, #20]
4001f100:	eb0008ff 	bl	40021504 <CyU3PUsbSetupCommand>
4001f104:	e3140901 	tst	r4, #16384	; 0x4000
4001f108:	0a00000a 	beq	4001f138 <CyU3PUibProtIntrEvtHandler+0x70>
4001f10c:	e59f0090 	ldr	r0, [pc, #144]	; 4001f1a4 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f110:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f114:	e3c00004 	bic	r0, r0, #4
4001f118:	e59f1084 	ldr	r1, [pc, #132]	; 4001f1a4 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f11c:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f120:	e1a00001 	mov	r0, r1
4001f124:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f128:	e3c00004 	bic	r0, r0, #4
4001f12c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f130:	e3a00901 	mov	r0, #16384	; 0x4000
4001f134:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f138:	e3140b02 	tst	r4, #2048	; 0x800
4001f13c:	0a000012 	beq	4001f18c <CyU3PUibProtIntrEvtHandler+0xc4>
4001f140:	e59f0060 	ldr	r0, [pc, #96]	; 4001f1a8 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f144:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f148:	e3500000 	cmp	r0, #0
4001f14c:	0a00000b 	beq	4001f180 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f150:	e59f0054 	ldr	r0, [pc, #84]	; 4001f1ac <CyU3PUibProtIntrEvtHandler+0xe4>
4001f154:	e5900000 	ldr	r0, [r0]
4001f158:	e3500000 	cmp	r0, #0
4001f15c:	0a000004 	beq	4001f174 <CyU3PUibProtIntrEvtHandler+0xac>
4001f160:	e3a01000 	mov	r1, #0
4001f164:	e3a0000a 	mov	r0, #10
4001f168:	e59f203c 	ldr	r2, [pc, #60]	; 4001f1ac <CyU3PUibProtIntrEvtHandler+0xe4>
4001f16c:	e5922000 	ldr	r2, [r2]
4001f170:	e12fff32 	blx	r2
4001f174:	e3a00000 	mov	r0, #0
4001f178:	e59f1028 	ldr	r1, [pc, #40]	; 4001f1a8 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f17c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f180:	e3a00b02 	mov	r0, #2048	; 0x800
4001f184:	e59f1018 	ldr	r1, [pc, #24]	; 4001f1a4 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f188:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f18c:	e59f001c 	ldr	r0, [pc, #28]	; 4001f1b0 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f190:	e5900004 	ldr	r0, [r0, #4]
4001f194:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f198:	e59f1010 	ldr	r1, [pc, #16]	; 4001f1b0 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f19c:	e5810004 	str	r0, [r1, #4]
4001f1a0:	e8bd8010 	pop	{r4, pc}
4001f1a4:	e0033000 	.word	0xe0033000
4001f1a8:	40031d40 	.word	0x40031d40
4001f1ac:	40030db8 	.word	0x40030db8
4001f1b0:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f1b4 <CyU3PUibSendDescr>:
4001f1b4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f1b8:	e1a04000 	mov	r4, r0
4001f1bc:	e1a05001 	mov	r5, r1
4001f1c0:	e3a06000 	mov	r6, #0
4001f1c4:	e3a07000 	mov	r7, #0
4001f1c8:	e3a08000 	mov	r8, #0
4001f1cc:	e3a09000 	mov	r9, #0
4001f1d0:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f7bc <CyU3PUibSendDescr+0x608>
4001f1d4:	e0000825 	and	r0, r0, r5, lsr #16
4001f1d8:	e58d0000 	str	r0, [sp]
4001f1dc:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f1e0:	e5d00009 	ldrb	r0, [r0, #9]
4001f1e4:	e3500003 	cmp	r0, #3
4001f1e8:	1a000001 	bne	4001f1f4 <CyU3PUibSendDescr+0x40>
4001f1ec:	e3a00c02 	mov	r0, #512	; 0x200
4001f1f0:	ea000000 	b	4001f1f8 <CyU3PUibSendDescr+0x44>
4001f1f4:	e3a00040 	mov	r0, #64	; 0x40
4001f1f8:	e1a0a800 	lsl	sl, r0, #16
4001f1fc:	e1a0a82a 	lsr	sl, sl, #16
4001f200:	e1a00c24 	lsr	r0, r4, #24
4001f204:	e3500006 	cmp	r0, #6
4001f208:	0a0000b4 	beq	4001f4e0 <CyU3PUibSendDescr+0x32c>
4001f20c:	ca000006 	bgt	4001f22c <CyU3PUibSendDescr+0x78>
4001f210:	e3500001 	cmp	r0, #1
4001f214:	0a00000b 	beq	4001f248 <CyU3PUibSendDescr+0x94>
4001f218:	e3500002 	cmp	r0, #2
4001f21c:	0a000020 	beq	4001f2a4 <CyU3PUibSendDescr+0xf0>
4001f220:	e3500003 	cmp	r0, #3
4001f224:	1a00013b 	bne	4001f718 <CyU3PUibSendDescr+0x564>
4001f228:	ea00007b 	b	4001f41c <CyU3PUibSendDescr+0x268>
4001f22c:	e3500007 	cmp	r0, #7
4001f230:	0a0000b8 	beq	4001f518 <CyU3PUibSendDescr+0x364>
4001f234:	e3500009 	cmp	r0, #9
4001f238:	0a000122 	beq	4001f6c8 <CyU3PUibSendDescr+0x514>
4001f23c:	e350000f 	cmp	r0, #15
4001f240:	1a000134 	bne	4001f718 <CyU3PUibSendDescr+0x564>
4001f244:	ea0000f6 	b	4001f624 <CyU3PUibSendDescr+0x470>
4001f248:	e1a00000 	nop			; (mov r0, r0)
4001f24c:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f250:	e5d00009 	ldrb	r0, [r0, #9]
4001f254:	e3500003 	cmp	r0, #3
4001f258:	1a000008 	bne	4001f280 <CyU3PUibSendDescr+0xcc>
4001f25c:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f260:	e5900004 	ldr	r0, [r0, #4]
4001f264:	e3500000 	cmp	r0, #0
4001f268:	0a00000c 	beq	4001f2a0 <CyU3PUibSendDescr+0xec>
4001f26c:	e3a09001 	mov	r9, #1
4001f270:	e3a06012 	mov	r6, #18
4001f274:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f278:	e5908004 	ldr	r8, [r0, #4]
4001f27c:	ea000007 	b	4001f2a0 <CyU3PUibSendDescr+0xec>
4001f280:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f284:	e5900000 	ldr	r0, [r0]
4001f288:	e3500000 	cmp	r0, #0
4001f28c:	0a000003 	beq	4001f2a0 <CyU3PUibSendDescr+0xec>
4001f290:	e3a09001 	mov	r9, #1
4001f294:	e3a06012 	mov	r6, #18
4001f298:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f29c:	e5908000 	ldr	r8, [r0]
4001f2a0:	ea000128 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f2a4:	e1a00000 	nop			; (mov r0, r0)
4001f2a8:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f2ac:	e5d00009 	ldrb	r0, [r0, #9]
4001f2b0:	e3500002 	cmp	r0, #2
4001f2b4:	1a00001a 	bne	4001f324 <CyU3PUibSendDescr+0x170>
4001f2b8:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f2bc:	e5900014 	ldr	r0, [r0, #20]
4001f2c0:	e3500000 	cmp	r0, #0
4001f2c4:	0a00004f 	beq	4001f408 <CyU3PUibSendDescr+0x254>
4001f2c8:	e3a09001 	mov	r9, #1
4001f2cc:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f2d0:	e5908014 	ldr	r8, [r0, #20]
4001f2d4:	e5900014 	ldr	r0, [r0, #20]
4001f2d8:	e5d00002 	ldrb	r0, [r0, #2]
4001f2dc:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f2e0:	e5911014 	ldr	r1, [r1, #20]
4001f2e4:	e5d11003 	ldrb	r1, [r1, #3]
4001f2e8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f2ec:	e1500825 	cmp	r0, r5, lsr #16
4001f2f0:	2a000007 	bcs	4001f314 <CyU3PUibSendDescr+0x160>
4001f2f4:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f2f8:	e5900014 	ldr	r0, [r0, #20]
4001f2fc:	e5d00002 	ldrb	r0, [r0, #2]
4001f300:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f304:	e5911014 	ldr	r1, [r1, #20]
4001f308:	e5d11003 	ldrb	r1, [r1, #3]
4001f30c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f310:	ea000000 	b	4001f318 <CyU3PUibSendDescr+0x164>
4001f314:	e1a00825 	lsr	r0, r5, #16
4001f318:	e1a06800 	lsl	r6, r0, #16
4001f31c:	e1a06826 	lsr	r6, r6, #16
4001f320:	ea000038 	b	4001f408 <CyU3PUibSendDescr+0x254>
4001f324:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f328:	e5d00009 	ldrb	r0, [r0, #9]
4001f32c:	e3500001 	cmp	r0, #1
4001f330:	1a00001a 	bne	4001f3a0 <CyU3PUibSendDescr+0x1ec>
4001f334:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f338:	e5900018 	ldr	r0, [r0, #24]
4001f33c:	e3500000 	cmp	r0, #0
4001f340:	0a000030 	beq	4001f408 <CyU3PUibSendDescr+0x254>
4001f344:	e3a09001 	mov	r9, #1
4001f348:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f34c:	e5908018 	ldr	r8, [r0, #24]
4001f350:	e5900018 	ldr	r0, [r0, #24]
4001f354:	e5d00002 	ldrb	r0, [r0, #2]
4001f358:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f35c:	e5911018 	ldr	r1, [r1, #24]
4001f360:	e5d11003 	ldrb	r1, [r1, #3]
4001f364:	e1800401 	orr	r0, r0, r1, lsl #8
4001f368:	e1500825 	cmp	r0, r5, lsr #16
4001f36c:	2a000007 	bcs	4001f390 <CyU3PUibSendDescr+0x1dc>
4001f370:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f374:	e5900018 	ldr	r0, [r0, #24]
4001f378:	e5d00002 	ldrb	r0, [r0, #2]
4001f37c:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f380:	e5911018 	ldr	r1, [r1, #24]
4001f384:	e5d11003 	ldrb	r1, [r1, #3]
4001f388:	e1800401 	orr	r0, r0, r1, lsl #8
4001f38c:	ea000000 	b	4001f394 <CyU3PUibSendDescr+0x1e0>
4001f390:	e1a00825 	lsr	r0, r5, #16
4001f394:	e1a06800 	lsl	r6, r0, #16
4001f398:	e1a06826 	lsr	r6, r6, #16
4001f39c:	ea000019 	b	4001f408 <CyU3PUibSendDescr+0x254>
4001f3a0:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f3a4:	e590001c 	ldr	r0, [r0, #28]
4001f3a8:	e3500000 	cmp	r0, #0
4001f3ac:	0a000015 	beq	4001f408 <CyU3PUibSendDescr+0x254>
4001f3b0:	e3a09001 	mov	r9, #1
4001f3b4:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f3b8:	e590801c 	ldr	r8, [r0, #28]
4001f3bc:	e590001c 	ldr	r0, [r0, #28]
4001f3c0:	e5d00002 	ldrb	r0, [r0, #2]
4001f3c4:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f3c8:	e591101c 	ldr	r1, [r1, #28]
4001f3cc:	e5d11003 	ldrb	r1, [r1, #3]
4001f3d0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f3d4:	e1500825 	cmp	r0, r5, lsr #16
4001f3d8:	2a000007 	bcs	4001f3fc <CyU3PUibSendDescr+0x248>
4001f3dc:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f3e0:	e590001c 	ldr	r0, [r0, #28]
4001f3e4:	e5d00002 	ldrb	r0, [r0, #2]
4001f3e8:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f3ec:	e591101c 	ldr	r1, [r1, #28]
4001f3f0:	e5d11003 	ldrb	r1, [r1, #3]
4001f3f4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f3f8:	ea000000 	b	4001f400 <CyU3PUibSendDescr+0x24c>
4001f3fc:	e1a00825 	lsr	r0, r5, #16
4001f400:	e1a06800 	lsl	r6, r0, #16
4001f404:	e1a06826 	lsr	r6, r6, #16
4001f408:	e3580000 	cmp	r8, #0
4001f40c:	0a000001 	beq	4001f418 <CyU3PUibSendDescr+0x264>
4001f410:	e3a00002 	mov	r0, #2
4001f414:	e5c80001 	strb	r0, [r8, #1]
4001f418:	ea0000ca 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f41c:	e1a00000 	nop			; (mov r0, r0)
4001f420:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f424:	e1a0b820 	lsr	fp, r0, #16
4001f428:	e35b0010 	cmp	fp, #16
4001f42c:	ca000003 	bgt	4001f440 <CyU3PUibSendDescr+0x28c>
4001f430:	e59f0390 	ldr	r0, [pc, #912]	; 4001f7c8 <CyU3PUibSendDescr+0x614>
4001f434:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f438:	e3500000 	cmp	r0, #0
4001f43c:	1a000013 	bne	4001f490 <CyU3PUibSendDescr+0x2dc>
4001f440:	e59f0378 	ldr	r0, [pc, #888]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f444:	e5d00007 	ldrb	r0, [r0, #7]
4001f448:	e3500001 	cmp	r0, #1
4001f44c:	0a000022 	beq	4001f4dc <CyU3PUibSendDescr+0x328>
4001f450:	e59f0374 	ldr	r0, [pc, #884]	; 4001f7cc <CyU3PUibSendDescr+0x618>
4001f454:	e5900000 	ldr	r0, [r0]
4001f458:	e3500000 	cmp	r0, #0
4001f45c:	0a00001e 	beq	4001f4dc <CyU3PUibSendDescr+0x328>
4001f460:	e1a01005 	mov	r1, r5
4001f464:	e1a00004 	mov	r0, r4
4001f468:	e59f235c 	ldr	r2, [pc, #860]	; 4001f7cc <CyU3PUibSendDescr+0x618>
4001f46c:	e5922000 	ldr	r2, [r2]
4001f470:	e12fff32 	blx	r2
4001f474:	e1a09000 	mov	r9, r0
4001f478:	e3590000 	cmp	r9, #0
4001f47c:	0a000016 	beq	4001f4dc <CyU3PUibSendDescr+0x328>
4001f480:	e3a00001 	mov	r0, #1
4001f484:	e59f1334 	ldr	r1, [pc, #820]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f488:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f48c:	ea000012 	b	4001f4dc <CyU3PUibSendDescr+0x328>
4001f490:	e59f0330 	ldr	r0, [pc, #816]	; 4001f7c8 <CyU3PUibSendDescr+0x614>
4001f494:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f498:	e5d00000 	ldrb	r0, [r0]
4001f49c:	e1500825 	cmp	r0, r5, lsr #16
4001f4a0:	2a000003 	bcs	4001f4b4 <CyU3PUibSendDescr+0x300>
4001f4a4:	e59f031c 	ldr	r0, [pc, #796]	; 4001f7c8 <CyU3PUibSendDescr+0x614>
4001f4a8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f4ac:	e5d00000 	ldrb	r0, [r0]
4001f4b0:	ea000000 	b	4001f4b8 <CyU3PUibSendDescr+0x304>
4001f4b4:	e1a00825 	lsr	r0, r5, #16
4001f4b8:	e1a06800 	lsl	r6, r0, #16
4001f4bc:	e1a06826 	lsr	r6, r6, #16
4001f4c0:	e59f0300 	ldr	r0, [pc, #768]	; 4001f7c8 <CyU3PUibSendDescr+0x614>
4001f4c4:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f4c8:	e3500000 	cmp	r0, #0
4001f4cc:	0a000002 	beq	4001f4dc <CyU3PUibSendDescr+0x328>
4001f4d0:	e3a09001 	mov	r9, #1
4001f4d4:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f7c8 <CyU3PUibSendDescr+0x614>
4001f4d8:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f4dc:	ea000099 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f4e0:	e1a00000 	nop			; (mov r0, r0)
4001f4e4:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f4e8:	e5900008 	ldr	r0, [r0, #8]
4001f4ec:	e3500000 	cmp	r0, #0
4001f4f0:	0a000007 	beq	4001f514 <CyU3PUibSendDescr+0x360>
4001f4f4:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f4f8:	e5d00009 	ldrb	r0, [r0, #9]
4001f4fc:	e3500003 	cmp	r0, #3
4001f500:	0a000003 	beq	4001f514 <CyU3PUibSendDescr+0x360>
4001f504:	e3a09001 	mov	r9, #1
4001f508:	e3a0600a 	mov	r6, #10
4001f50c:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f510:	e5908008 	ldr	r8, [r0, #8]
4001f514:	ea00008b 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f518:	e1a00000 	nop			; (mov r0, r0)
4001f51c:	e59f029c 	ldr	r0, [pc, #668]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f520:	e5d00009 	ldrb	r0, [r0, #9]
4001f524:	e3500002 	cmp	r0, #2
4001f528:	1a00001a 	bne	4001f598 <CyU3PUibSendDescr+0x3e4>
4001f52c:	e59f0290 	ldr	r0, [pc, #656]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f530:	e5900018 	ldr	r0, [r0, #24]
4001f534:	e3500000 	cmp	r0, #0
4001f538:	0a000034 	beq	4001f610 <CyU3PUibSendDescr+0x45c>
4001f53c:	e3a09001 	mov	r9, #1
4001f540:	e59f027c 	ldr	r0, [pc, #636]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f544:	e5908018 	ldr	r8, [r0, #24]
4001f548:	e5900018 	ldr	r0, [r0, #24]
4001f54c:	e5d00002 	ldrb	r0, [r0, #2]
4001f550:	e59f126c 	ldr	r1, [pc, #620]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f554:	e5911018 	ldr	r1, [r1, #24]
4001f558:	e5d11003 	ldrb	r1, [r1, #3]
4001f55c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f560:	e1500825 	cmp	r0, r5, lsr #16
4001f564:	2a000007 	bcs	4001f588 <CyU3PUibSendDescr+0x3d4>
4001f568:	e59f0254 	ldr	r0, [pc, #596]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f56c:	e5900018 	ldr	r0, [r0, #24]
4001f570:	e5d00002 	ldrb	r0, [r0, #2]
4001f574:	e59f1248 	ldr	r1, [pc, #584]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f578:	e5911018 	ldr	r1, [r1, #24]
4001f57c:	e5d11003 	ldrb	r1, [r1, #3]
4001f580:	e1800401 	orr	r0, r0, r1, lsl #8
4001f584:	ea000000 	b	4001f58c <CyU3PUibSendDescr+0x3d8>
4001f588:	e1a00825 	lsr	r0, r5, #16
4001f58c:	e1a06800 	lsl	r6, r0, #16
4001f590:	e1a06826 	lsr	r6, r6, #16
4001f594:	ea00001d 	b	4001f610 <CyU3PUibSendDescr+0x45c>
4001f598:	e59f0220 	ldr	r0, [pc, #544]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f59c:	e5d00009 	ldrb	r0, [r0, #9]
4001f5a0:	e3500001 	cmp	r0, #1
4001f5a4:	1a000019 	bne	4001f610 <CyU3PUibSendDescr+0x45c>
4001f5a8:	e59f0214 	ldr	r0, [pc, #532]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f5ac:	e5900014 	ldr	r0, [r0, #20]
4001f5b0:	e3500000 	cmp	r0, #0
4001f5b4:	0a000015 	beq	4001f610 <CyU3PUibSendDescr+0x45c>
4001f5b8:	e3a09001 	mov	r9, #1
4001f5bc:	e59f0200 	ldr	r0, [pc, #512]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f5c0:	e5908014 	ldr	r8, [r0, #20]
4001f5c4:	e5900014 	ldr	r0, [r0, #20]
4001f5c8:	e5d00002 	ldrb	r0, [r0, #2]
4001f5cc:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f5d0:	e5911014 	ldr	r1, [r1, #20]
4001f5d4:	e5d11003 	ldrb	r1, [r1, #3]
4001f5d8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f5dc:	e1500825 	cmp	r0, r5, lsr #16
4001f5e0:	2a000007 	bcs	4001f604 <CyU3PUibSendDescr+0x450>
4001f5e4:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f5e8:	e5900014 	ldr	r0, [r0, #20]
4001f5ec:	e5d00002 	ldrb	r0, [r0, #2]
4001f5f0:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f5f4:	e5911014 	ldr	r1, [r1, #20]
4001f5f8:	e5d11003 	ldrb	r1, [r1, #3]
4001f5fc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f600:	ea000000 	b	4001f608 <CyU3PUibSendDescr+0x454>
4001f604:	e1a00825 	lsr	r0, r5, #16
4001f608:	e1a06800 	lsl	r6, r0, #16
4001f60c:	e1a06826 	lsr	r6, r6, #16
4001f610:	e3580000 	cmp	r8, #0
4001f614:	0a000001 	beq	4001f620 <CyU3PUibSendDescr+0x46c>
4001f618:	e3a00007 	mov	r0, #7
4001f61c:	e5c80001 	strb	r0, [r8, #1]
4001f620:	ea000048 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f624:	e1a00000 	nop			; (mov r0, r0)
4001f628:	e59f0194 	ldr	r0, [pc, #404]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f62c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f630:	e3500000 	cmp	r0, #0
4001f634:	0a000022 	beq	4001f6c4 <CyU3PUibSendDescr+0x510>
4001f638:	e59f0180 	ldr	r0, [pc, #384]	; 4001f7c0 <CyU3PUibSendDescr+0x60c>
4001f63c:	e5d00009 	ldrb	r0, [r0, #9]
4001f640:	e3500003 	cmp	r0, #3
4001f644:	0a000008 	beq	4001f66c <CyU3PUibSendDescr+0x4b8>
4001f648:	e59f0174 	ldr	r0, [pc, #372]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f64c:	e5900000 	ldr	r0, [r0]
4001f650:	e3500000 	cmp	r0, #0
4001f654:	0a00001a 	beq	4001f6c4 <CyU3PUibSendDescr+0x510>
4001f658:	e59f0164 	ldr	r0, [pc, #356]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f65c:	e5900000 	ldr	r0, [r0]
4001f660:	e5d00002 	ldrb	r0, [r0, #2]
4001f664:	e3500010 	cmp	r0, #16
4001f668:	1a000015 	bne	4001f6c4 <CyU3PUibSendDescr+0x510>
4001f66c:	e3a09001 	mov	r9, #1
4001f670:	e59f014c 	ldr	r0, [pc, #332]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f674:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f678:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f67c:	e5d00002 	ldrb	r0, [r0, #2]
4001f680:	e59f113c 	ldr	r1, [pc, #316]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f684:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f688:	e5d11003 	ldrb	r1, [r1, #3]
4001f68c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f690:	e1500825 	cmp	r0, r5, lsr #16
4001f694:	2a000007 	bcs	4001f6b8 <CyU3PUibSendDescr+0x504>
4001f698:	e59f0124 	ldr	r0, [pc, #292]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f69c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f6a0:	e5d00002 	ldrb	r0, [r0, #2]
4001f6a4:	e59f1118 	ldr	r1, [pc, #280]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f6a8:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f6ac:	e5d11003 	ldrb	r1, [r1, #3]
4001f6b0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6b4:	ea000000 	b	4001f6bc <CyU3PUibSendDescr+0x508>
4001f6b8:	e1a00825 	lsr	r0, r5, #16
4001f6bc:	e1a06800 	lsl	r6, r0, #16
4001f6c0:	e1a06826 	lsr	r6, r6, #16
4001f6c4:	ea00001f 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f6c8:	e1a00000 	nop			; (mov r0, r0)
4001f6cc:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f6d0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f6d4:	e3500000 	cmp	r0, #0
4001f6d8:	0a00000d 	beq	4001f714 <CyU3PUibSendDescr+0x560>
4001f6dc:	e3a09001 	mov	r9, #1
4001f6e0:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f6e4:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f6e8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f6ec:	e5d00000 	ldrb	r0, [r0]
4001f6f0:	e1500825 	cmp	r0, r5, lsr #16
4001f6f4:	2a000003 	bcs	4001f708 <CyU3PUibSendDescr+0x554>
4001f6f8:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f7c4 <CyU3PUibSendDescr+0x610>
4001f6fc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f700:	e5d00000 	ldrb	r0, [r0]
4001f704:	ea000000 	b	4001f70c <CyU3PUibSendDescr+0x558>
4001f708:	e1a00825 	lsr	r0, r5, #16
4001f70c:	e1a06800 	lsl	r6, r0, #16
4001f710:	e1a06826 	lsr	r6, r6, #16
4001f714:	ea00000b 	b	4001f748 <CyU3PUibSendDescr+0x594>
4001f718:	e1a00000 	nop			; (mov r0, r0)
4001f71c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f7cc <CyU3PUibSendDescr+0x618>
4001f720:	e5900000 	ldr	r0, [r0]
4001f724:	e3500000 	cmp	r0, #0
4001f728:	0a000005 	beq	4001f744 <CyU3PUibSendDescr+0x590>
4001f72c:	e1a01005 	mov	r1, r5
4001f730:	e1a00004 	mov	r0, r4
4001f734:	e59f2090 	ldr	r2, [pc, #144]	; 4001f7cc <CyU3PUibSendDescr+0x618>
4001f738:	e5922000 	ldr	r2, [r2]
4001f73c:	e12fff32 	blx	r2
4001f740:	e1a09000 	mov	r9, r0
4001f744:	e1a00000 	nop			; (mov r0, r0)
4001f748:	e1a00000 	nop			; (mov r0, r0)
4001f74c:	e3590001 	cmp	r9, #1
4001f750:	1a000017 	bne	4001f7b4 <CyU3PUibSendDescr+0x600>
4001f754:	e3580000 	cmp	r8, #0
4001f758:	0a000015 	beq	4001f7b4 <CyU3PUibSendDescr+0x600>
4001f75c:	e1a01008 	mov	r1, r8
4001f760:	e1a00006 	mov	r0, r6
4001f764:	ebfff758 	bl	4001d4cc <CyU3PUsbSendEP0Data>
4001f768:	e1a07000 	mov	r7, r0
4001f76c:	e3570000 	cmp	r7, #0
4001f770:	1a000009 	bne	4001f79c <CyU3PUibSendDescr+0x5e8>
4001f774:	e59d0000 	ldr	r0, [sp]
4001f778:	e1560000 	cmp	r6, r0
4001f77c:	aa000006 	bge	4001f79c <CyU3PUibSendDescr+0x5e8>
4001f780:	e24a0001 	sub	r0, sl, #1
4001f784:	e1100006 	tst	r0, r6
4001f788:	1a000003 	bne	4001f79c <CyU3PUibSendDescr+0x5e8>
4001f78c:	e1a01008 	mov	r1, r8
4001f790:	e3a00000 	mov	r0, #0
4001f794:	ebfff74c 	bl	4001d4cc <CyU3PUsbSendEP0Data>
4001f798:	e1a07000 	mov	r7, r0
4001f79c:	e3570000 	cmp	r7, #0
4001f7a0:	0a000003 	beq	4001f7b4 <CyU3PUibSendDescr+0x600>
4001f7a4:	e3a02000 	mov	r2, #0
4001f7a8:	e3a01001 	mov	r1, #1
4001f7ac:	e1a00002 	mov	r0, r2
4001f7b0:	ebfff970 	bl	4001dd78 <CyU3PUsbStall>
4001f7b4:	e1a00009 	mov	r0, r9
4001f7b8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f7bc:	0000ffff 	.word	0x0000ffff
4001f7c0:	40031d40 	.word	0x40031d40
4001f7c4:	40031f98 	.word	0x40031f98
4001f7c8:	40031fb8 	.word	0x40031fb8
4001f7cc:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUibSocketInit:

4001f7d0 <CyU3PUibSocketInit>:
4001f7d0:	e3a00000 	mov	r0, #0
4001f7d4:	ea00000d 	b	4001f810 <CyU3PUibSocketInit+0x40>
4001f7d8:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f7dc:	e59f2080 	ldr	r2, [pc, #128]	; 4001f864 <CyU3PUibSocketInit+0x94>
4001f7e0:	e0822380 	add	r2, r2, r0, lsl #7
4001f7e4:	e582100c 	str	r1, [r2, #12]
4001f7e8:	e3e01000 	mvn	r1, #0
4001f7ec:	e59f2070 	ldr	r2, [pc, #112]	; 4001f864 <CyU3PUibSocketInit+0x94>
4001f7f0:	e0822380 	add	r2, r2, r0, lsl #7
4001f7f4:	e5821010 	str	r1, [r2, #16]
4001f7f8:	e3a01000 	mov	r1, #0
4001f7fc:	e59f2060 	ldr	r2, [pc, #96]	; 4001f864 <CyU3PUibSocketInit+0x94>
4001f800:	e0822380 	add	r2, r2, r0, lsl #7
4001f804:	e5821014 	str	r1, [r2, #20]
4001f808:	e2801001 	add	r1, r0, #1
4001f80c:	e20100ff 	and	r0, r1, #255	; 0xff
4001f810:	e3500010 	cmp	r0, #16
4001f814:	baffffef 	blt	4001f7d8 <CyU3PUibSocketInit+0x8>
4001f818:	e3a00000 	mov	r0, #0
4001f81c:	ea00000d 	b	4001f858 <CyU3PUibSocketInit+0x88>
4001f820:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f824:	e59f203c 	ldr	r2, [pc, #60]	; 4001f868 <CyU3PUibSocketInit+0x98>
4001f828:	e0822380 	add	r2, r2, r0, lsl #7
4001f82c:	e582100c 	str	r1, [r2, #12]
4001f830:	e3e01000 	mvn	r1, #0
4001f834:	e59f202c 	ldr	r2, [pc, #44]	; 4001f868 <CyU3PUibSocketInit+0x98>
4001f838:	e0822380 	add	r2, r2, r0, lsl #7
4001f83c:	e5821010 	str	r1, [r2, #16]
4001f840:	e3a01000 	mov	r1, #0
4001f844:	e59f201c 	ldr	r2, [pc, #28]	; 4001f868 <CyU3PUibSocketInit+0x98>
4001f848:	e0822380 	add	r2, r2, r0, lsl #7
4001f84c:	e5821014 	str	r1, [r2, #20]
4001f850:	e2801001 	add	r1, r0, #1
4001f854:	e20100ff 	and	r0, r1, #255	; 0xff
4001f858:	e3500010 	cmp	r0, #16
4001f85c:	baffffef 	blt	4001f820 <CyU3PUibSocketInit+0x50>
4001f860:	e12fff1e 	bx	lr
4001f864:	e0038000 	.word	0xe0038000
4001f868:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f86c <CyU3PUibStatusTimerCb>:
4001f86c:	e92d4010 	push	{r4, lr}
4001f870:	e1a04000 	mov	r4, r0
4001f874:	e59f0050 	ldr	r0, [pc, #80]	; 4001f8cc <CyU3PUibStatusTimerCb+0x60>
4001f878:	e5900000 	ldr	r0, [r0]
4001f87c:	e3500000 	cmp	r0, #0
4001f880:	0a000010 	beq	4001f8c8 <CyU3PUibStatusTimerCb+0x5c>
4001f884:	e59f0044 	ldr	r0, [pc, #68]	; 4001f8d0 <CyU3PUibStatusTimerCb+0x64>
4001f888:	e5d00009 	ldrb	r0, [r0, #9]
4001f88c:	e3500003 	cmp	r0, #3
4001f890:	1a00000c 	bne	4001f8c8 <CyU3PUibStatusTimerCb+0x5c>
4001f894:	e59f0038 	ldr	r0, [pc, #56]	; 4001f8d4 <CyU3PUibStatusTimerCb+0x68>
4001f898:	e5900000 	ldr	r0, [r0]
4001f89c:	e3500000 	cmp	r0, #0
4001f8a0:	0a000008 	beq	4001f8c8 <CyU3PUibStatusTimerCb+0x5c>
4001f8a4:	e3a01000 	mov	r1, #0
4001f8a8:	e1a00001 	mov	r0, r1
4001f8ac:	ebfff77c 	bl	4001d6a4 <CyU3PUsbSendErdy>
4001f8b0:	e3a02000 	mov	r2, #0
4001f8b4:	e3a01064 	mov	r1, #100	; 0x64
4001f8b8:	e59f0018 	ldr	r0, [pc, #24]	; 4001f8d8 <CyU3PUibStatusTimerCb+0x6c>
4001f8bc:	ebffac66 	bl	4000aa5c <_txe_timer_change>
4001f8c0:	e59f0010 	ldr	r0, [pc, #16]	; 4001f8d8 <CyU3PUibStatusTimerCb+0x6c>
4001f8c4:	ebffac54 	bl	4000aa1c <_txe_timer_activate>
4001f8c8:	e8bd8010 	pop	{r4, pc}
4001f8cc:	40030dcc 	.word	0x40030dcc
4001f8d0:	40031d40 	.word	0x40031d40
4001f8d4:	40030dd0 	.word	0x40030dd0
4001f8d8:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001f8dc <CyU3PUibThreadEntry>:
4001f8dc:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001f8e0:	e3a05000 	mov	r5, #0
4001f8e4:	e59f505c 	ldr	r5, [pc, #92]	; 4001f948 <CyU3PUibThreadEntry+0x6c>
4001f8e8:	e3a00001 	mov	r0, #1
4001f8ec:	e59f1058 	ldr	r1, [pc, #88]	; 4001f94c <CyU3PUibThreadEntry+0x70>
4001f8f0:	e5810000 	str	r0, [r1]
4001f8f4:	e3a02020 	mov	r2, #32
4001f8f8:	e3a01000 	mov	r1, #0
4001f8fc:	e59f004c 	ldr	r0, [pc, #76]	; 4001f950 <CyU3PUibThreadEntry+0x74>
4001f900:	ebff8f6c 	bl	400036b8 <CyU3PMemSet>
4001f904:	ea00000e 	b	4001f944 <CyU3PUibThreadEntry+0x68>
4001f908:	e3e03000 	mvn	r3, #0
4001f90c:	e58d3000 	str	r3, [sp]
4001f910:	e28d3004 	add	r3, sp, #4
4001f914:	e3a02001 	mov	r2, #1
4001f918:	e1a01005 	mov	r1, r5
4001f91c:	e59f0030 	ldr	r0, [pc, #48]	; 4001f954 <CyU3PUibThreadEntry+0x78>
4001f920:	ebffa937 	bl	40009e04 <_txe_event_flags_get>
4001f924:	e1a04000 	mov	r4, r0
4001f928:	e3540000 	cmp	r4, #0
4001f92c:	0a000000 	beq	4001f934 <CyU3PUibThreadEntry+0x58>
4001f930:	ea000003 	b	4001f944 <CyU3PUibThreadEntry+0x68>
4001f934:	e59d0004 	ldr	r0, [sp, #4]
4001f938:	eb0002a1 	bl	400203c4 <CyU3PUsbHandleEvents>
4001f93c:	ebffac19 	bl	4000a9a8 <_txe_thread_relinquish>
4001f940:	e1a00000 	nop			; (mov r0, r0)
4001f944:	eaffffef 	b	4001f908 <CyU3PUibThreadEntry+0x2c>
4001f948:	073fbfe1 	.word	0x073fbfe1
4001f94c:	40030d7c 	.word	0x40030d7c
4001f950:	40032680 	.word	0x40032680
4001f954:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001f958 <CyU3PUibVbusChangeHandler>:
4001f958:	e92d4010 	push	{r4, lr}
4001f95c:	e3a00000 	mov	r0, #0
4001f960:	e59f114c 	ldr	r1, [pc, #332]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001f964:	e5810060 	str	r0, [r1, #96]	; 0x60
4001f968:	e59f0148 	ldr	r0, [pc, #328]	; 4001fab8 <CyU3PUibVbusChangeHandler+0x160>
4001f96c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f970:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f974:	e1100001 	tst	r0, r1
4001f978:	0a00000b 	beq	4001f9ac <CyU3PUibVbusChangeHandler+0x54>
4001f97c:	e3a00002 	mov	r0, #2
4001f980:	eb000051 	bl	4001facc <CyU3PUsbAddToEventLog>
4001f984:	e59f0130 	ldr	r0, [pc, #304]	; 4001fabc <CyU3PUibVbusChangeHandler+0x164>
4001f988:	e5900000 	ldr	r0, [r0]
4001f98c:	e3500000 	cmp	r0, #0
4001f990:	0a000010 	beq	4001f9d8 <CyU3PUibVbusChangeHandler+0x80>
4001f994:	e3a01000 	mov	r1, #0
4001f998:	e3a0000b 	mov	r0, #11
4001f99c:	e59f2118 	ldr	r2, [pc, #280]	; 4001fabc <CyU3PUibVbusChangeHandler+0x164>
4001f9a0:	e5922000 	ldr	r2, [r2]
4001f9a4:	e12fff32 	blx	r2
4001f9a8:	ea00000a 	b	4001f9d8 <CyU3PUibVbusChangeHandler+0x80>
4001f9ac:	e3a00001 	mov	r0, #1
4001f9b0:	eb000045 	bl	4001facc <CyU3PUsbAddToEventLog>
4001f9b4:	e59f0100 	ldr	r0, [pc, #256]	; 4001fabc <CyU3PUibVbusChangeHandler+0x164>
4001f9b8:	e5900000 	ldr	r0, [r0]
4001f9bc:	e3500000 	cmp	r0, #0
4001f9c0:	0a000004 	beq	4001f9d8 <CyU3PUibVbusChangeHandler+0x80>
4001f9c4:	e3a01000 	mov	r1, #0
4001f9c8:	e3a0000c 	mov	r0, #12
4001f9cc:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fabc <CyU3PUibVbusChangeHandler+0x164>
4001f9d0:	e5922000 	ldr	r2, [r2]
4001f9d4:	e12fff32 	blx	r2
4001f9d8:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fab8 <CyU3PUibVbusChangeHandler+0x160>
4001f9dc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f9e0:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001f9e4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f9e8:	e1100001 	tst	r0, r1
4001f9ec:	0a000022 	beq	4001fa7c <CyU3PUibVbusChangeHandler+0x124>
4001f9f0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001f9f4:	e5d00008 	ldrb	r0, [r0, #8]
4001f9f8:	e3500005 	cmp	r0, #5
4001f9fc:	ba000000 	blt	4001fa04 <CyU3PUibVbusChangeHandler+0xac>
4001fa00:	eb0008d6 	bl	40021d60 <HandleVbusOffEvent>
4001fa04:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa08:	e5d00008 	ldrb	r0, [r0, #8]
4001fa0c:	e3500004 	cmp	r0, #4
4001fa10:	1a00001e 	bne	4001fa90 <CyU3PUibVbusChangeHandler+0x138>
4001fa14:	e59f0098 	ldr	r0, [pc, #152]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa18:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fa1c:	e59f1090 	ldr	r1, [pc, #144]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa20:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001fa24:	e2810000 	add	r0, r1, #0
4001fa28:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fa2c:	e3500000 	cmp	r0, #0
4001fa30:	0a00000a 	beq	4001fa60 <CyU3PUibVbusChangeHandler+0x108>
4001fa34:	e3a00000 	mov	r0, #0
4001fa38:	e59f1080 	ldr	r1, [pc, #128]	; 4001fac0 <CyU3PUibVbusChangeHandler+0x168>
4001fa3c:	e5810014 	str	r0, [r1, #20]
4001fa40:	e59f107c 	ldr	r1, [pc, #124]	; 4001fac4 <CyU3PUibVbusChangeHandler+0x16c>
4001fa44:	e5810000 	str	r0, [r1]
4001fa48:	e59f1078 	ldr	r1, [pc, #120]	; 4001fac8 <CyU3PUibVbusChangeHandler+0x170>
4001fa4c:	e5810000 	str	r0, [r1]
4001fa50:	e59f105c 	ldr	r1, [pc, #92]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa54:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fa58:	e5810050 	str	r0, [r1, #80]	; 0x50
4001fa5c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fa60:	e59f104c 	ldr	r1, [pc, #76]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa64:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001fa68:	ebfff593 	bl	4001d0bc <CyU3PUsbPhyEnable>
4001fa6c:	e3a00005 	mov	r0, #5
4001fa70:	e59f103c 	ldr	r1, [pc, #60]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa74:	e5c10008 	strb	r0, [r1, #8]
4001fa78:	ea000004 	b	4001fa90 <CyU3PUibVbusChangeHandler+0x138>
4001fa7c:	e59f0030 	ldr	r0, [pc, #48]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001fa80:	e5d00008 	ldrb	r0, [r0, #8]
4001fa84:	e3500005 	cmp	r0, #5
4001fa88:	ba000000 	blt	4001fa90 <CyU3PUibVbusChangeHandler+0x138>
4001fa8c:	eb0008b3 	bl	40021d60 <HandleVbusOffEvent>
4001fa90:	ebfff0df 	bl	4001be14 <CyU3POtgIsStarted>
4001fa94:	e3500000 	cmp	r0, #0
4001fa98:	0a000000 	beq	4001faa0 <CyU3PUibVbusChangeHandler+0x148>
4001fa9c:	ebfff4e3 	bl	4001ce30 <CyU3PUsbOtgVbusChangeHandler>
4001faa0:	e59f000c 	ldr	r0, [pc, #12]	; 4001fab4 <CyU3PUibVbusChangeHandler+0x15c>
4001faa4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001faa8:	e59f1008 	ldr	r1, [pc, #8]	; 4001fab8 <CyU3PUibVbusChangeHandler+0x160>
4001faac:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fab0:	e8bd8010 	pop	{r4, pc}
4001fab4:	40031d40 	.word	0x40031d40
4001fab8:	e0051000 	.word	0xe0051000
4001fabc:	40030db8 	.word	0x40030db8
4001fac0:	e0033000 	.word	0xe0033000
4001fac4:	40030da0 	.word	0x40030da0
4001fac8:	40030da4 	.word	0x40030da4

Disassembly of section i.CyU3PUsbAddToEventLog:

4001facc <CyU3PUsbAddToEventLog>:
4001facc:	e59f1058 	ldr	r1, [pc, #88]	; 4001fb2c <CyU3PUsbAddToEventLog+0x60>
4001fad0:	e5911000 	ldr	r1, [r1]
4001fad4:	e3510000 	cmp	r1, #0
4001fad8:	0a000012 	beq	4001fb28 <CyU3PUsbAddToEventLog+0x5c>
4001fadc:	e59f104c 	ldr	r1, [pc, #76]	; 4001fb30 <CyU3PUsbAddToEventLog+0x64>
4001fae0:	e5911000 	ldr	r1, [r1]
4001fae4:	e59f2044 	ldr	r2, [pc, #68]	; 4001fb30 <CyU3PUsbAddToEventLog+0x64>
4001fae8:	e5922000 	ldr	r2, [r2]
4001faec:	e2822001 	add	r2, r2, #1
4001faf0:	e59f3038 	ldr	r3, [pc, #56]	; 4001fb30 <CyU3PUsbAddToEventLog+0x64>
4001faf4:	e5832000 	str	r2, [r3]
4001faf8:	e59f202c 	ldr	r2, [pc, #44]	; 4001fb2c <CyU3PUsbAddToEventLog+0x60>
4001fafc:	e5922000 	ldr	r2, [r2]
4001fb00:	e7c20001 	strb	r0, [r2, r1]
4001fb04:	e2831000 	add	r1, r3, #0
4001fb08:	e5911000 	ldr	r1, [r1]
4001fb0c:	e59f2020 	ldr	r2, [pc, #32]	; 4001fb34 <CyU3PUsbAddToEventLog+0x68>
4001fb10:	e5922000 	ldr	r2, [r2]
4001fb14:	e1510002 	cmp	r1, r2
4001fb18:	3a000002 	bcc	4001fb28 <CyU3PUsbAddToEventLog+0x5c>
4001fb1c:	e3a01000 	mov	r1, #0
4001fb20:	e2832000 	add	r2, r3, #0
4001fb24:	e5821000 	str	r1, [r2]
4001fb28:	e12fff1e 	bx	lr
4001fb2c:	40030dac 	.word	0x40030dac
4001fb30:	40030db0 	.word	0x40030db0
4001fb34:	40030db4 	.word	0x40030db4

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001fb38 <CyU3PUsbCheckUsb3Disconnect>:
4001fb38:	e92d4070 	push	{r4, r5, r6, lr}
4001fb3c:	e3a04e19 	mov	r4, #400	; 0x190
4001fb40:	e3a06002 	mov	r6, #2
4001fb44:	e59f01fc 	ldr	r0, [pc, #508]	; 4001fd48 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fb48:	e1d000b0 	ldrh	r0, [r0]
4001fb4c:	e3500001 	cmp	r0, #1
4001fb50:	da000008 	ble	4001fb78 <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fb54:	e59f01ec 	ldr	r0, [pc, #492]	; 4001fd48 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fb58:	e1d010b0 	ldrh	r1, [r0]
4001fb5c:	e1a00004 	mov	r0, r4
4001fb60:	ebffc41d 	bl	40010bdc <__aeabi_idivmod>
4001fb64:	e1a04800 	lsl	r4, r0, #16
4001fb68:	e1a04824 	lsr	r4, r4, #16
4001fb6c:	e2840001 	add	r0, r4, #1
4001fb70:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fb74:	e3a06001 	mov	r6, #1
4001fb78:	e59f01cc 	ldr	r0, [pc, #460]	; 4001fd4c <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb7c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fb80:	e200503f 	and	r5, r0, #63	; 0x3f
4001fb84:	e3550010 	cmp	r5, #16
4001fb88:	ba000004 	blt	4001fba0 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fb8c:	e3550017 	cmp	r5, #23
4001fb90:	ca000002 	bgt	4001fba0 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fb94:	e3a00000 	mov	r0, #0
4001fb98:	e59f11b0 	ldr	r1, [pc, #432]	; 4001fd50 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fb9c:	e5810000 	str	r0, [r1]
4001fba0:	e59f01a8 	ldr	r0, [pc, #424]	; 4001fd50 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fba4:	e5900000 	ldr	r0, [r0]
4001fba8:	e3500000 	cmp	r0, #0
4001fbac:	1a000000 	bne	4001fbb4 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fbb0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fbb4:	ea000010 	b	4001fbfc <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fbb8:	e1a00006 	mov	r0, r6
4001fbbc:	ebffa3c8 	bl	40008ae4 <_tx_thread_sleep>
4001fbc0:	e59f0184 	ldr	r0, [pc, #388]	; 4001fd4c <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fbc4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fbc8:	e200503f 	and	r5, r0, #63	; 0x3f
4001fbcc:	e59f017c 	ldr	r0, [pc, #380]	; 4001fd50 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fbd0:	e5900000 	ldr	r0, [r0]
4001fbd4:	e3500000 	cmp	r0, #0
4001fbd8:	0a000003 	beq	4001fbec <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fbdc:	e3550010 	cmp	r5, #16
4001fbe0:	ba000005 	blt	4001fbfc <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fbe4:	e3550017 	cmp	r5, #23
4001fbe8:	ca000003 	bgt	4001fbfc <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fbec:	e3a00000 	mov	r0, #0
4001fbf0:	e59f1158 	ldr	r1, [pc, #344]	; 4001fd50 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fbf4:	e5810000 	str	r0, [r1]
4001fbf8:	ea000004 	b	4001fc10 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fbfc:	e1b00004 	movs	r0, r4
4001fc00:	e2441001 	sub	r1, r4, #1
4001fc04:	e1a04801 	lsl	r4, r1, #16
4001fc08:	e1a04824 	lsr	r4, r4, #16
4001fc0c:	1affffe9 	bne	4001fbb8 <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fc10:	e1a00000 	nop			; (mov r0, r0)
4001fc14:	e59f0134 	ldr	r0, [pc, #308]	; 4001fd50 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fc18:	e5900000 	ldr	r0, [r0]
4001fc1c:	e3500000 	cmp	r0, #0
4001fc20:	0a000047 	beq	4001fd44 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fc24:	e59f0128 	ldr	r0, [pc, #296]	; 4001fd54 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fc28:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fc2c:	e3100a02 	tst	r0, #8192	; 0x2000
4001fc30:	0a000020 	beq	4001fcb8 <CyU3PUsbCheckUsb3Disconnect+0x180>
4001fc34:	e59f0118 	ldr	r0, [pc, #280]	; 4001fd54 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fc38:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fc3c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fc40:	e59f110c 	ldr	r1, [pc, #268]	; 4001fd54 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fc44:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fc48:	e3a00002 	mov	r0, #2
4001fc4c:	ebffce52 	bl	4001359c <CyU3PBusyWait>
4001fc50:	e59f0100 	ldr	r0, [pc, #256]	; 4001fd58 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fc54:	e5900004 	ldr	r0, [r0, #4]
4001fc58:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fc5c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fd58 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fc60:	e5810004 	str	r0, [r1, #4]
4001fc64:	e3a00001 	mov	r0, #1
4001fc68:	ebffce4b 	bl	4001359c <CyU3PBusyWait>
4001fc6c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fd4c <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fc70:	e590001c 	ldr	r0, [r0, #28]
4001fc74:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fc78:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fd4c <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fc7c:	e581001c 	str	r0, [r1, #28]
4001fc80:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fd5c <CyU3PUsbCheckUsb3Disconnect+0x224>
4001fc84:	e5900000 	ldr	r0, [r0]
4001fc88:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fc8c:	e3a00001 	mov	r0, #1
4001fc90:	ebffce41 	bl	4001359c <CyU3PBusyWait>
4001fc94:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fd58 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fc98:	e5900004 	ldr	r0, [r0, #4]
4001fc9c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fca0:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fd58 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fca4:	e5810004 	str	r0, [r1, #4]
4001fca8:	e3a01000 	mov	r1, #0
4001fcac:	e3a00002 	mov	r0, #2
4001fcb0:	ebfff1d9 	bl	4001c41c <CyU3PSetUsbCoreClock>
4001fcb4:	ea000022 	b	4001fd44 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fcb8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fd60 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fcbc:	e5900000 	ldr	r0, [r0]
4001fcc0:	e3500000 	cmp	r0, #0
4001fcc4:	0a000007 	beq	4001fce8 <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fcc8:	e3a00000 	mov	r0, #0
4001fccc:	e59f108c 	ldr	r1, [pc, #140]	; 4001fd60 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fcd0:	e5810000 	str	r0, [r1]
4001fcd4:	e3a00001 	mov	r0, #1
4001fcd8:	ebfff481 	bl	4001cee4 <CyU3PUsbPhyDisable>
4001fcdc:	e3a00001 	mov	r0, #1
4001fce0:	ebfff4f5 	bl	4001d0bc <CyU3PUsbPhyEnable>
4001fce4:	eaffffb1 	b	4001fbb0 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fce8:	e59f0074 	ldr	r0, [pc, #116]	; 4001fd64 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fcec:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fcf0:	e3500000 	cmp	r0, #0
4001fcf4:	0a000011 	beq	4001fd40 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fcf8:	e3a00001 	mov	r0, #1
4001fcfc:	ebfff478 	bl	4001cee4 <CyU3PUsbPhyDisable>
4001fd00:	e3a00003 	mov	r0, #3
4001fd04:	e59f1058 	ldr	r1, [pc, #88]	; 4001fd64 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fd08:	e5c10008 	strb	r0, [r1, #8]
4001fd0c:	e3a00000 	mov	r0, #0
4001fd10:	e5c10009 	strb	r0, [r1, #9]
4001fd14:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fd18:	e59f0048 	ldr	r0, [pc, #72]	; 4001fd68 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fd1c:	e5900000 	ldr	r0, [r0]
4001fd20:	e3500000 	cmp	r0, #0
4001fd24:	0a000006 	beq	4001fd44 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fd28:	e3a01000 	mov	r1, #0
4001fd2c:	e3a00014 	mov	r0, #20
4001fd30:	e59f2030 	ldr	r2, [pc, #48]	; 4001fd68 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fd34:	e5922000 	ldr	r2, [r2]
4001fd38:	e12fff32 	blx	r2
4001fd3c:	ea000000 	b	4001fd44 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fd40:	eb00008e 	bl	4001ff80 <CyU3PUsbFallBackToUsb2>
4001fd44:	eaffff99 	b	4001fbb0 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fd48:	40030dd4 	.word	0x40030dd4
4001fd4c:	e0033000 	.word	0xe0033000
4001fd50:	40030d80 	.word	0x40030d80
4001fd54:	e0031000 	.word	0xe0031000
4001fd58:	e0030000 	.word	0xe0030000
4001fd5c:	40030c74 	.word	0x40030c74
4001fd60:	40030d90 	.word	0x40030d90
4001fd64:	40031d40 	.word	0x40031d40
4001fd68:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbDescInit:

4001fd6c <CyU3PUsbDescInit>:
4001fd6c:	e92d4010 	push	{r4, lr}
4001fd70:	e3a02074 	mov	r2, #116	; 0x74
4001fd74:	e3a01000 	mov	r1, #0
4001fd78:	e59f0004 	ldr	r0, [pc, #4]	; 4001fd84 <CyU3PUsbDescInit+0x18>
4001fd7c:	ebff8e4d 	bl	400036b8 <CyU3PMemSet>
4001fd80:	e8bd8010 	pop	{r4, pc}
4001fd84:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

4001fd88 <CyU3PUsbEpPrepare>:
4001fd88:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fd8c:	e1a04000 	mov	r4, r0
4001fd90:	e3a05001 	mov	r5, #1
4001fd94:	ea000061 	b	4001ff20 <CyU3PUsbEpPrepare+0x198>
4001fd98:	e59f01b8 	ldr	r0, [pc, #440]	; 4001ff58 <CyU3PUsbEpPrepare+0x1d0>
4001fd9c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fda0:	e3100901 	tst	r0, #16384	; 0x4000
4001fda4:	0a000029 	beq	4001fe50 <CyU3PUsbEpPrepare+0xc8>
4001fda8:	e0850085 	add	r0, r5, r5, lsl #1
4001fdac:	e59f11a8 	ldr	r1, [pc, #424]	; 4001ff5c <CyU3PUsbEpPrepare+0x1d4>
4001fdb0:	e0810100 	add	r0, r1, r0, lsl #2
4001fdb4:	e1d070b0 	ldrh	r7, [r0]
4001fdb8:	e59f0198 	ldr	r0, [pc, #408]	; 4001ff58 <CyU3PUsbEpPrepare+0x1d0>
4001fdbc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fdc0:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fdc4:	e1a06520 	lsr	r6, r0, #10
4001fdc8:	e2440001 	sub	r0, r4, #1
4001fdcc:	e0800080 	add	r0, r0, r0, lsl #1
4001fdd0:	e59f1188 	ldr	r1, [pc, #392]	; 4001ff60 <CyU3PUsbEpPrepare+0x1d8>
4001fdd4:	e0810100 	add	r0, r1, r0, lsl #2
4001fdd8:	e2461001 	sub	r1, r6, #1
4001fddc:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fde0:	e1570008 	cmp	r7, r8
4001fde4:	8a000001 	bhi	4001fdf0 <CyU3PUsbEpPrepare+0x68>
4001fde8:	e3570000 	cmp	r7, #0
4001fdec:	1a000000 	bne	4001fdf4 <CyU3PUsbEpPrepare+0x6c>
4001fdf0:	e1a07008 	mov	r7, r8
4001fdf4:	e3540003 	cmp	r4, #3
4001fdf8:	1a000005 	bne	4001fe14 <CyU3PUsbEpPrepare+0x8c>
4001fdfc:	e59f0160 	ldr	r0, [pc, #352]	; 4001ff64 <CyU3PUsbEpPrepare+0x1dc>
4001fe00:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe04:	e3800001 	orr	r0, r0, #1
4001fe08:	e59f1154 	ldr	r1, [pc, #340]	; 4001ff64 <CyU3PUsbEpPrepare+0x1dc>
4001fe0c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fe10:	ea000008 	b	4001fe38 <CyU3PUsbEpPrepare+0xb0>
4001fe14:	e59f013c 	ldr	r0, [pc, #316]	; 4001ff58 <CyU3PUsbEpPrepare+0x1d0>
4001fe18:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe1c:	e1a00520 	lsr	r0, r0, #10
4001fe20:	e1a00500 	lsl	r0, r0, #10
4001fe24:	e1a01b07 	lsl	r1, r7, #22
4001fe28:	e1a01b21 	lsr	r1, r1, #22
4001fe2c:	e1800001 	orr	r0, r0, r1
4001fe30:	e59f1120 	ldr	r1, [pc, #288]	; 4001ff58 <CyU3PUsbEpPrepare+0x1d0>
4001fe34:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fe38:	e59f0128 	ldr	r0, [pc, #296]	; 4001ff68 <CyU3PUsbEpPrepare+0x1e0>
4001fe3c:	e7807105 	str	r7, [r0, r5, lsl #2]
4001fe40:	e3850080 	orr	r0, r5, #128	; 0x80
4001fe44:	e3a02001 	mov	r2, #1
4001fe48:	e3a01000 	mov	r1, #0
4001fe4c:	ebfff7c9 	bl	4001dd78 <CyU3PUsbStall>
4001fe50:	e59f0114 	ldr	r0, [pc, #276]	; 4001ff6c <CyU3PUsbEpPrepare+0x1e4>
4001fe54:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe58:	e3100901 	tst	r0, #16384	; 0x4000
4001fe5c:	0a00002d 	beq	4001ff18 <CyU3PUsbEpPrepare+0x190>
4001fe60:	e0850085 	add	r0, r5, r5, lsl #1
4001fe64:	e59f1104 	ldr	r1, [pc, #260]	; 4001ff70 <CyU3PUsbEpPrepare+0x1e8>
4001fe68:	e0810100 	add	r0, r1, r0, lsl #2
4001fe6c:	e1d070b0 	ldrh	r7, [r0]
4001fe70:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ff6c <CyU3PUsbEpPrepare+0x1e4>
4001fe74:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe78:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fe7c:	e1a06520 	lsr	r6, r0, #10
4001fe80:	e2440001 	sub	r0, r4, #1
4001fe84:	e0800080 	add	r0, r0, r0, lsl #1
4001fe88:	e59f10d0 	ldr	r1, [pc, #208]	; 4001ff60 <CyU3PUsbEpPrepare+0x1d8>
4001fe8c:	e0810100 	add	r0, r1, r0, lsl #2
4001fe90:	e2461001 	sub	r1, r6, #1
4001fe94:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fe98:	e1570008 	cmp	r7, r8
4001fe9c:	8a000001 	bhi	4001fea8 <CyU3PUsbEpPrepare+0x120>
4001fea0:	e3570000 	cmp	r7, #0
4001fea4:	1a000000 	bne	4001feac <CyU3PUsbEpPrepare+0x124>
4001fea8:	e1a07008 	mov	r7, r8
4001feac:	e3540003 	cmp	r4, #3
4001feb0:	1a000005 	bne	4001fecc <CyU3PUsbEpPrepare+0x144>
4001feb4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ff74 <CyU3PUsbEpPrepare+0x1ec>
4001feb8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001febc:	e3800001 	orr	r0, r0, #1
4001fec0:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ff74 <CyU3PUsbEpPrepare+0x1ec>
4001fec4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fec8:	ea000008 	b	4001fef0 <CyU3PUsbEpPrepare+0x168>
4001fecc:	e59f0098 	ldr	r0, [pc, #152]	; 4001ff6c <CyU3PUsbEpPrepare+0x1e4>
4001fed0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fed4:	e1a00520 	lsr	r0, r0, #10
4001fed8:	e1a00500 	lsl	r0, r0, #10
4001fedc:	e1a01b07 	lsl	r1, r7, #22
4001fee0:	e1a01b21 	lsr	r1, r1, #22
4001fee4:	e1800001 	orr	r0, r0, r1
4001fee8:	e59f107c 	ldr	r1, [pc, #124]	; 4001ff6c <CyU3PUsbEpPrepare+0x1e4>
4001feec:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fef0:	e59f0080 	ldr	r0, [pc, #128]	; 4001ff78 <CyU3PUsbEpPrepare+0x1f0>
4001fef4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fef8:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001fefc:	e1800007 	orr	r0, r0, r7
4001ff00:	e59f1070 	ldr	r1, [pc, #112]	; 4001ff78 <CyU3PUsbEpPrepare+0x1f0>
4001ff04:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ff08:	e3a02001 	mov	r2, #1
4001ff0c:	e3a01000 	mov	r1, #0
4001ff10:	e1a00005 	mov	r0, r5
4001ff14:	ebfff797 	bl	4001dd78 <CyU3PUsbStall>
4001ff18:	e2850001 	add	r0, r5, #1
4001ff1c:	e20050ff 	and	r5, r0, #255	; 0xff
4001ff20:	e3550010 	cmp	r5, #16
4001ff24:	baffff9b 	blt	4001fd98 <CyU3PUsbEpPrepare+0x10>
4001ff28:	e3540003 	cmp	r4, #3
4001ff2c:	1a000005 	bne	4001ff48 <CyU3PUsbEpPrepare+0x1c0>
4001ff30:	e59f1044 	ldr	r1, [pc, #68]	; 4001ff7c <CyU3PUsbEpPrepare+0x1f4>
4001ff34:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4001ff38:	e3510000 	cmp	r1, #0
4001ff3c:	0a000001 	beq	4001ff48 <CyU3PUsbEpPrepare+0x1c0>
4001ff40:	e3a01001 	mov	r1, #1
4001ff44:	ea000000 	b	4001ff4c <CyU3PUsbEpPrepare+0x1c4>
4001ff48:	e3a01000 	mov	r1, #0
4001ff4c:	e1a00001 	mov	r0, r1
4001ff50:	eb000853 	bl	400220a4 <CyFx3UsbDmaPrefetchEnable>
4001ff54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ff58:	e0031418 	.word	0xe0031418
4001ff5c:	40031bb8 	.word	0x40031bb8
4001ff60:	40011ee4 	.word	0x40011ee4
4001ff64:	e0033500 	.word	0xe0033500
4001ff68:	e0031c40 	.word	0xe0031c40
4001ff6c:	e0031498 	.word	0xe0031498
4001ff70:	40031c78 	.word	0x40031c78
4001ff74:	e0033600 	.word	0xe0033600
4001ff78:	e0031c80 	.word	0xe0031c80
4001ff7c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

4001ff80 <CyU3PUsbFallBackToUsb2>:
4001ff80:	e92d4010 	push	{r4, lr}
4001ff84:	e59f0234 	ldr	r0, [pc, #564]	; 400201c0 <CyU3PUsbFallBackToUsb2+0x240>
4001ff88:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ff8c:	e3500000 	cmp	r0, #0
4001ff90:	0a000006 	beq	4001ffb0 <CyU3PUsbFallBackToUsb2+0x30>
4001ff94:	e59f0228 	ldr	r0, [pc, #552]	; 400201c4 <CyU3PUsbFallBackToUsb2+0x244>
4001ff98:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ff9c:	e59f121c 	ldr	r1, [pc, #540]	; 400201c0 <CyU3PUsbFallBackToUsb2+0x240>
4001ffa0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ffa4:	e1100001 	tst	r0, r1
4001ffa8:	1a000000 	bne	4001ffb0 <CyU3PUsbFallBackToUsb2+0x30>
4001ffac:	e8bd8010 	pop	{r4, pc}
4001ffb0:	e3a00050 	mov	r0, #80	; 0x50
4001ffb4:	ebfffec4 	bl	4001facc <CyU3PUsbAddToEventLog>
4001ffb8:	eb0007f1 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
4001ffbc:	e1a04000 	mov	r4, r0
4001ffc0:	e3a01000 	mov	r1, #0
4001ffc4:	e59f01fc 	ldr	r0, [pc, #508]	; 400201c8 <CyU3PUsbFallBackToUsb2+0x248>
4001ffc8:	eb000860 	bl	40022150 <CyFx3UsbWritePhyReg>
4001ffcc:	e1a00004 	mov	r0, r4
4001ffd0:	eb0007f9 	bl	40021fbc <CyU3PVicEnableInterrupts>
4001ffd4:	e3a00a01 	mov	r0, #4096	; 0x1000
4001ffd8:	e59f11ec 	ldr	r1, [pc, #492]	; 400201cc <CyU3PUsbFallBackToUsb2+0x24c>
4001ffdc:	e5810054 	str	r0, [r1, #84]	; 0x54
4001ffe0:	e59f01d8 	ldr	r0, [pc, #472]	; 400201c0 <CyU3PUsbFallBackToUsb2+0x240>
4001ffe4:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4001ffe8:	e2800001 	add	r0, r0, #1
4001ffec:	e59f11cc 	ldr	r1, [pc, #460]	; 400201c0 <CyU3PUsbFallBackToUsb2+0x240>
4001fff0:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fff4:	e3a00000 	mov	r0, #0
4001fff8:	e59f11d0 	ldr	r1, [pc, #464]	; 400201d0 <CyU3PUsbFallBackToUsb2+0x250>
4001fffc:	e5810000 	str	r0, [r1]
40020000:	e59f01cc 	ldr	r0, [pc, #460]	; 400201d4 <CyU3PUsbFallBackToUsb2+0x254>
40020004:	ebffab28 	bl	4000acac <_txe_timer_deactivate>
40020008:	e3a00002 	mov	r0, #2
4002000c:	ebffcd62 	bl	4001359c <CyU3PBusyWait>
40020010:	e3a01002 	mov	r1, #2
40020014:	e1a00001 	mov	r0, r1
40020018:	ebfff0ff 	bl	4001c41c <CyU3PSetUsbCoreClock>
4002001c:	e3a00002 	mov	r0, #2
40020020:	ebffcd5d 	bl	4001359c <CyU3PBusyWait>
40020024:	e59f01ac 	ldr	r0, [pc, #428]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
40020028:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002002c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020030:	e59f11a0 	ldr	r1, [pc, #416]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
40020034:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020038:	e3a00002 	mov	r0, #2
4002003c:	ebffcd56 	bl	4001359c <CyU3PBusyWait>
40020040:	e59f0190 	ldr	r0, [pc, #400]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
40020044:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020048:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4002004c:	e59f1184 	ldr	r1, [pc, #388]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
40020050:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020054:	e2410a01 	sub	r0, r1, #4096	; 0x1000
40020058:	e5900004 	ldr	r0, [r0, #4]
4002005c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020060:	e2411a01 	sub	r1, r1, #4096	; 0x1000
40020064:	e5810004 	str	r0, [r1, #4]
40020068:	e2810a03 	add	r0, r1, #12288	; 0x3000
4002006c:	e590001c 	ldr	r0, [r0, #28]
40020070:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020074:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020078:	e581001c 	str	r0, [r1, #28]
4002007c:	e59f0158 	ldr	r0, [pc, #344]	; 400201dc <CyU3PUsbFallBackToUsb2+0x25c>
40020080:	e5900000 	ldr	r0, [r0]
40020084:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020088:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
4002008c:	e5900000 	ldr	r0, [r0]
40020090:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40020094:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
40020098:	e5810000 	str	r0, [r1]
4002009c:	e3a00005 	mov	r0, #5
400200a0:	ebffcd3d 	bl	4001359c <CyU3PBusyWait>
400200a4:	e59f0134 	ldr	r0, [pc, #308]	; 400201e0 <CyU3PUsbFallBackToUsb2+0x260>
400200a8:	e5900000 	ldr	r0, [r0]
400200ac:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400200b0:	e59f1128 	ldr	r1, [pc, #296]	; 400201e0 <CyU3PUsbFallBackToUsb2+0x260>
400200b4:	e5810000 	str	r0, [r1]
400200b8:	e3a0000a 	mov	r0, #10
400200bc:	ebffcd36 	bl	4001359c <CyU3PBusyWait>
400200c0:	e3e00000 	mvn	r0, #0
400200c4:	e59f110c 	ldr	r1, [pc, #268]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
400200c8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
400200cc:	e5810524 	str	r0, [r1, #1316]	; 0x524
400200d0:	e5810810 	str	r0, [r1, #2064]	; 0x810
400200d4:	e59f0108 	ldr	r0, [pc, #264]	; 400201e4 <CyU3PUsbFallBackToUsb2+0x264>
400200d8:	ebffd869 	bl	40016284 <CyU3PDmaChannelReset>
400200dc:	e59f0104 	ldr	r0, [pc, #260]	; 400201e8 <CyU3PUsbFallBackToUsb2+0x268>
400200e0:	ebffd867 	bl	40016284 <CyU3PDmaChannelReset>
400200e4:	e3a00000 	mov	r0, #0
400200e8:	e59f10dc 	ldr	r1, [pc, #220]	; 400201cc <CyU3PUsbFallBackToUsb2+0x24c>
400200ec:	e5810008 	str	r0, [r1, #8]
400200f0:	e3e00000 	mvn	r0, #0
400200f4:	e5810004 	str	r0, [r1, #4]
400200f8:	e3a00000 	mov	r0, #0
400200fc:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020100:	e3e00000 	mvn	r0, #0
40020104:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020108:	e1c10820 	bic	r0, r1, r0, lsr #16
4002010c:	e5900004 	ldr	r0, [r0, #4]
40020110:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020114:	e2411a03 	sub	r1, r1, #12288	; 0x3000
40020118:	e5810004 	str	r0, [r1, #4]
4002011c:	e2810a01 	add	r0, r1, #4096	; 0x1000
40020120:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020124:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020128:	e2811a01 	add	r1, r1, #4096	; 0x1000
4002012c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020130:	e1a00001 	mov	r0, r1
40020134:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020138:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4002013c:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020140:	e3a00001 	mov	r0, #1
40020144:	e59f1074 	ldr	r1, [pc, #116]	; 400201c0 <CyU3PUsbFallBackToUsb2+0x240>
40020148:	e5c10009 	strb	r0, [r1, #9]
4002014c:	e3a00000 	mov	r0, #0
40020150:	e5810044 	str	r0, [r1, #68]	; 0x44
40020154:	e3a00501 	mov	r0, #4194304	; 0x400000
40020158:	e59f108c 	ldr	r1, [pc, #140]	; 400201ec <CyU3PUsbFallBackToUsb2+0x26c>
4002015c:	e5810074 	str	r0, [r1, #116]	; 0x74
40020160:	e3a00002 	mov	r0, #2
40020164:	ebffcd0c 	bl	4001359c <CyU3PBusyWait>
40020168:	e59f0068 	ldr	r0, [pc, #104]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
4002016c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020170:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020174:	e59f105c 	ldr	r1, [pc, #92]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
40020178:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002017c:	e3a00064 	mov	r0, #100	; 0x64
40020180:	ebffcd05 	bl	4001359c <CyU3PBusyWait>
40020184:	eb00079f 	bl	40022008 <CyFx3Usb2PhySetup>
40020188:	e59f0060 	ldr	r0, [pc, #96]	; 400201f0 <CyU3PUsbFallBackToUsb2+0x270>
4002018c:	e59f1044 	ldr	r1, [pc, #68]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
40020190:	e5810008 	str	r0, [r1, #8]
40020194:	e3a00050 	mov	r0, #80	; 0x50
40020198:	ebffccff 	bl	4001359c <CyU3PBusyWait>
4002019c:	e3a01000 	mov	r1, #0
400201a0:	e3a00002 	mov	r0, #2
400201a4:	ebfff09c 	bl	4001c41c <CyU3PSetUsbCoreClock>
400201a8:	e59f0028 	ldr	r0, [pc, #40]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
400201ac:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400201b0:	e3c00008 	bic	r0, r0, #8
400201b4:	e59f101c 	ldr	r1, [pc, #28]	; 400201d8 <CyU3PUsbFallBackToUsb2+0x258>
400201b8:	e5810408 	str	r0, [r1, #1032]	; 0x408
400201bc:	eaffff7a 	b	4001ffac <CyU3PUsbFallBackToUsb2+0x2c>
400201c0:	40031d40 	.word	0x40031d40
400201c4:	e0051000 	.word	0xe0051000
400201c8:	00001005 	.word	0x00001005
400201cc:	e0033000 	.word	0xe0033000
400201d0:	40030dcc 	.word	0x40030dcc
400201d4:	400326a0 	.word	0x400326a0
400201d8:	e0031000 	.word	0xe0031000
400201dc:	40030c74 	.word	0x40030c74
400201e0:	e0050000 	.word	0xe0050000
400201e4:	40031a78 	.word	0x40031a78
400201e8:	40031b18 	.word	0x40031b18
400201ec:	e0032000 	.word	0xe0032000
400201f0:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

400201f4 <CyU3PUsbGetEpStatus>:
400201f4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400201f8:	e1a04000 	mov	r4, r0
400201fc:	e204600f 	and	r6, r4, #15
40020200:	e59f0090 	ldr	r0, [pc, #144]	; 40020298 <CyU3PUsbGetEpStatus+0xa4>
40020204:	e5d00009 	ldrb	r0, [r0, #9]
40020208:	e3500003 	cmp	r0, #3
4002020c:	1a00000b 	bne	40020240 <CyU3PUsbGetEpStatus+0x4c>
40020210:	e3140080 	tst	r4, #128	; 0x80
40020214:	0a000004 	beq	4002022c <CyU3PUsbGetEpStatus+0x38>
40020218:	e59f007c 	ldr	r0, [pc, #124]	; 4002029c <CyU3PUsbGetEpStatus+0xa8>
4002021c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020220:	e2000004 	and	r0, r0, #4
40020224:	e58d0000 	str	r0, [sp]
40020228:	ea00000f 	b	4002026c <CyU3PUsbGetEpStatus+0x78>
4002022c:	e59f006c 	ldr	r0, [pc, #108]	; 400202a0 <CyU3PUsbGetEpStatus+0xac>
40020230:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020234:	e2000004 	and	r0, r0, #4
40020238:	e58d0000 	str	r0, [sp]
4002023c:	ea00000a 	b	4002026c <CyU3PUsbGetEpStatus+0x78>
40020240:	e3140080 	tst	r4, #128	; 0x80
40020244:	0a000004 	beq	4002025c <CyU3PUsbGetEpStatus+0x68>
40020248:	e59f0054 	ldr	r0, [pc, #84]	; 400202a4 <CyU3PUsbGetEpStatus+0xb0>
4002024c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020250:	e2000801 	and	r0, r0, #65536	; 0x10000
40020254:	e58d0000 	str	r0, [sp]
40020258:	ea000003 	b	4002026c <CyU3PUsbGetEpStatus+0x78>
4002025c:	e59f0044 	ldr	r0, [pc, #68]	; 400202a8 <CyU3PUsbGetEpStatus+0xb4>
40020260:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020264:	e2000801 	and	r0, r0, #65536	; 0x10000
40020268:	e58d0000 	str	r0, [sp]
4002026c:	e59d0000 	ldr	r0, [sp]
40020270:	e3500000 	cmp	r0, #0
40020274:	0a000001 	beq	40020280 <CyU3PUsbGetEpStatus+0x8c>
40020278:	e3a00001 	mov	r0, #1
4002027c:	e58d0000 	str	r0, [sp]
40020280:	e1a0100d 	mov	r1, sp
40020284:	e3a00002 	mov	r0, #2
40020288:	ebfff48f 	bl	4001d4cc <CyU3PUsbSendEP0Data>
4002028c:	e1a05000 	mov	r5, r0
40020290:	e1a00005 	mov	r0, r5
40020294:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020298:	40031d40 	.word	0x40031d40
4002029c:	e0033500 	.word	0xe0033500
400202a0:	e0033600 	.word	0xe0033600
400202a4:	e0031418 	.word	0xe0031418
400202a8:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

400202ac <CyU3PUsbHandleClearFeature>:
400202ac:	e92d4070 	push	{r4, r5, r6, lr}
400202b0:	e1a04000 	mov	r4, r0
400202b4:	e3a05000 	mov	r5, #0
400202b8:	e3540001 	cmp	r4, #1
400202bc:	0a000006 	beq	400202dc <CyU3PUsbHandleClearFeature+0x30>
400202c0:	e3540002 	cmp	r4, #2
400202c4:	0a00000b 	beq	400202f8 <CyU3PUsbHandleClearFeature+0x4c>
400202c8:	e3540030 	cmp	r4, #48	; 0x30
400202cc:	0a00000f 	beq	40020310 <CyU3PUsbHandleClearFeature+0x64>
400202d0:	e3540031 	cmp	r4, #49	; 0x31
400202d4:	1a00002d 	bne	40020390 <CyU3PUsbHandleClearFeature+0xe4>
400202d8:	ea00001c 	b	40020350 <CyU3PUsbHandleClearFeature+0xa4>
400202dc:	e1a00000 	nop			; (mov r0, r0)
400202e0:	e59f00d8 	ldr	r0, [pc, #216]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
400202e4:	e5d00006 	ldrb	r0, [r0, #6]
400202e8:	e3c00002 	bic	r0, r0, #2
400202ec:	e59f10cc 	ldr	r1, [pc, #204]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
400202f0:	e5c10006 	strb	r0, [r1, #6]
400202f4:	e1a00000 	nop			; (mov r0, r0)
400202f8:	e59f00c0 	ldr	r0, [pc, #192]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
400202fc:	e5d00009 	ldrb	r0, [r0, #9]
40020300:	e3500003 	cmp	r0, #3
40020304:	0a000000 	beq	4002030c <CyU3PUsbHandleClearFeature+0x60>
40020308:	e3a05001 	mov	r5, #1
4002030c:	ea000021 	b	40020398 <CyU3PUsbHandleClearFeature+0xec>
40020310:	e1a00000 	nop			; (mov r0, r0)
40020314:	e59f00a4 	ldr	r0, [pc, #164]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020318:	e5d00009 	ldrb	r0, [r0, #9]
4002031c:	e3500003 	cmp	r0, #3
40020320:	1a000009 	bne	4002034c <CyU3PUsbHandleClearFeature+0xa0>
40020324:	e59f0094 	ldr	r0, [pc, #148]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020328:	e5d00008 	ldrb	r0, [r0, #8]
4002032c:	e3500006 	cmp	r0, #6
40020330:	1a000005 	bne	4002034c <CyU3PUsbHandleClearFeature+0xa0>
40020334:	e59f0084 	ldr	r0, [pc, #132]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020338:	e5d00006 	ldrb	r0, [r0, #6]
4002033c:	e3c00004 	bic	r0, r0, #4
40020340:	e59f1078 	ldr	r1, [pc, #120]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020344:	e5c10006 	strb	r0, [r1, #6]
40020348:	e3a05001 	mov	r5, #1
4002034c:	ea000011 	b	40020398 <CyU3PUsbHandleClearFeature+0xec>
40020350:	e1a00000 	nop			; (mov r0, r0)
40020354:	e59f0064 	ldr	r0, [pc, #100]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020358:	e5d00009 	ldrb	r0, [r0, #9]
4002035c:	e3500003 	cmp	r0, #3
40020360:	1a000009 	bne	4002038c <CyU3PUsbHandleClearFeature+0xe0>
40020364:	e59f0054 	ldr	r0, [pc, #84]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020368:	e5d00008 	ldrb	r0, [r0, #8]
4002036c:	e3500006 	cmp	r0, #6
40020370:	1a000005 	bne	4002038c <CyU3PUsbHandleClearFeature+0xe0>
40020374:	e59f0044 	ldr	r0, [pc, #68]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020378:	e5d00006 	ldrb	r0, [r0, #6]
4002037c:	e3c00008 	bic	r0, r0, #8
40020380:	e59f1038 	ldr	r1, [pc, #56]	; 400203c0 <CyU3PUsbHandleClearFeature+0x114>
40020384:	e5c10006 	strb	r0, [r1, #6]
40020388:	e3a05001 	mov	r5, #1
4002038c:	ea000001 	b	40020398 <CyU3PUsbHandleClearFeature+0xec>
40020390:	e1a00000 	nop			; (mov r0, r0)
40020394:	e1a00000 	nop			; (mov r0, r0)
40020398:	e1a00000 	nop			; (mov r0, r0)
4002039c:	e3550000 	cmp	r5, #0
400203a0:	0a000001 	beq	400203ac <CyU3PUsbHandleClearFeature+0x100>
400203a4:	ebfff0af 	bl	4001c668 <CyU3PUsbAckSetup>
400203a8:	ea000003 	b	400203bc <CyU3PUsbHandleClearFeature+0x110>
400203ac:	e3a02000 	mov	r2, #0
400203b0:	e3a01001 	mov	r1, #1
400203b4:	e1a00002 	mov	r0, r2
400203b8:	ebfff66e 	bl	4001dd78 <CyU3PUsbStall>
400203bc:	e8bd8070 	pop	{r4, r5, r6, pc}
400203c0:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

400203c4 <CyU3PUsbHandleEvents>:
400203c4:	e92d4070 	push	{r4, r5, r6, lr}
400203c8:	e1a04000 	mov	r4, r0
400203cc:	e3140040 	tst	r4, #64	; 0x40
400203d0:	0a000000 	beq	400203d8 <CyU3PUsbHandleEvents+0x14>
400203d4:	ebfff8cc 	bl	4001e70c <CyU3PUibDevCtrlEvtHandler>
400203d8:	e3140020 	tst	r4, #32
400203dc:	0a000000 	beq	400203e4 <CyU3PUsbHandleEvents+0x20>
400203e0:	ebfff942 	bl	4001e8f0 <CyU3PUibEPEvtHandler>
400203e4:	e3140080 	tst	r4, #128	; 0x80
400203e8:	0a000000 	beq	400203f0 <CyU3PUsbHandleEvents+0x2c>
400203ec:	ebfffa15 	bl	4001ec48 <CyU3PUibLnkIntrEvtHandler>
400203f0:	e3140c01 	tst	r4, #256	; 0x100
400203f4:	0a000000 	beq	400203fc <CyU3PUsbHandleEvents+0x38>
400203f8:	ebfffb32 	bl	4001f0c8 <CyU3PUibProtIntrEvtHandler>
400203fc:	e3140c02 	tst	r4, #512	; 0x200
40020400:	0a000000 	beq	40020408 <CyU3PUsbHandleEvents+0x44>
40020404:	ebfffa37 	bl	4001ece8 <CyU3PUibProtEpIntrEvtHandler>
40020408:	e3140b01 	tst	r4, #1024	; 0x400
4002040c:	0a000006 	beq	4002042c <CyU3PUsbHandleEvents+0x68>
40020410:	e59f0378 	ldr	r0, [pc, #888]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
40020414:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020418:	e3500b02 	cmp	r0, #2048	; 0x800
4002041c:	1a000001 	bne	40020428 <CyU3PUsbHandleEvents+0x64>
40020420:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40020424:	ebffa1ae 	bl	40008ae4 <_tx_thread_sleep>
40020428:	ebfffd4a 	bl	4001f958 <CyU3PUibVbusChangeHandler>
4002042c:	e3140b02 	tst	r4, #2048	; 0x800
40020430:	0a000000 	beq	40020438 <CyU3PUsbHandleEvents+0x74>
40020434:	eb0003ae 	bl	400212f4 <CyU3PUsbSendCompliancePatterns>
40020438:	e3140a01 	tst	r4, #4096	; 0x1000
4002043c:	0a00000c 	beq	40020474 <CyU3PUsbHandleEvents+0xb0>
40020440:	e59f034c 	ldr	r0, [pc, #844]	; 40020794 <CyU3PUsbHandleEvents+0x3d0>
40020444:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020448:	e3100902 	tst	r0, #32768	; 0x8000
4002044c:	0a000008 	beq	40020474 <CyU3PUsbHandleEvents+0xb0>
40020450:	e3a00001 	mov	r0, #1
40020454:	e59f133c 	ldr	r1, [pc, #828]	; 40020798 <CyU3PUsbHandleEvents+0x3d4>
40020458:	e5810000 	str	r0, [r1]
4002045c:	e59f1338 	ldr	r1, [pc, #824]	; 4002079c <CyU3PUsbHandleEvents+0x3d8>
40020460:	e5810000 	str	r0, [r1]
40020464:	ebfffdb3 	bl	4001fb38 <CyU3PUsbCheckUsb3Disconnect>
40020468:	e3a00000 	mov	r0, #0
4002046c:	e59f1328 	ldr	r1, [pc, #808]	; 4002079c <CyU3PUsbHandleEvents+0x3d8>
40020470:	e5810000 	str	r0, [r1]
40020474:	e3140301 	tst	r4, #67108864	; 0x4000000
40020478:	0a000013 	beq	400204cc <CyU3PUsbHandleEvents+0x108>
4002047c:	e59f031c 	ldr	r0, [pc, #796]	; 400207a0 <CyU3PUsbHandleEvents+0x3dc>
40020480:	e5900000 	ldr	r0, [r0]
40020484:	e3500000 	cmp	r0, #0
40020488:	0a000008 	beq	400204b0 <CyU3PUsbHandleEvents+0xec>
4002048c:	e59f0300 	ldr	r0, [pc, #768]	; 40020794 <CyU3PUsbHandleEvents+0x3d0>
40020490:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020494:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
40020498:	e3a02080 	mov	r2, #128	; 0x80
4002049c:	e1821920 	orr	r1, r2, r0, lsr #18
400204a0:	e3a00012 	mov	r0, #18
400204a4:	e59f22f4 	ldr	r2, [pc, #756]	; 400207a0 <CyU3PUsbHandleEvents+0x3dc>
400204a8:	e5922000 	ldr	r2, [r2]
400204ac:	e12fff32 	blx	r2
400204b0:	e3a00b02 	mov	r0, #2048	; 0x800
400204b4:	e59f12e8 	ldr	r1, [pc, #744]	; 400207a4 <CyU3PUsbHandleEvents+0x3e0>
400204b8:	e5810000 	str	r0, [r1]
400204bc:	e1c10000 	bic	r0, r1, r0
400204c0:	e5900004 	ldr	r0, [r0, #4]
400204c4:	e3800b02 	orr	r0, r0, #2048	; 0x800
400204c8:	e5810004 	str	r0, [r1, #4]
400204cc:	e3140901 	tst	r4, #16384	; 0x4000
400204d0:	0a000008 	beq	400204f8 <CyU3PUsbHandleEvents+0x134>
400204d4:	e59f02c4 	ldr	r0, [pc, #708]	; 400207a0 <CyU3PUsbHandleEvents+0x3dc>
400204d8:	e5900000 	ldr	r0, [r0]
400204dc:	e3500000 	cmp	r0, #0
400204e0:	0a000004 	beq	400204f8 <CyU3PUsbHandleEvents+0x134>
400204e4:	e3a01000 	mov	r1, #0
400204e8:	e3a00003 	mov	r0, #3
400204ec:	e59f22ac 	ldr	r2, [pc, #684]	; 400207a0 <CyU3PUsbHandleEvents+0x3dc>
400204f0:	e5922000 	ldr	r2, [r2]
400204f4:	e12fff32 	blx	r2
400204f8:	e3140a02 	tst	r4, #8192	; 0x2000
400204fc:	0a000008 	beq	40020524 <CyU3PUsbHandleEvents+0x160>
40020500:	e59f0298 	ldr	r0, [pc, #664]	; 400207a0 <CyU3PUsbHandleEvents+0x3dc>
40020504:	e5900000 	ldr	r0, [r0]
40020508:	e3500000 	cmp	r0, #0
4002050c:	0a000004 	beq	40020524 <CyU3PUsbHandleEvents+0x160>
40020510:	e3a01000 	mov	r1, #0
40020514:	e3a00002 	mov	r0, #2
40020518:	e59f2280 	ldr	r2, [pc, #640]	; 400207a0 <CyU3PUsbHandleEvents+0x3dc>
4002051c:	e5922000 	ldr	r2, [r2]
40020520:	e12fff32 	blx	r2
40020524:	e3140902 	tst	r4, #32768	; 0x8000
40020528:	0a000022 	beq	400205b8 <CyU3PUsbHandleEvents+0x1f4>
4002052c:	e59f0274 	ldr	r0, [pc, #628]	; 400207a8 <CyU3PUsbHandleEvents+0x3e4>
40020530:	e5900000 	ldr	r0, [r0]
40020534:	e3500000 	cmp	r0, #0
40020538:	0a00001e 	beq	400205b8 <CyU3PUsbHandleEvents+0x1f4>
4002053c:	eb000690 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
40020540:	e1a06000 	mov	r6, r0
40020544:	e3a00001 	mov	r0, #1
40020548:	ebffcc13 	bl	4001359c <CyU3PBusyWait>
4002054c:	e59f0258 	ldr	r0, [pc, #600]	; 400207ac <CyU3PUsbHandleEvents+0x3e8>
40020550:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40020554:	e3c00803 	bic	r0, r0, #196608	; 0x30000
40020558:	e59f124c 	ldr	r1, [pc, #588]	; 400207ac <CyU3PUsbHandleEvents+0x3e8>
4002055c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40020560:	e1a00006 	mov	r0, r6
40020564:	eb000694 	bl	40021fbc <CyU3PVicEnableInterrupts>
40020568:	e3a00001 	mov	r0, #1
4002056c:	ebffa15c 	bl	40008ae4 <_tx_thread_sleep>
40020570:	e3a00000 	mov	r0, #0
40020574:	e59f122c 	ldr	r1, [pc, #556]	; 400207a8 <CyU3PUsbHandleEvents+0x3e4>
40020578:	e5810000 	str	r0, [r1]
4002057c:	e59f0228 	ldr	r0, [pc, #552]	; 400207ac <CyU3PUsbHandleEvents+0x3e8>
40020580:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40020584:	e3100c02 	tst	r0, #512	; 0x200
40020588:	1a00000a 	bne	400205b8 <CyU3PUsbHandleEvents+0x1f4>
4002058c:	e59f01fc 	ldr	r0, [pc, #508]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
40020590:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020594:	e3500000 	cmp	r0, #0
40020598:	1a000006 	bne	400205b8 <CyU3PUsbHandleEvents+0x1f4>
4002059c:	e59f01ec 	ldr	r0, [pc, #492]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
400205a0:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
400205a4:	e3500000 	cmp	r0, #0
400205a8:	1a000002 	bne	400205b8 <CyU3PUsbHandleEvents+0x1f4>
400205ac:	e3a00303 	mov	r0, #201326592	; 0xc000000
400205b0:	e59f11f4 	ldr	r1, [pc, #500]	; 400207ac <CyU3PUsbHandleEvents+0x3e8>
400205b4:	e5810050 	str	r0, [r1, #80]	; 0x50
400205b8:	e3140401 	tst	r4, #16777216	; 0x1000000
400205bc:	0a000020 	beq	40020644 <CyU3PUsbHandleEvents+0x280>
400205c0:	e59f01e4 	ldr	r0, [pc, #484]	; 400207ac <CyU3PUsbHandleEvents+0x3e8>
400205c4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400205c8:	e200503f 	and	r5, r0, #63	; 0x3f
400205cc:	e3550011 	cmp	r5, #17
400205d0:	0a000001 	beq	400205dc <CyU3PUsbHandleEvents+0x218>
400205d4:	e3550012 	cmp	r5, #18
400205d8:	1a000018 	bne	40020640 <CyU3PUsbHandleEvents+0x27c>
400205dc:	e59f01cc 	ldr	r0, [pc, #460]	; 400207b0 <CyU3PUsbHandleEvents+0x3ec>
400205e0:	e5900000 	ldr	r0, [r0]
400205e4:	e3500000 	cmp	r0, #0
400205e8:	0a000014 	beq	40020640 <CyU3PUsbHandleEvents+0x27c>
400205ec:	e3a00005 	mov	r0, #5
400205f0:	ebffcbe9 	bl	4001359c <CyU3PBusyWait>
400205f4:	e59f01b0 	ldr	r0, [pc, #432]	; 400207ac <CyU3PUsbHandleEvents+0x3e8>
400205f8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400205fc:	e200503f 	and	r5, r0, #63	; 0x3f
40020600:	e3550011 	cmp	r5, #17
40020604:	0a000001 	beq	40020610 <CyU3PUsbHandleEvents+0x24c>
40020608:	e3550012 	cmp	r5, #18
4002060c:	1a000001 	bne	40020618 <CyU3PUsbHandleEvents+0x254>
40020610:	e3a00000 	mov	r0, #0
40020614:	ebfff582 	bl	4001dc24 <CyU3PUsbSetLinkPowerState>
40020618:	e3a00001 	mov	r0, #1
4002061c:	ebffa130 	bl	40008ae4 <_tx_thread_sleep>
40020620:	e59f0188 	ldr	r0, [pc, #392]	; 400207b0 <CyU3PUsbHandleEvents+0x3ec>
40020624:	e5900000 	ldr	r0, [r0]
40020628:	e3500000 	cmp	r0, #0
4002062c:	0a000003 	beq	40020640 <CyU3PUsbHandleEvents+0x27c>
40020630:	e3a02000 	mov	r2, #0
40020634:	e3a01401 	mov	r1, #16777216	; 0x1000000
40020638:	e59f0174 	ldr	r0, [pc, #372]	; 400207b4 <CyU3PUsbHandleEvents+0x3f0>
4002063c:	ebffa620 	bl	40009ec4 <_txe_event_flags_set>
40020640:	e1a00000 	nop			; (mov r0, r0)
40020644:	e3140402 	tst	r4, #33554432	; 0x2000000
40020648:	0a000019 	beq	400206b4 <CyU3PUsbHandleEvents+0x2f0>
4002064c:	e3a00052 	mov	r0, #82	; 0x52
40020650:	ebfffd1d 	bl	4001facc <CyU3PUsbAddToEventLog>
40020654:	e59f1134 	ldr	r1, [pc, #308]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
40020658:	e5d11009 	ldrb	r1, [r1, #9]
4002065c:	e3510003 	cmp	r1, #3
40020660:	1a000001 	bne	4002066c <CyU3PUsbHandleEvents+0x2a8>
40020664:	e3a01001 	mov	r1, #1
40020668:	ea000000 	b	40020670 <CyU3PUsbHandleEvents+0x2ac>
4002066c:	e3a01000 	mov	r1, #0
40020670:	e1a00001 	mov	r0, r1
40020674:	ebfff21a 	bl	4001cee4 <CyU3PUsbPhyDisable>
40020678:	e3a00001 	mov	r0, #1
4002067c:	ebffa118 	bl	40008ae4 <_tx_thread_sleep>
40020680:	e59f0108 	ldr	r0, [pc, #264]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
40020684:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020688:	e3500000 	cmp	r0, #0
4002068c:	0a000005 	beq	400206a8 <CyU3PUsbHandleEvents+0x2e4>
40020690:	e59f0120 	ldr	r0, [pc, #288]	; 400207b8 <CyU3PUsbHandleEvents+0x3f4>
40020694:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020698:	e59f10f0 	ldr	r1, [pc, #240]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
4002069c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400206a0:	e1100001 	tst	r0, r1
400206a4:	0a000002 	beq	400206b4 <CyU3PUsbHandleEvents+0x2f0>
400206a8:	e59f10e0 	ldr	r1, [pc, #224]	; 40020790 <CyU3PUsbHandleEvents+0x3cc>
400206ac:	e5910024 	ldr	r0, [r1, #36]	; 0x24
400206b0:	ebfff281 	bl	4001d0bc <CyU3PUsbPhyEnable>
400206b4:	e3140801 	tst	r4, #65536	; 0x10000
400206b8:	0a000006 	beq	400206d8 <CyU3PUsbHandleEvents+0x314>
400206bc:	e59f00f8 	ldr	r0, [pc, #248]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
400206c0:	e5900000 	ldr	r0, [r0]
400206c4:	e3500000 	cmp	r0, #0
400206c8:	0a000002 	beq	400206d8 <CyU3PUsbHandleEvents+0x314>
400206cc:	e59f10e8 	ldr	r1, [pc, #232]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
400206d0:	e5910000 	ldr	r0, [r1]
400206d4:	e12fff30 	blx	r0
400206d8:	e3140802 	tst	r4, #131072	; 0x20000
400206dc:	0a000006 	beq	400206fc <CyU3PUsbHandleEvents+0x338>
400206e0:	e59f00d4 	ldr	r0, [pc, #212]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
400206e4:	e5900004 	ldr	r0, [r0, #4]
400206e8:	e3500000 	cmp	r0, #0
400206ec:	0a000002 	beq	400206fc <CyU3PUsbHandleEvents+0x338>
400206f0:	e59f10c4 	ldr	r1, [pc, #196]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
400206f4:	e5910004 	ldr	r0, [r1, #4]
400206f8:	e12fff30 	blx	r0
400206fc:	e3140701 	tst	r4, #262144	; 0x40000
40020700:	0a000006 	beq	40020720 <CyU3PUsbHandleEvents+0x35c>
40020704:	e59f00b0 	ldr	r0, [pc, #176]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
40020708:	e5900008 	ldr	r0, [r0, #8]
4002070c:	e3500000 	cmp	r0, #0
40020710:	0a000002 	beq	40020720 <CyU3PUsbHandleEvents+0x35c>
40020714:	e59f10a0 	ldr	r1, [pc, #160]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
40020718:	e5910008 	ldr	r0, [r1, #8]
4002071c:	e12fff30 	blx	r0
40020720:	e3140702 	tst	r4, #524288	; 0x80000
40020724:	0a000006 	beq	40020744 <CyU3PUsbHandleEvents+0x380>
40020728:	e59f008c 	ldr	r0, [pc, #140]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
4002072c:	e590000c 	ldr	r0, [r0, #12]
40020730:	e3500000 	cmp	r0, #0
40020734:	0a000002 	beq	40020744 <CyU3PUsbHandleEvents+0x380>
40020738:	e59f107c 	ldr	r1, [pc, #124]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
4002073c:	e591000c 	ldr	r0, [r1, #12]
40020740:	e12fff30 	blx	r0
40020744:	e3140601 	tst	r4, #1048576	; 0x100000
40020748:	0a000006 	beq	40020768 <CyU3PUsbHandleEvents+0x3a4>
4002074c:	e59f0068 	ldr	r0, [pc, #104]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
40020750:	e5900010 	ldr	r0, [r0, #16]
40020754:	e3500000 	cmp	r0, #0
40020758:	0a000002 	beq	40020768 <CyU3PUsbHandleEvents+0x3a4>
4002075c:	e59f1058 	ldr	r1, [pc, #88]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
40020760:	e5910010 	ldr	r0, [r1, #16]
40020764:	e12fff30 	blx	r0
40020768:	e3140602 	tst	r4, #2097152	; 0x200000
4002076c:	0a000006 	beq	4002078c <CyU3PUsbHandleEvents+0x3c8>
40020770:	e59f0044 	ldr	r0, [pc, #68]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
40020774:	e5900014 	ldr	r0, [r0, #20]
40020778:	e3500000 	cmp	r0, #0
4002077c:	0a000002 	beq	4002078c <CyU3PUsbHandleEvents+0x3c8>
40020780:	e59f1034 	ldr	r1, [pc, #52]	; 400207bc <CyU3PUsbHandleEvents+0x3f8>
40020784:	e5910014 	ldr	r0, [r1, #20]
40020788:	e12fff30 	blx	r0
4002078c:	e8bd8070 	pop	{r4, r5, r6, pc}
40020790:	40031d40 	.word	0x40031d40
40020794:	e0031000 	.word	0xe0031000
40020798:	40030d80 	.word	0x40030d80
4002079c:	40030d84 	.word	0x40030d84
400207a0:	40030db8 	.word	0x40030db8
400207a4:	e0030000 	.word	0xe0030000
400207a8:	40030d88 	.word	0x40030d88
400207ac:	e0033000 	.word	0xe0033000
400207b0:	40030dd0 	.word	0x40030dd0
400207b4:	40031eb8 	.word	0x40031eb8
400207b8:	e0051000 	.word	0xe0051000
400207bc:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

400207c0 <CyU3PUsbHandleGetStatus>:
400207c0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400207c4:	e1a04000 	mov	r4, r0
400207c8:	e1a05001 	mov	r5, r1
400207cc:	e3a07000 	mov	r7, #0
400207d0:	e3a00000 	mov	r0, #0
400207d4:	e58d0000 	str	r0, [sp]
400207d8:	e3540000 	cmp	r4, #0
400207dc:	0a000004 	beq	400207f4 <CyU3PUsbHandleGetStatus+0x34>
400207e0:	e3540001 	cmp	r4, #1
400207e4:	0a00001e 	beq	40020864 <CyU3PUsbHandleGetStatus+0xa4>
400207e8:	e3540002 	cmp	r4, #2
400207ec:	1a00002b 	bne	400208a0 <CyU3PUsbHandleGetStatus+0xe0>
400207f0:	ea000023 	b	40020884 <CyU3PUsbHandleGetStatus+0xc4>
400207f4:	e1a00000 	nop			; (mov r0, r0)
400207f8:	e3550a0f 	cmp	r5, #61440	; 0xf000
400207fc:	1a00000d 	bne	40020838 <CyU3PUsbHandleGetStatus+0x78>
40020800:	ebffed1c 	bl	4001bc78 <CyU3POtgGetMode>
40020804:	e3500002 	cmp	r0, #2
40020808:	1a000008 	bne	40020830 <CyU3PUsbHandleGetStatus+0x70>
4002080c:	e59f00a0 	ldr	r0, [pc, #160]	; 400208b4 <CyU3PUsbHandleGetStatus+0xf4>
40020810:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020814:	e3500000 	cmp	r0, #0
40020818:	0a000001 	beq	40020824 <CyU3PUsbHandleGetStatus+0x64>
4002081c:	e3a00001 	mov	r0, #1
40020820:	ea000000 	b	40020828 <CyU3PUsbHandleGetStatus+0x68>
40020824:	e3a00000 	mov	r0, #0
40020828:	e5cd0000 	strb	r0, [sp]
4002082c:	ea00000b 	b	40020860 <CyU3PUsbHandleGetStatus+0xa0>
40020830:	e3a00000 	mov	r0, #0
40020834:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020838:	e59f0074 	ldr	r0, [pc, #116]	; 400208b4 <CyU3PUsbHandleGetStatus+0xf4>
4002083c:	e5d00006 	ldrb	r0, [r0, #6]
40020840:	e5cd0000 	strb	r0, [sp]
40020844:	e59f0068 	ldr	r0, [pc, #104]	; 400208b4 <CyU3PUsbHandleGetStatus+0xf4>
40020848:	e5d00009 	ldrb	r0, [r0, #9]
4002084c:	e3500003 	cmp	r0, #3
40020850:	1a000002 	bne	40020860 <CyU3PUsbHandleGetStatus+0xa0>
40020854:	e5dd0000 	ldrb	r0, [sp]
40020858:	e3c00002 	bic	r0, r0, #2
4002085c:	e5cd0000 	strb	r0, [sp]
40020860:	e1a00000 	nop			; (mov r0, r0)
40020864:	e1a0100d 	mov	r1, sp
40020868:	e3a00002 	mov	r0, #2
4002086c:	ebfff316 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40020870:	e1a06000 	mov	r6, r0
40020874:	e3560000 	cmp	r6, #0
40020878:	1a000000 	bne	40020880 <CyU3PUsbHandleGetStatus+0xc0>
4002087c:	e3a07001 	mov	r7, #1
40020880:	ea000008 	b	400208a8 <CyU3PUsbHandleGetStatus+0xe8>
40020884:	e1a00000 	nop			; (mov r0, r0)
40020888:	e20500ff 	and	r0, r5, #255	; 0xff
4002088c:	ebfffe58 	bl	400201f4 <CyU3PUsbGetEpStatus>
40020890:	e3500000 	cmp	r0, #0
40020894:	1a000000 	bne	4002089c <CyU3PUsbHandleGetStatus+0xdc>
40020898:	e3a07001 	mov	r7, #1
4002089c:	ea000001 	b	400208a8 <CyU3PUsbHandleGetStatus+0xe8>
400208a0:	e1a00000 	nop			; (mov r0, r0)
400208a4:	e1a00000 	nop			; (mov r0, r0)
400208a8:	e1a00000 	nop			; (mov r0, r0)
400208ac:	e1a00007 	mov	r0, r7
400208b0:	eaffffdf 	b	40020834 <CyU3PUsbHandleGetStatus+0x74>
400208b4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

400208b8 <CyU3PUsbHandleSetFeature>:
400208b8:	e92d4070 	push	{r4, r5, r6, lr}
400208bc:	e1a04000 	mov	r4, r0
400208c0:	e3a05000 	mov	r5, #0
400208c4:	e3540001 	cmp	r4, #1
400208c8:	0a000006 	beq	400208e8 <CyU3PUsbHandleSetFeature+0x30>
400208cc:	e3540002 	cmp	r4, #2
400208d0:	0a00000b 	beq	40020904 <CyU3PUsbHandleSetFeature+0x4c>
400208d4:	e3540030 	cmp	r4, #48	; 0x30
400208d8:	0a00000e 	beq	40020918 <CyU3PUsbHandleSetFeature+0x60>
400208dc:	e3540031 	cmp	r4, #49	; 0x31
400208e0:	1a00002a 	bne	40020990 <CyU3PUsbHandleSetFeature+0xd8>
400208e4:	ea00001a 	b	40020954 <CyU3PUsbHandleSetFeature+0x9c>
400208e8:	e1a00000 	nop			; (mov r0, r0)
400208ec:	e59f00cc 	ldr	r0, [pc, #204]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
400208f0:	e5d00006 	ldrb	r0, [r0, #6]
400208f4:	e3800002 	orr	r0, r0, #2
400208f8:	e59f10c0 	ldr	r1, [pc, #192]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
400208fc:	e5c10006 	strb	r0, [r1, #6]
40020900:	e1a00000 	nop			; (mov r0, r0)
40020904:	ebfff0f4 	bl	4001ccdc <CyU3PUsbGetSpeed>
40020908:	e3500003 	cmp	r0, #3
4002090c:	0a000000 	beq	40020914 <CyU3PUsbHandleSetFeature+0x5c>
40020910:	e3a05001 	mov	r5, #1
40020914:	ea00001f 	b	40020998 <CyU3PUsbHandleSetFeature+0xe0>
40020918:	e1a00000 	nop			; (mov r0, r0)
4002091c:	ebfff0ee 	bl	4001ccdc <CyU3PUsbGetSpeed>
40020920:	e3500003 	cmp	r0, #3
40020924:	1a000009 	bne	40020950 <CyU3PUsbHandleSetFeature+0x98>
40020928:	e59f0090 	ldr	r0, [pc, #144]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
4002092c:	e5d00008 	ldrb	r0, [r0, #8]
40020930:	e3500006 	cmp	r0, #6
40020934:	1a000005 	bne	40020950 <CyU3PUsbHandleSetFeature+0x98>
40020938:	e59f0080 	ldr	r0, [pc, #128]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
4002093c:	e5d00006 	ldrb	r0, [r0, #6]
40020940:	e3800004 	orr	r0, r0, #4
40020944:	e59f1074 	ldr	r1, [pc, #116]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
40020948:	e5c10006 	strb	r0, [r1, #6]
4002094c:	e3a05001 	mov	r5, #1
40020950:	ea000010 	b	40020998 <CyU3PUsbHandleSetFeature+0xe0>
40020954:	e1a00000 	nop			; (mov r0, r0)
40020958:	ebfff0df 	bl	4001ccdc <CyU3PUsbGetSpeed>
4002095c:	e3500003 	cmp	r0, #3
40020960:	1a000009 	bne	4002098c <CyU3PUsbHandleSetFeature+0xd4>
40020964:	e59f0054 	ldr	r0, [pc, #84]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
40020968:	e5d00008 	ldrb	r0, [r0, #8]
4002096c:	e3500006 	cmp	r0, #6
40020970:	1a000005 	bne	4002098c <CyU3PUsbHandleSetFeature+0xd4>
40020974:	e59f0044 	ldr	r0, [pc, #68]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
40020978:	e5d00006 	ldrb	r0, [r0, #6]
4002097c:	e3800008 	orr	r0, r0, #8
40020980:	e59f1038 	ldr	r1, [pc, #56]	; 400209c0 <CyU3PUsbHandleSetFeature+0x108>
40020984:	e5c10006 	strb	r0, [r1, #6]
40020988:	e3a05001 	mov	r5, #1
4002098c:	ea000001 	b	40020998 <CyU3PUsbHandleSetFeature+0xe0>
40020990:	e1a00000 	nop			; (mov r0, r0)
40020994:	e1a00000 	nop			; (mov r0, r0)
40020998:	e1a00000 	nop			; (mov r0, r0)
4002099c:	e3550000 	cmp	r5, #0
400209a0:	0a000001 	beq	400209ac <CyU3PUsbHandleSetFeature+0xf4>
400209a4:	ebffef2f 	bl	4001c668 <CyU3PUsbAckSetup>
400209a8:	ea000003 	b	400209bc <CyU3PUsbHandleSetFeature+0x104>
400209ac:	e3a02000 	mov	r2, #0
400209b0:	e3a01001 	mov	r1, #1
400209b4:	e1a00002 	mov	r0, r2
400209b8:	ebfff4ee 	bl	4001dd78 <CyU3PUsbStall>
400209bc:	e8bd8070 	pop	{r4, r5, r6, pc}
400209c0:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

400209c4 <CyU3PUsbReEnableUsb3>:
400209c4:	e92d4010 	push	{r4, lr}
400209c8:	e3a00051 	mov	r0, #81	; 0x51
400209cc:	ebfffc3e 	bl	4001facc <CyU3PUsbAddToEventLog>
400209d0:	e59f018c 	ldr	r0, [pc, #396]	; 40020b64 <CyU3PUsbReEnableUsb3+0x1a0>
400209d4:	e5900004 	ldr	r0, [r0, #4]
400209d8:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
400209dc:	e59f1180 	ldr	r1, [pc, #384]	; 40020b64 <CyU3PUsbReEnableUsb3+0x1a0>
400209e0:	e5810004 	str	r0, [r1, #4]
400209e4:	e3e00000 	mvn	r0, #0
400209e8:	e2811a03 	add	r1, r1, #12288	; 0x3000
400209ec:	e5810004 	str	r0, [r1, #4]
400209f0:	e59f0170 	ldr	r0, [pc, #368]	; 40020b68 <CyU3PUsbReEnableUsb3+0x1a4>
400209f4:	e5810008 	str	r0, [r1, #8]
400209f8:	e3e00000 	mvn	r0, #0
400209fc:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020a00:	e59f0164 	ldr	r0, [pc, #356]	; 40020b6c <CyU3PUsbReEnableUsb3+0x1a8>
40020a04:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020a08:	e59f0160 	ldr	r0, [pc, #352]	; 40020b70 <CyU3PUsbReEnableUsb3+0x1ac>
40020a0c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020a10:	e3500000 	cmp	r0, #0
40020a14:	0a000003 	beq	40020a28 <CyU3PUsbReEnableUsb3+0x64>
40020a18:	e1a00001 	mov	r0, r1
40020a1c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020a20:	e3800c01 	orr	r0, r0, #256	; 0x100
40020a24:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020a28:	e3a00000 	mov	r0, #0
40020a2c:	e59f113c 	ldr	r1, [pc, #316]	; 40020b70 <CyU3PUsbReEnableUsb3+0x1ac>
40020a30:	e5810044 	str	r0, [r1, #68]	; 0x44
40020a34:	e59f0138 	ldr	r0, [pc, #312]	; 40020b74 <CyU3PUsbReEnableUsb3+0x1b0>
40020a38:	e5900000 	ldr	r0, [r0]
40020a3c:	e3500000 	cmp	r0, #0
40020a40:	0a000003 	beq	40020a54 <CyU3PUsbReEnableUsb3+0x90>
40020a44:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020a48:	e59f1128 	ldr	r1, [pc, #296]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020a4c:	e5810050 	str	r0, [r1, #80]	; 0x50
40020a50:	ea000002 	b	40020a60 <CyU3PUsbReEnableUsb3+0x9c>
40020a54:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020a58:	e59f1118 	ldr	r1, [pc, #280]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020a5c:	e5810050 	str	r0, [r1, #80]	; 0x50
40020a60:	eb000574 	bl	40022038 <CyFx3Usb3LnkSetup>
40020a64:	e59f0110 	ldr	r0, [pc, #272]	; 40020b7c <CyU3PUsbReEnableUsb3+0x1b8>
40020a68:	e59f1108 	ldr	r1, [pc, #264]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020a6c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020a70:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020a74:	e1c10000 	bic	r0, r1, r0
40020a78:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020a7c:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020a80:	e5810158 	str	r0, [r1, #344]	; 0x158
40020a84:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020a88:	e581001c 	str	r0, [r1, #28]
40020a8c:	e3a01000 	mov	r1, #0
40020a90:	e3a00001 	mov	r0, #1
40020a94:	ebffee60 	bl	4001c41c <CyU3PSetUsbCoreClock>
40020a98:	e3a0000a 	mov	r0, #10
40020a9c:	ebffcabe 	bl	4001359c <CyU3PBusyWait>
40020aa0:	eb000537 	bl	40021f84 <CyU3PVicDisableAllInterrupts>
40020aa4:	e1a04000 	mov	r4, r0
40020aa8:	e3a00000 	mov	r0, #0
40020aac:	e59f10cc 	ldr	r1, [pc, #204]	; 40020b80 <CyU3PUsbReEnableUsb3+0x1bc>
40020ab0:	e5810000 	str	r0, [r1]
40020ab4:	e3a00a01 	mov	r0, #4096	; 0x1000
40020ab8:	e59f10b8 	ldr	r1, [pc, #184]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020abc:	e5810054 	str	r0, [r1, #84]	; 0x54
40020ac0:	e1c10080 	bic	r0, r1, r0, lsl #1
40020ac4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020ac8:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020acc:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020ad0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020ad4:	e3a00064 	mov	r0, #100	; 0x64
40020ad8:	ebffcaaf 	bl	4001359c <CyU3PBusyWait>
40020adc:	e59f0094 	ldr	r0, [pc, #148]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020ae0:	e5900000 	ldr	r0, [r0]
40020ae4:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020ae8:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020aec:	e59f1084 	ldr	r1, [pc, #132]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020af0:	e5810000 	str	r0, [r1]
40020af4:	e59f0088 	ldr	r0, [pc, #136]	; 40020b84 <CyU3PUsbReEnableUsb3+0x1c0>
40020af8:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020afc:	e3a01080 	mov	r1, #128	; 0x80
40020b00:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020b04:	eb000591 	bl	40022150 <CyFx3UsbWritePhyReg>
40020b08:	e3a01d06 	mov	r1, #384	; 0x180
40020b0c:	e59f0074 	ldr	r0, [pc, #116]	; 40020b88 <CyU3PUsbReEnableUsb3+0x1c4>
40020b10:	eb00058e 	bl	40022150 <CyFx3UsbWritePhyReg>
40020b14:	e3a01080 	mov	r1, #128	; 0x80
40020b18:	e59f006c 	ldr	r0, [pc, #108]	; 40020b8c <CyU3PUsbReEnableUsb3+0x1c8>
40020b1c:	eb00058b 	bl	40022150 <CyFx3UsbWritePhyReg>
40020b20:	e59f003c 	ldr	r0, [pc, #60]	; 40020b64 <CyU3PUsbReEnableUsb3+0x1a0>
40020b24:	e5900004 	ldr	r0, [r0, #4]
40020b28:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020b2c:	e59f1030 	ldr	r1, [pc, #48]	; 40020b64 <CyU3PUsbReEnableUsb3+0x1a0>
40020b30:	e5810004 	str	r0, [r1, #4]
40020b34:	e1a00004 	mov	r0, r4
40020b38:	eb00051f 	bl	40021fbc <CyU3PVicEnableInterrupts>
40020b3c:	e59f0034 	ldr	r0, [pc, #52]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020b40:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020b44:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020b48:	e59f1028 	ldr	r1, [pc, #40]	; 40020b78 <CyU3PUsbReEnableUsb3+0x1b4>
40020b4c:	e5810054 	str	r0, [r1, #84]	; 0x54
40020b50:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020b54:	e581001c 	str	r0, [r1, #28]
40020b58:	e3a00064 	mov	r0, #100	; 0x64
40020b5c:	ebffca8e 	bl	4001359c <CyU3PBusyWait>
40020b60:	e8bd8010 	pop	{r4, pc}
40020b64:	e0030000 	.word	0xe0030000
40020b68:	00038081 	.word	0x00038081
40020b6c:	00004a3d 	.word	0x00004a3d
40020b70:	40031d40 	.word	0x40031d40
40020b74:	40030d5c 	.word	0x40030d5c
40020b78:	e0033000 	.word	0xe0033000
40020b7c:	00000908 	.word	0x00000908
40020b80:	40030d90 	.word	0x40030d90
40020b84:	00310418 	.word	0x00310418
40020b88:	00001006 	.word	0x00001006
40020b8c:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020b90 <CyU3PUsbRegisterEventCallback>:
40020b90:	e92d4010 	push	{r4, lr}
40020b94:	e1a04000 	mov	r4, r0
40020b98:	e59f0038 	ldr	r0, [pc, #56]	; 40020bd8 <CyU3PUsbRegisterEventCallback+0x48>
40020b9c:	e5804000 	str	r4, [r0]
40020ba0:	e59f0034 	ldr	r0, [pc, #52]	; 40020bdc <CyU3PUsbRegisterEventCallback+0x4c>
40020ba4:	e5d00008 	ldrb	r0, [r0, #8]
40020ba8:	e3500000 	cmp	r0, #0
40020bac:	0a000008 	beq	40020bd4 <CyU3PUsbRegisterEventCallback+0x44>
40020bb0:	e59f0028 	ldr	r0, [pc, #40]	; 40020be0 <CyU3PUsbRegisterEventCallback+0x50>
40020bb4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020bb8:	e59f101c 	ldr	r1, [pc, #28]	; 40020bdc <CyU3PUsbRegisterEventCallback+0x4c>
40020bbc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020bc0:	e1100001 	tst	r0, r1
40020bc4:	0a000002 	beq	40020bd4 <CyU3PUsbRegisterEventCallback+0x44>
40020bc8:	e3a01000 	mov	r1, #0
40020bcc:	e3a0000b 	mov	r0, #11
40020bd0:	e12fff34 	blx	r4
40020bd4:	e8bd8010 	pop	{r4, pc}
40020bd8:	40030db8 	.word	0x40030db8
40020bdc:	40031d40 	.word	0x40031d40
40020be0:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020be4 <CyU3PUsbRegisterSetupCallback>:
40020be4:	e59f2050 	ldr	r2, [pc, #80]	; 40020c3c <CyU3PUsbRegisterSetupCallback+0x58>
40020be8:	e5820000 	str	r0, [r2]
40020bec:	e3510001 	cmp	r1, #1
40020bf0:	1a000003 	bne	40020c04 <CyU3PUsbRegisterSetupCallback+0x20>
40020bf4:	e3a02000 	mov	r2, #0
40020bf8:	e59f3040 	ldr	r3, [pc, #64]	; 40020c40 <CyU3PUsbRegisterSetupCallback+0x5c>
40020bfc:	e5c32007 	strb	r2, [r3, #7]
40020c00:	ea00000c 	b	40020c38 <CyU3PUsbRegisterSetupCallback+0x54>
40020c04:	e3a02001 	mov	r2, #1
40020c08:	e59f3030 	ldr	r3, [pc, #48]	; 40020c40 <CyU3PUsbRegisterSetupCallback+0x5c>
40020c0c:	e5c32007 	strb	r2, [r3, #7]
40020c10:	e2832000 	add	r2, r3, #0
40020c14:	e5d22008 	ldrb	r2, [r2, #8]
40020c18:	e3520000 	cmp	r2, #0
40020c1c:	da000005 	ble	40020c38 <CyU3PUsbRegisterSetupCallback+0x54>
40020c20:	e2832000 	add	r2, r3, #0
40020c24:	e5d22008 	ldrb	r2, [r2, #8]
40020c28:	e3520003 	cmp	r2, #3
40020c2c:	aa000001 	bge	40020c38 <CyU3PUsbRegisterSetupCallback+0x54>
40020c30:	e3a02003 	mov	r2, #3
40020c34:	e5c32008 	strb	r2, [r3, #8]
40020c38:	e12fff1e 	bx	lr
40020c3c:	40030dbc 	.word	0x40030dbc
40020c40:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020c44 <CyU3PUsbResetHandler>:
40020c44:	e92d4010 	push	{r4, lr}
40020c48:	e3a00001 	mov	r0, #1
40020c4c:	e59f1124 	ldr	r1, [pc, #292]	; 40020d78 <CyU3PUsbResetHandler+0x134>
40020c50:	e5c10009 	strb	r0, [r1, #9]
40020c54:	e59f0120 	ldr	r0, [pc, #288]	; 40020d7c <CyU3PUsbResetHandler+0x138>
40020c58:	e5900018 	ldr	r0, [r0, #24]
40020c5c:	e59f1118 	ldr	r1, [pc, #280]	; 40020d7c <CyU3PUsbResetHandler+0x138>
40020c60:	e581000c 	str	r0, [r1, #12]
40020c64:	e2810000 	add	r0, r1, #0
40020c68:	e5900014 	ldr	r0, [r0, #20]
40020c6c:	e5810010 	str	r0, [r1, #16]
40020c70:	e59f0108 	ldr	r0, [pc, #264]	; 40020d80 <CyU3PUsbResetHandler+0x13c>
40020c74:	e5900000 	ldr	r0, [r0]
40020c78:	e3500000 	cmp	r0, #0
40020c7c:	0a000010 	beq	40020cc4 <CyU3PUsbResetHandler+0x80>
40020c80:	e59f00f0 	ldr	r0, [pc, #240]	; 40020d78 <CyU3PUsbResetHandler+0x134>
40020c84:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020c88:	e3500000 	cmp	r0, #0
40020c8c:	1a000007 	bne	40020cb0 <CyU3PUsbResetHandler+0x6c>
40020c90:	e3a01000 	mov	r1, #0
40020c94:	e1a00001 	mov	r0, r1
40020c98:	e59f20e0 	ldr	r2, [pc, #224]	; 40020d80 <CyU3PUsbResetHandler+0x13c>
40020c9c:	e5922000 	ldr	r2, [r2]
40020ca0:	e12fff32 	blx	r2
40020ca4:	e3a00001 	mov	r0, #1
40020ca8:	e59f10c8 	ldr	r1, [pc, #200]	; 40020d78 <CyU3PUsbResetHandler+0x134>
40020cac:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020cb0:	e3a01000 	mov	r1, #0
40020cb4:	e3a00004 	mov	r0, #4
40020cb8:	e59f20c0 	ldr	r2, [pc, #192]	; 40020d80 <CyU3PUsbResetHandler+0x13c>
40020cbc:	e5922000 	ldr	r2, [r2]
40020cc0:	e12fff32 	blx	r2
40020cc4:	e59f00b8 	ldr	r0, [pc, #184]	; 40020d84 <CyU3PUsbResetHandler+0x140>
40020cc8:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020ccc:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020cd0:	e59f10ac 	ldr	r1, [pc, #172]	; 40020d84 <CyU3PUsbResetHandler+0x140>
40020cd4:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020cd8:	e3a00001 	mov	r0, #1
40020cdc:	ebffca2e 	bl	4001359c <CyU3PBusyWait>
40020ce0:	e59f009c 	ldr	r0, [pc, #156]	; 40020d84 <CyU3PUsbResetHandler+0x140>
40020ce4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020ce8:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020cec:	e59f1090 	ldr	r1, [pc, #144]	; 40020d84 <CyU3PUsbResetHandler+0x140>
40020cf0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020cf4:	e3a00001 	mov	r0, #1
40020cf8:	ebffca27 	bl	4001359c <CyU3PBusyWait>
40020cfc:	e3a00040 	mov	r0, #64	; 0x40
40020d00:	e59f107c 	ldr	r1, [pc, #124]	; 40020d84 <CyU3PUsbResetHandler+0x140>
40020d04:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020d08:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020d0c:	e1c10000 	bic	r0, r1, r0
40020d10:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020d14:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020d18:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020d1c:	e1a00001 	mov	r0, r1
40020d20:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020d24:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020d28:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020d2c:	e3a00001 	mov	r0, #1
40020d30:	ebfffc14 	bl	4001fd88 <CyU3PUsbEpPrepare>
40020d34:	e59f003c 	ldr	r0, [pc, #60]	; 40020d78 <CyU3PUsbResetHandler+0x134>
40020d38:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020d3c:	e3500000 	cmp	r0, #0
40020d40:	0a00000b 	beq	40020d74 <CyU3PUsbResetHandler+0x130>
40020d44:	e59f002c 	ldr	r0, [pc, #44]	; 40020d78 <CyU3PUsbResetHandler+0x134>
40020d48:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020d4c:	e3500003 	cmp	r0, #3
40020d50:	3a000002 	bcc	40020d60 <CyU3PUsbResetHandler+0x11c>
40020d54:	e3a00000 	mov	r0, #0
40020d58:	e59f1018 	ldr	r1, [pc, #24]	; 40020d78 <CyU3PUsbResetHandler+0x134>
40020d5c:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020d60:	e59f001c 	ldr	r0, [pc, #28]	; 40020d84 <CyU3PUsbResetHandler+0x140>
40020d64:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d68:	e3100901 	tst	r0, #16384	; 0x4000
40020d6c:	1a000000 	bne	40020d74 <CyU3PUsbResetHandler+0x130>
40020d70:	ebffff13 	bl	400209c4 <CyU3PUsbReEnableUsb3>
40020d74:	e8bd8010 	pop	{r4, pc}
40020d78:	40031d40 	.word	0x40031d40
40020d7c:	40031f98 	.word	0x40031f98
40020d80:	40030db8 	.word	0x40030db8
40020d84:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020d88 <CyU3PUsbResumeHandler>:
40020d88:	e92d4010 	push	{r4, lr}
40020d8c:	e59f003c 	ldr	r0, [pc, #60]	; 40020dd0 <CyU3PUsbResumeHandler+0x48>
40020d90:	e5d00008 	ldrb	r0, [r0, #8]
40020d94:	e3500005 	cmp	r0, #5
40020d98:	ba00000b 	blt	40020dcc <CyU3PUsbResumeHandler+0x44>
40020d9c:	e59f0030 	ldr	r0, [pc, #48]	; 40020dd4 <CyU3PUsbResumeHandler+0x4c>
40020da0:	e5900000 	ldr	r0, [r0]
40020da4:	e3500000 	cmp	r0, #0
40020da8:	0a000004 	beq	40020dc0 <CyU3PUsbResumeHandler+0x38>
40020dac:	e3a01000 	mov	r1, #0
40020db0:	e3a00003 	mov	r0, #3
40020db4:	e59f2018 	ldr	r2, [pc, #24]	; 40020dd4 <CyU3PUsbResumeHandler+0x4c>
40020db8:	e5922000 	ldr	r2, [r2]
40020dbc:	e12fff32 	blx	r2
40020dc0:	e3a00006 	mov	r0, #6
40020dc4:	e59f1004 	ldr	r1, [pc, #4]	; 40020dd0 <CyU3PUsbResumeHandler+0x48>
40020dc8:	e5c10008 	strb	r0, [r1, #8]
40020dcc:	e8bd8010 	pop	{r4, pc}
40020dd0:	40031d40 	.word	0x40031d40
40020dd4:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020dd8 <CyU3PUsbSSConnecthandler>:
40020dd8:	e92d4010 	push	{r4, lr}
40020ddc:	e59f01d4 	ldr	r0, [pc, #468]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020de0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020de4:	e3100a02 	tst	r0, #8192	; 0x2000
40020de8:	0a00002b 	beq	40020e9c <CyU3PUsbSSConnecthandler+0xc4>
40020dec:	e59f01c8 	ldr	r0, [pc, #456]	; 40020fbc <CyU3PUsbSSConnecthandler+0x1e4>
40020df0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020df4:	e200403f 	and	r4, r0, #63	; 0x3f
40020df8:	ea000003 	b	40020e0c <CyU3PUsbSSConnecthandler+0x34>
40020dfc:	ebffa6e9 	bl	4000a9a8 <_txe_thread_relinquish>
40020e00:	e59f01b4 	ldr	r0, [pc, #436]	; 40020fbc <CyU3PUsbSSConnecthandler+0x1e4>
40020e04:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020e08:	e200403f 	and	r4, r0, #63	; 0x3f
40020e0c:	e59f01a4 	ldr	r0, [pc, #420]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020e10:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e14:	e3100901 	tst	r0, #16384	; 0x4000
40020e18:	0a000001 	beq	40020e24 <CyU3PUsbSSConnecthandler+0x4c>
40020e1c:	e3540008 	cmp	r4, #8
40020e20:	0afffff5 	beq	40020dfc <CyU3PUsbSSConnecthandler+0x24>
40020e24:	e3540017 	cmp	r4, #23
40020e28:	1a00000a 	bne	40020e58 <CyU3PUsbSSConnecthandler+0x80>
40020e2c:	e59f018c 	ldr	r0, [pc, #396]	; 40020fc0 <CyU3PUsbSSConnecthandler+0x1e8>
40020e30:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020e34:	e3500000 	cmp	r0, #0
40020e38:	1a000002 	bne	40020e48 <CyU3PUsbSSConnecthandler+0x70>
40020e3c:	e3a00010 	mov	r0, #16
40020e40:	ebfffb21 	bl	4001facc <CyU3PUsbAddToEventLog>
40020e44:	eb000060 	bl	40020fcc <CyU3PUsbSSDisConnecthandler>
40020e48:	e3a00003 	mov	r0, #3
40020e4c:	e59f116c 	ldr	r1, [pc, #364]	; 40020fc0 <CyU3PUsbSSConnecthandler+0x1e8>
40020e50:	e5c10009 	strb	r0, [r1, #9]
40020e54:	e8bd8010 	pop	{r4, pc}
40020e58:	e59f0158 	ldr	r0, [pc, #344]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020e5c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e60:	e3100901 	tst	r0, #16384	; 0x4000
40020e64:	1a000000 	bne	40020e6c <CyU3PUsbSSConnecthandler+0x94>
40020e68:	eafffff9 	b	40020e54 <CyU3PUsbSSConnecthandler+0x7c>
40020e6c:	e59f0144 	ldr	r0, [pc, #324]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020e70:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020e74:	e3800008 	orr	r0, r0, #8
40020e78:	e59f1138 	ldr	r1, [pc, #312]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020e7c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020e80:	e1a00001 	mov	r0, r1
40020e84:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e88:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020e8c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020e90:	e1a00001 	mov	r0, r1
40020e94:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40020e98:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020e9c:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40020ea0:	e59f111c 	ldr	r1, [pc, #284]	; 40020fc4 <CyU3PUsbSSConnecthandler+0x1ec>
40020ea4:	e5810008 	str	r0, [r1, #8]
40020ea8:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020eac:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40020eb0:	e581001c 	str	r0, [r1, #28]
40020eb4:	e3a00003 	mov	r0, #3
40020eb8:	e59f1100 	ldr	r1, [pc, #256]	; 40020fc0 <CyU3PUsbSSConnecthandler+0x1e8>
40020ebc:	e5c10009 	strb	r0, [r1, #9]
40020ec0:	e59f00f0 	ldr	r0, [pc, #240]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020ec4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020ec8:	e3800902 	orr	r0, r0, #32768	; 0x8000
40020ecc:	e59f10e4 	ldr	r1, [pc, #228]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020ed0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020ed4:	e1a00001 	mov	r0, r1
40020ed8:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020edc:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020ee0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020ee4:	e3a00001 	mov	r0, #1
40020ee8:	ebffc9ab 	bl	4001359c <CyU3PBusyWait>
40020eec:	e59f00c4 	ldr	r0, [pc, #196]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020ef0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020ef4:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020ef8:	e59f10b8 	ldr	r1, [pc, #184]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020efc:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020f00:	e3a00001 	mov	r0, #1
40020f04:	ebffc9a4 	bl	4001359c <CyU3PBusyWait>
40020f08:	e3a00000 	mov	r0, #0
40020f0c:	ebffeecd 	bl	4001ca48 <CyU3PUsbFlushEp>
40020f10:	e3a00080 	mov	r0, #128	; 0x80
40020f14:	ebffeecb 	bl	4001ca48 <CyU3PUsbFlushEp>
40020f18:	e59f009c 	ldr	r0, [pc, #156]	; 40020fbc <CyU3PUsbSSConnecthandler+0x1e4>
40020f1c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40020f20:	e3800001 	orr	r0, r0, #1
40020f24:	e59f1090 	ldr	r1, [pc, #144]	; 40020fbc <CyU3PUsbSSConnecthandler+0x1e4>
40020f28:	e5810500 	str	r0, [r1, #1280]	; 0x500
40020f2c:	e3a00c02 	mov	r0, #512	; 0x200
40020f30:	e1c11200 	bic	r1, r1, r0, lsl #4
40020f34:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020f38:	e1810200 	orr	r0, r1, r0, lsl #4
40020f3c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40020f40:	e3800001 	orr	r0, r0, #1
40020f44:	e2811a02 	add	r1, r1, #8192	; 0x2000
40020f48:	e5810600 	str	r0, [r1, #1536]	; 0x600
40020f4c:	e3a00c02 	mov	r0, #512	; 0x200
40020f50:	e1c11200 	bic	r1, r1, r0, lsl #4
40020f54:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020f58:	e3a00000 	mov	r0, #0
40020f5c:	ebfff121 	bl	4001d3e8 <CyU3PUsbResetEp>
40020f60:	e3a00000 	mov	r0, #0
40020f64:	ebffeeb7 	bl	4001ca48 <CyU3PUsbFlushEp>
40020f68:	e3a00080 	mov	r0, #128	; 0x80
40020f6c:	ebfff11d 	bl	4001d3e8 <CyU3PUsbResetEp>
40020f70:	e3a00080 	mov	r0, #128	; 0x80
40020f74:	ebffeeb3 	bl	4001ca48 <CyU3PUsbFlushEp>
40020f78:	e3a00c02 	mov	r0, #512	; 0x200
40020f7c:	e59f1034 	ldr	r1, [pc, #52]	; 40020fb8 <CyU3PUsbSSConnecthandler+0x1e0>
40020f80:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020f84:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020f88:	e59f0038 	ldr	r0, [pc, #56]	; 40020fc8 <CyU3PUsbSSConnecthandler+0x1f0>
40020f8c:	e5900000 	ldr	r0, [r0]
40020f90:	e3500000 	cmp	r0, #0
40020f94:	0a000004 	beq	40020fac <CyU3PUsbSSConnecthandler+0x1d4>
40020f98:	e3a01001 	mov	r1, #1
40020f9c:	e3a00000 	mov	r0, #0
40020fa0:	e59f2020 	ldr	r2, [pc, #32]	; 40020fc8 <CyU3PUsbSSConnecthandler+0x1f0>
40020fa4:	e5922000 	ldr	r2, [r2]
40020fa8:	e12fff32 	blx	r2
40020fac:	e3a00003 	mov	r0, #3
40020fb0:	ebfffb74 	bl	4001fd88 <CyU3PUsbEpPrepare>
40020fb4:	eaffffa6 	b	40020e54 <CyU3PUsbSSConnecthandler+0x7c>
40020fb8:	e0031000 	.word	0xe0031000
40020fbc:	e0033000 	.word	0xe0033000
40020fc0:	40031d40 	.word	0x40031d40
40020fc4:	e0052000 	.word	0xe0052000
40020fc8:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40020fcc <CyU3PUsbSSDisConnecthandler>:
40020fcc:	e92d4010 	push	{r4, lr}
40020fd0:	e59f0164 	ldr	r0, [pc, #356]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
40020fd4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020fd8:	e3500000 	cmp	r0, #0
40020fdc:	0a000005 	beq	40020ff8 <CyU3PUsbSSDisConnecthandler+0x2c>
40020fe0:	e59f0158 	ldr	r0, [pc, #344]	; 40021140 <CyU3PUsbSSDisConnecthandler+0x174>
40020fe4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020fe8:	e59f114c 	ldr	r1, [pc, #332]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
40020fec:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020ff0:	e1100001 	tst	r0, r1
40020ff4:	0a00004e 	beq	40021134 <CyU3PUsbSSDisConnecthandler+0x168>
40020ff8:	e59f013c 	ldr	r0, [pc, #316]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
40020ffc:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021000:	e2800001 	add	r0, r0, #1
40021004:	e59f1130 	ldr	r1, [pc, #304]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
40021008:	e5810058 	str	r0, [r1, #88]	; 0x58
4002100c:	e59f0130 	ldr	r0, [pc, #304]	; 40021144 <CyU3PUsbSSDisConnecthandler+0x178>
40021010:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021014:	e3100a02 	tst	r0, #8192	; 0x2000
40021018:	0a000020 	beq	400210a0 <CyU3PUsbSSDisConnecthandler+0xd4>
4002101c:	e59f0120 	ldr	r0, [pc, #288]	; 40021144 <CyU3PUsbSSDisConnecthandler+0x178>
40021020:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021024:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021028:	e59f1114 	ldr	r1, [pc, #276]	; 40021144 <CyU3PUsbSSDisConnecthandler+0x178>
4002102c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021030:	e3a00002 	mov	r0, #2
40021034:	ebffc958 	bl	4001359c <CyU3PBusyWait>
40021038:	e59f0108 	ldr	r0, [pc, #264]	; 40021148 <CyU3PUsbSSDisConnecthandler+0x17c>
4002103c:	e5900004 	ldr	r0, [r0, #4]
40021040:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021044:	e59f10fc 	ldr	r1, [pc, #252]	; 40021148 <CyU3PUsbSSDisConnecthandler+0x17c>
40021048:	e5810004 	str	r0, [r1, #4]
4002104c:	e3a00001 	mov	r0, #1
40021050:	ebffc951 	bl	4001359c <CyU3PBusyWait>
40021054:	e59f00f0 	ldr	r0, [pc, #240]	; 4002114c <CyU3PUsbSSDisConnecthandler+0x180>
40021058:	e590001c 	ldr	r0, [r0, #28]
4002105c:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021060:	e59f10e4 	ldr	r1, [pc, #228]	; 4002114c <CyU3PUsbSSDisConnecthandler+0x180>
40021064:	e581001c 	str	r0, [r1, #28]
40021068:	e59f00e0 	ldr	r0, [pc, #224]	; 40021150 <CyU3PUsbSSDisConnecthandler+0x184>
4002106c:	e5900000 	ldr	r0, [r0]
40021070:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021074:	e3a00001 	mov	r0, #1
40021078:	ebffc947 	bl	4001359c <CyU3PBusyWait>
4002107c:	e59f00c4 	ldr	r0, [pc, #196]	; 40021148 <CyU3PUsbSSDisConnecthandler+0x17c>
40021080:	e5900004 	ldr	r0, [r0, #4]
40021084:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021088:	e59f10b8 	ldr	r1, [pc, #184]	; 40021148 <CyU3PUsbSSDisConnecthandler+0x17c>
4002108c:	e5810004 	str	r0, [r1, #4]
40021090:	e3a01000 	mov	r1, #0
40021094:	e3a00002 	mov	r0, #2
40021098:	ebffecdf 	bl	4001c41c <CyU3PSetUsbCoreClock>
4002109c:	ea000025 	b	40021138 <CyU3PUsbSSDisConnecthandler+0x16c>
400210a0:	e3a00001 	mov	r0, #1
400210a4:	e59f1090 	ldr	r1, [pc, #144]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
400210a8:	e5c10009 	strb	r0, [r1, #9]
400210ac:	ebffef8c 	bl	4001cee4 <CyU3PUsbPhyDisable>
400210b0:	e59f0084 	ldr	r0, [pc, #132]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
400210b4:	e5900078 	ldr	r0, [r0, #120]	; 0x78
400210b8:	e3500000 	cmp	r0, #0
400210bc:	0a000019 	beq	40021128 <CyU3PUsbSSDisConnecthandler+0x15c>
400210c0:	e59f008c 	ldr	r0, [pc, #140]	; 40021154 <CyU3PUsbSSDisConnecthandler+0x188>
400210c4:	e5900000 	ldr	r0, [r0]
400210c8:	e3500000 	cmp	r0, #0
400210cc:	0a000005 	beq	400210e8 <CyU3PUsbSSDisConnecthandler+0x11c>
400210d0:	e3a00000 	mov	r0, #0
400210d4:	e59f1078 	ldr	r1, [pc, #120]	; 40021154 <CyU3PUsbSSDisConnecthandler+0x188>
400210d8:	e5810000 	str	r0, [r1]
400210dc:	e3a00001 	mov	r0, #1
400210e0:	ebffeff5 	bl	4001d0bc <CyU3PUsbPhyEnable>
400210e4:	ea000013 	b	40021138 <CyU3PUsbSSDisConnecthandler+0x16c>
400210e8:	e3a00003 	mov	r0, #3
400210ec:	e59f1048 	ldr	r1, [pc, #72]	; 4002113c <CyU3PUsbSSDisConnecthandler+0x170>
400210f0:	e5c10008 	strb	r0, [r1, #8]
400210f4:	e3a00000 	mov	r0, #0
400210f8:	e5c10009 	strb	r0, [r1, #9]
400210fc:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021100:	e59f0050 	ldr	r0, [pc, #80]	; 40021158 <CyU3PUsbSSDisConnecthandler+0x18c>
40021104:	e5900000 	ldr	r0, [r0]
40021108:	e3500000 	cmp	r0, #0
4002110c:	0a000009 	beq	40021138 <CyU3PUsbSSDisConnecthandler+0x16c>
40021110:	e3a01000 	mov	r1, #0
40021114:	e3a00014 	mov	r0, #20
40021118:	e59f2038 	ldr	r2, [pc, #56]	; 40021158 <CyU3PUsbSSDisConnecthandler+0x18c>
4002111c:	e5922000 	ldr	r2, [r2]
40021120:	e12fff32 	blx	r2
40021124:	ea000003 	b	40021138 <CyU3PUsbSSDisConnecthandler+0x16c>
40021128:	e3a00000 	mov	r0, #0
4002112c:	ebffefe2 	bl	4001d0bc <CyU3PUsbPhyEnable>
40021130:	ea000000 	b	40021138 <CyU3PUsbSSDisConnecthandler+0x16c>
40021134:	ebfffa07 	bl	4001f958 <CyU3PUibVbusChangeHandler>
40021138:	e8bd8010 	pop	{r4, pc}
4002113c:	40031d40 	.word	0x40031d40
40021140:	e0051000 	.word	0xe0051000
40021144:	e0031000 	.word	0xe0031000
40021148:	e0030000 	.word	0xe0030000
4002114c:	e0033000 	.word	0xe0033000
40021150:	40030c74 	.word	0x40030c74
40021154:	40030d90 	.word	0x40030d90
40021158:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbSSReset:

4002115c <CyU3PUsbSSReset>:
4002115c:	e92d4010 	push	{r4, lr}
40021160:	e3a04000 	mov	r4, #0
40021164:	e59f0170 	ldr	r0, [pc, #368]	; 400212dc <CyU3PUsbSSReset+0x180>
40021168:	e5d00009 	ldrb	r0, [r0, #9]
4002116c:	e3500003 	cmp	r0, #3
40021170:	0a000000 	beq	40021178 <CyU3PUsbSSReset+0x1c>
40021174:	e8bd8010 	pop	{r4, pc}
40021178:	e59f0160 	ldr	r0, [pc, #352]	; 400212e0 <CyU3PUsbSSReset+0x184>
4002117c:	e5900000 	ldr	r0, [r0]
40021180:	e3500000 	cmp	r0, #0
40021184:	0a000004 	beq	4002119c <CyU3PUsbSSReset+0x40>
40021188:	e3a01001 	mov	r1, #1
4002118c:	e3a00004 	mov	r0, #4
40021190:	e59f2148 	ldr	r2, [pc, #328]	; 400212e0 <CyU3PUsbSSReset+0x184>
40021194:	e5922000 	ldr	r2, [r2]
40021198:	e12fff32 	blx	r2
4002119c:	e59f0140 	ldr	r0, [pc, #320]	; 400212e4 <CyU3PUsbSSReset+0x188>
400211a0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400211a4:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400211a8:	e59f1134 	ldr	r1, [pc, #308]	; 400212e4 <CyU3PUsbSSReset+0x188>
400211ac:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400211b0:	e3a00001 	mov	r0, #1
400211b4:	ebffc8f8 	bl	4001359c <CyU3PBusyWait>
400211b8:	e59f0124 	ldr	r0, [pc, #292]	; 400212e4 <CyU3PUsbSSReset+0x188>
400211bc:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400211c0:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400211c4:	e59f1118 	ldr	r1, [pc, #280]	; 400212e4 <CyU3PUsbSSReset+0x188>
400211c8:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400211cc:	e3a00001 	mov	r0, #1
400211d0:	ebffc8f1 	bl	4001359c <CyU3PBusyWait>
400211d4:	e3a00000 	mov	r0, #0
400211d8:	ebffee1a 	bl	4001ca48 <CyU3PUsbFlushEp>
400211dc:	e3a00080 	mov	r0, #128	; 0x80
400211e0:	ebffee18 	bl	4001ca48 <CyU3PUsbFlushEp>
400211e4:	e59f00fc 	ldr	r0, [pc, #252]	; 400212e8 <CyU3PUsbSSReset+0x18c>
400211e8:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
400211ec:	e3800001 	orr	r0, r0, #1
400211f0:	e59f10f0 	ldr	r1, [pc, #240]	; 400212e8 <CyU3PUsbSSReset+0x18c>
400211f4:	e5810500 	str	r0, [r1, #1280]	; 0x500
400211f8:	e3a00c02 	mov	r0, #512	; 0x200
400211fc:	e1c11200 	bic	r1, r1, r0, lsl #4
40021200:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021204:	e1810200 	orr	r0, r1, r0, lsl #4
40021208:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4002120c:	e3800001 	orr	r0, r0, #1
40021210:	e2811a02 	add	r1, r1, #8192	; 0x2000
40021214:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021218:	e3a00c02 	mov	r0, #512	; 0x200
4002121c:	e1c11200 	bic	r1, r1, r0, lsl #4
40021220:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021224:	e3a00000 	mov	r0, #0
40021228:	ebfff06e 	bl	4001d3e8 <CyU3PUsbResetEp>
4002122c:	e3a00000 	mov	r0, #0
40021230:	ebffee04 	bl	4001ca48 <CyU3PUsbFlushEp>
40021234:	e3a00080 	mov	r0, #128	; 0x80
40021238:	ebfff06a 	bl	4001d3e8 <CyU3PUsbResetEp>
4002123c:	e3a00080 	mov	r0, #128	; 0x80
40021240:	ebffee00 	bl	4001ca48 <CyU3PUsbFlushEp>
40021244:	e3a00c02 	mov	r0, #512	; 0x200
40021248:	e59f1094 	ldr	r1, [pc, #148]	; 400212e4 <CyU3PUsbSSReset+0x188>
4002124c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021250:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021254:	e3a04001 	mov	r4, #1
40021258:	ea000019 	b	400212c4 <CyU3PUsbSSReset+0x168>
4002125c:	e0840084 	add	r0, r4, r4, lsl #1
40021260:	e59f1084 	ldr	r1, [pc, #132]	; 400212ec <CyU3PUsbSSReset+0x190>
40021264:	e0810100 	add	r0, r1, r0, lsl #2
40021268:	e5900004 	ldr	r0, [r0, #4]
4002126c:	e3500001 	cmp	r0, #1
40021270:	1a000005 	bne	4002128c <CyU3PUsbSSReset+0x130>
40021274:	e3840080 	orr	r0, r4, #128	; 0x80
40021278:	ebffedf2 	bl	4001ca48 <CyU3PUsbFlushEp>
4002127c:	e3840080 	orr	r0, r4, #128	; 0x80
40021280:	e3a02001 	mov	r2, #1
40021284:	e3a01000 	mov	r1, #0
40021288:	ebfff2ba 	bl	4001dd78 <CyU3PUsbStall>
4002128c:	e0840084 	add	r0, r4, r4, lsl #1
40021290:	e59f1058 	ldr	r1, [pc, #88]	; 400212f0 <CyU3PUsbSSReset+0x194>
40021294:	e0810100 	add	r0, r1, r0, lsl #2
40021298:	e5900004 	ldr	r0, [r0, #4]
4002129c:	e3500001 	cmp	r0, #1
400212a0:	1a000005 	bne	400212bc <CyU3PUsbSSReset+0x160>
400212a4:	e1a00004 	mov	r0, r4
400212a8:	ebffede6 	bl	4001ca48 <CyU3PUsbFlushEp>
400212ac:	e3a02001 	mov	r2, #1
400212b0:	e3a01000 	mov	r1, #0
400212b4:	e1a00004 	mov	r0, r4
400212b8:	ebfff2ae 	bl	4001dd78 <CyU3PUsbStall>
400212bc:	e2840001 	add	r0, r4, #1
400212c0:	e20040ff 	and	r4, r0, #255	; 0xff
400212c4:	e3540010 	cmp	r4, #16
400212c8:	baffffe3 	blt	4002125c <CyU3PUsbSSReset+0x100>
400212cc:	e3a00005 	mov	r0, #5
400212d0:	e59f1004 	ldr	r1, [pc, #4]	; 400212dc <CyU3PUsbSSReset+0x180>
400212d4:	e5c10008 	strb	r0, [r1, #8]
400212d8:	eaffffa5 	b	40021174 <CyU3PUsbSSReset+0x18>
400212dc:	40031d40 	.word	0x40031d40
400212e0:	40030db8 	.word	0x40030db8
400212e4:	e0031000 	.word	0xe0031000
400212e8:	e0033000 	.word	0xe0033000
400212ec:	40031bb8 	.word	0x40031bb8
400212f0:	40031c78 	.word	0x40031c78

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

400212f4 <CyU3PUsbSendCompliancePatterns>:
400212f4:	e92d4070 	push	{r4, r5, r6, lr}
400212f8:	e3a04001 	mov	r4, #1
400212fc:	e59f01ec 	ldr	r0, [pc, #492]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021300:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021304:	e200503f 	and	r5, r0, #63	; 0x3f
40021308:	e3550017 	cmp	r5, #23
4002130c:	0a000000 	beq	40021314 <CyU3PUsbSendCompliancePatterns+0x20>
40021310:	e8bd8070 	pop	{r4, r5, r6, pc}
40021314:	e3a00003 	mov	r0, #3
40021318:	e59f11d4 	ldr	r1, [pc, #468]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
4002131c:	e5c10009 	strb	r0, [r1, #9]
40021320:	e3a00001 	mov	r0, #1
40021324:	e5810064 	str	r0, [r1, #100]	; 0x64
40021328:	e3a00000 	mov	r0, #0
4002132c:	e5810060 	str	r0, [r1, #96]	; 0x60
40021330:	e3a00d57 	mov	r0, #5568	; 0x15c0
40021334:	e59f11b4 	ldr	r1, [pc, #436]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021338:	e5810054 	str	r0, [r1, #84]	; 0x54
4002133c:	e59f01b4 	ldr	r0, [pc, #436]	; 400214f8 <CyU3PUsbSendCompliancePatterns+0x204>
40021340:	e5900000 	ldr	r0, [r0]
40021344:	e3500000 	cmp	r0, #0
40021348:	0a000004 	beq	40021360 <CyU3PUsbSendCompliancePatterns+0x6c>
4002134c:	e3a01000 	mov	r1, #0
40021350:	e3a00015 	mov	r0, #21
40021354:	e59f219c 	ldr	r2, [pc, #412]	; 400214f8 <CyU3PUsbSendCompliancePatterns+0x204>
40021358:	e5922000 	ldr	r2, [r2]
4002135c:	e12fff32 	blx	r2
40021360:	e1a00000 	nop			; (mov r0, r0)
40021364:	e59f0184 	ldr	r0, [pc, #388]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021368:	e5900064 	ldr	r0, [r0, #100]	; 0x64
4002136c:	e3100002 	tst	r0, #2
40021370:	0a000031 	beq	4002143c <CyU3PUsbSendCompliancePatterns+0x148>
40021374:	e59f0180 	ldr	r0, [pc, #384]	; 400214fc <CyU3PUsbSendCompliancePatterns+0x208>
40021378:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002137c:	e59f116c 	ldr	r1, [pc, #364]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021380:	e5810138 	str	r0, [r1, #312]	; 0x138
40021384:	e3a00001 	mov	r0, #1
40021388:	ebff9dd5 	bl	40008ae4 <_tx_thread_sleep>
4002138c:	e59f015c 	ldr	r0, [pc, #348]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021390:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021394:	e3c00002 	bic	r0, r0, #2
40021398:	e59f1150 	ldr	r1, [pc, #336]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002139c:	e5810064 	str	r0, [r1, #100]	; 0x64
400213a0:	e3540004 	cmp	r4, #4
400213a4:	1a000020 	bne	4002142c <CyU3PUsbSendCompliancePatterns+0x138>
400213a8:	ea00000d 	b	400213e4 <CyU3PUsbSendCompliancePatterns+0xf0>
400213ac:	e59f013c 	ldr	r0, [pc, #316]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400213b0:	e590001c 	ldr	r0, [r0, #28]
400213b4:	e3800008 	orr	r0, r0, #8
400213b8:	e59f1130 	ldr	r1, [pc, #304]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400213bc:	e581001c 	str	r0, [r1, #28]
400213c0:	e3a0000a 	mov	r0, #10
400213c4:	ebffc874 	bl	4001359c <CyU3PBusyWait>
400213c8:	e59f0120 	ldr	r0, [pc, #288]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400213cc:	e590001c 	ldr	r0, [r0, #28]
400213d0:	e3c00008 	bic	r0, r0, #8
400213d4:	e59f1114 	ldr	r1, [pc, #276]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400213d8:	e581001c 	str	r0, [r1, #28]
400213dc:	e3a0001e 	mov	r0, #30
400213e0:	ebffc86d 	bl	4001359c <CyU3PBusyWait>
400213e4:	e59f0104 	ldr	r0, [pc, #260]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400213e8:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400213ec:	e3100006 	tst	r0, #6
400213f0:	1a00000d 	bne	4002142c <CyU3PUsbSendCompliancePatterns+0x138>
400213f4:	e59f00f8 	ldr	r0, [pc, #248]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
400213f8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400213fc:	e3500000 	cmp	r0, #0
40021400:	0a000005 	beq	4002141c <CyU3PUsbSendCompliancePatterns+0x128>
40021404:	e59f00f4 	ldr	r0, [pc, #244]	; 40021500 <CyU3PUsbSendCompliancePatterns+0x20c>
40021408:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002140c:	e59f10e0 	ldr	r1, [pc, #224]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
40021410:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021414:	e1100001 	tst	r0, r1
40021418:	0a000003 	beq	4002142c <CyU3PUsbSendCompliancePatterns+0x138>
4002141c:	e59f00d0 	ldr	r0, [pc, #208]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
40021420:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021424:	e3500000 	cmp	r0, #0
40021428:	0affffdf 	beq	400213ac <CyU3PUsbSendCompliancePatterns+0xb8>
4002142c:	e3a01009 	mov	r1, #9
40021430:	e2840001 	add	r0, r4, #1
40021434:	ebffbde8 	bl	40010bdc <__aeabi_idivmod>
40021438:	e20140ff 	and	r4, r1, #255	; 0xff
4002143c:	e59f00ac 	ldr	r0, [pc, #172]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021440:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021444:	e3100004 	tst	r0, #4
40021448:	1a00000d 	bne	40021484 <CyU3PUsbSendCompliancePatterns+0x190>
4002144c:	e59f00a0 	ldr	r0, [pc, #160]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
40021450:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021454:	e3500000 	cmp	r0, #0
40021458:	0a000005 	beq	40021474 <CyU3PUsbSendCompliancePatterns+0x180>
4002145c:	e59f009c 	ldr	r0, [pc, #156]	; 40021500 <CyU3PUsbSendCompliancePatterns+0x20c>
40021460:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021464:	e59f1088 	ldr	r1, [pc, #136]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
40021468:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002146c:	e1100001 	tst	r0, r1
40021470:	0a000003 	beq	40021484 <CyU3PUsbSendCompliancePatterns+0x190>
40021474:	e59f0078 	ldr	r0, [pc, #120]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
40021478:	e5900060 	ldr	r0, [r0, #96]	; 0x60
4002147c:	e3500001 	cmp	r0, #1
40021480:	1a000009 	bne	400214ac <CyU3PUsbSendCompliancePatterns+0x1b8>
40021484:	e59f0064 	ldr	r0, [pc, #100]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021488:	e5900064 	ldr	r0, [r0, #100]	; 0x64
4002148c:	e3c00004 	bic	r0, r0, #4
40021490:	e59f1058 	ldr	r1, [pc, #88]	; 400214f0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021494:	e5810064 	str	r0, [r1, #100]	; 0x64
40021498:	e3a00c06 	mov	r0, #1536	; 0x600
4002149c:	e5810138 	str	r0, [r1, #312]	; 0x138
400214a0:	e3a00000 	mov	r0, #0
400214a4:	e5810054 	str	r0, [r1, #84]	; 0x54
400214a8:	ea000002 	b	400214b8 <CyU3PUsbSendCompliancePatterns+0x1c4>
400214ac:	e3a00001 	mov	r0, #1
400214b0:	ebff9d8b 	bl	40008ae4 <_tx_thread_sleep>
400214b4:	eaffffaa 	b	40021364 <CyU3PUsbSendCompliancePatterns+0x70>
400214b8:	e1a00000 	nop			; (mov r0, r0)
400214bc:	e59f0034 	ldr	r0, [pc, #52]	; 400214f8 <CyU3PUsbSendCompliancePatterns+0x204>
400214c0:	e5900000 	ldr	r0, [r0]
400214c4:	e3500000 	cmp	r0, #0
400214c8:	0a000004 	beq	400214e0 <CyU3PUsbSendCompliancePatterns+0x1ec>
400214cc:	e3a01000 	mov	r1, #0
400214d0:	e3a00016 	mov	r0, #22
400214d4:	e59f201c 	ldr	r2, [pc, #28]	; 400214f8 <CyU3PUsbSendCompliancePatterns+0x204>
400214d8:	e5922000 	ldr	r2, [r2]
400214dc:	e12fff32 	blx	r2
400214e0:	e3a00000 	mov	r0, #0
400214e4:	e59f1008 	ldr	r1, [pc, #8]	; 400214f4 <CyU3PUsbSendCompliancePatterns+0x200>
400214e8:	e5810064 	str	r0, [r1, #100]	; 0x64
400214ec:	eaffff87 	b	40021310 <CyU3PUsbSendCompliancePatterns+0x1c>
400214f0:	e0033000 	.word	0xe0033000
400214f4:	40031d40 	.word	0x40031d40
400214f8:	40030db8 	.word	0x40030db8
400214fc:	40011f08 	.word	0x40011f08
40021500:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

40021504 <CyU3PUsbSetupCommand>:
40021504:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40021508:	e3a06000 	mov	r6, #0
4002150c:	e3a07000 	mov	r7, #0
40021510:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021514:	e5d00009 	ldrb	r0, [r0, #9]
40021518:	e3500003 	cmp	r0, #3
4002151c:	1a00001a 	bne	4002158c <CyU3PUsbSetupCommand+0x88>
40021520:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021cdc <CyU3PUsbSetupCommand+0x7d8>
40021524:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
40021528:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
4002152c:	e3a00001 	mov	r0, #1
40021530:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021534:	e5810050 	str	r0, [r1, #80]	; 0x50
40021538:	e3a00000 	mov	r0, #0
4002153c:	e59f179c 	ldr	r1, [pc, #1948]	; 40021ce0 <CyU3PUsbSetupCommand+0x7dc>
40021540:	e5810000 	str	r0, [r1]
40021544:	e59f0798 	ldr	r0, [pc, #1944]	; 40021ce4 <CyU3PUsbSetupCommand+0x7e0>
40021548:	ebffa5d7 	bl	4000acac <_txe_timer_deactivate>
4002154c:	e3a00b02 	mov	r0, #2048	; 0x800
40021550:	e59f1784 	ldr	r1, [pc, #1924]	; 40021cdc <CyU3PUsbSetupCommand+0x7d8>
40021554:	e5810404 	str	r0, [r1, #1028]	; 0x404
40021558:	e1c10000 	bic	r0, r1, r0
4002155c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021560:	e200603f 	and	r6, r0, #63	; 0x3f
40021564:	e3560011 	cmp	r6, #17
40021568:	0a000001 	beq	40021574 <CyU3PUsbSetupCommand+0x70>
4002156c:	e3560012 	cmp	r6, #18
40021570:	1a000003 	bne	40021584 <CyU3PUsbSetupCommand+0x80>
40021574:	e3a02000 	mov	r2, #0
40021578:	e3a01401 	mov	r1, #16777216	; 0x1000000
4002157c:	e59f0764 	ldr	r0, [pc, #1892]	; 40021ce8 <CyU3PUsbSetupCommand+0x7e4>
40021580:	ebffa24f 	bl	40009ec4 <_txe_event_flags_set>
40021584:	e3a06000 	mov	r6, #0
40021588:	ea00000d 	b	400215c4 <CyU3PUsbSetupCommand+0xc0>
4002158c:	e59f0744 	ldr	r0, [pc, #1860]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021590:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021594:	e3500000 	cmp	r0, #0
40021598:	0a000006 	beq	400215b8 <CyU3PUsbSetupCommand+0xb4>
4002159c:	e59f0734 	ldr	r0, [pc, #1844]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400215a0:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400215a4:	e3500003 	cmp	r0, #3
400215a8:	2a000002 	bcs	400215b8 <CyU3PUsbSetupCommand+0xb4>
400215ac:	e3a00001 	mov	r0, #1
400215b0:	e59f1720 	ldr	r1, [pc, #1824]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400215b4:	e581004c 	str	r0, [r1, #76]	; 0x4c
400215b8:	e59f072c 	ldr	r0, [pc, #1836]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400215bc:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
400215c0:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
400215c4:	e3a01064 	mov	r1, #100	; 0x64
400215c8:	e59f0720 	ldr	r0, [pc, #1824]	; 40021cf0 <CyU3PUsbSetupCommand+0x7ec>
400215cc:	ebffd5fd 	bl	40016dc8 <CyU3PDmaChannelWaitForCompletion>
400215d0:	e1a06000 	mov	r6, r0
400215d4:	e3560000 	cmp	r6, #0
400215d8:	0a00000b 	beq	4002160c <CyU3PUsbSetupCommand+0x108>
400215dc:	e3560042 	cmp	r6, #66	; 0x42
400215e0:	0a000009 	beq	4002160c <CyU3PUsbSetupCommand+0x108>
400215e4:	e3a01001 	mov	r1, #1
400215e8:	e3a00000 	mov	r0, #0
400215ec:	ebfff11b 	bl	4001da60 <CyU3PUsbSetEpNak>
400215f0:	e3a00064 	mov	r0, #100	; 0x64
400215f4:	ebffc7e8 	bl	4001359c <CyU3PBusyWait>
400215f8:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021cf0 <CyU3PUsbSetupCommand+0x7ec>
400215fc:	ebffd320 	bl	40016284 <CyU3PDmaChannelReset>
40021600:	e3a01000 	mov	r1, #0
40021604:	e1a00001 	mov	r0, r1
40021608:	ebfff114 	bl	4001da60 <CyU3PUsbSetEpNak>
4002160c:	e3a01064 	mov	r1, #100	; 0x64
40021610:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021cf4 <CyU3PUsbSetupCommand+0x7f0>
40021614:	ebffd5eb 	bl	40016dc8 <CyU3PDmaChannelWaitForCompletion>
40021618:	e1a06000 	mov	r6, r0
4002161c:	e3560000 	cmp	r6, #0
40021620:	0a00000d 	beq	4002165c <CyU3PUsbSetupCommand+0x158>
40021624:	e3560042 	cmp	r6, #66	; 0x42
40021628:	0a00000b 	beq	4002165c <CyU3PUsbSetupCommand+0x158>
4002162c:	e3a01001 	mov	r1, #1
40021630:	e3a00080 	mov	r0, #128	; 0x80
40021634:	ebfff109 	bl	4001da60 <CyU3PUsbSetEpNak>
40021638:	e3a00064 	mov	r0, #100	; 0x64
4002163c:	ebffc7d6 	bl	4001359c <CyU3PBusyWait>
40021640:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021cf4 <CyU3PUsbSetupCommand+0x7f0>
40021644:	ebffd30e 	bl	40016284 <CyU3PDmaChannelReset>
40021648:	e3a00080 	mov	r0, #128	; 0x80
4002164c:	ebffecfd 	bl	4001ca48 <CyU3PUsbFlushEp>
40021650:	e3a01000 	mov	r1, #0
40021654:	e3a00080 	mov	r0, #128	; 0x80
40021658:	ebfff100 	bl	4001da60 <CyU3PUsbSetEpNak>
4002165c:	e3a06000 	mov	r6, #0
40021660:	e20490ff 	and	r9, r4, #255	; 0xff
40021664:	e209a060 	and	sl, r9, #96	; 0x60
40021668:	e2090003 	and	r0, r9, #3
4002166c:	e58d0008 	str	r0, [sp, #8]
40021670:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021674:	e1a08420 	lsr	r8, r0, #8
40021678:	e59f0678 	ldr	r0, [pc, #1656]	; 40021cf8 <CyU3PUsbSetupCommand+0x7f4>
4002167c:	e000b824 	and	fp, r0, r4, lsr #16
40021680:	e0050000 	and	r0, r5, r0
40021684:	e58d0004 	str	r0, [sp, #4]
40021688:	e59f0668 	ldr	r0, [pc, #1640]	; 40021cf8 <CyU3PUsbSetupCommand+0x7f4>
4002168c:	e0000825 	and	r0, r0, r5, lsr #16
40021690:	e58d0000 	str	r0, [sp]
40021694:	e3140080 	tst	r4, #128	; 0x80
40021698:	0a000003 	beq	400216ac <CyU3PUsbSetupCommand+0x1a8>
4002169c:	e59d0000 	ldr	r0, [sp]
400216a0:	e59f1644 	ldr	r1, [pc, #1604]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400216a4:	e5810458 	str	r0, [r1, #1112]	; 0x458
400216a8:	ea000002 	b	400216b8 <CyU3PUsbSetupCommand+0x1b4>
400216ac:	e59d0000 	ldr	r0, [sp]
400216b0:	e59f1634 	ldr	r1, [pc, #1588]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400216b4:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
400216b8:	e3a00000 	mov	r0, #0
400216bc:	e59f1614 	ldr	r1, [pc, #1556]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400216c0:	e5810040 	str	r0, [r1, #64]	; 0x40
400216c4:	e59f0620 	ldr	r0, [pc, #1568]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400216c8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400216cc:	e3c00008 	bic	r0, r0, #8
400216d0:	e59f1614 	ldr	r1, [pc, #1556]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400216d4:	e5810518 	str	r0, [r1, #1304]	; 0x518
400216d8:	e3a00000 	mov	r0, #0
400216dc:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400216e0:	e5810018 	str	r0, [r1, #24]
400216e4:	e5810070 	str	r0, [r1, #112]	; 0x70
400216e8:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400216ec:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400216f0:	e3800008 	orr	r0, r0, #8
400216f4:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021cec <CyU3PUsbSetupCommand+0x7e8>
400216f8:	e5810518 	str	r0, [r1, #1304]	; 0x518
400216fc:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021700:	e5d00007 	ldrb	r0, [r0, #7]
40021704:	e3500001 	cmp	r0, #1
40021708:	0a000001 	beq	40021714 <CyU3PUsbSetupCommand+0x210>
4002170c:	e35a0000 	cmp	sl, #0
40021710:	0a000024 	beq	400217a8 <CyU3PUsbSetupCommand+0x2a4>
40021714:	e35a0000 	cmp	sl, #0
40021718:	1a000012 	bne	40021768 <CyU3PUsbSetupCommand+0x264>
4002171c:	e3580009 	cmp	r8, #9
40021720:	1a000010 	bne	40021768 <CyU3PUsbSetupCommand+0x264>
40021724:	e35b0001 	cmp	fp, #1
40021728:	1a00000b 	bne	4002175c <CyU3PUsbSetupCommand+0x258>
4002172c:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021730:	e5d10009 	ldrb	r0, [r1, #9]
40021734:	ebfff993 	bl	4001fd88 <CyU3PUsbEpPrepare>
40021738:	e3a00006 	mov	r0, #6
4002173c:	e59f1594 	ldr	r1, [pc, #1428]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021740:	e5c10008 	strb	r0, [r1, #8]
40021744:	e5c1b00c 	strb	fp, [r1, #12]
40021748:	e2810000 	add	r0, r1, #0
4002174c:	e5d00006 	ldrb	r0, [r0, #6]
40021750:	e2000001 	and	r0, r0, #1
40021754:	e5c10006 	strb	r0, [r1, #6]
40021758:	ea000002 	b	40021768 <CyU3PUsbSetupCommand+0x264>
4002175c:	e3a00005 	mov	r0, #5
40021760:	e59f1570 	ldr	r1, [pc, #1392]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021764:	e5c10008 	strb	r0, [r1, #8]
40021768:	e59f058c 	ldr	r0, [pc, #1420]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
4002176c:	e5900000 	ldr	r0, [r0]
40021770:	e3500000 	cmp	r0, #0
40021774:	0a000005 	beq	40021790 <CyU3PUsbSetupCommand+0x28c>
40021778:	e1a01005 	mov	r1, r5
4002177c:	e1a00004 	mov	r0, r4
40021780:	e59f2574 	ldr	r2, [pc, #1396]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021784:	e5922000 	ldr	r2, [r2]
40021788:	e12fff32 	blx	r2
4002178c:	e1a07000 	mov	r7, r0
40021790:	e3570001 	cmp	r7, #1
40021794:	1a000003 	bne	400217a8 <CyU3PUsbSetupCommand+0x2a4>
40021798:	e3a00001 	mov	r0, #1
4002179c:	e59f1534 	ldr	r1, [pc, #1332]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400217a0:	e5810040 	str	r0, [r1, #64]	; 0x40
400217a4:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400217a8:	e35a0000 	cmp	sl, #0
400217ac:	1a000140 	bne	40021cb4 <CyU3PUsbSetupCommand+0x7b0>
400217b0:	e3580009 	cmp	r8, #9
400217b4:	0a0000b1 	beq	40021a80 <CyU3PUsbSetupCommand+0x57c>
400217b8:	ca00000b 	bgt	400217ec <CyU3PUsbSetupCommand+0x2e8>
400217bc:	e3580009 	cmp	r8, #9
400217c0:	308ff108 	addcc	pc, pc, r8, lsl #2
400217c4:	ea000137 	b	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
400217c8:	ea000014 	b	40021820 <CyU3PUsbSetupCommand+0x31c>
400217cc:	ea000029 	b	40021878 <CyU3PUsbSetupCommand+0x374>
400217d0:	ea000134 	b	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
400217d4:	ea000057 	b	40021938 <CyU3PUsbSetupCommand+0x434>
400217d8:	ea000132 	b	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
400217dc:	ea000131 	b	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
400217e0:	ea000099 	b	40021a4c <CyU3PUsbSetupCommand+0x548>
400217e4:	ea00012f 	b	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
400217e8:	ea00009d 	b	40021a64 <CyU3PUsbSetupCommand+0x560>
400217ec:	e358000c 	cmp	r8, #12
400217f0:	0a0000fb 	beq	40021be4 <CyU3PUsbSetupCommand+0x6e0>
400217f4:	ca000004 	bgt	4002180c <CyU3PUsbSetupCommand+0x308>
400217f8:	e358000a 	cmp	r8, #10
400217fc:	0a0000c5 	beq	40021b18 <CyU3PUsbSetupCommand+0x614>
40021800:	e358000b 	cmp	r8, #11
40021804:	1a000127 	bne	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
40021808:	ea0000d6 	b	40021b68 <CyU3PUsbSetupCommand+0x664>
4002180c:	e3580030 	cmp	r8, #48	; 0x30
40021810:	0a0000f7 	beq	40021bf4 <CyU3PUsbSetupCommand+0x6f0>
40021814:	e3580031 	cmp	r8, #49	; 0x31
40021818:	1a000122 	bne	40021ca8 <CyU3PUsbSetupCommand+0x7a4>
4002181c:	ea000114 	b	40021c74 <CyU3PUsbSetupCommand+0x770>
40021820:	e1a00000 	nop			; (mov r0, r0)
40021824:	e59d0008 	ldr	r0, [sp, #8]
40021828:	e3500001 	cmp	r0, #1
4002182c:	1a00000c 	bne	40021864 <CyU3PUsbSetupCommand+0x360>
40021830:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021834:	e5900000 	ldr	r0, [r0]
40021838:	e3500000 	cmp	r0, #0
4002183c:	0a000008 	beq	40021864 <CyU3PUsbSetupCommand+0x360>
40021840:	e1a01005 	mov	r1, r5
40021844:	e1a00004 	mov	r0, r4
40021848:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
4002184c:	e5922000 	ldr	r2, [r2]
40021850:	e12fff32 	blx	r2
40021854:	e1a07000 	mov	r7, r0
40021858:	e3570000 	cmp	r7, #0
4002185c:	0a000000 	beq	40021864 <CyU3PUsbSetupCommand+0x360>
40021860:	ea000112 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021864:	e59d0008 	ldr	r0, [sp, #8]
40021868:	e59d1004 	ldr	r1, [sp, #4]
4002186c:	ebfffbd3 	bl	400207c0 <CyU3PUsbHandleGetStatus>
40021870:	e1a07000 	mov	r7, r0
40021874:	ea00010d 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021878:	e1a00000 	nop			; (mov r0, r0)
4002187c:	e59d0008 	ldr	r0, [sp, #8]
40021880:	e3500000 	cmp	r0, #0
40021884:	1a000002 	bne	40021894 <CyU3PUsbSetupCommand+0x390>
40021888:	e20b00ff 	and	r0, fp, #255	; 0xff
4002188c:	ebfffa86 	bl	400202ac <CyU3PUsbHandleClearFeature>
40021890:	eaffffc3 	b	400217a4 <CyU3PUsbSetupCommand+0x2a0>
40021894:	e3a07000 	mov	r7, #0
40021898:	e59f0438 	ldr	r0, [pc, #1080]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
4002189c:	e5d00007 	ldrb	r0, [r0, #7]
400218a0:	e3500000 	cmp	r0, #0
400218a4:	1a00000e 	bne	400218e4 <CyU3PUsbSetupCommand+0x3e0>
400218a8:	e59f044c 	ldr	r0, [pc, #1100]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
400218ac:	e5900000 	ldr	r0, [r0]
400218b0:	e3500000 	cmp	r0, #0
400218b4:	0a00000a 	beq	400218e4 <CyU3PUsbSetupCommand+0x3e0>
400218b8:	e1a01005 	mov	r1, r5
400218bc:	e1a00004 	mov	r0, r4
400218c0:	e59f2434 	ldr	r2, [pc, #1076]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
400218c4:	e5922000 	ldr	r2, [r2]
400218c8:	e12fff32 	blx	r2
400218cc:	e1a07000 	mov	r7, r0
400218d0:	e3570000 	cmp	r7, #0
400218d4:	0a000002 	beq	400218e4 <CyU3PUsbSetupCommand+0x3e0>
400218d8:	e3a00001 	mov	r0, #1
400218dc:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400218e0:	e5810040 	str	r0, [r1, #64]	; 0x40
400218e4:	e3570000 	cmp	r7, #0
400218e8:	1a000011 	bne	40021934 <CyU3PUsbSetupCommand+0x430>
400218ec:	e59d0008 	ldr	r0, [sp, #8]
400218f0:	e3500002 	cmp	r0, #2
400218f4:	1a00000e 	bne	40021934 <CyU3PUsbSetupCommand+0x430>
400218f8:	e35b0000 	cmp	fp, #0
400218fc:	1a00000c 	bne	40021934 <CyU3PUsbSetupCommand+0x430>
40021900:	e59d1004 	ldr	r1, [sp, #4]
40021904:	e20100ff 	and	r0, r1, #255	; 0xff
40021908:	e3a02001 	mov	r2, #1
4002190c:	e3a01000 	mov	r1, #0
40021910:	ebfff118 	bl	4001dd78 <CyU3PUsbStall>
40021914:	e3500000 	cmp	r0, #0
40021918:	1a000005 	bne	40021934 <CyU3PUsbSetupCommand+0x430>
4002191c:	e59d1004 	ldr	r1, [sp, #4]
40021920:	e20100ff 	and	r0, r1, #255	; 0xff
40021924:	ebffeeaf 	bl	4001d3e8 <CyU3PUsbResetEp>
40021928:	ebffeb4e 	bl	4001c668 <CyU3PUsbAckSetup>
4002192c:	e3a07001 	mov	r7, #1
40021930:	ea0000de 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021934:	ea0000dd 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021938:	e1a00000 	nop			; (mov r0, r0)
4002193c:	e59d0008 	ldr	r0, [sp, #8]
40021940:	e3500000 	cmp	r0, #0
40021944:	1a00001b 	bne	400219b8 <CyU3PUsbSetupCommand+0x4b4>
40021948:	e35b0003 	cmp	fp, #3
4002194c:	0a000004 	beq	40021964 <CyU3PUsbSetupCommand+0x460>
40021950:	e35b0004 	cmp	fp, #4
40021954:	0a000002 	beq	40021964 <CyU3PUsbSetupCommand+0x460>
40021958:	e20b00ff 	and	r0, fp, #255	; 0xff
4002195c:	ebfffbd5 	bl	400208b8 <CyU3PUsbHandleSetFeature>
40021960:	eaffff8f 	b	400217a4 <CyU3PUsbSetupCommand+0x2a0>
40021964:	e59f036c 	ldr	r0, [pc, #876]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021968:	e5d00007 	ldrb	r0, [r0, #7]
4002196c:	e3500000 	cmp	r0, #0
40021970:	1a00000f 	bne	400219b4 <CyU3PUsbSetupCommand+0x4b0>
40021974:	e59f0380 	ldr	r0, [pc, #896]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021978:	e5900000 	ldr	r0, [r0]
4002197c:	e3500000 	cmp	r0, #0
40021980:	0a00000b 	beq	400219b4 <CyU3PUsbSetupCommand+0x4b0>
40021984:	e1a01005 	mov	r1, r5
40021988:	e1a00004 	mov	r0, r4
4002198c:	e59f2368 	ldr	r2, [pc, #872]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021990:	e5922000 	ldr	r2, [r2]
40021994:	e12fff32 	blx	r2
40021998:	e1a07000 	mov	r7, r0
4002199c:	e3570000 	cmp	r7, #0
400219a0:	0a000003 	beq	400219b4 <CyU3PUsbSetupCommand+0x4b0>
400219a4:	e3a00001 	mov	r0, #1
400219a8:	e59f1328 	ldr	r1, [pc, #808]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400219ac:	e5810040 	str	r0, [r1, #64]	; 0x40
400219b0:	eaffff7b 	b	400217a4 <CyU3PUsbSetupCommand+0x2a0>
400219b4:	ea0000bd 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
400219b8:	e3a07000 	mov	r7, #0
400219bc:	e59f0314 	ldr	r0, [pc, #788]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
400219c0:	e5d00007 	ldrb	r0, [r0, #7]
400219c4:	e3500000 	cmp	r0, #0
400219c8:	1a00000e 	bne	40021a08 <CyU3PUsbSetupCommand+0x504>
400219cc:	e59f0328 	ldr	r0, [pc, #808]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
400219d0:	e5900000 	ldr	r0, [r0]
400219d4:	e3500000 	cmp	r0, #0
400219d8:	0a00000a 	beq	40021a08 <CyU3PUsbSetupCommand+0x504>
400219dc:	e1a01005 	mov	r1, r5
400219e0:	e1a00004 	mov	r0, r4
400219e4:	e59f2310 	ldr	r2, [pc, #784]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
400219e8:	e5922000 	ldr	r2, [r2]
400219ec:	e12fff32 	blx	r2
400219f0:	e1a07000 	mov	r7, r0
400219f4:	e3570000 	cmp	r7, #0
400219f8:	0a000002 	beq	40021a08 <CyU3PUsbSetupCommand+0x504>
400219fc:	e3a00001 	mov	r0, #1
40021a00:	e59f12d0 	ldr	r1, [pc, #720]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021a04:	e5810040 	str	r0, [r1, #64]	; 0x40
40021a08:	e3570000 	cmp	r7, #0
40021a0c:	1a00000d 	bne	40021a48 <CyU3PUsbSetupCommand+0x544>
40021a10:	e59d0008 	ldr	r0, [sp, #8]
40021a14:	e3500002 	cmp	r0, #2
40021a18:	1a00000a 	bne	40021a48 <CyU3PUsbSetupCommand+0x544>
40021a1c:	e35b0000 	cmp	fp, #0
40021a20:	1a000008 	bne	40021a48 <CyU3PUsbSetupCommand+0x544>
40021a24:	e59d1004 	ldr	r1, [sp, #4]
40021a28:	e20100ff 	and	r0, r1, #255	; 0xff
40021a2c:	e3a02000 	mov	r2, #0
40021a30:	e3a01001 	mov	r1, #1
40021a34:	ebfff0cf 	bl	4001dd78 <CyU3PUsbStall>
40021a38:	e3500000 	cmp	r0, #0
40021a3c:	1a000001 	bne	40021a48 <CyU3PUsbSetupCommand+0x544>
40021a40:	ebffeb08 	bl	4001c668 <CyU3PUsbAckSetup>
40021a44:	e3a07001 	mov	r7, #1
40021a48:	ea000098 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021a4c:	e1a00000 	nop			; (mov r0, r0)
40021a50:	e1a01005 	mov	r1, r5
40021a54:	e1a00004 	mov	r0, r4
40021a58:	ebfff5d5 	bl	4001f1b4 <CyU3PUibSendDescr>
40021a5c:	e1a07000 	mov	r7, r0
40021a60:	ea000092 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021a64:	e1a00000 	nop			; (mov r0, r0)
40021a68:	e3a07001 	mov	r7, #1
40021a6c:	e59f128c 	ldr	r1, [pc, #652]	; 40021d00 <CyU3PUsbSetupCommand+0x7fc>
40021a70:	e3a00001 	mov	r0, #1
40021a74:	ebffee94 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40021a78:	e1a06000 	mov	r6, r0
40021a7c:	ea00008b 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021a80:	e1a00000 	nop			; (mov r0, r0)
40021a84:	e3a07001 	mov	r7, #1
40021a88:	e35b0000 	cmp	fp, #0
40021a8c:	0a000005 	beq	40021aa8 <CyU3PUsbSetupCommand+0x5a4>
40021a90:	e35b0001 	cmp	fp, #1
40021a94:	1a00001a 	bne	40021b04 <CyU3PUsbSetupCommand+0x600>
40021a98:	e59f1238 	ldr	r1, [pc, #568]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021a9c:	e5d10009 	ldrb	r0, [r1, #9]
40021aa0:	ebfff8b8 	bl	4001fd88 <CyU3PUsbEpPrepare>
40021aa4:	e1a00000 	nop			; (mov r0, r0)
40021aa8:	e35b0000 	cmp	fp, #0
40021aac:	1a000001 	bne	40021ab8 <CyU3PUsbSetupCommand+0x5b4>
40021ab0:	e3a00005 	mov	r0, #5
40021ab4:	ea000000 	b	40021abc <CyU3PUsbSetupCommand+0x5b8>
40021ab8:	e3a00006 	mov	r0, #6
40021abc:	e59f1214 	ldr	r1, [pc, #532]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021ac0:	e5c10008 	strb	r0, [r1, #8]
40021ac4:	e5c1b00c 	strb	fp, [r1, #12]
40021ac8:	e2810000 	add	r0, r1, #0
40021acc:	e5d00006 	ldrb	r0, [r0, #6]
40021ad0:	e2000001 	and	r0, r0, #1
40021ad4:	e5c10006 	strb	r0, [r1, #6]
40021ad8:	e59f0224 	ldr	r0, [pc, #548]	; 40021d04 <CyU3PUsbSetupCommand+0x800>
40021adc:	e5900000 	ldr	r0, [r0]
40021ae0:	e3500000 	cmp	r0, #0
40021ae4:	0a000004 	beq	40021afc <CyU3PUsbSetupCommand+0x5f8>
40021ae8:	e1a0100b 	mov	r1, fp
40021aec:	e3a00005 	mov	r0, #5
40021af0:	e59f220c 	ldr	r2, [pc, #524]	; 40021d04 <CyU3PUsbSetupCommand+0x800>
40021af4:	e5922000 	ldr	r2, [r2]
40021af8:	e12fff32 	blx	r2
40021afc:	ebffead9 	bl	4001c668 <CyU3PUsbAckSetup>
40021b00:	ea000002 	b	40021b10 <CyU3PUsbSetupCommand+0x60c>
40021b04:	e1a00000 	nop			; (mov r0, r0)
40021b08:	e3a06040 	mov	r6, #64	; 0x40
40021b0c:	e1a00000 	nop			; (mov r0, r0)
40021b10:	e1a00000 	nop			; (mov r0, r0)
40021b14:	ea000065 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021b18:	e1a00000 	nop			; (mov r0, r0)
40021b1c:	e59f01d8 	ldr	r0, [pc, #472]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021b20:	e5900000 	ldr	r0, [r0]
40021b24:	e3500000 	cmp	r0, #0
40021b28:	0a000008 	beq	40021b50 <CyU3PUsbSetupCommand+0x64c>
40021b2c:	e1a01005 	mov	r1, r5
40021b30:	e1a00004 	mov	r0, r4
40021b34:	e59f21c0 	ldr	r2, [pc, #448]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021b38:	e5922000 	ldr	r2, [r2]
40021b3c:	e12fff32 	blx	r2
40021b40:	e1a07000 	mov	r7, r0
40021b44:	e3570000 	cmp	r7, #0
40021b48:	0a000000 	beq	40021b50 <CyU3PUsbSetupCommand+0x64c>
40021b4c:	ea000057 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021b50:	e3a07001 	mov	r7, #1
40021b54:	e59f11ac 	ldr	r1, [pc, #428]	; 40021d08 <CyU3PUsbSetupCommand+0x804>
40021b58:	e3a00001 	mov	r0, #1
40021b5c:	ebffee5a 	bl	4001d4cc <CyU3PUsbSendEP0Data>
40021b60:	e1a06000 	mov	r6, r0
40021b64:	ea000051 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021b68:	e1a00000 	nop			; (mov r0, r0)
40021b6c:	e59f0188 	ldr	r0, [pc, #392]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021b70:	e5900000 	ldr	r0, [r0]
40021b74:	e3500000 	cmp	r0, #0
40021b78:	0a000008 	beq	40021ba0 <CyU3PUsbSetupCommand+0x69c>
40021b7c:	e1a01005 	mov	r1, r5
40021b80:	e1a00004 	mov	r0, r4
40021b84:	e59f2170 	ldr	r2, [pc, #368]	; 40021cfc <CyU3PUsbSetupCommand+0x7f8>
40021b88:	e5922000 	ldr	r2, [r2]
40021b8c:	e12fff32 	blx	r2
40021b90:	e1a07000 	mov	r7, r0
40021b94:	e3570000 	cmp	r7, #0
40021b98:	0a000000 	beq	40021ba0 <CyU3PUsbSetupCommand+0x69c>
40021b9c:	ea000043 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021ba0:	e59f1130 	ldr	r1, [pc, #304]	; 40021cd8 <CyU3PUsbSetupCommand+0x7d4>
40021ba4:	e5c1b00d 	strb	fp, [r1, #13]
40021ba8:	e59f0154 	ldr	r0, [pc, #340]	; 40021d04 <CyU3PUsbSetupCommand+0x800>
40021bac:	e5900000 	ldr	r0, [r0]
40021bb0:	e3500000 	cmp	r0, #0
40021bb4:	0a000007 	beq	40021bd8 <CyU3PUsbSetupCommand+0x6d4>
40021bb8:	e20b00ff 	and	r0, fp, #255	; 0xff
40021bbc:	e59d2004 	ldr	r2, [sp, #4]
40021bc0:	e1800402 	orr	r0, r0, r2, lsl #8
40021bc4:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021bc8:	e3a00007 	mov	r0, #7
40021bcc:	e59f2130 	ldr	r2, [pc, #304]	; 40021d04 <CyU3PUsbSetupCommand+0x800>
40021bd0:	e5922000 	ldr	r2, [r2]
40021bd4:	e12fff32 	blx	r2
40021bd8:	e3a07001 	mov	r7, #1
40021bdc:	ebffeaa1 	bl	4001c668 <CyU3PUsbAckSetup>
40021be0:	ea000032 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021be4:	e1a00000 	nop			; (mov r0, r0)
40021be8:	e3a07001 	mov	r7, #1
40021bec:	ebffea9d 	bl	4001c668 <CyU3PUsbAckSetup>
40021bf0:	ea00002e 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021bf4:	e1a00000 	nop			; (mov r0, r0)
40021bf8:	ebffec37 	bl	4001ccdc <CyU3PUsbGetSpeed>
40021bfc:	e3500003 	cmp	r0, #3
40021c00:	1a000019 	bne	40021c6c <CyU3PUsbSetupCommand+0x768>
40021c04:	e35b0000 	cmp	fp, #0
40021c08:	1a000017 	bne	40021c6c <CyU3PUsbSetupCommand+0x768>
40021c0c:	e59d0004 	ldr	r0, [sp, #4]
40021c10:	e3500000 	cmp	r0, #0
40021c14:	1a000014 	bne	40021c6c <CyU3PUsbSetupCommand+0x768>
40021c18:	e59d0000 	ldr	r0, [sp]
40021c1c:	e3500006 	cmp	r0, #6
40021c20:	1a000011 	bne	40021c6c <CyU3PUsbSetupCommand+0x768>
40021c24:	e3a07001 	mov	r7, #1
40021c28:	e3a02000 	mov	r2, #0
40021c2c:	e59f10d8 	ldr	r1, [pc, #216]	; 40021d0c <CyU3PUsbSetupCommand+0x808>
40021c30:	e3a00020 	mov	r0, #32
40021c34:	ebffebb6 	bl	4001cb14 <CyU3PUsbGetEP0Data>
40021c38:	e1a06000 	mov	r6, r0
40021c3c:	e59f00c0 	ldr	r0, [pc, #192]	; 40021d04 <CyU3PUsbSetupCommand+0x800>
40021c40:	e5900000 	ldr	r0, [r0]
40021c44:	e3500000 	cmp	r0, #0
40021c48:	0a000008 	beq	40021c70 <CyU3PUsbSetupCommand+0x76c>
40021c4c:	e3560000 	cmp	r6, #0
40021c50:	1a000006 	bne	40021c70 <CyU3PUsbSetupCommand+0x76c>
40021c54:	e3a01000 	mov	r1, #0
40021c58:	e3a00008 	mov	r0, #8
40021c5c:	e59f20a0 	ldr	r2, [pc, #160]	; 40021d04 <CyU3PUsbSetupCommand+0x800>
40021c60:	e5922000 	ldr	r2, [r2]
40021c64:	e12fff32 	blx	r2
40021c68:	ea000000 	b	40021c70 <CyU3PUsbSetupCommand+0x76c>
40021c6c:	e3a07000 	mov	r7, #0
40021c70:	ea00000e 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021c74:	e1a00000 	nop			; (mov r0, r0)
40021c78:	ebffec17 	bl	4001ccdc <CyU3PUsbGetSpeed>
40021c7c:	e3500003 	cmp	r0, #3
40021c80:	1a000007 	bne	40021ca4 <CyU3PUsbSetupCommand+0x7a0>
40021c84:	e59d0004 	ldr	r0, [sp, #4]
40021c88:	e3500000 	cmp	r0, #0
40021c8c:	1a000004 	bne	40021ca4 <CyU3PUsbSetupCommand+0x7a0>
40021c90:	e59d0000 	ldr	r0, [sp]
40021c94:	e3500000 	cmp	r0, #0
40021c98:	1a000001 	bne	40021ca4 <CyU3PUsbSetupCommand+0x7a0>
40021c9c:	e3a07001 	mov	r7, #1
40021ca0:	ebffea70 	bl	4001c668 <CyU3PUsbAckSetup>
40021ca4:	ea000001 	b	40021cb0 <CyU3PUsbSetupCommand+0x7ac>
40021ca8:	e1a00000 	nop			; (mov r0, r0)
40021cac:	e1a00000 	nop			; (mov r0, r0)
40021cb0:	e1a00000 	nop			; (mov r0, r0)
40021cb4:	e3570001 	cmp	r7, #1
40021cb8:	1a000001 	bne	40021cc4 <CyU3PUsbSetupCommand+0x7c0>
40021cbc:	e3560000 	cmp	r6, #0
40021cc0:	0a000003 	beq	40021cd4 <CyU3PUsbSetupCommand+0x7d0>
40021cc4:	e3a02000 	mov	r2, #0
40021cc8:	e3a01001 	mov	r1, #1
40021ccc:	e1a00002 	mov	r0, r2
40021cd0:	ebfff028 	bl	4001dd78 <CyU3PUsbStall>
40021cd4:	eafffeb2 	b	400217a4 <CyU3PUsbSetupCommand+0x2a0>
40021cd8:	40031d40 	.word	0x40031d40
40021cdc:	e0033000 	.word	0xe0033000
40021ce0:	40030dcc 	.word	0x40030dcc
40021ce4:	400326a0 	.word	0x400326a0
40021ce8:	40031eb8 	.word	0x40031eb8
40021cec:	e0031000 	.word	0xe0031000
40021cf0:	40031b18 	.word	0x40031b18
40021cf4:	40031a78 	.word	0x40031a78
40021cf8:	0000ffff 	.word	0x0000ffff
40021cfc:	40030dbc 	.word	0x40030dbc
40021d00:	40031d4c 	.word	0x40031d4c
40021d04:	40030db8 	.word	0x40030db8
40021d08:	40031d4d 	.word	0x40031d4d
40021d0c:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40021d10 <CyU3PUsbSuspendHandler>:
40021d10:	e92d4010 	push	{r4, lr}
40021d14:	e59f003c 	ldr	r0, [pc, #60]	; 40021d58 <CyU3PUsbSuspendHandler+0x48>
40021d18:	e5d00008 	ldrb	r0, [r0, #8]
40021d1c:	e3500005 	cmp	r0, #5
40021d20:	ba00000b 	blt	40021d54 <CyU3PUsbSuspendHandler+0x44>
40021d24:	e59f0030 	ldr	r0, [pc, #48]	; 40021d5c <CyU3PUsbSuspendHandler+0x4c>
40021d28:	e5900000 	ldr	r0, [r0]
40021d2c:	e3500000 	cmp	r0, #0
40021d30:	0a000004 	beq	40021d48 <CyU3PUsbSuspendHandler+0x38>
40021d34:	e3a01000 	mov	r1, #0
40021d38:	e3a00002 	mov	r0, #2
40021d3c:	e59f2018 	ldr	r2, [pc, #24]	; 40021d5c <CyU3PUsbSuspendHandler+0x4c>
40021d40:	e5922000 	ldr	r2, [r2]
40021d44:	e12fff32 	blx	r2
40021d48:	e3a00005 	mov	r0, #5
40021d4c:	e59f1004 	ldr	r1, [pc, #4]	; 40021d58 <CyU3PUsbSuspendHandler+0x48>
40021d50:	e5c10008 	strb	r0, [r1, #8]
40021d54:	e8bd8010 	pop	{r4, pc}
40021d58:	40031d40 	.word	0x40031d40
40021d5c:	40030db8 	.word	0x40030db8

Disassembly of section i.HandleVbusOffEvent:

40021d60 <HandleVbusOffEvent>:
40021d60:	e92d4010 	push	{r4, lr}
40021d64:	e59f00e0 	ldr	r0, [pc, #224]	; 40021e4c <HandleVbusOffEvent+0xec>
40021d68:	e5d00009 	ldrb	r0, [r0, #9]
40021d6c:	e3500003 	cmp	r0, #3
40021d70:	1a000002 	bne	40021d80 <HandleVbusOffEvent+0x20>
40021d74:	e3a00001 	mov	r0, #1
40021d78:	ebffec59 	bl	4001cee4 <CyU3PUsbPhyDisable>
40021d7c:	ea000022 	b	40021e0c <HandleVbusOffEvent+0xac>
40021d80:	e59f00c8 	ldr	r0, [pc, #200]	; 40021e50 <HandleVbusOffEvent+0xf0>
40021d84:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021d88:	e3100901 	tst	r0, #16384	; 0x4000
40021d8c:	0a00001c 	beq	40021e04 <HandleVbusOffEvent+0xa4>
40021d90:	e59f00b8 	ldr	r0, [pc, #184]	; 40021e50 <HandleVbusOffEvent+0xf0>
40021d94:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021d98:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021d9c:	e59f10ac 	ldr	r1, [pc, #172]	; 40021e50 <HandleVbusOffEvent+0xf0>
40021da0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021da4:	e3a00002 	mov	r0, #2
40021da8:	ebffc5fb 	bl	4001359c <CyU3PBusyWait>
40021dac:	e59f00a0 	ldr	r0, [pc, #160]	; 40021e54 <HandleVbusOffEvent+0xf4>
40021db0:	e5900004 	ldr	r0, [r0, #4]
40021db4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021db8:	e59f1094 	ldr	r1, [pc, #148]	; 40021e54 <HandleVbusOffEvent+0xf4>
40021dbc:	e5810004 	str	r0, [r1, #4]
40021dc0:	e3a00001 	mov	r0, #1
40021dc4:	ebffc5f4 	bl	4001359c <CyU3PBusyWait>
40021dc8:	e59f0088 	ldr	r0, [pc, #136]	; 40021e58 <HandleVbusOffEvent+0xf8>
40021dcc:	e590001c 	ldr	r0, [r0, #28]
40021dd0:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021dd4:	e59f107c 	ldr	r1, [pc, #124]	; 40021e58 <HandleVbusOffEvent+0xf8>
40021dd8:	e581001c 	str	r0, [r1, #28]
40021ddc:	e59f0078 	ldr	r0, [pc, #120]	; 40021e5c <HandleVbusOffEvent+0xfc>
40021de0:	e5900000 	ldr	r0, [r0]
40021de4:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021de8:	e3a00001 	mov	r0, #1
40021dec:	ebffc5ea 	bl	4001359c <CyU3PBusyWait>
40021df0:	e59f005c 	ldr	r0, [pc, #92]	; 40021e54 <HandleVbusOffEvent+0xf4>
40021df4:	e5900004 	ldr	r0, [r0, #4]
40021df8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021dfc:	e59f1050 	ldr	r1, [pc, #80]	; 40021e54 <HandleVbusOffEvent+0xf4>
40021e00:	e5810004 	str	r0, [r1, #4]
40021e04:	e3a00000 	mov	r0, #0
40021e08:	ebffec35 	bl	4001cee4 <CyU3PUsbPhyDisable>
40021e0c:	e3a01000 	mov	r1, #0
40021e10:	e3a00001 	mov	r0, #1
40021e14:	e59f2044 	ldr	r2, [pc, #68]	; 40021e60 <HandleVbusOffEvent+0x100>
40021e18:	e5922000 	ldr	r2, [r2]
40021e1c:	e12fff32 	blx	r2
40021e20:	e3a00000 	mov	r0, #0
40021e24:	e59f1020 	ldr	r1, [pc, #32]	; 40021e4c <HandleVbusOffEvent+0xec>
40021e28:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021e2c:	e3a00004 	mov	r0, #4
40021e30:	e5c10008 	strb	r0, [r1, #8]
40021e34:	e3a00000 	mov	r0, #0
40021e38:	e5c10009 	strb	r0, [r1, #9]
40021e3c:	e5810054 	str	r0, [r1, #84]	; 0x54
40021e40:	e5810058 	str	r0, [r1, #88]	; 0x58
40021e44:	e5810048 	str	r0, [r1, #72]	; 0x48
40021e48:	e8bd8010 	pop	{r4, pc}
40021e4c:	40031d40 	.word	0x40031d40
40021e50:	e0031000 	.word	0xe0031000
40021e54:	e0030000 	.word	0xe0030000
40021e58:	e0033000 	.word	0xe0033000
40021e5c:	40030c74 	.word	0x40030c74
40021e60:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3POsTimerInit:

40021e64 <CyU3POsTimerInit>:
40021e64:	e92d4070 	push	{r4, r5, r6, lr}
40021e68:	e1a04000 	mov	r4, r0
40021e6c:	e3a00004 	mov	r0, #4
40021e70:	eb000047 	bl	40021f94 <CyU3PVicDisableInt>
40021e74:	e59f00f0 	ldr	r0, [pc, #240]	; 40021f6c <CyU3POsTimerInit+0x108>
40021e78:	e5905014 	ldr	r5, [r0, #20]
40021e7c:	e3a00064 	mov	r0, #100	; 0x64
40021e80:	ebffc5c5 	bl	4001359c <CyU3PBusyWait>
40021e84:	e3850c03 	orr	r0, r5, #768	; 0x300
40021e88:	e59f10dc 	ldr	r1, [pc, #220]	; 40021f6c <CyU3POsTimerInit+0x108>
40021e8c:	e5810014 	str	r0, [r1, #20]
40021e90:	e3a00064 	mov	r0, #100	; 0x64
40021e94:	ebffc5c0 	bl	4001359c <CyU3PBusyWait>
40021e98:	e59f00cc 	ldr	r0, [pc, #204]	; 40021f6c <CyU3POsTimerInit+0x108>
40021e9c:	e5905014 	ldr	r5, [r0, #20]
40021ea0:	e3540000 	cmp	r4, #0
40021ea4:	0a000001 	beq	40021eb0 <CyU3POsTimerInit+0x4c>
40021ea8:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40021eac:	da000006 	ble	40021ecc <CyU3POsTimerInit+0x68>
40021eb0:	e3a00001 	mov	r0, #1
40021eb4:	e59f10b4 	ldr	r1, [pc, #180]	; 40021f70 <CyU3POsTimerInit+0x10c>
40021eb8:	e1c100b0 	strh	r0, [r1]
40021ebc:	e3a00020 	mov	r0, #32
40021ec0:	e59f10ac 	ldr	r1, [pc, #172]	; 40021f74 <CyU3POsTimerInit+0x110>
40021ec4:	e5810000 	str	r0, [r1]
40021ec8:	ea000004 	b	40021ee0 <CyU3POsTimerInit+0x7c>
40021ecc:	e59f009c 	ldr	r0, [pc, #156]	; 40021f70 <CyU3POsTimerInit+0x10c>
40021ed0:	e1c040b0 	strh	r4, [r0]
40021ed4:	e1a00284 	lsl	r0, r4, #5
40021ed8:	e59f1094 	ldr	r1, [pc, #148]	; 40021f74 <CyU3POsTimerInit+0x110>
40021edc:	e5810000 	str	r0, [r1]
40021ee0:	e59f008c 	ldr	r0, [pc, #140]	; 40021f74 <CyU3POsTimerInit+0x110>
40021ee4:	e5900000 	ldr	r0, [r0]
40021ee8:	e2400007 	sub	r0, r0, #7
40021eec:	e59f1080 	ldr	r1, [pc, #128]	; 40021f74 <CyU3POsTimerInit+0x110>
40021ef0:	e5810000 	str	r0, [r1]
40021ef4:	e3a06000 	mov	r6, #0
40021ef8:	ea000001 	b	40021f04 <CyU3POsTimerInit+0xa0>
40021efc:	e2860001 	add	r0, r6, #1
40021f00:	e20060ff 	and	r6, r0, #255	; 0xff
40021f04:	e3a00001 	mov	r0, #1
40021f08:	e1a00610 	lsl	r0, r0, r6
40021f0c:	e59f1060 	ldr	r1, [pc, #96]	; 40021f74 <CyU3POsTimerInit+0x110>
40021f10:	e5911000 	ldr	r1, [r1]
40021f14:	e1500001 	cmp	r0, r1
40021f18:	9afffff7 	bls	40021efc <CyU3POsTimerInit+0x98>
40021f1c:	e59f0050 	ldr	r0, [pc, #80]	; 40021f74 <CyU3POsTimerInit+0x110>
40021f20:	e5900000 	ldr	r0, [r0]
40021f24:	e59f1040 	ldr	r1, [pc, #64]	; 40021f6c <CyU3POsTimerInit+0x108>
40021f28:	e581001c 	str	r0, [r1, #28]
40021f2c:	e3a00064 	mov	r0, #100	; 0x64
40021f30:	ebffc599 	bl	4001359c <CyU3PBusyWait>
40021f34:	e3a00004 	mov	r0, #4
40021f38:	eb00001a 	bl	40021fa8 <CyU3PVicEnableInt>
40021f3c:	e59f0028 	ldr	r0, [pc, #40]	; 40021f6c <CyU3POsTimerInit+0x108>
40021f40:	e5900014 	ldr	r0, [r0, #20]
40021f44:	e3c05c03 	bic	r5, r0, #768	; 0x300
40021f48:	e3a00b01 	mov	r0, #1024	; 0x400
40021f4c:	e1800586 	orr	r0, r0, r6, lsl #11
40021f50:	e1855000 	orr	r5, r5, r0
40021f54:	e3855c01 	orr	r5, r5, #256	; 0x100
40021f58:	e3a00064 	mov	r0, #100	; 0x64
40021f5c:	ebffc58e 	bl	4001359c <CyU3PBusyWait>
40021f60:	e59f0004 	ldr	r0, [pc, #4]	; 40021f6c <CyU3POsTimerInit+0x108>
40021f64:	e5805014 	str	r5, [r0, #20]
40021f68:	e8bd8070 	pop	{r4, r5, r6, pc}
40021f6c:	e0050000 	.word	0xe0050000
40021f70:	40030dd4 	.word	0x40030dd4
40021f74:	40030dd8 	.word	0x40030dd8

Disassembly of section i.CyU3PVicClearInt:

40021f78 <CyU3PVicClearInt>:
40021f78:	e3a00000 	mov	r0, #0
40021f7c:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40021f80:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40021f84 <CyU3PVicDisableAllInterrupts>:
40021f84:	e3a01000 	mov	r1, #0
40021f88:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40021f8c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021f90:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40021f94 <CyU3PVicDisableInt>:
40021f94:	e3a01001 	mov	r1, #1
40021f98:	e1a01011 	lsl	r1, r1, r0
40021f9c:	e3a02000 	mov	r2, #0
40021fa0:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40021fa4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40021fa8 <CyU3PVicEnableInt>:
40021fa8:	e3a01001 	mov	r1, #1
40021fac:	e1a01011 	lsl	r1, r1, r0
40021fb0:	e3a02000 	mov	r2, #0
40021fb4:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40021fb8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40021fbc <CyU3PVicEnableInterrupts>:
40021fbc:	e3a01000 	mov	r1, #0
40021fc0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40021fc4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40021fc8 <CyU3PVicInit>:
40021fc8:	e92d4010 	push	{r4, lr}
40021fcc:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40021fd0:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
40021fd4:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40021fd8:	e3e00000 	mvn	r0, #0
40021fdc:	e3a01000 	mov	r1, #0
40021fe0:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021fe4:	e3a00000 	mov	r0, #0
40021fe8:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40021fec:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40021ff0:	ebffffe0 	bl	40021f78 <CyU3PVicClearInt>
40021ff4:	eb000001 	bl	40022000 <__CyU3PVicSetupIntVectors_veneer>
40021ff8:	e8bd8010 	pop	{r4, pc}
40021ffc:	00000000 	andeq	r0, r0, r0

40022000 <__CyU3PVicSetupIntVectors_veneer>:
40022000:	e51ff004 	ldr	pc, [pc, #-4]	; 40022004 <__CyU3PVicSetupIntVectors_veneer+0x4>
40022004:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40022008 <CyFx3Usb2PhySetup>:
40022008:	e59f0008 	ldr	r0, [pc, #8]	; 40022018 <CyFx3Usb2PhySetup+0x10>
4002200c:	e59f1008 	ldr	r1, [pc, #8]	; 4002201c <CyFx3Usb2PhySetup+0x14>
40022010:	e581000c 	str	r0, [r1, #12]
40022014:	e12fff1e 	bx	lr
40022018:	00d4a480 	.word	0x00d4a480
4002201c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40022020 <CyFx3Usb3LnkRelaxHpTimeout>:
40022020:	e59f0008 	ldr	r0, [pc, #8]	; 40022030 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
40022024:	e59f1008 	ldr	r1, [pc, #8]	; 40022034 <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40022028:	e58100c4 	str	r0, [r1, #196]	; 0xc4
4002202c:	e12fff1e 	bx	lr
40022030:	000009c4 	.word	0x000009c4
40022034:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40022038 <CyFx3Usb3LnkSetup>:
40022038:	e59f1024 	ldr	r1, [pc, #36]	; 40022064 <CyFx3Usb3LnkSetup+0x2c>
4002203c:	e59f0024 	ldr	r0, [pc, #36]	; 40022068 <CyFx3Usb3LnkSetup+0x30>
40022040:	e580109c 	str	r1, [r0, #156]	; 0x9c
40022044:	e5801080 	str	r1, [r0, #128]	; 0x80
40022048:	e59f101c 	ldr	r1, [pc, #28]	; 4002206c <CyFx3Usb3LnkSetup+0x34>
4002204c:	e5801084 	str	r1, [r0, #132]	; 0x84
40022050:	e59f1018 	ldr	r1, [pc, #24]	; 40022070 <CyFx3Usb3LnkSetup+0x38>
40022054:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40022058:	e3a0107d 	mov	r1, #125	; 0x7d
4002205c:	e5801078 	str	r1, [r0, #120]	; 0x78
40022060:	e12fff1e 	bx	lr
40022064:	00002710 	.word	0x00002710
40022068:	e0033000 	.word	0xe0033000
4002206c:	00fa004b 	.word	0x00fa004b
40022070:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

40022074 <CyFx3Usb3SendTP>:
40022074:	e5902000 	ldr	r2, [r0]
40022078:	e59f1020 	ldr	r1, [pc, #32]	; 400220a0 <CyFx3Usb3SendTP+0x2c>
4002207c:	e5812450 	str	r2, [r1, #1104]	; 0x450
40022080:	e5902004 	ldr	r2, [r0, #4]
40022084:	e5812454 	str	r2, [r1, #1108]	; 0x454
40022088:	e5900008 	ldr	r0, [r0, #8]
4002208c:	e5810458 	str	r0, [r1, #1112]	; 0x458
40022090:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
40022094:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022098:	e5810460 	str	r0, [r1, #1120]	; 0x460
4002209c:	e12fff1e 	bx	lr
400220a0:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

400220a4 <CyFx3UsbDmaPrefetchEnable>:
400220a4:	e3500000 	cmp	r0, #0
400220a8:	e59f001c 	ldr	r0, [pc, #28]	; 400220cc <CyFx3UsbDmaPrefetchEnable+0x28>
400220ac:	e3a01206 	mov	r1, #1610612736	; 0x60000000
400220b0:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
400220b4:	12811a09 	addne	r1, r1, #36864	; 0x9000
400220b8:	e3c22903 	bic	r2, r2, #49152	; 0xc000
400220bc:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
400220c0:	e1811002 	orr	r1, r1, r2
400220c4:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
400220c8:	e12fff1e 	bx	lr
400220cc:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

400220d0 <CyFx3UsbPowerOn>:
400220d0:	e92d4010 	push	{r4, lr}
400220d4:	e59f406c 	ldr	r4, [pc, #108]	; 40022148 <CyFx3UsbPowerOn+0x78>
400220d8:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400220dc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400220e0:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400220e4:	e3a0000a 	mov	r0, #10
400220e8:	ebffca78 	bl	40014ad0 <CyFx3BusyWait>
400220ec:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400220f0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400220f4:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400220f8:	e3a00064 	mov	r0, #100	; 0x64
400220fc:	ebffca73 	bl	40014ad0 <CyFx3BusyWait>
40022100:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022104:	e3100001 	tst	r0, #1
40022108:	0afffffc 	beq	40022100 <CyFx3UsbPowerOn+0x30>
4002210c:	ebffca65 	bl	40014aa8 <CyFx3DevIsUsb3Supported>
40022110:	e59f4034 	ldr	r4, [pc, #52]	; 4002214c <CyFx3UsbPowerOn+0x7c>
40022114:	e3500000 	cmp	r0, #0
40022118:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
4002211c:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40022120:	03a0000a 	moveq	r0, #10
40022124:	0bffca69 	bleq	40014ad0 <CyFx3BusyWait>
40022128:	ebffca40 	bl	40014a30 <CyFx3DevIsOtgSupported>
4002212c:	e3500000 	cmp	r0, #0
40022130:	18bd8010 	popne	{r4, pc}
40022134:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40022138:	e584080c 	str	r0, [r4, #2060]	; 0x80c
4002213c:	e8bd4010 	pop	{r4, lr}
40022140:	e3a0000a 	mov	r0, #10
40022144:	eaffca61 	b	40014ad0 <CyFx3BusyWait>
40022148:	e0037000 	.word	0xe0037000
4002214c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40022150 <CyFx3UsbWritePhyReg>:
40022150:	e59f2084 	ldr	r2, [pc, #132]	; 400221dc <CyFx3UsbWritePhyReg+0x8c>
40022154:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022158:	e3120901 	tst	r2, #16384	; 0x4000
4002215c:	012fff1e 	bxeq	lr
40022160:	e59f2078 	ldr	r2, [pc, #120]	; 400221e0 <CyFx3UsbWritePhyReg+0x90>
40022164:	e5820024 	str	r0, [r2, #36]	; 0x24
40022168:	e3803801 	orr	r3, r0, #65536	; 0x10000
4002216c:	e5823024 	str	r3, [r2, #36]	; 0x24
40022170:	e5923028 	ldr	r3, [r2, #40]	; 0x28
40022174:	e3130801 	tst	r3, #65536	; 0x10000
40022178:	0afffffc 	beq	40022170 <CyFx3UsbWritePhyReg+0x20>
4002217c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022180:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022184:	e3100801 	tst	r0, #65536	; 0x10000
40022188:	1afffffc 	bne	40022180 <CyFx3UsbWritePhyReg+0x30>
4002218c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022190:	e3810802 	orr	r0, r1, #131072	; 0x20000
40022194:	e5820024 	str	r0, [r2, #36]	; 0x24
40022198:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002219c:	e3100801 	tst	r0, #65536	; 0x10000
400221a0:	0afffffc 	beq	40022198 <CyFx3UsbWritePhyReg+0x48>
400221a4:	e5821024 	str	r1, [r2, #36]	; 0x24
400221a8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400221ac:	e3100801 	tst	r0, #65536	; 0x10000
400221b0:	1afffffc 	bne	400221a8 <CyFx3UsbWritePhyReg+0x58>
400221b4:	e3810702 	orr	r0, r1, #524288	; 0x80000
400221b8:	e5820024 	str	r0, [r2, #36]	; 0x24
400221bc:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400221c0:	e3100801 	tst	r0, #65536	; 0x10000
400221c4:	0afffffc 	beq	400221bc <CyFx3UsbWritePhyReg+0x6c>
400221c8:	e5821024 	str	r1, [r2, #36]	; 0x24
400221cc:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400221d0:	e3100801 	tst	r0, #65536	; 0x10000
400221d4:	1afffffc 	bne	400221cc <CyFx3UsbWritePhyReg+0x7c>
400221d8:	e12fff1e 	bx	lr
400221dc:	e0031000 	.word	0xe0031000
400221e0:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

400221e4 <CyU3PDmaDscrChainCreate>:
400221e4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400221e8:	e24dd018 	sub	sp, sp, #24
400221ec:	e1a04000 	mov	r4, r0
400221f0:	e1a05001 	mov	r5, r1
400221f4:	e1a06002 	mov	r6, r2
400221f8:	e1a07003 	mov	r7, r3
400221fc:	e3a0a000 	mov	sl, #0
40022200:	eb0000a6 	bl	400224a0 <CyU3PDmaDscrGetFreeCount>
40022204:	e1500005 	cmp	r0, r5
40022208:	aa000002 	bge	40022218 <CyU3PDmaDscrChainCreate+0x34>
4002220c:	e3a00010 	mov	r0, #16
40022210:	e28dd018 	add	sp, sp, #24
40022214:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022218:	e3540000 	cmp	r4, #0
4002221c:	1a000001 	bne	40022228 <CyU3PDmaDscrChainCreate+0x44>
40022220:	e3a00040 	mov	r0, #64	; 0x40
40022224:	eafffff9 	b	40022210 <CyU3PDmaDscrChainCreate+0x2c>
40022228:	e3550000 	cmp	r5, #0
4002222c:	1a000001 	bne	40022238 <CyU3PDmaDscrChainCreate+0x54>
40022230:	e3a00040 	mov	r0, #64	; 0x40
40022234:	eafffff5 	b	40022210 <CyU3PDmaDscrChainCreate+0x2c>
40022238:	e1a09005 	mov	r9, r5
4002223c:	e1a00004 	mov	r0, r4
40022240:	eb00005e 	bl	400223c0 <CyU3PDmaDscrGet>
40022244:	e1d480b0 	ldrh	r8, [r4]
40022248:	ea000029 	b	400222f4 <CyU3PDmaDscrChainCreate+0x110>
4002224c:	e3590000 	cmp	r9, #0
40022250:	0a000002 	beq	40022260 <CyU3PDmaDscrChainCreate+0x7c>
40022254:	e28d0014 	add	r0, sp, #20
40022258:	eb000058 	bl	400223c0 <CyU3PDmaDscrGet>
4002225c:	ea000001 	b	40022268 <CyU3PDmaDscrChainCreate+0x84>
40022260:	e1d400b0 	ldrh	r0, [r4]
40022264:	e58d0014 	str	r0, [sp, #20]
40022268:	e3560000 	cmp	r6, #0
4002226c:	0a000015 	beq	400222c8 <CyU3PDmaDscrChainCreate+0xe4>
40022270:	e35a0000 	cmp	sl, #0
40022274:	1a000013 	bne	400222c8 <CyU3PDmaDscrChainCreate+0xe4>
40022278:	e1a00006 	mov	r0, r6
4002227c:	ebff86b9 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022280:	e58d0004 	str	r0, [sp, #4]
40022284:	e59f00a0 	ldr	r0, [pc, #160]	; 4002232c <CyU3PDmaDscrChainCreate+0x148>
40022288:	e0000006 	and	r0, r0, r6
4002228c:	e58d0010 	str	r0, [sp, #16]
40022290:	e59d0004 	ldr	r0, [sp, #4]
40022294:	e3500000 	cmp	r0, #0
40022298:	1a000000 	bne	400222a0 <CyU3PDmaDscrChainCreate+0xbc>
4002229c:	e3a0a010 	mov	sl, #16
400222a0:	e59d0004 	ldr	r0, [sp, #4]
400222a4:	e3500101 	cmp	r0, #1073741824	; 0x40000000
400222a8:	3a000004 	bcc	400222c0 <CyU3PDmaDscrChainCreate+0xdc>
400222ac:	e59d0004 	ldr	r0, [sp, #4]
400222b0:	e0800006 	add	r0, r0, r6
400222b4:	e59f1074 	ldr	r1, [pc, #116]	; 40022330 <CyU3PDmaDscrChainCreate+0x14c>
400222b8:	e1500001 	cmp	r0, r1
400222bc:	3a000004 	bcc	400222d4 <CyU3PDmaDscrChainCreate+0xf0>
400222c0:	e3a0a010 	mov	sl, #16
400222c4:	ea000002 	b	400222d4 <CyU3PDmaDscrChainCreate+0xf0>
400222c8:	e3a00000 	mov	r0, #0
400222cc:	e58d0004 	str	r0, [sp, #4]
400222d0:	e58d0010 	str	r0, [sp, #16]
400222d4:	e58d7008 	str	r7, [sp, #8]
400222d8:	e1dd01b4 	ldrh	r0, [sp, #20]
400222dc:	e1800800 	orr	r0, r0, r0, lsl #16
400222e0:	e58d000c 	str	r0, [sp, #12]
400222e4:	e28d1004 	add	r1, sp, #4
400222e8:	e1a00008 	mov	r0, r8
400222ec:	eb0000c6 	bl	4002260c <CyU3PDmaDscrSetConfig>
400222f0:	e1dd81b4 	ldrh	r8, [sp, #20]
400222f4:	e1b00009 	movs	r0, r9
400222f8:	e2491001 	sub	r1, r9, #1
400222fc:	e1a09801 	lsl	r9, r1, #16
40022300:	e1a09829 	lsr	r9, r9, #16
40022304:	1affffd0 	bne	4002224c <CyU3PDmaDscrChainCreate+0x68>
40022308:	e35a0000 	cmp	sl, #0
4002230c:	0a000004 	beq	40022324 <CyU3PDmaDscrChainCreate+0x140>
40022310:	e1d400b0 	ldrh	r0, [r4]
40022314:	e3a03001 	mov	r3, #1
40022318:	e1a02003 	mov	r2, r3
4002231c:	e1a01005 	mov	r1, r5
40022320:	eb000003 	bl	40022334 <CyU3PDmaDscrChainDestroy>
40022324:	e1a0000a 	mov	r0, sl
40022328:	eaffffb8 	b	40022210 <CyU3PDmaDscrChainCreate+0x2c>
4002232c:	0000fff0 	.word	0x0000fff0
40022330:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

40022334 <CyU3PDmaDscrChainDestroy>:
40022334:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40022338:	e1a04000 	mov	r4, r0
4002233c:	e1a05001 	mov	r5, r1
40022340:	e1a06002 	mov	r6, r2
40022344:	e1a07003 	mov	r7, r3
40022348:	ea000015 	b	400223a4 <CyU3PDmaDscrChainDestroy+0x70>
4002234c:	e1a0100d 	mov	r1, sp
40022350:	e1a00004 	mov	r0, r4
40022354:	eb000091 	bl	400225a0 <CyU3PDmaDscrGetConfig>
40022358:	e3570000 	cmp	r7, #0
4002235c:	0a000004 	beq	40022374 <CyU3PDmaDscrChainDestroy+0x40>
40022360:	e59d0000 	ldr	r0, [sp]
40022364:	e3500000 	cmp	r0, #0
40022368:	0a000001 	beq	40022374 <CyU3PDmaDscrChainDestroy+0x40>
4002236c:	e59d0000 	ldr	r0, [sp]
40022370:	ebff86df 	bl	40003ef4 <CyU3PDmaBufferFree>
40022374:	e3560000 	cmp	r6, #0
40022378:	0a000003 	beq	4002238c <CyU3PDmaDscrChainDestroy+0x58>
4002237c:	e59d0008 	ldr	r0, [sp, #8]
40022380:	e59f1034 	ldr	r1, [pc, #52]	; 400223bc <CyU3PDmaDscrChainDestroy+0x88>
40022384:	e0018820 	and	r8, r1, r0, lsr #16
40022388:	ea000002 	b	40022398 <CyU3PDmaDscrChainDestroy+0x64>
4002238c:	e59d0008 	ldr	r0, [sp, #8]
40022390:	e1a08800 	lsl	r8, r0, #16
40022394:	e1a08828 	lsr	r8, r8, #16
40022398:	e1a00004 	mov	r0, r4
4002239c:	eb000058 	bl	40022504 <CyU3PDmaDscrPut>
400223a0:	e1a04008 	mov	r4, r8
400223a4:	e1b00005 	movs	r0, r5
400223a8:	e2451001 	sub	r1, r5, #1
400223ac:	e1a05801 	lsl	r5, r1, #16
400223b0:	e1a05825 	lsr	r5, r5, #16
400223b4:	1affffe4 	bne	4002234c <CyU3PDmaDscrChainDestroy+0x18>
400223b8:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400223bc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

400223c0 <CyU3PDmaDscrGet>:
400223c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400223c4:	e1a04000 	mov	r4, r0
400223c8:	e3a08000 	mov	r8, #0
400223cc:	e3540000 	cmp	r4, #0
400223d0:	1a000001 	bne	400223dc <CyU3PDmaDscrGet+0x1c>
400223d4:	e3a00040 	mov	r0, #64	; 0x40
400223d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400223dc:	e3e01000 	mvn	r1, #0
400223e0:	e59f00ac 	ldr	r0, [pc, #172]	; 40022494 <CyU3PDmaDscrGet+0xd4>
400223e4:	ebff9f4e 	bl	4000a124 <_txe_mutex_get>
400223e8:	e59f00a8 	ldr	r0, [pc, #168]	; 40022498 <CyU3PDmaDscrGet+0xd8>
400223ec:	e1d000b0 	ldrh	r0, [r0]
400223f0:	e3500000 	cmp	r0, #0
400223f4:	0a000022 	beq	40022484 <CyU3PDmaDscrGet+0xc4>
400223f8:	e3a06000 	mov	r6, #0
400223fc:	ea00001e 	b	4002247c <CyU3PDmaDscrGet+0xbc>
40022400:	e59f0094 	ldr	r0, [pc, #148]	; 4002249c <CyU3PDmaDscrGet+0xdc>
40022404:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022408:	e3750001 	cmn	r5, #1
4002240c:	0a000017 	beq	40022470 <CyU3PDmaDscrGet+0xb0>
40022410:	e3a07001 	mov	r7, #1
40022414:	ea000012 	b	40022464 <CyU3PDmaDscrGet+0xa4>
40022418:	e1150007 	tst	r5, r7
4002241c:	1a00000d 	bne	40022458 <CyU3PDmaDscrGet+0x98>
40022420:	e1850007 	orr	r0, r5, r7
40022424:	e59f1070 	ldr	r1, [pc, #112]	; 4002249c <CyU3PDmaDscrGet+0xdc>
40022428:	e7810106 	str	r0, [r1, r6, lsl #2]
4002242c:	e2410004 	sub	r0, r1, #4
40022430:	e1c080b2 	strh	r8, [r0, #2]
40022434:	e1d000b0 	ldrh	r0, [r0]
40022438:	e2400001 	sub	r0, r0, #1
4002243c:	e2411004 	sub	r1, r1, #4
40022440:	e1c100b0 	strh	r0, [r1]
40022444:	e1c480b0 	strh	r8, [r4]
40022448:	e2810044 	add	r0, r1, #68	; 0x44
4002244c:	ebff9f69 	bl	4000a1f8 <_txe_mutex_put>
40022450:	e3a00000 	mov	r0, #0
40022454:	eaffffdf 	b	400223d8 <CyU3PDmaDscrGet+0x18>
40022458:	e1a07087 	lsl	r7, r7, #1
4002245c:	e2880001 	add	r0, r8, #1
40022460:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022464:	e3570000 	cmp	r7, #0
40022468:	1affffea 	bne	40022418 <CyU3PDmaDscrGet+0x58>
4002246c:	ea000001 	b	40022478 <CyU3PDmaDscrGet+0xb8>
40022470:	e2880020 	add	r0, r8, #32
40022474:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022478:	e2866001 	add	r6, r6, #1
4002247c:	e3560010 	cmp	r6, #16
40022480:	3affffde 	bcc	40022400 <CyU3PDmaDscrGet+0x40>
40022484:	e59f0008 	ldr	r0, [pc, #8]	; 40022494 <CyU3PDmaDscrGet+0xd4>
40022488:	ebff9f5a 	bl	4000a1f8 <_txe_mutex_put>
4002248c:	e3a0004a 	mov	r0, #74	; 0x4a
40022490:	eaffffd0 	b	400223d8 <CyU3PDmaDscrGet+0x18>
40022494:	4003273c 	.word	0x4003273c
40022498:	400326f8 	.word	0x400326f8
4002249c:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

400224a0 <CyU3PDmaDscrGetFreeCount>:
400224a0:	e59f0004 	ldr	r0, [pc, #4]	; 400224ac <CyU3PDmaDscrGetFreeCount+0xc>
400224a4:	e1d000b0 	ldrh	r0, [r0]
400224a8:	e12fff1e 	bx	lr
400224ac:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

400224b0 <CyU3PDmaDscrListCreate>:
400224b0:	e92d4010 	push	{r4, lr}
400224b4:	e3a02040 	mov	r2, #64	; 0x40
400224b8:	e3a01000 	mov	r1, #0
400224bc:	e59f0034 	ldr	r0, [pc, #52]	; 400224f8 <CyU3PDmaDscrListCreate+0x48>
400224c0:	ebff847c 	bl	400036b8 <CyU3PMemSet>
400224c4:	e3a00001 	mov	r0, #1
400224c8:	e59f102c 	ldr	r1, [pc, #44]	; 400224fc <CyU3PDmaDscrListCreate+0x4c>
400224cc:	e5810004 	str	r0, [r1, #4]
400224d0:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
400224d4:	e1c100b0 	strh	r0, [r1]
400224d8:	e3a00001 	mov	r0, #1
400224dc:	e1c100b2 	strh	r0, [r1, #2]
400224e0:	e3a03038 	mov	r3, #56	; 0x38
400224e4:	e3a02000 	mov	r2, #0
400224e8:	e1a01002 	mov	r1, r2
400224ec:	e59f000c 	ldr	r0, [pc, #12]	; 40022500 <CyU3PDmaDscrListCreate+0x50>
400224f0:	ebff9e8d 	bl	40009f2c <_txe_mutex_create>
400224f4:	e8bd8010 	pop	{r4, pc}
400224f8:	400326fc 	.word	0x400326fc
400224fc:	400326f8 	.word	0x400326f8
40022500:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

40022504 <CyU3PDmaDscrPut>:
40022504:	e92d4070 	push	{r4, r5, r6, lr}
40022508:	e1a04000 	mov	r4, r0
4002250c:	e3540c02 	cmp	r4, #512	; 0x200
40022510:	aa000001 	bge	4002251c <CyU3PDmaDscrPut+0x18>
40022514:	e3540000 	cmp	r4, #0
40022518:	1a000001 	bne	40022524 <CyU3PDmaDscrPut+0x20>
4002251c:	e3a00040 	mov	r0, #64	; 0x40
40022520:	e8bd8070 	pop	{r4, r5, r6, pc}
40022524:	e3e01000 	mvn	r1, #0
40022528:	e59f0064 	ldr	r0, [pc, #100]	; 40022594 <CyU3PDmaDscrPut+0x90>
4002252c:	ebff9efc 	bl	4000a124 <_txe_mutex_get>
40022530:	e1a00004 	mov	r0, r4
40022534:	e1a01fc4 	asr	r1, r4, #31
40022538:	e0841da1 	add	r1, r4, r1, lsr #27
4002253c:	e1a062c1 	asr	r6, r1, #5
40022540:	e59f0050 	ldr	r0, [pc, #80]	; 40022598 <CyU3PDmaDscrPut+0x94>
40022544:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022548:	e1a00004 	mov	r0, r4
4002254c:	e1a01fc4 	asr	r1, r4, #31
40022550:	e0841da1 	add	r1, r4, r1, lsr #27
40022554:	e1a012c1 	asr	r1, r1, #5
40022558:	e0441281 	sub	r1, r4, r1, lsl #5
4002255c:	e3a02001 	mov	r2, #1
40022560:	e1c55112 	bic	r5, r5, r2, lsl r1
40022564:	e59f002c 	ldr	r0, [pc, #44]	; 40022598 <CyU3PDmaDscrPut+0x94>
40022568:	e7805106 	str	r5, [r0, r6, lsl #2]
4002256c:	e2400004 	sub	r0, r0, #4
40022570:	e1d000b0 	ldrh	r0, [r0]
40022574:	e2800001 	add	r0, r0, #1
40022578:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4002257c:	e59f1018 	ldr	r1, [pc, #24]	; 4002259c <CyU3PDmaDscrPut+0x98>
40022580:	e1c100b0 	strh	r0, [r1]
40022584:	e2810044 	add	r0, r1, #68	; 0x44
40022588:	ebff9f1a 	bl	4000a1f8 <_txe_mutex_put>
4002258c:	e3a00000 	mov	r0, #0
40022590:	eaffffe2 	b	40022520 <CyU3PDmaDscrPut+0x1c>
40022594:	4003273c 	.word	0x4003273c
40022598:	400326fc 	.word	0x400326fc
4002259c:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

400225a0 <CyU3PDmaDscrGetConfig>:
400225a0:	e92d4070 	push	{r4, r5, r6, lr}
400225a4:	e1a05000 	mov	r5, r0
400225a8:	e1a04001 	mov	r4, r1
400225ac:	e3550c02 	cmp	r5, #512	; 0x200
400225b0:	aa000001 	bge	400225bc <CyU3PDmaDscrGetConfig+0x1c>
400225b4:	e3550000 	cmp	r5, #0
400225b8:	1a000001 	bne	400225c4 <CyU3PDmaDscrGetConfig+0x24>
400225bc:	e3a00040 	mov	r0, #64	; 0x40
400225c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400225c4:	e3540000 	cmp	r4, #0
400225c8:	1a000001 	bne	400225d4 <CyU3PDmaDscrGetConfig+0x34>
400225cc:	e3a00040 	mov	r0, #64	; 0x40
400225d0:	eafffffa 	b	400225c0 <CyU3PDmaDscrGetConfig+0x20>
400225d4:	e59f102c 	ldr	r1, [pc, #44]	; 40022608 <CyU3PDmaDscrGetConfig+0x68>
400225d8:	e5911000 	ldr	r1, [r1]
400225dc:	e0810205 	add	r0, r1, r5, lsl #4
400225e0:	e3a01010 	mov	r1, #16
400225e4:	ebffbea5 	bl	40012080 <CyU3PSysClearDRegion>
400225e8:	ebffc119 	bl	40012a54 <CyU3PSysBarrierSync>
400225ec:	e59f0014 	ldr	r0, [pc, #20]	; 40022608 <CyU3PDmaDscrGetConfig+0x68>
400225f0:	e5900000 	ldr	r0, [r0]
400225f4:	e0800205 	add	r0, r0, r5, lsl #4
400225f8:	e890004e 	ldm	r0, {r1, r2, r3, r6}
400225fc:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022600:	e3a00000 	mov	r0, #0
40022604:	eaffffed 	b	400225c0 <CyU3PDmaDscrGetConfig+0x20>
40022608:	40030ddc 	.word	0x40030ddc

Disassembly of section i.CyU3PDmaDscrSetConfig:

4002260c <CyU3PDmaDscrSetConfig>:
4002260c:	e92d4070 	push	{r4, r5, r6, lr}
40022610:	e1a04000 	mov	r4, r0
40022614:	e1a05001 	mov	r5, r1
40022618:	e3540c02 	cmp	r4, #512	; 0x200
4002261c:	aa000001 	bge	40022628 <CyU3PDmaDscrSetConfig+0x1c>
40022620:	e3540000 	cmp	r4, #0
40022624:	1a000001 	bne	40022630 <CyU3PDmaDscrSetConfig+0x24>
40022628:	e3a00040 	mov	r0, #64	; 0x40
4002262c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022630:	e3550000 	cmp	r5, #0
40022634:	1a000001 	bne	40022640 <CyU3PDmaDscrSetConfig+0x34>
40022638:	e3a00040 	mov	r0, #64	; 0x40
4002263c:	eafffffa 	b	4002262c <CyU3PDmaDscrSetConfig+0x20>
40022640:	e59f002c 	ldr	r0, [pc, #44]	; 40022674 <CyU3PDmaDscrSetConfig+0x68>
40022644:	e5900000 	ldr	r0, [r0]
40022648:	e0800204 	add	r0, r0, r4, lsl #4
4002264c:	e895004e 	ldm	r5, {r1, r2, r3, r6}
40022650:	e880004e 	stm	r0, {r1, r2, r3, r6}
40022654:	e59f1018 	ldr	r1, [pc, #24]	; 40022674 <CyU3PDmaDscrSetConfig+0x68>
40022658:	e5911000 	ldr	r1, [r1]
4002265c:	e0810204 	add	r0, r1, r4, lsl #4
40022660:	e3a01010 	mov	r1, #16
40022664:	ebffbe85 	bl	40012080 <CyU3PSysClearDRegion>
40022668:	ebffc0f9 	bl	40012a54 <CyU3PSysBarrierSync>
4002266c:	e3a00000 	mov	r0, #0
40022670:	eaffffed 	b	4002262c <CyU3PDmaDscrSetConfig+0x20>
40022674:	40030ddc 	.word	0x40030ddc

Disassembly of section i.CyU3PDmaIntHandler:

40022678 <CyU3PDmaIntHandler>:
40022678:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4002267c:	e1a04000 	mov	r4, r0
40022680:	e1a05001 	mov	r5, r1
40022684:	e204003f 	and	r0, r4, #63	; 0x3f
40022688:	e1857400 	orr	r7, r5, r0, lsl #8
4002268c:	e59f0150 	ldr	r0, [pc, #336]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
40022690:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022694:	e0800385 	add	r0, r0, r5, lsl #7
40022698:	e5900010 	ldr	r0, [r0, #16]
4002269c:	e59f1140 	ldr	r1, [pc, #320]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
400226a0:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400226a4:	e0811385 	add	r1, r1, r5, lsl #7
400226a8:	e5911014 	ldr	r1, [r1, #20]
400226ac:	e0009001 	and	r9, r0, r1
400226b0:	e59f0130 	ldr	r0, [pc, #304]	; 400227e8 <CyU3PDmaIntHandler+0x170>
400226b4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400226b8:	e7906105 	ldr	r6, [r0, r5, lsl #2]
400226bc:	e3560000 	cmp	r6, #0
400226c0:	0a000038 	beq	400227a8 <CyU3PDmaIntHandler+0x130>
400226c4:	e1a00000 	nop			; (mov r0, r0)
400226c8:	e59f0114 	ldr	r0, [pc, #276]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
400226cc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400226d0:	e0800385 	add	r0, r0, r5, lsl #7
400226d4:	e5900010 	ldr	r0, [r0, #16]
400226d8:	e59f1104 	ldr	r1, [pc, #260]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
400226dc:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400226e0:	e0811385 	add	r1, r1, r5, lsl #7
400226e4:	e5911014 	ldr	r1, [r1, #20]
400226e8:	e0000001 	and	r0, r0, r1
400226ec:	e1899000 	orr	r9, r9, r0
400226f0:	e2098e12 	and	r8, r9, #288	; 0x120
400226f4:	e59f00e8 	ldr	r0, [pc, #232]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
400226f8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400226fc:	e0800385 	add	r0, r0, r5, lsl #7
40022700:	e5900014 	ldr	r0, [r0, #20]
40022704:	e1c00008 	bic	r0, r0, r8
40022708:	e59f10d4 	ldr	r1, [pc, #212]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
4002270c:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022710:	e0811385 	add	r1, r1, r5, lsl #7
40022714:	e5810014 	str	r0, [r1, #20]
40022718:	e1c90008 	bic	r0, r9, r8
4002271c:	e59f10c0 	ldr	r1, [pc, #192]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
40022720:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022724:	e0811385 	add	r1, r1, r5, lsl #7
40022728:	e5810010 	str	r0, [r1, #16]
4002272c:	e59f00b0 	ldr	r0, [pc, #176]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
40022730:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022734:	e7900385 	ldr	r0, [r0, r5, lsl #7]
40022738:	e1a00800 	lsl	r0, r0, #16
4002273c:	e1a00820 	lsr	r0, r0, #16
40022740:	e58d000c 	str	r0, [sp, #12]
40022744:	e59f0098 	ldr	r0, [pc, #152]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
40022748:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002274c:	e0800385 	add	r0, r0, r5, lsl #7
40022750:	e5900010 	ldr	r0, [r0, #16]
40022754:	e59f1088 	ldr	r1, [pc, #136]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
40022758:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002275c:	e0811385 	add	r1, r1, r5, lsl #7
40022760:	e5911014 	ldr	r1, [r1, #20]
40022764:	e0008001 	and	r8, r0, r1
40022768:	e3580000 	cmp	r8, #0
4002276c:	1affffd5 	bne	400226c8 <CyU3PDmaIntHandler+0x50>
40022770:	e3a00901 	mov	r0, #16384	; 0x4000
40022774:	e58d0000 	str	r0, [sp]
40022778:	e59d0000 	ldr	r0, [sp]
4002277c:	e58d0000 	str	r0, [sp]
40022780:	e59d0000 	ldr	r0, [sp]
40022784:	e1800807 	orr	r0, r0, r7, lsl #16
40022788:	e58d0000 	str	r0, [sp]
4002278c:	e58d6004 	str	r6, [sp, #4]
40022790:	e58d9008 	str	r9, [sp, #8]
40022794:	e3a02000 	mov	r2, #0
40022798:	e1a01002 	mov	r1, r2
4002279c:	e1a0000d 	mov	r0, sp
400227a0:	ebffe060 	bl	4001a928 <CyU3PDmaMsgSend>
400227a4:	ea00000d 	b	400227e0 <CyU3PDmaIntHandler+0x168>
400227a8:	e59f003c 	ldr	r0, [pc, #60]	; 400227ec <CyU3PDmaIntHandler+0x174>
400227ac:	e5900000 	ldr	r0, [r0]
400227b0:	e3500000 	cmp	r0, #0
400227b4:	0a000005 	beq	400227d0 <CyU3PDmaIntHandler+0x158>
400227b8:	e1a01009 	mov	r1, r9
400227bc:	e1a00007 	mov	r0, r7
400227c0:	e59f2024 	ldr	r2, [pc, #36]	; 400227ec <CyU3PDmaIntHandler+0x174>
400227c4:	e5922000 	ldr	r2, [r2]
400227c8:	e12fff32 	blx	r2
400227cc:	ea000003 	b	400227e0 <CyU3PDmaIntHandler+0x168>
400227d0:	e59f000c 	ldr	r0, [pc, #12]	; 400227e4 <CyU3PDmaIntHandler+0x16c>
400227d4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400227d8:	e0800385 	add	r0, r0, r5, lsl #7
400227dc:	e5809010 	str	r9, [r0, #16]
400227e0:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
400227e4:	40030cf4 	.word	0x40030cf4
400227e8:	40030d1c 	.word	0x40030d1c
400227ec:	40030cf0 	.word	0x40030cf0

Disassembly of section i.CyU3PGpioInit:

400227f0 <CyU3PGpioInit>:
400227f0:	e92d4070 	push	{r4, r5, r6, lr}
400227f4:	e1a04000 	mov	r4, r0
400227f8:	e1a06001 	mov	r6, r1
400227fc:	e59f00fc 	ldr	r0, [pc, #252]	; 40022900 <CyU3PGpioInit+0x110>
40022800:	e5900000 	ldr	r0, [r0]
40022804:	e3500000 	cmp	r0, #0
40022808:	0a000001 	beq	40022814 <CyU3PGpioInit+0x24>
4002280c:	e3a00043 	mov	r0, #67	; 0x43
40022810:	e8bd8070 	pop	{r4, r5, r6, pc}
40022814:	e3540000 	cmp	r4, #0
40022818:	1a000001 	bne	40022824 <CyU3PGpioInit+0x34>
4002281c:	e3a00041 	mov	r0, #65	; 0x41
40022820:	eafffffa 	b	40022810 <CyU3PGpioInit+0x20>
40022824:	e1a00006 	mov	r0, r6
40022828:	eb00013b 	bl	40022d1c <CyU3PRegisterGpioCallBack>
4002282c:	ebffc552 	bl	40013d7c <CyU3PLppGpioBlockIsOn>
40022830:	e3500000 	cmp	r0, #0
40022834:	0a000003 	beq	40022848 <CyU3PGpioInit+0x58>
40022838:	e59f00c4 	ldr	r0, [pc, #196]	; 40022904 <CyU3PGpioInit+0x114>
4002283c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022840:	e3100001 	tst	r0, #1
40022844:	1a000020 	bne	400228cc <CyU3PGpioInit+0xdc>
40022848:	e1a00004 	mov	r0, r4
4002284c:	ebffc4a8 	bl	40013af4 <CyU3PGpioSetClock>
40022850:	e1a05000 	mov	r5, r0
40022854:	e3550000 	cmp	r5, #0
40022858:	0a000001 	beq	40022864 <CyU3PGpioInit+0x74>
4002285c:	e1a00005 	mov	r0, r5
40022860:	eaffffea 	b	40022810 <CyU3PGpioInit+0x20>
40022864:	e59f109c 	ldr	r1, [pc, #156]	; 40022908 <CyU3PGpioInit+0x118>
40022868:	e3a00004 	mov	r0, #4
4002286c:	ebffc546 	bl	40013d8c <CyU3PLppInit>
40022870:	e1a05000 	mov	r5, r0
40022874:	e3550000 	cmp	r5, #0
40022878:	0a000001 	beq	40022884 <CyU3PGpioInit+0x94>
4002287c:	e1a00005 	mov	r0, r5
40022880:	eaffffe2 	b	40022810 <CyU3PGpioInit+0x20>
40022884:	e59f0078 	ldr	r0, [pc, #120]	; 40022904 <CyU3PGpioInit+0x114>
40022888:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
4002288c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022890:	e59f106c 	ldr	r1, [pc, #108]	; 40022904 <CyU3PGpioInit+0x114>
40022894:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022898:	e3a0000a 	mov	r0, #10
4002289c:	ebffc33e 	bl	4001359c <CyU3PBusyWait>
400228a0:	e59f005c 	ldr	r0, [pc, #92]	; 40022904 <CyU3PGpioInit+0x114>
400228a4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400228a8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400228ac:	e59f1050 	ldr	r1, [pc, #80]	; 40022904 <CyU3PGpioInit+0x114>
400228b0:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
400228b4:	e1a00000 	nop			; (mov r0, r0)
400228b8:	e59f0044 	ldr	r0, [pc, #68]	; 40022904 <CyU3PGpioInit+0x114>
400228bc:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400228c0:	e3100001 	tst	r0, #1
400228c4:	0afffffb 	beq	400228b8 <CyU3PGpioInit+0xc8>
400228c8:	ea000007 	b	400228ec <CyU3PGpioInit+0xfc>
400228cc:	e59f1034 	ldr	r1, [pc, #52]	; 40022908 <CyU3PGpioInit+0x118>
400228d0:	e3a00004 	mov	r0, #4
400228d4:	ebffc52c 	bl	40013d8c <CyU3PLppInit>
400228d8:	e1a05000 	mov	r5, r0
400228dc:	e3550000 	cmp	r5, #0
400228e0:	0a000001 	beq	400228ec <CyU3PGpioInit+0xfc>
400228e4:	e1a00005 	mov	r0, r5
400228e8:	eaffffc8 	b	40022810 <CyU3PGpioInit+0x20>
400228ec:	e3a00001 	mov	r0, #1
400228f0:	e59f1008 	ldr	r1, [pc, #8]	; 40022900 <CyU3PGpioInit+0x110>
400228f4:	e5810000 	str	r0, [r1]
400228f8:	e3a00000 	mov	r0, #0
400228fc:	eaffffc3 	b	40022810 <CyU3PGpioInit+0x20>
40022900:	40030ef4 	.word	0x40030ef4
40022904:	e0001000 	.word	0xe0001000
40022908:	4002290c 	.word	0x4002290c

Disassembly of section i.CyU3PGpioInt_Handler:

4002290c <CyU3PGpioInt_Handler>:
4002290c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022910:	e3a06000 	mov	r6, #0
40022914:	e3a05000 	mov	r5, #0
40022918:	e3a04001 	mov	r4, #1
4002291c:	ea000029 	b	400229c8 <CyU3PGpioInt_Handler+0xbc>
40022920:	e59f0198 	ldr	r0, [pc, #408]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
40022924:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022928:	e1100004 	tst	r0, r4
4002292c:	0a000021 	beq	400229b8 <CyU3PGpioInt_Handler+0xac>
40022930:	e59f0188 	ldr	r0, [pc, #392]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
40022934:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022938:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
4002293c:	e59f117c 	ldr	r1, [pc, #380]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
40022940:	e7810205 	str	r0, [r1, r5, lsl #4]
40022944:	e59f0178 	ldr	r0, [pc, #376]	; 40022ac4 <CyU3PGpioInt_Handler+0x1b8>
40022948:	e5900000 	ldr	r0, [r0]
4002294c:	e3500000 	cmp	r0, #0
40022950:	0a000018 	beq	400229b8 <CyU3PGpioInt_Handler+0xac>
40022954:	e1a06005 	mov	r6, r5
40022958:	e1a07005 	mov	r7, r5
4002295c:	ea00000e 	b	4002299c <CyU3PGpioInt_Handler+0x90>
40022960:	e1a00007 	mov	r0, r7
40022964:	ebffc098 	bl	40012bcc <CyU3PIsGpioComplexIOConfigured>
40022968:	e3500000 	cmp	r0, #0
4002296c:	0a000001 	beq	40022978 <CyU3PGpioInt_Handler+0x6c>
40022970:	e1a06007 	mov	r6, r7
40022974:	ea00000a 	b	400229a4 <CyU3PGpioInt_Handler+0x98>
40022978:	e2870020 	add	r0, r7, #32
4002297c:	ebffc092 	bl	40012bcc <CyU3PIsGpioComplexIOConfigured>
40022980:	e3500000 	cmp	r0, #0
40022984:	0a000002 	beq	40022994 <CyU3PGpioInt_Handler+0x88>
40022988:	e2870020 	add	r0, r7, #32
4002298c:	e20060ff 	and	r6, r0, #255	; 0xff
40022990:	ea000003 	b	400229a4 <CyU3PGpioInt_Handler+0x98>
40022994:	e2870008 	add	r0, r7, #8
40022998:	e20070ff 	and	r7, r0, #255	; 0xff
4002299c:	e3570020 	cmp	r7, #32
400229a0:	baffffee 	blt	40022960 <CyU3PGpioInt_Handler+0x54>
400229a4:	e1a00000 	nop			; (mov r0, r0)
400229a8:	e1a00006 	mov	r0, r6
400229ac:	e59f1110 	ldr	r1, [pc, #272]	; 40022ac4 <CyU3PGpioInt_Handler+0x1b8>
400229b0:	e5911000 	ldr	r1, [r1]
400229b4:	e12fff31 	blx	r1
400229b8:	e59f0108 	ldr	r0, [pc, #264]	; 40022ac8 <CyU3PGpioInt_Handler+0x1bc>
400229bc:	e0004084 	and	r4, r0, r4, lsl #1
400229c0:	e2850001 	add	r0, r5, #1
400229c4:	e20050ff 	and	r5, r0, #255	; 0xff
400229c8:	e3540080 	cmp	r4, #128	; 0x80
400229cc:	9affffd3 	bls	40022920 <CyU3PGpioInt_Handler+0x14>
400229d0:	e59f00e8 	ldr	r0, [pc, #232]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
400229d4:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
400229d8:	e3500000 	cmp	r0, #0
400229dc:	0a000017 	beq	40022a40 <CyU3PGpioInt_Handler+0x134>
400229e0:	e3a05000 	mov	r5, #0
400229e4:	ea000013 	b	40022a38 <CyU3PGpioInt_Handler+0x12c>
400229e8:	e59f00d0 	ldr	r0, [pc, #208]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
400229ec:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
400229f0:	e3a01001 	mov	r1, #1
400229f4:	e1100511 	tst	r0, r1, lsl r5
400229f8:	0a00000c 	beq	40022a30 <CyU3PGpioInt_Handler+0x124>
400229fc:	e59f00c8 	ldr	r0, [pc, #200]	; 40022acc <CyU3PGpioInt_Handler+0x1c0>
40022a00:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40022a04:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022a08:	e59f10bc 	ldr	r1, [pc, #188]	; 40022acc <CyU3PGpioInt_Handler+0x1c0>
40022a0c:	e7810105 	str	r0, [r1, r5, lsl #2]
40022a10:	e59f00ac 	ldr	r0, [pc, #172]	; 40022ac4 <CyU3PGpioInt_Handler+0x1b8>
40022a14:	e5900000 	ldr	r0, [r0]
40022a18:	e3500000 	cmp	r0, #0
40022a1c:	0a000003 	beq	40022a30 <CyU3PGpioInt_Handler+0x124>
40022a20:	e1a00005 	mov	r0, r5
40022a24:	e59f1098 	ldr	r1, [pc, #152]	; 40022ac4 <CyU3PGpioInt_Handler+0x1b8>
40022a28:	e5911000 	ldr	r1, [r1]
40022a2c:	e12fff31 	blx	r1
40022a30:	e2850001 	add	r0, r5, #1
40022a34:	e20050ff 	and	r5, r0, #255	; 0xff
40022a38:	e3550020 	cmp	r5, #32
40022a3c:	baffffe9 	blt	400229e8 <CyU3PGpioInt_Handler+0xdc>
40022a40:	e59f0078 	ldr	r0, [pc, #120]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
40022a44:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022a48:	e3500000 	cmp	r0, #0
40022a4c:	0a00001a 	beq	40022abc <CyU3PGpioInt_Handler+0x1b0>
40022a50:	e3a05000 	mov	r5, #0
40022a54:	ea000016 	b	40022ab4 <CyU3PGpioInt_Handler+0x1a8>
40022a58:	e59f0060 	ldr	r0, [pc, #96]	; 40022ac0 <CyU3PGpioInt_Handler+0x1b4>
40022a5c:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022a60:	e3a01001 	mov	r1, #1
40022a64:	e1100511 	tst	r0, r1, lsl r5
40022a68:	0a00000f 	beq	40022aac <CyU3PGpioInt_Handler+0x1a0>
40022a6c:	e59f0058 	ldr	r0, [pc, #88]	; 40022acc <CyU3PGpioInt_Handler+0x1c0>
40022a70:	e2851020 	add	r1, r5, #32
40022a74:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022a78:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022a7c:	e59f0048 	ldr	r0, [pc, #72]	; 40022acc <CyU3PGpioInt_Handler+0x1c0>
40022a80:	e2852020 	add	r2, r5, #32
40022a84:	e7801102 	str	r1, [r0, r2, lsl #2]
40022a88:	e59f0034 	ldr	r0, [pc, #52]	; 40022ac4 <CyU3PGpioInt_Handler+0x1b8>
40022a8c:	e5900000 	ldr	r0, [r0]
40022a90:	e3500000 	cmp	r0, #0
40022a94:	0a000004 	beq	40022aac <CyU3PGpioInt_Handler+0x1a0>
40022a98:	e2851020 	add	r1, r5, #32
40022a9c:	e20100ff 	and	r0, r1, #255	; 0xff
40022aa0:	e59f101c 	ldr	r1, [pc, #28]	; 40022ac4 <CyU3PGpioInt_Handler+0x1b8>
40022aa4:	e5911000 	ldr	r1, [r1]
40022aa8:	e12fff31 	blx	r1
40022aac:	e2850001 	add	r0, r5, #1
40022ab0:	e20050ff 	and	r5, r0, #255	; 0xff
40022ab4:	e3550020 	cmp	r5, #32
40022ab8:	baffffe6 	blt	40022a58 <CyU3PGpioInt_Handler+0x14c>
40022abc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022ac0:	e0001000 	.word	0xe0001000
40022ac4:	40030ef8 	.word	0x40030ef8
40022ac8:	0000ffff 	.word	0x0000ffff
40022acc:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022ad0 <CyU3PGpioSetSimpleConfig>:
40022ad0:	e92d4070 	push	{r4, r5, r6, lr}
40022ad4:	e1a04000 	mov	r4, r0
40022ad8:	e1a05001 	mov	r5, r1
40022adc:	e3a06000 	mov	r6, #0
40022ae0:	e59f00d0 	ldr	r0, [pc, #208]	; 40022bb8 <CyU3PGpioSetSimpleConfig+0xe8>
40022ae4:	e5900000 	ldr	r0, [r0]
40022ae8:	e3500000 	cmp	r0, #0
40022aec:	1a000001 	bne	40022af8 <CyU3PGpioSetSimpleConfig+0x28>
40022af0:	e3a00042 	mov	r0, #66	; 0x42
40022af4:	e8bd8070 	pop	{r4, r5, r6, pc}
40022af8:	e1a00004 	mov	r0, r4
40022afc:	ebffc03e 	bl	40012bfc <CyU3PIsGpioValid>
40022b00:	e3500000 	cmp	r0, #0
40022b04:	1a000001 	bne	40022b10 <CyU3PGpioSetSimpleConfig+0x40>
40022b08:	e3a00040 	mov	r0, #64	; 0x40
40022b0c:	eafffff8 	b	40022af4 <CyU3PGpioSetSimpleConfig+0x24>
40022b10:	e3550000 	cmp	r5, #0
40022b14:	1a000001 	bne	40022b20 <CyU3PGpioSetSimpleConfig+0x50>
40022b18:	e3a00041 	mov	r0, #65	; 0x41
40022b1c:	eafffff4 	b	40022af4 <CyU3PGpioSetSimpleConfig+0x24>
40022b20:	e5d50010 	ldrb	r0, [r5, #16]
40022b24:	e3500005 	cmp	r0, #5
40022b28:	da000001 	ble	40022b34 <CyU3PGpioSetSimpleConfig+0x64>
40022b2c:	e3a00040 	mov	r0, #64	; 0x40
40022b30:	eaffffef 	b	40022af4 <CyU3PGpioSetSimpleConfig+0x24>
40022b34:	e1a00004 	mov	r0, r4
40022b38:	ebffc029 	bl	40012be4 <CyU3PIsGpioSimpleIOConfigured>
40022b3c:	e3500000 	cmp	r0, #0
40022b40:	1a000001 	bne	40022b4c <CyU3PGpioSetSimpleConfig+0x7c>
40022b44:	e3a00044 	mov	r0, #68	; 0x44
40022b48:	eaffffe9 	b	40022af4 <CyU3PGpioSetSimpleConfig+0x24>
40022b4c:	e595000c 	ldr	r0, [r5, #12]
40022b50:	e3500000 	cmp	r0, #0
40022b54:	0a000000 	beq	40022b5c <CyU3PGpioSetSimpleConfig+0x8c>
40022b58:	e3866040 	orr	r6, r6, #64	; 0x40
40022b5c:	e5950004 	ldr	r0, [r5, #4]
40022b60:	e3500000 	cmp	r0, #0
40022b64:	0a000000 	beq	40022b6c <CyU3PGpioSetSimpleConfig+0x9c>
40022b68:	e3866010 	orr	r6, r6, #16
40022b6c:	e5950008 	ldr	r0, [r5, #8]
40022b70:	e3500000 	cmp	r0, #0
40022b74:	0a000000 	beq	40022b7c <CyU3PGpioSetSimpleConfig+0xac>
40022b78:	e3866020 	orr	r6, r6, #32
40022b7c:	e5950000 	ldr	r0, [r5]
40022b80:	e3500000 	cmp	r0, #0
40022b84:	0a000000 	beq	40022b8c <CyU3PGpioSetSimpleConfig+0xbc>
40022b88:	e3866001 	orr	r6, r6, #1
40022b8c:	e5d50010 	ldrb	r0, [r5, #16]
40022b90:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022b94:	e0010c00 	and	r0, r1, r0, lsl #24
40022b98:	e1866000 	orr	r6, r6, r0
40022b9c:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022ba0:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022ba4:	e59f0010 	ldr	r0, [pc, #16]	; 40022bbc <CyU3PGpioSetSimpleConfig+0xec>
40022ba8:	e7806104 	str	r6, [r0, r4, lsl #2]
40022bac:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022bb0:	e3a00000 	mov	r0, #0
40022bb4:	eaffffce 	b	40022af4 <CyU3PGpioSetSimpleConfig+0x24>
40022bb8:	40030ef4 	.word	0x40030ef4
40022bbc:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022bc0 <CyU3PGpioSetValue>:
40022bc0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022bc4:	e1a04000 	mov	r4, r0
40022bc8:	e1a05001 	mov	r5, r1
40022bcc:	e59f00b8 	ldr	r0, [pc, #184]	; 40022c8c <CyU3PGpioSetValue+0xcc>
40022bd0:	e5900000 	ldr	r0, [r0]
40022bd4:	e3500000 	cmp	r0, #0
40022bd8:	1a000001 	bne	40022be4 <CyU3PGpioSetValue+0x24>
40022bdc:	e3a00042 	mov	r0, #66	; 0x42
40022be0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022be4:	e1a00004 	mov	r0, r4
40022be8:	ebffc003 	bl	40012bfc <CyU3PIsGpioValid>
40022bec:	e3500000 	cmp	r0, #0
40022bf0:	1a000001 	bne	40022bfc <CyU3PGpioSetValue+0x3c>
40022bf4:	e3a00040 	mov	r0, #64	; 0x40
40022bf8:	eafffff8 	b	40022be0 <CyU3PGpioSetValue+0x20>
40022bfc:	e1a00004 	mov	r0, r4
40022c00:	ebffbff7 	bl	40012be4 <CyU3PIsGpioSimpleIOConfigured>
40022c04:	e3500000 	cmp	r0, #0
40022c08:	0a000002 	beq	40022c18 <CyU3PGpioSetValue+0x58>
40022c0c:	e59f007c 	ldr	r0, [pc, #124]	; 40022c90 <CyU3PGpioSetValue+0xd0>
40022c10:	e0807104 	add	r7, r0, r4, lsl #2
40022c14:	ea00000d 	b	40022c50 <CyU3PGpioSetValue+0x90>
40022c18:	e1a00004 	mov	r0, r4
40022c1c:	ebffbfea 	bl	40012bcc <CyU3PIsGpioComplexIOConfigured>
40022c20:	e3500000 	cmp	r0, #0
40022c24:	0a000007 	beq	40022c48 <CyU3PGpioSetValue+0x88>
40022c28:	e1a00004 	mov	r0, r4
40022c2c:	e1a01fc4 	asr	r1, r4, #31
40022c30:	e0841ea1 	add	r1, r4, r1, lsr #29
40022c34:	e1a011c1 	asr	r1, r1, #3
40022c38:	e0441181 	sub	r1, r4, r1, lsl #3
40022c3c:	e59f2050 	ldr	r2, [pc, #80]	; 40022c94 <CyU3PGpioSetValue+0xd4>
40022c40:	e0827201 	add	r7, r2, r1, lsl #4
40022c44:	ea000001 	b	40022c50 <CyU3PGpioSetValue+0x90>
40022c48:	e3a00044 	mov	r0, #68	; 0x44
40022c4c:	eaffffe3 	b	40022be0 <CyU3PGpioSetValue+0x20>
40022c50:	e5970000 	ldr	r0, [r7]
40022c54:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022c58:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022c5c:	1a000001 	bne	40022c68 <CyU3PGpioSetValue+0xa8>
40022c60:	e3a00044 	mov	r0, #68	; 0x44
40022c64:	eaffffdd 	b	40022be0 <CyU3PGpioSetValue+0x20>
40022c68:	e3550000 	cmp	r5, #0
40022c6c:	0a000001 	beq	40022c78 <CyU3PGpioSetValue+0xb8>
40022c70:	e3866001 	orr	r6, r6, #1
40022c74:	ea000000 	b	40022c7c <CyU3PGpioSetValue+0xbc>
40022c78:	e3c66001 	bic	r6, r6, #1
40022c7c:	e5876000 	str	r6, [r7]
40022c80:	e5976000 	ldr	r6, [r7]
40022c84:	e3a00000 	mov	r0, #0
40022c88:	eaffffd4 	b	40022be0 <CyU3PGpioSetValue+0x20>
40022c8c:	40030ef4 	.word	0x40030ef4
40022c90:	e0001100 	.word	0xe0001100
40022c94:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022c98 <CyU3PGpioSimpleGetValue>:
40022c98:	e92d4070 	push	{r4, r5, r6, lr}
40022c9c:	e1a04000 	mov	r4, r0
40022ca0:	e1a06001 	mov	r6, r1
40022ca4:	e59f0068 	ldr	r0, [pc, #104]	; 40022d14 <CyU3PGpioSimpleGetValue+0x7c>
40022ca8:	e5900000 	ldr	r0, [r0]
40022cac:	e3500000 	cmp	r0, #0
40022cb0:	1a000001 	bne	40022cbc <CyU3PGpioSimpleGetValue+0x24>
40022cb4:	e3a00042 	mov	r0, #66	; 0x42
40022cb8:	e8bd8070 	pop	{r4, r5, r6, pc}
40022cbc:	e1a00004 	mov	r0, r4
40022cc0:	ebffbfcd 	bl	40012bfc <CyU3PIsGpioValid>
40022cc4:	e3500000 	cmp	r0, #0
40022cc8:	1a000001 	bne	40022cd4 <CyU3PGpioSimpleGetValue+0x3c>
40022ccc:	e3a00040 	mov	r0, #64	; 0x40
40022cd0:	eafffff8 	b	40022cb8 <CyU3PGpioSimpleGetValue+0x20>
40022cd4:	e3560000 	cmp	r6, #0
40022cd8:	1a000001 	bne	40022ce4 <CyU3PGpioSimpleGetValue+0x4c>
40022cdc:	e3a00041 	mov	r0, #65	; 0x41
40022ce0:	eafffff4 	b	40022cb8 <CyU3PGpioSimpleGetValue+0x20>
40022ce4:	e59f002c 	ldr	r0, [pc, #44]	; 40022d18 <CyU3PGpioSimpleGetValue+0x80>
40022ce8:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022cec:	e3150040 	tst	r5, #64	; 0x40
40022cf0:	0a000003 	beq	40022d04 <CyU3PGpioSimpleGetValue+0x6c>
40022cf4:	e2050002 	and	r0, r5, #2
40022cf8:	e1a000a0 	lsr	r0, r0, #1
40022cfc:	e5860000 	str	r0, [r6]
40022d00:	ea000001 	b	40022d0c <CyU3PGpioSimpleGetValue+0x74>
40022d04:	e2050001 	and	r0, r5, #1
40022d08:	e5860000 	str	r0, [r6]
40022d0c:	e3a00000 	mov	r0, #0
40022d10:	eaffffe8 	b	40022cb8 <CyU3PGpioSimpleGetValue+0x20>
40022d14:	40030ef4 	.word	0x40030ef4
40022d18:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022d1c <CyU3PRegisterGpioCallBack>:
40022d1c:	e59f1004 	ldr	r1, [pc, #4]	; 40022d28 <CyU3PRegisterGpioCallBack+0xc>
40022d20:	e5810000 	str	r0, [r1]
40022d24:	e12fff1e 	bx	lr
40022d28:	40030ef8 	.word	0x40030ef8

Disassembly of section i.CyU3PRegisterUartCallBack:

40022d2c <CyU3PRegisterUartCallBack>:
40022d2c:	e59f1004 	ldr	r1, [pc, #4]	; 40022d38 <CyU3PRegisterUartCallBack+0xc>
40022d30:	e5810000 	str	r0, [r1]
40022d34:	e12fff1e 	bx	lr
40022d38:	40030f08 	.word	0x40030f08

Disassembly of section i.CyU3PUartGetLock:

40022d3c <CyU3PUartGetLock>:
40022d3c:	e92d4010 	push	{r4, lr}
40022d40:	e3a04000 	mov	r4, #0
40022d44:	e59f0044 	ldr	r0, [pc, #68]	; 40022d90 <CyU3PUartGetLock+0x54>
40022d48:	e5900000 	ldr	r0, [r0]
40022d4c:	e3500000 	cmp	r0, #0
40022d50:	1a000001 	bne	40022d5c <CyU3PUartGetLock+0x20>
40022d54:	e3a00044 	mov	r0, #68	; 0x44
40022d58:	e8bd8010 	pop	{r4, pc}
40022d5c:	ebff96db 	bl	400088d0 <_tx_thread_identify>
40022d60:	e3500000 	cmp	r0, #0
40022d64:	0a000000 	beq	40022d6c <CyU3PUartGetLock+0x30>
40022d68:	e3e04000 	mvn	r4, #0
40022d6c:	e1a01004 	mov	r1, r4
40022d70:	e59f001c 	ldr	r0, [pc, #28]	; 40022d94 <CyU3PUartGetLock+0x58>
40022d74:	ebff9cea 	bl	4000a124 <_txe_mutex_get>
40022d78:	e3500000 	cmp	r0, #0
40022d7c:	0a000001 	beq	40022d88 <CyU3PUartGetLock+0x4c>
40022d80:	e3a0001d 	mov	r0, #29
40022d84:	eafffff3 	b	40022d58 <CyU3PUartGetLock+0x1c>
40022d88:	e3a00000 	mov	r0, #0
40022d8c:	eafffff1 	b	40022d58 <CyU3PUartGetLock+0x1c>
40022d90:	40030f04 	.word	0x40030f04
40022d94:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

40022d98 <CyU3PUartInit>:
40022d98:	e92d4010 	push	{r4, lr}
40022d9c:	e3a00003 	mov	r0, #3
40022da0:	ebffbf9c 	bl	40012c18 <CyU3PIsLppIOConfigured>
40022da4:	e3500000 	cmp	r0, #0
40022da8:	1a000001 	bne	40022db4 <CyU3PUartInit+0x1c>
40022dac:	e3a00044 	mov	r0, #68	; 0x44
40022db0:	e8bd8010 	pop	{r4, pc}
40022db4:	e59f00b8 	ldr	r0, [pc, #184]	; 40022e74 <CyU3PUartInit+0xdc>
40022db8:	e5900000 	ldr	r0, [r0]
40022dbc:	e3500000 	cmp	r0, #0
40022dc0:	0a000001 	beq	40022dcc <CyU3PUartInit+0x34>
40022dc4:	e3a00043 	mov	r0, #67	; 0x43
40022dc8:	eafffff8 	b	40022db0 <CyU3PUartInit+0x18>
40022dcc:	e3a03038 	mov	r3, #56	; 0x38
40022dd0:	e3a02000 	mov	r2, #0
40022dd4:	e1a01002 	mov	r1, r2
40022dd8:	e59f0098 	ldr	r0, [pc, #152]	; 40022e78 <CyU3PUartInit+0xe0>
40022ddc:	ebff9c52 	bl	40009f2c <_txe_mutex_create>
40022de0:	e3a00d96 	mov	r0, #9600	; 0x2580
40022de4:	ebffc506 	bl	40014204 <CyU3PUartSetClock>
40022de8:	e1a04000 	mov	r4, r0
40022dec:	e3540000 	cmp	r4, #0
40022df0:	0a000001 	beq	40022dfc <CyU3PUartInit+0x64>
40022df4:	e1a00004 	mov	r0, r4
40022df8:	eaffffec 	b	40022db0 <CyU3PUartInit+0x18>
40022dfc:	e59f1078 	ldr	r1, [pc, #120]	; 40022e7c <CyU3PUartInit+0xe4>
40022e00:	e3a00003 	mov	r0, #3
40022e04:	ebffc3e0 	bl	40013d8c <CyU3PLppInit>
40022e08:	e1a04000 	mov	r4, r0
40022e0c:	e3540000 	cmp	r4, #0
40022e10:	0a000001 	beq	40022e1c <CyU3PUartInit+0x84>
40022e14:	e1a00004 	mov	r0, r4
40022e18:	eaffffe4 	b	40022db0 <CyU3PUartInit+0x18>
40022e1c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e20:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022e24:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022e28:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022e2c:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022e30:	e3a0000a 	mov	r0, #10
40022e34:	ebffc1d8 	bl	4001359c <CyU3PBusyWait>
40022e38:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e3c:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022e40:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022e44:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022e48:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022e4c:	e1a00000 	nop			; (mov r0, r0)
40022e50:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e54:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022e58:	e3100001 	tst	r0, #1
40022e5c:	0afffffb 	beq	40022e50 <CyU3PUartInit+0xb8>
40022e60:	e3a00001 	mov	r0, #1
40022e64:	e59f1008 	ldr	r1, [pc, #8]	; 40022e74 <CyU3PUartInit+0xdc>
40022e68:	e5810000 	str	r0, [r1]
40022e6c:	e3a00000 	mov	r0, #0
40022e70:	eaffffce 	b	40022db0 <CyU3PUartInit+0x18>
40022e74:	40030f04 	.word	0x40030f04
40022e78:	40032e1c 	.word	0x40032e1c
40022e7c:	40022e80 	.word	0x40022e80

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022e80 <CyU3PUartInt_ThreadHandler>:
40022e80:	e92d4070 	push	{r4, r5, r6, lr}
40022e84:	ebffffac 	bl	40022d3c <CyU3PUartGetLock>
40022e88:	e1a05000 	mov	r5, r0
40022e8c:	e3550000 	cmp	r5, #0
40022e90:	0a000000 	beq	40022e98 <CyU3PUartInt_ThreadHandler+0x18>
40022e94:	e8bd8070 	pop	{r4, r5, r6, pc}
40022e98:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e9c:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40022ea0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022ea4:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40022ea8:	e0004001 	and	r4, r0, r1
40022eac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022eb0:	e5804808 	str	r4, [r0, #2056]	; 0x808
40022eb4:	e59f0078 	ldr	r0, [pc, #120]	; 40022f34 <CyU3PUartInt_ThreadHandler+0xb4>
40022eb8:	e5900000 	ldr	r0, [r0]
40022ebc:	e3500000 	cmp	r0, #0
40022ec0:	1a000001 	bne	40022ecc <CyU3PUartInt_ThreadHandler+0x4c>
40022ec4:	eb00001b 	bl	40022f38 <CyU3PUartReleaseLock>
40022ec8:	eafffff1 	b	40022e94 <CyU3PUartInt_ThreadHandler+0x14>
40022ecc:	e3140001 	tst	r4, #1
40022ed0:	0a000004 	beq	40022ee8 <CyU3PUartInt_ThreadHandler+0x68>
40022ed4:	e3a01000 	mov	r1, #0
40022ed8:	e1a00001 	mov	r0, r1
40022edc:	e59f2050 	ldr	r2, [pc, #80]	; 40022f34 <CyU3PUartInt_ThreadHandler+0xb4>
40022ee0:	e5922000 	ldr	r2, [r2]
40022ee4:	e12fff32 	blx	r2
40022ee8:	e3140008 	tst	r4, #8
40022eec:	0a000004 	beq	40022f04 <CyU3PUartInt_ThreadHandler+0x84>
40022ef0:	e3a01000 	mov	r1, #0
40022ef4:	e3a00001 	mov	r0, #1
40022ef8:	e59f2034 	ldr	r2, [pc, #52]	; 40022f34 <CyU3PUartInt_ThreadHandler+0xb4>
40022efc:	e5922000 	ldr	r2, [r2]
40022f00:	e12fff32 	blx	r2
40022f04:	e3140c02 	tst	r4, #512	; 0x200
40022f08:	0a000007 	beq	40022f2c <CyU3PUartInt_ThreadHandler+0xac>
40022f0c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022f10:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
40022f14:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40022f18:	e1a01c20 	lsr	r1, r0, #24
40022f1c:	e3a00002 	mov	r0, #2
40022f20:	e59f200c 	ldr	r2, [pc, #12]	; 40022f34 <CyU3PUartInt_ThreadHandler+0xb4>
40022f24:	e5922000 	ldr	r2, [r2]
40022f28:	e12fff32 	blx	r2
40022f2c:	eb000001 	bl	40022f38 <CyU3PUartReleaseLock>
40022f30:	eaffffd7 	b	40022e94 <CyU3PUartInt_ThreadHandler+0x14>
40022f34:	40030f08 	.word	0x40030f08

Disassembly of section i.CyU3PUartReleaseLock:

40022f38 <CyU3PUartReleaseLock>:
40022f38:	e92d4010 	push	{r4, lr}
40022f3c:	e59f0030 	ldr	r0, [pc, #48]	; 40022f74 <CyU3PUartReleaseLock+0x3c>
40022f40:	e5900000 	ldr	r0, [r0]
40022f44:	e3500000 	cmp	r0, #0
40022f48:	1a000001 	bne	40022f54 <CyU3PUartReleaseLock+0x1c>
40022f4c:	e3a00044 	mov	r0, #68	; 0x44
40022f50:	e8bd8010 	pop	{r4, pc}
40022f54:	e59f001c 	ldr	r0, [pc, #28]	; 40022f78 <CyU3PUartReleaseLock+0x40>
40022f58:	ebff9ca6 	bl	4000a1f8 <_txe_mutex_put>
40022f5c:	e3500000 	cmp	r0, #0
40022f60:	0a000001 	beq	40022f6c <CyU3PUartReleaseLock+0x34>
40022f64:	e3a0001d 	mov	r0, #29
40022f68:	eafffff8 	b	40022f50 <CyU3PUartReleaseLock+0x18>
40022f6c:	e3a00000 	mov	r0, #0
40022f70:	eafffff6 	b	40022f50 <CyU3PUartReleaseLock+0x18>
40022f74:	40030f04 	.word	0x40030f04
40022f78:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40022f7c <CyU3PUartSetConfig>:
40022f7c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022f80:	e1a04000 	mov	r4, r0
40022f84:	e1a05001 	mov	r5, r1
40022f88:	e3a07000 	mov	r7, #0
40022f8c:	e59f01f0 	ldr	r0, [pc, #496]	; 40023184 <CyU3PUartSetConfig+0x208>
40022f90:	e5900000 	ldr	r0, [r0]
40022f94:	e3500000 	cmp	r0, #0
40022f98:	1a000001 	bne	40022fa4 <CyU3PUartSetConfig+0x28>
40022f9c:	e3a00042 	mov	r0, #66	; 0x42
40022fa0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022fa4:	e3540000 	cmp	r4, #0
40022fa8:	1a000001 	bne	40022fb4 <CyU3PUartSetConfig+0x38>
40022fac:	e3a00041 	mov	r0, #65	; 0x41
40022fb0:	eafffffa 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40022fb4:	e5940004 	ldr	r0, [r4, #4]
40022fb8:	e5941000 	ldr	r1, [r4]
40022fbc:	e1900001 	orrs	r0, r0, r1
40022fc0:	1a000001 	bne	40022fcc <CyU3PUartSetConfig+0x50>
40022fc4:	e3a00040 	mov	r0, #64	; 0x40
40022fc8:	eafffff4 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40022fcc:	e5d40015 	ldrb	r0, [r4, #21]
40022fd0:	e3500003 	cmp	r0, #3
40022fd4:	ba000001 	blt	40022fe0 <CyU3PUartSetConfig+0x64>
40022fd8:	e3a00040 	mov	r0, #64	; 0x40
40022fdc:	eaffffef 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40022fe0:	e5d40014 	ldrb	r0, [r4, #20]
40022fe4:	e3500001 	cmp	r0, #1
40022fe8:	0a000004 	beq	40023000 <CyU3PUartSetConfig+0x84>
40022fec:	e5d40014 	ldrb	r0, [r4, #20]
40022ff0:	e3500002 	cmp	r0, #2
40022ff4:	0a000001 	beq	40023000 <CyU3PUartSetConfig+0x84>
40022ff8:	e3a00040 	mov	r0, #64	; 0x40
40022ffc:	eaffffe7 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40023000:	e594000c 	ldr	r0, [r4, #12]
40023004:	e3500000 	cmp	r0, #0
40023008:	1a000003 	bne	4002301c <CyU3PUartSetConfig+0xa0>
4002300c:	e3550000 	cmp	r5, #0
40023010:	0a000001 	beq	4002301c <CyU3PUartSetConfig+0xa0>
40023014:	e3a00040 	mov	r0, #64	; 0x40
40023018:	eaffffe0 	b	40022fa0 <CyU3PUartSetConfig+0x24>
4002301c:	ebffff46 	bl	40022d3c <CyU3PUartGetLock>
40023020:	e1a06000 	mov	r6, r0
40023024:	e3560000 	cmp	r6, #0
40023028:	0a000001 	beq	40023034 <CyU3PUartSetConfig+0xb8>
4002302c:	e3a0001d 	mov	r0, #29
40023030:	eaffffda 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40023034:	e5940010 	ldr	r0, [r4, #16]
40023038:	ebffc471 	bl	40014204 <CyU3PUartSetClock>
4002303c:	e1a06000 	mov	r6, r0
40023040:	e3560000 	cmp	r6, #0
40023044:	0a000002 	beq	40023054 <CyU3PUartSetConfig+0xd8>
40023048:	ebffffba 	bl	40022f38 <CyU3PUartReleaseLock>
4002304c:	e1a00006 	mov	r0, r6
40023050:	eaffffd2 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40023054:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023058:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
4002305c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023060:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023064:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023068:	e5940004 	ldr	r0, [r4, #4]
4002306c:	e3500000 	cmp	r0, #0
40023070:	0a000001 	beq	4002307c <CyU3PUartSetConfig+0x100>
40023074:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40023078:	e3877001 	orr	r7, r7, #1
4002307c:	e5940000 	ldr	r0, [r4]
40023080:	e3500000 	cmp	r0, #0
40023084:	0a000000 	beq	4002308c <CyU3PUartSetConfig+0x110>
40023088:	e3877002 	orr	r7, r7, #2
4002308c:	e5940008 	ldr	r0, [r4, #8]
40023090:	e3500000 	cmp	r0, #0
40023094:	0a000000 	beq	4002309c <CyU3PUartSetConfig+0x120>
40023098:	e3877a06 	orr	r7, r7, #24576	; 0x6000
4002309c:	e594000c 	ldr	r0, [r4, #12]
400230a0:	e3500000 	cmp	r0, #0
400230a4:	0a000004 	beq	400230bc <CyU3PUartSetConfig+0x140>
400230a8:	e3877b01 	orr	r7, r7, #1024	; 0x400
400230ac:	e3a00001 	mov	r0, #1
400230b0:	e59f10d0 	ldr	r1, [pc, #208]	; 40023188 <CyU3PUartSetConfig+0x20c>
400230b4:	e5810000 	str	r0, [r1]
400230b8:	ea000002 	b	400230c8 <CyU3PUartSetConfig+0x14c>
400230bc:	e3a00000 	mov	r0, #0
400230c0:	e59f10c0 	ldr	r1, [pc, #192]	; 40023188 <CyU3PUartSetConfig+0x20c>
400230c4:	e5810000 	str	r0, [r1]
400230c8:	e5d40014 	ldrb	r0, [r4, #20]
400230cc:	e3a01c03 	mov	r1, #768	; 0x300
400230d0:	e0010400 	and	r0, r1, r0, lsl #8
400230d4:	e1877000 	orr	r7, r7, r0
400230d8:	e5d40015 	ldrb	r0, [r4, #21]
400230dc:	e3500001 	cmp	r0, #1
400230e0:	0a000002 	beq	400230f0 <CyU3PUartSetConfig+0x174>
400230e4:	e3500002 	cmp	r0, #2
400230e8:	1a000006 	bne	40023108 <CyU3PUartSetConfig+0x18c>
400230ec:	ea000002 	b	400230fc <CyU3PUartSetConfig+0x180>
400230f0:	e1a00000 	nop			; (mov r0, r0)
400230f4:	e3877008 	orr	r7, r7, #8
400230f8:	ea000004 	b	40023110 <CyU3PUartSetConfig+0x194>
400230fc:	e1a00000 	nop			; (mov r0, r0)
40023100:	e3877018 	orr	r7, r7, #24
40023104:	ea000001 	b	40023110 <CyU3PUartSetConfig+0x194>
40023108:	e1a00000 	nop			; (mov r0, r0)
4002310c:	e1a00000 	nop			; (mov r0, r0)
40023110:	e1a00000 	nop			; (mov r0, r0)
40023114:	e3877807 	orr	r7, r7, #458752	; 0x70000
40023118:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002311c:	e5807800 	str	r7, [r0, #2048]	; 0x800
40023120:	e59f0064 	ldr	r0, [pc, #100]	; 4002318c <CyU3PUartSetConfig+0x210>
40023124:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023128:	e5810818 	str	r0, [r1, #2072]	; 0x818
4002312c:	e1a00005 	mov	r0, r5
40023130:	ebfffefd 	bl	40022d2c <CyU3PRegisterUartCallBack>
40023134:	e3550000 	cmp	r5, #0
40023138:	0a000003 	beq	4002314c <CyU3PUartSetConfig+0x1d0>
4002313c:	e59f004c 	ldr	r0, [pc, #76]	; 40023190 <CyU3PUartSetConfig+0x214>
40023140:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023144:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023148:	ea000002 	b	40023158 <CyU3PUartSetConfig+0x1dc>
4002314c:	e3a00000 	mov	r0, #0
40023150:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023154:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023158:	e3a00001 	mov	r0, #1
4002315c:	e59f1030 	ldr	r1, [pc, #48]	; 40023194 <CyU3PUartSetConfig+0x218>
40023160:	e5810000 	str	r0, [r1]
40023164:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023168:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
4002316c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023170:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023174:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023178:	ebffff6e 	bl	40022f38 <CyU3PUartReleaseLock>
4002317c:	e3a00000 	mov	r0, #0
40023180:	eaffff86 	b	40022fa0 <CyU3PUartSetConfig+0x24>
40023184:	40030f04 	.word	0x40030f04
40023188:	40030efc 	.word	0x40030efc
4002318c:	00000603 	.word	0x00000603
40023190:	00000309 	.word	0x00000309
40023194:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023198 <CyU3PUartTxSetBlockXfer>:
40023198:	e92d4070 	push	{r4, r5, r6, lr}
4002319c:	e1a05000 	mov	r5, r0
400231a0:	e59f003c 	ldr	r0, [pc, #60]	; 400231e4 <CyU3PUartTxSetBlockXfer+0x4c>
400231a4:	e5900000 	ldr	r0, [r0]
400231a8:	e3500000 	cmp	r0, #0
400231ac:	1a000001 	bne	400231b8 <CyU3PUartTxSetBlockXfer+0x20>
400231b0:	e3a00044 	mov	r0, #68	; 0x44
400231b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400231b8:	ebfffedf 	bl	40022d3c <CyU3PUartGetLock>
400231bc:	e1a04000 	mov	r4, r0
400231c0:	e3540000 	cmp	r4, #0
400231c4:	0a000001 	beq	400231d0 <CyU3PUartTxSetBlockXfer+0x38>
400231c8:	e1a00004 	mov	r0, r4
400231cc:	eafffff8 	b	400231b4 <CyU3PUartTxSetBlockXfer+0x1c>
400231d0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231d4:	e5805820 	str	r5, [r0, #2080]	; 0x820
400231d8:	ebffff56 	bl	40022f38 <CyU3PUartReleaseLock>
400231dc:	e3a00000 	mov	r0, #0
400231e0:	eafffff3 	b	400231b4 <CyU3PUartTxSetBlockXfer+0x1c>
400231e4:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PI2cErrorRecovery:

400231e8 <CyU3PI2cErrorRecovery>:
400231e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400231ec:	e1a04000 	mov	r4, r0
400231f0:	e3a07000 	mov	r7, #0
400231f4:	e3a08000 	mov	r8, #0
400231f8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231fc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023200:	e59f1164 	ldr	r1, [pc, #356]	; 4002336c <CyU3PI2cErrorRecovery+0x184>
40023204:	e5810000 	str	r0, [r1]
40023208:	e59f5160 	ldr	r5, [pc, #352]	; 40023370 <CyU3PI2cErrorRecovery+0x188>
4002320c:	e1a00000 	nop			; (mov r0, r0)
40023210:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023214:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023218:	e3100201 	tst	r0, #268435456	; 0x10000000
4002321c:	0a000002 	beq	4002322c <CyU3PI2cErrorRecovery+0x44>
40023220:	e1b00005 	movs	r0, r5
40023224:	e2455001 	sub	r5, r5, #1
40023228:	1afffff8 	bne	40023210 <CyU3PI2cErrorRecovery+0x28>
4002322c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023230:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
40023234:	e3a00000 	mov	r0, #0
40023238:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002323c:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023240:	e3e00000 	mvn	r0, #0
40023244:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023248:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002324c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023250:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023254:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023258:	e3a00005 	mov	r0, #5
4002325c:	ebffc0ce 	bl	4001359c <CyU3PBusyWait>
40023260:	e3540000 	cmp	r4, #0
40023264:	0a000032 	beq	40023334 <CyU3PI2cErrorRecovery+0x14c>
40023268:	e3a00000 	mov	r0, #0
4002326c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023270:	e5810438 	str	r0, [r1, #1080]	; 0x438
40023274:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023278:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002327c:	e3100008 	tst	r0, #8
40023280:	1a000000 	bne	40023288 <CyU3PI2cErrorRecovery+0xa0>
40023284:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023288:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002328c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023290:	e3100002 	tst	r0, #2
40023294:	0a000000 	beq	4002329c <CyU3PI2cErrorRecovery+0xb4>
40023298:	e3a07202 	mov	r7, #536870912	; 0x20000000
4002329c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232a0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400232a4:	e1800007 	orr	r0, r0, r7
400232a8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232ac:	e5810400 	str	r0, [r1, #1024]	; 0x400
400232b0:	e1e05741 	mvn	r5, r1, asr #14
400232b4:	ea000004 	b	400232cc <CyU3PI2cErrorRecovery+0xe4>
400232b8:	e1b00005 	movs	r0, r5
400232bc:	e2455001 	sub	r5, r5, #1
400232c0:	1a000001 	bne	400232cc <CyU3PI2cErrorRecovery+0xe4>
400232c4:	e3a08054 	mov	r8, #84	; 0x54
400232c8:	ea000003 	b	400232dc <CyU3PI2cErrorRecovery+0xf4>
400232cc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232d0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400232d4:	e3100008 	tst	r0, #8
400232d8:	0afffff6 	beq	400232b8 <CyU3PI2cErrorRecovery+0xd0>
400232dc:	e1a00000 	nop			; (mov r0, r0)
400232e0:	e3580000 	cmp	r8, #0
400232e4:	1a00000b 	bne	40023318 <CyU3PI2cErrorRecovery+0x130>
400232e8:	e59f5080 	ldr	r5, [pc, #128]	; 40023370 <CyU3PI2cErrorRecovery+0x188>
400232ec:	ea000004 	b	40023304 <CyU3PI2cErrorRecovery+0x11c>
400232f0:	e1b00005 	movs	r0, r5
400232f4:	e2455001 	sub	r5, r5, #1
400232f8:	1a000001 	bne	40023304 <CyU3PI2cErrorRecovery+0x11c>
400232fc:	e3a08054 	mov	r8, #84	; 0x54
40023300:	ea000003 	b	40023314 <CyU3PI2cErrorRecovery+0x12c>
40023304:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023308:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002330c:	e3100002 	tst	r0, #2
40023310:	1afffff6 	bne	400232f0 <CyU3PI2cErrorRecovery+0x108>
40023314:	e1a00000 	nop			; (mov r0, r0)
40023318:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002331c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023320:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
40023324:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023328:	e5810400 	str	r0, [r1, #1024]	; 0x400
4002332c:	e3a00001 	mov	r0, #1
40023330:	ebffc099 	bl	4001359c <CyU3PBusyWait>
40023334:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023338:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002333c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023340:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023344:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023348:	e3a00005 	mov	r0, #5
4002334c:	ebffc092 	bl	4001359c <CyU3PBusyWait>
40023350:	e3e00000 	mvn	r0, #0
40023354:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023358:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002335c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023360:	e580640c 	str	r6, [r0, #1036]	; 0x40c
40023364:	e1a00008 	mov	r0, r8
40023368:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002336c:	40030f1c 	.word	0x40030f1c
40023370:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

40023374 <CyU3PI2cGetLock>:
40023374:	e92d4010 	push	{r4, lr}
40023378:	e3a04000 	mov	r4, #0
4002337c:	e59f0044 	ldr	r0, [pc, #68]	; 400233c8 <CyU3PI2cGetLock+0x54>
40023380:	e5900000 	ldr	r0, [r0]
40023384:	e3500000 	cmp	r0, #0
40023388:	1a000001 	bne	40023394 <CyU3PI2cGetLock+0x20>
4002338c:	e3a00044 	mov	r0, #68	; 0x44
40023390:	e8bd8010 	pop	{r4, pc}
40023394:	ebff954d 	bl	400088d0 <_tx_thread_identify>
40023398:	e3500000 	cmp	r0, #0
4002339c:	0a000000 	beq	400233a4 <CyU3PI2cGetLock+0x30>
400233a0:	e3e04000 	mvn	r4, #0
400233a4:	e1a01004 	mov	r1, r4
400233a8:	e59f001c 	ldr	r0, [pc, #28]	; 400233cc <CyU3PI2cGetLock+0x58>
400233ac:	ebff9b5c 	bl	4000a124 <_txe_mutex_get>
400233b0:	e3500000 	cmp	r0, #0
400233b4:	0a000001 	beq	400233c0 <CyU3PI2cGetLock+0x4c>
400233b8:	e3a0001d 	mov	r0, #29
400233bc:	eafffff3 	b	40023390 <CyU3PI2cGetLock+0x1c>
400233c0:	e3a00000 	mov	r0, #0
400233c4:	eafffff1 	b	40023390 <CyU3PI2cGetLock+0x1c>
400233c8:	40030f14 	.word	0x40030f14
400233cc:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

400233d0 <CyU3PI2cInit>:
400233d0:	e92d4010 	push	{r4, lr}
400233d4:	e3a00000 	mov	r0, #0
400233d8:	ebffbe0e 	bl	40012c18 <CyU3PIsLppIOConfigured>
400233dc:	e3500000 	cmp	r0, #0
400233e0:	1a000001 	bne	400233ec <CyU3PI2cInit+0x1c>
400233e4:	e3a00044 	mov	r0, #68	; 0x44
400233e8:	e8bd8010 	pop	{r4, pc}
400233ec:	e59f00bc 	ldr	r0, [pc, #188]	; 400234b0 <CyU3PI2cInit+0xe0>
400233f0:	e5900000 	ldr	r0, [r0]
400233f4:	e3500000 	cmp	r0, #0
400233f8:	0a000001 	beq	40023404 <CyU3PI2cInit+0x34>
400233fc:	e3a00043 	mov	r0, #67	; 0x43
40023400:	eafffff8 	b	400233e8 <CyU3PI2cInit+0x18>
40023404:	e59f00a8 	ldr	r0, [pc, #168]	; 400234b4 <CyU3PI2cInit+0xe4>
40023408:	ebffc1f8 	bl	40013bf0 <CyU3PI2cSetClock>
4002340c:	e1a04000 	mov	r4, r0
40023410:	e3540000 	cmp	r4, #0
40023414:	0a000001 	beq	40023420 <CyU3PI2cInit+0x50>
40023418:	e1a00004 	mov	r0, r4
4002341c:	eafffff1 	b	400233e8 <CyU3PI2cInit+0x18>
40023420:	e59f1090 	ldr	r1, [pc, #144]	; 400234b8 <CyU3PI2cInit+0xe8>
40023424:	e3a00000 	mov	r0, #0
40023428:	ebffc257 	bl	40013d8c <CyU3PLppInit>
4002342c:	e1a04000 	mov	r4, r0
40023430:	e3540000 	cmp	r4, #0
40023434:	0a000001 	beq	40023440 <CyU3PI2cInit+0x70>
40023438:	e1a00004 	mov	r0, r4
4002343c:	eaffffe9 	b	400233e8 <CyU3PI2cInit+0x18>
40023440:	e3a03038 	mov	r3, #56	; 0x38
40023444:	e3a02000 	mov	r2, #0
40023448:	e1a01002 	mov	r1, r2
4002344c:	e59f0068 	ldr	r0, [pc, #104]	; 400234bc <CyU3PI2cInit+0xec>
40023450:	ebff9ab5 	bl	40009f2c <_txe_mutex_create>
40023454:	e3a00000 	mov	r0, #0
40023458:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002345c:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023460:	e3a0000a 	mov	r0, #10
40023464:	ebffc04c 	bl	4001359c <CyU3PBusyWait>
40023468:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002346c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023470:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023474:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023478:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
4002347c:	e1a00000 	nop			; (mov r0, r0)
40023480:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023484:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023488:	e3100001 	tst	r0, #1
4002348c:	0afffffb 	beq	40023480 <CyU3PI2cInit+0xb0>
40023490:	e3a00000 	mov	r0, #0
40023494:	e59f1024 	ldr	r1, [pc, #36]	; 400234c0 <CyU3PI2cInit+0xf0>
40023498:	e5810000 	str	r0, [r1]
4002349c:	e3a00001 	mov	r0, #1
400234a0:	e2411008 	sub	r1, r1, #8
400234a4:	e5810000 	str	r0, [r1]
400234a8:	e3a00000 	mov	r0, #0
400234ac:	eaffffcd 	b	400233e8 <CyU3PI2cInit+0x18>
400234b0:	40030f14 	.word	0x40030f14
400234b4:	000186a0 	.word	0x000186a0
400234b8:	400234c4 	.word	0x400234c4
400234bc:	40032e54 	.word	0x40032e54
400234c0:	40030f1c 	.word	0x40030f1c

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

400234c4 <CyU3PI2cInt_ThreadHandler>:
400234c4:	e92d4070 	push	{r4, r5, r6, lr}
400234c8:	ebffffa9 	bl	40023374 <CyU3PI2cGetLock>
400234cc:	e1a05000 	mov	r5, r0
400234d0:	e3550000 	cmp	r5, #0
400234d4:	0a000000 	beq	400234dc <CyU3PI2cInt_ThreadHandler+0x18>
400234d8:	e8bd8070 	pop	{r4, r5, r6, pc}
400234dc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234e0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400234e4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400234e8:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
400234ec:	e0004001 	and	r4, r0, r1
400234f0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234f4:	e5804408 	str	r4, [r0, #1032]	; 0x408
400234f8:	e59f00b0 	ldr	r0, [pc, #176]	; 400235b0 <CyU3PI2cInt_ThreadHandler+0xec>
400234fc:	e5900000 	ldr	r0, [r0]
40023500:	e3500000 	cmp	r0, #0
40023504:	1a000001 	bne	40023510 <CyU3PI2cInt_ThreadHandler+0x4c>
40023508:	eb000098 	bl	40023770 <CyU3PI2cReleaseLock>
4002350c:	eafffff1 	b	400234d8 <CyU3PI2cInt_ThreadHandler+0x14>
40023510:	e3140001 	tst	r4, #1
40023514:	0a000004 	beq	4002352c <CyU3PI2cInt_ThreadHandler+0x68>
40023518:	e3a01000 	mov	r1, #0
4002351c:	e1a00001 	mov	r0, r1
40023520:	e59f2088 	ldr	r2, [pc, #136]	; 400235b0 <CyU3PI2cInt_ThreadHandler+0xec>
40023524:	e5922000 	ldr	r2, [r2]
40023528:	e12fff32 	blx	r2
4002352c:	e3140008 	tst	r4, #8
40023530:	0a000004 	beq	40023548 <CyU3PI2cInt_ThreadHandler+0x84>
40023534:	e3a01000 	mov	r1, #0
40023538:	e3a00001 	mov	r0, #1
4002353c:	e59f206c 	ldr	r2, [pc, #108]	; 400235b0 <CyU3PI2cInt_ThreadHandler+0xec>
40023540:	e5922000 	ldr	r2, [r2]
40023544:	e12fff32 	blx	r2
40023548:	e3140040 	tst	r4, #64	; 0x40
4002354c:	0a000004 	beq	40023564 <CyU3PI2cInt_ThreadHandler+0xa0>
40023550:	e3a01000 	mov	r1, #0
40023554:	e3a00002 	mov	r0, #2
40023558:	e59f2050 	ldr	r2, [pc, #80]	; 400235b0 <CyU3PI2cInt_ThreadHandler+0xec>
4002355c:	e5922000 	ldr	r2, [r2]
40023560:	e12fff32 	blx	r2
40023564:	e3140080 	tst	r4, #128	; 0x80
40023568:	0a000004 	beq	40023580 <CyU3PI2cInt_ThreadHandler+0xbc>
4002356c:	e3a01000 	mov	r1, #0
40023570:	e3a00003 	mov	r0, #3
40023574:	e59f2034 	ldr	r2, [pc, #52]	; 400235b0 <CyU3PI2cInt_ThreadHandler+0xec>
40023578:	e5922000 	ldr	r2, [r2]
4002357c:	e12fff32 	blx	r2
40023580:	e3140c01 	tst	r4, #256	; 0x100
40023584:	0a000007 	beq	400235a8 <CyU3PI2cInt_ThreadHandler+0xe4>
40023588:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002358c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023590:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023594:	e1a01c20 	lsr	r1, r0, #24
40023598:	e3a00004 	mov	r0, #4
4002359c:	e59f200c 	ldr	r2, [pc, #12]	; 400235b0 <CyU3PI2cInt_ThreadHandler+0xec>
400235a0:	e5922000 	ldr	r2, [r2]
400235a4:	e12fff32 	blx	r2
400235a8:	eb000070 	bl	40023770 <CyU3PI2cReleaseLock>
400235ac:	eaffffc9 	b	400234d8 <CyU3PI2cInt_ThreadHandler+0x14>
400235b0:	40030f18 	.word	0x40030f18

Disassembly of section i.CyU3PI2cReceiveBytes:

400235b4 <CyU3PI2cReceiveBytes>:
400235b4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400235b8:	e1a04000 	mov	r4, r0
400235bc:	e1a05001 	mov	r5, r1
400235c0:	e1a06002 	mov	r6, r2
400235c4:	e1a07003 	mov	r7, r3
400235c8:	e59f0194 	ldr	r0, [pc, #404]	; 40023764 <CyU3PI2cReceiveBytes+0x1b0>
400235cc:	e5900000 	ldr	r0, [r0]
400235d0:	e3500000 	cmp	r0, #0
400235d4:	1a000001 	bne	400235e0 <CyU3PI2cReceiveBytes+0x2c>
400235d8:	e3a00044 	mov	r0, #68	; 0x44
400235dc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400235e0:	e59f0180 	ldr	r0, [pc, #384]	; 40023768 <CyU3PI2cReceiveBytes+0x1b4>
400235e4:	e5900000 	ldr	r0, [r0]
400235e8:	e3500000 	cmp	r0, #0
400235ec:	0a000001 	beq	400235f8 <CyU3PI2cReceiveBytes+0x44>
400235f0:	e3a00044 	mov	r0, #68	; 0x44
400235f4:	eafffff8 	b	400235dc <CyU3PI2cReceiveBytes+0x28>
400235f8:	e3550000 	cmp	r5, #0
400235fc:	0a000001 	beq	40023608 <CyU3PI2cReceiveBytes+0x54>
40023600:	e3540000 	cmp	r4, #0
40023604:	1a000001 	bne	40023610 <CyU3PI2cReceiveBytes+0x5c>
40023608:	e3a00041 	mov	r0, #65	; 0x41
4002360c:	eafffff2 	b	400235dc <CyU3PI2cReceiveBytes+0x28>
40023610:	e5d40008 	ldrb	r0, [r4, #8]
40023614:	e3500000 	cmp	r0, #0
40023618:	0a000002 	beq	40023628 <CyU3PI2cReceiveBytes+0x74>
4002361c:	e5d40008 	ldrb	r0, [r4, #8]
40023620:	e3500008 	cmp	r0, #8
40023624:	da000001 	ble	40023630 <CyU3PI2cReceiveBytes+0x7c>
40023628:	e3a00040 	mov	r0, #64	; 0x40
4002362c:	eaffffea 	b	400235dc <CyU3PI2cReceiveBytes+0x28>
40023630:	e3560000 	cmp	r6, #0
40023634:	1a000001 	bne	40023640 <CyU3PI2cReceiveBytes+0x8c>
40023638:	e3a00000 	mov	r0, #0
4002363c:	eaffffe6 	b	400235dc <CyU3PI2cReceiveBytes+0x28>
40023640:	ebffff4b 	bl	40023374 <CyU3PI2cGetLock>
40023644:	e1a08000 	mov	r8, r0
40023648:	e3580000 	cmp	r8, #0
4002364c:	0a000001 	beq	40023658 <CyU3PI2cReceiveBytes+0xa4>
40023650:	e1a00008 	mov	r0, r8
40023654:	eaffffe0 	b	400235dc <CyU3PI2cReceiveBytes+0x28>
40023658:	e3a0bd07 	mov	fp, #448	; 0x1c0
4002365c:	e1a00000 	nop			; (mov r0, r0)
40023660:	e3a02001 	mov	r2, #1
40023664:	e1a01006 	mov	r1, r6
40023668:	e1a00004 	mov	r0, r4
4002366c:	eb000166 	bl	40023c0c <MyI2cSendCommand>
40023670:	e1a08000 	mov	r8, r0
40023674:	e3580000 	cmp	r8, #0
40023678:	0a000000 	beq	40023680 <CyU3PI2cReceiveBytes+0xcc>
4002367c:	ea00002a 	b	4002372c <CyU3PI2cReceiveBytes+0x178>
40023680:	e3a0a000 	mov	sl, #0
40023684:	ea000020 	b	4002370c <CyU3PI2cReceiveBytes+0x158>
40023688:	e59f00dc 	ldr	r0, [pc, #220]	; 4002376c <CyU3PI2cReceiveBytes+0x1b8>
4002368c:	e58d0000 	str	r0, [sp]
40023690:	ea000006 	b	400236b0 <CyU3PI2cReceiveBytes+0xfc>
40023694:	e59d0000 	ldr	r0, [sp]
40023698:	e2401001 	sub	r1, r0, #1
4002369c:	e3500000 	cmp	r0, #0
400236a0:	e58d1000 	str	r1, [sp]
400236a4:	1a000001 	bne	400236b0 <CyU3PI2cReceiveBytes+0xfc>
400236a8:	e3a08055 	mov	r8, #85	; 0x55
400236ac:	ea000004 	b	400236c4 <CyU3PI2cReceiveBytes+0x110>
400236b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236b4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236b8:	e38b1002 	orr	r1, fp, #2
400236bc:	e1100001 	tst	r0, r1
400236c0:	0afffff3 	beq	40023694 <CyU3PI2cReceiveBytes+0xe0>
400236c4:	e1a00000 	nop			; (mov r0, r0)
400236c8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236cc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236d0:	e110000b 	tst	r0, fp
400236d4:	0a000000 	beq	400236dc <CyU3PI2cReceiveBytes+0x128>
400236d8:	e3a0804a 	mov	r8, #74	; 0x4a
400236dc:	e3580000 	cmp	r8, #0
400236e0:	0a000005 	beq	400236fc <CyU3PI2cReceiveBytes+0x148>
400236e4:	e3a00001 	mov	r0, #1
400236e8:	ebfffebe 	bl	400231e8 <CyU3PI2cErrorRecovery>
400236ec:	e3500000 	cmp	r0, #0
400236f0:	0a000000 	beq	400236f8 <CyU3PI2cReceiveBytes+0x144>
400236f4:	e3a08054 	mov	r8, #84	; 0x54
400236f8:	ea000005 	b	40023714 <CyU3PI2cReceiveBytes+0x160>
400236fc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023700:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
40023704:	e7c5000a 	strb	r0, [r5, sl]
40023708:	e28aa001 	add	sl, sl, #1
4002370c:	e15a0006 	cmp	sl, r6
40023710:	3affffdc 	bcc	40023688 <CyU3PI2cReceiveBytes+0xd4>
40023714:	e1a00000 	nop			; (mov r0, r0)
40023718:	e3580000 	cmp	r8, #0
4002371c:	0a000002 	beq	4002372c <CyU3PI2cReceiveBytes+0x178>
40023720:	e1b00007 	movs	r0, r7
40023724:	e2477001 	sub	r7, r7, #1
40023728:	1affffcc 	bne	40023660 <CyU3PI2cReceiveBytes+0xac>
4002372c:	e1a00000 	nop			; (mov r0, r0)
40023730:	e358004a 	cmp	r8, #74	; 0x4a
40023734:	1a000007 	bne	40023758 <CyU3PI2cReceiveBytes+0x1a4>
40023738:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002373c:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
40023740:	e3190040 	tst	r9, #64	; 0x40
40023744:	0a000000 	beq	4002374c <CyU3PI2cReceiveBytes+0x198>
40023748:	e3a08045 	mov	r8, #69	; 0x45
4002374c:	e3190080 	tst	r9, #128	; 0x80
40023750:	0a000000 	beq	40023758 <CyU3PI2cReceiveBytes+0x1a4>
40023754:	e3a08055 	mov	r8, #85	; 0x55
40023758:	eb000004 	bl	40023770 <CyU3PI2cReleaseLock>
4002375c:	e1a00008 	mov	r0, r8
40023760:	eaffff9d 	b	400235dc <CyU3PI2cReceiveBytes+0x28>
40023764:	40030f10 	.word	0x40030f10
40023768:	40030f0c 	.word	0x40030f0c
4002376c:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023770 <CyU3PI2cReleaseLock>:
40023770:	e92d4010 	push	{r4, lr}
40023774:	e59f0030 	ldr	r0, [pc, #48]	; 400237ac <CyU3PI2cReleaseLock+0x3c>
40023778:	e5900000 	ldr	r0, [r0]
4002377c:	e3500000 	cmp	r0, #0
40023780:	1a000001 	bne	4002378c <CyU3PI2cReleaseLock+0x1c>
40023784:	e3a00044 	mov	r0, #68	; 0x44
40023788:	e8bd8010 	pop	{r4, pc}
4002378c:	e59f001c 	ldr	r0, [pc, #28]	; 400237b0 <CyU3PI2cReleaseLock+0x40>
40023790:	ebff9a98 	bl	4000a1f8 <_txe_mutex_put>
40023794:	e3500000 	cmp	r0, #0
40023798:	0a000001 	beq	400237a4 <CyU3PI2cReleaseLock+0x34>
4002379c:	e3a0001d 	mov	r0, #29
400237a0:	eafffff8 	b	40023788 <CyU3PI2cReleaseLock+0x18>
400237a4:	e3a00000 	mov	r0, #0
400237a8:	eafffff6 	b	40023788 <CyU3PI2cReleaseLock+0x18>
400237ac:	40030f14 	.word	0x40030f14
400237b0:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

400237b4 <CyU3PI2cSetConfig>:
400237b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400237b8:	e1a04000 	mov	r4, r0
400237bc:	e1a05001 	mov	r5, r1
400237c0:	e59f01e0 	ldr	r0, [pc, #480]	; 400239a8 <CyU3PI2cSetConfig+0x1f4>
400237c4:	e5900000 	ldr	r0, [r0]
400237c8:	e3500000 	cmp	r0, #0
400237cc:	1a000001 	bne	400237d8 <CyU3PI2cSetConfig+0x24>
400237d0:	e3a00042 	mov	r0, #66	; 0x42
400237d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400237d8:	e3540000 	cmp	r4, #0
400237dc:	1a000001 	bne	400237e8 <CyU3PI2cSetConfig+0x34>
400237e0:	e3a00041 	mov	r0, #65	; 0x41
400237e4:	eafffffa 	b	400237d4 <CyU3PI2cSetConfig+0x20>
400237e8:	e5940004 	ldr	r0, [r4, #4]
400237ec:	e3500000 	cmp	r0, #0
400237f0:	1a000003 	bne	40023804 <CyU3PI2cSetConfig+0x50>
400237f4:	e3550000 	cmp	r5, #0
400237f8:	0a000001 	beq	40023804 <CyU3PI2cSetConfig+0x50>
400237fc:	e3a00040 	mov	r0, #64	; 0x40
40023800:	eafffff3 	b	400237d4 <CyU3PI2cSetConfig+0x20>
40023804:	ebfffeda 	bl	40023374 <CyU3PI2cGetLock>
40023808:	e1a06000 	mov	r6, r0
4002380c:	e3560000 	cmp	r6, #0
40023810:	0a000001 	beq	4002381c <CyU3PI2cSetConfig+0x68>
40023814:	e1a00006 	mov	r0, r6
40023818:	eaffffed 	b	400237d4 <CyU3PI2cSetConfig+0x20>
4002381c:	e3a00000 	mov	r0, #0
40023820:	e59f1184 	ldr	r1, [pc, #388]	; 400239ac <CyU3PI2cSetConfig+0x1f8>
40023824:	e5810000 	str	r0, [r1]
40023828:	e5940000 	ldr	r0, [r4]
4002382c:	ebffc0ef 	bl	40013bf0 <CyU3PI2cSetClock>
40023830:	e1a06000 	mov	r6, r0
40023834:	e3560000 	cmp	r6, #0
40023838:	1a00000e 	bne	40023878 <CyU3PI2cSetConfig+0xc4>
4002383c:	e3a00206 	mov	r0, #1610612736	; 0x60000000
40023840:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023844:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023848:	e1e07741 	mvn	r7, r1, asr #14
4002384c:	ea000004 	b	40023864 <CyU3PI2cSetConfig+0xb0>
40023850:	e1b00007 	movs	r0, r7
40023854:	e2477001 	sub	r7, r7, #1
40023858:	1a000001 	bne	40023864 <CyU3PI2cSetConfig+0xb0>
4002385c:	e3a06054 	mov	r6, #84	; 0x54
40023860:	ea000003 	b	40023874 <CyU3PI2cSetConfig+0xc0>
40023864:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023868:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002386c:	e3100008 	tst	r0, #8
40023870:	0afffff6 	beq	40023850 <CyU3PI2cSetConfig+0x9c>
40023874:	e1a00000 	nop			; (mov r0, r0)
40023878:	e3560000 	cmp	r6, #0
4002387c:	1a00000b 	bne	400238b0 <CyU3PI2cSetConfig+0xfc>
40023880:	e59f7128 	ldr	r7, [pc, #296]	; 400239b0 <CyU3PI2cSetConfig+0x1fc>
40023884:	ea000004 	b	4002389c <CyU3PI2cSetConfig+0xe8>
40023888:	e1b00007 	movs	r0, r7
4002388c:	e2477001 	sub	r7, r7, #1
40023890:	1a000001 	bne	4002389c <CyU3PI2cSetConfig+0xe8>
40023894:	e3a06054 	mov	r6, #84	; 0x54
40023898:	ea000003 	b	400238ac <CyU3PI2cSetConfig+0xf8>
4002389c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238a0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400238a4:	e3100002 	tst	r0, #2
400238a8:	1afffff6 	bne	40023888 <CyU3PI2cSetConfig+0xd4>
400238ac:	e1a00000 	nop			; (mov r0, r0)
400238b0:	e3560000 	cmp	r6, #0
400238b4:	0a000002 	beq	400238c4 <CyU3PI2cSetConfig+0x110>
400238b8:	ebffffac 	bl	40023770 <CyU3PI2cReleaseLock>
400238bc:	e1a00006 	mov	r0, r6
400238c0:	eaffffc3 	b	400237d4 <CyU3PI2cSetConfig+0x20>
400238c4:	e3a00000 	mov	r0, #0
400238c8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400238cc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400238d0:	e3a06000 	mov	r6, #0
400238d4:	e5940000 	ldr	r0, [r4]
400238d8:	e59f10d4 	ldr	r1, [pc, #212]	; 400239b4 <CyU3PI2cSetConfig+0x200>
400238dc:	e1500001 	cmp	r0, r1
400238e0:	8a000000 	bhi	400238e8 <CyU3PI2cSetConfig+0x134>
400238e4:	e3a06004 	mov	r6, #4
400238e8:	e5940004 	ldr	r0, [r4, #4]
400238ec:	e3500000 	cmp	r0, #0
400238f0:	0a000007 	beq	40023914 <CyU3PI2cSetConfig+0x160>
400238f4:	e3866001 	orr	r6, r6, #1
400238f8:	e3a00001 	mov	r0, #1
400238fc:	e59f10b4 	ldr	r1, [pc, #180]	; 400239b8 <CyU3PI2cSetConfig+0x204>
40023900:	e5810000 	str	r0, [r1]
40023904:	e1d400bc 	ldrh	r0, [r4, #12]
40023908:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002390c:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023910:	ea000005 	b	4002392c <CyU3PI2cSetConfig+0x178>
40023914:	e3a00000 	mov	r0, #0
40023918:	e59f1098 	ldr	r1, [pc, #152]	; 400239b8 <CyU3PI2cSetConfig+0x204>
4002391c:	e5810000 	str	r0, [r1]
40023920:	e59f0094 	ldr	r0, [pc, #148]	; 400239bc <CyU3PI2cSetConfig+0x208>
40023924:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023928:	e5810414 	str	r0, [r1, #1044]	; 0x414
4002392c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023930:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023934:	e59f0084 	ldr	r0, [pc, #132]	; 400239c0 <CyU3PI2cSetConfig+0x20c>
40023938:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002393c:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023940:	e5940008 	ldr	r0, [r4, #8]
40023944:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023948:	e3e00000 	mvn	r0, #0
4002394c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023950:	e1a00005 	mov	r0, r5
40023954:	eb0000a8 	bl	40023bfc <CyU3PRegisterI2cCallBack>
40023958:	e3550000 	cmp	r5, #0
4002395c:	0a000003 	beq	40023970 <CyU3PI2cSetConfig+0x1bc>
40023960:	e59f005c 	ldr	r0, [pc, #92]	; 400239c4 <CyU3PI2cSetConfig+0x210>
40023964:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023968:	e581040c 	str	r0, [r1, #1036]	; 0x40c
4002396c:	ea000002 	b	4002397c <CyU3PI2cSetConfig+0x1c8>
40023970:	e3a00000 	mov	r0, #0
40023974:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023978:	e581040c 	str	r0, [r1, #1036]	; 0x40c
4002397c:	e3a00001 	mov	r0, #1
40023980:	e59f1040 	ldr	r1, [pc, #64]	; 400239c8 <CyU3PI2cSetConfig+0x214>
40023984:	e5810000 	str	r0, [r1]
40023988:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002398c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023990:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023994:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023998:	e5810400 	str	r0, [r1, #1024]	; 0x400
4002399c:	ebffff73 	bl	40023770 <CyU3PI2cReleaseLock>
400239a0:	e3a00000 	mov	r0, #0
400239a4:	eaffff8a 	b	400237d4 <CyU3PI2cSetConfig+0x20>
400239a8:	40030f14 	.word	0x40030f14
400239ac:	40030f1c 	.word	0x40030f1c
400239b0:	00007fff 	.word	0x00007fff
400239b4:	000186a0 	.word	0x000186a0
400239b8:	40030f0c 	.word	0x40030f0c
400239bc:	0000ffff 	.word	0x0000ffff
400239c0:	00000502 	.word	0x00000502
400239c4:	000001c9 	.word	0x000001c9
400239c8:	40030f10 	.word	0x40030f10

Disassembly of section i.CyU3PI2cTransmitBytes:

400239cc <CyU3PI2cTransmitBytes>:
400239cc:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
400239d0:	e1a04000 	mov	r4, r0
400239d4:	e1a05001 	mov	r5, r1
400239d8:	e1a06002 	mov	r6, r2
400239dc:	e59f020c 	ldr	r0, [pc, #524]	; 40023bf0 <CyU3PI2cTransmitBytes+0x224>
400239e0:	e5900000 	ldr	r0, [r0]
400239e4:	e3500000 	cmp	r0, #0
400239e8:	1a000002 	bne	400239f8 <CyU3PI2cTransmitBytes+0x2c>
400239ec:	e3a00044 	mov	r0, #68	; 0x44
400239f0:	e28dd010 	add	sp, sp, #16
400239f4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400239f8:	e59f01f4 	ldr	r0, [pc, #500]	; 40023bf4 <CyU3PI2cTransmitBytes+0x228>
400239fc:	e5900000 	ldr	r0, [r0]
40023a00:	e3500000 	cmp	r0, #0
40023a04:	0a000001 	beq	40023a10 <CyU3PI2cTransmitBytes+0x44>
40023a08:	e3a00044 	mov	r0, #68	; 0x44
40023a0c:	eafffff7 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023a10:	e3550000 	cmp	r5, #0
40023a14:	0a000001 	beq	40023a20 <CyU3PI2cTransmitBytes+0x54>
40023a18:	e3540000 	cmp	r4, #0
40023a1c:	1a000001 	bne	40023a28 <CyU3PI2cTransmitBytes+0x5c>
40023a20:	e3a00041 	mov	r0, #65	; 0x41
40023a24:	eafffff1 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023a28:	e5d40008 	ldrb	r0, [r4, #8]
40023a2c:	e3500000 	cmp	r0, #0
40023a30:	0a000002 	beq	40023a40 <CyU3PI2cTransmitBytes+0x74>
40023a34:	e5d40008 	ldrb	r0, [r4, #8]
40023a38:	e3500008 	cmp	r0, #8
40023a3c:	da000001 	ble	40023a48 <CyU3PI2cTransmitBytes+0x7c>
40023a40:	e3a00040 	mov	r0, #64	; 0x40
40023a44:	eaffffe9 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023a48:	e3560000 	cmp	r6, #0
40023a4c:	1a000001 	bne	40023a58 <CyU3PI2cTransmitBytes+0x8c>
40023a50:	e3a00000 	mov	r0, #0
40023a54:	eaffffe5 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023a58:	ebfffe45 	bl	40023374 <CyU3PI2cGetLock>
40023a5c:	e1a07000 	mov	r7, r0
40023a60:	e3570000 	cmp	r7, #0
40023a64:	0a000001 	beq	40023a70 <CyU3PI2cTransmitBytes+0xa4>
40023a68:	e1a00007 	mov	r0, r7
40023a6c:	eaffffdf 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023a70:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023a74:	e1a00000 	nop			; (mov r0, r0)
40023a78:	e3a07000 	mov	r7, #0
40023a7c:	e5d50000 	ldrb	r0, [r5]
40023a80:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023a84:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023a88:	e3a02000 	mov	r2, #0
40023a8c:	e1a01006 	mov	r1, r6
40023a90:	e1a00004 	mov	r0, r4
40023a94:	eb00005c 	bl	40023c0c <MyI2cSendCommand>
40023a98:	e1a07000 	mov	r7, r0
40023a9c:	e3570000 	cmp	r7, #0
40023aa0:	0a000000 	beq	40023aa8 <CyU3PI2cTransmitBytes+0xdc>
40023aa4:	ea000043 	b	40023bb8 <CyU3PI2cTransmitBytes+0x1ec>
40023aa8:	e3a08001 	mov	r8, #1
40023aac:	ea000018 	b	40023b14 <CyU3PI2cTransmitBytes+0x148>
40023ab0:	e59f9140 	ldr	r9, [pc, #320]	; 40023bf8 <CyU3PI2cTransmitBytes+0x22c>
40023ab4:	ea000004 	b	40023acc <CyU3PI2cTransmitBytes+0x100>
40023ab8:	e1b00009 	movs	r0, r9
40023abc:	e2499001 	sub	r9, r9, #1
40023ac0:	1a000001 	bne	40023acc <CyU3PI2cTransmitBytes+0x100>
40023ac4:	e3a07055 	mov	r7, #85	; 0x55
40023ac8:	ea000004 	b	40023ae0 <CyU3PI2cTransmitBytes+0x114>
40023acc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ad0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023ad4:	e38a1010 	orr	r1, sl, #16
40023ad8:	e1100001 	tst	r0, r1
40023adc:	0afffff5 	beq	40023ab8 <CyU3PI2cTransmitBytes+0xec>
40023ae0:	e1a00000 	nop			; (mov r0, r0)
40023ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ae8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023aec:	e110000a 	tst	r0, sl
40023af0:	0a000000 	beq	40023af8 <CyU3PI2cTransmitBytes+0x12c>
40023af4:	e3a0704a 	mov	r7, #74	; 0x4a
40023af8:	e3570000 	cmp	r7, #0
40023afc:	0a000000 	beq	40023b04 <CyU3PI2cTransmitBytes+0x138>
40023b00:	ea000005 	b	40023b1c <CyU3PI2cTransmitBytes+0x150>
40023b04:	e7d50008 	ldrb	r0, [r5, r8]
40023b08:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b0c:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023b10:	e2888001 	add	r8, r8, #1
40023b14:	e1580006 	cmp	r8, r6
40023b18:	3affffe4 	bcc	40023ab0 <CyU3PI2cTransmitBytes+0xe4>
40023b1c:	e1a00000 	nop			; (mov r0, r0)
40023b20:	e1560008 	cmp	r6, r8
40023b24:	1a000013 	bne	40023b78 <CyU3PI2cTransmitBytes+0x1ac>
40023b28:	e3570000 	cmp	r7, #0
40023b2c:	1a000011 	bne	40023b78 <CyU3PI2cTransmitBytes+0x1ac>
40023b30:	e59f90c0 	ldr	r9, [pc, #192]	; 40023bf8 <CyU3PI2cTransmitBytes+0x22c>
40023b34:	ea000004 	b	40023b4c <CyU3PI2cTransmitBytes+0x180>
40023b38:	e1b00009 	movs	r0, r9
40023b3c:	e2499001 	sub	r9, r9, #1
40023b40:	1a000001 	bne	40023b4c <CyU3PI2cTransmitBytes+0x180>
40023b44:	e3a07055 	mov	r7, #85	; 0x55
40023b48:	ea000004 	b	40023b60 <CyU3PI2cTransmitBytes+0x194>
40023b4c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b50:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023b54:	e38a1008 	orr	r1, sl, #8
40023b58:	e1100001 	tst	r0, r1
40023b5c:	0afffff5 	beq	40023b38 <CyU3PI2cTransmitBytes+0x16c>
40023b60:	e1a00000 	nop			; (mov r0, r0)
40023b64:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b68:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b6c:	e110000a 	tst	r0, sl
40023b70:	0a000000 	beq	40023b78 <CyU3PI2cTransmitBytes+0x1ac>
40023b74:	e3a0704a 	mov	r7, #74	; 0x4a
40023b78:	e3570000 	cmp	r7, #0
40023b7c:	0a000006 	beq	40023b9c <CyU3PI2cTransmitBytes+0x1d0>
40023b80:	e3a00001 	mov	r0, #1
40023b84:	ebfffd97 	bl	400231e8 <CyU3PI2cErrorRecovery>
40023b88:	e3500000 	cmp	r0, #0
40023b8c:	0a000002 	beq	40023b9c <CyU3PI2cTransmitBytes+0x1d0>
40023b90:	ebfffef6 	bl	40023770 <CyU3PI2cReleaseLock>
40023b94:	e3a00054 	mov	r0, #84	; 0x54
40023b98:	eaffff94 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023b9c:	e3570000 	cmp	r7, #0
40023ba0:	0a000004 	beq	40023bb8 <CyU3PI2cTransmitBytes+0x1ec>
40023ba4:	e59d000c 	ldr	r0, [sp, #12]
40023ba8:	e2401001 	sub	r1, r0, #1
40023bac:	e3500000 	cmp	r0, #0
40023bb0:	e58d100c 	str	r1, [sp, #12]
40023bb4:	1affffaf 	bne	40023a78 <CyU3PI2cTransmitBytes+0xac>
40023bb8:	e1a00000 	nop			; (mov r0, r0)
40023bbc:	e357004a 	cmp	r7, #74	; 0x4a
40023bc0:	1a000007 	bne	40023be4 <CyU3PI2cTransmitBytes+0x218>
40023bc4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bc8:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023bcc:	e31b0040 	tst	fp, #64	; 0x40
40023bd0:	0a000000 	beq	40023bd8 <CyU3PI2cTransmitBytes+0x20c>
40023bd4:	e3a07045 	mov	r7, #69	; 0x45
40023bd8:	e31b0080 	tst	fp, #128	; 0x80
40023bdc:	0a000000 	beq	40023be4 <CyU3PI2cTransmitBytes+0x218>
40023be0:	e3a07055 	mov	r7, #85	; 0x55
40023be4:	ebfffee1 	bl	40023770 <CyU3PI2cReleaseLock>
40023be8:	e1a00007 	mov	r0, r7
40023bec:	eaffff7f 	b	400239f0 <CyU3PI2cTransmitBytes+0x24>
40023bf0:	40030f10 	.word	0x40030f10
40023bf4:	40030f0c 	.word	0x40030f0c
40023bf8:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023bfc <CyU3PRegisterI2cCallBack>:
40023bfc:	e59f1004 	ldr	r1, [pc, #4]	; 40023c08 <CyU3PRegisterI2cCallBack+0xc>
40023c00:	e5810000 	str	r0, [r1]
40023c04:	e12fff1e 	bx	lr
40023c08:	40030f18 	.word	0x40030f18

Disassembly of section i.MyI2cSendCommand:

40023c0c <MyI2cSendCommand>:
40023c0c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023c10:	e1a04000 	mov	r4, r0
40023c14:	e1a06001 	mov	r6, r1
40023c18:	e1a07002 	mov	r7, r2
40023c1c:	e3a00000 	mov	r0, #0
40023c20:	e59f1108 	ldr	r1, [pc, #264]	; 40023d30 <MyI2cSendCommand+0x124>
40023c24:	e5810000 	str	r0, [r1]
40023c28:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c2c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c30:	e3100202 	tst	r0, #536870912	; 0x20000000
40023c34:	0a000006 	beq	40023c54 <MyI2cSendCommand+0x48>
40023c38:	e3a00000 	mov	r0, #0
40023c3c:	ebfffd69 	bl	400231e8 <CyU3PI2cErrorRecovery>
40023c40:	e1a05000 	mov	r5, r0
40023c44:	e3550000 	cmp	r5, #0
40023c48:	0a000001 	beq	40023c54 <MyI2cSendCommand+0x48>
40023c4c:	e1a00005 	mov	r0, r5
40023c50:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023c54:	e59f80d8 	ldr	r8, [pc, #216]	; 40023d34 <MyI2cSendCommand+0x128>
40023c58:	e1a00000 	nop			; (mov r0, r0)
40023c5c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c60:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c64:	e3100203 	tst	r0, #805306368	; 0x30000000
40023c68:	0a000002 	beq	40023c78 <MyI2cSendCommand+0x6c>
40023c6c:	e1b00008 	movs	r0, r8
40023c70:	e2488001 	sub	r8, r8, #1
40023c74:	1afffff8 	bne	40023c5c <MyI2cSendCommand+0x50>
40023c78:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c7c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c80:	e3100203 	tst	r0, #805306368	; 0x30000000
40023c84:	0a000001 	beq	40023c90 <MyI2cSendCommand+0x84>
40023c88:	e3a00045 	mov	r0, #69	; 0x45
40023c8c:	eaffffef 	b	40023c50 <MyI2cSendCommand+0x44>
40023c90:	e3a00000 	mov	r0, #0
40023c94:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c98:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023c9c:	e5d42008 	ldrb	r2, [r4, #8]
40023ca0:	e1a01004 	mov	r1, r4
40023ca4:	e1a0000d 	mov	r0, sp
40023ca8:	ebff7f09 	bl	400038d4 <CyU3PMemCopy>
40023cac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023cb0:	e59d0000 	ldr	r0, [sp]
40023cb4:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023cb8:	e59d0004 	ldr	r0, [sp, #4]
40023cbc:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023cc0:	e3a00000 	mov	r0, #0
40023cc4:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023cc8:	e3e00000 	mvn	r0, #0
40023ccc:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023cd0:	e3a00d07 	mov	r0, #448	; 0x1c0
40023cd4:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023cd8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023cdc:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023ce0:	e1d400ba 	ldrh	r0, [r4, #10]
40023ce4:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023ce8:	e3570000 	cmp	r7, #0
40023cec:	0a000004 	beq	40023d04 <MyI2cSendCommand+0xf8>
40023cf0:	e5d40008 	ldrb	r0, [r4, #8]
40023cf4:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023cf8:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023cfc:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023d00:	ea000003 	b	40023d14 <MyI2cSendCommand+0x108>
40023d04:	e5d40008 	ldrb	r0, [r4, #8]
40023d08:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023d0c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d10:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023d14:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023d18:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023d1c:	e3800010 	orr	r0, r0, #16
40023d20:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d24:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023d28:	e3a00000 	mov	r0, #0
40023d2c:	eaffffc7 	b	40023c50 <MyI2cSendCommand+0x44>
40023d30:	40030f1c 	.word	0x40030f1c
40023d34:	00007fff 	.word	0x00007fff
