
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f5b4  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  400125b4  400125b4  000125b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  40012704  40012704  00012704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  4001279c  4001279c  0001279c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012c08  40012c08  00012c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  40012c34  40012c34  00012c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012d2c  40012d2c  00012d2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012d38  40012d38  00012d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012d44  40012d44  00012d44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012d6c  40012d6c  00012d6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012d7c  40012d7c  00012d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012d8c  40012d8c  00012d8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012d9c  40012d9c  00012d9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012db0  40012db0  00012db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012dc0  40012dc0  00012dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012dcc  40012dcc  00012dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012de0  40012de0  00012de0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012e1c  40012e1c  00012e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012e44  40012e44  00012e44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012e7c  40012e7c  00012e7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012eb0  40012eb0  00012eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012ec8  40012ec8  00012ec8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012ee0  40012ee0  00012ee0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012efc  40012efc  00012efc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012f80  40012f80  00012f80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40013054  40013054  00013054  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  4001309c  4001309c  0001309c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  4001322c  4001322c  0001322c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  400132ac  400132ac  000132ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  400132bc  400132bc  000132bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  400134f0  400134f0  000134f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  400135e8  400135e8  000135e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013880  40013880  00013880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  400138b8  400138b8  000138b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  40013914  40013914  00013914  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  40013934  40013934  00013934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013990  40013990  00013990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  400139b4  400139b4  000139b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  400139d4  400139d4  000139d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013ac8  40013ac8  00013ac8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013b54  40013b54  00013b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013b58  40013b58  00013b58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013b7c  40013b7c  00013b7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013c90  40013c90  00013c90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013d30  40013d30  00013d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013d88  40013d88  00013d88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013dd8  40013dd8  00013dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013ed4  40013ed4  00013ed4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013f84  40013f84  00013f84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40014038  40014038  00014038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40014060  40014060  00014060  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40014070  40014070  00014070  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40014210  40014210  00014210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40014328  40014328  00014328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40014378  40014378  00014378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  400144e8  400144e8  000144e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  400145c0  400145c0  000145c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  40014644  40014644  00014644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  4001465c  4001465c  0001465c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  400147dc  400147dc  000147dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  4001481c  4001481c  0001481c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  4001482c  4001482c  0001482c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  4001483c  4001483c  0001483c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  4001484c  4001484c  0001484c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  4001485c  4001485c  0001485c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  4001492c  4001492c  0001492c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014b5c  40014b5c  00014b5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014bec  40014bec  00014bec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014c60  40014c60  00014c60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014c88  40014c88  00014c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014cc4  40014cc4  00014cc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014cec  40014cec  00014cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  40014d14  40014d14  00014d14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014d3c  40014d3c  00014d3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014d64  40014d64  00014d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014d8c  40014d8c  00014d8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014db4  40014db4  00014db4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014de0  40014de0  00014de0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014e48  40014e48  00014e48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014e5c  40014e5c  00014e5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014eb0  40014eb0  00014eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014f10  40014f10  00014f10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014fb0  40014fb0  00014fb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40015090  40015090  00015090  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40015170  40015170  00015170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  400151b8  400151b8  000151b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40015264  40015264  00015264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  400152a8  400152a8  000152a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  4001531c  4001531c  0001531c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015480  40015480  00015480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  400154d4  400154d4  000154d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  40015528  40015528  00015528  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  40015818  40015818  00015818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  400158a8  400158a8  000158a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  40015b14  40015b14  00015b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015efc  40015efc  00015efc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015fac  40015fac  00015fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40016080  40016080  00016080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40016234  40016234  00016234  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  40016568  40016568  00016568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  40016688  40016688  00016688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  400166f4  400166f4  000166f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  400167ec  400167ec  000167ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  400168c8  400168c8  000168c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016a68  40016a68  00016a68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016c54  40016c54  00016c54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016e74  40016e74  00016e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  400170ac  400170ac  000170ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  400171dc  400171dc  000171dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40017380  40017380  00017380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017480  40017480  00017480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  4001759c  4001759c  0001759c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  400175f0  400175f0  000175f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  400179b0  400179b0  000179b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  40017c9c  40017c9c  00017c9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017f94  40017f94  00017f94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  400186d8  400186d8  000186d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  4001882c  4001882c  0001882c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  4001895c  4001895c  0001895c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018a8c  40018a8c  00018a8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018bc8  40018bc8  00018bc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018e38  40018e38  00018e38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40019094  40019094  00019094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40019214  40019214  00019214  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  4001939c  4001939c  0001939c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40019450  40019450  00019450  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  40019508  40019508  00019508  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  400195a4  400195a4  000195a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  40019644  40019644  00019644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  400199b0  400199b0  000199b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019f40  40019f40  00019f40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a520  4001a520  0001a520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001aba8  4001aba8  0001aba8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001ac0c  4001ac0c  0001ac0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001ac5c  4001ac5c  0001ac5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001ad54  4001ad54  0001ad54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001ae6c  4001ae6c  0001ae6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001aee8  4001aee8  0001aee8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001b01c  4001b01c  0001b01c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001b180  4001b180  0001b180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001b1d0  4001b1d0  0001b1d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b480  4001b480  0001b480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b604  4001b604  0001b604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b644  4001b644  0001b644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b6fc  4001b6fc  0001b6fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b78c  4001b78c  0001b78c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001ba14  4001ba14  0001ba14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001ba24  4001ba24  0001ba24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001bb78  4001bb78  0001bb78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001bcf8  4001bcf8  0001bcf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bf5c  4001bf5c  0001bf5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bf6c  4001bf6c  0001bf6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001c038  4001c038  0001c038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001c0f8  4001c0f8  0001c0f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001c108  4001c108  0001c108  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c700  4001c700  0001c700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c784  4001c784  0001c784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c94c  4001c94c  0001c94c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001ca70  4001ca70  0001ca70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001cbb8  4001cbb8  0001cbb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001cd2c  4001cd2c  0001cd2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001cdf8  4001cdf8  0001cdf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cfc0  4001cfc0  0001cfc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001cfd0  4001cfd0  0001cfd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001cfe0  4001cfe0  0001cfe0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001d02c  4001d02c  0001d02c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001d098  4001d098  0001d098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001d114  4001d114  0001d114  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001d1c8  4001d1c8  0001d1c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d3a0  4001d3a0  0001d3a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d6c0  4001d6c0  0001d6c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d6cc  4001d6cc  0001d6cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d7b0  4001d7b0  0001d7b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d988  4001d988  0001d988  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001da7c  4001da7c  0001da7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001db6c  4001db6c  0001db6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001dd44  4001dd44  0001dd44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001df08  4001df08  0001df08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001e05c  4001e05c  0001e05c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e3ec  4001e3ec  0001e3ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e764  4001e764  0001e764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e7dc  4001e7dc  0001e7dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e854  4001e854  0001e854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e9f0  4001e9f0  0001e9f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001ebd4  4001ebd4  0001ebd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ee44  4001ee44  0001ee44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001eefc  4001eefc  0001eefc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001ef2c  4001ef2c  0001ef2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001efcc  4001efcc  0001efcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f3ac  4001f3ac  0001f3ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f498  4001f498  0001f498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001fab4  4001fab4  0001fab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001fb50  4001fb50  0001fb50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001fbc0  4001fbc0  0001fbc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001fc3c  4001fc3c  0001fc3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001fdb0  4001fdb0  0001fdb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001fe1c  4001fe1c  0001fe1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  40020050  40020050  00020050  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4002006c  4002006c  0002006c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  40020264  40020264  00020264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  400204d8  400204d8  000204d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020590  40020590  00020590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  400206a8  400206a8  000206a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020aa4  40020aa4  00020aa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  40020b9c  40020b9c  00020b9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020ca8  40020ca8  00020ca8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020e74  40020e74  00020e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020ec8  40020ec8  00020ec8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020f28  40020f28  00020f28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  4002106c  4002106c  0002106c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  400210bc  400210bc  000210bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  400212b0  400212b0  000212b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40021440  40021440  00021440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  400215d8  400215d8  000215d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  400217e8  400217e8  000217e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021ff4  40021ff4  00021ff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40022044  40022044  00022044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40022148  40022148  00022148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  4002225c  4002225c  0002225c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40022268  40022268  00022268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40022278  40022278  00022278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  4002228c  4002228c  0002228c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  400222a0  400222a0  000222a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  400222b0  400222b0  000222b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  400222f0  400222f0  000222f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40022308  40022308  00022308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40022320  40022320  00022320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  4002235c  4002235c  0002235c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  4002238c  4002238c  0002238c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  400223b8  400223b8  000223b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40022438  40022438  00022438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  400224cc  400224cc  000224cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  4002261c  4002261c  0002261c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  400226a8  400226a8  000226a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022788  40022788  00022788  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022798  40022798  00022798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  400227ec  400227ec  000227ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022888  40022888  00022888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  400228f4  400228f4  000228f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022960  40022960  00022960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022ad8  40022ad8  00022ad8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022bf4  40022bf4  00022bf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022db8  40022db8  00022db8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022ea8  40022ea8  00022ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022f80  40022f80  00022f80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40023004  40023004  00023004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40023014  40023014  00023014  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40023024  40023024  00023024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40023080  40023080  00023080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40023168  40023168  00023168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40023220  40023220  00023220  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40023264  40023264  00023264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023480  40023480  00023480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  400234d0  400234d0  000234d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  4002365c  4002365c  0002365c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  400236b8  400236b8  000236b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  400237ac  400237ac  000237ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  4002389c  4002389c  0002389c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023a58  40023a58  00023a58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  40023a9c  40023a9c  00023a9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023cb4  40023cb4  00023cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023ee4  40023ee4  00023ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023ef4  40023ef4  00023ef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f24  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f40  40030f40  00028f24  2**5
                  ALLOC
266 .debug_abbrev 000011ad  00000000  00000000  00028f24  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d45e  00000000  00000000  0002a0d1  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   000230c6  00000000  00000000  000a752f  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca5f5  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d649a  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d64d0  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6680  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    00004301  00000000  00000000  000d7289  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000ea2e  00000000  00000000  000db58a  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 0000767c  00000000  00000000  000e9fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1638  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a758  00000000  00000000  000f16d8  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 000004b0  00000000  00000000  000fbe30  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fc2e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031624 	.word	0x40031624

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp_.debug_frame$13>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp_.debug_frame$13+0x4>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$38+0x2e>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$20+0x34>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp_.debug_frame$13+0xc>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp_.debug_frame$13+0xc>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x14>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$27+0x40>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x1c>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_pubnames$10>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$41+0x1c>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x4>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$48+0x30>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp_.debug_frame$13>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$31>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp_.debug_frame$13>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_frame$62+0x4>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$38+0x1a>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$59+0x12>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp_.debug_frame$13>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$59+0x6>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$66+0x1f>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$66+0x13>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$66+0x2b>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$73+0x17>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0xc>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp_.debug_frame$13>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0xb>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp_.debug_frame$13>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x9>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp_.debug_frame$13>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x2>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp_.debug_frame$13>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d58 	.word	0x40030d58
     af8:	40030d40 	.word	0x40030d40
     afc:	40031a60 	.word	0x40031a60
     b00:	40031990 	.word	0x40031990
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d54 	.word	0x40030d54
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d5c 	.word	0x40030d5c

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_pubnames$59+0x1a>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp..debug_macinfo$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$24+0x20>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp_.debug_frame$34+0xc>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp_.debug_frame$27+0x3c>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$13+0x1c>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$48+0x18>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$13+0x1c>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$48+0x18>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$115+0x13>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_frame$125+0x4>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$80+0x1a>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_pubnames$24+0x1c>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_frame$118+0x10>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$115+0x27>
     cbc:	ea000000 	b	cc4 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x17>
     cc0:	ea000001 	b	ccc <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x1f>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$17+0x10>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_pubnames$24+0x18>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_pubnames$24+0x18>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$17>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$17+0xe>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$52+0xb>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$52+0xb>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_frame$104>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$17+0x12>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x2>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$17+0x12>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x2>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_frame$104>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_frame$104>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$73+0xc>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_frame$104>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$80+0x16>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$17>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_frame$20>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$94+0x1e>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_frame$118+0xc>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$13+0x28>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_frame$20>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_frame$20+0x4>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_frame$13+0x8>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$10+0x29>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_frame$20>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$24+0x14>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_frame$20+0x8>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x20>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x20>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$24+0x20>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_frame$34>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_frame$41+0x14>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_pubnames$59+0x1a>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x12>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x26>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x12>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_frame$20+0xc>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x2e>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_frame$20+0xc>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_pubnames$24+0x3>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$62+0x18>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$17+0xe>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$20+0x10>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_frame$34+0x8>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$73+0x10>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_frame$20+0x10>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$17+0xe>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_frame$48+0x8>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$73+0x8>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_frame$55+0x4>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x5>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_frame$69+0x10>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_frame$76+0x10>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_pubnames$31+0x6>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_pubnames$31+0xa>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$83+0x40>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$31+0xe>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp_.debug_frame$83+0x24>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$83+0x38>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp_.debug_frame$90+0x4>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x15>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x31>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_frame$97>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x5>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x2>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$38+0x2e>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$52+0x5>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$59+0xb>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$66+0x12>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_frame$125+0x4>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_pubnames$80+0x1f>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x10>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$132+0x3c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$31+0x12>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$31+0x12>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$13+0xc>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$31+0x12>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$13+0x24>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d60 	.word	0x40031d60
    17cc:	40030da4 	.word	0x40030da4
    17d0:	40030d84 	.word	0x40030d84
    17d4:	40031ed8 	.word	0x40031ed8
    17d8:	40030d90 	.word	0x40030d90
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d8c 	.word	0x40030d8c
    17e4:	40030dbc 	.word	0x40030dbc
    17e8:	40030d60 	.word	0x40030d60
    17ec:	40030dc4 	.word	0x40030dc4
    17f0:	40030dd4 	.word	0x40030dd4
    17f4:	40030d94 	.word	0x40030d94
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d88 	.word	0x40030d88
    1800:	80008000 	.word	0x80008000
    1804:	40030dd0 	.word	0x40030dd0
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a9c 	.word	0x40031a9c
    1810:	40031b3c 	.word	0x40031b3c
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$52+0xf>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_pubnames$52+0x13>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$52+0x17>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$52+0x1b>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$52+0x1f>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$52+0x23>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$52+0x27>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$59>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$59+0x4>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$59+0x8>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_frame$41>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_frame$41+0x4>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_frame$41+0x8>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_frame$41+0xc>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_frame$41+0x10>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_frame$41+0x14>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$41+0x18>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$41+0x1c>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_pubnames$66+0x2>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	40012568 	.word	0x40012568
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_frame$83+0x18>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_frame$83+0x18>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_frame$83+0x1c>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030ddc 	.word	0x40030ddc

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_line$71+0xe>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_line$71+0xe>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315d4 	.word	0x400315d4

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp_.debug_pubnames$143+0xc>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$73+0x2b>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$73+0x23>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp_.debug_pubnames$73+0xb>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$143+0x10>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x1>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_frame$20+0xc>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_frame$20+0x4>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_pubnames$87+0x1>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_frame$27+0x8>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_frame$27>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$101+0x1>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$94+0x11>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$143+0x14>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$108+0x20>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$108+0x18>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_pubnames$108>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_frame$20>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_frame$41>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$122+0xf>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$122+0x7>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$115+0x18>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_frame$20+0x4>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp_.debug_pubnames$143+0x8>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_pubnames$143>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_pubnames$129+0x20>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$129+0x8>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000afe4 	.word	0x4000afe4

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x2>
    1fb4:	40013880 	.word	0x40013880

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40022308 	.word	0x40022308

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a778 	.word	0x4000a778

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40022278 	.word	0x40022278

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <__ARM_grp_.debug_pubnames$157+0x2>
    1fd4:	4000b0d4 	.word	0x4000b0d4

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40022438 	.word	0x40022438

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	40014644 	.word	0x40014644

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <___tx_thread_irq_nesting_end_veneer+0x4>
    1fec:	4000b1ec 	.word	0x4000b1ec

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000b210 	.word	0x4000b210

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	4002225c 	.word	0x4002225c

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001fdb0 	.word	0x4001fdb0

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000af90 	.word	0x4000af90

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a638 	.word	0x4000a638

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	4000a0ac 	.word	0x4000a0ac

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__ARM_grp_.debug_pubnames$171+0x1>
    2024:	40014038 	.word	0x40014038

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c94c 	.word	0x4001c94c

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__ARM_grp_.debug_frame$34>
    2034:	4001b604 	.word	0x4001b604

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	40022960 	.word	0x40022960

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	400212b0 	.word	0x400212b0

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	40016568 	.word	0x40016568

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260,
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea0040aa 	b	400132bc <CyU3PDebugPrint>
40003010:	40010e68 	.word	0x40010e68

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb0040a1 	bl	400132bc <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb004094 	bl	400132bc <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb004086 	bl	400132bc <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb004079 	bl	400132bc <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb00406c 	bl	400132bc <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb00405f 	bl	400132bc <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb004051 	bl	400132bc <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb004044 	bl	400132bc <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb004037 	bl	400132bc <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb00402a 	bl	400132bc <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb00401d 	bl	400132bc <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb004010 	bl	400132bc <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb004003 	bl	400132bc <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003ff6 	bl	400132bc <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003fe9 	bl	400132bc <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003fdc 	bl	400132bc <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003fcf 	bl	400132bc <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003fc3 	bl	400132bc <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010e80 	.word	0x40010e80
400033b8:	40010e9c 	.word	0x40010e9c
400033bc:	40010efc 	.word	0x40010efc

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001b49 	bl	4000a114 <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010f54 	.word	0x40010f54

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb00160d 	bl	40008ccc <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb001609 	bl	40008ccc <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003f60 	bl	400132bc <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010de8 	.word	0x40010de8
40003548:	40010f68 	.word	0x40010f68

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006887 	b	4001d7b0 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f40 	.word	0x40030f40

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea0014e9 	b	400089b4 <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f40 	.word	0x40030f40
40003614:	40033264 	.word	0x40033264

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea0040ea 	b	400139d4 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb00194b 	bl	40009b90 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f60 	.word	0x40030f60
4000366c:	40032eac 	.word	0x40032eac
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb00150c 	bl	40008ab8 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb0018f8 	bl	40009a80 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032eac 	.word	0x40032eac

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0019b9 	b	40009da0 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb001947 	bl	4000a114 <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb0013ab 	bl	40008ab8 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb001797 	bl	40009a80 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb001964 	bl	4000a28c <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f60 	.word	0x40030f60
40003d00:	40030f64 	.word	0x40030f64
40003d04:	40032eac 	.word	0x40032eac
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb001368 	bl	40008ab8 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb001979 	bl	4000a30c <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001818 	bl	40009da0 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb0019a2 	bl	4000a3e0 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea00194a 	b	4000a28c <_txe_mutex_delete>
40003d60:	40030f64 	.word	0x40030f64
40003d64:	40030f60 	.word	0x40030f60

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb001350 	bl	40008ab8 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb001961 	bl	4000a30c <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb001963 	bl	4000a3e0 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb00193e 	bl	4000a3e0 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f64 	.word	0x40030f64
40003ef0:	40030f60 	.word	0x40030f60

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb0012ed 	bl	40008ab8 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb0018fe 	bl	4000a30c <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001929 	bl	4000a3e0 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f64 	.word	0x40030f64
40004024:	40030f60 	.word	0x40030f60

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0012a1 	bl	40008ab8 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0018b2 	bl	4000a30c <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb001750 	bl	40009da0 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb0018da 	bl	4000a3e0 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb001883 	bl	4000a28c <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001726 	bl	40009d20 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f64 	.word	0x40030f64
40004094:	40030f60 	.word	0x40030f60
40004098:	40032eac 	.word	0x40032eac

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007ef4 	bl	40023cb4 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001d 	bne	40004160 <SensorRead2B.clone.1+0xc4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003de3 	bl	40013880 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007ddf 	bl	4002389c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003dd4 	bl	40013880 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f103c 	ldr	r1, [pc, #60]	; 40004184 <SensorRead2B.clone.1+0xe8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003c59 	bl	400132bc <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004154:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004158:	eb003dc8 	bl	40013880 <CyU3PBusyWait>
4000415c:	eafffff2 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004160:	e5d4c001 	ldrb	ip, [r4, #1]
40004164:	e5d43000 	ldrb	r3, [r4]
40004168:	e59f1018 	ldr	r1, [pc, #24]	; 40004188 <SensorRead2B.clone.1+0xec>
4000416c:	e3a00004 	mov	r0, #4
40004170:	e58dc000 	str	ip, [sp]
40004174:	eb003c50 	bl	400132bc <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004178:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000417c:	eb003dbf 	bl	40013880 <CyU3PBusyWait>
40004180:	eaffffda 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004184:	400112ac 	.word	0x400112ac
40004188:	40011290 	.word	0x40011290

4000418c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000418c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	e35000a0 	cmp	r0, #160	; 0xa0
40004194:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e24dd014 	sub	sp, sp, #20
4000419c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a0:	03a0e000 	moveq	lr, #0
400041a4:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
400041a8:	e1a07001 	mov	r7, r1
400041ac:	e1a06002 	mov	r6, r2
400041b0:	e1a05003 	mov	r5, r3
400041b4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041b8:	1a000020 	bne	40004240 <SensorWrite2B+0xb4>
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041bc:	e1a0300e 	mov	r3, lr
400041c0:	e28d100c 	add	r1, sp, #12
400041c4:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041c8:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041cc:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400041d4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d8:	e5cdc008 	strb	ip, [sp, #8]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041dc:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041e0:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
400041e4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041e8:	eb007eb1 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041ec:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400041f0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400041f4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400041f8:	eb003da0 	bl	40013880 <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004204:	e1a0000d 	mov	r0, sp
40004208:	e28d100c 	add	r1, sp, #12
4000420c:	e1a0200c 	mov	r2, ip
40004210:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004214:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004218:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
4000421c:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004220:	eb007ea3 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004224:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004228:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000422c:	13a00ffa 	movne	r0, #1000	; 0x3e8
40004230:	eb003d92 	bl	40013880 <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004234:	e1a00004 	mov	r0, r4
40004238:	e28dd014 	add	sp, sp, #20
4000423c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004240:	e3a00004 	mov	r0, #4
40004244:	e59f1008 	ldr	r1, [pc, #8]	; 40004254 <SensorWrite2B+0xc8>
40004248:	eb003c1b 	bl	400132bc <CyU3PDebugPrint>
		return 1;
4000424c:	e3a04001 	mov	r4, #1
40004250:	eafffff7 	b	40004234 <SensorWrite2B+0xa8>
40004254:	400112c8 	.word	0x400112c8

40004258 <SensorWrite2B2>:
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004258:	e92d4070 	push	{r4, r5, r6, lr}
4000425c:	e24dd018 	sub	sp, sp, #24
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
40004260:	e3a0c002 	mov	ip, #2
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004264:	e1a06002 	mov	r6, r2
	/* Validate the I2C slave address. */
	//if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
	//	CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004268:	e5cd0008 	strb	r0, [sp, #8]
	preamble.buffer[1] = highAddr;
4000426c:	e5cd1009 	strb	r1, [sp, #9]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;
40004270:	e5cd3014 	strb	r3, [sp, #20]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004274:	e28d1014 	add	r1, sp, #20
40004278:	e3a02001 	mov	r2, #1
4000427c:	e3a03000 	mov	r3, #0
40004280:	e28d0008 	add	r0, sp, #8
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004284:	e3a04000 	mov	r4, #0
	preamble.length = 2; /*  Three byte preamble. */
40004288:	e5cdc010 	strb	ip, [sp, #16]
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
4000428c:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004290:	e1cd41b2 	strh	r4, [sp, #18]
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004294:	eb007e86 	bl	40023cb4 <CyU3PI2cTransmitBytes>
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
40004298:	e5dd3014 	ldrb	r3, [sp, #20]
4000429c:	e59f102c 	ldr	r1, [pc, #44]	; 400042d0 <SensorWrite2B2+0x78>
400042a0:	e1a02006 	mov	r2, r6
400042a4:	e58d5000 	str	r5, [sp]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400042a8:	e1a04000 	mov	r4, r0
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
400042ac:	e3a00004 	mov	r0, #4
400042b0:	eb003c01 	bl	400132bc <CyU3PDebugPrint>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042b4:	e3540000 	cmp	r4, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400042b8:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400042bc:	13a00ffa 	movne	r0, #1000	; 0x3e8
400042c0:	eb003d6e 	bl	40013880 <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
400042c4:	e1a00004 	mov	r0, r4
400042c8:	e28dd018 	add	sp, sp, #24
400042cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400042d0:	400112ec 	.word	0x400112ec

400042d4 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042d4:	e35000a0 	cmp	r0, #160	; 0xa0
400042d8:	13500070 	cmpne	r0, #112	; 0x70
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
400042dc:	e92d4010 	push	{r4, lr}
400042e0:	e1a0c000 	mov	ip, r0
400042e4:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042e8:	03a0e000 	moveq	lr, #0
400042ec:	13a0e001 	movne	lr, #1
400042f0:	1a00001a 	bne	40004360 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
400042f4:	e3530040 	cmp	r3, #64	; 0x40
400042f8:	8a000013 	bhi	4000434c <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
400042fc:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004300:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004304:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004308:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
4000430c:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004310:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004314:	e28d0004 	add	r0, sp, #4
40004318:	e59d1018 	ldr	r1, [sp, #24]
4000431c:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004320:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
40004324:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004328:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000432c:	eb007e60 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004330:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004334:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004338:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000433c:	eb003d4f 	bl	40013880 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
40004340:	e1a00004 	mov	r0, r4
40004344:	e28dd010 	add	sp, sp, #16
40004348:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
4000434c:	e3a00004 	mov	r0, #4
40004350:	e59f101c 	ldr	r1, [pc, #28]	; 40004374 <SensorWrite+0xa0>
40004354:	eb003bd8 	bl	400132bc <CyU3PDebugPrint>
		return 1;
40004358:	e3a04001 	mov	r4, #1
4000435c:	eafffff7 	b	40004340 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004360:	e3a00004 	mov	r0, #4
40004364:	e59f100c 	ldr	r1, [pc, #12]	; 40004378 <SensorWrite+0xa4>
40004368:	eb003bd3 	bl	400132bc <CyU3PDebugPrint>
		return 1;
4000436c:	e3a04001 	mov	r4, #1
40004370:	eafffff2 	b	40004340 <SensorWrite+0x6c>
40004374:	4001130c 	.word	0x4001130c
40004378:	400112c8 	.word	0x400112c8

4000437c <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000437c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004380:	e35000a1 	cmp	r0, #161	; 0xa1
40004384:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004388:	e24dd01c 	sub	sp, sp, #28
4000438c:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004390:	03a0c000 	moveq	ip, #0
40004394:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004398:	e1a06001 	mov	r6, r1
4000439c:	e1a0e002 	mov	lr, r2
400043a0:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400043a4:	1a000021 	bne	40004430 <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400043a8:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043ac:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b0:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400043b4:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b8:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043bc:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043c0:	e1a01005 	mov	r1, r5
400043c4:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043c8:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
400043cc:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043d0:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400043d4:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043d8:	eb007e35 	bl	40023cb4 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400043dc:	e2502000 	subs	r2, r0, #0
400043e0:	1a000017 	bne	40004444 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400043e4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400043e8:	eb003d24 	bl	40013880 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400043ec:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400043f0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043f4:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400043f8:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043fc:	e1a01005 	mov	r1, r5
40004400:	e1a0200e 	mov	r2, lr
40004404:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004408:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
4000440c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004410:	eb007d21 	bl	4002389c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004414:	e2504000 	subs	r4, r0, #0
40004418:	1a000012 	bne	40004468 <SensorRead2B+0xec>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
4000441c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004420:	eb003d16 	bl	40013880 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004424:	e1a00004 	mov	r0, r4
40004428:	e28dd01c 	add	sp, sp, #28
4000442c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004430:	e3a00004 	mov	r0, #4
40004434:	e59f1054 	ldr	r1, [pc, #84]	; 40004490 <SensorRead2B+0x114>
40004438:	eb003b9f 	bl	400132bc <CyU3PDebugPrint>
		return 1;
4000443c:	e3a04001 	mov	r4, #1
40004440:	eafffff7 	b	40004424 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004444:	e5d5c001 	ldrb	ip, [r5, #1]
40004448:	e5d53000 	ldrb	r3, [r5]
4000444c:	e59f1040 	ldr	r1, [pc, #64]	; 40004494 <SensorRead2B+0x118>
40004450:	e3a00004 	mov	r0, #4
40004454:	e58dc000 	str	ip, [sp]
40004458:	eb003b97 	bl	400132bc <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000445c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004460:	eb003d06 	bl	40013880 <CyU3PBusyWait>
40004464:	eaffffe0 	b	400043ec <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004468:	e5d5c001 	ldrb	ip, [r5, #1]
4000446c:	e5d53000 	ldrb	r3, [r5]
40004470:	e59f1020 	ldr	r1, [pc, #32]	; 40004498 <SensorRead2B+0x11c>
40004474:	e1a02004 	mov	r2, r4
40004478:	e3a00004 	mov	r0, #4
4000447c:	e58dc000 	str	ip, [sp]
40004480:	eb003b8d 	bl	400132bc <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004484:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004488:	eb003cfc 	bl	40013880 <CyU3PBusyWait>
4000448c:	eaffffe4 	b	40004424 <SensorRead2B+0xa8>
40004490:	400112c8 	.word	0x400112c8
40004494:	40011290 	.word	0x40011290
40004498:	400112ac 	.word	0x400112ac

4000449c <SensorRead2B2>:
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000449c:	e92d4070 	push	{r4, r5, r6, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044a0:	e35000a1 	cmp	r0, #161	; 0xa1
400044a4:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044a8:	e24dd018 	sub	sp, sp, #24
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044ac:	03a0c000 	moveq	ip, #0
400044b0:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044b4:	e1a05001 	mov	r5, r1
400044b8:	e1a0e002 	mov	lr, r2
400044bc:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044c0:	1a000013 	bne	40004514 <SensorRead2B2+0x78>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400044c4:	e5c43000 	strb	r3, [r4]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044c8:	e3c06001 	bic	r6, r0, #1
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400044cc:	e5cde00e 	strb	lr, [sp, #14]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d0:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044d4:	e3a0e003 	mov	lr, #3
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d8:	e1a01004 	mov	r1, r4
400044dc:	e3a02001 	mov	r2, #1
400044e0:	e1a0300c 	mov	r3, ip
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400044e4:	e5cd500d 	strb	r5, [sp, #13]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044e8:	e5cd600c 	strb	r6, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044ec:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400044f0:	e1cdc1b6 	strh	ip, [sp, #22]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044f4:	eb007ce8 	bl	4002389c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400044f8:	e2505000 	subs	r5, r0, #0
400044fc:	1a000009 	bne	40004528 <SensorRead2B2+0x8c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004500:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004504:	eb003cdd 	bl	40013880 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004508:	e1a00005 	mov	r0, r5
4000450c:	e28dd018 	add	sp, sp, #24
40004510:	e8bd8070 	pop	{r4, r5, r6, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004514:	e3a00004 	mov	r0, #4
40004518:	e59f1030 	ldr	r1, [pc, #48]	; 40004550 <SensorRead2B2+0xb4>
4000451c:	eb003b66 	bl	400132bc <CyU3PDebugPrint>
		return 1;
40004520:	e3a05001 	mov	r5, #1
40004524:	eafffff7 	b	40004508 <SensorRead2B2+0x6c>
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004528:	e5d4c001 	ldrb	ip, [r4, #1]
4000452c:	e5d43000 	ldrb	r3, [r4]
40004530:	e59f101c 	ldr	r1, [pc, #28]	; 40004554 <SensorRead2B2+0xb8>
40004534:	e1a02005 	mov	r2, r5
40004538:	e3a00004 	mov	r0, #4
4000453c:	e58dc000 	str	ip, [sp]
40004540:	eb003b5d 	bl	400132bc <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004544:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004548:	eb003ccc 	bl	40013880 <CyU3PBusyWait>
4000454c:	eaffffed 	b	40004508 <SensorRead2B2+0x6c>
40004550:	400112c8 	.word	0x400112c8
40004554:	400112ac 	.word	0x400112ac

40004558 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004558:	e35000a1 	cmp	r0, #161	; 0xa1
4000455c:	13500071 	cmpne	r0, #113	; 0x71
	return apiRetStatus;
}


CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004560:	e92d4030 	push	{r4, r5, lr}
40004564:	e1a0c000 	mov	ip, r0
40004568:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000456c:	03a0e000 	moveq	lr, #0
40004570:	13a0e001 	movne	lr, #1
40004574:	1a00001c 	bne	400045ec <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004578:	e3530040 	cmp	r3, #64	; 0x40
4000457c:	8a000015 	bhi	400045d8 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004580:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004584:	e1a02003 	mov	r2, r3
40004588:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000458c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004590:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004594:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004598:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000459c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045a0:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
400045a4:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
400045a8:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400045ac:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
400045b0:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
400045b4:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045b8:	eb007cb7 	bl	4002389c <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400045bc:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400045c0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400045c4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400045c8:	eb003cac 	bl	40013880 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400045cc:	e1a00004 	mov	r0, r4
400045d0:	e28dd014 	add	sp, sp, #20
400045d4:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400045d8:	e3a00004 	mov	r0, #4
400045dc:	e59f101c 	ldr	r1, [pc, #28]	; 40004600 <SensorRead+0xa8>
400045e0:	eb003b35 	bl	400132bc <CyU3PDebugPrint>
		return 1;
400045e4:	e3a04001 	mov	r4, #1
400045e8:	eafffff7 	b	400045cc <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400045ec:	e3a00004 	mov	r0, #4
400045f0:	e59f100c 	ldr	r1, [pc, #12]	; 40004604 <SensorRead+0xac>
400045f4:	eb003b30 	bl	400132bc <CyU3PDebugPrint>
		return 1;
400045f8:	e3a04001 	mov	r4, #1
400045fc:	eafffff2 	b	400045cc <SensorRead+0x74>
40004600:	4001130c 	.word	0x4001130c
40004604:	400112c8 	.word	0x400112c8

40004608 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
40004608:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
4000460c:	e3a00016 	mov	r0, #22
40004610:	e3a01000 	mov	r1, #0
40004614:	eb007a23 	bl	40022ea8 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004618:	e2502000 	subs	r2, r0, #0
4000461c:	1a000022 	bne	400046ac <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
40004620:	e59f1094 	ldr	r1, [pc, #148]	; 400046bc <SensorReset+0xb4>
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003b23 	bl	400132bc <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000462c:	eb001398 	bl	40009494 <_tx_time_get>
40004630:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004634:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004638:	eb0011a3 	bl	40008ccc <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000463c:	eb001394 	bl	40009494 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004640:	e1a04804 	lsl	r4, r4, #16
40004644:	e1a02824 	lsr	r2, r4, #16
40004648:	e59f1070 	ldr	r1, [pc, #112]	; 400046c0 <SensorReset+0xb8>
4000464c:	e1a00800 	lsl	r0, r0, #16
40004650:	e1a03820 	lsr	r3, r0, #16
40004654:	e3a00004 	mov	r0, #4
40004658:	eb003b17 	bl	400132bc <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000465c:	eb00138c 	bl	40009494 <_tx_time_get>
40004660:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004664:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004668:	eb001197 	bl	40008ccc <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000466c:	eb001388 	bl	40009494 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004670:	e1a02804 	lsl	r2, r4, #16
40004674:	e1a02822 	lsr	r2, r2, #16
40004678:	e59f1040 	ldr	r1, [pc, #64]	; 400046c0 <SensorReset+0xb8>
4000467c:	e1a03800 	lsl	r3, r0, #16
40004680:	e1a03823 	lsr	r3, r3, #16
40004684:	e3a00004 	mov	r0, #4
40004688:	eb003b0b 	bl	400132bc <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000468c:	e3a00016 	mov	r0, #22
40004690:	e3a01001 	mov	r1, #1
40004694:	eb007a03 	bl	40022ea8 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004698:	e2502000 	subs	r2, r0, #0
4000469c:	1a000002 	bne	400046ac <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a0:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046a4:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a8:	ea001187 	b	40008ccc <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046ac:	e59f1010 	ldr	r1, [pc, #16]	; 400046c4 <SensorReset+0xbc>
400046b0:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046b4:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046b8:	ea003aff 	b	400132bc <CyU3PDebugPrint>
400046bc:	40011354 	.word	0x40011354
400046c0:	40011368 	.word	0x40011368
400046c4:	4001132c 	.word	0x4001132c

400046c8 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
400046c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400046cc:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400046d0:	e3a00052 	mov	r0, #82	; 0x52
400046d4:	e3a01030 	mov	r1, #48	; 0x30
400046d8:	e3a020f2 	mov	r2, #242	; 0xf2
400046dc:	e28d3004 	add	r3, sp, #4
400046e0:	ebfffe6d 	bl	4000409c <SensorRead2B.clone.1>
400046e4:	e3500000 	cmp	r0, #0
400046e8:	1a000002 	bne	400046f8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
400046ec:	e5dd3004 	ldrb	r3, [sp, #4]
400046f0:	e3530056 	cmp	r3, #86	; 0x56
400046f4:	0a000002 	beq	40004704 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400046f8:	e3a00004 	mov	r0, #4
400046fc:	e59f1008 	ldr	r1, [pc, #8]	; 4000470c <SensorInit+0x44>
40004700:	eb003aed 	bl	400132bc <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
40004704:	e28dd00c 	add	sp, sp, #12
40004708:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000470c:	4001137c 	.word	0x4001137c

40004710 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004710:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004714:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004718:	e3a00052 	mov	r0, #82	; 0x52
4000471c:	e3a01030 	mov	r1, #48	; 0x30
40004720:	e3a020f2 	mov	r2, #242	; 0xf2
40004724:	e28d3004 	add	r3, sp, #4
40004728:	ebfffe5b 	bl	4000409c <SensorRead2B.clone.1>
4000472c:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
40004730:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004734:	1a000002 	bne	40004744 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004738:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
4000473c:	e2500056 	subs	r0, r0, #86	; 0x56
40004740:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
40004744:	e28dd00c 	add	sp, sp, #12
40004748:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000474c <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
4000474c:	e92d4010 	push	{r4, lr}
40004750:	e24dd008 	sub	sp, sp, #8
40004754:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004758:	e1a02000 	mov	r2, r0
4000475c:	e28d3004 	add	r3, sp, #4
40004760:	e3a00053 	mov	r0, #83	; 0x53
40004764:	ebfffe4c 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004768:	e59f1018 	ldr	r1, [pc, #24]	; 40004788 <SensorGetControl+0x3c>
4000476c:	e1a02004 	mov	r2, r4
40004770:	e5dd3004 	ldrb	r3, [sp, #4]
40004774:	e3a00004 	mov	r0, #4
40004778:	eb003acf 	bl	400132bc <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000477c:	e5dd0004 	ldrb	r0, [sp, #4]
40004780:	e28dd008 	add	sp, sp, #8
40004784:	e8bd8010 	pop	{r4, pc}
40004788:	400113a0 	.word	0x400113a0

4000478c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000478c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004790:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004794:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004798:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000479c:	e1a04000 	mov	r4, r0
400047a0:	e1a05002 	mov	r5, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
400047a4:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047a8:	e3a02001 	mov	r2, #1
400047ac:	e28d100c 	add	r1, sp, #12
400047b0:	e3a03000 	mov	r3, #0
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400047b4:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
400047b8:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047bc:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
400047c0:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047c4:	e1a0000d 	mov	r0, sp
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047c8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400047cc:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400047d0:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047d4:	eb007d36 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400047d8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400047dc:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400047e0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400047e4:	eb003c25 	bl	40013880 <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400047e8:	e3a0c001 	mov	ip, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047ec:	e1a0200c 	mov	r2, ip
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400047f0:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047f4:	e28d100c 	add	r1, sp, #12
400047f8:	e3a03000 	mov	r3, #0
400047fc:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004800:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004804:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004808:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000480c:	eb007d28 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004810:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004814:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004818:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000481c:	eb003c17 	bl	40013880 <CyU3PBusyWait>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
40004820:	e59f1018 	ldr	r1, [pc, #24]	; 40004840 <SensorSetControl+0xb4>
40004824:	e1a02004 	mov	r2, r4
40004828:	e1a03005 	mov	r3, r5
4000482c:	e3a00004 	mov	r0, #4
40004830:	eb003aa1 	bl	400132bc <CyU3PDebugPrint>
//#endif
	return 0;
};
40004834:	e3a00000 	mov	r0, #0
40004838:	e28dd014 	add	sp, sp, #20
4000483c:	e8bd8030 	pop	{r4, r5, pc}
40004840:	400113c0 	.word	0x400113c0

40004844 <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
40004844:	e1a0c000 	mov	ip, r0
40004848:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000484c:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004850:	e28d3004 	add	r3, sp, #4
40004854:	e1a00002 	mov	r0, r2
40004858:	e1a0200c 	mov	r2, ip
4000485c:	ebfffe0e 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004860:	e5dd0004 	ldrb	r0, [sp, #4]
40004864:	e28dd00c 	add	sp, sp, #12
40004868:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000486c <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000486c:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004870:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004874:	e24dd010 	sub	sp, sp, #16
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004878:	e3a0e000 	mov	lr, #0
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
4000487c:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004880:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004884:	e5cd000c 	strb	r0, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004888:	e28d100c 	add	r1, sp, #12
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000488c:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004890:	e3a03000 	mov	r3, #0
40004894:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004898:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000489c:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400048a0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400048a4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400048a8:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048ac:	eb007d00 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048b0:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048b4:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048b8:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048bc:	eb003bef 	bl	40013880 <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400048c0:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048c4:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048c8:	e28d100c 	add	r1, sp, #12
400048cc:	e1a0200c 	mov	r2, ip
400048d0:	e3a03000 	mov	r3, #0
400048d4:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048d8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400048dc:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400048e0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048e4:	eb007cf2 	bl	40023cb4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048e8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048ec:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048f0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048f4:	eb003be1 	bl	40013880 <CyU3PBusyWait>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400048f8:	e3a00000 	mov	r0, #0
400048fc:	e28dd010 	add	sp, sp, #16
40004900:	e8bd8010 	pop	{r4, pc}

40004904 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004904:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004908:	e59f2210 	ldr	r2, [pc, #528]	; 40004b20 <I2cAppThread_Entry+0x21c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
4000490c:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004910:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004914:	e3a0effa 	mov	lr, #1000	; 0x3e8
40004918:	e284c02c 	add	ip, r4, #44	; 0x2c
4000491c:	e3a0300b 	mov	r3, #11
40004920:	e1a01004 	mov	r1, r4
40004924:	e59f01f8 	ldr	r0, [pc, #504]	; 40004b24 <I2cAppThread_Entry+0x220>
40004928:	e58de000 	str	lr, [sp]
4000492c:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
40004930:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004934:	e58d4004 	str	r4, [sp, #4]
40004938:	e58d4008 	str	r4, [sp, #8]
4000493c:	eb0018e2 	bl	4000accc <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004940:	eb0012d3 	bl	40009494 <_tx_time_get>
40004944:	e59f11dc 	ldr	r1, [pc, #476]	; 40004b28 <I2cAppThread_Entry+0x224>
40004948:	e59f51dc 	ldr	r5, [pc, #476]	; 40004b2c <I2cAppThread_Entry+0x228>
4000494c:	e1a02000 	mov	r2, r0
40004950:	e3a00004 	mov	r0, #4
40004954:	eb003a58 	bl	400132bc <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004958:	e3a00032 	mov	r0, #50	; 0x32
4000495c:	eb0010da 	bl	40008ccc <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004960:	e59f01bc 	ldr	r0, [pc, #444]	; 40004b24 <I2cAppThread_Entry+0x220>
40004964:	eb0018a6 	bl	4000ac04 <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004968:	ea000000 	b	40004970 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000496c:	eb001887 	bl	4000ab90 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004970:	e5d5201a 	ldrb	r2, [r5, #26]
40004974:	e3520000 	cmp	r2, #0
40004978:	0afffffb 	beq	4000496c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000497c:	e59f01a8 	ldr	r0, [pc, #424]	; 40004b2c <I2cAppThread_Entry+0x228>
40004980:	e59f11a8 	ldr	r1, [pc, #424]	; 40004b30 <I2cAppThread_Entry+0x22c>
40004984:	e5903010 	ldr	r3, [r0, #16]
40004988:	e3a00004 	mov	r0, #4
4000498c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004990:	eb003a49 	bl	400132bc <CyU3PDebugPrint>
40004994:	e59f7198 	ldr	r7, [pc, #408]	; 40004b34 <I2cAppThread_Entry+0x230>
40004998:	e59fb198 	ldr	fp, [pc, #408]	; 40004b38 <I2cAppThread_Entry+0x234>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000499c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049a0:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
400049a4:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
400049a8:	e3a02003 	mov	r2, #3
400049ac:	e28d3014 	add	r3, sp, #20
400049b0:	e3a01020 	mov	r1, #32
400049b4:	e59f0180 	ldr	r0, [pc, #384]	; 40004b3c <I2cAppThread_Entry+0x238>
400049b8:	e58d6000 	str	r6, [sp]
400049bc:	eb00158a 	bl	40009fec <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049c0:	e1a01006 	mov	r1, r6
400049c4:	e597001c 	ldr	r0, [r7, #28]
400049c8:	eb00164f 	bl	4000a30c <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
400049cc:	e597001c 	ldr	r0, [r7, #28]
400049d0:	eb001682 	bl	4000a3e0 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049d4:	e595001c 	ldr	r0, [r5, #28]
400049d8:	e1a01006 	mov	r1, r6
400049dc:	eb00164a 	bl	4000a30c <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400049e0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049e4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400049e8:	e3520000 	cmp	r2, #0
400049ec:	1a000008 	bne	40004a14 <I2cAppThread_Entry+0x110>
400049f0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400049f4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400049f8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049fc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
40004a00:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004a04:	e353003f 	cmp	r3, #63	; 0x3f
40004a08:	93520000 	cmpls	r2, #0
40004a0c:	0afffff8 	beq	400049f4 <I2cAppThread_Entry+0xf0>
40004a10:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
40004a14:	e3520000 	cmp	r2, #0
40004a18:	0a00002d 	beq	40004ad4 <I2cAppThread_Entry+0x1d0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a1c:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a20:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a24:	e083e083 	add	lr, r3, r3, lsl #1
40004a28:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a2c:	e242c014 	sub	ip, r2, #20
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a30:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
40004a34:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
40004a38:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
40004a3c:	e1daa0b8 	ldrh	sl, [sl, #8]
#if 1
					switch(lcCmdDes->CmdID){
40004a40:	e35c0003 	cmp	ip, #3
40004a44:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004a48:	ea00001a 	b	40004ab8 <I2cAppThread_Entry+0x1b4>
40004a4c:	40004ac4 	.word	0x40004ac4
40004a50:	40004aa8 	.word	0x40004aa8
40004a54:	40004a5c 	.word	0x40004a5c
40004a58:	40004a5c 	.word	0x40004a5c
						case 22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40004a5c:	e3a03082 	mov	r3, #130	; 0x82
40004a60:	ebffff81 	bl	4000486c <SensorSetIrisControl>
							delaytime = 300;
							break;
40004a64:	e3a01f4b 	mov	r1, #300	; 0x12c
					}
#endif
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					//delaytime =100; //temp add -6/17/2015
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004a68:	e3a02000 	mov	r2, #0
40004a6c:	e59f00b0 	ldr	r0, [pc, #176]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a70:	eb001873 	bl	4000ac44 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004a74:	e59f00a8 	ldr	r0, [pc, #168]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a78:	eb001861 	bl	4000ac04 <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a7c:	e5d40001 	ldrb	r0, [r4, #1]
40004a80:	e5d41002 	ldrb	r1, [r4, #2]
40004a84:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004a88:	12800001 	addne	r0, r0, #1
40004a8c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004a90:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a94:	0a000014 	beq	40004aec <I2cAppThread_Entry+0x1e8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004a98:	e595001c 	ldr	r0, [r5, #28]
40004a9c:	eb00164f 	bl	4000a3e0 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004aa0:	eb00183a 	bl	4000ab90 <_txe_thread_relinquish>
		}
40004aa4:	eaffffbf 	b	400049a8 <I2cAppThread_Entry+0xa4>
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004aa8:	e3a03052 	mov	r3, #82	; 0x52
40004aac:	ebffff6e 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004ab0:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ab4:	eaffffeb 	b	40004a68 <I2cAppThread_Entry+0x164>
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004ab8:	ebffff33 	bl	4000478c <SensorSetControl>
40004abc:	e1a0100a 	mov	r1, sl
							break;
40004ac0:	eaffffe8 	b	40004a68 <I2cAppThread_Entry+0x164>
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40004ac4:	e3a03082 	mov	r3, #130	; 0x82
40004ac8:	ebffff67 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004acc:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ad0:	eaffffe4 	b	40004a68 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004ad4:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004ad8:	e59f0044 	ldr	r0, [pc, #68]	; 40004b24 <I2cAppThread_Entry+0x220>
40004adc:	eb001858 	bl	4000ac44 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
40004ae0:	e59f003c 	ldr	r0, [pc, #60]	; 40004b24 <I2cAppThread_Entry+0x220>
40004ae4:	eb001846 	bl	4000ac04 <_txe_timer_activate>
40004ae8:	eaffffea 	b	40004a98 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004aec:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
40004af0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004af4:	e35c001f 	cmp	ip, #31
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004af8:	824cc020 	subhi	ip, ip, #32
40004afc:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b00:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b04:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b08:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b0c:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b10:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
40004b14:	e5944034 	ldr	r4, [r4, #52]	; 0x34
40004b18:	e5854010 	str	r4, [r5, #16]
40004b1c:	eaffffdd 	b	40004a98 <I2cAppThread_Entry+0x194>
40004b20:	40004b40 	.word	0x40004b40
40004b24:	40032fe4 	.word	0x40032fe4
40004b28:	4001142c 	.word	0x4001142c
40004b2c:	40032ee4 	.word	0x40032ee4
40004b30:	40011440 	.word	0x40011440
40004b34:	40033130 	.word	0x40033130
40004b38:	40030000 	.word	0x40030000
40004b3c:	40030fb0 	.word	0x40030fb0

40004b40 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
40004b40:	e59f0008 	ldr	r0, [pc, #8]	; 40004b50 <I2CCmdCb+0x10>
40004b44:	e3a01020 	mov	r1, #32
40004b48:	e3a02000 	mov	r2, #0
40004b4c:	ea001556 	b	4000a0ac <_txe_event_flags_set>
40004b50:	40030fb0 	.word	0x40030fb0

40004b54 <CyFxUvcApplnDmaCallback>:
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b54:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004b58:	e92d4030 	push	{r4, r5, lr}
40004b5c:	e1a04002 	mov	r4, r2
40004b60:	e24dd00c 	sub	sp, sp, #12
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b64:	0a00000b 	beq	40004b98 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
                        status, input->buffer_p.count, prodCount, consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004b68:	e3510010 	cmp	r1, #16
40004b6c:	1a000007 	bne	40004b90 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004b70:	e59f310c 	ldr	r3, [pc, #268]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
        streamingStarted = CyTrue;
40004b74:	e3a01001 	mov	r1, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b78:	e1d303b6 	ldrh	r0, [r3, #54]	; 0x36
        streamingStarted = CyTrue;
40004b7c:	e5831038 	str	r1, [r3, #56]	; 0x38
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b80:	e080c001 	add	ip, r0, r1
40004b84:	e1a0280c 	lsl	r2, ip, #16
40004b88:	e1a01822 	lsr	r1, r2, #16
40004b8c:	e1c313b6 	strh	r1, [r3, #54]	; 0x36
        streamingStarted = CyTrue;
    }
}
40004b90:	e28dd00c 	add	sp, sp, #12
40004b94:	e8bd8030 	pop	{r4, r5, pc}
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004b98:	e1d220b4 	ldrh	r2, [r2, #4]
40004b9c:	e59f30e4 	ldr	r3, [pc, #228]	; 40004c88 <CyFxUvcApplnDmaCallback+0x134>
40004ba0:	e1520003 	cmp	r2, r3
40004ba4:	0a00002b 	beq	40004c58 <CyFxUvcApplnDmaCallback+0x104>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004ba8:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004bac:	e59f10d8 	ldr	r1, [pc, #216]	; 40004c8c <CyFxUvcApplnDmaCallback+0x138>
40004bb0:	e245000c 	sub	r0, r5, #12
40004bb4:	e3a0200c 	mov	r2, #12
40004bb8:	ebfffb45 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bbc:	e555200b 	ldrb	r2, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bc0:	e59f30bc 	ldr	r3, [pc, #188]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bc4:	e3821002 	orr	r1, r2, #2
40004bc8:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bcc:	e1d3c2ba 	ldrh	ip, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004bd0:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bd4:	e28c0001 	add	r0, ip, #1
                pbc = input->buffer_p.count;
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004bd8:	e3a02001 	mov	r2, #1
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bdc:	e1c302ba 	strh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004be0:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004be4:	e5832030 	str	r2, [r3, #48]	; 0x30
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004be8:	e1d3e3b4 	ldrh	lr, [r3, #52]	; 0x34
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bec:	e281200c 	add	r2, r1, #12
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004bf0:	e28ec001 	add	ip, lr, #1
40004bf4:	e1a0080c 	lsl	r0, ip, #16
40004bf8:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bfc:	e1a01802 	lsl	r1, r2, #16
40004c00:	e1a01821 	lsr	r1, r1, #16
40004c04:	e3a02000 	mov	r2, #0
40004c08:	e59f0080 	ldr	r0, [pc, #128]	; 40004c90 <CyFxUvcApplnDmaCallback+0x13c>
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c0c:	e1c3e3b4 	strh	lr, [r3, #52]	; 0x34
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004c10:	eb004a76 	bl	400175f0 <CyU3PDmaMultiChannelCommitBuffer>
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c14:	e59f1068 	ldr	r1, [pc, #104]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
40004c18:	e2502000 	subs	r2, r0, #0
40004c1c:	0affffdb 	beq	40004b90 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004c20:	e1d103b4 	ldrh	r0, [r1, #52]	; 0x34
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004c24:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
            {
                prodCount--;
40004c28:	e240e001 	sub	lr, r0, #1
40004c2c:	e1a0c80e 	lsl	ip, lr, #16
40004c30:	e1a0082c 	lsr	r0, ip, #16
40004c34:	e1c103b4 	strh	r0, [r1, #52]	; 0x34
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004c38:	e1d1e3b4 	ldrh	lr, [r1, #52]	; 0x34
40004c3c:	e1d1c3b6 	ldrh	ip, [r1, #54]	; 0x36
40004c40:	e3a00004 	mov	r0, #4
40004c44:	e59f1048 	ldr	r1, [pc, #72]	; 40004c94 <CyFxUvcApplnDmaCallback+0x140>
40004c48:	e58de000 	str	lr, [sp]
40004c4c:	e58dc004 	str	ip, [sp, #4]
40004c50:	eb003999 	bl	400132bc <CyU3PDebugPrint>
40004c54:	eaffffcd 	b	40004b90 <CyFxUvcApplnDmaCallback+0x3c>

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004c58:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004c5c:	e59f1028 	ldr	r1, [pc, #40]	; 40004c8c <CyFxUvcApplnDmaCallback+0x138>
40004c60:	e24e000c 	sub	r0, lr, #12
40004c64:	e3a0200c 	mov	r2, #12
40004c68:	ebfffb19 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c6c:	e59f3010 	ldr	r3, [pc, #16]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
40004c70:	e1d410b4 	ldrh	r1, [r4, #4]
40004c74:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004c78:	e28c0001 	add	r0, ip, #1
40004c7c:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004c80:	eaffffd8 	b	40004be8 <CyFxUvcApplnDmaCallback+0x94>
40004c84:	40030fb0 	.word	0x40030fb0
40004c88:	00003ff0 	.word	0x00003ff0
40004c8c:	40030480 	.word	0x40030480
40004c90:	40032f04 	.word	0x40032f04
40004c94:	40011464 	.word	0x40011464

40004c98 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004c98:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004c9c:	e92d4070 	push	{r4, r5, r6, lr}
40004ca0:	e1a03001 	mov	r3, r1
40004ca4:	e24dd010 	sub	sp, sp, #16
40004ca8:	e1a04000 	mov	r4, r0
    switch (evtype)
40004cac:	0a000036 	beq	40004d8c <CyFxUVCApplnUSBEventCB+0xf4>
40004cb0:	e3500004 	cmp	r0, #4
40004cb4:	0a00001f 	beq	40004d38 <CyFxUVCApplnUSBEventCB+0xa0>
40004cb8:	e3500001 	cmp	r0, #1
40004cbc:	0a000001 	beq	40004cc8 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004cc0:	e28dd010 	add	sp, sp, #16
40004cc4:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cc8:	e59f5128 	ldr	r5, [pc, #296]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004ccc:	e1a02000 	mov	r2, r0
40004cd0:	e59f1124 	ldr	r1, [pc, #292]	; 40004dfc <CyFxUVCApplnUSBEventCB+0x164>
40004cd4:	e3a00004 	mov	r0, #4
40004cd8:	eb003977 	bl	400132bc <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004cdc:	e1a00004 	mov	r0, r4
40004ce0:	eb005a85 	bl	4001b6fc <CyU3PGpifDisable>
            gpif_initialized = 0;
40004ce4:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ce8:	e1a01004 	mov	r1, r4
40004cec:	e1a00005 	mov	r0, r5
40004cf0:	e3a02002 	mov	r2, #2
40004cf4:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cf8:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            isUsbConnected = CyFalse;
40004cfc:	e585c040 	str	ip, [r5, #64]	; 0x40
            streamingStarted = CyFalse;
40004d00:	e585c038 	str	ip, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d04:	e58dc000 	str	ip, [sp]
40004d08:	eb0014b7 	bl	40009fec <_txe_event_flags_get>
40004d0c:	e2504000 	subs	r4, r0, #0
40004d10:	1affffea 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d14:	e3e01001 	mvn	r1, #1
40004d18:	e3a02002 	mov	r2, #2
40004d1c:	e1a00005 	mov	r0, r5
40004d20:	eb0014e1 	bl	4000a0ac <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004d24:	e1a00005 	mov	r0, r5
40004d28:	e3a01002 	mov	r1, #2
40004d2c:	e1a02004 	mov	r2, r4
40004d30:	eb0014dd 	bl	4000a0ac <_txe_event_flags_set>
40004d34:	eaffffe1 	b	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d38:	e59f50b8 	ldr	r5, [pc, #184]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d3c:	e59f10bc 	ldr	r1, [pc, #188]	; 40004e00 <CyFxUVCApplnUSBEventCB+0x168>
40004d40:	e1a02000 	mov	r2, r0
40004d44:	eb00395c 	bl	400132bc <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004d48:	e3a00001 	mov	r0, #1
40004d4c:	eb005a6a 	bl	4001b6fc <CyU3PGpifDisable>
            gpif_initialized = 0;
40004d50:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d54:	e3a01001 	mov	r1, #1
40004d58:	e3a02002 	mov	r2, #2
40004d5c:	e1a00005 	mov	r0, r5
40004d60:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d64:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004d68:	e585c038 	str	ip, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d6c:	e58dc000 	str	ip, [sp]
40004d70:	eb00149d 	bl	40009fec <_txe_event_flags_get>
40004d74:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d78:	01a00005 	moveq	r0, r5
40004d7c:	03e01001 	mvneq	r1, #1
40004d80:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d84:	1affffcd 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
40004d88:	eaffffe4 	b	40004d20 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d8c:	e59f5064 	ldr	r5, [pc, #100]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d90:	e1a02000 	mov	r2, r0
40004d94:	e59f1068 	ldr	r1, [pc, #104]	; 40004e04 <CyFxUVCApplnUSBEventCB+0x16c>
40004d98:	e3a00004 	mov	r0, #4
40004d9c:	eb003946 	bl	400132bc <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004da0:	e3a00001 	mov	r0, #1
40004da4:	eb005a54 	bl	4001b6fc <CyU3PGpifDisable>
            gpif_initialized = 0;
40004da8:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dac:	e1a00005 	mov	r0, r5
40004db0:	e3a01001 	mov	r1, #1
40004db4:	e1a02004 	mov	r2, r4
40004db8:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004dbc:	e585603c 	str	r6, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004dc0:	e5856038 	str	r6, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dc4:	e58d6000 	str	r6, [sp]
40004dc8:	eb001487 	bl	40009fec <_txe_event_flags_get>
40004dcc:	e2506000 	subs	r6, r0, #0
40004dd0:	1affffba 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dd4:	e1a02004 	mov	r2, r4
40004dd8:	e1a00005 	mov	r0, r5
40004ddc:	e3e01001 	mvn	r1, #1
40004de0:	eb0014b1 	bl	4000a0ac <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004de4:	e1a00005 	mov	r0, r5
40004de8:	e1a01004 	mov	r1, r4
40004dec:	e1a02006 	mov	r2, r6
40004df0:	eb0014ad 	bl	4000a0ac <_txe_event_flags_set>
40004df4:	eaffffb1 	b	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
40004df8:	40030fb0 	.word	0x40030fb0
40004dfc:	400114f4 	.word	0x400114f4
40004e00:	400114b0 	.word	0x400114b0
40004e04:	400114d0 	.word	0x400114d0

40004e08 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e08:	e59f32c0 	ldr	r3, [pc, #704]	; 400050d0 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e10:	e59fc2bc 	ldr	ip, [pc, #700]	; 400050d4 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e14:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e18:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e1c:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e20:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e24:	e59f22ac 	ldr	r2, [pc, #684]	; 400050d8 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e28:	e59f02ac 	ldr	r0, [pc, #684]	; 400050dc <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e2c:	e59f32ac 	ldr	r3, [pc, #684]	; 400050e0 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e30:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e34:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e38:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e3c:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e40:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e44:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e48:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e4c:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e50:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e54:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e58:	0a00004f 	beq	40004f9c <CyFxUVCApplnUSBSetupCB+0x194>
40004e5c:	9a000006 	bls	40004e7c <CyFxUVCApplnUSBSetupCB+0x74>
40004e60:	e3540021 	cmp	r4, #33	; 0x21
40004e64:	0a00003a 	beq	40004f54 <CyFxUVCApplnUSBSetupCB+0x14c>
40004e68:	e35400a1 	cmp	r4, #161	; 0xa1
40004e6c:	0a000038 	beq	40004f54 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004e70:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004e74:	e28dd010 	add	sp, sp, #16
40004e78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e7c:	e3540001 	cmp	r4, #1
40004e80:	1afffffa 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004e84:	e358000b 	cmp	r8, #11
40004e88:	1afffff8 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004e8c:	e3550001 	cmp	r5, #1
40004e90:	1afffff6 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
40004e94:	e3570000 	cmp	r7, #0
40004e98:	1afffff4 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004e9c:	e59f4240 	ldr	r4, [pc, #576]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004ea0:	e59f1240 	ldr	r1, [pc, #576]	; 400050e8 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004ea4:	e3a00004 	mov	r0, #4
40004ea8:	eb003903 	bl	400132bc <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004eac:	e1a00005 	mov	r0, r5
40004eb0:	eb005a11 	bl	4001b6fc <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004eb4:	e1a01005 	mov	r1, r5
40004eb8:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004ebc:	e584703c 	str	r7, [r4, #60]	; 0x3c
                    streamingStarted = CyFalse;
40004ec0:	e5847038 	str	r7, [r4, #56]	; 0x38
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ec4:	eb00639e 	bl	4001dd44 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004ec8:	e3a00064 	mov	r0, #100	; 0x64
40004ecc:	eb003a6b 	bl	40013880 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004ed0:	e59f0214 	ldr	r0, [pc, #532]	; 400050ec <CyFxUVCApplnUSBSetupCB+0x2e4>
40004ed4:	eb004dff 	bl	400186d8 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ed8:	e3a00083 	mov	r0, #131	; 0x83
40004edc:	eb005f92 	bl	4001cd2c <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004ee0:	e1a01007 	mov	r1, r7
40004ee4:	e3a00083 	mov	r0, #131	; 0x83
40004ee8:	eb006395 	bl	4001dd44 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004eec:	e3a00064 	mov	r0, #100	; 0x64
40004ef0:	eb003a62 	bl	40013880 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004ef4:	e1a01007 	mov	r1, r7
40004ef8:	e1a02005 	mov	r2, r5
40004efc:	e3a00083 	mov	r0, #131	; 0x83
40004f00:	eb006455 	bl	4001e05c <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004f04:	eb005e90 	bl	4001c94c <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004f08:	e5845044 	str	r5, [r4, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f0c:	e1a00004 	mov	r0, r4
40004f10:	e1a01005 	mov	r1, r5
40004f14:	e3a02002 	mov	r2, #2
40004f18:	e28d300c 	add	r3, sp, #12
40004f1c:	e58d7000 	str	r7, [sp]
40004f20:	eb001431 	bl	40009fec <_txe_event_flags_get>
40004f24:	e2506000 	subs	r6, r0, #0
40004f28:	1a00002e 	bne	40004fe8 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f2c:	e3e01001 	mvn	r1, #1
40004f30:	e3a02002 	mov	r2, #2
40004f34:	e1a00004 	mov	r0, r4
40004f38:	eb00145b 	bl	4000a0ac <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f3c:	e1a00004 	mov	r0, r4
40004f40:	e3a01002 	mov	r1, #2
40004f44:	e1a02006 	mov	r2, r6
40004f48:	eb001457 	bl	4000a0ac <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004f4c:	e1a00005 	mov	r0, r5
40004f50:	eaffffc7 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004f54:	e21550ff 	ands	r5, r5, #255	; 0xff
40004f58:	1a00001a 	bne	40004fc8 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004f5c:	e1a02005 	mov	r2, r5
40004f60:	e59f017c 	ldr	r0, [pc, #380]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004f64:	e3a01004 	mov	r1, #4
40004f68:	eb00144f 	bl	4000a0ac <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f6c:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f70:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f74:	0affffbe 	beq	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004f78:	e59f1170 	ldr	r1, [pc, #368]	; 400050f0 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004f7c:	e3a00004 	mov	r0, #4
40004f80:	eb0038cd 	bl	400132bc <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004f84:	e1a00005 	mov	r0, r5
40004f88:	e3a01001 	mov	r1, #1
40004f8c:	e1a02005 	mov	r2, r5
40004f90:	eb006431 	bl	4001e05c <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f94:	e3a00001 	mov	r0, #1
40004f98:	eaffffb5 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004f9c:	e3580001 	cmp	r8, #1
40004fa0:	1affffb2 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004fa4:	e3550083 	cmp	r5, #131	; 0x83
40004fa8:	1affffb0 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004fac:	e59f7130 	ldr	r7, [pc, #304]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fb0:	e5976038 	ldr	r6, [r7, #56]	; 0x38
40004fb4:	e3560001 	cmp	r6, #1
40004fb8:	0a000015 	beq	40005014 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004fbc:	eb005e62 	bl	4001c94c <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004fc0:	e1a00008 	mov	r0, r8
40004fc4:	eaffffaa 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004fc8:	e3550001 	cmp	r5, #1
40004fcc:	1affffa7 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004fd0:	e3a02000 	mov	r2, #0
40004fd4:	e59f0108 	ldr	r0, [pc, #264]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fd8:	e3a01008 	mov	r1, #8
40004fdc:	eb001432 	bl	4000a0ac <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004fe0:	e2502000 	subs	r2, r0, #0
40004fe4:	1a000001 	bne	40004ff0 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004fe8:	e1a00005 	mov	r0, r5
40004fec:	eaffffa0 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004ff0:	e59f10fc 	ldr	r1, [pc, #252]	; 400050f4 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004ff4:	e3a00004 	mov	r0, #4
40004ff8:	eb0038af 	bl	400132bc <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ffc:	e3a00000 	mov	r0, #0
40005000:	e1a01005 	mov	r1, r5
40005004:	e1a02000 	mov	r2, r0
40005008:	eb006413 	bl	4001e05c <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
4000500c:	e1a00005 	mov	r0, r5
40005010:	eaffff97 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40005014:	e59f10dc 	ldr	r1, [pc, #220]	; 400050f8 <CyFxUVCApplnUSBSetupCB+0x2f0>
40005018:	e3a00004 	mov	r0, #4
4000501c:	eb0038a6 	bl	400132bc <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005020:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40005024:	e1a00006 	mov	r0, r6
40005028:	eb0059b3 	bl	4001b6fc <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
4000502c:	e1a01006 	mov	r1, r6
40005030:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005034:	e587803c 	str	r8, [r7, #60]	; 0x3c
                        streamingStarted = CyFalse;
40005038:	e5878038 	str	r8, [r7, #56]	; 0x38

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
4000503c:	eb006340 	bl	4001dd44 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005040:	e3a00064 	mov	r0, #100	; 0x64
40005044:	eb003a0d 	bl	40013880 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40005048:	e59f009c 	ldr	r0, [pc, #156]	; 400050ec <CyFxUVCApplnUSBSetupCB+0x2e4>
4000504c:	eb004da1 	bl	400186d8 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40005050:	e1a00005 	mov	r0, r5
40005054:	eb005f34 	bl	4001cd2c <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40005058:	e1a01008 	mov	r1, r8
4000505c:	e1a00005 	mov	r0, r5
40005060:	eb006337 	bl	4001dd44 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005064:	e3a00064 	mov	r0, #100	; 0x64
40005068:	eb003a04 	bl	40013880 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
4000506c:	e1a01008 	mov	r1, r8
40005070:	e1a02006 	mov	r2, r6
40005074:	e1a00005 	mov	r0, r5
40005078:	eb0063f7 	bl	4001e05c <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
4000507c:	eb005e32 	bl	4001c94c <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40005080:	e5876044 	str	r6, [r7, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40005084:	e1a00007 	mov	r0, r7
40005088:	e1a01006 	mov	r1, r6
4000508c:	e1a02004 	mov	r2, r4
40005090:	e28d300c 	add	r3, sp, #12
40005094:	e58d8000 	str	r8, [sp]
40005098:	eb0013d3 	bl	40009fec <_txe_event_flags_get>
4000509c:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050a0:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
400050a4:	1affff72 	bne	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
400050a8:	e3e01001 	mvn	r1, #1
400050ac:	e1a02004 	mov	r2, r4
400050b0:	e1a00007 	mov	r0, r7
400050b4:	eb0013fc 	bl	4000a0ac <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
400050b8:	e1a00007 	mov	r0, r7
400050bc:	e1a01004 	mov	r1, r4
400050c0:	e1a02005 	mov	r2, r5
400050c4:	eb0013f8 	bl	4000a0ac <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050c8:	e1a00006 	mov	r0, r6
400050cc:	eaffff68 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
400050d0:	40032ee0 	.word	0x40032ee0
400050d4:	4003312c 	.word	0x4003312c
400050d8:	40032fe0 	.word	0x40032fe0
400050dc:	40033010 	.word	0x40033010
400050e0:	40033012 	.word	0x40033012
400050e4:	40030fb0 	.word	0x40030fb0
400050e8:	40011580 	.word	0x40011580
400050ec:	40032f04 	.word	0x40032f04
400050f0:	40011514 	.word	0x40011514
400050f4:	4001154c 	.word	0x4001154c
400050f8:	40011598 	.word	0x40011598

400050fc <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
400050fc:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40005100:	e92d4010 	push	{r4, lr}
40005104:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40005108:	18bd8010 	popne	{r4, pc}
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
4000510c:	e59f30cc 	ldr	r3, [pc, #204]	; 400051e0 <CyFxGpifCB+0xe4>
40005110:	e5d33048 	ldrb	r3, [r3, #72]	; 0x48
40005114:	e3530003 	cmp	r3, #3
40005118:	0a000021 	beq	400051a4 <CyFxGpifCB+0xa8>
            	//lineCount++;
            	return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
4000511c:	e3530002 	cmp	r3, #2
40005120:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40005124:	e2410008 	sub	r0, r1, #8
40005128:	e350000a 	cmp	r0, #10
4000512c:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40005130:	ea000023 	b	400051c4 <CyFxGpifCB+0xc8>
40005134:	40005164 	.word	0x40005164
40005138:	400051c4 	.word	0x400051c4
4000513c:	400051c4 	.word	0x400051c4
40005140:	40005160 	.word	0x40005160
40005144:	400051c4 	.word	0x400051c4
40005148:	400051c4 	.word	0x400051c4
4000514c:	400051c4 	.word	0x400051c4
40005150:	4000519c 	.word	0x4000519c
40005154:	400051c4 	.word	0x400051c4
40005158:	400051c4 	.word	0x400051c4
4000515c:	40005160 	.word	0x40005160
40005160:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005164:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005168:	e59f0074 	ldr	r0, [pc, #116]	; 400051e4 <CyFxGpifCB+0xe8>
4000516c:	eb00508a 	bl	4001939c <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005170:	e2502000 	subs	r2, r0, #0
40005174:	0afffff9 	beq	40005160 <CyFxGpifCB+0x64>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005178:	e3a00004 	mov	r0, #4
4000517c:	e59f1064 	ldr	r1, [pc, #100]	; 400051e8 <CyFxGpifCB+0xec>
40005180:	eb00384d 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40005184:	e59f1060 	ldr	r1, [pc, #96]	; 400051ec <CyFxGpifCB+0xf0>
40005188:	e3a00004 	mov	r0, #4
4000518c:	eb00384a 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005190:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40005194:	eb000ecc 	bl	40008ccc <_tx_thread_sleep>
40005198:	eafffff9 	b	40005184 <CyFxGpifCB+0x88>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
4000519c:	e3a01001 	mov	r1, #1
400051a0:	eafffff0 	b	40005168 <CyFxGpifCB+0x6c>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
400051a4:	e241200b 	sub	r2, r1, #11
400051a8:	e3520003 	cmp	r2, #3
400051ac:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400051b0:	ea000006 	b	400051d0 <CyFxGpifCB+0xd4>
400051b4:	40005164 	.word	0x40005164
400051b8:	4000519c 	.word	0x4000519c
400051bc:	40005160 	.word	0x40005160
400051c0:	40005160 	.word	0x40005160
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
400051c4:	e59f1024 	ldr	r1, [pc, #36]	; 400051f0 <CyFxGpifCB+0xf4>
400051c8:	e3a00001 	mov	r0, #1
400051cc:	eb00383a 	bl	400132bc <CyU3PDebugPrint>
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
400051d0:	e59f101c 	ldr	r1, [pc, #28]	; 400051f4 <CyFxGpifCB+0xf8>
400051d4:	e3a00004 	mov	r0, #4
    }
   // CyU3PDebugPrint(4,"\r\n commiteof state = %d",currentState);
}
400051d8:	e8bd4010 	pop	{r4, lr}
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
400051dc:	ea003836 	b	400132bc <CyU3PDebugPrint>
400051e0:	40030fb0 	.word	0x40030fb0
400051e4:	40032f04 	.word	0x40032f04
400051e8:	400115d4 	.word	0x400115d4
400051ec:	40011604 	.word	0x40011604
400051f0:	400115bc 	.word	0x400115bc
400051f4:	40011618 	.word	0x40011618

400051f8 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400051f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400051fc:	e59f41fc 	ldr	r4, [pc, #508]	; 40005400 <I2CCmdHandler+0x208>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
40005200:	e24dd034 	sub	sp, sp, #52	; 0x34
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005204:	e5d41054 	ldrb	r1, [r4, #84]	; 0x54
//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005208:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
4000520c:	e5d4604d 	ldrb	r6, [r4, #77]	; 0x4d
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005210:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
40005214:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
40005218:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
4000521c:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
40005220:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
40005224:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
40005228:	e58d1018 	str	r1, [sp, #24]
4000522c:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
40005230:	e3a00004 	mov	r0, #4
40005234:	e58d301c 	str	r3, [sp, #28]
40005238:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
4000523c:	e1a03006 	mov	r3, r6
40005240:	e59f11bc 	ldr	r1, [pc, #444]	; 40005404 <I2CCmdHandler+0x20c>
40005244:	e1a02005 	mov	r2, r5
40005248:	e88d4080 	stm	sp, {r7, lr}
4000524c:	e58d8008 	str	r8, [sp, #8]
40005250:	e58da00c 	str	sl, [sp, #12]
40005254:	e58d9010 	str	r9, [sp, #16]
40005258:	e58db014 	str	fp, [sp, #20]
4000525c:	e58dc020 	str	ip, [sp, #32]
40005260:	eb003815 	bl	400132bc <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
40005264:	e5d4304f 	ldrb	r3, [r4, #79]	; 0x4f
40005268:	e3530052 	cmp	r3, #82	; 0x52
4000526c:	0a00001a 	beq	400052dc <I2CCmdHandler+0xe4>
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);

	}
	if(CmdType == 0)//I2C read
40005270:	e3550000 	cmp	r5, #0
				I2CCMDArry[9] = buf[0];
				if(CmdDataLen == 2){
					I2CCMDArry[10] = buf[1];
				}
			}*/
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005274:	03e03000 	mvneq	r3, #0
40005278:	05c43057 	strbeq	r3, [r4, #87]	; 0x57
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);

	}
	if(CmdType == 0)//I2C read
4000527c:	0a000001 	beq	40005288 <I2CCmdHandler+0x90>
			}*/
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
40005280:	e3550001 	cmp	r5, #1
40005284:	0a000001 	beq	40005290 <I2CCmdHandler+0x98>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
40005288:	e28dd034 	add	sp, sp, #52	; 0x34
4000528c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
40005290:	e3560002 	cmp	r6, #2
40005294:	0a000023 	beq	40005328 <I2CCmdHandler+0x130>
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005298:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
4000529c:	e59f315c 	ldr	r3, [pc, #348]	; 40005400 <I2CCmdHandler+0x208>
400052a0:	e20110fe 	and	r1, r1, #254	; 0xfe
400052a4:	e3510082 	cmp	r1, #130	; 0x82
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400052a8:	15d35050 	ldrbne	r5, [r3, #80]	; 0x50
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400052ac:	1a000002 	bne	400052bc <I2CCmdHandler+0xc4>
400052b0:	e5d35050 	ldrb	r5, [r3, #80]	; 0x50
400052b4:	e3550030 	cmp	r5, #48	; 0x30
400052b8:	0a00003b 	beq	400053ac <I2CCmdHandler+0x1b4>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400052bc:	e5d33051 	ldrb	r3, [r3, #81]	; 0x51
				}
				else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
400052c0:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
400052c4:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
400052c8:	e20200fe 	and	r0, r2, #254	; 0xfe
400052cc:	e1a02005 	mov	r2, r5
400052d0:	e58de000 	str	lr, [sp]
400052d4:	ebfffbac 	bl	4000418c <SensorWrite2B>
400052d8:	eaffffea 	b	40005288 <I2CCmdHandler+0x90>
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
400052dc:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
400052e0:	e3530030 	cmp	r3, #48	; 0x30
400052e4:	1affffe1 	bne	40005270 <I2CCmdHandler+0x78>
400052e8:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
400052ec:	e3530001 	cmp	r3, #1
400052f0:	1affffde 	bne	40005270 <I2CCmdHandler+0x78>
	{
		ROIMode = I2CCMDArry[9]&0x03; //set ROI mode based on the I2C data.
400052f4:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
400052f8:	e59f0108 	ldr	r0, [pc, #264]	; 40005408 <I2CCmdHandler+0x210>
400052fc:	e202e003 	and	lr, r2, #3
40005300:	e5c0e48c 	strb	lr, [r0, #1164]	; 0x48c
		if(is60Hz==CyFalse)
40005304:	e594c058 	ldr	ip, [r4, #88]	; 0x58
			{
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);
40005308:	e59f10fc 	ldr	r1, [pc, #252]	; 4000540c <I2CCmdHandler+0x214>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
	{
		ROIMode = I2CCMDArry[9]&0x03; //set ROI mode based on the I2C data.
		if(is60Hz==CyFalse)
4000530c:	e35c0000 	cmp	ip, #0
			{
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
40005310:	03822080 	orreq	r2, r2, #128	; 0x80
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);
40005314:	e5d0348c 	ldrb	r3, [r0, #1164]	; 0x48c
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
	{
		ROIMode = I2CCMDArry[9]&0x03; //set ROI mode based on the I2C data.
		if(is60Hz==CyFalse)
			{
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
40005318:	05c42055 	strbeq	r2, [r4, #85]	; 0x55
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);
4000531c:	e3a00004 	mov	r0, #4
40005320:	eb0037e5 	bl	400132bc <CyU3PDebugPrint>
40005324:	eaffffd1 	b	40005270 <I2CCmdHandler+0x78>
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
40005328:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
4000532c:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005330:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005334:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005338:	e3a02000 	mov	r2, #0
4000533c:	e20000fe 	and	r0, r0, #254	; 0xfe
40005340:	e58de000 	str	lr, [sp]
40005344:	ebfffbc3 	bl	40004258 <SensorWrite2B2>
40005348:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
4000534c:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005350:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005354:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005358:	e20200fe 	and	r0, r2, #254	; 0xfe
4000535c:	e3a02000 	mov	r2, #0
40005360:	e58dc000 	str	ip, [sp]
40005364:	ebfffbbb 	bl	40004258 <SensorWrite2B2>
40005368:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
4000536c:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005370:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005374:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005378:	e3a02000 	mov	r2, #0
4000537c:	e20000fe 	and	r0, r0, #254	; 0xfe
40005380:	e58dc000 	str	ip, [sp]
40005384:	ebfffbb3 	bl	40004258 <SensorWrite2B2>
40005388:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
4000538c:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005390:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005394:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005398:	e20200fe 	and	r0, r2, #254	; 0xfe
4000539c:	e3a02000 	mov	r2, #0
400053a0:	e58dc000 	str	ip, [sp]
400053a4:	ebfffbab 	bl	40004258 <SensorWrite2B2>
400053a8:	eaffffb6 	b	40005288 <I2CCmdHandler+0x90>
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400053ac:	e5d33051 	ldrb	r3, [r3, #81]	; 0x51
400053b0:	e3530010 	cmp	r3, #16
400053b4:	1affffc1 	bne	400052c0 <I2CCmdHandler+0xc8>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
400053b8:	e59f4050 	ldr	r4, [pc, #80]	; 40005410 <I2CCmdHandler+0x218>
400053bc:	e3e01000 	mvn	r1, #0
400053c0:	e594001c 	ldr	r0, [r4, #28]
400053c4:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400053c8:	eb0013cf 	bl	4000a30c <_txe_mutex_get>
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
400053cc:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400053d0:	e3a0c000 	mov	ip, #0
400053d4:	e1a02003 	mov	r2, r3
400053d8:	e1a00004 	mov	r0, r4
400053dc:	e3a01017 	mov	r1, #23
400053e0:	e1a03005 	mov	r3, r5
400053e4:	e58dc000 	str	ip, [sp]
400053e8:	e58dc004 	str	ip, [sp, #4]
400053ec:	ebfff831 	bl	400034b8 <cmdSet>
					CyU3PMutexPut(cmdQuptr->ringMux);
400053f0:	e594001c 	ldr	r0, [r4, #28]
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
400053f4:	e28dd034 	add	sp, sp, #52	; 0x34
400053f8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400053fc:	ea0013f7 	b	4000a3e0 <_txe_mutex_put>
40005400:	40030fb0 	.word	0x40030fb0
40005404:	40011630 	.word	0x40011630
40005408:	40030000 	.word	0x40030000
4000540c:	4001167c 	.word	0x4001167c
40005410:	40032ee4 	.word	0x40032ee4

40005414 <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005414:	e92d4070 	push	{r4, r5, r6, lr}
40005418:	e1a06001 	mov	r6, r1
4000541c:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005420:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005424:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005428:	e3e01000 	mvn	r1, #0
4000542c:	e590001c 	ldr	r0, [r0, #28]
40005430:	eb0013b5 	bl	4000a30c <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005434:	e0650006 	rsb	r0, r5, r6
40005438:	e270c000 	rsbs	ip, r0, #0
4000543c:	e0acc000 	adc	ip, ip, r0
40005440:	e3a01014 	mov	r1, #20
40005444:	e3a02027 	mov	r2, #39	; 0x27
40005448:	e3a03030 	mov	r3, #48	; 0x30
4000544c:	e1a00004 	mov	r0, r4
40005450:	e58dc000 	str	ip, [sp]
40005454:	e58d5004 	str	r5, [sp, #4]
40005458:	ebfff816 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
4000545c:	e1560005 	cmp	r6, r5
40005460:	03a06002 	moveq	r6, #2
40005464:	11a06005 	movne	r6, r5
40005468:	e1a00004 	mov	r0, r4
4000546c:	e3a01015 	mov	r1, #21
40005470:	e3a02025 	mov	r2, #37	; 0x25
40005474:	e3a03030 	mov	r3, #48	; 0x30
40005478:	e58d6000 	str	r6, [sp]
4000547c:	e58d5004 	str	r5, [sp, #4]
40005480:	ebfff80c 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005484:	e594001c 	ldr	r0, [r4, #28]
}
40005488:	e28dd008 	add	sp, sp, #8
4000548c:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005490:	ea0013d2 	b	4000a3e0 <_txe_mutex_put>

40005494 <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
40005494:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005498:	e350001f 	cmp	r0, #31
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
4000549c:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400054a0:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400054a4:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400054a8:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400054ac:	9a000023 	bls	40005540 <ControlHandle+0xac>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400054b0:	e59f6f20 	ldr	r6, [pc, #3872]	; 400063d8 <ControlHandle+0xf44>
400054b4:	e0872087 	add	r2, r7, r7, lsl #1
400054b8:	e1a02182 	lsl	r2, r2, #3
400054bc:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
400054c0:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
400054c4:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
400054c8:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400054cc:	e59f3f08 	ldr	r3, [pc, #3848]	; 400063dc <ControlHandle+0xf48>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400054d0:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400054d4:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400054d8:	e3550083 	cmp	r5, #131	; 0x83
400054dc:	0a000022 	beq	4000556c <ControlHandle+0xd8>
400054e0:	9a00002b 	bls	40005594 <ControlHandle+0x100>
400054e4:	e3550085 	cmp	r5, #133	; 0x85
400054e8:	0a000084 	beq	40005700 <ControlHandle+0x26c>
400054ec:	3a000072 	bcc	400056bc <ControlHandle+0x228>
400054f0:	e3550086 	cmp	r5, #134	; 0x86
400054f4:	0a0000bd 	beq	400057f0 <ControlHandle+0x35c>
400054f8:	e3550087 	cmp	r5, #135	; 0x87
400054fc:	0a0000b1 	beq	400057c8 <ControlHandle+0x334>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005500:	e3a00000 	mov	r0, #0
40005504:	e3a01001 	mov	r1, #1
40005508:	e1a02000 	mov	r2, r0
4000550c:	eb0062d2 	bl	4001e05c <CyU3PUsbStall>
			  break;
40005510:	e3a0e0ff 	mov	lr, #255	; 0xff
40005514:	e1a0400e 	mov	r4, lr
40005518:	e1a0c00e 	mov	ip, lr
4000551c:	e1a0300e 	mov	r3, lr
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005520:	e59f1eb8 	ldr	r1, [pc, #3768]	; 400063e0 <ControlHandle+0xf4c>
40005524:	e1a02005 	mov	r2, r5
40005528:	e3a00004 	mov	r0, #4
4000552c:	e58dc000 	str	ip, [sp]
40005530:	e98d4010 	stmib	sp, {r4, lr}
40005534:	eb003760 	bl	400132bc <CyU3PDebugPrint>
}
40005538:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000553c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005540:	e59f6e90 	ldr	r6, [pc, #3728]	; 400063d8 <ControlHandle+0xf44>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005544:	e59f3e90 	ldr	r3, [pc, #3728]	; 400063dc <ControlHandle+0xf48>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005548:	e0805080 	add	r5, r0, r0, lsl #1
4000554c:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005550:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005554:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005558:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
4000555c:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005560:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
40005564:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005568:	1affffdc 	bne	400054e0 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
4000556c:	e354001f 	cmp	r4, #31
40005570:	9a0000bc 	bls	40005868 <ControlHandle+0x3d4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005574:	e0877087 	add	r7, r7, r7, lsl #1
40005578:	e0866187 	add	r6, r6, r7, lsl #3
4000557c:	e59fae94 	ldr	sl, [pc, #3732]	; 40006418 <ControlHandle+0xf84>
40005580:	e5d60005 	ldrb	r0, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005584:	e5d6c006 	ldrb	ip, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005588:	e5ca005c 	strb	r0, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
4000558c:	e5cac05d 	strb	ip, [sl, #93]	; 0x5d
40005590:	ea00000b 	b	400055c4 <ControlHandle+0x130>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005594:	e3550081 	cmp	r5, #129	; 0x81
40005598:	0a000064 	beq	40005730 <ControlHandle+0x29c>
4000559c:	9a000010 	bls	400055e4 <ControlHandle+0x150>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
400055a0:	e354001f 	cmp	r4, #31
400055a4:	9a0000a3 	bls	40005838 <ControlHandle+0x3a4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400055a8:	e0877087 	add	r7, r7, r7, lsl #1
400055ac:	e0866187 	add	r6, r6, r7, lsl #3
400055b0:	e59fae60 	ldr	sl, [pc, #3680]	; 40006418 <ControlHandle+0xf84>
400055b4:	e5d62003 	ldrb	r2, [r6, #3]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400055b8:	e5d6e004 	ldrb	lr, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400055bc:	e5ca205c 	strb	r2, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400055c0:	e5cae05d 	strb	lr, [sl, #93]	; 0x5d
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400055c4:	e1a00008 	mov	r0, r8
400055c8:	e59f1e14 	ldr	r1, [pc, #3604]	; 400063e4 <ControlHandle+0xf50>
400055cc:	eb006077 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400055d0:	e3a0e0ff 	mov	lr, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400055d4:	e5da405c 	ldrb	r4, [sl, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
400055d8:	e1a0c00e 	mov	ip, lr
400055dc:	e1a0300e 	mov	r3, lr
400055e0:	eaffffce 	b	40005520 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400055e4:	e3550001 	cmp	r5, #1
400055e8:	1affffc4 	bne	40005500 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400055ec:	e59f1e24 	ldr	r1, [pc, #3620]	; 40006418 <ControlHandle+0xf84>
400055f0:	e28d2026 	add	r2, sp, #38	; 0x26
400055f4:	e3a00020 	mov	r0, #32
400055f8:	e281105c 	add	r1, r1, #92	; 0x5c
400055fc:	eb005dfd 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005600:	e2502000 	subs	r2, r0, #0
40005604:	1a000306 	bne	40006224 <ControlHandle+0xd90>
			   {
				  Data0 = glEp0Buffer[0];
40005608:	e59fee08 	ldr	lr, [pc, #3592]	; 40006418 <ControlHandle+0xf84>
4000560c:	e5de305c 	ldrb	r3, [lr, #92]	; 0x5c
				  Data1 = glEp0Buffer[1];
40005610:	e59fee00 	ldr	lr, [pc, #3584]	; 40006418 <ControlHandle+0xf84>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
40005614:	e58d3018 	str	r3, [sp, #24]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005618:	e5de005e 	ldrb	r0, [lr, #94]	; 0x5e
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
4000561c:	e5dec05d 	ldrb	ip, [lr, #93]	; 0x5d
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005620:	e58d001c 	str	r0, [sp, #28]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005624:	e3540022 	cmp	r4, #34	; 0x22
40005628:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
4000562c:	ea0002ce 	b	4000616c <ControlHandle+0xcd8>
40005630:	400061d4 	.word	0x400061d4
40005634:	40006104 	.word	0x40006104
40005638:	4000616c 	.word	0x4000616c
4000563c:	4000616c 	.word	0x4000616c
40005640:	400060a0 	.word	0x400060a0
40005644:	40005f5c 	.word	0x40005f5c
40005648:	40005ee0 	.word	0x40005ee0
4000564c:	4000616c 	.word	0x4000616c
40005650:	4000616c 	.word	0x4000616c
40005654:	4000616c 	.word	0x4000616c
40005658:	4000616c 	.word	0x4000616c
4000565c:	40005e58 	.word	0x40005e58
40005660:	4000616c 	.word	0x4000616c
40005664:	4000616c 	.word	0x4000616c
40005668:	4000616c 	.word	0x4000616c
4000566c:	4000616c 	.word	0x4000616c
40005670:	40005d60 	.word	0x40005d60
40005674:	4000616c 	.word	0x4000616c
40005678:	4000616c 	.word	0x4000616c
4000567c:	4000616c 	.word	0x4000616c
40005680:	4000616c 	.word	0x4000616c
40005684:	4000616c 	.word	0x4000616c
40005688:	4000616c 	.word	0x4000616c
4000568c:	4000616c 	.word	0x4000616c
40005690:	4000616c 	.word	0x4000616c
40005694:	40005ca4 	.word	0x40005ca4
40005698:	4000616c 	.word	0x4000616c
4000569c:	4000616c 	.word	0x4000616c
400056a0:	40005de8 	.word	0x40005de8
400056a4:	4000616c 	.word	0x4000616c
400056a8:	40005c48 	.word	0x40005c48
400056ac:	40005bc4 	.word	0x40005bc4
400056b0:	40005b2c 	.word	0x40005b2c
400056b4:	40005b14 	.word	0x40005b14
400056b8:	40005ab0 	.word	0x40005ab0
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400056bc:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056c0:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056c4:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056c8:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056cc:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056d0:	859fad40 	ldrhi	sl, [pc, #3392]	; 40006418 <ControlHandle+0xf84>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056d4:	959fad3c 	ldrls	sl, [pc, #3388]	; 40006418 <ControlHandle+0xf84>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056d8:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
400056dc:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056e0:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400056e4:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400056e8:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056ec:	e5ca105c 	strb	r1, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400056f0:	e5ca205d 	strb	r2, [sl, #93]	; 0x5d
			  glEp0Buffer[2] = 0;
400056f4:	e5ca305e 	strb	r3, [sl, #94]	; 0x5e
			  glEp0Buffer[3] = 0;
400056f8:	e5ca305f 	strb	r3, [sl, #95]	; 0x5f
400056fc:	eaffffb0 	b	400055c4 <ControlHandle+0x130>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005700:	e59f4d10 	ldr	r4, [pc, #3344]	; 40006418 <ControlHandle+0xf84>
			  glEp0Buffer[1] = 0;
40005704:	e3a0c000 	mov	ip, #0
40005708:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000570c:	e284105c 	add	r1, r4, #92	; 0x5c
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005710:	e5c4805c 	strb	r8, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005714:	e3a00002 	mov	r0, #2
40005718:	eb006024 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
4000571c:	e3a0e0ff 	mov	lr, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005720:	e5d4405c 	ldrb	r4, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40005724:	e1a0c00e 	mov	ip, lr
40005728:	e1a0300e 	mov	r3, lr
4000572c:	eaffff7b 	b	40005520 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
40005730:	e2441001 	sub	r1, r4, #1
40005734:	e3510021 	cmp	r1, #33	; 0x21
40005738:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
4000573c:	ea0000d2 	b	40005a8c <ControlHandle+0x5f8>
40005740:	40005a60 	.word	0x40005a60
40005744:	40005a8c 	.word	0x40005a8c
40005748:	40005a8c 	.word	0x40005a8c
4000574c:	40005a8c 	.word	0x40005a8c
40005750:	40005a40 	.word	0x40005a40
40005754:	40005a8c 	.word	0x40005a8c
40005758:	40005a8c 	.word	0x40005a8c
4000575c:	40005a8c 	.word	0x40005a8c
40005760:	40005a8c 	.word	0x40005a8c
40005764:	40005a8c 	.word	0x40005a8c
40005768:	40005a1c 	.word	0x40005a1c
4000576c:	40005a8c 	.word	0x40005a8c
40005770:	40005a8c 	.word	0x40005a8c
40005774:	40005a8c 	.word	0x40005a8c
40005778:	40005a8c 	.word	0x40005a8c
4000577c:	40005a8c 	.word	0x40005a8c
40005780:	40005a8c 	.word	0x40005a8c
40005784:	40005a8c 	.word	0x40005a8c
40005788:	40005a8c 	.word	0x40005a8c
4000578c:	40005a8c 	.word	0x40005a8c
40005790:	40005a8c 	.word	0x40005a8c
40005794:	40005a8c 	.word	0x40005a8c
40005798:	40005a8c 	.word	0x40005a8c
4000579c:	40005a8c 	.word	0x40005a8c
400057a0:	400059e0 	.word	0x400059e0
400057a4:	40005a8c 	.word	0x40005a8c
400057a8:	40005a8c 	.word	0x40005a8c
400057ac:	400059b8 	.word	0x400059b8
400057b0:	40005a8c 	.word	0x40005a8c
400057b4:	40005a8c 	.word	0x40005a8c
400057b8:	4000591c 	.word	0x4000591c
400057bc:	400058e4 	.word	0x400058e4
400057c0:	400058e4 	.word	0x400058e4
400057c4:	400058e4 	.word	0x400058e4
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400057c8:	e354001f 	cmp	r4, #31
400057cc:	9a000031 	bls	40005898 <ControlHandle+0x404>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400057d0:	e0877087 	add	r7, r7, r7, lsl #1
400057d4:	e0866187 	add	r6, r6, r7, lsl #3
400057d8:	e59fac38 	ldr	sl, [pc, #3128]	; 40006418 <ControlHandle+0xf84>
400057dc:	e5d6100b 	ldrb	r1, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400057e0:	e5d6400c 	ldrb	r4, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400057e4:	e5ca105c 	strb	r1, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400057e8:	e5ca405d 	strb	r4, [sl, #93]	; 0x5d
400057ec:	eaffff74 	b	400055c4 <ControlHandle+0x130>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400057f0:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400057f4:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400057f8:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400057fc:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005800:	80866187 	addhi	r6, r6, r7, lsl #3
40005804:	859f8c0c 	ldrhi	r8, [pc, #3084]	; 40006418 <ControlHandle+0xf84>
40005808:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
4000580c:	959f8c04 	ldrls	r8, [pc, #3076]	; 40006418 <ControlHandle+0xf84>
40005810:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005814:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005818:	e5c8305c 	strb	r3, [r8, #92]	; 0x5c
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000581c:	e59f1bc0 	ldr	r1, [pc, #3008]	; 400063e4 <ControlHandle+0xf50>
40005820:	eb005fe2 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005824:	e3a0e0ff 	mov	lr, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005828:	e5d8405c 	ldrb	r4, [r8, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000582c:	e1a0c00e 	mov	ip, lr
40005830:	e1a0300e 	mov	r3, lr
40005834:	eaffff39 	b	40005520 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005838:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
4000583c:	10844084 	addne	r4, r4, r4, lsl #1
40005840:	10866184 	addne	r6, r6, r4, lsl #3
40005844:	159fabcc 	ldrne	sl, [pc, #3020]	; 40006418 <ControlHandle+0xf84>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005848:	059fabc8 	ldreq	sl, [pc, #3016]	; 40006418 <ControlHandle+0xf84>
4000584c:	059f3b94 	ldreq	r3, [pc, #2964]	; 400063e8 <ControlHandle+0xf54>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005850:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005854:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005858:	058a305c 	streq	r3, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
4000585c:	15ca205c 	strbne	r2, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005860:	15ca305d 	strbne	r3, [sl, #93]	; 0x5d
40005864:	eaffff56 	b	400055c4 <ControlHandle+0x130>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
40005868:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
4000586c:	10844084 	addne	r4, r4, r4, lsl #1
40005870:	10866184 	addne	r6, r6, r4, lsl #3
40005874:	159fab9c 	ldrne	sl, [pc, #2972]	; 40006418 <ControlHandle+0xf84>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005878:	059fab98 	ldreq	sl, [pc, #2968]	; 40006418 <ControlHandle+0xf84>
4000587c:	059f3b68 	ldreq	r3, [pc, #2920]	; 400063ec <ControlHandle+0xf58>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005880:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005884:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005888:	058a305c 	streq	r3, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
4000588c:	15ca205c 	strbne	r2, [sl, #92]	; 0x5c
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005890:	15ca305d 	strbne	r3, [sl, #93]	; 0x5d
40005894:	eaffff4a 	b	400055c4 <ControlHandle+0x130>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005898:	e354000b 	cmp	r4, #11
4000589c:	0a000007 	beq	400058c0 <ControlHandle+0x42c>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058a0:	e084a084 	add	sl, r4, r4, lsl #1
400058a4:	e086618a 	add	r6, r6, sl, lsl #3
400058a8:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
400058ac:	e59fab64 	ldr	sl, [pc, #2916]	; 40006418 <ControlHandle+0xf84>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400058b0:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058b4:	e5ca305c 	strb	r3, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400058b8:	e5ca005d 	strb	r0, [sl, #93]	; 0x5d
400058bc:	eaffff40 	b	400055c4 <ControlHandle+0x130>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058c0:	e59fab50 	ldr	sl, [pc, #2896]	; 40006418 <ControlHandle+0xf84>
400058c4:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400058c8:	e5d62294 	ldrb	r2, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
400058cc:	e3a0e000 	mov	lr, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058d0:	e5cac05c 	strb	ip, [sl, #92]	; 0x5c
				  glEp0Buffer[1] = 0;
400058d4:	e5cae05d 	strb	lr, [sl, #93]	; 0x5d
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400058d8:	e5ca205e 	strb	r2, [sl, #94]	; 0x5e
				  glEp0Buffer[3] = 0;
400058dc:	e5cae05f 	strb	lr, [sl, #95]	; 0x5f
400058e0:	eaffff37 	b	400055c4 <ControlHandle+0x130>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400058e4:	e0877087 	add	r7, r7, r7, lsl #1
400058e8:	e0866187 	add	r6, r6, r7, lsl #3
400058ec:	e59feb24 	ldr	lr, [pc, #2852]	; 40006418 <ControlHandle+0xf84>
400058f0:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400058f4:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400058f8:	e5ce405c 	strb	r4, [lr, #92]	; 0x5c
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400058fc:	e5ce605d 	strb	r6, [lr, #93]	; 0x5d
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005900:	e1a00008 	mov	r0, r8
40005904:	e59f1ad8 	ldr	r1, [pc, #2776]	; 400063e4 <ControlHandle+0xf50>
40005908:	eb005fa8 	bl	4001d7b0 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
4000590c:	e3a0c0ff 	mov	ip, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005910:	e1a0e006 	mov	lr, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005914:	e1a0300c 	mov	r3, ip
40005918:	eaffff00 	b	40005520 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000591c:	e3580000 	cmp	r8, #0
40005920:	0a000292 	beq	40006370 <ControlHandle+0xedc>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005924:	e1a0e128 	lsr	lr, r8, #2
40005928:	e35e0000 	cmp	lr, #0
4000592c:	13580003 	cmpne	r8, #3
40005930:	83a02000 	movhi	r2, #0
40005934:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005938:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
4000593c:	9a0002ca 	bls	4000646c <ControlHandle+0xfd8>
40005940:	e59f1a9c 	ldr	r1, [pc, #2716]	; 400063e4 <ControlHandle+0xf50>
40005944:	e2410010 	sub	r0, r1, #16
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005948:	e4904004 	ldr	r4, [r0], #4
4000594c:	e282c001 	add	ip, r2, #1
40005950:	e20c20ff 	and	r2, ip, #255	; 0xff
40005954:	e15e0002 	cmp	lr, r2
40005958:	e4814004 	str	r4, [r1], #4
4000595c:	8afffff9 	bhi	40005948 <ControlHandle+0x4b4>
40005960:	e1580003 	cmp	r8, r3
40005964:	159f0aac 	ldrne	r0, [pc, #2732]	; 40006418 <ControlHandle+0xf84>
40005968:	0a000280 	beq	40006370 <ControlHandle+0xedc>
4000596c:	e080e003 	add	lr, r0, r3
40005970:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005974:	e2836001 	add	r6, r3, #1
40005978:	e20630ff 	and	r3, r6, #255	; 0xff
4000597c:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005980:	e5ce105c 	strb	r1, [lr, #92]	; 0x5c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005984:	8afffff8 	bhi	4000596c <ControlHandle+0x4d8>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005988:	e5d02057 	ldrb	r2, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
4000598c:	e59f3a84 	ldr	r3, [pc, #2692]	; 40006418 <ControlHandle+0xf84>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005990:	e35200ff 	cmp	r2, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005994:	e5d04065 	ldrb	r4, [r0, #101]	; 0x65
			 		 sendData1 = glEp0Buffer[10];
40005998:	e5d06066 	ldrb	r6, [r0, #102]	; 0x66
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
4000599c:	0affffd7 	beq	40005900 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
400059a0:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
400059a4:	e59f1a44 	ldr	r1, [pc, #2628]	; 400063f0 <ControlHandle+0xf5c>
400059a8:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
400059ac:	e3a00004 	mov	r0, #4
400059b0:	eb003641 	bl	400132bc <CyU3PDebugPrint>
400059b4:	eaffffd1 	b	40005900 <ControlHandle+0x46c>
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
400059b8:	e59f7a58 	ldr	r7, [pc, #2648]	; 40006418 <ControlHandle+0xf84>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
400059bc:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
400059c0:	e5d7207c 	ldrb	r2, [r7, #124]	; 0x7c
400059c4:	e3520001 	cmp	r2, #1
400059c8:	0a00021d 	beq	40006244 <ControlHandle+0xdb0>
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
400059cc:	e3a00000 	mov	r0, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
400059d0:	e5c7405c 	strb	r4, [r7, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
400059d4:	e5c7005d 	strb	r0, [r7, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400059d8:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400059dc:	eaffffc7 	b	40005900 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400059e0:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400059e4:	e59fca2c 	ldr	ip, [pc, #2604]	; 40006418 <ControlHandle+0xf84>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400059e8:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400059ec:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400059f0:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
400059f4:	e5cce05d 	strb	lr, [ip, #93]	; 0x5d
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400059f8:	e5cc605e 	strb	r6, [ip, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
400059fc:	e5cce05f 	strb	lr, [ip, #95]	; 0x5f
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005a00:	e59f19ec 	ldr	r1, [pc, #2540]	; 400063f4 <ControlHandle+0xf60>
40005a04:	e1a02004 	mov	r2, r4
40005a08:	e1a0300e 	mov	r3, lr
40005a0c:	e3a00004 	mov	r0, #4
40005a10:	e88d4040 	stm	sp, {r6, lr}
40005a14:	eb003628 	bl	400132bc <CyU3PDebugPrint>
					 break;
40005a18:	eaffffb8 	b	40005900 <ControlHandle+0x46c>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a1c:	e59fc9f4 	ldr	ip, [pc, #2548]	; 40006418 <ControlHandle+0xf84>
40005a20:	e5d64490 	ldrb	r4, [r6, #1168]	; 0x490
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a24:	e5d66492 	ldrb	r6, [r6, #1170]	; 0x492
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005a28:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a2c:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005a30:	e5cce05d 	strb	lr, [ip, #93]	; 0x5d
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a34:	e5cc605e 	strb	r6, [ip, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
40005a38:	e5cce05f 	strb	lr, [ip, #95]	; 0x5f
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005a3c:	eaffffaf 	b	40005900 <ControlHandle+0x46c>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005a40:	e5d62205 	ldrb	r2, [r6, #517]	; 0x205
40005a44:	e59f69cc 	ldr	r6, [pc, #2508]	; 40006418 <ControlHandle+0xf84>
40005a48:	e2224080 	eor	r4, r2, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005a4c:	e3a01000 	mov	r1, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005a50:	e5c6405c 	strb	r4, [r6, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005a54:	e5c6105d 	strb	r1, [r6, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005a58:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005a5c:	eaffffa7 	b	40005900 <ControlHandle+0x46c>
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 */
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005a60:	e5d641a5 	ldrb	r4, [r6, #421]	; 0x1a5
					  if(Data0&0x80){
						  Data0 = ~Data0;
					  }else{
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
40005a64:	e59f39ac 	ldr	r3, [pc, #2476]	; 40006418 <ControlHandle+0xf84>
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 */
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					  if(Data0&0x80){
40005a68:	e3140080 	tst	r4, #128	; 0x80
						  Data0 = ~Data0;
40005a6c:	11e04004 	mvnne	r4, r4
					  }else{
						  Data0 = Data0 + 0x80;
40005a70:	02444080 	subeq	r4, r4, #128	; 0x80
40005a74:	e20440ff 	and	r4, r4, #255	; 0xff
					  }
					 glEp0Buffer[0] = Data0;
					 glEp0Buffer[1] = 0;
40005a78:	e3a00000 	mov	r0, #0
					  if(Data0&0x80){
						  Data0 = ~Data0;
					  }else{
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
40005a7c:	e5c3405c 	strb	r4, [r3, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005a80:	e5c3005d 	strb	r0, [r3, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005a84:	e3a060ff 	mov	r6, #255	; 0xff
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
40005a88:	eaffff9c 	b	40005900 <ControlHandle+0x46c>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005a8c:	e0841084 	add	r1, r4, r4, lsl #1
40005a90:	e0864181 	add	r4, r6, r1, lsl #3
40005a94:	e59f397c 	ldr	r3, [pc, #2428]	; 40006418 <ControlHandle+0xf84>
40005a98:	e5d4418d 	ldrb	r4, [r4, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005a9c:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005aa0:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005aa4:	e5c3405c 	strb	r4, [r3, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005aa8:	e5c3005d 	strb	r0, [r3, #93]	; 0x5d
					 sendData = glEp0Buffer[0];
					 break;
40005aac:	eaffff93 	b	40005900 <ControlHandle+0x46c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ab0:	e59f4940 	ldr	r4, [pc, #2368]	; 400063f8 <ControlHandle+0xf64>
40005ab4:	e3e01000 	mvn	r1, #0
40005ab8:	e594001c 	ldr	r0, [r4, #28]
40005abc:	eb001212 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005ac0:	e3a01022 	mov	r1, #34	; 0x22
40005ac4:	e59dc018 	ldr	ip, [sp, #24]
40005ac8:	e3a0e000 	mov	lr, #0
40005acc:	e1a0300a 	mov	r3, sl
40005ad0:	e1a02009 	mov	r2, r9
40005ad4:	e1a00004 	mov	r0, r4
40005ad8:	e88d5000 	stm	sp, {ip, lr}
40005adc:	ebfff675 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ae0:	e594001c 	ldr	r0, [r4, #28]
40005ae4:	eb00123d 	bl	4000a3e0 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005ae8:	e59d1018 	ldr	r1, [sp, #24]
40005aec:	e0877087 	add	r7, r7, r7, lsl #1
40005af0:	e0866187 	add	r6, r6, r7, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005af4:	e3a03001 	mov	r3, #1
							 break;
40005af8:	e3a0e0ff 	mov	lr, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005afc:	e5c63010 	strb	r3, [r6, #16]
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005b00:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b04:	e1a03001 	mov	r3, r1
40005b08:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005b0c:	e1a0400e 	mov	r4, lr
40005b10:	eafffe82 	b	40005520 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID1: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b14:	e59f48dc 	ldr	r4, [pc, #2268]	; 400063f8 <ControlHandle+0xf64>
40005b18:	e3e01000 	mvn	r1, #0
40005b1c:	e594001c 	ldr	r0, [r4, #28]
40005b20:	eb0011f9 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005b24:	e3a01021 	mov	r1, #33	; 0x21
40005b28:	eaffffe5 	b	40005ac4 <ControlHandle+0x630>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b2c:	e59f48c4 	ldr	r4, [pc, #2244]	; 400063f8 <ControlHandle+0xf64>
40005b30:	e3e01000 	mvn	r1, #0
40005b34:	e594001c 	ldr	r0, [r4, #28]
40005b38:	e58dc014 	str	ip, [sp, #20]
40005b3c:	eb0011f2 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005b40:	e59d2018 	ldr	r2, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005b44:	e3a0e000 	mov	lr, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005b48:	e202807f 	and	r8, r2, #127	; 0x7f
40005b4c:	e58d801c 	str	r8, [sp, #28]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005b50:	e59dc01c 	ldr	ip, [sp, #28]
40005b54:	e3a01020 	mov	r1, #32
40005b58:	e1a02009 	mov	r2, r9
40005b5c:	e1a0300a 	mov	r3, sl
40005b60:	e1a00004 	mov	r0, r4
40005b64:	e88d5000 	stm	sp, {ip, lr}
40005b68:	ebfff652 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005b6c:	e59dc014 	ldr	ip, [sp, #20]
40005b70:	e1a0300a 	mov	r3, sl
40005b74:	e3a08001 	mov	r8, #1
40005b78:	e3a01020 	mov	r1, #32
40005b7c:	e1a0200b 	mov	r2, fp
40005b80:	e1a00004 	mov	r0, r4
40005b84:	e58dc000 	str	ip, [sp]
40005b88:	e58d8004 	str	r8, [sp, #4]
40005b8c:	ebfff649 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b90:	e594001c 	ldr	r0, [r4, #28]
40005b94:	eb001211 	bl	4000a3e0 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005b98:	e59d001c 	ldr	r0, [sp, #28]
40005b9c:	e0877087 	add	r7, r7, r7, lsl #1
40005ba0:	e0866187 	add	r6, r6, r7, lsl #3
40005ba4:	e5c6000d 	strb	r0, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005ba8:	e59dc014 	ldr	ip, [sp, #20]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005bac:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005bb0:	e5c6c00e 	strb	ip, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005bb4:	e5c68010 	strb	r8, [r6, #16]
40005bb8:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005bbc:	e1a0400e 	mov	r4, lr
40005bc0:	eafffe56 	b	40005520 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005bc4:	e3580000 	cmp	r8, #0
40005bc8:	0a000018 	beq	40005c30 <ControlHandle+0x79c>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005bcc:	e1a0e128 	lsr	lr, r8, #2
40005bd0:	e35e0000 	cmp	lr, #0
40005bd4:	13580003 	cmpne	r8, #3
40005bd8:	83a02000 	movhi	r2, #0
40005bdc:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005be0:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005be4:	9a000223 	bls	40006478 <ControlHandle+0xfe4>
40005be8:	e59f180c 	ldr	r1, [pc, #2060]	; 400063fc <ControlHandle+0xf68>
40005bec:	e2810010 	add	r0, r1, #16
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005bf0:	e4904004 	ldr	r4, [r0], #4
40005bf4:	e2822001 	add	r2, r2, #1
40005bf8:	e20220ff 	and	r2, r2, #255	; 0xff
40005bfc:	e15e0002 	cmp	lr, r2
40005c00:	e4814004 	str	r4, [r1], #4
40005c04:	8afffff9 	bhi	40005bf0 <ControlHandle+0x75c>
40005c08:	e1580003 	cmp	r8, r3
40005c0c:	0a000007 	beq	40005c30 <ControlHandle+0x79c>
40005c10:	e59fc800 	ldr	ip, [pc, #2048]	; 40006418 <ControlHandle+0xf84>
40005c14:	e08ce003 	add	lr, ip, r3
40005c18:	e5de105c 	ldrb	r1, [lr, #92]	; 0x5c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c1c:	e2833001 	add	r3, r3, #1
40005c20:	e20330ff 	and	r3, r3, #255	; 0xff
40005c24:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005c28:	e5ce104c 	strb	r1, [lr, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c2c:	8afffff7 	bhi	40005c10 <ControlHandle+0x77c>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005c30:	ebfffd70 	bl	400051f8 <I2CCmdHandler>
							 break;
40005c34:	e3a0e0ff 	mov	lr, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005c38:	e59d3018 	ldr	r3, [sp, #24]
40005c3c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005c40:	e1a0400e 	mov	r4, lr
40005c44:	eafffe35 	b	40005520 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c48:	e59f47a8 	ldr	r4, [pc, #1960]	; 400063f8 <ControlHandle+0xf64>
40005c4c:	e3e01000 	mvn	r1, #0
40005c50:	e594001c 	ldr	r0, [r4, #28]
40005c54:	eb0011ac 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c58:	e59d0018 	ldr	r0, [sp, #24]
40005c5c:	e3a0e000 	mov	lr, #0
40005c60:	e270c001 	rsbs	ip, r0, #1
40005c64:	33a0c000 	movcc	ip, #0
40005c68:	e1a0300a 	mov	r3, sl
40005c6c:	e3a0101e 	mov	r1, #30
40005c70:	e1a02009 	mov	r2, r9
40005c74:	e1a00004 	mov	r0, r4
40005c78:	e88d5000 	stm	sp, {ip, lr}
40005c7c:	ebfff60d 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c80:	e594001c 	ldr	r0, [r4, #28]
40005c84:	eb0011d5 	bl	4000a3e0 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c88:	e3a03001 	mov	r3, #1
							 break;
40005c8c:	e3a0e0ff 	mov	lr, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c90:	e5c63460 	strb	r3, [r6, #1120]	; 0x460
40005c94:	e59dc01c 	ldr	ip, [sp, #28]
40005c98:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005c9c:	e1a0400e 	mov	r4, lr
40005ca0:	eafffe1e 	b	40005520 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ca4:	e59f474c 	ldr	r4, [pc, #1868]	; 400063f8 <ControlHandle+0xf64>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005ca8:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005cac:	e59d301c 	ldr	r3, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cb0:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cb4:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005cb8:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cbc:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cc0:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cc4:	eb001190 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005cc8:	e59dc018 	ldr	ip, [sp, #24]
40005ccc:	e1a00004 	mov	r0, r4
40005cd0:	e58dc000 	str	ip, [sp]
40005cd4:	e3a01019 	mov	r1, #25
40005cd8:	e3a0c000 	mov	ip, #0
40005cdc:	e1a02009 	mov	r2, r9
40005ce0:	e1a0300a 	mov	r3, sl
40005ce4:	e58dc004 	str	ip, [sp, #4]
40005ce8:	ebfff5f2 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005cec:	e59d0018 	ldr	r0, [sp, #24]
40005cf0:	e3500000 	cmp	r0, #0
40005cf4:	0a000007 	beq	40005d18 <ControlHandle+0x884>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005cf8:	e59de01c 	ldr	lr, [sp, #28]
40005cfc:	e1a00004 	mov	r0, r4
40005d00:	e3a01019 	mov	r1, #25
40005d04:	e1a0200b 	mov	r2, fp
40005d08:	e1a0300a 	mov	r3, sl
40005d0c:	e58de000 	str	lr, [sp]
40005d10:	e58d7004 	str	r7, [sp, #4]
40005d14:	ebfff5e7 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d18:	e594001c 	ldr	r0, [r4, #28]
40005d1c:	eb0011af 	bl	4000a3e0 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d20:	e59f06f0 	ldr	r0, [pc, #1776]	; 40006418 <ControlHandle+0xf84>
40005d24:	e59f16ec 	ldr	r1, [pc, #1772]	; 40006418 <ControlHandle+0xf84>
40005d28:	e5d0c05e 	ldrb	ip, [r0, #94]	; 0x5e
40005d2c:	e5d1405f 	ldrb	r4, [r1, #95]	; 0x5f
40005d30:	e5d0305d 	ldrb	r3, [r0, #93]	; 0x5d
40005d34:	e5d0205c 	ldrb	r2, [r0, #92]	; 0x5c
40005d38:	e59f16c0 	ldr	r1, [pc, #1728]	; 40006400 <ControlHandle+0xf6c>
40005d3c:	e3a00004 	mov	r0, #4
40005d40:	e58dc000 	str	ip, [sp]
40005d44:	e58d4004 	str	r4, [sp, #4]
40005d48:	eb00355b 	bl	400132bc <CyU3PDebugPrint>
							 break;
40005d4c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d50:	e59d3018 	ldr	r3, [sp, #24]
40005d54:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005d58:	e1a0400e 	mov	r4, lr
40005d5c:	eafffdef 	b	40005520 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005d60:	e2531000 	subs	r1, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005d64:	e5c6130d 	strb	r1, [r6, #781]	; 0x30d
40005d68:	e59f3668 	ldr	r3, [pc, #1640]	; 400063d8 <ControlHandle+0xf44>
							 if(Data0 == 0){//set exposure mode auto
40005d6c:	1a000141 	bne	40006278 <ControlHandle+0xde4>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005d70:	e5d324b9 	ldrb	r2, [r3, #1209]	; 0x4b9
40005d74:	e3520002 	cmp	r2, #2
40005d78:	13520008 	cmpne	r2, #8
40005d7c:	0a000003 	beq	40005d90 <ControlHandle+0x8fc>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005d80:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005d84:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005d88:	13a02002 	movne	r2, #2
40005d8c:	e5c324b9 	strb	r2, [r3, #1209]	; 0x4b9
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d90:	e59f4660 	ldr	r4, [pc, #1632]	; 400063f8 <ControlHandle+0xf64>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d94:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d98:	e3e01000 	mvn	r1, #0
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d9c:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005da0:	e594001c 	ldr	r0, [r4, #28]
40005da4:	eb001158 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005da8:	e59dc018 	ldr	ip, [sp, #24]
40005dac:	e3a01010 	mov	r1, #16
40005db0:	e58dc000 	str	ip, [sp]
40005db4:	e1a02009 	mov	r2, r9
40005db8:	e1a0300a 	mov	r3, sl
40005dbc:	e1a00004 	mov	r0, r4
40005dc0:	e3a0c000 	mov	ip, #0
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005dc4:	e58dc004 	str	ip, [sp, #4]
40005dc8:	ebfff5ba 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005dcc:	e594001c 	ldr	r0, [r4, #28]
40005dd0:	eb001182 	bl	4000a3e0 <_txe_mutex_put>

					 		 break;
40005dd4:	e3a0e0ff 	mov	lr, #255	; 0xff
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005dd8:	e59d3018 	ldr	r3, [sp, #24]
40005ddc:	e59dc01c 	ldr	ip, [sp, #28]

					 		 break;
40005de0:	e1a0400e 	mov	r4, lr
40005de4:	eafffdcd 	b	40005520 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
40005de8:	e3530003 	cmp	r3, #3
								 CamMode = 0; //set 1080p flag
40005dec:	959f2624 	ldrls	r2, [pc, #1572]	; 40006418 <ControlHandle+0xf84>
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005df0:	859fe620 	ldrhi	lr, [pc, #1568]	; 40006418 <ControlHandle+0xf84>
40005df4:	e1a04003 	mov	r4, r3
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005df8:	93a03000 	movls	r3, #0
40005dfc:	95c2307c 	strbls	r3, [r2, #124]	; 0x7c
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e00:	83a02001 	movhi	r2, #1
40005e04:	959d2018 	ldrls	r2, [sp, #24]
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005e08:	91a03004 	movls	r3, r4
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e0c:	85ce207c 	strbhi	r2, [lr, #124]	; 0x7c
40005e10:	81a02004 	movhi	r2, r4
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e14:	e59f45dc 	ldr	r4, [pc, #1500]	; 400063f8 <ControlHandle+0xf64>
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
40005e18:	82433004 	subhi	r3, r3, #4
							 }
							 CtrlParArry[CtrlID][13] = Data0;
40005e1c:	e5c6242d 	strb	r2, [r6, #1069]	; 0x42d
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e20:	e3a02001 	mov	r2, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e24:	e3e01000 	mvn	r1, #0
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
40005e28:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e2c:	e5c62430 	strb	r2, [r6, #1072]	; 0x430
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e30:	e594001c 	ldr	r0, [r4, #28]
40005e34:	eb001134 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e38:	e59dc018 	ldr	ip, [sp, #24]
40005e3c:	e3a0101c 	mov	r1, #28
40005e40:	e58dc000 	str	ip, [sp]
40005e44:	e1a02009 	mov	r2, r9
40005e48:	e1a0300a 	mov	r3, sl
40005e4c:	e1a00004 	mov	r0, r4
40005e50:	e3a0c000 	mov	ip, #0
40005e54:	eaffffda 	b	40005dc4 <ControlHandle+0x930>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e58:	e59f4598 	ldr	r4, [pc, #1432]	; 400063f8 <ControlHandle+0xf64>
40005e5c:	e3e01000 	mvn	r1, #0
40005e60:	e594001c 	ldr	r0, [r4, #28]
40005e64:	eb001128 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e68:	e59dc018 	ldr	ip, [sp, #24]
40005e6c:	e3a0100b 	mov	r1, #11
40005e70:	e1a02009 	mov	r2, r9
40005e74:	e1a0300a 	mov	r3, sl
40005e78:	e1a00004 	mov	r0, r4
40005e7c:	e58dc000 	str	ip, [sp]
40005e80:	e3a0c000 	mov	ip, #0
40005e84:	e58dc004 	str	ip, [sp, #4]
40005e88:	ebfff58a 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005e8c:	e59de01c 	ldr	lr, [sp, #28]
40005e90:	e3a0100b 	mov	r1, #11
40005e94:	e1a0200b 	mov	r2, fp
40005e98:	e1a0300a 	mov	r3, sl
40005e9c:	e3a07001 	mov	r7, #1
40005ea0:	e1a00004 	mov	r0, r4
40005ea4:	e58de000 	str	lr, [sp]
40005ea8:	e58d7004 	str	r7, [sp, #4]
40005eac:	ebfff581 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005eb0:	e594001c 	ldr	r0, [r4, #28]
40005eb4:	eb001149 	bl	4000a3e0 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005eb8:	e59d1018 	ldr	r1, [sp, #24]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ebc:	e59d201c 	ldr	r2, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ec0:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ec4:	e5c61490 	strb	r1, [r6, #1168]	; 0x490
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ec8:	e5c62492 	strb	r2, [r6, #1170]	; 0x492
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ecc:	e5c67298 	strb	r7, [r6, #664]	; 0x298
40005ed0:	e1a03001 	mov	r3, r1
40005ed4:	e1a0c002 	mov	ip, r2
							 break;
40005ed8:	e1a0400e 	mov	r4, lr
40005edc:	eafffd8f 	b	40005520 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ee0:	e59f4510 	ldr	r4, [pc, #1296]	; 400063f8 <ControlHandle+0xf64>
40005ee4:	e3e01000 	mvn	r1, #0
40005ee8:	e594001c 	ldr	r0, [r4, #28]
40005eec:	eb001106 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ef0:	e59dc018 	ldr	ip, [sp, #24]
40005ef4:	e3a0e000 	mov	lr, #0
40005ef8:	e3a01006 	mov	r1, #6
40005efc:	e1a02009 	mov	r2, r9
40005f00:	e1a0300a 	mov	r3, sl
40005f04:	e1a00004 	mov	r0, r4
40005f08:	e88d5000 	stm	sp, {ip, lr}
40005f0c:	ebfff569 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005f10:	e59dc018 	ldr	ip, [sp, #24]
40005f14:	e1a0300a 	mov	r3, sl
40005f18:	e3a07001 	mov	r7, #1
40005f1c:	e3a01006 	mov	r1, #6
40005f20:	e1a0200b 	mov	r2, fp
40005f24:	e1a00004 	mov	r0, r4
40005f28:	e58dc000 	str	ip, [sp]
40005f2c:	e58d7004 	str	r7, [sp, #4]
40005f30:	ebfff560 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f34:	e594001c 	ldr	r0, [r4, #28]
40005f38:	eb001128 	bl	4000a3e0 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005f3c:	e59d4018 	ldr	r4, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f40:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005f44:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f48:	e1a03004 	mov	r3, r4
40005f4c:	e5c67220 	strb	r7, [r6, #544]	; 0x220
40005f50:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005f54:	e1a0400e 	mov	r4, lr
40005f58:	eafffd70 	b	40005520 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f5c:	e59f4494 	ldr	r4, [pc, #1172]	; 400063f8 <ControlHandle+0xf64>
40005f60:	e3e01000 	mvn	r1, #0
40005f64:	e594001c 	ldr	r0, [r4, #28]
40005f68:	eb0010e7 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005f6c:	e59d0018 	ldr	r0, [sp, #24]
40005f70:	e3a0c000 	mov	ip, #0
40005f74:	e2403080 	sub	r3, r0, #128	; 0x80
40005f78:	e20370ff 	and	r7, r3, #255	; 0xff
40005f7c:	e3a01005 	mov	r1, #5
40005f80:	e1a02009 	mov	r2, r9
40005f84:	e1a0300a 	mov	r3, sl
40005f88:	e1a00004 	mov	r0, r4
40005f8c:	e88d1080 	stm	sp, {r7, ip}
40005f90:	ebfff548 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005f94:	e59d1018 	ldr	r1, [sp, #24]
40005f98:	e3a020dc 	mov	r2, #220	; 0xdc
40005f9c:	e2417076 	sub	r7, r1, #118	; 0x76
40005fa0:	e207e0ff 	and	lr, r7, #255	; 0xff
40005fa4:	e3a01005 	mov	r1, #5
40005fa8:	e3a07001 	mov	r7, #1
40005fac:	e1a0300a 	mov	r3, sl
40005fb0:	e1a00004 	mov	r0, r4
40005fb4:	e58de000 	str	lr, [sp]
40005fb8:	e58d7004 	str	r7, [sp, #4]
40005fbc:	ebfff53d 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005fc0:	e59d2018 	ldr	r2, [sp, #24]
40005fc4:	e3a01005 	mov	r1, #5
40005fc8:	e282007e 	add	r0, r2, #126	; 0x7e
40005fcc:	e200c0ff 	and	ip, r0, #255	; 0xff
40005fd0:	e3a020de 	mov	r2, #222	; 0xde
40005fd4:	e1a0300a 	mov	r3, sl
40005fd8:	e1a00004 	mov	r0, r4
40005fdc:	e58dc000 	str	ip, [sp]
40005fe0:	e3a0c002 	mov	ip, #2
40005fe4:	e58dc004 	str	ip, [sp, #4]
40005fe8:	ebfff532 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005fec:	e59d3018 	ldr	r3, [sp, #24]
40005ff0:	e3a020e0 	mov	r2, #224	; 0xe0
40005ff4:	e2831072 	add	r1, r3, #114	; 0x72
40005ff8:	e201c0ff 	and	ip, r1, #255	; 0xff
40005ffc:	e1a0300a 	mov	r3, sl
40006000:	e3a01005 	mov	r1, #5
40006004:	e1a00004 	mov	r0, r4
40006008:	e58dc000 	str	ip, [sp]
4000600c:	e3a0c003 	mov	ip, #3
40006010:	e58dc004 	str	ip, [sp, #4]
40006014:	ebfff527 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40006018:	e59d2018 	ldr	r2, [sp, #24]
4000601c:	e3a01005 	mov	r1, #5
40006020:	e242006f 	sub	r0, r2, #111	; 0x6f
40006024:	e200c0ff 	and	ip, r0, #255	; 0xff
40006028:	e3a020dd 	mov	r2, #221	; 0xdd
4000602c:	e1a0300a 	mov	r3, sl
40006030:	e1a00004 	mov	r0, r4
40006034:	e58dc000 	str	ip, [sp]
40006038:	e3a0c004 	mov	ip, #4
4000603c:	e58dc004 	str	ip, [sp, #4]
40006040:	ebfff51c 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40006044:	e59f33cc 	ldr	r3, [pc, #972]	; 40006418 <ControlHandle+0xf84>
40006048:	e3a0e005 	mov	lr, #5
4000604c:	e5d3105c 	ldrb	r1, [r3, #92]	; 0x5c
40006050:	e1a00004 	mov	r0, r4
40006054:	e281207f 	add	r2, r1, #127	; 0x7f
40006058:	e202c0ff 	and	ip, r2, #255	; 0xff
4000605c:	e1a0100e 	mov	r1, lr
40006060:	e1a0300a 	mov	r3, sl
40006064:	e1a0200b 	mov	r2, fp
40006068:	e88d5000 	stm	sp, {ip, lr}
4000606c:	ebfff511 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006070:	e594001c 	ldr	r0, [r4, #28]
40006074:	eb0010d9 	bl	4000a3e0 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40006078:	e59f0398 	ldr	r0, [pc, #920]	; 40006418 <ControlHandle+0xf84>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
4000607c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40006080:	e5d0305c 	ldrb	r3, [r0, #92]	; 0x5c
							 CtrlParArry[CtrlID][16] = CyTrue;
40006084:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40006088:	e2431080 	sub	r1, r3, #128	; 0x80
4000608c:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40006090:	e59d3018 	ldr	r3, [sp, #24]
40006094:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40006098:	e1a0400e 	mov	r4, lr
4000609c:	eafffd1f 	b	40005520 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 Data0 = Data0 - 1;
400060a0:	e2432001 	sub	r2, r3, #1
400060a4:	e20220ff 	and	r2, r2, #255	; 0xff
							 is60Hz = Data0;
400060a8:	e59f0368 	ldr	r0, [pc, #872]	; 40006418 <ControlHandle+0xf84>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
							 {
								 Data0 = 0;  // 50Hz (PAL)
								 is60Hz = CyFalse;
							 }
							 else if(Data0 >2)
400060ac:	e3520002 	cmp	r2, #2
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
400060b0:	e5c631ed 	strb	r3, [r6, #493]	; 0x1ed
								 is60Hz = CyFalse;
							 }
							 else if(Data0 >2)
							 {
								 Data0 = 1;  // 60Hz (NTSC)
								 is60Hz = CyTrue;
400060b4:	83a03001 	movhi	r3, #1
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 Data0 = Data0 - 1;
							 is60Hz = Data0;
400060b8:	e5802058 	str	r2, [r0, #88]	; 0x58
								 is60Hz = CyFalse;
							 }
							 else if(Data0 >2)
							 {
								 Data0 = 1;  // 60Hz (NTSC)
								 is60Hz = CyTrue;
400060bc:	85803058 	strhi	r3, [r0, #88]	; 0x58
400060c0:	81a02003 	movhi	r2, r3
							 }
							 CyU3PDebugPrint (4, "Frequency setting is  %d %d\r\n", Data0, is60Hz);
400060c4:	e59f334c 	ldr	r3, [pc, #844]	; 40006418 <ControlHandle+0xf84>
							 if (gpif_initialized == CyTrue)
400060c8:	e59f7348 	ldr	r7, [pc, #840]	; 40006418 <ControlHandle+0xf84>
							 else if(Data0 >2)
							 {
								 Data0 = 1;  // 60Hz (NTSC)
								 is60Hz = CyTrue;
							 }
							 CyU3PDebugPrint (4, "Frequency setting is  %d %d\r\n", Data0, is60Hz);
400060cc:	e5933058 	ldr	r3, [r3, #88]	; 0x58
400060d0:	e3a00004 	mov	r0, #4
400060d4:	e59f1328 	ldr	r1, [pc, #808]	; 40006404 <ControlHandle+0xf70>
400060d8:	eb003477 	bl	400132bc <CyU3PDebugPrint>
							 if (gpif_initialized == CyTrue)
400060dc:	e597403c 	ldr	r4, [r7, #60]	; 0x3c
400060e0:	e3540001 	cmp	r4, #1
400060e4:	0a000082 	beq	400062f4 <ControlHandle+0xe60>
			                         }
								 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 }

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400060e8:	e3a0e0ff 	mov	lr, #255	; 0xff
			                         		break;
			                         }
								 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 }

							 CtrlParArry[CtrlID][16] = CyTrue;
400060ec:	e3a02001 	mov	r2, #1
400060f0:	e5c621f0 	strb	r2, [r6, #496]	; 0x1f0
400060f4:	e59d3018 	ldr	r3, [sp, #24]
400060f8:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
400060fc:	e1a0400e 	mov	r4, lr
40006100:	eafffd06 	b	40005520 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
#endif
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006104:	e59f42ec 	ldr	r4, [pc, #748]	; 400063f8 <ControlHandle+0xf64>
40006108:	e3e01000 	mvn	r1, #0
4000610c:	e594001c 	ldr	r0, [r4, #28]
40006110:	eb00107d 	bl	4000a30c <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40006114:	e59d2018 	ldr	r2, [sp, #24]
								  Data0 = Data0 - 0x80;
							  }else{
								  Data0 = ~Data0;
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006118:	e3a0c000 	mov	ip, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
#endif
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
4000611c:	e3120080 	tst	r2, #128	; 0x80
								  Data0 = Data0 - 0x80;
40006120:	12427080 	subne	r7, r2, #128	; 0x80
							  }else{
								  Data0 = ~Data0;
40006124:	01e07002 	mvneq	r7, r2
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006128:	e1a0300a 	mov	r3, sl
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data0 = Data0 - 0x80;
							  }else{
								  Data0 = ~Data0;
4000612c:	e20770ff 	and	r7, r7, #255	; 0xff
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006130:	e3a01001 	mov	r1, #1
40006134:	e1a0200b 	mov	r2, fp
40006138:	e59f02b8 	ldr	r0, [pc, #696]	; 400063f8 <ControlHandle+0xf64>
4000613c:	e88d1080 	stm	sp, {r7, ip}
40006140:	ebfff4dc 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006144:	e594001c 	ldr	r0, [r4, #28]
40006148:	eb0010a4 	bl	4000a3e0 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;


							 break;
4000614c:	e3a0e0ff 	mov	lr, #255	; 0xff
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006150:	e3a00001 	mov	r0, #1
								  Data0 = ~Data0;
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40006154:	e5c671a5 	strb	r7, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][16] = CyTrue;
40006158:	e5c601a8 	strb	r0, [r6, #424]	; 0x1a8
4000615c:	e59d3018 	ldr	r3, [sp, #24]
40006160:	e59dc01c 	ldr	ip, [sp, #28]


							 break;
40006164:	e1a0400e 	mov	r4, lr
40006168:	eafffcec 	b	40005520 <ControlHandle+0x8c>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000616c:	e59f7284 	ldr	r7, [pc, #644]	; 400063f8 <ControlHandle+0xf64>
40006170:	e3e01000 	mvn	r1, #0
40006174:	e597001c 	ldr	r0, [r7, #28]
40006178:	eb001063 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
4000617c:	e59dc018 	ldr	ip, [sp, #24]
40006180:	e1a01004 	mov	r1, r4
40006184:	e1a0300a 	mov	r3, sl
40006188:	e1a02009 	mov	r2, r9
4000618c:	e58dc000 	str	ip, [sp]
40006190:	e1a00007 	mov	r0, r7
40006194:	e3a0c000 	mov	ip, #0
40006198:	e58dc004 	str	ip, [sp, #4]
4000619c:	ebfff4c5 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400061a0:	e597001c 	ldr	r0, [r7, #28]
400061a4:	eb00108d 	bl	4000a3e0 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
400061a8:	e59d1018 	ldr	r1, [sp, #24]
400061ac:	e0843084 	add	r3, r4, r4, lsl #1
400061b0:	e0866183 	add	r6, r6, r3, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400061b4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061b8:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400061bc:	e5c6118d 	strb	r1, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
400061c0:	e5c60190 	strb	r0, [r6, #400]	; 0x190
400061c4:	e1a03001 	mov	r3, r1
400061c8:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
400061cc:	e1a0400e 	mov	r4, lr
400061d0:	eafffcd2 	b	40005520 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
400061d4:	e59fc23c 	ldr	ip, [pc, #572]	; 40006418 <ControlHandle+0xf84>

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061d8:	e3a04001 	mov	r4, #1
							 if(CamMode == 1) //mode 720p
400061dc:	e5dc207c 	ldrb	r2, [ip, #124]	; 0x7c
							 }

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
400061e0:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
400061e4:	e3520001 	cmp	r2, #1

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061e8:	e5c64190 	strb	r4, [r6, #400]	; 0x190
400061ec:	11a07003 	movne	r7, r3
							 if(CamMode == 1) //mode 720p
400061f0:	0a000035 	beq	400062cc <ControlHandle+0xe38>
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400061f4:	e59f41fc 	ldr	r4, [pc, #508]	; 400063f8 <ControlHandle+0xf64>
400061f8:	e3e01000 	mvn	r1, #0
400061fc:	e594001c 	ldr	r0, [r4, #28]
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
40006200:	e5c6742d 	strb	r7, [r6, #1069]	; 0x42d
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006204:	eb001040 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006208:	e3a0c000 	mov	ip, #0
4000620c:	e1a0100c 	mov	r1, ip
40006210:	e1a02009 	mov	r2, r9
40006214:	e1a0300a 	mov	r3, sl
40006218:	e1a00004 	mov	r0, r4
4000621c:	e58d7000 	str	r7, [sp]
40006220:	eafffee7 	b	40005dc4 <ControlHandle+0x930>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
40006224:	e3a00004 	mov	r0, #4
40006228:	e59f11d8 	ldr	r1, [pc, #472]	; 40006408 <ControlHandle+0xf74>
4000622c:	eb003422 	bl	400132bc <CyU3PDebugPrint>
40006230:	e3a0e0ff 	mov	lr, #255	; 0xff
40006234:	e1a0400e 	mov	r4, lr
40006238:	e1a0c00e 	mov	ip, lr
4000623c:	e1a0300e 	mov	r3, lr
40006240:	eafffcb6 	b	40005520 <ControlHandle+0x8c>
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
40006244:	e3540002 	cmp	r4, #2
40006248:	92844004 	addls	r4, r4, #4
4000624c:	920440ff 	andls	r4, r4, #255	; 0xff
40006250:	9afffddd 	bls	400059cc <ControlHandle+0x538>
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
40006254:	e1a03004 	mov	r3, r4
40006258:	e3a00004 	mov	r0, #4
4000625c:	e59f11a8 	ldr	r1, [pc, #424]	; 4000640c <ControlHandle+0xf78>
40006260:	eb003415 	bl	400132bc <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
40006264:	e59f316c 	ldr	r3, [pc, #364]	; 400063d8 <ControlHandle+0xf44>
40006268:	e3a02000 	mov	r2, #0
4000626c:	e3a04004 	mov	r4, #4
40006270:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
40006274:	eafffdd4 	b	400059cc <ControlHandle+0x538>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006278:	e5d324b9 	ldrb	r2, [r3, #1209]	; 0x4b9
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
4000627c:	e2414001 	sub	r4, r1, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006280:	e3520004 	cmp	r2, #4
40006284:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006288:	e20410ff 	and	r1, r4, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
4000628c:	0a000003 	beq	400062a0 <ControlHandle+0xe0c>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
40006290:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
40006294:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
40006298:	13a02004 	movne	r2, #4
4000629c:	e5c324b9 	strb	r2, [r3, #1209]	; 0x4b9
									 }
								 }
								 if(Data1 < 8){
400062a0:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400062a4:	959f3164 	ldrls	r3, [pc, #356]	; 40006410 <ControlHandle+0xf7c>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
400062a8:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400062ac:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400062b0:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400062b4:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
400062b8:	85c634e9 	strbhi	r3, [r6, #1257]	; 0x4e9
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
400062bc:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400062c0:	95c624e9 	strbls	r2, [r6, #1257]	; 0x4e9
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
400062c4:	e5c634ea 	strb	r3, [r6, #1258]	; 0x4ea
400062c8:	eafffeb0 	b	40005d90 <ControlHandle+0x8fc>
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
400062cc:	e3530002 	cmp	r3, #2
					 				 Data0 += 4;
400062d0:	92837004 	addls	r7, r3, #4
400062d4:	920770ff 	andls	r7, r7, #255	; 0xff
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
400062d8:	9affffc5 	bls	400061f4 <ControlHandle+0xd60>
					 				 Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
400062dc:	e3a00004 	mov	r0, #4
400062e0:	e59f1124 	ldr	r1, [pc, #292]	; 4000640c <ControlHandle+0xf78>
400062e4:	e59d3018 	ldr	r3, [sp, #24]
400062e8:	eb0033f3 	bl	400132bc <CyU3PDebugPrint>
									Data0 = 4; //set to default.
400062ec:	e3a07004 	mov	r7, #4
400062f0:	eaffffbf 	b	400061f4 <ControlHandle+0xd60>
								 is60Hz = CyTrue;
							 }
							 CyU3PDebugPrint (4, "Frequency setting is  %d %d\r\n", Data0, is60Hz);
							 if (gpif_initialized == CyTrue)
							 {
								 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400062f4:	e59f80fc 	ldr	r8, [pc, #252]	; 400063f8 <ControlHandle+0xf64>
400062f8:	e3e01000 	mvn	r1, #0
400062fc:	e598001c 	ldr	r0, [r8, #28]
40006300:	eb001001 	bl	4000a30c <_txe_mutex_get>
			                       switch (setRes)
40006304:	e5d7007d 	ldrb	r0, [r7, #125]	; 0x7d
40006308:	e3500002 	cmp	r0, #2
4000630c:	0a000042 	beq	4000641c <ControlHandle+0xf88>
40006310:	e3500003 	cmp	r0, #3
40006314:	0a000017 	beq	40006378 <ControlHandle+0xee4>
40006318:	e3500001 	cmp	r0, #1
4000631c:	1a000010 	bne	40006364 <ControlHandle+0xed0>
			                         {
			                         	case 1: //1944
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40006320:	e5972058 	ldr	r2, [r7, #88]	; 0x58
40006324:	e3a01030 	mov	r1, #48	; 0x30
40006328:	e3520000 	cmp	r2, #0
4000632c:	03a020e4 	moveq	r2, #228	; 0xe4
40006330:	13a02064 	movne	r2, #100	; 0x64
40006334:	e3a03052 	mov	r3, #82	; 0x52
40006338:	ebfff94b 	bl	4000486c <SensorSetIrisControl>
			                         		CyU3PThreadSleep(1000);
4000633c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40006340:	eb000a61 	bl	40008ccc <_tx_thread_sleep>
			                                CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
40006344:	e5972058 	ldr	r2, [r7, #88]	; 0x58
40006348:	e59f10c4 	ldr	r1, [pc, #196]	; 40006414 <ControlHandle+0xf80>
4000634c:	e3520000 	cmp	r2, #0
40006350:	e5973058 	ldr	r3, [r7, #88]	; 0x58
40006354:	03a020e4 	moveq	r2, #228	; 0xe4
40006358:	13a02064 	movne	r2, #100	; 0x64
4000635c:	e3a00004 	mov	r0, #4
40006360:	eb0033d5 	bl	400132bc <CyU3PDebugPrint>
			                                CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
			                         		break;
			                         	default:
			                         		break;
			                         }
								 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006364:	e598001c 	ldr	r0, [r8, #28]
40006368:	eb00101c 	bl	4000a3e0 <_txe_mutex_put>
4000636c:	eaffff5d 	b	400060e8 <ControlHandle+0xc54>
40006370:	e59f00a0 	ldr	r0, [pc, #160]	; 40006418 <ControlHandle+0xf84>
40006374:	eafffd83 	b	40005988 <ControlHandle+0x4f4>
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
			                         		CyU3PThreadSleep(1000);
			                                CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
			                         		break;
			                         	case 3: //720
			                         		SensorSetIrisControl(0x1, 0x30, ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40006378:	e5970058 	ldr	r0, [r7, #88]	; 0x58
4000637c:	e5d6348c 	ldrb	r3, [r6, #1164]	; 0x48c
40006380:	e3500000 	cmp	r0, #0
40006384:	03a000c4 	moveq	r0, #196	; 0xc4
40006388:	13a00044 	movne	r0, #68	; 0x44
4000638c:	e1802003 	orr	r2, r0, r3
40006390:	e3a01030 	mov	r1, #48	; 0x30
40006394:	e3a03052 	mov	r3, #82	; 0x52
40006398:	e1a00004 	mov	r0, r4
4000639c:	ebfff932 	bl	4000486c <SensorSetIrisControl>
			                         		CyU3PThreadSleep(1000);
400063a0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400063a4:	eb000a48 	bl	40008ccc <_tx_thread_sleep>
			                                CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
400063a8:	e59fe068 	ldr	lr, [pc, #104]	; 40006418 <ControlHandle+0xf84>
400063ac:	e59f1060 	ldr	r1, [pc, #96]	; 40006414 <ControlHandle+0xf80>
400063b0:	e59ec058 	ldr	ip, [lr, #88]	; 0x58
400063b4:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
400063b8:	e35c0000 	cmp	ip, #0
400063bc:	03a0c0c4 	moveq	ip, #196	; 0xc4
400063c0:	13a0c044 	movne	ip, #68	; 0x44
400063c4:	e59e3058 	ldr	r3, [lr, #88]	; 0x58
400063c8:	e18c2004 	orr	r2, ip, r4
400063cc:	e3a00004 	mov	r0, #4
400063d0:	eb0033b9 	bl	400132bc <CyU3PDebugPrint>
			                         		break;
400063d4:	eaffffe2 	b	40006364 <ControlHandle+0xed0>
400063d8:	40030000 	.word	0x40030000
400063dc:	4003312c 	.word	0x4003312c
400063e0:	400117e0 	.word	0x400117e0
400063e4:	4003100c 	.word	0x4003100c
400063e8:	00010001 	.word	0x00010001
400063ec:	00ff00ff 	.word	0x00ff00ff
400063f0:	400116dc 	.word	0x400116dc
400063f4:	40011718 	.word	0x40011718
400063f8:	40032ee4 	.word	0x40032ee4
400063fc:	40030ffc 	.word	0x40030ffc
40006400:	40011740 	.word	0x40011740
40006404:	4001176c 	.word	0x4001176c
40006408:	400117b0 	.word	0x400117b0
4000640c:	400116a4 	.word	0x400116a4
40006410:	400113e4 	.word	0x400113e4
40006414:	4001178c 	.word	0x4001178c
40006418:	40030fb0 	.word	0x40030fb0
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
			                         		CyU3PThreadSleep(1000);
			                                CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
			                         		break;
			                         	case 2: //1080
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
4000641c:	e5972058 	ldr	r2, [r7, #88]	; 0x58
40006420:	e3a01030 	mov	r1, #48	; 0x30
40006424:	e3520000 	cmp	r2, #0
40006428:	03a020d4 	moveq	r2, #212	; 0xd4
4000642c:	13a02054 	movne	r2, #84	; 0x54
40006430:	e3a03052 	mov	r3, #82	; 0x52
40006434:	e1a00004 	mov	r0, r4
40006438:	ebfff90b 	bl	4000486c <SensorSetIrisControl>
			                         		CyU3PThreadSleep(1000);
4000643c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40006440:	eb000a21 	bl	40008ccc <_tx_thread_sleep>
			                                CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
40006444:	e51f1034 	ldr	r1, [pc, #-52]	; 40006418 <ControlHandle+0xf84>
40006448:	e3a00004 	mov	r0, #4
4000644c:	e5912058 	ldr	r2, [r1, #88]	; 0x58
40006450:	e5913058 	ldr	r3, [r1, #88]	; 0x58
40006454:	e3520000 	cmp	r2, #0
40006458:	e51f104c 	ldr	r1, [pc, #-76]	; 40006414 <ControlHandle+0xf80>
4000645c:	03a020d4 	moveq	r2, #212	; 0xd4
40006460:	13a02054 	movne	r2, #84	; 0x54
40006464:	eb003394 	bl	400132bc <CyU3PDebugPrint>
			                         		break;
40006468:	eaffffbd 	b	40006364 <ControlHandle+0xed0>
4000646c:	e51f005c 	ldr	r0, [pc, #-92]	; 40006418 <ControlHandle+0xf84>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40006470:	e3a03000 	mov	r3, #0
40006474:	eafffd3c 	b	4000596c <ControlHandle+0x4d8>
40006478:	e3a03000 	mov	r3, #0
4000647c:	eafffde3 	b	40005c10 <ControlHandle+0x77c>

40006480 <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006480:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006484:	e59fa960 	ldr	sl, [pc, #2400]	; 40006dec <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006488:	e59f8960 	ldr	r8, [pc, #2400]	; 40006df0 <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000648c:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006490:	e1a09080 	lsl	r9, r0, #1
40006494:	e0892000 	add	r2, r9, r0
40006498:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
4000649c:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400064a0:	e24dd05c 	sub	sp, sp, #92	; 0x5c
400064a4:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400064a8:	e5d234a3 	ldrb	r3, [r2, #1187]	; 0x4a3
    RegAdd0 = CTCtrlParArry[CtrlID][0];
400064ac:	e5d2b494 	ldrb	fp, [r2, #1172]	; 0x494
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
400064b0:	e5d27496 	ldrb	r7, [r2, #1174]	; 0x496
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400064b4:	0a000076 	beq	40006694 <CTControlHandle+0x214>
400064b8:	9a000021 	bls	40006544 <CTControlHandle+0xc4>
400064bc:	e3550085 	cmp	r5, #133	; 0x85
400064c0:	0a000059 	beq	4000662c <CTControlHandle+0x1ac>
400064c4:	3a00004e 	bcc	40006604 <CTControlHandle+0x184>
400064c8:	e3550086 	cmp	r5, #134	; 0x86
400064cc:	0a000080 	beq	400066d4 <CTControlHandle+0x254>
400064d0:	e3550087 	cmp	r5, #135	; 0x87
400064d4:	0a000076 	beq	400066b4 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400064d8:	e3a00000 	mov	r0, #0
400064dc:	e3a01001 	mov	r1, #1
400064e0:	e1a02000 	mov	r2, r0
400064e4:	eb005edc 	bl	4001e05c <CyU3PUsbStall>
400064e8:	e59f4904 	ldr	r4, [pc, #2308]	; 40006df4 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400064ec:	e1a02006 	mov	r2, r6
400064f0:	e3a00004 	mov	r0, #4
400064f4:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006df8 <CTControlHandle+0x978>
400064f8:	e5da3000 	ldrb	r3, [sl]
400064fc:	eb00336e 	bl	400132bc <CyU3PDebugPrint>
			  break;
40006500:	e3a0c0ff 	mov	ip, #255	; 0xff
40006504:	e1a0600c 	mov	r6, ip
40006508:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
4000650c:	e5d4e05e 	ldrb	lr, [r4, #94]	; 0x5e
40006510:	e58dc008 	str	ip, [sp, #8]
40006514:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006dfc <CTControlHandle+0x97c>
40006518:	e3a0c0ff 	mov	ip, #255	; 0xff
4000651c:	e1a02005 	mov	r2, r5
40006520:	e1a03008 	mov	r3, r8
40006524:	e3a00004 	mov	r0, #4
40006528:	e88d4040 	stm	sp, {r6, lr}
4000652c:	e58dc00c 	str	ip, [sp, #12]
40006530:	e58de010 	str	lr, [sp, #16]
40006534:	e58d7014 	str	r7, [sp, #20]
40006538:	eb00335f 	bl	400132bc <CyU3PDebugPrint>
}
4000653c:	e28dd05c 	add	sp, sp, #92	; 0x5c
40006540:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006544:	e3550081 	cmp	r5, #129	; 0x81
40006548:	0a000042 	beq	40006658 <CTControlHandle+0x1d8>
4000654c:	9a000011 	bls	40006598 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006550:	e59f489c 	ldr	r4, [pc, #2204]	; 40006df4 <CTControlHandle+0x974>
40006554:	e5d21497 	ldrb	r1, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006558:	e5d26498 	ldrb	r6, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
4000655c:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006560:	e5c4105c 	strb	r1, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006564:	e5c4605d 	strb	r6, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006568:	0a00002c 	beq	40006620 <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
4000656c:	e3a0e000 	mov	lr, #0
40006570:	e5c4e05e 	strb	lr, [r4, #94]	; 0x5e
			  glEp0Buffer[3] = 0;
40006574:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006578:	e1a00007 	mov	r0, r7
4000657c:	e59f187c 	ldr	r1, [pc, #2172]	; 40006e00 <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
40006580:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
40006584:	e5c4305f 	strb	r3, [r4, #95]	; 0x5f
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006588:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000658c:	eb005c87 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40006590:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40006594:	eaffffdc 	b	4000650c <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006598:	e3550001 	cmp	r5, #1
4000659c:	1affffcd 	bne	400064d8 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400065a0:	e59f484c 	ldr	r4, [pc, #2124]	; 40006df4 <CTControlHandle+0x974>
400065a4:	e28d2056 	add	r2, sp, #86	; 0x56
400065a8:	e3a00020 	mov	r0, #32
400065ac:	e284105c 	add	r1, r4, #92	; 0x5c
400065b0:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400065b4:	eb005a0f 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400065b8:	e5d4005c 	ldrb	r0, [r4, #92]	; 0x5c
			  Data1 = glEp0Buffer[1];
400065bc:	e5d4c05d 	ldrb	ip, [r4, #93]	; 0x5d
			  value = Data1;

			  switch(CtrlID)
400065c0:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400065c4:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
400065c8:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
400065cc:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400065d0:	e3520009 	cmp	r2, #9
400065d4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400065d8:	ea000155 	b	40006b34 <CTControlHandle+0x6b4>
400065dc:	40006af0 	.word	0x40006af0
400065e0:	40006b34 	.word	0x40006b34
400065e4:	40006800 	.word	0x40006800
400065e8:	40006b34 	.word	0x40006b34
400065ec:	40006b34 	.word	0x40006b34
400065f0:	40006b34 	.word	0x40006b34
400065f4:	4000677c 	.word	0x4000677c
400065f8:	40006b34 	.word	0x40006b34
400065fc:	40006b34 	.word	0x40006b34
40006600:	40006700 	.word	0x40006700
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006604:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006df4 <CTControlHandle+0x974>
40006608:	e5d2849b 	ldrb	r8, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
4000660c:	e5d2249c 	ldrb	r2, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006610:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006614:	e5c4805c 	strb	r8, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006618:	e5c4205d 	strb	r2, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000661c:	1affffd2 	bne	4000656c <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006620:	e3a01001 	mov	r1, #1
40006624:	e5c4105e 	strb	r1, [r4, #94]	; 0x5e
40006628:	eaffffd1 	b	40006574 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
4000662c:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006df4 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
40006630:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006634:	e3a00002 	mov	r0, #2
40006638:	e284105c 	add	r1, r4, #92	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
4000663c:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006640:	e5c4705c 	strb	r7, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = 0;
40006644:	e5c4305d 	strb	r3, [r4, #93]	; 0x5d
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006648:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000664c:	eb005c57 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40006650:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40006654:	eaffffac 	b	4000650c <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006658:	e59f4794 	ldr	r4, [pc, #1940]	; 40006df4 <CTControlHandle+0x974>
4000665c:	e5d2a4a1 	ldrb	sl, [r2, #1185]	; 0x4a1
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006660:	e5d2c4a2 	ldrb	ip, [r2, #1186]	; 0x4a2
					 glEp0Buffer[2] = 0;
40006664:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006668:	e1a00007 	mov	r0, r7
4000666c:	e284105c 	add	r1, r4, #92	; 0x5c

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006670:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006674:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
					 glEp0Buffer[2] = 0;
40006678:	e5c4805e 	strb	r8, [r4, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
4000667c:	e5c4805f 	strb	r8, [r4, #95]	; 0x5f
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006680:	e5c4a05c 	strb	sl, [r4, #92]	; 0x5c
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006684:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006688:	eb005c48 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
4000668c:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006690:	eaffff9d 	b	4000650c <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006694:	e59f4758 	ldr	r4, [pc, #1880]	; 40006df4 <CTControlHandle+0x974>
40006698:	e5d23499 	ldrb	r3, [r2, #1177]	; 0x499
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
4000669c:	e5d2e49a 	ldrb	lr, [r2, #1178]	; 0x49a
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400066a0:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400066a4:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400066a8:	e5c4e05d 	strb	lr, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400066ac:	1affffae 	bne	4000656c <CTControlHandle+0xec>
400066b0:	eaffffda 	b	40006620 <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400066b4:	e59f4738 	ldr	r4, [pc, #1848]	; 40006df4 <CTControlHandle+0x974>
400066b8:	e5d2649f 	ldrb	r6, [r2, #1183]	; 0x49f
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400066bc:	e5d2c4a0 	ldrb	ip, [r2, #1184]	; 0x4a0
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400066c0:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400066c4:	e5c4605c 	strb	r6, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400066c8:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400066cc:	1affffa6 	bne	4000656c <CTControlHandle+0xec>
400066d0:	eaffffd2 	b	40006620 <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
400066d4:	e59f4718 	ldr	r4, [pc, #1816]	; 40006df4 <CTControlHandle+0x974>
400066d8:	e5d2049d 	ldrb	r0, [r2, #1181]	; 0x49d
400066dc:	e1a01004 	mov	r1, r4
400066e0:	e5e1005c 	strb	r0, [r1, #92]!	; 0x5c
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400066e4:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400066e8:	e3a00001 	mov	r0, #1
400066ec:	eb005c2f 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400066f0:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400066f4:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400066f8:	e3a07001 	mov	r7, #1
400066fc:	eaffff82 	b	4000650c <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006700:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006e04 <CTControlHandle+0x984>
40006704:	e3e01000 	mvn	r1, #0
40006708:	e596001c 	ldr	r0, [r6, #28]
4000670c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006710:	eb000efd 	bl	4000a30c <_txe_mutex_get>
					  if(getData == 1)
40006714:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006718:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000671c:	e35e0001 	cmp	lr, #1
40006720:	0a0001a9 	beq	40006dcc <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006724:	e35e00ff 	cmp	lr, #255	; 0xff
40006728:	0a00019e 	beq	40006da8 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx);
4000672c:	e3a08000 	mov	r8, #0
40006730:	e1a00006 	mov	r0, r6
40006734:	e3a01017 	mov	r1, #23
40006738:	e1a0200b 	mov	r2, fp
4000673c:	e58d8000 	str	r8, [sp]
40006740:	e58d8004 	str	r8, [sp, #4]
40006744:	ebfff35b 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006748:	e596001c 	ldr	r0, [r6, #28]
4000674c:	eb000f23 	bl	4000a3e0 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
40006750:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006754:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006758:	e5d4c05e 	ldrb	ip, [r4, #94]	; 0x5e
4000675c:	e3a00004 	mov	r0, #4
40006760:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006e08 <CTControlHandle+0x988>
40006764:	e1a02008 	mov	r2, r8
40006768:	e1a03006 	mov	r3, r6
4000676c:	e58dc000 	str	ip, [sp]
40006770:	eb0032d1 	bl	400132bc <CyU3PDebugPrint>
					  break;
40006774:	e3a0c0ff 	mov	ip, #255	; 0xff
40006778:	eaffff63 	b	4000650c <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
4000677c:	e5d884b9 	ldrb	r8, [r8, #1209]	; 0x4b9
40006780:	e3580001 	cmp	r8, #1
40006784:	13580008 	cmpne	r8, #8
40006788:	13a00000 	movne	r0, #0
4000678c:	03a00001 	moveq	r0, #1
40006790:	1a000180 	bne	40006d98 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006794:	e59f8668 	ldr	r8, [pc, #1640]	; 40006e04 <CTControlHandle+0x984>
40006798:	e3e01000 	mvn	r1, #0
4000679c:	e598001c 	ldr	r0, [r8, #28]
400067a0:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400067a4:	eb000ed8 	bl	4000a30c <_txe_mutex_get>
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
400067a8:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400067ac:	e3a01016 	mov	r1, #22
400067b0:	e1a0200b 	mov	r2, fp
400067b4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400067b8:	e3a0c000 	mov	ip, #0
400067bc:	e1a00008 	mov	r0, r8
400067c0:	e88d1400 	stm	sp, {sl, ip}
400067c4:	ebfff33b 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400067c8:	e598001c 	ldr	r0, [r8, #28]
400067cc:	eb000f03 	bl	4000a3e0 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400067d0:	e59f0618 	ldr	r0, [pc, #1560]	; 40006df0 <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
400067d4:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400067d8:	e0891006 	add	r1, r9, r6
400067dc:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400067e0:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400067e4:	e5c3a4a1 	strb	sl, [r3, #1185]	; 0x4a1
							 CTCtrlParArry[CtrlID][14] = Data1;
400067e8:	e5c324a2 	strb	r2, [r3, #1186]	; 0x4a2
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400067ec:	e5c364a4 	strb	r6, [r3, #1188]	; 0x4a4
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
400067f0:	e5d4805c 	ldrb	r8, [r4, #92]	; 0x5c
400067f4:	e5d4605d 	ldrb	r6, [r4, #93]	; 0x5d
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
400067f8:	e3a0c0ff 	mov	ip, #255	; 0xff
400067fc:	eaffff42 	b	4000650c <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
40006800:	e5d804b9 	ldrb	r0, [r8, #1209]	; 0x4b9
40006804:	e3500001 	cmp	r0, #1
40006808:	13500004 	cmpne	r0, #4
4000680c:	1a00015c 	bne	40006d84 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
40006810:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006814:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006818:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
4000681c:	e35200f9 	cmp	r2, #249	; 0xf9
40006820:	8a000157 	bhi	40006d84 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006824:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006828:	e1a0c80a 	lsl	ip, sl, #16
4000682c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
40006830:	e262a027 	rsb	sl, r2, #39	; 0x27
40006834:	e58da038 	str	sl, [sp, #56]	; 0x38
40006838:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
4000683c:	e26210c8 	rsb	r1, r2, #200	; 0xc8
40006840:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006844:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006848:	e1a01801 	lsl	r1, r1, #16
4000684c:	e262e064 	rsb	lr, r2, #100	; 0x64
40006850:	81a0182a 	lsrhi	r1, sl, #16
40006854:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006858:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000685c:	e3520064 	cmp	r2, #100	; 0x64
40006860:	e1a0080e 	lsl	r0, lr, #16
40006864:	81a0082c 	lsrhi	r0, ip, #16
40006868:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000686c:	e242a014 	sub	sl, r2, #20
40006870:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006874:	91a00820 	lsrls	r0, r0, #16
40006878:	e262a014 	rsb	sl, r2, #20
4000687c:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006880:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
40006884:	e1510000 	cmp	r1, r0
40006888:	31a0a001 	movcc	sl, r1
4000688c:	21a0a000 	movcs	sl, r0
40006890:	e1a0c80c 	lsl	ip, ip, #16
40006894:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006898:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000689c:	91a0e82c 	lsrls	lr, ip, #16
400068a0:	e59fc564 	ldr	ip, [pc, #1380]	; 40006e0c <CTControlHandle+0x98c>
400068a4:	e58da020 	str	sl, [sp, #32]
400068a8:	e06ca001 	rsb	sl, ip, r1
400068ac:	81a0e82e 	lsrhi	lr, lr, #16
400068b0:	e27ac000 	rsbs	ip, sl, #0
400068b4:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068b8:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400068bc:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068c0:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400068c4:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068c8:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
400068cc:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068d0:	e242a00a 	sub	sl, r2, #10
400068d4:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400068d8:	e59da020 	ldr	sl, [sp, #32]
400068dc:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400068e0:	e15e000a 	cmp	lr, sl
400068e4:	31a0a00e 	movcc	sl, lr
400068e8:	e262c00a 	rsb	ip, r2, #10
400068ec:	e58dc040 	str	ip, [sp, #64]	; 0x40
400068f0:	e58da038 	str	sl, [sp, #56]	; 0x38
400068f4:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400068f8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400068fc:	e3520014 	cmp	r2, #20
40006900:	91a0a82c 	lsrls	sl, ip, #16
40006904:	81a0a82a 	lsrhi	sl, sl, #16
40006908:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
4000690c:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006910:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006914:	33a0c001 	movcc	ip, #1
40006918:	e58da03c 	str	sl, [sp, #60]	; 0x3c
4000691c:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006920:	e1a0a801 	lsl	sl, r1, #16
40006924:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006928:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000692c:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006930:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
40006934:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006938:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
4000693c:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006940:	e58d104c 	str	r1, [sp, #76]	; 0x4c
40006944:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006948:	e1a00800 	lsl	r0, r0, #16
4000694c:	e15c000a 	cmp	ip, sl
40006950:	21a0c00a 	movcs	ip, sl
40006954:	e352000a 	cmp	r2, #10
40006958:	e59da020 	ldr	sl, [sp, #32]
4000695c:	81a00821 	lsrhi	r0, r1, #16
40006960:	91a00820 	lsrls	r0, r0, #16
40006964:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006968:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000696c:	e15e000a 	cmp	lr, sl
40006970:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006974:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006978:	e58dc044 	str	ip, [sp, #68]	; 0x44
4000697c:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006980:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006984:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006988:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
4000698c:	e59de048 	ldr	lr, [sp, #72]	; 0x48
40006990:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006994:	e262a002 	rsb	sl, r2, #2
40006998:	e15e0000 	cmp	lr, r0
4000699c:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400069a0:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400069a4:	e3520005 	cmp	r2, #5
400069a8:	e58da040 	str	sl, [sp, #64]	; 0x40
400069ac:	e1a01801 	lsl	r1, r1, #16
400069b0:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400069b4:	81a0182c 	lsrhi	r1, ip, #16
400069b8:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400069bc:	e58de04c 	str	lr, [sp, #76]	; 0x4c
400069c0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400069c4:	e59de040 	ldr	lr, [sp, #64]	; 0x40
400069c8:	91a01821 	lsrls	r1, r1, #16
400069cc:	e15a000c 	cmp	sl, ip
400069d0:	e58d1020 	str	r1, [sp, #32]
400069d4:	33a00003 	movcc	r0, #3
400069d8:	e58d0038 	str	r0, [sp, #56]	; 0x38
400069dc:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400069e0:	e1a0080e 	lsl	r0, lr, #16
400069e4:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400069e8:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400069ec:	e15e000a 	cmp	lr, sl
400069f0:	21a0e00a 	movcs	lr, sl
400069f4:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400069f8:	e59da048 	ldr	sl, [sp, #72]	; 0x48
400069fc:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006a00:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006a04:	91a01820 	lsrls	r1, r0, #16
40006a08:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006a0c:	81a01821 	lsrhi	r1, r1, #16
40006a10:	e15a000c 	cmp	sl, ip
40006a14:	33a00004 	movcc	r0, #4
40006a18:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006a1c:	e2420001 	sub	r0, r2, #1
40006a20:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006a24:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006a28:	e59d0020 	ldr	r0, [sp, #32]
40006a2c:	e262c001 	rsb	ip, r2, #1
40006a30:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006a34:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a38:	e59da038 	ldr	sl, [sp, #56]	; 0x38
40006a3c:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006a40:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006a44:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a48:	e3520001 	cmp	r2, #1
40006a4c:	91a02800 	lslls	r2, r0, #16
40006a50:	81a0280a 	lslhi	r2, sl, #16
40006a54:	e151000e 	cmp	r1, lr
40006a58:	31a0a001 	movcc	sl, r1
40006a5c:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006a60:	e151000e 	cmp	r1, lr
40006a64:	21a0100c 	movcs	r1, ip
40006a68:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a6c:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a70:	e59fa38c 	ldr	sl, [pc, #908]	; 40006e04 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a74:	91a02001 	movls	r2, r1
40006a78:	83a02007 	movhi	r2, #7
40006a7c:	e2822001 	add	r2, r2, #1
40006a80:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a84:	e3e01000 	mvn	r1, #0
40006a88:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a8c:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a90:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006a94:	eb000e1c 	bl	4000a30c <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006a98:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006a9c:	e3a01003 	mov	r1, #3
40006aa0:	e1a0200b 	mov	r2, fp
40006aa4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006aa8:	e58dc000 	str	ip, [sp]
40006aac:	e1a0000a 	mov	r0, sl
40006ab0:	e3a0c000 	mov	ip, #0
40006ab4:	e58dc004 	str	ip, [sp, #4]
40006ab8:	ebfff27e 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006abc:	e59a001c 	ldr	r0, [sl, #28]
40006ac0:	eb000e46 	bl	4000a3e0 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006ac4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006ac8:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006acc:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006ad0:	e0891006 	add	r1, r9, r6
40006ad4:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006ad8:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006adc:	e5c604a1 	strb	r0, [r6, #1185]	; 0x4a1
						  CTCtrlParArry[CtrlID][14] = Data1;
40006ae0:	e5c6c4a2 	strb	ip, [r6, #1186]	; 0x4a2
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006ae4:	e5c624a4 	strb	r2, [r6, #1188]	; 0x4a4
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006ae8:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
40006aec:	eaffff3f 	b	400067f0 <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006af0:	e0892006 	add	r2, r9, r6
40006af4:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006af8:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006afc:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006b00:	e5c604a1 	strb	r0, [r6, #1185]	; 0x4a1
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006b04:	e5c614a4 	strb	r1, [r6, #1188]	; 0x4a4
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006b08:	e35e0007 	cmp	lr, #7
40006b0c:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
40006b10:	ea000097 	b	40006d74 <CTControlHandle+0x8f4>
40006b14:	40006d08 	.word	0x40006d08
40006b18:	40006c6c 	.word	0x40006c6c
40006b1c:	40006d74 	.word	0x40006d74
40006b20:	40006c08 	.word	0x40006c08
40006b24:	40006d74 	.word	0x40006d74
40006b28:	40006d74 	.word	0x40006d74
40006b2c:	40006d74 	.word	0x40006d74
40006b30:	40006b68 	.word	0x40006b68
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006b34:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006b38:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006b3c:	e0899006 	add	r9, r9, r6
40006b40:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006b44:	e1a02006 	mov	r2, r6
40006b48:	e3a00004 	mov	r0, #4
40006b4c:	e59f12bc 	ldr	r1, [pc, #700]	; 40006e10 <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006b50:	e5cea4a1 	strb	sl, [lr, #1185]	; 0x4a1
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006b54:	eb0031d8 	bl	400132bc <CyU3PDebugPrint>
			  		 break;
40006b58:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b5c:	e1a0600c 	mov	r6, ip
40006b60:	e1a0800c 	mov	r8, ip
40006b64:	eafffe68 	b	4000650c <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b68:	e59f6294 	ldr	r6, [pc, #660]	; 40006e04 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006b6c:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b70:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006b74:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b78:	e3e01000 	mvn	r1, #0
40006b7c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006b80:	eb000de1 	bl	4000a30c <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006b84:	e1a0200b 	mov	r2, fp
40006b88:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006b8c:	e3a01010 	mov	r1, #16
40006b90:	e1a00006 	mov	r0, r6
40006b94:	e58da000 	str	sl, [sp]
40006b98:	e58da004 	str	sl, [sp, #4]
40006b9c:	ebfff245 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006ba0:	e596001c 	ldr	r0, [r6, #28]
40006ba4:	eb000e0d 	bl	4000a3e0 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006ba8:	e3e01000 	mvn	r1, #0
40006bac:	e596001c 	ldr	r0, [r6, #28]
40006bb0:	eb000dd5 	bl	4000a30c <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006bb4:	e3a08001 	mov	r8, #1
40006bb8:	e3a01014 	mov	r1, #20
40006bbc:	e3a02027 	mov	r2, #39	; 0x27
40006bc0:	e3a03030 	mov	r3, #48	; 0x30
40006bc4:	e1a00006 	mov	r0, r6
40006bc8:	e88d0500 	stm	sp, {r8, sl}
40006bcc:	ebfff239 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006bd0:	e3a0c002 	mov	ip, #2
40006bd4:	e3a01015 	mov	r1, #21
40006bd8:	e3a02025 	mov	r2, #37	; 0x25
40006bdc:	e3a03030 	mov	r3, #48	; 0x30
40006be0:	e1a00006 	mov	r0, r6
40006be4:	e58dc000 	str	ip, [sp]
40006be8:	e58da004 	str	sl, [sp, #4]
40006bec:	ebfff231 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006bf0:	e596001c 	ldr	r0, [r6, #28]
40006bf4:	eb000df9 	bl	4000a3e0 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006bf8:	e3a0c0ff 	mov	ip, #255	; 0xff
40006bfc:	e1a0600c 	mov	r6, ip
40006c00:	e3a08008 	mov	r8, #8
40006c04:	eafffe40 	b	4000650c <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c08:	e59f81f4 	ldr	r8, [pc, #500]	; 40006e04 <CTControlHandle+0x984>
40006c0c:	e3e01000 	mvn	r1, #0
40006c10:	e598001c 	ldr	r0, [r8, #28]
40006c14:	eb000dbc 	bl	4000a30c <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006c18:	e3a06000 	mov	r6, #0
40006c1c:	e3a01014 	mov	r1, #20
40006c20:	e3a02027 	mov	r2, #39	; 0x27
40006c24:	e3a03030 	mov	r3, #48	; 0x30
40006c28:	e1a00008 	mov	r0, r8
40006c2c:	e58d6000 	str	r6, [sp]
40006c30:	e58d6004 	str	r6, [sp, #4]
40006c34:	ebfff21f 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006c38:	e3a01015 	mov	r1, #21
40006c3c:	e3a02025 	mov	r2, #37	; 0x25
40006c40:	e3a03030 	mov	r3, #48	; 0x30
40006c44:	e1a00008 	mov	r0, r8
40006c48:	e58d6000 	str	r6, [sp]
40006c4c:	e58d6004 	str	r6, [sp, #4]
40006c50:	ebfff218 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006c54:	e598001c 	ldr	r0, [r8, #28]
40006c58:	eb000de0 	bl	4000a3e0 <_txe_mutex_put>
40006c5c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c60:	e1a0600c 	mov	r6, ip
40006c64:	e3a08004 	mov	r8, #4
40006c68:	eafffe27 	b	4000650c <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c6c:	e59fa190 	ldr	sl, [pc, #400]	; 40006e04 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006c70:	e3a06000 	mov	r6, #0
40006c74:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c78:	e3e01000 	mvn	r1, #0
40006c7c:	e59a001c 	ldr	r0, [sl, #28]
40006c80:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006c84:	eb000da0 	bl	4000a30c <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006c88:	e1a0200b 	mov	r2, fp
40006c8c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006c90:	e3a01010 	mov	r1, #16
40006c94:	e1a0000a 	mov	r0, sl
40006c98:	e58d6000 	str	r6, [sp]
40006c9c:	e58d6004 	str	r6, [sp, #4]
40006ca0:	ebfff204 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006ca4:	e59a001c 	ldr	r0, [sl, #28]
40006ca8:	eb000dcc 	bl	4000a3e0 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006cac:	e3e01000 	mvn	r1, #0
40006cb0:	e59a001c 	ldr	r0, [sl, #28]
40006cb4:	eb000d94 	bl	4000a30c <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006cb8:	e3a01014 	mov	r1, #20
40006cbc:	e3a02027 	mov	r2, #39	; 0x27
40006cc0:	e3a03030 	mov	r3, #48	; 0x30
40006cc4:	e1a0000a 	mov	r0, sl
40006cc8:	e58d6000 	str	r6, [sp]
40006ccc:	e58d6004 	str	r6, [sp, #4]
40006cd0:	ebfff1f8 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006cd4:	e3a01015 	mov	r1, #21
40006cd8:	e3a02025 	mov	r2, #37	; 0x25
40006cdc:	e3a03030 	mov	r3, #48	; 0x30
40006ce0:	e1a0000a 	mov	r0, sl
40006ce4:	e58d6000 	str	r6, [sp]
40006ce8:	e58d6004 	str	r6, [sp, #4]
40006cec:	ebfff1f1 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006cf0:	e59a001c 	ldr	r0, [sl, #28]
40006cf4:	eb000db9 	bl	4000a3e0 <_txe_mutex_put>
40006cf8:	e3a0c0ff 	mov	ip, #255	; 0xff
40006cfc:	e1a0600c 	mov	r6, ip
40006d00:	e3a08002 	mov	r8, #2
40006d04:	eafffe00 	b	4000650c <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006d08:	e59f60f4 	ldr	r6, [pc, #244]	; 40006e04 <CTControlHandle+0x984>
40006d0c:	e3e01000 	mvn	r1, #0
40006d10:	e596001c 	ldr	r0, [r6, #28]
40006d14:	eb000d7c 	bl	4000a30c <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006d18:	e3a08000 	mov	r8, #0
40006d1c:	e3a0a001 	mov	sl, #1
40006d20:	e3a01014 	mov	r1, #20
40006d24:	e3a02027 	mov	r2, #39	; 0x27
40006d28:	e3a03030 	mov	r3, #48	; 0x30
40006d2c:	e1a00006 	mov	r0, r6
40006d30:	e58d8004 	str	r8, [sp, #4]
40006d34:	e58da000 	str	sl, [sp]
40006d38:	ebfff1de 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006d3c:	e3a0c002 	mov	ip, #2
40006d40:	e3a01015 	mov	r1, #21
40006d44:	e3a02025 	mov	r2, #37	; 0x25
40006d48:	e3a03030 	mov	r3, #48	; 0x30
40006d4c:	e1a00006 	mov	r0, r6
40006d50:	e58dc000 	str	ip, [sp]
40006d54:	e58d8004 	str	r8, [sp, #4]
40006d58:	ebfff1d6 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006d5c:	e596001c 	ldr	r0, [r6, #28]
40006d60:	eb000d9e 	bl	4000a3e0 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006d64:	e3a0c0ff 	mov	ip, #255	; 0xff
40006d68:	e1a0600c 	mov	r6, ip
40006d6c:	e1a0800a 	mov	r8, sl
40006d70:	eafffde5 	b	4000650c <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006d74:	e3a0c0ff 	mov	ip, #255	; 0xff
40006d78:	e1a08000 	mov	r8, r0
40006d7c:	e1a0600c 	mov	r6, ip
40006d80:	eafffde1 	b	4000650c <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006d84:	e3a00000 	mov	r0, #0
40006d88:	e3a01001 	mov	r1, #1
40006d8c:	e1a02000 	mov	r2, r0
40006d90:	eb005cb1 	bl	4001e05c <CyU3PUsbStall>
40006d94:	eafffe95 	b	400067f0 <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006d98:	e3a01001 	mov	r1, #1
40006d9c:	e1a02000 	mov	r2, r0
40006da0:	eb005cad 	bl	4001e05c <CyU3PUsbStall>
40006da4:	eafffe91 	b	400067f0 <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006da8:	e3a0e008 	mov	lr, #8
40006dac:	e3a0c000 	mov	ip, #0
40006db0:	e1a00006 	mov	r0, r6
40006db4:	e3a01017 	mov	r1, #23
40006db8:	e1a0200b 	mov	r2, fp
40006dbc:	e58de000 	str	lr, [sp]
40006dc0:	e58dc004 	str	ip, [sp, #4]
40006dc4:	ebfff1bb 	bl	400034b8 <cmdSet>
40006dc8:	eafffe5e 	b	40006748 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006dcc:	e3a08004 	mov	r8, #4
40006dd0:	e3a0e000 	mov	lr, #0
40006dd4:	e1a00006 	mov	r0, r6
40006dd8:	e3a01017 	mov	r1, #23
40006ddc:	e1a0200b 	mov	r2, fp
40006de0:	e88d4100 	stm	sp, {r8, lr}
40006de4:	ebfff1b3 	bl	400034b8 <cmdSet>
40006de8:	eafffe56 	b	40006748 <CTControlHandle+0x2c8>
40006dec:	4003312c 	.word	0x4003312c
40006df0:	40030000 	.word	0x40030000
40006df4:	40030fb0 	.word	0x40030fb0
40006df8:	4001187c 	.word	0x4001187c
40006dfc:	400118a0 	.word	0x400118a0
40006e00:	4003100c 	.word	0x4003100c
40006e04:	40032ee4 	.word	0x40032ee4
40006e08:	40011830 	.word	0x40011830
40006e0c:	0000ffff 	.word	0x0000ffff
40006e10:	40011858 	.word	0x40011858

40006e14 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006e14:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006e18:	e59f4b4c 	ldr	r4, [pc, #2892]	; 4000796c <UVCAppEP0Thread_Entry+0xb58>
40006e1c:	e59f6b4c 	ldr	r6, [pc, #2892]	; 40007970 <UVCAppEP0Thread_Entry+0xb5c>
40006e20:	e59f8b4c 	ldr	r8, [pc, #2892]	; 40007974 <UVCAppEP0Thread_Entry+0xb60>
40006e24:	e59f9b4c 	ldr	r9, [pc, #2892]	; 40007978 <UVCAppEP0Thread_Entry+0xb64>
40006e28:	e59fab4c 	ldr	sl, [pc, #2892]	; 4000797c <UVCAppEP0Thread_Entry+0xb68>
40006e2c:	e59f7b4c 	ldr	r7, [pc, #2892]	; 40007980 <UVCAppEP0Thread_Entry+0xb6c>
40006e30:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006e34:	e1a05004 	mov	r5, r4
40006e38:	e3e0c000 	mvn	ip, #0
40006e3c:	e59f0b28 	ldr	r0, [pc, #2856]	; 4000796c <UVCAppEP0Thread_Entry+0xb58>
40006e40:	e3a0104c 	mov	r1, #76	; 0x4c
40006e44:	e3a02001 	mov	r2, #1
40006e48:	e28d3030 	add	r3, sp, #48	; 0x30
40006e4c:	e58dc000 	str	ip, [sp]
40006e50:	eb000c65 	bl	40009fec <_txe_event_flags_get>
40006e54:	e3500000 	cmp	r0, #0
40006e58:	1a000030 	bne	40006f20 <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006e5c:	e5953040 	ldr	r3, [r5, #64]	; 0x40
40006e60:	e3530000 	cmp	r3, #0
40006e64:	0a000089 	beq	40007090 <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006e68:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006e6c:	e313000c 	tst	r3, #12
40006e70:	1a000072 	bne	40007040 <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006e74:	e3130004 	tst	r3, #4
40006e78:	0a00001c 	beq	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006e7c:	e1dae0b0 	ldrh	lr, [sl]
40006e80:	e1a0242e 	lsr	r2, lr, #8
40006e84:	e3520003 	cmp	r2, #3
40006e88:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006e8c:	ea000012 	b	40006edc <UVCAppEP0Thread_Entry+0xc8>
40006e90:	40006edc 	.word	0x40006edc
40006e94:	40006fc0 	.word	0x40006fc0
40006e98:	40006ea0 	.word	0x40006ea0
40006e9c:	40006ffc 	.word	0x40006ffc
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006ea0:	e1d920b0 	ldrh	r2, [r9]
40006ea4:	e3520c06 	cmp	r2, #1536	; 0x600
40006ea8:	0a0001e0 	beq	40007630 <UVCAppEP0Thread_Entry+0x81c>
40006eac:	8a0000d7 	bhi	40007210 <UVCAppEP0Thread_Entry+0x3fc>
40006eb0:	e3520c03 	cmp	r2, #768	; 0x300
40006eb4:	0a0001d9 	beq	40007620 <UVCAppEP0Thread_Entry+0x80c>
40006eb8:	8a0001d0 	bhi	40007600 <UVCAppEP0Thread_Entry+0x7ec>
40006ebc:	e3520c01 	cmp	r2, #256	; 0x100
40006ec0:	0a00016f 	beq	40007484 <UVCAppEP0Thread_Entry+0x670>
40006ec4:	e3520c02 	cmp	r2, #512	; 0x200
40006ec8:	0a000169 	beq	40007474 <UVCAppEP0Thread_Entry+0x660>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006ecc:	e59f1ab0 	ldr	r1, [pc, #2736]	; 40007984 <UVCAppEP0Thread_Entry+0xb70>
40006ed0:	e5d83000 	ldrb	r3, [r8]
40006ed4:	e3a00004 	mov	r0, #4
40006ed8:	eb0030f7 	bl	400132bc <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006edc:	e3a00000 	mov	r0, #0
40006ee0:	e3a01001 	mov	r1, #1
40006ee4:	e1a02000 	mov	r2, r0
40006ee8:	eb005c5b 	bl	4001e05c <CyU3PUsbStall>
40006eec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006ef0:	e3130008 	tst	r3, #8
40006ef4:	0a000007 	beq	40006f18 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006ef8:	e1da30b0 	ldrh	r3, [sl]
40006efc:	e3530001 	cmp	r3, #1
40006f00:	0a000068 	beq	400070a8 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006f04:	e3a00000 	mov	r0, #0
40006f08:	e3a01001 	mov	r1, #1
40006f0c:	e1a02000 	mov	r2, r0
40006f10:	eb005c51 	bl	4001e05c <CyU3PUsbStall>
40006f14:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006f18:	e3130040 	tst	r3, #64	; 0x40
40006f1c:	1a000001 	bne	40006f28 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006f20:	eb000f1a 	bl	4000ab90 <_txe_thread_relinquish>
    }
40006f24:	eaffffc3 	b	40006e38 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006f28:	e3a00018 	mov	r0, #24
40006f2c:	e28d102c 	add	r1, sp, #44	; 0x2c
40006f30:	eb007012 	bl	40022f80 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006f34:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006f38:	e3520000 	cmp	r2, #0
40006f3c:	0a00006d 	beq	400070f8 <UVCAppEP0Thread_Entry+0x2e4>
40006f40:	e5d6367f 	ldrb	r3, [r6, #1663]	; 0x67f
40006f44:	e3530000 	cmp	r3, #0
40006f48:	1afffff4 	bne	40006f20 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006f4c:	e5972000 	ldr	r2, [r7]
40006f50:	e3a0b002 	mov	fp, #2
40006f54:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006f58:	e5971000 	ldr	r1, [r7]
40006f5c:	e3a0b001 	mov	fp, #1
40006f60:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006f64:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006f68:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006f6c:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006f70:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f74:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006f78:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006f7c:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006f80:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f84:	e59f09fc 	ldr	r0, [pc, #2556]	; 40007988 <UVCAppEP0Thread_Entry+0xb74>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006f88:	e3a03004 	mov	r3, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006f8c:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006f90:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;
40006f94:	e1cd32b4 	strh	r3, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f98:	eb004043 	bl	400170ac <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006f9c:	e59f09e4 	ldr	r0, [pc, #2532]	; 40007988 <UVCAppEP0Thread_Entry+0xb74>
40006fa0:	e28d1020 	add	r1, sp, #32
40006fa4:	eb003fb2 	bl	40016e74 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006fa8:	e2502000 	subs	r2, r0, #0
40006fac:	1a00016e 	bne	4000756c <UVCAppEP0Thread_Entry+0x758>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006fb0:	e59f39b8 	ldr	r3, [pc, #2488]	; 40007970 <UVCAppEP0Thread_Entry+0xb5c>
40006fb4:	e5c3b67f 	strb	fp, [r3, #1663]	; 0x67f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006fb8:	eb000ef4 	bl	4000ab90 <_txe_thread_relinquish>
40006fbc:	eaffff9d 	b	40006e38 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006fc0:	e1d920b0 	ldrh	r2, [r9]
40006fc4:	e3520c06 	cmp	r2, #1536	; 0x600
40006fc8:	0a0000dc 	beq	40007340 <UVCAppEP0Thread_Entry+0x52c>
40006fcc:	8a00009a 	bhi	4000723c <UVCAppEP0Thread_Entry+0x428>
40006fd0:	e3520c03 	cmp	r2, #768	; 0x300
40006fd4:	0a00011e 	beq	40007454 <UVCAppEP0Thread_Entry+0x640>
40006fd8:	8a000115 	bhi	40007434 <UVCAppEP0Thread_Entry+0x620>
40006fdc:	e3520c01 	cmp	r2, #256	; 0x100
40006fe0:	0a00015d 	beq	4000755c <UVCAppEP0Thread_Entry+0x748>
40006fe4:	e3520c02 	cmp	r2, #512	; 0x200
40006fe8:	1affffb7 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006fec:	e3a00001 	mov	r0, #1
40006ff0:	ebfffd22 	bl	40006480 <CTControlHandle>
40006ff4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006ff8:	eaffffbc 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006ffc:	e1d930b0 	ldrh	r3, [r9]
40007000:	e3530c09 	cmp	r3, #2304	; 0x900
40007004:	0a000245 	beq	40007920 <UVCAppEP0Thread_Entry+0xb0c>
40007008:	8a000093 	bhi	4000725c <UVCAppEP0Thread_Entry+0x448>
4000700c:	e3530b01 	cmp	r3, #1024	; 0x400
40007010:	0a00023e 	beq	40007910 <UVCAppEP0Thread_Entry+0xafc>
40007014:	8a00018e 	bhi	40007654 <UVCAppEP0Thread_Entry+0x840>
40007018:	e3530c02 	cmp	r3, #512	; 0x200
4000701c:	0a000237 	beq	40007900 <UVCAppEP0Thread_Entry+0xaec>
40007020:	e3530c03 	cmp	r3, #768	; 0x300
40007024:	0a000231 	beq	400078f0 <UVCAppEP0Thread_Entry+0xadc>
40007028:	e3530c01 	cmp	r3, #256	; 0x100
4000702c:	1affffaa 	bne	40006edc <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40007030:	e3a00010 	mov	r0, #16
40007034:	ebfff916 	bl	40005494 <ControlHandle>
40007038:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000703c:	eaffffab 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40007040:	e59fb944 	ldr	fp, [pc, #2372]	; 4000798c <UVCAppEP0Thread_Entry+0xb78>
40007044:	e1d9c0b0 	ldrh	ip, [r9]
40007048:	e1da00b0 	ldrh	r0, [sl]
4000704c:	e59f193c 	ldr	r1, [pc, #2364]	; 40007990 <UVCAppEP0Thread_Entry+0xb7c>
40007050:	e5dbe000 	ldrb	lr, [fp]
40007054:	e5d8b000 	ldrb	fp, [r8]
40007058:	e58d000c 	str	r0, [sp, #12]
4000705c:	e58dc008 	str	ip, [sp, #8]
40007060:	e1d1c0b0 	ldrh	ip, [r1]
40007064:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40007068:	e58db004 	str	fp, [sp, #4]
4000706c:	e3a00004 	mov	r0, #4
40007070:	e59f191c 	ldr	r1, [pc, #2332]	; 40007994 <UVCAppEP0Thread_Entry+0xb80>
40007074:	e3a0b000 	mov	fp, #0
40007078:	e58de000 	str	lr, [sp]
4000707c:	e58dc010 	str	ip, [sp, #16]
40007080:	e58db014 	str	fp, [sp, #20]
40007084:	eb00308c 	bl	400132bc <CyU3PDebugPrint>
40007088:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000708c:	eaffff78 	b	40006e74 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40007090:	eb0057ca 	bl	4001cfc0 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40007094:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40007098:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
4000709c:	13a00001 	movne	r0, #1
400070a0:	15850040 	strne	r0, [r5, #64]	; 0x40
400070a4:	eaffff6f 	b	40006e68 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
400070a8:	e1d920b0 	ldrh	r2, [r9]
400070ac:	e3520c03 	cmp	r2, #768	; 0x300
400070b0:	0a000088 	beq	400072d8 <UVCAppEP0Thread_Entry+0x4c4>
400070b4:	8a000033 	bhi	40007188 <UVCAppEP0Thread_Entry+0x374>
400070b8:	e3520c01 	cmp	r2, #256	; 0x100
400070bc:	0a000092 	beq	4000730c <UVCAppEP0Thread_Entry+0x4f8>
400070c0:	e3520c02 	cmp	r2, #512	; 0x200
400070c4:	1affff8e 	bne	40006f04 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
400070c8:	e5d83000 	ldrb	r3, [r8]
400070cc:	e3530081 	cmp	r3, #129	; 0x81
400070d0:	0a0001fe 	beq	400078d0 <UVCAppEP0Thread_Entry+0xabc>
400070d4:	8a00012d 	bhi	40007590 <UVCAppEP0Thread_Entry+0x77c>
400070d8:	e3530001 	cmp	r3, #1
400070dc:	0a0001a6 	beq	4000777c <UVCAppEP0Thread_Entry+0x968>
                            }
                        }
                        break;

                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
400070e0:	e3a00000 	mov	r0, #0
400070e4:	e3a01001 	mov	r1, #1
400070e8:	e1a02000 	mov	r2, r0
400070ec:	eb005bda 	bl	4001e05c <CyU3PUsbStall>
400070f0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070f4:	eaffff87 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
400070f8:	e5d6e67f 	ldrb	lr, [r6, #1663]	; 0x67f
400070fc:	e35e0000 	cmp	lr, #0
40007100:	0affff86 	beq	40006f20 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40007104:	e5973000 	ldr	r3, [r7]
40007108:	e3a0b002 	mov	fp, #2
4000710c:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40007110:	e5971000 	ldr	r1, [r7]
40007114:	e3a0b001 	mov	fp, #1
40007118:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
4000711c:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40007120:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40007124:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40007128:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
4000712c:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40007130:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40007134:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40007138:	e1a0c002 	mov	ip, r2
4000713c:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40007140:	e59f0840 	ldr	r0, [pc, #2112]	; 40007988 <UVCAppEP0Thread_Entry+0xb74>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40007144:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40007148:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
4000714c:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40007150:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40007154:	e58dc01c 	str	ip, [sp, #28]
40007158:	eb003fd3 	bl	400170ac <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
4000715c:	e59f0824 	ldr	r0, [pc, #2084]	; 40007988 <UVCAppEP0Thread_Entry+0xb74>
40007160:	e28d1020 	add	r1, sp, #32
40007164:	eb003f42 	bl	40016e74 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40007168:	e59d301c 	ldr	r3, [sp, #28]
4000716c:	e2502000 	subs	r2, r0, #0
40007170:	1a0000c7 	bne	40007494 <UVCAppEP0Thread_Entry+0x680>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40007174:	e59f27f4 	ldr	r2, [pc, #2036]	; 40007970 <UVCAppEP0Thread_Entry+0xb5c>
					stiflag = CyTrue;
40007178:	e584b0a0 	str	fp, [r4, #160]	; 0xa0
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
4000717c:	e5c2367f 	strb	r3, [r2, #1663]	; 0x67f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40007180:	eb000e82 	bl	4000ab90 <_txe_thread_relinquish>
40007184:	eaffff2b 	b	40006e38 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40007188:	e3520b01 	cmp	r2, #1024	; 0x400
4000718c:	0a00003f 	beq	40007290 <UVCAppEP0Thread_Entry+0x47c>
40007190:	e3520c05 	cmp	r2, #1280	; 0x500
40007194:	1affff5a 	bne	40006f04 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007198:	e5d82000 	ldrb	r2, [r8]
4000719c:	e3520081 	cmp	r2, #129	; 0x81
400071a0:	0a0001ca 	beq	400078d0 <UVCAppEP0Thread_Entry+0xabc>
400071a4:	8a000125 	bhi	40007640 <UVCAppEP0Thread_Entry+0x82c>
400071a8:	e3520001 	cmp	r2, #1
400071ac:	1affff54 	bne	40006f04 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400071b0:	e3a00020 	mov	r0, #32
400071b4:	e59f17dc 	ldr	r1, [pc, #2012]	; 40007998 <UVCAppEP0Thread_Entry+0xb84>
400071b8:	e28d2036 	add	r2, sp, #54	; 0x36
400071bc:	eb00570d 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400071c0:	e3500000 	cmp	r0, #0
400071c4:	1a000166 	bne	40007764 <UVCAppEP0Thread_Entry+0x950>
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
400071c8:	e3a02000 	mov	r2, #0
400071cc:	e59f0798 	ldr	r0, [pc, #1944]	; 4000796c <UVCAppEP0Thread_Entry+0xb58>
400071d0:	e3a01080 	mov	r1, #128	; 0x80
400071d4:	eb000bb4 	bl	4000a0ac <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
400071d8:	e2502000 	subs	r2, r0, #0
400071dc:	0a000002 	beq	400071ec <UVCAppEP0Thread_Entry+0x3d8>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
400071e0:	e3a00004 	mov	r0, #4
400071e4:	e59f17b0 	ldr	r1, [pc, #1968]	; 4000799c <UVCAppEP0Thread_Entry+0xb88>
400071e8:	eb003033 	bl	400132bc <CyU3PDebugPrint>
                            }
    #endif
                            stiflag = CyTrue;//set still flag
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
400071ec:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            stiflag = CyTrue;//set still flag
400071f0:	e3a0c001 	mov	ip, #1
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
400071f4:	e3a00004 	mov	r0, #4
400071f8:	e59f17a0 	ldr	r1, [pc, #1952]	; 400079a0 <UVCAppEP0Thread_Entry+0xb8c>
400071fc:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            stiflag = CyTrue;//set still flag
40007200:	e584c0a0 	str	ip, [r4, #160]	; 0xa0
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40007204:	eb00302c 	bl	400132bc <CyU3PDebugPrint>
40007208:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000720c:	eaffff41 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007210:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007214:	0a0000f1 	beq	400075e0 <UVCAppEP0Thread_Entry+0x7cc>
40007218:	8a0000e6 	bhi	400075b8 <UVCAppEP0Thread_Entry+0x7a4>
4000721c:	e3520c07 	cmp	r2, #1792	; 0x700
40007220:	0a0000e0 	beq	400075a8 <UVCAppEP0Thread_Entry+0x794>
40007224:	e3520b02 	cmp	r2, #2048	; 0x800
40007228:	1affff27 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
4000722c:	e3a00007 	mov	r0, #7
40007230:	ebfff897 	bl	40005494 <ControlHandle>
40007234:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007238:	eaffff2c 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
4000723c:	e3520c09 	cmp	r2, #2304	; 0x900
40007240:	0a000122 	beq	400076d0 <UVCAppEP0Thread_Entry+0x8bc>
40007244:	8a000117 	bhi	400076a8 <UVCAppEP0Thread_Entry+0x894>
40007248:	e3520c07 	cmp	r2, #1792	; 0x700
4000724c:	0a000109 	beq	40007678 <UVCAppEP0Thread_Entry+0x864>
40007250:	e3520b02 	cmp	r2, #2048	; 0x800
40007254:	1affff1c 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>
40007258:	eaffff24 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000725c:	e3530c0f 	cmp	r3, #3840	; 0xf00
40007260:	0a00013b 	beq	40007754 <UVCAppEP0Thread_Entry+0x940>
40007264:	8a000039 	bhi	40007350 <UVCAppEP0Thread_Entry+0x53c>
40007268:	e3530c0b 	cmp	r3, #2816	; 0xb00
4000726c:	0a000134 	beq	40007744 <UVCAppEP0Thread_Entry+0x930>
40007270:	e3530c0d 	cmp	r3, #3328	; 0xd00
40007274:	0a00012e 	beq	40007734 <UVCAppEP0Thread_Entry+0x920>
40007278:	e3530c0a 	cmp	r3, #2560	; 0xa00
4000727c:	1affff16 	bne	40006edc <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(1||CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40007280:	e3a00019 	mov	r0, #25
40007284:	ebfff882 	bl	40005494 <ControlHandle>
40007288:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000728c:	eaffff17 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007290:	e5d8b000 	ldrb	fp, [r8]
40007294:	e35b0081 	cmp	fp, #129	; 0x81
40007298:	0a000013 	beq	400072ec <UVCAppEP0Thread_Entry+0x4d8>
4000729c:	8a000085 	bhi	400074b8 <UVCAppEP0Thread_Entry+0x6a4>
400072a0:	e35b0001 	cmp	fp, #1
400072a4:	1affff8d 	bne	400070e0 <UVCAppEP0Thread_Entry+0x2cc>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400072a8:	e28d2036 	add	r2, sp, #54	; 0x36
400072ac:	e3a00020 	mov	r0, #32
400072b0:	e59f16e0 	ldr	r1, [pc, #1760]	; 40007998 <UVCAppEP0Thread_Entry+0xb84>
400072b4:	eb0056cf 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400072b8:	e2502000 	subs	r2, r0, #0
400072bc:	1affff14 	bne	40006f14 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
400072c0:	e59f06a4 	ldr	r0, [pc, #1700]	; 4000796c <UVCAppEP0Thread_Entry+0xb58>
400072c4:	e1a0100b 	mov	r1, fp
400072c8:	eb000b77 	bl	4000a0ac <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
400072cc:	e2502000 	subs	r2, r0, #0
400072d0:	0affff0f 	beq	40006f14 <UVCAppEP0Thread_Entry+0x100>
400072d4:	ea00014e 	b	40007814 <UVCAppEP0Thread_Entry+0xa00>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400072d8:	e5d82000 	ldrb	r2, [r8]
400072dc:	e3520083 	cmp	r2, #131	; 0x83
400072e0:	8a000098 	bhi	40007548 <UVCAppEP0Thread_Entry+0x734>
400072e4:	e3520081 	cmp	r2, #129	; 0x81
400072e8:	3a00007d 	bcc	400074e4 <UVCAppEP0Thread_Entry+0x6d0>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400072ec:	e5d4b048 	ldrb	fp, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400072f0:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400072f4:	e35b0003 	cmp	fp, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400072f8:	059f16a4 	ldreq	r1, [pc, #1700]	; 400079a4 <UVCAppEP0Thread_Entry+0xb90>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
400072fc:	159f16a4 	ldrne	r1, [pc, #1700]	; 400079a8 <UVCAppEP0Thread_Entry+0xb94>
40007300:	eb00592a 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40007304:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007308:	eaffff02 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
4000730c:	e5d82000 	ldrb	r2, [r8]
40007310:	e3520083 	cmp	r2, #131	; 0x83
40007314:	8a00002f 	bhi	400073d8 <UVCAppEP0Thread_Entry+0x5c4>
40007318:	e3520081 	cmp	r2, #129	; 0x81
4000731c:	3a000014 	bcc	40007374 <UVCAppEP0Thread_Entry+0x560>
                    break;
                case CY_FX_USB_UVC_GET_CUR_REQ:
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
40007320:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
40007324:	e3530003 	cmp	r3, #3
40007328:	0a0000f8 	beq	40007710 <UVCAppEP0Thread_Entry+0x8fc>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
4000732c:	e3a0001a 	mov	r0, #26
40007330:	e59f1674 	ldr	r1, [pc, #1652]	; 400079ac <UVCAppEP0Thread_Entry+0xb98>
40007334:	eb00591d 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40007338:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000733c:	eafffef5 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007340:	e3a00005 	mov	r0, #5
40007344:	ebfffc4d 	bl	40006480 <CTControlHandle>
40007348:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000734c:	eafffee7 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007350:	e3530c11 	cmp	r3, #4352	; 0x1100
40007354:	0a0000e9 	beq	40007700 <UVCAppEP0Thread_Entry+0x8ec>
40007358:	8a00002d 	bhi	40007414 <UVCAppEP0Thread_Entry+0x600>
4000735c:	e3530a01 	cmp	r3, #4096	; 0x1000
40007360:	1afffedd 	bne	40006edc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007364:	e3a0001f 	mov	r0, #31
40007368:	ebfff849 	bl	40005494 <ControlHandle>
4000736c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007370:	eafffede 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007374:	e3520001 	cmp	r2, #1
40007378:	1affff58 	bne	400070e0 <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000737c:	e3a00020 	mov	r0, #32
40007380:	e59f1610 	ldr	r1, [pc, #1552]	; 40007998 <UVCAppEP0Thread_Entry+0xb84>
40007384:	e28d2036 	add	r2, sp, #54	; 0x36
40007388:	eb00569a 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
4000738c:	e3500000 	cmp	r0, #0
40007390:	1afffedf 	bne	40006f14 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007394:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
40007398:	e3510003 	cmp	r1, #3
4000739c:	1afffedc 	bne	40006f14 <UVCAppEP0Thread_Entry+0x100>
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
400073a0:	e5d43085 	ldrb	r3, [r4, #133]	; 0x85
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
400073a4:	e5d4e082 	ldrb	lr, [r4, #130]	; 0x82
                            glProbeCtrlFull[3] = glCommitCtrl[3];
400073a8:	e5d4c083 	ldrb	ip, [r4, #131]	; 0x83
                            glProbeCtrlFull[4] = glCommitCtrl[4];
400073ac:	e5d40084 	ldrb	r0, [r4, #132]	; 0x84
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
400073b0:	e5d42086 	ldrb	r2, [r4, #134]	; 0x86
                            glProbeCtrlFull[7] = glCommitCtrl[7];
400073b4:	e5d4b087 	ldrb	fp, [r4, #135]	; 0x87
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
400073b8:	e5c63619 	strb	r3, [r6, #1561]	; 0x619
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
400073bc:	e5c6e616 	strb	lr, [r6, #1558]	; 0x616
                            glProbeCtrlFull[3] = glCommitCtrl[3];
400073c0:	e5c6c617 	strb	ip, [r6, #1559]	; 0x617
                            glProbeCtrlFull[4] = glCommitCtrl[4];
400073c4:	e5c60618 	strb	r0, [r6, #1560]	; 0x618
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
400073c8:	e5c6261a 	strb	r2, [r6, #1562]	; 0x61a
                            glProbeCtrlFull[7] = glCommitCtrl[7];
400073cc:	e5c6b61b 	strb	fp, [r6, #1563]	; 0x61b
400073d0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073d4:	eafffecf 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400073d8:	e3520086 	cmp	r2, #134	; 0x86
400073dc:	0a000039 	beq	400074c8 <UVCAppEP0Thread_Entry+0x6b4>
400073e0:	e3520087 	cmp	r2, #135	; 0x87
400073e4:	0affffcd 	beq	40007320 <UVCAppEP0Thread_Entry+0x50c>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400073e8:	e3520085 	cmp	r2, #133	; 0x85
400073ec:	1affff3b 	bne	400070e0 <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400073f0:	e59f15b8 	ldr	r1, [pc, #1464]	; 400079b0 <UVCAppEP0Thread_Entry+0xb9c>
400073f4:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400073f8:	e3a0301a 	mov	r3, #26
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
400073fc:	e3a02000 	mov	r2, #0
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
40007400:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
                        glEp0Buffer[1] = 0;
40007404:	e5c4205d 	strb	r2, [r4, #93]	; 0x5d
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007408:	eb0058e8 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
4000740c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007410:	eafffec0 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007414:	e3530c12 	cmp	r3, #4608	; 0x1200
40007418:	0a00014f 	beq	4000795c <UVCAppEP0Thread_Entry+0xb48>
4000741c:	e3530c13 	cmp	r3, #4864	; 0x1300
40007420:	1afffead 	bne	40006edc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID2-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCGridCtlID2);
40007424:	e3a00022 	mov	r0, #34	; 0x22
40007428:	ebfff819 	bl	40005494 <ControlHandle>
4000742c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007430:	eafffeae 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007434:	e3520b01 	cmp	r2, #1024	; 0x400
40007438:	0a000009 	beq	40007464 <UVCAppEP0Thread_Entry+0x650>
4000743c:	e3520c05 	cmp	r2, #1280	; 0x500
40007440:	1afffea1 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007444:	e3a00004 	mov	r0, #4
40007448:	ebfffc0c 	bl	40006480 <CTControlHandle>
4000744c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007450:	eafffea6 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007454:	e3a00002 	mov	r0, #2
40007458:	ebfffc08 	bl	40006480 <CTControlHandle>
4000745c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007460:	eafffea2 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007464:	e3a00003 	mov	r0, #3
40007468:	ebfffc04 	bl	40006480 <CTControlHandle>
4000746c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007470:	eafffe9e 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007474:	e3a00001 	mov	r0, #1
40007478:	ebfff805 	bl	40005494 <ControlHandle>
4000747c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007480:	eafffe9a 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
40007484:	e3a00000 	mov	r0, #0
40007488:	ebfff801 	bl	40005494 <ControlHandle>
4000748c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007490:	eafffe96 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007494:	e3a00004 	mov	r0, #4
40007498:	e59f1514 	ldr	r1, [pc, #1300]	; 400079b4 <UVCAppEP0Thread_Entry+0xba0>
4000749c:	eb002f86 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400074a0:	e59f1510 	ldr	r1, [pc, #1296]	; 400079b8 <UVCAppEP0Thread_Entry+0xba4>
400074a4:	e3a00004 	mov	r0, #4
400074a8:	eb002f83 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400074ac:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400074b0:	eb000605 	bl	40008ccc <_tx_thread_sleep>
400074b4:	eafffff9 	b	400074a0 <UVCAppEP0Thread_Entry+0x68c>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400074b8:	e35b0085 	cmp	fp, #133	; 0x85
400074bc:	0affffcb 	beq	400073f0 <UVCAppEP0Thread_Entry+0x5dc>
400074c0:	e35b0086 	cmp	fp, #134	; 0x86
400074c4:	1affff05 	bne	400070e0 <UVCAppEP0Thread_Entry+0x2cc>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400074c8:	e1a00003 	mov	r0, r3
        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400074cc:	e59f14dc 	ldr	r1, [pc, #1244]	; 400079b0 <UVCAppEP0Thread_Entry+0xb9c>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400074d0:	e3a0b003 	mov	fp, #3
400074d4:	e5c4b05c 	strb	fp, [r4, #92]	; 0x5c
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400074d8:	eb0058b4 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
400074dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074e0:	eafffe8c 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400074e4:	e3520001 	cmp	r2, #1
400074e8:	1afffefc 	bne	400070e0 <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400074ec:	e3a00020 	mov	r0, #32
400074f0:	e59f14a0 	ldr	r1, [pc, #1184]	; 40007998 <UVCAppEP0Thread_Entry+0xb84>
400074f4:	e28d2036 	add	r2, sp, #54	; 0x36
400074f8:	eb00563e 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400074fc:	e3500000 	cmp	r0, #0
40007500:	1afffe83 	bne	40006f14 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
40007504:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
40007508:	e3510003 	cmp	r1, #3
4000750c:	1afffe80 	bne	40006f14 <UVCAppEP0Thread_Entry+0x100>
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007510:	e5d53084 	ldrb	r3, [r5, #132]	; 0x84
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007514:	e5d5e081 	ldrb	lr, [r5, #129]	; 0x81
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007518:	e5d5c082 	ldrb	ip, [r5, #130]	; 0x82
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
4000751c:	e5d50083 	ldrb	r0, [r5, #131]	; 0x83
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007520:	e5d52085 	ldrb	r2, [r5, #133]	; 0x85
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007524:	e5d5b086 	ldrb	fp, [r5, #134]	; 0x86
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007528:	e5c6366c 	strb	r3, [r6, #1644]	; 0x66c
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
4000752c:	e5c6e669 	strb	lr, [r6, #1641]	; 0x669
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007530:	e5c6c66a 	strb	ip, [r6, #1642]	; 0x66a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007534:	e5c6066b 	strb	r0, [r6, #1643]	; 0x66b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007538:	e5c6266d 	strb	r2, [r6, #1645]	; 0x66d
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
4000753c:	e5c6b66e 	strb	fp, [r6, #1646]	; 0x66e
40007540:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007544:	eafffe73 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007548:	e3520086 	cmp	r2, #134	; 0x86
4000754c:	0affffdd 	beq	400074c8 <UVCAppEP0Thread_Entry+0x6b4>
40007550:	e3520087 	cmp	r2, #135	; 0x87
40007554:	1affffa3 	bne	400073e8 <UVCAppEP0Thread_Entry+0x5d4>
40007558:	eaffff63 	b	400072ec <UVCAppEP0Thread_Entry+0x4d8>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
4000755c:	e3a00000 	mov	r0, #0
40007560:	ebfffbc6 	bl	40006480 <CTControlHandle>
40007564:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007568:	eafffe60 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
4000756c:	e3a00004 	mov	r0, #4
40007570:	e59f143c 	ldr	r1, [pc, #1084]	; 400079b4 <UVCAppEP0Thread_Entry+0xba0>
40007574:	eb002f50 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007578:	e59f1438 	ldr	r1, [pc, #1080]	; 400079b8 <UVCAppEP0Thread_Entry+0xba4>
4000757c:	e3a00004 	mov	r0, #4
40007580:	eb002f4d 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007584:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007588:	eb0005cf 	bl	40008ccc <_tx_thread_sleep>
4000758c:	eafffff9 	b	40007578 <UVCAppEP0Thread_Entry+0x764>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007590:	e3530085 	cmp	r3, #133	; 0x85
40007594:	0affff95 	beq	400073f0 <UVCAppEP0Thread_Entry+0x5dc>
40007598:	e3530086 	cmp	r3, #134	; 0x86
4000759c:	1afffecf 	bne	400070e0 <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400075a0:	e3a00001 	mov	r0, #1
400075a4:	eaffffc8 	b	400074cc <UVCAppEP0Thread_Entry+0x6b8>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
400075a8:	e3a00006 	mov	r0, #6
400075ac:	ebfff7b8 	bl	40005494 <ControlHandle>
400075b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075b4:	eafffe4d 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400075b8:	e3520c0d 	cmp	r2, #3328	; 0xd00
400075bc:	0a000007 	beq	400075e0 <UVCAppEP0Thread_Entry+0x7cc>
400075c0:	e3520c0e 	cmp	r2, #3584	; 0xe00
400075c4:	0a000009 	beq	400075f0 <UVCAppEP0Thread_Entry+0x7dc>
400075c8:	e3520b03 	cmp	r2, #3072	; 0xc00
400075cc:	1afffe3e 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
400075d0:	e3a0000b 	mov	r0, #11
400075d4:	ebfff7ae 	bl	40005494 <ControlHandle>
400075d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075dc:	eafffe43 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
400075e0:	e3a00009 	mov	r0, #9
400075e4:	ebfff7aa 	bl	40005494 <ControlHandle>
400075e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075ec:	eafffe3f 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400075f0:	e3a0000e 	mov	r0, #14
400075f4:	ebfff7a6 	bl	40005494 <ControlHandle>
400075f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075fc:	eafffe3b 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007600:	e3520b01 	cmp	r2, #1024	; 0x400
40007604:	0afffe39 	beq	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
40007608:	e3520c05 	cmp	r2, #1280	; 0x500
4000760c:	1afffe2e 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
40007610:	e3a00004 	mov	r0, #4
40007614:	ebfff79e 	bl	40005494 <ControlHandle>
40007618:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000761c:	eafffe33 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
40007620:	e3a00002 	mov	r0, #2
40007624:	ebfff79a 	bl	40005494 <ControlHandle>
40007628:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000762c:	eafffe2f 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
40007630:	e3a00005 	mov	r0, #5
40007634:	ebfff796 	bl	40005494 <ControlHandle>
40007638:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000763c:	eafffe2b 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007640:	e3520085 	cmp	r2, #133	; 0x85
40007644:	0a0000c1 	beq	40007950 <UVCAppEP0Thread_Entry+0xb3c>
40007648:	e3520086 	cmp	r2, #134	; 0x86
4000764c:	1afffe2c 	bne	40006f04 <UVCAppEP0Thread_Entry+0xf0>
40007650:	eaffffd2 	b	400075a0 <UVCAppEP0Thread_Entry+0x78c>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007654:	e3530c06 	cmp	r3, #1536	; 0x600
40007658:	0a0000b8 	beq	40007940 <UVCAppEP0Thread_Entry+0xb2c>
4000765c:	8a000009 	bhi	40007688 <UVCAppEP0Thread_Entry+0x874>
40007660:	e3530c05 	cmp	r3, #1280	; 0x500
40007664:	1afffe1c 	bne	40006edc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
40007668:	e3a00014 	mov	r0, #20
4000766c:	ebfff788 	bl	40005494 <ControlHandle>
40007670:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007674:	eafffe1d 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007678:	e3a00006 	mov	r0, #6
4000767c:	ebfffb7f 	bl	40006480 <CTControlHandle>
40007680:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007684:	eafffe19 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007688:	e3530c07 	cmp	r3, #1792	; 0x700
4000768c:	0a0000a7 	beq	40007930 <UVCAppEP0Thread_Entry+0xb1c>
40007690:	e3530b02 	cmp	r3, #2048	; 0x800
40007694:	1afffe10 	bne	40006edc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
40007698:	e3a00017 	mov	r0, #23
4000769c:	ebfff77c 	bl	40005494 <ControlHandle>
400076a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076a4:	eafffe11 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400076a8:	e3520c0b 	cmp	r2, #2816	; 0xb00
400076ac:	0a00000f 	beq	400076f0 <UVCAppEP0Thread_Entry+0x8dc>
400076b0:	e3520b03 	cmp	r2, #3072	; 0xc00
400076b4:	0a000009 	beq	400076e0 <UVCAppEP0Thread_Entry+0x8cc>
400076b8:	e3520c0a 	cmp	r2, #2560	; 0xa00
400076bc:	1afffe02 	bne	40006ecc <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
400076c0:	e3a00008 	mov	r0, #8
400076c4:	ebfffb6d 	bl	40006480 <CTControlHandle>
400076c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076cc:	eafffe07 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400076d0:	e3a00007 	mov	r0, #7
400076d4:	ebfffb69 	bl	40006480 <CTControlHandle>
400076d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076dc:	eafffe03 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
400076e0:	e3a0000a 	mov	r0, #10
400076e4:	ebfffb65 	bl	40006480 <CTControlHandle>
400076e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076ec:	eafffdff 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400076f0:	e3a00009 	mov	r0, #9
400076f4:	ebfffb61 	bl	40006480 <CTControlHandle>
400076f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076fc:	eafffdfb 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
40007700:	e3a00020 	mov	r0, #32
40007704:	ebfff762 	bl	40005494 <ControlHandle>
40007708:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000770c:	eafffdf7 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrlFull);
40007710:	e59f12a4 	ldr	r1, [pc, #676]	; 400079bc <UVCAppEP0Thread_Entry+0xba8>
40007714:	e3a0001a 	mov	r0, #26
40007718:	eb005824 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
                        CyU3PDebugPrint (4, "video stream GET request Code: %d, \n", bRequest);
4000771c:	e3a00004 	mov	r0, #4
40007720:	e59f1298 	ldr	r1, [pc, #664]	; 400079c0 <UVCAppEP0Thread_Entry+0xbac>
40007724:	e5d82000 	ldrb	r2, [r8]
40007728:	eb002ee3 	bl	400132bc <CyU3PDebugPrint>
4000772c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007730:	eafffdf8 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
40007734:	e3a0001c 	mov	r0, #28
40007738:	ebfff755 	bl	40005494 <ControlHandle>
4000773c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007740:	eafffdea 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
40007744:	e3a0001a 	mov	r0, #26
40007748:	ebfff751 	bl	40005494 <ControlHandle>
4000774c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007750:	eafffde6 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
40007754:	e3a0001e 	mov	r0, #30
40007758:	ebfff74d 	bl	40005494 <ControlHandle>
4000775c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007760:	eafffde2 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    #endif
                            stiflag = CyTrue;//set still flag
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
40007764:	e59f1258 	ldr	r1, [pc, #600]	; 400079c4 <UVCAppEP0Thread_Entry+0xbb0>
40007768:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
4000776c:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
40007770:	e3a00004 	mov	r0, #4
40007774:	eb002ed0 	bl	400132bc <CyU3PDebugPrint>
40007778:	eafffde1 	b	40006f04 <UVCAppEP0Thread_Entry+0xf0>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000777c:	e3a00020 	mov	r0, #32
40007780:	e59f1210 	ldr	r1, [pc, #528]	; 40007998 <UVCAppEP0Thread_Entry+0xb84>
40007784:	e28d2036 	add	r2, sp, #54	; 0x36
40007788:	eb00559a 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
4000778c:	e3500000 	cmp	r0, #0
40007790:	1afffddf 	bne	40006f14 <UVCAppEP0Thread_Entry+0x100>
                    {
                        switch (glCommitCtrl[3])
40007794:	e5d40083 	ldrb	r0, [r4, #131]	; 0x83
40007798:	e3500002 	cmp	r0, #2
4000779c:	0a000038 	beq	40007884 <UVCAppEP0Thread_Entry+0xa70>
400077a0:	e3500003 	cmp	r0, #3
400077a4:	0a00001f 	beq	40007828 <UVCAppEP0Thread_Entry+0xa14>
400077a8:	e3500001 	cmp	r0, #1
400077ac:	1a000010 	bne	400077f4 <UVCAppEP0Thread_Entry+0x9e0>
                         {
                         	case 1: //1944
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400077b0:	e5952058 	ldr	r2, [r5, #88]	; 0x58
400077b4:	e3a01030 	mov	r1, #48	; 0x30
400077b8:	e3520000 	cmp	r2, #0
400077bc:	03a020e4 	moveq	r2, #228	; 0xe4
400077c0:	13a02064 	movne	r2, #100	; 0x64
400077c4:	e3a03052 	mov	r3, #82	; 0x52
400077c8:	ebfff427 	bl	4000486c <SensorSetIrisControl>
                         		CyU3PThreadSleep(1000);
400077cc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400077d0:	eb00053d 	bl	40008ccc <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
400077d4:	e5942058 	ldr	r2, [r4, #88]	; 0x58
400077d8:	e59f11e8 	ldr	r1, [pc, #488]	; 400079c8 <UVCAppEP0Thread_Entry+0xbb4>
400077dc:	e3520000 	cmp	r2, #0
400077e0:	e5943058 	ldr	r3, [r4, #88]	; 0x58
400077e4:	03a020e4 	moveq	r2, #228	; 0xe4
400077e8:	13a02064 	movne	r2, #100	; 0x64
400077ec:	e3a00004 	mov	r0, #4
400077f0:	eb002eb1 	bl	400132bc <CyU3PDebugPrint>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
400077f4:	e5d4e083 	ldrb	lr, [r4, #131]	; 0x83
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
400077f8:	e3a02000 	mov	r2, #0
400077fc:	e59f0168 	ldr	r0, [pc, #360]	; 4000796c <UVCAppEP0Thread_Entry+0xb58>
40007800:	e3a01001 	mov	r1, #1
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
40007804:	e5c4e07d 	strb	lr, [r4, #125]	; 0x7d
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007808:	eb000a27 	bl	4000a0ac <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000780c:	e2502000 	subs	r2, r0, #0
40007810:	0afffdbf 	beq	40006f14 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007814:	e3a00004 	mov	r0, #4
40007818:	e59f117c 	ldr	r1, [pc, #380]	; 4000799c <UVCAppEP0Thread_Entry+0xb88>
4000781c:	eb002ea6 	bl	400132bc <CyU3PDebugPrint>
40007820:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007824:	eafffdbb 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                         		CyU3PThreadSleep(1000);
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
                         		break;
                         	case 3: //720
                         		SensorSetIrisControl(0x1, 0x30, ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007828:	e5950058 	ldr	r0, [r5, #88]	; 0x58
4000782c:	e5d6348c 	ldrb	r3, [r6, #1164]	; 0x48c
40007830:	e3500000 	cmp	r0, #0
40007834:	03a000c4 	moveq	r0, #196	; 0xc4
40007838:	13a00044 	movne	r0, #68	; 0x44
4000783c:	e1802003 	orr	r2, r0, r3
40007840:	e3a01030 	mov	r1, #48	; 0x30
40007844:	e3a03052 	mov	r3, #82	; 0x52
40007848:	e3a00001 	mov	r0, #1
4000784c:	ebfff406 	bl	4000486c <SensorSetIrisControl>
                         		CyU3PThreadSleep(1000);
40007850:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007854:	eb00051c 	bl	40008ccc <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
40007858:	e594c058 	ldr	ip, [r4, #88]	; 0x58
4000785c:	e5d6248c 	ldrb	r2, [r6, #1164]	; 0x48c
40007860:	e35c0000 	cmp	ip, #0
40007864:	03a0c0c4 	moveq	ip, #196	; 0xc4
40007868:	13a0c044 	movne	ip, #68	; 0x44
4000786c:	e5943058 	ldr	r3, [r4, #88]	; 0x58
40007870:	e59f1150 	ldr	r1, [pc, #336]	; 400079c8 <UVCAppEP0Thread_Entry+0xbb4>
40007874:	e18c2002 	orr	r2, ip, r2
40007878:	e3a00004 	mov	r0, #4
4000787c:	eb002e8e 	bl	400132bc <CyU3PDebugPrint>
40007880:	eaffffdb 	b	400077f4 <UVCAppEP0Thread_Entry+0x9e0>
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                         		CyU3PThreadSleep(1000);
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
                         		break;
                         	case 2: //1080
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007884:	e5952058 	ldr	r2, [r5, #88]	; 0x58
40007888:	e3a01030 	mov	r1, #48	; 0x30
4000788c:	e3520000 	cmp	r2, #0
40007890:	03a020d4 	moveq	r2, #212	; 0xd4
40007894:	13a02054 	movne	r2, #84	; 0x54
40007898:	e3a03052 	mov	r3, #82	; 0x52
4000789c:	e3a00001 	mov	r0, #1
400078a0:	ebfff3f1 	bl	4000486c <SensorSetIrisControl>
                         		CyU3PThreadSleep(1000);
400078a4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400078a8:	eb000507 	bl	40008ccc <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
400078ac:	e5942058 	ldr	r2, [r4, #88]	; 0x58
400078b0:	e59f1110 	ldr	r1, [pc, #272]	; 400079c8 <UVCAppEP0Thread_Entry+0xbb4>
400078b4:	e3520000 	cmp	r2, #0
400078b8:	e5943058 	ldr	r3, [r4, #88]	; 0x58
400078bc:	03a020d4 	moveq	r2, #212	; 0xd4
400078c0:	13a02054 	movne	r2, #84	; 0x54
400078c4:	e3a00004 	mov	r0, #4
400078c8:	eb002e7b 	bl	400132bc <CyU3PDebugPrint>
400078cc:	eaffffc8 	b	400077f4 <UVCAppEP0Thread_Entry+0x9e0>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400078d0:	e5d41048 	ldrb	r1, [r4, #72]	; 0x48
400078d4:	e3510003 	cmp	r1, #3
400078d8:	1afffe93 	bne	4000732c <UVCAppEP0Thread_Entry+0x518>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
400078dc:	e3a0001a 	mov	r0, #26
400078e0:	e59f10e4 	ldr	r1, [pc, #228]	; 400079cc <UVCAppEP0Thread_Entry+0xbb8>
400078e4:	eb0057b1 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
400078e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400078ec:	eafffd89 	b	40006f18 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
400078f0:	e3a00012 	mov	r0, #18
400078f4:	ebfff6e6 	bl	40005494 <ControlHandle>
400078f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400078fc:	eafffd7b 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007900:	e3a00011 	mov	r0, #17
40007904:	ebfff6e2 	bl	40005494 <ControlHandle>
40007908:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000790c:	eafffd77 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
40007910:	e3a00013 	mov	r0, #19
40007914:	ebfff6de 	bl	40005494 <ControlHandle>
40007918:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000791c:	eafffd73 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
40007920:	e3a00018 	mov	r0, #24
40007924:	ebfff6da 	bl	40005494 <ControlHandle>
40007928:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000792c:	eafffd6f 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
40007930:	e3a00016 	mov	r0, #22
40007934:	ebfff6d6 	bl	40005494 <ControlHandle>
40007938:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000793c:	eafffd6b 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
40007940:	e3a00015 	mov	r0, #21
40007944:	ebfff6d2 	bl	40005494 <ControlHandle>
40007948:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000794c:	eafffd67 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007950:	e3a00002 	mov	r0, #2
40007954:	e59f1054 	ldr	r1, [pc, #84]	; 400079b0 <UVCAppEP0Thread_Entry+0xb9c>
40007958:	eafffea7 	b	400073fc <UVCAppEP0Thread_Entry+0x5e8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
4000795c:	e3a00021 	mov	r0, #33	; 0x21
40007960:	ebfff6cb 	bl	40005494 <ControlHandle>
40007964:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007968:	eafffd60 	b	40006ef0 <UVCAppEP0Thread_Entry+0xdc>
4000796c:	40030fb0 	.word	0x40030fb0
40007970:	40030000 	.word	0x40030000
40007974:	4003312c 	.word	0x4003312c
40007978:	40032fe0 	.word	0x40032fe0
4000797c:	40033010 	.word	0x40033010
40007980:	400330f0 	.word	0x400330f0
40007984:	40011980 	.word	0x40011980
40007988:	40033050 	.word	0x40033050
4000798c:	40032ee0 	.word	0x40032ee0
40007990:	40033012 	.word	0x40033012
40007994:	40011904 	.word	0x40011904
40007998:	40031030 	.word	0x40031030
4000799c:	400119f8 	.word	0x400119f8
400079a0:	40011a20 	.word	0x40011a20
400079a4:	40030668 	.word	0x40030668
400079a8:	40030674 	.word	0x40030674
400079ac:	40030630 	.word	0x40030630
400079b0:	4003100c 	.word	0x4003100c
400079b4:	40011a70 	.word	0x40011a70
400079b8:	40011604 	.word	0x40011604
400079bc:	40030614 	.word	0x40030614
400079c0:	400119ac 	.word	0x400119ac
400079c4:	40011a48 	.word	0x40011a48
400079c8:	400119d4 	.word	0x400119d4
400079cc:	4003064c 	.word	0x4003064c

400079d0 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400079d0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400079d4:	e59f42ac 	ldr	r4, [pc, #684]	; 40007c88 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400079d8:	e59f22ac 	ldr	r2, [pc, #684]	; 40007c8c <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
400079dc:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400079e0:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400079e4:	e592001c 	ldr	r0, [r2, #28]
400079e8:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400079ec:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
400079f0:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400079f4:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400079f8:	eb000a43 	bl	4000a30c <_txe_mutex_get>
    if(Data1&0x80){
400079fc:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007a00:	12066001 	andne	r6, r6, #1
40007a04:	11e06006 	mvnne	r6, r6
40007a08:	1206603b 	andne	r6, r6, #59	; 0x3b
40007a0c:	11e06006 	mvnne	r6, r6
40007a10:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
40007a14:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007a18:	e3a08000 	mov	r8, #0
40007a1c:	e1a0200a 	mov	r2, sl
40007a20:	e1a03007 	mov	r3, r7
40007a24:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007a28:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007a2c:	e59f0258 	ldr	r0, [pc, #600]	; 40007c8c <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007a30:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007a34:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007a38:	e88d0140 	stm	sp, {r6, r8}
40007a3c:	ebffee9d 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007a40:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
40007a44:	e1a01009 	mov	r1, r9
40007a48:	e1a03007 	mov	r3, r7
40007a4c:	e59f0238 	ldr	r0, [pc, #568]	; 40007c8c <CamDefSet+0x2bc>
40007a50:	e88d0220 	stm	sp, {r5, r9}
40007a54:	ebffee97 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007a58:	e1a02006 	mov	r2, r6
40007a5c:	e1a03005 	mov	r3, r5
40007a60:	e59f1228 	ldr	r1, [pc, #552]	; 40007c90 <CamDefSet+0x2c0>
40007a64:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
40007a68:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007a6c:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007a70:	eb002e11 	bl	400132bc <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007a74:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
40007a78:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007a7c:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007a80:	e3a01002 	mov	r1, #2
40007a84:	e59f0200 	ldr	r0, [pc, #512]	; 40007c8c <CamDefSet+0x2bc>
40007a88:	e58db000 	str	fp, [sp]
40007a8c:	e58d8004 	str	r8, [sp, #4]
40007a90:	ebffee88 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a94:	e1a0200b 	mov	r2, fp
40007a98:	e1a03005 	mov	r3, r5
40007a9c:	e59f11ec 	ldr	r1, [pc, #492]	; 40007c90 <CamDefSet+0x2c0>
40007aa0:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007aa4:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007aa8:	eb002e03 	bl	400132bc <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007aac:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007ab0:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007ab4:	e247b080 	sub	fp, r7, #128	; 0x80
40007ab8:	e20b10ff 	and	r1, fp, #255	; 0xff
40007abc:	e58d1014 	str	r1, [sp, #20]
40007ac0:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007ac4:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007ac8:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007acc:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007ad0:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007ad4:	e3a01005 	mov	r1, #5
40007ad8:	e3a020df 	mov	r2, #223	; 0xdf
40007adc:	e59f01a8 	ldr	r0, [pc, #424]	; 40007c8c <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007ae0:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007ae4:	e58dc000 	str	ip, [sp]
40007ae8:	e58d8004 	str	r8, [sp, #4]
40007aec:	ebffee71 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007af0:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007af4:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007af8:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007afc:	e1a03006 	mov	r3, r6
40007b00:	e3a01005 	mov	r1, #5
40007b04:	e3a020dc 	mov	r2, #220	; 0xdc
40007b08:	e59f017c 	ldr	r0, [pc, #380]	; 40007c8c <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007b0c:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007b10:	e58dc000 	str	ip, [sp]
40007b14:	e58d9004 	str	r9, [sp, #4]
40007b18:	ebffee66 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007b1c:	e59d001c 	ldr	r0, [sp, #28]
40007b20:	e3a0e002 	mov	lr, #2
40007b24:	e200c0ff 	and	ip, r0, #255	; 0xff
40007b28:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007b2c:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007b30:	e3a01005 	mov	r1, #5
40007b34:	e3a020de 	mov	r2, #222	; 0xde
40007b38:	e59f014c 	ldr	r0, [pc, #332]	; 40007c8c <CamDefSet+0x2bc>
40007b3c:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007b40:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007b44:	e58dc000 	str	ip, [sp]
40007b48:	ebffee5a 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007b4c:	e59da020 	ldr	sl, [sp, #32]
40007b50:	e1a03006 	mov	r3, r6
40007b54:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007b58:	e58dc000 	str	ip, [sp]
40007b5c:	e3a01005 	mov	r1, #5
40007b60:	e3a0c003 	mov	ip, #3
40007b64:	e3a020e0 	mov	r2, #224	; 0xe0
40007b68:	e59f011c 	ldr	r0, [pc, #284]	; 40007c8c <CamDefSet+0x2bc>
40007b6c:	e58dc004 	str	ip, [sp, #4]
40007b70:	ebffee50 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007b74:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40007b78:	e3a0a004 	mov	sl, #4
40007b7c:	e200c0ff 	and	ip, r0, #255	; 0xff
40007b80:	e1a03006 	mov	r3, r6
40007b84:	e3a01005 	mov	r1, #5
40007b88:	e3a020dd 	mov	r2, #221	; 0xdd
40007b8c:	e59f00f8 	ldr	r0, [pc, #248]	; 40007c8c <CamDefSet+0x2bc>
40007b90:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007b94:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007b98:	e58da004 	str	sl, [sp, #4]
40007b9c:	ebffee45 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007ba0:	e3a0e005 	mov	lr, #5
40007ba4:	e1a0100e 	mov	r1, lr
40007ba8:	e1a03006 	mov	r3, r6
40007bac:	e3a020e1 	mov	r2, #225	; 0xe1
40007bb0:	e20760ff 	and	r6, r7, #255	; 0xff
40007bb4:	e59f00d0 	ldr	r0, [pc, #208]	; 40007c8c <CamDefSet+0x2bc>
40007bb8:	e88d4040 	stm	sp, {r6, lr}
40007bbc:	ebffee3d 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007bc0:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007bc4:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40007bc8:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007bcc:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007bd0:	e59dc020 	ldr	ip, [sp, #32]
40007bd4:	e1a0200b 	mov	r2, fp
40007bd8:	e59d3018 	ldr	r3, [sp, #24]
40007bdc:	e59f10b0 	ldr	r1, [pc, #176]	; 40007c94 <CamDefSet+0x2c4>
40007be0:	e1a0000a 	mov	r0, sl
40007be4:	e88d5040 	stm	sp, {r6, ip, lr}
40007be8:	e58d700c 	str	r7, [sp, #12]
40007bec:	eb002db2 	bl	400132bc <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007bf0:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
40007bf4:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
40007bf8:	e1a03007 	mov	r3, r7
40007bfc:	e3a01006 	mov	r1, #6
40007c00:	e3a02085 	mov	r2, #133	; 0x85
40007c04:	e59f0080 	ldr	r0, [pc, #128]	; 40007c8c <CamDefSet+0x2bc>
40007c08:	e88d0140 	stm	sp, {r6, r8}
40007c0c:	ebffee29 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007c10:	e1a03007 	mov	r3, r7
40007c14:	e3a01006 	mov	r1, #6
40007c18:	e3a02086 	mov	r2, #134	; 0x86
40007c1c:	e59f0068 	ldr	r0, [pc, #104]	; 40007c8c <CamDefSet+0x2bc>
40007c20:	e88d0240 	stm	sp, {r6, r9}
40007c24:	ebffee23 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007c28:	e1a02006 	mov	r2, r6
40007c2c:	e1a03005 	mov	r3, r5
40007c30:	e59f1058 	ldr	r1, [pc, #88]	; 40007c90 <CamDefSet+0x2c0>
40007c34:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
40007c38:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007c3c:	eb002d9e 	bl	400132bc <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007c40:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
40007c44:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
40007c48:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
40007c4c:	e3a01007 	mov	r1, #7
40007c50:	e59f0034 	ldr	r0, [pc, #52]	; 40007c8c <CamDefSet+0x2bc>
40007c54:	e88d0140 	stm	sp, {r6, r8}
40007c58:	ebffee16 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007c5c:	e1a03005 	mov	r3, r5
40007c60:	e1a0000a 	mov	r0, sl
40007c64:	e59f1024 	ldr	r1, [pc, #36]	; 40007c90 <CamDefSet+0x2c0>
40007c68:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007c6c:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007c70:	eb002d91 	bl	400132bc <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007c74:	e59f3010 	ldr	r3, [pc, #16]	; 40007c8c <CamDefSet+0x2bc>
40007c78:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007c7c:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007c80:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007c84:	ea0009d5 	b	4000a3e0 <_txe_mutex_put>
40007c88:	40030000 	.word	0x40030000
40007c8c:	40032ee4 	.word	0x40032ee4
40007c90:	40011aa4 	.word	0x40011aa4
40007c94:	40011ac4 	.word	0x40011ac4

40007c98 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007c98:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007c9c:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007ca0:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007ca4:	e59f1018 	ldr	r1, [pc, #24]	; 40007cc4 <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007ca8:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007cac:	ebffef08 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007cb0:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007cb4:	15d43001 	ldrbne	r3, [r4, #1]
40007cb8:	13833002 	orrne	r3, r3, #2
40007cbc:	15c43001 	strbne	r3, [r4, #1]
40007cc0:	e8bd8038 	pop	{r3, r4, r5, pc}
40007cc4:	40030480 	.word	0x40030480

40007cc8 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007cc8:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ccc:	e59f1010 	ldr	r1, [pc, #16]	; 40007ce4 <CyFxAppErrorHandler+0x1c>
40007cd0:	e3a00004 	mov	r0, #4
40007cd4:	eb002d78 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007cd8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007cdc:	eb0003fa 	bl	40008ccc <_tx_thread_sleep>
40007ce0:	eafffff9 	b	40007ccc <CyFxAppErrorHandler+0x4>
40007ce4:	40011604 	.word	0x40011604

40007ce8 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007ce8:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007cec:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007cf0:	eb006ce2 	bl	40023080 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cf4:	e2504000 	subs	r4, r0, #0
40007cf8:	0a000004 	beq	40007d10 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007cfc:	e3a00004 	mov	r0, #4
40007d00:	e59f1a28 	ldr	r1, [pc, #2600]	; 40008730 <UVCAppThread_Entry+0xa48>
40007d04:	eb002d6c 	bl	400132bc <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007d08:	e1a00004 	mov	r0, r4
40007d0c:	ebffffed 	bl	40007cc8 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007d10:	e59fca1c 	ldr	ip, [pc, #2588]	; 40008734 <UVCAppThread_Entry+0xa4c>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007d14:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007d18:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007d1c:	e28d0050 	add	r0, sp, #80	; 0x50
40007d20:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007d24:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007d28:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007d2c:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007d30:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007d34:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007d38:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007d3c:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007d40:	eb006d47 	bl	40023264 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d44:	e3500000 	cmp	r0, #0
40007d48:	0a000000 	beq	40007d50 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007d4c:	ebffffdd 	bl	40007cc8 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007d50:	e3e00000 	mvn	r0, #0
40007d54:	eb006dc9 	bl	40023480 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d58:	e3500000 	cmp	r0, #0
40007d5c:	0a000000 	beq	40007d64 <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007d60:	ebffffd8 	bl	40007cc8 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007d64:	e3a00003 	mov	r0, #3
40007d68:	e3a01004 	mov	r1, #4
40007d6c:	eb002cca 	bl	4001309c <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d70:	e3500000 	cmp	r0, #0
40007d74:	0a000000 	beq	40007d7c <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007d78:	ebffffd2 	bl	40007cc8 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007d7c:	e3a00000 	mov	r0, #0
40007d80:	eb002d49 	bl	400132ac <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007d84:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d88:	eb0003cf 	bl	40008ccc <_tx_thread_sleep>
40007d8c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d90:	eb0003cd 	bl	40008ccc <_tx_thread_sleep>
40007d94:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d98:	eb0003cb 	bl	40008ccc <_tx_thread_sleep>
40007d9c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007da0:	eb0003c9 	bl	40008ccc <_tx_thread_sleep>
40007da4:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007da8:	eb0003c7 	bl	40008ccc <_tx_thread_sleep>
40007dac:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007db0:	eb0003c5 	bl	40008ccc <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007db4:	eb006e3f 	bl	400236b8 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007db8:	e2504000 	subs	r4, r0, #0
40007dbc:	0a000004 	beq	40007dd4 <UVCAppThread_Entry+0xec>
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007dc0:	e3a00004 	mov	r0, #4
40007dc4:	e59f196c 	ldr	r1, [pc, #2412]	; 40008738 <UVCAppThread_Entry+0xa50>
40007dc8:	eb002d3b 	bl	400132bc <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007dcc:	e1a00004 	mov	r0, r4
40007dd0:	ebffffbc 	bl	40007cc8 <CyFxAppErrorHandler>
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007dd4:	e59f6960 	ldr	r6, [pc, #2400]	; 4000873c <UVCAppThread_Entry+0xa54>
    i2cConfig.isDma      = CyFalse;
40007dd8:	e3a05000 	mov	r5, #0
    i2cConfig.busTimeout = 0xffffffffU;
40007ddc:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007de0:	e28d008c 	add	r0, sp, #140	; 0x8c
40007de4:	e1a01005 	mov	r1, r5
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007de8:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007dec:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007df0:	e58d608c 	str	r6, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007df4:	e58d5090 	str	r5, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007df8:	eb006f27 	bl	40023a9c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007dfc:	e2504000 	subs	r4, r0, #0
40007e00:	0a000004 	beq	40007e18 <UVCAppThread_Entry+0x130>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007e04:	e3a00004 	mov	r0, #4
40007e08:	e59f1930 	ldr	r1, [pc, #2352]	; 40008740 <UVCAppThread_Entry+0xa58>
40007e0c:	eb002d2a 	bl	400132bc <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007e10:	e1a00004 	mov	r0, r4
40007e14:	ebffffab 	bl	40007cc8 <CyFxAppErrorHandler>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007e18:	e59f6924 	ldr	r6, [pc, #2340]	; 40008744 <UVCAppThread_Entry+0xa5c>
40007e1c:	e3a02028 	mov	r2, #40	; 0x28
40007e20:	e3a01000 	mov	r1, #0
40007e24:	e1a00006 	mov	r0, r6
40007e28:	eb0007ff 	bl	40009e2c <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007e2c:	e2502000 	subs	r2, r0, #0
40007e30:	1a0000f3 	bne	40008204 <UVCAppThread_Entry+0x51c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007e34:	e3a05002 	mov	r5, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007e38:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007e3c:	e5862040 	str	r2, [r6, #64]	; 0x40
    clearFeatureRqtReceived = CyFalse;
40007e40:	e5862044 	str	r2, [r6, #68]	; 0x44

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007e44:	e3a07003 	mov	r7, #3
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007e48:	e28d009c 	add	r0, sp, #156	; 0x9c
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007e4c:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007e50:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007e54:	e5cd509c 	strb	r5, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007e58:	e5cd509d 	strb	r5, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007e5c:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007e60:	eb006b1c 	bl	40022ad8 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007e64:	e2502000 	subs	r2, r0, #0
40007e68:	1a0000f7 	bne	4000824c <UVCAppThread_Entry+0x564>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007e6c:	e3a00016 	mov	r0, #22
40007e70:	e3a01001 	mov	r1, #1
40007e74:	eb002c00 	bl	40012e7c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007e78:	e2502000 	subs	r2, r0, #0
40007e7c:	1a0000e9 	bne	40008228 <UVCAppThread_Entry+0x540>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007e80:	e3a00014 	mov	r0, #20
40007e84:	e3a01001 	mov	r1, #1
40007e88:	eb002bfb 	bl	40012e7c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007e8c:	e2502000 	subs	r2, r0, #0
40007e90:	1a0000f6 	bne	40008270 <UVCAppThread_Entry+0x588>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007e94:	e3a00018 	mov	r0, #24
40007e98:	e3a01001 	mov	r1, #1
40007e9c:	eb002bf6 	bl	40012e7c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007ea0:	e2502000 	subs	r2, r0, #0
40007ea4:	1a0001d2 	bne	400085f4 <UVCAppThread_Entry+0x90c>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007ea8:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007eac:	e3a00016 	mov	r0, #22
40007eb0:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007eb4:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007eb8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007ebc:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007ec0:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007ec4:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007ec8:	eb006bba 	bl	40022db8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ecc:	e2502000 	subs	r2, r0, #0
40007ed0:	1a0001be 	bne	400085d0 <UVCAppThread_Entry+0x8e8>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007ed4:	e3a00014 	mov	r0, #20
40007ed8:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007edc:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ee0:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007ee4:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007ee8:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007eec:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007ef0:	eb006bb0 	bl	40022db8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ef4:	e2502000 	subs	r2, r0, #0
40007ef8:	1a0001c6 	bne	40008618 <UVCAppThread_Entry+0x930>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007efc:	e3a00018 	mov	r0, #24
40007f00:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007f04:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007f08:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007f0c:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007f10:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007f14:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007f18:	eb006ba6 	bl	40022db8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f1c:	e2502000 	subs	r2, r0, #0
40007f20:	1a0001a1 	bne	400085ac <UVCAppThread_Entry+0x8c4>
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007f24:	e1a00004 	mov	r0, r4
40007f28:	e28d107c 	add	r1, sp, #124	; 0x7c
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007f2c:	e58d2084 	str	r2, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007f30:	e58d2080 	str	r2, [sp, #128]	; 0x80
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007f34:	e1cd57bc 	strh	r5, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007f38:	e5cd7088 	strb	r7, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007f3c:	eb004c36 	bl	4001b01c <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f40:	e2502000 	subs	r2, r0, #0
40007f44:	1a00018f 	bne	40008588 <UVCAppThread_Entry+0x8a0>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007f48:	e59f07f8 	ldr	r0, [pc, #2040]	; 40008748 <UVCAppThread_Entry+0xa60>
40007f4c:	eb004eb0 	bl	4001ba14 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007f50:	ebfff1ac 	bl	40004608 <SensorReset>
    CyU3PThreadSleep(5000);
40007f54:	e59f07f0 	ldr	r0, [pc, #2032]	; 4000874c <UVCAppThread_Entry+0xa64>
40007f58:	eb00035b 	bl	40008ccc <_tx_thread_sleep>
    //SensorInit ();

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007f5c:	eb005922 	bl	4001e3ec <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f60:	e2502000 	subs	r2, r0, #0
40007f64:	1a00017e 	bne	40008564 <UVCAppThread_Entry+0x87c>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007f68:	e3a01000 	mov	r1, #0
40007f6c:	e59f07dc 	ldr	r0, [pc, #2012]	; 40008750 <UVCAppThread_Entry+0xa68>
40007f70:	eb0063d4 	bl	40020ec8 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007f74:	e59f07d8 	ldr	r0, [pc, #2008]	; 40008754 <UVCAppThread_Entry+0xa6c>
40007f78:	eb0063bd 	bl	40020e74 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007f7c:	e3a01000 	mov	r1, #0
40007f80:	e59f27d0 	ldr	r2, [pc, #2000]	; 40008758 <UVCAppThread_Entry+0xa70>
40007f84:	e3a00001 	mov	r0, #1
40007f88:	eb0056f7 	bl	4001db6c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007f8c:	e3a00000 	mov	r0, #0
40007f90:	e1a01000 	mov	r1, r0
40007f94:	e59f27c0 	ldr	r2, [pc, #1984]	; 4000875c <UVCAppThread_Entry+0xa74>
40007f98:	eb0056f3 	bl	4001db6c <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007f9c:	e3a01000 	mov	r1, #0
40007fa0:	e59f27b8 	ldr	r2, [pc, #1976]	; 40008760 <UVCAppThread_Entry+0xa78>
40007fa4:	e3a00002 	mov	r0, #2
40007fa8:	eb0056ef 	bl	4001db6c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007fac:	e3a01000 	mov	r1, #0
40007fb0:	e59f27ac 	ldr	r2, [pc, #1964]	; 40008764 <UVCAppThread_Entry+0xa7c>
40007fb4:	e3a00007 	mov	r0, #7
40007fb8:	eb0056eb 	bl	4001db6c <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007fbc:	e3a01000 	mov	r1, #0
40007fc0:	e59f27a0 	ldr	r2, [pc, #1952]	; 40008768 <UVCAppThread_Entry+0xa80>
40007fc4:	e3a00004 	mov	r0, #4
40007fc8:	eb0056e7 	bl	4001db6c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007fcc:	e3a01000 	mov	r1, #0
40007fd0:	e59f2794 	ldr	r2, [pc, #1940]	; 4000876c <UVCAppThread_Entry+0xa84>
40007fd4:	e3a00003 	mov	r0, #3
40007fd8:	eb0056e3 	bl	4001db6c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007fdc:	e3a01000 	mov	r1, #0
40007fe0:	e59f2788 	ldr	r2, [pc, #1928]	; 40008770 <UVCAppThread_Entry+0xa88>
40007fe4:	e3a00006 	mov	r0, #6
40007fe8:	eb0056df 	bl	4001db6c <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007fec:	e3a01000 	mov	r1, #0
40007ff0:	e59f277c 	ldr	r2, [pc, #1916]	; 40008774 <UVCAppThread_Entry+0xa8c>
40007ff4:	e3a00005 	mov	r0, #5
40007ff8:	eb0056db 	bl	4001db6c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007ffc:	e3a01001 	mov	r1, #1
40008000:	e59f2770 	ldr	r2, [pc, #1904]	; 40008778 <UVCAppThread_Entry+0xa90>
40008004:	e3a00005 	mov	r0, #5
40008008:	eb0056d7 	bl	4001db6c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
4000800c:	e3a01002 	mov	r1, #2
40008010:	e59f2764 	ldr	r2, [pc, #1892]	; 4000877c <UVCAppThread_Entry+0xa94>
40008014:	e3a00005 	mov	r0, #5
40008018:	eb0056d3 	bl	4001db6c <CyU3PUsbSetDesc>
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
4000801c:	e3a07000 	mov	r7, #0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40008020:	e3a04001 	mov	r4, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40008024:	e3a0a003 	mov	sl, #3
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40008028:	e3a00082 	mov	r0, #130	; 0x82
4000802c:	e28d10a8 	add	r1, sp, #168	; 0xa8
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40008030:	e3a08040 	mov	r8, #64	; 0x40
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40008034:	e5cda0ac 	strb	sl, [sp, #172]	; 0xac
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40008038:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
4000803c:	e1cd8bb0 	strh	r8, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40008040:	e5cd70b3 	strb	r7, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40008044:	e1cd7abe 	strh	r7, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40008048:	e5cd40b2 	strb	r4, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
4000804c:	eb00502d 	bl	4001c108 <CyU3PSetEpConfig>
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
40008050:	e1a0a007 	mov	sl, r7
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40008054:	e2503000 	subs	r3, r0, #0
40008058:	1a000137 	bne	4000853c <UVCAppThread_Entry+0x854>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
4000805c:	e59fc71c 	ldr	ip, [pc, #1820]	; 40008780 <UVCAppThread_Entry+0xa98>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40008060:	e59fe71c 	ldr	lr, [pc, #1820]	; 40008784 <UVCAppThread_Entry+0xa9c>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40008064:	e3a05b01 	mov	r5, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40008068:	e3a07010 	mov	r7, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
4000806c:	e59f0714 	ldr	r0, [pc, #1812]	; 40008788 <UVCAppThread_Entry+0xaa0>
40008070:	e3a01004 	mov	r1, #4
40008074:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40008078:	e1cd53b4 	strh	r5, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
4000807c:	e1cd43b6 	strh	r4, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40008080:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40008084:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40008088:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
4000808c:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40008090:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40008094:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40008098:	e5cda044 	strb	sl, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
4000809c:	e58d7048 	str	r7, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
400080a0:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
400080a4:	eb00369a 	bl	40015b14 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
400080a8:	e2505000 	subs	r5, r0, #0
400080ac:	1a0000db 	bne	40008420 <UVCAppThread_Entry+0x738>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
400080b0:	e3a00b01 	mov	r0, #1024	; 0x400
400080b4:	ebffef2b 	bl	40003d68 <CyU3PDmaBufferAlloc>
400080b8:	e59f16cc 	ldr	r1, [pc, #1740]	; 4000878c <UVCAppThread_Entry+0xaa4>
    if (glInterStaBuffer == 0)
400080bc:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
400080c0:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
400080c4:	0a0000cc 	beq	400083fc <UVCAppThread_Entry+0x714>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
400080c8:	e3a03004 	mov	r3, #4
400080cc:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
400080d0:	e59f36b8 	ldr	r3, [pc, #1720]	; 40008790 <UVCAppThread_Entry+0xaa8>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
400080d4:	e3a0e901 	mov	lr, #16384	; 0x4000
400080d8:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
400080dc:	e59fe6b0 	ldr	lr, [pc, #1712]	; 40008794 <UVCAppThread_Entry+0xaac>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
400080e0:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
400080e4:	e59f36ac 	ldr	r3, [pc, #1708]	; 40008798 <UVCAppThread_Entry+0xab0>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
400080e8:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
400080ec:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
400080f0:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
400080f4:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
400080f8:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
400080fc:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40008100:	e5cda02a 	strb	sl, [sp, #42]	; 0x2a
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40008104:	e3a08002 	mov	r8, #2
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40008108:	e59f068c 	ldr	r0, [pc, #1676]	; 4000879c <UVCAppThread_Entry+0xab4>
4000810c:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40008110:	e3a0a018 	mov	sl, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40008114:	e1cd81b0 	strh	r8, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40008118:	e1cd52b2 	strh	r5, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
4000811c:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40008120:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40008124:	e1cd52b8 	strh	r5, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40008128:	e58da02c 	str	sl, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
4000812c:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40008130:	eb003f97 	bl	40017f94 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40008134:	e2502000 	subs	r2, r0, #0
40008138:	1a0000a6 	bne	400083d8 <UVCAppThread_Entry+0x6f0>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
4000813c:	e1a00004 	mov	r0, r4
40008140:	e1a01004 	mov	r1, r4
40008144:	eb004eeb 	bl	4001bcf8 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008148:	e2502000 	subs	r2, r0, #0
4000814c:	1a000098 	bne	400083b4 <UVCAppThread_Entry+0x6cc>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40008150:	e3a00064 	mov	r0, #100	; 0x64
40008154:	eb002dc9 	bl	40013880 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40008158:	eb005398 	bl	4001cfc0 <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
4000815c:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40008160:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40008164:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40008168:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
4000816c:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40008170:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40008174:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40008178:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
4000817c:	03a08b01 	moveq	r8, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40008180:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40008184:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40008188:	01cd8bb0 	strheq	r8, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
4000818c:	05cd70b2 	strbeq	r7, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
40008190:	15cd40b2 	strbne	r4, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40008194:	eb004fdb 	bl	4001c108 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008198:	e2502000 	subs	r2, r0, #0
4000819c:	1a00004f 	bne	400082e0 <UVCAppThread_Entry+0x5f8>
400081a0:	e59f85f8 	ldr	r8, [pc, #1528]	; 400087a0 <UVCAppThread_Entry+0xab8>
    //CyU3PThreadSleep(1000);

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
400081a4:	e59f5598 	ldr	r5, [pc, #1432]	; 40008744 <UVCAppThread_Entry+0xa5c>
400081a8:	e1a04002 	mov	r4, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
400081ac:	e1a07008 	mov	r7, r8
    //CyU3PThreadSleep(1000);

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
400081b0:	e59f058c 	ldr	r0, [pc, #1420]	; 40008744 <UVCAppThread_Entry+0xa5c>
400081b4:	e3a01001 	mov	r1, #1
400081b8:	e3a02002 	mov	r2, #2
400081bc:	e28d30b4 	add	r3, sp, #180	; 0xb4
400081c0:	e58d4000 	str	r4, [sp]
400081c4:	eb000788 	bl	40009fec <_txe_event_flags_get>
400081c8:	e3500000 	cmp	r0, #0
400081cc:	1a000030 	bne	40008294 <UVCAppThread_Entry+0x5ac>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
400081d0:	e5951030 	ldr	r1, [r5, #48]	; 0x30
400081d4:	e3510000 	cmp	r1, #0
400081d8:	0a000003 	beq	400081ec <UVCAppThread_Entry+0x504>
400081dc:	e1d5a3b4 	ldrh	sl, [r5, #52]	; 0x34
400081e0:	e1d5c3b6 	ldrh	ip, [r5, #54]	; 0x36
400081e4:	e15a000c 	cmp	sl, ip
400081e8:	0a000113 	beq	4000863c <UVCAppThread_Entry+0x954>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
400081ec:	e3a01040 	mov	r1, #64	; 0x40
400081f0:	e3a02000 	mov	r2, #0
400081f4:	e59f0548 	ldr	r0, [pc, #1352]	; 40008744 <UVCAppThread_Entry+0xa5c>
400081f8:	eb0007ab 	bl	4000a0ac <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
400081fc:	eb000a63 	bl	4000ab90 <_txe_thread_relinquish>
    }
40008200:	eaffffea 	b	400081b0 <UVCAppThread_Entry+0x4c8>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40008204:	e3a00004 	mov	r0, #4
40008208:	e59f1594 	ldr	r1, [pc, #1428]	; 400087a4 <UVCAppThread_Entry+0xabc>
4000820c:	eb002c2a 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008210:	e59f1590 	ldr	r1, [pc, #1424]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008214:	e3a00004 	mov	r0, #4
40008218:	eb002c27 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000821c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008220:	eb0002a9 	bl	40008ccc <_tx_thread_sleep>
40008224:	eafffff9 	b	40008210 <UVCAppThread_Entry+0x528>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40008228:	e3a00004 	mov	r0, #4
4000822c:	e59f1578 	ldr	r1, [pc, #1400]	; 400087ac <UVCAppThread_Entry+0xac4>
40008230:	eb002c21 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008234:	e59f156c 	ldr	r1, [pc, #1388]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008238:	e3a00004 	mov	r0, #4
4000823c:	eb002c1e 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008240:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008244:	eb0002a0 	bl	40008ccc <_tx_thread_sleep>
40008248:	eafffff9 	b	40008234 <UVCAppThread_Entry+0x54c>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
4000824c:	e3a00004 	mov	r0, #4
40008250:	e59f1558 	ldr	r1, [pc, #1368]	; 400087b0 <UVCAppThread_Entry+0xac8>
40008254:	eb002c18 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008258:	e59f1548 	ldr	r1, [pc, #1352]	; 400087a8 <UVCAppThread_Entry+0xac0>
4000825c:	e3a00004 	mov	r0, #4
40008260:	eb002c15 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008264:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008268:	eb000297 	bl	40008ccc <_tx_thread_sleep>
4000826c:	eafffff9 	b	40008258 <UVCAppThread_Entry+0x570>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40008270:	e3a00004 	mov	r0, #4
40008274:	e59f1538 	ldr	r1, [pc, #1336]	; 400087b4 <UVCAppThread_Entry+0xacc>
40008278:	eb002c0f 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000827c:	e59f1524 	ldr	r1, [pc, #1316]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008280:	e3a00004 	mov	r0, #4
40008284:	eb002c0c 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008288:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000828c:	eb00028e 	bl	40008ccc <_tx_thread_sleep>
40008290:	eafffff9 	b	4000827c <UVCAppThread_Entry+0x594>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40008294:	e59f04a8 	ldr	r0, [pc, #1192]	; 40008744 <UVCAppThread_Entry+0xa5c>
40008298:	e3a01002 	mov	r1, #2
4000829c:	e3a02003 	mov	r2, #3
400082a0:	e28d30b4 	add	r3, sp, #180	; 0xb4
400082a4:	e58d4000 	str	r4, [sp]
400082a8:	eb00074f 	bl	40009fec <_txe_event_flags_get>
400082ac:	e3500000 	cmp	r0, #0
400082b0:	1a000025 	bne	4000834c <UVCAppThread_Entry+0x664>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
400082b4:	e5951044 	ldr	r1, [r5, #68]	; 0x44
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
400082b8:	e5854030 	str	r4, [r5, #48]	; 0x30
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
400082bc:	e3510000 	cmp	r1, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
400082c0:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
400082c4:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
400082c8:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
400082cc:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                pbc=0;
400082d0:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
400082d4:	0a00000a 	beq	40008304 <UVCAppThread_Entry+0x61c>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
400082d8:	e5864044 	str	r4, [r6, #68]	; 0x44
400082dc:	eaffffc2 	b	400081ec <UVCAppThread_Entry+0x504>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400082e0:	e3a00004 	mov	r0, #4
400082e4:	e59f14cc 	ldr	r1, [pc, #1228]	; 400087b8 <UVCAppThread_Entry+0xad0>
400082e8:	eb002bf3 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082ec:	e59f14b4 	ldr	r1, [pc, #1204]	; 400087a8 <UVCAppThread_Entry+0xac0>
400082f0:	e3a00004 	mov	r0, #4
400082f4:	eb002bf0 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082f8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082fc:	eb000272 	bl	40008ccc <_tx_thread_sleep>
40008300:	eafffff9 	b	400082ec <UVCAppThread_Entry+0x604>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008304:	e59f0490 	ldr	r0, [pc, #1168]	; 4000879c <UVCAppThread_Entry+0xab4>
40008308:	eb0040f2 	bl	400186d8 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
4000830c:	e3500000 	cmp	r0, #0
40008310:	1a000002 	bne	40008320 <UVCAppThread_Entry+0x638>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008314:	e3a00083 	mov	r0, #131	; 0x83
40008318:	eb005283 	bl	4001cd2c <CyU3PUsbFlushEp>
4000831c:	eaffffed 	b	400082d8 <UVCAppThread_Entry+0x5f0>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008320:	e59f1480 	ldr	r1, [pc, #1152]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008324:	e3a00004 	mov	r0, #4
40008328:	eb002be3 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000832c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008330:	eb000265 	bl	40008ccc <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008334:	e59f146c 	ldr	r1, [pc, #1132]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008338:	e3a00004 	mov	r0, #4
4000833c:	eb002bde 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008340:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008344:	eb000260 	bl	40008ccc <_tx_thread_sleep>
40008348:	eafffff4 	b	40008320 <UVCAppThread_Entry+0x638>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
4000834c:	e3e0c000 	mvn	ip, #0
40008350:	e3a01001 	mov	r1, #1
40008354:	e3a02002 	mov	r2, #2
40008358:	e28d30b4 	add	r3, sp, #180	; 0xb4
4000835c:	e59f03e0 	ldr	r0, [pc, #992]	; 40008744 <UVCAppThread_Entry+0xa5c>
40008360:	e58dc000 	str	ip, [sp]
40008364:	eb000720 	bl	40009fec <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008368:	e1a02004 	mov	r2, r4
4000836c:	e59f0428 	ldr	r0, [pc, #1064]	; 4000879c <UVCAppThread_Entry+0xab4>
40008370:	e1a01004 	mov	r1, r4
40008374:	eb0041c4 	bl	40018a8c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008378:	e2502000 	subs	r2, r0, #0
4000837c:	1a000065 	bne	40008518 <UVCAppThread_Entry+0x830>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008380:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40008384:	e3530000 	cmp	r3, #0
40008388:	1a00005a 	bne	400084f8 <UVCAppThread_Entry+0x810>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
4000838c:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
40008390:	e3530003 	cmp	r3, #3
40008394:	0a000047 	beq	400084b8 <UVCAppThread_Entry+0x7d0>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008398:	e3530002 	cmp	r3, #2
4000839c:	0a000029 	beq	40008448 <UVCAppThread_Entry+0x760>
                    		break;
                    }
#endif
                    CyFxUvcAppGpifInit ();

                    gpif_initialized = CyTrue;
400083a0:	e3a0e001 	mov	lr, #1
400083a4:	e586e03c 	str	lr, [r6, #60]	; 0x3c
                    CyU3PThreadSleep(200);
400083a8:	e3a000c8 	mov	r0, #200	; 0xc8
400083ac:	eb000246 	bl	40008ccc <_tx_thread_sleep>
400083b0:	eaffff8d 	b	400081ec <UVCAppThread_Entry+0x504>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
400083b4:	e3a00004 	mov	r0, #4
400083b8:	e59f13fc 	ldr	r1, [pc, #1020]	; 400087bc <UVCAppThread_Entry+0xad4>
400083bc:	eb002bbe 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083c0:	e59f13e0 	ldr	r1, [pc, #992]	; 400087a8 <UVCAppThread_Entry+0xac0>
400083c4:	e3a00004 	mov	r0, #4
400083c8:	eb002bbb 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083cc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083d0:	eb00023d 	bl	40008ccc <_tx_thread_sleep>
400083d4:	eafffff9 	b	400083c0 <UVCAppThread_Entry+0x6d8>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400083d8:	e3a00004 	mov	r0, #4
400083dc:	e59f13dc 	ldr	r1, [pc, #988]	; 400087c0 <UVCAppThread_Entry+0xad8>
400083e0:	eb002bb5 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083e4:	e59f13bc 	ldr	r1, [pc, #956]	; 400087a8 <UVCAppThread_Entry+0xac0>
400083e8:	e3a00004 	mov	r0, #4
400083ec:	eb002bb2 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083f0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083f4:	eb000234 	bl	40008ccc <_tx_thread_sleep>
400083f8:	eafffff9 	b	400083e4 <UVCAppThread_Entry+0x6fc>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400083fc:	e2800004 	add	r0, r0, #4
40008400:	e59f13bc 	ldr	r1, [pc, #956]	; 400087c4 <UVCAppThread_Entry+0xadc>
40008404:	eb002bac 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008408:	e59f1398 	ldr	r1, [pc, #920]	; 400087a8 <UVCAppThread_Entry+0xac0>
4000840c:	e3a00004 	mov	r0, #4
40008410:	eb002ba9 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008414:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008418:	eb00022b 	bl	40008ccc <_tx_thread_sleep>
4000841c:	eafffff9 	b	40008408 <UVCAppThread_Entry+0x720>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008420:	e3a00004 	mov	r0, #4
40008424:	e59f139c 	ldr	r1, [pc, #924]	; 400087c8 <UVCAppThread_Entry+0xae0>
40008428:	e1a02005 	mov	r2, r5
4000842c:	eb002ba2 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008430:	e59f1370 	ldr	r1, [pc, #880]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008434:	e3a00004 	mov	r0, #4
40008438:	eb002b9f 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000843c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008440:	eb000221 	bl	40008ccc <_tx_thread_sleep>
40008444:	eafffff9 	b	40008430 <UVCAppThread_Entry+0x748>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
40008448:	e59f137c 	ldr	r1, [pc, #892]	; 400087cc <UVCAppThread_Entry+0xae4>
4000844c:	e3a00001 	mov	r0, #1
40008450:	eb002b99 	bl	400132bc <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
40008454:	e59f0374 	ldr	r0, [pc, #884]	; 400087d0 <UVCAppThread_Entry+0xae8>
40008458:	eb004ccb 	bl	4001b78c <CyU3PGpifLoad>
4000845c:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008460:	e3520000 	cmp	r2, #0
40008464:	1a00001a 	bne	400084d4 <UVCAppThread_Entry+0x7ec>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008468:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
4000846c:	e3530003 	cmp	r3, #3
40008470:	0a000001 	beq	4000847c <UVCAppThread_Entry+0x794>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
40008474:	e3530002 	cmp	r3, #2
40008478:	1affffc8 	bne	400083a0 <UVCAppThread_Entry+0x6b8>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
4000847c:	e1a00002 	mov	r0, r2
40008480:	e1a01002 	mov	r1, r2
40008484:	eb004d66 	bl	4001ba24 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008488:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
4000848c:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008490:	0affffc2 	beq	400083a0 <UVCAppThread_Entry+0x6b8>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
40008494:	e3a00004 	mov	r0, #4
40008498:	e59f1334 	ldr	r1, [pc, #820]	; 400087d4 <UVCAppThread_Entry+0xaec>
4000849c:	eb002b86 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084a0:	e59f1300 	ldr	r1, [pc, #768]	; 400087a8 <UVCAppThread_Entry+0xac0>
400084a4:	e3a00004 	mov	r0, #4
400084a8:	eb002b83 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084ac:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084b0:	eb000205 	bl	40008ccc <_tx_thread_sleep>
400084b4:	eafffff9 	b	400084a0 <UVCAppThread_Entry+0x7b8>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400084b8:	e59f1318 	ldr	r1, [pc, #792]	; 400087d8 <UVCAppThread_Entry+0xaf0>
400084bc:	e3a00001 	mov	r0, #1
400084c0:	eb002b7d 	bl	400132bc <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400084c4:	e59f0310 	ldr	r0, [pc, #784]	; 400087dc <UVCAppThread_Entry+0xaf4>
400084c8:	eb004caf 	bl	4001b78c <CyU3PGpifLoad>
400084cc:	e1a02000 	mov	r2, r0
400084d0:	eaffffe2 	b	40008460 <UVCAppThread_Entry+0x778>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
400084d4:	e3a00004 	mov	r0, #4
400084d8:	e59f1300 	ldr	r1, [pc, #768]	; 400087e0 <UVCAppThread_Entry+0xaf8>
400084dc:	eb002b76 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084e0:	e59f12c0 	ldr	r1, [pc, #704]	; 400087a8 <UVCAppThread_Entry+0xac0>
400084e4:	e3a00004 	mov	r0, #4
400084e8:	eb002b73 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084ec:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084f0:	eb0001f5 	bl	40008ccc <_tx_thread_sleep>
400084f4:	eafffff9 	b	400084e0 <UVCAppThread_Entry+0x7f8>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400084f8:	e59f0294 	ldr	r0, [pc, #660]	; 40008794 <UVCAppThread_Entry+0xaac>
400084fc:	e3a0a002 	mov	sl, #2
40008500:	e1a01004 	mov	r1, r4
40008504:	e1a02000 	mov	r2, r0
40008508:	e1a03004 	mov	r3, r4
4000850c:	e58da000 	str	sl, [sp]
40008510:	eb004d98 	bl	4001bb78 <CyU3PGpifSMSwitch>
40008514:	eaffff34 	b	400081ec <UVCAppThread_Entry+0x504>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008518:	e3a00004 	mov	r0, #4
4000851c:	e59f12c0 	ldr	r1, [pc, #704]	; 400087e4 <UVCAppThread_Entry+0xafc>
40008520:	eb002b65 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008524:	e59f127c 	ldr	r1, [pc, #636]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008528:	e3a00004 	mov	r0, #4
4000852c:	eb002b62 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008530:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008534:	eb0001e4 	bl	40008ccc <_tx_thread_sleep>
40008538:	eafffff9 	b	40008524 <UVCAppThread_Entry+0x83c>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
4000853c:	e3a00004 	mov	r0, #4
40008540:	e59f1270 	ldr	r1, [pc, #624]	; 400087b8 <UVCAppThread_Entry+0xad0>
40008544:	e1a02003 	mov	r2, r3
40008548:	eb002b5b 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000854c:	e59f1254 	ldr	r1, [pc, #596]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008550:	e3a00004 	mov	r0, #4
40008554:	eb002b58 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008558:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000855c:	eb0001da 	bl	40008ccc <_tx_thread_sleep>
40008560:	eafffff9 	b	4000854c <UVCAppThread_Entry+0x864>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008564:	e3a00004 	mov	r0, #4
40008568:	e59f1278 	ldr	r1, [pc, #632]	; 400087e8 <UVCAppThread_Entry+0xb00>
4000856c:	eb002b52 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008570:	e59f1230 	ldr	r1, [pc, #560]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008574:	e3a00004 	mov	r0, #4
40008578:	eb002b4f 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000857c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008580:	eb0001d1 	bl	40008ccc <_tx_thread_sleep>
40008584:	eafffff9 	b	40008570 <UVCAppThread_Entry+0x888>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008588:	e3a00004 	mov	r0, #4
4000858c:	e59f1258 	ldr	r1, [pc, #600]	; 400087ec <UVCAppThread_Entry+0xb04>
40008590:	eb002b49 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008594:	e59f120c 	ldr	r1, [pc, #524]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008598:	e3a00004 	mov	r0, #4
4000859c:	eb002b46 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085a0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085a4:	eb0001c8 	bl	40008ccc <_tx_thread_sleep>
400085a8:	eafffff9 	b	40008594 <UVCAppThread_Entry+0x8ac>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
400085ac:	e3a00004 	mov	r0, #4
400085b0:	e59f1238 	ldr	r1, [pc, #568]	; 400087f0 <UVCAppThread_Entry+0xb08>
400085b4:	eb002b40 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085b8:	e59f11e8 	ldr	r1, [pc, #488]	; 400087a8 <UVCAppThread_Entry+0xac0>
400085bc:	e3a00004 	mov	r0, #4
400085c0:	eb002b3d 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085c4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085c8:	eb0001bf 	bl	40008ccc <_tx_thread_sleep>
400085cc:	eafffff9 	b	400085b8 <UVCAppThread_Entry+0x8d0>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
400085d0:	e3a00004 	mov	r0, #4
400085d4:	e59f1218 	ldr	r1, [pc, #536]	; 400087f4 <UVCAppThread_Entry+0xb0c>
400085d8:	eb002b37 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085dc:	e59f11c4 	ldr	r1, [pc, #452]	; 400087a8 <UVCAppThread_Entry+0xac0>
400085e0:	e3a00004 	mov	r0, #4
400085e4:	eb002b34 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085e8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085ec:	eb0001b6 	bl	40008ccc <_tx_thread_sleep>
400085f0:	eafffff9 	b	400085dc <UVCAppThread_Entry+0x8f4>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
400085f4:	e3a00004 	mov	r0, #4
400085f8:	e59f11f8 	ldr	r1, [pc, #504]	; 400087f8 <UVCAppThread_Entry+0xb10>
400085fc:	eb002b2e 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008600:	e59f11a0 	ldr	r1, [pc, #416]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008604:	e3a00004 	mov	r0, #4
40008608:	eb002b2b 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000860c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008610:	eb0001ad 	bl	40008ccc <_tx_thread_sleep>
40008614:	eafffff9 	b	40008600 <UVCAppThread_Entry+0x918>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40008618:	e3a00004 	mov	r0, #4
4000861c:	e59f11d8 	ldr	r1, [pc, #472]	; 400087fc <UVCAppThread_Entry+0xb14>
40008620:	eb002b25 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008624:	e59f117c 	ldr	r1, [pc, #380]	; 400087a8 <UVCAppThread_Entry+0xac0>
40008628:	e3a00004 	mov	r0, #4
4000862c:	eb002b22 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008630:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008634:	eb0001a4 	bl	40008ccc <_tx_thread_sleep>
40008638:	eafffff9 	b	40008624 <UVCAppThread_Entry+0x93c>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
4000863c:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                consCount = 0;
40008640:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                hitFV     = CyFalse;
40008644:	e5854030 	str	r4, [r5, #48]	; 0x30
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008648:	e5d82481 	ldrb	r2, [r8, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
4000864c:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008650:	e222e001 	eor	lr, r2, #1
40008654:	e5c8e481 	strb	lr, [r8, #1153]	; 0x481
                if(stiflag){
40008658:	e59530a0 	ldr	r3, [r5, #160]	; 0xa0
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
4000865c:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40008660:	e3530000 	cmp	r3, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = CyFalse;
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40008664:	05d73481 	ldrbeq	r3, [r7, #1153]	; 0x481
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
40008668:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = CyFalse;
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
4000866c:	020330df 	andeq	r3, r3, #223	; 0xdf
40008670:	05c73481 	strbeq	r3, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40008674:	0a00000a 	beq	400086a4 <UVCAppThread_Entry+0x9bc>
                	if (CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008678:	e59f00c4 	ldr	r0, [pc, #196]	; 40008744 <UVCAppThread_Entry+0xa5c>
4000867c:	e3a01080 	mov	r1, #128	; 0x80
40008680:	e3a02003 	mov	r2, #3
40008684:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008688:	e58d4000 	str	r4, [sp]
4000868c:	eb000656 	bl	40009fec <_txe_event_flags_get>
40008690:	e3500000 	cmp	r0, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
40008694:	05d70481 	ldrbeq	r0, [r7, #1153]	; 0x481
40008698:	03800020 	orreq	r0, r0, #32
4000869c:	05c70481 	strbeq	r0, [r7, #1153]	; 0x481
                		stiflag = CyFalse;
400086a0:	058540a0 	streq	r4, [r5, #160]	; 0xa0
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400086a4:	e59f00f0 	ldr	r0, [pc, #240]	; 4000879c <UVCAppThread_Entry+0xab4>
400086a8:	eb00400a 	bl	400186d8 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
400086ac:	e2502000 	subs	r2, r0, #0
400086b0:	1a00000c 	bne	400086e8 <UVCAppThread_Entry+0xa00>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
400086b4:	e1a01002 	mov	r1, r2
400086b8:	e59f00dc 	ldr	r0, [pc, #220]	; 4000879c <UVCAppThread_Entry+0xab4>
400086bc:	eb0040f2 	bl	40018a8c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
400086c0:	e2502000 	subs	r2, r0, #0
400086c4:	1a000010 	bne	4000870c <UVCAppThread_Entry+0xa24>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400086c8:	e59f00c4 	ldr	r0, [pc, #196]	; 40008794 <UVCAppThread_Entry+0xaac>
400086cc:	e1a01002 	mov	r1, r2
400086d0:	e3a0a002 	mov	sl, #2
400086d4:	e1a02000 	mov	r2, r0
400086d8:	e1a03001 	mov	r3, r1
400086dc:	e58da000 	str	sl, [sp]
400086e0:	eb004d24 	bl	4001bb78 <CyU3PGpifSMSwitch>
400086e4:	eafffec0 	b	400081ec <UVCAppThread_Entry+0x504>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
400086e8:	e3a00004 	mov	r0, #4
400086ec:	e59f110c 	ldr	r1, [pc, #268]	; 40008800 <UVCAppThread_Entry+0xb18>
400086f0:	eb002af1 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400086f4:	e59f10ac 	ldr	r1, [pc, #172]	; 400087a8 <UVCAppThread_Entry+0xac0>
400086f8:	e3a00004 	mov	r0, #4
400086fc:	eb002aee 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008700:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008704:	eb000170 	bl	40008ccc <_tx_thread_sleep>
40008708:	eafffff9 	b	400086f4 <UVCAppThread_Entry+0xa0c>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
4000870c:	e3a00004 	mov	r0, #4
40008710:	e59f10ec 	ldr	r1, [pc, #236]	; 40008804 <UVCAppThread_Entry+0xb1c>
40008714:	eb002ae8 	bl	400132bc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008718:	e59f1088 	ldr	r1, [pc, #136]	; 400087a8 <UVCAppThread_Entry+0xac0>
4000871c:	e3a00004 	mov	r0, #4
40008720:	eb002ae5 	bl	400132bc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008724:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008728:	eb000167 	bl	40008ccc <_tx_thread_sleep>
4000872c:	eafffff9 	b	40008718 <UVCAppThread_Entry+0xa30>
40008730:	40011afc 	.word	0x40011afc
40008734:	0001c200 	.word	0x0001c200
40008738:	40011b1c 	.word	0x40011b1c
4000873c:	000186a0 	.word	0x000186a0
40008740:	40011b38 	.word	0x40011b38
40008744:	40030fb0 	.word	0x40030fb0
40008748:	400050fc 	.word	0x400050fc
4000874c:	00001388 	.word	0x00001388
40008750:	40004e08 	.word	0x40004e08
40008754:	40004c98 	.word	0x40004c98
40008758:	40010fbc 	.word	0x40010fbc
4000875c:	40010fd0 	.word	0x40010fd0
40008760:	40010fe4 	.word	0x40010fe4
40008764:	400110dc 	.word	0x400110dc
40008768:	40010ffc 	.word	0x40010ffc
4000876c:	40010ff0 	.word	0x40010ff0
40008770:	400110f4 	.word	0x400110f4
40008774:	40011224 	.word	0x40011224
40008778:	40011228 	.word	0x40011228
4000877c:	40011260 	.word	0x40011260
40008780:	00003f01 	.word	0x00003f01
40008784:	00000302 	.word	0x00000302
40008788:	40033050 	.word	0x40033050
4000878c:	400330f0 	.word	0x400330f0
40008790:	00000303 	.word	0x00000303
40008794:	00000101 	.word	0x00000101
40008798:	40004b54 	.word	0x40004b54
4000879c:	40032f04 	.word	0x40032f04
400087a0:	40030000 	.word	0x40030000
400087a4:	40011b54 	.word	0x40011b54
400087a8:	40011604 	.word	0x40011604
400087ac:	40011ba4 	.word	0x40011ba4
400087b0:	40011b80 	.word	0x40011b80
400087b4:	40011bcc 	.word	0x40011bcc
400087b8:	40011d24 	.word	0x40011d24
400087bc:	40011e00 	.word	0x40011e00
400087c0:	40011dd0 	.word	0x40011dd0
400087c4:	40011d98 	.word	0x40011d98
400087c8:	40011d58 	.word	0x40011d58
400087cc:	40011ecc 	.word	0x40011ecc
400087d0:	40011410 	.word	0x40011410
400087d4:	40011f14 	.word	0x40011f14
400087d8:	40011ebc 	.word	0x40011ebc
400087dc:	400113f4 	.word	0x400113f4
400087e0:	40011edc 	.word	0x40011edc
400087e4:	40011e88 	.word	0x40011e88
400087e8:	40011cf4 	.word	0x40011cf4
400087ec:	40011cc4 	.word	0x40011cc4
400087f0:	40011c8c 	.word	0x40011c8c
400087f4:	40011c24 	.word	0x40011c24
400087f8:	40011bf8 	.word	0x40011bf8
400087fc:	40011c58 	.word	0x40011c58
40008800:	40011e28 	.word	0x40011e28
40008804:	40011e54 	.word	0x40011e54

40008808 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008808:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000880c:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008810:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008814:	ebffeb96 	bl	40003674 <CyU3PMemAlloc>
40008818:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000881c:	e3a00a01 	mov	r0, #4096	; 0x1000
40008820:	ebffeb93 	bl	40003674 <CyU3PMemAlloc>
40008824:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008828:	e3a00a01 	mov	r0, #4096	; 0x1000
4000882c:	ebffeb90 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008830:	e35a0000 	cmp	sl, #0
40008834:	135b0000 	cmpne	fp, #0
40008838:	13a09000 	movne	r9, #0
4000883c:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008840:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008844:	1a000000 	bne	4000884c <CyFxApplicationDefine+0x44>
40008848:	eafffffe 	b	40008848 <CyFxApplicationDefine+0x40>
4000884c:	e3500000 	cmp	r0, #0
40008850:	0afffffc 	beq	40008848 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008854:	e28d4028 	add	r4, sp, #40	; 0x28
40008858:	e1a00004 	mov	r0, r4
4000885c:	e3a01040 	mov	r1, #64	; 0x40
40008860:	e59f2118 	ldr	r2, [pc, #280]	; 40008980 <CyFxApplicationDefine+0x178>
40008864:	ebffead5 	bl	400033c0 <cmdbufCreate>
40008868:	e1a05004 	mov	r5, r4
4000886c:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
40008870:	e59f710c 	ldr	r7, [pc, #268]	; 40008984 <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008874:	e59f810c 	ldr	r8, [pc, #268]	; 40008988 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008878:	e1a0c007 	mov	ip, r7
4000887c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008880:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008884:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008888:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000888c:	e59f20f8 	ldr	r2, [pc, #248]	; 4000898c <CyFxApplicationDefine+0x184>
40008890:	e1a00004 	mov	r0, r4
40008894:	e3a01020 	mov	r1, #32
40008898:	ebffeac8 	bl	400033c0 <cmdbufCreate>
4000889c:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
400088a0:	e1a0c008 	mov	ip, r8
400088a4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
400088a8:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400088ac:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400088b0:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
400088b4:	e1a00007 	mov	r0, r7
400088b8:	ebffead8 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
400088bc:	e1a00008 	mov	r0, r8
400088c0:	ebffead6 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400088c4:	e3a050a8 	mov	r5, #168	; 0xa8
400088c8:	e3a0ca01 	mov	ip, #4096	; 0x1000
400088cc:	e59f00bc 	ldr	r0, [pc, #188]	; 40008990 <CyFxApplicationDefine+0x188>
400088d0:	e59f10bc 	ldr	r1, [pc, #188]	; 40008994 <CyFxApplicationDefine+0x18c>
400088d4:	e59f20bc 	ldr	r2, [pc, #188]	; 40008998 <CyFxApplicationDefine+0x190>
400088d8:	e1a03009 	mov	r3, r9
400088dc:	e88d1400 	stm	sp, {sl, ip}
400088e0:	e58d6008 	str	r6, [sp, #8]
400088e4:	e58d600c 	str	r6, [sp, #12]
400088e8:	e58d9010 	str	r9, [sp, #16]
400088ec:	e58d4014 	str	r4, [sp, #20]
400088f0:	e58d5018 	str	r5, [sp, #24]
400088f4:	eb0007c7 	bl	4000a818 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400088f8:	e250c000 	subs	ip, r0, #0
400088fc:	1affffd1 	bne	40008848 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
40008900:	e1a0300c 	mov	r3, ip
40008904:	e3a07b02 	mov	r7, #2048	; 0x800
40008908:	e59f008c 	ldr	r0, [pc, #140]	; 4000899c <CyFxApplicationDefine+0x194>
4000890c:	e59f108c 	ldr	r1, [pc, #140]	; 400089a0 <CyFxApplicationDefine+0x198>
40008910:	e59f208c 	ldr	r2, [pc, #140]	; 400089a4 <CyFxApplicationDefine+0x19c>
40008914:	e58dc010 	str	ip, [sp, #16]
40008918:	e58db000 	str	fp, [sp]
4000891c:	e58d7004 	str	r7, [sp, #4]
40008920:	e58d6008 	str	r6, [sp, #8]
40008924:	e58d600c 	str	r6, [sp, #12]
40008928:	e58d4014 	str	r4, [sp, #20]
4000892c:	e58d5018 	str	r5, [sp, #24]
40008930:	eb0007b8 	bl	4000a818 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008934:	e250c000 	subs	ip, r0, #0
40008938:	1affffc2 	bne	40008848 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
4000893c:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40008940:	e59f0060 	ldr	r0, [pc, #96]	; 400089a8 <CyFxApplicationDefine+0x1a0>
40008944:	e59f1060 	ldr	r1, [pc, #96]	; 400089ac <CyFxApplicationDefine+0x1a4>
40008948:	e59f2060 	ldr	r2, [pc, #96]	; 400089b0 <CyFxApplicationDefine+0x1a8>
4000894c:	e1a0300c 	mov	r3, ip
40008950:	e58de000 	str	lr, [sp]
40008954:	e58d7004 	str	r7, [sp, #4]
40008958:	e58d6008 	str	r6, [sp, #8]
4000895c:	e58d600c 	str	r6, [sp, #12]
40008960:	e58dc010 	str	ip, [sp, #16]
40008964:	e58d4014 	str	r4, [sp, #20]
40008968:	e58d5018 	str	r5, [sp, #24]
4000896c:	eb0007a9 	bl	4000a818 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008970:	e3500000 	cmp	r0, #0
40008974:	1affffb3 	bne	40008848 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008978:	e28dd04c 	add	sp, sp, #76	; 0x4c
4000897c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008980:	400330f4 	.word	0x400330f4
40008984:	40032ee4 	.word	0x40032ee4
40008988:	40033130 	.word	0x40033130
4000898c:	40033018 	.word	0x40033018
40008990:	40031054 	.word	0x40031054
40008994:	40011f4c 	.word	0x40011f4c
40008998:	40007ce8 	.word	0x40007ce8
4000899c:	400310fc 	.word	0x400310fc
400089a0:	40011f60 	.word	0x40011f60
400089a4:	40006e14 	.word	0x40006e14
400089a8:	400311a4 	.word	0x400311a4
400089ac:	40011f78 	.word	0x40011f78
400089b0:	40004904 	.word	0x40004904

400089b4 <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
400089b4:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
400089b8:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
400089bc:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
400089c0:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
400089c4:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
400089c8:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
400089cc:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
400089d0:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
400089d4:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
400089d8:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
400089dc:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
400089e0:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
400089e4:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
400089e8:	eb00276b 	bl	4001279c <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400089ec:	e2504000 	subs	r4, r0, #0
400089f0:	0a000000 	beq	400089f8 <main+0x44>
400089f4:	eafffffe 	b	400089f4 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
400089f8:	e1a01004 	mov	r1, r4
400089fc:	e1a02004 	mov	r2, r4
40008a00:	e1a00005 	mov	r0, r5
40008a04:	eb00273e 	bl	40012704 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008a08:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008a0c:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
40008a10:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
40008a14:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
40008a18:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
40008a1c:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
40008a20:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
40008a24:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
40008a28:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
40008a2c:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
40008a30:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008a34:	eb002902 	bl	40012e44 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008a38:	e2504000 	subs	r4, r0, #0
40008a3c:	1affffec 	bne	400089f4 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
40008a40:	eb000002 	bl	40008a50 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
40008a44:	e1a00004 	mov	r0, r4
40008a48:	e28dd03c 	add	sp, sp, #60	; 0x3c
40008a4c:	e8bd8030 	pop	{r4, r5, pc}

40008a50 <_tx_initialize_kernel_enter>:
40008a50:	e92d4010 	push	{r4, lr}
40008a54:	e59f004c 	ldr	r0, [pc, #76]	; 40008aa8 <_tx_initialize_kernel_enter+0x58>
40008a58:	e5900000 	ldr	r0, [r0]
40008a5c:	e59f1048 	ldr	r1, [pc, #72]	; 40008aac <_tx_initialize_kernel_enter+0x5c>
40008a60:	e1500001 	cmp	r0, r1
40008a64:	0a000004 	beq	40008a7c <_tx_initialize_kernel_enter+0x2c>
40008a68:	e1e00221 	mvn	r0, r1, lsr #4
40008a6c:	e59f1034 	ldr	r1, [pc, #52]	; 40008aa8 <_tx_initialize_kernel_enter+0x58>
40008a70:	e5810000 	str	r0, [r1]
40008a74:	eb0009ee 	bl	4000b234 <_tx_initialize_low_level>
40008a78:	eb00105f 	bl	4000cbfc <_tx_initialize_high_level>
40008a7c:	e59f002c 	ldr	r0, [pc, #44]	; 40008ab0 <_tx_initialize_kernel_enter+0x60>
40008a80:	e59f1020 	ldr	r1, [pc, #32]	; 40008aa8 <_tx_initialize_kernel_enter+0x58>
40008a84:	e5810000 	str	r0, [r1]
40008a88:	e59f0024 	ldr	r0, [pc, #36]	; 40008ab4 <_tx_initialize_kernel_enter+0x64>
40008a8c:	e5900000 	ldr	r0, [r0]
40008a90:	ebffeae3 	bl	40003624 <tx_application_define>
40008a94:	e3a00000 	mov	r0, #0
40008a98:	e59f1008 	ldr	r1, [pc, #8]	; 40008aa8 <_tx_initialize_kernel_enter+0x58>
40008a9c:	e5810000 	str	r0, [r1]
40008aa0:	eb00091f 	bl	4000af24 <_tx_thread_schedule>
40008aa4:	e8bd8010 	pop	{r4, pc}
40008aa8:	40030e4c 	.word	0x40030e4c
40008aac:	f0f0f0f1 	.word	0xf0f0f0f1
40008ab0:	f0f0f0f0 	.word	0xf0f0f0f0
40008ab4:	40030de4 	.word	0x40030de4

40008ab8 <_tx_thread_identify>:
40008ab8:	e10f1000 	mrs	r1, CPSR
40008abc:	e3812080 	orr	r2, r1, #128	; 0x80
40008ac0:	e121f002 	msr	CPSR_c, r2
40008ac4:	e59f30e0 	ldr	r3, [pc, #224]	; 40008bac <_tx_thread_identify+0xf4>
40008ac8:	e5930000 	ldr	r0, [r3]
40008acc:	e3500000 	cmp	r0, #0
40008ad0:	0a000031 	beq	40008b9c <_tx_thread_identify+0xe4>
40008ad4:	e59f30d4 	ldr	r3, [pc, #212]	; 40008bb0 <_tx_thread_identify+0xf8>
40008ad8:	e5933000 	ldr	r3, [r3]
40008adc:	e2833001 	add	r3, r3, #1
40008ae0:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008bb0 <_tx_thread_identify+0xf8>
40008ae4:	e58c3000 	str	r3, [ip]
40008ae8:	e580300c 	str	r3, [r0, #12]
40008aec:	e59f30c0 	ldr	r3, [pc, #192]	; 40008bb4 <_tx_thread_identify+0xfc>
40008af0:	e5933000 	ldr	r3, [r3]
40008af4:	e3530000 	cmp	r3, #0
40008af8:	1a000006 	bne	40008b18 <_tx_thread_identify+0x60>
40008afc:	e59f30b4 	ldr	r3, [pc, #180]	; 40008bb8 <_tx_thread_identify+0x100>
40008b00:	e5933000 	ldr	r3, [r3]
40008b04:	e5803000 	str	r3, [r0]
40008b08:	e5903000 	ldr	r3, [r0]
40008b0c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008b10:	e5803004 	str	r3, [r0, #4]
40008b14:	ea00000d 	b	40008b50 <_tx_thread_identify+0x98>
40008b18:	e59f3094 	ldr	r3, [pc, #148]	; 40008bb4 <_tx_thread_identify+0xfc>
40008b1c:	e5933000 	ldr	r3, [r3]
40008b20:	e59fc094 	ldr	ip, [pc, #148]	; 40008bbc <_tx_thread_identify+0x104>
40008b24:	e153000c 	cmp	r3, ip
40008b28:	2a000004 	bcs	40008b40 <_tx_thread_identify+0x88>
40008b2c:	e3e03000 	mvn	r3, #0
40008b30:	e5803000 	str	r3, [r0]
40008b34:	e3a03000 	mov	r3, #0
40008b38:	e5803004 	str	r3, [r0, #4]
40008b3c:	ea000003 	b	40008b50 <_tx_thread_identify+0x98>
40008b40:	e59f3074 	ldr	r3, [pc, #116]	; 40008bbc <_tx_thread_identify+0x104>
40008b44:	e5803000 	str	r3, [r0]
40008b48:	e3a03000 	mov	r3, #0
40008b4c:	e5803004 	str	r3, [r0, #4]
40008b50:	e3a03067 	mov	r3, #103	; 0x67
40008b54:	e5803008 	str	r3, [r0, #8]
40008b58:	e3a03000 	mov	r3, #0
40008b5c:	e5803010 	str	r3, [r0, #16]
40008b60:	e5803014 	str	r3, [r0, #20]
40008b64:	e5803018 	str	r3, [r0, #24]
40008b68:	e580301c 	str	r3, [r0, #28]
40008b6c:	e2800020 	add	r0, r0, #32
40008b70:	e59f3048 	ldr	r3, [pc, #72]	; 40008bc0 <_tx_thread_identify+0x108>
40008b74:	e5933000 	ldr	r3, [r3]
40008b78:	e1500003 	cmp	r0, r3
40008b7c:	3a000001 	bcc	40008b88 <_tx_thread_identify+0xd0>
40008b80:	e59f303c 	ldr	r3, [pc, #60]	; 40008bc4 <_tx_thread_identify+0x10c>
40008b84:	e5930000 	ldr	r0, [r3]
40008b88:	e59f301c 	ldr	r3, [pc, #28]	; 40008bac <_tx_thread_identify+0xf4>
40008b8c:	e5830000 	str	r0, [r3]
40008b90:	e59f3030 	ldr	r3, [pc, #48]	; 40008bc8 <_tx_thread_identify+0x110>
40008b94:	e5933000 	ldr	r3, [r3]
40008b98:	e5830020 	str	r0, [r3, #32]
40008b9c:	e121f001 	msr	CPSR_c, r1
40008ba0:	e59f0010 	ldr	r0, [pc, #16]	; 40008bb8 <_tx_thread_identify+0x100>
40008ba4:	e5900000 	ldr	r0, [r0]
40008ba8:	e12fff1e 	bx	lr
40008bac:	40030ec0 	.word	0x40030ec0
40008bb0:	40030ec4 	.word	0x40030ec4
40008bb4:	40030e4c 	.word	0x40030e4c
40008bb8:	40030e54 	.word	0x40030e54
40008bbc:	f0f0f0f0 	.word	0xf0f0f0f0
40008bc0:	40030ebc 	.word	0x40030ebc
40008bc4:	40030eb8 	.word	0x40030eb8
40008bc8:	40030eac 	.word	0x40030eac

40008bcc <_tx_thread_initialize>:
40008bcc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008bd0:	e3a00000 	mov	r0, #0
40008bd4:	e59f10c0 	ldr	r1, [pc, #192]	; 40008c9c <_tx_thread_initialize+0xd0>
40008bd8:	e5810000 	str	r0, [r1]
40008bdc:	e59f10bc 	ldr	r1, [pc, #188]	; 40008ca0 <_tx_thread_initialize+0xd4>
40008be0:	e5810000 	str	r0, [r1]
40008be4:	e59f00b8 	ldr	r0, [pc, #184]	; 40008ca4 <_tx_thread_initialize+0xd8>
40008be8:	e3a01000 	mov	r1, #0
40008bec:	e5801000 	str	r1, [r0]
40008bf0:	e59f00b0 	ldr	r0, [pc, #176]	; 40008ca8 <_tx_thread_initialize+0xdc>
40008bf4:	e5801000 	str	r1, [r0]
40008bf8:	e3a00020 	mov	r0, #32
40008bfc:	e59f10a8 	ldr	r1, [pc, #168]	; 40008cac <_tx_thread_initialize+0xe0>
40008c00:	e5810000 	str	r0, [r1]
40008c04:	e3a00000 	mov	r0, #0
40008c08:	e59f10a0 	ldr	r1, [pc, #160]	; 40008cb0 <_tx_thread_initialize+0xe4>
40008c0c:	e5c10000 	strb	r0, [r1]
40008c10:	e2816001 	add	r6, r1, #1
40008c14:	e3a04001 	mov	r4, #1
40008c18:	ea000009 	b	40008c44 <_tx_thread_initialize+0x78>
40008c1c:	e1a07004 	mov	r7, r4
40008c20:	e3a05000 	mov	r5, #0
40008c24:	ea000002 	b	40008c34 <_tx_thread_initialize+0x68>
40008c28:	e1a070a7 	lsr	r7, r7, #1
40008c2c:	e2850001 	add	r0, r5, #1
40008c30:	e20050ff 	and	r5, r0, #255	; 0xff
40008c34:	e3170001 	tst	r7, #1
40008c38:	0afffffa 	beq	40008c28 <_tx_thread_initialize+0x5c>
40008c3c:	e4c65001 	strb	r5, [r6], #1
40008c40:	e2844001 	add	r4, r4, #1
40008c44:	e3540c01 	cmp	r4, #256	; 0x100
40008c48:	3afffff3 	bcc	40008c1c <_tx_thread_initialize+0x50>
40008c4c:	e3a01080 	mov	r1, #128	; 0x80
40008c50:	e59f005c 	ldr	r0, [pc, #92]	; 40008cb4 <_tx_thread_initialize+0xe8>
40008c54:	eb002b2e 	bl	40013914 <__aeabi_memclr4>
40008c58:	e3a00000 	mov	r0, #0
40008c5c:	e59f1054 	ldr	r1, [pc, #84]	; 40008cb8 <_tx_thread_initialize+0xec>
40008c60:	e5810000 	str	r0, [r1]
40008c64:	e59f1050 	ldr	r1, [pc, #80]	; 40008cbc <_tx_thread_initialize+0xf0>
40008c68:	e5810000 	str	r0, [r1]
40008c6c:	e59f104c 	ldr	r1, [pc, #76]	; 40008cc0 <_tx_thread_initialize+0xf4>
40008c70:	e5810000 	str	r0, [r1]
40008c74:	e59f1048 	ldr	r1, [pc, #72]	; 40008cc4 <_tx_thread_initialize+0xf8>
40008c78:	e5810000 	str	r0, [r1]
40008c7c:	e59f0044 	ldr	r0, [pc, #68]	; 40008cc8 <_tx_thread_initialize+0xfc>
40008c80:	e5900000 	ldr	r0, [r0]
40008c84:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008c88:	e3800c01 	orr	r0, r0, #256	; 0x100
40008c8c:	e3800002 	orr	r0, r0, #2
40008c90:	e59f1030 	ldr	r1, [pc, #48]	; 40008cc8 <_tx_thread_initialize+0xfc>
40008c94:	e5810000 	str	r0, [r1]
40008c98:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008c9c:	40030e54 	.word	0x40030e54
40008ca0:	40030e58 	.word	0x40030e58
40008ca4:	40030e64 	.word	0x40030e64
40008ca8:	40030e68 	.word	0x40030e68
40008cac:	40030e6c 	.word	0x40030e6c
40008cb0:	40032794 	.word	0x40032794
40008cb4:	40032894 	.word	0x40032894
40008cb8:	40030e5c 	.word	0x40030e5c
40008cbc:	40030e60 	.word	0x40030e60
40008cc0:	40030e70 	.word	0x40030e70
40008cc4:	40030e78 	.word	0x40030e78
40008cc8:	40030e74 	.word	0x40030e74

40008ccc <_tx_thread_sleep>:
40008ccc:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008cd0:	e1a04000 	mov	r4, r0
40008cd4:	e59f018c 	ldr	r0, [pc, #396]	; 40008e68 <_tx_thread_sleep+0x19c>
40008cd8:	e5900000 	ldr	r0, [r0]
40008cdc:	e58d0000 	str	r0, [sp]
40008ce0:	e59d0000 	ldr	r0, [sp]
40008ce4:	e3500000 	cmp	r0, #0
40008ce8:	0a000007 	beq	40008d0c <_tx_thread_sleep+0x40>
40008cec:	e59f1178 	ldr	r1, [pc, #376]	; 40008e6c <_tx_thread_sleep+0x1a0>
40008cf0:	e59d0000 	ldr	r0, [sp]
40008cf4:	e1500001 	cmp	r0, r1
40008cf8:	0a000003 	beq	40008d0c <_tx_thread_sleep+0x40>
40008cfc:	e59f016c 	ldr	r0, [pc, #364]	; 40008e70 <_tx_thread_sleep+0x1a4>
40008d00:	e5900000 	ldr	r0, [r0]
40008d04:	e3500000 	cmp	r0, #0
40008d08:	0a000001 	beq	40008d14 <_tx_thread_sleep+0x48>
40008d0c:	e3a00013 	mov	r0, #19
40008d10:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008d14:	e3540000 	cmp	r4, #0
40008d18:	1a000001 	bne	40008d24 <_tx_thread_sleep+0x58>
40008d1c:	e3a00000 	mov	r0, #0
40008d20:	eafffffa 	b	40008d10 <_tx_thread_sleep+0x44>
40008d24:	e10f5000 	mrs	r5, CPSR
40008d28:	e3856080 	orr	r6, r5, #128	; 0x80
40008d2c:	e121f006 	msr	CPSR_c, r6
40008d30:	e59f113c 	ldr	r1, [pc, #316]	; 40008e74 <_tx_thread_sleep+0x1a8>
40008d34:	e5910000 	ldr	r0, [r1]
40008d38:	e3500000 	cmp	r0, #0
40008d3c:	0a000033 	beq	40008e10 <_tx_thread_sleep+0x144>
40008d40:	e59f1130 	ldr	r1, [pc, #304]	; 40008e78 <_tx_thread_sleep+0x1ac>
40008d44:	e5911000 	ldr	r1, [r1]
40008d48:	e2811001 	add	r1, r1, #1
40008d4c:	e59f2124 	ldr	r2, [pc, #292]	; 40008e78 <_tx_thread_sleep+0x1ac>
40008d50:	e5821000 	str	r1, [r2]
40008d54:	e580100c 	str	r1, [r0, #12]
40008d58:	e59f1110 	ldr	r1, [pc, #272]	; 40008e70 <_tx_thread_sleep+0x1a4>
40008d5c:	e5911000 	ldr	r1, [r1]
40008d60:	e3510000 	cmp	r1, #0
40008d64:	1a000006 	bne	40008d84 <_tx_thread_sleep+0xb8>
40008d68:	e59f10f8 	ldr	r1, [pc, #248]	; 40008e68 <_tx_thread_sleep+0x19c>
40008d6c:	e5911000 	ldr	r1, [r1]
40008d70:	e5801000 	str	r1, [r0]
40008d74:	e5901000 	ldr	r1, [r0]
40008d78:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008d7c:	e5801004 	str	r1, [r0, #4]
40008d80:	ea00000d 	b	40008dbc <_tx_thread_sleep+0xf0>
40008d84:	e59f10e4 	ldr	r1, [pc, #228]	; 40008e70 <_tx_thread_sleep+0x1a4>
40008d88:	e5911000 	ldr	r1, [r1]
40008d8c:	e59f20e8 	ldr	r2, [pc, #232]	; 40008e7c <_tx_thread_sleep+0x1b0>
40008d90:	e1510002 	cmp	r1, r2
40008d94:	2a000004 	bcs	40008dac <_tx_thread_sleep+0xe0>
40008d98:	e3e01000 	mvn	r1, #0
40008d9c:	e5801000 	str	r1, [r0]
40008da0:	e3a01000 	mov	r1, #0
40008da4:	e5801004 	str	r1, [r0, #4]
40008da8:	ea000003 	b	40008dbc <_tx_thread_sleep+0xf0>
40008dac:	e59f10c8 	ldr	r1, [pc, #200]	; 40008e7c <_tx_thread_sleep+0x1b0>
40008db0:	e5801000 	str	r1, [r0]
40008db4:	e3a01000 	mov	r1, #0
40008db8:	e5801004 	str	r1, [r0, #4]
40008dbc:	e3a01070 	mov	r1, #112	; 0x70
40008dc0:	e5801008 	str	r1, [r0, #8]
40008dc4:	e5804010 	str	r4, [r0, #16]
40008dc8:	e59d1000 	ldr	r1, [sp]
40008dcc:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008dd0:	e5801014 	str	r1, [r0, #20]
40008dd4:	e580d018 	str	sp, [r0, #24]
40008dd8:	e3a01000 	mov	r1, #0
40008ddc:	e580101c 	str	r1, [r0, #28]
40008de0:	e2800020 	add	r0, r0, #32
40008de4:	e59f1094 	ldr	r1, [pc, #148]	; 40008e80 <_tx_thread_sleep+0x1b4>
40008de8:	e5911000 	ldr	r1, [r1]
40008dec:	e1500001 	cmp	r0, r1
40008df0:	3a000001 	bcc	40008dfc <_tx_thread_sleep+0x130>
40008df4:	e59f1088 	ldr	r1, [pc, #136]	; 40008e84 <_tx_thread_sleep+0x1b8>
40008df8:	e5910000 	ldr	r0, [r1]
40008dfc:	e59f1070 	ldr	r1, [pc, #112]	; 40008e74 <_tx_thread_sleep+0x1a8>
40008e00:	e5810000 	str	r0, [r1]
40008e04:	e59f107c 	ldr	r1, [pc, #124]	; 40008e88 <_tx_thread_sleep+0x1bc>
40008e08:	e5911000 	ldr	r1, [r1]
40008e0c:	e5810020 	str	r0, [r1, #32]
40008e10:	e3a00004 	mov	r0, #4
40008e14:	e59d1000 	ldr	r1, [sp]
40008e18:	e5810030 	str	r0, [r1, #48]	; 0x30
40008e1c:	e3a00001 	mov	r0, #1
40008e20:	e59d1000 	ldr	r1, [sp]
40008e24:	e5810038 	str	r0, [r1, #56]	; 0x38
40008e28:	e3a00000 	mov	r0, #0
40008e2c:	e59d1000 	ldr	r1, [sp]
40008e30:	e5810084 	str	r0, [r1, #132]	; 0x84
40008e34:	e59d0000 	ldr	r0, [sp]
40008e38:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008e3c:	e59f0048 	ldr	r0, [pc, #72]	; 40008e8c <_tx_thread_sleep+0x1c0>
40008e40:	e5900000 	ldr	r0, [r0]
40008e44:	e2800001 	add	r0, r0, #1
40008e48:	e59f103c 	ldr	r1, [pc, #60]	; 40008e8c <_tx_thread_sleep+0x1c0>
40008e4c:	e5810000 	str	r0, [r1]
40008e50:	e121f005 	msr	CPSR_c, r5
40008e54:	e59d0000 	ldr	r0, [sp]
40008e58:	eb00000c 	bl	40008e90 <_tx_thread_system_suspend>
40008e5c:	e59d0000 	ldr	r0, [sp]
40008e60:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008e64:	eaffffa9 	b	40008d10 <_tx_thread_sleep+0x44>
40008e68:	40030e54 	.word	0x40030e54
40008e6c:	40032994 	.word	0x40032994
40008e70:	40030e4c 	.word	0x40030e4c
40008e74:	40030ec0 	.word	0x40030ec0
40008e78:	40030ec4 	.word	0x40030ec4
40008e7c:	f0f0f0f0 	.word	0xf0f0f0f0
40008e80:	40030ebc 	.word	0x40030ebc
40008e84:	40030eb8 	.word	0x40030eb8
40008e88:	40030eac 	.word	0x40030eac
40008e8c:	40030e70 	.word	0x40030e70

40008e90 <_tx_thread_system_suspend>:
40008e90:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008e94:	e1a04000 	mov	r4, r0
40008e98:	e3a0b000 	mov	fp, #0
40008e9c:	e59f05b0 	ldr	r0, [pc, #1456]	; 40009454 <_tx_thread_system_suspend+0x5c4>
40008ea0:	e5900000 	ldr	r0, [r0]
40008ea4:	e1540000 	cmp	r4, r0
40008ea8:	1a000009 	bne	40008ed4 <_tx_thread_system_suspend+0x44>
40008eac:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008eb0:	e58d0000 	str	r0, [sp]
40008eb4:	e59d0000 	ldr	r0, [sp]
40008eb8:	e3500000 	cmp	r0, #0
40008ebc:	0a000004 	beq	40008ed4 <_tx_thread_system_suspend+0x44>
40008ec0:	e59d0000 	ldr	r0, [sp]
40008ec4:	e3700001 	cmn	r0, #1
40008ec8:	0a000001 	beq	40008ed4 <_tx_thread_system_suspend+0x44>
40008ecc:	e284004c 	add	r0, r4, #76	; 0x4c
40008ed0:	eb00020a 	bl	40009700 <_tx_timer_system_activate>
40008ed4:	e5940008 	ldr	r0, [r4, #8]
40008ed8:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008edc:	e1500001 	cmp	r0, r1
40008ee0:	2a000001 	bcs	40008eec <_tx_thread_system_suspend+0x5c>
40008ee4:	e5940008 	ldr	r0, [r4, #8]
40008ee8:	e5840040 	str	r0, [r4, #64]	; 0x40
40008eec:	e594000c 	ldr	r0, [r4, #12]
40008ef0:	e5900000 	ldr	r0, [r0]
40008ef4:	e59f155c 	ldr	r1, [pc, #1372]	; 40009458 <_tx_thread_system_suspend+0x5c8>
40008ef8:	e1500001 	cmp	r0, r1
40008efc:	1a000007 	bne	40008f20 <_tx_thread_system_suspend+0x90>
40008f00:	e5940010 	ldr	r0, [r4, #16]
40008f04:	e5900001 	ldr	r0, [r0, #1]
40008f08:	e1500001 	cmp	r0, r1
40008f0c:	1a000003 	bne	40008f20 <_tx_thread_system_suspend+0x90>
40008f10:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008f14:	e594100c 	ldr	r1, [r4, #12]
40008f18:	e1500001 	cmp	r0, r1
40008f1c:	2a000001 	bcs	40008f28 <_tx_thread_system_suspend+0x98>
40008f20:	e1a00004 	mov	r0, r4
40008f24:	eb001941 	bl	4000f430 <_tx_thread_stack_error_handler>
40008f28:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008f2c:	e5100004 	ldr	r0, [r0, #-4]
40008f30:	e59f1520 	ldr	r1, [pc, #1312]	; 40009458 <_tx_thread_system_suspend+0x5c8>
40008f34:	e1500001 	cmp	r0, r1
40008f38:	0a000001 	beq	40008f44 <_tx_thread_system_suspend+0xb4>
40008f3c:	e1a00004 	mov	r0, r4
40008f40:	eb001905 	bl	4000f35c <_tx_thread_stack_analyze>
40008f44:	e10f5000 	mrs	r5, CPSR
40008f48:	e3856080 	orr	r6, r5, #128	; 0x80
40008f4c:	e121f006 	msr	CPSR_c, r6
40008f50:	e59f0504 	ldr	r0, [pc, #1284]	; 4000945c <_tx_thread_system_suspend+0x5cc>
40008f54:	e5900000 	ldr	r0, [r0]
40008f58:	e2400001 	sub	r0, r0, #1
40008f5c:	e59f14f8 	ldr	r1, [pc, #1272]	; 4000945c <_tx_thread_system_suspend+0x5cc>
40008f60:	e5810000 	str	r0, [r1]
40008f64:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008f68:	e3500000 	cmp	r0, #0
40008f6c:	0a000112 	beq	400093bc <_tx_thread_system_suspend+0x52c>
40008f70:	e59f04e8 	ldr	r0, [pc, #1256]	; 40009460 <_tx_thread_system_suspend+0x5d0>
40008f74:	e590a000 	ldr	sl, [r0]
40008f78:	e2801000 	add	r1, r0, #0
40008f7c:	e5910000 	ldr	r0, [r1]
40008f80:	e3500000 	cmp	r0, #0
40008f84:	0a000034 	beq	4000905c <_tx_thread_system_suspend+0x1cc>
40008f88:	e59f14d4 	ldr	r1, [pc, #1236]	; 40009464 <_tx_thread_system_suspend+0x5d4>
40008f8c:	e5911000 	ldr	r1, [r1]
40008f90:	e2811001 	add	r1, r1, #1
40008f94:	e59f24c8 	ldr	r2, [pc, #1224]	; 40009464 <_tx_thread_system_suspend+0x5d4>
40008f98:	e5821000 	str	r1, [r2]
40008f9c:	e580100c 	str	r1, [r0, #12]
40008fa0:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009468 <_tx_thread_system_suspend+0x5d8>
40008fa4:	e5911000 	ldr	r1, [r1]
40008fa8:	e3510000 	cmp	r1, #0
40008fac:	1a000006 	bne	40008fcc <_tx_thread_system_suspend+0x13c>
40008fb0:	e59f149c 	ldr	r1, [pc, #1180]	; 40009454 <_tx_thread_system_suspend+0x5c4>
40008fb4:	e5911000 	ldr	r1, [r1]
40008fb8:	e5801000 	str	r1, [r0]
40008fbc:	e5901000 	ldr	r1, [r0]
40008fc0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008fc4:	e5801004 	str	r1, [r0, #4]
40008fc8:	ea00000d 	b	40009004 <_tx_thread_system_suspend+0x174>
40008fcc:	e59f1494 	ldr	r1, [pc, #1172]	; 40009468 <_tx_thread_system_suspend+0x5d8>
40008fd0:	e5911000 	ldr	r1, [r1]
40008fd4:	e59f2490 	ldr	r2, [pc, #1168]	; 4000946c <_tx_thread_system_suspend+0x5dc>
40008fd8:	e1510002 	cmp	r1, r2
40008fdc:	2a000004 	bcs	40008ff4 <_tx_thread_system_suspend+0x164>
40008fe0:	e3e01000 	mvn	r1, #0
40008fe4:	e5801000 	str	r1, [r0]
40008fe8:	e3a01000 	mov	r1, #0
40008fec:	e5801004 	str	r1, [r0, #4]
40008ff0:	ea000003 	b	40009004 <_tx_thread_system_suspend+0x174>
40008ff4:	e59f1470 	ldr	r1, [pc, #1136]	; 4000946c <_tx_thread_system_suspend+0x5dc>
40008ff8:	e5801000 	str	r1, [r0]
40008ffc:	e3a01000 	mov	r1, #0
40009000:	e5801004 	str	r1, [r0, #4]
40009004:	e3a01002 	mov	r1, #2
40009008:	e5801008 	str	r1, [r0, #8]
4000900c:	e5804010 	str	r4, [r0, #16]
40009010:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40009014:	e5801014 	str	r1, [r0, #20]
40009018:	e28d1004 	add	r1, sp, #4
4000901c:	e5801018 	str	r1, [r0, #24]
40009020:	e59f1448 	ldr	r1, [pc, #1096]	; 40009470 <_tx_thread_system_suspend+0x5e0>
40009024:	e5911000 	ldr	r1, [r1]
40009028:	e580101c 	str	r1, [r0, #28]
4000902c:	e2800020 	add	r0, r0, #32
40009030:	e59f143c 	ldr	r1, [pc, #1084]	; 40009474 <_tx_thread_system_suspend+0x5e4>
40009034:	e5911000 	ldr	r1, [r1]
40009038:	e1500001 	cmp	r0, r1
4000903c:	3a000001 	bcc	40009048 <_tx_thread_system_suspend+0x1b8>
40009040:	e59f1430 	ldr	r1, [pc, #1072]	; 40009478 <_tx_thread_system_suspend+0x5e8>
40009044:	e5910000 	ldr	r0, [r1]
40009048:	e59f1410 	ldr	r1, [pc, #1040]	; 40009460 <_tx_thread_system_suspend+0x5d0>
4000904c:	e5810000 	str	r0, [r1]
40009050:	e59f1424 	ldr	r1, [pc, #1060]	; 4000947c <_tx_thread_system_suspend+0x5ec>
40009054:	e5911000 	ldr	r1, [r1]
40009058:	e5810020 	str	r0, [r1, #32]
4000905c:	e35a0000 	cmp	sl, #0
40009060:	0a000000 	beq	40009068 <_tx_thread_system_suspend+0x1d8>
40009064:	e59ab00c 	ldr	fp, [sl, #12]
40009068:	e3a00000 	mov	r0, #0
4000906c:	e5840038 	str	r0, [r4, #56]	; 0x38
40009070:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40009074:	e5940020 	ldr	r0, [r4, #32]
40009078:	e1500004 	cmp	r0, r4
4000907c:	0a000029 	beq	40009128 <_tx_thread_system_suspend+0x298>
40009080:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40009084:	e5941020 	ldr	r1, [r4, #32]
40009088:	e5810024 	str	r0, [r1, #36]	; 0x24
4000908c:	e5940020 	ldr	r0, [r4, #32]
40009090:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40009094:	e5810020 	str	r0, [r1, #32]
40009098:	e59f03e0 	ldr	r0, [pc, #992]	; 40009480 <_tx_thread_system_suspend+0x5f0>
4000909c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400090a0:	e1500004 	cmp	r0, r4
400090a4:	1a0000c4 	bne	400093bc <_tx_thread_system_suspend+0x52c>
400090a8:	e59f13d0 	ldr	r1, [pc, #976]	; 40009480 <_tx_thread_system_suspend+0x5f0>
400090ac:	e5940020 	ldr	r0, [r4, #32]
400090b0:	e7810107 	str	r0, [r1, r7, lsl #2]
400090b4:	e59f03c8 	ldr	r0, [pc, #968]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400090b8:	e5900000 	ldr	r0, [r0]
400090bc:	e3500000 	cmp	r0, #0
400090c0:	0a000005 	beq	400090dc <_tx_thread_system_suspend+0x24c>
400090c4:	e59f03b8 	ldr	r0, [pc, #952]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400090c8:	e5900000 	ldr	r0, [r0]
400090cc:	e3a01001 	mov	r1, #1
400090d0:	e1c00711 	bic	r0, r0, r1, lsl r7
400090d4:	e59f13a8 	ldr	r1, [pc, #936]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400090d8:	e5810000 	str	r0, [r1]
400090dc:	e59f038c 	ldr	r0, [pc, #908]	; 40009470 <_tx_thread_system_suspend+0x5e0>
400090e0:	e5900000 	ldr	r0, [r0]
400090e4:	e1540000 	cmp	r4, r0
400090e8:	1a0000b3 	bne	400093bc <_tx_thread_system_suspend+0x52c>
400090ec:	e59f038c 	ldr	r0, [pc, #908]	; 40009480 <_tx_thread_system_suspend+0x5f0>
400090f0:	e59f1390 	ldr	r1, [pc, #912]	; 40009488 <_tx_thread_system_suspend+0x5f8>
400090f4:	e5911000 	ldr	r1, [r1]
400090f8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
400090fc:	e59f136c 	ldr	r1, [pc, #876]	; 40009470 <_tx_thread_system_suspend+0x5e0>
40009100:	e5810000 	str	r0, [r1]
40009104:	e35a0000 	cmp	sl, #0
40009108:	0a0000ab 	beq	400093bc <_tx_thread_system_suspend+0x52c>
4000910c:	e59a000c 	ldr	r0, [sl, #12]
40009110:	e150000b 	cmp	r0, fp
40009114:	1a0000a8 	bne	400093bc <_tx_thread_system_suspend+0x52c>
40009118:	e2810000 	add	r0, r1, #0
4000911c:	e5900000 	ldr	r0, [r0]
40009120:	e58a001c 	str	r0, [sl, #28]
40009124:	ea0000a4 	b	400093bc <_tx_thread_system_suspend+0x52c>
40009128:	e3a00000 	mov	r0, #0
4000912c:	e59f134c 	ldr	r1, [pc, #844]	; 40009480 <_tx_thread_system_suspend+0x5f0>
40009130:	e7810107 	str	r0, [r1, r7, lsl #2]
40009134:	e59f0350 	ldr	r0, [pc, #848]	; 4000948c <_tx_thread_system_suspend+0x5fc>
40009138:	e5900000 	ldr	r0, [r0]
4000913c:	e3a01001 	mov	r1, #1
40009140:	e1c00711 	bic	r0, r0, r1, lsl r7
40009144:	e59f1340 	ldr	r1, [pc, #832]	; 4000948c <_tx_thread_system_suspend+0x5fc>
40009148:	e5810000 	str	r0, [r1]
4000914c:	e59f0330 	ldr	r0, [pc, #816]	; 40009484 <_tx_thread_system_suspend+0x5f4>
40009150:	e5900000 	ldr	r0, [r0]
40009154:	e3500000 	cmp	r0, #0
40009158:	0a000005 	beq	40009174 <_tx_thread_system_suspend+0x2e4>
4000915c:	e59f0320 	ldr	r0, [pc, #800]	; 40009484 <_tx_thread_system_suspend+0x5f4>
40009160:	e5900000 	ldr	r0, [r0]
40009164:	e3a01001 	mov	r1, #1
40009168:	e1c00711 	bic	r0, r0, r1, lsl r7
4000916c:	e59f1310 	ldr	r1, [pc, #784]	; 40009484 <_tx_thread_system_suspend+0x5f4>
40009170:	e5810000 	str	r0, [r1]
40009174:	e3a08000 	mov	r8, #0
40009178:	e59f030c 	ldr	r0, [pc, #780]	; 4000948c <_tx_thread_system_suspend+0x5fc>
4000917c:	e5909000 	ldr	r9, [r0]
40009180:	e20900ff 	and	r0, r9, #255	; 0xff
40009184:	e58d0004 	str	r0, [sp, #4]
40009188:	e59d0004 	ldr	r0, [sp, #4]
4000918c:	e3500000 	cmp	r0, #0
40009190:	1a00002a 	bne	40009240 <_tx_thread_system_suspend+0x3b0>
40009194:	e1a09429 	lsr	r9, r9, #8
40009198:	e20900ff 	and	r0, r9, #255	; 0xff
4000919c:	e58d0004 	str	r0, [sp, #4]
400091a0:	e2888008 	add	r8, r8, #8
400091a4:	e59d0004 	ldr	r0, [sp, #4]
400091a8:	e3500000 	cmp	r0, #0
400091ac:	1a000023 	bne	40009240 <_tx_thread_system_suspend+0x3b0>
400091b0:	e1a09429 	lsr	r9, r9, #8
400091b4:	e20900ff 	and	r0, r9, #255	; 0xff
400091b8:	e58d0004 	str	r0, [sp, #4]
400091bc:	e2888008 	add	r8, r8, #8
400091c0:	e59d0004 	ldr	r0, [sp, #4]
400091c4:	e3500000 	cmp	r0, #0
400091c8:	1a00001c 	bne	40009240 <_tx_thread_system_suspend+0x3b0>
400091cc:	e1a09429 	lsr	r9, r9, #8
400091d0:	e20900ff 	and	r0, r9, #255	; 0xff
400091d4:	e58d0004 	str	r0, [sp, #4]
400091d8:	e2888008 	add	r8, r8, #8
400091dc:	e59d0004 	ldr	r0, [sp, #4]
400091e0:	e3500000 	cmp	r0, #0
400091e4:	1a000015 	bne	40009240 <_tx_thread_system_suspend+0x3b0>
400091e8:	e3a00020 	mov	r0, #32
400091ec:	e59f1294 	ldr	r1, [pc, #660]	; 40009488 <_tx_thread_system_suspend+0x5f8>
400091f0:	e5810000 	str	r0, [r1]
400091f4:	e3a00000 	mov	r0, #0
400091f8:	e59f1270 	ldr	r1, [pc, #624]	; 40009470 <_tx_thread_system_suspend+0x5e0>
400091fc:	e5810000 	str	r0, [r1]
40009200:	e35a0000 	cmp	sl, #0
40009204:	0a000004 	beq	4000921c <_tx_thread_system_suspend+0x38c>
40009208:	e59a000c 	ldr	r0, [sl, #12]
4000920c:	e150000b 	cmp	r0, fp
40009210:	1a000001 	bne	4000921c <_tx_thread_system_suspend+0x38c>
40009214:	e3a00000 	mov	r0, #0
40009218:	e58a001c 	str	r0, [sl, #28]
4000921c:	e121f005 	msr	CPSR_c, r5
40009220:	e59f0240 	ldr	r0, [pc, #576]	; 40009468 <_tx_thread_system_suspend+0x5d8>
40009224:	e5900000 	ldr	r0, [r0]
40009228:	e59f122c 	ldr	r1, [pc, #556]	; 4000945c <_tx_thread_system_suspend+0x5cc>
4000922c:	e5911000 	ldr	r1, [r1]
40009230:	e1900001 	orrs	r0, r0, r1
40009234:	1a000000 	bne	4000923c <_tx_thread_system_suspend+0x3ac>
40009238:	eb000725 	bl	4000aed4 <_tx_thread_system_return>
4000923c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009240:	e59f0248 	ldr	r0, [pc, #584]	; 40009490 <_tx_thread_system_suspend+0x600>
40009244:	e59d1004 	ldr	r1, [sp, #4]
40009248:	e7d00001 	ldrb	r0, [r0, r1]
4000924c:	e0800008 	add	r0, r0, r8
40009250:	e59f1230 	ldr	r1, [pc, #560]	; 40009488 <_tx_thread_system_suspend+0x5f8>
40009254:	e5810000 	str	r0, [r1]
40009258:	e59f0210 	ldr	r0, [pc, #528]	; 40009470 <_tx_thread_system_suspend+0x5e0>
4000925c:	e5900000 	ldr	r0, [r0]
40009260:	e1540000 	cmp	r4, r0
40009264:	1a000054 	bne	400093bc <_tx_thread_system_suspend+0x52c>
40009268:	e59f0210 	ldr	r0, [pc, #528]	; 40009480 <_tx_thread_system_suspend+0x5f0>
4000926c:	e5911000 	ldr	r1, [r1]
40009270:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40009274:	e59f11f4 	ldr	r1, [pc, #500]	; 40009470 <_tx_thread_system_suspend+0x5e0>
40009278:	e5810000 	str	r0, [r1]
4000927c:	e35a0000 	cmp	sl, #0
40009280:	0a000005 	beq	4000929c <_tx_thread_system_suspend+0x40c>
40009284:	e59a000c 	ldr	r0, [sl, #12]
40009288:	e150000b 	cmp	r0, fp
4000928c:	1a000002 	bne	4000929c <_tx_thread_system_suspend+0x40c>
40009290:	e2810000 	add	r0, r1, #0
40009294:	e5900000 	ldr	r0, [r0]
40009298:	e58a001c 	str	r0, [sl, #28]
4000929c:	e59f01e0 	ldr	r0, [pc, #480]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400092a0:	e5900000 	ldr	r0, [r0]
400092a4:	e3500000 	cmp	r0, #0
400092a8:	0a000043 	beq	400093bc <_tx_thread_system_suspend+0x52c>
400092ac:	e59f01a8 	ldr	r0, [pc, #424]	; 4000945c <_tx_thread_system_suspend+0x5cc>
400092b0:	e5900000 	ldr	r0, [r0]
400092b4:	e2800001 	add	r0, r0, #1
400092b8:	e59f119c 	ldr	r1, [pc, #412]	; 4000945c <_tx_thread_system_suspend+0x5cc>
400092bc:	e5810000 	str	r0, [r1]
400092c0:	e121f005 	msr	CPSR_c, r5
400092c4:	e10f5000 	mrs	r5, CPSR
400092c8:	e3856080 	orr	r6, r5, #128	; 0x80
400092cc:	e121f006 	msr	CPSR_c, r6
400092d0:	e2810000 	add	r0, r1, #0
400092d4:	e5900000 	ldr	r0, [r0]
400092d8:	e2400001 	sub	r0, r0, #1
400092dc:	e5810000 	str	r0, [r1]
400092e0:	e3a08000 	mov	r8, #0
400092e4:	e59f0198 	ldr	r0, [pc, #408]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400092e8:	e5909000 	ldr	r9, [r0]
400092ec:	e20900ff 	and	r0, r9, #255	; 0xff
400092f0:	e58d0004 	str	r0, [sp, #4]
400092f4:	e59d0004 	ldr	r0, [sp, #4]
400092f8:	e3500000 	cmp	r0, #0
400092fc:	1a000011 	bne	40009348 <_tx_thread_system_suspend+0x4b8>
40009300:	e1a09429 	lsr	r9, r9, #8
40009304:	e20900ff 	and	r0, r9, #255	; 0xff
40009308:	e58d0004 	str	r0, [sp, #4]
4000930c:	e2888008 	add	r8, r8, #8
40009310:	e59d0004 	ldr	r0, [sp, #4]
40009314:	e3500000 	cmp	r0, #0
40009318:	1a00000a 	bne	40009348 <_tx_thread_system_suspend+0x4b8>
4000931c:	e1a09429 	lsr	r9, r9, #8
40009320:	e20900ff 	and	r0, r9, #255	; 0xff
40009324:	e58d0004 	str	r0, [sp, #4]
40009328:	e2888008 	add	r8, r8, #8
4000932c:	e59d0004 	ldr	r0, [sp, #4]
40009330:	e3500000 	cmp	r0, #0
40009334:	1a000003 	bne	40009348 <_tx_thread_system_suspend+0x4b8>
40009338:	e1a09429 	lsr	r9, r9, #8
4000933c:	e20900ff 	and	r0, r9, #255	; 0xff
40009340:	e58d0004 	str	r0, [sp, #4]
40009344:	e2888008 	add	r8, r8, #8
40009348:	e59f0140 	ldr	r0, [pc, #320]	; 40009490 <_tx_thread_system_suspend+0x600>
4000934c:	e59d1004 	ldr	r1, [sp, #4]
40009350:	e7d00001 	ldrb	r0, [r0, r1]
40009354:	e0807008 	add	r7, r0, r8
40009358:	e59f0120 	ldr	r0, [pc, #288]	; 40009480 <_tx_thread_system_suspend+0x5f0>
4000935c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009360:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40009364:	e59f111c 	ldr	r1, [pc, #284]	; 40009488 <_tx_thread_system_suspend+0x5f8>
40009368:	e5911000 	ldr	r1, [r1]
4000936c:	e1500001 	cmp	r0, r1
40009370:	8a000011 	bhi	400093bc <_tx_thread_system_suspend+0x52c>
40009374:	e59f0104 	ldr	r0, [pc, #260]	; 40009480 <_tx_thread_system_suspend+0x5f0>
40009378:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4000937c:	e59f10ec 	ldr	r1, [pc, #236]	; 40009470 <_tx_thread_system_suspend+0x5e0>
40009380:	e5810000 	str	r0, [r1]
40009384:	e35a0000 	cmp	sl, #0
40009388:	0a000005 	beq	400093a4 <_tx_thread_system_suspend+0x514>
4000938c:	e59a000c 	ldr	r0, [sl, #12]
40009390:	e150000b 	cmp	r0, fp
40009394:	1a000002 	bne	400093a4 <_tx_thread_system_suspend+0x514>
40009398:	e2810000 	add	r0, r1, #0
4000939c:	e5900000 	ldr	r0, [r0]
400093a0:	e58a001c 	str	r0, [sl, #28]
400093a4:	e59f00d8 	ldr	r0, [pc, #216]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400093a8:	e5900000 	ldr	r0, [r0]
400093ac:	e3a01001 	mov	r1, #1
400093b0:	e1c00711 	bic	r0, r0, r1, lsl r7
400093b4:	e59f10c8 	ldr	r1, [pc, #200]	; 40009484 <_tx_thread_system_suspend+0x5f4>
400093b8:	e5810000 	str	r0, [r1]
400093bc:	e121f005 	msr	CPSR_c, r5
400093c0:	e59f008c 	ldr	r0, [pc, #140]	; 40009454 <_tx_thread_system_suspend+0x5c4>
400093c4:	e5900000 	ldr	r0, [r0]
400093c8:	e59f10a0 	ldr	r1, [pc, #160]	; 40009470 <_tx_thread_system_suspend+0x5e0>
400093cc:	e5911000 	ldr	r1, [r1]
400093d0:	e1500001 	cmp	r0, r1
400093d4:	0a00001d 	beq	40009450 <_tx_thread_system_suspend+0x5c0>
400093d8:	e59f0090 	ldr	r0, [pc, #144]	; 40009470 <_tx_thread_system_suspend+0x5e0>
400093dc:	e5904000 	ldr	r4, [r0]
400093e0:	e5940008 	ldr	r0, [r4, #8]
400093e4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
400093e8:	e1500001 	cmp	r0, r1
400093ec:	2a000001 	bcs	400093f8 <_tx_thread_system_suspend+0x568>
400093f0:	e5940008 	ldr	r0, [r4, #8]
400093f4:	e5840040 	str	r0, [r4, #64]	; 0x40
400093f8:	e594000c 	ldr	r0, [r4, #12]
400093fc:	e5900000 	ldr	r0, [r0]
40009400:	e59f1050 	ldr	r1, [pc, #80]	; 40009458 <_tx_thread_system_suspend+0x5c8>
40009404:	e1500001 	cmp	r0, r1
40009408:	1a000007 	bne	4000942c <_tx_thread_system_suspend+0x59c>
4000940c:	e5940010 	ldr	r0, [r4, #16]
40009410:	e5900001 	ldr	r0, [r0, #1]
40009414:	e1500001 	cmp	r0, r1
40009418:	1a000003 	bne	4000942c <_tx_thread_system_suspend+0x59c>
4000941c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009420:	e594100c 	ldr	r1, [r4, #12]
40009424:	e1500001 	cmp	r0, r1
40009428:	2a000001 	bcs	40009434 <_tx_thread_system_suspend+0x5a4>
4000942c:	e1a00004 	mov	r0, r4
40009430:	eb0017fe 	bl	4000f430 <_tx_thread_stack_error_handler>
40009434:	e59f002c 	ldr	r0, [pc, #44]	; 40009468 <_tx_thread_system_suspend+0x5d8>
40009438:	e5900000 	ldr	r0, [r0]
4000943c:	e59f1018 	ldr	r1, [pc, #24]	; 4000945c <_tx_thread_system_suspend+0x5cc>
40009440:	e5911000 	ldr	r1, [r1]
40009444:	e1900001 	orrs	r0, r0, r1
40009448:	1a000000 	bne	40009450 <_tx_thread_system_suspend+0x5c0>
4000944c:	eb0006a0 	bl	4000aed4 <_tx_thread_system_return>
40009450:	eaffff79 	b	4000923c <_tx_thread_system_suspend+0x3ac>
40009454:	40030e54 	.word	0x40030e54
40009458:	efefefef 	.word	0xefefefef
4000945c:	40030e70 	.word	0x40030e70
40009460:	40030ec0 	.word	0x40030ec0
40009464:	40030ec4 	.word	0x40030ec4
40009468:	40030e4c 	.word	0x40030e4c
4000946c:	f0f0f0f0 	.word	0xf0f0f0f0
40009470:	40030e58 	.word	0x40030e58
40009474:	40030ebc 	.word	0x40030ebc
40009478:	40030eb8 	.word	0x40030eb8
4000947c:	40030eac 	.word	0x40030eac
40009480:	40032894 	.word	0x40032894
40009484:	40030e68 	.word	0x40030e68
40009488:	40030e6c 	.word	0x40030e6c
4000948c:	40030e64 	.word	0x40030e64
40009490:	40032794 	.word	0x40032794

40009494 <_tx_time_get>:
40009494:	e92d4008 	push	{r3, lr}
40009498:	e10f1000 	mrs	r1, CPSR
4000949c:	e3812080 	orr	r2, r1, #128	; 0x80
400094a0:	e121f002 	msr	CPSR_c, r2
400094a4:	e59f00ec 	ldr	r0, [pc, #236]	; 40009598 <_tx_time_get+0x104>
400094a8:	e5900000 	ldr	r0, [r0]
400094ac:	e58d0000 	str	r0, [sp]
400094b0:	e59f30e4 	ldr	r3, [pc, #228]	; 4000959c <_tx_time_get+0x108>
400094b4:	e5930000 	ldr	r0, [r3]
400094b8:	e3500000 	cmp	r0, #0
400094bc:	0a000032 	beq	4000958c <_tx_time_get+0xf8>
400094c0:	e59f30d8 	ldr	r3, [pc, #216]	; 400095a0 <_tx_time_get+0x10c>
400094c4:	e5933000 	ldr	r3, [r3]
400094c8:	e2833001 	add	r3, r3, #1
400094cc:	e59fc0cc 	ldr	ip, [pc, #204]	; 400095a0 <_tx_time_get+0x10c>
400094d0:	e58c3000 	str	r3, [ip]
400094d4:	e580300c 	str	r3, [r0, #12]
400094d8:	e59f30c4 	ldr	r3, [pc, #196]	; 400095a4 <_tx_time_get+0x110>
400094dc:	e5933000 	ldr	r3, [r3]
400094e0:	e3530000 	cmp	r3, #0
400094e4:	1a000006 	bne	40009504 <_tx_time_get+0x70>
400094e8:	e59f30b8 	ldr	r3, [pc, #184]	; 400095a8 <_tx_time_get+0x114>
400094ec:	e5933000 	ldr	r3, [r3]
400094f0:	e5803000 	str	r3, [r0]
400094f4:	e5903000 	ldr	r3, [r0]
400094f8:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400094fc:	e5803004 	str	r3, [r0, #4]
40009500:	ea00000d 	b	4000953c <_tx_time_get+0xa8>
40009504:	e59f3098 	ldr	r3, [pc, #152]	; 400095a4 <_tx_time_get+0x110>
40009508:	e5933000 	ldr	r3, [r3]
4000950c:	e59fc098 	ldr	ip, [pc, #152]	; 400095ac <_tx_time_get+0x118>
40009510:	e153000c 	cmp	r3, ip
40009514:	2a000004 	bcs	4000952c <_tx_time_get+0x98>
40009518:	e3e03000 	mvn	r3, #0
4000951c:	e5803000 	str	r3, [r0]
40009520:	e3a03000 	mov	r3, #0
40009524:	e5803004 	str	r3, [r0, #4]
40009528:	ea000003 	b	4000953c <_tx_time_get+0xa8>
4000952c:	e59f3078 	ldr	r3, [pc, #120]	; 400095ac <_tx_time_get+0x118>
40009530:	e5803000 	str	r3, [r0]
40009534:	e3a03000 	mov	r3, #0
40009538:	e5803004 	str	r3, [r0, #4]
4000953c:	e3a03078 	mov	r3, #120	; 0x78
40009540:	e5803008 	str	r3, [r0, #8]
40009544:	e59d3000 	ldr	r3, [sp]
40009548:	e5803010 	str	r3, [r0, #16]
4000954c:	e580d014 	str	sp, [r0, #20]
40009550:	e3a03000 	mov	r3, #0
40009554:	e5803018 	str	r3, [r0, #24]
40009558:	e580301c 	str	r3, [r0, #28]
4000955c:	e2800020 	add	r0, r0, #32
40009560:	e59f3048 	ldr	r3, [pc, #72]	; 400095b0 <_tx_time_get+0x11c>
40009564:	e5933000 	ldr	r3, [r3]
40009568:	e1500003 	cmp	r0, r3
4000956c:	3a000001 	bcc	40009578 <_tx_time_get+0xe4>
40009570:	e59f303c 	ldr	r3, [pc, #60]	; 400095b4 <_tx_time_get+0x120>
40009574:	e5930000 	ldr	r0, [r3]
40009578:	e59f301c 	ldr	r3, [pc, #28]	; 4000959c <_tx_time_get+0x108>
4000957c:	e5830000 	str	r0, [r3]
40009580:	e59f3030 	ldr	r3, [pc, #48]	; 400095b8 <_tx_time_get+0x124>
40009584:	e5933000 	ldr	r3, [r3]
40009588:	e5830020 	str	r0, [r3, #32]
4000958c:	e121f001 	msr	CPSR_c, r1
40009590:	e59d0000 	ldr	r0, [sp]
40009594:	e8bd8008 	pop	{r3, pc}
40009598:	40030e7c 	.word	0x40030e7c
4000959c:	40030ec0 	.word	0x40030ec0
400095a0:	40030ec4 	.word	0x40030ec4
400095a4:	40030e4c 	.word	0x40030e4c
400095a8:	40030e54 	.word	0x40030e54
400095ac:	f0f0f0f0 	.word	0xf0f0f0f0
400095b0:	40030ebc 	.word	0x40030ebc
400095b4:	40030eb8 	.word	0x40030eb8
400095b8:	40030eac 	.word	0x40030eac

400095bc <_tx_timer_initialize>:
400095bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400095c0:	e24dd01c 	sub	sp, sp, #28
400095c4:	e3a00000 	mov	r0, #0
400095c8:	e59f10d8 	ldr	r1, [pc, #216]	; 400096a8 <_tx_timer_initialize+0xec>
400095cc:	e5810000 	str	r0, [r1]
400095d0:	e59f10d4 	ldr	r1, [pc, #212]	; 400096ac <_tx_timer_initialize+0xf0>
400095d4:	e5810000 	str	r0, [r1]
400095d8:	e59f10d0 	ldr	r1, [pc, #208]	; 400096b0 <_tx_timer_initialize+0xf4>
400095dc:	e5810000 	str	r0, [r1]
400095e0:	e59f10cc 	ldr	r1, [pc, #204]	; 400096b4 <_tx_timer_initialize+0xf8>
400095e4:	e5810000 	str	r0, [r1]
400095e8:	e3a01080 	mov	r1, #128	; 0x80
400095ec:	e59f00c4 	ldr	r0, [pc, #196]	; 400096b8 <_tx_timer_initialize+0xfc>
400095f0:	eb0028c7 	bl	40013914 <__aeabi_memclr4>
400095f4:	e59f00bc 	ldr	r0, [pc, #188]	; 400096b8 <_tx_timer_initialize+0xfc>
400095f8:	e59f10bc 	ldr	r1, [pc, #188]	; 400096bc <_tx_timer_initialize+0x100>
400095fc:	e5810000 	str	r0, [r1]
40009600:	e59f10b8 	ldr	r1, [pc, #184]	; 400096c0 <_tx_timer_initialize+0x104>
40009604:	e5810000 	str	r0, [r1]
40009608:	e280007c 	add	r0, r0, #124	; 0x7c
4000960c:	e59f10b0 	ldr	r1, [pc, #176]	; 400096c4 <_tx_timer_initialize+0x108>
40009610:	e5810000 	str	r0, [r1]
40009614:	e2810000 	add	r0, r1, #0
40009618:	e5900000 	ldr	r0, [r0]
4000961c:	e2800004 	add	r0, r0, #4
40009620:	e5810000 	str	r0, [r1]
40009624:	e59f009c 	ldr	r0, [pc, #156]	; 400096c8 <_tx_timer_initialize+0x10c>
40009628:	e59f109c 	ldr	r1, [pc, #156]	; 400096cc <_tx_timer_initialize+0x110>
4000962c:	e5810000 	str	r0, [r1]
40009630:	e3a00b01 	mov	r0, #1024	; 0x400
40009634:	e59f1094 	ldr	r1, [pc, #148]	; 400096d0 <_tx_timer_initialize+0x114>
40009638:	e5810000 	str	r0, [r1]
4000963c:	e3a00000 	mov	r0, #0
40009640:	e59f108c 	ldr	r1, [pc, #140]	; 400096d4 <_tx_timer_initialize+0x118>
40009644:	e5810000 	str	r0, [r1]
40009648:	e3a03000 	mov	r3, #0
4000964c:	e2810000 	add	r0, r1, #0
40009650:	e5901000 	ldr	r1, [r0]
40009654:	e5900000 	ldr	r0, [r0]
40009658:	e28d2008 	add	r2, sp, #8
4000965c:	e882000b 	stm	r2, {r0, r1, r3}
40009660:	e59f0068 	ldr	r0, [pc, #104]	; 400096d0 <_tx_timer_initialize+0x114>
40009664:	e58d3014 	str	r3, [sp, #20]
40009668:	e5903000 	ldr	r3, [r0]
4000966c:	e59f0058 	ldr	r0, [pc, #88]	; 400096cc <_tx_timer_initialize+0x110>
40009670:	e5902000 	ldr	r2, [r0]
40009674:	e1cd20f0 	strd	r2, [sp]
40009678:	e59f3058 	ldr	r3, [pc, #88]	; 400096d8 <_tx_timer_initialize+0x11c>
4000967c:	e59f2058 	ldr	r2, [pc, #88]	; 400096dc <_tx_timer_initialize+0x120>
40009680:	e28f1058 	add	r1, pc, #88	; 0x58
40009684:	e59f0068 	ldr	r0, [pc, #104]	; 400096f4 <_tx_timer_initialize+0x138>
40009688:	eb00143b 	bl	4000e77c <_tx_thread_create>
4000968c:	e3a00000 	mov	r0, #0
40009690:	e59f1060 	ldr	r1, [pc, #96]	; 400096f8 <_tx_timer_initialize+0x13c>
40009694:	e5810000 	str	r0, [r1]
40009698:	e59f105c 	ldr	r1, [pc, #92]	; 400096fc <_tx_timer_initialize+0x140>
4000969c:	e5810000 	str	r0, [r1]
400096a0:	e28dd01c 	add	sp, sp, #28
400096a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400096a8:	40030e7c 	.word	0x40030e7c
400096ac:	40030e80 	.word	0x40030e80
400096b0:	40030e84 	.word	0x40030e84
400096b4:	40030e94 	.word	0x40030e94
400096b8:	40032914 	.word	0x40032914
400096bc:	40030e88 	.word	0x40030e88
400096c0:	40030e90 	.word	0x40030e90
400096c4:	40030e8c 	.word	0x40030e8c
400096c8:	40032a3c 	.word	0x40032a3c
400096cc:	40030ea0 	.word	0x40030ea0
400096d0:	40030ea4 	.word	0x40030ea4
400096d4:	40030ea8 	.word	0x40030ea8
400096d8:	4154494d 	.word	0x4154494d
400096dc:	400097ec 	.word	0x400097ec
400096e0:	74737953 	.word	0x74737953
400096e4:	54206d65 	.word	0x54206d65
400096e8:	72656d69 	.word	0x72656d69
400096ec:	72685420 	.word	0x72685420
400096f0:	00646165 	.word	0x00646165
400096f4:	40032994 	.word	0x40032994
400096f8:	40030e98 	.word	0x40030e98
400096fc:	40030e9c 	.word	0x40030e9c

40009700 <_tx_timer_system_activate>:
40009700:	e92d4010 	push	{r4, lr}
40009704:	e1a01000 	mov	r1, r0
40009708:	e10f2000 	mrs	r2, CPSR
4000970c:	e3823080 	orr	r3, r2, #128	; 0x80
40009710:	e121f003 	msr	CPSR_c, r3
40009714:	e5910000 	ldr	r0, [r1]
40009718:	e3500000 	cmp	r0, #0
4000971c:	0a00002c 	beq	400097d4 <_tx_timer_system_activate+0xd4>
40009720:	e5910000 	ldr	r0, [r1]
40009724:	e3700001 	cmn	r0, #1
40009728:	0a000029 	beq	400097d4 <_tx_timer_system_activate+0xd4>
4000972c:	e5910018 	ldr	r0, [r1, #24]
40009730:	e3500000 	cmp	r0, #0
40009734:	1a000026 	bne	400097d4 <_tx_timer_system_activate+0xd4>
40009738:	e5910000 	ldr	r0, [r1]
4000973c:	e3500020 	cmp	r0, #32
40009740:	9a000001 	bls	4000974c <_tx_timer_system_activate+0x4c>
40009744:	e3a0e01f 	mov	lr, #31
40009748:	ea000001 	b	40009754 <_tx_timer_system_activate+0x54>
4000974c:	e5910000 	ldr	r0, [r1]
40009750:	e240e001 	sub	lr, r0, #1
40009754:	e59f0084 	ldr	r0, [pc, #132]	; 400097e0 <_tx_timer_system_activate+0xe0>
40009758:	e5900000 	ldr	r0, [r0]
4000975c:	e080c10e 	add	ip, r0, lr, lsl #2
40009760:	e59f007c 	ldr	r0, [pc, #124]	; 400097e4 <_tx_timer_system_activate+0xe4>
40009764:	e5900000 	ldr	r0, [r0]
40009768:	e15c0000 	cmp	ip, r0
4000976c:	3a000006 	bcc	4000978c <_tx_timer_system_activate+0x8c>
40009770:	e59f006c 	ldr	r0, [pc, #108]	; 400097e4 <_tx_timer_system_activate+0xe4>
40009774:	e5900000 	ldr	r0, [r0]
40009778:	e04c0000 	sub	r0, ip, r0
4000977c:	e1a00140 	asr	r0, r0, #2
40009780:	e59f4060 	ldr	r4, [pc, #96]	; 400097e8 <_tx_timer_system_activate+0xe8>
40009784:	e5944000 	ldr	r4, [r4]
40009788:	e084c100 	add	ip, r4, r0, lsl #2
4000978c:	e59c0000 	ldr	r0, [ip]
40009790:	e3500000 	cmp	r0, #0
40009794:	0a00000a 	beq	400097c4 <_tx_timer_system_activate+0xc4>
40009798:	e59c0000 	ldr	r0, [ip]
4000979c:	e5810010 	str	r0, [r1, #16]
400097a0:	e59c0000 	ldr	r0, [ip]
400097a4:	e5900014 	ldr	r0, [r0, #20]
400097a8:	e5810014 	str	r0, [r1, #20]
400097ac:	e5910014 	ldr	r0, [r1, #20]
400097b0:	e5801010 	str	r1, [r0, #16]
400097b4:	e59c0000 	ldr	r0, [ip]
400097b8:	e5801014 	str	r1, [r0, #20]
400097bc:	e581c018 	str	ip, [r1, #24]
400097c0:	ea000003 	b	400097d4 <_tx_timer_system_activate+0xd4>
400097c4:	e5811010 	str	r1, [r1, #16]
400097c8:	e5811014 	str	r1, [r1, #20]
400097cc:	e581c018 	str	ip, [r1, #24]
400097d0:	e58c1000 	str	r1, [ip]
400097d4:	e121f002 	msr	CPSR_c, r2
400097d8:	e3a00000 	mov	r0, #0
400097dc:	e8bd8010 	pop	{r4, pc}
400097e0:	40030e90 	.word	0x40030e90
400097e4:	40030e8c 	.word	0x40030e8c
400097e8:	40030e88 	.word	0x40030e88

400097ec <_tx_timer_thread_entry>:
400097ec:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400097f0:	e1a04000 	mov	r4, r0
400097f4:	e3a09000 	mov	r9, #0
400097f8:	e59f0214 	ldr	r0, [pc, #532]	; 40009a14 <_tx_timer_thread_entry+0x228>
400097fc:	e1540000 	cmp	r4, r0
40009800:	0a000000 	beq	40009808 <_tx_timer_thread_entry+0x1c>
40009804:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40009808:	e3a00000 	mov	r0, #0
4000980c:	e58d0000 	str	r0, [sp]
40009810:	e1a00000 	nop			; (mov r0, r0)
40009814:	e10f5000 	mrs	r5, CPSR
40009818:	e3856080 	orr	r6, r5, #128	; 0x80
4000981c:	e121f006 	msr	CPSR_c, r6
40009820:	e59f01f0 	ldr	r0, [pc, #496]	; 40009a18 <_tx_timer_thread_entry+0x22c>
40009824:	e5900000 	ldr	r0, [r0]
40009828:	e5900000 	ldr	r0, [r0]
4000982c:	e58d0004 	str	r0, [sp, #4]
40009830:	e59d0004 	ldr	r0, [sp, #4]
40009834:	e3500000 	cmp	r0, #0
40009838:	0a000002 	beq	40009848 <_tx_timer_thread_entry+0x5c>
4000983c:	e28d0004 	add	r0, sp, #4
40009840:	e59d1004 	ldr	r1, [sp, #4]
40009844:	e5810018 	str	r0, [r1, #24]
40009848:	e3a00000 	mov	r0, #0
4000984c:	e59f11c4 	ldr	r1, [pc, #452]	; 40009a18 <_tx_timer_thread_entry+0x22c>
40009850:	e5911000 	ldr	r1, [r1]
40009854:	e5810000 	str	r0, [r1]
40009858:	e59f01b8 	ldr	r0, [pc, #440]	; 40009a18 <_tx_timer_thread_entry+0x22c>
4000985c:	e5900000 	ldr	r0, [r0]
40009860:	e2800004 	add	r0, r0, #4
40009864:	e59f11ac 	ldr	r1, [pc, #428]	; 40009a18 <_tx_timer_thread_entry+0x22c>
40009868:	e5810000 	str	r0, [r1]
4000986c:	e2810000 	add	r0, r1, #0
40009870:	e5900000 	ldr	r0, [r0]
40009874:	e59f11a0 	ldr	r1, [pc, #416]	; 40009a1c <_tx_timer_thread_entry+0x230>
40009878:	e5911000 	ldr	r1, [r1]
4000987c:	e1500001 	cmp	r0, r1
40009880:	1a000003 	bne	40009894 <_tx_timer_thread_entry+0xa8>
40009884:	e59f0194 	ldr	r0, [pc, #404]	; 40009a20 <_tx_timer_thread_entry+0x234>
40009888:	e5900000 	ldr	r0, [r0]
4000988c:	e59f1184 	ldr	r1, [pc, #388]	; 40009a18 <_tx_timer_thread_entry+0x22c>
40009890:	e5810000 	str	r0, [r1]
40009894:	e3a00000 	mov	r0, #0
40009898:	e59f1184 	ldr	r1, [pc, #388]	; 40009a24 <_tx_timer_thread_entry+0x238>
4000989c:	e5810000 	str	r0, [r1]
400098a0:	e121f005 	msr	CPSR_c, r5
400098a4:	e10f5000 	mrs	r5, CPSR
400098a8:	e3856080 	orr	r6, r5, #128	; 0x80
400098ac:	e121f006 	msr	CPSR_c, r6
400098b0:	ea000040 	b	400099b8 <_tx_timer_thread_entry+0x1cc>
400098b4:	e59d7004 	ldr	r7, [sp, #4]
400098b8:	e59d0004 	ldr	r0, [sp, #4]
400098bc:	e5900010 	ldr	r0, [r0, #16]
400098c0:	e1500007 	cmp	r0, r7
400098c4:	1a000002 	bne	400098d4 <_tx_timer_thread_entry+0xe8>
400098c8:	e3a00000 	mov	r0, #0
400098cc:	e58d0004 	str	r0, [sp, #4]
400098d0:	ea00000a 	b	40009900 <_tx_timer_thread_entry+0x114>
400098d4:	e5970014 	ldr	r0, [r7, #20]
400098d8:	e5971010 	ldr	r1, [r7, #16]
400098dc:	e5810014 	str	r0, [r1, #20]
400098e0:	e5970010 	ldr	r0, [r7, #16]
400098e4:	e5971014 	ldr	r1, [r7, #20]
400098e8:	e5810010 	str	r0, [r1, #16]
400098ec:	e28d0004 	add	r0, sp, #4
400098f0:	e5971010 	ldr	r1, [r7, #16]
400098f4:	e5810018 	str	r0, [r1, #24]
400098f8:	e5970010 	ldr	r0, [r7, #16]
400098fc:	e58d0004 	str	r0, [sp, #4]
40009900:	e5970000 	ldr	r0, [r7]
40009904:	e3500020 	cmp	r0, #32
40009908:	9a000006 	bls	40009928 <_tx_timer_thread_entry+0x13c>
4000990c:	e5970000 	ldr	r0, [r7]
40009910:	e2400020 	sub	r0, r0, #32
40009914:	e5870000 	str	r0, [r7]
40009918:	e3a08000 	mov	r8, #0
4000991c:	e587d018 	str	sp, [r7, #24]
40009920:	e5877010 	str	r7, [r7, #16]
40009924:	ea00000b 	b	40009958 <_tx_timer_thread_entry+0x16c>
40009928:	e5978008 	ldr	r8, [r7, #8]
4000992c:	e597900c 	ldr	r9, [r7, #12]
40009930:	e5970004 	ldr	r0, [r7, #4]
40009934:	e5870000 	str	r0, [r7]
40009938:	e5970000 	ldr	r0, [r7]
4000993c:	e3500000 	cmp	r0, #0
40009940:	0a000002 	beq	40009950 <_tx_timer_thread_entry+0x164>
40009944:	e587d018 	str	sp, [r7, #24]
40009948:	e5877010 	str	r7, [r7, #16]
4000994c:	ea000001 	b	40009958 <_tx_timer_thread_entry+0x16c>
40009950:	e3a00000 	mov	r0, #0
40009954:	e5870018 	str	r0, [r7, #24]
40009958:	e121f005 	msr	CPSR_c, r5
4000995c:	e3580000 	cmp	r8, #0
40009960:	0a000001 	beq	4000996c <_tx_timer_thread_entry+0x180>
40009964:	e1a00009 	mov	r0, r9
40009968:	e12fff38 	blx	r8
4000996c:	e10f5000 	mrs	r5, CPSR
40009970:	e3856080 	orr	r6, r5, #128	; 0x80
40009974:	e121f006 	msr	CPSR_c, r6
40009978:	e1a0100d 	mov	r1, sp
4000997c:	e5970018 	ldr	r0, [r7, #24]
40009980:	e1500001 	cmp	r0, r1
40009984:	1a000007 	bne	400099a8 <_tx_timer_thread_entry+0x1bc>
40009988:	e3a00000 	mov	r0, #0
4000998c:	e5870018 	str	r0, [r7, #24]
40009990:	e121f005 	msr	CPSR_c, r5
40009994:	e1a00007 	mov	r0, r7
40009998:	ebffff58 	bl	40009700 <_tx_timer_system_activate>
4000999c:	e10f5000 	mrs	r5, CPSR
400099a0:	e3856080 	orr	r6, r5, #128	; 0x80
400099a4:	e121f006 	msr	CPSR_c, r6
400099a8:	e121f005 	msr	CPSR_c, r5
400099ac:	e10f5000 	mrs	r5, CPSR
400099b0:	e3856080 	orr	r6, r5, #128	; 0x80
400099b4:	e121f006 	msr	CPSR_c, r6
400099b8:	e59d0004 	ldr	r0, [sp, #4]
400099bc:	e3500000 	cmp	r0, #0
400099c0:	1affffbb 	bne	400098b4 <_tx_timer_thread_entry+0xc8>
400099c4:	e59f0058 	ldr	r0, [pc, #88]	; 40009a24 <_tx_timer_thread_entry+0x238>
400099c8:	e5900000 	ldr	r0, [r0]
400099cc:	e3500000 	cmp	r0, #0
400099d0:	1a00000d 	bne	40009a0c <_tx_timer_thread_entry+0x220>
400099d4:	e59fa04c 	ldr	sl, [pc, #76]	; 40009a28 <_tx_timer_thread_entry+0x23c>
400099d8:	e3a00003 	mov	r0, #3
400099dc:	e58a0030 	str	r0, [sl, #48]	; 0x30
400099e0:	e3a00001 	mov	r0, #1
400099e4:	e58a0038 	str	r0, [sl, #56]	; 0x38
400099e8:	e59f003c 	ldr	r0, [pc, #60]	; 40009a2c <_tx_timer_thread_entry+0x240>
400099ec:	e5900000 	ldr	r0, [r0]
400099f0:	e2800001 	add	r0, r0, #1
400099f4:	e59f1030 	ldr	r1, [pc, #48]	; 40009a2c <_tx_timer_thread_entry+0x240>
400099f8:	e5810000 	str	r0, [r1]
400099fc:	e121f005 	msr	CPSR_c, r5
40009a00:	e1a0000a 	mov	r0, sl
40009a04:	ebfffd21 	bl	40008e90 <_tx_thread_system_suspend>
40009a08:	ea000000 	b	40009a10 <_tx_timer_thread_entry+0x224>
40009a0c:	e121f005 	msr	CPSR_c, r5
40009a10:	eaffff7f 	b	40009814 <_tx_timer_thread_entry+0x28>
40009a14:	4154494d 	.word	0x4154494d
40009a18:	40030e90 	.word	0x40030e90
40009a1c:	40030e8c 	.word	0x40030e8c
40009a20:	40030e88 	.word	0x40030e88
40009a24:	40030e94 	.word	0x40030e94
40009a28:	40032994 	.word	0x40032994
40009a2c:	40030e70 	.word	0x40030e70

40009a30 <_tx_trace_initialize>:
40009a30:	e3a00000 	mov	r0, #0
40009a34:	e59f102c 	ldr	r1, [pc, #44]	; 40009a68 <_tx_trace_initialize+0x38>
40009a38:	e5810000 	str	r0, [r1]
40009a3c:	e59f1028 	ldr	r1, [pc, #40]	; 40009a6c <_tx_trace_initialize+0x3c>
40009a40:	e5810000 	str	r0, [r1]
40009a44:	e59f1024 	ldr	r1, [pc, #36]	; 40009a70 <_tx_trace_initialize+0x40>
40009a48:	e5810000 	str	r0, [r1]
40009a4c:	e59f1020 	ldr	r1, [pc, #32]	; 40009a74 <_tx_trace_initialize+0x44>
40009a50:	e5810000 	str	r0, [r1]
40009a54:	e59f101c 	ldr	r1, [pc, #28]	; 40009a78 <_tx_trace_initialize+0x48>
40009a58:	e5810000 	str	r0, [r1]
40009a5c:	e59f1018 	ldr	r1, [pc, #24]	; 40009a7c <_tx_trace_initialize+0x4c>
40009a60:	e5810000 	str	r0, [r1]
40009a64:	e12fff1e 	bx	lr
40009a68:	40030eac 	.word	0x40030eac
40009a6c:	40030eb0 	.word	0x40030eb0
40009a70:	40030eb4 	.word	0x40030eb4
40009a74:	40030eb8 	.word	0x40030eb8
40009a78:	40030ebc 	.word	0x40030ebc
40009a7c:	40030ec0 	.word	0x40030ec0

40009a80 <_txe_byte_allocate>:
40009a80:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40009a84:	e1a04000 	mov	r4, r0
40009a88:	e1a05001 	mov	r5, r1
40009a8c:	e1a06002 	mov	r6, r2
40009a90:	e1a07003 	mov	r7, r3
40009a94:	e3540000 	cmp	r4, #0
40009a98:	0a000003 	beq	40009aac <_txe_byte_allocate+0x2c>
40009a9c:	e5940000 	ldr	r0, [r4]
40009aa0:	e59f10d4 	ldr	r1, [pc, #212]	; 40009b7c <_txe_byte_allocate+0xfc>
40009aa4:	e1500001 	cmp	r0, r1
40009aa8:	0a000001 	beq	40009ab4 <_txe_byte_allocate+0x34>
40009aac:	e3a00002 	mov	r0, #2
40009ab0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40009ab4:	e3550000 	cmp	r5, #0
40009ab8:	1a000001 	bne	40009ac4 <_txe_byte_allocate+0x44>
40009abc:	e3a00003 	mov	r0, #3
40009ac0:	eafffffa 	b	40009ab0 <_txe_byte_allocate+0x30>
40009ac4:	e3560000 	cmp	r6, #0
40009ac8:	0a000002 	beq	40009ad8 <_txe_byte_allocate+0x58>
40009acc:	e594001c 	ldr	r0, [r4, #28]
40009ad0:	e1500006 	cmp	r0, r6
40009ad4:	2a000001 	bcs	40009ae0 <_txe_byte_allocate+0x60>
40009ad8:	e3a00005 	mov	r0, #5
40009adc:	eafffff3 	b	40009ab0 <_txe_byte_allocate+0x30>
40009ae0:	e59f0098 	ldr	r0, [pc, #152]	; 40009b80 <_txe_byte_allocate+0x100>
40009ae4:	e5908000 	ldr	r8, [r0]
40009ae8:	e3570000 	cmp	r7, #0
40009aec:	0a000008 	beq	40009b14 <_txe_byte_allocate+0x94>
40009af0:	e59f008c 	ldr	r0, [pc, #140]	; 40009b84 <_txe_byte_allocate+0x104>
40009af4:	e5900000 	ldr	r0, [r0]
40009af8:	e3500000 	cmp	r0, #0
40009afc:	1a000002 	bne	40009b0c <_txe_byte_allocate+0x8c>
40009b00:	e59f0080 	ldr	r0, [pc, #128]	; 40009b88 <_txe_byte_allocate+0x108>
40009b04:	e1580000 	cmp	r8, r0
40009b08:	1a000001 	bne	40009b14 <_txe_byte_allocate+0x94>
40009b0c:	e3a00004 	mov	r0, #4
40009b10:	eaffffe6 	b	40009ab0 <_txe_byte_allocate+0x30>
40009b14:	e3580000 	cmp	r8, #0
40009b18:	0a000008 	beq	40009b40 <_txe_byte_allocate+0xc0>
40009b1c:	e59f0064 	ldr	r0, [pc, #100]	; 40009b88 <_txe_byte_allocate+0x108>
40009b20:	e1580000 	cmp	r8, r0
40009b24:	0a000003 	beq	40009b38 <_txe_byte_allocate+0xb8>
40009b28:	e59f0054 	ldr	r0, [pc, #84]	; 40009b84 <_txe_byte_allocate+0x104>
40009b2c:	e5900000 	ldr	r0, [r0]
40009b30:	e3500000 	cmp	r0, #0
40009b34:	0a000008 	beq	40009b5c <_txe_byte_allocate+0xdc>
40009b38:	e3a00013 	mov	r0, #19
40009b3c:	eaffffdb 	b	40009ab0 <_txe_byte_allocate+0x30>
40009b40:	e59f003c 	ldr	r0, [pc, #60]	; 40009b84 <_txe_byte_allocate+0x104>
40009b44:	e5900000 	ldr	r0, [r0]
40009b48:	e59f103c 	ldr	r1, [pc, #60]	; 40009b8c <_txe_byte_allocate+0x10c>
40009b4c:	e1500001 	cmp	r0, r1
40009b50:	2a000001 	bcs	40009b5c <_txe_byte_allocate+0xdc>
40009b54:	e3a00013 	mov	r0, #19
40009b58:	eaffffd4 	b	40009ab0 <_txe_byte_allocate+0x30>
40009b5c:	e1a03007 	mov	r3, r7
40009b60:	e1a02006 	mov	r2, r6
40009b64:	e1a01005 	mov	r1, r5
40009b68:	e1a00004 	mov	r0, r4
40009b6c:	eb0005bf 	bl	4000b270 <_tx_byte_allocate>
40009b70:	e1a09000 	mov	r9, r0
40009b74:	e1a00009 	mov	r0, r9
40009b78:	eaffffcc 	b	40009ab0 <_txe_byte_allocate+0x30>
40009b7c:	42595445 	.word	0x42595445
40009b80:	40030e54 	.word	0x40030e54
40009b84:	40030e4c 	.word	0x40030e4c
40009b88:	40032994 	.word	0x40032994
40009b8c:	f0f0f0f0 	.word	0xf0f0f0f0

40009b90 <_txe_byte_pool_create>:
40009b90:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009b94:	e1a04000 	mov	r4, r0
40009b98:	e1a05001 	mov	r5, r1
40009b9c:	e1a06002 	mov	r6, r2
40009ba0:	e1a07003 	mov	r7, r3
40009ba4:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009ba8:	e3540000 	cmp	r4, #0
40009bac:	0a000001 	beq	40009bb8 <_txe_byte_pool_create+0x28>
40009bb0:	e3580034 	cmp	r8, #52	; 0x34
40009bb4:	0a000001 	beq	40009bc0 <_txe_byte_pool_create+0x30>
40009bb8:	e3a00002 	mov	r0, #2
40009bbc:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009bc0:	e10f9000 	mrs	r9, CPSR
40009bc4:	e389a080 	orr	sl, r9, #128	; 0x80
40009bc8:	e121f00a 	msr	CPSR_c, sl
40009bcc:	e59f0130 	ldr	r0, [pc, #304]	; 40009d04 <_txe_byte_pool_create+0x174>
40009bd0:	e5900000 	ldr	r0, [r0]
40009bd4:	e2800001 	add	r0, r0, #1
40009bd8:	e59f1124 	ldr	r1, [pc, #292]	; 40009d04 <_txe_byte_pool_create+0x174>
40009bdc:	e5810000 	str	r0, [r1]
40009be0:	e121f009 	msr	CPSR_c, r9
40009be4:	e59f011c 	ldr	r0, [pc, #284]	; 40009d08 <_txe_byte_pool_create+0x178>
40009be8:	e5900000 	ldr	r0, [r0]
40009bec:	e58d0004 	str	r0, [sp, #4]
40009bf0:	e3a0b000 	mov	fp, #0
40009bf4:	ea000007 	b	40009c18 <_txe_byte_pool_create+0x88>
40009bf8:	e59d0004 	ldr	r0, [sp, #4]
40009bfc:	e1540000 	cmp	r4, r0
40009c00:	1a000000 	bne	40009c08 <_txe_byte_pool_create+0x78>
40009c04:	ea000007 	b	40009c28 <_txe_byte_pool_create+0x98>
40009c08:	e59d0004 	ldr	r0, [sp, #4]
40009c0c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009c10:	e58d0004 	str	r0, [sp, #4]
40009c14:	e28bb001 	add	fp, fp, #1
40009c18:	e59f00ec 	ldr	r0, [pc, #236]	; 40009d0c <_txe_byte_pool_create+0x17c>
40009c1c:	e5900000 	ldr	r0, [r0]
40009c20:	e15b0000 	cmp	fp, r0
40009c24:	3afffff3 	bcc	40009bf8 <_txe_byte_pool_create+0x68>
40009c28:	e1a00000 	nop			; (mov r0, r0)
40009c2c:	e10f9000 	mrs	r9, CPSR
40009c30:	e389a080 	orr	sl, r9, #128	; 0x80
40009c34:	e121f00a 	msr	CPSR_c, sl
40009c38:	e59f00c4 	ldr	r0, [pc, #196]	; 40009d04 <_txe_byte_pool_create+0x174>
40009c3c:	e5900000 	ldr	r0, [r0]
40009c40:	e2400001 	sub	r0, r0, #1
40009c44:	e59f10b8 	ldr	r1, [pc, #184]	; 40009d04 <_txe_byte_pool_create+0x174>
40009c48:	e5810000 	str	r0, [r1]
40009c4c:	e121f009 	msr	CPSR_c, r9
40009c50:	eb001609 	bl	4000f47c <_tx_thread_system_preempt_check>
40009c54:	e59d0004 	ldr	r0, [sp, #4]
40009c58:	e1540000 	cmp	r4, r0
40009c5c:	1a000001 	bne	40009c68 <_txe_byte_pool_create+0xd8>
40009c60:	e3a00002 	mov	r0, #2
40009c64:	eaffffd4 	b	40009bbc <_txe_byte_pool_create+0x2c>
40009c68:	e3560000 	cmp	r6, #0
40009c6c:	1a000001 	bne	40009c78 <_txe_byte_pool_create+0xe8>
40009c70:	e3a00003 	mov	r0, #3
40009c74:	eaffffd0 	b	40009bbc <_txe_byte_pool_create+0x2c>
40009c78:	e3570064 	cmp	r7, #100	; 0x64
40009c7c:	2a000001 	bcs	40009c88 <_txe_byte_pool_create+0xf8>
40009c80:	e3a00005 	mov	r0, #5
40009c84:	eaffffcc 	b	40009bbc <_txe_byte_pool_create+0x2c>
40009c88:	e59f0080 	ldr	r0, [pc, #128]	; 40009d10 <_txe_byte_pool_create+0x180>
40009c8c:	e5900000 	ldr	r0, [r0]
40009c90:	e58d0000 	str	r0, [sp]
40009c94:	e59d0000 	ldr	r0, [sp]
40009c98:	e3500000 	cmp	r0, #0
40009c9c:	0a000009 	beq	40009cc8 <_txe_byte_pool_create+0x138>
40009ca0:	e59f106c 	ldr	r1, [pc, #108]	; 40009d14 <_txe_byte_pool_create+0x184>
40009ca4:	e59d0000 	ldr	r0, [sp]
40009ca8:	e1500001 	cmp	r0, r1
40009cac:	0a000003 	beq	40009cc0 <_txe_byte_pool_create+0x130>
40009cb0:	e59f0060 	ldr	r0, [pc, #96]	; 40009d18 <_txe_byte_pool_create+0x188>
40009cb4:	e5900000 	ldr	r0, [r0]
40009cb8:	e3500000 	cmp	r0, #0
40009cbc:	0a000008 	beq	40009ce4 <_txe_byte_pool_create+0x154>
40009cc0:	e3a00013 	mov	r0, #19
40009cc4:	eaffffbc 	b	40009bbc <_txe_byte_pool_create+0x2c>
40009cc8:	e59f0048 	ldr	r0, [pc, #72]	; 40009d18 <_txe_byte_pool_create+0x188>
40009ccc:	e5900000 	ldr	r0, [r0]
40009cd0:	e59f1044 	ldr	r1, [pc, #68]	; 40009d1c <_txe_byte_pool_create+0x18c>
40009cd4:	e1500001 	cmp	r0, r1
40009cd8:	2a000001 	bcs	40009ce4 <_txe_byte_pool_create+0x154>
40009cdc:	e3a00013 	mov	r0, #19
40009ce0:	eaffffb5 	b	40009bbc <_txe_byte_pool_create+0x2c>
40009ce4:	e1a03007 	mov	r3, r7
40009ce8:	e1a02006 	mov	r2, r6
40009cec:	e1a01005 	mov	r1, r5
40009cf0:	e1a00004 	mov	r0, r4
40009cf4:	eb000643 	bl	4000b608 <_tx_byte_pool_create>
40009cf8:	e58d0008 	str	r0, [sp, #8]
40009cfc:	e59d0008 	ldr	r0, [sp, #8]
40009d00:	eaffffad 	b	40009bbc <_txe_byte_pool_create+0x2c>
40009d04:	40030e70 	.word	0x40030e70
40009d08:	40030ef0 	.word	0x40030ef0
40009d0c:	40030ef4 	.word	0x40030ef4
40009d10:	40030e54 	.word	0x40030e54
40009d14:	40032994 	.word	0x40032994
40009d18:	40030e4c 	.word	0x40030e4c
40009d1c:	f0f0f0f0 	.word	0xf0f0f0f0

40009d20 <_txe_byte_pool_delete>:
40009d20:	e92d4070 	push	{r4, r5, r6, lr}
40009d24:	e1a04000 	mov	r4, r0
40009d28:	e3540000 	cmp	r4, #0
40009d2c:	0a000003 	beq	40009d40 <_txe_byte_pool_delete+0x20>
40009d30:	e5940000 	ldr	r0, [r4]
40009d34:	e59f1054 	ldr	r1, [pc, #84]	; 40009d90 <_txe_byte_pool_delete+0x70>
40009d38:	e1500001 	cmp	r0, r1
40009d3c:	0a000001 	beq	40009d48 <_txe_byte_pool_delete+0x28>
40009d40:	e3a00002 	mov	r0, #2
40009d44:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d48:	e59f0044 	ldr	r0, [pc, #68]	; 40009d94 <_txe_byte_pool_delete+0x74>
40009d4c:	e5905000 	ldr	r5, [r0]
40009d50:	e3550000 	cmp	r5, #0
40009d54:	0a000006 	beq	40009d74 <_txe_byte_pool_delete+0x54>
40009d58:	e59f0038 	ldr	r0, [pc, #56]	; 40009d98 <_txe_byte_pool_delete+0x78>
40009d5c:	e5900000 	ldr	r0, [r0]
40009d60:	e3500000 	cmp	r0, #0
40009d64:	1a000002 	bne	40009d74 <_txe_byte_pool_delete+0x54>
40009d68:	e59f002c 	ldr	r0, [pc, #44]	; 40009d9c <_txe_byte_pool_delete+0x7c>
40009d6c:	e1550000 	cmp	r5, r0
40009d70:	1a000001 	bne	40009d7c <_txe_byte_pool_delete+0x5c>
40009d74:	e3a00013 	mov	r0, #19
40009d78:	eafffff1 	b	40009d44 <_txe_byte_pool_delete+0x24>
40009d7c:	e1a00004 	mov	r0, r4
40009d80:	eb0006b6 	bl	4000b860 <_tx_byte_pool_delete>
40009d84:	e1a06000 	mov	r6, r0
40009d88:	e1a00006 	mov	r0, r6
40009d8c:	eaffffec 	b	40009d44 <_txe_byte_pool_delete+0x24>
40009d90:	42595445 	.word	0x42595445
40009d94:	40030e54 	.word	0x40030e54
40009d98:	40030e4c 	.word	0x40030e4c
40009d9c:	40032994 	.word	0x40032994

40009da0 <_txe_byte_release>:
40009da0:	e92d4070 	push	{r4, r5, r6, lr}
40009da4:	e1a04000 	mov	r4, r0
40009da8:	e3540000 	cmp	r4, #0
40009dac:	1a000001 	bne	40009db8 <_txe_byte_release+0x18>
40009db0:	e3a00003 	mov	r0, #3
40009db4:	e8bd8070 	pop	{r4, r5, r6, pc}
40009db8:	e59f005c 	ldr	r0, [pc, #92]	; 40009e1c <_txe_byte_release+0x7c>
40009dbc:	e5905000 	ldr	r5, [r0]
40009dc0:	e3550000 	cmp	r5, #0
40009dc4:	0a000008 	beq	40009dec <_txe_byte_release+0x4c>
40009dc8:	e59f0050 	ldr	r0, [pc, #80]	; 40009e20 <_txe_byte_release+0x80>
40009dcc:	e1550000 	cmp	r5, r0
40009dd0:	0a000003 	beq	40009de4 <_txe_byte_release+0x44>
40009dd4:	e59f0048 	ldr	r0, [pc, #72]	; 40009e24 <_txe_byte_release+0x84>
40009dd8:	e5900000 	ldr	r0, [r0]
40009ddc:	e3500000 	cmp	r0, #0
40009de0:	0a000008 	beq	40009e08 <_txe_byte_release+0x68>
40009de4:	e3a00013 	mov	r0, #19
40009de8:	eafffff1 	b	40009db4 <_txe_byte_release+0x14>
40009dec:	e59f0030 	ldr	r0, [pc, #48]	; 40009e24 <_txe_byte_release+0x84>
40009df0:	e5900000 	ldr	r0, [r0]
40009df4:	e59f102c 	ldr	r1, [pc, #44]	; 40009e28 <_txe_byte_release+0x88>
40009df8:	e1500001 	cmp	r0, r1
40009dfc:	2a000001 	bcs	40009e08 <_txe_byte_release+0x68>
40009e00:	e3a00013 	mov	r0, #19
40009e04:	eaffffea 	b	40009db4 <_txe_byte_release+0x14>
40009e08:	e1a00004 	mov	r0, r4
40009e0c:	eb000794 	bl	4000bc64 <_tx_byte_release>
40009e10:	e1a06000 	mov	r6, r0
40009e14:	e1a00006 	mov	r0, r6
40009e18:	eaffffe5 	b	40009db4 <_txe_byte_release+0x14>
40009e1c:	40030e54 	.word	0x40030e54
40009e20:	40032994 	.word	0x40032994
40009e24:	40030e4c 	.word	0x40030e4c
40009e28:	f0f0f0f0 	.word	0xf0f0f0f0

40009e2c <_txe_event_flags_create>:
40009e2c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009e30:	e1a04000 	mov	r4, r0
40009e34:	e1a05001 	mov	r5, r1
40009e38:	e1a06002 	mov	r6, r2
40009e3c:	e3540000 	cmp	r4, #0
40009e40:	0a000001 	beq	40009e4c <_txe_event_flags_create+0x20>
40009e44:	e3560028 	cmp	r6, #40	; 0x28
40009e48:	0a000001 	beq	40009e54 <_txe_event_flags_create+0x28>
40009e4c:	e3a00006 	mov	r0, #6
40009e50:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009e54:	e10f7000 	mrs	r7, CPSR
40009e58:	e3878080 	orr	r8, r7, #128	; 0x80
40009e5c:	e121f008 	msr	CPSR_c, r8
40009e60:	e59f00e8 	ldr	r0, [pc, #232]	; 40009f50 <_txe_event_flags_create+0x124>
40009e64:	e5900000 	ldr	r0, [r0]
40009e68:	e2800001 	add	r0, r0, #1
40009e6c:	e59f10dc 	ldr	r1, [pc, #220]	; 40009f50 <_txe_event_flags_create+0x124>
40009e70:	e5810000 	str	r0, [r1]
40009e74:	e121f007 	msr	CPSR_c, r7
40009e78:	e59f00d4 	ldr	r0, [pc, #212]	; 40009f54 <_txe_event_flags_create+0x128>
40009e7c:	e590a000 	ldr	sl, [r0]
40009e80:	e3a09000 	mov	r9, #0
40009e84:	ea000004 	b	40009e9c <_txe_event_flags_create+0x70>
40009e88:	e154000a 	cmp	r4, sl
40009e8c:	1a000000 	bne	40009e94 <_txe_event_flags_create+0x68>
40009e90:	ea000005 	b	40009eac <_txe_event_flags_create+0x80>
40009e94:	e59aa018 	ldr	sl, [sl, #24]
40009e98:	e2899001 	add	r9, r9, #1
40009e9c:	e59f00b4 	ldr	r0, [pc, #180]	; 40009f58 <_txe_event_flags_create+0x12c>
40009ea0:	e5900000 	ldr	r0, [r0]
40009ea4:	e1590000 	cmp	r9, r0
40009ea8:	3afffff6 	bcc	40009e88 <_txe_event_flags_create+0x5c>
40009eac:	e1a00000 	nop			; (mov r0, r0)
40009eb0:	e10f7000 	mrs	r7, CPSR
40009eb4:	e3878080 	orr	r8, r7, #128	; 0x80
40009eb8:	e121f008 	msr	CPSR_c, r8
40009ebc:	e59f008c 	ldr	r0, [pc, #140]	; 40009f50 <_txe_event_flags_create+0x124>
40009ec0:	e5900000 	ldr	r0, [r0]
40009ec4:	e2400001 	sub	r0, r0, #1
40009ec8:	e59f1080 	ldr	r1, [pc, #128]	; 40009f50 <_txe_event_flags_create+0x124>
40009ecc:	e5810000 	str	r0, [r1]
40009ed0:	e121f007 	msr	CPSR_c, r7
40009ed4:	eb001568 	bl	4000f47c <_tx_thread_system_preempt_check>
40009ed8:	e154000a 	cmp	r4, sl
40009edc:	1a000001 	bne	40009ee8 <_txe_event_flags_create+0xbc>
40009ee0:	e3a00006 	mov	r0, #6
40009ee4:	eaffffd9 	b	40009e50 <_txe_event_flags_create+0x24>
40009ee8:	e59f006c 	ldr	r0, [pc, #108]	; 40009f5c <_txe_event_flags_create+0x130>
40009eec:	e590b000 	ldr	fp, [r0]
40009ef0:	e35b0000 	cmp	fp, #0
40009ef4:	0a000008 	beq	40009f1c <_txe_event_flags_create+0xf0>
40009ef8:	e59f0060 	ldr	r0, [pc, #96]	; 40009f60 <_txe_event_flags_create+0x134>
40009efc:	e15b0000 	cmp	fp, r0
40009f00:	0a000003 	beq	40009f14 <_txe_event_flags_create+0xe8>
40009f04:	e59f0058 	ldr	r0, [pc, #88]	; 40009f64 <_txe_event_flags_create+0x138>
40009f08:	e5900000 	ldr	r0, [r0]
40009f0c:	e3500000 	cmp	r0, #0
40009f10:	0a000008 	beq	40009f38 <_txe_event_flags_create+0x10c>
40009f14:	e3a00013 	mov	r0, #19
40009f18:	eaffffcc 	b	40009e50 <_txe_event_flags_create+0x24>
40009f1c:	e59f0040 	ldr	r0, [pc, #64]	; 40009f64 <_txe_event_flags_create+0x138>
40009f20:	e5900000 	ldr	r0, [r0]
40009f24:	e59f103c 	ldr	r1, [pc, #60]	; 40009f68 <_txe_event_flags_create+0x13c>
40009f28:	e1500001 	cmp	r0, r1
40009f2c:	2a000001 	bcs	40009f38 <_txe_event_flags_create+0x10c>
40009f30:	e3a00013 	mov	r0, #19
40009f34:	eaffffc5 	b	40009e50 <_txe_event_flags_create+0x24>
40009f38:	e1a01005 	mov	r1, r5
40009f3c:	e1a00004 	mov	r0, r4
40009f40:	eb0007f9 	bl	4000bf2c <_tx_event_flags_create>
40009f44:	e58d0000 	str	r0, [sp]
40009f48:	e59d0000 	ldr	r0, [sp]
40009f4c:	eaffffbf 	b	40009e50 <_txe_event_flags_create+0x24>
40009f50:	40030e70 	.word	0x40030e70
40009f54:	40030ed8 	.word	0x40030ed8
40009f58:	40030edc 	.word	0x40030edc
40009f5c:	40030e54 	.word	0x40030e54
40009f60:	40032994 	.word	0x40032994
40009f64:	40030e4c 	.word	0x40030e4c
40009f68:	f0f0f0f0 	.word	0xf0f0f0f0

40009f6c <_txe_event_flags_delete>:
40009f6c:	e92d4070 	push	{r4, r5, r6, lr}
40009f70:	e1a04000 	mov	r4, r0
40009f74:	e3540000 	cmp	r4, #0
40009f78:	0a000003 	beq	40009f8c <_txe_event_flags_delete+0x20>
40009f7c:	e5940000 	ldr	r0, [r4]
40009f80:	e59f1054 	ldr	r1, [pc, #84]	; 40009fdc <_txe_event_flags_delete+0x70>
40009f84:	e1500001 	cmp	r0, r1
40009f88:	0a000001 	beq	40009f94 <_txe_event_flags_delete+0x28>
40009f8c:	e3a00006 	mov	r0, #6
40009f90:	e8bd8070 	pop	{r4, r5, r6, pc}
40009f94:	e59f0044 	ldr	r0, [pc, #68]	; 40009fe0 <_txe_event_flags_delete+0x74>
40009f98:	e5905000 	ldr	r5, [r0]
40009f9c:	e3550000 	cmp	r5, #0
40009fa0:	0a000006 	beq	40009fc0 <_txe_event_flags_delete+0x54>
40009fa4:	e59f0038 	ldr	r0, [pc, #56]	; 40009fe4 <_txe_event_flags_delete+0x78>
40009fa8:	e5900000 	ldr	r0, [r0]
40009fac:	e3500000 	cmp	r0, #0
40009fb0:	1a000002 	bne	40009fc0 <_txe_event_flags_delete+0x54>
40009fb4:	e59f002c 	ldr	r0, [pc, #44]	; 40009fe8 <_txe_event_flags_delete+0x7c>
40009fb8:	e1550000 	cmp	r5, r0
40009fbc:	1a000001 	bne	40009fc8 <_txe_event_flags_delete+0x5c>
40009fc0:	e3a00013 	mov	r0, #19
40009fc4:	eafffff1 	b	40009f90 <_txe_event_flags_delete+0x24>
40009fc8:	e1a00004 	mov	r0, r4
40009fcc:	eb000849 	bl	4000c0f8 <_tx_event_flags_delete>
40009fd0:	e1a06000 	mov	r6, r0
40009fd4:	e1a00006 	mov	r0, r6
40009fd8:	eaffffec 	b	40009f90 <_txe_event_flags_delete+0x24>
40009fdc:	4456444e 	.word	0x4456444e
40009fe0:	40030e54 	.word	0x40030e54
40009fe4:	40030e4c 	.word	0x40030e4c
40009fe8:	40032994 	.word	0x40032994

40009fec <_txe_event_flags_get>:
40009fec:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009ff0:	e1a04000 	mov	r4, r0
40009ff4:	e1a05001 	mov	r5, r1
40009ff8:	e1a06002 	mov	r6, r2
40009ffc:	e1a08003 	mov	r8, r3
4000a000:	e59d9020 	ldr	r9, [sp, #32]
4000a004:	e3540000 	cmp	r4, #0
4000a008:	0a000003 	beq	4000a01c <_txe_event_flags_get+0x30>
4000a00c:	e5940000 	ldr	r0, [r4]
4000a010:	e59f1084 	ldr	r1, [pc, #132]	; 4000a09c <_txe_event_flags_get+0xb0>
4000a014:	e1500001 	cmp	r0, r1
4000a018:	0a000001 	beq	4000a024 <_txe_event_flags_get+0x38>
4000a01c:	e3a00006 	mov	r0, #6
4000a020:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000a024:	e3580000 	cmp	r8, #0
4000a028:	1a000001 	bne	4000a034 <_txe_event_flags_get+0x48>
4000a02c:	e3a00003 	mov	r0, #3
4000a030:	eafffffa 	b	4000a020 <_txe_event_flags_get+0x34>
4000a034:	e3590000 	cmp	r9, #0
4000a038:	0a00000a 	beq	4000a068 <_txe_event_flags_get+0x7c>
4000a03c:	e59f005c 	ldr	r0, [pc, #92]	; 4000a0a0 <_txe_event_flags_get+0xb4>
4000a040:	e5900000 	ldr	r0, [r0]
4000a044:	e3500000 	cmp	r0, #0
4000a048:	1a000004 	bne	4000a060 <_txe_event_flags_get+0x74>
4000a04c:	e59f0050 	ldr	r0, [pc, #80]	; 4000a0a4 <_txe_event_flags_get+0xb8>
4000a050:	e5900000 	ldr	r0, [r0]
4000a054:	e59f104c 	ldr	r1, [pc, #76]	; 4000a0a8 <_txe_event_flags_get+0xbc>
4000a058:	e1500001 	cmp	r0, r1
4000a05c:	1a000001 	bne	4000a068 <_txe_event_flags_get+0x7c>
4000a060:	e3a00004 	mov	r0, #4
4000a064:	eaffffed 	b	4000a020 <_txe_event_flags_get+0x34>
4000a068:	e3560003 	cmp	r6, #3
4000a06c:	9a000001 	bls	4000a078 <_txe_event_flags_get+0x8c>
4000a070:	e3a00008 	mov	r0, #8
4000a074:	eaffffe9 	b	4000a020 <_txe_event_flags_get+0x34>
4000a078:	e1a03008 	mov	r3, r8
4000a07c:	e1a02006 	mov	r2, r6
4000a080:	e1a01005 	mov	r1, r5
4000a084:	e1a00004 	mov	r0, r4
4000a088:	e58d9000 	str	r9, [sp]
4000a08c:	eb0008ac 	bl	4000c344 <_tx_event_flags_get>
4000a090:	e1a07000 	mov	r7, r0
4000a094:	e1a00007 	mov	r0, r7
4000a098:	eaffffe0 	b	4000a020 <_txe_event_flags_get+0x34>
4000a09c:	4456444e 	.word	0x4456444e
4000a0a0:	40030e4c 	.word	0x40030e4c
4000a0a4:	40030e54 	.word	0x40030e54
4000a0a8:	40032994 	.word	0x40032994

4000a0ac <_txe_event_flags_set>:
4000a0ac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a0b0:	e1a04000 	mov	r4, r0
4000a0b4:	e1a05001 	mov	r5, r1
4000a0b8:	e1a06002 	mov	r6, r2
4000a0bc:	e3540000 	cmp	r4, #0
4000a0c0:	0a000003 	beq	4000a0d4 <_txe_event_flags_set+0x28>
4000a0c4:	e5940000 	ldr	r0, [r4]
4000a0c8:	e59f1040 	ldr	r1, [pc, #64]	; 4000a110 <_txe_event_flags_set+0x64>
4000a0cc:	e1500001 	cmp	r0, r1
4000a0d0:	0a000001 	beq	4000a0dc <_txe_event_flags_set+0x30>
4000a0d4:	e3a00006 	mov	r0, #6
4000a0d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a0dc:	e3560002 	cmp	r6, #2
4000a0e0:	0a000003 	beq	4000a0f4 <_txe_event_flags_set+0x48>
4000a0e4:	e3560000 	cmp	r6, #0
4000a0e8:	0a000001 	beq	4000a0f4 <_txe_event_flags_set+0x48>
4000a0ec:	e3a00008 	mov	r0, #8
4000a0f0:	eafffff8 	b	4000a0d8 <_txe_event_flags_set+0x2c>
4000a0f4:	e1a02006 	mov	r2, r6
4000a0f8:	e1a01005 	mov	r1, r5
4000a0fc:	e1a00004 	mov	r0, r4
4000a100:	eb000943 	bl	4000c614 <_tx_event_flags_set>
4000a104:	e1a07000 	mov	r7, r0
4000a108:	e1a00007 	mov	r0, r7
4000a10c:	eafffff1 	b	4000a0d8 <_txe_event_flags_set+0x2c>
4000a110:	4456444e 	.word	0x4456444e

4000a114 <_txe_mutex_create>:
4000a114:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000a118:	e1a04000 	mov	r4, r0
4000a11c:	e1a05001 	mov	r5, r1
4000a120:	e1a06002 	mov	r6, r2
4000a124:	e1a07003 	mov	r7, r3
4000a128:	e3540000 	cmp	r4, #0
4000a12c:	0a000001 	beq	4000a138 <_txe_mutex_create+0x24>
4000a130:	e3570038 	cmp	r7, #56	; 0x38
4000a134:	0a000001 	beq	4000a140 <_txe_mutex_create+0x2c>
4000a138:	e3a0001c 	mov	r0, #28
4000a13c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000a140:	e10f0000 	mrs	r0, CPSR
4000a144:	e58d0004 	str	r0, [sp, #4]
4000a148:	e59d0004 	ldr	r0, [sp, #4]
4000a14c:	e3808080 	orr	r8, r0, #128	; 0x80
4000a150:	e121f008 	msr	CPSR_c, r8
4000a154:	e59f0114 	ldr	r0, [pc, #276]	; 4000a270 <_txe_mutex_create+0x15c>
4000a158:	e5900000 	ldr	r0, [r0]
4000a15c:	e2800001 	add	r0, r0, #1
4000a160:	e59f1108 	ldr	r1, [pc, #264]	; 4000a270 <_txe_mutex_create+0x15c>
4000a164:	e5810000 	str	r0, [r1]
4000a168:	e59d0004 	ldr	r0, [sp, #4]
4000a16c:	e121f000 	msr	CPSR_c, r0
4000a170:	e59f00fc 	ldr	r0, [pc, #252]	; 4000a274 <_txe_mutex_create+0x160>
4000a174:	e590a000 	ldr	sl, [r0]
4000a178:	e3a09000 	mov	r9, #0
4000a17c:	ea000004 	b	4000a194 <_txe_mutex_create+0x80>
4000a180:	e154000a 	cmp	r4, sl
4000a184:	1a000000 	bne	4000a18c <_txe_mutex_create+0x78>
4000a188:	ea000005 	b	4000a1a4 <_txe_mutex_create+0x90>
4000a18c:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
4000a190:	e2899001 	add	r9, r9, #1
4000a194:	e59f00dc 	ldr	r0, [pc, #220]	; 4000a278 <_txe_mutex_create+0x164>
4000a198:	e5900000 	ldr	r0, [r0]
4000a19c:	e1590000 	cmp	r9, r0
4000a1a0:	3afffff6 	bcc	4000a180 <_txe_mutex_create+0x6c>
4000a1a4:	e1a00000 	nop			; (mov r0, r0)
4000a1a8:	e10f0000 	mrs	r0, CPSR
4000a1ac:	e58d0004 	str	r0, [sp, #4]
4000a1b0:	e59d0004 	ldr	r0, [sp, #4]
4000a1b4:	e3808080 	orr	r8, r0, #128	; 0x80
4000a1b8:	e121f008 	msr	CPSR_c, r8
4000a1bc:	e59f00ac 	ldr	r0, [pc, #172]	; 4000a270 <_txe_mutex_create+0x15c>
4000a1c0:	e5900000 	ldr	r0, [r0]
4000a1c4:	e2400001 	sub	r0, r0, #1
4000a1c8:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a270 <_txe_mutex_create+0x15c>
4000a1cc:	e5810000 	str	r0, [r1]
4000a1d0:	e59d0004 	ldr	r0, [sp, #4]
4000a1d4:	e121f000 	msr	CPSR_c, r0
4000a1d8:	eb0014a7 	bl	4000f47c <_tx_thread_system_preempt_check>
4000a1dc:	e154000a 	cmp	r4, sl
4000a1e0:	1a000001 	bne	4000a1ec <_txe_mutex_create+0xd8>
4000a1e4:	e3a0001c 	mov	r0, #28
4000a1e8:	eaffffd3 	b	4000a13c <_txe_mutex_create+0x28>
4000a1ec:	e3560001 	cmp	r6, #1
4000a1f0:	0a000003 	beq	4000a204 <_txe_mutex_create+0xf0>
4000a1f4:	e3560000 	cmp	r6, #0
4000a1f8:	0a000001 	beq	4000a204 <_txe_mutex_create+0xf0>
4000a1fc:	e3a0001f 	mov	r0, #31
4000a200:	eaffffcd 	b	4000a13c <_txe_mutex_create+0x28>
4000a204:	e59f0070 	ldr	r0, [pc, #112]	; 4000a27c <_txe_mutex_create+0x168>
4000a208:	e590b000 	ldr	fp, [r0]
4000a20c:	e35b0000 	cmp	fp, #0
4000a210:	0a000008 	beq	4000a238 <_txe_mutex_create+0x124>
4000a214:	e59f0064 	ldr	r0, [pc, #100]	; 4000a280 <_txe_mutex_create+0x16c>
4000a218:	e15b0000 	cmp	fp, r0
4000a21c:	0a000003 	beq	4000a230 <_txe_mutex_create+0x11c>
4000a220:	e59f005c 	ldr	r0, [pc, #92]	; 4000a284 <_txe_mutex_create+0x170>
4000a224:	e5900000 	ldr	r0, [r0]
4000a228:	e3500000 	cmp	r0, #0
4000a22c:	0a000008 	beq	4000a254 <_txe_mutex_create+0x140>
4000a230:	e3a00013 	mov	r0, #19
4000a234:	eaffffc0 	b	4000a13c <_txe_mutex_create+0x28>
4000a238:	e59f0044 	ldr	r0, [pc, #68]	; 4000a284 <_txe_mutex_create+0x170>
4000a23c:	e5900000 	ldr	r0, [r0]
4000a240:	e59f1040 	ldr	r1, [pc, #64]	; 4000a288 <_txe_mutex_create+0x174>
4000a244:	e1500001 	cmp	r0, r1
4000a248:	2a000001 	bcs	4000a254 <_txe_mutex_create+0x140>
4000a24c:	e3a00013 	mov	r0, #19
4000a250:	eaffffb9 	b	4000a13c <_txe_mutex_create+0x28>
4000a254:	e1a02006 	mov	r2, r6
4000a258:	e1a01005 	mov	r1, r5
4000a25c:	e1a00004 	mov	r0, r4
4000a260:	eb000a8f 	bl	4000cca4 <_tx_mutex_create>
4000a264:	e58d0000 	str	r0, [sp]
4000a268:	e59d0000 	ldr	r0, [sp]
4000a26c:	eaffffb2 	b	4000a13c <_txe_mutex_create+0x28>
4000a270:	40030e70 	.word	0x40030e70
4000a274:	40030ee0 	.word	0x40030ee0
4000a278:	40030ee4 	.word	0x40030ee4
4000a27c:	40030e54 	.word	0x40030e54
4000a280:	40032994 	.word	0x40032994
4000a284:	40030e4c 	.word	0x40030e4c
4000a288:	f0f0f0f0 	.word	0xf0f0f0f0

4000a28c <_txe_mutex_delete>:
4000a28c:	e92d4070 	push	{r4, r5, r6, lr}
4000a290:	e1a04000 	mov	r4, r0
4000a294:	e3540000 	cmp	r4, #0
4000a298:	0a000003 	beq	4000a2ac <_txe_mutex_delete+0x20>
4000a29c:	e5940000 	ldr	r0, [r4]
4000a2a0:	e59f1054 	ldr	r1, [pc, #84]	; 4000a2fc <_txe_mutex_delete+0x70>
4000a2a4:	e1500001 	cmp	r0, r1
4000a2a8:	0a000001 	beq	4000a2b4 <_txe_mutex_delete+0x28>
4000a2ac:	e3a0001c 	mov	r0, #28
4000a2b0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a2b4:	e59f0044 	ldr	r0, [pc, #68]	; 4000a300 <_txe_mutex_delete+0x74>
4000a2b8:	e5905000 	ldr	r5, [r0]
4000a2bc:	e3550000 	cmp	r5, #0
4000a2c0:	0a000006 	beq	4000a2e0 <_txe_mutex_delete+0x54>
4000a2c4:	e59f0038 	ldr	r0, [pc, #56]	; 4000a304 <_txe_mutex_delete+0x78>
4000a2c8:	e5900000 	ldr	r0, [r0]
4000a2cc:	e3500000 	cmp	r0, #0
4000a2d0:	1a000002 	bne	4000a2e0 <_txe_mutex_delete+0x54>
4000a2d4:	e59f002c 	ldr	r0, [pc, #44]	; 4000a308 <_txe_mutex_delete+0x7c>
4000a2d8:	e1550000 	cmp	r5, r0
4000a2dc:	1a000001 	bne	4000a2e8 <_txe_mutex_delete+0x5c>
4000a2e0:	e3a00013 	mov	r0, #19
4000a2e4:	eafffff1 	b	4000a2b0 <_txe_mutex_delete+0x24>
4000a2e8:	e1a00004 	mov	r0, r4
4000a2ec:	eb000ae2 	bl	4000ce7c <_tx_mutex_delete>
4000a2f0:	e1a06000 	mov	r6, r0
4000a2f4:	e1a00006 	mov	r0, r6
4000a2f8:	eaffffec 	b	4000a2b0 <_txe_mutex_delete+0x24>
4000a2fc:	4d555445 	.word	0x4d555445
4000a300:	40030e54 	.word	0x40030e54
4000a304:	40030e4c 	.word	0x40030e4c
4000a308:	40032994 	.word	0x40032994

4000a30c <_txe_mutex_get>:
4000a30c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a310:	e1a04000 	mov	r4, r0
4000a314:	e1a05001 	mov	r5, r1
4000a318:	e3540000 	cmp	r4, #0
4000a31c:	0a000003 	beq	4000a330 <_txe_mutex_get+0x24>
4000a320:	e5940000 	ldr	r0, [r4]
4000a324:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a3cc <_txe_mutex_get+0xc0>
4000a328:	e1500001 	cmp	r0, r1
4000a32c:	0a000001 	beq	4000a338 <_txe_mutex_get+0x2c>
4000a330:	e3a0001c 	mov	r0, #28
4000a334:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a338:	e59f0090 	ldr	r0, [pc, #144]	; 4000a3d0 <_txe_mutex_get+0xc4>
4000a33c:	e5906000 	ldr	r6, [r0]
4000a340:	e3550000 	cmp	r5, #0
4000a344:	0a000008 	beq	4000a36c <_txe_mutex_get+0x60>
4000a348:	e59f0084 	ldr	r0, [pc, #132]	; 4000a3d4 <_txe_mutex_get+0xc8>
4000a34c:	e5900000 	ldr	r0, [r0]
4000a350:	e3500000 	cmp	r0, #0
4000a354:	1a000002 	bne	4000a364 <_txe_mutex_get+0x58>
4000a358:	e59f0078 	ldr	r0, [pc, #120]	; 4000a3d8 <_txe_mutex_get+0xcc>
4000a35c:	e1560000 	cmp	r6, r0
4000a360:	1a000001 	bne	4000a36c <_txe_mutex_get+0x60>
4000a364:	e3a00004 	mov	r0, #4
4000a368:	eafffff1 	b	4000a334 <_txe_mutex_get+0x28>
4000a36c:	e3560000 	cmp	r6, #0
4000a370:	0a000008 	beq	4000a398 <_txe_mutex_get+0x8c>
4000a374:	e59f005c 	ldr	r0, [pc, #92]	; 4000a3d8 <_txe_mutex_get+0xcc>
4000a378:	e1560000 	cmp	r6, r0
4000a37c:	0a000003 	beq	4000a390 <_txe_mutex_get+0x84>
4000a380:	e59f004c 	ldr	r0, [pc, #76]	; 4000a3d4 <_txe_mutex_get+0xc8>
4000a384:	e5900000 	ldr	r0, [r0]
4000a388:	e3500000 	cmp	r0, #0
4000a38c:	0a000008 	beq	4000a3b4 <_txe_mutex_get+0xa8>
4000a390:	e3a00013 	mov	r0, #19
4000a394:	eaffffe6 	b	4000a334 <_txe_mutex_get+0x28>
4000a398:	e59f0034 	ldr	r0, [pc, #52]	; 4000a3d4 <_txe_mutex_get+0xc8>
4000a39c:	e5900000 	ldr	r0, [r0]
4000a3a0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a3dc <_txe_mutex_get+0xd0>
4000a3a4:	e1500001 	cmp	r0, r1
4000a3a8:	2a000001 	bcs	4000a3b4 <_txe_mutex_get+0xa8>
4000a3ac:	e3a00013 	mov	r0, #19
4000a3b0:	eaffffdf 	b	4000a334 <_txe_mutex_get+0x28>
4000a3b4:	e1a01005 	mov	r1, r5
4000a3b8:	e1a00004 	mov	r0, r4
4000a3bc:	eb000b65 	bl	4000d158 <_tx_mutex_get>
4000a3c0:	e1a07000 	mov	r7, r0
4000a3c4:	e1a00007 	mov	r0, r7
4000a3c8:	eaffffd9 	b	4000a334 <_txe_mutex_get+0x28>
4000a3cc:	4d555445 	.word	0x4d555445
4000a3d0:	40030e54 	.word	0x40030e54
4000a3d4:	40030e4c 	.word	0x40030e4c
4000a3d8:	40032994 	.word	0x40032994
4000a3dc:	f0f0f0f0 	.word	0xf0f0f0f0

4000a3e0 <_txe_mutex_put>:
4000a3e0:	e92d4070 	push	{r4, r5, r6, lr}
4000a3e4:	e1a04000 	mov	r4, r0
4000a3e8:	e3540000 	cmp	r4, #0
4000a3ec:	0a000003 	beq	4000a400 <_txe_mutex_put+0x20>
4000a3f0:	e5940000 	ldr	r0, [r4]
4000a3f4:	e59f1070 	ldr	r1, [pc, #112]	; 4000a46c <_txe_mutex_put+0x8c>
4000a3f8:	e1500001 	cmp	r0, r1
4000a3fc:	0a000001 	beq	4000a408 <_txe_mutex_put+0x28>
4000a400:	e3a0001c 	mov	r0, #28
4000a404:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a408:	e59f0060 	ldr	r0, [pc, #96]	; 4000a470 <_txe_mutex_put+0x90>
4000a40c:	e5905000 	ldr	r5, [r0]
4000a410:	e3550000 	cmp	r5, #0
4000a414:	0a000008 	beq	4000a43c <_txe_mutex_put+0x5c>
4000a418:	e59f0054 	ldr	r0, [pc, #84]	; 4000a474 <_txe_mutex_put+0x94>
4000a41c:	e1550000 	cmp	r5, r0
4000a420:	0a000003 	beq	4000a434 <_txe_mutex_put+0x54>
4000a424:	e59f004c 	ldr	r0, [pc, #76]	; 4000a478 <_txe_mutex_put+0x98>
4000a428:	e5900000 	ldr	r0, [r0]
4000a42c:	e3500000 	cmp	r0, #0
4000a430:	0a000008 	beq	4000a458 <_txe_mutex_put+0x78>
4000a434:	e3a00013 	mov	r0, #19
4000a438:	eafffff1 	b	4000a404 <_txe_mutex_put+0x24>
4000a43c:	e59f0034 	ldr	r0, [pc, #52]	; 4000a478 <_txe_mutex_put+0x98>
4000a440:	e5900000 	ldr	r0, [r0]
4000a444:	e59f1030 	ldr	r1, [pc, #48]	; 4000a47c <_txe_mutex_put+0x9c>
4000a448:	e1500001 	cmp	r0, r1
4000a44c:	2a000001 	bcs	4000a458 <_txe_mutex_put+0x78>
4000a450:	e3a00013 	mov	r0, #19
4000a454:	eaffffea 	b	4000a404 <_txe_mutex_put+0x24>
4000a458:	e1a00004 	mov	r0, r4
4000a45c:	eb000c1c 	bl	4000d4d4 <_tx_mutex_put>
4000a460:	e1a06000 	mov	r6, r0
4000a464:	e1a00006 	mov	r0, r6
4000a468:	eaffffe5 	b	4000a404 <_txe_mutex_put+0x24>
4000a46c:	4d555445 	.word	0x4d555445
4000a470:	40030e54 	.word	0x40030e54
4000a474:	40032994 	.word	0x40032994
4000a478:	40030e4c 	.word	0x40030e4c
4000a47c:	f0f0f0f0 	.word	0xf0f0f0f0

4000a480 <_txe_queue_create>:
4000a480:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a484:	e24dd014 	sub	sp, sp, #20
4000a488:	e1a04000 	mov	r4, r0
4000a48c:	e1a05002 	mov	r5, r2
4000a490:	e1a06003 	mov	r6, r3
4000a494:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a498:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a49c:	e3540000 	cmp	r4, #0
4000a4a0:	0a000001 	beq	4000a4ac <_txe_queue_create+0x2c>
4000a4a4:	e358003c 	cmp	r8, #60	; 0x3c
4000a4a8:	0a000002 	beq	4000a4b8 <_txe_queue_create+0x38>
4000a4ac:	e3a00009 	mov	r0, #9
4000a4b0:	e28dd024 	add	sp, sp, #36	; 0x24
4000a4b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a4b8:	e10f9000 	mrs	r9, CPSR
4000a4bc:	e389a080 	orr	sl, r9, #128	; 0x80
4000a4c0:	e121f00a 	msr	CPSR_c, sl
4000a4c4:	e59f0150 	ldr	r0, [pc, #336]	; 4000a61c <_txe_queue_create+0x19c>
4000a4c8:	e5900000 	ldr	r0, [r0]
4000a4cc:	e2800001 	add	r0, r0, #1
4000a4d0:	e59f1144 	ldr	r1, [pc, #324]	; 4000a61c <_txe_queue_create+0x19c>
4000a4d4:	e5810000 	str	r0, [r1]
4000a4d8:	e121f009 	msr	CPSR_c, r9
4000a4dc:	e59f013c 	ldr	r0, [pc, #316]	; 4000a620 <_txe_queue_create+0x1a0>
4000a4e0:	e5900000 	ldr	r0, [r0]
4000a4e4:	e58d0008 	str	r0, [sp, #8]
4000a4e8:	e3a00000 	mov	r0, #0
4000a4ec:	e58d000c 	str	r0, [sp, #12]
4000a4f0:	ea000009 	b	4000a51c <_txe_queue_create+0x9c>
4000a4f4:	e59d0008 	ldr	r0, [sp, #8]
4000a4f8:	e1540000 	cmp	r4, r0
4000a4fc:	1a000000 	bne	4000a504 <_txe_queue_create+0x84>
4000a500:	ea00000a 	b	4000a530 <_txe_queue_create+0xb0>
4000a504:	e59d0008 	ldr	r0, [sp, #8]
4000a508:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a50c:	e58d0008 	str	r0, [sp, #8]
4000a510:	e59d000c 	ldr	r0, [sp, #12]
4000a514:	e2800001 	add	r0, r0, #1
4000a518:	e58d000c 	str	r0, [sp, #12]
4000a51c:	e59f1100 	ldr	r1, [pc, #256]	; 4000a624 <_txe_queue_create+0x1a4>
4000a520:	e59d000c 	ldr	r0, [sp, #12]
4000a524:	e5911000 	ldr	r1, [r1]
4000a528:	e1500001 	cmp	r0, r1
4000a52c:	3afffff0 	bcc	4000a4f4 <_txe_queue_create+0x74>
4000a530:	e1a00000 	nop			; (mov r0, r0)
4000a534:	e10f9000 	mrs	r9, CPSR
4000a538:	e389a080 	orr	sl, r9, #128	; 0x80
4000a53c:	e121f00a 	msr	CPSR_c, sl
4000a540:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a61c <_txe_queue_create+0x19c>
4000a544:	e5900000 	ldr	r0, [r0]
4000a548:	e2400001 	sub	r0, r0, #1
4000a54c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a61c <_txe_queue_create+0x19c>
4000a550:	e5810000 	str	r0, [r1]
4000a554:	e121f009 	msr	CPSR_c, r9
4000a558:	eb0013c7 	bl	4000f47c <_tx_thread_system_preempt_check>
4000a55c:	e59d0008 	ldr	r0, [sp, #8]
4000a560:	e1540000 	cmp	r4, r0
4000a564:	1a000001 	bne	4000a570 <_txe_queue_create+0xf0>
4000a568:	e3a00009 	mov	r0, #9
4000a56c:	eaffffcf 	b	4000a4b0 <_txe_queue_create+0x30>
4000a570:	e3560000 	cmp	r6, #0
4000a574:	1a000001 	bne	4000a580 <_txe_queue_create+0x100>
4000a578:	e3a00003 	mov	r0, #3
4000a57c:	eaffffcb 	b	4000a4b0 <_txe_queue_create+0x30>
4000a580:	e3550000 	cmp	r5, #0
4000a584:	0a000001 	beq	4000a590 <_txe_queue_create+0x110>
4000a588:	e3550010 	cmp	r5, #16
4000a58c:	9a000001 	bls	4000a598 <_txe_queue_create+0x118>
4000a590:	e3a00005 	mov	r0, #5
4000a594:	eaffffc5 	b	4000a4b0 <_txe_queue_create+0x30>
4000a598:	e1550127 	cmp	r5, r7, lsr #2
4000a59c:	9a000001 	bls	4000a5a8 <_txe_queue_create+0x128>
4000a5a0:	e3a00005 	mov	r0, #5
4000a5a4:	eaffffc1 	b	4000a4b0 <_txe_queue_create+0x30>
4000a5a8:	e59f0078 	ldr	r0, [pc, #120]	; 4000a628 <_txe_queue_create+0x1a8>
4000a5ac:	e590b000 	ldr	fp, [r0]
4000a5b0:	e35b0000 	cmp	fp, #0
4000a5b4:	0a000008 	beq	4000a5dc <_txe_queue_create+0x15c>
4000a5b8:	e59f006c 	ldr	r0, [pc, #108]	; 4000a62c <_txe_queue_create+0x1ac>
4000a5bc:	e15b0000 	cmp	fp, r0
4000a5c0:	0a000003 	beq	4000a5d4 <_txe_queue_create+0x154>
4000a5c4:	e59f0064 	ldr	r0, [pc, #100]	; 4000a630 <_txe_queue_create+0x1b0>
4000a5c8:	e5900000 	ldr	r0, [r0]
4000a5cc:	e3500000 	cmp	r0, #0
4000a5d0:	0a000008 	beq	4000a5f8 <_txe_queue_create+0x178>
4000a5d4:	e3a00013 	mov	r0, #19
4000a5d8:	eaffffb4 	b	4000a4b0 <_txe_queue_create+0x30>
4000a5dc:	e59f004c 	ldr	r0, [pc, #76]	; 4000a630 <_txe_queue_create+0x1b0>
4000a5e0:	e5900000 	ldr	r0, [r0]
4000a5e4:	e59f1048 	ldr	r1, [pc, #72]	; 4000a634 <_txe_queue_create+0x1b4>
4000a5e8:	e1500001 	cmp	r0, r1
4000a5ec:	2a000001 	bcs	4000a5f8 <_txe_queue_create+0x178>
4000a5f0:	e3a00013 	mov	r0, #19
4000a5f4:	eaffffad 	b	4000a4b0 <_txe_queue_create+0x30>
4000a5f8:	e1a03006 	mov	r3, r6
4000a5fc:	e1a02005 	mov	r2, r5
4000a600:	e58d7000 	str	r7, [sp]
4000a604:	e1a00004 	mov	r0, r4
4000a608:	e59d1018 	ldr	r1, [sp, #24]
4000a60c:	eb000ce5 	bl	4000d9a8 <_tx_queue_create>
4000a610:	e58d0010 	str	r0, [sp, #16]
4000a614:	e59d0010 	ldr	r0, [sp, #16]
4000a618:	eaffffa4 	b	4000a4b0 <_txe_queue_create+0x30>
4000a61c:	40030e70 	.word	0x40030e70
4000a620:	40030ed0 	.word	0x40030ed0
4000a624:	40030ed4 	.word	0x40030ed4
4000a628:	40030e54 	.word	0x40030e54
4000a62c:	40032994 	.word	0x40032994
4000a630:	40030e4c 	.word	0x40030e4c
4000a634:	f0f0f0f0 	.word	0xf0f0f0f0

4000a638 <_txe_queue_front_send>:
4000a638:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a63c:	e1a04000 	mov	r4, r0
4000a640:	e1a05001 	mov	r5, r1
4000a644:	e1a06002 	mov	r6, r2
4000a648:	e3540000 	cmp	r4, #0
4000a64c:	0a000003 	beq	4000a660 <_txe_queue_front_send+0x28>
4000a650:	e5940000 	ldr	r0, [r4]
4000a654:	e59f106c 	ldr	r1, [pc, #108]	; 4000a6c8 <_txe_queue_front_send+0x90>
4000a658:	e1500001 	cmp	r0, r1
4000a65c:	0a000001 	beq	4000a668 <_txe_queue_front_send+0x30>
4000a660:	e3a00009 	mov	r0, #9
4000a664:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a668:	e3550000 	cmp	r5, #0
4000a66c:	1a000001 	bne	4000a678 <_txe_queue_front_send+0x40>
4000a670:	e3a00003 	mov	r0, #3
4000a674:	eafffffa 	b	4000a664 <_txe_queue_front_send+0x2c>
4000a678:	e3560000 	cmp	r6, #0
4000a67c:	0a00000a 	beq	4000a6ac <_txe_queue_front_send+0x74>
4000a680:	e59f0044 	ldr	r0, [pc, #68]	; 4000a6cc <_txe_queue_front_send+0x94>
4000a684:	e5900000 	ldr	r0, [r0]
4000a688:	e3500000 	cmp	r0, #0
4000a68c:	1a000004 	bne	4000a6a4 <_txe_queue_front_send+0x6c>
4000a690:	e59f0038 	ldr	r0, [pc, #56]	; 4000a6d0 <_txe_queue_front_send+0x98>
4000a694:	e5900000 	ldr	r0, [r0]
4000a698:	e59f1034 	ldr	r1, [pc, #52]	; 4000a6d4 <_txe_queue_front_send+0x9c>
4000a69c:	e1500001 	cmp	r0, r1
4000a6a0:	1a000001 	bne	4000a6ac <_txe_queue_front_send+0x74>
4000a6a4:	e3a00004 	mov	r0, #4
4000a6a8:	eaffffed 	b	4000a664 <_txe_queue_front_send+0x2c>
4000a6ac:	e1a02006 	mov	r2, r6
4000a6b0:	e1a01005 	mov	r1, r5
4000a6b4:	e1a00004 	mov	r0, r4
4000a6b8:	eb000d3d 	bl	4000dbb4 <_tx_queue_front_send>
4000a6bc:	e1a07000 	mov	r7, r0
4000a6c0:	e1a00007 	mov	r0, r7
4000a6c4:	eaffffe6 	b	4000a664 <_txe_queue_front_send+0x2c>
4000a6c8:	51554555 	.word	0x51554555
4000a6cc:	40030e4c 	.word	0x40030e4c
4000a6d0:	40030e54 	.word	0x40030e54
4000a6d4:	40032994 	.word	0x40032994

4000a6d8 <_txe_queue_receive>:
4000a6d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a6dc:	e1a04000 	mov	r4, r0
4000a6e0:	e1a05001 	mov	r5, r1
4000a6e4:	e1a06002 	mov	r6, r2
4000a6e8:	e3540000 	cmp	r4, #0
4000a6ec:	0a000003 	beq	4000a700 <_txe_queue_receive+0x28>
4000a6f0:	e5940000 	ldr	r0, [r4]
4000a6f4:	e59f106c 	ldr	r1, [pc, #108]	; 4000a768 <_txe_queue_receive+0x90>
4000a6f8:	e1500001 	cmp	r0, r1
4000a6fc:	0a000001 	beq	4000a708 <_txe_queue_receive+0x30>
4000a700:	e3a00009 	mov	r0, #9
4000a704:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a708:	e3550000 	cmp	r5, #0
4000a70c:	1a000001 	bne	4000a718 <_txe_queue_receive+0x40>
4000a710:	e3a00003 	mov	r0, #3
4000a714:	eafffffa 	b	4000a704 <_txe_queue_receive+0x2c>
4000a718:	e3560000 	cmp	r6, #0
4000a71c:	0a00000a 	beq	4000a74c <_txe_queue_receive+0x74>
4000a720:	e59f0044 	ldr	r0, [pc, #68]	; 4000a76c <_txe_queue_receive+0x94>
4000a724:	e5900000 	ldr	r0, [r0]
4000a728:	e3500000 	cmp	r0, #0
4000a72c:	1a000004 	bne	4000a744 <_txe_queue_receive+0x6c>
4000a730:	e59f0038 	ldr	r0, [pc, #56]	; 4000a770 <_txe_queue_receive+0x98>
4000a734:	e5900000 	ldr	r0, [r0]
4000a738:	e59f1034 	ldr	r1, [pc, #52]	; 4000a774 <_txe_queue_receive+0x9c>
4000a73c:	e1500001 	cmp	r0, r1
4000a740:	1a000001 	bne	4000a74c <_txe_queue_receive+0x74>
4000a744:	e3a00004 	mov	r0, #4
4000a748:	eaffffed 	b	4000a704 <_txe_queue_receive+0x2c>
4000a74c:	e1a02006 	mov	r2, r6
4000a750:	e1a01005 	mov	r1, r5
4000a754:	e1a00004 	mov	r0, r4
4000a758:	eb000e04 	bl	4000df70 <_tx_queue_receive>
4000a75c:	e1a07000 	mov	r7, r0
4000a760:	e1a00007 	mov	r0, r7
4000a764:	eaffffe6 	b	4000a704 <_txe_queue_receive+0x2c>
4000a768:	51554555 	.word	0x51554555
4000a76c:	40030e4c 	.word	0x40030e4c
4000a770:	40030e54 	.word	0x40030e54
4000a774:	40032994 	.word	0x40032994

4000a778 <_txe_queue_send>:
4000a778:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a77c:	e1a04000 	mov	r4, r0
4000a780:	e1a05001 	mov	r5, r1
4000a784:	e1a06002 	mov	r6, r2
4000a788:	e3540000 	cmp	r4, #0
4000a78c:	0a000003 	beq	4000a7a0 <_txe_queue_send+0x28>
4000a790:	e5940000 	ldr	r0, [r4]
4000a794:	e59f106c 	ldr	r1, [pc, #108]	; 4000a808 <_txe_queue_send+0x90>
4000a798:	e1500001 	cmp	r0, r1
4000a79c:	0a000001 	beq	4000a7a8 <_txe_queue_send+0x30>
4000a7a0:	e3a00009 	mov	r0, #9
4000a7a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a7a8:	e3550000 	cmp	r5, #0
4000a7ac:	1a000001 	bne	4000a7b8 <_txe_queue_send+0x40>
4000a7b0:	e3a00003 	mov	r0, #3
4000a7b4:	eafffffa 	b	4000a7a4 <_txe_queue_send+0x2c>
4000a7b8:	e3560000 	cmp	r6, #0
4000a7bc:	0a00000a 	beq	4000a7ec <_txe_queue_send+0x74>
4000a7c0:	e59f0044 	ldr	r0, [pc, #68]	; 4000a80c <_txe_queue_send+0x94>
4000a7c4:	e5900000 	ldr	r0, [r0]
4000a7c8:	e3500000 	cmp	r0, #0
4000a7cc:	1a000004 	bne	4000a7e4 <_txe_queue_send+0x6c>
4000a7d0:	e59f0038 	ldr	r0, [pc, #56]	; 4000a810 <_txe_queue_send+0x98>
4000a7d4:	e5900000 	ldr	r0, [r0]
4000a7d8:	e59f1034 	ldr	r1, [pc, #52]	; 4000a814 <_txe_queue_send+0x9c>
4000a7dc:	e1500001 	cmp	r0, r1
4000a7e0:	1a000001 	bne	4000a7ec <_txe_queue_send+0x74>
4000a7e4:	e3a00004 	mov	r0, #4
4000a7e8:	eaffffed 	b	4000a7a4 <_txe_queue_send+0x2c>
4000a7ec:	e1a02006 	mov	r2, r6
4000a7f0:	e1a01005 	mov	r1, r5
4000a7f4:	e1a00004 	mov	r0, r4
4000a7f8:	eb000ef4 	bl	4000e3d0 <_tx_queue_send>
4000a7fc:	e1a07000 	mov	r7, r0
4000a800:	e1a00007 	mov	r0, r7
4000a804:	eaffffe6 	b	4000a7a4 <_txe_queue_send+0x2c>
4000a808:	51554555 	.word	0x51554555
4000a80c:	40030e4c 	.word	0x40030e4c
4000a810:	40030e54 	.word	0x40030e54
4000a814:	40032994 	.word	0x40032994

4000a818 <_txe_thread_create>:
4000a818:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a81c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a820:	e1a04000 	mov	r4, r0
4000a824:	e1a05002 	mov	r5, r2
4000a828:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a82c:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a830:	e3540000 	cmp	r4, #0
4000a834:	0a000002 	beq	4000a844 <_txe_thread_create+0x2c>
4000a838:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a83c:	e35000a8 	cmp	r0, #168	; 0xa8
4000a840:	0a000002 	beq	4000a850 <_txe_thread_create+0x38>
4000a844:	e3a0000e 	mov	r0, #14
4000a848:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a84c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a850:	e10f0000 	mrs	r0, CPSR
4000a854:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a858:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a85c:	e3800080 	orr	r0, r0, #128	; 0x80
4000a860:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a864:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a868:	e121f000 	msr	CPSR_c, r0
4000a86c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000aa60 <_txe_thread_create+0x248>
4000a870:	e5900000 	ldr	r0, [r0]
4000a874:	e2800001 	add	r0, r0, #1
4000a878:	e59f11e0 	ldr	r1, [pc, #480]	; 4000aa60 <_txe_thread_create+0x248>
4000a87c:	e5810000 	str	r0, [r1]
4000a880:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a884:	e121f000 	msr	CPSR_c, r0
4000a888:	e59f01d4 	ldr	r0, [pc, #468]	; 4000aa64 <_txe_thread_create+0x24c>
4000a88c:	e5900000 	ldr	r0, [r0]
4000a890:	e58d0018 	str	r0, [sp, #24]
4000a894:	e2470001 	sub	r0, r7, #1
4000a898:	e080b006 	add	fp, r0, r6
4000a89c:	e3a00000 	mov	r0, #0
4000a8a0:	e58d001c 	str	r0, [sp, #28]
4000a8a4:	ea00001d 	b	4000a920 <_txe_thread_create+0x108>
4000a8a8:	e59d0018 	ldr	r0, [sp, #24]
4000a8ac:	e1540000 	cmp	r4, r0
4000a8b0:	1a000000 	bne	4000a8b8 <_txe_thread_create+0xa0>
4000a8b4:	ea00001e 	b	4000a934 <_txe_thread_create+0x11c>
4000a8b8:	e59d0018 	ldr	r0, [sp, #24]
4000a8bc:	e590000c 	ldr	r0, [r0, #12]
4000a8c0:	e1500006 	cmp	r0, r6
4000a8c4:	8a000005 	bhi	4000a8e0 <_txe_thread_create+0xc8>
4000a8c8:	e59d0018 	ldr	r0, [sp, #24]
4000a8cc:	e5900010 	ldr	r0, [r0, #16]
4000a8d0:	e1500006 	cmp	r0, r6
4000a8d4:	9a000001 	bls	4000a8e0 <_txe_thread_create+0xc8>
4000a8d8:	e3a06000 	mov	r6, #0
4000a8dc:	ea000014 	b	4000a934 <_txe_thread_create+0x11c>
4000a8e0:	e59d0018 	ldr	r0, [sp, #24]
4000a8e4:	e590000c 	ldr	r0, [r0, #12]
4000a8e8:	e150000b 	cmp	r0, fp
4000a8ec:	8a000005 	bhi	4000a908 <_txe_thread_create+0xf0>
4000a8f0:	e59d0018 	ldr	r0, [sp, #24]
4000a8f4:	e5900010 	ldr	r0, [r0, #16]
4000a8f8:	e150000b 	cmp	r0, fp
4000a8fc:	9a000001 	bls	4000a908 <_txe_thread_create+0xf0>
4000a900:	e3a06000 	mov	r6, #0
4000a904:	ea00000a 	b	4000a934 <_txe_thread_create+0x11c>
4000a908:	e59d0018 	ldr	r0, [sp, #24]
4000a90c:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a910:	e58d0018 	str	r0, [sp, #24]
4000a914:	e59d001c 	ldr	r0, [sp, #28]
4000a918:	e2800001 	add	r0, r0, #1
4000a91c:	e58d001c 	str	r0, [sp, #28]
4000a920:	e59f1140 	ldr	r1, [pc, #320]	; 4000aa68 <_txe_thread_create+0x250>
4000a924:	e59d001c 	ldr	r0, [sp, #28]
4000a928:	e5911000 	ldr	r1, [r1]
4000a92c:	e1500001 	cmp	r0, r1
4000a930:	3affffdc 	bcc	4000a8a8 <_txe_thread_create+0x90>
4000a934:	e1a00000 	nop			; (mov r0, r0)
4000a938:	e10f0000 	mrs	r0, CPSR
4000a93c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a940:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a944:	e3800080 	orr	r0, r0, #128	; 0x80
4000a948:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a94c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a950:	e121f000 	msr	CPSR_c, r0
4000a954:	e59f0104 	ldr	r0, [pc, #260]	; 4000aa60 <_txe_thread_create+0x248>
4000a958:	e5900000 	ldr	r0, [r0]
4000a95c:	e2400001 	sub	r0, r0, #1
4000a960:	e59f10f8 	ldr	r1, [pc, #248]	; 4000aa60 <_txe_thread_create+0x248>
4000a964:	e5810000 	str	r0, [r1]
4000a968:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a96c:	e121f000 	msr	CPSR_c, r0
4000a970:	eb0012c1 	bl	4000f47c <_tx_thread_system_preempt_check>
4000a974:	e59d0018 	ldr	r0, [sp, #24]
4000a978:	e1540000 	cmp	r4, r0
4000a97c:	1a000001 	bne	4000a988 <_txe_thread_create+0x170>
4000a980:	e3a0000e 	mov	r0, #14
4000a984:	eaffffaf 	b	4000a848 <_txe_thread_create+0x30>
4000a988:	e3560000 	cmp	r6, #0
4000a98c:	0a000001 	beq	4000a998 <_txe_thread_create+0x180>
4000a990:	e3550000 	cmp	r5, #0
4000a994:	1a000001 	bne	4000a9a0 <_txe_thread_create+0x188>
4000a998:	e3a00003 	mov	r0, #3
4000a99c:	eaffffa9 	b	4000a848 <_txe_thread_create+0x30>
4000a9a0:	e35700c8 	cmp	r7, #200	; 0xc8
4000a9a4:	2a000001 	bcs	4000a9b0 <_txe_thread_create+0x198>
4000a9a8:	e3a00005 	mov	r0, #5
4000a9ac:	eaffffa5 	b	4000a848 <_txe_thread_create+0x30>
4000a9b0:	e3580020 	cmp	r8, #32
4000a9b4:	3a000001 	bcc	4000a9c0 <_txe_thread_create+0x1a8>
4000a9b8:	e3a0000f 	mov	r0, #15
4000a9bc:	eaffffa1 	b	4000a848 <_txe_thread_create+0x30>
4000a9c0:	e1590008 	cmp	r9, r8
4000a9c4:	9a000001 	bls	4000a9d0 <_txe_thread_create+0x1b8>
4000a9c8:	e3a00018 	mov	r0, #24
4000a9cc:	eaffff9d 	b	4000a848 <_txe_thread_create+0x30>
4000a9d0:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a9d4:	e3500001 	cmp	r0, #1
4000a9d8:	9a000001 	bls	4000a9e4 <_txe_thread_create+0x1cc>
4000a9dc:	e3a00010 	mov	r0, #16
4000a9e0:	eaffff98 	b	4000a848 <_txe_thread_create+0x30>
4000a9e4:	e59f0080 	ldr	r0, [pc, #128]	; 4000aa6c <_txe_thread_create+0x254>
4000a9e8:	e590a000 	ldr	sl, [r0]
4000a9ec:	e35a0000 	cmp	sl, #0
4000a9f0:	0a000008 	beq	4000aa18 <_txe_thread_create+0x200>
4000a9f4:	e59f0074 	ldr	r0, [pc, #116]	; 4000aa70 <_txe_thread_create+0x258>
4000a9f8:	e15a0000 	cmp	sl, r0
4000a9fc:	0a000003 	beq	4000aa10 <_txe_thread_create+0x1f8>
4000aa00:	e59f006c 	ldr	r0, [pc, #108]	; 4000aa74 <_txe_thread_create+0x25c>
4000aa04:	e5900000 	ldr	r0, [r0]
4000aa08:	e3500000 	cmp	r0, #0
4000aa0c:	0a000008 	beq	4000aa34 <_txe_thread_create+0x21c>
4000aa10:	e3a00013 	mov	r0, #19
4000aa14:	eaffff8b 	b	4000a848 <_txe_thread_create+0x30>
4000aa18:	e59f0054 	ldr	r0, [pc, #84]	; 4000aa74 <_txe_thread_create+0x25c>
4000aa1c:	e5900000 	ldr	r0, [r0]
4000aa20:	e59f1050 	ldr	r1, [pc, #80]	; 4000aa78 <_txe_thread_create+0x260>
4000aa24:	e1500001 	cmp	r0, r1
4000aa28:	2a000001 	bcs	4000aa34 <_txe_thread_create+0x21c>
4000aa2c:	e3a00013 	mov	r0, #19
4000aa30:	eaffff84 	b	4000a848 <_txe_thread_create+0x30>
4000aa34:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000aa38:	e1cd21f0 	strd	r2, [sp, #16]
4000aa3c:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000aa40:	e1a02005 	mov	r2, r5
4000aa44:	e1a00004 	mov	r0, r4
4000aa48:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000aa4c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000aa50:	eb000f49 	bl	4000e77c <_tx_thread_create>
4000aa54:	e58d0020 	str	r0, [sp, #32]
4000aa58:	e59d0020 	ldr	r0, [sp, #32]
4000aa5c:	eaffff79 	b	4000a848 <_txe_thread_create+0x30>
4000aa60:	40030e70 	.word	0x40030e70
4000aa64:	40030e5c 	.word	0x40030e5c
4000aa68:	40030e60 	.word	0x40030e60
4000aa6c:	40030e54 	.word	0x40030e54
4000aa70:	40032994 	.word	0x40032994
4000aa74:	40030e4c 	.word	0x40030e4c
4000aa78:	f0f0f0f0 	.word	0xf0f0f0f0

4000aa7c <_txe_thread_info_get>:
4000aa7c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aa80:	e24dd01c 	sub	sp, sp, #28
4000aa84:	e1a04000 	mov	r4, r0
4000aa88:	e1a05001 	mov	r5, r1
4000aa8c:	e1a06002 	mov	r6, r2
4000aa90:	e1a07003 	mov	r7, r3
4000aa94:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000aa98:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000aa9c:	e3540000 	cmp	r4, #0
4000aaa0:	0a000003 	beq	4000aab4 <_txe_thread_info_get+0x38>
4000aaa4:	e5940000 	ldr	r0, [r4]
4000aaa8:	e59f103c 	ldr	r1, [pc, #60]	; 4000aaec <_txe_thread_info_get+0x70>
4000aaac:	e1500001 	cmp	r0, r1
4000aab0:	0a000002 	beq	4000aac0 <_txe_thread_info_get+0x44>
4000aab4:	e3a0000e 	mov	r0, #14
4000aab8:	e28dd01c 	add	sp, sp, #28
4000aabc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000aac0:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000aac4:	e58d3010 	str	r3, [sp, #16]
4000aac8:	e1a03007 	mov	r3, r7
4000aacc:	e1a02006 	mov	r2, r6
4000aad0:	e1a01005 	mov	r1, r5
4000aad4:	e1a00004 	mov	r0, r4
4000aad8:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000aadc:	eb000ff5 	bl	4000eab8 <_tx_thread_info_get>
4000aae0:	e58d0018 	str	r0, [sp, #24]
4000aae4:	e59d0018 	ldr	r0, [sp, #24]
4000aae8:	eafffff2 	b	4000aab8 <_txe_thread_info_get+0x3c>
4000aaec:	54485244 	.word	0x54485244

4000aaf0 <_txe_thread_priority_change>:
4000aaf0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000aaf4:	e1a04000 	mov	r4, r0
4000aaf8:	e1a05001 	mov	r5, r1
4000aafc:	e1a06002 	mov	r6, r2
4000ab00:	e3540000 	cmp	r4, #0
4000ab04:	0a000003 	beq	4000ab18 <_txe_thread_priority_change+0x28>
4000ab08:	e5940000 	ldr	r0, [r4]
4000ab0c:	e59f1070 	ldr	r1, [pc, #112]	; 4000ab84 <_txe_thread_priority_change+0x94>
4000ab10:	e1500001 	cmp	r0, r1
4000ab14:	0a000001 	beq	4000ab20 <_txe_thread_priority_change+0x30>
4000ab18:	e3a0000e 	mov	r0, #14
4000ab1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ab20:	e3560000 	cmp	r6, #0
4000ab24:	1a000001 	bne	4000ab30 <_txe_thread_priority_change+0x40>
4000ab28:	e3a00003 	mov	r0, #3
4000ab2c:	eafffffa 	b	4000ab1c <_txe_thread_priority_change+0x2c>
4000ab30:	e3550020 	cmp	r5, #32
4000ab34:	3a000001 	bcc	4000ab40 <_txe_thread_priority_change+0x50>
4000ab38:	e3a0000f 	mov	r0, #15
4000ab3c:	eafffff6 	b	4000ab1c <_txe_thread_priority_change+0x2c>
4000ab40:	e59f0040 	ldr	r0, [pc, #64]	; 4000ab88 <_txe_thread_priority_change+0x98>
4000ab44:	e5900000 	ldr	r0, [r0]
4000ab48:	e3500000 	cmp	r0, #0
4000ab4c:	0a000003 	beq	4000ab60 <_txe_thread_priority_change+0x70>
4000ab50:	e59f0034 	ldr	r0, [pc, #52]	; 4000ab8c <_txe_thread_priority_change+0x9c>
4000ab54:	e5900000 	ldr	r0, [r0]
4000ab58:	e3500000 	cmp	r0, #0
4000ab5c:	0a000001 	beq	4000ab68 <_txe_thread_priority_change+0x78>
4000ab60:	e3a00013 	mov	r0, #19
4000ab64:	eaffffec 	b	4000ab1c <_txe_thread_priority_change+0x2c>
4000ab68:	e1a02006 	mov	r2, r6
4000ab6c:	e1a01005 	mov	r1, r5
4000ab70:	e1a00004 	mov	r0, r4
4000ab74:	eb001039 	bl	4000ec60 <_tx_thread_priority_change>
4000ab78:	e1a07000 	mov	r7, r0
4000ab7c:	e1a00007 	mov	r0, r7
4000ab80:	eaffffe5 	b	4000ab1c <_txe_thread_priority_change+0x2c>
4000ab84:	54485244 	.word	0x54485244
4000ab88:	40030e54 	.word	0x40030e54
4000ab8c:	40030e4c 	.word	0x40030e4c

4000ab90 <_txe_thread_relinquish>:
4000ab90:	e92d4010 	push	{r4, lr}
4000ab94:	e59f0020 	ldr	r0, [pc, #32]	; 4000abbc <_txe_thread_relinquish+0x2c>
4000ab98:	e5900000 	ldr	r0, [r0]
4000ab9c:	e3500000 	cmp	r0, #0
4000aba0:	0a000004 	beq	4000abb8 <_txe_thread_relinquish+0x28>
4000aba4:	e59f0014 	ldr	r0, [pc, #20]	; 4000abc0 <_txe_thread_relinquish+0x30>
4000aba8:	e5900000 	ldr	r0, [r0]
4000abac:	e3500000 	cmp	r0, #0
4000abb0:	1a000000 	bne	4000abb8 <_txe_thread_relinquish+0x28>
4000abb4:	eb001091 	bl	4000ee00 <_tx_thread_relinquish>
4000abb8:	e8bd8010 	pop	{r4, pc}
4000abbc:	40030e54 	.word	0x40030e54
4000abc0:	40030e4c 	.word	0x40030e4c

4000abc4 <_txe_thread_resume>:
4000abc4:	e92d4070 	push	{r4, r5, r6, lr}
4000abc8:	e1a04000 	mov	r4, r0
4000abcc:	e3540000 	cmp	r4, #0
4000abd0:	0a000003 	beq	4000abe4 <_txe_thread_resume+0x20>
4000abd4:	e5940000 	ldr	r0, [r4]
4000abd8:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac00 <_txe_thread_resume+0x3c>
4000abdc:	e1500001 	cmp	r0, r1
4000abe0:	0a000001 	beq	4000abec <_txe_thread_resume+0x28>
4000abe4:	e3a0000e 	mov	r0, #14
4000abe8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000abec:	e1a00004 	mov	r0, r4
4000abf0:	eb00113e 	bl	4000f0f0 <_tx_thread_resume>
4000abf4:	e1a05000 	mov	r5, r0
4000abf8:	e1a00005 	mov	r0, r5
4000abfc:	eafffff9 	b	4000abe8 <_txe_thread_resume+0x24>
4000ac00:	54485244 	.word	0x54485244

4000ac04 <_txe_timer_activate>:
4000ac04:	e92d4070 	push	{r4, r5, r6, lr}
4000ac08:	e1a04000 	mov	r4, r0
4000ac0c:	e3540000 	cmp	r4, #0
4000ac10:	0a000003 	beq	4000ac24 <_txe_timer_activate+0x20>
4000ac14:	e5940000 	ldr	r0, [r4]
4000ac18:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac40 <_txe_timer_activate+0x3c>
4000ac1c:	e1500001 	cmp	r0, r1
4000ac20:	0a000001 	beq	4000ac2c <_txe_timer_activate+0x28>
4000ac24:	e3a00015 	mov	r0, #21
4000ac28:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ac2c:	e1a00004 	mov	r0, r4
4000ac30:	eb0013a4 	bl	4000fac8 <_tx_timer_activate>
4000ac34:	e1a05000 	mov	r5, r0
4000ac38:	e1a00005 	mov	r0, r5
4000ac3c:	eafffff9 	b	4000ac28 <_txe_timer_activate+0x24>
4000ac40:	4154494d 	.word	0x4154494d

4000ac44 <_txe_timer_change>:
4000ac44:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ac48:	e1a04000 	mov	r4, r0
4000ac4c:	e1a05001 	mov	r5, r1
4000ac50:	e1a06002 	mov	r6, r2
4000ac54:	e3540000 	cmp	r4, #0
4000ac58:	0a000003 	beq	4000ac6c <_txe_timer_change+0x28>
4000ac5c:	e5940000 	ldr	r0, [r4]
4000ac60:	e59f1058 	ldr	r1, [pc, #88]	; 4000acc0 <_txe_timer_change+0x7c>
4000ac64:	e1500001 	cmp	r0, r1
4000ac68:	0a000001 	beq	4000ac74 <_txe_timer_change+0x30>
4000ac6c:	e3a00015 	mov	r0, #21
4000ac70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ac74:	e3550000 	cmp	r5, #0
4000ac78:	1a000001 	bne	4000ac84 <_txe_timer_change+0x40>
4000ac7c:	e3a00016 	mov	r0, #22
4000ac80:	eafffffa 	b	4000ac70 <_txe_timer_change+0x2c>
4000ac84:	e59f0038 	ldr	r0, [pc, #56]	; 4000acc4 <_txe_timer_change+0x80>
4000ac88:	e5900000 	ldr	r0, [r0]
4000ac8c:	e3c0000f 	bic	r0, r0, #15
4000ac90:	e59f1030 	ldr	r1, [pc, #48]	; 4000acc8 <_txe_timer_change+0x84>
4000ac94:	e1500001 	cmp	r0, r1
4000ac98:	1a000001 	bne	4000aca4 <_txe_timer_change+0x60>
4000ac9c:	e3a00013 	mov	r0, #19
4000aca0:	eafffff2 	b	4000ac70 <_txe_timer_change+0x2c>
4000aca4:	e1a02006 	mov	r2, r6
4000aca8:	e1a01005 	mov	r1, r5
4000acac:	e1a00004 	mov	r0, r4
4000acb0:	eb0013d4 	bl	4000fc08 <_tx_timer_change>
4000acb4:	e1a07000 	mov	r7, r0
4000acb8:	e1a00007 	mov	r0, r7
4000acbc:	eaffffeb 	b	4000ac70 <_txe_timer_change+0x2c>
4000acc0:	4154494d 	.word	0x4154494d
4000acc4:	40030e4c 	.word	0x40030e4c
4000acc8:	f0f0f0f0 	.word	0xf0f0f0f0

4000accc <_txe_timer_create>:
4000accc:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000acd0:	e24dd01c 	sub	sp, sp, #28
4000acd4:	e1a04000 	mov	r4, r0
4000acd8:	e1a05001 	mov	r5, r1
4000acdc:	e1a06002 	mov	r6, r2
4000ace0:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000ace4:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000ace8:	e3540000 	cmp	r4, #0
4000acec:	0a000001 	beq	4000acf8 <_txe_timer_create+0x2c>
4000acf0:	e358002c 	cmp	r8, #44	; 0x2c
4000acf4:	0a000002 	beq	4000ad04 <_txe_timer_create+0x38>
4000acf8:	e3a00015 	mov	r0, #21
4000acfc:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000ad00:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ad04:	e10f9000 	mrs	r9, CPSR
4000ad08:	e389a080 	orr	sl, r9, #128	; 0x80
4000ad0c:	e121f00a 	msr	CPSR_c, sl
4000ad10:	e59f0160 	ldr	r0, [pc, #352]	; 4000ae78 <_txe_timer_create+0x1ac>
4000ad14:	e5900000 	ldr	r0, [r0]
4000ad18:	e2800001 	add	r0, r0, #1
4000ad1c:	e59f1154 	ldr	r1, [pc, #340]	; 4000ae78 <_txe_timer_create+0x1ac>
4000ad20:	e5810000 	str	r0, [r1]
4000ad24:	e121f009 	msr	CPSR_c, r9
4000ad28:	e59f014c 	ldr	r0, [pc, #332]	; 4000ae7c <_txe_timer_create+0x1b0>
4000ad2c:	e5900000 	ldr	r0, [r0]
4000ad30:	e58d0014 	str	r0, [sp, #20]
4000ad34:	e3a00000 	mov	r0, #0
4000ad38:	e58d0018 	str	r0, [sp, #24]
4000ad3c:	ea000009 	b	4000ad68 <_txe_timer_create+0x9c>
4000ad40:	e59d0014 	ldr	r0, [sp, #20]
4000ad44:	e1540000 	cmp	r4, r0
4000ad48:	1a000000 	bne	4000ad50 <_txe_timer_create+0x84>
4000ad4c:	ea00000a 	b	4000ad7c <_txe_timer_create+0xb0>
4000ad50:	e59d0014 	ldr	r0, [sp, #20]
4000ad54:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000ad58:	e58d0014 	str	r0, [sp, #20]
4000ad5c:	e59d0018 	ldr	r0, [sp, #24]
4000ad60:	e2800001 	add	r0, r0, #1
4000ad64:	e58d0018 	str	r0, [sp, #24]
4000ad68:	e59f1110 	ldr	r1, [pc, #272]	; 4000ae80 <_txe_timer_create+0x1b4>
4000ad6c:	e59d0018 	ldr	r0, [sp, #24]
4000ad70:	e5911000 	ldr	r1, [r1]
4000ad74:	e1500001 	cmp	r0, r1
4000ad78:	3afffff0 	bcc	4000ad40 <_txe_timer_create+0x74>
4000ad7c:	e1a00000 	nop			; (mov r0, r0)
4000ad80:	e10f9000 	mrs	r9, CPSR
4000ad84:	e389a080 	orr	sl, r9, #128	; 0x80
4000ad88:	e121f00a 	msr	CPSR_c, sl
4000ad8c:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ae78 <_txe_timer_create+0x1ac>
4000ad90:	e5900000 	ldr	r0, [r0]
4000ad94:	e2400001 	sub	r0, r0, #1
4000ad98:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ae78 <_txe_timer_create+0x1ac>
4000ad9c:	e5810000 	str	r0, [r1]
4000ada0:	e121f009 	msr	CPSR_c, r9
4000ada4:	eb0011b4 	bl	4000f47c <_tx_thread_system_preempt_check>
4000ada8:	e59d0014 	ldr	r0, [sp, #20]
4000adac:	e1540000 	cmp	r4, r0
4000adb0:	1a000001 	bne	4000adbc <_txe_timer_create+0xf0>
4000adb4:	e3a00015 	mov	r0, #21
4000adb8:	eaffffcf 	b	4000acfc <_txe_timer_create+0x30>
4000adbc:	e3570000 	cmp	r7, #0
4000adc0:	1a000001 	bne	4000adcc <_txe_timer_create+0x100>
4000adc4:	e3a00016 	mov	r0, #22
4000adc8:	eaffffcb 	b	4000acfc <_txe_timer_create+0x30>
4000adcc:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000add0:	e3500001 	cmp	r0, #1
4000add4:	0a000004 	beq	4000adec <_txe_timer_create+0x120>
4000add8:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000addc:	e3500000 	cmp	r0, #0
4000ade0:	0a000001 	beq	4000adec <_txe_timer_create+0x120>
4000ade4:	e3a00017 	mov	r0, #23
4000ade8:	eaffffc3 	b	4000acfc <_txe_timer_create+0x30>
4000adec:	e59f0090 	ldr	r0, [pc, #144]	; 4000ae84 <_txe_timer_create+0x1b8>
4000adf0:	e5900000 	ldr	r0, [r0]
4000adf4:	e58d0010 	str	r0, [sp, #16]
4000adf8:	e59d0010 	ldr	r0, [sp, #16]
4000adfc:	e3500000 	cmp	r0, #0
4000ae00:	0a000009 	beq	4000ae2c <_txe_timer_create+0x160>
4000ae04:	e59f107c 	ldr	r1, [pc, #124]	; 4000ae88 <_txe_timer_create+0x1bc>
4000ae08:	e59d0010 	ldr	r0, [sp, #16]
4000ae0c:	e1500001 	cmp	r0, r1
4000ae10:	0a000003 	beq	4000ae24 <_txe_timer_create+0x158>
4000ae14:	e59f0070 	ldr	r0, [pc, #112]	; 4000ae8c <_txe_timer_create+0x1c0>
4000ae18:	e5900000 	ldr	r0, [r0]
4000ae1c:	e3500000 	cmp	r0, #0
4000ae20:	0a000008 	beq	4000ae48 <_txe_timer_create+0x17c>
4000ae24:	e3a00013 	mov	r0, #19
4000ae28:	eaffffb3 	b	4000acfc <_txe_timer_create+0x30>
4000ae2c:	e59f0058 	ldr	r0, [pc, #88]	; 4000ae8c <_txe_timer_create+0x1c0>
4000ae30:	e5900000 	ldr	r0, [r0]
4000ae34:	e59f1054 	ldr	r1, [pc, #84]	; 4000ae90 <_txe_timer_create+0x1c4>
4000ae38:	e1500001 	cmp	r0, r1
4000ae3c:	2a000001 	bcs	4000ae48 <_txe_timer_create+0x17c>
4000ae40:	e3a00013 	mov	r0, #19
4000ae44:	eaffffac 	b	4000acfc <_txe_timer_create+0x30>
4000ae48:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000ae4c:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000ae50:	e98d000c 	stmib	sp, {r2, r3}
4000ae54:	e58d7000 	str	r7, [sp]
4000ae58:	e1a02006 	mov	r2, r6
4000ae5c:	e1a01005 	mov	r1, r5
4000ae60:	e1a00004 	mov	r0, r4
4000ae64:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ae68:	eb0013b1 	bl	4000fd34 <_tx_timer_create>
4000ae6c:	e1a0b000 	mov	fp, r0
4000ae70:	e1a0000b 	mov	r0, fp
4000ae74:	eaffffa0 	b	4000acfc <_txe_timer_create+0x30>
4000ae78:	40030e70 	.word	0x40030e70
4000ae7c:	40030e98 	.word	0x40030e98
4000ae80:	40030e9c 	.word	0x40030e9c
4000ae84:	40030e54 	.word	0x40030e54
4000ae88:	40032994 	.word	0x40032994
4000ae8c:	40030e4c 	.word	0x40030e4c
4000ae90:	f0f0f0f0 	.word	0xf0f0f0f0

4000ae94 <_txe_timer_deactivate>:
4000ae94:	e92d4070 	push	{r4, r5, r6, lr}
4000ae98:	e1a04000 	mov	r4, r0
4000ae9c:	e3540000 	cmp	r4, #0
4000aea0:	0a000003 	beq	4000aeb4 <_txe_timer_deactivate+0x20>
4000aea4:	e5940000 	ldr	r0, [r4]
4000aea8:	e59f1020 	ldr	r1, [pc, #32]	; 4000aed0 <_txe_timer_deactivate+0x3c>
4000aeac:	e1500001 	cmp	r0, r1
4000aeb0:	0a000001 	beq	4000aebc <_txe_timer_deactivate+0x28>
4000aeb4:	e3a00015 	mov	r0, #21
4000aeb8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000aebc:	e1a00004 	mov	r0, r4
4000aec0:	eb00141a 	bl	4000ff30 <_tx_timer_deactivate>
4000aec4:	e1a05000 	mov	r5, r0
4000aec8:	e1a00005 	mov	r0, r5
4000aecc:	eafffff9 	b	4000aeb8 <_txe_timer_deactivate+0x24>
4000aed0:	4154494d 	.word	0x4154494d

4000aed4 <_tx_thread_system_return>:
4000aed4:	e3a00000 	mov	r0, #0
4000aed8:	e10f1000 	mrs	r1, CPSR
4000aedc:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aee0:	e3812080 	orr	r2, r1, #128	; 0x80
4000aee4:	e12ff002 	msr	CPSR_fsxc, r2
4000aee8:	e59f302c 	ldr	r3, [pc, #44]	; 4000af1c <_tx_thread_system_return+0x48>
4000aeec:	e5930000 	ldr	r0, [r3]
4000aef0:	e59f2028 	ldr	r2, [pc, #40]	; 4000af20 <_tx_thread_system_return+0x4c>
4000aef4:	e5921000 	ldr	r1, [r2]
4000aef8:	e580d008 	str	sp, [r0, #8]
4000aefc:	e3a04000 	mov	r4, #0
4000af00:	e3510000 	cmp	r1, #0
4000af04:	0a000002 	beq	4000af14 <_tx_thread_system_return+0x40>
4000af08:	e590101c 	ldr	r1, [r0, #28]
4000af0c:	e5824000 	str	r4, [r2]
4000af10:	e5801018 	str	r1, [r0, #24]
4000af14:	e5834000 	str	r4, [r3]
4000af18:	ea000001 	b	4000af24 <_tx_thread_schedule>
4000af1c:	40030e54 	.word	0x40030e54
4000af20:	40030e80 	.word	0x40030e80

4000af24 <_tx_thread_schedule>:
4000af24:	e10f2000 	mrs	r2, CPSR
4000af28:	e3c20080 	bic	r0, r2, #128	; 0x80
4000af2c:	e12ff000 	msr	CPSR_fsxc, r0
4000af30:	e59f104c 	ldr	r1, [pc, #76]	; 4000af84 <_tx_thread_schedule+0x60>
4000af34:	e5910000 	ldr	r0, [r1]
4000af38:	e3500000 	cmp	r0, #0
4000af3c:	0afffffc 	beq	4000af34 <_tx_thread_schedule+0x10>
4000af40:	e12ff002 	msr	CPSR_fsxc, r2
4000af44:	e59f103c 	ldr	r1, [pc, #60]	; 4000af88 <_tx_thread_schedule+0x64>
4000af48:	e5810000 	str	r0, [r1]
4000af4c:	e5902004 	ldr	r2, [r0, #4]
4000af50:	e5903018 	ldr	r3, [r0, #24]
4000af54:	e2822001 	add	r2, r2, #1
4000af58:	e5802004 	str	r2, [r0, #4]
4000af5c:	e59f2028 	ldr	r2, [pc, #40]	; 4000af8c <_tx_thread_schedule+0x68>
4000af60:	e590d008 	ldr	sp, [r0, #8]
4000af64:	e5823000 	str	r3, [r2]
4000af68:	e8bd0003 	pop	{r0, r1}
4000af6c:	e3500000 	cmp	r0, #0
4000af70:	116ff001 	msrne	SPSR_fsxc, r1
4000af74:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000af78:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000af7c:	e12ff001 	msr	CPSR_fsxc, r1
4000af80:	e12fff1e 	bx	lr
4000af84:	40030e58 	.word	0x40030e58
4000af88:	40030e54 	.word	0x40030e54
4000af8c:	40030e80 	.word	0x40030e80

4000af90 <_tx_thread_vectored_context_save>:
4000af90:	e59f3044 	ldr	r3, [pc, #68]	; 4000afdc <_tx_thread_vectored_context_save+0x4c>
4000af94:	e5932000 	ldr	r2, [r3]
4000af98:	e3520000 	cmp	r2, #0
4000af9c:	0a000003 	beq	4000afb0 <_tx_thread_vectored_context_save+0x20>
4000afa0:	e2822001 	add	r2, r2, #1
4000afa4:	e5832000 	str	r2, [r3]
4000afa8:	e3a0a000 	mov	sl, #0
4000afac:	e12fff1e 	bx	lr
4000afb0:	e2822001 	add	r2, r2, #1
4000afb4:	e5832000 	str	r2, [r3]
4000afb8:	e59f1020 	ldr	r1, [pc, #32]	; 4000afe0 <_tx_thread_vectored_context_save+0x50>
4000afbc:	e5910000 	ldr	r0, [r1]
4000afc0:	e3500000 	cmp	r0, #0
4000afc4:	0a000001 	beq	4000afd0 <_tx_thread_vectored_context_save+0x40>
4000afc8:	e3a0a000 	mov	sl, #0
4000afcc:	e12fff1e 	bx	lr
4000afd0:	e3a0a000 	mov	sl, #0
4000afd4:	e28dd020 	add	sp, sp, #32
4000afd8:	e12fff1e 	bx	lr
4000afdc:	40030e4c 	.word	0x40030e4c
4000afe0:	40030e54 	.word	0x40030e54

4000afe4 <_tx_timer_interrupt>:
4000afe4:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b0b8 <_tx_timer_interrupt+0xd4>
4000afe8:	e5910000 	ldr	r0, [r1]
4000afec:	e2800001 	add	r0, r0, #1
4000aff0:	e5810000 	str	r0, [r1]
4000aff4:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b0bc <_tx_timer_interrupt+0xd8>
4000aff8:	e5932000 	ldr	r2, [r3]
4000affc:	e3520000 	cmp	r2, #0
4000b000:	0a000006 	beq	4000b020 <_tx_timer_interrupt+0x3c>
4000b004:	e2422001 	sub	r2, r2, #1
4000b008:	e5832000 	str	r2, [r3]
4000b00c:	e3520000 	cmp	r2, #0
4000b010:	1a000002 	bne	4000b020 <_tx_timer_interrupt+0x3c>
4000b014:	e59f30a4 	ldr	r3, [pc, #164]	; 4000b0c0 <_tx_timer_interrupt+0xdc>
4000b018:	e3a00001 	mov	r0, #1
4000b01c:	e5830000 	str	r0, [r3]
4000b020:	e59f109c 	ldr	r1, [pc, #156]	; 4000b0c4 <_tx_timer_interrupt+0xe0>
4000b024:	e5910000 	ldr	r0, [r1]
4000b028:	e5902000 	ldr	r2, [r0]
4000b02c:	e3520000 	cmp	r2, #0
4000b030:	0a000003 	beq	4000b044 <_tx_timer_interrupt+0x60>
4000b034:	e59f308c 	ldr	r3, [pc, #140]	; 4000b0c8 <_tx_timer_interrupt+0xe4>
4000b038:	e3a02001 	mov	r2, #1
4000b03c:	e5832000 	str	r2, [r3]
4000b040:	ea000007 	b	4000b064 <_tx_timer_interrupt+0x80>
4000b044:	e2800004 	add	r0, r0, #4
4000b048:	e59f307c 	ldr	r3, [pc, #124]	; 4000b0cc <_tx_timer_interrupt+0xe8>
4000b04c:	e5932000 	ldr	r2, [r3]
4000b050:	e1500002 	cmp	r0, r2
4000b054:	1a000001 	bne	4000b060 <_tx_timer_interrupt+0x7c>
4000b058:	e59f3070 	ldr	r3, [pc, #112]	; 4000b0d0 <_tx_timer_interrupt+0xec>
4000b05c:	e5930000 	ldr	r0, [r3]
4000b060:	e5810000 	str	r0, [r1]
4000b064:	e59f3054 	ldr	r3, [pc, #84]	; 4000b0c0 <_tx_timer_interrupt+0xdc>
4000b068:	e5932000 	ldr	r2, [r3]
4000b06c:	e3520000 	cmp	r2, #0
4000b070:	1a000003 	bne	4000b084 <_tx_timer_interrupt+0xa0>
4000b074:	e59f104c 	ldr	r1, [pc, #76]	; 4000b0c8 <_tx_timer_interrupt+0xe4>
4000b078:	e5910000 	ldr	r0, [r1]
4000b07c:	e3500000 	cmp	r0, #0
4000b080:	0a00000b 	beq	4000b0b4 <_tx_timer_interrupt+0xd0>
4000b084:	e92d4001 	push	{r0, lr}
4000b088:	e59f1038 	ldr	r1, [pc, #56]	; 4000b0c8 <_tx_timer_interrupt+0xe4>
4000b08c:	e5910000 	ldr	r0, [r1]
4000b090:	e3500000 	cmp	r0, #0
4000b094:	0a000000 	beq	4000b09c <_tx_timer_interrupt+0xb8>
4000b098:	eb001441 	bl	400101a4 <_tx_timer_expiration_process>
4000b09c:	e59f301c 	ldr	r3, [pc, #28]	; 4000b0c0 <_tx_timer_interrupt+0xdc>
4000b0a0:	e5932000 	ldr	r2, [r3]
4000b0a4:	e3520000 	cmp	r2, #0
4000b0a8:	0a000000 	beq	4000b0b0 <_tx_timer_interrupt+0xcc>
4000b0ac:	eb001210 	bl	4000f8f4 <_tx_thread_time_slice>
4000b0b0:	e8bd4001 	pop	{r0, lr}
4000b0b4:	e12fff1e 	bx	lr
4000b0b8:	40030e7c 	.word	0x40030e7c
4000b0bc:	40030e80 	.word	0x40030e80
4000b0c0:	40030e84 	.word	0x40030e84
4000b0c4:	40030e90 	.word	0x40030e90
4000b0c8:	40030e94 	.word	0x40030e94
4000b0cc:	40030e8c 	.word	0x40030e8c
4000b0d0:	40030e88 	.word	0x40030e88

4000b0d4 <_tx_thread_context_restore>:
4000b0d4:	e10f3000 	mrs	r3, CPSR
4000b0d8:	e3830080 	orr	r0, r3, #128	; 0x80
4000b0dc:	e12ff000 	msr	CPSR_fsxc, r0
4000b0e0:	e59f30f0 	ldr	r3, [pc, #240]	; 4000b1d8 <_tx_thread_context_restore+0x104>
4000b0e4:	e5932000 	ldr	r2, [r3]
4000b0e8:	e2422001 	sub	r2, r2, #1
4000b0ec:	e5832000 	str	r2, [r3]
4000b0f0:	e3520000 	cmp	r2, #0
4000b0f4:	0a000003 	beq	4000b108 <_tx_thread_context_restore+0x34>
4000b0f8:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b0fc:	e16ff000 	msr	SPSR_fsxc, r0
4000b100:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b104:	e1b0f00e 	movs	pc, lr
4000b108:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b1dc <_tx_thread_context_restore+0x108>
4000b10c:	e5910000 	ldr	r0, [r1]
4000b110:	e3500000 	cmp	r0, #0
4000b114:	0a00002a 	beq	4000b1c4 <_tx_thread_context_restore+0xf0>
4000b118:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b1e0 <_tx_thread_context_restore+0x10c>
4000b11c:	e5932000 	ldr	r2, [r3]
4000b120:	e3520000 	cmp	r2, #0
4000b124:	1a000003 	bne	4000b138 <_tx_thread_context_restore+0x64>
4000b128:	e59f30b4 	ldr	r3, [pc, #180]	; 4000b1e4 <_tx_thread_context_restore+0x110>
4000b12c:	e5932000 	ldr	r2, [r3]
4000b130:	e1500002 	cmp	r0, r2
4000b134:	1a000003 	bne	4000b148 <_tx_thread_context_restore+0x74>
4000b138:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b13c:	e16ff000 	msr	SPSR_fsxc, r0
4000b140:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b144:	e1b0f00e 	movs	pc, lr
4000b148:	e8bd5408 	pop	{r3, sl, ip, lr}
4000b14c:	e1a0100e 	mov	r1, lr
4000b150:	e3a020d3 	mov	r2, #211	; 0xd3
4000b154:	e121f002 	msr	CPSR_c, r2
4000b158:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000b15c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000b160:	e1a04003 	mov	r4, r3
4000b164:	e3a020d2 	mov	r2, #210	; 0xd2
4000b168:	e121f002 	msr	CPSR_c, r2
4000b16c:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b170:	e3a050d3 	mov	r5, #211	; 0xd3
4000b174:	e121f005 	msr	CPSR_c, r5
4000b178:	e92d000f 	push	{r0, r1, r2, r3}
4000b17c:	e3a03001 	mov	r3, #1
4000b180:	e92d0018 	push	{r3, r4}
4000b184:	e59f1050 	ldr	r1, [pc, #80]	; 4000b1dc <_tx_thread_context_restore+0x108>
4000b188:	e5910000 	ldr	r0, [r1]
4000b18c:	e580d008 	str	sp, [r0, #8]
4000b190:	e3c44020 	bic	r4, r4, #32
4000b194:	e3843080 	orr	r3, r4, #128	; 0x80
4000b198:	e12ff003 	msr	CPSR_fsxc, r3
4000b19c:	e59f3044 	ldr	r3, [pc, #68]	; 4000b1e8 <_tx_thread_context_restore+0x114>
4000b1a0:	e5932000 	ldr	r2, [r3]
4000b1a4:	e3520000 	cmp	r2, #0
4000b1a8:	0a000002 	beq	4000b1b8 <_tx_thread_context_restore+0xe4>
4000b1ac:	e5802018 	str	r2, [r0, #24]
4000b1b0:	e3a02000 	mov	r2, #0
4000b1b4:	e5832000 	str	r2, [r3]
4000b1b8:	e3a00000 	mov	r0, #0
4000b1bc:	e5810000 	str	r0, [r1]
4000b1c0:	eaffff57 	b	4000af24 <_tx_thread_schedule>
4000b1c4:	e10f3000 	mrs	r3, CPSR
4000b1c8:	e3c3301f 	bic	r3, r3, #31
4000b1cc:	e3833013 	orr	r3, r3, #19
4000b1d0:	e12ff003 	msr	CPSR_fsxc, r3
4000b1d4:	eaffff52 	b	4000af24 <_tx_thread_schedule>
4000b1d8:	40030e4c 	.word	0x40030e4c
4000b1dc:	40030e54 	.word	0x40030e54
4000b1e0:	40030e70 	.word	0x40030e70
4000b1e4:	40030e58 	.word	0x40030e58
4000b1e8:	40030e80 	.word	0x40030e80

4000b1ec <_tx_thread_irq_nesting_end>:
4000b1ec:	e1a0300e 	mov	r3, lr
4000b1f0:	e10f0000 	mrs	r0, CPSR
4000b1f4:	e3800080 	orr	r0, r0, #128	; 0x80
4000b1f8:	e12ff000 	msr	CPSR_fsxc, r0
4000b1fc:	e8bd4002 	pop	{r1, lr}
4000b200:	e3c0001f 	bic	r0, r0, #31
4000b204:	e3800012 	orr	r0, r0, #18
4000b208:	e12ff000 	msr	CPSR_fsxc, r0
4000b20c:	e12fff13 	bx	r3

4000b210 <_tx_thread_irq_nesting_start>:
4000b210:	e1a0300e 	mov	r3, lr
4000b214:	e10f0000 	mrs	r0, CPSR
4000b218:	e3c0001f 	bic	r0, r0, #31
4000b21c:	e380001f 	orr	r0, r0, #31
4000b220:	e12ff000 	msr	CPSR_fsxc, r0
4000b224:	e92d4002 	push	{r1, lr}
4000b228:	e3c00080 	bic	r0, r0, #128	; 0x80
4000b22c:	e12ff000 	msr	CPSR_fsxc, r0
4000b230:	e12fff13 	bx	r3

4000b234 <_tx_initialize_low_level>:
4000b234:	e1a0100d 	mov	r1, sp
4000b238:	e59f3024 	ldr	r3, [pc, #36]	; 4000b264 <_tx_initialize_low_level+0x30>
4000b23c:	e5831000 	str	r1, [r3]
4000b240:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b244:	e3a00000 	mov	r0, #0
4000b248:	eb005bbe 	bl	40022148 <CyU3POsTimerInit>
4000b24c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000b250:	e12fff1e 	bx	lr
4000b254:	e59f200c 	ldr	r2, [pc, #12]	; 4000b268 <_tx_initialize_low_level+0x34>
4000b258:	e5920000 	ldr	r0, [r2]
4000b25c:	e59f2008 	ldr	r2, [pc, #8]	; 4000b26c <_tx_initialize_low_level+0x38>
4000b260:	e5920000 	ldr	r0, [r2]
4000b264:	40030e50 	.word	0x40030e50
4000b268:	40030e74 	.word	0x40030e74
4000b26c:	40030de8 	.word	0x40030de8

4000b270 <_tx_byte_allocate>:
4000b270:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b274:	e1a04000 	mov	r4, r0
4000b278:	e1a05001 	mov	r5, r1
4000b27c:	e1a06002 	mov	r6, r2
4000b280:	e1a07003 	mov	r7, r3
4000b284:	e3a00000 	mov	r0, #0
4000b288:	e58d0000 	str	r0, [sp]
4000b28c:	e59f027c 	ldr	r0, [pc, #636]	; 4000b510 <_tx_byte_allocate+0x2a0>
4000b290:	e590a000 	ldr	sl, [r0]
4000b294:	e10f8000 	mrs	r8, CPSR
4000b298:	e3889080 	orr	r9, r8, #128	; 0x80
4000b29c:	e121f009 	msr	CPSR_c, r9
4000b2a0:	e2860003 	add	r0, r6, #3
4000b2a4:	e1a00120 	lsr	r0, r0, #2
4000b2a8:	e1a06100 	lsl	r6, r0, #2
4000b2ac:	e59f0260 	ldr	r0, [pc, #608]	; 4000b514 <_tx_byte_allocate+0x2a4>
4000b2b0:	e5900000 	ldr	r0, [r0]
4000b2b4:	e58d0004 	str	r0, [sp, #4]
4000b2b8:	e59f1254 	ldr	r1, [pc, #596]	; 4000b514 <_tx_byte_allocate+0x2a4>
4000b2bc:	e5910000 	ldr	r0, [r1]
4000b2c0:	e3500000 	cmp	r0, #0
4000b2c4:	0a000031 	beq	4000b390 <_tx_byte_allocate+0x120>
4000b2c8:	e59f1248 	ldr	r1, [pc, #584]	; 4000b518 <_tx_byte_allocate+0x2a8>
4000b2cc:	e5911000 	ldr	r1, [r1]
4000b2d0:	e2811001 	add	r1, r1, #1
4000b2d4:	e59f223c 	ldr	r2, [pc, #572]	; 4000b518 <_tx_byte_allocate+0x2a8>
4000b2d8:	e5821000 	str	r1, [r2]
4000b2dc:	e580100c 	str	r1, [r0, #12]
4000b2e0:	e59f1234 	ldr	r1, [pc, #564]	; 4000b51c <_tx_byte_allocate+0x2ac>
4000b2e4:	e5911000 	ldr	r1, [r1]
4000b2e8:	e3510000 	cmp	r1, #0
4000b2ec:	1a000006 	bne	4000b30c <_tx_byte_allocate+0x9c>
4000b2f0:	e59f1218 	ldr	r1, [pc, #536]	; 4000b510 <_tx_byte_allocate+0x2a0>
4000b2f4:	e5911000 	ldr	r1, [r1]
4000b2f8:	e5801000 	str	r1, [r0]
4000b2fc:	e5901000 	ldr	r1, [r0]
4000b300:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b304:	e5801004 	str	r1, [r0, #4]
4000b308:	ea00000d 	b	4000b344 <_tx_byte_allocate+0xd4>
4000b30c:	e59f1208 	ldr	r1, [pc, #520]	; 4000b51c <_tx_byte_allocate+0x2ac>
4000b310:	e5911000 	ldr	r1, [r1]
4000b314:	e59f2204 	ldr	r2, [pc, #516]	; 4000b520 <_tx_byte_allocate+0x2b0>
4000b318:	e1510002 	cmp	r1, r2
4000b31c:	2a000004 	bcs	4000b334 <_tx_byte_allocate+0xc4>
4000b320:	e3e01000 	mvn	r1, #0
4000b324:	e5801000 	str	r1, [r0]
4000b328:	e3a01000 	mov	r1, #0
4000b32c:	e5801004 	str	r1, [r0, #4]
4000b330:	ea000003 	b	4000b344 <_tx_byte_allocate+0xd4>
4000b334:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b520 <_tx_byte_allocate+0x2b0>
4000b338:	e5801000 	str	r1, [r0]
4000b33c:	e3a01000 	mov	r1, #0
4000b340:	e5801004 	str	r1, [r0, #4]
4000b344:	e3a01014 	mov	r1, #20
4000b348:	e5801008 	str	r1, [r0, #8]
4000b34c:	e5804010 	str	r4, [r0, #16]
4000b350:	e3a01000 	mov	r1, #0
4000b354:	e5801014 	str	r1, [r0, #20]
4000b358:	e5806018 	str	r6, [r0, #24]
4000b35c:	e580701c 	str	r7, [r0, #28]
4000b360:	e2800020 	add	r0, r0, #32
4000b364:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b524 <_tx_byte_allocate+0x2b4>
4000b368:	e5911000 	ldr	r1, [r1]
4000b36c:	e1500001 	cmp	r0, r1
4000b370:	3a000001 	bcc	4000b37c <_tx_byte_allocate+0x10c>
4000b374:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b528 <_tx_byte_allocate+0x2b8>
4000b378:	e5910000 	ldr	r0, [r1]
4000b37c:	e59f1190 	ldr	r1, [pc, #400]	; 4000b514 <_tx_byte_allocate+0x2a4>
4000b380:	e5810000 	str	r0, [r1]
4000b384:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b52c <_tx_byte_allocate+0x2bc>
4000b388:	e5911000 	ldr	r1, [r1]
4000b38c:	e5810020 	str	r0, [r1, #32]
4000b390:	e59d0004 	ldr	r0, [sp, #4]
4000b394:	e3500000 	cmp	r0, #0
4000b398:	0a000002 	beq	4000b3a8 <_tx_byte_allocate+0x138>
4000b39c:	e59d0004 	ldr	r0, [sp, #4]
4000b3a0:	e590000c 	ldr	r0, [r0, #12]
4000b3a4:	e58d0000 	str	r0, [sp]
4000b3a8:	e1a00000 	nop			; (mov r0, r0)
4000b3ac:	e584a020 	str	sl, [r4, #32]
4000b3b0:	e121f008 	msr	CPSR_c, r8
4000b3b4:	e1a01006 	mov	r1, r6
4000b3b8:	e1a00004 	mov	r0, r4
4000b3bc:	eb0001ba 	bl	4000baac <_tx_byte_pool_search>
4000b3c0:	e1a0b000 	mov	fp, r0
4000b3c4:	e10f8000 	mrs	r8, CPSR
4000b3c8:	e3889080 	orr	r9, r8, #128	; 0x80
4000b3cc:	e121f009 	msr	CPSR_c, r9
4000b3d0:	e35b0000 	cmp	fp, #0
4000b3d4:	1a000002 	bne	4000b3e4 <_tx_byte_allocate+0x174>
4000b3d8:	e5940020 	ldr	r0, [r4, #32]
4000b3dc:	e150000a 	cmp	r0, sl
4000b3e0:	1afffff1 	bne	4000b3ac <_tx_byte_allocate+0x13c>
4000b3e4:	e35b0000 	cmp	fp, #0
4000b3e8:	0a00000e 	beq	4000b428 <_tx_byte_allocate+0x1b8>
4000b3ec:	e585b000 	str	fp, [r5]
4000b3f0:	e59d0004 	ldr	r0, [sp, #4]
4000b3f4:	e3500000 	cmp	r0, #0
4000b3f8:	0a000007 	beq	4000b41c <_tx_byte_allocate+0x1ac>
4000b3fc:	e59d0004 	ldr	r0, [sp, #4]
4000b400:	e590100c 	ldr	r1, [r0, #12]
4000b404:	e59d0000 	ldr	r0, [sp]
4000b408:	e1510000 	cmp	r1, r0
4000b40c:	1a000002 	bne	4000b41c <_tx_byte_allocate+0x1ac>
4000b410:	e5950000 	ldr	r0, [r5]
4000b414:	e59d1004 	ldr	r1, [sp, #4]
4000b418:	e5810014 	str	r0, [r1, #20]
4000b41c:	e3a00000 	mov	r0, #0
4000b420:	e58d0008 	str	r0, [sp, #8]
4000b424:	ea000036 	b	4000b504 <_tx_byte_allocate+0x294>
4000b428:	e3570000 	cmp	r7, #0
4000b42c:	0a000032 	beq	4000b4fc <_tx_byte_allocate+0x28c>
4000b430:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b530 <_tx_byte_allocate+0x2c0>
4000b434:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b438:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b43c:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b440:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b444:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b448:	e3500000 	cmp	r0, #0
4000b44c:	0a00000a 	beq	4000b47c <_tx_byte_allocate+0x20c>
4000b450:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b454:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b458:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b45c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b460:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b464:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b468:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b46c:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b470:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b474:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b478:	ea000002 	b	4000b488 <_tx_byte_allocate+0x218>
4000b47c:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b480:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b484:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b488:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b48c:	e2800001 	add	r0, r0, #1
4000b490:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b494:	e3a00009 	mov	r0, #9
4000b498:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b49c:	e3a00001 	mov	r0, #1
4000b4a0:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b4a4:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b4a8:	e59f0084 	ldr	r0, [pc, #132]	; 4000b534 <_tx_byte_allocate+0x2c4>
4000b4ac:	e5900000 	ldr	r0, [r0]
4000b4b0:	e2800001 	add	r0, r0, #1
4000b4b4:	e59f1078 	ldr	r1, [pc, #120]	; 4000b534 <_tx_byte_allocate+0x2c4>
4000b4b8:	e5810000 	str	r0, [r1]
4000b4bc:	e121f008 	msr	CPSR_c, r8
4000b4c0:	e1a0000a 	mov	r0, sl
4000b4c4:	ebfff671 	bl	40008e90 <_tx_thread_system_suspend>
4000b4c8:	e59d0004 	ldr	r0, [sp, #4]
4000b4cc:	e3500000 	cmp	r0, #0
4000b4d0:	0a000007 	beq	4000b4f4 <_tx_byte_allocate+0x284>
4000b4d4:	e59d0004 	ldr	r0, [sp, #4]
4000b4d8:	e590100c 	ldr	r1, [r0, #12]
4000b4dc:	e59d0000 	ldr	r0, [sp]
4000b4e0:	e1510000 	cmp	r1, r0
4000b4e4:	1a000002 	bne	4000b4f4 <_tx_byte_allocate+0x284>
4000b4e8:	e5950000 	ldr	r0, [r5]
4000b4ec:	e59d1004 	ldr	r1, [sp, #4]
4000b4f0:	e5810014 	str	r0, [r1, #20]
4000b4f4:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b4f8:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b4fc:	e3a00010 	mov	r0, #16
4000b500:	e58d0008 	str	r0, [sp, #8]
4000b504:	e121f008 	msr	CPSR_c, r8
4000b508:	e59d0008 	ldr	r0, [sp, #8]
4000b50c:	eafffff9 	b	4000b4f8 <_tx_byte_allocate+0x288>
4000b510:	40030e54 	.word	0x40030e54
4000b514:	40030ec0 	.word	0x40030ec0
4000b518:	40030ec4 	.word	0x40030ec4
4000b51c:	40030e4c 	.word	0x40030e4c
4000b520:	f0f0f0f0 	.word	0xf0f0f0f0
4000b524:	40030ebc 	.word	0x40030ebc
4000b528:	40030eb8 	.word	0x40030eb8
4000b52c:	40030eac 	.word	0x40030eac
4000b530:	4000b538 	.word	0x4000b538
4000b534:	40030e70 	.word	0x40030e70

4000b538 <_tx_byte_pool_cleanup>:
4000b538:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b53c:	e1a04000 	mov	r4, r0
4000b540:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b544:	e10f5000 	mrs	r5, CPSR
4000b548:	e3856080 	orr	r6, r5, #128	; 0x80
4000b54c:	e121f006 	msr	CPSR_c, r6
4000b550:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b554:	e3500000 	cmp	r0, #0
4000b558:	0a000026 	beq	4000b5f8 <_tx_byte_pool_cleanup+0xc0>
4000b55c:	e3570000 	cmp	r7, #0
4000b560:	0a000024 	beq	4000b5f8 <_tx_byte_pool_cleanup+0xc0>
4000b564:	e5970000 	ldr	r0, [r7]
4000b568:	e59f1090 	ldr	r1, [pc, #144]	; 4000b600 <_tx_byte_pool_cleanup+0xc8>
4000b56c:	e1500001 	cmp	r0, r1
4000b570:	1a000020 	bne	4000b5f8 <_tx_byte_pool_cleanup+0xc0>
4000b574:	e3a00000 	mov	r0, #0
4000b578:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b57c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b580:	e1500004 	cmp	r0, r4
4000b584:	1a000002 	bne	4000b594 <_tx_byte_pool_cleanup+0x5c>
4000b588:	e3a00000 	mov	r0, #0
4000b58c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b590:	ea000007 	b	4000b5b4 <_tx_byte_pool_cleanup+0x7c>
4000b594:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b598:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b59c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b5a0:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b5a4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b5a8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b5ac:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b5b0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b5b4:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b5b8:	e2400001 	sub	r0, r0, #1
4000b5bc:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b5c0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b5c4:	e3500009 	cmp	r0, #9
4000b5c8:	1a00000a 	bne	4000b5f8 <_tx_byte_pool_cleanup+0xc0>
4000b5cc:	e3a00010 	mov	r0, #16
4000b5d0:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b5d4:	e59f0028 	ldr	r0, [pc, #40]	; 4000b604 <_tx_byte_pool_cleanup+0xcc>
4000b5d8:	e5900000 	ldr	r0, [r0]
4000b5dc:	e2800001 	add	r0, r0, #1
4000b5e0:	e59f101c 	ldr	r1, [pc, #28]	; 4000b604 <_tx_byte_pool_cleanup+0xcc>
4000b5e4:	e5810000 	str	r0, [r1]
4000b5e8:	e121f005 	msr	CPSR_c, r5
4000b5ec:	e1a00004 	mov	r0, r4
4000b5f0:	eb000fcd 	bl	4000f52c <_tx_thread_system_resume>
4000b5f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b5f8:	e121f005 	msr	CPSR_c, r5
4000b5fc:	eafffffc 	b	4000b5f4 <_tx_byte_pool_cleanup+0xbc>
4000b600:	42595445 	.word	0x42595445
4000b604:	40030e70 	.word	0x40030e70

4000b608 <_tx_byte_pool_create>:
4000b608:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b60c:	e1a04000 	mov	r4, r0
4000b610:	e1a05001 	mov	r5, r1
4000b614:	e1a06002 	mov	r6, r2
4000b618:	e1a07003 	mov	r7, r3
4000b61c:	e3a01034 	mov	r1, #52	; 0x34
4000b620:	e1a00004 	mov	r0, r4
4000b624:	eb0020ba 	bl	40013914 <__aeabi_memclr4>
4000b628:	e1a00127 	lsr	r0, r7, #2
4000b62c:	e1a07100 	lsl	r7, r0, #2
4000b630:	e5845004 	str	r5, [r4, #4]
4000b634:	e5846018 	str	r6, [r4, #24]
4000b638:	e584701c 	str	r7, [r4, #28]
4000b63c:	e5846010 	str	r6, [r4, #16]
4000b640:	e5846014 	str	r6, [r4, #20]
4000b644:	e2470008 	sub	r0, r7, #8
4000b648:	e5840008 	str	r0, [r4, #8]
4000b64c:	e3a00002 	mov	r0, #2
4000b650:	e584000c 	str	r0, [r4, #12]
4000b654:	e0860007 	add	r0, r6, r7
4000b658:	e58d0004 	str	r0, [sp, #4]
4000b65c:	e59d0004 	ldr	r0, [sp, #4]
4000b660:	e2400004 	sub	r0, r0, #4
4000b664:	e58d0004 	str	r0, [sp, #4]
4000b668:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b82c <_tx_byte_pool_create+0x224>
4000b66c:	e59d1004 	ldr	r1, [sp, #4]
4000b670:	e5810000 	str	r0, [r1]
4000b674:	e59d0004 	ldr	r0, [sp, #4]
4000b678:	e2400004 	sub	r0, r0, #4
4000b67c:	e58d0004 	str	r0, [sp, #4]
4000b680:	e59d0004 	ldr	r0, [sp, #4]
4000b684:	e5806000 	str	r6, [r0]
4000b688:	e59d0004 	ldr	r0, [sp, #4]
4000b68c:	e5860000 	str	r0, [r6]
4000b690:	e58d6004 	str	r6, [sp, #4]
4000b694:	e59d0004 	ldr	r0, [sp, #4]
4000b698:	e2800004 	add	r0, r0, #4
4000b69c:	e58d0004 	str	r0, [sp, #4]
4000b6a0:	e59f0188 	ldr	r0, [pc, #392]	; 4000b830 <_tx_byte_pool_create+0x228>
4000b6a4:	e59d1004 	ldr	r1, [sp, #4]
4000b6a8:	e5810000 	str	r0, [r1]
4000b6ac:	e3a00000 	mov	r0, #0
4000b6b0:	e5840020 	str	r0, [r4, #32]
4000b6b4:	e10f8000 	mrs	r8, CPSR
4000b6b8:	e3889080 	orr	r9, r8, #128	; 0x80
4000b6bc:	e121f009 	msr	CPSR_c, r9
4000b6c0:	e59f016c 	ldr	r0, [pc, #364]	; 4000b834 <_tx_byte_pool_create+0x22c>
4000b6c4:	e5840000 	str	r0, [r4]
4000b6c8:	e59f0168 	ldr	r0, [pc, #360]	; 4000b838 <_tx_byte_pool_create+0x230>
4000b6cc:	e5900000 	ldr	r0, [r0]
4000b6d0:	e3500000 	cmp	r0, #0
4000b6d4:	0a00000b 	beq	4000b708 <_tx_byte_pool_create+0x100>
4000b6d8:	e59f0158 	ldr	r0, [pc, #344]	; 4000b838 <_tx_byte_pool_create+0x230>
4000b6dc:	e5900000 	ldr	r0, [r0]
4000b6e0:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b6e4:	e59f014c 	ldr	r0, [pc, #332]	; 4000b838 <_tx_byte_pool_create+0x230>
4000b6e8:	e5900000 	ldr	r0, [r0]
4000b6ec:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b6f0:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b6f4:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b6f8:	e59f0138 	ldr	r0, [pc, #312]	; 4000b838 <_tx_byte_pool_create+0x230>
4000b6fc:	e5900000 	ldr	r0, [r0]
4000b700:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b704:	ea000003 	b	4000b718 <_tx_byte_pool_create+0x110>
4000b708:	e59f0128 	ldr	r0, [pc, #296]	; 4000b838 <_tx_byte_pool_create+0x230>
4000b70c:	e5804000 	str	r4, [r0]
4000b710:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b714:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b718:	e59f011c 	ldr	r0, [pc, #284]	; 4000b83c <_tx_byte_pool_create+0x234>
4000b71c:	e5900000 	ldr	r0, [r0]
4000b720:	e2800001 	add	r0, r0, #1
4000b724:	e59f1110 	ldr	r1, [pc, #272]	; 4000b83c <_tx_byte_pool_create+0x234>
4000b728:	e5810000 	str	r0, [r1]
4000b72c:	e3a03000 	mov	r3, #0
4000b730:	e58d3000 	str	r3, [sp]
4000b734:	e1a03007 	mov	r3, r7
4000b738:	e1a02005 	mov	r2, r5
4000b73c:	e1a01004 	mov	r1, r4
4000b740:	e3a00008 	mov	r0, #8
4000b744:	eb0012ce 	bl	40010284 <_tx_trace_object_register>
4000b748:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b840 <_tx_byte_pool_create+0x238>
4000b74c:	e5910000 	ldr	r0, [r1]
4000b750:	e3500000 	cmp	r0, #0
4000b754:	0a000031 	beq	4000b820 <_tx_byte_pool_create+0x218>
4000b758:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b844 <_tx_byte_pool_create+0x23c>
4000b75c:	e5911000 	ldr	r1, [r1]
4000b760:	e2811001 	add	r1, r1, #1
4000b764:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b844 <_tx_byte_pool_create+0x23c>
4000b768:	e5821000 	str	r1, [r2]
4000b76c:	e580100c 	str	r1, [r0, #12]
4000b770:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b848 <_tx_byte_pool_create+0x240>
4000b774:	e5911000 	ldr	r1, [r1]
4000b778:	e3510000 	cmp	r1, #0
4000b77c:	1a000006 	bne	4000b79c <_tx_byte_pool_create+0x194>
4000b780:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b84c <_tx_byte_pool_create+0x244>
4000b784:	e5911000 	ldr	r1, [r1]
4000b788:	e5801000 	str	r1, [r0]
4000b78c:	e5901000 	ldr	r1, [r0]
4000b790:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b794:	e5801004 	str	r1, [r0, #4]
4000b798:	ea00000d 	b	4000b7d4 <_tx_byte_pool_create+0x1cc>
4000b79c:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b848 <_tx_byte_pool_create+0x240>
4000b7a0:	e5911000 	ldr	r1, [r1]
4000b7a4:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b850 <_tx_byte_pool_create+0x248>
4000b7a8:	e1510002 	cmp	r1, r2
4000b7ac:	2a000004 	bcs	4000b7c4 <_tx_byte_pool_create+0x1bc>
4000b7b0:	e3e01000 	mvn	r1, #0
4000b7b4:	e5801000 	str	r1, [r0]
4000b7b8:	e3a01000 	mov	r1, #0
4000b7bc:	e5801004 	str	r1, [r0, #4]
4000b7c0:	ea000003 	b	4000b7d4 <_tx_byte_pool_create+0x1cc>
4000b7c4:	e59f1084 	ldr	r1, [pc, #132]	; 4000b850 <_tx_byte_pool_create+0x248>
4000b7c8:	e5801000 	str	r1, [r0]
4000b7cc:	e3a01000 	mov	r1, #0
4000b7d0:	e5801004 	str	r1, [r0, #4]
4000b7d4:	e3a01015 	mov	r1, #21
4000b7d8:	e5801008 	str	r1, [r0, #8]
4000b7dc:	e5804010 	str	r4, [r0, #16]
4000b7e0:	e5806014 	str	r6, [r0, #20]
4000b7e4:	e5807018 	str	r7, [r0, #24]
4000b7e8:	e28d1004 	add	r1, sp, #4
4000b7ec:	e580101c 	str	r1, [r0, #28]
4000b7f0:	e2800020 	add	r0, r0, #32
4000b7f4:	e59f1058 	ldr	r1, [pc, #88]	; 4000b854 <_tx_byte_pool_create+0x24c>
4000b7f8:	e5911000 	ldr	r1, [r1]
4000b7fc:	e1500001 	cmp	r0, r1
4000b800:	3a000001 	bcc	4000b80c <_tx_byte_pool_create+0x204>
4000b804:	e59f104c 	ldr	r1, [pc, #76]	; 4000b858 <_tx_byte_pool_create+0x250>
4000b808:	e5910000 	ldr	r0, [r1]
4000b80c:	e59f102c 	ldr	r1, [pc, #44]	; 4000b840 <_tx_byte_pool_create+0x238>
4000b810:	e5810000 	str	r0, [r1]
4000b814:	e59f1040 	ldr	r1, [pc, #64]	; 4000b85c <_tx_byte_pool_create+0x254>
4000b818:	e5911000 	ldr	r1, [r1]
4000b81c:	e5810020 	str	r0, [r1, #32]
4000b820:	e121f008 	msr	CPSR_c, r8
4000b824:	e3a00000 	mov	r0, #0
4000b828:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b82c:	aaaaaaaa 	.word	0xaaaaaaaa
4000b830:	ffffeeee 	.word	0xffffeeee
4000b834:	42595445 	.word	0x42595445
4000b838:	40030ef0 	.word	0x40030ef0
4000b83c:	40030ef4 	.word	0x40030ef4
4000b840:	40030ec0 	.word	0x40030ec0
4000b844:	40030ec4 	.word	0x40030ec4
4000b848:	40030e4c 	.word	0x40030e4c
4000b84c:	40030e54 	.word	0x40030e54
4000b850:	f0f0f0f0 	.word	0xf0f0f0f0
4000b854:	40030ebc 	.word	0x40030ebc
4000b858:	40030eb8 	.word	0x40030eb8
4000b85c:	40030eac 	.word	0x40030eac

4000b860 <_tx_byte_pool_delete>:
4000b860:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b864:	e1a04000 	mov	r4, r0
4000b868:	e10f5000 	mrs	r5, CPSR
4000b86c:	e3856080 	orr	r6, r5, #128	; 0x80
4000b870:	e121f006 	msr	CPSR_c, r6
4000b874:	e59f1204 	ldr	r1, [pc, #516]	; 4000ba80 <_tx_byte_pool_delete+0x220>
4000b878:	e5910000 	ldr	r0, [r1]
4000b87c:	e3500000 	cmp	r0, #0
4000b880:	0a000031 	beq	4000b94c <_tx_byte_pool_delete+0xec>
4000b884:	e59f11f8 	ldr	r1, [pc, #504]	; 4000ba84 <_tx_byte_pool_delete+0x224>
4000b888:	e5911000 	ldr	r1, [r1]
4000b88c:	e2811001 	add	r1, r1, #1
4000b890:	e59f21ec 	ldr	r2, [pc, #492]	; 4000ba84 <_tx_byte_pool_delete+0x224>
4000b894:	e5821000 	str	r1, [r2]
4000b898:	e580100c 	str	r1, [r0, #12]
4000b89c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000ba88 <_tx_byte_pool_delete+0x228>
4000b8a0:	e5911000 	ldr	r1, [r1]
4000b8a4:	e3510000 	cmp	r1, #0
4000b8a8:	1a000006 	bne	4000b8c8 <_tx_byte_pool_delete+0x68>
4000b8ac:	e59f11d8 	ldr	r1, [pc, #472]	; 4000ba8c <_tx_byte_pool_delete+0x22c>
4000b8b0:	e5911000 	ldr	r1, [r1]
4000b8b4:	e5801000 	str	r1, [r0]
4000b8b8:	e5901000 	ldr	r1, [r0]
4000b8bc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b8c0:	e5801004 	str	r1, [r0, #4]
4000b8c4:	ea00000d 	b	4000b900 <_tx_byte_pool_delete+0xa0>
4000b8c8:	e59f11b8 	ldr	r1, [pc, #440]	; 4000ba88 <_tx_byte_pool_delete+0x228>
4000b8cc:	e5911000 	ldr	r1, [r1]
4000b8d0:	e59f21b8 	ldr	r2, [pc, #440]	; 4000ba90 <_tx_byte_pool_delete+0x230>
4000b8d4:	e1510002 	cmp	r1, r2
4000b8d8:	2a000004 	bcs	4000b8f0 <_tx_byte_pool_delete+0x90>
4000b8dc:	e3e01000 	mvn	r1, #0
4000b8e0:	e5801000 	str	r1, [r0]
4000b8e4:	e3a01000 	mov	r1, #0
4000b8e8:	e5801004 	str	r1, [r0, #4]
4000b8ec:	ea000003 	b	4000b900 <_tx_byte_pool_delete+0xa0>
4000b8f0:	e59f1198 	ldr	r1, [pc, #408]	; 4000ba90 <_tx_byte_pool_delete+0x230>
4000b8f4:	e5801000 	str	r1, [r0]
4000b8f8:	e3a01000 	mov	r1, #0
4000b8fc:	e5801004 	str	r1, [r0, #4]
4000b900:	e3a01016 	mov	r1, #22
4000b904:	e5801008 	str	r1, [r0, #8]
4000b908:	e5804010 	str	r4, [r0, #16]
4000b90c:	e580d014 	str	sp, [r0, #20]
4000b910:	e3a01000 	mov	r1, #0
4000b914:	e5801018 	str	r1, [r0, #24]
4000b918:	e580101c 	str	r1, [r0, #28]
4000b91c:	e2800020 	add	r0, r0, #32
4000b920:	e59f116c 	ldr	r1, [pc, #364]	; 4000ba94 <_tx_byte_pool_delete+0x234>
4000b924:	e5911000 	ldr	r1, [r1]
4000b928:	e1500001 	cmp	r0, r1
4000b92c:	3a000001 	bcc	4000b938 <_tx_byte_pool_delete+0xd8>
4000b930:	e59f1160 	ldr	r1, [pc, #352]	; 4000ba98 <_tx_byte_pool_delete+0x238>
4000b934:	e5910000 	ldr	r0, [r1]
4000b938:	e59f1140 	ldr	r1, [pc, #320]	; 4000ba80 <_tx_byte_pool_delete+0x220>
4000b93c:	e5810000 	str	r0, [r1]
4000b940:	e59f1154 	ldr	r1, [pc, #340]	; 4000ba9c <_tx_byte_pool_delete+0x23c>
4000b944:	e5911000 	ldr	r1, [r1]
4000b948:	e5810020 	str	r0, [r1, #32]
4000b94c:	e1a00004 	mov	r0, r4
4000b950:	eb0012b6 	bl	40010430 <_tx_trace_object_unregister>
4000b954:	e59f0144 	ldr	r0, [pc, #324]	; 4000baa0 <_tx_byte_pool_delete+0x240>
4000b958:	e5900000 	ldr	r0, [r0]
4000b95c:	e2400001 	sub	r0, r0, #1
4000b960:	e59f1138 	ldr	r1, [pc, #312]	; 4000baa0 <_tx_byte_pool_delete+0x240>
4000b964:	e5810000 	str	r0, [r1]
4000b968:	e3a00000 	mov	r0, #0
4000b96c:	e5840000 	str	r0, [r4]
4000b970:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b974:	e1500004 	cmp	r0, r4
4000b978:	1a000003 	bne	4000b98c <_tx_byte_pool_delete+0x12c>
4000b97c:	e3a00000 	mov	r0, #0
4000b980:	e59f111c 	ldr	r1, [pc, #284]	; 4000baa4 <_tx_byte_pool_delete+0x244>
4000b984:	e5810000 	str	r0, [r1]
4000b988:	ea00000c 	b	4000b9c0 <_tx_byte_pool_delete+0x160>
4000b98c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b990:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b994:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b998:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b99c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b9a0:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b9a4:	e59f00f8 	ldr	r0, [pc, #248]	; 4000baa4 <_tx_byte_pool_delete+0x244>
4000b9a8:	e5900000 	ldr	r0, [r0]
4000b9ac:	e1500004 	cmp	r0, r4
4000b9b0:	1a000002 	bne	4000b9c0 <_tx_byte_pool_delete+0x160>
4000b9b4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000baa4 <_tx_byte_pool_delete+0x244>
4000b9b8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b9bc:	e5810000 	str	r0, [r1]
4000b9c0:	e59f00e0 	ldr	r0, [pc, #224]	; 4000baa8 <_tx_byte_pool_delete+0x248>
4000b9c4:	e5900000 	ldr	r0, [r0]
4000b9c8:	e2800001 	add	r0, r0, #1
4000b9cc:	e59f10d4 	ldr	r1, [pc, #212]	; 4000baa8 <_tx_byte_pool_delete+0x248>
4000b9d0:	e5810000 	str	r0, [r1]
4000b9d4:	e121f005 	msr	CPSR_c, r5
4000b9d8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b9dc:	e58d0000 	str	r0, [sp]
4000b9e0:	ea000017 	b	4000ba44 <_tx_byte_pool_delete+0x1e4>
4000b9e4:	e10f5000 	mrs	r5, CPSR
4000b9e8:	e3856080 	orr	r6, r5, #128	; 0x80
4000b9ec:	e121f006 	msr	CPSR_c, r6
4000b9f0:	e3a00000 	mov	r0, #0
4000b9f4:	e59d1000 	ldr	r1, [sp]
4000b9f8:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b9fc:	e59f00a4 	ldr	r0, [pc, #164]	; 4000baa8 <_tx_byte_pool_delete+0x248>
4000ba00:	e5900000 	ldr	r0, [r0]
4000ba04:	e2800001 	add	r0, r0, #1
4000ba08:	e59f1098 	ldr	r1, [pc, #152]	; 4000baa8 <_tx_byte_pool_delete+0x248>
4000ba0c:	e5810000 	str	r0, [r1]
4000ba10:	e121f005 	msr	CPSR_c, r5
4000ba14:	e3a00001 	mov	r0, #1
4000ba18:	e59d1000 	ldr	r1, [sp]
4000ba1c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000ba20:	e59d0000 	ldr	r0, [sp]
4000ba24:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000ba28:	e58d0000 	str	r0, [sp]
4000ba2c:	e59d1000 	ldr	r1, [sp]
4000ba30:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000ba34:	eb000ebc 	bl	4000f52c <_tx_thread_system_resume>
4000ba38:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000ba3c:	e2400001 	sub	r0, r0, #1
4000ba40:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ba44:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000ba48:	e3500000 	cmp	r0, #0
4000ba4c:	1affffe4 	bne	4000b9e4 <_tx_byte_pool_delete+0x184>
4000ba50:	e10f5000 	mrs	r5, CPSR
4000ba54:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba58:	e121f006 	msr	CPSR_c, r6
4000ba5c:	e59f0044 	ldr	r0, [pc, #68]	; 4000baa8 <_tx_byte_pool_delete+0x248>
4000ba60:	e5900000 	ldr	r0, [r0]
4000ba64:	e2400001 	sub	r0, r0, #1
4000ba68:	e59f1038 	ldr	r1, [pc, #56]	; 4000baa8 <_tx_byte_pool_delete+0x248>
4000ba6c:	e5810000 	str	r0, [r1]
4000ba70:	e121f005 	msr	CPSR_c, r5
4000ba74:	eb000e80 	bl	4000f47c <_tx_thread_system_preempt_check>
4000ba78:	e3a00000 	mov	r0, #0
4000ba7c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ba80:	40030ec0 	.word	0x40030ec0
4000ba84:	40030ec4 	.word	0x40030ec4
4000ba88:	40030e4c 	.word	0x40030e4c
4000ba8c:	40030e54 	.word	0x40030e54
4000ba90:	f0f0f0f0 	.word	0xf0f0f0f0
4000ba94:	40030ebc 	.word	0x40030ebc
4000ba98:	40030eb8 	.word	0x40030eb8
4000ba9c:	40030eac 	.word	0x40030eac
4000baa0:	40030ef4 	.word	0x40030ef4
4000baa4:	40030ef0 	.word	0x40030ef0
4000baa8:	40030e70 	.word	0x40030e70

4000baac <_tx_byte_pool_search>:
4000baac:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000bab0:	e1a02000 	mov	r2, r0
4000bab4:	e3a08000 	mov	r8, #0
4000bab8:	e10f3000 	mrs	r3, CPSR
4000babc:	e383c080 	orr	ip, r3, #128	; 0x80
4000bac0:	e121f00c 	msr	CPSR_c, ip
4000bac4:	e5920008 	ldr	r0, [r2, #8]
4000bac8:	e1500001 	cmp	r0, r1
4000bacc:	8a000002 	bhi	4000badc <_tx_byte_pool_search+0x30>
4000bad0:	e121f003 	msr	CPSR_c, r3
4000bad4:	e3a00000 	mov	r0, #0
4000bad8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000badc:	e5925014 	ldr	r5, [r2, #20]
4000bae0:	e1a0e005 	mov	lr, r5
4000bae4:	e592000c 	ldr	r0, [r2, #12]
4000bae8:	e2807001 	add	r7, r0, #1
4000baec:	e3a06000 	mov	r6, #0
4000baf0:	e1a00000 	nop			; (mov r0, r0)
4000baf4:	e59e0004 	ldr	r0, [lr, #4]
4000baf8:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000bafc:	e29aa012 	adds	sl, sl, #18
4000bb00:	1a000020 	bne	4000bb88 <_tx_byte_pool_search+0xdc>
4000bb04:	e3580000 	cmp	r8, #0
4000bb08:	1a000004 	bne	4000bb20 <_tx_byte_pool_search+0x74>
4000bb0c:	e5920014 	ldr	r0, [r2, #20]
4000bb10:	e1500005 	cmp	r0, r5
4000bb14:	1a000000 	bne	4000bb1c <_tx_byte_pool_search+0x70>
4000bb18:	e582e014 	str	lr, [r2, #20]
4000bb1c:	e3a08001 	mov	r8, #1
4000bb20:	e59e4000 	ldr	r4, [lr]
4000bb24:	e044000e 	sub	r0, r4, lr
4000bb28:	e2406008 	sub	r6, r0, #8
4000bb2c:	e1560001 	cmp	r6, r1
4000bb30:	3a000000 	bcc	4000bb38 <_tx_byte_pool_search+0x8c>
4000bb34:	ea000026 	b	4000bbd4 <_tx_byte_pool_search+0x128>
4000bb38:	e3a06000 	mov	r6, #0
4000bb3c:	e5940004 	ldr	r0, [r4, #4]
4000bb40:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000bb44:	e29aa012 	adds	sl, sl, #18
4000bb48:	1a000009 	bne	4000bb74 <_tx_byte_pool_search+0xc8>
4000bb4c:	e5940000 	ldr	r0, [r4]
4000bb50:	e58e0000 	str	r0, [lr]
4000bb54:	e592000c 	ldr	r0, [r2, #12]
4000bb58:	e2400001 	sub	r0, r0, #1
4000bb5c:	e582000c 	str	r0, [r2, #12]
4000bb60:	e5920014 	ldr	r0, [r2, #20]
4000bb64:	e1500004 	cmp	r0, r4
4000bb68:	1a000007 	bne	4000bb8c <_tx_byte_pool_search+0xe0>
4000bb6c:	e582e014 	str	lr, [r2, #20]
4000bb70:	ea000005 	b	4000bb8c <_tx_byte_pool_search+0xe0>
4000bb74:	e594e000 	ldr	lr, [r4]
4000bb78:	e3570000 	cmp	r7, #0
4000bb7c:	0a000002 	beq	4000bb8c <_tx_byte_pool_search+0xe0>
4000bb80:	e2477001 	sub	r7, r7, #1
4000bb84:	ea000000 	b	4000bb8c <_tx_byte_pool_search+0xe0>
4000bb88:	e59ee000 	ldr	lr, [lr]
4000bb8c:	e3570000 	cmp	r7, #0
4000bb90:	0a000000 	beq	4000bb98 <_tx_byte_pool_search+0xec>
4000bb94:	e2477001 	sub	r7, r7, #1
4000bb98:	e121f003 	msr	CPSR_c, r3
4000bb9c:	e10f3000 	mrs	r3, CPSR
4000bba0:	e383c080 	orr	ip, r3, #128	; 0x80
4000bba4:	e121f00c 	msr	CPSR_c, ip
4000bba8:	e59f00ac 	ldr	r0, [pc, #172]	; 4000bc5c <_tx_byte_pool_search+0x1b0>
4000bbac:	e5909000 	ldr	r9, [r0]
4000bbb0:	e5920020 	ldr	r0, [r2, #32]
4000bbb4:	e1500009 	cmp	r0, r9
4000bbb8:	0a000003 	beq	4000bbcc <_tx_byte_pool_search+0x120>
4000bbbc:	e592e014 	ldr	lr, [r2, #20]
4000bbc0:	e592000c 	ldr	r0, [r2, #12]
4000bbc4:	e2807001 	add	r7, r0, #1
4000bbc8:	e5829020 	str	r9, [r2, #32]
4000bbcc:	e3570000 	cmp	r7, #0
4000bbd0:	1affffc7 	bne	4000baf4 <_tx_byte_pool_search+0x48>
4000bbd4:	e1a00000 	nop			; (mov r0, r0)
4000bbd8:	e3560000 	cmp	r6, #0
4000bbdc:	0a00001a 	beq	4000bc4c <_tx_byte_pool_search+0x1a0>
4000bbe0:	e0460001 	sub	r0, r6, r1
4000bbe4:	e3500014 	cmp	r0, #20
4000bbe8:	3a00000a 	bcc	4000bc18 <_tx_byte_pool_search+0x16c>
4000bbec:	e08e0001 	add	r0, lr, r1
4000bbf0:	e2804008 	add	r4, r0, #8
4000bbf4:	e59e0000 	ldr	r0, [lr]
4000bbf8:	e5840000 	str	r0, [r4]
4000bbfc:	e59f005c 	ldr	r0, [pc, #92]	; 4000bc60 <_tx_byte_pool_search+0x1b4>
4000bc00:	e5840004 	str	r0, [r4, #4]
4000bc04:	e592000c 	ldr	r0, [r2, #12]
4000bc08:	e2800001 	add	r0, r0, #1
4000bc0c:	e582000c 	str	r0, [r2, #12]
4000bc10:	e58e4000 	str	r4, [lr]
4000bc14:	e1a06001 	mov	r6, r1
4000bc18:	e58e2004 	str	r2, [lr, #4]
4000bc1c:	e5920008 	ldr	r0, [r2, #8]
4000bc20:	e0400006 	sub	r0, r0, r6
4000bc24:	e2400008 	sub	r0, r0, #8
4000bc28:	e5820008 	str	r0, [r2, #8]
4000bc2c:	e5920014 	ldr	r0, [r2, #20]
4000bc30:	e150000e 	cmp	r0, lr
4000bc34:	1a000001 	bne	4000bc40 <_tx_byte_pool_search+0x194>
4000bc38:	e59e0000 	ldr	r0, [lr]
4000bc3c:	e5820014 	str	r0, [r2, #20]
4000bc40:	e121f003 	msr	CPSR_c, r3
4000bc44:	e28ee008 	add	lr, lr, #8
4000bc48:	ea000001 	b	4000bc54 <_tx_byte_pool_search+0x1a8>
4000bc4c:	e121f003 	msr	CPSR_c, r3
4000bc50:	e3a0e000 	mov	lr, #0
4000bc54:	e1a0000e 	mov	r0, lr
4000bc58:	eaffff9e 	b	4000bad8 <_tx_byte_pool_search+0x2c>
4000bc5c:	40030e54 	.word	0x40030e54
4000bc60:	ffffeeee 	.word	0xffffeeee

4000bc64 <_tx_byte_release>:
4000bc64:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000bc68:	e1a04000 	mov	r4, r0
4000bc6c:	e1a09004 	mov	r9, r4
4000bc70:	e1b04009 	movs	r4, r9
4000bc74:	0a00000f 	beq	4000bcb8 <_tx_byte_release+0x54>
4000bc78:	e2499008 	sub	r9, r9, #8
4000bc7c:	e5990004 	ldr	r0, [r9, #4]
4000bc80:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000bc84:	e2911012 	adds	r1, r1, #18
4000bc88:	0a000008 	beq	4000bcb0 <_tx_byte_release+0x4c>
4000bc8c:	e5997004 	ldr	r7, [r9, #4]
4000bc90:	e3570000 	cmp	r7, #0
4000bc94:	0a000003 	beq	4000bca8 <_tx_byte_release+0x44>
4000bc98:	e5970000 	ldr	r0, [r7]
4000bc9c:	e59f125c 	ldr	r1, [pc, #604]	; 4000bf00 <_tx_byte_release+0x29c>
4000bca0:	e1500001 	cmp	r0, r1
4000bca4:	0a000005 	beq	4000bcc0 <_tx_byte_release+0x5c>
4000bca8:	e3a00003 	mov	r0, #3
4000bcac:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000bcb0:	e3a00003 	mov	r0, #3
4000bcb4:	eafffffc 	b	4000bcac <_tx_byte_release+0x48>
4000bcb8:	e3a00003 	mov	r0, #3
4000bcbc:	eafffffa 	b	4000bcac <_tx_byte_release+0x48>
4000bcc0:	e59f023c 	ldr	r0, [pc, #572]	; 4000bf04 <_tx_byte_release+0x2a0>
4000bcc4:	e5908000 	ldr	r8, [r0]
4000bcc8:	e5878020 	str	r8, [r7, #32]
4000bccc:	e10f5000 	mrs	r5, CPSR
4000bcd0:	e3856080 	orr	r6, r5, #128	; 0x80
4000bcd4:	e121f006 	msr	CPSR_c, r6
4000bcd8:	e59f1228 	ldr	r1, [pc, #552]	; 4000bf08 <_tx_byte_release+0x2a4>
4000bcdc:	e5910000 	ldr	r0, [r1]
4000bce0:	e3500000 	cmp	r0, #0
4000bce4:	0a000032 	beq	4000bdb4 <_tx_byte_release+0x150>
4000bce8:	e59f121c 	ldr	r1, [pc, #540]	; 4000bf0c <_tx_byte_release+0x2a8>
4000bcec:	e5911000 	ldr	r1, [r1]
4000bcf0:	e2811001 	add	r1, r1, #1
4000bcf4:	e59f2210 	ldr	r2, [pc, #528]	; 4000bf0c <_tx_byte_release+0x2a8>
4000bcf8:	e5821000 	str	r1, [r2]
4000bcfc:	e580100c 	str	r1, [r0, #12]
4000bd00:	e59f1208 	ldr	r1, [pc, #520]	; 4000bf10 <_tx_byte_release+0x2ac>
4000bd04:	e5911000 	ldr	r1, [r1]
4000bd08:	e3510000 	cmp	r1, #0
4000bd0c:	1a000006 	bne	4000bd2c <_tx_byte_release+0xc8>
4000bd10:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bf04 <_tx_byte_release+0x2a0>
4000bd14:	e5911000 	ldr	r1, [r1]
4000bd18:	e5801000 	str	r1, [r0]
4000bd1c:	e5901000 	ldr	r1, [r0]
4000bd20:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bd24:	e5801004 	str	r1, [r0, #4]
4000bd28:	ea00000d 	b	4000bd64 <_tx_byte_release+0x100>
4000bd2c:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bf10 <_tx_byte_release+0x2ac>
4000bd30:	e5911000 	ldr	r1, [r1]
4000bd34:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bf14 <_tx_byte_release+0x2b0>
4000bd38:	e1510002 	cmp	r1, r2
4000bd3c:	2a000004 	bcs	4000bd54 <_tx_byte_release+0xf0>
4000bd40:	e3e01000 	mvn	r1, #0
4000bd44:	e5801000 	str	r1, [r0]
4000bd48:	e3a01000 	mov	r1, #0
4000bd4c:	e5801004 	str	r1, [r0, #4]
4000bd50:	ea000003 	b	4000bd64 <_tx_byte_release+0x100>
4000bd54:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bf14 <_tx_byte_release+0x2b0>
4000bd58:	e5801000 	str	r1, [r0]
4000bd5c:	e3a01000 	mov	r1, #0
4000bd60:	e5801004 	str	r1, [r0, #4]
4000bd64:	e3a0101b 	mov	r1, #27
4000bd68:	e5801008 	str	r1, [r0, #8]
4000bd6c:	e5807010 	str	r7, [r0, #16]
4000bd70:	e5804014 	str	r4, [r0, #20]
4000bd74:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000bd78:	e5801018 	str	r1, [r0, #24]
4000bd7c:	e5971008 	ldr	r1, [r7, #8]
4000bd80:	e580101c 	str	r1, [r0, #28]
4000bd84:	e2800020 	add	r0, r0, #32
4000bd88:	e59f1188 	ldr	r1, [pc, #392]	; 4000bf18 <_tx_byte_release+0x2b4>
4000bd8c:	e5911000 	ldr	r1, [r1]
4000bd90:	e1500001 	cmp	r0, r1
4000bd94:	3a000001 	bcc	4000bda0 <_tx_byte_release+0x13c>
4000bd98:	e59f117c 	ldr	r1, [pc, #380]	; 4000bf1c <_tx_byte_release+0x2b8>
4000bd9c:	e5910000 	ldr	r0, [r1]
4000bda0:	e59f1160 	ldr	r1, [pc, #352]	; 4000bf08 <_tx_byte_release+0x2a4>
4000bda4:	e5810000 	str	r0, [r1]
4000bda8:	e59f1170 	ldr	r1, [pc, #368]	; 4000bf20 <_tx_byte_release+0x2bc>
4000bdac:	e5911000 	ldr	r1, [r1]
4000bdb0:	e5810020 	str	r0, [r1, #32]
4000bdb4:	e59f0168 	ldr	r0, [pc, #360]	; 4000bf24 <_tx_byte_release+0x2c0>
4000bdb8:	e5890004 	str	r0, [r9, #4]
4000bdbc:	e5970008 	ldr	r0, [r7, #8]
4000bdc0:	e5991000 	ldr	r1, [r9]
4000bdc4:	e0411009 	sub	r1, r1, r9
4000bdc8:	e0800001 	add	r0, r0, r1
4000bdcc:	e5870008 	str	r0, [r7, #8]
4000bdd0:	e5970014 	ldr	r0, [r7, #20]
4000bdd4:	e1500009 	cmp	r0, r9
4000bdd8:	9a000000 	bls	4000bde0 <_tx_byte_release+0x17c>
4000bddc:	e5879014 	str	r9, [r7, #20]
4000bde0:	ea00003e 	b	4000bee0 <_tx_byte_release+0x27c>
4000bde4:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bde8:	e121f005 	msr	CPSR_c, r5
4000bdec:	e1a00007 	mov	r0, r7
4000bdf0:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bdf4:	ebffff2c 	bl	4000baac <_tx_byte_pool_search>
4000bdf8:	e1a09000 	mov	r9, r0
4000bdfc:	e10f5000 	mrs	r5, CPSR
4000be00:	e3856080 	orr	r6, r5, #128	; 0x80
4000be04:	e121f006 	msr	CPSR_c, r6
4000be08:	e3590000 	cmp	r9, #0
4000be0c:	1a000000 	bne	4000be14 <_tx_byte_release+0x1b0>
4000be10:	ea000035 	b	4000beec <_tx_byte_release+0x288>
4000be14:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000be18:	e150000a 	cmp	r0, sl
4000be1c:	0a00000c 	beq	4000be54 <_tx_byte_release+0x1f0>
4000be20:	e2499008 	sub	r9, r9, #8
4000be24:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bf24 <_tx_byte_release+0x2c0>
4000be28:	e5890004 	str	r0, [r9, #4]
4000be2c:	e5970008 	ldr	r0, [r7, #8]
4000be30:	e5991000 	ldr	r1, [r9]
4000be34:	e0411009 	sub	r1, r1, r9
4000be38:	e0800001 	add	r0, r0, r1
4000be3c:	e5870008 	str	r0, [r7, #8]
4000be40:	e5970014 	ldr	r0, [r7, #20]
4000be44:	e1500009 	cmp	r0, r9
4000be48:	9a000000 	bls	4000be50 <_tx_byte_release+0x1ec>
4000be4c:	e5879014 	str	r9, [r7, #20]
4000be50:	ea000022 	b	4000bee0 <_tx_byte_release+0x27c>
4000be54:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be58:	e150000a 	cmp	r0, sl
4000be5c:	1a000002 	bne	4000be6c <_tx_byte_release+0x208>
4000be60:	e3a00000 	mov	r0, #0
4000be64:	e5870024 	str	r0, [r7, #36]	; 0x24
4000be68:	ea000007 	b	4000be8c <_tx_byte_release+0x228>
4000be6c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be70:	e5870024 	str	r0, [r7, #36]	; 0x24
4000be74:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000be78:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000be7c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000be80:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be84:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000be88:	e5810070 	str	r0, [r1, #112]	; 0x70
4000be8c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000be90:	e2400001 	sub	r0, r0, #1
4000be94:	e5870028 	str	r0, [r7, #40]	; 0x28
4000be98:	e3a00000 	mov	r0, #0
4000be9c:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bea0:	e59f0080 	ldr	r0, [pc, #128]	; 4000bf28 <_tx_byte_release+0x2c4>
4000bea4:	e5900000 	ldr	r0, [r0]
4000bea8:	e2800001 	add	r0, r0, #1
4000beac:	e59f1074 	ldr	r1, [pc, #116]	; 4000bf28 <_tx_byte_release+0x2c4>
4000beb0:	e5810000 	str	r0, [r1]
4000beb4:	e121f005 	msr	CPSR_c, r5
4000beb8:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bebc:	e5809000 	str	r9, [r0]
4000bec0:	e3a00000 	mov	r0, #0
4000bec4:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bec8:	e1a0000a 	mov	r0, sl
4000becc:	eb000d96 	bl	4000f52c <_tx_thread_system_resume>
4000bed0:	e10f5000 	mrs	r5, CPSR
4000bed4:	e3856080 	orr	r6, r5, #128	; 0x80
4000bed8:	e121f006 	msr	CPSR_c, r6
4000bedc:	e1a00000 	nop			; (mov r0, r0)
4000bee0:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bee4:	e3500000 	cmp	r0, #0
4000bee8:	1affffbd 	bne	4000bde4 <_tx_byte_release+0x180>
4000beec:	e1a00000 	nop			; (mov r0, r0)
4000bef0:	e121f005 	msr	CPSR_c, r5
4000bef4:	eb000d60 	bl	4000f47c <_tx_thread_system_preempt_check>
4000bef8:	e3a00000 	mov	r0, #0
4000befc:	eaffff6a 	b	4000bcac <_tx_byte_release+0x48>
4000bf00:	42595445 	.word	0x42595445
4000bf04:	40030e54 	.word	0x40030e54
4000bf08:	40030ec0 	.word	0x40030ec0
4000bf0c:	40030ec4 	.word	0x40030ec4
4000bf10:	40030e4c 	.word	0x40030e4c
4000bf14:	f0f0f0f0 	.word	0xf0f0f0f0
4000bf18:	40030ebc 	.word	0x40030ebc
4000bf1c:	40030eb8 	.word	0x40030eb8
4000bf20:	40030eac 	.word	0x40030eac
4000bf24:	ffffeeee 	.word	0xffffeeee
4000bf28:	40030e70 	.word	0x40030e70

4000bf2c <_tx_event_flags_create>:
4000bf2c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bf30:	e1a04000 	mov	r4, r0
4000bf34:	e1a05001 	mov	r5, r1
4000bf38:	e3a01028 	mov	r1, #40	; 0x28
4000bf3c:	e1a00004 	mov	r0, r4
4000bf40:	eb001e73 	bl	40013914 <__aeabi_memclr4>
4000bf44:	e5845004 	str	r5, [r4, #4]
4000bf48:	e10f6000 	mrs	r6, CPSR
4000bf4c:	e3867080 	orr	r7, r6, #128	; 0x80
4000bf50:	e121f007 	msr	CPSR_c, r7
4000bf54:	e59f0170 	ldr	r0, [pc, #368]	; 4000c0cc <_tx_event_flags_create+0x1a0>
4000bf58:	e5840000 	str	r0, [r4]
4000bf5c:	e59f016c 	ldr	r0, [pc, #364]	; 4000c0d0 <_tx_event_flags_create+0x1a4>
4000bf60:	e5900000 	ldr	r0, [r0]
4000bf64:	e3500000 	cmp	r0, #0
4000bf68:	0a00000e 	beq	4000bfa8 <_tx_event_flags_create+0x7c>
4000bf6c:	e59f015c 	ldr	r0, [pc, #348]	; 4000c0d0 <_tx_event_flags_create+0x1a4>
4000bf70:	e5900000 	ldr	r0, [r0]
4000bf74:	e590001c 	ldr	r0, [r0, #28]
4000bf78:	e58d0004 	str	r0, [sp, #4]
4000bf7c:	e59f014c 	ldr	r0, [pc, #332]	; 4000c0d0 <_tx_event_flags_create+0x1a4>
4000bf80:	e5900000 	ldr	r0, [r0]
4000bf84:	e580401c 	str	r4, [r0, #28]
4000bf88:	e59d0004 	ldr	r0, [sp, #4]
4000bf8c:	e5804018 	str	r4, [r0, #24]
4000bf90:	e59d0004 	ldr	r0, [sp, #4]
4000bf94:	e584001c 	str	r0, [r4, #28]
4000bf98:	e59f0130 	ldr	r0, [pc, #304]	; 4000c0d0 <_tx_event_flags_create+0x1a4>
4000bf9c:	e5900000 	ldr	r0, [r0]
4000bfa0:	e5840018 	str	r0, [r4, #24]
4000bfa4:	ea000003 	b	4000bfb8 <_tx_event_flags_create+0x8c>
4000bfa8:	e59f0120 	ldr	r0, [pc, #288]	; 4000c0d0 <_tx_event_flags_create+0x1a4>
4000bfac:	e5804000 	str	r4, [r0]
4000bfb0:	e5844018 	str	r4, [r4, #24]
4000bfb4:	e584401c 	str	r4, [r4, #28]
4000bfb8:	e59f0114 	ldr	r0, [pc, #276]	; 4000c0d4 <_tx_event_flags_create+0x1a8>
4000bfbc:	e5900000 	ldr	r0, [r0]
4000bfc0:	e2800001 	add	r0, r0, #1
4000bfc4:	e59f1108 	ldr	r1, [pc, #264]	; 4000c0d4 <_tx_event_flags_create+0x1a8>
4000bfc8:	e5810000 	str	r0, [r1]
4000bfcc:	e3a03000 	mov	r3, #0
4000bfd0:	e1a02005 	mov	r2, r5
4000bfd4:	e1a01004 	mov	r1, r4
4000bfd8:	e3a00006 	mov	r0, #6
4000bfdc:	e58d3000 	str	r3, [sp]
4000bfe0:	eb0010a7 	bl	40010284 <_tx_trace_object_register>
4000bfe4:	e59f10ec 	ldr	r1, [pc, #236]	; 4000c0d8 <_tx_event_flags_create+0x1ac>
4000bfe8:	e5910000 	ldr	r0, [r1]
4000bfec:	e3500000 	cmp	r0, #0
4000bff0:	0a000032 	beq	4000c0c0 <_tx_event_flags_create+0x194>
4000bff4:	e59f10e0 	ldr	r1, [pc, #224]	; 4000c0dc <_tx_event_flags_create+0x1b0>
4000bff8:	e5911000 	ldr	r1, [r1]
4000bffc:	e2811001 	add	r1, r1, #1
4000c000:	e59f20d4 	ldr	r2, [pc, #212]	; 4000c0dc <_tx_event_flags_create+0x1b0>
4000c004:	e5821000 	str	r1, [r2]
4000c008:	e580100c 	str	r1, [r0, #12]
4000c00c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000c0e0 <_tx_event_flags_create+0x1b4>
4000c010:	e5911000 	ldr	r1, [r1]
4000c014:	e3510000 	cmp	r1, #0
4000c018:	1a000006 	bne	4000c038 <_tx_event_flags_create+0x10c>
4000c01c:	e59f10c0 	ldr	r1, [pc, #192]	; 4000c0e4 <_tx_event_flags_create+0x1b8>
4000c020:	e5911000 	ldr	r1, [r1]
4000c024:	e5801000 	str	r1, [r0]
4000c028:	e5901000 	ldr	r1, [r0]
4000c02c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c030:	e5801004 	str	r1, [r0, #4]
4000c034:	ea00000d 	b	4000c070 <_tx_event_flags_create+0x144>
4000c038:	e59f10a0 	ldr	r1, [pc, #160]	; 4000c0e0 <_tx_event_flags_create+0x1b4>
4000c03c:	e5911000 	ldr	r1, [r1]
4000c040:	e59f20a0 	ldr	r2, [pc, #160]	; 4000c0e8 <_tx_event_flags_create+0x1bc>
4000c044:	e1510002 	cmp	r1, r2
4000c048:	2a000004 	bcs	4000c060 <_tx_event_flags_create+0x134>
4000c04c:	e3e01000 	mvn	r1, #0
4000c050:	e5801000 	str	r1, [r0]
4000c054:	e3a01000 	mov	r1, #0
4000c058:	e5801004 	str	r1, [r0, #4]
4000c05c:	ea000003 	b	4000c070 <_tx_event_flags_create+0x144>
4000c060:	e59f1080 	ldr	r1, [pc, #128]	; 4000c0e8 <_tx_event_flags_create+0x1bc>
4000c064:	e5801000 	str	r1, [r0]
4000c068:	e3a01000 	mov	r1, #0
4000c06c:	e5801004 	str	r1, [r0, #4]
4000c070:	e3a0101e 	mov	r1, #30
4000c074:	e5801008 	str	r1, [r0, #8]
4000c078:	e5804010 	str	r4, [r0, #16]
4000c07c:	e28d1004 	add	r1, sp, #4
4000c080:	e5801014 	str	r1, [r0, #20]
4000c084:	e3a01000 	mov	r1, #0
4000c088:	e5801018 	str	r1, [r0, #24]
4000c08c:	e580101c 	str	r1, [r0, #28]
4000c090:	e2800020 	add	r0, r0, #32
4000c094:	e59f1050 	ldr	r1, [pc, #80]	; 4000c0ec <_tx_event_flags_create+0x1c0>
4000c098:	e5911000 	ldr	r1, [r1]
4000c09c:	e1500001 	cmp	r0, r1
4000c0a0:	3a000001 	bcc	4000c0ac <_tx_event_flags_create+0x180>
4000c0a4:	e59f1044 	ldr	r1, [pc, #68]	; 4000c0f0 <_tx_event_flags_create+0x1c4>
4000c0a8:	e5910000 	ldr	r0, [r1]
4000c0ac:	e59f1024 	ldr	r1, [pc, #36]	; 4000c0d8 <_tx_event_flags_create+0x1ac>
4000c0b0:	e5810000 	str	r0, [r1]
4000c0b4:	e59f1038 	ldr	r1, [pc, #56]	; 4000c0f4 <_tx_event_flags_create+0x1c8>
4000c0b8:	e5911000 	ldr	r1, [r1]
4000c0bc:	e5810020 	str	r0, [r1, #32]
4000c0c0:	e121f006 	msr	CPSR_c, r6
4000c0c4:	e3a00000 	mov	r0, #0
4000c0c8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000c0cc:	4456444e 	.word	0x4456444e
4000c0d0:	40030ed8 	.word	0x40030ed8
4000c0d4:	40030edc 	.word	0x40030edc
4000c0d8:	40030ec0 	.word	0x40030ec0
4000c0dc:	40030ec4 	.word	0x40030ec4
4000c0e0:	40030e4c 	.word	0x40030e4c
4000c0e4:	40030e54 	.word	0x40030e54
4000c0e8:	f0f0f0f0 	.word	0xf0f0f0f0
4000c0ec:	40030ebc 	.word	0x40030ebc
4000c0f0:	40030eb8 	.word	0x40030eb8
4000c0f4:	40030eac 	.word	0x40030eac

4000c0f8 <_tx_event_flags_delete>:
4000c0f8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000c0fc:	e1a04000 	mov	r4, r0
4000c100:	e10f5000 	mrs	r5, CPSR
4000c104:	e3856080 	orr	r6, r5, #128	; 0x80
4000c108:	e121f006 	msr	CPSR_c, r6
4000c10c:	e59f1204 	ldr	r1, [pc, #516]	; 4000c318 <_tx_event_flags_delete+0x220>
4000c110:	e5910000 	ldr	r0, [r1]
4000c114:	e3500000 	cmp	r0, #0
4000c118:	0a000031 	beq	4000c1e4 <_tx_event_flags_delete+0xec>
4000c11c:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c31c <_tx_event_flags_delete+0x224>
4000c120:	e5911000 	ldr	r1, [r1]
4000c124:	e2811001 	add	r1, r1, #1
4000c128:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c31c <_tx_event_flags_delete+0x224>
4000c12c:	e5821000 	str	r1, [r2]
4000c130:	e580100c 	str	r1, [r0, #12]
4000c134:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c320 <_tx_event_flags_delete+0x228>
4000c138:	e5911000 	ldr	r1, [r1]
4000c13c:	e3510000 	cmp	r1, #0
4000c140:	1a000006 	bne	4000c160 <_tx_event_flags_delete+0x68>
4000c144:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c324 <_tx_event_flags_delete+0x22c>
4000c148:	e5911000 	ldr	r1, [r1]
4000c14c:	e5801000 	str	r1, [r0]
4000c150:	e5901000 	ldr	r1, [r0]
4000c154:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c158:	e5801004 	str	r1, [r0, #4]
4000c15c:	ea00000d 	b	4000c198 <_tx_event_flags_delete+0xa0>
4000c160:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c320 <_tx_event_flags_delete+0x228>
4000c164:	e5911000 	ldr	r1, [r1]
4000c168:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c328 <_tx_event_flags_delete+0x230>
4000c16c:	e1510002 	cmp	r1, r2
4000c170:	2a000004 	bcs	4000c188 <_tx_event_flags_delete+0x90>
4000c174:	e3e01000 	mvn	r1, #0
4000c178:	e5801000 	str	r1, [r0]
4000c17c:	e3a01000 	mov	r1, #0
4000c180:	e5801004 	str	r1, [r0, #4]
4000c184:	ea000003 	b	4000c198 <_tx_event_flags_delete+0xa0>
4000c188:	e59f1198 	ldr	r1, [pc, #408]	; 4000c328 <_tx_event_flags_delete+0x230>
4000c18c:	e5801000 	str	r1, [r0]
4000c190:	e3a01000 	mov	r1, #0
4000c194:	e5801004 	str	r1, [r0, #4]
4000c198:	e3a0101f 	mov	r1, #31
4000c19c:	e5801008 	str	r1, [r0, #8]
4000c1a0:	e5804010 	str	r4, [r0, #16]
4000c1a4:	e580d014 	str	sp, [r0, #20]
4000c1a8:	e3a01000 	mov	r1, #0
4000c1ac:	e5801018 	str	r1, [r0, #24]
4000c1b0:	e580101c 	str	r1, [r0, #28]
4000c1b4:	e2800020 	add	r0, r0, #32
4000c1b8:	e59f116c 	ldr	r1, [pc, #364]	; 4000c32c <_tx_event_flags_delete+0x234>
4000c1bc:	e5911000 	ldr	r1, [r1]
4000c1c0:	e1500001 	cmp	r0, r1
4000c1c4:	3a000001 	bcc	4000c1d0 <_tx_event_flags_delete+0xd8>
4000c1c8:	e59f1160 	ldr	r1, [pc, #352]	; 4000c330 <_tx_event_flags_delete+0x238>
4000c1cc:	e5910000 	ldr	r0, [r1]
4000c1d0:	e59f1140 	ldr	r1, [pc, #320]	; 4000c318 <_tx_event_flags_delete+0x220>
4000c1d4:	e5810000 	str	r0, [r1]
4000c1d8:	e59f1154 	ldr	r1, [pc, #340]	; 4000c334 <_tx_event_flags_delete+0x23c>
4000c1dc:	e5911000 	ldr	r1, [r1]
4000c1e0:	e5810020 	str	r0, [r1, #32]
4000c1e4:	e1a00004 	mov	r0, r4
4000c1e8:	eb001090 	bl	40010430 <_tx_trace_object_unregister>
4000c1ec:	e59f0144 	ldr	r0, [pc, #324]	; 4000c338 <_tx_event_flags_delete+0x240>
4000c1f0:	e5900000 	ldr	r0, [r0]
4000c1f4:	e2400001 	sub	r0, r0, #1
4000c1f8:	e59f1138 	ldr	r1, [pc, #312]	; 4000c338 <_tx_event_flags_delete+0x240>
4000c1fc:	e5810000 	str	r0, [r1]
4000c200:	e3a00000 	mov	r0, #0
4000c204:	e5840000 	str	r0, [r4]
4000c208:	e5940018 	ldr	r0, [r4, #24]
4000c20c:	e1500004 	cmp	r0, r4
4000c210:	1a000003 	bne	4000c224 <_tx_event_flags_delete+0x12c>
4000c214:	e3a00000 	mov	r0, #0
4000c218:	e59f111c 	ldr	r1, [pc, #284]	; 4000c33c <_tx_event_flags_delete+0x244>
4000c21c:	e5810000 	str	r0, [r1]
4000c220:	ea00000c 	b	4000c258 <_tx_event_flags_delete+0x160>
4000c224:	e594001c 	ldr	r0, [r4, #28]
4000c228:	e5941018 	ldr	r1, [r4, #24]
4000c22c:	e581001c 	str	r0, [r1, #28]
4000c230:	e5940018 	ldr	r0, [r4, #24]
4000c234:	e594101c 	ldr	r1, [r4, #28]
4000c238:	e5810018 	str	r0, [r1, #24]
4000c23c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c33c <_tx_event_flags_delete+0x244>
4000c240:	e5900000 	ldr	r0, [r0]
4000c244:	e1500004 	cmp	r0, r4
4000c248:	1a000002 	bne	4000c258 <_tx_event_flags_delete+0x160>
4000c24c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c33c <_tx_event_flags_delete+0x244>
4000c250:	e5940018 	ldr	r0, [r4, #24]
4000c254:	e5810000 	str	r0, [r1]
4000c258:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c340 <_tx_event_flags_delete+0x248>
4000c25c:	e5900000 	ldr	r0, [r0]
4000c260:	e2800001 	add	r0, r0, #1
4000c264:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c340 <_tx_event_flags_delete+0x248>
4000c268:	e5810000 	str	r0, [r1]
4000c26c:	e121f005 	msr	CPSR_c, r5
4000c270:	e5940010 	ldr	r0, [r4, #16]
4000c274:	e58d0000 	str	r0, [sp]
4000c278:	ea000017 	b	4000c2dc <_tx_event_flags_delete+0x1e4>
4000c27c:	e10f5000 	mrs	r5, CPSR
4000c280:	e3856080 	orr	r6, r5, #128	; 0x80
4000c284:	e121f006 	msr	CPSR_c, r6
4000c288:	e3a00000 	mov	r0, #0
4000c28c:	e59d1000 	ldr	r1, [sp]
4000c290:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c294:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c340 <_tx_event_flags_delete+0x248>
4000c298:	e5900000 	ldr	r0, [r0]
4000c29c:	e2800001 	add	r0, r0, #1
4000c2a0:	e59f1098 	ldr	r1, [pc, #152]	; 4000c340 <_tx_event_flags_delete+0x248>
4000c2a4:	e5810000 	str	r0, [r1]
4000c2a8:	e121f005 	msr	CPSR_c, r5
4000c2ac:	e3a00001 	mov	r0, #1
4000c2b0:	e59d1000 	ldr	r1, [sp]
4000c2b4:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c2b8:	e59d0000 	ldr	r0, [sp]
4000c2bc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c2c0:	e58d0000 	str	r0, [sp]
4000c2c4:	e59d1000 	ldr	r1, [sp]
4000c2c8:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c2cc:	eb000c96 	bl	4000f52c <_tx_thread_system_resume>
4000c2d0:	e5940014 	ldr	r0, [r4, #20]
4000c2d4:	e2400001 	sub	r0, r0, #1
4000c2d8:	e5840014 	str	r0, [r4, #20]
4000c2dc:	e5940014 	ldr	r0, [r4, #20]
4000c2e0:	e3500000 	cmp	r0, #0
4000c2e4:	1affffe4 	bne	4000c27c <_tx_event_flags_delete+0x184>
4000c2e8:	e10f5000 	mrs	r5, CPSR
4000c2ec:	e3856080 	orr	r6, r5, #128	; 0x80
4000c2f0:	e121f006 	msr	CPSR_c, r6
4000c2f4:	e59f0044 	ldr	r0, [pc, #68]	; 4000c340 <_tx_event_flags_delete+0x248>
4000c2f8:	e5900000 	ldr	r0, [r0]
4000c2fc:	e2400001 	sub	r0, r0, #1
4000c300:	e59f1038 	ldr	r1, [pc, #56]	; 4000c340 <_tx_event_flags_delete+0x248>
4000c304:	e5810000 	str	r0, [r1]
4000c308:	e121f005 	msr	CPSR_c, r5
4000c30c:	eb000c5a 	bl	4000f47c <_tx_thread_system_preempt_check>
4000c310:	e3a00000 	mov	r0, #0
4000c314:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c318:	40030ec0 	.word	0x40030ec0
4000c31c:	40030ec4 	.word	0x40030ec4
4000c320:	40030e4c 	.word	0x40030e4c
4000c324:	40030e54 	.word	0x40030e54
4000c328:	f0f0f0f0 	.word	0xf0f0f0f0
4000c32c:	40030ebc 	.word	0x40030ebc
4000c330:	40030eb8 	.word	0x40030eb8
4000c334:	40030eac 	.word	0x40030eac
4000c338:	40030edc 	.word	0x40030edc
4000c33c:	40030ed8 	.word	0x40030ed8
4000c340:	40030e70 	.word	0x40030e70

4000c344 <_tx_event_flags_get>:
4000c344:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c348:	e1a04000 	mov	r4, r0
4000c34c:	e1a05001 	mov	r5, r1
4000c350:	e1a06002 	mov	r6, r2
4000c354:	e1a07003 	mov	r7, r3
4000c358:	e10f8000 	mrs	r8, CPSR
4000c35c:	e3880080 	orr	r0, r8, #128	; 0x80
4000c360:	e58d0004 	str	r0, [sp, #4]
4000c364:	e59d0004 	ldr	r0, [sp, #4]
4000c368:	e121f000 	msr	CPSR_c, r0
4000c36c:	e59f1278 	ldr	r1, [pc, #632]	; 4000c5ec <_tx_event_flags_get+0x2a8>
4000c370:	e5910000 	ldr	r0, [r1]
4000c374:	e3500000 	cmp	r0, #0
4000c378:	0a000031 	beq	4000c444 <_tx_event_flags_get+0x100>
4000c37c:	e59f126c 	ldr	r1, [pc, #620]	; 4000c5f0 <_tx_event_flags_get+0x2ac>
4000c380:	e5911000 	ldr	r1, [r1]
4000c384:	e2811001 	add	r1, r1, #1
4000c388:	e59f2260 	ldr	r2, [pc, #608]	; 4000c5f0 <_tx_event_flags_get+0x2ac>
4000c38c:	e5821000 	str	r1, [r2]
4000c390:	e580100c 	str	r1, [r0, #12]
4000c394:	e59f1258 	ldr	r1, [pc, #600]	; 4000c5f4 <_tx_event_flags_get+0x2b0>
4000c398:	e5911000 	ldr	r1, [r1]
4000c39c:	e3510000 	cmp	r1, #0
4000c3a0:	1a000006 	bne	4000c3c0 <_tx_event_flags_get+0x7c>
4000c3a4:	e59f124c 	ldr	r1, [pc, #588]	; 4000c5f8 <_tx_event_flags_get+0x2b4>
4000c3a8:	e5911000 	ldr	r1, [r1]
4000c3ac:	e5801000 	str	r1, [r0]
4000c3b0:	e5901000 	ldr	r1, [r0]
4000c3b4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c3b8:	e5801004 	str	r1, [r0, #4]
4000c3bc:	ea00000d 	b	4000c3f8 <_tx_event_flags_get+0xb4>
4000c3c0:	e59f122c 	ldr	r1, [pc, #556]	; 4000c5f4 <_tx_event_flags_get+0x2b0>
4000c3c4:	e5911000 	ldr	r1, [r1]
4000c3c8:	e59f222c 	ldr	r2, [pc, #556]	; 4000c5fc <_tx_event_flags_get+0x2b8>
4000c3cc:	e1510002 	cmp	r1, r2
4000c3d0:	2a000004 	bcs	4000c3e8 <_tx_event_flags_get+0xa4>
4000c3d4:	e3e01000 	mvn	r1, #0
4000c3d8:	e5801000 	str	r1, [r0]
4000c3dc:	e3a01000 	mov	r1, #0
4000c3e0:	e5801004 	str	r1, [r0, #4]
4000c3e4:	ea000003 	b	4000c3f8 <_tx_event_flags_get+0xb4>
4000c3e8:	e59f120c 	ldr	r1, [pc, #524]	; 4000c5fc <_tx_event_flags_get+0x2b8>
4000c3ec:	e5801000 	str	r1, [r0]
4000c3f0:	e3a01000 	mov	r1, #0
4000c3f4:	e5801004 	str	r1, [r0, #4]
4000c3f8:	e3a01020 	mov	r1, #32
4000c3fc:	e5801008 	str	r1, [r0, #8]
4000c400:	e5804010 	str	r4, [r0, #16]
4000c404:	e5805014 	str	r5, [r0, #20]
4000c408:	e5941008 	ldr	r1, [r4, #8]
4000c40c:	e5801018 	str	r1, [r0, #24]
4000c410:	e580601c 	str	r6, [r0, #28]
4000c414:	e2800020 	add	r0, r0, #32
4000c418:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c600 <_tx_event_flags_get+0x2bc>
4000c41c:	e5911000 	ldr	r1, [r1]
4000c420:	e1500001 	cmp	r0, r1
4000c424:	3a000001 	bcc	4000c430 <_tx_event_flags_get+0xec>
4000c428:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c604 <_tx_event_flags_get+0x2c0>
4000c42c:	e5910000 	ldr	r0, [r1]
4000c430:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c5ec <_tx_event_flags_get+0x2a8>
4000c434:	e5810000 	str	r0, [r1]
4000c438:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c608 <_tx_event_flags_get+0x2c4>
4000c43c:	e5911000 	ldr	r1, [r1]
4000c440:	e5810020 	str	r0, [r1, #32]
4000c444:	e594a008 	ldr	sl, [r4, #8]
4000c448:	e594b020 	ldr	fp, [r4, #32]
4000c44c:	e35b0000 	cmp	fp, #0
4000c450:	0a000000 	beq	4000c458 <_tx_event_flags_get+0x114>
4000c454:	e1caa00b 	bic	sl, sl, fp
4000c458:	e3160002 	tst	r6, #2
4000c45c:	0a000006 	beq	4000c47c <_tx_event_flags_get+0x138>
4000c460:	e00a0005 	and	r0, sl, r5
4000c464:	e1500005 	cmp	r0, r5
4000c468:	1a000001 	bne	4000c474 <_tx_event_flags_get+0x130>
4000c46c:	e3a09000 	mov	r9, #0
4000c470:	ea000006 	b	4000c490 <_tx_event_flags_get+0x14c>
4000c474:	e3a09007 	mov	r9, #7
4000c478:	ea000004 	b	4000c490 <_tx_event_flags_get+0x14c>
4000c47c:	e11a0005 	tst	sl, r5
4000c480:	0a000001 	beq	4000c48c <_tx_event_flags_get+0x148>
4000c484:	e3a09000 	mov	r9, #0
4000c488:	ea000000 	b	4000c490 <_tx_event_flags_get+0x14c>
4000c48c:	e3a09007 	mov	r9, #7
4000c490:	e3590000 	cmp	r9, #0
4000c494:	1a000010 	bne	4000c4dc <_tx_event_flags_get+0x198>
4000c498:	e587a000 	str	sl, [r7]
4000c49c:	e3160001 	tst	r6, #1
4000c4a0:	0a00004e 	beq	4000c5e0 <_tx_event_flags_get+0x29c>
4000c4a4:	e5940014 	ldr	r0, [r4, #20]
4000c4a8:	e3500000 	cmp	r0, #0
4000c4ac:	0a000006 	beq	4000c4cc <_tx_event_flags_get+0x188>
4000c4b0:	e5940010 	ldr	r0, [r4, #16]
4000c4b4:	e3500000 	cmp	r0, #0
4000c4b8:	1a000003 	bne	4000c4cc <_tx_event_flags_get+0x188>
4000c4bc:	e5940020 	ldr	r0, [r4, #32]
4000c4c0:	e1800005 	orr	r0, r0, r5
4000c4c4:	e5840020 	str	r0, [r4, #32]
4000c4c8:	ea000044 	b	4000c5e0 <_tx_event_flags_get+0x29c>
4000c4cc:	e5940008 	ldr	r0, [r4, #8]
4000c4d0:	e1c00005 	bic	r0, r0, r5
4000c4d4:	e5840008 	str	r0, [r4, #8]
4000c4d8:	ea000040 	b	4000c5e0 <_tx_event_flags_get+0x29c>
4000c4dc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c4e0:	e3500000 	cmp	r0, #0
4000c4e4:	0a00003c 	beq	4000c5dc <_tx_event_flags_get+0x298>
4000c4e8:	e59f0108 	ldr	r0, [pc, #264]	; 4000c5f8 <_tx_event_flags_get+0x2b4>
4000c4ec:	e5900000 	ldr	r0, [r0]
4000c4f0:	e58d0000 	str	r0, [sp]
4000c4f4:	e59f1110 	ldr	r1, [pc, #272]	; 4000c60c <_tx_event_flags_get+0x2c8>
4000c4f8:	e59d0000 	ldr	r0, [sp]
4000c4fc:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c500:	e59d0000 	ldr	r0, [sp]
4000c504:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c508:	e59d0000 	ldr	r0, [sp]
4000c50c:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c510:	e59d0000 	ldr	r0, [sp]
4000c514:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c518:	e59d0000 	ldr	r0, [sp]
4000c51c:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c520:	e5940010 	ldr	r0, [r4, #16]
4000c524:	e3500000 	cmp	r0, #0
4000c528:	0a00000e 	beq	4000c568 <_tx_event_flags_get+0x224>
4000c52c:	e5941010 	ldr	r1, [r4, #16]
4000c530:	e59d0000 	ldr	r0, [sp]
4000c534:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c538:	e5940010 	ldr	r0, [r4, #16]
4000c53c:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c540:	e59d0000 	ldr	r0, [sp]
4000c544:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c548:	e59d0000 	ldr	r0, [sp]
4000c54c:	e5941010 	ldr	r1, [r4, #16]
4000c550:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c554:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c558:	e59d0000 	ldr	r0, [sp]
4000c55c:	e5941010 	ldr	r1, [r4, #16]
4000c560:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c564:	ea000005 	b	4000c580 <_tx_event_flags_get+0x23c>
4000c568:	e59d0000 	ldr	r0, [sp]
4000c56c:	e5840010 	str	r0, [r4, #16]
4000c570:	e59d0000 	ldr	r0, [sp]
4000c574:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c578:	e59d0000 	ldr	r0, [sp]
4000c57c:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c580:	e5940014 	ldr	r0, [r4, #20]
4000c584:	e2800001 	add	r0, r0, #1
4000c588:	e5840014 	str	r0, [r4, #20]
4000c58c:	e3a00007 	mov	r0, #7
4000c590:	e59d1000 	ldr	r1, [sp]
4000c594:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c598:	e3a01001 	mov	r1, #1
4000c59c:	e59d0000 	ldr	r0, [sp]
4000c5a0:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c5a4:	e59d0000 	ldr	r0, [sp]
4000c5a8:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c5ac:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c5b0:	e59f0058 	ldr	r0, [pc, #88]	; 4000c610 <_tx_event_flags_get+0x2cc>
4000c5b4:	e5900000 	ldr	r0, [r0]
4000c5b8:	e2800001 	add	r0, r0, #1
4000c5bc:	e59f104c 	ldr	r1, [pc, #76]	; 4000c610 <_tx_event_flags_get+0x2cc>
4000c5c0:	e5810000 	str	r0, [r1]
4000c5c4:	e121f008 	msr	CPSR_c, r8
4000c5c8:	e59d0000 	ldr	r0, [sp]
4000c5cc:	ebfff22f 	bl	40008e90 <_tx_thread_system_suspend>
4000c5d0:	e59d0000 	ldr	r0, [sp]
4000c5d4:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c5d8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c5dc:	e3a09007 	mov	r9, #7
4000c5e0:	e121f008 	msr	CPSR_c, r8
4000c5e4:	e1a00009 	mov	r0, r9
4000c5e8:	eafffffa 	b	4000c5d8 <_tx_event_flags_get+0x294>
4000c5ec:	40030ec0 	.word	0x40030ec0
4000c5f0:	40030ec4 	.word	0x40030ec4
4000c5f4:	40030e4c 	.word	0x40030e4c
4000c5f8:	40030e54 	.word	0x40030e54
4000c5fc:	f0f0f0f0 	.word	0xf0f0f0f0
4000c600:	40030ebc 	.word	0x40030ebc
4000c604:	40030eb8 	.word	0x40030eb8
4000c608:	40030eac 	.word	0x40030eac
4000c60c:	4001053c 	.word	0x4001053c
4000c610:	40030e70 	.word	0x40030e70

4000c614 <_tx_event_flags_set>:
4000c614:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c618:	e24dd01c 	sub	sp, sp, #28
4000c61c:	e1a04000 	mov	r4, r0
4000c620:	e1a05001 	mov	r5, r1
4000c624:	e1a06002 	mov	r6, r2
4000c628:	e10f7000 	mrs	r7, CPSR
4000c62c:	e3870080 	orr	r0, r7, #128	; 0x80
4000c630:	e58d0018 	str	r0, [sp, #24]
4000c634:	e59d0018 	ldr	r0, [sp, #24]
4000c638:	e121f000 	msr	CPSR_c, r0
4000c63c:	e59f1594 	ldr	r1, [pc, #1428]	; 4000cbd8 <_tx_event_flags_set+0x5c4>
4000c640:	e5910000 	ldr	r0, [r1]
4000c644:	e3500000 	cmp	r0, #0
4000c648:	0a000031 	beq	4000c714 <_tx_event_flags_set+0x100>
4000c64c:	e59f1588 	ldr	r1, [pc, #1416]	; 4000cbdc <_tx_event_flags_set+0x5c8>
4000c650:	e5911000 	ldr	r1, [r1]
4000c654:	e2811001 	add	r1, r1, #1
4000c658:	e59f257c 	ldr	r2, [pc, #1404]	; 4000cbdc <_tx_event_flags_set+0x5c8>
4000c65c:	e5821000 	str	r1, [r2]
4000c660:	e580100c 	str	r1, [r0, #12]
4000c664:	e59f1574 	ldr	r1, [pc, #1396]	; 4000cbe0 <_tx_event_flags_set+0x5cc>
4000c668:	e5911000 	ldr	r1, [r1]
4000c66c:	e3510000 	cmp	r1, #0
4000c670:	1a000006 	bne	4000c690 <_tx_event_flags_set+0x7c>
4000c674:	e59f1568 	ldr	r1, [pc, #1384]	; 4000cbe4 <_tx_event_flags_set+0x5d0>
4000c678:	e5911000 	ldr	r1, [r1]
4000c67c:	e5801000 	str	r1, [r0]
4000c680:	e5901000 	ldr	r1, [r0]
4000c684:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c688:	e5801004 	str	r1, [r0, #4]
4000c68c:	ea00000d 	b	4000c6c8 <_tx_event_flags_set+0xb4>
4000c690:	e59f1548 	ldr	r1, [pc, #1352]	; 4000cbe0 <_tx_event_flags_set+0x5cc>
4000c694:	e5911000 	ldr	r1, [r1]
4000c698:	e59f2548 	ldr	r2, [pc, #1352]	; 4000cbe8 <_tx_event_flags_set+0x5d4>
4000c69c:	e1510002 	cmp	r1, r2
4000c6a0:	2a000004 	bcs	4000c6b8 <_tx_event_flags_set+0xa4>
4000c6a4:	e3e01000 	mvn	r1, #0
4000c6a8:	e5801000 	str	r1, [r0]
4000c6ac:	e3a01000 	mov	r1, #0
4000c6b0:	e5801004 	str	r1, [r0, #4]
4000c6b4:	ea000003 	b	4000c6c8 <_tx_event_flags_set+0xb4>
4000c6b8:	e59f1528 	ldr	r1, [pc, #1320]	; 4000cbe8 <_tx_event_flags_set+0x5d4>
4000c6bc:	e5801000 	str	r1, [r0]
4000c6c0:	e3a01000 	mov	r1, #0
4000c6c4:	e5801004 	str	r1, [r0, #4]
4000c6c8:	e3a01024 	mov	r1, #36	; 0x24
4000c6cc:	e5801008 	str	r1, [r0, #8]
4000c6d0:	e5804010 	str	r4, [r0, #16]
4000c6d4:	e5805014 	str	r5, [r0, #20]
4000c6d8:	e5806018 	str	r6, [r0, #24]
4000c6dc:	e5941014 	ldr	r1, [r4, #20]
4000c6e0:	e580101c 	str	r1, [r0, #28]
4000c6e4:	e2800020 	add	r0, r0, #32
4000c6e8:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000cbec <_tx_event_flags_set+0x5d8>
4000c6ec:	e5911000 	ldr	r1, [r1]
4000c6f0:	e1500001 	cmp	r0, r1
4000c6f4:	3a000001 	bcc	4000c700 <_tx_event_flags_set+0xec>
4000c6f8:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000cbf0 <_tx_event_flags_set+0x5dc>
4000c6fc:	e5910000 	ldr	r0, [r1]
4000c700:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000cbd8 <_tx_event_flags_set+0x5c4>
4000c704:	e5810000 	str	r0, [r1]
4000c708:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000cbf4 <_tx_event_flags_set+0x5e0>
4000c70c:	e5911000 	ldr	r1, [r1]
4000c710:	e5810020 	str	r0, [r1, #32]
4000c714:	e3160002 	tst	r6, #2
4000c718:	0a000011 	beq	4000c764 <_tx_event_flags_set+0x150>
4000c71c:	e5940014 	ldr	r0, [r4, #20]
4000c720:	e3500000 	cmp	r0, #0
4000c724:	0a000007 	beq	4000c748 <_tx_event_flags_set+0x134>
4000c728:	e5940010 	ldr	r0, [r4, #16]
4000c72c:	e3500000 	cmp	r0, #0
4000c730:	1a000004 	bne	4000c748 <_tx_event_flags_set+0x134>
4000c734:	e1e01005 	mvn	r1, r5
4000c738:	e5940020 	ldr	r0, [r4, #32]
4000c73c:	e1800001 	orr	r0, r0, r1
4000c740:	e5840020 	str	r0, [r4, #32]
4000c744:	ea000002 	b	4000c754 <_tx_event_flags_set+0x140>
4000c748:	e5940008 	ldr	r0, [r4, #8]
4000c74c:	e0000005 	and	r0, r0, r5
4000c750:	e5840008 	str	r0, [r4, #8]
4000c754:	e121f007 	msr	CPSR_c, r7
4000c758:	e3a00000 	mov	r0, #0
4000c75c:	e28dd01c 	add	sp, sp, #28
4000c760:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c764:	e5940008 	ldr	r0, [r4, #8]
4000c768:	e1800005 	orr	r0, r0, r5
4000c76c:	e5840008 	str	r0, [r4, #8]
4000c770:	e5940020 	ldr	r0, [r4, #32]
4000c774:	e3500000 	cmp	r0, #0
4000c778:	0a000002 	beq	4000c788 <_tx_event_flags_set+0x174>
4000c77c:	e5940020 	ldr	r0, [r4, #32]
4000c780:	e1c00005 	bic	r0, r0, r5
4000c784:	e5840020 	str	r0, [r4, #32]
4000c788:	e5940010 	ldr	r0, [r4, #16]
4000c78c:	e3500000 	cmp	r0, #0
4000c790:	0a000102 	beq	4000cba0 <_tx_event_flags_set+0x58c>
4000c794:	e5940014 	ldr	r0, [r4, #20]
4000c798:	e3500001 	cmp	r0, #1
4000c79c:	1a000048 	bne	4000c8c4 <_tx_event_flags_set+0x2b0>
4000c7a0:	e5940010 	ldr	r0, [r4, #16]
4000c7a4:	e58d0014 	str	r0, [sp, #20]
4000c7a8:	e59d0014 	ldr	r0, [sp, #20]
4000c7ac:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c7b0:	e3100002 	tst	r0, #2
4000c7b4:	0a00000b 	beq	4000c7e8 <_tx_event_flags_set+0x1d4>
4000c7b8:	e5940008 	ldr	r0, [r4, #8]
4000c7bc:	e59d1014 	ldr	r1, [sp, #20]
4000c7c0:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7c4:	e0000001 	and	r0, r0, r1
4000c7c8:	e59d1014 	ldr	r1, [sp, #20]
4000c7cc:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7d0:	e1500001 	cmp	r0, r1
4000c7d4:	1a000001 	bne	4000c7e0 <_tx_event_flags_set+0x1cc>
4000c7d8:	e3a08000 	mov	r8, #0
4000c7dc:	ea000009 	b	4000c808 <_tx_event_flags_set+0x1f4>
4000c7e0:	e3a08007 	mov	r8, #7
4000c7e4:	ea000007 	b	4000c808 <_tx_event_flags_set+0x1f4>
4000c7e8:	e5940008 	ldr	r0, [r4, #8]
4000c7ec:	e59d1014 	ldr	r1, [sp, #20]
4000c7f0:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7f4:	e1100001 	tst	r0, r1
4000c7f8:	0a000001 	beq	4000c804 <_tx_event_flags_set+0x1f0>
4000c7fc:	e3a08000 	mov	r8, #0
4000c800:	ea000000 	b	4000c808 <_tx_event_flags_set+0x1f4>
4000c804:	e3a08007 	mov	r8, #7
4000c808:	e3580000 	cmp	r8, #0
4000c80c:	1a000024 	bne	4000c8a4 <_tx_event_flags_set+0x290>
4000c810:	e5941008 	ldr	r1, [r4, #8]
4000c814:	e59d0014 	ldr	r0, [sp, #20]
4000c818:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c81c:	e5801000 	str	r1, [r0]
4000c820:	e59d0014 	ldr	r0, [sp, #20]
4000c824:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c828:	e3100001 	tst	r0, #1
4000c82c:	0a000004 	beq	4000c844 <_tx_event_flags_set+0x230>
4000c830:	e5940008 	ldr	r0, [r4, #8]
4000c834:	e59d1014 	ldr	r1, [sp, #20]
4000c838:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c83c:	e1c00001 	bic	r0, r0, r1
4000c840:	e5840008 	str	r0, [r4, #8]
4000c844:	e3a00000 	mov	r0, #0
4000c848:	e5840010 	str	r0, [r4, #16]
4000c84c:	e5840014 	str	r0, [r4, #20]
4000c850:	e3a01000 	mov	r1, #0
4000c854:	e59d0014 	ldr	r0, [sp, #20]
4000c858:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c85c:	e59f0394 	ldr	r0, [pc, #916]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000c860:	e5900000 	ldr	r0, [r0]
4000c864:	e2800001 	add	r0, r0, #1
4000c868:	e59f1388 	ldr	r1, [pc, #904]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000c86c:	e5810000 	str	r0, [r1]
4000c870:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c874:	e121f007 	msr	CPSR_c, r7
4000c878:	e35b0000 	cmp	fp, #0
4000c87c:	0a000001 	beq	4000c888 <_tx_event_flags_set+0x274>
4000c880:	e1a00004 	mov	r0, r4
4000c884:	e12fff3b 	blx	fp
4000c888:	e3a00000 	mov	r0, #0
4000c88c:	e59d1014 	ldr	r1, [sp, #20]
4000c890:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c894:	e59d0014 	ldr	r0, [sp, #20]
4000c898:	eb000b23 	bl	4000f52c <_tx_thread_system_resume>
4000c89c:	e3a00000 	mov	r0, #0
4000c8a0:	eaffffad 	b	4000c75c <_tx_event_flags_set+0x148>
4000c8a4:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c8a8:	e121f007 	msr	CPSR_c, r7
4000c8ac:	e35b0000 	cmp	fp, #0
4000c8b0:	0a000001 	beq	4000c8bc <_tx_event_flags_set+0x2a8>
4000c8b4:	e1a00004 	mov	r0, r4
4000c8b8:	e12fff3b 	blx	fp
4000c8bc:	e3a00000 	mov	r0, #0
4000c8c0:	eaffffa5 	b	4000c75c <_tx_event_flags_set+0x148>
4000c8c4:	e5940010 	ldr	r0, [r4, #16]
4000c8c8:	e58d0004 	str	r0, [sp, #4]
4000c8cc:	e59d0004 	ldr	r0, [sp, #4]
4000c8d0:	e58d0014 	str	r0, [sp, #20]
4000c8d4:	e3a00000 	mov	r0, #0
4000c8d8:	e5840010 	str	r0, [r4, #16]
4000c8dc:	e58d000c 	str	r0, [sp, #12]
4000c8e0:	e58d0008 	str	r0, [sp, #8]
4000c8e4:	e5940014 	ldr	r0, [r4, #20]
4000c8e8:	e58d0000 	str	r0, [sp]
4000c8ec:	e5949008 	ldr	r9, [r4, #8]
4000c8f0:	e59f0300 	ldr	r0, [pc, #768]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000c8f4:	e5900000 	ldr	r0, [r0]
4000c8f8:	e2800001 	add	r0, r0, #1
4000c8fc:	e59f12f4 	ldr	r1, [pc, #756]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000c900:	e5810000 	str	r0, [r1]
4000c904:	e1a00000 	nop			; (mov r0, r0)
4000c908:	e121f007 	msr	CPSR_c, r7
4000c90c:	e10f7000 	mrs	r7, CPSR
4000c910:	e3870080 	orr	r0, r7, #128	; 0x80
4000c914:	e58d0018 	str	r0, [sp, #24]
4000c918:	e59d0018 	ldr	r0, [sp, #24]
4000c91c:	e121f000 	msr	CPSR_c, r0
4000c920:	e594000c 	ldr	r0, [r4, #12]
4000c924:	e3500000 	cmp	r0, #0
4000c928:	0a00000b 	beq	4000c95c <_tx_event_flags_set+0x348>
4000c92c:	e3a00000 	mov	r0, #0
4000c930:	e584000c 	str	r0, [r4, #12]
4000c934:	e59d0004 	ldr	r0, [sp, #4]
4000c938:	e58d0014 	str	r0, [sp, #20]
4000c93c:	e5940014 	ldr	r0, [r4, #20]
4000c940:	e58d0000 	str	r0, [sp]
4000c944:	e5940008 	ldr	r0, [r4, #8]
4000c948:	e1899000 	orr	r9, r9, r0
4000c94c:	e59d0014 	ldr	r0, [sp, #20]
4000c950:	e3500000 	cmp	r0, #0
4000c954:	1a000000 	bne	4000c95c <_tx_event_flags_set+0x348>
4000c958:	ea00005d 	b	4000cad4 <_tx_event_flags_set+0x4c0>
4000c95c:	e59d0014 	ldr	r0, [sp, #20]
4000c960:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c964:	e31a0002 	tst	sl, #2
4000c968:	0a00000a 	beq	4000c998 <_tx_event_flags_set+0x384>
4000c96c:	e59d0014 	ldr	r0, [sp, #20]
4000c970:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c974:	e0000009 	and	r0, r0, r9
4000c978:	e59d1014 	ldr	r1, [sp, #20]
4000c97c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c980:	e1500001 	cmp	r0, r1
4000c984:	1a000001 	bne	4000c990 <_tx_event_flags_set+0x37c>
4000c988:	e3a08000 	mov	r8, #0
4000c98c:	ea000008 	b	4000c9b4 <_tx_event_flags_set+0x3a0>
4000c990:	e3a08007 	mov	r8, #7
4000c994:	ea000006 	b	4000c9b4 <_tx_event_flags_set+0x3a0>
4000c998:	e59d0014 	ldr	r0, [sp, #20]
4000c99c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c9a0:	e1100009 	tst	r0, r9
4000c9a4:	0a000001 	beq	4000c9b0 <_tx_event_flags_set+0x39c>
4000c9a8:	e3a08000 	mov	r8, #0
4000c9ac:	ea000000 	b	4000c9b4 <_tx_event_flags_set+0x3a0>
4000c9b0:	e3a08007 	mov	r8, #7
4000c9b4:	e59d0014 	ldr	r0, [sp, #20]
4000c9b8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c9bc:	e58d0010 	str	r0, [sp, #16]
4000c9c0:	e3580000 	cmp	r8, #0
4000c9c4:	1a00003c 	bne	4000cabc <_tx_event_flags_set+0x4a8>
4000c9c8:	e59d0014 	ldr	r0, [sp, #20]
4000c9cc:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c9d0:	e5809000 	str	r9, [r0]
4000c9d4:	e31a0001 	tst	sl, #1
4000c9d8:	0a000004 	beq	4000c9f0 <_tx_event_flags_set+0x3dc>
4000c9dc:	e5940008 	ldr	r0, [r4, #8]
4000c9e0:	e59d1014 	ldr	r1, [sp, #20]
4000c9e4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c9e8:	e1c00001 	bic	r0, r0, r1
4000c9ec:	e5840008 	str	r0, [r4, #8]
4000c9f0:	e59d0014 	ldr	r0, [sp, #20]
4000c9f4:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c9f8:	e1510000 	cmp	r1, r0
4000c9fc:	1a000002 	bne	4000ca0c <_tx_event_flags_set+0x3f8>
4000ca00:	e3a00000 	mov	r0, #0
4000ca04:	e58d0004 	str	r0, [sp, #4]
4000ca08:	ea000010 	b	4000ca50 <_tx_event_flags_set+0x43c>
4000ca0c:	e59d0004 	ldr	r0, [sp, #4]
4000ca10:	e59d1014 	ldr	r1, [sp, #20]
4000ca14:	e1500001 	cmp	r0, r1
4000ca18:	1a000002 	bne	4000ca28 <_tx_event_flags_set+0x414>
4000ca1c:	e59d0014 	ldr	r0, [sp, #20]
4000ca20:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000ca24:	e58d0004 	str	r0, [sp, #4]
4000ca28:	e59d0014 	ldr	r0, [sp, #20]
4000ca2c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000ca30:	e59d1014 	ldr	r1, [sp, #20]
4000ca34:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000ca38:	e5810074 	str	r0, [r1, #116]	; 0x74
4000ca3c:	e59d0014 	ldr	r0, [sp, #20]
4000ca40:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000ca44:	e59d1014 	ldr	r1, [sp, #20]
4000ca48:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000ca4c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ca50:	e5940014 	ldr	r0, [r4, #20]
4000ca54:	e2400001 	sub	r0, r0, #1
4000ca58:	e5840014 	str	r0, [r4, #20]
4000ca5c:	e3a00000 	mov	r0, #0
4000ca60:	e59d1014 	ldr	r1, [sp, #20]
4000ca64:	e5810068 	str	r0, [r1, #104]	; 0x68
4000ca68:	e59d1014 	ldr	r1, [sp, #20]
4000ca6c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000ca70:	e59d000c 	ldr	r0, [sp, #12]
4000ca74:	e3500000 	cmp	r0, #0
4000ca78:	1a000007 	bne	4000ca9c <_tx_event_flags_set+0x488>
4000ca7c:	e59d0014 	ldr	r0, [sp, #20]
4000ca80:	e58d000c 	str	r0, [sp, #12]
4000ca84:	e59d0014 	ldr	r0, [sp, #20]
4000ca88:	e58d0008 	str	r0, [sp, #8]
4000ca8c:	e3a01000 	mov	r1, #0
4000ca90:	e59d0014 	ldr	r0, [sp, #20]
4000ca94:	e5801070 	str	r1, [r0, #112]	; 0x70
4000ca98:	ea000007 	b	4000cabc <_tx_event_flags_set+0x4a8>
4000ca9c:	e59d0014 	ldr	r0, [sp, #20]
4000caa0:	e59d1008 	ldr	r1, [sp, #8]
4000caa4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000caa8:	e3a00000 	mov	r0, #0
4000caac:	e59d1014 	ldr	r1, [sp, #20]
4000cab0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000cab4:	e59d0014 	ldr	r0, [sp, #20]
4000cab8:	e58d0008 	str	r0, [sp, #8]
4000cabc:	e59d0010 	ldr	r0, [sp, #16]
4000cac0:	e58d0014 	str	r0, [sp, #20]
4000cac4:	e59d0000 	ldr	r0, [sp]
4000cac8:	e2500001 	subs	r0, r0, #1
4000cacc:	e58d0000 	str	r0, [sp]
4000cad0:	1affff8c 	bne	4000c908 <_tx_event_flags_set+0x2f4>
4000cad4:	e1a00000 	nop			; (mov r0, r0)
4000cad8:	e59d0004 	ldr	r0, [sp, #4]
4000cadc:	e5840010 	str	r0, [r4, #16]
4000cae0:	e5940020 	ldr	r0, [r4, #32]
4000cae4:	e3500000 	cmp	r0, #0
4000cae8:	0a000005 	beq	4000cb04 <_tx_event_flags_set+0x4f0>
4000caec:	e5940008 	ldr	r0, [r4, #8]
4000caf0:	e5941020 	ldr	r1, [r4, #32]
4000caf4:	e1c00001 	bic	r0, r0, r1
4000caf8:	e5840008 	str	r0, [r4, #8]
4000cafc:	e3a00000 	mov	r0, #0
4000cb00:	e5840020 	str	r0, [r4, #32]
4000cb04:	e121f007 	msr	CPSR_c, r7
4000cb08:	e59d000c 	ldr	r0, [sp, #12]
4000cb0c:	e58d0014 	str	r0, [sp, #20]
4000cb10:	ea000011 	b	4000cb5c <_tx_event_flags_set+0x548>
4000cb14:	e59d0014 	ldr	r0, [sp, #20]
4000cb18:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cb1c:	e58d0010 	str	r0, [sp, #16]
4000cb20:	e10f7000 	mrs	r7, CPSR
4000cb24:	e3870080 	orr	r0, r7, #128	; 0x80
4000cb28:	e58d0018 	str	r0, [sp, #24]
4000cb2c:	e59d0018 	ldr	r0, [sp, #24]
4000cb30:	e121f000 	msr	CPSR_c, r0
4000cb34:	e59f00bc 	ldr	r0, [pc, #188]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000cb38:	e5900000 	ldr	r0, [r0]
4000cb3c:	e2800001 	add	r0, r0, #1
4000cb40:	e59f10b0 	ldr	r1, [pc, #176]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000cb44:	e5810000 	str	r0, [r1]
4000cb48:	e121f007 	msr	CPSR_c, r7
4000cb4c:	e59d0014 	ldr	r0, [sp, #20]
4000cb50:	eb000a75 	bl	4000f52c <_tx_thread_system_resume>
4000cb54:	e59d0010 	ldr	r0, [sp, #16]
4000cb58:	e58d0014 	str	r0, [sp, #20]
4000cb5c:	e59d0014 	ldr	r0, [sp, #20]
4000cb60:	e3500000 	cmp	r0, #0
4000cb64:	1affffea 	bne	4000cb14 <_tx_event_flags_set+0x500>
4000cb68:	e10f7000 	mrs	r7, CPSR
4000cb6c:	e3870080 	orr	r0, r7, #128	; 0x80
4000cb70:	e58d0018 	str	r0, [sp, #24]
4000cb74:	e59d0018 	ldr	r0, [sp, #24]
4000cb78:	e121f000 	msr	CPSR_c, r0
4000cb7c:	e59f0074 	ldr	r0, [pc, #116]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000cb80:	e5900000 	ldr	r0, [r0]
4000cb84:	e2400001 	sub	r0, r0, #1
4000cb88:	e59f1068 	ldr	r1, [pc, #104]	; 4000cbf8 <_tx_event_flags_set+0x5e4>
4000cb8c:	e5810000 	str	r0, [r1]
4000cb90:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cb94:	e121f007 	msr	CPSR_c, r7
4000cb98:	eb000a37 	bl	4000f47c <_tx_thread_system_preempt_check>
4000cb9c:	ea000007 	b	4000cbc0 <_tx_event_flags_set+0x5ac>
4000cba0:	e5940014 	ldr	r0, [r4, #20]
4000cba4:	e3500000 	cmp	r0, #0
4000cba8:	0a000002 	beq	4000cbb8 <_tx_event_flags_set+0x5a4>
4000cbac:	e594000c 	ldr	r0, [r4, #12]
4000cbb0:	e2800001 	add	r0, r0, #1
4000cbb4:	e584000c 	str	r0, [r4, #12]
4000cbb8:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cbbc:	e121f007 	msr	CPSR_c, r7
4000cbc0:	e35b0000 	cmp	fp, #0
4000cbc4:	0a000001 	beq	4000cbd0 <_tx_event_flags_set+0x5bc>
4000cbc8:	e1a00004 	mov	r0, r4
4000cbcc:	e12fff3b 	blx	fp
4000cbd0:	e3a00000 	mov	r0, #0
4000cbd4:	eafffee0 	b	4000c75c <_tx_event_flags_set+0x148>
4000cbd8:	40030ec0 	.word	0x40030ec0
4000cbdc:	40030ec4 	.word	0x40030ec4
4000cbe0:	40030e4c 	.word	0x40030e4c
4000cbe4:	40030e54 	.word	0x40030e54
4000cbe8:	f0f0f0f0 	.word	0xf0f0f0f0
4000cbec:	40030ebc 	.word	0x40030ebc
4000cbf0:	40030eb8 	.word	0x40030eb8
4000cbf4:	40030eac 	.word	0x40030eac
4000cbf8:	40030e70 	.word	0x40030e70

4000cbfc <_tx_initialize_high_level>:
4000cbfc:	e92d4010 	push	{r4, lr}
4000cc00:	ebfff38a 	bl	40009a30 <_tx_trace_initialize>
4000cc04:	ebffeff0 	bl	40008bcc <_tx_thread_initialize>
4000cc08:	ebfff26b 	bl	400095bc <_tx_timer_initialize>
4000cc0c:	e3a00000 	mov	r0, #0
4000cc10:	e59f105c 	ldr	r1, [pc, #92]	; 4000cc74 <_tx_initialize_high_level+0x78>
4000cc14:	e5810000 	str	r0, [r1]
4000cc18:	e59f1058 	ldr	r1, [pc, #88]	; 4000cc78 <_tx_initialize_high_level+0x7c>
4000cc1c:	e5810000 	str	r0, [r1]
4000cc20:	e59f1054 	ldr	r1, [pc, #84]	; 4000cc7c <_tx_initialize_high_level+0x80>
4000cc24:	e5810000 	str	r0, [r1]
4000cc28:	e59f1050 	ldr	r1, [pc, #80]	; 4000cc80 <_tx_initialize_high_level+0x84>
4000cc2c:	e5810000 	str	r0, [r1]
4000cc30:	e59f104c 	ldr	r1, [pc, #76]	; 4000cc84 <_tx_initialize_high_level+0x88>
4000cc34:	e5810000 	str	r0, [r1]
4000cc38:	e59f1048 	ldr	r1, [pc, #72]	; 4000cc88 <_tx_initialize_high_level+0x8c>
4000cc3c:	e5810000 	str	r0, [r1]
4000cc40:	e59f1044 	ldr	r1, [pc, #68]	; 4000cc8c <_tx_initialize_high_level+0x90>
4000cc44:	e5810000 	str	r0, [r1]
4000cc48:	e59f1040 	ldr	r1, [pc, #64]	; 4000cc90 <_tx_initialize_high_level+0x94>
4000cc4c:	e5810000 	str	r0, [r1]
4000cc50:	e59f103c 	ldr	r1, [pc, #60]	; 4000cc94 <_tx_initialize_high_level+0x98>
4000cc54:	e5810000 	str	r0, [r1]
4000cc58:	e59f1038 	ldr	r1, [pc, #56]	; 4000cc98 <_tx_initialize_high_level+0x9c>
4000cc5c:	e5810000 	str	r0, [r1]
4000cc60:	e59f1034 	ldr	r1, [pc, #52]	; 4000cc9c <_tx_initialize_high_level+0xa0>
4000cc64:	e5810000 	str	r0, [r1]
4000cc68:	e59f1030 	ldr	r1, [pc, #48]	; 4000cca0 <_tx_initialize_high_level+0xa4>
4000cc6c:	e5810000 	str	r0, [r1]
4000cc70:	e8bd8010 	pop	{r4, pc}
4000cc74:	40030ec8 	.word	0x40030ec8
4000cc78:	40030ecc 	.word	0x40030ecc
4000cc7c:	40030ed0 	.word	0x40030ed0
4000cc80:	40030ed4 	.word	0x40030ed4
4000cc84:	40030ed8 	.word	0x40030ed8
4000cc88:	40030edc 	.word	0x40030edc
4000cc8c:	40030ee8 	.word	0x40030ee8
4000cc90:	40030eec 	.word	0x40030eec
4000cc94:	40030ef0 	.word	0x40030ef0
4000cc98:	40030ef4 	.word	0x40030ef4
4000cc9c:	40030ee0 	.word	0x40030ee0
4000cca0:	40030ee4 	.word	0x40030ee4

4000cca4 <_tx_mutex_create>:
4000cca4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000cca8:	e1a04000 	mov	r4, r0
4000ccac:	e1a05001 	mov	r5, r1
4000ccb0:	e1a06002 	mov	r6, r2
4000ccb4:	e3a01038 	mov	r1, #56	; 0x38
4000ccb8:	e1a00004 	mov	r0, r4
4000ccbc:	eb001b14 	bl	40013914 <__aeabi_memclr4>
4000ccc0:	e5845004 	str	r5, [r4, #4]
4000ccc4:	e5846010 	str	r6, [r4, #16]
4000ccc8:	e10f7000 	mrs	r7, CPSR
4000cccc:	e3878080 	orr	r8, r7, #128	; 0x80
4000ccd0:	e121f008 	msr	CPSR_c, r8
4000ccd4:	e59f0174 	ldr	r0, [pc, #372]	; 4000ce50 <_tx_mutex_create+0x1ac>
4000ccd8:	e5840000 	str	r0, [r4]
4000ccdc:	e59f0170 	ldr	r0, [pc, #368]	; 4000ce54 <_tx_mutex_create+0x1b0>
4000cce0:	e5900000 	ldr	r0, [r0]
4000cce4:	e3500000 	cmp	r0, #0
4000cce8:	0a00000e 	beq	4000cd28 <_tx_mutex_create+0x84>
4000ccec:	e59f0160 	ldr	r0, [pc, #352]	; 4000ce54 <_tx_mutex_create+0x1b0>
4000ccf0:	e5900000 	ldr	r0, [r0]
4000ccf4:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000ccf8:	e58d0004 	str	r0, [sp, #4]
4000ccfc:	e59f0150 	ldr	r0, [pc, #336]	; 4000ce54 <_tx_mutex_create+0x1b0>
4000cd00:	e5900000 	ldr	r0, [r0]
4000cd04:	e5804028 	str	r4, [r0, #40]	; 0x28
4000cd08:	e59d0004 	ldr	r0, [sp, #4]
4000cd0c:	e5804024 	str	r4, [r0, #36]	; 0x24
4000cd10:	e59d0004 	ldr	r0, [sp, #4]
4000cd14:	e5840028 	str	r0, [r4, #40]	; 0x28
4000cd18:	e59f0134 	ldr	r0, [pc, #308]	; 4000ce54 <_tx_mutex_create+0x1b0>
4000cd1c:	e5900000 	ldr	r0, [r0]
4000cd20:	e5840024 	str	r0, [r4, #36]	; 0x24
4000cd24:	ea000003 	b	4000cd38 <_tx_mutex_create+0x94>
4000cd28:	e59f0124 	ldr	r0, [pc, #292]	; 4000ce54 <_tx_mutex_create+0x1b0>
4000cd2c:	e5804000 	str	r4, [r0]
4000cd30:	e5844024 	str	r4, [r4, #36]	; 0x24
4000cd34:	e5844028 	str	r4, [r4, #40]	; 0x28
4000cd38:	e59f0118 	ldr	r0, [pc, #280]	; 4000ce58 <_tx_mutex_create+0x1b4>
4000cd3c:	e5900000 	ldr	r0, [r0]
4000cd40:	e2800001 	add	r0, r0, #1
4000cd44:	e59f110c 	ldr	r1, [pc, #268]	; 4000ce58 <_tx_mutex_create+0x1b4>
4000cd48:	e5810000 	str	r0, [r1]
4000cd4c:	e3a03000 	mov	r3, #0
4000cd50:	e58d3000 	str	r3, [sp]
4000cd54:	e1a03006 	mov	r3, r6
4000cd58:	e1a02005 	mov	r2, r5
4000cd5c:	e1a01004 	mov	r1, r4
4000cd60:	e3a00005 	mov	r0, #5
4000cd64:	eb000d46 	bl	40010284 <_tx_trace_object_register>
4000cd68:	e59f10ec 	ldr	r1, [pc, #236]	; 4000ce5c <_tx_mutex_create+0x1b8>
4000cd6c:	e5910000 	ldr	r0, [r1]
4000cd70:	e3500000 	cmp	r0, #0
4000cd74:	0a000032 	beq	4000ce44 <_tx_mutex_create+0x1a0>
4000cd78:	e59f10e0 	ldr	r1, [pc, #224]	; 4000ce60 <_tx_mutex_create+0x1bc>
4000cd7c:	e5911000 	ldr	r1, [r1]
4000cd80:	e2811001 	add	r1, r1, #1
4000cd84:	e59f20d4 	ldr	r2, [pc, #212]	; 4000ce60 <_tx_mutex_create+0x1bc>
4000cd88:	e5821000 	str	r1, [r2]
4000cd8c:	e580100c 	str	r1, [r0, #12]
4000cd90:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ce64 <_tx_mutex_create+0x1c0>
4000cd94:	e5911000 	ldr	r1, [r1]
4000cd98:	e3510000 	cmp	r1, #0
4000cd9c:	1a000006 	bne	4000cdbc <_tx_mutex_create+0x118>
4000cda0:	e59f10c0 	ldr	r1, [pc, #192]	; 4000ce68 <_tx_mutex_create+0x1c4>
4000cda4:	e5911000 	ldr	r1, [r1]
4000cda8:	e5801000 	str	r1, [r0]
4000cdac:	e5901000 	ldr	r1, [r0]
4000cdb0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cdb4:	e5801004 	str	r1, [r0, #4]
4000cdb8:	ea00000d 	b	4000cdf4 <_tx_mutex_create+0x150>
4000cdbc:	e59f10a0 	ldr	r1, [pc, #160]	; 4000ce64 <_tx_mutex_create+0x1c0>
4000cdc0:	e5911000 	ldr	r1, [r1]
4000cdc4:	e59f20a0 	ldr	r2, [pc, #160]	; 4000ce6c <_tx_mutex_create+0x1c8>
4000cdc8:	e1510002 	cmp	r1, r2
4000cdcc:	2a000004 	bcs	4000cde4 <_tx_mutex_create+0x140>
4000cdd0:	e3e01000 	mvn	r1, #0
4000cdd4:	e5801000 	str	r1, [r0]
4000cdd8:	e3a01000 	mov	r1, #0
4000cddc:	e5801004 	str	r1, [r0, #4]
4000cde0:	ea000003 	b	4000cdf4 <_tx_mutex_create+0x150>
4000cde4:	e59f1080 	ldr	r1, [pc, #128]	; 4000ce6c <_tx_mutex_create+0x1c8>
4000cde8:	e5801000 	str	r1, [r0]
4000cdec:	e3a01000 	mov	r1, #0
4000cdf0:	e5801004 	str	r1, [r0, #4]
4000cdf4:	e3a01032 	mov	r1, #50	; 0x32
4000cdf8:	e5801008 	str	r1, [r0, #8]
4000cdfc:	e5804010 	str	r4, [r0, #16]
4000ce00:	e5806014 	str	r6, [r0, #20]
4000ce04:	e28d1004 	add	r1, sp, #4
4000ce08:	e5801018 	str	r1, [r0, #24]
4000ce0c:	e3a01000 	mov	r1, #0
4000ce10:	e580101c 	str	r1, [r0, #28]
4000ce14:	e2800020 	add	r0, r0, #32
4000ce18:	e59f1050 	ldr	r1, [pc, #80]	; 4000ce70 <_tx_mutex_create+0x1cc>
4000ce1c:	e5911000 	ldr	r1, [r1]
4000ce20:	e1500001 	cmp	r0, r1
4000ce24:	3a000001 	bcc	4000ce30 <_tx_mutex_create+0x18c>
4000ce28:	e59f1044 	ldr	r1, [pc, #68]	; 4000ce74 <_tx_mutex_create+0x1d0>
4000ce2c:	e5910000 	ldr	r0, [r1]
4000ce30:	e59f1024 	ldr	r1, [pc, #36]	; 4000ce5c <_tx_mutex_create+0x1b8>
4000ce34:	e5810000 	str	r0, [r1]
4000ce38:	e59f1038 	ldr	r1, [pc, #56]	; 4000ce78 <_tx_mutex_create+0x1d4>
4000ce3c:	e5911000 	ldr	r1, [r1]
4000ce40:	e5810020 	str	r0, [r1, #32]
4000ce44:	e121f007 	msr	CPSR_c, r7
4000ce48:	e3a00000 	mov	r0, #0
4000ce4c:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000ce50:	4d555445 	.word	0x4d555445
4000ce54:	40030ee0 	.word	0x40030ee0
4000ce58:	40030ee4 	.word	0x40030ee4
4000ce5c:	40030ec0 	.word	0x40030ec0
4000ce60:	40030ec4 	.word	0x40030ec4
4000ce64:	40030e4c 	.word	0x40030e4c
4000ce68:	40030e54 	.word	0x40030e54
4000ce6c:	f0f0f0f0 	.word	0xf0f0f0f0
4000ce70:	40030ebc 	.word	0x40030ebc
4000ce74:	40030eb8 	.word	0x40030eb8
4000ce78:	40030eac 	.word	0x40030eac

4000ce7c <_tx_mutex_delete>:
4000ce7c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ce80:	e1a04000 	mov	r4, r0
4000ce84:	e10f5000 	mrs	r5, CPSR
4000ce88:	e3856080 	orr	r6, r5, #128	; 0x80
4000ce8c:	e121f006 	msr	CPSR_c, r6
4000ce90:	e59f1294 	ldr	r1, [pc, #660]	; 4000d12c <_tx_mutex_delete+0x2b0>
4000ce94:	e5910000 	ldr	r0, [r1]
4000ce98:	e3500000 	cmp	r0, #0
4000ce9c:	0a000031 	beq	4000cf68 <_tx_mutex_delete+0xec>
4000cea0:	e59f1288 	ldr	r1, [pc, #648]	; 4000d130 <_tx_mutex_delete+0x2b4>
4000cea4:	e5911000 	ldr	r1, [r1]
4000cea8:	e2811001 	add	r1, r1, #1
4000ceac:	e59f227c 	ldr	r2, [pc, #636]	; 4000d130 <_tx_mutex_delete+0x2b4>
4000ceb0:	e5821000 	str	r1, [r2]
4000ceb4:	e580100c 	str	r1, [r0, #12]
4000ceb8:	e59f1274 	ldr	r1, [pc, #628]	; 4000d134 <_tx_mutex_delete+0x2b8>
4000cebc:	e5911000 	ldr	r1, [r1]
4000cec0:	e3510000 	cmp	r1, #0
4000cec4:	1a000006 	bne	4000cee4 <_tx_mutex_delete+0x68>
4000cec8:	e59f1268 	ldr	r1, [pc, #616]	; 4000d138 <_tx_mutex_delete+0x2bc>
4000cecc:	e5911000 	ldr	r1, [r1]
4000ced0:	e5801000 	str	r1, [r0]
4000ced4:	e5901000 	ldr	r1, [r0]
4000ced8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cedc:	e5801004 	str	r1, [r0, #4]
4000cee0:	ea00000d 	b	4000cf1c <_tx_mutex_delete+0xa0>
4000cee4:	e59f1248 	ldr	r1, [pc, #584]	; 4000d134 <_tx_mutex_delete+0x2b8>
4000cee8:	e5911000 	ldr	r1, [r1]
4000ceec:	e59f2248 	ldr	r2, [pc, #584]	; 4000d13c <_tx_mutex_delete+0x2c0>
4000cef0:	e1510002 	cmp	r1, r2
4000cef4:	2a000004 	bcs	4000cf0c <_tx_mutex_delete+0x90>
4000cef8:	e3e01000 	mvn	r1, #0
4000cefc:	e5801000 	str	r1, [r0]
4000cf00:	e3a01000 	mov	r1, #0
4000cf04:	e5801004 	str	r1, [r0, #4]
4000cf08:	ea000003 	b	4000cf1c <_tx_mutex_delete+0xa0>
4000cf0c:	e59f1228 	ldr	r1, [pc, #552]	; 4000d13c <_tx_mutex_delete+0x2c0>
4000cf10:	e5801000 	str	r1, [r0]
4000cf14:	e3a01000 	mov	r1, #0
4000cf18:	e5801004 	str	r1, [r0, #4]
4000cf1c:	e3a01033 	mov	r1, #51	; 0x33
4000cf20:	e5801008 	str	r1, [r0, #8]
4000cf24:	e5804010 	str	r4, [r0, #16]
4000cf28:	e580d014 	str	sp, [r0, #20]
4000cf2c:	e3a01000 	mov	r1, #0
4000cf30:	e5801018 	str	r1, [r0, #24]
4000cf34:	e580101c 	str	r1, [r0, #28]
4000cf38:	e2800020 	add	r0, r0, #32
4000cf3c:	e59f11fc 	ldr	r1, [pc, #508]	; 4000d140 <_tx_mutex_delete+0x2c4>
4000cf40:	e5911000 	ldr	r1, [r1]
4000cf44:	e1500001 	cmp	r0, r1
4000cf48:	3a000001 	bcc	4000cf54 <_tx_mutex_delete+0xd8>
4000cf4c:	e59f11f0 	ldr	r1, [pc, #496]	; 4000d144 <_tx_mutex_delete+0x2c8>
4000cf50:	e5910000 	ldr	r0, [r1]
4000cf54:	e59f11d0 	ldr	r1, [pc, #464]	; 4000d12c <_tx_mutex_delete+0x2b0>
4000cf58:	e5810000 	str	r0, [r1]
4000cf5c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d148 <_tx_mutex_delete+0x2cc>
4000cf60:	e5911000 	ldr	r1, [r1]
4000cf64:	e5810020 	str	r0, [r1, #32]
4000cf68:	e1a00004 	mov	r0, r4
4000cf6c:	eb000d2f 	bl	40010430 <_tx_trace_object_unregister>
4000cf70:	e59f01d4 	ldr	r0, [pc, #468]	; 4000d14c <_tx_mutex_delete+0x2d0>
4000cf74:	e5900000 	ldr	r0, [r0]
4000cf78:	e2400001 	sub	r0, r0, #1
4000cf7c:	e59f11c8 	ldr	r1, [pc, #456]	; 4000d14c <_tx_mutex_delete+0x2d0>
4000cf80:	e5810000 	str	r0, [r1]
4000cf84:	e3a00000 	mov	r0, #0
4000cf88:	e5840000 	str	r0, [r4]
4000cf8c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf90:	e1500004 	cmp	r0, r4
4000cf94:	1a000003 	bne	4000cfa8 <_tx_mutex_delete+0x12c>
4000cf98:	e3a00000 	mov	r0, #0
4000cf9c:	e59f11ac 	ldr	r1, [pc, #428]	; 4000d150 <_tx_mutex_delete+0x2d4>
4000cfa0:	e5810000 	str	r0, [r1]
4000cfa4:	ea00000c 	b	4000cfdc <_tx_mutex_delete+0x160>
4000cfa8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cfac:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cfb0:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cfb4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cfb8:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cfbc:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cfc0:	e59f0188 	ldr	r0, [pc, #392]	; 4000d150 <_tx_mutex_delete+0x2d4>
4000cfc4:	e5900000 	ldr	r0, [r0]
4000cfc8:	e1500004 	cmp	r0, r4
4000cfcc:	1a000002 	bne	4000cfdc <_tx_mutex_delete+0x160>
4000cfd0:	e59f1178 	ldr	r1, [pc, #376]	; 4000d150 <_tx_mutex_delete+0x2d4>
4000cfd4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cfd8:	e5810000 	str	r0, [r1]
4000cfdc:	e594000c 	ldr	r0, [r4, #12]
4000cfe0:	e58d0000 	str	r0, [sp]
4000cfe4:	e5940010 	ldr	r0, [r4, #16]
4000cfe8:	e3500000 	cmp	r0, #0
4000cfec:	0a00001c 	beq	4000d064 <_tx_mutex_delete+0x1e8>
4000cff0:	e59d0000 	ldr	r0, [sp]
4000cff4:	e3500000 	cmp	r0, #0
4000cff8:	0a000019 	beq	4000d064 <_tx_mutex_delete+0x1e8>
4000cffc:	e59d0000 	ldr	r0, [sp]
4000d000:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000d004:	e2400001 	sub	r0, r0, #1
4000d008:	e59d1000 	ldr	r1, [sp]
4000d00c:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000d010:	e59d0000 	ldr	r0, [sp]
4000d014:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000d018:	e3500000 	cmp	r0, #0
4000d01c:	1a000003 	bne	4000d030 <_tx_mutex_delete+0x1b4>
4000d020:	e3a00000 	mov	r0, #0
4000d024:	e59d1000 	ldr	r1, [sp]
4000d028:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000d02c:	ea00000c 	b	4000d064 <_tx_mutex_delete+0x1e8>
4000d030:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d034:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d038:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d03c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d040:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d044:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d048:	e59d0000 	ldr	r0, [sp]
4000d04c:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000d050:	e1500004 	cmp	r0, r4
4000d054:	1a000002 	bne	4000d064 <_tx_mutex_delete+0x1e8>
4000d058:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d05c:	e59d1000 	ldr	r1, [sp]
4000d060:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000d064:	e3a00000 	mov	r0, #0
4000d068:	e584000c 	str	r0, [r4, #12]
4000d06c:	e59f00e0 	ldr	r0, [pc, #224]	; 4000d154 <_tx_mutex_delete+0x2d8>
4000d070:	e5900000 	ldr	r0, [r0]
4000d074:	e2800001 	add	r0, r0, #1
4000d078:	e59f10d4 	ldr	r1, [pc, #212]	; 4000d154 <_tx_mutex_delete+0x2d8>
4000d07c:	e5810000 	str	r0, [r1]
4000d080:	e121f005 	msr	CPSR_c, r5
4000d084:	e594001c 	ldr	r0, [r4, #28]
4000d088:	e58d0000 	str	r0, [sp]
4000d08c:	ea000017 	b	4000d0f0 <_tx_mutex_delete+0x274>
4000d090:	e10f5000 	mrs	r5, CPSR
4000d094:	e3856080 	orr	r6, r5, #128	; 0x80
4000d098:	e121f006 	msr	CPSR_c, r6
4000d09c:	e3a00000 	mov	r0, #0
4000d0a0:	e59d1000 	ldr	r1, [sp]
4000d0a4:	e5810068 	str	r0, [r1, #104]	; 0x68
4000d0a8:	e59f00a4 	ldr	r0, [pc, #164]	; 4000d154 <_tx_mutex_delete+0x2d8>
4000d0ac:	e5900000 	ldr	r0, [r0]
4000d0b0:	e2800001 	add	r0, r0, #1
4000d0b4:	e59f1098 	ldr	r1, [pc, #152]	; 4000d154 <_tx_mutex_delete+0x2d8>
4000d0b8:	e5810000 	str	r0, [r1]
4000d0bc:	e121f005 	msr	CPSR_c, r5
4000d0c0:	e3a00001 	mov	r0, #1
4000d0c4:	e59d1000 	ldr	r1, [sp]
4000d0c8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000d0cc:	e59d0000 	ldr	r0, [sp]
4000d0d0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000d0d4:	e58d0000 	str	r0, [sp]
4000d0d8:	e59d1000 	ldr	r1, [sp]
4000d0dc:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000d0e0:	eb000911 	bl	4000f52c <_tx_thread_system_resume>
4000d0e4:	e5940020 	ldr	r0, [r4, #32]
4000d0e8:	e2400001 	sub	r0, r0, #1
4000d0ec:	e5840020 	str	r0, [r4, #32]
4000d0f0:	e5940020 	ldr	r0, [r4, #32]
4000d0f4:	e3500000 	cmp	r0, #0
4000d0f8:	1affffe4 	bne	4000d090 <_tx_mutex_delete+0x214>
4000d0fc:	e10f5000 	mrs	r5, CPSR
4000d100:	e3856080 	orr	r6, r5, #128	; 0x80
4000d104:	e121f006 	msr	CPSR_c, r6
4000d108:	e59f0044 	ldr	r0, [pc, #68]	; 4000d154 <_tx_mutex_delete+0x2d8>
4000d10c:	e5900000 	ldr	r0, [r0]
4000d110:	e2400001 	sub	r0, r0, #1
4000d114:	e59f1038 	ldr	r1, [pc, #56]	; 4000d154 <_tx_mutex_delete+0x2d8>
4000d118:	e5810000 	str	r0, [r1]
4000d11c:	e121f005 	msr	CPSR_c, r5
4000d120:	eb0008d5 	bl	4000f47c <_tx_thread_system_preempt_check>
4000d124:	e3a00000 	mov	r0, #0
4000d128:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000d12c:	40030ec0 	.word	0x40030ec0
4000d130:	40030ec4 	.word	0x40030ec4
4000d134:	40030e4c 	.word	0x40030e4c
4000d138:	40030e54 	.word	0x40030e54
4000d13c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d140:	40030ebc 	.word	0x40030ebc
4000d144:	40030eb8 	.word	0x40030eb8
4000d148:	40030eac 	.word	0x40030eac
4000d14c:	40030ee4 	.word	0x40030ee4
4000d150:	40030ee0 	.word	0x40030ee0
4000d154:	40030e70 	.word	0x40030e70

4000d158 <_tx_mutex_get>:
4000d158:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000d15c:	e1a04000 	mov	r4, r0
4000d160:	e1a05001 	mov	r5, r1
4000d164:	e10f6000 	mrs	r6, CPSR
4000d168:	e3867080 	orr	r7, r6, #128	; 0x80
4000d16c:	e121f007 	msr	CPSR_c, r7
4000d170:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d424 <_tx_mutex_get+0x2cc>
4000d174:	e5910000 	ldr	r0, [r1]
4000d178:	e3500000 	cmp	r0, #0
4000d17c:	0a000032 	beq	4000d24c <_tx_mutex_get+0xf4>
4000d180:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d428 <_tx_mutex_get+0x2d0>
4000d184:	e5911000 	ldr	r1, [r1]
4000d188:	e2811001 	add	r1, r1, #1
4000d18c:	e59f2294 	ldr	r2, [pc, #660]	; 4000d428 <_tx_mutex_get+0x2d0>
4000d190:	e5821000 	str	r1, [r2]
4000d194:	e580100c 	str	r1, [r0, #12]
4000d198:	e59f128c 	ldr	r1, [pc, #652]	; 4000d42c <_tx_mutex_get+0x2d4>
4000d19c:	e5911000 	ldr	r1, [r1]
4000d1a0:	e3510000 	cmp	r1, #0
4000d1a4:	1a000006 	bne	4000d1c4 <_tx_mutex_get+0x6c>
4000d1a8:	e59f1280 	ldr	r1, [pc, #640]	; 4000d430 <_tx_mutex_get+0x2d8>
4000d1ac:	e5911000 	ldr	r1, [r1]
4000d1b0:	e5801000 	str	r1, [r0]
4000d1b4:	e5901000 	ldr	r1, [r0]
4000d1b8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d1bc:	e5801004 	str	r1, [r0, #4]
4000d1c0:	ea00000d 	b	4000d1fc <_tx_mutex_get+0xa4>
4000d1c4:	e59f1260 	ldr	r1, [pc, #608]	; 4000d42c <_tx_mutex_get+0x2d4>
4000d1c8:	e5911000 	ldr	r1, [r1]
4000d1cc:	e59f2260 	ldr	r2, [pc, #608]	; 4000d434 <_tx_mutex_get+0x2dc>
4000d1d0:	e1510002 	cmp	r1, r2
4000d1d4:	2a000004 	bcs	4000d1ec <_tx_mutex_get+0x94>
4000d1d8:	e3e01000 	mvn	r1, #0
4000d1dc:	e5801000 	str	r1, [r0]
4000d1e0:	e3a01000 	mov	r1, #0
4000d1e4:	e5801004 	str	r1, [r0, #4]
4000d1e8:	ea000003 	b	4000d1fc <_tx_mutex_get+0xa4>
4000d1ec:	e59f1240 	ldr	r1, [pc, #576]	; 4000d434 <_tx_mutex_get+0x2dc>
4000d1f0:	e5801000 	str	r1, [r0]
4000d1f4:	e3a01000 	mov	r1, #0
4000d1f8:	e5801004 	str	r1, [r0, #4]
4000d1fc:	e3a01034 	mov	r1, #52	; 0x34
4000d200:	e5801008 	str	r1, [r0, #8]
4000d204:	e5804010 	str	r4, [r0, #16]
4000d208:	e5805014 	str	r5, [r0, #20]
4000d20c:	e594100c 	ldr	r1, [r4, #12]
4000d210:	e5801018 	str	r1, [r0, #24]
4000d214:	e5941008 	ldr	r1, [r4, #8]
4000d218:	e580101c 	str	r1, [r0, #28]
4000d21c:	e2800020 	add	r0, r0, #32
4000d220:	e59f1210 	ldr	r1, [pc, #528]	; 4000d438 <_tx_mutex_get+0x2e0>
4000d224:	e5911000 	ldr	r1, [r1]
4000d228:	e1500001 	cmp	r0, r1
4000d22c:	3a000001 	bcc	4000d238 <_tx_mutex_get+0xe0>
4000d230:	e59f1204 	ldr	r1, [pc, #516]	; 4000d43c <_tx_mutex_get+0x2e4>
4000d234:	e5910000 	ldr	r0, [r1]
4000d238:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d424 <_tx_mutex_get+0x2cc>
4000d23c:	e5810000 	str	r0, [r1]
4000d240:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d440 <_tx_mutex_get+0x2e8>
4000d244:	e5911000 	ldr	r1, [r1]
4000d248:	e5810020 	str	r0, [r1, #32]
4000d24c:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d430 <_tx_mutex_get+0x2d8>
4000d250:	e5909000 	ldr	r9, [r0]
4000d254:	e5940008 	ldr	r0, [r4, #8]
4000d258:	e3500000 	cmp	r0, #0
4000d25c:	1a000025 	bne	4000d2f8 <_tx_mutex_get+0x1a0>
4000d260:	e3a00001 	mov	r0, #1
4000d264:	e5840008 	str	r0, [r4, #8]
4000d268:	e584900c 	str	r9, [r4, #12]
4000d26c:	e5940010 	ldr	r0, [r4, #16]
4000d270:	e3500000 	cmp	r0, #0
4000d274:	0a00001d 	beq	4000d2f0 <_tx_mutex_get+0x198>
4000d278:	e3590000 	cmp	r9, #0
4000d27c:	0a00001b 	beq	4000d2f0 <_tx_mutex_get+0x198>
4000d280:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d284:	e5840014 	str	r0, [r4, #20]
4000d288:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d28c:	e5840018 	str	r0, [r4, #24]
4000d290:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d294:	e3500000 	cmp	r0, #0
4000d298:	0a000008 	beq	4000d2c0 <_tx_mutex_get+0x168>
4000d29c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d2a0:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d2a4:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d2a8:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d2ac:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d2b0:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d2b4:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d2b8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d2bc:	ea000006 	b	4000d2dc <_tx_mutex_get+0x184>
4000d2c0:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d2c4:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d2c8:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d2cc:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d2d0:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d2d4:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d2d8:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d2dc:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d2e0:	e2800001 	add	r0, r0, #1
4000d2e4:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d2e8:	e3a00020 	mov	r0, #32
4000d2ec:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d2f0:	e3a08000 	mov	r8, #0
4000d2f4:	ea000047 	b	4000d418 <_tx_mutex_get+0x2c0>
4000d2f8:	e594000c 	ldr	r0, [r4, #12]
4000d2fc:	e1500009 	cmp	r0, r9
4000d300:	1a000004 	bne	4000d318 <_tx_mutex_get+0x1c0>
4000d304:	e5940008 	ldr	r0, [r4, #8]
4000d308:	e2800001 	add	r0, r0, #1
4000d30c:	e5840008 	str	r0, [r4, #8]
4000d310:	e3a08000 	mov	r8, #0
4000d314:	ea00003f 	b	4000d418 <_tx_mutex_get+0x2c0>
4000d318:	e3550000 	cmp	r5, #0
4000d31c:	0a00003c 	beq	4000d414 <_tx_mutex_get+0x2bc>
4000d320:	e59f011c 	ldr	r0, [pc, #284]	; 4000d444 <_tx_mutex_get+0x2ec>
4000d324:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d328:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d32c:	e594001c 	ldr	r0, [r4, #28]
4000d330:	e3500000 	cmp	r0, #0
4000d334:	0a00000a 	beq	4000d364 <_tx_mutex_get+0x20c>
4000d338:	e594001c 	ldr	r0, [r4, #28]
4000d33c:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d340:	e594001c 	ldr	r0, [r4, #28]
4000d344:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d348:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d34c:	e594001c 	ldr	r0, [r4, #28]
4000d350:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d354:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d358:	e594001c 	ldr	r0, [r4, #28]
4000d35c:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d360:	ea000002 	b	4000d370 <_tx_mutex_get+0x218>
4000d364:	e584901c 	str	r9, [r4, #28]
4000d368:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d36c:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d370:	e5940020 	ldr	r0, [r4, #32]
4000d374:	e2800001 	add	r0, r0, #1
4000d378:	e5840020 	str	r0, [r4, #32]
4000d37c:	e3a0000d 	mov	r0, #13
4000d380:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d384:	e3a00001 	mov	r0, #1
4000d388:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d38c:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d390:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d448 <_tx_mutex_get+0x2f0>
4000d394:	e5900000 	ldr	r0, [r0]
4000d398:	e2800001 	add	r0, r0, #1
4000d39c:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d448 <_tx_mutex_get+0x2f0>
4000d3a0:	e5810000 	str	r0, [r1]
4000d3a4:	e121f006 	msr	CPSR_c, r6
4000d3a8:	e5940010 	ldr	r0, [r4, #16]
4000d3ac:	e3500000 	cmp	r0, #0
4000d3b0:	0a000013 	beq	4000d404 <_tx_mutex_get+0x2ac>
4000d3b4:	e594000c 	ldr	r0, [r4, #12]
4000d3b8:	e3500000 	cmp	r0, #0
4000d3bc:	0a000010 	beq	4000d404 <_tx_mutex_get+0x2ac>
4000d3c0:	e3590000 	cmp	r9, #0
4000d3c4:	0a00000e 	beq	4000d404 <_tx_mutex_get+0x2ac>
4000d3c8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d3cc:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d3d0:	e1500001 	cmp	r0, r1
4000d3d4:	9a000001 	bls	4000d3e0 <_tx_mutex_get+0x288>
4000d3d8:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d3dc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d3e0:	e594000c 	ldr	r0, [r4, #12]
4000d3e4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d3e8:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d3ec:	e1500001 	cmp	r0, r1
4000d3f0:	9a000003 	bls	4000d404 <_tx_mutex_get+0x2ac>
4000d3f4:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d3f8:	e1a01002 	mov	r1, r2
4000d3fc:	e594000c 	ldr	r0, [r4, #12]
4000d400:	eb000011 	bl	4000d44c <_tx_mutex_priority_change>
4000d404:	e1a00009 	mov	r0, r9
4000d408:	ebffeea0 	bl	40008e90 <_tx_thread_system_suspend>
4000d40c:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d410:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d414:	e3a0801d 	mov	r8, #29
4000d418:	e121f006 	msr	CPSR_c, r6
4000d41c:	e1a00008 	mov	r0, r8
4000d420:	eafffffa 	b	4000d410 <_tx_mutex_get+0x2b8>
4000d424:	40030ec0 	.word	0x40030ec0
4000d428:	40030ec4 	.word	0x40030ec4
4000d42c:	40030e4c 	.word	0x40030e4c
4000d430:	40030e54 	.word	0x40030e54
4000d434:	f0f0f0f0 	.word	0xf0f0f0f0
4000d438:	40030ebc 	.word	0x40030ebc
4000d43c:	40030eb8 	.word	0x40030eb8
4000d440:	40030eac 	.word	0x40030eac
4000d444:	4001060c 	.word	0x4001060c
4000d448:	40030e70 	.word	0x40030e70

4000d44c <_tx_mutex_priority_change>:
4000d44c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d450:	e1a04000 	mov	r4, r0
4000d454:	e1a05001 	mov	r5, r1
4000d458:	e1a06002 	mov	r6, r2
4000d45c:	e10f7000 	mrs	r7, CPSR
4000d460:	e3878080 	orr	r8, r7, #128	; 0x80
4000d464:	e121f008 	msr	CPSR_c, r8
4000d468:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d46c:	e3500000 	cmp	r0, #0
4000d470:	0a000003 	beq	4000d484 <_tx_mutex_priority_change+0x38>
4000d474:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d478:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d47c:	e121f007 	msr	CPSR_c, r7
4000d480:	ea000011 	b	4000d4cc <_tx_mutex_priority_change+0x80>
4000d484:	e59f0044 	ldr	r0, [pc, #68]	; 4000d4d0 <_tx_mutex_priority_change+0x84>
4000d488:	e5900000 	ldr	r0, [r0]
4000d48c:	e2800002 	add	r0, r0, #2
4000d490:	e59f1038 	ldr	r1, [pc, #56]	; 4000d4d0 <_tx_mutex_priority_change+0x84>
4000d494:	e5810000 	str	r0, [r1]
4000d498:	e3a00003 	mov	r0, #3
4000d49c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d4a0:	e3a00001 	mov	r0, #1
4000d4a4:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d4a8:	e3a00000 	mov	r0, #0
4000d4ac:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d4b0:	e121f007 	msr	CPSR_c, r7
4000d4b4:	e1a00004 	mov	r0, r4
4000d4b8:	ebffee74 	bl	40008e90 <_tx_thread_system_suspend>
4000d4bc:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d4c0:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d4c4:	e1a00004 	mov	r0, r4
4000d4c8:	eb000817 	bl	4000f52c <_tx_thread_system_resume>
4000d4cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d4d0:	40030e70 	.word	0x40030e70

4000d4d4 <_tx_mutex_put>:
4000d4d4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d4d8:	e1a04000 	mov	r4, r0
4000d4dc:	e10f5000 	mrs	r5, CPSR
4000d4e0:	e3856080 	orr	r6, r5, #128	; 0x80
4000d4e4:	e121f006 	msr	CPSR_c, r6
4000d4e8:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d984 <_tx_mutex_put+0x4b0>
4000d4ec:	e5910000 	ldr	r0, [r1]
4000d4f0:	e3500000 	cmp	r0, #0
4000d4f4:	0a000032 	beq	4000d5c4 <_tx_mutex_put+0xf0>
4000d4f8:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d988 <_tx_mutex_put+0x4b4>
4000d4fc:	e5911000 	ldr	r1, [r1]
4000d500:	e2811001 	add	r1, r1, #1
4000d504:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d988 <_tx_mutex_put+0x4b4>
4000d508:	e5821000 	str	r1, [r2]
4000d50c:	e580100c 	str	r1, [r0, #12]
4000d510:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d98c <_tx_mutex_put+0x4b8>
4000d514:	e5911000 	ldr	r1, [r1]
4000d518:	e3510000 	cmp	r1, #0
4000d51c:	1a000006 	bne	4000d53c <_tx_mutex_put+0x68>
4000d520:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d990 <_tx_mutex_put+0x4bc>
4000d524:	e5911000 	ldr	r1, [r1]
4000d528:	e5801000 	str	r1, [r0]
4000d52c:	e5901000 	ldr	r1, [r0]
4000d530:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d534:	e5801004 	str	r1, [r0, #4]
4000d538:	ea00000d 	b	4000d574 <_tx_mutex_put+0xa0>
4000d53c:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d98c <_tx_mutex_put+0x4b8>
4000d540:	e5911000 	ldr	r1, [r1]
4000d544:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d994 <_tx_mutex_put+0x4c0>
4000d548:	e1510002 	cmp	r1, r2
4000d54c:	2a000004 	bcs	4000d564 <_tx_mutex_put+0x90>
4000d550:	e3e01000 	mvn	r1, #0
4000d554:	e5801000 	str	r1, [r0]
4000d558:	e3a01000 	mov	r1, #0
4000d55c:	e5801004 	str	r1, [r0, #4]
4000d560:	ea000003 	b	4000d574 <_tx_mutex_put+0xa0>
4000d564:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d994 <_tx_mutex_put+0x4c0>
4000d568:	e5801000 	str	r1, [r0]
4000d56c:	e3a01000 	mov	r1, #0
4000d570:	e5801004 	str	r1, [r0, #4]
4000d574:	e3a01039 	mov	r1, #57	; 0x39
4000d578:	e5801008 	str	r1, [r0, #8]
4000d57c:	e5804010 	str	r4, [r0, #16]
4000d580:	e594100c 	ldr	r1, [r4, #12]
4000d584:	e5801014 	str	r1, [r0, #20]
4000d588:	e5941008 	ldr	r1, [r4, #8]
4000d58c:	e5801018 	str	r1, [r0, #24]
4000d590:	e580d01c 	str	sp, [r0, #28]
4000d594:	e2800020 	add	r0, r0, #32
4000d598:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d998 <_tx_mutex_put+0x4c4>
4000d59c:	e5911000 	ldr	r1, [r1]
4000d5a0:	e1500001 	cmp	r0, r1
4000d5a4:	3a000001 	bcc	4000d5b0 <_tx_mutex_put+0xdc>
4000d5a8:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d99c <_tx_mutex_put+0x4c8>
4000d5ac:	e5910000 	ldr	r0, [r1]
4000d5b0:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d984 <_tx_mutex_put+0x4b0>
4000d5b4:	e5810000 	str	r0, [r1]
4000d5b8:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d9a0 <_tx_mutex_put+0x4cc>
4000d5bc:	e5911000 	ldr	r1, [r1]
4000d5c0:	e5810020 	str	r0, [r1, #32]
4000d5c4:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d990 <_tx_mutex_put+0x4bc>
4000d5c8:	e5907000 	ldr	r7, [r0]
4000d5cc:	e5940008 	ldr	r0, [r4, #8]
4000d5d0:	e3500000 	cmp	r0, #0
4000d5d4:	0a0000e7 	beq	4000d978 <_tx_mutex_put+0x4a4>
4000d5d8:	e594000c 	ldr	r0, [r4, #12]
4000d5dc:	e1500007 	cmp	r0, r7
4000d5e0:	1a0000e4 	bne	4000d978 <_tx_mutex_put+0x4a4>
4000d5e4:	e5940008 	ldr	r0, [r4, #8]
4000d5e8:	e2400001 	sub	r0, r0, #1
4000d5ec:	e5840008 	str	r0, [r4, #8]
4000d5f0:	e5940008 	ldr	r0, [r4, #8]
4000d5f4:	e3500000 	cmp	r0, #0
4000d5f8:	0a000002 	beq	4000d608 <_tx_mutex_put+0x134>
4000d5fc:	e121f005 	msr	CPSR_c, r5
4000d600:	e3a00000 	mov	r0, #0
4000d604:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d608:	e3a08000 	mov	r8, #0
4000d60c:	e3a09000 	mov	r9, #0
4000d610:	e3a0a000 	mov	sl, #0
4000d614:	e5940010 	ldr	r0, [r4, #16]
4000d618:	e3500000 	cmp	r0, #0
4000d61c:	0a000033 	beq	4000d6f0 <_tx_mutex_put+0x21c>
4000d620:	e3570000 	cmp	r7, #0
4000d624:	0a000031 	beq	4000d6f0 <_tx_mutex_put+0x21c>
4000d628:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d62c:	e2400001 	sub	r0, r0, #1
4000d630:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d634:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d638:	e3500000 	cmp	r0, #0
4000d63c:	1a000002 	bne	4000d64c <_tx_mutex_put+0x178>
4000d640:	e3a00000 	mov	r0, #0
4000d644:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d648:	ea00000a 	b	4000d678 <_tx_mutex_put+0x1a4>
4000d64c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d650:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d654:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d658:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d65c:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d660:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d664:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d668:	e1500004 	cmp	r0, r4
4000d66c:	1a000001 	bne	4000d678 <_tx_mutex_put+0x1a4>
4000d670:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d674:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d678:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d67c:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d680:	e59f031c 	ldr	r0, [pc, #796]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d684:	e5900000 	ldr	r0, [r0]
4000d688:	e2800001 	add	r0, r0, #1
4000d68c:	e59f1310 	ldr	r1, [pc, #784]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d690:	e5810000 	str	r0, [r1]
4000d694:	e121f005 	msr	CPSR_c, r5
4000d698:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d69c:	ea000009 	b	4000d6c8 <_tx_mutex_put+0x1f4>
4000d6a0:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d6a4:	e1500009 	cmp	r0, r9
4000d6a8:	2a000001 	bcs	4000d6b4 <_tx_mutex_put+0x1e0>
4000d6ac:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d6b0:	e1a0a009 	mov	sl, r9
4000d6b4:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d6b8:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d6bc:	e150000b 	cmp	r0, fp
4000d6c0:	1a000000 	bne	4000d6c8 <_tx_mutex_put+0x1f4>
4000d6c4:	e3a0b000 	mov	fp, #0
4000d6c8:	e35b0000 	cmp	fp, #0
4000d6cc:	1afffff3 	bne	4000d6a0 <_tx_mutex_put+0x1cc>
4000d6d0:	e10f5000 	mrs	r5, CPSR
4000d6d4:	e3856080 	orr	r6, r5, #128	; 0x80
4000d6d8:	e121f006 	msr	CPSR_c, r6
4000d6dc:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d6e0:	e5900000 	ldr	r0, [r0]
4000d6e4:	e2400001 	sub	r0, r0, #1
4000d6e8:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d6ec:	e5810000 	str	r0, [r1]
4000d6f0:	e5940020 	ldr	r0, [r4, #32]
4000d6f4:	e3500001 	cmp	r0, #1
4000d6f8:	9a000012 	bls	4000d748 <_tx_mutex_put+0x274>
4000d6fc:	e5940010 	ldr	r0, [r4, #16]
4000d700:	e3500000 	cmp	r0, #0
4000d704:	0a00000f 	beq	4000d748 <_tx_mutex_put+0x274>
4000d708:	e59f0294 	ldr	r0, [pc, #660]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d70c:	e5900000 	ldr	r0, [r0]
4000d710:	e2800001 	add	r0, r0, #1
4000d714:	e59f1288 	ldr	r1, [pc, #648]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d718:	e5810000 	str	r0, [r1]
4000d71c:	e121f005 	msr	CPSR_c, r5
4000d720:	e1a00004 	mov	r0, r4
4000d724:	eb000bec 	bl	400106dc <_tx_mutex_prioritize>
4000d728:	e10f5000 	mrs	r5, CPSR
4000d72c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d730:	e121f006 	msr	CPSR_c, r6
4000d734:	e59f0268 	ldr	r0, [pc, #616]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d738:	e5900000 	ldr	r0, [r0]
4000d73c:	e2400001 	sub	r0, r0, #1
4000d740:	e59f125c 	ldr	r1, [pc, #604]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d744:	e5810000 	str	r0, [r1]
4000d748:	e594001c 	ldr	r0, [r4, #28]
4000d74c:	e3500000 	cmp	r0, #0
4000d750:	1a000024 	bne	4000d7e8 <_tx_mutex_put+0x314>
4000d754:	e59f0248 	ldr	r0, [pc, #584]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d758:	e5900000 	ldr	r0, [r0]
4000d75c:	e2800001 	add	r0, r0, #1
4000d760:	e59f123c 	ldr	r1, [pc, #572]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d764:	e5810000 	str	r0, [r1]
4000d768:	e121f005 	msr	CPSR_c, r5
4000d76c:	e5940010 	ldr	r0, [r4, #16]
4000d770:	e3500000 	cmp	r0, #0
4000d774:	0a00000a 	beq	4000d7a4 <_tx_mutex_put+0x2d0>
4000d778:	e3a00020 	mov	r0, #32
4000d77c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d780:	e3570000 	cmp	r7, #0
4000d784:	0a000006 	beq	4000d7a4 <_tx_mutex_put+0x2d0>
4000d788:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d78c:	e1500009 	cmp	r0, r9
4000d790:	0a000003 	beq	4000d7a4 <_tx_mutex_put+0x2d0>
4000d794:	e1a0200a 	mov	r2, sl
4000d798:	e1a01009 	mov	r1, r9
4000d79c:	e594000c 	ldr	r0, [r4, #12]
4000d7a0:	ebffff29 	bl	4000d44c <_tx_mutex_priority_change>
4000d7a4:	e10f5000 	mrs	r5, CPSR
4000d7a8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d7ac:	e121f006 	msr	CPSR_c, r6
4000d7b0:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d7b4:	e5900000 	ldr	r0, [r0]
4000d7b8:	e2400001 	sub	r0, r0, #1
4000d7bc:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d7c0:	e5810000 	str	r0, [r1]
4000d7c4:	e5940008 	ldr	r0, [r4, #8]
4000d7c8:	e3500000 	cmp	r0, #0
4000d7cc:	1a000001 	bne	4000d7d8 <_tx_mutex_put+0x304>
4000d7d0:	e3a00000 	mov	r0, #0
4000d7d4:	e584000c 	str	r0, [r4, #12]
4000d7d8:	e121f005 	msr	CPSR_c, r5
4000d7dc:	eb000726 	bl	4000f47c <_tx_thread_system_preempt_check>
4000d7e0:	e3a00000 	mov	r0, #0
4000d7e4:	eaffff86 	b	4000d604 <_tx_mutex_put+0x130>
4000d7e8:	e594701c 	ldr	r7, [r4, #28]
4000d7ec:	e5940010 	ldr	r0, [r4, #16]
4000d7f0:	e3500000 	cmp	r0, #0
4000d7f4:	0a00001f 	beq	4000d878 <_tx_mutex_put+0x3a4>
4000d7f8:	e594800c 	ldr	r8, [r4, #12]
4000d7fc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d800:	e5840014 	str	r0, [r4, #20]
4000d804:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d808:	e5840018 	str	r0, [r4, #24]
4000d80c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d810:	e3500000 	cmp	r0, #0
4000d814:	0a00000b 	beq	4000d848 <_tx_mutex_put+0x374>
4000d818:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d81c:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d820:	e58d0000 	str	r0, [sp]
4000d824:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d828:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d82c:	e59d0000 	ldr	r0, [sp]
4000d830:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d834:	e59d0000 	ldr	r0, [sp]
4000d838:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d83c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d840:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d844:	ea000006 	b	4000d864 <_tx_mutex_put+0x390>
4000d848:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d84c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d850:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d854:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d858:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d85c:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d860:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d864:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d868:	e2800001 	add	r0, r0, #1
4000d86c:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d870:	e3a00020 	mov	r0, #32
4000d874:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d878:	e3a00001 	mov	r0, #1
4000d87c:	e5840008 	str	r0, [r4, #8]
4000d880:	e584700c 	str	r7, [r4, #12]
4000d884:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d888:	e1500007 	cmp	r0, r7
4000d88c:	1a000002 	bne	4000d89c <_tx_mutex_put+0x3c8>
4000d890:	e3a00000 	mov	r0, #0
4000d894:	e584001c 	str	r0, [r4, #28]
4000d898:	ea000007 	b	4000d8bc <_tx_mutex_put+0x3e8>
4000d89c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d8a0:	e584001c 	str	r0, [r4, #28]
4000d8a4:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d8a8:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d8ac:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d8b0:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d8b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d8b8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d8bc:	e5940020 	ldr	r0, [r4, #32]
4000d8c0:	e2400001 	sub	r0, r0, #1
4000d8c4:	e5840020 	str	r0, [r4, #32]
4000d8c8:	e3a00000 	mov	r0, #0
4000d8cc:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d8d0:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d8d4:	e5900000 	ldr	r0, [r0]
4000d8d8:	e2800001 	add	r0, r0, #1
4000d8dc:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d9a4 <_tx_mutex_put+0x4d0>
4000d8e0:	e5810000 	str	r0, [r1]
4000d8e4:	e121f005 	msr	CPSR_c, r5
4000d8e8:	e3a00000 	mov	r0, #0
4000d8ec:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d8f0:	e5940010 	ldr	r0, [r4, #16]
4000d8f4:	e3500000 	cmp	r0, #0
4000d8f8:	0a00001a 	beq	4000d968 <_tx_mutex_put+0x494>
4000d8fc:	e5940020 	ldr	r0, [r4, #32]
4000d900:	e3500000 	cmp	r0, #0
4000d904:	0a00000e 	beq	4000d944 <_tx_mutex_put+0x470>
4000d908:	e5940020 	ldr	r0, [r4, #32]
4000d90c:	e3500001 	cmp	r0, #1
4000d910:	9a000001 	bls	4000d91c <_tx_mutex_put+0x448>
4000d914:	e1a00004 	mov	r0, r4
4000d918:	eb000b6f 	bl	400106dc <_tx_mutex_prioritize>
4000d91c:	e10f5000 	mrs	r5, CPSR
4000d920:	e3856080 	orr	r6, r5, #128	; 0x80
4000d924:	e121f006 	msr	CPSR_c, r6
4000d928:	e594001c 	ldr	r0, [r4, #28]
4000d92c:	e3500000 	cmp	r0, #0
4000d930:	0a000002 	beq	4000d940 <_tx_mutex_put+0x46c>
4000d934:	e594001c 	ldr	r0, [r4, #28]
4000d938:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d93c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d940:	e121f005 	msr	CPSR_c, r5
4000d944:	e3580000 	cmp	r8, #0
4000d948:	0a000006 	beq	4000d968 <_tx_mutex_put+0x494>
4000d94c:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d950:	e1500009 	cmp	r0, r9
4000d954:	0a000003 	beq	4000d968 <_tx_mutex_put+0x494>
4000d958:	e1a0200a 	mov	r2, sl
4000d95c:	e1a01009 	mov	r1, r9
4000d960:	e1a00008 	mov	r0, r8
4000d964:	ebfffeb8 	bl	4000d44c <_tx_mutex_priority_change>
4000d968:	e1a00007 	mov	r0, r7
4000d96c:	eb0006ee 	bl	4000f52c <_tx_thread_system_resume>
4000d970:	e3a00000 	mov	r0, #0
4000d974:	eaffff22 	b	4000d604 <_tx_mutex_put+0x130>
4000d978:	e121f005 	msr	CPSR_c, r5
4000d97c:	e3a0001e 	mov	r0, #30
4000d980:	eaffff1f 	b	4000d604 <_tx_mutex_put+0x130>
4000d984:	40030ec0 	.word	0x40030ec0
4000d988:	40030ec4 	.word	0x40030ec4
4000d98c:	40030e4c 	.word	0x40030e4c
4000d990:	40030e54 	.word	0x40030e54
4000d994:	f0f0f0f0 	.word	0xf0f0f0f0
4000d998:	40030ebc 	.word	0x40030ebc
4000d99c:	40030eb8 	.word	0x40030eb8
4000d9a0:	40030eac 	.word	0x40030eac
4000d9a4:	40030e70 	.word	0x40030e70

4000d9a8 <_tx_queue_create>:
4000d9a8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d9ac:	e1a04000 	mov	r4, r0
4000d9b0:	e1a05001 	mov	r5, r1
4000d9b4:	e1a06002 	mov	r6, r2
4000d9b8:	e1a07003 	mov	r7, r3
4000d9bc:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d9c0:	e3a0103c 	mov	r1, #60	; 0x3c
4000d9c4:	e1a00004 	mov	r0, r4
4000d9c8:	eb0017d1 	bl	40013914 <__aeabi_memclr4>
4000d9cc:	e5845004 	str	r5, [r4, #4]
4000d9d0:	e5846008 	str	r6, [r4, #8]
4000d9d4:	e1a01106 	lsl	r1, r6, #2
4000d9d8:	e1a00008 	mov	r0, r8
4000d9dc:	eb000ca6 	bl	40010c7c <__aeabi_uidivmod>
4000d9e0:	e1a0b000 	mov	fp, r0
4000d9e4:	e000069b 	mul	r0, fp, r6
4000d9e8:	e58d0004 	str	r0, [sp, #4]
4000d9ec:	e5847018 	str	r7, [r4, #24]
4000d9f0:	e59d0004 	ldr	r0, [sp, #4]
4000d9f4:	e0870100 	add	r0, r7, r0, lsl #2
4000d9f8:	e584001c 	str	r0, [r4, #28]
4000d9fc:	e5847020 	str	r7, [r4, #32]
4000da00:	e5847024 	str	r7, [r4, #36]	; 0x24
4000da04:	e584b014 	str	fp, [r4, #20]
4000da08:	e584b00c 	str	fp, [r4, #12]
4000da0c:	e10f9000 	mrs	r9, CPSR
4000da10:	e3890080 	orr	r0, r9, #128	; 0x80
4000da14:	e58d0008 	str	r0, [sp, #8]
4000da18:	e59d0008 	ldr	r0, [sp, #8]
4000da1c:	e121f000 	msr	CPSR_c, r0
4000da20:	e59f0160 	ldr	r0, [pc, #352]	; 4000db88 <_tx_queue_create+0x1e0>
4000da24:	e5840000 	str	r0, [r4]
4000da28:	e59f015c 	ldr	r0, [pc, #348]	; 4000db8c <_tx_queue_create+0x1e4>
4000da2c:	e5900000 	ldr	r0, [r0]
4000da30:	e3500000 	cmp	r0, #0
4000da34:	0a00000b 	beq	4000da68 <_tx_queue_create+0xc0>
4000da38:	e59f014c 	ldr	r0, [pc, #332]	; 4000db8c <_tx_queue_create+0x1e4>
4000da3c:	e5900000 	ldr	r0, [r0]
4000da40:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000da44:	e59f0140 	ldr	r0, [pc, #320]	; 4000db8c <_tx_queue_create+0x1e4>
4000da48:	e5900000 	ldr	r0, [r0]
4000da4c:	e5804034 	str	r4, [r0, #52]	; 0x34
4000da50:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000da54:	e584a034 	str	sl, [r4, #52]	; 0x34
4000da58:	e59f012c 	ldr	r0, [pc, #300]	; 4000db8c <_tx_queue_create+0x1e4>
4000da5c:	e5900000 	ldr	r0, [r0]
4000da60:	e5840030 	str	r0, [r4, #48]	; 0x30
4000da64:	ea000003 	b	4000da78 <_tx_queue_create+0xd0>
4000da68:	e59f011c 	ldr	r0, [pc, #284]	; 4000db8c <_tx_queue_create+0x1e4>
4000da6c:	e5804000 	str	r4, [r0]
4000da70:	e5844030 	str	r4, [r4, #48]	; 0x30
4000da74:	e5844034 	str	r4, [r4, #52]	; 0x34
4000da78:	e59f0110 	ldr	r0, [pc, #272]	; 4000db90 <_tx_queue_create+0x1e8>
4000da7c:	e5900000 	ldr	r0, [r0]
4000da80:	e2800001 	add	r0, r0, #1
4000da84:	e59f1104 	ldr	r1, [pc, #260]	; 4000db90 <_tx_queue_create+0x1e8>
4000da88:	e5810000 	str	r0, [r1]
4000da8c:	e3a03000 	mov	r3, #0
4000da90:	e58d3000 	str	r3, [sp]
4000da94:	e1a03008 	mov	r3, r8
4000da98:	e1a02005 	mov	r2, r5
4000da9c:	e1a01004 	mov	r1, r4
4000daa0:	e3a00003 	mov	r0, #3
4000daa4:	eb0009f6 	bl	40010284 <_tx_trace_object_register>
4000daa8:	e59f10e4 	ldr	r1, [pc, #228]	; 4000db94 <_tx_queue_create+0x1ec>
4000daac:	e5910000 	ldr	r0, [r1]
4000dab0:	e3500000 	cmp	r0, #0
4000dab4:	0a000030 	beq	4000db7c <_tx_queue_create+0x1d4>
4000dab8:	e59f10d8 	ldr	r1, [pc, #216]	; 4000db98 <_tx_queue_create+0x1f0>
4000dabc:	e5911000 	ldr	r1, [r1]
4000dac0:	e2811001 	add	r1, r1, #1
4000dac4:	e59f20cc 	ldr	r2, [pc, #204]	; 4000db98 <_tx_queue_create+0x1f0>
4000dac8:	e5821000 	str	r1, [r2]
4000dacc:	e580100c 	str	r1, [r0, #12]
4000dad0:	e59f10c4 	ldr	r1, [pc, #196]	; 4000db9c <_tx_queue_create+0x1f4>
4000dad4:	e5911000 	ldr	r1, [r1]
4000dad8:	e3510000 	cmp	r1, #0
4000dadc:	1a000006 	bne	4000dafc <_tx_queue_create+0x154>
4000dae0:	e59f10b8 	ldr	r1, [pc, #184]	; 4000dba0 <_tx_queue_create+0x1f8>
4000dae4:	e5911000 	ldr	r1, [r1]
4000dae8:	e5801000 	str	r1, [r0]
4000daec:	e5901000 	ldr	r1, [r0]
4000daf0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000daf4:	e5801004 	str	r1, [r0, #4]
4000daf8:	ea00000d 	b	4000db34 <_tx_queue_create+0x18c>
4000dafc:	e59f1098 	ldr	r1, [pc, #152]	; 4000db9c <_tx_queue_create+0x1f4>
4000db00:	e5911000 	ldr	r1, [r1]
4000db04:	e59f2098 	ldr	r2, [pc, #152]	; 4000dba4 <_tx_queue_create+0x1fc>
4000db08:	e1510002 	cmp	r1, r2
4000db0c:	2a000004 	bcs	4000db24 <_tx_queue_create+0x17c>
4000db10:	e3e01000 	mvn	r1, #0
4000db14:	e5801000 	str	r1, [r0]
4000db18:	e3a01000 	mov	r1, #0
4000db1c:	e5801004 	str	r1, [r0, #4]
4000db20:	ea000003 	b	4000db34 <_tx_queue_create+0x18c>
4000db24:	e59f1078 	ldr	r1, [pc, #120]	; 4000dba4 <_tx_queue_create+0x1fc>
4000db28:	e5801000 	str	r1, [r0]
4000db2c:	e3a01000 	mov	r1, #0
4000db30:	e5801004 	str	r1, [r0, #4]
4000db34:	e3a0103c 	mov	r1, #60	; 0x3c
4000db38:	e5801008 	str	r1, [r0, #8]
4000db3c:	e5804010 	str	r4, [r0, #16]
4000db40:	e5806014 	str	r6, [r0, #20]
4000db44:	e5807018 	str	r7, [r0, #24]
4000db48:	e580801c 	str	r8, [r0, #28]
4000db4c:	e2800020 	add	r0, r0, #32
4000db50:	e59f1050 	ldr	r1, [pc, #80]	; 4000dba8 <_tx_queue_create+0x200>
4000db54:	e5911000 	ldr	r1, [r1]
4000db58:	e1500001 	cmp	r0, r1
4000db5c:	3a000001 	bcc	4000db68 <_tx_queue_create+0x1c0>
4000db60:	e59f1044 	ldr	r1, [pc, #68]	; 4000dbac <_tx_queue_create+0x204>
4000db64:	e5910000 	ldr	r0, [r1]
4000db68:	e59f1024 	ldr	r1, [pc, #36]	; 4000db94 <_tx_queue_create+0x1ec>
4000db6c:	e5810000 	str	r0, [r1]
4000db70:	e59f1038 	ldr	r1, [pc, #56]	; 4000dbb0 <_tx_queue_create+0x208>
4000db74:	e5911000 	ldr	r1, [r1]
4000db78:	e5810020 	str	r0, [r1, #32]
4000db7c:	e121f009 	msr	CPSR_c, r9
4000db80:	e3a00000 	mov	r0, #0
4000db84:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000db88:	51554555 	.word	0x51554555
4000db8c:	40030ed0 	.word	0x40030ed0
4000db90:	40030ed4 	.word	0x40030ed4
4000db94:	40030ec0 	.word	0x40030ec0
4000db98:	40030ec4 	.word	0x40030ec4
4000db9c:	40030e4c 	.word	0x40030e4c
4000dba0:	40030e54 	.word	0x40030e54
4000dba4:	f0f0f0f0 	.word	0xf0f0f0f0
4000dba8:	40030ebc 	.word	0x40030ebc
4000dbac:	40030eb8 	.word	0x40030eb8
4000dbb0:	40030eac 	.word	0x40030eac

4000dbb4 <_tx_queue_front_send>:
4000dbb4:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000dbb8:	e1a04000 	mov	r4, r0
4000dbbc:	e1a05001 	mov	r5, r1
4000dbc0:	e1a06002 	mov	r6, r2
4000dbc4:	e10f7000 	mrs	r7, CPSR
4000dbc8:	e3870080 	orr	r0, r7, #128	; 0x80
4000dbcc:	e58d0004 	str	r0, [sp, #4]
4000dbd0:	e59d0004 	ldr	r0, [sp, #4]
4000dbd4:	e121f000 	msr	CPSR_c, r0
4000dbd8:	e59f1368 	ldr	r1, [pc, #872]	; 4000df48 <_tx_queue_front_send+0x394>
4000dbdc:	e5910000 	ldr	r0, [r1]
4000dbe0:	e3500000 	cmp	r0, #0
4000dbe4:	0a000031 	beq	4000dcb0 <_tx_queue_front_send+0xfc>
4000dbe8:	e59f135c 	ldr	r1, [pc, #860]	; 4000df4c <_tx_queue_front_send+0x398>
4000dbec:	e5911000 	ldr	r1, [r1]
4000dbf0:	e2811001 	add	r1, r1, #1
4000dbf4:	e59f2350 	ldr	r2, [pc, #848]	; 4000df4c <_tx_queue_front_send+0x398>
4000dbf8:	e5821000 	str	r1, [r2]
4000dbfc:	e580100c 	str	r1, [r0, #12]
4000dc00:	e59f1348 	ldr	r1, [pc, #840]	; 4000df50 <_tx_queue_front_send+0x39c>
4000dc04:	e5911000 	ldr	r1, [r1]
4000dc08:	e3510000 	cmp	r1, #0
4000dc0c:	1a000006 	bne	4000dc2c <_tx_queue_front_send+0x78>
4000dc10:	e59f133c 	ldr	r1, [pc, #828]	; 4000df54 <_tx_queue_front_send+0x3a0>
4000dc14:	e5911000 	ldr	r1, [r1]
4000dc18:	e5801000 	str	r1, [r0]
4000dc1c:	e5901000 	ldr	r1, [r0]
4000dc20:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dc24:	e5801004 	str	r1, [r0, #4]
4000dc28:	ea00000d 	b	4000dc64 <_tx_queue_front_send+0xb0>
4000dc2c:	e59f131c 	ldr	r1, [pc, #796]	; 4000df50 <_tx_queue_front_send+0x39c>
4000dc30:	e5911000 	ldr	r1, [r1]
4000dc34:	e59f231c 	ldr	r2, [pc, #796]	; 4000df58 <_tx_queue_front_send+0x3a4>
4000dc38:	e1510002 	cmp	r1, r2
4000dc3c:	2a000004 	bcs	4000dc54 <_tx_queue_front_send+0xa0>
4000dc40:	e3e01000 	mvn	r1, #0
4000dc44:	e5801000 	str	r1, [r0]
4000dc48:	e3a01000 	mov	r1, #0
4000dc4c:	e5801004 	str	r1, [r0, #4]
4000dc50:	ea000003 	b	4000dc64 <_tx_queue_front_send+0xb0>
4000dc54:	e59f12fc 	ldr	r1, [pc, #764]	; 4000df58 <_tx_queue_front_send+0x3a4>
4000dc58:	e5801000 	str	r1, [r0]
4000dc5c:	e3a01000 	mov	r1, #0
4000dc60:	e5801004 	str	r1, [r0, #4]
4000dc64:	e3a0103f 	mov	r1, #63	; 0x3f
4000dc68:	e5801008 	str	r1, [r0, #8]
4000dc6c:	e5804010 	str	r4, [r0, #16]
4000dc70:	e5805014 	str	r5, [r0, #20]
4000dc74:	e5806018 	str	r6, [r0, #24]
4000dc78:	e5941010 	ldr	r1, [r4, #16]
4000dc7c:	e580101c 	str	r1, [r0, #28]
4000dc80:	e2800020 	add	r0, r0, #32
4000dc84:	e59f12d0 	ldr	r1, [pc, #720]	; 4000df5c <_tx_queue_front_send+0x3a8>
4000dc88:	e5911000 	ldr	r1, [r1]
4000dc8c:	e1500001 	cmp	r0, r1
4000dc90:	3a000001 	bcc	4000dc9c <_tx_queue_front_send+0xe8>
4000dc94:	e59f12c4 	ldr	r1, [pc, #708]	; 4000df60 <_tx_queue_front_send+0x3ac>
4000dc98:	e5910000 	ldr	r0, [r1]
4000dc9c:	e59f12a4 	ldr	r1, [pc, #676]	; 4000df48 <_tx_queue_front_send+0x394>
4000dca0:	e5810000 	str	r0, [r1]
4000dca4:	e59f12b8 	ldr	r1, [pc, #696]	; 4000df64 <_tx_queue_front_send+0x3b0>
4000dca8:	e5911000 	ldr	r1, [r1]
4000dcac:	e5810020 	str	r0, [r1, #32]
4000dcb0:	e5940014 	ldr	r0, [r4, #20]
4000dcb4:	e3500000 	cmp	r0, #0
4000dcb8:	0a000064 	beq	4000de50 <_tx_queue_front_send+0x29c>
4000dcbc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dcc0:	e3500000 	cmp	r0, #0
4000dcc4:	1a00002b 	bne	4000dd78 <_tx_queue_front_send+0x1c4>
4000dcc8:	e5940020 	ldr	r0, [r4, #32]
4000dccc:	e5941018 	ldr	r1, [r4, #24]
4000dcd0:	e1500001 	cmp	r0, r1
4000dcd4:	1a000004 	bne	4000dcec <_tx_queue_front_send+0x138>
4000dcd8:	e594001c 	ldr	r0, [r4, #28]
4000dcdc:	e5941008 	ldr	r1, [r4, #8]
4000dce0:	e0400101 	sub	r0, r0, r1, lsl #2
4000dce4:	e5840020 	str	r0, [r4, #32]
4000dce8:	ea000003 	b	4000dcfc <_tx_queue_front_send+0x148>
4000dcec:	e5940020 	ldr	r0, [r4, #32]
4000dcf0:	e5941008 	ldr	r1, [r4, #8]
4000dcf4:	e0400101 	sub	r0, r0, r1, lsl #2
4000dcf8:	e5840020 	str	r0, [r4, #32]
4000dcfc:	e5940014 	ldr	r0, [r4, #20]
4000dd00:	e2400001 	sub	r0, r0, #1
4000dd04:	e5840014 	str	r0, [r4, #20]
4000dd08:	e5940010 	ldr	r0, [r4, #16]
4000dd0c:	e2800001 	add	r0, r0, #1
4000dd10:	e5840010 	str	r0, [r4, #16]
4000dd14:	e1a09005 	mov	r9, r5
4000dd18:	e594a020 	ldr	sl, [r4, #32]
4000dd1c:	e594b008 	ldr	fp, [r4, #8]
4000dd20:	e1a00000 	nop			; (mov r0, r0)
4000dd24:	e5990000 	ldr	r0, [r9]
4000dd28:	e58a0000 	str	r0, [sl]
4000dd2c:	e24bb001 	sub	fp, fp, #1
4000dd30:	e35b0000 	cmp	fp, #0
4000dd34:	1a000000 	bne	4000dd3c <_tx_queue_front_send+0x188>
4000dd38:	ea000002 	b	4000dd48 <_tx_queue_front_send+0x194>
4000dd3c:	e28aa004 	add	sl, sl, #4
4000dd40:	e2899004 	add	r9, r9, #4
4000dd44:	eafffff6 	b	4000dd24 <_tx_queue_front_send+0x170>
4000dd48:	e1a00000 	nop			; (mov r0, r0)
4000dd4c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dd50:	e58d0000 	str	r0, [sp]
4000dd54:	e121f007 	msr	CPSR_c, r7
4000dd58:	e59d0000 	ldr	r0, [sp]
4000dd5c:	e3500000 	cmp	r0, #0
4000dd60:	0a000002 	beq	4000dd70 <_tx_queue_front_send+0x1bc>
4000dd64:	e1a00004 	mov	r0, r4
4000dd68:	e59d1000 	ldr	r1, [sp]
4000dd6c:	e12fff31 	blx	r1
4000dd70:	e3a00000 	mov	r0, #0
4000dd74:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000dd78:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dd7c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd80:	e1500008 	cmp	r0, r8
4000dd84:	1a000002 	bne	4000dd94 <_tx_queue_front_send+0x1e0>
4000dd88:	e3a00000 	mov	r0, #0
4000dd8c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd90:	ea000007 	b	4000ddb4 <_tx_queue_front_send+0x200>
4000dd94:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd98:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd9c:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dda0:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dda4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dda8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000ddac:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000ddb0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ddb4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000ddb8:	e2400001 	sub	r0, r0, #1
4000ddbc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000ddc0:	e3a00000 	mov	r0, #0
4000ddc4:	e5880068 	str	r0, [r8, #104]	; 0x68
4000ddc8:	e59f0198 	ldr	r0, [pc, #408]	; 4000df68 <_tx_queue_front_send+0x3b4>
4000ddcc:	e5900000 	ldr	r0, [r0]
4000ddd0:	e2800001 	add	r0, r0, #1
4000ddd4:	e59f118c 	ldr	r1, [pc, #396]	; 4000df68 <_tx_queue_front_send+0x3b4>
4000ddd8:	e5810000 	str	r0, [r1]
4000dddc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dde0:	e58d0000 	str	r0, [sp]
4000dde4:	e121f007 	msr	CPSR_c, r7
4000dde8:	e1a09005 	mov	r9, r5
4000ddec:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000ddf0:	e594b008 	ldr	fp, [r4, #8]
4000ddf4:	e1a00000 	nop			; (mov r0, r0)
4000ddf8:	e5990000 	ldr	r0, [r9]
4000ddfc:	e58a0000 	str	r0, [sl]
4000de00:	e24bb001 	sub	fp, fp, #1
4000de04:	e35b0000 	cmp	fp, #0
4000de08:	1a000000 	bne	4000de10 <_tx_queue_front_send+0x25c>
4000de0c:	ea000002 	b	4000de1c <_tx_queue_front_send+0x268>
4000de10:	e28aa004 	add	sl, sl, #4
4000de14:	e2899004 	add	r9, r9, #4
4000de18:	eafffff6 	b	4000ddf8 <_tx_queue_front_send+0x244>
4000de1c:	e1a00000 	nop			; (mov r0, r0)
4000de20:	e3a00000 	mov	r0, #0
4000de24:	e5880084 	str	r0, [r8, #132]	; 0x84
4000de28:	e1a00008 	mov	r0, r8
4000de2c:	eb0005be 	bl	4000f52c <_tx_thread_system_resume>
4000de30:	e59d0000 	ldr	r0, [sp]
4000de34:	e3500000 	cmp	r0, #0
4000de38:	0a000002 	beq	4000de48 <_tx_queue_front_send+0x294>
4000de3c:	e1a00004 	mov	r0, r4
4000de40:	e59d1000 	ldr	r1, [sp]
4000de44:	e12fff31 	blx	r1
4000de48:	e3a00000 	mov	r0, #0
4000de4c:	eaffffc8 	b	4000dd74 <_tx_queue_front_send+0x1c0>
4000de50:	e3560000 	cmp	r6, #0
4000de54:	0a000038 	beq	4000df3c <_tx_queue_front_send+0x388>
4000de58:	e59f00f4 	ldr	r0, [pc, #244]	; 4000df54 <_tx_queue_front_send+0x3a0>
4000de5c:	e5908000 	ldr	r8, [r0]
4000de60:	e59f0104 	ldr	r0, [pc, #260]	; 4000df6c <_tx_queue_front_send+0x3b8>
4000de64:	e5880068 	str	r0, [r8, #104]	; 0x68
4000de68:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000de6c:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000de70:	e3a00001 	mov	r0, #1
4000de74:	e5880080 	str	r0, [r8, #128]	; 0x80
4000de78:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de7c:	e3500000 	cmp	r0, #0
4000de80:	0a00000b 	beq	4000deb4 <_tx_queue_front_send+0x300>
4000de84:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de88:	e5880070 	str	r0, [r8, #112]	; 0x70
4000de8c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de90:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000de94:	e5880074 	str	r0, [r8, #116]	; 0x74
4000de98:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de9c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dea0:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dea4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dea8:	e5808074 	str	r8, [r0, #116]	; 0x74
4000deac:	e5848028 	str	r8, [r4, #40]	; 0x28
4000deb0:	ea000002 	b	4000dec0 <_tx_queue_front_send+0x30c>
4000deb4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000deb8:	e5888070 	str	r8, [r8, #112]	; 0x70
4000debc:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dec0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dec4:	e2800001 	add	r0, r0, #1
4000dec8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000decc:	e3a00005 	mov	r0, #5
4000ded0:	e5880030 	str	r0, [r8, #48]	; 0x30
4000ded4:	e3a00001 	mov	r0, #1
4000ded8:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dedc:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dee0:	e59f0080 	ldr	r0, [pc, #128]	; 4000df68 <_tx_queue_front_send+0x3b4>
4000dee4:	e5900000 	ldr	r0, [r0]
4000dee8:	e2800001 	add	r0, r0, #1
4000deec:	e59f1074 	ldr	r1, [pc, #116]	; 4000df68 <_tx_queue_front_send+0x3b4>
4000def0:	e5810000 	str	r0, [r1]
4000def4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000def8:	e58d0000 	str	r0, [sp]
4000defc:	e121f007 	msr	CPSR_c, r7
4000df00:	e1a00008 	mov	r0, r8
4000df04:	ebffebe1 	bl	40008e90 <_tx_thread_system_suspend>
4000df08:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000df0c:	e58d0000 	str	r0, [sp]
4000df10:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000df14:	e3500000 	cmp	r0, #0
4000df18:	1a000005 	bne	4000df34 <_tx_queue_front_send+0x380>
4000df1c:	e59d0000 	ldr	r0, [sp]
4000df20:	e3500000 	cmp	r0, #0
4000df24:	0a000002 	beq	4000df34 <_tx_queue_front_send+0x380>
4000df28:	e1a00004 	mov	r0, r4
4000df2c:	e59d1000 	ldr	r1, [sp]
4000df30:	e12fff31 	blx	r1
4000df34:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000df38:	eaffff8d 	b	4000dd74 <_tx_queue_front_send+0x1c0>
4000df3c:	e121f007 	msr	CPSR_c, r7
4000df40:	e3a0000b 	mov	r0, #11
4000df44:	eaffff8a 	b	4000dd74 <_tx_queue_front_send+0x1c0>
4000df48:	40030ec0 	.word	0x40030ec0
4000df4c:	40030ec4 	.word	0x40030ec4
4000df50:	40030e4c 	.word	0x40030e4c
4000df54:	40030e54 	.word	0x40030e54
4000df58:	f0f0f0f0 	.word	0xf0f0f0f0
4000df5c:	40030ebc 	.word	0x40030ebc
4000df60:	40030eb8 	.word	0x40030eb8
4000df64:	40030eac 	.word	0x40030eac
4000df68:	40030e70 	.word	0x40030e70
4000df6c:	40010950 	.word	0x40010950

4000df70 <_tx_queue_receive>:
4000df70:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000df74:	e1a04000 	mov	r4, r0
4000df78:	e1a05001 	mov	r5, r1
4000df7c:	e1a06002 	mov	r6, r2
4000df80:	e10f7000 	mrs	r7, CPSR
4000df84:	e3870080 	orr	r0, r7, #128	; 0x80
4000df88:	e58d0000 	str	r0, [sp]
4000df8c:	e59d0000 	ldr	r0, [sp]
4000df90:	e121f000 	msr	CPSR_c, r0
4000df94:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e3a8 <_tx_queue_receive+0x438>
4000df98:	e5910000 	ldr	r0, [r1]
4000df9c:	e3500000 	cmp	r0, #0
4000dfa0:	0a000031 	beq	4000e06c <_tx_queue_receive+0xfc>
4000dfa4:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e3ac <_tx_queue_receive+0x43c>
4000dfa8:	e5911000 	ldr	r1, [r1]
4000dfac:	e2811001 	add	r1, r1, #1
4000dfb0:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e3ac <_tx_queue_receive+0x43c>
4000dfb4:	e5821000 	str	r1, [r2]
4000dfb8:	e580100c 	str	r1, [r0, #12]
4000dfbc:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e3b0 <_tx_queue_receive+0x440>
4000dfc0:	e5911000 	ldr	r1, [r1]
4000dfc4:	e3510000 	cmp	r1, #0
4000dfc8:	1a000006 	bne	4000dfe8 <_tx_queue_receive+0x78>
4000dfcc:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e3b4 <_tx_queue_receive+0x444>
4000dfd0:	e5911000 	ldr	r1, [r1]
4000dfd4:	e5801000 	str	r1, [r0]
4000dfd8:	e5901000 	ldr	r1, [r0]
4000dfdc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dfe0:	e5801004 	str	r1, [r0, #4]
4000dfe4:	ea00000d 	b	4000e020 <_tx_queue_receive+0xb0>
4000dfe8:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e3b0 <_tx_queue_receive+0x440>
4000dfec:	e5911000 	ldr	r1, [r1]
4000dff0:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e3b8 <_tx_queue_receive+0x448>
4000dff4:	e1510002 	cmp	r1, r2
4000dff8:	2a000004 	bcs	4000e010 <_tx_queue_receive+0xa0>
4000dffc:	e3e01000 	mvn	r1, #0
4000e000:	e5801000 	str	r1, [r0]
4000e004:	e3a01000 	mov	r1, #0
4000e008:	e5801004 	str	r1, [r0, #4]
4000e00c:	ea000003 	b	4000e020 <_tx_queue_receive+0xb0>
4000e010:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e3b8 <_tx_queue_receive+0x448>
4000e014:	e5801000 	str	r1, [r0]
4000e018:	e3a01000 	mov	r1, #0
4000e01c:	e5801004 	str	r1, [r0, #4]
4000e020:	e3a01044 	mov	r1, #68	; 0x44
4000e024:	e5801008 	str	r1, [r0, #8]
4000e028:	e5804010 	str	r4, [r0, #16]
4000e02c:	e5805014 	str	r5, [r0, #20]
4000e030:	e5806018 	str	r6, [r0, #24]
4000e034:	e5941010 	ldr	r1, [r4, #16]
4000e038:	e580101c 	str	r1, [r0, #28]
4000e03c:	e2800020 	add	r0, r0, #32
4000e040:	e59f1374 	ldr	r1, [pc, #884]	; 4000e3bc <_tx_queue_receive+0x44c>
4000e044:	e5911000 	ldr	r1, [r1]
4000e048:	e1500001 	cmp	r0, r1
4000e04c:	3a000001 	bcc	4000e058 <_tx_queue_receive+0xe8>
4000e050:	e59f1368 	ldr	r1, [pc, #872]	; 4000e3c0 <_tx_queue_receive+0x450>
4000e054:	e5910000 	ldr	r0, [r1]
4000e058:	e59f1348 	ldr	r1, [pc, #840]	; 4000e3a8 <_tx_queue_receive+0x438>
4000e05c:	e5810000 	str	r0, [r1]
4000e060:	e59f135c 	ldr	r1, [pc, #860]	; 4000e3c4 <_tx_queue_receive+0x454>
4000e064:	e5911000 	ldr	r1, [r1]
4000e068:	e5810020 	str	r0, [r1, #32]
4000e06c:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e070:	e3580000 	cmp	r8, #0
4000e074:	0a00002f 	beq	4000e138 <_tx_queue_receive+0x1c8>
4000e078:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000e07c:	e3500000 	cmp	r0, #0
4000e080:	0a00002c 	beq	4000e138 <_tx_queue_receive+0x1c8>
4000e084:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e088:	e1a0a005 	mov	sl, r5
4000e08c:	e594b008 	ldr	fp, [r4, #8]
4000e090:	e1a00000 	nop			; (mov r0, r0)
4000e094:	e5990000 	ldr	r0, [r9]
4000e098:	e58a0000 	str	r0, [sl]
4000e09c:	e24bb001 	sub	fp, fp, #1
4000e0a0:	e35b0000 	cmp	fp, #0
4000e0a4:	1a000000 	bne	4000e0ac <_tx_queue_receive+0x13c>
4000e0a8:	ea000002 	b	4000e0b8 <_tx_queue_receive+0x148>
4000e0ac:	e28aa004 	add	sl, sl, #4
4000e0b0:	e2899004 	add	r9, r9, #4
4000e0b4:	eafffff6 	b	4000e094 <_tx_queue_receive+0x124>
4000e0b8:	e1a00000 	nop			; (mov r0, r0)
4000e0bc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e0c0:	e1500008 	cmp	r0, r8
4000e0c4:	1a000002 	bne	4000e0d4 <_tx_queue_receive+0x164>
4000e0c8:	e3a00000 	mov	r0, #0
4000e0cc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e0d0:	ea000007 	b	4000e0f4 <_tx_queue_receive+0x184>
4000e0d4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e0d8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e0dc:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e0e0:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e0e4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e0e8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e0ec:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e0f0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e0f4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e0f8:	e2400001 	sub	r0, r0, #1
4000e0fc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e100:	e3a00000 	mov	r0, #0
4000e104:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e108:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e10c:	e5900000 	ldr	r0, [r0]
4000e110:	e2800001 	add	r0, r0, #1
4000e114:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e118:	e5810000 	str	r0, [r1]
4000e11c:	e121f007 	msr	CPSR_c, r7
4000e120:	e3a00000 	mov	r0, #0
4000e124:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e128:	e1a00008 	mov	r0, r8
4000e12c:	eb0004fe 	bl	4000f52c <_tx_thread_system_resume>
4000e130:	e3a00000 	mov	r0, #0
4000e134:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e138:	e5940010 	ldr	r0, [r4, #16]
4000e13c:	e3500000 	cmp	r0, #0
4000e140:	0a000068 	beq	4000e2e8 <_tx_queue_receive+0x378>
4000e144:	e5949020 	ldr	r9, [r4, #32]
4000e148:	e1a0a005 	mov	sl, r5
4000e14c:	e594b008 	ldr	fp, [r4, #8]
4000e150:	e1a00000 	nop			; (mov r0, r0)
4000e154:	e5990000 	ldr	r0, [r9]
4000e158:	e58a0000 	str	r0, [sl]
4000e15c:	e24bb001 	sub	fp, fp, #1
4000e160:	e35b0000 	cmp	fp, #0
4000e164:	1a000000 	bne	4000e16c <_tx_queue_receive+0x1fc>
4000e168:	ea000002 	b	4000e178 <_tx_queue_receive+0x208>
4000e16c:	e28aa004 	add	sl, sl, #4
4000e170:	e2899004 	add	r9, r9, #4
4000e174:	eafffff6 	b	4000e154 <_tx_queue_receive+0x1e4>
4000e178:	e1a00000 	nop			; (mov r0, r0)
4000e17c:	e5940020 	ldr	r0, [r4, #32]
4000e180:	e5941008 	ldr	r1, [r4, #8]
4000e184:	e0800101 	add	r0, r0, r1, lsl #2
4000e188:	e5840020 	str	r0, [r4, #32]
4000e18c:	e5940020 	ldr	r0, [r4, #32]
4000e190:	e594101c 	ldr	r1, [r4, #28]
4000e194:	e1500001 	cmp	r0, r1
4000e198:	3a000001 	bcc	4000e1a4 <_tx_queue_receive+0x234>
4000e19c:	e5940018 	ldr	r0, [r4, #24]
4000e1a0:	e5840020 	str	r0, [r4, #32]
4000e1a4:	e3580000 	cmp	r8, #0
4000e1a8:	1a000008 	bne	4000e1d0 <_tx_queue_receive+0x260>
4000e1ac:	e5940014 	ldr	r0, [r4, #20]
4000e1b0:	e2800001 	add	r0, r0, #1
4000e1b4:	e5840014 	str	r0, [r4, #20]
4000e1b8:	e5940010 	ldr	r0, [r4, #16]
4000e1bc:	e2400001 	sub	r0, r0, #1
4000e1c0:	e5840010 	str	r0, [r4, #16]
4000e1c4:	e121f007 	msr	CPSR_c, r7
4000e1c8:	e3a00000 	mov	r0, #0
4000e1cc:	eaffffd8 	b	4000e134 <_tx_queue_receive+0x1c4>
4000e1d0:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e1d4:	e5900000 	ldr	r0, [r0]
4000e1d8:	e2800001 	add	r0, r0, #1
4000e1dc:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e1e0:	e5810000 	str	r0, [r1]
4000e1e4:	e121f007 	msr	CPSR_c, r7
4000e1e8:	e10f7000 	mrs	r7, CPSR
4000e1ec:	e3870080 	orr	r0, r7, #128	; 0x80
4000e1f0:	e58d0000 	str	r0, [sp]
4000e1f4:	e59d0000 	ldr	r0, [sp]
4000e1f8:	e121f000 	msr	CPSR_c, r0
4000e1fc:	e2810000 	add	r0, r1, #0
4000e200:	e5900000 	ldr	r0, [r0]
4000e204:	e2400001 	sub	r0, r0, #1
4000e208:	e5810000 	str	r0, [r1]
4000e20c:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e210:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e214:	e594b008 	ldr	fp, [r4, #8]
4000e218:	e1a00000 	nop			; (mov r0, r0)
4000e21c:	e5990000 	ldr	r0, [r9]
4000e220:	e58a0000 	str	r0, [sl]
4000e224:	e24bb001 	sub	fp, fp, #1
4000e228:	e35b0000 	cmp	fp, #0
4000e22c:	1a000000 	bne	4000e234 <_tx_queue_receive+0x2c4>
4000e230:	ea000002 	b	4000e240 <_tx_queue_receive+0x2d0>
4000e234:	e28aa004 	add	sl, sl, #4
4000e238:	e2899004 	add	r9, r9, #4
4000e23c:	eafffff6 	b	4000e21c <_tx_queue_receive+0x2ac>
4000e240:	e1a00000 	nop			; (mov r0, r0)
4000e244:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e248:	e5941008 	ldr	r1, [r4, #8]
4000e24c:	e0800101 	add	r0, r0, r1, lsl #2
4000e250:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e254:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e258:	e594101c 	ldr	r1, [r4, #28]
4000e25c:	e1500001 	cmp	r0, r1
4000e260:	3a000001 	bcc	4000e26c <_tx_queue_receive+0x2fc>
4000e264:	e5940018 	ldr	r0, [r4, #24]
4000e268:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e26c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e270:	e1500008 	cmp	r0, r8
4000e274:	1a000002 	bne	4000e284 <_tx_queue_receive+0x314>
4000e278:	e3a00000 	mov	r0, #0
4000e27c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e280:	ea000007 	b	4000e2a4 <_tx_queue_receive+0x334>
4000e284:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e288:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e28c:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e290:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e294:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e298:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e29c:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e2a0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e2a4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e2a8:	e2400001 	sub	r0, r0, #1
4000e2ac:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e2b0:	e3a00000 	mov	r0, #0
4000e2b4:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e2b8:	e59f0108 	ldr	r0, [pc, #264]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e2bc:	e5900000 	ldr	r0, [r0]
4000e2c0:	e2800001 	add	r0, r0, #1
4000e2c4:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e2c8:	e5810000 	str	r0, [r1]
4000e2cc:	e121f007 	msr	CPSR_c, r7
4000e2d0:	e3a00000 	mov	r0, #0
4000e2d4:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e2d8:	e1a00008 	mov	r0, r8
4000e2dc:	eb000492 	bl	4000f52c <_tx_thread_system_resume>
4000e2e0:	e3a00000 	mov	r0, #0
4000e2e4:	eaffff92 	b	4000e134 <_tx_queue_receive+0x1c4>
4000e2e8:	e3560000 	cmp	r6, #0
4000e2ec:	0a00002a 	beq	4000e39c <_tx_queue_receive+0x42c>
4000e2f0:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e3b4 <_tx_queue_receive+0x444>
4000e2f4:	e5908000 	ldr	r8, [r0]
4000e2f8:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e3cc <_tx_queue_receive+0x45c>
4000e2fc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e300:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e304:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e308:	e3a00000 	mov	r0, #0
4000e30c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e310:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e314:	e3500000 	cmp	r0, #0
4000e318:	0a00000a 	beq	4000e348 <_tx_queue_receive+0x3d8>
4000e31c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e320:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e324:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e328:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e32c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e330:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e334:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e338:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e33c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e340:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e344:	ea000002 	b	4000e354 <_tx_queue_receive+0x3e4>
4000e348:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e34c:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e350:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e354:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e358:	e2800001 	add	r0, r0, #1
4000e35c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e360:	e3a00005 	mov	r0, #5
4000e364:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e368:	e3a00001 	mov	r0, #1
4000e36c:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e370:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e374:	e59f004c 	ldr	r0, [pc, #76]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e378:	e5900000 	ldr	r0, [r0]
4000e37c:	e2800001 	add	r0, r0, #1
4000e380:	e59f1040 	ldr	r1, [pc, #64]	; 4000e3c8 <_tx_queue_receive+0x458>
4000e384:	e5810000 	str	r0, [r1]
4000e388:	e121f007 	msr	CPSR_c, r7
4000e38c:	e1a00008 	mov	r0, r8
4000e390:	ebffeabe 	bl	40008e90 <_tx_thread_system_suspend>
4000e394:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e398:	eaffff65 	b	4000e134 <_tx_queue_receive+0x1c4>
4000e39c:	e121f007 	msr	CPSR_c, r7
4000e3a0:	e3a0000a 	mov	r0, #10
4000e3a4:	eaffff62 	b	4000e134 <_tx_queue_receive+0x1c4>
4000e3a8:	40030ec0 	.word	0x40030ec0
4000e3ac:	40030ec4 	.word	0x40030ec4
4000e3b0:	40030e4c 	.word	0x40030e4c
4000e3b4:	40030e54 	.word	0x40030e54
4000e3b8:	f0f0f0f0 	.word	0xf0f0f0f0
4000e3bc:	40030ebc 	.word	0x40030ebc
4000e3c0:	40030eb8 	.word	0x40030eb8
4000e3c4:	40030eac 	.word	0x40030eac
4000e3c8:	40030e70 	.word	0x40030e70
4000e3cc:	40010950 	.word	0x40010950

4000e3d0 <_tx_queue_send>:
4000e3d0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e3d4:	e1a04000 	mov	r4, r0
4000e3d8:	e1a05001 	mov	r5, r1
4000e3dc:	e1a06002 	mov	r6, r2
4000e3e0:	e10f7000 	mrs	r7, CPSR
4000e3e4:	e3870080 	orr	r0, r7, #128	; 0x80
4000e3e8:	e58d0004 	str	r0, [sp, #4]
4000e3ec:	e59d0004 	ldr	r0, [sp, #4]
4000e3f0:	e121f000 	msr	CPSR_c, r0
4000e3f4:	e59f1358 	ldr	r1, [pc, #856]	; 4000e754 <_tx_queue_send+0x384>
4000e3f8:	e5910000 	ldr	r0, [r1]
4000e3fc:	e3500000 	cmp	r0, #0
4000e400:	0a000031 	beq	4000e4cc <_tx_queue_send+0xfc>
4000e404:	e59f134c 	ldr	r1, [pc, #844]	; 4000e758 <_tx_queue_send+0x388>
4000e408:	e5911000 	ldr	r1, [r1]
4000e40c:	e2811001 	add	r1, r1, #1
4000e410:	e59f2340 	ldr	r2, [pc, #832]	; 4000e758 <_tx_queue_send+0x388>
4000e414:	e5821000 	str	r1, [r2]
4000e418:	e580100c 	str	r1, [r0, #12]
4000e41c:	e59f1338 	ldr	r1, [pc, #824]	; 4000e75c <_tx_queue_send+0x38c>
4000e420:	e5911000 	ldr	r1, [r1]
4000e424:	e3510000 	cmp	r1, #0
4000e428:	1a000006 	bne	4000e448 <_tx_queue_send+0x78>
4000e42c:	e59f132c 	ldr	r1, [pc, #812]	; 4000e760 <_tx_queue_send+0x390>
4000e430:	e5911000 	ldr	r1, [r1]
4000e434:	e5801000 	str	r1, [r0]
4000e438:	e5901000 	ldr	r1, [r0]
4000e43c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e440:	e5801004 	str	r1, [r0, #4]
4000e444:	ea00000d 	b	4000e480 <_tx_queue_send+0xb0>
4000e448:	e59f130c 	ldr	r1, [pc, #780]	; 4000e75c <_tx_queue_send+0x38c>
4000e44c:	e5911000 	ldr	r1, [r1]
4000e450:	e59f230c 	ldr	r2, [pc, #780]	; 4000e764 <_tx_queue_send+0x394>
4000e454:	e1510002 	cmp	r1, r2
4000e458:	2a000004 	bcs	4000e470 <_tx_queue_send+0xa0>
4000e45c:	e3e01000 	mvn	r1, #0
4000e460:	e5801000 	str	r1, [r0]
4000e464:	e3a01000 	mov	r1, #0
4000e468:	e5801004 	str	r1, [r0, #4]
4000e46c:	ea000003 	b	4000e480 <_tx_queue_send+0xb0>
4000e470:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e764 <_tx_queue_send+0x394>
4000e474:	e5801000 	str	r1, [r0]
4000e478:	e3a01000 	mov	r1, #0
4000e47c:	e5801004 	str	r1, [r0, #4]
4000e480:	e3a01045 	mov	r1, #69	; 0x45
4000e484:	e5801008 	str	r1, [r0, #8]
4000e488:	e5804010 	str	r4, [r0, #16]
4000e48c:	e5805014 	str	r5, [r0, #20]
4000e490:	e5806018 	str	r6, [r0, #24]
4000e494:	e5941010 	ldr	r1, [r4, #16]
4000e498:	e580101c 	str	r1, [r0, #28]
4000e49c:	e2800020 	add	r0, r0, #32
4000e4a0:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e768 <_tx_queue_send+0x398>
4000e4a4:	e5911000 	ldr	r1, [r1]
4000e4a8:	e1500001 	cmp	r0, r1
4000e4ac:	3a000001 	bcc	4000e4b8 <_tx_queue_send+0xe8>
4000e4b0:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e76c <_tx_queue_send+0x39c>
4000e4b4:	e5910000 	ldr	r0, [r1]
4000e4b8:	e59f1294 	ldr	r1, [pc, #660]	; 4000e754 <_tx_queue_send+0x384>
4000e4bc:	e5810000 	str	r0, [r1]
4000e4c0:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e770 <_tx_queue_send+0x3a0>
4000e4c4:	e5911000 	ldr	r1, [r1]
4000e4c8:	e5810020 	str	r0, [r1, #32]
4000e4cc:	e5940014 	ldr	r0, [r4, #20]
4000e4d0:	e3500000 	cmp	r0, #0
4000e4d4:	0a000061 	beq	4000e660 <_tx_queue_send+0x290>
4000e4d8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e4dc:	e3500000 	cmp	r0, #0
4000e4e0:	1a000028 	bne	4000e588 <_tx_queue_send+0x1b8>
4000e4e4:	e5940014 	ldr	r0, [r4, #20]
4000e4e8:	e2400001 	sub	r0, r0, #1
4000e4ec:	e5840014 	str	r0, [r4, #20]
4000e4f0:	e5940010 	ldr	r0, [r4, #16]
4000e4f4:	e2800001 	add	r0, r0, #1
4000e4f8:	e5840010 	str	r0, [r4, #16]
4000e4fc:	e1a09005 	mov	r9, r5
4000e500:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e504:	e594b008 	ldr	fp, [r4, #8]
4000e508:	e1a00000 	nop			; (mov r0, r0)
4000e50c:	e5990000 	ldr	r0, [r9]
4000e510:	e58a0000 	str	r0, [sl]
4000e514:	e24bb001 	sub	fp, fp, #1
4000e518:	e35b0000 	cmp	fp, #0
4000e51c:	1a000000 	bne	4000e524 <_tx_queue_send+0x154>
4000e520:	ea000002 	b	4000e530 <_tx_queue_send+0x160>
4000e524:	e28aa004 	add	sl, sl, #4
4000e528:	e2899004 	add	r9, r9, #4
4000e52c:	eafffff6 	b	4000e50c <_tx_queue_send+0x13c>
4000e530:	e1a00000 	nop			; (mov r0, r0)
4000e534:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e538:	e5941008 	ldr	r1, [r4, #8]
4000e53c:	e0800101 	add	r0, r0, r1, lsl #2
4000e540:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e544:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e548:	e594101c 	ldr	r1, [r4, #28]
4000e54c:	e1500001 	cmp	r0, r1
4000e550:	3a000001 	bcc	4000e55c <_tx_queue_send+0x18c>
4000e554:	e5940018 	ldr	r0, [r4, #24]
4000e558:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e55c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e560:	e58d0000 	str	r0, [sp]
4000e564:	e121f007 	msr	CPSR_c, r7
4000e568:	e59d0000 	ldr	r0, [sp]
4000e56c:	e3500000 	cmp	r0, #0
4000e570:	0a000002 	beq	4000e580 <_tx_queue_send+0x1b0>
4000e574:	e1a00004 	mov	r0, r4
4000e578:	e59d1000 	ldr	r1, [sp]
4000e57c:	e12fff31 	blx	r1
4000e580:	e3a00000 	mov	r0, #0
4000e584:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e588:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e58c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e590:	e1500008 	cmp	r0, r8
4000e594:	1a000002 	bne	4000e5a4 <_tx_queue_send+0x1d4>
4000e598:	e3a00000 	mov	r0, #0
4000e59c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e5a0:	ea000007 	b	4000e5c4 <_tx_queue_send+0x1f4>
4000e5a4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e5a8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e5ac:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e5b0:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e5b4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e5b8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e5bc:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e5c0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e5c4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e5c8:	e2400001 	sub	r0, r0, #1
4000e5cc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e5d0:	e3a00000 	mov	r0, #0
4000e5d4:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e5d8:	e59f0194 	ldr	r0, [pc, #404]	; 4000e774 <_tx_queue_send+0x3a4>
4000e5dc:	e5900000 	ldr	r0, [r0]
4000e5e0:	e2800001 	add	r0, r0, #1
4000e5e4:	e59f1188 	ldr	r1, [pc, #392]	; 4000e774 <_tx_queue_send+0x3a4>
4000e5e8:	e5810000 	str	r0, [r1]
4000e5ec:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e5f0:	e58d0000 	str	r0, [sp]
4000e5f4:	e121f007 	msr	CPSR_c, r7
4000e5f8:	e1a09005 	mov	r9, r5
4000e5fc:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e600:	e594b008 	ldr	fp, [r4, #8]
4000e604:	e1a00000 	nop			; (mov r0, r0)
4000e608:	e5990000 	ldr	r0, [r9]
4000e60c:	e58a0000 	str	r0, [sl]
4000e610:	e24bb001 	sub	fp, fp, #1
4000e614:	e35b0000 	cmp	fp, #0
4000e618:	1a000000 	bne	4000e620 <_tx_queue_send+0x250>
4000e61c:	ea000002 	b	4000e62c <_tx_queue_send+0x25c>
4000e620:	e28aa004 	add	sl, sl, #4
4000e624:	e2899004 	add	r9, r9, #4
4000e628:	eafffff6 	b	4000e608 <_tx_queue_send+0x238>
4000e62c:	e1a00000 	nop			; (mov r0, r0)
4000e630:	e3a00000 	mov	r0, #0
4000e634:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e638:	e1a00008 	mov	r0, r8
4000e63c:	eb0003ba 	bl	4000f52c <_tx_thread_system_resume>
4000e640:	e59d0000 	ldr	r0, [sp]
4000e644:	e3500000 	cmp	r0, #0
4000e648:	0a000002 	beq	4000e658 <_tx_queue_send+0x288>
4000e64c:	e1a00004 	mov	r0, r4
4000e650:	e59d1000 	ldr	r1, [sp]
4000e654:	e12fff31 	blx	r1
4000e658:	e3a00000 	mov	r0, #0
4000e65c:	eaffffc8 	b	4000e584 <_tx_queue_send+0x1b4>
4000e660:	e3560000 	cmp	r6, #0
4000e664:	0a000037 	beq	4000e748 <_tx_queue_send+0x378>
4000e668:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e760 <_tx_queue_send+0x390>
4000e66c:	e5908000 	ldr	r8, [r0]
4000e670:	e59f0100 	ldr	r0, [pc, #256]	; 4000e778 <_tx_queue_send+0x3a8>
4000e674:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e678:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e67c:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e680:	e3a00000 	mov	r0, #0
4000e684:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e688:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e68c:	e3500000 	cmp	r0, #0
4000e690:	0a00000a 	beq	4000e6c0 <_tx_queue_send+0x2f0>
4000e694:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e698:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e69c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e6a0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e6a4:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e6a8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e6ac:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e6b0:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e6b4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e6b8:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e6bc:	ea000002 	b	4000e6cc <_tx_queue_send+0x2fc>
4000e6c0:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e6c4:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e6c8:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e6cc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e6d0:	e2800001 	add	r0, r0, #1
4000e6d4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e6d8:	e3a00005 	mov	r0, #5
4000e6dc:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e6e0:	e3a00001 	mov	r0, #1
4000e6e4:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e6e8:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e6ec:	e59f0080 	ldr	r0, [pc, #128]	; 4000e774 <_tx_queue_send+0x3a4>
4000e6f0:	e5900000 	ldr	r0, [r0]
4000e6f4:	e2800001 	add	r0, r0, #1
4000e6f8:	e59f1074 	ldr	r1, [pc, #116]	; 4000e774 <_tx_queue_send+0x3a4>
4000e6fc:	e5810000 	str	r0, [r1]
4000e700:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e704:	e58d0000 	str	r0, [sp]
4000e708:	e121f007 	msr	CPSR_c, r7
4000e70c:	e1a00008 	mov	r0, r8
4000e710:	ebffe9de 	bl	40008e90 <_tx_thread_system_suspend>
4000e714:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e718:	e58d0000 	str	r0, [sp]
4000e71c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e720:	e3500000 	cmp	r0, #0
4000e724:	1a000005 	bne	4000e740 <_tx_queue_send+0x370>
4000e728:	e59d0000 	ldr	r0, [sp]
4000e72c:	e3500000 	cmp	r0, #0
4000e730:	0a000002 	beq	4000e740 <_tx_queue_send+0x370>
4000e734:	e1a00004 	mov	r0, r4
4000e738:	e59d1000 	ldr	r1, [sp]
4000e73c:	e12fff31 	blx	r1
4000e740:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e744:	eaffff8e 	b	4000e584 <_tx_queue_send+0x1b4>
4000e748:	e121f007 	msr	CPSR_c, r7
4000e74c:	e3a0000b 	mov	r0, #11
4000e750:	eaffff8b 	b	4000e584 <_tx_queue_send+0x1b4>
4000e754:	40030ec0 	.word	0x40030ec0
4000e758:	40030ec4 	.word	0x40030ec4
4000e75c:	40030e4c 	.word	0x40030e4c
4000e760:	40030e54 	.word	0x40030e54
4000e764:	f0f0f0f0 	.word	0xf0f0f0f0
4000e768:	40030ebc 	.word	0x40030ebc
4000e76c:	40030eb8 	.word	0x40030eb8
4000e770:	40030eac 	.word	0x40030eac
4000e774:	40030e70 	.word	0x40030e70
4000e778:	40010950 	.word	0x40010950

4000e77c <_tx_thread_create>:
4000e77c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e780:	e24dd014 	sub	sp, sp, #20
4000e784:	e1a04000 	mov	r4, r0
4000e788:	e1a05001 	mov	r5, r1
4000e78c:	e28da048 	add	sl, sp, #72	; 0x48
4000e790:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e794:	e3a00000 	mov	r0, #0
4000e798:	e58d0004 	str	r0, [sp, #4]
4000e79c:	e3a020ef 	mov	r2, #239	; 0xef
4000e7a0:	e1a01007 	mov	r1, r7
4000e7a4:	e1a00006 	mov	r0, r6
4000e7a8:	eb001481 	bl	400139b4 <__aeabi_memset>
4000e7ac:	e1a00127 	lsr	r0, r7, #2
4000e7b0:	e3a01004 	mov	r1, #4
4000e7b4:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e7b8:	e3a010a8 	mov	r1, #168	; 0xa8
4000e7bc:	e1a00004 	mov	r0, r4
4000e7c0:	eb001453 	bl	40013914 <__aeabi_memclr4>
4000e7c4:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e7c8:	e59d001c 	ldr	r0, [sp, #28]
4000e7cc:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e7d0:	e59d0020 	ldr	r0, [sp, #32]
4000e7d4:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e7d8:	e584600c 	str	r6, [r4, #12]
4000e7dc:	e5847014 	str	r7, [r4, #20]
4000e7e0:	e2470001 	sub	r0, r7, #1
4000e7e4:	e0800006 	add	r0, r0, r6
4000e7e8:	e5840010 	str	r0, [r4, #16]
4000e7ec:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e7f0:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e7f4:	e584a018 	str	sl, [r4, #24]
4000e7f8:	e584a01c 	str	sl, [r4, #28]
4000e7fc:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e800:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e804:	e3a00003 	mov	r0, #3
4000e808:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e80c:	e59f0268 	ldr	r0, [pc, #616]	; 4000ea7c <_tx_thread_create+0x300>
4000e810:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e814:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e818:	e59f1260 	ldr	r1, [pc, #608]	; 4000ea80 <_tx_thread_create+0x304>
4000e81c:	e1a00004 	mov	r0, r4
4000e820:	eb000727 	bl	400104c4 <_tx_thread_stack_build>
4000e824:	e5940008 	ldr	r0, [r4, #8]
4000e828:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e82c:	e10f0000 	mrs	r0, CPSR
4000e830:	e58d0010 	str	r0, [sp, #16]
4000e834:	e59d0010 	ldr	r0, [sp, #16]
4000e838:	e380b080 	orr	fp, r0, #128	; 0x80
4000e83c:	e121f00b 	msr	CPSR_c, fp
4000e840:	e59f023c 	ldr	r0, [pc, #572]	; 4000ea84 <_tx_thread_create+0x308>
4000e844:	e5840000 	str	r0, [r4]
4000e848:	e59f0238 	ldr	r0, [pc, #568]	; 4000ea88 <_tx_thread_create+0x30c>
4000e84c:	e5900000 	ldr	r0, [r0]
4000e850:	e3500000 	cmp	r0, #0
4000e854:	0a00000e 	beq	4000e894 <_tx_thread_create+0x118>
4000e858:	e59f0228 	ldr	r0, [pc, #552]	; 4000ea88 <_tx_thread_create+0x30c>
4000e85c:	e5900000 	ldr	r0, [r0]
4000e860:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e864:	e58d000c 	str	r0, [sp, #12]
4000e868:	e59f0218 	ldr	r0, [pc, #536]	; 4000ea88 <_tx_thread_create+0x30c>
4000e86c:	e5900000 	ldr	r0, [r0]
4000e870:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e874:	e59d000c 	ldr	r0, [sp, #12]
4000e878:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e87c:	e59d000c 	ldr	r0, [sp, #12]
4000e880:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e884:	e59f01fc 	ldr	r0, [pc, #508]	; 4000ea88 <_tx_thread_create+0x30c>
4000e888:	e5900000 	ldr	r0, [r0]
4000e88c:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e890:	ea000003 	b	4000e8a4 <_tx_thread_create+0x128>
4000e894:	e59f01ec 	ldr	r0, [pc, #492]	; 4000ea88 <_tx_thread_create+0x30c>
4000e898:	e5804000 	str	r4, [r0]
4000e89c:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e8a0:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e8a4:	e59f01e0 	ldr	r0, [pc, #480]	; 4000ea8c <_tx_thread_create+0x310>
4000e8a8:	e5900000 	ldr	r0, [r0]
4000e8ac:	e2800001 	add	r0, r0, #1
4000e8b0:	e59f11d4 	ldr	r1, [pc, #468]	; 4000ea8c <_tx_thread_create+0x310>
4000e8b4:	e5810000 	str	r0, [r1]
4000e8b8:	e59f01d0 	ldr	r0, [pc, #464]	; 4000ea90 <_tx_thread_create+0x314>
4000e8bc:	e5900000 	ldr	r0, [r0]
4000e8c0:	e2800001 	add	r0, r0, #1
4000e8c4:	e59f11c4 	ldr	r1, [pc, #452]	; 4000ea90 <_tx_thread_create+0x314>
4000e8c8:	e5810000 	str	r0, [r1]
4000e8cc:	e1a03006 	mov	r3, r6
4000e8d0:	e1a02005 	mov	r2, r5
4000e8d4:	e1a01004 	mov	r1, r4
4000e8d8:	e3a00001 	mov	r0, #1
4000e8dc:	e58d7000 	str	r7, [sp]
4000e8e0:	eb000667 	bl	40010284 <_tx_trace_object_register>
4000e8e4:	e59f11a8 	ldr	r1, [pc, #424]	; 4000ea94 <_tx_thread_create+0x318>
4000e8e8:	e5910000 	ldr	r0, [r1]
4000e8ec:	e3500000 	cmp	r0, #0
4000e8f0:	0a000030 	beq	4000e9b8 <_tx_thread_create+0x23c>
4000e8f4:	e59f119c 	ldr	r1, [pc, #412]	; 4000ea98 <_tx_thread_create+0x31c>
4000e8f8:	e5911000 	ldr	r1, [r1]
4000e8fc:	e2811001 	add	r1, r1, #1
4000e900:	e59f2190 	ldr	r2, [pc, #400]	; 4000ea98 <_tx_thread_create+0x31c>
4000e904:	e5821000 	str	r1, [r2]
4000e908:	e580100c 	str	r1, [r0, #12]
4000e90c:	e59f1188 	ldr	r1, [pc, #392]	; 4000ea9c <_tx_thread_create+0x320>
4000e910:	e5911000 	ldr	r1, [r1]
4000e914:	e3510000 	cmp	r1, #0
4000e918:	1a000006 	bne	4000e938 <_tx_thread_create+0x1bc>
4000e91c:	e59f117c 	ldr	r1, [pc, #380]	; 4000eaa0 <_tx_thread_create+0x324>
4000e920:	e5911000 	ldr	r1, [r1]
4000e924:	e5801000 	str	r1, [r0]
4000e928:	e5901000 	ldr	r1, [r0]
4000e92c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e930:	e5801004 	str	r1, [r0, #4]
4000e934:	ea00000d 	b	4000e970 <_tx_thread_create+0x1f4>
4000e938:	e59f115c 	ldr	r1, [pc, #348]	; 4000ea9c <_tx_thread_create+0x320>
4000e93c:	e5911000 	ldr	r1, [r1]
4000e940:	e59f215c 	ldr	r2, [pc, #348]	; 4000eaa4 <_tx_thread_create+0x328>
4000e944:	e1510002 	cmp	r1, r2
4000e948:	2a000004 	bcs	4000e960 <_tx_thread_create+0x1e4>
4000e94c:	e3e01000 	mvn	r1, #0
4000e950:	e5801000 	str	r1, [r0]
4000e954:	e3a01000 	mov	r1, #0
4000e958:	e5801004 	str	r1, [r0, #4]
4000e95c:	ea000003 	b	4000e970 <_tx_thread_create+0x1f4>
4000e960:	e59f113c 	ldr	r1, [pc, #316]	; 4000eaa4 <_tx_thread_create+0x328>
4000e964:	e5801000 	str	r1, [r0]
4000e968:	e3a01000 	mov	r1, #0
4000e96c:	e5801004 	str	r1, [r0, #4]
4000e970:	e3a01064 	mov	r1, #100	; 0x64
4000e974:	e5801008 	str	r1, [r0, #8]
4000e978:	e5804010 	str	r4, [r0, #16]
4000e97c:	e5808014 	str	r8, [r0, #20]
4000e980:	e5806018 	str	r6, [r0, #24]
4000e984:	e580701c 	str	r7, [r0, #28]
4000e988:	e2800020 	add	r0, r0, #32
4000e98c:	e59f1114 	ldr	r1, [pc, #276]	; 4000eaa8 <_tx_thread_create+0x32c>
4000e990:	e5911000 	ldr	r1, [r1]
4000e994:	e1500001 	cmp	r0, r1
4000e998:	3a000001 	bcc	4000e9a4 <_tx_thread_create+0x228>
4000e99c:	e59f1108 	ldr	r1, [pc, #264]	; 4000eaac <_tx_thread_create+0x330>
4000e9a0:	e5910000 	ldr	r0, [r1]
4000e9a4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ea94 <_tx_thread_create+0x318>
4000e9a8:	e5810000 	str	r0, [r1]
4000e9ac:	e59f10fc 	ldr	r1, [pc, #252]	; 4000eab0 <_tx_thread_create+0x334>
4000e9b0:	e5911000 	ldr	r1, [r1]
4000e9b4:	e5810020 	str	r0, [r1, #32]
4000e9b8:	e59d0010 	ldr	r0, [sp, #16]
4000e9bc:	e121f000 	msr	CPSR_c, r0
4000e9c0:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e9c4:	e3500000 	cmp	r0, #0
4000e9c8:	0a00001c 	beq	4000ea40 <_tx_thread_create+0x2c4>
4000e9cc:	e59f00c8 	ldr	r0, [pc, #200]	; 4000ea9c <_tx_thread_create+0x320>
4000e9d0:	e5900000 	ldr	r0, [r0]
4000e9d4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000eaa4 <_tx_thread_create+0x328>
4000e9d8:	e1500001 	cmp	r0, r1
4000e9dc:	3a00000c 	bcc	4000ea14 <_tx_thread_create+0x298>
4000e9e0:	e59f00cc 	ldr	r0, [pc, #204]	; 4000eab4 <_tx_thread_create+0x338>
4000e9e4:	e5900000 	ldr	r0, [r0]
4000e9e8:	e58d0008 	str	r0, [sp, #8]
4000e9ec:	e59d0008 	ldr	r0, [sp, #8]
4000e9f0:	e3500000 	cmp	r0, #0
4000e9f4:	0a000008 	beq	4000ea1c <_tx_thread_create+0x2a0>
4000e9f8:	e59d0008 	ldr	r0, [sp, #8]
4000e9fc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000ea00:	e58d0004 	str	r0, [sp, #4]
4000ea04:	e59d0008 	ldr	r0, [sp, #8]
4000ea08:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000ea0c:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000ea10:	ea000001 	b	4000ea1c <_tx_thread_create+0x2a0>
4000ea14:	e3a00000 	mov	r0, #0
4000ea18:	e58d0008 	str	r0, [sp, #8]
4000ea1c:	e1a00004 	mov	r0, r4
4000ea20:	eb0002c1 	bl	4000f52c <_tx_thread_system_resume>
4000ea24:	e59d0008 	ldr	r0, [sp, #8]
4000ea28:	e3500000 	cmp	r0, #0
4000ea2c:	0a00000f 	beq	4000ea70 <_tx_thread_create+0x2f4>
4000ea30:	e59d0008 	ldr	r0, [sp, #8]
4000ea34:	e59d1004 	ldr	r1, [sp, #4]
4000ea38:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000ea3c:	ea00000b 	b	4000ea70 <_tx_thread_create+0x2f4>
4000ea40:	e10f0000 	mrs	r0, CPSR
4000ea44:	e58d0010 	str	r0, [sp, #16]
4000ea48:	e59d0010 	ldr	r0, [sp, #16]
4000ea4c:	e380b080 	orr	fp, r0, #128	; 0x80
4000ea50:	e121f00b 	msr	CPSR_c, fp
4000ea54:	e59f0034 	ldr	r0, [pc, #52]	; 4000ea90 <_tx_thread_create+0x314>
4000ea58:	e5900000 	ldr	r0, [r0]
4000ea5c:	e2400001 	sub	r0, r0, #1
4000ea60:	e59f1028 	ldr	r1, [pc, #40]	; 4000ea90 <_tx_thread_create+0x314>
4000ea64:	e5810000 	str	r0, [r1]
4000ea68:	e59d0010 	ldr	r0, [sp, #16]
4000ea6c:	e121f000 	msr	CPSR_c, r0
4000ea70:	e3a00000 	mov	r0, #0
4000ea74:	e28dd024 	add	sp, sp, #36	; 0x24
4000ea78:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ea7c:	4000fa5c 	.word	0x4000fa5c
4000ea80:	4000f2c0 	.word	0x4000f2c0
4000ea84:	54485244 	.word	0x54485244
4000ea88:	40030e5c 	.word	0x40030e5c
4000ea8c:	40030e60 	.word	0x40030e60
4000ea90:	40030e70 	.word	0x40030e70
4000ea94:	40030ec0 	.word	0x40030ec0
4000ea98:	40030ec4 	.word	0x40030ec4
4000ea9c:	40030e4c 	.word	0x40030e4c
4000eaa0:	40030e54 	.word	0x40030e54
4000eaa4:	f0f0f0f0 	.word	0xf0f0f0f0
4000eaa8:	40030ebc 	.word	0x40030ebc
4000eaac:	40030eb8 	.word	0x40030eb8
4000eab0:	40030eac 	.word	0x40030eac
4000eab4:	40030e58 	.word	0x40030e58

4000eab8 <_tx_thread_info_get>:
4000eab8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000eabc:	e1a0c000 	mov	ip, r0
4000eac0:	e28d7028 	add	r7, sp, #40	; 0x28
4000eac4:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000eac8:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000eacc:	e10f8000 	mrs	r8, CPSR
4000ead0:	e3889080 	orr	r9, r8, #128	; 0x80
4000ead4:	e121f009 	msr	CPSR_c, r9
4000ead8:	e59fa160 	ldr	sl, [pc, #352]	; 4000ec40 <_tx_thread_info_get+0x188>
4000eadc:	e59a0000 	ldr	r0, [sl]
4000eae0:	e3500000 	cmp	r0, #0
4000eae4:	0a000032 	beq	4000ebb4 <_tx_thread_info_get+0xfc>
4000eae8:	e59fa154 	ldr	sl, [pc, #340]	; 4000ec44 <_tx_thread_info_get+0x18c>
4000eaec:	e59aa000 	ldr	sl, [sl]
4000eaf0:	e28aa001 	add	sl, sl, #1
4000eaf4:	e59fb148 	ldr	fp, [pc, #328]	; 4000ec44 <_tx_thread_info_get+0x18c>
4000eaf8:	e58ba000 	str	sl, [fp]
4000eafc:	e580a00c 	str	sl, [r0, #12]
4000eb00:	e59fa140 	ldr	sl, [pc, #320]	; 4000ec48 <_tx_thread_info_get+0x190>
4000eb04:	e59aa000 	ldr	sl, [sl]
4000eb08:	e35a0000 	cmp	sl, #0
4000eb0c:	1a000006 	bne	4000eb2c <_tx_thread_info_get+0x74>
4000eb10:	e59fa134 	ldr	sl, [pc, #308]	; 4000ec4c <_tx_thread_info_get+0x194>
4000eb14:	e59aa000 	ldr	sl, [sl]
4000eb18:	e580a000 	str	sl, [r0]
4000eb1c:	e590a000 	ldr	sl, [r0]
4000eb20:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000eb24:	e580a004 	str	sl, [r0, #4]
4000eb28:	ea00000d 	b	4000eb64 <_tx_thread_info_get+0xac>
4000eb2c:	e59fa114 	ldr	sl, [pc, #276]	; 4000ec48 <_tx_thread_info_get+0x190>
4000eb30:	e59aa000 	ldr	sl, [sl]
4000eb34:	e59fb114 	ldr	fp, [pc, #276]	; 4000ec50 <_tx_thread_info_get+0x198>
4000eb38:	e15a000b 	cmp	sl, fp
4000eb3c:	2a000004 	bcs	4000eb54 <_tx_thread_info_get+0x9c>
4000eb40:	e3e0a000 	mvn	sl, #0
4000eb44:	e580a000 	str	sl, [r0]
4000eb48:	e3a0a000 	mov	sl, #0
4000eb4c:	e580a004 	str	sl, [r0, #4]
4000eb50:	ea000003 	b	4000eb64 <_tx_thread_info_get+0xac>
4000eb54:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000ec50 <_tx_thread_info_get+0x198>
4000eb58:	e580a000 	str	sl, [r0]
4000eb5c:	e3a0a000 	mov	sl, #0
4000eb60:	e580a004 	str	sl, [r0, #4]
4000eb64:	e3a0a068 	mov	sl, #104	; 0x68
4000eb68:	e580a008 	str	sl, [r0, #8]
4000eb6c:	e580c010 	str	ip, [r0, #16]
4000eb70:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000eb74:	e580a014 	str	sl, [r0, #20]
4000eb78:	e3a0a000 	mov	sl, #0
4000eb7c:	e580a018 	str	sl, [r0, #24]
4000eb80:	e580a01c 	str	sl, [r0, #28]
4000eb84:	e2800020 	add	r0, r0, #32
4000eb88:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000ec54 <_tx_thread_info_get+0x19c>
4000eb8c:	e59aa000 	ldr	sl, [sl]
4000eb90:	e150000a 	cmp	r0, sl
4000eb94:	3a000001 	bcc	4000eba0 <_tx_thread_info_get+0xe8>
4000eb98:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000ec58 <_tx_thread_info_get+0x1a0>
4000eb9c:	e59a0000 	ldr	r0, [sl]
4000eba0:	e59fa098 	ldr	sl, [pc, #152]	; 4000ec40 <_tx_thread_info_get+0x188>
4000eba4:	e58a0000 	str	r0, [sl]
4000eba8:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000ec5c <_tx_thread_info_get+0x1a4>
4000ebac:	e59aa000 	ldr	sl, [sl]
4000ebb0:	e58a0020 	str	r0, [sl, #32]
4000ebb4:	e3510000 	cmp	r1, #0
4000ebb8:	0a000001 	beq	4000ebc4 <_tx_thread_info_get+0x10c>
4000ebbc:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000ebc0:	e5810000 	str	r0, [r1]
4000ebc4:	e3520000 	cmp	r2, #0
4000ebc8:	0a000001 	beq	4000ebd4 <_tx_thread_info_get+0x11c>
4000ebcc:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000ebd0:	e5820000 	str	r0, [r2]
4000ebd4:	e3530000 	cmp	r3, #0
4000ebd8:	0a000001 	beq	4000ebe4 <_tx_thread_info_get+0x12c>
4000ebdc:	e59c0004 	ldr	r0, [ip, #4]
4000ebe0:	e5830000 	str	r0, [r3]
4000ebe4:	e35e0000 	cmp	lr, #0
4000ebe8:	0a000001 	beq	4000ebf4 <_tx_thread_info_get+0x13c>
4000ebec:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000ebf0:	e58e0000 	str	r0, [lr]
4000ebf4:	e3540000 	cmp	r4, #0
4000ebf8:	0a000001 	beq	4000ec04 <_tx_thread_info_get+0x14c>
4000ebfc:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000ec00:	e5840000 	str	r0, [r4]
4000ec04:	e3550000 	cmp	r5, #0
4000ec08:	0a000001 	beq	4000ec14 <_tx_thread_info_get+0x15c>
4000ec0c:	e59c0018 	ldr	r0, [ip, #24]
4000ec10:	e5850000 	str	r0, [r5]
4000ec14:	e3560000 	cmp	r6, #0
4000ec18:	0a000001 	beq	4000ec24 <_tx_thread_info_get+0x16c>
4000ec1c:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000ec20:	e5860000 	str	r0, [r6]
4000ec24:	e3570000 	cmp	r7, #0
4000ec28:	0a000001 	beq	4000ec34 <_tx_thread_info_get+0x17c>
4000ec2c:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000ec30:	e5870000 	str	r0, [r7]
4000ec34:	e121f008 	msr	CPSR_c, r8
4000ec38:	e3a00000 	mov	r0, #0
4000ec3c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ec40:	40030ec0 	.word	0x40030ec0
4000ec44:	40030ec4 	.word	0x40030ec4
4000ec48:	40030e4c 	.word	0x40030e4c
4000ec4c:	40030e54 	.word	0x40030e54
4000ec50:	f0f0f0f0 	.word	0xf0f0f0f0
4000ec54:	40030ebc 	.word	0x40030ebc
4000ec58:	40030eb8 	.word	0x40030eb8
4000ec5c:	40030eac 	.word	0x40030eac

4000ec60 <_tx_thread_priority_change>:
4000ec60:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ec64:	e1a04000 	mov	r4, r0
4000ec68:	e1a05001 	mov	r5, r1
4000ec6c:	e1a06002 	mov	r6, r2
4000ec70:	e10f7000 	mrs	r7, CPSR
4000ec74:	e3878080 	orr	r8, r7, #128	; 0x80
4000ec78:	e121f008 	msr	CPSR_c, r8
4000ec7c:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000ec80:	e5860000 	str	r0, [r6]
4000ec84:	e59f1150 	ldr	r1, [pc, #336]	; 4000eddc <_tx_thread_priority_change+0x17c>
4000ec88:	e5910000 	ldr	r0, [r1]
4000ec8c:	e3500000 	cmp	r0, #0
4000ec90:	0a000032 	beq	4000ed60 <_tx_thread_priority_change+0x100>
4000ec94:	e59f1144 	ldr	r1, [pc, #324]	; 4000ede0 <_tx_thread_priority_change+0x180>
4000ec98:	e5911000 	ldr	r1, [r1]
4000ec9c:	e2811001 	add	r1, r1, #1
4000eca0:	e59f2138 	ldr	r2, [pc, #312]	; 4000ede0 <_tx_thread_priority_change+0x180>
4000eca4:	e5821000 	str	r1, [r2]
4000eca8:	e580100c 	str	r1, [r0, #12]
4000ecac:	e59f1130 	ldr	r1, [pc, #304]	; 4000ede4 <_tx_thread_priority_change+0x184>
4000ecb0:	e5911000 	ldr	r1, [r1]
4000ecb4:	e3510000 	cmp	r1, #0
4000ecb8:	1a000006 	bne	4000ecd8 <_tx_thread_priority_change+0x78>
4000ecbc:	e59f1124 	ldr	r1, [pc, #292]	; 4000ede8 <_tx_thread_priority_change+0x188>
4000ecc0:	e5911000 	ldr	r1, [r1]
4000ecc4:	e5801000 	str	r1, [r0]
4000ecc8:	e5901000 	ldr	r1, [r0]
4000eccc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ecd0:	e5801004 	str	r1, [r0, #4]
4000ecd4:	ea00000d 	b	4000ed10 <_tx_thread_priority_change+0xb0>
4000ecd8:	e59f1104 	ldr	r1, [pc, #260]	; 4000ede4 <_tx_thread_priority_change+0x184>
4000ecdc:	e5911000 	ldr	r1, [r1]
4000ece0:	e59f2104 	ldr	r2, [pc, #260]	; 4000edec <_tx_thread_priority_change+0x18c>
4000ece4:	e1510002 	cmp	r1, r2
4000ece8:	2a000004 	bcs	4000ed00 <_tx_thread_priority_change+0xa0>
4000ecec:	e3e01000 	mvn	r1, #0
4000ecf0:	e5801000 	str	r1, [r0]
4000ecf4:	e3a01000 	mov	r1, #0
4000ecf8:	e5801004 	str	r1, [r0, #4]
4000ecfc:	ea000003 	b	4000ed10 <_tx_thread_priority_change+0xb0>
4000ed00:	e59f10e4 	ldr	r1, [pc, #228]	; 4000edec <_tx_thread_priority_change+0x18c>
4000ed04:	e5801000 	str	r1, [r0]
4000ed08:	e3a01000 	mov	r1, #0
4000ed0c:	e5801004 	str	r1, [r0, #4]
4000ed10:	e3a0106c 	mov	r1, #108	; 0x6c
4000ed14:	e5801008 	str	r1, [r0, #8]
4000ed18:	e5804010 	str	r4, [r0, #16]
4000ed1c:	e5805014 	str	r5, [r0, #20]
4000ed20:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ed24:	e5801018 	str	r1, [r0, #24]
4000ed28:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ed2c:	e580101c 	str	r1, [r0, #28]
4000ed30:	e2800020 	add	r0, r0, #32
4000ed34:	e59f10b4 	ldr	r1, [pc, #180]	; 4000edf0 <_tx_thread_priority_change+0x190>
4000ed38:	e5911000 	ldr	r1, [r1]
4000ed3c:	e1500001 	cmp	r0, r1
4000ed40:	3a000001 	bcc	4000ed4c <_tx_thread_priority_change+0xec>
4000ed44:	e59f10a8 	ldr	r1, [pc, #168]	; 4000edf4 <_tx_thread_priority_change+0x194>
4000ed48:	e5910000 	ldr	r0, [r1]
4000ed4c:	e59f1088 	ldr	r1, [pc, #136]	; 4000eddc <_tx_thread_priority_change+0x17c>
4000ed50:	e5810000 	str	r0, [r1]
4000ed54:	e59f109c 	ldr	r1, [pc, #156]	; 4000edf8 <_tx_thread_priority_change+0x198>
4000ed58:	e5911000 	ldr	r1, [r1]
4000ed5c:	e5810020 	str	r0, [r1, #32]
4000ed60:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ed64:	e3500000 	cmp	r0, #0
4000ed68:	0a000005 	beq	4000ed84 <_tx_thread_priority_change+0x124>
4000ed6c:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ed70:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ed74:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ed78:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ed7c:	e121f007 	msr	CPSR_c, r7
4000ed80:	ea000013 	b	4000edd4 <_tx_thread_priority_change+0x174>
4000ed84:	e59f0070 	ldr	r0, [pc, #112]	; 4000edfc <_tx_thread_priority_change+0x19c>
4000ed88:	e5900000 	ldr	r0, [r0]
4000ed8c:	e2800002 	add	r0, r0, #2
4000ed90:	e59f1064 	ldr	r1, [pc, #100]	; 4000edfc <_tx_thread_priority_change+0x19c>
4000ed94:	e5810000 	str	r0, [r1]
4000ed98:	e3a00003 	mov	r0, #3
4000ed9c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000eda0:	e3a00001 	mov	r0, #1
4000eda4:	e5840038 	str	r0, [r4, #56]	; 0x38
4000eda8:	e3a00000 	mov	r0, #0
4000edac:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000edb0:	e121f007 	msr	CPSR_c, r7
4000edb4:	e1a00004 	mov	r0, r4
4000edb8:	ebffe834 	bl	40008e90 <_tx_thread_system_suspend>
4000edbc:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000edc0:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000edc4:	e5845094 	str	r5, [r4, #148]	; 0x94
4000edc8:	e5845098 	str	r5, [r4, #152]	; 0x98
4000edcc:	e1a00004 	mov	r0, r4
4000edd0:	eb0001d5 	bl	4000f52c <_tx_thread_system_resume>
4000edd4:	e3a00000 	mov	r0, #0
4000edd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000eddc:	40030ec0 	.word	0x40030ec0
4000ede0:	40030ec4 	.word	0x40030ec4
4000ede4:	40030e4c 	.word	0x40030e4c
4000ede8:	40030e54 	.word	0x40030e54
4000edec:	f0f0f0f0 	.word	0xf0f0f0f0
4000edf0:	40030ebc 	.word	0x40030ebc
4000edf4:	40030eb8 	.word	0x40030eb8
4000edf8:	40030eac 	.word	0x40030eac
4000edfc:	40030e70 	.word	0x40030e70

4000ee00 <_tx_thread_relinquish>:
4000ee00:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ee04:	e59f02b0 	ldr	r0, [pc, #688]	; 4000f0bc <_tx_thread_relinquish+0x2bc>
4000ee08:	e5900000 	ldr	r0, [r0]
4000ee0c:	e58d0000 	str	r0, [sp]
4000ee10:	e59d0000 	ldr	r0, [sp]
4000ee14:	e5900008 	ldr	r0, [r0, #8]
4000ee18:	e59d1000 	ldr	r1, [sp]
4000ee1c:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ee20:	e1500001 	cmp	r0, r1
4000ee24:	2a000003 	bcs	4000ee38 <_tx_thread_relinquish+0x38>
4000ee28:	e59d0000 	ldr	r0, [sp]
4000ee2c:	e5900008 	ldr	r0, [r0, #8]
4000ee30:	e59d1000 	ldr	r1, [sp]
4000ee34:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ee38:	e59d0000 	ldr	r0, [sp]
4000ee3c:	e590000c 	ldr	r0, [r0, #12]
4000ee40:	e5900000 	ldr	r0, [r0]
4000ee44:	e59f1274 	ldr	r1, [pc, #628]	; 4000f0c0 <_tx_thread_relinquish+0x2c0>
4000ee48:	e1500001 	cmp	r0, r1
4000ee4c:	1a00000a 	bne	4000ee7c <_tx_thread_relinquish+0x7c>
4000ee50:	e59d0000 	ldr	r0, [sp]
4000ee54:	e5900010 	ldr	r0, [r0, #16]
4000ee58:	e5900001 	ldr	r0, [r0, #1]
4000ee5c:	e1500001 	cmp	r0, r1
4000ee60:	1a000005 	bne	4000ee7c <_tx_thread_relinquish+0x7c>
4000ee64:	e59d0000 	ldr	r0, [sp]
4000ee68:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee6c:	e59d1000 	ldr	r1, [sp]
4000ee70:	e591100c 	ldr	r1, [r1, #12]
4000ee74:	e1500001 	cmp	r0, r1
4000ee78:	2a000001 	bcs	4000ee84 <_tx_thread_relinquish+0x84>
4000ee7c:	e59d0000 	ldr	r0, [sp]
4000ee80:	eb00016a 	bl	4000f430 <_tx_thread_stack_error_handler>
4000ee84:	e59d0000 	ldr	r0, [sp]
4000ee88:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee8c:	e5100004 	ldr	r0, [r0, #-4]
4000ee90:	e59f1228 	ldr	r1, [pc, #552]	; 4000f0c0 <_tx_thread_relinquish+0x2c0>
4000ee94:	e1500001 	cmp	r0, r1
4000ee98:	0a000001 	beq	4000eea4 <_tx_thread_relinquish+0xa4>
4000ee9c:	e59d0000 	ldr	r0, [sp]
4000eea0:	eb00012d 	bl	4000f35c <_tx_thread_stack_analyze>
4000eea4:	e10f4000 	mrs	r4, CPSR
4000eea8:	e3845080 	orr	r5, r4, #128	; 0x80
4000eeac:	e121f005 	msr	CPSR_c, r5
4000eeb0:	e59f120c 	ldr	r1, [pc, #524]	; 4000f0c4 <_tx_thread_relinquish+0x2c4>
4000eeb4:	e5910000 	ldr	r0, [r1]
4000eeb8:	e3500000 	cmp	r0, #0
4000eebc:	0a000031 	beq	4000ef88 <_tx_thread_relinquish+0x188>
4000eec0:	e59f1200 	ldr	r1, [pc, #512]	; 4000f0c8 <_tx_thread_relinquish+0x2c8>
4000eec4:	e5911000 	ldr	r1, [r1]
4000eec8:	e2811001 	add	r1, r1, #1
4000eecc:	e59f21f4 	ldr	r2, [pc, #500]	; 4000f0c8 <_tx_thread_relinquish+0x2c8>
4000eed0:	e5821000 	str	r1, [r2]
4000eed4:	e580100c 	str	r1, [r0, #12]
4000eed8:	e59f11ec 	ldr	r1, [pc, #492]	; 4000f0cc <_tx_thread_relinquish+0x2cc>
4000eedc:	e5911000 	ldr	r1, [r1]
4000eee0:	e3510000 	cmp	r1, #0
4000eee4:	1a000006 	bne	4000ef04 <_tx_thread_relinquish+0x104>
4000eee8:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f0bc <_tx_thread_relinquish+0x2bc>
4000eeec:	e5911000 	ldr	r1, [r1]
4000eef0:	e5801000 	str	r1, [r0]
4000eef4:	e5901000 	ldr	r1, [r0]
4000eef8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eefc:	e5801004 	str	r1, [r0, #4]
4000ef00:	ea00000d 	b	4000ef3c <_tx_thread_relinquish+0x13c>
4000ef04:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f0cc <_tx_thread_relinquish+0x2cc>
4000ef08:	e5911000 	ldr	r1, [r1]
4000ef0c:	e59f21bc 	ldr	r2, [pc, #444]	; 4000f0d0 <_tx_thread_relinquish+0x2d0>
4000ef10:	e1510002 	cmp	r1, r2
4000ef14:	2a000004 	bcs	4000ef2c <_tx_thread_relinquish+0x12c>
4000ef18:	e3e01000 	mvn	r1, #0
4000ef1c:	e5801000 	str	r1, [r0]
4000ef20:	e3a01000 	mov	r1, #0
4000ef24:	e5801004 	str	r1, [r0, #4]
4000ef28:	ea000003 	b	4000ef3c <_tx_thread_relinquish+0x13c>
4000ef2c:	e59f119c 	ldr	r1, [pc, #412]	; 4000f0d0 <_tx_thread_relinquish+0x2d0>
4000ef30:	e5801000 	str	r1, [r0]
4000ef34:	e3a01000 	mov	r1, #0
4000ef38:	e5801004 	str	r1, [r0, #4]
4000ef3c:	e3a0106d 	mov	r1, #109	; 0x6d
4000ef40:	e5801008 	str	r1, [r0, #8]
4000ef44:	e580d010 	str	sp, [r0, #16]
4000ef48:	e3a01000 	mov	r1, #0
4000ef4c:	e5801014 	str	r1, [r0, #20]
4000ef50:	e5801018 	str	r1, [r0, #24]
4000ef54:	e580101c 	str	r1, [r0, #28]
4000ef58:	e2800020 	add	r0, r0, #32
4000ef5c:	e59f1170 	ldr	r1, [pc, #368]	; 4000f0d4 <_tx_thread_relinquish+0x2d4>
4000ef60:	e5911000 	ldr	r1, [r1]
4000ef64:	e1500001 	cmp	r0, r1
4000ef68:	3a000001 	bcc	4000ef74 <_tx_thread_relinquish+0x174>
4000ef6c:	e59f1164 	ldr	r1, [pc, #356]	; 4000f0d8 <_tx_thread_relinquish+0x2d8>
4000ef70:	e5910000 	ldr	r0, [r1]
4000ef74:	e59f1148 	ldr	r1, [pc, #328]	; 4000f0c4 <_tx_thread_relinquish+0x2c4>
4000ef78:	e5810000 	str	r0, [r1]
4000ef7c:	e59f1158 	ldr	r1, [pc, #344]	; 4000f0dc <_tx_thread_relinquish+0x2dc>
4000ef80:	e5911000 	ldr	r1, [r1]
4000ef84:	e5810020 	str	r0, [r1, #32]
4000ef88:	e59d0000 	ldr	r0, [sp]
4000ef8c:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ef90:	e59d0000 	ldr	r0, [sp]
4000ef94:	e5900020 	ldr	r0, [r0, #32]
4000ef98:	e59d1000 	ldr	r1, [sp]
4000ef9c:	e1500001 	cmp	r0, r1
4000efa0:	0a000013 	beq	4000eff4 <_tx_thread_relinquish+0x1f4>
4000efa4:	e59d0000 	ldr	r0, [sp]
4000efa8:	e5900020 	ldr	r0, [r0, #32]
4000efac:	e59f112c 	ldr	r1, [pc, #300]	; 4000f0e0 <_tx_thread_relinquish+0x2e0>
4000efb0:	e7810106 	str	r0, [r1, r6, lsl #2]
4000efb4:	e59d0000 	ldr	r0, [sp]
4000efb8:	e5900020 	ldr	r0, [r0, #32]
4000efbc:	e59f1120 	ldr	r1, [pc, #288]	; 4000f0e4 <_tx_thread_relinquish+0x2e4>
4000efc0:	e5810000 	str	r0, [r1]
4000efc4:	e59f011c 	ldr	r0, [pc, #284]	; 4000f0e8 <_tx_thread_relinquish+0x2e8>
4000efc8:	e5900000 	ldr	r0, [r0]
4000efcc:	e3500000 	cmp	r0, #0
4000efd0:	0a000007 	beq	4000eff4 <_tx_thread_relinquish+0x1f4>
4000efd4:	e59f010c 	ldr	r0, [pc, #268]	; 4000f0e8 <_tx_thread_relinquish+0x2e8>
4000efd8:	e5900000 	ldr	r0, [r0]
4000efdc:	e59d1000 	ldr	r1, [sp]
4000efe0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000efe4:	e3a02001 	mov	r2, #1
4000efe8:	e1c00112 	bic	r0, r0, r2, lsl r1
4000efec:	e59f10f4 	ldr	r1, [pc, #244]	; 4000f0e8 <_tx_thread_relinquish+0x2e8>
4000eff0:	e5810000 	str	r0, [r1]
4000eff4:	e59f00f0 	ldr	r0, [pc, #240]	; 4000f0ec <_tx_thread_relinquish+0x2ec>
4000eff8:	e5900000 	ldr	r0, [r0]
4000effc:	e1500006 	cmp	r0, r6
4000f000:	2a000005 	bcs	4000f01c <_tx_thread_relinquish+0x21c>
4000f004:	e59f00d4 	ldr	r0, [pc, #212]	; 4000f0e0 <_tx_thread_relinquish+0x2e0>
4000f008:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f0ec <_tx_thread_relinquish+0x2ec>
4000f00c:	e5911000 	ldr	r1, [r1]
4000f010:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f014:	e59f10c8 	ldr	r1, [pc, #200]	; 4000f0e4 <_tx_thread_relinquish+0x2e4>
4000f018:	e5810000 	str	r0, [r1]
4000f01c:	e121f004 	msr	CPSR_c, r4
4000f020:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f0e4 <_tx_thread_relinquish+0x2e4>
4000f024:	e5900000 	ldr	r0, [r0]
4000f028:	e59d1000 	ldr	r1, [sp]
4000f02c:	e1500001 	cmp	r0, r1
4000f030:	0a000020 	beq	4000f0b8 <_tx_thread_relinquish+0x2b8>
4000f034:	e59f00a8 	ldr	r0, [pc, #168]	; 4000f0e4 <_tx_thread_relinquish+0x2e4>
4000f038:	e5900000 	ldr	r0, [r0]
4000f03c:	e58d0000 	str	r0, [sp]
4000f040:	e59d0000 	ldr	r0, [sp]
4000f044:	e5900008 	ldr	r0, [r0, #8]
4000f048:	e59d1000 	ldr	r1, [sp]
4000f04c:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000f050:	e1500001 	cmp	r0, r1
4000f054:	2a000003 	bcs	4000f068 <_tx_thread_relinquish+0x268>
4000f058:	e59d0000 	ldr	r0, [sp]
4000f05c:	e5900008 	ldr	r0, [r0, #8]
4000f060:	e59d1000 	ldr	r1, [sp]
4000f064:	e5810040 	str	r0, [r1, #64]	; 0x40
4000f068:	e59d0000 	ldr	r0, [sp]
4000f06c:	e590000c 	ldr	r0, [r0, #12]
4000f070:	e5900000 	ldr	r0, [r0]
4000f074:	e59f1044 	ldr	r1, [pc, #68]	; 4000f0c0 <_tx_thread_relinquish+0x2c0>
4000f078:	e1500001 	cmp	r0, r1
4000f07c:	1a00000a 	bne	4000f0ac <_tx_thread_relinquish+0x2ac>
4000f080:	e59d0000 	ldr	r0, [sp]
4000f084:	e5900010 	ldr	r0, [r0, #16]
4000f088:	e5900001 	ldr	r0, [r0, #1]
4000f08c:	e1500001 	cmp	r0, r1
4000f090:	1a000005 	bne	4000f0ac <_tx_thread_relinquish+0x2ac>
4000f094:	e59d0000 	ldr	r0, [sp]
4000f098:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000f09c:	e59d1000 	ldr	r1, [sp]
4000f0a0:	e591100c 	ldr	r1, [r1, #12]
4000f0a4:	e1500001 	cmp	r0, r1
4000f0a8:	2a000001 	bcs	4000f0b4 <_tx_thread_relinquish+0x2b4>
4000f0ac:	e59d0000 	ldr	r0, [sp]
4000f0b0:	eb0000de 	bl	4000f430 <_tx_thread_stack_error_handler>
4000f0b4:	ebffef86 	bl	4000aed4 <_tx_thread_system_return>
4000f0b8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000f0bc:	40030e54 	.word	0x40030e54
4000f0c0:	efefefef 	.word	0xefefefef
4000f0c4:	40030ec0 	.word	0x40030ec0
4000f0c8:	40030ec4 	.word	0x40030ec4
4000f0cc:	40030e4c 	.word	0x40030e4c
4000f0d0:	f0f0f0f0 	.word	0xf0f0f0f0
4000f0d4:	40030ebc 	.word	0x40030ebc
4000f0d8:	40030eb8 	.word	0x40030eb8
4000f0dc:	40030eac 	.word	0x40030eac
4000f0e0:	40032894 	.word	0x40032894
4000f0e4:	40030e58 	.word	0x40030e58
4000f0e8:	40030e68 	.word	0x40030e68
4000f0ec:	40030e6c 	.word	0x40030e6c

4000f0f0 <_tx_thread_resume>:
4000f0f0:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f0f4:	e1a04000 	mov	r4, r0
4000f0f8:	e3a00000 	mov	r0, #0
4000f0fc:	e58d0000 	str	r0, [sp]
4000f100:	e10f5000 	mrs	r5, CPSR
4000f104:	e3856080 	orr	r6, r5, #128	; 0x80
4000f108:	e121f006 	msr	CPSR_c, r6
4000f10c:	e59f1184 	ldr	r1, [pc, #388]	; 4000f298 <_tx_thread_resume+0x1a8>
4000f110:	e5910000 	ldr	r0, [r1]
4000f114:	e3500000 	cmp	r0, #0
4000f118:	0a000032 	beq	4000f1e8 <_tx_thread_resume+0xf8>
4000f11c:	e59f1178 	ldr	r1, [pc, #376]	; 4000f29c <_tx_thread_resume+0x1ac>
4000f120:	e5911000 	ldr	r1, [r1]
4000f124:	e2811001 	add	r1, r1, #1
4000f128:	e59f216c 	ldr	r2, [pc, #364]	; 4000f29c <_tx_thread_resume+0x1ac>
4000f12c:	e5821000 	str	r1, [r2]
4000f130:	e580100c 	str	r1, [r0, #12]
4000f134:	e59f1164 	ldr	r1, [pc, #356]	; 4000f2a0 <_tx_thread_resume+0x1b0>
4000f138:	e5911000 	ldr	r1, [r1]
4000f13c:	e3510000 	cmp	r1, #0
4000f140:	1a000006 	bne	4000f160 <_tx_thread_resume+0x70>
4000f144:	e59f1158 	ldr	r1, [pc, #344]	; 4000f2a4 <_tx_thread_resume+0x1b4>
4000f148:	e5911000 	ldr	r1, [r1]
4000f14c:	e5801000 	str	r1, [r0]
4000f150:	e5901000 	ldr	r1, [r0]
4000f154:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f158:	e5801004 	str	r1, [r0, #4]
4000f15c:	ea00000d 	b	4000f198 <_tx_thread_resume+0xa8>
4000f160:	e59f1138 	ldr	r1, [pc, #312]	; 4000f2a0 <_tx_thread_resume+0x1b0>
4000f164:	e5911000 	ldr	r1, [r1]
4000f168:	e59f2138 	ldr	r2, [pc, #312]	; 4000f2a8 <_tx_thread_resume+0x1b8>
4000f16c:	e1510002 	cmp	r1, r2
4000f170:	2a000004 	bcs	4000f188 <_tx_thread_resume+0x98>
4000f174:	e3e01000 	mvn	r1, #0
4000f178:	e5801000 	str	r1, [r0]
4000f17c:	e3a01000 	mov	r1, #0
4000f180:	e5801004 	str	r1, [r0, #4]
4000f184:	ea000003 	b	4000f198 <_tx_thread_resume+0xa8>
4000f188:	e59f1118 	ldr	r1, [pc, #280]	; 4000f2a8 <_tx_thread_resume+0x1b8>
4000f18c:	e5801000 	str	r1, [r0]
4000f190:	e3a01000 	mov	r1, #0
4000f194:	e5801004 	str	r1, [r0, #4]
4000f198:	e3a0106f 	mov	r1, #111	; 0x6f
4000f19c:	e5801008 	str	r1, [r0, #8]
4000f1a0:	e5804010 	str	r4, [r0, #16]
4000f1a4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f1a8:	e5801014 	str	r1, [r0, #20]
4000f1ac:	e580d018 	str	sp, [r0, #24]
4000f1b0:	e3a01000 	mov	r1, #0
4000f1b4:	e580101c 	str	r1, [r0, #28]
4000f1b8:	e2800020 	add	r0, r0, #32
4000f1bc:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f2ac <_tx_thread_resume+0x1bc>
4000f1c0:	e5911000 	ldr	r1, [r1]
4000f1c4:	e1500001 	cmp	r0, r1
4000f1c8:	3a000001 	bcc	4000f1d4 <_tx_thread_resume+0xe4>
4000f1cc:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f2b0 <_tx_thread_resume+0x1c0>
4000f1d0:	e5910000 	ldr	r0, [r1]
4000f1d4:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f298 <_tx_thread_resume+0x1a8>
4000f1d8:	e5810000 	str	r0, [r1]
4000f1dc:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f2b4 <_tx_thread_resume+0x1c4>
4000f1e0:	e5911000 	ldr	r1, [r1]
4000f1e4:	e5810020 	str	r0, [r1, #32]
4000f1e8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f1ec:	e3500003 	cmp	r0, #3
4000f1f0:	1a00001c 	bne	4000f268 <_tx_thread_resume+0x178>
4000f1f4:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f2b8 <_tx_thread_resume+0x1c8>
4000f1f8:	e5900000 	ldr	r0, [r0]
4000f1fc:	e2800001 	add	r0, r0, #1
4000f200:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f2b8 <_tx_thread_resume+0x1c8>
4000f204:	e5810000 	str	r0, [r1]
4000f208:	e121f005 	msr	CPSR_c, r5
4000f20c:	e59f008c 	ldr	r0, [pc, #140]	; 4000f2a0 <_tx_thread_resume+0x1b0>
4000f210:	e5900000 	ldr	r0, [r0]
4000f214:	e59f108c 	ldr	r1, [pc, #140]	; 4000f2a8 <_tx_thread_resume+0x1b8>
4000f218:	e1500001 	cmp	r0, r1
4000f21c:	3a000008 	bcc	4000f244 <_tx_thread_resume+0x154>
4000f220:	e59f0094 	ldr	r0, [pc, #148]	; 4000f2bc <_tx_thread_resume+0x1cc>
4000f224:	e5907000 	ldr	r7, [r0]
4000f228:	e3570000 	cmp	r7, #0
4000f22c:	0a000005 	beq	4000f248 <_tx_thread_resume+0x158>
4000f230:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000f234:	e58d0000 	str	r0, [sp]
4000f238:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000f23c:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f240:	ea000000 	b	4000f248 <_tx_thread_resume+0x158>
4000f244:	e3a07000 	mov	r7, #0
4000f248:	e1a00004 	mov	r0, r4
4000f24c:	eb0000b6 	bl	4000f52c <_tx_thread_system_resume>
4000f250:	e3570000 	cmp	r7, #0
4000f254:	0a000001 	beq	4000f260 <_tx_thread_resume+0x170>
4000f258:	e59d0000 	ldr	r0, [sp]
4000f25c:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f260:	e3a08000 	mov	r8, #0
4000f264:	ea000009 	b	4000f290 <_tx_thread_resume+0x1a0>
4000f268:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f26c:	e3500000 	cmp	r0, #0
4000f270:	0a000004 	beq	4000f288 <_tx_thread_resume+0x198>
4000f274:	e3a00000 	mov	r0, #0
4000f278:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f27c:	e121f005 	msr	CPSR_c, r5
4000f280:	e3a08019 	mov	r8, #25
4000f284:	ea000001 	b	4000f290 <_tx_thread_resume+0x1a0>
4000f288:	e121f005 	msr	CPSR_c, r5
4000f28c:	e3a08012 	mov	r8, #18
4000f290:	e1a00008 	mov	r0, r8
4000f294:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f298:	40030ec0 	.word	0x40030ec0
4000f29c:	40030ec4 	.word	0x40030ec4
4000f2a0:	40030e4c 	.word	0x40030e4c
4000f2a4:	40030e54 	.word	0x40030e54
4000f2a8:	f0f0f0f0 	.word	0xf0f0f0f0
4000f2ac:	40030ebc 	.word	0x40030ebc
4000f2b0:	40030eb8 	.word	0x40030eb8
4000f2b4:	40030eac 	.word	0x40030eac
4000f2b8:	40030e70 	.word	0x40030e70
4000f2bc:	40030e58 	.word	0x40030e58

4000f2c0 <_tx_thread_shell_entry>:
4000f2c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f2c4:	e59f0088 	ldr	r0, [pc, #136]	; 4000f354 <_tx_thread_shell_entry+0x94>
4000f2c8:	e5907000 	ldr	r7, [r0]
4000f2cc:	e10f4000 	mrs	r4, CPSR
4000f2d0:	e3845080 	orr	r5, r4, #128	; 0x80
4000f2d4:	e121f005 	msr	CPSR_c, r5
4000f2d8:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f2dc:	e121f004 	msr	CPSR_c, r4
4000f2e0:	e3560000 	cmp	r6, #0
4000f2e4:	0a000002 	beq	4000f2f4 <_tx_thread_shell_entry+0x34>
4000f2e8:	e3a01000 	mov	r1, #0
4000f2ec:	e1a00007 	mov	r0, r7
4000f2f0:	e12fff36 	blx	r6
4000f2f4:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f2f8:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f2fc:	e12fff31 	blx	r1
4000f300:	e10f4000 	mrs	r4, CPSR
4000f304:	e3845080 	orr	r5, r4, #128	; 0x80
4000f308:	e121f005 	msr	CPSR_c, r5
4000f30c:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f310:	e3a00001 	mov	r0, #1
4000f314:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f318:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f31c:	e59f0034 	ldr	r0, [pc, #52]	; 4000f358 <_tx_thread_shell_entry+0x98>
4000f320:	e5900000 	ldr	r0, [r0]
4000f324:	e2800001 	add	r0, r0, #1
4000f328:	e59f1028 	ldr	r1, [pc, #40]	; 4000f358 <_tx_thread_shell_entry+0x98>
4000f32c:	e5810000 	str	r0, [r1]
4000f330:	e121f004 	msr	CPSR_c, r4
4000f334:	e3560000 	cmp	r6, #0
4000f338:	0a000002 	beq	4000f348 <_tx_thread_shell_entry+0x88>
4000f33c:	e3a01001 	mov	r1, #1
4000f340:	e1a00007 	mov	r0, r7
4000f344:	e12fff36 	blx	r6
4000f348:	e1a00007 	mov	r0, r7
4000f34c:	ebffe6cf 	bl	40008e90 <_tx_thread_system_suspend>
4000f350:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f354:	40030e54 	.word	0x40030e54
4000f358:	40030e70 	.word	0x40030e70

4000f35c <_tx_thread_stack_analyze>:
4000f35c:	e92d4070 	push	{r4, r5, r6, lr}
4000f360:	e10f1000 	mrs	r1, CPSR
4000f364:	e3812080 	orr	r2, r1, #128	; 0x80
4000f368:	e121f002 	msr	CPSR_c, r2
4000f36c:	e3500000 	cmp	r0, #0
4000f370:	0a000003 	beq	4000f384 <_tx_thread_stack_analyze+0x28>
4000f374:	e5905000 	ldr	r5, [r0]
4000f378:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f428 <_tx_thread_stack_analyze+0xcc>
4000f37c:	e1550006 	cmp	r5, r6
4000f380:	0a000001 	beq	4000f38c <_tx_thread_stack_analyze+0x30>
4000f384:	e121f001 	msr	CPSR_c, r1
4000f388:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f38c:	e590c008 	ldr	ip, [r0, #8]
4000f390:	e590300c 	ldr	r3, [r0, #12]
4000f394:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f398:	e121f001 	msr	CPSR_c, r1
4000f39c:	e24ec004 	sub	ip, lr, #4
4000f3a0:	e04e6003 	sub	r6, lr, r3
4000f3a4:	e1a05146 	asr	r5, r6, #2
4000f3a8:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f3ac:	e1a040c6 	asr	r4, r6, #1
4000f3b0:	e083c104 	add	ip, r3, r4, lsl #2
4000f3b4:	e1a00000 	nop			; (mov r0, r0)
4000f3b8:	e59c5000 	ldr	r5, [ip]
4000f3bc:	e59f6068 	ldr	r6, [pc, #104]	; 4000f42c <_tx_thread_stack_analyze+0xd0>
4000f3c0:	e1550006 	cmp	r5, r6
4000f3c4:	0a000002 	beq	4000f3d4 <_tx_thread_stack_analyze+0x78>
4000f3c8:	e1a050a4 	lsr	r5, r4, #1
4000f3cc:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f3d0:	ea000001 	b	4000f3dc <_tx_thread_stack_analyze+0x80>
4000f3d4:	e1a050a4 	lsr	r5, r4, #1
4000f3d8:	e08cc105 	add	ip, ip, r5, lsl #2
4000f3dc:	e1a040a4 	lsr	r4, r4, #1
4000f3e0:	e3540001 	cmp	r4, #1
4000f3e4:	8afffff3 	bhi	4000f3b8 <_tx_thread_stack_analyze+0x5c>
4000f3e8:	ea000000 	b	4000f3f0 <_tx_thread_stack_analyze+0x94>
4000f3ec:	e28cc004 	add	ip, ip, #4
4000f3f0:	e59c5000 	ldr	r5, [ip]
4000f3f4:	e59f6030 	ldr	r6, [pc, #48]	; 4000f42c <_tx_thread_stack_analyze+0xd0>
4000f3f8:	e1550006 	cmp	r5, r6
4000f3fc:	0afffffa 	beq	4000f3ec <_tx_thread_stack_analyze+0x90>
4000f400:	e10f1000 	mrs	r1, CPSR
4000f404:	e3812080 	orr	r2, r1, #128	; 0x80
4000f408:	e121f002 	msr	CPSR_c, r2
4000f40c:	e5905000 	ldr	r5, [r0]
4000f410:	e59f6010 	ldr	r6, [pc, #16]	; 4000f428 <_tx_thread_stack_analyze+0xcc>
4000f414:	e1550006 	cmp	r5, r6
4000f418:	1a000000 	bne	4000f420 <_tx_thread_stack_analyze+0xc4>
4000f41c:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f420:	e121f001 	msr	CPSR_c, r1
4000f424:	eaffffd7 	b	4000f388 <_tx_thread_stack_analyze+0x2c>
4000f428:	54485244 	.word	0x54485244
4000f42c:	efefefef 	.word	0xefefefef

4000f430 <_tx_thread_stack_error_handler>:
4000f430:	e92d4070 	push	{r4, r5, r6, lr}
4000f434:	e1a04000 	mov	r4, r0
4000f438:	e10f5000 	mrs	r5, CPSR
4000f43c:	e3856080 	orr	r6, r5, #128	; 0x80
4000f440:	e121f006 	msr	CPSR_c, r6
4000f444:	e59f002c 	ldr	r0, [pc, #44]	; 4000f478 <_tx_thread_stack_error_handler+0x48>
4000f448:	e5900000 	ldr	r0, [r0]
4000f44c:	e3500000 	cmp	r0, #0
4000f450:	0a000004 	beq	4000f468 <_tx_thread_stack_error_handler+0x38>
4000f454:	e1a00004 	mov	r0, r4
4000f458:	e59f1018 	ldr	r1, [pc, #24]	; 4000f478 <_tx_thread_stack_error_handler+0x48>
4000f45c:	e5911000 	ldr	r1, [r1]
4000f460:	e12fff31 	blx	r1
4000f464:	ea000001 	b	4000f470 <_tx_thread_stack_error_handler+0x40>
4000f468:	e1a00000 	nop			; (mov r0, r0)
4000f46c:	eafffffe 	b	4000f46c <_tx_thread_stack_error_handler+0x3c>
4000f470:	e121f005 	msr	CPSR_c, r5
4000f474:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f478:	40030e78 	.word	0x40030e78

4000f47c <_tx_thread_system_preempt_check>:
4000f47c:	e92d4010 	push	{r4, lr}
4000f480:	e59f0090 	ldr	r0, [pc, #144]	; 4000f518 <_tx_thread_system_preempt_check+0x9c>
4000f484:	e5900000 	ldr	r0, [r0]
4000f488:	e59f108c 	ldr	r1, [pc, #140]	; 4000f51c <_tx_thread_system_preempt_check+0xa0>
4000f48c:	e5911000 	ldr	r1, [r1]
4000f490:	e1500001 	cmp	r0, r1
4000f494:	0a00001e 	beq	4000f514 <_tx_thread_system_preempt_check+0x98>
4000f498:	e59f0080 	ldr	r0, [pc, #128]	; 4000f520 <_tx_thread_system_preempt_check+0xa4>
4000f49c:	e5900000 	ldr	r0, [r0]
4000f4a0:	e59f107c 	ldr	r1, [pc, #124]	; 4000f524 <_tx_thread_system_preempt_check+0xa8>
4000f4a4:	e5911000 	ldr	r1, [r1]
4000f4a8:	e1900001 	orrs	r0, r0, r1
4000f4ac:	1a000018 	bne	4000f514 <_tx_thread_system_preempt_check+0x98>
4000f4b0:	e59f0064 	ldr	r0, [pc, #100]	; 4000f51c <_tx_thread_system_preempt_check+0xa0>
4000f4b4:	e5904000 	ldr	r4, [r0]
4000f4b8:	e5940008 	ldr	r0, [r4, #8]
4000f4bc:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f4c0:	e1500001 	cmp	r0, r1
4000f4c4:	2a000001 	bcs	4000f4d0 <_tx_thread_system_preempt_check+0x54>
4000f4c8:	e5940008 	ldr	r0, [r4, #8]
4000f4cc:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f4d0:	e594000c 	ldr	r0, [r4, #12]
4000f4d4:	e5900000 	ldr	r0, [r0]
4000f4d8:	e59f1048 	ldr	r1, [pc, #72]	; 4000f528 <_tx_thread_system_preempt_check+0xac>
4000f4dc:	e1500001 	cmp	r0, r1
4000f4e0:	1a000007 	bne	4000f504 <_tx_thread_system_preempt_check+0x88>
4000f4e4:	e5940010 	ldr	r0, [r4, #16]
4000f4e8:	e5900001 	ldr	r0, [r0, #1]
4000f4ec:	e1500001 	cmp	r0, r1
4000f4f0:	1a000003 	bne	4000f504 <_tx_thread_system_preempt_check+0x88>
4000f4f4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f4f8:	e594100c 	ldr	r1, [r4, #12]
4000f4fc:	e1500001 	cmp	r0, r1
4000f500:	2a000001 	bcs	4000f50c <_tx_thread_system_preempt_check+0x90>
4000f504:	e1a00004 	mov	r0, r4
4000f508:	ebffffc8 	bl	4000f430 <_tx_thread_stack_error_handler>
4000f50c:	ebffee70 	bl	4000aed4 <_tx_thread_system_return>
4000f510:	e1a00000 	nop			; (mov r0, r0)
4000f514:	e8bd8010 	pop	{r4, pc}
4000f518:	40030e54 	.word	0x40030e54
4000f51c:	40030e58 	.word	0x40030e58
4000f520:	40030e4c 	.word	0x40030e4c
4000f524:	40030e70 	.word	0x40030e70
4000f528:	efefefef 	.word	0xefefefef

4000f52c <_tx_thread_system_resume>:
4000f52c:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f530:	e1a04000 	mov	r4, r0
4000f534:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f538:	e3500000 	cmp	r0, #0
4000f53c:	0a000002 	beq	4000f54c <_tx_thread_system_resume+0x20>
4000f540:	e284004c 	add	r0, r4, #76	; 0x4c
4000f544:	eb000325 	bl	400101e0 <_tx_timer_system_deactivate>
4000f548:	ea000001 	b	4000f554 <_tx_thread_system_resume+0x28>
4000f54c:	e3a00000 	mov	r0, #0
4000f550:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f554:	e5940008 	ldr	r0, [r4, #8]
4000f558:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f55c:	e1500001 	cmp	r0, r1
4000f560:	2a000001 	bcs	4000f56c <_tx_thread_system_resume+0x40>
4000f564:	e5940008 	ldr	r0, [r4, #8]
4000f568:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f56c:	e594000c 	ldr	r0, [r4, #12]
4000f570:	e5900000 	ldr	r0, [r0]
4000f574:	e59f133c 	ldr	r1, [pc, #828]	; 4000f8b8 <_tx_thread_system_resume+0x38c>
4000f578:	e1500001 	cmp	r0, r1
4000f57c:	1a000007 	bne	4000f5a0 <_tx_thread_system_resume+0x74>
4000f580:	e5940010 	ldr	r0, [r4, #16]
4000f584:	e5900001 	ldr	r0, [r0, #1]
4000f588:	e1500001 	cmp	r0, r1
4000f58c:	1a000003 	bne	4000f5a0 <_tx_thread_system_resume+0x74>
4000f590:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f594:	e594100c 	ldr	r1, [r4, #12]
4000f598:	e1500001 	cmp	r0, r1
4000f59c:	2a000001 	bcs	4000f5a8 <_tx_thread_system_resume+0x7c>
4000f5a0:	e1a00004 	mov	r0, r4
4000f5a4:	ebffffa1 	bl	4000f430 <_tx_thread_stack_error_handler>
4000f5a8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f5ac:	e5100004 	ldr	r0, [r0, #-4]
4000f5b0:	e59f1300 	ldr	r1, [pc, #768]	; 4000f8b8 <_tx_thread_system_resume+0x38c>
4000f5b4:	e1500001 	cmp	r0, r1
4000f5b8:	0a000001 	beq	4000f5c4 <_tx_thread_system_resume+0x98>
4000f5bc:	e1a00004 	mov	r0, r4
4000f5c0:	ebffff65 	bl	4000f35c <_tx_thread_stack_analyze>
4000f5c4:	e10f5000 	mrs	r5, CPSR
4000f5c8:	e3856080 	orr	r6, r5, #128	; 0x80
4000f5cc:	e121f006 	msr	CPSR_c, r6
4000f5d0:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f8bc <_tx_thread_system_resume+0x390>
4000f5d4:	e5900000 	ldr	r0, [r0]
4000f5d8:	e2400001 	sub	r0, r0, #1
4000f5dc:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f8bc <_tx_thread_system_resume+0x390>
4000f5e0:	e5810000 	str	r0, [r1]
4000f5e4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f5e8:	e3500000 	cmp	r0, #0
4000f5ec:	0a000009 	beq	4000f618 <_tx_thread_system_resume+0xec>
4000f5f0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5f4:	e3500001 	cmp	r0, #1
4000f5f8:	0a000084 	beq	4000f810 <_tx_thread_system_resume+0x2e4>
4000f5fc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f600:	e3500002 	cmp	r0, #2
4000f604:	0a000081 	beq	4000f810 <_tx_thread_system_resume+0x2e4>
4000f608:	e3a00000 	mov	r0, #0
4000f60c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f610:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f614:	ea00007d 	b	4000f810 <_tx_thread_system_resume+0x2e4>
4000f618:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f61c:	e3500000 	cmp	r0, #0
4000f620:	0a00007a 	beq	4000f810 <_tx_thread_system_resume+0x2e4>
4000f624:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f628:	e3500000 	cmp	r0, #0
4000f62c:	0a000004 	beq	4000f644 <_tx_thread_system_resume+0x118>
4000f630:	e3a00000 	mov	r0, #0
4000f634:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f638:	e3a00003 	mov	r0, #3
4000f63c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f640:	ea000072 	b	4000f810 <_tx_thread_system_resume+0x2e4>
4000f644:	e59f1274 	ldr	r1, [pc, #628]	; 4000f8c0 <_tx_thread_system_resume+0x394>
4000f648:	e5910000 	ldr	r0, [r1]
4000f64c:	e3500000 	cmp	r0, #0
4000f650:	0a000032 	beq	4000f720 <_tx_thread_system_resume+0x1f4>
4000f654:	e59f1268 	ldr	r1, [pc, #616]	; 4000f8c4 <_tx_thread_system_resume+0x398>
4000f658:	e5911000 	ldr	r1, [r1]
4000f65c:	e2811001 	add	r1, r1, #1
4000f660:	e59f225c 	ldr	r2, [pc, #604]	; 4000f8c4 <_tx_thread_system_resume+0x398>
4000f664:	e5821000 	str	r1, [r2]
4000f668:	e580100c 	str	r1, [r0, #12]
4000f66c:	e59f1254 	ldr	r1, [pc, #596]	; 4000f8c8 <_tx_thread_system_resume+0x39c>
4000f670:	e5911000 	ldr	r1, [r1]
4000f674:	e3510000 	cmp	r1, #0
4000f678:	1a000006 	bne	4000f698 <_tx_thread_system_resume+0x16c>
4000f67c:	e59f1248 	ldr	r1, [pc, #584]	; 4000f8cc <_tx_thread_system_resume+0x3a0>
4000f680:	e5911000 	ldr	r1, [r1]
4000f684:	e5801000 	str	r1, [r0]
4000f688:	e5901000 	ldr	r1, [r0]
4000f68c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f690:	e5801004 	str	r1, [r0, #4]
4000f694:	ea00000d 	b	4000f6d0 <_tx_thread_system_resume+0x1a4>
4000f698:	e59f1228 	ldr	r1, [pc, #552]	; 4000f8c8 <_tx_thread_system_resume+0x39c>
4000f69c:	e5911000 	ldr	r1, [r1]
4000f6a0:	e59f2228 	ldr	r2, [pc, #552]	; 4000f8d0 <_tx_thread_system_resume+0x3a4>
4000f6a4:	e1510002 	cmp	r1, r2
4000f6a8:	2a000004 	bcs	4000f6c0 <_tx_thread_system_resume+0x194>
4000f6ac:	e3e01000 	mvn	r1, #0
4000f6b0:	e5801000 	str	r1, [r0]
4000f6b4:	e3a01000 	mov	r1, #0
4000f6b8:	e5801004 	str	r1, [r0, #4]
4000f6bc:	ea000003 	b	4000f6d0 <_tx_thread_system_resume+0x1a4>
4000f6c0:	e59f1208 	ldr	r1, [pc, #520]	; 4000f8d0 <_tx_thread_system_resume+0x3a4>
4000f6c4:	e5801000 	str	r1, [r0]
4000f6c8:	e3a01000 	mov	r1, #0
4000f6cc:	e5801004 	str	r1, [r0, #4]
4000f6d0:	e3a01001 	mov	r1, #1
4000f6d4:	e5801008 	str	r1, [r0, #8]
4000f6d8:	e5804010 	str	r4, [r0, #16]
4000f6dc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f6e0:	e5801014 	str	r1, [r0, #20]
4000f6e4:	e580d018 	str	sp, [r0, #24]
4000f6e8:	e3a01000 	mov	r1, #0
4000f6ec:	e580101c 	str	r1, [r0, #28]
4000f6f0:	e2800020 	add	r0, r0, #32
4000f6f4:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f8d4 <_tx_thread_system_resume+0x3a8>
4000f6f8:	e5911000 	ldr	r1, [r1]
4000f6fc:	e1500001 	cmp	r0, r1
4000f700:	3a000001 	bcc	4000f70c <_tx_thread_system_resume+0x1e0>
4000f704:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f8d8 <_tx_thread_system_resume+0x3ac>
4000f708:	e5910000 	ldr	r0, [r1]
4000f70c:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f8c0 <_tx_thread_system_resume+0x394>
4000f710:	e5810000 	str	r0, [r1]
4000f714:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f8dc <_tx_thread_system_resume+0x3b0>
4000f718:	e5911000 	ldr	r1, [r1]
4000f71c:	e5810020 	str	r0, [r1, #32]
4000f720:	e3a00000 	mov	r0, #0
4000f724:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f728:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f72c:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f8e0 <_tx_thread_system_resume+0x3b4>
4000f730:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f734:	e3580000 	cmp	r8, #0
4000f738:	0a000005 	beq	4000f754 <_tx_thread_system_resume+0x228>
4000f73c:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f740:	e5894020 	str	r4, [r9, #32]
4000f744:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f748:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f74c:	e5848020 	str	r8, [r4, #32]
4000f750:	ea00002e 	b	4000f810 <_tx_thread_system_resume+0x2e4>
4000f754:	e59f0184 	ldr	r0, [pc, #388]	; 4000f8e0 <_tx_thread_system_resume+0x3b4>
4000f758:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f75c:	e5844020 	str	r4, [r4, #32]
4000f760:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f764:	e59f0178 	ldr	r0, [pc, #376]	; 4000f8e4 <_tx_thread_system_resume+0x3b8>
4000f768:	e5900000 	ldr	r0, [r0]
4000f76c:	e3a01001 	mov	r1, #1
4000f770:	e1800711 	orr	r0, r0, r1, lsl r7
4000f774:	e59f1168 	ldr	r1, [pc, #360]	; 4000f8e4 <_tx_thread_system_resume+0x3b8>
4000f778:	e5810000 	str	r0, [r1]
4000f77c:	e59f0164 	ldr	r0, [pc, #356]	; 4000f8e8 <_tx_thread_system_resume+0x3bc>
4000f780:	e5900000 	ldr	r0, [r0]
4000f784:	e58d0000 	str	r0, [sp]
4000f788:	e59d0000 	ldr	r0, [sp]
4000f78c:	e3500000 	cmp	r0, #0
4000f790:	1a000004 	bne	4000f7a8 <_tx_thread_system_resume+0x27c>
4000f794:	e59f014c 	ldr	r0, [pc, #332]	; 4000f8e8 <_tx_thread_system_resume+0x3bc>
4000f798:	e5804000 	str	r4, [r0]
4000f79c:	e59f0148 	ldr	r0, [pc, #328]	; 4000f8ec <_tx_thread_system_resume+0x3c0>
4000f7a0:	e5807000 	str	r7, [r0]
4000f7a4:	ea000019 	b	4000f810 <_tx_thread_system_resume+0x2e4>
4000f7a8:	e59f013c 	ldr	r0, [pc, #316]	; 4000f8ec <_tx_thread_system_resume+0x3c0>
4000f7ac:	e5900000 	ldr	r0, [r0]
4000f7b0:	e1570000 	cmp	r7, r0
4000f7b4:	2a000015 	bcs	4000f810 <_tx_thread_system_resume+0x2e4>
4000f7b8:	e59f012c 	ldr	r0, [pc, #300]	; 4000f8ec <_tx_thread_system_resume+0x3c0>
4000f7bc:	e5807000 	str	r7, [r0]
4000f7c0:	e59d0000 	ldr	r0, [sp]
4000f7c4:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f7c8:	e1500007 	cmp	r0, r7
4000f7cc:	9a00000f 	bls	4000f810 <_tx_thread_system_resume+0x2e4>
4000f7d0:	e59d0000 	ldr	r0, [sp]
4000f7d4:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f7d8:	e59d1000 	ldr	r1, [sp]
4000f7dc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f7e0:	e1500001 	cmp	r0, r1
4000f7e4:	0a000007 	beq	4000f808 <_tx_thread_system_resume+0x2dc>
4000f7e8:	e59f0100 	ldr	r0, [pc, #256]	; 4000f8f0 <_tx_thread_system_resume+0x3c4>
4000f7ec:	e5900000 	ldr	r0, [r0]
4000f7f0:	e59d1000 	ldr	r1, [sp]
4000f7f4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f7f8:	e3a02001 	mov	r2, #1
4000f7fc:	e1800112 	orr	r0, r0, r2, lsl r1
4000f800:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f8f0 <_tx_thread_system_resume+0x3c4>
4000f804:	e5810000 	str	r0, [r1]
4000f808:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f8e8 <_tx_thread_system_resume+0x3bc>
4000f80c:	e5804000 	str	r4, [r0]
4000f810:	e121f005 	msr	CPSR_c, r5
4000f814:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f8cc <_tx_thread_system_resume+0x3a0>
4000f818:	e5900000 	ldr	r0, [r0]
4000f81c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f8e8 <_tx_thread_system_resume+0x3bc>
4000f820:	e5911000 	ldr	r1, [r1]
4000f824:	e1500001 	cmp	r0, r1
4000f828:	0a000021 	beq	4000f8b4 <_tx_thread_system_resume+0x388>
4000f82c:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f8e8 <_tx_thread_system_resume+0x3bc>
4000f830:	e5900000 	ldr	r0, [r0]
4000f834:	e1540000 	cmp	r4, r0
4000f838:	0a000016 	beq	4000f898 <_tx_thread_system_resume+0x36c>
4000f83c:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f8e8 <_tx_thread_system_resume+0x3bc>
4000f840:	e5904000 	ldr	r4, [r0]
4000f844:	e5940008 	ldr	r0, [r4, #8]
4000f848:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f84c:	e1500001 	cmp	r0, r1
4000f850:	2a000001 	bcs	4000f85c <_tx_thread_system_resume+0x330>
4000f854:	e5940008 	ldr	r0, [r4, #8]
4000f858:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f85c:	e594000c 	ldr	r0, [r4, #12]
4000f860:	e5900000 	ldr	r0, [r0]
4000f864:	e59f104c 	ldr	r1, [pc, #76]	; 4000f8b8 <_tx_thread_system_resume+0x38c>
4000f868:	e1500001 	cmp	r0, r1
4000f86c:	1a000007 	bne	4000f890 <_tx_thread_system_resume+0x364>
4000f870:	e5940010 	ldr	r0, [r4, #16]
4000f874:	e5900001 	ldr	r0, [r0, #1]
4000f878:	e1500001 	cmp	r0, r1
4000f87c:	1a000003 	bne	4000f890 <_tx_thread_system_resume+0x364>
4000f880:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f884:	e594100c 	ldr	r1, [r4, #12]
4000f888:	e1500001 	cmp	r0, r1
4000f88c:	2a000001 	bcs	4000f898 <_tx_thread_system_resume+0x36c>
4000f890:	e1a00004 	mov	r0, r4
4000f894:	ebfffee5 	bl	4000f430 <_tx_thread_stack_error_handler>
4000f898:	e59f0028 	ldr	r0, [pc, #40]	; 4000f8c8 <_tx_thread_system_resume+0x39c>
4000f89c:	e5900000 	ldr	r0, [r0]
4000f8a0:	e59f1014 	ldr	r1, [pc, #20]	; 4000f8bc <_tx_thread_system_resume+0x390>
4000f8a4:	e5911000 	ldr	r1, [r1]
4000f8a8:	e1900001 	orrs	r0, r0, r1
4000f8ac:	1a000000 	bne	4000f8b4 <_tx_thread_system_resume+0x388>
4000f8b0:	ebffed87 	bl	4000aed4 <_tx_thread_system_return>
4000f8b4:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f8b8:	efefefef 	.word	0xefefefef
4000f8bc:	40030e70 	.word	0x40030e70
4000f8c0:	40030ec0 	.word	0x40030ec0
4000f8c4:	40030ec4 	.word	0x40030ec4
4000f8c8:	40030e4c 	.word	0x40030e4c
4000f8cc:	40030e54 	.word	0x40030e54
4000f8d0:	f0f0f0f0 	.word	0xf0f0f0f0
4000f8d4:	40030ebc 	.word	0x40030ebc
4000f8d8:	40030eb8 	.word	0x40030eb8
4000f8dc:	40030eac 	.word	0x40030eac
4000f8e0:	40032894 	.word	0x40032894
4000f8e4:	40030e64 	.word	0x40030e64
4000f8e8:	40030e58 	.word	0x40030e58
4000f8ec:	40030e6c 	.word	0x40030e6c
4000f8f0:	40030e68 	.word	0x40030e68

4000f8f4 <_tx_thread_time_slice>:
4000f8f4:	e92d4070 	push	{r4, r5, r6, lr}
4000f8f8:	e59f0140 	ldr	r0, [pc, #320]	; 4000fa40 <_tx_thread_time_slice+0x14c>
4000f8fc:	e5906000 	ldr	r6, [r0]
4000f900:	e5960008 	ldr	r0, [r6, #8]
4000f904:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f908:	e1500001 	cmp	r0, r1
4000f90c:	2a000001 	bcs	4000f918 <_tx_thread_time_slice+0x24>
4000f910:	e5960008 	ldr	r0, [r6, #8]
4000f914:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f918:	e596000c 	ldr	r0, [r6, #12]
4000f91c:	e5900000 	ldr	r0, [r0]
4000f920:	e59f111c 	ldr	r1, [pc, #284]	; 4000fa44 <_tx_thread_time_slice+0x150>
4000f924:	e1500001 	cmp	r0, r1
4000f928:	1a000007 	bne	4000f94c <_tx_thread_time_slice+0x58>
4000f92c:	e5960010 	ldr	r0, [r6, #16]
4000f930:	e5900001 	ldr	r0, [r0, #1]
4000f934:	e1500001 	cmp	r0, r1
4000f938:	1a000003 	bne	4000f94c <_tx_thread_time_slice+0x58>
4000f93c:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f940:	e596100c 	ldr	r1, [r6, #12]
4000f944:	e1500001 	cmp	r0, r1
4000f948:	2a000001 	bcs	4000f954 <_tx_thread_time_slice+0x60>
4000f94c:	e1a00006 	mov	r0, r6
4000f950:	ebfffeb6 	bl	4000f430 <_tx_thread_stack_error_handler>
4000f954:	e10f4000 	mrs	r4, CPSR
4000f958:	e3845080 	orr	r5, r4, #128	; 0x80
4000f95c:	e121f005 	msr	CPSR_c, r5
4000f960:	e3a00000 	mov	r0, #0
4000f964:	e59f10dc 	ldr	r1, [pc, #220]	; 4000fa48 <_tx_thread_time_slice+0x154>
4000f968:	e5810000 	str	r0, [r1]
4000f96c:	e3560000 	cmp	r6, #0
4000f970:	0a000030 	beq	4000fa38 <_tx_thread_time_slice+0x144>
4000f974:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f978:	e3500000 	cmp	r0, #0
4000f97c:	1a00002d 	bne	4000fa38 <_tx_thread_time_slice+0x144>
4000f980:	e596001c 	ldr	r0, [r6, #28]
4000f984:	e5860018 	str	r0, [r6, #24]
4000f988:	e5960020 	ldr	r0, [r6, #32]
4000f98c:	e1500006 	cmp	r0, r6
4000f990:	0a000025 	beq	4000fa2c <_tx_thread_time_slice+0x138>
4000f994:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f998:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f99c:	e1500001 	cmp	r0, r1
4000f9a0:	1a000021 	bne	4000fa2c <_tx_thread_time_slice+0x138>
4000f9a4:	e59f20a0 	ldr	r2, [pc, #160]	; 4000fa4c <_tx_thread_time_slice+0x158>
4000f9a8:	e5960020 	ldr	r0, [r6, #32]
4000f9ac:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f9b0:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f9b4:	e2820000 	add	r0, r2, #0
4000f9b8:	e59f1090 	ldr	r1, [pc, #144]	; 4000fa50 <_tx_thread_time_slice+0x15c>
4000f9bc:	e5911000 	ldr	r1, [r1]
4000f9c0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f9c4:	e59f1088 	ldr	r1, [pc, #136]	; 4000fa54 <_tx_thread_time_slice+0x160>
4000f9c8:	e5810000 	str	r0, [r1]
4000f9cc:	e2810000 	add	r0, r1, #0
4000f9d0:	e5906000 	ldr	r6, [r0]
4000f9d4:	e5960008 	ldr	r0, [r6, #8]
4000f9d8:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f9dc:	e1500001 	cmp	r0, r1
4000f9e0:	2a000001 	bcs	4000f9ec <_tx_thread_time_slice+0xf8>
4000f9e4:	e5960008 	ldr	r0, [r6, #8]
4000f9e8:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f9ec:	e596000c 	ldr	r0, [r6, #12]
4000f9f0:	e5900000 	ldr	r0, [r0]
4000f9f4:	e59f1048 	ldr	r1, [pc, #72]	; 4000fa44 <_tx_thread_time_slice+0x150>
4000f9f8:	e1500001 	cmp	r0, r1
4000f9fc:	1a000007 	bne	4000fa20 <_tx_thread_time_slice+0x12c>
4000fa00:	e5960010 	ldr	r0, [r6, #16]
4000fa04:	e5900001 	ldr	r0, [r0, #1]
4000fa08:	e1500001 	cmp	r0, r1
4000fa0c:	1a000003 	bne	4000fa20 <_tx_thread_time_slice+0x12c>
4000fa10:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000fa14:	e596100c 	ldr	r1, [r6, #12]
4000fa18:	e1500001 	cmp	r0, r1
4000fa1c:	2a000005 	bcs	4000fa38 <_tx_thread_time_slice+0x144>
4000fa20:	e1a00006 	mov	r0, r6
4000fa24:	ebfffe81 	bl	4000f430 <_tx_thread_stack_error_handler>
4000fa28:	ea000002 	b	4000fa38 <_tx_thread_time_slice+0x144>
4000fa2c:	e59f1024 	ldr	r1, [pc, #36]	; 4000fa58 <_tx_thread_time_slice+0x164>
4000fa30:	e5960018 	ldr	r0, [r6, #24]
4000fa34:	e5810000 	str	r0, [r1]
4000fa38:	e121f004 	msr	CPSR_c, r4
4000fa3c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fa40:	40030e54 	.word	0x40030e54
4000fa44:	efefefef 	.word	0xefefefef
4000fa48:	40030e84 	.word	0x40030e84
4000fa4c:	40032894 	.word	0x40032894
4000fa50:	40030e6c 	.word	0x40030e6c
4000fa54:	40030e58 	.word	0x40030e58
4000fa58:	40030e80 	.word	0x40030e80

4000fa5c <_tx_thread_timeout>:
4000fa5c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000fa60:	e1a04000 	mov	r4, r0
4000fa64:	e1a08004 	mov	r8, r4
4000fa68:	e10f5000 	mrs	r5, CPSR
4000fa6c:	e3856080 	orr	r6, r5, #128	; 0x80
4000fa70:	e121f006 	msr	CPSR_c, r6
4000fa74:	e1a04008 	mov	r4, r8
4000fa78:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000fa7c:	e3500004 	cmp	r0, #4
4000fa80:	1a000008 	bne	4000faa8 <_tx_thread_timeout+0x4c>
4000fa84:	e59f0038 	ldr	r0, [pc, #56]	; 4000fac4 <_tx_thread_timeout+0x68>
4000fa88:	e5900000 	ldr	r0, [r0]
4000fa8c:	e2800001 	add	r0, r0, #1
4000fa90:	e59f102c 	ldr	r1, [pc, #44]	; 4000fac4 <_tx_thread_timeout+0x68>
4000fa94:	e5810000 	str	r0, [r1]
4000fa98:	e121f005 	msr	CPSR_c, r5
4000fa9c:	e1a00008 	mov	r0, r8
4000faa0:	ebfffea1 	bl	4000f52c <_tx_thread_system_resume>
4000faa4:	ea000005 	b	4000fac0 <_tx_thread_timeout+0x64>
4000faa8:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000faac:	e121f005 	msr	CPSR_c, r5
4000fab0:	e3570000 	cmp	r7, #0
4000fab4:	0a000001 	beq	4000fac0 <_tx_thread_timeout+0x64>
4000fab8:	e1a00008 	mov	r0, r8
4000fabc:	e12fff37 	blx	r7
4000fac0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000fac4:	40030e70 	.word	0x40030e70

4000fac8 <_tx_timer_activate>:
4000fac8:	e92d4070 	push	{r4, r5, r6, lr}
4000facc:	e1a04000 	mov	r4, r0
4000fad0:	e10f5000 	mrs	r5, CPSR
4000fad4:	e3856080 	orr	r6, r5, #128	; 0x80
4000fad8:	e121f006 	msr	CPSR_c, r6
4000fadc:	e59f1104 	ldr	r1, [pc, #260]	; 4000fbe8 <_tx_timer_activate+0x120>
4000fae0:	e5910000 	ldr	r0, [r1]
4000fae4:	e3500000 	cmp	r0, #0
4000fae8:	0a000031 	beq	4000fbb4 <_tx_timer_activate+0xec>
4000faec:	e59f10f8 	ldr	r1, [pc, #248]	; 4000fbec <_tx_timer_activate+0x124>
4000faf0:	e5911000 	ldr	r1, [r1]
4000faf4:	e2811001 	add	r1, r1, #1
4000faf8:	e59f20ec 	ldr	r2, [pc, #236]	; 4000fbec <_tx_timer_activate+0x124>
4000fafc:	e5821000 	str	r1, [r2]
4000fb00:	e580100c 	str	r1, [r0, #12]
4000fb04:	e59f10e4 	ldr	r1, [pc, #228]	; 4000fbf0 <_tx_timer_activate+0x128>
4000fb08:	e5911000 	ldr	r1, [r1]
4000fb0c:	e3510000 	cmp	r1, #0
4000fb10:	1a000006 	bne	4000fb30 <_tx_timer_activate+0x68>
4000fb14:	e59f10d8 	ldr	r1, [pc, #216]	; 4000fbf4 <_tx_timer_activate+0x12c>
4000fb18:	e5911000 	ldr	r1, [r1]
4000fb1c:	e5801000 	str	r1, [r0]
4000fb20:	e5901000 	ldr	r1, [r0]
4000fb24:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fb28:	e5801004 	str	r1, [r0, #4]
4000fb2c:	ea00000d 	b	4000fb68 <_tx_timer_activate+0xa0>
4000fb30:	e59f10b8 	ldr	r1, [pc, #184]	; 4000fbf0 <_tx_timer_activate+0x128>
4000fb34:	e5911000 	ldr	r1, [r1]
4000fb38:	e59f20b8 	ldr	r2, [pc, #184]	; 4000fbf8 <_tx_timer_activate+0x130>
4000fb3c:	e1510002 	cmp	r1, r2
4000fb40:	2a000004 	bcs	4000fb58 <_tx_timer_activate+0x90>
4000fb44:	e3e01000 	mvn	r1, #0
4000fb48:	e5801000 	str	r1, [r0]
4000fb4c:	e3a01000 	mov	r1, #0
4000fb50:	e5801004 	str	r1, [r0, #4]
4000fb54:	ea000003 	b	4000fb68 <_tx_timer_activate+0xa0>
4000fb58:	e59f1098 	ldr	r1, [pc, #152]	; 4000fbf8 <_tx_timer_activate+0x130>
4000fb5c:	e5801000 	str	r1, [r0]
4000fb60:	e3a01000 	mov	r1, #0
4000fb64:	e5801004 	str	r1, [r0, #4]
4000fb68:	e3a0107a 	mov	r1, #122	; 0x7a
4000fb6c:	e5801008 	str	r1, [r0, #8]
4000fb70:	e5804010 	str	r4, [r0, #16]
4000fb74:	e3a01000 	mov	r1, #0
4000fb78:	e5801014 	str	r1, [r0, #20]
4000fb7c:	e5801018 	str	r1, [r0, #24]
4000fb80:	e580101c 	str	r1, [r0, #28]
4000fb84:	e2800020 	add	r0, r0, #32
4000fb88:	e59f106c 	ldr	r1, [pc, #108]	; 4000fbfc <_tx_timer_activate+0x134>
4000fb8c:	e5911000 	ldr	r1, [r1]
4000fb90:	e1500001 	cmp	r0, r1
4000fb94:	3a000001 	bcc	4000fba0 <_tx_timer_activate+0xd8>
4000fb98:	e59f1060 	ldr	r1, [pc, #96]	; 4000fc00 <_tx_timer_activate+0x138>
4000fb9c:	e5910000 	ldr	r0, [r1]
4000fba0:	e59f1040 	ldr	r1, [pc, #64]	; 4000fbe8 <_tx_timer_activate+0x120>
4000fba4:	e5810000 	str	r0, [r1]
4000fba8:	e59f1054 	ldr	r1, [pc, #84]	; 4000fc04 <_tx_timer_activate+0x13c>
4000fbac:	e5911000 	ldr	r1, [r1]
4000fbb0:	e5810020 	str	r0, [r1, #32]
4000fbb4:	e121f005 	msr	CPSR_c, r5
4000fbb8:	e5940020 	ldr	r0, [r4, #32]
4000fbbc:	e3500000 	cmp	r0, #0
4000fbc0:	1a000002 	bne	4000fbd0 <_tx_timer_activate+0x108>
4000fbc4:	e5940008 	ldr	r0, [r4, #8]
4000fbc8:	e3500000 	cmp	r0, #0
4000fbcc:	1a000001 	bne	4000fbd8 <_tx_timer_activate+0x110>
4000fbd0:	e3a00017 	mov	r0, #23
4000fbd4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fbd8:	e2840008 	add	r0, r4, #8
4000fbdc:	ebffe6c7 	bl	40009700 <_tx_timer_system_activate>
4000fbe0:	e3a00000 	mov	r0, #0
4000fbe4:	eafffffa 	b	4000fbd4 <_tx_timer_activate+0x10c>
4000fbe8:	40030ec0 	.word	0x40030ec0
4000fbec:	40030ec4 	.word	0x40030ec4
4000fbf0:	40030e4c 	.word	0x40030e4c
4000fbf4:	40030e54 	.word	0x40030e54
4000fbf8:	f0f0f0f0 	.word	0xf0f0f0f0
4000fbfc:	40030ebc 	.word	0x40030ebc
4000fc00:	40030eb8 	.word	0x40030eb8
4000fc04:	40030eac 	.word	0x40030eac

4000fc08 <_tx_timer_change>:
4000fc08:	e92d4030 	push	{r4, r5, lr}
4000fc0c:	e1a03000 	mov	r3, r0
4000fc10:	e10fc000 	mrs	ip, CPSR
4000fc14:	e38ce080 	orr	lr, ip, #128	; 0x80
4000fc18:	e121f00e 	msr	CPSR_c, lr
4000fc1c:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fd14 <_tx_timer_change+0x10c>
4000fc20:	e5940000 	ldr	r0, [r4]
4000fc24:	e3500000 	cmp	r0, #0
4000fc28:	0a000031 	beq	4000fcf4 <_tx_timer_change+0xec>
4000fc2c:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fd18 <_tx_timer_change+0x110>
4000fc30:	e5944000 	ldr	r4, [r4]
4000fc34:	e2844001 	add	r4, r4, #1
4000fc38:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fd18 <_tx_timer_change+0x110>
4000fc3c:	e5854000 	str	r4, [r5]
4000fc40:	e580400c 	str	r4, [r0, #12]
4000fc44:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fd1c <_tx_timer_change+0x114>
4000fc48:	e5944000 	ldr	r4, [r4]
4000fc4c:	e3540000 	cmp	r4, #0
4000fc50:	1a000006 	bne	4000fc70 <_tx_timer_change+0x68>
4000fc54:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fd20 <_tx_timer_change+0x118>
4000fc58:	e5944000 	ldr	r4, [r4]
4000fc5c:	e5804000 	str	r4, [r0]
4000fc60:	e5904000 	ldr	r4, [r0]
4000fc64:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000fc68:	e5804004 	str	r4, [r0, #4]
4000fc6c:	ea00000d 	b	4000fca8 <_tx_timer_change+0xa0>
4000fc70:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fd1c <_tx_timer_change+0x114>
4000fc74:	e5944000 	ldr	r4, [r4]
4000fc78:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fd24 <_tx_timer_change+0x11c>
4000fc7c:	e1540005 	cmp	r4, r5
4000fc80:	2a000004 	bcs	4000fc98 <_tx_timer_change+0x90>
4000fc84:	e3e04000 	mvn	r4, #0
4000fc88:	e5804000 	str	r4, [r0]
4000fc8c:	e3a04000 	mov	r4, #0
4000fc90:	e5804004 	str	r4, [r0, #4]
4000fc94:	ea000003 	b	4000fca8 <_tx_timer_change+0xa0>
4000fc98:	e59f4084 	ldr	r4, [pc, #132]	; 4000fd24 <_tx_timer_change+0x11c>
4000fc9c:	e5804000 	str	r4, [r0]
4000fca0:	e3a04000 	mov	r4, #0
4000fca4:	e5804004 	str	r4, [r0, #4]
4000fca8:	e3a0407b 	mov	r4, #123	; 0x7b
4000fcac:	e5804008 	str	r4, [r0, #8]
4000fcb0:	e5803010 	str	r3, [r0, #16]
4000fcb4:	e5801014 	str	r1, [r0, #20]
4000fcb8:	e5802018 	str	r2, [r0, #24]
4000fcbc:	e3a04000 	mov	r4, #0
4000fcc0:	e580401c 	str	r4, [r0, #28]
4000fcc4:	e2800020 	add	r0, r0, #32
4000fcc8:	e59f4058 	ldr	r4, [pc, #88]	; 4000fd28 <_tx_timer_change+0x120>
4000fccc:	e5944000 	ldr	r4, [r4]
4000fcd0:	e1500004 	cmp	r0, r4
4000fcd4:	3a000001 	bcc	4000fce0 <_tx_timer_change+0xd8>
4000fcd8:	e59f404c 	ldr	r4, [pc, #76]	; 4000fd2c <_tx_timer_change+0x124>
4000fcdc:	e5940000 	ldr	r0, [r4]
4000fce0:	e59f402c 	ldr	r4, [pc, #44]	; 4000fd14 <_tx_timer_change+0x10c>
4000fce4:	e5840000 	str	r0, [r4]
4000fce8:	e59f4040 	ldr	r4, [pc, #64]	; 4000fd30 <_tx_timer_change+0x128>
4000fcec:	e5944000 	ldr	r4, [r4]
4000fcf0:	e5840020 	str	r0, [r4, #32]
4000fcf4:	e5930020 	ldr	r0, [r3, #32]
4000fcf8:	e3500000 	cmp	r0, #0
4000fcfc:	1a000001 	bne	4000fd08 <_tx_timer_change+0x100>
4000fd00:	e5831008 	str	r1, [r3, #8]
4000fd04:	e583200c 	str	r2, [r3, #12]
4000fd08:	e121f00c 	msr	CPSR_c, ip
4000fd0c:	e3a00000 	mov	r0, #0
4000fd10:	e8bd8030 	pop	{r4, r5, pc}
4000fd14:	40030ec0 	.word	0x40030ec0
4000fd18:	40030ec4 	.word	0x40030ec4
4000fd1c:	40030e4c 	.word	0x40030e4c
4000fd20:	40030e54 	.word	0x40030e54
4000fd24:	f0f0f0f0 	.word	0xf0f0f0f0
4000fd28:	40030ebc 	.word	0x40030ebc
4000fd2c:	40030eb8 	.word	0x40030eb8
4000fd30:	40030eac 	.word	0x40030eac

4000fd34 <_tx_timer_create>:
4000fd34:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fd38:	e1a04000 	mov	r4, r0
4000fd3c:	e1a05001 	mov	r5, r1
4000fd40:	e1a06002 	mov	r6, r2
4000fd44:	e1a07003 	mov	r7, r3
4000fd48:	e28da030 	add	sl, sp, #48	; 0x30
4000fd4c:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fd50:	e3a0102c 	mov	r1, #44	; 0x2c
4000fd54:	e1a00004 	mov	r0, r4
4000fd58:	eb000eed 	bl	40013914 <__aeabi_memclr4>
4000fd5c:	e5845004 	str	r5, [r4, #4]
4000fd60:	e5848008 	str	r8, [r4, #8]
4000fd64:	e584900c 	str	r9, [r4, #12]
4000fd68:	e5846010 	str	r6, [r4, #16]
4000fd6c:	e5847014 	str	r7, [r4, #20]
4000fd70:	e10fb000 	mrs	fp, CPSR
4000fd74:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fd78:	e58d0008 	str	r0, [sp, #8]
4000fd7c:	e59d0008 	ldr	r0, [sp, #8]
4000fd80:	e121f000 	msr	CPSR_c, r0
4000fd84:	e59f0178 	ldr	r0, [pc, #376]	; 4000ff04 <_tx_timer_create+0x1d0>
4000fd88:	e5840000 	str	r0, [r4]
4000fd8c:	e59f0174 	ldr	r0, [pc, #372]	; 4000ff08 <_tx_timer_create+0x1d4>
4000fd90:	e5900000 	ldr	r0, [r0]
4000fd94:	e3500000 	cmp	r0, #0
4000fd98:	0a00000e 	beq	4000fdd8 <_tx_timer_create+0xa4>
4000fd9c:	e59f0164 	ldr	r0, [pc, #356]	; 4000ff08 <_tx_timer_create+0x1d4>
4000fda0:	e5900000 	ldr	r0, [r0]
4000fda4:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fda8:	e58d0004 	str	r0, [sp, #4]
4000fdac:	e59f0154 	ldr	r0, [pc, #340]	; 4000ff08 <_tx_timer_create+0x1d4>
4000fdb0:	e5900000 	ldr	r0, [r0]
4000fdb4:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fdb8:	e59d0004 	ldr	r0, [sp, #4]
4000fdbc:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fdc0:	e59d0004 	ldr	r0, [sp, #4]
4000fdc4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fdc8:	e59f0138 	ldr	r0, [pc, #312]	; 4000ff08 <_tx_timer_create+0x1d4>
4000fdcc:	e5900000 	ldr	r0, [r0]
4000fdd0:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fdd4:	ea000003 	b	4000fde8 <_tx_timer_create+0xb4>
4000fdd8:	e59f0128 	ldr	r0, [pc, #296]	; 4000ff08 <_tx_timer_create+0x1d4>
4000fddc:	e5804000 	str	r4, [r0]
4000fde0:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fde4:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fde8:	e59f011c 	ldr	r0, [pc, #284]	; 4000ff0c <_tx_timer_create+0x1d8>
4000fdec:	e5900000 	ldr	r0, [r0]
4000fdf0:	e2800001 	add	r0, r0, #1
4000fdf4:	e59f1110 	ldr	r1, [pc, #272]	; 4000ff0c <_tx_timer_create+0x1d8>
4000fdf8:	e5810000 	str	r0, [r1]
4000fdfc:	e1a03008 	mov	r3, r8
4000fe00:	e1a02005 	mov	r2, r5
4000fe04:	e1a01004 	mov	r1, r4
4000fe08:	e3a00002 	mov	r0, #2
4000fe0c:	e58d9000 	str	r9, [sp]
4000fe10:	eb00011b 	bl	40010284 <_tx_trace_object_register>
4000fe14:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ff10 <_tx_timer_create+0x1dc>
4000fe18:	e5910000 	ldr	r0, [r1]
4000fe1c:	e3500000 	cmp	r0, #0
4000fe20:	0a000030 	beq	4000fee8 <_tx_timer_create+0x1b4>
4000fe24:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ff14 <_tx_timer_create+0x1e0>
4000fe28:	e5911000 	ldr	r1, [r1]
4000fe2c:	e2811001 	add	r1, r1, #1
4000fe30:	e59f20dc 	ldr	r2, [pc, #220]	; 4000ff14 <_tx_timer_create+0x1e0>
4000fe34:	e5821000 	str	r1, [r2]
4000fe38:	e580100c 	str	r1, [r0, #12]
4000fe3c:	e59f10d4 	ldr	r1, [pc, #212]	; 4000ff18 <_tx_timer_create+0x1e4>
4000fe40:	e5911000 	ldr	r1, [r1]
4000fe44:	e3510000 	cmp	r1, #0
4000fe48:	1a000006 	bne	4000fe68 <_tx_timer_create+0x134>
4000fe4c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ff1c <_tx_timer_create+0x1e8>
4000fe50:	e5911000 	ldr	r1, [r1]
4000fe54:	e5801000 	str	r1, [r0]
4000fe58:	e5901000 	ldr	r1, [r0]
4000fe5c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fe60:	e5801004 	str	r1, [r0, #4]
4000fe64:	ea00000d 	b	4000fea0 <_tx_timer_create+0x16c>
4000fe68:	e59f10a8 	ldr	r1, [pc, #168]	; 4000ff18 <_tx_timer_create+0x1e4>
4000fe6c:	e5911000 	ldr	r1, [r1]
4000fe70:	e59f20a8 	ldr	r2, [pc, #168]	; 4000ff20 <_tx_timer_create+0x1ec>
4000fe74:	e1510002 	cmp	r1, r2
4000fe78:	2a000004 	bcs	4000fe90 <_tx_timer_create+0x15c>
4000fe7c:	e3e01000 	mvn	r1, #0
4000fe80:	e5801000 	str	r1, [r0]
4000fe84:	e3a01000 	mov	r1, #0
4000fe88:	e5801004 	str	r1, [r0, #4]
4000fe8c:	ea000003 	b	4000fea0 <_tx_timer_create+0x16c>
4000fe90:	e59f1088 	ldr	r1, [pc, #136]	; 4000ff20 <_tx_timer_create+0x1ec>
4000fe94:	e5801000 	str	r1, [r0]
4000fe98:	e3a01000 	mov	r1, #0
4000fe9c:	e5801004 	str	r1, [r0, #4]
4000fea0:	e3a0107c 	mov	r1, #124	; 0x7c
4000fea4:	e5801008 	str	r1, [r0, #8]
4000fea8:	e5804010 	str	r4, [r0, #16]
4000feac:	e5808014 	str	r8, [r0, #20]
4000feb0:	e5809018 	str	r9, [r0, #24]
4000feb4:	e580a01c 	str	sl, [r0, #28]
4000feb8:	e2800020 	add	r0, r0, #32
4000febc:	e59f1060 	ldr	r1, [pc, #96]	; 4000ff24 <_tx_timer_create+0x1f0>
4000fec0:	e5911000 	ldr	r1, [r1]
4000fec4:	e1500001 	cmp	r0, r1
4000fec8:	3a000001 	bcc	4000fed4 <_tx_timer_create+0x1a0>
4000fecc:	e59f1054 	ldr	r1, [pc, #84]	; 4000ff28 <_tx_timer_create+0x1f4>
4000fed0:	e5910000 	ldr	r0, [r1]
4000fed4:	e59f1034 	ldr	r1, [pc, #52]	; 4000ff10 <_tx_timer_create+0x1dc>
4000fed8:	e5810000 	str	r0, [r1]
4000fedc:	e59f1048 	ldr	r1, [pc, #72]	; 4000ff2c <_tx_timer_create+0x1f8>
4000fee0:	e5911000 	ldr	r1, [r1]
4000fee4:	e5810020 	str	r0, [r1, #32]
4000fee8:	e121f00b 	msr	CPSR_c, fp
4000feec:	e35a0000 	cmp	sl, #0
4000fef0:	0a000001 	beq	4000fefc <_tx_timer_create+0x1c8>
4000fef4:	e2840008 	add	r0, r4, #8
4000fef8:	ebffe600 	bl	40009700 <_tx_timer_system_activate>
4000fefc:	e3a00000 	mov	r0, #0
4000ff00:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ff04:	4154494d 	.word	0x4154494d
4000ff08:	40030e98 	.word	0x40030e98
4000ff0c:	40030e9c 	.word	0x40030e9c
4000ff10:	40030ec0 	.word	0x40030ec0
4000ff14:	40030ec4 	.word	0x40030ec4
4000ff18:	40030e4c 	.word	0x40030e4c
4000ff1c:	40030e54 	.word	0x40030e54
4000ff20:	f0f0f0f0 	.word	0xf0f0f0f0
4000ff24:	40030ebc 	.word	0x40030ebc
4000ff28:	40030eb8 	.word	0x40030eb8
4000ff2c:	40030eac 	.word	0x40030eac

4000ff30 <_tx_timer_deactivate>:
4000ff30:	e92d4018 	push	{r3, r4, lr}
4000ff34:	e1a01000 	mov	r1, r0
4000ff38:	e281c008 	add	ip, r1, #8
4000ff3c:	e10f2000 	mrs	r2, CPSR
4000ff40:	e3823080 	orr	r3, r2, #128	; 0x80
4000ff44:	e121f003 	msr	CPSR_c, r3
4000ff48:	e59fe228 	ldr	lr, [pc, #552]	; 40010178 <_tx_timer_deactivate+0x248>
4000ff4c:	e59e0000 	ldr	r0, [lr]
4000ff50:	e3500000 	cmp	r0, #0
4000ff54:	0a000031 	beq	40010020 <_tx_timer_deactivate+0xf0>
4000ff58:	e59fe21c 	ldr	lr, [pc, #540]	; 4001017c <_tx_timer_deactivate+0x24c>
4000ff5c:	e59ee000 	ldr	lr, [lr]
4000ff60:	e28ee001 	add	lr, lr, #1
4000ff64:	e59f4210 	ldr	r4, [pc, #528]	; 4001017c <_tx_timer_deactivate+0x24c>
4000ff68:	e584e000 	str	lr, [r4]
4000ff6c:	e580e00c 	str	lr, [r0, #12]
4000ff70:	e59fe208 	ldr	lr, [pc, #520]	; 40010180 <_tx_timer_deactivate+0x250>
4000ff74:	e59ee000 	ldr	lr, [lr]
4000ff78:	e35e0000 	cmp	lr, #0
4000ff7c:	1a000006 	bne	4000ff9c <_tx_timer_deactivate+0x6c>
4000ff80:	e59fe1fc 	ldr	lr, [pc, #508]	; 40010184 <_tx_timer_deactivate+0x254>
4000ff84:	e59ee000 	ldr	lr, [lr]
4000ff88:	e580e000 	str	lr, [r0]
4000ff8c:	e590e000 	ldr	lr, [r0]
4000ff90:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000ff94:	e580e004 	str	lr, [r0, #4]
4000ff98:	ea00000d 	b	4000ffd4 <_tx_timer_deactivate+0xa4>
4000ff9c:	e59fe1dc 	ldr	lr, [pc, #476]	; 40010180 <_tx_timer_deactivate+0x250>
4000ffa0:	e59ee000 	ldr	lr, [lr]
4000ffa4:	e59f41dc 	ldr	r4, [pc, #476]	; 40010188 <_tx_timer_deactivate+0x258>
4000ffa8:	e15e0004 	cmp	lr, r4
4000ffac:	2a000004 	bcs	4000ffc4 <_tx_timer_deactivate+0x94>
4000ffb0:	e3e0e000 	mvn	lr, #0
4000ffb4:	e580e000 	str	lr, [r0]
4000ffb8:	e3a0e000 	mov	lr, #0
4000ffbc:	e580e004 	str	lr, [r0, #4]
4000ffc0:	ea000003 	b	4000ffd4 <_tx_timer_deactivate+0xa4>
4000ffc4:	e59fe1bc 	ldr	lr, [pc, #444]	; 40010188 <_tx_timer_deactivate+0x258>
4000ffc8:	e580e000 	str	lr, [r0]
4000ffcc:	e3a0e000 	mov	lr, #0
4000ffd0:	e580e004 	str	lr, [r0, #4]
4000ffd4:	e3a0e07d 	mov	lr, #125	; 0x7d
4000ffd8:	e580e008 	str	lr, [r0, #8]
4000ffdc:	e5801010 	str	r1, [r0, #16]
4000ffe0:	e580d014 	str	sp, [r0, #20]
4000ffe4:	e3a0e000 	mov	lr, #0
4000ffe8:	e580e018 	str	lr, [r0, #24]
4000ffec:	e580e01c 	str	lr, [r0, #28]
4000fff0:	e2800020 	add	r0, r0, #32
4000fff4:	e59fe190 	ldr	lr, [pc, #400]	; 4001018c <_tx_timer_deactivate+0x25c>
4000fff8:	e59ee000 	ldr	lr, [lr]
4000fffc:	e150000e 	cmp	r0, lr
40010000:	3a000001 	bcc	4001000c <_tx_timer_deactivate+0xdc>
40010004:	e59fe184 	ldr	lr, [pc, #388]	; 40010190 <_tx_timer_deactivate+0x260>
40010008:	e59e0000 	ldr	r0, [lr]
4001000c:	e59fe164 	ldr	lr, [pc, #356]	; 40010178 <_tx_timer_deactivate+0x248>
40010010:	e58e0000 	str	r0, [lr]
40010014:	e59fe178 	ldr	lr, [pc, #376]	; 40010194 <_tx_timer_deactivate+0x264>
40010018:	e59ee000 	ldr	lr, [lr]
4001001c:	e58e0020 	str	r0, [lr, #32]
40010020:	e59fe170 	ldr	lr, [pc, #368]	; 40010198 <_tx_timer_deactivate+0x268>
40010024:	e59c0018 	ldr	r0, [ip, #24]
40010028:	e59ee000 	ldr	lr, [lr]
4001002c:	e150000e 	cmp	r0, lr
40010030:	3a00002b 	bcc	400100e4 <_tx_timer_deactivate+0x1b4>
40010034:	e59fe160 	ldr	lr, [pc, #352]	; 4001019c <_tx_timer_deactivate+0x26c>
40010038:	e59c0018 	ldr	r0, [ip, #24]
4001003c:	e59ee000 	ldr	lr, [lr]
40010040:	e150000e 	cmp	r0, lr
40010044:	2a000026 	bcs	400100e4 <_tx_timer_deactivate+0x1b4>
40010048:	e59fe150 	ldr	lr, [pc, #336]	; 400101a0 <_tx_timer_deactivate+0x270>
4001004c:	e59c0018 	ldr	r0, [ip, #24]
40010050:	e59ee000 	ldr	lr, [lr]
40010054:	e150000e 	cmp	r0, lr
40010058:	3a000007 	bcc	4001007c <_tx_timer_deactivate+0x14c>
4001005c:	e59fe13c 	ldr	lr, [pc, #316]	; 400101a0 <_tx_timer_deactivate+0x270>
40010060:	e59c0018 	ldr	r0, [ip, #24]
40010064:	e59ee000 	ldr	lr, [lr]
40010068:	e040000e 	sub	r0, r0, lr
4001006c:	e3a0e001 	mov	lr, #1
40010070:	e08e0140 	add	r0, lr, r0, asr #2
40010074:	e58d0000 	str	r0, [sp]
40010078:	ea00000e 	b	400100b8 <_tx_timer_deactivate+0x188>
4001007c:	e59fe114 	ldr	lr, [pc, #276]	; 40010198 <_tx_timer_deactivate+0x268>
40010080:	e59c0018 	ldr	r0, [ip, #24]
40010084:	e59ee000 	ldr	lr, [lr]
40010088:	e040000e 	sub	r0, r0, lr
4001008c:	e1a00140 	asr	r0, r0, #2
40010090:	e58d0000 	str	r0, [sp]
40010094:	e59f0100 	ldr	r0, [pc, #256]	; 4001019c <_tx_timer_deactivate+0x26c>
40010098:	e5900000 	ldr	r0, [r0]
4001009c:	e59fe0fc 	ldr	lr, [pc, #252]	; 400101a0 <_tx_timer_deactivate+0x270>
400100a0:	e59ee000 	ldr	lr, [lr]
400100a4:	e040000e 	sub	r0, r0, lr
400100a8:	e59de000 	ldr	lr, [sp]
400100ac:	e08e0140 	add	r0, lr, r0, asr #2
400100b0:	e2800001 	add	r0, r0, #1
400100b4:	e58d0000 	str	r0, [sp]
400100b8:	e59c0000 	ldr	r0, [ip]
400100bc:	e3500020 	cmp	r0, #32
400100c0:	9a000005 	bls	400100dc <_tx_timer_deactivate+0x1ac>
400100c4:	e59c0000 	ldr	r0, [ip]
400100c8:	e2400020 	sub	r0, r0, #32
400100cc:	e59de000 	ldr	lr, [sp]
400100d0:	e080000e 	add	r0, r0, lr
400100d4:	e58c0000 	str	r0, [ip]
400100d8:	ea000001 	b	400100e4 <_tx_timer_deactivate+0x1b4>
400100dc:	e59d0000 	ldr	r0, [sp]
400100e0:	e58c0000 	str	r0, [ip]
400100e4:	e59c0018 	ldr	r0, [ip, #24]
400100e8:	e3500000 	cmp	r0, #0
400100ec:	0a00001e 	beq	4001016c <_tx_timer_deactivate+0x23c>
400100f0:	e59c0010 	ldr	r0, [ip, #16]
400100f4:	e150000c 	cmp	r0, ip
400100f8:	1a000009 	bne	40010124 <_tx_timer_deactivate+0x1f4>
400100fc:	e59c0018 	ldr	r0, [ip, #24]
40010100:	e5900000 	ldr	r0, [r0]
40010104:	e150000c 	cmp	r0, ip
40010108:	1a000002 	bne	40010118 <_tx_timer_deactivate+0x1e8>
4001010c:	e3a00000 	mov	r0, #0
40010110:	e59ce018 	ldr	lr, [ip, #24]
40010114:	e58e0000 	str	r0, [lr]
40010118:	e3a00000 	mov	r0, #0
4001011c:	e58c0018 	str	r0, [ip, #24]
40010120:	ea000011 	b	4001016c <_tx_timer_deactivate+0x23c>
40010124:	e59c0014 	ldr	r0, [ip, #20]
40010128:	e59ce010 	ldr	lr, [ip, #16]
4001012c:	e58e0014 	str	r0, [lr, #20]
40010130:	e59c0010 	ldr	r0, [ip, #16]
40010134:	e59ce014 	ldr	lr, [ip, #20]
40010138:	e58e0010 	str	r0, [lr, #16]
4001013c:	e59c0018 	ldr	r0, [ip, #24]
40010140:	e5900000 	ldr	r0, [r0]
40010144:	e150000c 	cmp	r0, ip
40010148:	1a000005 	bne	40010164 <_tx_timer_deactivate+0x234>
4001014c:	e59c0018 	ldr	r0, [ip, #24]
40010150:	e59ce010 	ldr	lr, [ip, #16]
40010154:	e58e0018 	str	r0, [lr, #24]
40010158:	e59c0010 	ldr	r0, [ip, #16]
4001015c:	e59ce018 	ldr	lr, [ip, #24]
40010160:	e58e0000 	str	r0, [lr]
40010164:	e3a00000 	mov	r0, #0
40010168:	e58c0018 	str	r0, [ip, #24]
4001016c:	e121f002 	msr	CPSR_c, r2
40010170:	e3a00000 	mov	r0, #0
40010174:	e8bd8018 	pop	{r3, r4, pc}
40010178:	40030ec0 	.word	0x40030ec0
4001017c:	40030ec4 	.word	0x40030ec4
40010180:	40030e4c 	.word	0x40030e4c
40010184:	40030e54 	.word	0x40030e54
40010188:	f0f0f0f0 	.word	0xf0f0f0f0
4001018c:	40030ebc 	.word	0x40030ebc
40010190:	40030eb8 	.word	0x40030eb8
40010194:	40030eac 	.word	0x40030eac
40010198:	40030e88 	.word	0x40030e88
4001019c:	40030e8c 	.word	0x40030e8c
400101a0:	40030e90 	.word	0x40030e90

400101a4 <_tx_timer_expiration_process>:
400101a4:	e92d4070 	push	{r4, r5, r6, lr}
400101a8:	e10f4000 	mrs	r4, CPSR
400101ac:	e3845080 	orr	r5, r4, #128	; 0x80
400101b0:	e121f005 	msr	CPSR_c, r5
400101b4:	e59f001c 	ldr	r0, [pc, #28]	; 400101d8 <_tx_timer_expiration_process+0x34>
400101b8:	e5900000 	ldr	r0, [r0]
400101bc:	e2800001 	add	r0, r0, #1
400101c0:	e59f1010 	ldr	r1, [pc, #16]	; 400101d8 <_tx_timer_expiration_process+0x34>
400101c4:	e5810000 	str	r0, [r1]
400101c8:	e121f004 	msr	CPSR_c, r4
400101cc:	e59f0008 	ldr	r0, [pc, #8]	; 400101dc <_tx_timer_expiration_process+0x38>
400101d0:	ebfffcd5 	bl	4000f52c <_tx_thread_system_resume>
400101d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400101d8:	40030e70 	.word	0x40030e70
400101dc:	40032994 	.word	0x40032994

400101e0 <_tx_timer_system_deactivate>:
400101e0:	e1a01000 	mov	r1, r0
400101e4:	e10f2000 	mrs	r2, CPSR
400101e8:	e3823080 	orr	r3, r2, #128	; 0x80
400101ec:	e121f003 	msr	CPSR_c, r3
400101f0:	e5910018 	ldr	r0, [r1, #24]
400101f4:	e3500000 	cmp	r0, #0
400101f8:	0a00001e 	beq	40010278 <_tx_timer_system_deactivate+0x98>
400101fc:	e5910010 	ldr	r0, [r1, #16]
40010200:	e1500001 	cmp	r0, r1
40010204:	1a000009 	bne	40010230 <_tx_timer_system_deactivate+0x50>
40010208:	e5910018 	ldr	r0, [r1, #24]
4001020c:	e5900000 	ldr	r0, [r0]
40010210:	e1500001 	cmp	r0, r1
40010214:	1a000002 	bne	40010224 <_tx_timer_system_deactivate+0x44>
40010218:	e3a00000 	mov	r0, #0
4001021c:	e591c018 	ldr	ip, [r1, #24]
40010220:	e58c0000 	str	r0, [ip]
40010224:	e3a00000 	mov	r0, #0
40010228:	e5810018 	str	r0, [r1, #24]
4001022c:	ea000011 	b	40010278 <_tx_timer_system_deactivate+0x98>
40010230:	e5910014 	ldr	r0, [r1, #20]
40010234:	e591c010 	ldr	ip, [r1, #16]
40010238:	e58c0014 	str	r0, [ip, #20]
4001023c:	e5910010 	ldr	r0, [r1, #16]
40010240:	e591c014 	ldr	ip, [r1, #20]
40010244:	e58c0010 	str	r0, [ip, #16]
40010248:	e5910018 	ldr	r0, [r1, #24]
4001024c:	e5900000 	ldr	r0, [r0]
40010250:	e1500001 	cmp	r0, r1
40010254:	1a000005 	bne	40010270 <_tx_timer_system_deactivate+0x90>
40010258:	e5910018 	ldr	r0, [r1, #24]
4001025c:	e591c010 	ldr	ip, [r1, #16]
40010260:	e58c0018 	str	r0, [ip, #24]
40010264:	e5910010 	ldr	r0, [r1, #16]
40010268:	e591c018 	ldr	ip, [r1, #24]
4001026c:	e58c0000 	str	r0, [ip]
40010270:	e3a00000 	mov	r0, #0
40010274:	e5810018 	str	r0, [r1, #24]
40010278:	e121f002 	msr	CPSR_c, r2
4001027c:	e3a00000 	mov	r0, #0
40010280:	e12fff1e 	bx	lr

40010284 <_tx_trace_object_register>:
40010284:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40010288:	e1a04000 	mov	r4, r0
4001028c:	e1a05001 	mov	r5, r1
40010290:	e1a06002 	mov	r6, r2
40010294:	e1a07003 	mov	r7, r3
40010298:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
4001029c:	e59f0184 	ldr	r0, [pc, #388]	; 40010428 <_tx_trace_object_register+0x1a4>
400102a0:	e5900000 	ldr	r0, [r0]
400102a4:	e3500000 	cmp	r0, #0
400102a8:	1a000000 	bne	400102b0 <_tx_trace_object_register+0x2c>
400102ac:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400102b0:	e59f1174 	ldr	r1, [pc, #372]	; 4001042c <_tx_trace_object_register+0x1a8>
400102b4:	e5911000 	ldr	r1, [r1]
400102b8:	e59f2168 	ldr	r2, [pc, #360]	; 40010428 <_tx_trace_object_register+0x1a4>
400102bc:	e5922000 	ldr	r2, [r2]
400102c0:	e0410002 	sub	r0, r1, r2
400102c4:	e3a01030 	mov	r1, #48	; 0x30
400102c8:	eb0002bd 	bl	40010dc4 <__aeabi_idivmod>
400102cc:	e1a0a000 	mov	sl, r0
400102d0:	e1a0b00a 	mov	fp, sl
400102d4:	e3a09000 	mov	r9, #0
400102d8:	ea00001b 	b	4001034c <_tx_trace_object_register+0xc8>
400102dc:	e0890089 	add	r0, r9, r9, lsl #1
400102e0:	e59f1140 	ldr	r1, [pc, #320]	; 40010428 <_tx_trace_object_register+0x1a4>
400102e4:	e5911000 	ldr	r1, [r1]
400102e8:	e0810200 	add	r0, r1, r0, lsl #4
400102ec:	e5900004 	ldr	r0, [r0, #4]
400102f0:	e1500005 	cmp	r0, r5
400102f4:	1a000001 	bne	40010300 <_tx_trace_object_register+0x7c>
400102f8:	e1a0b009 	mov	fp, r9
400102fc:	ea000014 	b	40010354 <_tx_trace_object_register+0xd0>
40010300:	e0890089 	add	r0, r9, r9, lsl #1
40010304:	e59f111c 	ldr	r1, [pc, #284]	; 40010428 <_tx_trace_object_register+0x1a4>
40010308:	e5911000 	ldr	r1, [r1]
4001030c:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
40010310:	e3500000 	cmp	r0, #0
40010314:	0a00000b 	beq	40010348 <_tx_trace_object_register+0xc4>
40010318:	e15b000a 	cmp	fp, sl
4001031c:	1a000001 	bne	40010328 <_tx_trace_object_register+0xa4>
40010320:	e1a0b009 	mov	fp, r9
40010324:	ea000007 	b	40010348 <_tx_trace_object_register+0xc4>
40010328:	e08b008b 	add	r0, fp, fp, lsl #1
4001032c:	e59f10f4 	ldr	r1, [pc, #244]	; 40010428 <_tx_trace_object_register+0x1a4>
40010330:	e5911000 	ldr	r1, [r1]
40010334:	e0810200 	add	r0, r1, r0, lsl #4
40010338:	e5d00001 	ldrb	r0, [r0, #1]
4001033c:	e3500000 	cmp	r0, #0
40010340:	0a000000 	beq	40010348 <_tx_trace_object_register+0xc4>
40010344:	e1a0b009 	mov	fp, r9
40010348:	e2899001 	add	r9, r9, #1
4001034c:	e159000a 	cmp	r9, sl
40010350:	3affffe1 	bcc	400102dc <_tx_trace_object_register+0x58>
40010354:	e1a00000 	nop			; (mov r0, r0)
40010358:	e15b000a 	cmp	fp, sl
4001035c:	2a000030 	bcs	40010424 <_tx_trace_object_register+0x1a0>
40010360:	e3a00000 	mov	r0, #0
40010364:	e08b108b 	add	r1, fp, fp, lsl #1
40010368:	e59f20b8 	ldr	r2, [pc, #184]	; 40010428 <_tx_trace_object_register+0x1a4>
4001036c:	e5922000 	ldr	r2, [r2]
40010370:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010374:	e08b008b 	add	r0, fp, fp, lsl #1
40010378:	e59f10a8 	ldr	r1, [pc, #168]	; 40010428 <_tx_trace_object_register+0x1a4>
4001037c:	e5911000 	ldr	r1, [r1]
40010380:	e0810200 	add	r0, r1, r0, lsl #4
40010384:	e5c04001 	strb	r4, [r0, #1]
40010388:	e08b008b 	add	r0, fp, fp, lsl #1
4001038c:	e59f1094 	ldr	r1, [pc, #148]	; 40010428 <_tx_trace_object_register+0x1a4>
40010390:	e5911000 	ldr	r1, [r1]
40010394:	e0810200 	add	r0, r1, r0, lsl #4
40010398:	e5805004 	str	r5, [r0, #4]
4001039c:	e08b008b 	add	r0, fp, fp, lsl #1
400103a0:	e59f1080 	ldr	r1, [pc, #128]	; 40010428 <_tx_trace_object_register+0x1a4>
400103a4:	e5911000 	ldr	r1, [r1]
400103a8:	e0810200 	add	r0, r1, r0, lsl #4
400103ac:	e5807008 	str	r7, [r0, #8]
400103b0:	e08b008b 	add	r0, fp, fp, lsl #1
400103b4:	e59f106c 	ldr	r1, [pc, #108]	; 40010428 <_tx_trace_object_register+0x1a4>
400103b8:	e5911000 	ldr	r1, [r1]
400103bc:	e0810200 	add	r0, r1, r0, lsl #4
400103c0:	e580800c 	str	r8, [r0, #12]
400103c4:	e3a09000 	mov	r9, #0
400103c8:	ea00000b 	b	400103fc <_tx_trace_object_register+0x178>
400103cc:	e7d60009 	ldrb	r0, [r6, r9]
400103d0:	e08b108b 	add	r1, fp, fp, lsl #1
400103d4:	e59f204c 	ldr	r2, [pc, #76]	; 40010428 <_tx_trace_object_register+0x1a4>
400103d8:	e5922000 	ldr	r2, [r2]
400103dc:	e0821201 	add	r1, r2, r1, lsl #4
400103e0:	e2811010 	add	r1, r1, #16
400103e4:	e7c10009 	strb	r0, [r1, r9]
400103e8:	e7d60009 	ldrb	r0, [r6, r9]
400103ec:	e3500000 	cmp	r0, #0
400103f0:	1a000000 	bne	400103f8 <_tx_trace_object_register+0x174>
400103f4:	ea000002 	b	40010404 <_tx_trace_object_register+0x180>
400103f8:	e2899001 	add	r9, r9, #1
400103fc:	e359001f 	cmp	r9, #31
40010400:	3afffff1 	bcc	400103cc <_tx_trace_object_register+0x148>
40010404:	e1a00000 	nop			; (mov r0, r0)
40010408:	e3a00000 	mov	r0, #0
4001040c:	e08b108b 	add	r1, fp, fp, lsl #1
40010410:	e59f2010 	ldr	r2, [pc, #16]	; 40010428 <_tx_trace_object_register+0x1a4>
40010414:	e5922000 	ldr	r2, [r2]
40010418:	e0821201 	add	r1, r2, r1, lsl #4
4001041c:	e2811010 	add	r1, r1, #16
40010420:	e7c10009 	strb	r0, [r1, r9]
40010424:	eaffffa0 	b	400102ac <_tx_trace_object_register+0x28>
40010428:	40030eb0 	.word	0x40030eb0
4001042c:	40030eb4 	.word	0x40030eb4

40010430 <_tx_trace_object_unregister>:
40010430:	e92d4070 	push	{r4, r5, r6, lr}
40010434:	e1a04000 	mov	r4, r0
40010438:	e59f007c 	ldr	r0, [pc, #124]	; 400104bc <_tx_trace_object_unregister+0x8c>
4001043c:	e5900000 	ldr	r0, [r0]
40010440:	e3500000 	cmp	r0, #0
40010444:	1a000000 	bne	4001044c <_tx_trace_object_unregister+0x1c>
40010448:	e8bd8070 	pop	{r4, r5, r6, pc}
4001044c:	e59f106c 	ldr	r1, [pc, #108]	; 400104c0 <_tx_trace_object_unregister+0x90>
40010450:	e5911000 	ldr	r1, [r1]
40010454:	e59f2060 	ldr	r2, [pc, #96]	; 400104bc <_tx_trace_object_unregister+0x8c>
40010458:	e5922000 	ldr	r2, [r2]
4001045c:	e0410002 	sub	r0, r1, r2
40010460:	e3a01030 	mov	r1, #48	; 0x30
40010464:	eb000256 	bl	40010dc4 <__aeabi_idivmod>
40010468:	e1a05000 	mov	r5, r0
4001046c:	e3a06000 	mov	r6, #0
40010470:	ea00000d 	b	400104ac <_tx_trace_object_unregister+0x7c>
40010474:	e0860086 	add	r0, r6, r6, lsl #1
40010478:	e59f103c 	ldr	r1, [pc, #60]	; 400104bc <_tx_trace_object_unregister+0x8c>
4001047c:	e5911000 	ldr	r1, [r1]
40010480:	e0810200 	add	r0, r1, r0, lsl #4
40010484:	e5900004 	ldr	r0, [r0, #4]
40010488:	e1500004 	cmp	r0, r4
4001048c:	1a000005 	bne	400104a8 <_tx_trace_object_unregister+0x78>
40010490:	e3a00001 	mov	r0, #1
40010494:	e0861086 	add	r1, r6, r6, lsl #1
40010498:	e59f201c 	ldr	r2, [pc, #28]	; 400104bc <_tx_trace_object_unregister+0x8c>
4001049c:	e5922000 	ldr	r2, [r2]
400104a0:	e7c20201 	strb	r0, [r2, r1, lsl #4]
400104a4:	ea000002 	b	400104b4 <_tx_trace_object_unregister+0x84>
400104a8:	e2866001 	add	r6, r6, #1
400104ac:	e1560005 	cmp	r6, r5
400104b0:	3affffef 	bcc	40010474 <_tx_trace_object_unregister+0x44>
400104b4:	e1a00000 	nop			; (mov r0, r0)
400104b8:	eaffffe2 	b	40010448 <_tx_trace_object_unregister+0x18>
400104bc:	40030eb0 	.word	0x40030eb0
400104c0:	40030eb4 	.word	0x40030eb4

400104c4 <_tx_thread_stack_build>:
400104c4:	e5902010 	ldr	r2, [r0, #16]
400104c8:	e3c22007 	bic	r2, r2, #7
400104cc:	e242204c 	sub	r2, r2, #76	; 0x4c
400104d0:	e3a03001 	mov	r3, #1
400104d4:	e5823000 	str	r3, [r2]
400104d8:	e3a03000 	mov	r3, #0
400104dc:	e5823008 	str	r3, [r2, #8]
400104e0:	e582300c 	str	r3, [r2, #12]
400104e4:	e5823010 	str	r3, [r2, #16]
400104e8:	e5823014 	str	r3, [r2, #20]
400104ec:	e5823018 	str	r3, [r2, #24]
400104f0:	e582301c 	str	r3, [r2, #28]
400104f4:	e5823020 	str	r3, [r2, #32]
400104f8:	e5823024 	str	r3, [r2, #36]	; 0x24
400104fc:	e5823028 	str	r3, [r2, #40]	; 0x28
40010500:	e582302c 	str	r3, [r2, #44]	; 0x2c
40010504:	e590300c 	ldr	r3, [r0, #12]
40010508:	e5823030 	str	r3, [r2, #48]	; 0x30
4001050c:	e3a03000 	mov	r3, #0
40010510:	e5823034 	str	r3, [r2, #52]	; 0x34
40010514:	e5823038 	str	r3, [r2, #56]	; 0x38
40010518:	e582303c 	str	r3, [r2, #60]	; 0x3c
4001051c:	e5821040 	str	r1, [r2, #64]	; 0x40
40010520:	e5823044 	str	r3, [r2, #68]	; 0x44
40010524:	e10f1000 	mrs	r1, CPSR
40010528:	e3c1109f 	bic	r1, r1, #159	; 0x9f
4001052c:	e3813013 	orr	r3, r1, #19
40010530:	e5823004 	str	r3, [r2, #4]
40010534:	e5802008 	str	r2, [r0, #8]
40010538:	e12fff1e 	bx	lr

4001053c <_tx_event_flags_cleanup>:
4001053c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010540:	e1a04000 	mov	r4, r0
40010544:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010548:	e10f5000 	mrs	r5, CPSR
4001054c:	e3856080 	orr	r6, r5, #128	; 0x80
40010550:	e121f006 	msr	CPSR_c, r6
40010554:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010558:	e3500000 	cmp	r0, #0
4001055c:	0a000026 	beq	400105fc <_tx_event_flags_cleanup+0xc0>
40010560:	e3570000 	cmp	r7, #0
40010564:	0a000024 	beq	400105fc <_tx_event_flags_cleanup+0xc0>
40010568:	e5970000 	ldr	r0, [r7]
4001056c:	e59f1090 	ldr	r1, [pc, #144]	; 40010604 <_tx_event_flags_cleanup+0xc8>
40010570:	e1500001 	cmp	r0, r1
40010574:	1a000020 	bne	400105fc <_tx_event_flags_cleanup+0xc0>
40010578:	e3a00000 	mov	r0, #0
4001057c:	e5840068 	str	r0, [r4, #104]	; 0x68
40010580:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010584:	e1500004 	cmp	r0, r4
40010588:	1a000002 	bne	40010598 <_tx_event_flags_cleanup+0x5c>
4001058c:	e3a00000 	mov	r0, #0
40010590:	e5870010 	str	r0, [r7, #16]
40010594:	ea000007 	b	400105b8 <_tx_event_flags_cleanup+0x7c>
40010598:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001059c:	e5870010 	str	r0, [r7, #16]
400105a0:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400105a4:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400105a8:	e5810074 	str	r0, [r1, #116]	; 0x74
400105ac:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400105b0:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400105b4:	e5810070 	str	r0, [r1, #112]	; 0x70
400105b8:	e5970014 	ldr	r0, [r7, #20]
400105bc:	e2400001 	sub	r0, r0, #1
400105c0:	e5870014 	str	r0, [r7, #20]
400105c4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400105c8:	e3500007 	cmp	r0, #7
400105cc:	1a00000a 	bne	400105fc <_tx_event_flags_cleanup+0xc0>
400105d0:	e3a00007 	mov	r0, #7
400105d4:	e5840084 	str	r0, [r4, #132]	; 0x84
400105d8:	e59f0028 	ldr	r0, [pc, #40]	; 40010608 <_tx_event_flags_cleanup+0xcc>
400105dc:	e5900000 	ldr	r0, [r0]
400105e0:	e2800001 	add	r0, r0, #1
400105e4:	e59f101c 	ldr	r1, [pc, #28]	; 40010608 <_tx_event_flags_cleanup+0xcc>
400105e8:	e5810000 	str	r0, [r1]
400105ec:	e121f005 	msr	CPSR_c, r5
400105f0:	e1a00004 	mov	r0, r4
400105f4:	ebfffbcc 	bl	4000f52c <_tx_thread_system_resume>
400105f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400105fc:	e121f005 	msr	CPSR_c, r5
40010600:	eafffffc 	b	400105f8 <_tx_event_flags_cleanup+0xbc>
40010604:	4456444e 	.word	0x4456444e
40010608:	40030e70 	.word	0x40030e70

4001060c <_tx_mutex_cleanup>:
4001060c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010610:	e1a04000 	mov	r4, r0
40010614:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010618:	e10f5000 	mrs	r5, CPSR
4001061c:	e3856080 	orr	r6, r5, #128	; 0x80
40010620:	e121f006 	msr	CPSR_c, r6
40010624:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010628:	e3500000 	cmp	r0, #0
4001062c:	0a000026 	beq	400106cc <_tx_mutex_cleanup+0xc0>
40010630:	e3570000 	cmp	r7, #0
40010634:	0a000024 	beq	400106cc <_tx_mutex_cleanup+0xc0>
40010638:	e5970000 	ldr	r0, [r7]
4001063c:	e59f1090 	ldr	r1, [pc, #144]	; 400106d4 <_tx_mutex_cleanup+0xc8>
40010640:	e1500001 	cmp	r0, r1
40010644:	1a000020 	bne	400106cc <_tx_mutex_cleanup+0xc0>
40010648:	e3a00000 	mov	r0, #0
4001064c:	e5840068 	str	r0, [r4, #104]	; 0x68
40010650:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010654:	e1500004 	cmp	r0, r4
40010658:	1a000002 	bne	40010668 <_tx_mutex_cleanup+0x5c>
4001065c:	e3a00000 	mov	r0, #0
40010660:	e587001c 	str	r0, [r7, #28]
40010664:	ea000007 	b	40010688 <_tx_mutex_cleanup+0x7c>
40010668:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001066c:	e587001c 	str	r0, [r7, #28]
40010670:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010674:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010678:	e5810074 	str	r0, [r1, #116]	; 0x74
4001067c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010680:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010684:	e5810070 	str	r0, [r1, #112]	; 0x70
40010688:	e5970020 	ldr	r0, [r7, #32]
4001068c:	e2400001 	sub	r0, r0, #1
40010690:	e5870020 	str	r0, [r7, #32]
40010694:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010698:	e350000d 	cmp	r0, #13
4001069c:	1a00000a 	bne	400106cc <_tx_mutex_cleanup+0xc0>
400106a0:	e3a0001d 	mov	r0, #29
400106a4:	e5840084 	str	r0, [r4, #132]	; 0x84
400106a8:	e59f0028 	ldr	r0, [pc, #40]	; 400106d8 <_tx_mutex_cleanup+0xcc>
400106ac:	e5900000 	ldr	r0, [r0]
400106b0:	e2800001 	add	r0, r0, #1
400106b4:	e59f101c 	ldr	r1, [pc, #28]	; 400106d8 <_tx_mutex_cleanup+0xcc>
400106b8:	e5810000 	str	r0, [r1]
400106bc:	e121f005 	msr	CPSR_c, r5
400106c0:	e1a00004 	mov	r0, r4
400106c4:	ebfffb98 	bl	4000f52c <_tx_thread_system_resume>
400106c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400106cc:	e121f005 	msr	CPSR_c, r5
400106d0:	eafffffc 	b	400106c8 <_tx_mutex_cleanup+0xbc>
400106d4:	4d555445 	.word	0x4d555445
400106d8:	40030e70 	.word	0x40030e70

400106dc <_tx_mutex_prioritize>:
400106dc:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
400106e0:	e1a04000 	mov	r4, r0
400106e4:	e10f5000 	mrs	r5, CPSR
400106e8:	e3856080 	orr	r6, r5, #128	; 0x80
400106ec:	e121f006 	msr	CPSR_c, r6
400106f0:	e59f1234 	ldr	r1, [pc, #564]	; 4001092c <_tx_mutex_prioritize+0x250>
400106f4:	e5910000 	ldr	r0, [r1]
400106f8:	e3500000 	cmp	r0, #0
400106fc:	0a000032 	beq	400107cc <_tx_mutex_prioritize+0xf0>
40010700:	e59f1228 	ldr	r1, [pc, #552]	; 40010930 <_tx_mutex_prioritize+0x254>
40010704:	e5911000 	ldr	r1, [r1]
40010708:	e2811001 	add	r1, r1, #1
4001070c:	e59f221c 	ldr	r2, [pc, #540]	; 40010930 <_tx_mutex_prioritize+0x254>
40010710:	e5821000 	str	r1, [r2]
40010714:	e580100c 	str	r1, [r0, #12]
40010718:	e59f1214 	ldr	r1, [pc, #532]	; 40010934 <_tx_mutex_prioritize+0x258>
4001071c:	e5911000 	ldr	r1, [r1]
40010720:	e3510000 	cmp	r1, #0
40010724:	1a000006 	bne	40010744 <_tx_mutex_prioritize+0x68>
40010728:	e59f1208 	ldr	r1, [pc, #520]	; 40010938 <_tx_mutex_prioritize+0x25c>
4001072c:	e5911000 	ldr	r1, [r1]
40010730:	e5801000 	str	r1, [r0]
40010734:	e5901000 	ldr	r1, [r0]
40010738:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4001073c:	e5801004 	str	r1, [r0, #4]
40010740:	ea00000d 	b	4001077c <_tx_mutex_prioritize+0xa0>
40010744:	e59f11e8 	ldr	r1, [pc, #488]	; 40010934 <_tx_mutex_prioritize+0x258>
40010748:	e5911000 	ldr	r1, [r1]
4001074c:	e59f21e8 	ldr	r2, [pc, #488]	; 4001093c <_tx_mutex_prioritize+0x260>
40010750:	e1510002 	cmp	r1, r2
40010754:	2a000004 	bcs	4001076c <_tx_mutex_prioritize+0x90>
40010758:	e3e01000 	mvn	r1, #0
4001075c:	e5801000 	str	r1, [r0]
40010760:	e3a01000 	mov	r1, #0
40010764:	e5801004 	str	r1, [r0, #4]
40010768:	ea000003 	b	4001077c <_tx_mutex_prioritize+0xa0>
4001076c:	e59f11c8 	ldr	r1, [pc, #456]	; 4001093c <_tx_mutex_prioritize+0x260>
40010770:	e5801000 	str	r1, [r0]
40010774:	e3a01000 	mov	r1, #0
40010778:	e5801004 	str	r1, [r0, #4]
4001077c:	e3a01038 	mov	r1, #56	; 0x38
40010780:	e5801008 	str	r1, [r0, #8]
40010784:	e5804010 	str	r4, [r0, #16]
40010788:	e5941020 	ldr	r1, [r4, #32]
4001078c:	e5801014 	str	r1, [r0, #20]
40010790:	e580d018 	str	sp, [r0, #24]
40010794:	e3a01000 	mov	r1, #0
40010798:	e580101c 	str	r1, [r0, #28]
4001079c:	e2800020 	add	r0, r0, #32
400107a0:	e59f1198 	ldr	r1, [pc, #408]	; 40010940 <_tx_mutex_prioritize+0x264>
400107a4:	e5911000 	ldr	r1, [r1]
400107a8:	e1500001 	cmp	r0, r1
400107ac:	3a000001 	bcc	400107b8 <_tx_mutex_prioritize+0xdc>
400107b0:	e59f118c 	ldr	r1, [pc, #396]	; 40010944 <_tx_mutex_prioritize+0x268>
400107b4:	e5910000 	ldr	r0, [r1]
400107b8:	e59f116c 	ldr	r1, [pc, #364]	; 4001092c <_tx_mutex_prioritize+0x250>
400107bc:	e5810000 	str	r0, [r1]
400107c0:	e59f1180 	ldr	r1, [pc, #384]	; 40010948 <_tx_mutex_prioritize+0x26c>
400107c4:	e5911000 	ldr	r1, [r1]
400107c8:	e5810020 	str	r0, [r1, #32]
400107cc:	e5940020 	ldr	r0, [r4, #32]
400107d0:	e3500002 	cmp	r0, #2
400107d4:	2a000002 	bcs	400107e4 <_tx_mutex_prioritize+0x108>
400107d8:	e121f005 	msr	CPSR_c, r5
400107dc:	e3a00000 	mov	r0, #0
400107e0:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
400107e4:	e5940020 	ldr	r0, [r4, #32]
400107e8:	e3500002 	cmp	r0, #2
400107ec:	1a00000c 	bne	40010824 <_tx_mutex_prioritize+0x148>
400107f0:	e594001c 	ldr	r0, [r4, #28]
400107f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400107f8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400107fc:	e594101c 	ldr	r1, [r4, #28]
40010800:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010804:	e1500001 	cmp	r0, r1
40010808:	2a000002 	bcs	40010818 <_tx_mutex_prioritize+0x13c>
4001080c:	e594001c 	ldr	r0, [r4, #28]
40010810:	e5900070 	ldr	r0, [r0, #112]	; 0x70
40010814:	e584001c 	str	r0, [r4, #28]
40010818:	e121f005 	msr	CPSR_c, r5
4001081c:	e3a00000 	mov	r0, #0
40010820:	eaffffee 	b	400107e0 <_tx_mutex_prioritize+0x104>
40010824:	e594901c 	ldr	r9, [r4, #28]
40010828:	e5940020 	ldr	r0, [r4, #32]
4001082c:	e58d0000 	str	r0, [sp]
40010830:	e594801c 	ldr	r8, [r4, #28]
40010834:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010838:	e59f010c 	ldr	r0, [pc, #268]	; 4001094c <_tx_mutex_prioritize+0x270>
4001083c:	e5900000 	ldr	r0, [r0]
40010840:	e2800001 	add	r0, r0, #1
40010844:	e59f1100 	ldr	r1, [pc, #256]	; 4001094c <_tx_mutex_prioritize+0x270>
40010848:	e5810000 	str	r0, [r1]
4001084c:	e1a00000 	nop			; (mov r0, r0)
40010850:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010854:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010858:	e1500001 	cmp	r0, r1
4001085c:	2a000000 	bcs	40010864 <_tx_mutex_prioritize+0x188>
40010860:	e1a08007 	mov	r8, r7
40010864:	e121f005 	msr	CPSR_c, r5
40010868:	e10f5000 	mrs	r5, CPSR
4001086c:	e3856080 	orr	r6, r5, #128	; 0x80
40010870:	e121f006 	msr	CPSR_c, r6
40010874:	e594001c 	ldr	r0, [r4, #28]
40010878:	e1500009 	cmp	r0, r9
4001087c:	1a000005 	bne	40010898 <_tx_mutex_prioritize+0x1bc>
40010880:	e5940020 	ldr	r0, [r4, #32]
40010884:	e59d1000 	ldr	r1, [sp]
40010888:	e1500001 	cmp	r0, r1
4001088c:	1a000001 	bne	40010898 <_tx_mutex_prioritize+0x1bc>
40010890:	e5977070 	ldr	r7, [r7, #112]	; 0x70
40010894:	ea000004 	b	400108ac <_tx_mutex_prioritize+0x1d0>
40010898:	e594901c 	ldr	r9, [r4, #28]
4001089c:	e5940020 	ldr	r0, [r4, #32]
400108a0:	e58d0000 	str	r0, [sp]
400108a4:	e594801c 	ldr	r8, [r4, #28]
400108a8:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400108ac:	e594001c 	ldr	r0, [r4, #28]
400108b0:	e1500007 	cmp	r0, r7
400108b4:	1affffe5 	bne	40010850 <_tx_mutex_prioritize+0x174>
400108b8:	e59f008c 	ldr	r0, [pc, #140]	; 4001094c <_tx_mutex_prioritize+0x270>
400108bc:	e5900000 	ldr	r0, [r0]
400108c0:	e2400001 	sub	r0, r0, #1
400108c4:	e59f1080 	ldr	r1, [pc, #128]	; 4001094c <_tx_mutex_prioritize+0x270>
400108c8:	e5810000 	str	r0, [r1]
400108cc:	e594001c 	ldr	r0, [r4, #28]
400108d0:	e1500008 	cmp	r0, r8
400108d4:	0a000010 	beq	4001091c <_tx_mutex_prioritize+0x240>
400108d8:	e5980074 	ldr	r0, [r8, #116]	; 0x74
400108dc:	e5981070 	ldr	r1, [r8, #112]	; 0x70
400108e0:	e5810074 	str	r0, [r1, #116]	; 0x74
400108e4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
400108e8:	e5981074 	ldr	r1, [r8, #116]	; 0x74
400108ec:	e5810070 	str	r0, [r1, #112]	; 0x70
400108f0:	e594001c 	ldr	r0, [r4, #28]
400108f4:	e5880070 	str	r0, [r8, #112]	; 0x70
400108f8:	e594001c 	ldr	r0, [r4, #28]
400108fc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010900:	e5880074 	str	r0, [r8, #116]	; 0x74
40010904:	e594001c 	ldr	r0, [r4, #28]
40010908:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001090c:	e5808070 	str	r8, [r0, #112]	; 0x70
40010910:	e594001c 	ldr	r0, [r4, #28]
40010914:	e5808074 	str	r8, [r0, #116]	; 0x74
40010918:	e584801c 	str	r8, [r4, #28]
4001091c:	e121f005 	msr	CPSR_c, r5
40010920:	ebfffad5 	bl	4000f47c <_tx_thread_system_preempt_check>
40010924:	e3a00000 	mov	r0, #0
40010928:	eaffffac 	b	400107e0 <_tx_mutex_prioritize+0x104>
4001092c:	40030ec0 	.word	0x40030ec0
40010930:	40030ec4 	.word	0x40030ec4
40010934:	40030e4c 	.word	0x40030e4c
40010938:	40030e54 	.word	0x40030e54
4001093c:	f0f0f0f0 	.word	0xf0f0f0f0
40010940:	40030ebc 	.word	0x40030ebc
40010944:	40030eb8 	.word	0x40030eb8
40010948:	40030eac 	.word	0x40030eac
4001094c:	40030e70 	.word	0x40030e70

40010950 <_tx_queue_cleanup>:
40010950:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010954:	e1a04000 	mov	r4, r0
40010958:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4001095c:	e10f5000 	mrs	r5, CPSR
40010960:	e3856080 	orr	r6, r5, #128	; 0x80
40010964:	e121f006 	msr	CPSR_c, r6
40010968:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4001096c:	e3500000 	cmp	r0, #0
40010970:	0a00002c 	beq	40010a28 <_tx_queue_cleanup+0xd8>
40010974:	e3570000 	cmp	r7, #0
40010978:	0a00002a 	beq	40010a28 <_tx_queue_cleanup+0xd8>
4001097c:	e5970000 	ldr	r0, [r7]
40010980:	e59f10a8 	ldr	r1, [pc, #168]	; 40010a30 <_tx_queue_cleanup+0xe0>
40010984:	e1500001 	cmp	r0, r1
40010988:	1a000026 	bne	40010a28 <_tx_queue_cleanup+0xd8>
4001098c:	e3a00000 	mov	r0, #0
40010990:	e5840068 	str	r0, [r4, #104]	; 0x68
40010994:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010998:	e1500004 	cmp	r0, r4
4001099c:	1a000002 	bne	400109ac <_tx_queue_cleanup+0x5c>
400109a0:	e3a00000 	mov	r0, #0
400109a4:	e5870028 	str	r0, [r7, #40]	; 0x28
400109a8:	ea000007 	b	400109cc <_tx_queue_cleanup+0x7c>
400109ac:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400109b0:	e5870028 	str	r0, [r7, #40]	; 0x28
400109b4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400109b8:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400109bc:	e5810074 	str	r0, [r1, #116]	; 0x74
400109c0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400109c4:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400109c8:	e5810070 	str	r0, [r1, #112]	; 0x70
400109cc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400109d0:	e2400001 	sub	r0, r0, #1
400109d4:	e587002c 	str	r0, [r7, #44]	; 0x2c
400109d8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400109dc:	e3500005 	cmp	r0, #5
400109e0:	1a000010 	bne	40010a28 <_tx_queue_cleanup+0xd8>
400109e4:	e5970010 	ldr	r0, [r7, #16]
400109e8:	e3500000 	cmp	r0, #0
400109ec:	0a000002 	beq	400109fc <_tx_queue_cleanup+0xac>
400109f0:	e3a0000b 	mov	r0, #11
400109f4:	e5840084 	str	r0, [r4, #132]	; 0x84
400109f8:	ea000001 	b	40010a04 <_tx_queue_cleanup+0xb4>
400109fc:	e3a0000a 	mov	r0, #10
40010a00:	e5840084 	str	r0, [r4, #132]	; 0x84
40010a04:	e59f0028 	ldr	r0, [pc, #40]	; 40010a34 <_tx_queue_cleanup+0xe4>
40010a08:	e5900000 	ldr	r0, [r0]
40010a0c:	e2800001 	add	r0, r0, #1
40010a10:	e59f101c 	ldr	r1, [pc, #28]	; 40010a34 <_tx_queue_cleanup+0xe4>
40010a14:	e5810000 	str	r0, [r1]
40010a18:	e121f005 	msr	CPSR_c, r5
40010a1c:	e1a00004 	mov	r0, r4
40010a20:	ebfffac1 	bl	4000f52c <_tx_thread_system_resume>
40010a24:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010a28:	e121f005 	msr	CPSR_c, r5
40010a2c:	eafffffc 	b	40010a24 <_tx_queue_cleanup+0xd4>
40010a30:	51554555 	.word	0x51554555
40010a34:	40030e70 	.word	0x40030e70

40010a38 <strcpy>:
40010a38:	e0202001 	eor	r2, r0, r1
40010a3c:	e1a0c000 	mov	ip, r0
40010a40:	e3120003 	tst	r2, #3
40010a44:	1a000032 	bne	40010b14 <strcpy+0xdc>
40010a48:	e3110003 	tst	r1, #3
40010a4c:	1a000021 	bne	40010ad8 <strcpy+0xa0>
40010a50:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
40010a54:	e3a05001 	mov	r5, #1
40010a58:	e1855405 	orr	r5, r5, r5, lsl #8
40010a5c:	e1855805 	orr	r5, r5, r5, lsl #16
40010a60:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
40010a64:	e3110004 	tst	r1, #4
40010a68:	e4913004 	ldr	r3, [r1], #4
40010a6c:	0a000005 	beq	40010a88 <strcpy+0x50>
40010a70:	e0432005 	sub	r2, r3, r5
40010a74:	e1d22003 	bics	r2, r2, r3
40010a78:	e1120385 	tst	r2, r5, lsl #7
40010a7c:	048c3004 	streq	r3, [ip], #4
40010a80:	04913004 	ldreq	r3, [r1], #4
40010a84:	1a00000c 	bne	40010abc <strcpy+0x84>
40010a88:	e4914004 	ldr	r4, [r1], #4
40010a8c:	e0432005 	sub	r2, r3, r5
40010a90:	e1d22003 	bics	r2, r2, r3
40010a94:	e1120385 	tst	r2, r5, lsl #7
40010a98:	e0442005 	sub	r2, r4, r5
40010a9c:	1a000006 	bne	40010abc <strcpy+0x84>
40010aa0:	e48c3004 	str	r3, [ip], #4
40010aa4:	e1d22004 	bics	r2, r2, r4
40010aa8:	e1120385 	tst	r2, r5, lsl #7
40010aac:	04913004 	ldreq	r3, [r1], #4
40010ab0:	048c4004 	streq	r4, [ip], #4
40010ab4:	0afffff3 	beq	40010a88 <strcpy+0x50>
40010ab8:	e1a03004 	mov	r3, r4
40010abc:	e4cc3001 	strb	r3, [ip], #1
40010ac0:	e31300ff 	tst	r3, #255	; 0xff
40010ac4:	e1a03463 	ror	r3, r3, #8
40010ac8:	1afffffb 	bne	40010abc <strcpy+0x84>
40010acc:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010ad0:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
40010ad4:	e12fff1e 	bx	lr
40010ad8:	e3110001 	tst	r1, #1
40010adc:	0a000003 	beq	40010af0 <strcpy+0xb8>
40010ae0:	e4d12001 	ldrb	r2, [r1], #1
40010ae4:	e4cc2001 	strb	r2, [ip], #1
40010ae8:	e3520000 	cmp	r2, #0
40010aec:	012fff1e 	bxeq	lr
40010af0:	e3110002 	tst	r1, #2
40010af4:	0affffd5 	beq	40010a50 <strcpy+0x18>
40010af8:	e0d120b2 	ldrh	r2, [r1], #2
40010afc:	e31200ff 	tst	r2, #255	; 0xff
40010b00:	10cc20b2 	strhne	r2, [ip], #2
40010b04:	05cc2000 	strbeq	r2, [ip]
40010b08:	13120cff 	tstne	r2, #65280	; 0xff00
40010b0c:	1affffcf 	bne	40010a50 <strcpy+0x18>
40010b10:	e12fff1e 	bx	lr
40010b14:	e4d12001 	ldrb	r2, [r1], #1
40010b18:	e4cc2001 	strb	r2, [ip], #1
40010b1c:	e3520000 	cmp	r2, #0
40010b20:	1afffffb 	bne	40010b14 <strcpy+0xdc>
40010b24:	e12fff1e 	bx	lr

40010b28 <strlen>:
40010b28:	e3c01003 	bic	r1, r0, #3
40010b2c:	e2100003 	ands	r0, r0, #3
40010b30:	e2600000 	rsb	r0, r0, #0
40010b34:	e4913004 	ldr	r3, [r1], #4
40010b38:	e280c004 	add	ip, r0, #4
40010b3c:	e1a0c18c 	lsl	ip, ip, #3
40010b40:	e3e02000 	mvn	r2, #0
40010b44:	11833c32 	orrne	r3, r3, r2, lsr ip
40010b48:	e3a0c001 	mov	ip, #1
40010b4c:	e18cc40c 	orr	ip, ip, ip, lsl #8
40010b50:	e18cc80c 	orr	ip, ip, ip, lsl #16
40010b54:	e043200c 	sub	r2, r3, ip
40010b58:	e1c22003 	bic	r2, r2, r3
40010b5c:	e012238c 	ands	r2, r2, ip, lsl #7
40010b60:	04913004 	ldreq	r3, [r1], #4
40010b64:	02800004 	addeq	r0, r0, #4
40010b68:	0afffff9 	beq	40010b54 <strlen+0x2c>
40010b6c:	e31300ff 	tst	r3, #255	; 0xff
40010b70:	12800001 	addne	r0, r0, #1
40010b74:	13130cff 	tstne	r3, #65280	; 0xff00
40010b78:	12800001 	addne	r0, r0, #1
40010b7c:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010b80:	12800001 	addne	r0, r0, #1
40010b84:	e12fff1e 	bx	lr

40010b88 <__aeabi_uidiv>:
40010b88:	e2512001 	subs	r2, r1, #1
40010b8c:	012fff1e 	bxeq	lr
40010b90:	3a000036 	bcc	40010c70 <__aeabi_uidiv+0xe8>
40010b94:	e1500001 	cmp	r0, r1
40010b98:	9a000022 	bls	40010c28 <__aeabi_uidiv+0xa0>
40010b9c:	e1110002 	tst	r1, r2
40010ba0:	0a000023 	beq	40010c34 <__aeabi_uidiv+0xac>
40010ba4:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010ba8:	01a01181 	lsleq	r1, r1, #3
40010bac:	03a03008 	moveq	r3, #8
40010bb0:	13a03001 	movne	r3, #1
40010bb4:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010bb8:	31510000 	cmpcc	r1, r0
40010bbc:	31a01201 	lslcc	r1, r1, #4
40010bc0:	31a03203 	lslcc	r3, r3, #4
40010bc4:	3afffffa 	bcc	40010bb4 <__aeabi_uidiv+0x2c>
40010bc8:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010bcc:	31510000 	cmpcc	r1, r0
40010bd0:	31a01081 	lslcc	r1, r1, #1
40010bd4:	31a03083 	lslcc	r3, r3, #1
40010bd8:	3afffffa 	bcc	40010bc8 <__aeabi_uidiv+0x40>
40010bdc:	e3a02000 	mov	r2, #0
40010be0:	e1500001 	cmp	r0, r1
40010be4:	20400001 	subcs	r0, r0, r1
40010be8:	21822003 	orrcs	r2, r2, r3
40010bec:	e15000a1 	cmp	r0, r1, lsr #1
40010bf0:	204000a1 	subcs	r0, r0, r1, lsr #1
40010bf4:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010bf8:	e1500121 	cmp	r0, r1, lsr #2
40010bfc:	20400121 	subcs	r0, r0, r1, lsr #2
40010c00:	21822123 	orrcs	r2, r2, r3, lsr #2
40010c04:	e15001a1 	cmp	r0, r1, lsr #3
40010c08:	204001a1 	subcs	r0, r0, r1, lsr #3
40010c0c:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010c10:	e3500000 	cmp	r0, #0
40010c14:	11b03223 	lsrsne	r3, r3, #4
40010c18:	11a01221 	lsrne	r1, r1, #4
40010c1c:	1affffef 	bne	40010be0 <__aeabi_uidiv+0x58>
40010c20:	e1a00002 	mov	r0, r2
40010c24:	e12fff1e 	bx	lr
40010c28:	03a00001 	moveq	r0, #1
40010c2c:	13a00000 	movne	r0, #0
40010c30:	e12fff1e 	bx	lr
40010c34:	e3510801 	cmp	r1, #65536	; 0x10000
40010c38:	21a01821 	lsrcs	r1, r1, #16
40010c3c:	23a02010 	movcs	r2, #16
40010c40:	33a02000 	movcc	r2, #0
40010c44:	e3510c01 	cmp	r1, #256	; 0x100
40010c48:	21a01421 	lsrcs	r1, r1, #8
40010c4c:	22822008 	addcs	r2, r2, #8
40010c50:	e3510010 	cmp	r1, #16
40010c54:	21a01221 	lsrcs	r1, r1, #4
40010c58:	22822004 	addcs	r2, r2, #4
40010c5c:	e3510004 	cmp	r1, #4
40010c60:	82822003 	addhi	r2, r2, #3
40010c64:	908220a1 	addls	r2, r2, r1, lsr #1
40010c68:	e1a00230 	lsr	r0, r0, r2
40010c6c:	e12fff1e 	bx	lr
40010c70:	e3500000 	cmp	r0, #0
40010c74:	13e00000 	mvnne	r0, #0
40010c78:	ea000059 	b	40010de4 <__aeabi_idiv0>

40010c7c <__aeabi_uidivmod>:
40010c7c:	e3510000 	cmp	r1, #0
40010c80:	0afffffa 	beq	40010c70 <__aeabi_uidiv+0xe8>
40010c84:	e92d4003 	push	{r0, r1, lr}
40010c88:	ebffffbe 	bl	40010b88 <__aeabi_uidiv>
40010c8c:	e8bd4006 	pop	{r1, r2, lr}
40010c90:	e0030092 	mul	r3, r2, r0
40010c94:	e0411003 	sub	r1, r1, r3
40010c98:	e12fff1e 	bx	lr

40010c9c <__aeabi_idiv>:
40010c9c:	e3510000 	cmp	r1, #0
40010ca0:	0a000043 	beq	40010db4 <.divsi3_skip_div0_test+0x110>

40010ca4 <.divsi3_skip_div0_test>:
40010ca4:	e020c001 	eor	ip, r0, r1
40010ca8:	42611000 	rsbmi	r1, r1, #0
40010cac:	e2512001 	subs	r2, r1, #1
40010cb0:	0a000027 	beq	40010d54 <.divsi3_skip_div0_test+0xb0>
40010cb4:	e1b03000 	movs	r3, r0
40010cb8:	42603000 	rsbmi	r3, r0, #0
40010cbc:	e1530001 	cmp	r3, r1
40010cc0:	9a000026 	bls	40010d60 <.divsi3_skip_div0_test+0xbc>
40010cc4:	e1110002 	tst	r1, r2
40010cc8:	0a000028 	beq	40010d70 <.divsi3_skip_div0_test+0xcc>
40010ccc:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010cd0:	01a01181 	lsleq	r1, r1, #3
40010cd4:	03a02008 	moveq	r2, #8
40010cd8:	13a02001 	movne	r2, #1
40010cdc:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010ce0:	31510003 	cmpcc	r1, r3
40010ce4:	31a01201 	lslcc	r1, r1, #4
40010ce8:	31a02202 	lslcc	r2, r2, #4
40010cec:	3afffffa 	bcc	40010cdc <.divsi3_skip_div0_test+0x38>
40010cf0:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010cf4:	31510003 	cmpcc	r1, r3
40010cf8:	31a01081 	lslcc	r1, r1, #1
40010cfc:	31a02082 	lslcc	r2, r2, #1
40010d00:	3afffffa 	bcc	40010cf0 <.divsi3_skip_div0_test+0x4c>
40010d04:	e3a00000 	mov	r0, #0
40010d08:	e1530001 	cmp	r3, r1
40010d0c:	20433001 	subcs	r3, r3, r1
40010d10:	21800002 	orrcs	r0, r0, r2
40010d14:	e15300a1 	cmp	r3, r1, lsr #1
40010d18:	204330a1 	subcs	r3, r3, r1, lsr #1
40010d1c:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010d20:	e1530121 	cmp	r3, r1, lsr #2
40010d24:	20433121 	subcs	r3, r3, r1, lsr #2
40010d28:	21800122 	orrcs	r0, r0, r2, lsr #2
40010d2c:	e15301a1 	cmp	r3, r1, lsr #3
40010d30:	204331a1 	subcs	r3, r3, r1, lsr #3
40010d34:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010d38:	e3530000 	cmp	r3, #0
40010d3c:	11b02222 	lsrsne	r2, r2, #4
40010d40:	11a01221 	lsrne	r1, r1, #4
40010d44:	1affffef 	bne	40010d08 <.divsi3_skip_div0_test+0x64>
40010d48:	e35c0000 	cmp	ip, #0
40010d4c:	42600000 	rsbmi	r0, r0, #0
40010d50:	e12fff1e 	bx	lr
40010d54:	e13c0000 	teq	ip, r0
40010d58:	42600000 	rsbmi	r0, r0, #0
40010d5c:	e12fff1e 	bx	lr
40010d60:	33a00000 	movcc	r0, #0
40010d64:	01a00fcc 	asreq	r0, ip, #31
40010d68:	03800001 	orreq	r0, r0, #1
40010d6c:	e12fff1e 	bx	lr
40010d70:	e3510801 	cmp	r1, #65536	; 0x10000
40010d74:	21a01821 	lsrcs	r1, r1, #16
40010d78:	23a02010 	movcs	r2, #16
40010d7c:	33a02000 	movcc	r2, #0
40010d80:	e3510c01 	cmp	r1, #256	; 0x100
40010d84:	21a01421 	lsrcs	r1, r1, #8
40010d88:	22822008 	addcs	r2, r2, #8
40010d8c:	e3510010 	cmp	r1, #16
40010d90:	21a01221 	lsrcs	r1, r1, #4
40010d94:	22822004 	addcs	r2, r2, #4
40010d98:	e3510004 	cmp	r1, #4
40010d9c:	82822003 	addhi	r2, r2, #3
40010da0:	908220a1 	addls	r2, r2, r1, lsr #1
40010da4:	e35c0000 	cmp	ip, #0
40010da8:	e1a00233 	lsr	r0, r3, r2
40010dac:	42600000 	rsbmi	r0, r0, #0
40010db0:	e12fff1e 	bx	lr
40010db4:	e3500000 	cmp	r0, #0
40010db8:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010dbc:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010dc0:	ea000007 	b	40010de4 <__aeabi_idiv0>

40010dc4 <__aeabi_idivmod>:
40010dc4:	e3510000 	cmp	r1, #0
40010dc8:	0afffff9 	beq	40010db4 <.divsi3_skip_div0_test+0x110>
40010dcc:	e92d4003 	push	{r0, r1, lr}
40010dd0:	ebffffb3 	bl	40010ca4 <.divsi3_skip_div0_test>
40010dd4:	e8bd4006 	pop	{r1, r2, lr}
40010dd8:	e0030092 	mul	r3, r2, r0
40010ddc:	e0411003 	sub	r1, r1, r3
40010de0:	e12fff1e 	bx	lr

40010de4 <__aeabi_idiv0>:
40010de4:	e12fff1e 	bx	lr

40010de8 <DelayArray>:
40010de8:	010402bc 01040104 010402bc 01040104     ................
40010df8:	01040104 01040104 01040104 01040104     ................
40010e08:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010e18:	02bc0104 010402bc 010402bc 010401f4     ................
40010e28:	01040104 00000104 00000000 00000000     ................
	...
40010e68:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010e78:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010e88:	75657551 73252065 61747320 25206574     Queue %s state %
40010e98:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010ea8:	68632065 206b6365 75657571 20444965     e check queueID 
40010eb8:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010ec8:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010ed8:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010ee8:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010ef8:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010f08:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010f18:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010f28:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010f38:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010f48:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010f58:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010f68:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010f78:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010f88:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010f98:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010fa8:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010fb8:	00000a0d                                ....

40010fbc <CyFxUSBDeviceDscr>:
40010fbc:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010fcc:	00000100                                ....

40010fd0 <CyFxUSBDeviceDscrSS>:
40010fd0:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010fe0:	00000100                                ....

40010fe4 <CyFxUSBDeviceQualDscr>:
40010fe4:	0200060a 400102ef 00000001              .......@....

40010ff0 <CyFxUSBFSConfigDscr>:
40010ff0:	00090209 80000100 00000032              ........2...

40010ffc <CyFxUSBHSConfigDscr>:
40010ffc:	00dd0209 80000102 000b08fa 00030e02     ................
4001100c:	00040900 010e0100 240d0000 50010001     ...........$...P
4001101c:	6cf71000 12010104 01010224 00000002     ...l....$.......
4001102c:	00000000 059e0300 05240c00 02580102     ..........$...X.
4001103c:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
4001104c:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
4001105c:	03240900 00010104 05070003 04000382     ..$.............
4001106c:	03250501 04090040 0e010001 0e000002     ..%.@...........
4001107c:	57010124 04008300 01010102 04241b00     $..W..........$.
4001108c:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
4001109c:	0110719b 00000608 0105241e 1c03c002     .q.......$......
400110ac:	d4e00002 d4e0000e 0fd2000e 05161500     ................
400110bc:	16150100 240a0005 c0010003 00021c03     .......$........
400110cc:	000d2406 05070000 02000283 00000001     .$..............

400110dc <CyFxUSBBOSDscr>:
400110dc:	00160f05 02100702 00000000 0003100a     ................
400110ec:	0003000e 00000000                       ........

400110f4 <CyFxUSBSSConfigDscr>:
400110f4:	012d0209 80000102 000b0864 00030e02     ..-.....d.......
40011104:	00040900 010e0100 240d0000 50010001     ...........$...P
40011114:	b8d80000 12010105 01010224 00000002     ........$.......
40011124:	00000000 00000300 05240c00 02580102     ..........$...X.
40011134:	00041103 06241c00 57ca7a03 5b1aa337     ......$..z.W7..[
40011144:	8e8d9649 76961f36 02010b50 00860403     I...6..vP.......
40011154:	03240900 00010104 05070003 04000382     ..$.............
40011164:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40011174:	00020e01 01240e00 83009b01 01020400     ......$.........
40011184:	1b000101 03010424 32595559 00100000     ....$...YUY2....
40011194:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
400111a4:	20020105 0007980a 00317040 004814d0     ... ....@p1...H.
400111b4:	2a0099c6 01000a2c 000a2c2a 0205241e     ...*,...*,...$..
400111c4:	38078002 70400004 26280031 1fa40084     ...8..@p1.(&....
400111d4:	05161500 16150100 241e0005 00020305     ...........$....
400111e4:	0002d005 00317040 004814d0 0a0099c6     ....@p1...H.....
400111f4:	0100028b 00028b0a 00032412 38078003     .........$.....8
40011204:	980a2004 d0050007 24060002 0000000d     . .........$....
40011214:	02830507 06010400 00000f30 00000000     ........0.......

40011224 <CyFxUSBStringLangIDDscr>:
40011224:	04090304                                ....

40011228 <CyFxUSBManufactureDscr>:
40011228:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40011238:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40011248:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40011258:	006f0069 0073006e                       i.o.n.s.

40011260 <CyFxUSBProductDscr>:
40011260:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40011270:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40011280:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40011290:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
400112a0:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
400112b0:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
400112c0:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
400112d0:	64612065 73657264 73692073 746f6e20     e address is not
400112e0:	6c617620 0a216469 00000000 736e6573      valid!.....sens
400112f0:	7720726f 65746972 30284232 64252029     or write2B(0) %d
40011300:	20642520 0a0d6425 00000000 4f525245      %d %d......ERRO
40011310:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40011320:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40011330:	74655320 6c615620 45206575 726f7272      Set Value Error
40011340:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011350:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
40011360:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40011370:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40011380:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40011390:	44492072 69616620 2164656c 00000a0d     r ID failed!....
400113a0:	20656854 20746547 746e6f63 206c6f72     The Get control 
400113b0:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
400113c0:	20656854 20746553 746e6f63 206c6f72     The Set control 
400113d0:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
400113e0:	00000a0d                                ....

400113e4 <ExTime>:
400113e4:	004e009c 00140027 0005000a 00010002     ..N.'...........

400113f4 <CyFxGpifConfig>:
400113f4:	0000000f 4003068c 400307ac 00000005     .......@...@....
40011404:	40030680 0000004c 400307bc              ...@L......@

40011410 <CyFxGpifConfig_usb2>:
40011410:	00000093 400308fc 40030aac 00000008     .......@...@....
40011420:	400308ec 0000004c 40030b40 20433249     ...@L...@..@I2C 
40011430:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
40011440:	20656854 6d6d6f63 20646e61 75657571     The command queu
40011450:	73692065 61657220 25207964 64252064     e is ready %d %d
40011460:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
40011470:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
40011480:	65666675 29312872 6f43203a 3d206564     uffer(1): Code =
40011490:	2c642520 7a697320 203d2065 202c7825      %d, size = %x, 
400114a0:	44616d64 20656e6f 25206425 000a0d64     dmaDone %d %d...
400114b0:	45534552 6e652054 6e756f63 65726574     RESET encountere
400114c0:	2e2e2e64 78257830 25783020 000a0d78     d...0x%x 0x%x...
400114d0:	50535553 20444e45 6f636e65 65746e75     SUSPEND encounte
400114e0:	2e646572 78302e2e 30207825 0d782578     red...0x%x 0x%x.
400114f0:	0000000a 20425355 63736964 656e6e6f     ....USB disconne
40011500:	64657463 302e2e2e 20782578 78257830     cted...0x%x 0x%x
40011510:	00000a0d 20746553 465f5943 56555f58     ....Set CY_FX_UV
40011520:	49565f43 5f4f4544 544e4f43 5f4c4f52     C_VIDEO_CONTROL_
40011530:	55514552 5f545345 4e455645 61462054     REQUEST_EVENT Fa
40011540:	64656c69 0a782520 00000000 20746553     iled %x.....Set 
40011550:	465f5943 56555f58 49565f43 5f4f4544     CY_FX_UVC_VIDEO_
40011560:	45525453 525f4d41 45555145 455f5453     STREAM_REQUEST_E
40011570:	544e4556 69614620 2064656c 000a7825     VENT Failed %x..
40011580:	65746c41 74616e72 65732065 6e697474     Alternate settin
40011590:	2e302067 000a0d2e 61656c43 65662072     g 0.....Clear fe
400115a0:	72757461 65722065 73657571 65642074     ature request de
400115b0:	74636574 2e2e6465 00000a0d 63200a0d     tected........ c
400115c0:	696d6d6f 666f6574 61747320 3d206574     ommiteof state =
400115d0:	00642520 6e616843 206c656e 20746553      %d.Channel Set 
400115e0:	70617257 66207055 656c6961 45202c64     WrapUp failed, E
400115f0:	726f7272 646f6320 203d2065 0a0d6425     rror code = %d..
40011600:	00000000 6f727245 61682072 656c646e     ....Error handle
40011610:	2e2e2e72 00000a0d 6d6d6f43 45207469     r.......Commit E
40011620:	6620464f 656c6961 0a0d2164 00000000     OF failed!......
40011630:	20656854 20433249 6d6d6f63 20646e61     The I2C command 
40011640:	30207369 20782578 78257830 25783020     is 0x%x 0x%x 0x%
40011650:	78302078 30207825 20782578 78257830     x 0x%x 0x%x 0x%x
40011660:	25783020 78302078 30207825 20782578      0x%x 0x%x 0x%x 
40011670:	78257830 25783020 000a0d78 20656854     0x%x 0x%x...The 
40011680:	20433249 6d6d6f63 20646e61 74746573     I2C command sett
40011690:	20676e69 756c6176 78252065 0d782520     ing value %x %x.
400116a0:	0000000a 6b636162 67696c20 63207468     ....back light c
400116b0:	65706d6f 7461736e 206e6f69 74746573     ompensation sett
400116c0:	20676e69 6e207369 6320746f 6572726f     ing is not corre
400116d0:	202e7463 25206425 000a0d64 20656854     ct. %d %d...The 
400116e0:	20433249 72727563 20746e65 61746164     I2C current data
400116f0:	20736920 20746f6e 69617661 6c62616c      is not availabl
40011700:	74202e65 61207972 6e696167 6425202e     e. try again. %d
40011710:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011720:	6e657320 6f742074 736f6820 25202e74      sent to host. %
40011730:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
40011740:	4d707845 43474126 746f6720 206e6574     ExpM&AGC gotten 
40011750:	6d6f7266 736f6820 25202e74 64252064     from host. %d %d
40011760:	6425203b 0d642520 0000000a 71657246     ; %d %d.....Freq
40011770:	636e6575 65732079 6e697474 73692067     uency setting is
40011780:	64252020 0d642520 0000000a 74655346       %d %d.....FSet
40011790:	65687420 64697620 6d206f65 2065646f      the video mode 
400117a0:	6d726f66 25207461 64252078 0000000a     format %x %d....
400117b0:	20656854 20746567 61746164 6f726620     The get data fro
400117c0:	6f68206d 66207473 206c6961 6f727265     m host fail erro
400117d0:	6f632072 25206564 0a0d2e64 00000000     r code %d.......
400117e0:	20656854 75716552 20747365 78257830     The Request 0x%x
400117f0:	72617020 74656d61 67207265 66207465      parameter get f
40011800:	206d6f72 74736f68 25783020 78302078     rom host 0x%x 0x
40011810:	2f207825 6e657320 6f742064 736f6820     %x / send to hos
40011820:	78302074 30207825 0d782578 0000000a     t 0x%x 0x%x.....
40011830:	6d6f6f5a 20704f20 65636572 73657669     Zoom Op receives
40011840:	54432820 78302029 30207825 20782578      (CT) 0x%x 0x%x 
40011850:	78257830 00000a0d 61666564 20746c75     0x%x....default 
40011860:	656c6573 726f7463 54432820 78302029     selector (CT) 0x
40011870:	30207825 0d782578 0000000a 61666564     %x 0x%x.....defa
40011880:	20746c75 75716572 20747365 29544328     ult request (CT)
40011890:	25783020 78302078 0a0d7825 00000000      0x%x 0x%x......
400118a0:	20656854 75716552 20747365 78257830     The Request 0x%x
400118b0:	72617020 74656d61 67207265 66207465      parameter get f
400118c0:	206d6f72 74736f68 54432820 78302029     rom host (CT) 0x
400118d0:	30207825 20782578 78257830 73202f20     %x 0x%x 0x%x / s
400118e0:	20646e65 68206f74 2074736f 78257830     end to host 0x%x
400118f0:	25783020 78302078 202c7825 0a0d6425      0x%x 0x%x, %d..
40011900:	00000000 20425355 65657073 203d2064     ....USB speed = 
40011910:	65206425 666e6576 2067616c 7830203d     %d evenflag = 0x
40011920:	62207825 7165526d 65707954 30203d20     %x bmReqType = 0
40011930:	0d782578 6552620a 73657571 203d2074     x%x..bRequest = 
40011940:	78257830 61567720 2065756c 7830203d     0x%x wValue = 0x
40011950:	77207825 65646e49 203d2078 78257830     %x wIndex = 0x%x
40011960:	654c7720 6874676e 30203d20 20782578      wLength = 0x%x 
40011970:	6c667369 30206761 0d782578 0000000a     isflag 0x%x.....
40011980:	20656854 61666564 20746c75 75746573     The default setu
40011990:	65722070 73657571 61762074 2065756c     p request value 
400119a0:	78257830 25783020 000a0d78 65646976     0x%x 0x%x...vide
400119b0:	7473206f 6d616572 54454720 71657220     o stream GET req
400119c0:	74736575 646f4320 25203a65 0a202c64     uest Code: %d, .
400119d0:	00000000 20746553 20656874 65646976     ....Set the vide
400119e0:	6f6d206f 66206564 616d726f 78252074     o mode format %x
400119f0:	0a642520 00000000 20746553 465f5943      %d.....Set CY_F
40011a00:	56555f58 54535f43 4d414552 4556455f     X_UVC_STREAM_EVE
40011a10:	6620544e 656c6961 78252064 0000000a     NT failed %x....
40011a20:	20746547 20435655 6c697473 7274206c     Get UVC still tr
40011a30:	65676769 6f632072 6f72746e 6425206c     igger control %d
40011a40:	0d642520 0000000a 20435655 6c697473      %d.....UVC stil
40011a50:	7274206c 65676769 6f632072 6f72746e     l trigger contro
40011a60:	6166206c 25206c69 64252064 00000a0d     l fail %d %d....
40011a70:	6c696146 74206465 6573206f 6920646e     Failed to send i
40011a80:	7265746e 74707572 61747320 2c737574     nterrupt status,
40011a90:	72724520 6320726f 2065646f 6425203d      Error code = %d
40011aa0:	00000a0d 20656854 20746573 20666564     ....The set def 
40011ab0:	61746164 25783020 30202c78 2e782578     data 0x%x, 0x%x.
40011ac0:	00000a0d 20656854 20746573 20666564     ....The set def 
40011ad0:	61746164 25783020 30202c78 2c782578     data 0x%x, 0x%x,
40011ae0:	25783020 30202c78 2c782578 25783020      0x%x, 0x%x, 0x%
40011af0:	30202c78 2e782578 00000a0d 54524155     x, 0x%x.....UART
40011b00:	696e6920 6c616974 74617a69 206e6f69      initialization 
40011b10:	6c696166 0a216465 00000000 20433249     failed!.....I2C 
40011b20:	74696e69 696c6169 6974617a 66206e6f     initialization f
40011b30:	656c6961 000a2164 20433249 666e6f63     ailed!..I2C conf
40011b40:	72756769 6f697461 6166206e 64656c69     iguration failed
40011b50:	00000a21 20435655 61657243 45206574     !...UVC Create E
40011b60:	746e6576 69616620 2c64656c 72724520     vent failed, Err
40011b70:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011b80:	4f495047 696e4920 61662074 64656c69     GPIO Init failed
40011b90:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011ba0:	00000a64 4f495047 65764f20 64697272     d...GPIO Overrid
40011bb0:	61662065 64656c69 7245202c 20726f72     e failed, Error 
40011bc0:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011bd0:	29303228 65764f20 64697272 61662065     (20) Override fa
40011be0:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011bf0:	25203d20 00000a64 4f495047 29343228      = %d...GPIO(24)
40011c00:	65764f20 64697272 61662065 64656c69      Override failed
40011c10:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011c20:	00000a64 4f495047 74655320 65722820     d...GPIO Set (re
40011c30:	20746573 20293232 666e6f43 45206769     set 22) Config E
40011c40:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
40011c50:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
40011c60:	6f702820 20726577 20293032 666e6f43      (power 20) Conf
40011c70:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011c80:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011c90:	74655320 6e732820 73207061 20746f68      Set (snap shot 
40011ca0:	20293432 666e6f43 45206769 726f7272     24) Config Error
40011cb0:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011cc0:	00000a64 20424950 636e7546 6e6f6974     d...PIB Function
40011cd0:	69614620 2064656c 53206f74 74726174      Failed to Start
40011ce0:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011cf0:	00000a64 20425355 636e7546 6e6f6974     d...USB Function
40011d00:	69614620 2064656c 53206f74 74726174      Failed to Start
40011d10:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011d20:	00000a64 20425355 20746553 70646e45     d...USB Set Endp
40011d30:	746e696f 6e6f6320 20676966 6c696166     oint config fail
40011d40:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011d50:	0a642520 00000000 20414d44 65746e49      %d.....DMA Inte
40011d60:	70757272 74532074 73757461 61684320     rrupt Status Cha
40011d70:	6c656e6e 65724320 6f697461 6146206e     nnel Creation Fa
40011d80:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011d90:	25203d20 00000a64 6c696146 74206465      = %d...Failed t
40011da0:	6c61206f 61636f6c 6d206574 726f6d65     o allocate memor
40011db0:	6f662079 6e692072 72726574 20747075     y for interrupt 
40011dc0:	74617473 62207375 65666675 000a0d72     status buffer...
40011dd0:	20414d44 6e616843 206c656e 61657243     DMA Channel Crea
40011de0:	6e6f6974 69614620 2c64656c 72724520     tion Failed, Err
40011df0:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011e00:	20425355 6e6e6f43 20746365 6c696166     USB Connect fail
40011e10:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011e20:	0a642520 00000000 20414d44 6e616843      %d.....DMA Chan
40011e30:	206c656e 65736552 61462074 64656c69     nel Reset Failed
40011e40:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011e50:	00000a64 20414d44 6e616843 206c656e     d...DMA Channel 
40011e60:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011e70:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011e80:	6425203d 0000000a 20414d44 6e616843     = %d....DMA Chan
40011e90:	206c656e 20746553 6e617254 72656673     nel Set Transfer
40011ea0:	69614620 2c64656c 72724520 4320726f      Failed, Error C
40011eb0:	2065646f 6425203d 00000a0d 73200a0d     ode = %d...... s
40011ec0:	72657075 69706720 00000066 68200a0d     uper gpif..... h
40011ed0:	20686769 66697067 00000000 64616f4c     igh gpif....Load
40011ee0:	20676e69 46495047 6e6f4320 75676966     ing GPIF Configu
40011ef0:	69746172 66206e6f 656c6961 45202c64     ration failed, E
40011f00:	726f7272 646f4320 203d2065 0a0d6425     rror Code = %d..
40011f10:	00000000 72617453 676e6974 49504720     ....Starting GPI
40011f20:	74732046 20657461 6863616d 20656e69     F state machine 
40011f30:	6c696166 202c6465 6f727245 6f432072     failed, Error Co
40011f40:	3d206564 0d642520 0000000a 553a3033     de = %d.....30:U
40011f50:	41204356 54207070 61657268 00000064     VC App Thread...
40011f60:	553a3133 41204356 45207070 54203050     31:UVC App EP0 T
40011f70:	61657268 00000064 493a3233 41204332     hread...32:I2C A
40011f80:	43207070 204c5254 65726854 00006461     pp CTRL Thread..

40011f90 <glFx3PartProperties>:
40011f90:	00000000 0000009f 00000010 0000009b     ................
40011fa0:	00000020 0000008f 00000030 0000008b      .......0.......
40011fb0:	00000004 000000ef 00000104 000000ef     ................
40011fc0:	00000184 000000af 00000154 000000e9     ........T.......
40011fd0:	000001d4 000000a9 10000004 000000ee     ................
40011fe0:	10000104 000000ee 10000184 000000ae     ................
40011ff0:	10000154 000000e8 100001d4 000000a8     T...............
40012000:	00000002 00000077 00000102 00000077     ....w.......w...
40012010:	000001c2 00000035 000001d2 00000031     ....5.......1...
40012020:	10000002 00000076 10000102 00000076     ....v.......v...
40012030:	100001c2 00000034 00000258 00000199     ....4...X.......
40012040:	00000248 0000019d 00000458 00000299     H.......X.......
40012050:	00000448 0000029d 00000848 0000049d     H.......H.......
40012060:	10000448 0000029c                       H.......

40012068 <glPmmcCsdValue>:
40012068:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40012078 <glPmmcExtCsdValue>:
40012078:	40040000 03020200 00000404 32321414     ...@..........22
40012088:	00406464 00000000                       dd@.....

40012090 <glConstGpifDefaults>:
40012090:	00000220 00000000 00000000 00000000      ...............
400120a0:	000f0000 00000000 00000000 00000082     ................
400120b0:	00000782 00000000 00000000 00000000     ................
	...
40012104:	00000006 00000000 0000ffff 0000010a     ................
40012114:	00000000 0000ffff 00000000 0000ffff     ................
40012124:	0000010a 00000000 0000ffff 00000000     ................
	...
4001218c:	00010400 00010400 00010400 00010400     ................
4001219c:	10000000 00000000 00000000 00000000     ................
	...
400121bc:	00000001                                ....

400121c0 <glGpifConstMaxState>:
400121c0:	1f3f7fff                                ..?.

400121c4 <CyU3PSSEpTypeMap>:
400121c4:	01020003                                ....

400121c8 <glUsbMaxPacketSize>:
400121c8:	000003ff 00000040 00000040 00000400     ....@...@.......
400121d8:	00000200 00000400 00000400 00000400     ................
400121e8:	00000400                                ....

400121ec <glUsb3CompliancePatterns>:
400121ec:	00000600 0000044a 00000478 000005bc     ....J...x.......
400121fc:	00000c00 000005fc 000001fc 00001400     ................
4001220c:	00001000                                ....

40012210 <CyU3PFirmwareEntry>:
40012210:	e59f1038 	ldr	r1, [pc, #56]	; 40012250 <CyU3PFirmwareEntry+0x40>
40012214:	e3e00000 	mvn	r0, #0
40012218:	e5810000 	str	r0, [r1]
4001221c:	e59f1030 	ldr	r1, [pc, #48]	; 40012254 <CyU3PFirmwareEntry+0x44>
40012220:	e2411008 	sub	r1, r1, #8
40012224:	e3a02a01 	mov	r2, #4096	; 0x1000
40012228:	e3a000d3 	mov	r0, #211	; 0xd3
4001222c:	e121f000 	msr	CPSR_c, r0
40012230:	e0811002 	add	r1, r1, r2
40012234:	e3c11007 	bic	r1, r1, #7
40012238:	e1a0d001 	mov	sp, r1
4001223c:	eb000271 	bl	40012c08 <CyU3PSysSetupMMU>
40012240:	eb000620 	bl	40013ac8 <CyU3PSysCheckBootState>
40012244:	eb000003 	bl	40012258 <CyU3PSetupStackPtrs>
40012248:	eb0000d1 	bl	40012594 <__CyU3PEntryKeep>
4001224c:	eaffc4e7 	b	400035f0 <CyU3PToolChainInit>
40012250:	fffff014 	.word	0xfffff014
40012254:	40002000 	.word	0x40002000

40012258 <CyU3PSetupStackPtrs>:
40012258:	e3a01201 	mov	r1, #268435456	; 0x10000000
4001225c:	e2411008 	sub	r1, r1, #8
40012260:	e3a02b02 	mov	r2, #2048	; 0x800
40012264:	e3a030df 	mov	r3, #223	; 0xdf
40012268:	e12ff003 	msr	CPSR_fsxc, r3
4001226c:	e0811002 	add	r1, r1, r2
40012270:	e3c11007 	bic	r1, r1, #7
40012274:	e1a0d001 	mov	sp, r1
40012278:	e3a0a000 	mov	sl, #0
4001227c:	e3a0b000 	mov	fp, #0
40012280:	e3a02c01 	mov	r2, #256	; 0x100
40012284:	e3a030d7 	mov	r3, #215	; 0xd7
40012288:	e12ff003 	msr	CPSR_fsxc, r3
4001228c:	e0811002 	add	r1, r1, r2
40012290:	e3c11007 	bic	r1, r1, #7
40012294:	e1a0d001 	mov	sp, r1
40012298:	e3a0a000 	mov	sl, #0
4001229c:	e3a0b000 	mov	fp, #0
400122a0:	e3a02c01 	mov	r2, #256	; 0x100
400122a4:	e3a030db 	mov	r3, #219	; 0xdb
400122a8:	e12ff003 	msr	CPSR_fsxc, r3
400122ac:	e0811002 	add	r1, r1, r2
400122b0:	e3c11007 	bic	r1, r1, #7
400122b4:	e1a0d001 	mov	sp, r1
400122b8:	e3a0a000 	mov	sl, #0
400122bc:	e3a0b000 	mov	fp, #0
400122c0:	e3a02c02 	mov	r2, #512	; 0x200
400122c4:	e3a000d1 	mov	r0, #209	; 0xd1
400122c8:	e121f000 	msr	CPSR_c, r0
400122cc:	e0811002 	add	r1, r1, r2
400122d0:	e3c11007 	bic	r1, r1, #7
400122d4:	e1a0d001 	mov	sp, r1
400122d8:	e3a0a000 	mov	sl, #0
400122dc:	e3a0b000 	mov	fp, #0
400122e0:	e3a02b01 	mov	r2, #1024	; 0x400
400122e4:	e3a000d2 	mov	r0, #210	; 0xd2
400122e8:	e121f000 	msr	CPSR_c, r0
400122ec:	e0811002 	add	r1, r1, r2
400122f0:	e3c11007 	bic	r1, r1, #7
400122f4:	e1a0d001 	mov	sp, r1
400122f8:	e3a02a01 	mov	r2, #4096	; 0x1000
400122fc:	e3a000d3 	mov	r0, #211	; 0xd3
40012300:	e121f000 	msr	CPSR_c, r0
40012304:	e0811002 	add	r1, r1, r2
40012308:	e3c11007 	bic	r1, r1, #7
4001230c:	e1a0d001 	mov	sp, r1
40012310:	e12fff1e 	bx	lr

40012314 <CyU3PSysCleanDCache>:
40012314:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40012318:	1afffffd 	bne	40012314 <CyU3PSysCleanDCache>
4001231c:	e12fff1e 	bx	lr

40012320 <CyU3PSysClearDCache>:
40012320:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40012324:	1afffffd 	bne	40012320 <CyU3PSysClearDCache>
40012328:	e12fff1e 	bx	lr

4001232c <CyU3PSysFlushIRegion>:
4001232c:	e3510000 	cmp	r1, #0
40012330:	0a00000a 	beq	40012360 <CyU3PSysFlushIRegion+0x34>
40012334:	e0801001 	add	r1, r0, r1
40012338:	e3c0001f 	bic	r0, r0, #31
4001233c:	e3a0201f 	mov	r2, #31
40012340:	e1110002 	tst	r1, r2
40012344:	e0411000 	sub	r1, r1, r0
40012348:	e1a012a1 	lsr	r1, r1, #5
4001234c:	12811001 	addne	r1, r1, #1
40012350:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40012354:	e2800020 	add	r0, r0, #32
40012358:	e2511001 	subs	r1, r1, #1
4001235c:	1afffffb 	bne	40012350 <CyU3PSysFlushIRegion+0x24>
40012360:	e12fff1e 	bx	lr

40012364 <CyU3PSysClearDRegion>:
40012364:	e3510000 	cmp	r1, #0
40012368:	0a00000a 	beq	40012398 <CyU3PSysClearDRegion+0x34>
4001236c:	e0801001 	add	r1, r0, r1
40012370:	e3c0001f 	bic	r0, r0, #31
40012374:	e3a0201f 	mov	r2, #31
40012378:	e1110002 	tst	r1, r2
4001237c:	e0411000 	sub	r1, r1, r0
40012380:	e1a012a1 	lsr	r1, r1, #5
40012384:	12811001 	addne	r1, r1, #1
40012388:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
4001238c:	e2800020 	add	r0, r0, #32
40012390:	e2511001 	subs	r1, r1, #1
40012394:	1afffffb 	bne	40012388 <CyU3PSysClearDRegion+0x24>
40012398:	e12fff1e 	bx	lr

4001239c <CyU3PSysCleanDRegion>:
4001239c:	e3510000 	cmp	r1, #0
400123a0:	0a00000a 	beq	400123d0 <CyU3PSysCleanDRegion+0x34>
400123a4:	e0801001 	add	r1, r0, r1
400123a8:	e3c0001f 	bic	r0, r0, #31
400123ac:	e3a0201f 	mov	r2, #31
400123b0:	e1110002 	tst	r1, r2
400123b4:	e0411000 	sub	r1, r1, r0
400123b8:	e1a012a1 	lsr	r1, r1, #5
400123bc:	12811001 	addne	r1, r1, #1
400123c0:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
400123c4:	e2800020 	add	r0, r0, #32
400123c8:	e2511001 	subs	r1, r1, #1
400123cc:	1afffffb 	bne	400123c0 <CyU3PSysCleanDRegion+0x24>
400123d0:	e12fff1e 	bx	lr

400123d4 <CyU3PSysFlushDRegion>:
400123d4:	e3510000 	cmp	r1, #0
400123d8:	0a00000a 	beq	40012408 <CyU3PSysFlushDRegion+0x34>
400123dc:	e0801001 	add	r1, r0, r1
400123e0:	e3c0001f 	bic	r0, r0, #31
400123e4:	e3a0201f 	mov	r2, #31
400123e8:	e1110002 	tst	r1, r2
400123ec:	e0411000 	sub	r1, r1, r0
400123f0:	e1a012a1 	lsr	r1, r1, #5
400123f4:	12811001 	addne	r1, r1, #1
400123f8:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
400123fc:	e2800020 	add	r0, r0, #32
40012400:	e2511001 	subs	r1, r1, #1
40012404:	1afffffb 	bne	400123f8 <CyU3PSysFlushDRegion+0x24>
40012408:	e12fff1e 	bx	lr

4001240c <CyU3PSysCacheIRegion>:
4001240c:	e3a03000 	mov	r3, #0
40012410:	e3510000 	cmp	r1, #0
40012414:	0a000023 	beq	400124a8 <CyU3PSysCacheIRegion+0x9c>
40012418:	e0801001 	add	r1, r0, r1
4001241c:	e3c0001f 	bic	r0, r0, #31
40012420:	e3a0201f 	mov	r2, #31
40012424:	e1110002 	tst	r1, r2
40012428:	e0411000 	sub	r1, r1, r0
4001242c:	e1a012a1 	lsr	r1, r1, #5
40012430:	12811001 	addne	r1, r1, #1
40012434:	e351003f 	cmp	r1, #63	; 0x3f
40012438:	8a00001a 	bhi	400124a8 <CyU3PSysCacheIRegion+0x9c>
4001243c:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40012440:	e20c200f 	and	r2, ip, #15
40012444:	e3a03001 	mov	r3, #1
40012448:	e11c0003 	tst	ip, r3
4001244c:	11a03083 	lslne	r3, r3, #1
40012450:	111c0003 	tstne	ip, r3
40012454:	11a03083 	lslne	r3, r3, #1
40012458:	111c0003 	tstne	ip, r3
4001245c:	11a03083 	lslne	r3, r3, #1
40012460:	1a000010 	bne	400124a8 <CyU3PSysCacheIRegion+0x9c>
40012464:	e3510000 	cmp	r1, #0
40012468:	0a00000e 	beq	400124a8 <CyU3PSysCacheIRegion+0x9c>
4001246c:	e1e03003 	mvn	r3, r3
40012470:	e203300f 	and	r3, r3, #15
40012474:	e3ccc00f 	bic	ip, ip, #15
40012478:	e08cc003 	add	ip, ip, r3
4001247c:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012480:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012484:	e2800020 	add	r0, r0, #32
40012488:	e2511001 	subs	r1, r1, #1
4001248c:	1afffffb 	bne	40012480 <CyU3PSysCacheIRegion+0x74>
40012490:	e1e0300c 	mvn	r3, ip
40012494:	e203300f 	and	r3, r3, #15
40012498:	e1822003 	orr	r2, r2, r3
4001249c:	e3ccc00f 	bic	ip, ip, #15
400124a0:	e00cc002 	and	ip, ip, r2
400124a4:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
400124a8:	e1a00003 	mov	r0, r3
400124ac:	e12fff1e 	bx	lr

400124b0 <CyU3PSysCacheDRegion>:
400124b0:	e3a03000 	mov	r3, #0
400124b4:	e3510000 	cmp	r1, #0
400124b8:	0a000022 	beq	40012548 <CyU3PSysCacheDRegion+0x98>
400124bc:	e0801001 	add	r1, r0, r1
400124c0:	e3c0001f 	bic	r0, r0, #31
400124c4:	e3a0201f 	mov	r2, #31
400124c8:	e1110002 	tst	r1, r2
400124cc:	e0411000 	sub	r1, r1, r0
400124d0:	e1a012a1 	lsr	r1, r1, #5
400124d4:	12811001 	addne	r1, r1, #1
400124d8:	e351003f 	cmp	r1, #63	; 0x3f
400124dc:	8a000019 	bhi	40012548 <CyU3PSysCacheDRegion+0x98>
400124e0:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
400124e4:	e20c200f 	and	r2, ip, #15
400124e8:	e3a03001 	mov	r3, #1
400124ec:	e11c0003 	tst	ip, r3
400124f0:	11a03083 	lslne	r3, r3, #1
400124f4:	111c0003 	tstne	ip, r3
400124f8:	11a03083 	lslne	r3, r3, #1
400124fc:	111c0003 	tstne	ip, r3
40012500:	11a03083 	lslne	r3, r3, #1
40012504:	1a00000f 	bne	40012548 <CyU3PSysCacheDRegion+0x98>
40012508:	e3510000 	cmp	r1, #0
4001250c:	0a00000d 	beq	40012548 <CyU3PSysCacheDRegion+0x98>
40012510:	e1e03003 	mvn	r3, r3
40012514:	e203300f 	and	r3, r3, #15
40012518:	e3ccc00f 	bic	ip, ip, #15
4001251c:	e08cc003 	add	ip, ip, r3
40012520:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
40012524:	e4903020 	ldr	r3, [r0], #32
40012528:	e2511001 	subs	r1, r1, #1
4001252c:	1afffffc 	bne	40012524 <CyU3PSysCacheDRegion+0x74>
40012530:	e1e0300c 	mvn	r3, ip
40012534:	e203300f 	and	r3, r3, #15
40012538:	e1822003 	orr	r2, r2, r3
4001253c:	e3ccc00f 	bic	ip, ip, #15
40012540:	e00cc002 	and	ip, ip, r2
40012544:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
40012548:	e1a00003 	mov	r0, r3
4001254c:	e12fff1e 	bx	lr

40012550 <CyU3PSysUnlockICache>:
40012550:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012554:	e3c0000f 	bic	r0, r0, #15
40012558:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

4001255c <CyU3PSysUnlockDCache>:
4001255c:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
40012560:	e3c0000f 	bic	r0, r0, #15
40012564:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

40012568 <__cyu3p_exception_vectors>:
40012568:	e59ff028 	ldr	pc, [pc, #40]	; 40012598 <__CyU3PEntryKeep+0x4>
4001256c:	e59ff028 	ldr	pc, [pc, #40]	; 4001259c <__CyU3PEntryKeep+0x8>
40012570:	e59ff028 	ldr	pc, [pc, #40]	; 400125a0 <__CyU3PEntryKeep+0xc>
40012574:	e59ff028 	ldr	pc, [pc, #40]	; 400125a4 <__CyU3PEntryKeep+0x10>
40012578:	e59ff028 	ldr	pc, [pc, #40]	; 400125a8 <__CyU3PEntryKeep+0x14>
4001257c:	e59ff028 	ldr	pc, [pc, #40]	; 400125ac <__CyU3PEntryKeep+0x18>
40012580:	e51ff120 	ldr	pc, [pc, #-288]	; 40012468 <CyU3PSysCacheIRegion+0x5c>
40012584:	e59ff024 	ldr	pc, [pc, #36]	; 400125b0 <__CyU3PEntryKeep+0x1c>

40012588 <__CyU3PSWIHandler>:
40012588:	eafffffe 	b	40012588 <__CyU3PSWIHandler>

4001258c <__CyU3PReservedHandler>:
4001258c:	eafffffe 	b	4001258c <__CyU3PReservedHandler>

40012590 <__CyU3PFiqHandler>:
40012590:	eafffffe 	b	40012590 <__CyU3PFiqHandler>

40012594 <__CyU3PEntryKeep>:
40012594:	e12fff1e 	bx	lr
40012598:	40012210 	.word	0x40012210
4001259c:	40003618 	.word	0x40003618
400125a0:	40012588 	.word	0x40012588
400125a4:	4000361c 	.word	0x4000361c
400125a8:	40003620 	.word	0x40003620
400125ac:	4001258c 	.word	0x4001258c
400125b0:	40012590 	.word	0x40012590

Disassembly of section i.CyU3PDevCheckDevStateStruct:

400125b4 <CyU3PDevCheckDevStateStruct>:
400125b4:	e92d4038 	push	{r3, r4, r5, lr}
400125b8:	e59f4118 	ldr	r4, [pc, #280]	; 400126d8 <_etext+0x124>
400125bc:	e3a00000 	mov	r0, #0
400125c0:	e58d0000 	str	r0, [sp]
400125c4:	e5940000 	ldr	r0, [r4]
400125c8:	e59f110c 	ldr	r1, [pc, #268]	; 400126dc <_etext+0x128>
400125cc:	e1500001 	cmp	r0, r1
400125d0:	0a000000 	beq	400125d8 <CyU3PDevCheckDevStateStruct+0x24>
400125d4:	ea00003b 	b	400126c8 <CyU3PDevCheckDevStateStruct+0x114>
400125d8:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400125dc:	e59f10fc 	ldr	r1, [pc, #252]	; 400126e0 <_etext+0x12c>
400125e0:	e1500001 	cmp	r0, r1
400125e4:	1a000005 	bne	40012600 <CyU3PDevCheckDevStateStruct+0x4c>
400125e8:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
400125ec:	e59f10f0 	ldr	r1, [pc, #240]	; 400126e4 <_etext+0x130>
400125f0:	e1500001 	cmp	r0, r1
400125f4:	3a000001 	bcc	40012600 <CyU3PDevCheckDevStateStruct+0x4c>
400125f8:	e594500c 	ldr	r5, [r4, #12]
400125fc:	ea000001 	b	40012608 <CyU3PDevCheckDevStateStruct+0x54>
40012600:	e594000c 	ldr	r0, [r4, #12]
40012604:	e20050ff 	and	r5, r0, #255	; 0xff
40012608:	e594000c 	ldr	r0, [r4, #12]
4001260c:	e3500000 	cmp	r0, #0
40012610:	0a000003 	beq	40012624 <CyU3PDevCheckDevStateStruct+0x70>
40012614:	e594000c 	ldr	r0, [r4, #12]
40012618:	e59f10c8 	ldr	r1, [pc, #200]	; 400126e8 <_etext+0x134>
4001261c:	e1500001 	cmp	r0, r1
40012620:	9a000000 	bls	40012628 <CyU3PDevCheckDevStateStruct+0x74>
40012624:	ea000027 	b	400126c8 <CyU3PDevCheckDevStateStruct+0x114>
40012628:	e1a0200d 	mov	r2, sp
4001262c:	e1a01005 	mov	r1, r5
40012630:	e59f00a0 	ldr	r0, [pc, #160]	; 400126d8 <_etext+0x124>
40012634:	eb00049f 	bl	400138b8 <CyU3PComputeChecksum>
40012638:	e594000c 	ldr	r0, [r4, #12]
4001263c:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
40012640:	e2800a02 	add	r0, r0, #8192	; 0x2000
40012644:	e5900000 	ldr	r0, [r0]
40012648:	e59d1000 	ldr	r1, [sp]
4001264c:	e1500001 	cmp	r0, r1
40012650:	0a000000 	beq	40012658 <CyU3PDevCheckDevStateStruct+0xa4>
40012654:	ea00001b 	b	400126c8 <CyU3PDevCheckDevStateStruct+0x114>
40012658:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001265c:	e59f107c 	ldr	r1, [pc, #124]	; 400126e0 <_etext+0x12c>
40012660:	e1500001 	cmp	r0, r1
40012664:	0a000001 	beq	40012670 <CyU3PDevCheckDevStateStruct+0xbc>
40012668:	e59f007c 	ldr	r0, [pc, #124]	; 400126ec <_etext+0x138>
4001266c:	e58400dc 	str	r0, [r4, #220]	; 0xdc
40012670:	e3a00001 	mov	r0, #1
40012674:	e59f1074 	ldr	r1, [pc, #116]	; 400126f0 <_etext+0x13c>
40012678:	e5810000 	str	r0, [r1]
4001267c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012680:	e59f106c 	ldr	r1, [pc, #108]	; 400126f4 <_etext+0x140>
40012684:	e1500001 	cmp	r0, r1
40012688:	3a00000d 	bcc	400126c4 <CyU3PDevCheckDevStateStruct+0x110>
4001268c:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012690:	e3500000 	cmp	r0, #0
40012694:	0a00000a 	beq	400126c4 <CyU3PDevCheckDevStateStruct+0x110>
40012698:	e59f0058 	ldr	r0, [pc, #88]	; 400126f8 <_etext+0x144>
4001269c:	e5900018 	ldr	r0, [r0, #24]
400126a0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400126a4:	0a000006 	beq	400126c4 <CyU3PDevCheckDevStateStruct+0x110>
400126a8:	e59f004c 	ldr	r0, [pc, #76]	; 400126fc <_etext+0x148>
400126ac:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400126b0:	e3100001 	tst	r0, #1
400126b4:	0a000002 	beq	400126c4 <CyU3PDevCheckDevStateStruct+0x110>
400126b8:	e3a00001 	mov	r0, #1
400126bc:	e59f103c 	ldr	r1, [pc, #60]	; 40012700 <_etext+0x14c>
400126c0:	e5810000 	str	r0, [r1]
400126c4:	e8bd8038 	pop	{r3, r4, r5, pc}
400126c8:	e1a00000 	nop			; (mov r0, r0)
400126cc:	e3e00000 	mvn	r0, #0
400126d0:	e5840000 	str	r0, [r4]
400126d4:	eafffffa 	b	400126c4 <CyU3PDevCheckDevStateStruct+0x110>
400126d8:	40002000 	.word	0x40002000
400126dc:	42575943 	.word	0x42575943
400126e0:	42335846 	.word	0x42335846
400126e4:	00010300 	.word	0x00010300
400126e8:	00000ff8 	.word	0x00000ff8
400126ec:	00010101 	.word	0x00010101
400126f0:	40030c88 	.word	0x40030c88
400126f4:	00010201 	.word	0x00010201
400126f8:	e0052000 	.word	0xe0052000
400126fc:	e0001000 	.word	0xe0001000
40012700:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PDeviceCacheControl:

40012704 <CyU3PDeviceCacheControl>:
40012704:	e92d4070 	push	{r4, r5, r6, lr}
40012708:	e1a04000 	mov	r4, r0
4001270c:	e1a06001 	mov	r6, r1
40012710:	e1a05002 	mov	r5, r2
40012714:	e3550000 	cmp	r5, #0
40012718:	0a000003 	beq	4001272c <CyU3PDeviceCacheControl+0x28>
4001271c:	e3560000 	cmp	r6, #0
40012720:	1a000001 	bne	4001272c <CyU3PDeviceCacheControl+0x28>
40012724:	e3a00040 	mov	r0, #64	; 0x40
40012728:	e8bd8070 	pop	{r4, r5, r6, pc}
4001272c:	eb000181 	bl	40012d38 <CyU3PSysBarrierSync>
40012730:	ebfffefa 	bl	40012320 <CyU3PSysClearDCache>
40012734:	eb0001a1 	bl	40012dc0 <CyU3PSysFlushICache>
40012738:	eb00018f 	bl	40012d7c <CyU3PSysDisableICache>
4001273c:	eb00018a 	bl	40012d6c <CyU3PSysDisableDCache>
40012740:	e3540000 	cmp	r4, #0
40012744:	0a000003 	beq	40012758 <CyU3PDeviceCacheControl+0x54>
40012748:	eb000193 	bl	40012d9c <CyU3PSysEnableICache>
4001274c:	eb000179 	bl	40012d38 <CyU3PSysBarrierSync>
40012750:	e59f0038 	ldr	r0, [pc, #56]	; 40012790 <CyU3PDeviceCacheControl+0x8c>
40012754:	e5804000 	str	r4, [r0]
40012758:	e3a00000 	mov	r0, #0
4001275c:	e59f1030 	ldr	r1, [pc, #48]	; 40012794 <CyU3PDeviceCacheControl+0x90>
40012760:	e5810000 	str	r0, [r1]
40012764:	e3560000 	cmp	r6, #0
40012768:	0a000005 	beq	40012784 <CyU3PDeviceCacheControl+0x80>
4001276c:	eb000186 	bl	40012d8c <CyU3PSysEnableDCache>
40012770:	eb000170 	bl	40012d38 <CyU3PSysBarrierSync>
40012774:	e59f0018 	ldr	r0, [pc, #24]	; 40012794 <CyU3PDeviceCacheControl+0x90>
40012778:	e5805000 	str	r5, [r0]
4001277c:	e59f0014 	ldr	r0, [pc, #20]	; 40012798 <CyU3PDeviceCacheControl+0x94>
40012780:	e5806000 	str	r6, [r0]
40012784:	eb00016b 	bl	40012d38 <CyU3PSysBarrierSync>
40012788:	e3a00000 	mov	r0, #0
4001278c:	eaffffe5 	b	40012728 <CyU3PDeviceCacheControl+0x24>
40012790:	40030c7c 	.word	0x40030c7c
40012794:	40030c84 	.word	0x40030c84
40012798:	40030c80 	.word	0x40030c80

Disassembly of section i.CyU3PDeviceInit:

4001279c <CyU3PDeviceInit>:
4001279c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400127a0:	e1a04000 	mov	r4, r0
400127a4:	e3a06000 	mov	r6, #0
400127a8:	e3a07000 	mov	r7, #0
400127ac:	e3a09000 	mov	r9, #0
400127b0:	e3a0a000 	mov	sl, #0
400127b4:	e3540000 	cmp	r4, #0
400127b8:	0a000033 	beq	4001288c <CyU3PDeviceInit+0xf0>
400127bc:	e5d40004 	ldrb	r0, [r4, #4]
400127c0:	e3500002 	cmp	r0, #2
400127c4:	ba000002 	blt	400127d4 <CyU3PDeviceInit+0x38>
400127c8:	e5d40004 	ldrb	r0, [r4, #4]
400127cc:	e3500010 	cmp	r0, #16
400127d0:	da000001 	ble	400127dc <CyU3PDeviceInit+0x40>
400127d4:	e3a00040 	mov	r0, #64	; 0x40
400127d8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400127dc:	e5d40005 	ldrb	r0, [r4, #5]
400127e0:	e3500002 	cmp	r0, #2
400127e4:	ba000002 	blt	400127f4 <CyU3PDeviceInit+0x58>
400127e8:	e5d40005 	ldrb	r0, [r4, #5]
400127ec:	e3500010 	cmp	r0, #16
400127f0:	da000001 	ble	400127fc <CyU3PDeviceInit+0x60>
400127f4:	e3a00040 	mov	r0, #64	; 0x40
400127f8:	eafffff6 	b	400127d8 <CyU3PDeviceInit+0x3c>
400127fc:	e5d40006 	ldrb	r0, [r4, #6]
40012800:	e3500002 	cmp	r0, #2
40012804:	ba000002 	blt	40012814 <CyU3PDeviceInit+0x78>
40012808:	e5d40006 	ldrb	r0, [r4, #6]
4001280c:	e3500010 	cmp	r0, #16
40012810:	da000001 	ble	4001281c <CyU3PDeviceInit+0x80>
40012814:	e3a00040 	mov	r0, #64	; 0x40
40012818:	eaffffee 	b	400127d8 <CyU3PDeviceInit+0x3c>
4001281c:	e5d40006 	ldrb	r0, [r4, #6]
40012820:	e5d41005 	ldrb	r1, [r4, #5]
40012824:	e1500001 	cmp	r0, r1
40012828:	ba000004 	blt	40012840 <CyU3PDeviceInit+0xa4>
4001282c:	e5d41005 	ldrb	r1, [r4, #5]
40012830:	e5d40006 	ldrb	r0, [r4, #6]
40012834:	ebfff962 	bl	40010dc4 <__aeabi_idivmod>
40012838:	e3510000 	cmp	r1, #0
4001283c:	0a000001 	beq	40012848 <CyU3PDeviceInit+0xac>
40012840:	e3a00040 	mov	r0, #64	; 0x40
40012844:	eaffffe3 	b	400127d8 <CyU3PDeviceInit+0x3c>
40012848:	e5d4000c 	ldrb	r0, [r4, #12]
4001284c:	e3500004 	cmp	r0, #4
40012850:	ba000001 	blt	4001285c <CyU3PDeviceInit+0xc0>
40012854:	e3a00040 	mov	r0, #64	; 0x40
40012858:	eaffffde 	b	400127d8 <CyU3PDeviceInit+0x3c>
4001285c:	e5d40004 	ldrb	r0, [r4, #4]
40012860:	e2400001 	sub	r0, r0, #1
40012864:	e5d41005 	ldrb	r1, [r4, #5]
40012868:	e2411001 	sub	r1, r1, #1
4001286c:	e1800401 	orr	r0, r0, r1, lsl #8
40012870:	e5d41006 	ldrb	r1, [r4, #6]
40012874:	e2411001 	sub	r1, r1, #1
40012878:	e1800601 	orr	r0, r0, r1, lsl #12
4001287c:	e5d4100c 	ldrb	r1, [r4, #12]
40012880:	e1805201 	orr	r5, r0, r1, lsl #4
40012884:	e594a000 	ldr	sl, [r4]
40012888:	ea000000 	b	40012890 <CyU3PDeviceInit+0xf4>
4001288c:	e59f5334 	ldr	r5, [pc, #820]	; 40012bc8 <CyU3PDeviceInit+0x42c>
40012890:	e59f0334 	ldr	r0, [pc, #820]	; 40012bcc <CyU3PDeviceInit+0x430>
40012894:	e5805004 	str	r5, [r0, #4]
40012898:	e5905004 	ldr	r5, [r0, #4]
4001289c:	e3a0000a 	mov	r0, #10
400128a0:	eb0003f6 	bl	40013880 <CyU3PBusyWait>
400128a4:	e59f0320 	ldr	r0, [pc, #800]	; 40012bcc <CyU3PDeviceInit+0x430>
400128a8:	e5900000 	ldr	r0, [r0]
400128ac:	e2000807 	and	r0, r0, #458752	; 0x70000
400128b0:	e1a05820 	lsr	r5, r0, #16
400128b4:	e2150003 	ands	r0, r5, #3
400128b8:	0a000004 	beq	400128d0 <CyU3PDeviceInit+0x134>
400128bc:	e3500001 	cmp	r0, #1
400128c0:	0a00000e 	beq	40012900 <CyU3PDeviceInit+0x164>
400128c4:	e3500002 	cmp	r0, #2
400128c8:	1a000024 	bne	40012960 <CyU3PDeviceInit+0x1c4>
400128cc:	ea000014 	b	40012924 <CyU3PDeviceInit+0x188>
400128d0:	e1a00000 	nop			; (mov r0, r0)
400128d4:	e59f92f4 	ldr	r9, [pc, #756]	; 40012bd0 <CyU3PDeviceInit+0x434>
400128d8:	e35a0000 	cmp	sl, #0
400128dc:	0a000003 	beq	400128f0 <CyU3PDeviceInit+0x154>
400128e0:	e59f02ec 	ldr	r0, [pc, #748]	; 40012bd4 <CyU3PDeviceInit+0x438>
400128e4:	e59f12ec 	ldr	r1, [pc, #748]	; 40012bd8 <CyU3PDeviceInit+0x43c>
400128e8:	e5810000 	str	r0, [r1]
400128ec:	ea000002 	b	400128fc <CyU3PDeviceInit+0x160>
400128f0:	e59f02e4 	ldr	r0, [pc, #740]	; 40012bdc <CyU3PDeviceInit+0x440>
400128f4:	e59f12dc 	ldr	r1, [pc, #732]	; 40012bd8 <CyU3PDeviceInit+0x43c>
400128f8:	e5810000 	str	r0, [r1]
400128fc:	ea000020 	b	40012984 <CyU3PDeviceInit+0x1e8>
40012900:	e1a00000 	nop			; (mov r0, r0)
40012904:	e59f92d4 	ldr	r9, [pc, #724]	; 40012be0 <CyU3PDeviceInit+0x444>
40012908:	e1a00209 	lsl	r0, r9, #4
4001290c:	e59f12c4 	ldr	r1, [pc, #708]	; 40012bd8 <CyU3PDeviceInit+0x43c>
40012910:	e5810000 	str	r0, [r1]
40012914:	e59f02c8 	ldr	r0, [pc, #712]	; 40012be4 <CyU3PDeviceInit+0x448>
40012918:	e59f12c8 	ldr	r1, [pc, #712]	; 40012be8 <CyU3PDeviceInit+0x44c>
4001291c:	e5810000 	str	r0, [r1]
40012920:	ea000017 	b	40012984 <CyU3PDeviceInit+0x1e8>
40012924:	e1a00000 	nop			; (mov r0, r0)
40012928:	e59f92bc 	ldr	r9, [pc, #700]	; 40012bec <CyU3PDeviceInit+0x450>
4001292c:	e59f02bc 	ldr	r0, [pc, #700]	; 40012bf0 <CyU3PDeviceInit+0x454>
40012930:	e59f12b0 	ldr	r1, [pc, #688]	; 40012be8 <CyU3PDeviceInit+0x44c>
40012934:	e5810000 	str	r0, [r1]
40012938:	e35a0000 	cmp	sl, #0
4001293c:	0a000003 	beq	40012950 <CyU3PDeviceInit+0x1b4>
40012940:	e59f028c 	ldr	r0, [pc, #652]	; 40012bd4 <CyU3PDeviceInit+0x438>
40012944:	e59f128c 	ldr	r1, [pc, #652]	; 40012bd8 <CyU3PDeviceInit+0x43c>
40012948:	e5810000 	str	r0, [r1]
4001294c:	ea000002 	b	4001295c <CyU3PDeviceInit+0x1c0>
40012950:	e59f0284 	ldr	r0, [pc, #644]	; 40012bdc <CyU3PDeviceInit+0x440>
40012954:	e59f127c 	ldr	r1, [pc, #636]	; 40012bd8 <CyU3PDeviceInit+0x43c>
40012958:	e5810000 	str	r0, [r1]
4001295c:	ea000008 	b	40012984 <CyU3PDeviceInit+0x1e8>
40012960:	e1a00000 	nop			; (mov r0, r0)
40012964:	e59f9288 	ldr	r9, [pc, #648]	; 40012bf4 <CyU3PDeviceInit+0x458>
40012968:	e1a00189 	lsl	r0, r9, #3
4001296c:	e59f1264 	ldr	r1, [pc, #612]	; 40012bd8 <CyU3PDeviceInit+0x43c>
40012970:	e5810000 	str	r0, [r1]
40012974:	e59f027c 	ldr	r0, [pc, #636]	; 40012bf8 <CyU3PDeviceInit+0x45c>
40012978:	e59f1268 	ldr	r1, [pc, #616]	; 40012be8 <CyU3PDeviceInit+0x44c>
4001297c:	e5810000 	str	r0, [r1]
40012980:	e1a00000 	nop			; (mov r0, r0)
40012984:	e1a00000 	nop			; (mov r0, r0)
40012988:	e59f023c 	ldr	r0, [pc, #572]	; 40012bcc <CyU3PDeviceInit+0x430>
4001298c:	e5900000 	ldr	r0, [r0]
40012990:	e200003f 	and	r0, r0, #63	; 0x3f
40012994:	e3500015 	cmp	r0, #21
40012998:	1a000002 	bne	400129a8 <CyU3PDeviceInit+0x20c>
4001299c:	e59f0230 	ldr	r0, [pc, #560]	; 40012bd4 <CyU3PDeviceInit+0x438>
400129a0:	e59f1230 	ldr	r1, [pc, #560]	; 40012bd8 <CyU3PDeviceInit+0x43c>
400129a4:	e5810000 	str	r0, [r1]
400129a8:	e59f0228 	ldr	r0, [pc, #552]	; 40012bd8 <CyU3PDeviceInit+0x43c>
400129ac:	e5900000 	ldr	r0, [r0]
400129b0:	e59f121c 	ldr	r1, [pc, #540]	; 40012bd4 <CyU3PDeviceInit+0x438>
400129b4:	e1500001 	cmp	r0, r1
400129b8:	1a000013 	bne	40012a0c <CyU3PDeviceInit+0x270>
400129bc:	e59f0208 	ldr	r0, [pc, #520]	; 40012bcc <CyU3PDeviceInit+0x430>
400129c0:	e5900000 	ldr	r0, [r0]
400129c4:	e200003f 	and	r0, r0, #63	; 0x3f
400129c8:	e3500015 	cmp	r0, #21
400129cc:	0a00000e 	beq	40012a0c <CyU3PDeviceInit+0x270>
400129d0:	e59f01f4 	ldr	r0, [pc, #500]	; 40012bcc <CyU3PDeviceInit+0x430>
400129d4:	e5900000 	ldr	r0, [r0]
400129d8:	e3c0003f 	bic	r0, r0, #63	; 0x3f
400129dc:	e3800015 	orr	r0, r0, #21
400129e0:	e59f11e4 	ldr	r1, [pc, #484]	; 40012bcc <CyU3PDeviceInit+0x430>
400129e4:	e5810000 	str	r0, [r1]
400129e8:	e3a00064 	mov	r0, #100	; 0x64
400129ec:	eb0003a3 	bl	40013880 <CyU3PBusyWait>
400129f0:	e1a00000 	nop			; (mov r0, r0)
400129f4:	e59f01d0 	ldr	r0, [pc, #464]	; 40012bcc <CyU3PDeviceInit+0x430>
400129f8:	e5900000 	ldr	r0, [r0]
400129fc:	e3100702 	tst	r0, #524288	; 0x80000
40012a00:	0afffffb 	beq	400129f4 <CyU3PDeviceInit+0x258>
40012a04:	e3a00064 	mov	r0, #100	; 0x64
40012a08:	eb00039c 	bl	40013880 <CyU3PBusyWait>
40012a0c:	e59f01e8 	ldr	r0, [pc, #488]	; 40012bfc <CyU3PDeviceInit+0x460>
40012a10:	e5908014 	ldr	r8, [r0, #20]
40012a14:	e3a0000a 	mov	r0, #10
40012a18:	eb000398 	bl	40013880 <CyU3PBusyWait>
40012a1c:	e2080003 	and	r0, r8, #3
40012a20:	e3500002 	cmp	r0, #2
40012a24:	1a000005 	bne	40012a40 <CyU3PDeviceInit+0x2a4>
40012a28:	e3a07001 	mov	r7, #1
40012a2c:	e3880003 	orr	r0, r8, #3
40012a30:	e59f11c4 	ldr	r1, [pc, #452]	; 40012bfc <CyU3PDeviceInit+0x460>
40012a34:	e5810014 	str	r0, [r1, #20]
40012a38:	e3a0000a 	mov	r0, #10
40012a3c:	eb00038f 	bl	40013880 <CyU3PBusyWait>
40012a40:	e3180102 	tst	r8, #-2147483648	; 0x80000000
40012a44:	1a000004 	bne	40012a5c <CyU3PDeviceInit+0x2c0>
40012a48:	e3540000 	cmp	r4, #0
40012a4c:	0a000003 	beq	40012a60 <CyU3PDeviceInit+0x2c4>
40012a50:	e5940008 	ldr	r0, [r4, #8]
40012a54:	e3500000 	cmp	r0, #0
40012a58:	1a000000 	bne	40012a60 <CyU3PDeviceInit+0x2c4>
40012a5c:	e3a06001 	mov	r6, #1
40012a60:	e3560000 	cmp	r6, #0
40012a64:	1a000014 	bne	40012abc <CyU3PDeviceInit+0x320>
40012a68:	e3c80003 	bic	r0, r8, #3
40012a6c:	e3800001 	orr	r0, r0, #1
40012a70:	e59f1184 	ldr	r1, [pc, #388]	; 40012bfc <CyU3PDeviceInit+0x460>
40012a74:	e5810014 	str	r0, [r1, #20]
40012a78:	e3a00064 	mov	r0, #100	; 0x64
40012a7c:	eb00037f 	bl	40013880 <CyU3PBusyWait>
40012a80:	e59f0174 	ldr	r0, [pc, #372]	; 40012bfc <CyU3PDeviceInit+0x460>
40012a84:	e5905018 	ldr	r5, [r0, #24]
40012a88:	e3a000c8 	mov	r0, #200	; 0xc8
40012a8c:	eb00037b 	bl	40013880 <CyU3PBusyWait>
40012a90:	e59f0164 	ldr	r0, [pc, #356]	; 40012bfc <CyU3PDeviceInit+0x460>
40012a94:	e5900018 	ldr	r0, [r0, #24]
40012a98:	e1500005 	cmp	r0, r5
40012a9c:	1a000000 	bne	40012aa4 <CyU3PDeviceInit+0x308>
40012aa0:	e3a06001 	mov	r6, #1
40012aa4:	e3a00064 	mov	r0, #100	; 0x64
40012aa8:	eb000374 	bl	40013880 <CyU3PBusyWait>
40012aac:	e59f0148 	ldr	r0, [pc, #328]	; 40012bfc <CyU3PDeviceInit+0x460>
40012ab0:	e5808014 	str	r8, [r0, #20]
40012ab4:	e3a00064 	mov	r0, #100	; 0x64
40012ab8:	eb000370 	bl	40013880 <CyU3PBusyWait>
40012abc:	e3560000 	cmp	r6, #0
40012ac0:	0a000026 	beq	40012b60 <CyU3PDeviceInit+0x3c4>
40012ac4:	e59f0130 	ldr	r0, [pc, #304]	; 40012bfc <CyU3PDeviceInit+0x460>
40012ac8:	e5900014 	ldr	r0, [r0, #20]
40012acc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012ad0:	1a000022 	bne	40012b60 <CyU3PDeviceInit+0x3c4>
40012ad4:	e1a09109 	lsl	r9, r9, #2
40012ad8:	e3a01c7d 	mov	r1, #32000	; 0x7d00
40012adc:	e1a00009 	mov	r0, r9
40012ae0:	ebfff865 	bl	40010c7c <__aeabi_uidivmod>
40012ae4:	e1a09000 	mov	r9, r0
40012ae8:	e2095003 	and	r5, r9, #3
40012aec:	e1a09129 	lsr	r9, r9, #2
40012af0:	e3550010 	cmp	r5, #16
40012af4:	2a000000 	bcs	40012afc <CyU3PDeviceInit+0x360>
40012af8:	e2499001 	sub	r9, r9, #1
40012afc:	e1a09809 	lsl	r9, r9, #16
40012b00:	e59f00f8 	ldr	r0, [pc, #248]	; 40012c00 <CyU3PDeviceInit+0x464>
40012b04:	e1590000 	cmp	r9, r0
40012b08:	9a000000 	bls	40012b10 <CyU3PDeviceInit+0x374>
40012b0c:	e1a09000 	mov	r9, r0
40012b10:	e3a00064 	mov	r0, #100	; 0x64
40012b14:	eb000359 	bl	40013880 <CyU3PBusyWait>
40012b18:	e59f00dc 	ldr	r0, [pc, #220]	; 40012bfc <CyU3PDeviceInit+0x460>
40012b1c:	e5905014 	ldr	r5, [r0, #20]
40012b20:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
40012b24:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40012b28:	e1805009 	orr	r5, r0, r9
40012b2c:	e3a00064 	mov	r0, #100	; 0x64
40012b30:	eb000352 	bl	40013880 <CyU3PBusyWait>
40012b34:	e59f00c0 	ldr	r0, [pc, #192]	; 40012bfc <CyU3PDeviceInit+0x460>
40012b38:	e5805014 	str	r5, [r0, #20]
40012b3c:	e3a00064 	mov	r0, #100	; 0x64
40012b40:	eb00034e 	bl	40013880 <CyU3PBusyWait>
40012b44:	e59f00b0 	ldr	r0, [pc, #176]	; 40012bfc <CyU3PDeviceInit+0x460>
40012b48:	e5900014 	ldr	r0, [r0, #20]
40012b4c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012b50:	e59f10a4 	ldr	r1, [pc, #164]	; 40012bfc <CyU3PDeviceInit+0x460>
40012b54:	e5810014 	str	r0, [r1, #20]
40012b58:	e3a00064 	mov	r0, #100	; 0x64
40012b5c:	eb000347 	bl	40013880 <CyU3PBusyWait>
40012b60:	e59f0094 	ldr	r0, [pc, #148]	; 40012bfc <CyU3PDeviceInit+0x460>
40012b64:	e5900000 	ldr	r0, [r0]
40012b68:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012b6c:	e59f1088 	ldr	r1, [pc, #136]	; 40012bfc <CyU3PDeviceInit+0x460>
40012b70:	e5810000 	str	r0, [r1]
40012b74:	e3a00064 	mov	r0, #100	; 0x64
40012b78:	eb000340 	bl	40013880 <CyU3PBusyWait>
40012b7c:	eb003dcb 	bl	400222b0 <CyU3PVicInit>
40012b80:	e10f0000 	mrs	r0, CPSR
40012b84:	e3c00080 	bic	r0, r0, #128	; 0x80
40012b88:	e121f000 	msr	CPSR_c, r0
40012b8c:	e3570000 	cmp	r7, #0
40012b90:	0a000002 	beq	40012ba0 <CyU3PDeviceInit+0x404>
40012b94:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012b98:	e3a00001 	mov	r0, #1
40012b9c:	eb000024 	bl	40012c34 <CyU3PSysWatchDogConfigure>
40012ba0:	e59f005c 	ldr	r0, [pc, #92]	; 40012c04 <CyU3PDeviceInit+0x468>
40012ba4:	e5900000 	ldr	r0, [r0]
40012ba8:	e3500000 	cmp	r0, #0
40012bac:	0a000002 	beq	40012bbc <CyU3PDeviceInit+0x420>
40012bb0:	e59f004c 	ldr	r0, [pc, #76]	; 40012c04 <CyU3PDeviceInit+0x468>
40012bb4:	e5900000 	ldr	r0, [r0]
40012bb8:	eb000594 	bl	40014210 <CyU3PLppRestoreState>
40012bbc:	ebfffe7c 	bl	400125b4 <_etext>
40012bc0:	e3a00000 	mov	r0, #0
40012bc4:	eaffff03 	b	400127d8 <CyU3PDeviceInit+0x3c>
40012bc8:	00001131 	.word	0x00001131
40012bcc:	e0052000 	.word	0xe0052000
40012bd0:	0124f800 	.word	0x0124f800
40012bd4:	18085800 	.word	0x18085800
40012bd8:	40030c70 	.word	0x40030c70
40012bdc:	16e36000 	.word	0x16e36000
40012be0:	018cba80 	.word	0x018cba80
40012be4:	00910700 	.word	0x00910700
40012be8:	40030c78 	.word	0x40030c78
40012bec:	0249f000 	.word	0x0249f000
40012bf0:	00910608 	.word	0x00910608
40012bf4:	03197500 	.word	0x03197500
40012bf8:	00910580 	.word	0x00910580
40012bfc:	e0050000 	.word	0xe0050000
40012c00:	7fff0000 	.word	0x7fff0000
40012c04:	40030cac 	.word	0x40030cac

Disassembly of section i.CyU3PSysSetupMMU:

40012c08 <CyU3PSysSetupMMU>:
40012c08:	e92d4010 	push	{r4, lr}
40012c0c:	eb000049 	bl	40012d38 <CyU3PSysBarrierSync>
40012c10:	ebfffdc2 	bl	40012320 <CyU3PSysClearDCache>
40012c14:	eb000069 	bl	40012dc0 <CyU3PSysFlushICache>
40012c18:	eb000049 	bl	40012d44 <CyU3PSysDisableCacheMMU>
40012c1c:	eb00006a 	bl	40012dcc <CyU3PSysInitTCMs>
40012c20:	eb000041 	bl	40012d2c <CyU3PInitPageTable>
40012c24:	eb000061 	bl	40012db0 <CyU3PSysEnableMMU>
40012c28:	eb00006c 	bl	40012de0 <CyU3PSysLoadTLB>
40012c2c:	eb000041 	bl	40012d38 <CyU3PSysBarrierSync>
40012c30:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

40012c34 <CyU3PSysWatchDogConfigure>:
40012c34:	e92d4070 	push	{r4, r5, r6, lr}
40012c38:	e1a04000 	mov	r4, r0
40012c3c:	e1a05001 	mov	r5, r1
40012c40:	e59f00d8 	ldr	r0, [pc, #216]	; 40012d20 <CyU3PSysWatchDogConfigure+0xec>
40012c44:	e5906014 	ldr	r6, [r0, #20]
40012c48:	e3a00064 	mov	r0, #100	; 0x64
40012c4c:	eb00030b 	bl	40013880 <CyU3PBusyWait>
40012c50:	e3540000 	cmp	r4, #0
40012c54:	0a000023 	beq	40012ce8 <CyU3PSysWatchDogConfigure+0xb4>
40012c58:	e2060003 	and	r0, r6, #3
40012c5c:	e3500003 	cmp	r0, #3
40012c60:	0a000004 	beq	40012c78 <CyU3PSysWatchDogConfigure+0x44>
40012c64:	e3860003 	orr	r0, r6, #3
40012c68:	e59f10b0 	ldr	r1, [pc, #176]	; 40012d20 <CyU3PSysWatchDogConfigure+0xec>
40012c6c:	e5810014 	str	r0, [r1, #20]
40012c70:	e3a00064 	mov	r0, #100	; 0x64
40012c74:	eb000301 	bl	40013880 <CyU3PBusyWait>
40012c78:	e0850285 	add	r0, r5, r5, lsl #5
40012c7c:	e59f10a0 	ldr	r1, [pc, #160]	; 40012d24 <CyU3PSysWatchDogConfigure+0xf0>
40012c80:	e5810000 	str	r0, [r1]
40012c84:	e2810000 	add	r0, r1, #0
40012c88:	e5900000 	ldr	r0, [r0]
40012c8c:	e1500005 	cmp	r0, r5
40012c90:	2a000001 	bcs	40012c9c <CyU3PSysWatchDogConfigure+0x68>
40012c94:	e3e00000 	mvn	r0, #0
40012c98:	e5810000 	str	r0, [r1]
40012c9c:	e59f0080 	ldr	r0, [pc, #128]	; 40012d24 <CyU3PSysWatchDogConfigure+0xf0>
40012ca0:	e5900000 	ldr	r0, [r0]
40012ca4:	e59f1074 	ldr	r1, [pc, #116]	; 40012d20 <CyU3PSysWatchDogConfigure+0xec>
40012ca8:	e5810018 	str	r0, [r1, #24]
40012cac:	e3a00064 	mov	r0, #100	; 0x64
40012cb0:	eb0002f2 	bl	40013880 <CyU3PBusyWait>
40012cb4:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012cb8:	e38660fa 	orr	r6, r6, #250	; 0xfa
40012cbc:	e59f005c 	ldr	r0, [pc, #92]	; 40012d20 <CyU3PSysWatchDogConfigure+0xec>
40012cc0:	e5806014 	str	r6, [r0, #20]
40012cc4:	e3a00064 	mov	r0, #100	; 0x64
40012cc8:	eb0002ec 	bl	40013880 <CyU3PBusyWait>
40012ccc:	e2060c03 	and	r0, r6, #768	; 0x300
40012cd0:	e3500c03 	cmp	r0, #768	; 0x300
40012cd4:	1a000010 	bne	40012d1c <CyU3PSysWatchDogConfigure+0xe8>
40012cd8:	e59f0048 	ldr	r0, [pc, #72]	; 40012d28 <CyU3PSysWatchDogConfigure+0xf4>
40012cdc:	e1d000b0 	ldrh	r0, [r0]
40012ce0:	eb003d18 	bl	40022148 <CyU3POsTimerInit>
40012ce4:	ea00000c 	b	40012d1c <CyU3PSysWatchDogConfigure+0xe8>
40012ce8:	e2060003 	and	r0, r6, #3
40012cec:	e3500003 	cmp	r0, #3
40012cf0:	0a000006 	beq	40012d10 <CyU3PSysWatchDogConfigure+0xdc>
40012cf4:	e59f0024 	ldr	r0, [pc, #36]	; 40012d20 <CyU3PSysWatchDogConfigure+0xec>
40012cf8:	e5900014 	ldr	r0, [r0, #20]
40012cfc:	e3800003 	orr	r0, r0, #3
40012d00:	e59f1018 	ldr	r1, [pc, #24]	; 40012d20 <CyU3PSysWatchDogConfigure+0xec>
40012d04:	e5810014 	str	r0, [r1, #20]
40012d08:	e3a00064 	mov	r0, #100	; 0x64
40012d0c:	eb0002db 	bl	40013880 <CyU3PBusyWait>
40012d10:	e3a00000 	mov	r0, #0
40012d14:	e59f1008 	ldr	r1, [pc, #8]	; 40012d24 <CyU3PSysWatchDogConfigure+0xf0>
40012d18:	e5810000 	str	r0, [r1]
40012d1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40012d20:	e0050000 	.word	0xe0050000
40012d24:	40030c74 	.word	0x40030c74
40012d28:	40030dd8 	.word	0x40030dd8

Disassembly of section i.CyU3PInitPageTable:

40012d2c <CyU3PInitPageTable>:
40012d2c:	e92d4010 	push	{r4, lr}
40012d30:	eb0007ad 	bl	40014bec <CyFx3DevInitPageTables>
40012d34:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012d38 <CyU3PSysBarrierSync>:
40012d38:	e3a00000 	mov	r0, #0
40012d3c:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012d40:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012d44 <CyU3PSysDisableCacheMMU>:
40012d44:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012d48:	e59f2018 	ldr	r2, [pc, #24]	; 40012d68 <CyU3PSysDisableCacheMMU+0x24>
40012d4c:	e1c00002 	bic	r0, r0, r2
40012d50:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012d54:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012d58:	e3e01801 	mvn	r1, #65536	; 0x10000
40012d5c:	e0000001 	and	r0, r0, r1
40012d60:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012d64:	e12fff1e 	bx	lr
40012d68:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012d6c <CyU3PSysDisableDCache>:
40012d6c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012d70:	e3c00004 	bic	r0, r0, #4
40012d74:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012d78:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012d7c <CyU3PSysDisableICache>:
40012d7c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012d80:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012d84:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012d88:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012d8c <CyU3PSysEnableDCache>:
40012d8c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012d90:	e3800004 	orr	r0, r0, #4
40012d94:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012d98:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012d9c <CyU3PSysEnableICache>:
40012d9c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012da0:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012da4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012da8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dac:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012db0 <CyU3PSysEnableMMU>:
40012db0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012db4:	e3800001 	orr	r0, r0, #1
40012db8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dbc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012dc0 <CyU3PSysFlushICache>:
40012dc0:	e3a00000 	mov	r0, #0
40012dc4:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012dc8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012dcc <CyU3PSysInitTCMs>:
40012dcc:	e3a00015 	mov	r0, #21
40012dd0:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012dd4:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012dd8:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012ddc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012de0 <CyU3PSysLoadTLB>:
40012de0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012de4:	e3a00000 	mov	r0, #0
40012de8:	eb00000b 	bl	40012e1c <CyU3PSysLockTLBEntry>
40012dec:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012df0:	eb000009 	bl	40012e1c <CyU3PSysLockTLBEntry>
40012df4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012df8:	eb000007 	bl	40012e1c <CyU3PSysLockTLBEntry>
40012dfc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012e00:	eb000005 	bl	40012e1c <CyU3PSysLockTLBEntry>
40012e04:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012e08:	eb000003 	bl	40012e1c <CyU3PSysLockTLBEntry>
40012e0c:	e59f0004 	ldr	r0, [pc, #4]	; 40012e18 <CyU3PSysLoadTLB+0x38>
40012e10:	eb000001 	bl	40012e1c <CyU3PSysLockTLBEntry>
40012e14:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012e18:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012e1c <CyU3PSysLockTLBEntry>:
40012e1c:	e3a01000 	mov	r1, #0
40012e20:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012e24:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012e28:	e3811001 	orr	r1, r1, #1
40012e2c:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012e30:	e5900000 	ldr	r0, [r0]
40012e34:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012e38:	e3c11001 	bic	r1, r1, #1
40012e3c:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012e40:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012e44 <CyU3PDeviceConfigureIOMatrix>:
40012e44:	e92d4010 	push	{r4, lr}
40012e48:	e1a04000 	mov	r4, r0
40012e4c:	e3540000 	cmp	r4, #0
40012e50:	1a000001 	bne	40012e5c <CyU3PDeviceConfigureIOMatrix+0x18>
40012e54:	e3a00041 	mov	r0, #65	; 0x41
40012e58:	e8bd8010 	pop	{r4, pc}
40012e5c:	e1a00004 	mov	r0, r4
40012e60:	eb0005fd 	bl	4001465c <CyFx3DevIOConfigure>
40012e64:	e3500000 	cmp	r0, #0
40012e68:	1a000001 	bne	40012e74 <CyU3PDeviceConfigureIOMatrix+0x30>
40012e6c:	e3a00040 	mov	r0, #64	; 0x40
40012e70:	eafffff8 	b	40012e58 <CyU3PDeviceConfigureIOMatrix+0x14>
40012e74:	e3a00000 	mov	r0, #0
40012e78:	eafffff6 	b	40012e58 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012e7c <CyU3PDeviceGpioOverride>:
40012e7c:	e92d4070 	push	{r4, r5, r6, lr}
40012e80:	e1a04000 	mov	r4, r0
40012e84:	e1a05001 	mov	r5, r1
40012e88:	e354003d 	cmp	r4, #61	; 0x3d
40012e8c:	ba000001 	blt	40012e98 <CyU3PDeviceGpioOverride+0x1c>
40012e90:	e3a00040 	mov	r0, #64	; 0x40
40012e94:	e8bd8070 	pop	{r4, r5, r6, pc}
40012e98:	e1a02005 	mov	r2, r5
40012e9c:	e3a01001 	mov	r1, #1
40012ea0:	e1a00004 	mov	r0, r4
40012ea4:	eb00066c 	bl	4001485c <CyFx3DevIOSelectGpio>
40012ea8:	e3a00000 	mov	r0, #0
40012eac:	eafffff8 	b	40012e94 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012eb0 <CyU3PIsGpioComplexIOConfigured>:
40012eb0:	e92d4010 	push	{r4, lr}
40012eb4:	e1a04000 	mov	r4, r0
40012eb8:	e3a01000 	mov	r1, #0
40012ebc:	e1a00004 	mov	r0, r4
40012ec0:	eb000645 	bl	400147dc <CyFx3DevIOIsGpio>
40012ec4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012ec8 <CyU3PIsGpioSimpleIOConfigured>:
40012ec8:	e92d4010 	push	{r4, lr}
40012ecc:	e1a04000 	mov	r4, r0
40012ed0:	e3a01001 	mov	r1, #1
40012ed4:	e1a00004 	mov	r0, r4
40012ed8:	eb00063f 	bl	400147dc <CyFx3DevIOIsGpio>
40012edc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012ee0 <CyU3PIsGpioValid>:
40012ee0:	e1a01000 	mov	r1, r0
40012ee4:	e351003d 	cmp	r1, #61	; 0x3d
40012ee8:	aa000001 	bge	40012ef4 <CyU3PIsGpioValid+0x14>
40012eec:	e3a00001 	mov	r0, #1
40012ef0:	e12fff1e 	bx	lr
40012ef4:	e3a00000 	mov	r0, #0
40012ef8:	eafffffc 	b	40012ef0 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012efc <CyU3PIsLppIOConfigured>:
40012efc:	e92d4070 	push	{r4, r5, r6, lr}
40012f00:	e1a04000 	mov	r4, r0
40012f04:	e3a05000 	mov	r5, #0
40012f08:	e3540000 	cmp	r4, #0
40012f0c:	0a00000a 	beq	40012f3c <CyU3PIsLppIOConfigured+0x40>
40012f10:	e3540001 	cmp	r4, #1
40012f14:	0a000004 	beq	40012f2c <CyU3PIsLppIOConfigured+0x30>
40012f18:	e3540002 	cmp	r4, #2
40012f1c:	0a00000e 	beq	40012f5c <CyU3PIsLppIOConfigured+0x60>
40012f20:	e3540003 	cmp	r4, #3
40012f24:	1a000010 	bne	40012f6c <CyU3PIsLppIOConfigured+0x70>
40012f28:	ea000007 	b	40012f4c <CyU3PIsLppIOConfigured+0x50>
40012f2c:	e1a00000 	nop			; (mov r0, r0)
40012f30:	eb00063d 	bl	4001482c <CyFx3DevIOIsI2sConfigured>
40012f34:	e1a05000 	mov	r5, r0
40012f38:	ea00000d 	b	40012f74 <CyU3PIsLppIOConfigured+0x78>
40012f3c:	e1a00000 	nop			; (mov r0, r0)
40012f40:	eb000635 	bl	4001481c <CyFx3DevIOIsI2cConfigured>
40012f44:	e1a05000 	mov	r5, r0
40012f48:	ea000009 	b	40012f74 <CyU3PIsLppIOConfigured+0x78>
40012f4c:	e1a00000 	nop			; (mov r0, r0)
40012f50:	eb00063d 	bl	4001484c <CyFx3DevIOIsUartConfigured>
40012f54:	e1a05000 	mov	r5, r0
40012f58:	ea000005 	b	40012f74 <CyU3PIsLppIOConfigured+0x78>
40012f5c:	e1a00000 	nop			; (mov r0, r0)
40012f60:	eb000635 	bl	4001483c <CyFx3DevIOIsSpiConfigured>
40012f64:	e1a05000 	mov	r5, r0
40012f68:	ea000001 	b	40012f74 <CyU3PIsLppIOConfigured+0x78>
40012f6c:	e1a00000 	nop			; (mov r0, r0)
40012f70:	e1a00000 	nop			; (mov r0, r0)
40012f74:	e1a00000 	nop			; (mov r0, r0)
40012f78:	e1a00005 	mov	r0, r5
40012f7c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012f80 <CyU3PDebugApplicationDefine>:
40012f80:	e92d4010 	push	{r4, lr}
40012f84:	e24dd020 	sub	sp, sp, #32
40012f88:	e3a00000 	mov	r0, #0
40012f8c:	e59f109c 	ldr	r1, [pc, #156]	; 40013030 <CyU3PDebugApplicationDefine+0xb0>
40012f90:	e5810000 	str	r0, [r1]
40012f94:	e3a00001 	mov	r0, #1
40012f98:	e2811008 	add	r1, r1, #8
40012f9c:	e5810000 	str	r0, [r1]
40012fa0:	e3a00c02 	mov	r0, #512	; 0x200
40012fa4:	ebffc1b2 	bl	40003674 <CyU3PMemAlloc>
40012fa8:	e1a04000 	mov	r4, r0
40012fac:	e3a030a8 	mov	r3, #168	; 0xa8
40012fb0:	e3a02001 	mov	r2, #1
40012fb4:	e3a01000 	mov	r1, #0
40012fb8:	e3a00006 	mov	r0, #6
40012fbc:	e28dc00c 	add	ip, sp, #12
40012fc0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012fc4:	e3a02c02 	mov	r2, #512	; 0x200
40012fc8:	e1a03001 	mov	r3, r1
40012fcc:	e58d2004 	str	r2, [sp, #4]
40012fd0:	e59f205c 	ldr	r2, [pc, #92]	; 40013034 <CyU3PDebugApplicationDefine+0xb4>
40012fd4:	e28f105c 	add	r1, pc, #92	; 0x5c
40012fd8:	e58d0008 	str	r0, [sp, #8]
40012fdc:	e59f0064 	ldr	r0, [pc, #100]	; 40013048 <CyU3PDebugApplicationDefine+0xc8>
40012fe0:	e58d4000 	str	r4, [sp]
40012fe4:	ebffde0b 	bl	4000a818 <_txe_thread_create>
40012fe8:	e3a00084 	mov	r0, #132	; 0x84
40012fec:	ebffc1a0 	bl	40003674 <CyU3PMemAlloc>
40012ff0:	e1a04000 	mov	r4, r0
40012ff4:	e3a0303c 	mov	r3, #60	; 0x3c
40012ff8:	e3a02084 	mov	r2, #132	; 0x84
40012ffc:	e1cd20f0 	strd	r2, [sp]
40013000:	e1a03004 	mov	r3, r4
40013004:	e3a02003 	mov	r2, #3
40013008:	e3a01000 	mov	r1, #0
4001300c:	e59f0038 	ldr	r0, [pc, #56]	; 4001304c <CyU3PDebugApplicationDefine+0xcc>
40013010:	ebffdd1a 	bl	4000a480 <_txe_queue_create>
40013014:	e3a03038 	mov	r3, #56	; 0x38
40013018:	e3a02000 	mov	r2, #0
4001301c:	e1a01002 	mov	r1, r2
40013020:	e59f0028 	ldr	r0, [pc, #40]	; 40013050 <CyU3PDebugApplicationDefine+0xd0>
40013024:	ebffdc3a 	bl	4000a114 <_txe_mutex_create>
40013028:	e28dd020 	add	sp, sp, #32
4001302c:	e8bd8010 	pop	{r4, pc}
40013030:	40030c90 	.word	0x40030c90
40013034:	400134f0 	.word	0x400134f0
40013038:	75626544 	.word	0x75626544
4001303c:	68542067 	.word	0x68542067
40013040:	64616572 	.word	0x64616572
40013044:	00000000 	.word	0x00000000
40013048:	40031258 	.word	0x40031258
4001304c:	40031300 	.word	0x40031300
40013050:	4003133c 	.word	0x4003133c

Disassembly of section i.CyU3PDebugChannelReset:

40013054 <CyU3PDebugChannelReset>:
40013054:	e92d4010 	push	{r4, lr}
40013058:	e59f0034 	ldr	r0, [pc, #52]	; 40013094 <CyU3PDebugChannelReset+0x40>
4001305c:	eb000d41 	bl	40016568 <CyU3PDmaChannelReset>
40013060:	e3a01000 	mov	r1, #0
40013064:	e59f0028 	ldr	r0, [pc, #40]	; 40013094 <CyU3PDebugChannelReset+0x40>
40013068:	eb000ddf 	bl	400167ec <CyU3PDmaChannelSetXfer>
4001306c:	e1a04000 	mov	r4, r0
40013070:	e3540000 	cmp	r4, #0
40013074:	1a000004 	bne	4001308c <CyU3PDebugChannelReset+0x38>
40013078:	e3e02000 	mvn	r2, #0
4001307c:	e59f1014 	ldr	r1, [pc, #20]	; 40013098 <CyU3PDebugChannelReset+0x44>
40013080:	e281000c 	add	r0, r1, #12
40013084:	eb000c6a 	bl	40016234 <CyU3PDmaChannelGetBuffer>
40013088:	e1a04000 	mov	r4, r0
4001308c:	e1a00004 	mov	r0, r4
40013090:	e8bd8010 	pop	{r4, pc}
40013094:	40031380 	.word	0x40031380
40013098:	40031374 	.word	0x40031374

Disassembly of section i.CyU3PDebugInit:

4001309c <CyU3PDebugInit>:
4001309c:	e92d4070 	push	{r4, r5, r6, lr}
400130a0:	e24dd020 	sub	sp, sp, #32
400130a4:	e1a04000 	mov	r4, r0
400130a8:	e1a06001 	mov	r6, r1
400130ac:	e59f0150 	ldr	r0, [pc, #336]	; 40013204 <CyU3PDebugInit+0x168>
400130b0:	e5900000 	ldr	r0, [r0]
400130b4:	e3500000 	cmp	r0, #0
400130b8:	1a000003 	bne	400130cc <CyU3PDebugInit+0x30>
400130bc:	e59f0144 	ldr	r0, [pc, #324]	; 40013208 <CyU3PDebugInit+0x16c>
400130c0:	e5900000 	ldr	r0, [r0]
400130c4:	e3500000 	cmp	r0, #0
400130c8:	0a000002 	beq	400130d8 <CyU3PDebugInit+0x3c>
400130cc:	e3a00043 	mov	r0, #67	; 0x43
400130d0:	e28dd020 	add	sp, sp, #32
400130d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400130d8:	e1a00004 	mov	r0, r4
400130dc:	eb0007b3 	bl	40014fb0 <CyU3PDmaSocketIsValidConsumer>
400130e0:	e1a05000 	mov	r5, r0
400130e4:	e3550000 	cmp	r5, #0
400130e8:	1a000001 	bne	400130f4 <CyU3PDebugInit+0x58>
400130ec:	e3a00040 	mov	r0, #64	; 0x40
400130f0:	eafffff6 	b	400130d0 <CyU3PDebugInit+0x34>
400130f4:	e3e01000 	mvn	r1, #0
400130f8:	e59f010c 	ldr	r0, [pc, #268]	; 4001320c <CyU3PDebugInit+0x170>
400130fc:	ebffdc82 	bl	4000a30c <_txe_mutex_get>
40013100:	e3a00c01 	mov	r0, #256	; 0x100
40013104:	e1cd00b4 	strh	r0, [sp, #4]
40013108:	e3a00008 	mov	r0, #8
4001310c:	e1cd00b6 	strh	r0, [sp, #6]
40013110:	e3a00000 	mov	r0, #0
40013114:	e1cd00bc 	strh	r0, [sp, #12]
40013118:	e59f00f0 	ldr	r0, [pc, #240]	; 40013210 <CyU3PDebugInit+0x174>
4001311c:	e1cd00b8 	strh	r0, [sp, #8]
40013120:	e1cd40ba 	strh	r4, [sp, #10]
40013124:	e3a00000 	mov	r0, #0
40013128:	e5cd0014 	strb	r0, [sp, #20]
4001312c:	e1cd00be 	strh	r0, [sp, #14]
40013130:	e1cd01b0 	strh	r0, [sp, #16]
40013134:	e1cd01b2 	strh	r0, [sp, #18]
40013138:	e58d001c 	str	r0, [sp, #28]
4001313c:	e28d2004 	add	r2, sp, #4
40013140:	e3a01004 	mov	r1, #4
40013144:	e59f00c8 	ldr	r0, [pc, #200]	; 40013214 <CyU3PDebugInit+0x178>
40013148:	eb000a71 	bl	40015b14 <CyU3PDmaChannelCreate>
4001314c:	e1a05000 	mov	r5, r0
40013150:	e3550000 	cmp	r5, #0
40013154:	1a000007 	bne	40013178 <CyU3PDebugInit+0xdc>
40013158:	e59f00b8 	ldr	r0, [pc, #184]	; 40013218 <CyU3PDebugInit+0x17c>
4001315c:	e5900000 	ldr	r0, [r0]
40013160:	e3500000 	cmp	r0, #0
40013164:	0a000003 	beq	40013178 <CyU3PDebugInit+0xdc>
40013168:	e3a01001 	mov	r1, #1
4001316c:	e59f00a0 	ldr	r0, [pc, #160]	; 40013214 <CyU3PDebugInit+0x178>
40013170:	eb0008d7 	bl	400154d4 <CyU3PDmaChannelCacheControl>
40013174:	e1a05000 	mov	r5, r0
40013178:	e3550000 	cmp	r5, #0
4001317c:	1a000003 	bne	40013190 <CyU3PDebugInit+0xf4>
40013180:	e3a01000 	mov	r1, #0
40013184:	e59f0088 	ldr	r0, [pc, #136]	; 40013214 <CyU3PDebugInit+0x178>
40013188:	eb000d97 	bl	400167ec <CyU3PDmaChannelSetXfer>
4001318c:	e1a05000 	mov	r5, r0
40013190:	e3550000 	cmp	r5, #0
40013194:	1a000004 	bne	400131ac <CyU3PDebugInit+0x110>
40013198:	e3e02000 	mvn	r2, #0
4001319c:	e59f1078 	ldr	r1, [pc, #120]	; 4001321c <CyU3PDebugInit+0x180>
400131a0:	e281000c 	add	r0, r1, #12
400131a4:	eb000c22 	bl	40016234 <CyU3PDmaChannelGetBuffer>
400131a8:	e1a05000 	mov	r5, r0
400131ac:	e3550000 	cmp	r5, #0
400131b0:	0a000005 	beq	400131cc <CyU3PDebugInit+0x130>
400131b4:	e59f0058 	ldr	r0, [pc, #88]	; 40013214 <CyU3PDebugInit+0x178>
400131b8:	eb000b4f 	bl	40015efc <CyU3PDmaChannelDestroy>
400131bc:	e59f0048 	ldr	r0, [pc, #72]	; 4001320c <CyU3PDebugInit+0x170>
400131c0:	ebffdc86 	bl	4000a3e0 <_txe_mutex_put>
400131c4:	e1a00005 	mov	r0, r5
400131c8:	eaffffc0 	b	400130d0 <CyU3PDebugInit+0x34>
400131cc:	e3a00000 	mov	r0, #0
400131d0:	e59f1048 	ldr	r1, [pc, #72]	; 40013220 <CyU3PDebugInit+0x184>
400131d4:	e1c100b0 	strh	r0, [r1]
400131d8:	e59f1044 	ldr	r1, [pc, #68]	; 40013224 <CyU3PDebugInit+0x188>
400131dc:	e1c100b0 	strh	r0, [r1]
400131e0:	e59f0040 	ldr	r0, [pc, #64]	; 40013228 <CyU3PDebugInit+0x18c>
400131e4:	e5c06000 	strb	r6, [r0]
400131e8:	e3a00001 	mov	r0, #1
400131ec:	e2411010 	sub	r1, r1, #16
400131f0:	e5810000 	str	r0, [r1]
400131f4:	e59f0010 	ldr	r0, [pc, #16]	; 4001320c <CyU3PDebugInit+0x170>
400131f8:	ebffdc78 	bl	4000a3e0 <_txe_mutex_put>
400131fc:	e1a00005 	mov	r0, r5
40013200:	eaffffb2 	b	400130d0 <CyU3PDebugInit+0x34>
40013204:	40030c90 	.word	0x40030c90
40013208:	40030c94 	.word	0x40030c94
4001320c:	4003133c 	.word	0x4003133c
40013210:	00003f01 	.word	0x00003f01
40013214:	40031380 	.word	0x40031380
40013218:	40030c80 	.word	0x40030c80
4001321c:	40031374 	.word	0x40031374
40013220:	40030c9e 	.word	0x40030c9e
40013224:	40030ca0 	.word	0x40030ca0
40013228:	40030c9c 	.word	0x40030c9c

Disassembly of section i.CyU3PDebugIntToStr:

4001322c <CyU3PDebugIntToStr>:
4001322c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40013230:	e1a04000 	mov	r4, r0
40013234:	e1a05001 	mov	r5, r1
40013238:	e1a08002 	mov	r8, r2
4001323c:	e3a0600a 	mov	r6, #10
40013240:	e1a07004 	mov	r7, r4
40013244:	e3a00000 	mov	r0, #0
40013248:	e1a04007 	mov	r4, r7
4001324c:	e7c70006 	strb	r0, [r7, r6]
40013250:	e1a00000 	nop			; (mov r0, r0)
40013254:	e1a01008 	mov	r1, r8
40013258:	e1a00005 	mov	r0, r5
4001325c:	ebfff686 	bl	40010c7c <__aeabi_uidivmod>
40013260:	e28f0030 	add	r0, pc, #48	; 0x30
40013264:	e7d00001 	ldrb	r0, [r0, r1]
40013268:	e2461001 	sub	r1, r6, #1
4001326c:	e20110ff 	and	r1, r1, #255	; 0xff
40013270:	e1a06001 	mov	r6, r1
40013274:	e7c70001 	strb	r0, [r7, r1]
40013278:	e1a01008 	mov	r1, r8
4001327c:	e1a00005 	mov	r0, r5
40013280:	ebfff67d 	bl	40010c7c <__aeabi_uidivmod>
40013284:	e1a05000 	mov	r5, r0
40013288:	e3550000 	cmp	r5, #0
4001328c:	1afffff0 	bne	40013254 <CyU3PDebugIntToStr+0x28>
40013290:	e0870006 	add	r0, r7, r6
40013294:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40013298:	33323130 	.word	0x33323130
4001329c:	37363534 	.word	0x37363534
400132a0:	42413938 	.word	0x42413938
400132a4:	46454443 	.word	0x46454443
400132a8:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

400132ac <CyU3PDebugPreamble>:
400132ac:	e59f1004 	ldr	r1, [pc, #4]	; 400132b8 <CyU3PDebugPreamble+0xc>
400132b0:	e5810000 	str	r0, [r1]
400132b4:	e12fff1e 	bx	lr
400132b8:	40030c98 	.word	0x40030c98

Disassembly of section i.CyU3PDebugPrint:

400132bc <CyU3PDebugPrint>:
400132bc:	e92d000f 	push	{r0, r1, r2, r3}
400132c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400132c4:	e24dd028 	sub	sp, sp, #40	; 0x28
400132c8:	e1a04000 	mov	r4, r0
400132cc:	e59f0200 	ldr	r0, [pc, #512]	; 400134d4 <CyU3PDebugPrint+0x218>
400132d0:	e5900000 	ldr	r0, [r0]
400132d4:	e3500000 	cmp	r0, #0
400132d8:	1a000003 	bne	400132ec <CyU3PDebugPrint+0x30>
400132dc:	e3a00042 	mov	r0, #66	; 0x42
400132e0:	e28dd028 	add	sp, sp, #40	; 0x28
400132e4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400132e8:	e49df014 	ldr	pc, [sp], #20
400132ec:	e59f01e4 	ldr	r0, [pc, #484]	; 400134d8 <CyU3PDebugPrint+0x21c>
400132f0:	e5d00000 	ldrb	r0, [r0]
400132f4:	e1540000 	cmp	r4, r0
400132f8:	da000001 	ble	40013304 <CyU3PDebugPrint+0x48>
400132fc:	e3a00000 	mov	r0, #0
40013300:	eafffff6 	b	400132e0 <CyU3PDebugPrint+0x24>
40013304:	ebffd5eb 	bl	40008ab8 <_tx_thread_identify>
40013308:	e1a05000 	mov	r5, r0
4001330c:	e3550000 	cmp	r5, #0
40013310:	1a000001 	bne	4001331c <CyU3PDebugPrint+0x60>
40013314:	e3a00013 	mov	r0, #19
40013318:	eafffff0 	b	400132e0 <CyU3PDebugPrint+0x24>
4001331c:	e3a03000 	mov	r3, #0
40013320:	e58d3004 	str	r3, [sp, #4]
40013324:	e58d3008 	str	r3, [sp, #8]
40013328:	e58d300c 	str	r3, [sp, #12]
4001332c:	e58d3010 	str	r3, [sp, #16]
40013330:	e58d3000 	str	r3, [sp]
40013334:	e1a02003 	mov	r2, r3
40013338:	e28d1018 	add	r1, sp, #24
4001333c:	e1a00005 	mov	r0, r5
40013340:	ebffddcd 	bl	4000aa7c <_txe_thread_info_get>
40013344:	e59d0018 	ldr	r0, [sp, #24]
40013348:	e5d00001 	ldrb	r0, [r0, #1]
4001334c:	e2400030 	sub	r0, r0, #48	; 0x30
40013350:	e59d1018 	ldr	r1, [sp, #24]
40013354:	e5d11000 	ldrb	r1, [r1]
40013358:	e2411030 	sub	r1, r1, #48	; 0x30
4001335c:	e3a0200a 	mov	r2, #10
40013360:	e1000182 	smlabb	r0, r2, r1, r0
40013364:	e20080ff 	and	r8, r0, #255	; 0xff
40013368:	e3e01000 	mvn	r1, #0
4001336c:	e59f0168 	ldr	r0, [pc, #360]	; 400134dc <CyU3PDebugPrint+0x220>
40013370:	ebffdbe5 	bl	4000a30c <_txe_mutex_get>
40013374:	e59f0164 	ldr	r0, [pc, #356]	; 400134e0 <CyU3PDebugPrint+0x224>
40013378:	e1d000b0 	ldrh	r0, [r0]
4001337c:	e3500000 	cmp	r0, #0
40013380:	0a000011 	beq	400133cc <CyU3PDebugPrint+0x110>
40013384:	e3a02000 	mov	r2, #0
40013388:	e3a01c01 	mov	r1, #256	; 0x100
4001338c:	e59f0150 	ldr	r0, [pc, #336]	; 400134e4 <CyU3PDebugPrint+0x228>
40013390:	eb000864 	bl	40015528 <CyU3PDmaChannelCommitBuffer>
40013394:	e1a06000 	mov	r6, r0
40013398:	e3560000 	cmp	r6, #0
4001339c:	1a000004 	bne	400133b4 <CyU3PDebugPrint+0xf8>
400133a0:	e3e02000 	mvn	r2, #0
400133a4:	e59f113c 	ldr	r1, [pc, #316]	; 400134e8 <CyU3PDebugPrint+0x22c>
400133a8:	e281000c 	add	r0, r1, #12
400133ac:	eb000ba0 	bl	40016234 <CyU3PDmaChannelGetBuffer>
400133b0:	e1a06000 	mov	r6, r0
400133b4:	e3560000 	cmp	r6, #0
400133b8:	0a000000 	beq	400133c0 <CyU3PDebugPrint+0x104>
400133bc:	ebffff24 	bl	40013054 <CyU3PDebugChannelReset>
400133c0:	e3a00000 	mov	r0, #0
400133c4:	e59f1114 	ldr	r1, [pc, #276]	; 400134e0 <CyU3PDebugPrint+0x224>
400133c8:	e1c100b0 	strh	r0, [r1]
400133cc:	e59f0114 	ldr	r0, [pc, #276]	; 400134e8 <CyU3PDebugPrint+0x22c>
400133d0:	e5907000 	ldr	r7, [r0]
400133d4:	e3a00c01 	mov	r0, #256	; 0x100
400133d8:	e58d0014 	str	r0, [sp, #20]
400133dc:	e59f0108 	ldr	r0, [pc, #264]	; 400134ec <CyU3PDebugPrint+0x230>
400133e0:	e5900000 	ldr	r0, [r0]
400133e4:	e3500000 	cmp	r0, #0
400133e8:	0a000005 	beq	40013404 <CyU3PDebugPrint+0x148>
400133ec:	e2877008 	add	r7, r7, #8
400133f0:	e1dd01b4 	ldrh	r0, [sp, #20]
400133f4:	e2400008 	sub	r0, r0, #8
400133f8:	e1a00800 	lsl	r0, r0, #16
400133fc:	e1a00820 	lsr	r0, r0, #16
40013400:	e58d0014 	str	r0, [sp, #20]
40013404:	e28d0048 	add	r0, sp, #72	; 0x48
40013408:	e58d001c 	str	r0, [sp, #28]
4001340c:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40013410:	e59d301c 	ldr	r3, [sp, #28]
40013414:	e28d1014 	add	r1, sp, #20
40013418:	e1a00007 	mov	r0, r7
4001341c:	eb000071 	bl	400135e8 <MyDebugSNPrint>
40013420:	e1a06000 	mov	r6, r0
40013424:	e59f00c0 	ldr	r0, [pc, #192]	; 400134ec <CyU3PDebugPrint+0x230>
40013428:	e5900000 	ldr	r0, [r0]
4001342c:	e3500000 	cmp	r0, #0
40013430:	0a00000f 	beq	40013474 <CyU3PDebugPrint+0x1b8>
40013434:	e59f00ac 	ldr	r0, [pc, #172]	; 400134e8 <CyU3PDebugPrint+0x22c>
40013438:	e5907000 	ldr	r7, [r0]
4001343c:	e5cd4020 	strb	r4, [sp, #32]
40013440:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40013444:	e3e00000 	mvn	r0, #0
40013448:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001344c:	e1dd01b4 	ldrh	r0, [sp, #20]
40013450:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013454:	e3a02008 	mov	r2, #8
40013458:	e28d1020 	add	r1, sp, #32
4001345c:	e1a00007 	mov	r0, r7
40013460:	ebffc11b 	bl	400038d4 <CyU3PMemCopy>
40013464:	e1dd01b4 	ldrh	r0, [sp, #20]
40013468:	e2800008 	add	r0, r0, #8
4001346c:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40013470:	e58d0014 	str	r0, [sp, #20]
40013474:	e3a02000 	mov	r2, #0
40013478:	e1dd11b4 	ldrh	r1, [sp, #20]
4001347c:	e59f0060 	ldr	r0, [pc, #96]	; 400134e4 <CyU3PDebugPrint+0x228>
40013480:	eb000828 	bl	40015528 <CyU3PDmaChannelCommitBuffer>
40013484:	e1a06000 	mov	r6, r0
40013488:	e3560000 	cmp	r6, #0
4001348c:	1a000004 	bne	400134a4 <CyU3PDebugPrint+0x1e8>
40013490:	e3e02000 	mvn	r2, #0
40013494:	e59f104c 	ldr	r1, [pc, #76]	; 400134e8 <CyU3PDebugPrint+0x22c>
40013498:	e281000c 	add	r0, r1, #12
4001349c:	eb000b64 	bl	40016234 <CyU3PDmaChannelGetBuffer>
400134a0:	e1a06000 	mov	r6, r0
400134a4:	e3560000 	cmp	r6, #0
400134a8:	0a000002 	beq	400134b8 <CyU3PDebugPrint+0x1fc>
400134ac:	ebfffee8 	bl	40013054 <CyU3PDebugChannelReset>
400134b0:	e1a00006 	mov	r0, r6
400134b4:	eaffff89 	b	400132e0 <CyU3PDebugPrint+0x24>
400134b8:	e3a00000 	mov	r0, #0
400134bc:	e59f101c 	ldr	r1, [pc, #28]	; 400134e0 <CyU3PDebugPrint+0x224>
400134c0:	e1c100b0 	strh	r0, [r1]
400134c4:	e59f0010 	ldr	r0, [pc, #16]	; 400134dc <CyU3PDebugPrint+0x220>
400134c8:	ebffdbc4 	bl	4000a3e0 <_txe_mutex_put>
400134cc:	e3a00000 	mov	r0, #0
400134d0:	eaffff82 	b	400132e0 <CyU3PDebugPrint+0x24>
400134d4:	40030c90 	.word	0x40030c90
400134d8:	40030c9c 	.word	0x40030c9c
400134dc:	4003133c 	.word	0x4003133c
400134e0:	40030ca0 	.word	0x40030ca0
400134e4:	40031380 	.word	0x40031380
400134e8:	40031374 	.word	0x40031374
400134ec:	40030c98 	.word	0x40030c98

Disassembly of section i.CyU3PDebugThreadEntry:

400134f0 <CyU3PDebugThreadEntry>:
400134f0:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
400134f4:	e1a06000 	mov	r6, r0
400134f8:	e3a05000 	mov	r5, #0
400134fc:	e1a00000 	nop			; (mov r0, r0)
40013500:	e3e02000 	mvn	r2, #0
40013504:	e1a0100d 	mov	r1, sp
40013508:	e59f00c4 	ldr	r0, [pc, #196]	; 400135d4 <CyU3PDebugThreadEntry+0xe4>
4001350c:	ebffdc71 	bl	4000a6d8 <_txe_queue_receive>
40013510:	e1a04000 	mov	r4, r0
40013514:	e3540000 	cmp	r4, #0
40013518:	1afffff8 	bne	40013500 <CyU3PDebugThreadEntry+0x10>
4001351c:	e3e01000 	mvn	r1, #0
40013520:	e59f00b0 	ldr	r0, [pc, #176]	; 400135d8 <CyU3PDebugThreadEntry+0xe8>
40013524:	ebffdb78 	bl	4000a30c <_txe_mutex_get>
40013528:	e59f00ac 	ldr	r0, [pc, #172]	; 400135dc <CyU3PDebugThreadEntry+0xec>
4001352c:	e1d000b0 	ldrh	r0, [r0]
40013530:	e3500c01 	cmp	r0, #256	; 0x100
40013534:	0a000007 	beq	40013558 <CyU3PDebugThreadEntry+0x68>
40013538:	e59f10a0 	ldr	r1, [pc, #160]	; 400135e0 <CyU3PDebugThreadEntry+0xf0>
4001353c:	e5911000 	ldr	r1, [r1]
40013540:	e59f2094 	ldr	r2, [pc, #148]	; 400135dc <CyU3PDebugThreadEntry+0xec>
40013544:	e1d220b0 	ldrh	r2, [r2]
40013548:	e0810002 	add	r0, r1, r2
4001354c:	e3a02008 	mov	r2, #8
40013550:	e1a0100d 	mov	r1, sp
40013554:	ebffc0de 	bl	400038d4 <CyU3PMemCopy>
40013558:	e59f007c 	ldr	r0, [pc, #124]	; 400135dc <CyU3PDebugThreadEntry+0xec>
4001355c:	e1d000b0 	ldrh	r0, [r0]
40013560:	e35000f8 	cmp	r0, #248	; 0xf8
40013564:	1a000015 	bne	400135c0 <CyU3PDebugThreadEntry+0xd0>
40013568:	e3a02000 	mov	r2, #0
4001356c:	e3a01c01 	mov	r1, #256	; 0x100
40013570:	e59f006c 	ldr	r0, [pc, #108]	; 400135e4 <CyU3PDebugThreadEntry+0xf4>
40013574:	eb0007eb 	bl	40015528 <CyU3PDmaChannelCommitBuffer>
40013578:	e1a05000 	mov	r5, r0
4001357c:	e3550000 	cmp	r5, #0
40013580:	1a000004 	bne	40013598 <CyU3PDebugThreadEntry+0xa8>
40013584:	e3e02000 	mvn	r2, #0
40013588:	e59f1050 	ldr	r1, [pc, #80]	; 400135e0 <CyU3PDebugThreadEntry+0xf0>
4001358c:	e281000c 	add	r0, r1, #12
40013590:	eb000b27 	bl	40016234 <CyU3PDmaChannelGetBuffer>
40013594:	e1a05000 	mov	r5, r0
40013598:	e3550000 	cmp	r5, #0
4001359c:	0a000004 	beq	400135b4 <CyU3PDebugThreadEntry+0xc4>
400135a0:	ebfffeab 	bl	40013054 <CyU3PDebugChannelReset>
400135a4:	e1a05000 	mov	r5, r0
400135a8:	e3550000 	cmp	r5, #0
400135ac:	0a000000 	beq	400135b4 <CyU3PDebugThreadEntry+0xc4>
400135b0:	ea000005 	b	400135cc <CyU3PDebugThreadEntry+0xdc>
400135b4:	e3a00000 	mov	r0, #0
400135b8:	e59f101c 	ldr	r1, [pc, #28]	; 400135dc <CyU3PDebugThreadEntry+0xec>
400135bc:	e1c100b0 	strh	r0, [r1]
400135c0:	e59f0010 	ldr	r0, [pc, #16]	; 400135d8 <CyU3PDebugThreadEntry+0xe8>
400135c4:	ebffdb85 	bl	4000a3e0 <_txe_mutex_put>
400135c8:	eaffffcc 	b	40013500 <CyU3PDebugThreadEntry+0x10>
400135cc:	e1a00000 	nop			; (mov r0, r0)
400135d0:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
400135d4:	40031300 	.word	0x40031300
400135d8:	4003133c 	.word	0x4003133c
400135dc:	40030ca0 	.word	0x40030ca0
400135e0:	40031374 	.word	0x40031374
400135e4:	40031380 	.word	0x40031380

Disassembly of section i.MyDebugSNPrint:

400135e8 <MyDebugSNPrint>:
400135e8:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400135ec:	e24dd01c 	sub	sp, sp, #28
400135f0:	e1a04000 	mov	r4, r0
400135f4:	e1a05001 	mov	r5, r1
400135f8:	e1a06002 	mov	r6, r2
400135fc:	e3a08000 	mov	r8, #0
40013600:	e3a00000 	mov	r0, #0
40013604:	e58d0018 	str	r0, [sp, #24]
40013608:	e3a09000 	mov	r9, #0
4001360c:	e1d5b0b0 	ldrh	fp, [r5]
40013610:	e3540000 	cmp	r4, #0
40013614:	1a000002 	bne	40013624 <MyDebugSNPrint+0x3c>
40013618:	e3a00040 	mov	r0, #64	; 0x40
4001361c:	e28dd02c 	add	sp, sp, #44	; 0x2c
40013620:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40013624:	e1a07006 	mov	r7, r6
40013628:	ea00008d 	b	40013864 <MyDebugSNPrint+0x27c>
4001362c:	e24b0002 	sub	r0, fp, #2
40013630:	e1500009 	cmp	r0, r9
40013634:	ca000001 	bgt	40013640 <MyDebugSNPrint+0x58>
40013638:	e3a00040 	mov	r0, #64	; 0x40
4001363c:	eafffff6 	b	4001361c <MyDebugSNPrint+0x34>
40013640:	e5d70000 	ldrb	r0, [r7]
40013644:	e3500025 	cmp	r0, #37	; 0x25
40013648:	0a000005 	beq	40013664 <MyDebugSNPrint+0x7c>
4001364c:	e5d71000 	ldrb	r1, [r7]
40013650:	e1a00009 	mov	r0, r9
40013654:	e2892001 	add	r2, r9, #1
40013658:	e3c29801 	bic	r9, r2, #65536	; 0x10000
4001365c:	e7c41000 	strb	r1, [r4, r0]
40013660:	ea00007e 	b	40013860 <MyDebugSNPrint+0x278>
40013664:	e2877001 	add	r7, r7, #1
40013668:	e5d70000 	ldrb	r0, [r7]
4001366c:	e3500064 	cmp	r0, #100	; 0x64
40013670:	0a000021 	beq	400136fc <MyDebugSNPrint+0x114>
40013674:	ca000006 	bgt	40013694 <MyDebugSNPrint+0xac>
40013678:	e3500025 	cmp	r0, #37	; 0x25
4001367c:	0a00000b 	beq	400136b0 <MyDebugSNPrint+0xc8>
40013680:	e3500058 	cmp	r0, #88	; 0x58
40013684:	0a00004c 	beq	400137bc <MyDebugSNPrint+0x1d4>
40013688:	e3500063 	cmp	r0, #99	; 0x63
4001368c:	1a00005a 	bne	400137fc <MyDebugSNPrint+0x214>
40013690:	ea00000d 	b	400136cc <MyDebugSNPrint+0xe4>
40013694:	e3500073 	cmp	r0, #115	; 0x73
40013698:	0a000031 	beq	40013764 <MyDebugSNPrint+0x17c>
4001369c:	e3500075 	cmp	r0, #117	; 0x75
400136a0:	0a000036 	beq	40013780 <MyDebugSNPrint+0x198>
400136a4:	e3500078 	cmp	r0, #120	; 0x78
400136a8:	1a000053 	bne	400137fc <MyDebugSNPrint+0x214>
400136ac:	ea000044 	b	400137c4 <MyDebugSNPrint+0x1dc>
400136b0:	e1a00000 	nop			; (mov r0, r0)
400136b4:	e3a01025 	mov	r1, #37	; 0x25
400136b8:	e1a00009 	mov	r0, r9
400136bc:	e2892001 	add	r2, r9, #1
400136c0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400136c4:	e7c41000 	strb	r1, [r4, r0]
400136c8:	ea00004e 	b	40013808 <MyDebugSNPrint+0x220>
400136cc:	e1a00000 	nop			; (mov r0, r0)
400136d0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400136d4:	e5900000 	ldr	r0, [r0]
400136d8:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
400136dc:	e2811004 	add	r1, r1, #4
400136e0:	e58d1028 	str	r1, [sp, #40]	; 0x28
400136e4:	e20010ff 	and	r1, r0, #255	; 0xff
400136e8:	e1a00009 	mov	r0, r9
400136ec:	e2892001 	add	r2, r9, #1
400136f0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400136f4:	e7c41000 	strb	r1, [r4, r0]
400136f8:	ea000042 	b	40013808 <MyDebugSNPrint+0x220>
400136fc:	e1a00000 	nop			; (mov r0, r0)
40013700:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013704:	e5900000 	ldr	r0, [r0]
40013708:	e58d0014 	str	r0, [sp, #20]
4001370c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013710:	e2800004 	add	r0, r0, #4
40013714:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013718:	e59d0014 	ldr	r0, [sp, #20]
4001371c:	e3500000 	cmp	r0, #0
40013720:	aa000007 	bge	40013744 <MyDebugSNPrint+0x15c>
40013724:	e3a0102d 	mov	r1, #45	; 0x2d
40013728:	e1a00009 	mov	r0, r9
4001372c:	e2892001 	add	r2, r9, #1
40013730:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013734:	e7c41000 	strb	r1, [r4, r0]
40013738:	e59d0014 	ldr	r0, [sp, #20]
4001373c:	e2600000 	rsb	r0, r0, #0
40013740:	e58d0014 	str	r0, [sp, #20]
40013744:	e3a0200a 	mov	r2, #10
40013748:	e59d1014 	ldr	r1, [sp, #20]
4001374c:	e28d0004 	add	r0, sp, #4
40013750:	ebfffeb5 	bl	4001322c <CyU3PDebugIntToStr>
40013754:	e1a08000 	mov	r8, r0
40013758:	e3a00001 	mov	r0, #1
4001375c:	e58d0018 	str	r0, [sp, #24]
40013760:	ea000028 	b	40013808 <MyDebugSNPrint+0x220>
40013764:	e1a00000 	nop			; (mov r0, r0)
40013768:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001376c:	e4908004 	ldr	r8, [r0], #4
40013770:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013774:	e3a00001 	mov	r0, #1
40013778:	e58d0018 	str	r0, [sp, #24]
4001377c:	ea000021 	b	40013808 <MyDebugSNPrint+0x220>
40013780:	e1a00000 	nop			; (mov r0, r0)
40013784:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013788:	e5900000 	ldr	r0, [r0]
4001378c:	e58d0010 	str	r0, [sp, #16]
40013790:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013794:	e2800004 	add	r0, r0, #4
40013798:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001379c:	e3a0200a 	mov	r2, #10
400137a0:	e59d1010 	ldr	r1, [sp, #16]
400137a4:	e28d0004 	add	r0, sp, #4
400137a8:	ebfffe9f 	bl	4001322c <CyU3PDebugIntToStr>
400137ac:	e1a08000 	mov	r8, r0
400137b0:	e3a00001 	mov	r0, #1
400137b4:	e58d0018 	str	r0, [sp, #24]
400137b8:	ea000012 	b	40013808 <MyDebugSNPrint+0x220>
400137bc:	e1a00000 	nop			; (mov r0, r0)
400137c0:	e1a00000 	nop			; (mov r0, r0)
400137c4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137c8:	e5900000 	ldr	r0, [r0]
400137cc:	e58d0010 	str	r0, [sp, #16]
400137d0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137d4:	e2800004 	add	r0, r0, #4
400137d8:	e58d0028 	str	r0, [sp, #40]	; 0x28
400137dc:	e3a02010 	mov	r2, #16
400137e0:	e59d1010 	ldr	r1, [sp, #16]
400137e4:	e28d0004 	add	r0, sp, #4
400137e8:	ebfffe8f 	bl	4001322c <CyU3PDebugIntToStr>
400137ec:	e1a08000 	mov	r8, r0
400137f0:	e3a00001 	mov	r0, #1
400137f4:	e58d0018 	str	r0, [sp, #24]
400137f8:	ea000002 	b	40013808 <MyDebugSNPrint+0x220>
400137fc:	e1a00000 	nop			; (mov r0, r0)
40013800:	e3a00040 	mov	r0, #64	; 0x40
40013804:	eaffff84 	b	4001361c <MyDebugSNPrint+0x34>
40013808:	e1a00000 	nop			; (mov r0, r0)
4001380c:	e59d0018 	ldr	r0, [sp, #24]
40013810:	e3500000 	cmp	r0, #0
40013814:	0a000010 	beq	4001385c <MyDebugSNPrint+0x274>
40013818:	e1a00008 	mov	r0, r8
4001381c:	ebfff4c1 	bl	40010b28 <strlen>
40013820:	e1a0a800 	lsl	sl, r0, #16
40013824:	e1a0a82a 	lsr	sl, sl, #16
40013828:	e04b000a 	sub	r0, fp, sl
4001382c:	e2400001 	sub	r0, r0, #1
40013830:	e1500009 	cmp	r0, r9
40013834:	ca000001 	bgt	40013840 <MyDebugSNPrint+0x258>
40013838:	e3a00040 	mov	r0, #64	; 0x40
4001383c:	eaffff76 	b	4001361c <MyDebugSNPrint+0x34>
40013840:	e0840009 	add	r0, r4, r9
40013844:	e1a01008 	mov	r1, r8
40013848:	ebfff47a 	bl	40010a38 <strcpy>
4001384c:	e089000a 	add	r0, r9, sl
40013850:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013854:	e3a00000 	mov	r0, #0
40013858:	e58d0018 	str	r0, [sp, #24]
4001385c:	e1a00000 	nop			; (mov r0, r0)
40013860:	e2877001 	add	r7, r7, #1
40013864:	e5d70000 	ldrb	r0, [r7]
40013868:	e3500000 	cmp	r0, #0
4001386c:	1affff6e 	bne	4001362c <MyDebugSNPrint+0x44>
40013870:	e3a00000 	mov	r0, #0
40013874:	e7c40009 	strb	r0, [r4, r9]
40013878:	e1c590b0 	strh	r9, [r5]
4001387c:	eaffff66 	b	4001361c <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013880 <CyU3PBusyWait>:
40013880:	ea000006 	b	400138a0 <CyU3PBusyWait+0x20>
40013884:	e3a01000 	mov	r1, #0
40013888:	ea000002 	b	40013898 <CyU3PBusyWait+0x18>
4001388c:	e281100a 	add	r1, r1, #10
40013890:	e241100a 	sub	r1, r1, #10
40013894:	e2811001 	add	r1, r1, #1
40013898:	e351001f 	cmp	r1, #31
4001389c:	3afffffa 	bcc	4001388c <CyU3PBusyWait+0xc>
400138a0:	e1b02000 	movs	r2, r0
400138a4:	e2403001 	sub	r3, r0, #1
400138a8:	e1a00803 	lsl	r0, r3, #16
400138ac:	e1a00820 	lsr	r0, r0, #16
400138b0:	1afffff3 	bne	40013884 <CyU3PBusyWait+0x4>
400138b4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

400138b8 <CyU3PComputeChecksum>:
400138b8:	e92d4010 	push	{r4, lr}
400138bc:	e1a03000 	mov	r3, r0
400138c0:	e3a00000 	mov	r0, #0
400138c4:	e3530000 	cmp	r3, #0
400138c8:	0a000003 	beq	400138dc <CyU3PComputeChecksum+0x24>
400138cc:	e3510000 	cmp	r1, #0
400138d0:	0a000001 	beq	400138dc <CyU3PComputeChecksum+0x24>
400138d4:	e3520000 	cmp	r2, #0
400138d8:	1a000001 	bne	400138e4 <CyU3PComputeChecksum+0x2c>
400138dc:	e3a00040 	mov	r0, #64	; 0x40
400138e0:	ea00000a 	b	40013910 <CyU3PComputeChecksum+0x58>
400138e4:	e3a0e000 	mov	lr, #0
400138e8:	e582e000 	str	lr, [r2]
400138ec:	e3a0c000 	mov	ip, #0
400138f0:	ea000004 	b	40013908 <CyU3PComputeChecksum+0x50>
400138f4:	e592e000 	ldr	lr, [r2]
400138f8:	e793410c 	ldr	r4, [r3, ip, lsl #2]
400138fc:	e08ee004 	add	lr, lr, r4
40013900:	e582e000 	str	lr, [r2]
40013904:	e28cc001 	add	ip, ip, #1
40013908:	e15c0121 	cmp	ip, r1, lsr #2
4001390c:	3afffff8 	bcc	400138f4 <CyU3PComputeChecksum+0x3c>
40013910:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

40013914 <__aeabi_memclr4>:
40013914:	e92d4030 	push	{r4, r5, lr}
40013918:	e1a04000 	mov	r4, r0
4001391c:	e1a05001 	mov	r5, r1
40013920:	e3a02000 	mov	r2, #0
40013924:	e1a01005 	mov	r1, r5
40013928:	e1a00004 	mov	r0, r4
4001392c:	eb000020 	bl	400139b4 <__aeabi_memset>
40013930:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

40013934 <__aeabi_memcpy>:
40013934:	e92d4010 	push	{r4, lr}
40013938:	e1a03000 	mov	r3, r0
4001393c:	e1a0c001 	mov	ip, r1
40013940:	e1500001 	cmp	r0, r1
40013944:	2a000006 	bcs	40013964 <__aeabi_memcpy+0x30>
40013948:	ea000001 	b	40013954 <__aeabi_memcpy+0x20>
4001394c:	e4dce001 	ldrb	lr, [ip], #1
40013950:	e4c3e001 	strb	lr, [r3], #1
40013954:	e1b0e002 	movs	lr, r2
40013958:	e2422001 	sub	r2, r2, #1
4001395c:	1afffffa 	bne	4001394c <__aeabi_memcpy+0x18>
40013960:	ea000009 	b	4001398c <__aeabi_memcpy+0x58>
40013964:	e080e002 	add	lr, r0, r2
40013968:	e24e3001 	sub	r3, lr, #1
4001396c:	e081e002 	add	lr, r1, r2
40013970:	e24ec001 	sub	ip, lr, #1
40013974:	ea000001 	b	40013980 <__aeabi_memcpy+0x4c>
40013978:	e45ce001 	ldrb	lr, [ip], #-1
4001397c:	e443e001 	strb	lr, [r3], #-1
40013980:	e1b0e002 	movs	lr, r2
40013984:	e2422001 	sub	r2, r2, #1
40013988:	1afffffa 	bne	40013978 <__aeabi_memcpy+0x44>
4001398c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013990 <__aeabi_memcpy4>:
40013990:	e92d4070 	push	{r4, r5, r6, lr}
40013994:	e1a04000 	mov	r4, r0
40013998:	e1a05001 	mov	r5, r1
4001399c:	e1a06002 	mov	r6, r2
400139a0:	e1a02006 	mov	r2, r6
400139a4:	e1a01005 	mov	r1, r5
400139a8:	e1a00004 	mov	r0, r4
400139ac:	ebffffe0 	bl	40013934 <__aeabi_memcpy>
400139b0:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

400139b4 <__aeabi_memset>:
400139b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400139b8:	e1a03000 	mov	r3, r0
400139bc:	ea000000 	b	400139c4 <__aeabi_memset+0x10>
400139c0:	e4c32001 	strb	r2, [r3], #1
400139c4:	e1b0c001 	movs	ip, r1
400139c8:	e2411001 	sub	r1, r1, #1
400139cc:	1afffffb 	bne	400139c0 <__aeabi_memset+0xc>
400139d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

400139d4 <CyU3PApplicationDefine>:
400139d4:	e92d4010 	push	{r4, lr}
400139d8:	e24dd020 	sub	sp, sp, #32
400139dc:	e3e00000 	mvn	r0, #0
400139e0:	e59f10b4 	ldr	r1, [pc, #180]	; 40013a9c <CyU3PApplicationDefine+0xc8>
400139e4:	e5810000 	str	r0, [r1]
400139e8:	e3a00000 	mov	r0, #0
400139ec:	e59f10ac 	ldr	r1, [pc, #172]	; 40013aa0 <CyU3PApplicationDefine+0xcc>
400139f0:	e5810000 	str	r0, [r1]
400139f4:	ebffbf0b 	bl	40003628 <CyU3PMemInit>
400139f8:	eb001694 	bl	40019450 <CyU3PDmaApplicationDefine>
400139fc:	e3a02028 	mov	r2, #40	; 0x28
40013a00:	e3a01000 	mov	r1, #0
40013a04:	e59f0098 	ldr	r0, [pc, #152]	; 40013aa4 <CyU3PApplicationDefine+0xd0>
40013a08:	ebffd907 	bl	40009e2c <_txe_event_flags_create>
40013a0c:	e3a00080 	mov	r0, #128	; 0x80
40013a10:	ebffbf17 	bl	40003674 <CyU3PMemAlloc>
40013a14:	e1a04000 	mov	r4, r0
40013a18:	e3a0303c 	mov	r3, #60	; 0x3c
40013a1c:	e3a02080 	mov	r2, #128	; 0x80
40013a20:	e1cd20f0 	strd	r2, [sp]
40013a24:	e1a03004 	mov	r3, r4
40013a28:	e3a02006 	mov	r2, #6
40013a2c:	e3a01000 	mov	r1, #0
40013a30:	e59f0070 	ldr	r0, [pc, #112]	; 40013aa8 <CyU3PApplicationDefine+0xd4>
40013a34:	ebffda91 	bl	4000a480 <_txe_queue_create>
40013a38:	e3a00b01 	mov	r0, #1024	; 0x400
40013a3c:	ebffbf0c 	bl	40003674 <CyU3PMemAlloc>
40013a40:	e1a04000 	mov	r4, r0
40013a44:	e3a030a8 	mov	r3, #168	; 0xa8
40013a48:	e3a02001 	mov	r2, #1
40013a4c:	e3a01000 	mov	r1, #0
40013a50:	e3a00004 	mov	r0, #4
40013a54:	e28dc00c 	add	ip, sp, #12
40013a58:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013a5c:	e3a02b01 	mov	r2, #1024	; 0x400
40013a60:	e1a03001 	mov	r3, r1
40013a64:	e58d2004 	str	r2, [sp, #4]
40013a68:	e59f203c 	ldr	r2, [pc, #60]	; 40013aac <CyU3PApplicationDefine+0xd8>
40013a6c:	e28f103c 	add	r1, pc, #60	; 0x3c
40013a70:	e58d0008 	str	r0, [sp, #8]
40013a74:	e59f0048 	ldr	r0, [pc, #72]	; 40013ac4 <CyU3PApplicationDefine+0xf0>
40013a78:	e58d4000 	str	r4, [sp]
40013a7c:	ebffdb65 	bl	4000a818 <_txe_thread_create>
40013a80:	eb000082 	bl	40013c90 <CyU3PSibApplicationDefine>
40013a84:	ebfffd3d 	bl	40012f80 <CyU3PDebugApplicationDefine>
40013a88:	eb001d16 	bl	4001aee8 <CyU3PPibApplicationDefine>
40013a8c:	eb00013c 	bl	40013f84 <CyU3PLppApplicationDefine>
40013a90:	eb002b6f 	bl	4001e854 <CyU3PUibApplicationDefine>
40013a94:	e28dd020 	add	sp, sp, #32
40013a98:	e8bd8010 	pop	{r4, pc}
40013a9c:	40030ca4 	.word	0x40030ca4
40013aa0:	40030ca8 	.word	0x40030ca8
40013aa4:	400314c8 	.word	0x400314c8
40013aa8:	400314f0 	.word	0x400314f0
40013aac:	40013b7c 	.word	0x40013b7c
40013ab0:	535f3230 	.word	0x535f3230
40013ab4:	45545359 	.word	0x45545359
40013ab8:	48545f4d 	.word	0x48545f4d
40013abc:	44414552 	.word	0x44414552
40013ac0:	00000000 	.word	0x00000000
40013ac4:	40031420 	.word	0x40031420

Disassembly of section i.CyU3PSysCheckBootState:

40013ac8 <CyU3PSysCheckBootState>:
40013ac8:	e92d4070 	push	{r4, r5, r6, lr}
40013acc:	e3a00000 	mov	r0, #0
40013ad0:	e59f106c 	ldr	r1, [pc, #108]	; 40013b44 <CyU3PSysCheckBootState+0x7c>
40013ad4:	e5810000 	str	r0, [r1]
40013ad8:	e59f0068 	ldr	r0, [pc, #104]	; 40013b48 <CyU3PSysCheckBootState+0x80>
40013adc:	e5900000 	ldr	r0, [r0]
40013ae0:	e3100401 	tst	r0, #16777216	; 0x1000000
40013ae4:	0a000015 	beq	40013b40 <CyU3PSysCheckBootState+0x78>
40013ae8:	e59f005c 	ldr	r0, [pc, #92]	; 40013b4c <CyU3PSysCheckBootState+0x84>
40013aec:	e5900000 	ldr	r0, [r0]
40013af0:	e3500001 	cmp	r0, #1
40013af4:	1a000011 	bne	40013b40 <CyU3PSysCheckBootState+0x78>
40013af8:	e3a00000 	mov	r0, #0
40013afc:	e59f1048 	ldr	r1, [pc, #72]	; 40013b4c <CyU3PSysCheckBootState+0x84>
40013b00:	e5810000 	str	r0, [r1]
40013b04:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013b08:	e5904004 	ldr	r4, [r0, #4]
40013b0c:	e1a05004 	mov	r5, r4
40013b10:	e3a02901 	mov	r2, #16384	; 0x4000
40013b14:	e1a01005 	mov	r1, r5
40013b18:	e3a00000 	mov	r0, #0
40013b1c:	ebffbf6c 	bl	400038d4 <CyU3PMemCopy>
40013b20:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013b24:	e5900008 	ldr	r0, [r0, #8]
40013b28:	e59f1020 	ldr	r1, [pc, #32]	; 40013b50 <CyU3PSysCheckBootState+0x88>
40013b2c:	e1500001 	cmp	r0, r1
40013b30:	1a000002 	bne	40013b40 <CyU3PSysCheckBootState+0x78>
40013b34:	e2840901 	add	r0, r4, #16384	; 0x4000
40013b38:	e59f1004 	ldr	r1, [pc, #4]	; 40013b44 <CyU3PSysCheckBootState+0x7c>
40013b3c:	e5810000 	str	r0, [r1]
40013b40:	e8bd8070 	pop	{r4, r5, r6, pc}
40013b44:	40030cac 	.word	0x40030cac
40013b48:	e0050000 	.word	0xe0050000
40013b4c:	40030ca8 	.word	0x40030ca8
40013b50:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013b54 <CyU3PSysFwMsgHandler>:
40013b54:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013b58 <CyU3PSysModuleInitCompleteEvt>:
40013b58:	e92d4010 	push	{r4, lr}
40013b5c:	e1a04000 	mov	r4, r0
40013b60:	e3a00010 	mov	r0, #16
40013b64:	e1a01410 	lsl	r1, r0, r4
40013b68:	e3a02000 	mov	r2, #0
40013b6c:	e59f0004 	ldr	r0, [pc, #4]	; 40013b78 <CyU3PSysModuleInitCompleteEvt+0x20>
40013b70:	ebffd94d 	bl	4000a0ac <_txe_event_flags_set>
40013b74:	e8bd8010 	pop	{r4, pc}
40013b78:	400314c8 	.word	0x400314c8

Disassembly of section i.CyU3PSysThreadEntry:

40013b7c <CyU3PSysThreadEntry>:
40013b7c:	e92d4010 	push	{r4, lr}
40013b80:	e24dd028 	sub	sp, sp, #40	; 0x28
40013b84:	e3a04c02 	mov	r4, #512	; 0x200
40013b88:	e3844080 	orr	r4, r4, #128	; 0x80
40013b8c:	e3e03000 	mvn	r3, #0
40013b90:	e58d3000 	str	r3, [sp]
40013b94:	e28d3024 	add	r3, sp, #36	; 0x24
40013b98:	e3a02003 	mov	r2, #3
40013b9c:	e1a01004 	mov	r1, r4
40013ba0:	e59f00d8 	ldr	r0, [pc, #216]	; 40013c80 <CyU3PSysThreadEntry+0x104>
40013ba4:	ebffd910 	bl	40009fec <_txe_event_flags_get>
40013ba8:	e28d2020 	add	r2, sp, #32
40013bac:	e3a01000 	mov	r1, #0
40013bb0:	e59f00cc 	ldr	r0, [pc, #204]	; 40013c84 <CyU3PSysThreadEntry+0x108>
40013bb4:	ebffdbcd 	bl	4000aaf0 <_txe_thread_priority_change>
40013bb8:	ebffd312 	bl	40008808 <CyFxApplicationDefine>
40013bbc:	e28d2020 	add	r2, sp, #32
40013bc0:	e3a01004 	mov	r1, #4
40013bc4:	e59f00b8 	ldr	r0, [pc, #184]	; 40013c84 <CyU3PSysThreadEntry+0x108>
40013bc8:	ebffdbc8 	bl	4000aaf0 <_txe_thread_priority_change>
40013bcc:	ea00002a 	b	40013c7c <CyU3PSysThreadEntry+0x100>
40013bd0:	e59f00b0 	ldr	r0, [pc, #176]	; 40013c88 <CyU3PSysThreadEntry+0x10c>
40013bd4:	e5903000 	ldr	r3, [r0]
40013bd8:	e58d3000 	str	r3, [sp]
40013bdc:	e28d3024 	add	r3, sp, #36	; 0x24
40013be0:	e3a02001 	mov	r2, #1
40013be4:	e3e01000 	mvn	r1, #0
40013be8:	e59f0090 	ldr	r0, [pc, #144]	; 40013c80 <CyU3PSysThreadEntry+0x104>
40013bec:	ebffd8fe 	bl	40009fec <_txe_event_flags_get>
40013bf0:	e58d0020 	str	r0, [sp, #32]
40013bf4:	e59d0020 	ldr	r0, [sp, #32]
40013bf8:	e3500000 	cmp	r0, #0
40013bfc:	0a000000 	beq	40013c04 <CyU3PSysThreadEntry+0x88>
40013c00:	ea00001d 	b	40013c7c <CyU3PSysThreadEntry+0x100>
40013c04:	e3a04001 	mov	r4, #1
40013c08:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c0c:	e0000004 	and	r0, r0, r4
40013c10:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013c14:	ea000014 	b	40013c6c <CyU3PSysThreadEntry+0xf0>
40013c18:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c1c:	e3100001 	tst	r0, #1
40013c20:	0a000011 	beq	40013c6c <CyU3PSysThreadEntry+0xf0>
40013c24:	e3a02000 	mov	r2, #0
40013c28:	e28d1008 	add	r1, sp, #8
40013c2c:	e59f0058 	ldr	r0, [pc, #88]	; 40013c8c <CyU3PSysThreadEntry+0x110>
40013c30:	ebffdaa8 	bl	4000a6d8 <_txe_queue_receive>
40013c34:	e58d0020 	str	r0, [sp, #32]
40013c38:	e59d0020 	ldr	r0, [sp, #32]
40013c3c:	e3500000 	cmp	r0, #0
40013c40:	1a000006 	bne	40013c60 <CyU3PSysThreadEntry+0xe4>
40013c44:	e1dd00b8 	ldrh	r0, [sp, #8]
40013c48:	e2000902 	and	r0, r0, #32768	; 0x8000
40013c4c:	e1b007a0 	lsrs	r0, r0, #15
40013c50:	1a000005 	bne	40013c6c <CyU3PSysThreadEntry+0xf0>
40013c54:	e28d0008 	add	r0, sp, #8
40013c58:	ebffffbd 	bl	40013b54 <CyU3PSysFwMsgHandler>
40013c5c:	ea000002 	b	40013c6c <CyU3PSysThreadEntry+0xf0>
40013c60:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c64:	e3c00001 	bic	r0, r0, #1
40013c68:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013c6c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c70:	e3500000 	cmp	r0, #0
40013c74:	1affffe7 	bne	40013c18 <CyU3PSysThreadEntry+0x9c>
40013c78:	e1a00000 	nop			; (mov r0, r0)
40013c7c:	eaffffd3 	b	40013bd0 <CyU3PSysThreadEntry+0x54>
40013c80:	400314c8 	.word	0x400314c8
40013c84:	40031420 	.word	0x40031420
40013c88:	40030ca4 	.word	0x40030ca4
40013c8c:	400314f0 	.word	0x400314f0

Disassembly of section i.CyU3PSibApplicationDefine:

40013c90 <CyU3PSibApplicationDefine>:
40013c90:	e92d4010 	push	{r4, lr}
40013c94:	e24dd020 	sub	sp, sp, #32
40013c98:	e3a04000 	mov	r4, #0
40013c9c:	e3a02028 	mov	r2, #40	; 0x28
40013ca0:	e3a01000 	mov	r1, #0
40013ca4:	e59f0064 	ldr	r0, [pc, #100]	; 40013d10 <CyU3PSibApplicationDefine+0x80>
40013ca8:	ebffd85f 	bl	40009e2c <_txe_event_flags_create>
40013cac:	e3a00000 	mov	r0, #0
40013cb0:	e59f105c 	ldr	r1, [pc, #92]	; 40013d14 <CyU3PSibApplicationDefine+0x84>
40013cb4:	e5810000 	str	r0, [r1]
40013cb8:	e3a00b02 	mov	r0, #2048	; 0x800
40013cbc:	ebffbe6c 	bl	40003674 <CyU3PMemAlloc>
40013cc0:	e1a04000 	mov	r4, r0
40013cc4:	e3540000 	cmp	r4, #0
40013cc8:	0a00000e 	beq	40013d08 <CyU3PSibApplicationDefine+0x78>
40013ccc:	e3a030a8 	mov	r3, #168	; 0xa8
40013cd0:	e3a02001 	mov	r2, #1
40013cd4:	e3a01000 	mov	r1, #0
40013cd8:	e3a00004 	mov	r0, #4
40013cdc:	e28dc00c 	add	ip, sp, #12
40013ce0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013ce4:	e3a02b02 	mov	r2, #2048	; 0x800
40013ce8:	e1a03001 	mov	r3, r1
40013cec:	e58d2004 	str	r2, [sp, #4]
40013cf0:	e59f2020 	ldr	r2, [pc, #32]	; 40013d18 <CyU3PSibApplicationDefine+0x88>
40013cf4:	e28f1020 	add	r1, pc, #32
40013cf8:	e58d0008 	str	r0, [sp, #8]
40013cfc:	e59f0028 	ldr	r0, [pc, #40]	; 40013d2c <CyU3PSibApplicationDefine+0x9c>
40013d00:	e58d4000 	str	r4, [sp]
40013d04:	ebffdac3 	bl	4000a818 <_txe_thread_create>
40013d08:	e28dd020 	add	sp, sp, #32
40013d0c:	e8bd8010 	pop	{r4, pc}
40013d10:	400315d4 	.word	0x400315d4
40013d14:	40030cb0 	.word	0x40030cb0
40013d18:	40013d88 	.word	0x40013d88
40013d1c:	535f3630 	.word	0x535f3630
40013d20:	545f4249 	.word	0x545f4249
40013d24:	41455248 	.word	0x41455248
40013d28:	00000044 	.word	0x00000044
40013d2c:	4003152c 	.word	0x4003152c

Disassembly of section i.CyU3PSibInitIntfParams:

40013d30 <CyU3PSibInitIntfParams>:
40013d30:	e0802100 	add	r2, r0, r0, lsl #2
40013d34:	e59f3048 	ldr	r3, [pc, #72]	; 40013d84 <CyU3PSibInitIntfParams+0x54>
40013d38:	e0831102 	add	r1, r3, r2, lsl #2
40013d3c:	e3a020ff 	mov	r2, #255	; 0xff
40013d40:	e5c12000 	strb	r2, [r1]
40013d44:	e3a02002 	mov	r2, #2
40013d48:	e5c12008 	strb	r2, [r1, #8]
40013d4c:	e3a02001 	mov	r2, #1
40013d50:	e5c12009 	strb	r2, [r1, #9]
40013d54:	e3a02000 	mov	r2, #0
40013d58:	e5c12010 	strb	r2, [r1, #16]
40013d5c:	e5c1200a 	strb	r2, [r1, #10]
40013d60:	e3a020ff 	mov	r2, #255	; 0xff
40013d64:	e5c1200b 	strb	r2, [r1, #11]
40013d68:	e3a02000 	mov	r2, #0
40013d6c:	e581200c 	str	r2, [r1, #12]
40013d70:	e3a02004 	mov	r2, #4
40013d74:	e5c12011 	strb	r2, [r1, #17]
40013d78:	e3a02000 	mov	r2, #0
40013d7c:	e5c12012 	strb	r2, [r1, #18]
40013d80:	e12fff1e 	bx	lr
40013d84:	400315fc 	.word	0x400315fc

Disassembly of section i.CyU3PSibThreadEntry:

40013d88 <CyU3PSibThreadEntry>:
40013d88:	e92d4010 	push	{r4, lr}
40013d8c:	e3a00000 	mov	r0, #0
40013d90:	ebffffe6 	bl	40013d30 <CyU3PSibInitIntfParams>
40013d94:	e3a00001 	mov	r0, #1
40013d98:	ebffffe4 	bl	40013d30 <CyU3PSibInitIntfParams>
40013d9c:	e3a00003 	mov	r0, #3
40013da0:	ebffff6c 	bl	40013b58 <CyU3PSysModuleInitCompleteEvt>
40013da4:	ea000009 	b	40013dd0 <CyU3PSibThreadEntry+0x48>
40013da8:	e59f0024 	ldr	r0, [pc, #36]	; 40013dd4 <CyU3PSibThreadEntry+0x4c>
40013dac:	e5900000 	ldr	r0, [r0]
40013db0:	e3500000 	cmp	r0, #0
40013db4:	0a000003 	beq	40013dc8 <CyU3PSibThreadEntry+0x40>
40013db8:	e59f0014 	ldr	r0, [pc, #20]	; 40013dd4 <CyU3PSibThreadEntry+0x4c>
40013dbc:	e5900000 	ldr	r0, [r0]
40013dc0:	e12fff30 	blx	r0
40013dc4:	ea000001 	b	40013dd0 <CyU3PSibThreadEntry+0x48>
40013dc8:	e3a0000a 	mov	r0, #10
40013dcc:	ebffd3be 	bl	40008ccc <_tx_thread_sleep>
40013dd0:	eafffff4 	b	40013da8 <CyU3PSibThreadEntry+0x20>
40013dd4:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyU3PGpioSetClock:

40013dd8 <CyU3PGpioSetClock>:
40013dd8:	e92d4070 	push	{r4, r5, r6, lr}
40013ddc:	e1a04000 	mov	r4, r0
40013de0:	e3a05000 	mov	r5, #0
40013de4:	e5d40000 	ldrb	r0, [r4]
40013de8:	e3500002 	cmp	r0, #2
40013dec:	ba000002 	blt	40013dfc <CyU3PGpioSetClock+0x24>
40013df0:	e5d40000 	ldrb	r0, [r4]
40013df4:	e3500010 	cmp	r0, #16
40013df8:	da000001 	ble	40013e04 <CyU3PGpioSetClock+0x2c>
40013dfc:	e3a00040 	mov	r0, #64	; 0x40
40013e00:	e8bd8070 	pop	{r4, r5, r6, pc}
40013e04:	e5d40001 	ldrb	r0, [r4, #1]
40013e08:	e3500000 	cmp	r0, #0
40013e0c:	1a000004 	bne	40013e24 <CyU3PGpioSetClock+0x4c>
40013e10:	e5940004 	ldr	r0, [r4, #4]
40013e14:	e3500000 	cmp	r0, #0
40013e18:	0a000009 	beq	40013e44 <CyU3PGpioSetClock+0x6c>
40013e1c:	e3a00040 	mov	r0, #64	; 0x40
40013e20:	eafffff6 	b	40013e00 <CyU3PGpioSetClock+0x28>
40013e24:	e5d40001 	ldrb	r0, [r4, #1]
40013e28:	e3500002 	cmp	r0, #2
40013e2c:	ba000002 	blt	40013e3c <CyU3PGpioSetClock+0x64>
40013e30:	e5d40001 	ldrb	r0, [r4, #1]
40013e34:	e3500040 	cmp	r0, #64	; 0x40
40013e38:	da000001 	ble	40013e44 <CyU3PGpioSetClock+0x6c>
40013e3c:	e3a00040 	mov	r0, #64	; 0x40
40013e40:	eaffffee 	b	40013e00 <CyU3PGpioSetClock+0x28>
40013e44:	e5d40009 	ldrb	r0, [r4, #9]
40013e48:	e3500004 	cmp	r0, #4
40013e4c:	ba000001 	blt	40013e58 <CyU3PGpioSetClock+0x80>
40013e50:	e3a00040 	mov	r0, #64	; 0x40
40013e54:	eaffffe9 	b	40013e00 <CyU3PGpioSetClock+0x28>
40013e58:	e5d40008 	ldrb	r0, [r4, #8]
40013e5c:	e3500004 	cmp	r0, #4
40013e60:	ba000001 	blt	40013e6c <CyU3PGpioSetClock+0x94>
40013e64:	e3a00040 	mov	r0, #64	; 0x40
40013e68:	eaffffe4 	b	40013e00 <CyU3PGpioSetClock+0x28>
40013e6c:	e5d40000 	ldrb	r0, [r4]
40013e70:	e2400001 	sub	r0, r0, #1
40013e74:	e5d41009 	ldrb	r1, [r4, #9]
40013e78:	e1800281 	orr	r0, r0, r1, lsl #5
40013e7c:	e5d41008 	ldrb	r1, [r4, #8]
40013e80:	e1800381 	orr	r0, r0, r1, lsl #7
40013e84:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013e88:	e5940004 	ldr	r0, [r4, #4]
40013e8c:	e3500000 	cmp	r0, #0
40013e90:	0a000000 	beq	40013e98 <CyU3PGpioSetClock+0xc0>
40013e94:	e3855010 	orr	r5, r5, #16
40013e98:	e59f0030 	ldr	r0, [pc, #48]	; 40013ed0 <CyU3PGpioSetClock+0xf8>
40013e9c:	e5805018 	str	r5, [r0, #24]
40013ea0:	e5d40001 	ldrb	r0, [r4, #1]
40013ea4:	e3500000 	cmp	r0, #0
40013ea8:	0a000006 	beq	40013ec8 <CyU3PGpioSetClock+0xf0>
40013eac:	e3a00001 	mov	r0, #1
40013eb0:	ebfffe72 	bl	40013880 <CyU3PBusyWait>
40013eb4:	e5d40001 	ldrb	r0, [r4, #1]
40013eb8:	e2400001 	sub	r0, r0, #1
40013ebc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013ec0:	e59f1008 	ldr	r1, [pc, #8]	; 40013ed0 <CyU3PGpioSetClock+0xf8>
40013ec4:	e581001c 	str	r0, [r1, #28]
40013ec8:	e3a00000 	mov	r0, #0
40013ecc:	eaffffcb 	b	40013e00 <CyU3PGpioSetClock+0x28>
40013ed0:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013ed4 <CyU3PI2cSetClock>:
40013ed4:	e92d4070 	push	{r4, r5, r6, lr}
40013ed8:	e1a05000 	mov	r5, r0
40013edc:	e3a06000 	mov	r6, #0
40013ee0:	e3550000 	cmp	r5, #0
40013ee4:	1a000001 	bne	40013ef0 <CyU3PI2cSetClock+0x1c>
40013ee8:	e3a00040 	mov	r0, #64	; 0x40
40013eec:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ef0:	e0852105 	add	r2, r5, r5, lsl #2
40013ef4:	e1a01082 	lsl	r1, r2, #1
40013ef8:	e59f207c 	ldr	r2, [pc, #124]	; 40013f7c <CyU3PI2cSetClock+0xa8>
40013efc:	e5922000 	ldr	r2, [r2]
40013f00:	e1a00122 	lsr	r0, r2, #2
40013f04:	ebfff35c 	bl	40010c7c <__aeabi_uidivmod>
40013f08:	e1a04000 	mov	r4, r0
40013f0c:	e3140003 	tst	r4, #3
40013f10:	1a000001 	bne	40013f1c <CyU3PI2cSetClock+0x48>
40013f14:	e1a04144 	asr	r4, r4, #2
40013f18:	ea00000a 	b	40013f48 <CyU3PI2cSetClock+0x74>
40013f1c:	e2040003 	and	r0, r4, #3
40013f20:	e3500001 	cmp	r0, #1
40013f24:	0a000002 	beq	40013f34 <CyU3PI2cSetClock+0x60>
40013f28:	e2040003 	and	r0, r4, #3
40013f2c:	e3500002 	cmp	r0, #2
40013f30:	1a000002 	bne	40013f40 <CyU3PI2cSetClock+0x6c>
40013f34:	e1a04144 	asr	r4, r4, #2
40013f38:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013f3c:	ea000001 	b	40013f48 <CyU3PI2cSetClock+0x74>
40013f40:	e3a00001 	mov	r0, #1
40013f44:	e0804144 	add	r4, r0, r4, asr #2
40013f48:	e2444001 	sub	r4, r4, #1
40013f4c:	e3540001 	cmp	r4, #1
40013f50:	ba000001 	blt	40013f5c <CyU3PI2cSetClock+0x88>
40013f54:	e3540a01 	cmp	r4, #4096	; 0x1000
40013f58:	ba000001 	blt	40013f64 <CyU3PI2cSetClock+0x90>
40013f5c:	e3a00040 	mov	r0, #64	; 0x40
40013f60:	eaffffe1 	b	40013eec <CyU3PI2cSetClock+0x18>
40013f64:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013f68:	e1866000 	orr	r6, r6, r0
40013f6c:	e59f000c 	ldr	r0, [pc, #12]	; 40013f80 <CyU3PI2cSetClock+0xac>
40013f70:	e5806020 	str	r6, [r0, #32]
40013f74:	e3a00000 	mov	r0, #0
40013f78:	eaffffdb 	b	40013eec <CyU3PI2cSetClock+0x18>
40013f7c:	40030c70 	.word	0x40030c70
40013f80:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013f84 <CyU3PLppApplicationDefine>:
40013f84:	e92d4010 	push	{r4, lr}
40013f88:	e24dd020 	sub	sp, sp, #32
40013f8c:	e3a00b01 	mov	r0, #1024	; 0x400
40013f90:	ebffbdb7 	bl	40003674 <CyU3PMemAlloc>
40013f94:	e1a04000 	mov	r4, r0
40013f98:	e3a030a8 	mov	r3, #168	; 0xa8
40013f9c:	e3a02001 	mov	r2, #1
40013fa0:	e3a01000 	mov	r1, #0
40013fa4:	e3a00004 	mov	r0, #4
40013fa8:	e28dc00c 	add	ip, sp, #12
40013fac:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013fb0:	e3a02b01 	mov	r2, #1024	; 0x400
40013fb4:	e1a03001 	mov	r3, r1
40013fb8:	e58d2004 	str	r2, [sp, #4]
40013fbc:	e59f2054 	ldr	r2, [pc, #84]	; 40014018 <CyU3PLppApplicationDefine+0x94>
40013fc0:	e28f1054 	add	r1, pc, #84	; 0x54
40013fc4:	e58d0008 	str	r0, [sp, #8]
40013fc8:	e59f005c 	ldr	r0, [pc, #92]	; 4001402c <CyU3PLppApplicationDefine+0xa8>
40013fcc:	e58d4000 	str	r4, [sp]
40013fd0:	ebffda10 	bl	4000a818 <_txe_thread_create>
40013fd4:	e3a02028 	mov	r2, #40	; 0x28
40013fd8:	e3a01000 	mov	r1, #0
40013fdc:	e59f004c 	ldr	r0, [pc, #76]	; 40014030 <CyU3PLppApplicationDefine+0xac>
40013fe0:	ebffd791 	bl	40009e2c <_txe_event_flags_create>
40013fe4:	e3a00040 	mov	r0, #64	; 0x40
40013fe8:	ebffbda1 	bl	40003674 <CyU3PMemAlloc>
40013fec:	e1a04000 	mov	r4, r0
40013ff0:	e3a0303c 	mov	r3, #60	; 0x3c
40013ff4:	e3a02040 	mov	r2, #64	; 0x40
40013ff8:	e1cd20f0 	strd	r2, [sp]
40013ffc:	e1a03004 	mov	r3, r4
40014000:	e3a02005 	mov	r2, #5
40014004:	e3a01000 	mov	r1, #0
40014008:	e59f0024 	ldr	r0, [pc, #36]	; 40014034 <CyU3PLppApplicationDefine+0xb0>
4001400c:	ebffd91b 	bl	4000a480 <_txe_queue_create>
40014010:	e28dd020 	add	sp, sp, #32
40014014:	e8bd8010 	pop	{r4, pc}
40014018:	40014378 	.word	0x40014378
4001401c:	4c5f3530 	.word	0x4c5f3530
40014020:	545f5050 	.word	0x545f5050
40014024:	41455248 	.word	0x41455248
40014028:	00000044 	.word	0x00000044
4001402c:	40031660 	.word	0x40031660
40014030:	40031638 	.word	0x40031638
40014034:	40031708 	.word	0x40031708

Disassembly of section i.CyU3PLppEventSend:

40014038 <CyU3PLppEventSend>:
40014038:	e92d4070 	push	{r4, r5, r6, lr}
4001403c:	e1a04000 	mov	r4, r0
40014040:	e3a02000 	mov	r2, #0
40014044:	e1a01004 	mov	r1, r4
40014048:	e59f000c 	ldr	r0, [pc, #12]	; 4001405c <CyU3PLppEventSend+0x24>
4001404c:	ebffd816 	bl	4000a0ac <_txe_event_flags_set>
40014050:	e1a05000 	mov	r5, r0
40014054:	e1a00005 	mov	r0, r5
40014058:	e8bd8070 	pop	{r4, r5, r6, pc}
4001405c:	40031638 	.word	0x40031638

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40014060 <CyU3PLppGpioBlockIsOn>:
40014060:	e59f0004 	ldr	r0, [pc, #4]	; 4001406c <CyU3PLppGpioBlockIsOn+0xc>
40014064:	e5900000 	ldr	r0, [r0]
40014068:	e12fff1e 	bx	lr
4001406c:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PLppInit:

40014070 <CyU3PLppInit>:
40014070:	e92d4070 	push	{r4, r5, r6, lr}
40014074:	e1a04000 	mov	r4, r0
40014078:	e1a05001 	mov	r5, r1
4001407c:	e3a06000 	mov	r6, #0
40014080:	e3a00001 	mov	r0, #1
40014084:	e59f1174 	ldr	r1, [pc, #372]	; 40014200 <CyU3PLppInit+0x190>
40014088:	e5d11000 	ldrb	r1, [r1]
4001408c:	e1110410 	tst	r1, r0, lsl r4
40014090:	0a000001 	beq	4001409c <CyU3PLppInit+0x2c>
40014094:	e3a00043 	mov	r0, #67	; 0x43
40014098:	e8bd8070 	pop	{r4, r5, r6, pc}
4001409c:	e3540001 	cmp	r4, #1
400140a0:	1a000004 	bne	400140b8 <CyU3PLppInit+0x48>
400140a4:	eb000310 	bl	40014cec <CyFx3DevIsI2sSupported>
400140a8:	e3500000 	cmp	r0, #0
400140ac:	1a000001 	bne	400140b8 <CyU3PLppInit+0x48>
400140b0:	e3a00046 	mov	r0, #70	; 0x46
400140b4:	eafffff7 	b	40014098 <CyU3PLppInit+0x28>
400140b8:	e3540005 	cmp	r4, #5
400140bc:	308ff104 	addcc	pc, pc, r4, lsl #2
400140c0:	ea000027 	b	40014164 <CyU3PLppInit+0xf4>
400140c4:	ea000003 	b	400140d8 <CyU3PLppInit+0x68>
400140c8:	ea000009 	b	400140f4 <CyU3PLppInit+0x84>
400140cc:	ea00000f 	b	40014110 <CyU3PLppInit+0xa0>
400140d0:	ea000015 	b	4001412c <CyU3PLppInit+0xbc>
400140d4:	ea00001b 	b	40014148 <CyU3PLppInit+0xd8>
400140d8:	e1a00000 	nop			; (mov r0, r0)
400140dc:	e59f0120 	ldr	r0, [pc, #288]	; 40014204 <CyU3PLppInit+0x194>
400140e0:	e5900020 	ldr	r0, [r0, #32]
400140e4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400140e8:	0a000000 	beq	400140f0 <CyU3PLppInit+0x80>
400140ec:	e3a06001 	mov	r6, #1
400140f0:	ea00001b 	b	40014164 <CyU3PLppInit+0xf4>
400140f4:	e1a00000 	nop			; (mov r0, r0)
400140f8:	e59f0104 	ldr	r0, [pc, #260]	; 40014204 <CyU3PLppInit+0x194>
400140fc:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40014100:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014104:	0a000000 	beq	4001410c <CyU3PLppInit+0x9c>
40014108:	e3a06001 	mov	r6, #1
4001410c:	ea000014 	b	40014164 <CyU3PLppInit+0xf4>
40014110:	e1a00000 	nop			; (mov r0, r0)
40014114:	e59f00e8 	ldr	r0, [pc, #232]	; 40014204 <CyU3PLppInit+0x194>
40014118:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4001411c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014120:	0a000000 	beq	40014128 <CyU3PLppInit+0xb8>
40014124:	e3a06001 	mov	r6, #1
40014128:	ea00000d 	b	40014164 <CyU3PLppInit+0xf4>
4001412c:	e1a00000 	nop			; (mov r0, r0)
40014130:	e59f00cc 	ldr	r0, [pc, #204]	; 40014204 <CyU3PLppInit+0x194>
40014134:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40014138:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001413c:	0a000000 	beq	40014144 <CyU3PLppInit+0xd4>
40014140:	e3a06001 	mov	r6, #1
40014144:	ea000006 	b	40014164 <CyU3PLppInit+0xf4>
40014148:	e1a00000 	nop			; (mov r0, r0)
4001414c:	e59f00b0 	ldr	r0, [pc, #176]	; 40014204 <CyU3PLppInit+0x194>
40014150:	e5900018 	ldr	r0, [r0, #24]
40014154:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014158:	0a000000 	beq	40014160 <CyU3PLppInit+0xf0>
4001415c:	e3a06001 	mov	r6, #1
40014160:	e1a00000 	nop			; (mov r0, r0)
40014164:	e1a00000 	nop			; (mov r0, r0)
40014168:	e3560000 	cmp	r6, #0
4001416c:	1a000001 	bne	40014178 <CyU3PLppInit+0x108>
40014170:	e3a00047 	mov	r0, #71	; 0x47
40014174:	eaffffc7 	b	40014098 <CyU3PLppInit+0x28>
40014178:	e59f0080 	ldr	r0, [pc, #128]	; 40014200 <CyU3PLppInit+0x190>
4001417c:	e5d00000 	ldrb	r0, [r0]
40014180:	e3500000 	cmp	r0, #0
40014184:	1a000017 	bne	400141e8 <CyU3PLppInit+0x178>
40014188:	e59f0078 	ldr	r0, [pc, #120]	; 40014208 <CyU3PLppInit+0x198>
4001418c:	e5900000 	ldr	r0, [r0]
40014190:	e3500000 	cmp	r0, #0
40014194:	1a000010 	bne	400141dc <CyU3PLppInit+0x16c>
40014198:	e59f006c 	ldr	r0, [pc, #108]	; 4001420c <CyU3PLppInit+0x19c>
4001419c:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141a0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400141a4:	e59f1060 	ldr	r1, [pc, #96]	; 4001420c <CyU3PLppInit+0x19c>
400141a8:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
400141ac:	e3a0000a 	mov	r0, #10
400141b0:	ebfffdb2 	bl	40013880 <CyU3PBusyWait>
400141b4:	e59f0050 	ldr	r0, [pc, #80]	; 4001420c <CyU3PLppInit+0x19c>
400141b8:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141bc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400141c0:	e59f1044 	ldr	r1, [pc, #68]	; 4001420c <CyU3PLppInit+0x19c>
400141c4:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
400141c8:	e1a00000 	nop			; (mov r0, r0)
400141cc:	e59f0038 	ldr	r0, [pc, #56]	; 4001420c <CyU3PLppInit+0x19c>
400141d0:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141d4:	e3100001 	tst	r0, #1
400141d8:	0afffffb 	beq	400141cc <CyU3PLppInit+0x15c>
400141dc:	eb000051 	bl	40014328 <CyU3PLppSocketInit>
400141e0:	e3a00014 	mov	r0, #20
400141e4:	eb003828 	bl	4002228c <CyU3PVicEnableInt>
400141e8:	e1a02005 	mov	r2, r5
400141ec:	e3a01001 	mov	r1, #1
400141f0:	e1a00004 	mov	r0, r4
400141f4:	eb0000f1 	bl	400145c0 <CyU3UpdateLppActiveInfo>
400141f8:	e3a00000 	mov	r0, #0
400141fc:	eaffffa5 	b	40014098 <CyU3PLppInit+0x28>
40014200:	40030cb4 	.word	0x40030cb4
40014204:	e0052000 	.word	0xe0052000
40014208:	40030c8c 	.word	0x40030c8c
4001420c:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40014210 <CyU3PLppRestoreState>:
40014210:	e92d4070 	push	{r4, r5, r6, lr}
40014214:	e1a04000 	mov	r4, r0
40014218:	e3a00000 	mov	r0, #0
4001421c:	e59f10ec 	ldr	r1, [pc, #236]	; 40014310 <CyU3PLppRestoreState+0x100>
40014220:	e5c10000 	strb	r0, [r1]
40014224:	e5940000 	ldr	r0, [r4]
40014228:	e59f10e4 	ldr	r1, [pc, #228]	; 40014314 <CyU3PLppRestoreState+0x104>
4001422c:	e5810018 	str	r0, [r1, #24]
40014230:	e3a00001 	mov	r0, #1
40014234:	ebfffd91 	bl	40013880 <CyU3PBusyWait>
40014238:	e5940004 	ldr	r0, [r4, #4]
4001423c:	e59f10d0 	ldr	r1, [pc, #208]	; 40014314 <CyU3PLppRestoreState+0x104>
40014240:	e581001c 	str	r0, [r1, #28]
40014244:	e3a00001 	mov	r0, #1
40014248:	ebfffd8c 	bl	40013880 <CyU3PBusyWait>
4001424c:	e5940008 	ldr	r0, [r4, #8]
40014250:	e59f10c0 	ldr	r1, [pc, #192]	; 40014318 <CyU3PLppRestoreState+0x108>
40014254:	e581000c 	str	r0, [r1, #12]
40014258:	e3a00001 	mov	r0, #1
4001425c:	ebfffd87 	bl	40013880 <CyU3PBusyWait>
40014260:	e594000c 	ldr	r0, [r4, #12]
40014264:	e59f10ac 	ldr	r1, [pc, #172]	; 40014318 <CyU3PLppRestoreState+0x108>
40014268:	e5810010 	str	r0, [r1, #16]
4001426c:	e3a00001 	mov	r0, #1
40014270:	ebfffd82 	bl	40013880 <CyU3PBusyWait>
40014274:	e5940010 	ldr	r0, [r4, #16]
40014278:	e59f1098 	ldr	r1, [pc, #152]	; 40014318 <CyU3PLppRestoreState+0x108>
4001427c:	e5810008 	str	r0, [r1, #8]
40014280:	e3a00001 	mov	r0, #1
40014284:	ebfffd7d 	bl	40013880 <CyU3PBusyWait>
40014288:	e3a00004 	mov	r0, #4
4001428c:	e5941014 	ldr	r1, [r4, #20]
40014290:	ebffff76 	bl	40014070 <CyU3PLppInit>
40014294:	e3a00001 	mov	r0, #1
40014298:	ebfffd78 	bl	40013880 <CyU3PBusyWait>
4001429c:	e59f0078 	ldr	r0, [pc, #120]	; 4001431c <CyU3PLppRestoreState+0x10c>
400142a0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400142a4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400142a8:	e59f106c 	ldr	r1, [pc, #108]	; 4001431c <CyU3PLppRestoreState+0x10c>
400142ac:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
400142b0:	e3a0000a 	mov	r0, #10
400142b4:	ebfffd71 	bl	40013880 <CyU3PBusyWait>
400142b8:	e1a00000 	nop			; (mov r0, r0)
400142bc:	e59f0058 	ldr	r0, [pc, #88]	; 4001431c <CyU3PLppRestoreState+0x10c>
400142c0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400142c4:	e3100001 	tst	r0, #1
400142c8:	0afffffb 	beq	400142bc <CyU3PLppRestoreState+0xac>
400142cc:	e3a05000 	mov	r5, #0
400142d0:	ea000006 	b	400142f0 <CyU3PLppRestoreState+0xe0>
400142d4:	e2850006 	add	r0, r5, #6
400142d8:	e7940100 	ldr	r0, [r4, r0, lsl #2]
400142dc:	e59f103c 	ldr	r1, [pc, #60]	; 40014320 <CyU3PLppRestoreState+0x110>
400142e0:	e7810105 	str	r0, [r1, r5, lsl #2]
400142e4:	e3a00001 	mov	r0, #1
400142e8:	ebfffd64 	bl	40013880 <CyU3PBusyWait>
400142ec:	e2855001 	add	r5, r5, #1
400142f0:	e355003d 	cmp	r5, #61	; 0x3d
400142f4:	3afffff6 	bcc	400142d4 <CyU3PLppRestoreState+0xc4>
400142f8:	e59f0024 	ldr	r0, [pc, #36]	; 40014324 <CyU3PLppRestoreState+0x114>
400142fc:	e5900000 	ldr	r0, [r0]
40014300:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40014304:	e59f1018 	ldr	r1, [pc, #24]	; 40014324 <CyU3PLppRestoreState+0x114>
40014308:	e5810000 	str	r0, [r1]
4001430c:	e8bd8070 	pop	{r4, r5, r6, pc}
40014310:	40030cb4 	.word	0x40030cb4
40014314:	e0052000 	.word	0xe0052000
40014318:	e0051000 	.word	0xe0051000
4001431c:	e0001000 	.word	0xe0001000
40014320:	e0001100 	.word	0xe0001100
40014324:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40014328 <CyU3PLppSocketInit>:
40014328:	e3a00000 	mov	r0, #0
4001432c:	ea00000d 	b	40014368 <CyU3PLppSocketInit+0x40>
40014330:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40014334:	e59f2038 	ldr	r2, [pc, #56]	; 40014374 <CyU3PLppSocketInit+0x4c>
40014338:	e0822380 	add	r2, r2, r0, lsl #7
4001433c:	e582100c 	str	r1, [r2, #12]
40014340:	e3e01000 	mvn	r1, #0
40014344:	e59f2028 	ldr	r2, [pc, #40]	; 40014374 <CyU3PLppSocketInit+0x4c>
40014348:	e0822380 	add	r2, r2, r0, lsl #7
4001434c:	e5821010 	str	r1, [r2, #16]
40014350:	e3a01000 	mov	r1, #0
40014354:	e59f2018 	ldr	r2, [pc, #24]	; 40014374 <CyU3PLppSocketInit+0x4c>
40014358:	e0822380 	add	r2, r2, r0, lsl #7
4001435c:	e5821014 	str	r1, [r2, #20]
40014360:	e2801001 	add	r1, r0, #1
40014364:	e20100ff 	and	r0, r1, #255	; 0xff
40014368:	e3500008 	cmp	r0, #8
4001436c:	baffffef 	blt	40014330 <CyU3PLppSocketInit+0x8>
40014370:	e12fff1e 	bx	lr
40014374:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40014378 <CyU3PLppThreadEntry>:
40014378:	e92d4010 	push	{r4, lr}
4001437c:	e24dd020 	sub	sp, sp, #32
40014380:	e3a00006 	mov	r0, #6
40014384:	ebfffdf3 	bl	40013b58 <CyU3PSysModuleInitCompleteEvt>
40014388:	e3a000f1 	mov	r0, #241	; 0xf1
4001438c:	e59f1144 	ldr	r1, [pc, #324]	; 400144d8 <CyU3PLppThreadEntry+0x160>
40014390:	e5810000 	str	r0, [r1]
40014394:	e1a00000 	nop			; (mov r0, r0)
40014398:	e3e03000 	mvn	r3, #0
4001439c:	e58d3000 	str	r3, [sp]
400143a0:	e28d301c 	add	r3, sp, #28
400143a4:	e3a02001 	mov	r2, #1
400143a8:	e59f0128 	ldr	r0, [pc, #296]	; 400144d8 <CyU3PLppThreadEntry+0x160>
400143ac:	e5901000 	ldr	r1, [r0]
400143b0:	e59f0124 	ldr	r0, [pc, #292]	; 400144dc <CyU3PLppThreadEntry+0x164>
400143b4:	ebffd70c 	bl	40009fec <_txe_event_flags_get>
400143b8:	e1a04000 	mov	r4, r0
400143bc:	e59f1114 	ldr	r1, [pc, #276]	; 400144d8 <CyU3PLppThreadEntry+0x160>
400143c0:	e59d001c 	ldr	r0, [sp, #28]
400143c4:	e5911000 	ldr	r1, [r1]
400143c8:	e0000001 	and	r0, r0, r1
400143cc:	e58d001c 	str	r0, [sp, #28]
400143d0:	e3540000 	cmp	r4, #0
400143d4:	0a000000 	beq	400143dc <CyU3PLppThreadEntry+0x64>
400143d8:	eaffffee 	b	40014398 <CyU3PLppThreadEntry+0x20>
400143dc:	ea000009 	b	40014408 <CyU3PLppThreadEntry+0x90>
400143e0:	e3a02000 	mov	r2, #0
400143e4:	e28d1008 	add	r1, sp, #8
400143e8:	e59f00f0 	ldr	r0, [pc, #240]	; 400144e0 <CyU3PLppThreadEntry+0x168>
400143ec:	ebffd8b9 	bl	4000a6d8 <_txe_queue_receive>
400143f0:	e1a04000 	mov	r4, r0
400143f4:	e3540000 	cmp	r4, #0
400143f8:	0a000002 	beq	40014408 <CyU3PLppThreadEntry+0x90>
400143fc:	e59d001c 	ldr	r0, [sp, #28]
40014400:	e3c00001 	bic	r0, r0, #1
40014404:	e58d001c 	str	r0, [sp, #28]
40014408:	e59d001c 	ldr	r0, [sp, #28]
4001440c:	e3100001 	tst	r0, #1
40014410:	1afffff2 	bne	400143e0 <CyU3PLppThreadEntry+0x68>
40014414:	e59d001c 	ldr	r0, [sp, #28]
40014418:	e3100020 	tst	r0, #32
4001441c:	0a000008 	beq	40014444 <CyU3PLppThreadEntry+0xcc>
40014420:	e59f00bc 	ldr	r0, [pc, #188]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
40014424:	e5900000 	ldr	r0, [r0]
40014428:	e3500000 	cmp	r0, #0
4001442c:	0a000002 	beq	4001443c <CyU3PLppThreadEntry+0xc4>
40014430:	e59f10ac 	ldr	r1, [pc, #172]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
40014434:	e5910000 	ldr	r0, [r1]
40014438:	e12fff30 	blx	r0
4001443c:	e3a0000f 	mov	r0, #15
40014440:	eb003791 	bl	4002228c <CyU3PVicEnableInt>
40014444:	e59d001c 	ldr	r0, [sp, #28]
40014448:	e3100010 	tst	r0, #16
4001444c:	0a000008 	beq	40014474 <CyU3PLppThreadEntry+0xfc>
40014450:	e59f008c 	ldr	r0, [pc, #140]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
40014454:	e5900004 	ldr	r0, [r0, #4]
40014458:	e3500000 	cmp	r0, #0
4001445c:	0a000002 	beq	4001446c <CyU3PLppThreadEntry+0xf4>
40014460:	e59f107c 	ldr	r1, [pc, #124]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
40014464:	e5910004 	ldr	r0, [r1, #4]
40014468:	e12fff30 	blx	r0
4001446c:	e3a00010 	mov	r0, #16
40014470:	eb003785 	bl	4002228c <CyU3PVicEnableInt>
40014474:	e59d001c 	ldr	r0, [sp, #28]
40014478:	e3100080 	tst	r0, #128	; 0x80
4001447c:	0a000008 	beq	400144a4 <CyU3PLppThreadEntry+0x12c>
40014480:	e59f005c 	ldr	r0, [pc, #92]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
40014484:	e5900008 	ldr	r0, [r0, #8]
40014488:	e3500000 	cmp	r0, #0
4001448c:	0a000002 	beq	4001449c <CyU3PLppThreadEntry+0x124>
40014490:	e59f104c 	ldr	r1, [pc, #76]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
40014494:	e5910008 	ldr	r0, [r1, #8]
40014498:	e12fff30 	blx	r0
4001449c:	e3a00011 	mov	r0, #17
400144a0:	eb003779 	bl	4002228c <CyU3PVicEnableInt>
400144a4:	e59d001c 	ldr	r0, [sp, #28]
400144a8:	e3100040 	tst	r0, #64	; 0x40
400144ac:	0a000008 	beq	400144d4 <CyU3PLppThreadEntry+0x15c>
400144b0:	e59f002c 	ldr	r0, [pc, #44]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
400144b4:	e590000c 	ldr	r0, [r0, #12]
400144b8:	e3500000 	cmp	r0, #0
400144bc:	0a000002 	beq	400144cc <CyU3PLppThreadEntry+0x154>
400144c0:	e59f101c 	ldr	r1, [pc, #28]	; 400144e4 <CyU3PLppThreadEntry+0x16c>
400144c4:	e591000c 	ldr	r0, [r1, #12]
400144c8:	e12fff30 	blx	r0
400144cc:	e3a00012 	mov	r0, #18
400144d0:	eb00376d 	bl	4002228c <CyU3PVicEnableInt>
400144d4:	eaffffaf 	b	40014398 <CyU3PLppThreadEntry+0x20>
400144d8:	40030cb8 	.word	0x40030cb8
400144dc:	40031638 	.word	0x40031638
400144e0:	40031708 	.word	0x40031708
400144e4:	40031624 	.word	0x40031624

Disassembly of section i.CyU3PUartSetClock:

400144e8 <CyU3PUartSetClock>:
400144e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400144ec:	e1a04000 	mov	r4, r0
400144f0:	e3a06000 	mov	r6, #0
400144f4:	e59f00bc 	ldr	r0, [pc, #188]	; 400145b8 <CyU3PUartSetClock+0xd0>
400144f8:	e5907000 	ldr	r7, [r0]
400144fc:	e3540000 	cmp	r4, #0
40014500:	1a000001 	bne	4001450c <CyU3PUartSetClock+0x24>
40014504:	e3a00040 	mov	r0, #64	; 0x40
40014508:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001450c:	e3540f96 	cmp	r4, #600	; 0x258
40014510:	2a000002 	bcs	40014520 <CyU3PUartSetClock+0x38>
40014514:	e59f009c 	ldr	r0, [pc, #156]	; 400145b8 <CyU3PUartSetClock+0xd0>
40014518:	e5900000 	ldr	r0, [r0]
4001451c:	e1a07220 	lsr	r7, r0, #4
40014520:	e1a01204 	lsl	r1, r4, #4
40014524:	e1a00107 	lsl	r0, r7, #2
40014528:	ebfff1d3 	bl	40010c7c <__aeabi_uidivmod>
4001452c:	e1a05000 	mov	r5, r0
40014530:	e3150003 	tst	r5, #3
40014534:	1a000001 	bne	40014540 <CyU3PUartSetClock+0x58>
40014538:	e1a05145 	asr	r5, r5, #2
4001453c:	ea00000a 	b	4001456c <CyU3PUartSetClock+0x84>
40014540:	e2050003 	and	r0, r5, #3
40014544:	e3500001 	cmp	r0, #1
40014548:	0a000002 	beq	40014558 <CyU3PUartSetClock+0x70>
4001454c:	e2050003 	and	r0, r5, #3
40014550:	e3500002 	cmp	r0, #2
40014554:	1a000002 	bne	40014564 <CyU3PUartSetClock+0x7c>
40014558:	e1a05145 	asr	r5, r5, #2
4001455c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40014560:	ea000001 	b	4001456c <CyU3PUartSetClock+0x84>
40014564:	e3a00001 	mov	r0, #1
40014568:	e0805145 	add	r5, r0, r5, asr #2
4001456c:	e2455001 	sub	r5, r5, #1
40014570:	e3550001 	cmp	r5, #1
40014574:	ba000001 	blt	40014580 <CyU3PUartSetClock+0x98>
40014578:	e3550801 	cmp	r5, #65536	; 0x10000
4001457c:	ba000001 	blt	40014588 <CyU3PUartSetClock+0xa0>
40014580:	e3a00040 	mov	r0, #64	; 0x40
40014584:	eaffffdf 	b	40014508 <CyU3PUartSetClock+0x20>
40014588:	e3540f96 	cmp	r4, #600	; 0x258
4001458c:	2a000002 	bcs	4001459c <CyU3PUartSetClock+0xb4>
40014590:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014594:	e1866000 	orr	r6, r6, r0
40014598:	ea000002 	b	400145a8 <CyU3PUartSetClock+0xc0>
4001459c:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400145a0:	e3800806 	orr	r0, r0, #393216	; 0x60000
400145a4:	e1866000 	orr	r6, r6, r0
400145a8:	e59f000c 	ldr	r0, [pc, #12]	; 400145bc <CyU3PUartSetClock+0xd4>
400145ac:	e5806024 	str	r6, [r0, #36]	; 0x24
400145b0:	e3a00000 	mov	r0, #0
400145b4:	eaffffd3 	b	40014508 <CyU3PUartSetClock+0x20>
400145b8:	40030c70 	.word	0x40030c70
400145bc:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

400145c0 <CyU3UpdateLppActiveInfo>:
400145c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400145c4:	e1a04000 	mov	r4, r0
400145c8:	e1a05001 	mov	r5, r1
400145cc:	e1a06002 	mov	r6, r2
400145d0:	e3a00001 	mov	r0, #1
400145d4:	e1a00410 	lsl	r0, r0, r4
400145d8:	e20070ff 	and	r7, r0, #255	; 0xff
400145dc:	e284000f 	add	r0, r4, #15
400145e0:	e20080ff 	and	r8, r0, #255	; 0xff
400145e4:	e59f0050 	ldr	r0, [pc, #80]	; 4001463c <CyU3UpdateLppActiveInfo+0x7c>
400145e8:	e7806104 	str	r6, [r0, r4, lsl #2]
400145ec:	e3550000 	cmp	r5, #0
400145f0:	0a000009 	beq	4001461c <CyU3UpdateLppActiveInfo+0x5c>
400145f4:	e3560000 	cmp	r6, #0
400145f8:	0a000001 	beq	40014604 <CyU3UpdateLppActiveInfo+0x44>
400145fc:	e1a00008 	mov	r0, r8
40014600:	eb003721 	bl	4002228c <CyU3PVicEnableInt>
40014604:	e59f0034 	ldr	r0, [pc, #52]	; 40014640 <CyU3UpdateLppActiveInfo+0x80>
40014608:	e5d00000 	ldrb	r0, [r0]
4001460c:	e1800007 	orr	r0, r0, r7
40014610:	e59f1028 	ldr	r1, [pc, #40]	; 40014640 <CyU3UpdateLppActiveInfo+0x80>
40014614:	e5c10000 	strb	r0, [r1]
40014618:	ea000006 	b	40014638 <CyU3UpdateLppActiveInfo+0x78>
4001461c:	e59f001c 	ldr	r0, [pc, #28]	; 40014640 <CyU3UpdateLppActiveInfo+0x80>
40014620:	e5d00000 	ldrb	r0, [r0]
40014624:	e1c00007 	bic	r0, r0, r7
40014628:	e59f1010 	ldr	r1, [pc, #16]	; 40014640 <CyU3UpdateLppActiveInfo+0x80>
4001462c:	e5c10000 	strb	r0, [r1]
40014630:	e1a00008 	mov	r0, r8
40014634:	eb00370f 	bl	40022278 <CyU3PVicDisableInt>
40014638:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001463c:	40031624 	.word	0x40031624
40014640:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevClearSwInterrupt:

40014644 <CyFx3DevClearSwInterrupt>:
40014644:	e59f000c 	ldr	r0, [pc, #12]	; 40014658 <CyFx3DevClearSwInterrupt+0x14>
40014648:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
4001464c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
40014650:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014654:	e12fff1e 	bx	lr
40014658:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

4001465c <CyFx3DevIOConfigure>:
4001465c:	e92d4030 	push	{r4, r5, lr}
40014660:	e1b04000 	movs	r4, r0
40014664:	e24dd024 	sub	sp, sp, #36	; 0x24
40014668:	0a000045 	beq	40014784 <CyFx3DevIOConfigure+0x128>
4001466c:	eb00017b 	bl	40014c60 <CyFx3DevIsGpif32Supported>
40014670:	e3500000 	cmp	r0, #0
40014674:	e3a05000 	mov	r5, #0
40014678:	05845000 	streq	r5, [r4]
4001467c:	eb0001ae 	bl	40014d3c <CyFx3DevIsSib0Supported>
40014680:	e3500000 	cmp	r0, #0
40014684:	05c45014 	strbeq	r5, [r4, #20]
40014688:	eb0001b5 	bl	40014d64 <CyFx3DevIsSib1Supported>
4001468c:	e3500000 	cmp	r0, #0
40014690:	05c45015 	strbeq	r5, [r4, #21]
40014694:	eb000194 	bl	40014cec <CyFx3DevIsI2sSupported>
40014698:	e3500000 	cmp	r0, #0
4001469c:	1a000002 	bne	400146ac <CyFx3DevIOConfigure+0x50>
400146a0:	e594000c 	ldr	r0, [r4, #12]
400146a4:	e3500000 	cmp	r0, #0
400146a8:	1a000035 	bne	40014784 <CyFx3DevIOConfigure+0x128>
400146ac:	e5940000 	ldr	r0, [r4]
400146b0:	e3500000 	cmp	r0, #0
400146b4:	0a000009 	beq	400146e0 <CyFx3DevIOConfigure+0x84>
400146b8:	e5d40016 	ldrb	r0, [r4, #22]
400146bc:	e3500000 	cmp	r0, #0
400146c0:	05d40014 	ldrbeq	r0, [r4, #20]
400146c4:	03500000 	cmpeq	r0, #0
400146c8:	05d40015 	ldrbeq	r0, [r4, #21]
400146cc:	03500000 	cmpeq	r0, #0
400146d0:	1a00002b 	bne	40014784 <CyFx3DevIOConfigure+0x128>
400146d4:	e3a00002 	mov	r0, #2
400146d8:	e5cd0000 	strb	r0, [sp]
400146dc:	ea000022 	b	4001476c <CyFx3DevIOConfigure+0x110>
400146e0:	e5d40014 	ldrb	r0, [r4, #20]
400146e4:	e3a02003 	mov	r2, #3
400146e8:	e3a03001 	mov	r3, #1
400146ec:	e3500000 	cmp	r0, #0
400146f0:	05cd2000 	strbeq	r2, [sp]
400146f4:	0a000004 	beq	4001470c <CyFx3DevIOConfigure+0xb0>
400146f8:	e3500001 	cmp	r0, #1
400146fc:	05cd3000 	strbeq	r3, [sp]
40014700:	0a000001 	beq	4001470c <CyFx3DevIOConfigure+0xb0>
40014704:	e3500002 	cmp	r0, #2
40014708:	05cd5000 	strbeq	r5, [sp]
4001470c:	e5d41015 	ldrb	r1, [r4, #21]
40014710:	e5d40016 	ldrb	r0, [r4, #22]
40014714:	e3510002 	cmp	r1, #2
40014718:	1a000009 	bne	40014744 <CyFx3DevIOConfigure+0xe8>
4001471c:	e3500004 	cmp	r0, #4
40014720:	05940004 	ldreq	r0, [r4, #4]
40014724:	03500000 	cmpeq	r0, #0
40014728:	05940010 	ldreq	r0, [r4, #16]
4001472c:	03500000 	cmpeq	r0, #0
40014730:	0594000c 	ldreq	r0, [r4, #12]
40014734:	03500000 	cmpeq	r0, #0
40014738:	05cd5001 	strbeq	r5, [sp, #1]
4001473c:	0a000013 	beq	40014790 <CyFx3DevIOConfigure+0x134>
40014740:	ea00000f 	b	40014784 <CyFx3DevIOConfigure+0x128>
40014744:	e3500000 	cmp	r0, #0
40014748:	0a000009 	beq	40014774 <CyFx3DevIOConfigure+0x118>
4001474c:	e3500001 	cmp	r0, #1
40014750:	13500002 	cmpne	r0, #2
40014754:	13500003 	cmpne	r0, #3
40014758:	1a000009 	bne	40014784 <CyFx3DevIOConfigure+0x128>
4001475c:	e3510001 	cmp	r1, #1
40014760:	05cd3001 	strbeq	r3, [sp, #1]
40014764:	0a000009 	beq	40014790 <CyFx3DevIOConfigure+0x134>
40014768:	e3a00004 	mov	r0, #4
4001476c:	e5cd0001 	strb	r0, [sp, #1]
40014770:	ea000006 	b	40014790 <CyFx3DevIOConfigure+0x134>
40014774:	e5cd2001 	strb	r2, [sp, #1]
40014778:	e5d40015 	ldrb	r0, [r4, #21]
4001477c:	e3500000 	cmp	r0, #0
40014780:	0a000002 	beq	40014790 <CyFx3DevIOConfigure+0x134>
40014784:	e3a00000 	mov	r0, #0
40014788:	e28dd024 	add	sp, sp, #36	; 0x24
4001478c:	e8bd8030 	pop	{r4, r5, pc}
40014790:	e5940004 	ldr	r0, [r4, #4]
40014794:	e58d0004 	str	r0, [sp, #4]
40014798:	e594000c 	ldr	r0, [r4, #12]
4001479c:	e58d000c 	str	r0, [sp, #12]
400147a0:	e5940010 	ldr	r0, [r4, #16]
400147a4:	e58d0010 	str	r0, [sp, #16]
400147a8:	e5940008 	ldr	r0, [r4, #8]
400147ac:	e58d0008 	str	r0, [sp, #8]
400147b0:	e5940018 	ldr	r0, [r4, #24]
400147b4:	e58d0014 	str	r0, [sp, #20]
400147b8:	e594001c 	ldr	r0, [r4, #28]
400147bc:	e58d0018 	str	r0, [sp, #24]
400147c0:	e5940020 	ldr	r0, [r4, #32]
400147c4:	e58d001c 	str	r0, [sp, #28]
400147c8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
400147cc:	e58d0020 	str	r0, [sp, #32]
400147d0:	e1a0000d 	mov	r0, sp
400147d4:	eb000054 	bl	4001492c <CyFx3DevIOSetConfig>
400147d8:	eaffffea 	b	40014788 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

400147dc <CyFx3DevIOIsGpio>:
400147dc:	e350003d 	cmp	r0, #61	; 0x3d
400147e0:	e3a02000 	mov	r2, #0
400147e4:	23a00000 	movcs	r0, #0
400147e8:	212fff1e 	bxcs	lr
400147ec:	e3500020 	cmp	r0, #32
400147f0:	83a02001 	movhi	r2, #1
400147f4:	82400020 	subhi	r0, r0, #32
400147f8:	e59fc018 	ldr	ip, [pc, #24]	; 40014818 <CyFx3DevIOIsGpio+0x3c>
400147fc:	e3510000 	cmp	r1, #0
40014800:	e08c1102 	add	r1, ip, r2, lsl #2
40014804:	0591101c 	ldreq	r1, [r1, #28]
40014808:	15911014 	ldrne	r1, [r1, #20]
4001480c:	e3a03001 	mov	r3, #1
40014810:	e0010013 	and	r0, r1, r3, lsl r0
40014814:	e12fff1e 	bx	lr
40014818:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

4001481c <CyFx3DevIOIsI2cConfigured>:
4001481c:	e59f0004 	ldr	r0, [pc, #4]	; 40014828 <CyFx3DevIOIsI2cConfigured+0xc>
40014820:	e5900008 	ldr	r0, [r0, #8]
40014824:	e12fff1e 	bx	lr
40014828:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

4001482c <CyFx3DevIOIsI2sConfigured>:
4001482c:	e59f0004 	ldr	r0, [pc, #4]	; 40014838 <CyFx3DevIOIsI2sConfigured+0xc>
40014830:	e590000c 	ldr	r0, [r0, #12]
40014834:	e12fff1e 	bx	lr
40014838:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

4001483c <CyFx3DevIOIsSpiConfigured>:
4001483c:	e59f0004 	ldr	r0, [pc, #4]	; 40014848 <CyFx3DevIOIsSpiConfigured+0xc>
40014840:	e5900010 	ldr	r0, [r0, #16]
40014844:	e12fff1e 	bx	lr
40014848:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsUartConfigured:

4001484c <CyFx3DevIOIsUartConfigured>:
4001484c:	e59f0004 	ldr	r0, [pc, #4]	; 40014858 <CyFx3DevIOIsUartConfigured+0xc>
40014850:	e5900004 	ldr	r0, [r0, #4]
40014854:	e12fff1e 	bx	lr
40014858:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOSelectGpio:

4001485c <CyFx3DevIOSelectGpio>:
4001485c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014860:	e350003d 	cmp	r0, #61	; 0x3d
40014864:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
40014868:	e3a08001 	mov	r8, #1
4001486c:	e59f30b0 	ldr	r3, [pc, #176]	; 40014924 <CyFx3DevIOSelectGpio+0xc8>
40014870:	e1a0c018 	lsl	ip, r8, r0
40014874:	e2837014 	add	r7, r3, #20
40014878:	e89700d0 	ldm	r7, {r4, r6, r7}
4001487c:	e5935020 	ldr	r5, [r3, #32]
40014880:	e3510000 	cmp	r1, #0
40014884:	e240e020 	sub	lr, r0, #32
40014888:	0a00000f 	beq	400148cc <CyFx3DevIOSelectGpio+0x70>
4001488c:	e3500020 	cmp	r0, #32
40014890:	2a000005 	bcs	400148ac <CyFx3DevIOSelectGpio+0x50>
40014894:	e3520000 	cmp	r2, #0
40014898:	0187000c 	orreq	r0, r7, ip
4001489c:	0a00000f 	beq	400148e0 <CyFx3DevIOSelectGpio+0x84>
400148a0:	e184000c 	orr	r0, r4, ip
400148a4:	e5830014 	str	r0, [r3, #20]
400148a8:	ea000013 	b	400148fc <CyFx3DevIOSelectGpio+0xa0>
400148ac:	e3520000 	cmp	r2, #0
400148b0:	e20e00ff 	and	r0, lr, #255	; 0xff
400148b4:	e1a00018 	lsl	r0, r8, r0
400148b8:	01800005 	orreq	r0, r0, r5
400148bc:	0a00000d 	beq	400148f8 <CyFx3DevIOSelectGpio+0x9c>
400148c0:	e1800006 	orr	r0, r0, r6
400148c4:	e5830018 	str	r0, [r3, #24]
400148c8:	ea00000b 	b	400148fc <CyFx3DevIOSelectGpio+0xa0>
400148cc:	e3500020 	cmp	r0, #32
400148d0:	2a000004 	bcs	400148e8 <CyFx3DevIOSelectGpio+0x8c>
400148d4:	e1c4000c 	bic	r0, r4, ip
400148d8:	e5830014 	str	r0, [r3, #20]
400148dc:	e1c7000c 	bic	r0, r7, ip
400148e0:	e583001c 	str	r0, [r3, #28]
400148e4:	ea000004 	b	400148fc <CyFx3DevIOSelectGpio+0xa0>
400148e8:	e1a00e18 	lsl	r0, r8, lr
400148ec:	e1c61000 	bic	r1, r6, r0
400148f0:	e1c50000 	bic	r0, r5, r0
400148f4:	e5831018 	str	r1, [r3, #24]
400148f8:	e5830020 	str	r0, [r3, #32]
400148fc:	e5931014 	ldr	r1, [r3, #20]
40014900:	e59f0020 	ldr	r0, [pc, #32]	; 40014928 <CyFx3DevIOSelectGpio+0xcc>
40014904:	e580100c 	str	r1, [r0, #12]
40014908:	e5931018 	ldr	r1, [r3, #24]
4001490c:	e5801010 	str	r1, [r0, #16]
40014910:	e593101c 	ldr	r1, [r3, #28]
40014914:	e5801014 	str	r1, [r0, #20]
40014918:	e5931020 	ldr	r1, [r3, #32]
4001491c:	e5801018 	str	r1, [r0, #24]
40014920:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014924:	40030cd0 	.word	0x40030cd0
40014928:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

4001492c <CyFx3DevIOSetConfig>:
4001492c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014930:	e59f8208 	ldr	r8, [pc, #520]	; 40014b40 <CyFx3DevIOSetConfig+0x214>
40014934:	e1a05000 	mov	r5, r0
40014938:	e5980008 	ldr	r0, [r8, #8]
4001493c:	e59f7200 	ldr	r7, [pc, #512]	; 40014b44 <CyFx3DevIOSetConfig+0x218>
40014940:	e2006002 	and	r6, r0, #2
40014944:	e5d50000 	ldrb	r0, [r5]
40014948:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
4001494c:	e3500000 	cmp	r0, #0
40014950:	01c44944 	biceq	r4, r4, r4, asr #18
40014954:	0a000008 	beq	4001497c <CyFx3DevIOSetConfig+0x50>
40014958:	e3500001 	cmp	r0, #1
4001495c:	059f41e4 	ldreq	r4, [pc, #484]	; 40014b48 <CyFx3DevIOSetConfig+0x21c>
40014960:	0a000005 	beq	4001497c <CyFx3DevIOSetConfig+0x50>
40014964:	e3500002 	cmp	r0, #2
40014968:	059f41dc 	ldreq	r4, [pc, #476]	; 40014b4c <CyFx3DevIOSetConfig+0x220>
4001496c:	0a000001 	beq	40014978 <CyFx3DevIOSetConfig+0x4c>
40014970:	e3500003 	cmp	r0, #3
40014974:	1a000058 	bne	40014adc <CyFx3DevIOSetConfig+0x1b0>
40014978:	e3866010 	orr	r6, r6, #16
4001497c:	e5d50001 	ldrb	r0, [r5, #1]
40014980:	e3500005 	cmp	r0, #5
40014984:	308ff100 	addcc	pc, pc, r0, lsl #2
40014988:	ea000053 	b	40014adc <CyFx3DevIOSetConfig+0x1b0>
4001498c:	ea000003 	b	400149a0 <CyFx3DevIOSetConfig+0x74>
40014990:	ea000005 	b	400149ac <CyFx3DevIOSetConfig+0x80>
40014994:	ea000021 	b	40014a20 <CyFx3DevIOSetConfig+0xf4>
40014998:	ea00002c 	b	40014a50 <CyFx3DevIOSetConfig+0x124>
4001499c:	ea000002 	b	400149ac <CyFx3DevIOSetConfig+0x80>
400149a0:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
400149a4:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
400149a8:	ea000032 	b	40014a78 <CyFx3DevIOSetConfig+0x14c>
400149ac:	e3500001 	cmp	r0, #1
400149b0:	e5950004 	ldr	r0, [r5, #4]
400149b4:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
400149b8:	e3500000 	cmp	r0, #0
400149bc:	1a000006 	bne	400149dc <CyFx3DevIOSetConfig+0xb0>
400149c0:	e5950010 	ldr	r0, [r5, #16]
400149c4:	e3500000 	cmp	r0, #0
400149c8:	1a00000b 	bne	400149fc <CyFx3DevIOSetConfig+0xd0>
400149cc:	e595000c 	ldr	r0, [r5, #12]
400149d0:	e3500000 	cmp	r0, #0
400149d4:	1a00000e 	bne	40014a14 <CyFx3DevIOSetConfig+0xe8>
400149d8:	ea000005 	b	400149f4 <CyFx3DevIOSetConfig+0xc8>
400149dc:	e595000c 	ldr	r0, [r5, #12]
400149e0:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
400149e4:	e3500000 	cmp	r0, #0
400149e8:	05950010 	ldreq	r0, [r5, #16]
400149ec:	03500000 	cmpeq	r0, #0
400149f0:	1a000039 	bne	40014adc <CyFx3DevIOSetConfig+0x1b0>
400149f4:	e3866c01 	orr	r6, r6, #256	; 0x100
400149f8:	ea00001e 	b	40014a78 <CyFx3DevIOSetConfig+0x14c>
400149fc:	e595000c 	ldr	r0, [r5, #12]
40014a00:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014a04:	e3500000 	cmp	r0, #0
40014a08:	1a000033 	bne	40014adc <CyFx3DevIOSetConfig+0x1b0>
40014a0c:	e3866c02 	orr	r6, r6, #512	; 0x200
40014a10:	ea000018 	b	40014a78 <CyFx3DevIOSetConfig+0x14c>
40014a14:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
40014a18:	e3866c03 	orr	r6, r6, #768	; 0x300
40014a1c:	ea000015 	b	40014a78 <CyFx3DevIOSetConfig+0x14c>
40014a20:	e5950010 	ldr	r0, [r5, #16]
40014a24:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
40014a28:	e3500000 	cmp	r0, #0
40014a2c:	1a00002a 	bne	40014adc <CyFx3DevIOSetConfig+0x1b0>
40014a30:	e5950004 	ldr	r0, [r5, #4]
40014a34:	e3866c05 	orr	r6, r6, #1280	; 0x500
40014a38:	e3500000 	cmp	r0, #0
40014a3c:	e595000c 	ldr	r0, [r5, #12]
40014a40:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014a44:	e3500000 	cmp	r0, #0
40014a48:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014a4c:	ea000009 	b	40014a78 <CyFx3DevIOSetConfig+0x14c>
40014a50:	e5950004 	ldr	r0, [r5, #4]
40014a54:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014a58:	e3500000 	cmp	r0, #0
40014a5c:	e5950010 	ldr	r0, [r5, #16]
40014a60:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014a64:	e3500000 	cmp	r0, #0
40014a68:	e595000c 	ldr	r0, [r5, #12]
40014a6c:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014a70:	e3500000 	cmp	r0, #0
40014a74:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014a78:	e5950008 	ldr	r0, [r5, #8]
40014a7c:	e5959014 	ldr	r9, [r5, #20]
40014a80:	e3500000 	cmp	r0, #0
40014a84:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014a88:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014a8c:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014a90:	05950018 	ldreq	r0, [r5, #24]
40014a94:	01d00004 	bicseq	r0, r0, r4
40014a98:	0595e01c 	ldreq	lr, [r5, #28]
40014a9c:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014aa0:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014aa4:	0595c020 	ldreq	ip, [r5, #32]
40014aa8:	01dc0004 	bicseq	r0, ip, r4
40014aac:	1a00000a 	bne	40014adc <CyFx3DevIOSetConfig+0x1b0>
40014ab0:	e59f0098 	ldr	r0, [pc, #152]	; 40014b50 <CyFx3DevIOSetConfig+0x224>
40014ab4:	e3a01000 	mov	r1, #0
40014ab8:	e01e2000 	ands	r2, lr, r0
40014abc:	000c2000 	andeq	r2, ip, r0
40014ac0:	0a000001 	beq	40014acc <CyFx3DevIOSetConfig+0x1a0>
40014ac4:	e11c0000 	tst	ip, r0
40014ac8:	1a000003 	bne	40014adc <CyFx3DevIOSetConfig+0x1b0>
40014acc:	e2523001 	subs	r3, r2, #1
40014ad0:	13a03001 	movne	r3, #1
40014ad4:	e1120003 	tst	r2, r3
40014ad8:	0a000001 	beq	40014ae4 <CyFx3DevIOSetConfig+0x1b8>
40014adc:	e3a00000 	mov	r0, #0
40014ae0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014ae4:	e2811001 	add	r1, r1, #1
40014ae8:	e3510008 	cmp	r1, #8
40014aec:	e1a00080 	lsl	r0, r0, #1
40014af0:	3afffff0 	bcc	40014ab8 <CyFx3DevIOSetConfig+0x18c>
40014af4:	e588900c 	str	r9, [r8, #12]
40014af8:	e5950018 	ldr	r0, [r5, #24]
40014afc:	e5880010 	str	r0, [r8, #16]
40014b00:	e595001c 	ldr	r0, [r5, #28]
40014b04:	e5880014 	str	r0, [r8, #20]
40014b08:	e5950020 	ldr	r0, [r5, #32]
40014b0c:	e5880018 	str	r0, [r8, #24]
40014b10:	e3a00001 	mov	r0, #1
40014b14:	eb0000a6 	bl	40014db4 <CyFx3BusyWait>
40014b18:	e5886008 	str	r6, [r8, #8]
40014b1c:	e59f0030 	ldr	r0, [pc, #48]	; 40014b54 <CyFx3DevIOSetConfig+0x228>
40014b20:	e3a02024 	mov	r2, #36	; 0x24
40014b24:	e1a01005 	mov	r1, r5
40014b28:	ebfffb98 	bl	40013990 <__aeabi_memcpy4>
40014b2c:	e59f0024 	ldr	r0, [pc, #36]	; 40014b58 <CyFx3DevIOSetConfig+0x22c>
40014b30:	e5804004 	str	r4, [r0, #4]
40014b34:	e5807000 	str	r7, [r0]
40014b38:	e3a00001 	mov	r0, #1
40014b3c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014b40:	e0051000 	.word	0xe0051000
40014b44:	3fe00000 	.word	0x3fe00000
40014b48:	1ffff9e0 	.word	0x1ffff9e0
40014b4c:	1fffe000 	.word	0x1fffe000
40014b50:	01010101 	.word	0x01010101
40014b54:	40030cd0 	.word	0x40030cd0
40014b58:	40030cc8 	.word	0x40030cc8

Disassembly of section i.CyFx3DevIdentifyPart:

40014b5c <CyFx3DevIdentifyPart>:
40014b5c:	e59f0078 	ldr	r0, [pc, #120]	; 40014bdc <CyFx3DevIdentifyPart+0x80>
40014b60:	e5901008 	ldr	r1, [r0, #8]
40014b64:	e59f2074 	ldr	r2, [pc, #116]	; 40014be0 <CyFx3DevIdentifyPart+0x84>
40014b68:	e1a01221 	lsr	r1, r1, #4
40014b6c:	e5923004 	ldr	r3, [r2, #4]
40014b70:	e3530000 	cmp	r3, #0
40014b74:	15d20000 	ldrbne	r0, [r2]
40014b78:	112fff1e 	bxne	lr
40014b7c:	e5900004 	ldr	r0, [r0, #4]
40014b80:	e3100040 	tst	r0, #64	; 0x40
40014b84:	e59f2058 	ldr	r2, [pc, #88]	; 40014be4 <CyFx3DevIdentifyPart+0x88>
40014b88:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014b8c:	e3a00000 	mov	r0, #0
40014b90:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014b94:	e1530001 	cmp	r3, r1
40014b98:	12800001 	addne	r0, r0, #1
40014b9c:	120000ff 	andne	r0, r0, #255	; 0xff
40014ba0:	1350001b 	cmpne	r0, #27
40014ba4:	3afffff9 	bcc	40014b90 <CyFx3DevIdentifyPart+0x34>
40014ba8:	e350001b 	cmp	r0, #27
40014bac:	03a00003 	moveq	r0, #3
40014bb0:	0a000000 	beq	40014bb8 <CyFx3DevIdentifyPart+0x5c>
40014bb4:	2a000003 	bcs	40014bc8 <CyFx3DevIdentifyPart+0x6c>
40014bb8:	e0821180 	add	r1, r2, r0, lsl #3
40014bbc:	e5911004 	ldr	r1, [r1, #4]
40014bc0:	e3110004 	tst	r1, #4
40014bc4:	112fff1e 	bxne	lr
40014bc8:	e59f1018 	ldr	r1, [pc, #24]	; 40014be8 <CyFx3DevIdentifyPart+0x8c>
40014bcc:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014bd0:	e3822004 	orr	r2, r2, #4
40014bd4:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014bd8:	e12fff1e 	bx	lr
40014bdc:	e0055000 	.word	0xe0055000
40014be0:	40030cbc 	.word	0x40030cbc
40014be4:	40011f90 	.word	0x40011f90
40014be8:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014bec <CyFx3DevInitPageTables>:
40014bec:	e92d4030 	push	{r4, r5, lr}
40014bf0:	e59f0058 	ldr	r0, [pc, #88]	; 40014c50 <CyFx3DevInitPageTables+0x64>
40014bf4:	e3a04000 	mov	r4, #0
40014bf8:	e59f504c 	ldr	r5, [pc, #76]	; 40014c4c <CyFx3DevInitPageTables+0x60>
40014bfc:	e5804004 	str	r4, [r0, #4]
40014c00:	ebffffd5 	bl	40014b5c <CyFx3DevIdentifyPart>
40014c04:	e59f1048 	ldr	r1, [pc, #72]	; 40014c54 <CyFx3DevInitPageTables+0x68>
40014c08:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014c0c:	e5801000 	str	r1, [r0]
40014c10:	e2811201 	add	r1, r1, #268435456	; 0x10000000
40014c14:	e5801008 	str	r1, [r0, #8]
40014c18:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014c1c:	e5801010 	str	r1, [r0, #16]
40014c20:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
40014c24:	e5801018 	str	r1, [r0, #24]
40014c28:	e59f1028 	ldr	r1, [pc, #40]	; 40014c58 <CyFx3DevInitPageTables+0x6c>
40014c2c:	e5801020 	str	r1, [r0, #32]
40014c30:	e59f1024 	ldr	r1, [pc, #36]	; 40014c5c <CyFx3DevInitPageTables+0x70>
40014c34:	e580101c 	str	r1, [r0, #28]
40014c38:	e5804024 	str	r4, [r0, #36]	; 0x24
40014c3c:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014c40:	e3a00003 	mov	r0, #3
40014c44:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014c48:	e8bd8030 	pop	{r4, r5, pc}
40014c4c:	e0058000 	.word	0xe0058000
40014c50:	40030cbc 	.word	0x40030cbc
40014c54:	00000c12 	.word	0x00000c12
40014c58:	fff00c12 	.word	0xfff00c12
40014c5c:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014c60 <CyFx3DevIsGpif32Supported>:
40014c60:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014c64:	ebffffbc 	bl	40014b5c <CyFx3DevIdentifyPart>
40014c68:	e350001b 	cmp	r0, #27
40014c6c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014c84 <CyFx3DevIsGpif32Supported+0x24>
40014c70:	30810180 	addcc	r0, r1, r0, lsl #3
40014c74:	35900004 	ldrcc	r0, [r0, #4]
40014c78:	32000010 	andcc	r0, r0, #16
40014c7c:	23a00000 	movcs	r0, #0
40014c80:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014c84:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014c88 <CyFx3DevIsGpifConfigurable>:
40014c88:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014c8c:	ebffffb2 	bl	40014b5c <CyFx3DevIdentifyPart>
40014c90:	e350001b 	cmp	r0, #27
40014c94:	2a000006 	bcs	40014cb4 <CyFx3DevIsGpifConfigurable+0x2c>
40014c98:	e59f101c 	ldr	r1, [pc, #28]	; 40014cbc <CyFx3DevIsGpifConfigurable+0x34>
40014c9c:	e0810180 	add	r0, r1, r0, lsl #3
40014ca0:	e5900004 	ldr	r0, [r0, #4]
40014ca4:	e3100c0f 	tst	r0, #3840	; 0xf00
40014ca8:	159f0010 	ldrne	r0, [pc, #16]	; 40014cc0 <CyFx3DevIsGpifConfigurable+0x38>
40014cac:	15900008 	ldrne	r0, [r0, #8]
40014cb0:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014cb4:	e3a00001 	mov	r0, #1
40014cb8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cbc:	40011f90 	.word	0x40011f90
40014cc0:	40030cbc 	.word	0x40030cbc

Disassembly of section i.CyFx3DevIsGpifSupported:

40014cc4 <CyFx3DevIsGpifSupported>:
40014cc4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014cc8:	ebffffa3 	bl	40014b5c <CyFx3DevIdentifyPart>
40014ccc:	e350001b 	cmp	r0, #27
40014cd0:	359f1010 	ldrcc	r1, [pc, #16]	; 40014ce8 <CyFx3DevIsGpifSupported+0x24>
40014cd4:	30810180 	addcc	r0, r1, r0, lsl #3
40014cd8:	35900004 	ldrcc	r0, [r0, #4]
40014cdc:	32000008 	andcc	r0, r0, #8
40014ce0:	23a00000 	movcs	r0, #0
40014ce4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014ce8:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3DevIsI2sSupported:

40014cec <CyFx3DevIsI2sSupported>:
40014cec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014cf0:	ebffff99 	bl	40014b5c <CyFx3DevIdentifyPart>
40014cf4:	e350001b 	cmp	r0, #27
40014cf8:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d10 <CyFx3DevIsI2sSupported+0x24>
40014cfc:	30810180 	addcc	r0, r1, r0, lsl #3
40014d00:	35900004 	ldrcc	r0, [r0, #4]
40014d04:	32000080 	andcc	r0, r0, #128	; 0x80
40014d08:	23a00000 	movcs	r0, #0
40014d0c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d10:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3DevIsOtgSupported:

40014d14 <CyFx3DevIsOtgSupported>:
40014d14:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d18:	ebffff8f 	bl	40014b5c <CyFx3DevIdentifyPart>
40014d1c:	e350001b 	cmp	r0, #27
40014d20:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d38 <CyFx3DevIsOtgSupported+0x24>
40014d24:	30810180 	addcc	r0, r1, r0, lsl #3
40014d28:	35900004 	ldrcc	r0, [r0, #4]
40014d2c:	32000002 	andcc	r0, r0, #2
40014d30:	23a00000 	movcs	r0, #0
40014d34:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d38:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3DevIsSib0Supported:

40014d3c <CyFx3DevIsSib0Supported>:
40014d3c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d40:	ebffff85 	bl	40014b5c <CyFx3DevIdentifyPart>
40014d44:	e350001b 	cmp	r0, #27
40014d48:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d60 <CyFx3DevIsSib0Supported+0x24>
40014d4c:	30810180 	addcc	r0, r1, r0, lsl #3
40014d50:	35900004 	ldrcc	r0, [r0, #4]
40014d54:	32000020 	andcc	r0, r0, #32
40014d58:	23a00000 	movcs	r0, #0
40014d5c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d60:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3DevIsSib1Supported:

40014d64 <CyFx3DevIsSib1Supported>:
40014d64:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d68:	ebffff7b 	bl	40014b5c <CyFx3DevIdentifyPart>
40014d6c:	e350001b 	cmp	r0, #27
40014d70:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d88 <CyFx3DevIsSib1Supported+0x24>
40014d74:	30810180 	addcc	r0, r1, r0, lsl #3
40014d78:	35900004 	ldrcc	r0, [r0, #4]
40014d7c:	32000040 	andcc	r0, r0, #64	; 0x40
40014d80:	23a00000 	movcs	r0, #0
40014d84:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d88:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014d8c <CyFx3DevIsUsb3Supported>:
40014d8c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d90:	ebffff71 	bl	40014b5c <CyFx3DevIdentifyPart>
40014d94:	e350001b 	cmp	r0, #27
40014d98:	359f1010 	ldrcc	r1, [pc, #16]	; 40014db0 <CyFx3DevIsUsb3Supported+0x24>
40014d9c:	30810180 	addcc	r0, r1, r0, lsl #3
40014da0:	35900004 	ldrcc	r0, [r0, #4]
40014da4:	32000001 	andcc	r0, r0, #1
40014da8:	23a00000 	movcs	r0, #0
40014dac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014db0:	40011f90 	.word	0x40011f90

Disassembly of section i.CyFx3BusyWait:

40014db4 <CyFx3BusyWait>:
40014db4:	ea000003 	b	40014dc8 <CyFx3BusyWait+0x14>
40014db8:	e3a01000 	mov	r1, #0
40014dbc:	e2811001 	add	r1, r1, #1
40014dc0:	e351002f 	cmp	r1, #47	; 0x2f
40014dc4:	3afffffc 	bcc	40014dbc <CyFx3BusyWait+0x8>
40014dc8:	e1b01000 	movs	r1, r0
40014dcc:	e2400001 	sub	r0, r0, #1
40014dd0:	e1a00800 	lsl	r0, r0, #16
40014dd4:	e1a00820 	lsr	r0, r0, #16
40014dd8:	1afffff6 	bne	40014db8 <CyFx3BusyWait+0x4>
40014ddc:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014de0 <CyFx3PibDllEnable>:
40014de0:	e59f205c 	ldr	r2, [pc, #92]	; 40014e44 <CyFx3PibDllEnable+0x64>
40014de4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014de8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014dec:	e3c00001 	bic	r0, r0, #1
40014df0:	e5820028 	str	r0, [r2, #40]	; 0x28
40014df4:	e3a00001 	mov	r0, #1
40014df8:	ebffffed 	bl	40014db4 <CyFx3BusyWait>
40014dfc:	e3a00003 	mov	r0, #3
40014e00:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e04:	e3a00001 	mov	r0, #1
40014e08:	ebffffe9 	bl	40014db4 <CyFx3BusyWait>
40014e0c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e10:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014e14:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e18:	e3a00001 	mov	r0, #1
40014e1c:	ebffffe4 	bl	40014db4 <CyFx3BusyWait>
40014e20:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e24:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014e28:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e2c:	e3a00001 	mov	r0, #1
40014e30:	ebffffdf 	bl	40014db4 <CyFx3BusyWait>
40014e34:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e38:	e3100004 	tst	r0, #4
40014e3c:	0afffffc 	beq	40014e34 <CyFx3PibDllEnable+0x54>
40014e40:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e44:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014e48 <CyFx3PibGetDllStatus>:
40014e48:	e59f0008 	ldr	r0, [pc, #8]	; 40014e58 <CyFx3PibGetDllStatus+0x10>
40014e4c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014e50:	e2000004 	and	r0, r0, #4
40014e54:	e12fff1e 	bx	lr
40014e58:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014e5c <CyFx3PibPowerOn>:
40014e5c:	e92d4010 	push	{r4, lr}
40014e60:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014e64:	ebffff96 	bl	40014cc4 <CyFx3DevIsGpifSupported>
40014e68:	e3500000 	cmp	r0, #0
40014e6c:	1a000002 	bne	40014e7c <CyFx3PibPowerOn+0x20>
40014e70:	e4940004 	ldr	r0, [r4], #4
40014e74:	e3500000 	cmp	r0, #0
40014e78:	1afffffc 	bne	40014e70 <CyFx3PibPowerOn+0x14>
40014e7c:	e59f2028 	ldr	r2, [pc, #40]	; 40014eac <CyFx3PibPowerOn+0x50>
40014e80:	e3a00000 	mov	r0, #0
40014e84:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014e88:	e3a0000a 	mov	r0, #10
40014e8c:	ebffffc8 	bl	40014db4 <CyFx3BusyWait>
40014e90:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014e94:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014e98:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014e9c:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014ea0:	e3100001 	tst	r0, #1
40014ea4:	0afffffc 	beq	40014e9c <CyFx3PibPowerOn+0x40>
40014ea8:	e8bd8010 	pop	{r4, pc}
40014eac:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014eb0 <CyU3PDmaSocketDisable>:
40014eb0:	e3a0c03f 	mov	ip, #63	; 0x3f
40014eb4:	e00c1440 	and	r1, ip, r0, asr #8
40014eb8:	e20030ff 	and	r3, r0, #255	; 0xff
40014ebc:	e59fc048 	ldr	ip, [pc, #72]	; 40014f0c <CyU3PDmaSocketDisable+0x5c>
40014ec0:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ec4:	e08cc383 	add	ip, ip, r3, lsl #7
40014ec8:	e59c200c 	ldr	r2, [ip, #12]
40014ecc:	e3120601 	tst	r2, #1048576	; 0x100000
40014ed0:	1a000000 	bne	40014ed8 <CyU3PDmaSocketDisable+0x28>
40014ed4:	e12fff1e 	bx	lr
40014ed8:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014edc:	e59fc028 	ldr	ip, [pc, #40]	; 40014f0c <CyU3PDmaSocketDisable+0x5c>
40014ee0:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ee4:	e08cc383 	add	ip, ip, r3, lsl #7
40014ee8:	e58c200c 	str	r2, [ip, #12]
40014eec:	e1a00000 	nop			; (mov r0, r0)
40014ef0:	e59fc014 	ldr	ip, [pc, #20]	; 40014f0c <CyU3PDmaSocketDisable+0x5c>
40014ef4:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ef8:	e08cc383 	add	ip, ip, r3, lsl #7
40014efc:	e59cc00c 	ldr	ip, [ip, #12]
40014f00:	e31c0601 	tst	ip, #1048576	; 0x100000
40014f04:	1afffff9 	bne	40014ef0 <CyU3PDmaSocketDisable+0x40>
40014f08:	eafffff1 	b	40014ed4 <CyU3PDmaSocketDisable+0x24>
40014f0c:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014f10 <CyU3PDmaSocketGetConfig>:
40014f10:	e1a02000 	mov	r2, r0
40014f14:	e3a0003f 	mov	r0, #63	; 0x3f
40014f18:	e0003442 	and	r3, r0, r2, asr #8
40014f1c:	e202c0ff 	and	ip, r2, #255	; 0xff
40014f20:	e3510000 	cmp	r1, #0
40014f24:	1a000001 	bne	40014f30 <CyU3PDmaSocketGetConfig+0x20>
40014f28:	e3a00040 	mov	r0, #64	; 0x40
40014f2c:	e12fff1e 	bx	lr
40014f30:	e59f0074 	ldr	r0, [pc, #116]	; 40014fac <CyU3PDmaSocketGetConfig+0x9c>
40014f34:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f38:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014f3c:	e5810000 	str	r0, [r1]
40014f40:	e59f0064 	ldr	r0, [pc, #100]	; 40014fac <CyU3PDmaSocketGetConfig+0x9c>
40014f44:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f48:	e080038c 	add	r0, r0, ip, lsl #7
40014f4c:	e5900004 	ldr	r0, [r0, #4]
40014f50:	e5810004 	str	r0, [r1, #4]
40014f54:	e59f0050 	ldr	r0, [pc, #80]	; 40014fac <CyU3PDmaSocketGetConfig+0x9c>
40014f58:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f5c:	e080038c 	add	r0, r0, ip, lsl #7
40014f60:	e5900008 	ldr	r0, [r0, #8]
40014f64:	e5810008 	str	r0, [r1, #8]
40014f68:	e59f003c 	ldr	r0, [pc, #60]	; 40014fac <CyU3PDmaSocketGetConfig+0x9c>
40014f6c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f70:	e080038c 	add	r0, r0, ip, lsl #7
40014f74:	e590000c 	ldr	r0, [r0, #12]
40014f78:	e581000c 	str	r0, [r1, #12]
40014f7c:	e59f0028 	ldr	r0, [pc, #40]	; 40014fac <CyU3PDmaSocketGetConfig+0x9c>
40014f80:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f84:	e080038c 	add	r0, r0, ip, lsl #7
40014f88:	e5900010 	ldr	r0, [r0, #16]
40014f8c:	e5810010 	str	r0, [r1, #16]
40014f90:	e59f0014 	ldr	r0, [pc, #20]	; 40014fac <CyU3PDmaSocketGetConfig+0x9c>
40014f94:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f98:	e080038c 	add	r0, r0, ip, lsl #7
40014f9c:	e5900014 	ldr	r0, [r0, #20]
40014fa0:	e5810014 	str	r0, [r1, #20]
40014fa4:	e3a00000 	mov	r0, #0
40014fa8:	eaffffdf 	b	40014f2c <CyU3PDmaSocketGetConfig+0x1c>
40014fac:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014fb0 <CyU3PDmaSocketIsValidConsumer>:
40014fb0:	e92d4010 	push	{r4, lr}
40014fb4:	e1a01000 	mov	r1, r0
40014fb8:	e3a0003f 	mov	r0, #63	; 0x3f
40014fbc:	e0002441 	and	r2, r0, r1, asr #8
40014fc0:	e20130ff 	and	r3, r1, #255	; 0xff
40014fc4:	e3a04000 	mov	r4, #0
40014fc8:	e3520000 	cmp	r2, #0
40014fcc:	0a000006 	beq	40014fec <CyU3PDmaSocketIsValidConsumer+0x3c>
40014fd0:	e3520001 	cmp	r2, #1
40014fd4:	0a000009 	beq	40015000 <CyU3PDmaSocketIsValidConsumer+0x50>
40014fd8:	e3520002 	cmp	r2, #2
40014fdc:	0a00000c 	beq	40015014 <CyU3PDmaSocketIsValidConsumer+0x64>
40014fe0:	e3520003 	cmp	r2, #3
40014fe4:	1a000014 	bne	4001503c <CyU3PDmaSocketIsValidConsumer+0x8c>
40014fe8:	ea00000e 	b	40015028 <CyU3PDmaSocketIsValidConsumer+0x78>
40014fec:	e1a00000 	nop			; (mov r0, r0)
40014ff0:	e3a0c000 	mov	ip, #0
40014ff4:	e3a0e004 	mov	lr, #4
40014ff8:	e59f4080 	ldr	r4, [pc, #128]	; 40015080 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014ffc:	ea000011 	b	40015048 <CyU3PDmaSocketIsValidConsumer+0x98>
40015000:	e1a00000 	nop			; (mov r0, r0)
40015004:	e3a0c000 	mov	ip, #0
40015008:	e3a0e00f 	mov	lr, #15
4001500c:	e59f4070 	ldr	r4, [pc, #112]	; 40015084 <CyU3PDmaSocketIsValidConsumer+0xd4>
40015010:	ea00000c 	b	40015048 <CyU3PDmaSocketIsValidConsumer+0x98>
40015014:	e1a00000 	nop			; (mov r0, r0)
40015018:	e3a0c000 	mov	ip, #0
4001501c:	e3a0e007 	mov	lr, #7
40015020:	e59f4060 	ldr	r4, [pc, #96]	; 40015088 <CyU3PDmaSocketIsValidConsumer+0xd8>
40015024:	ea000007 	b	40015048 <CyU3PDmaSocketIsValidConsumer+0x98>
40015028:	e1a00000 	nop			; (mov r0, r0)
4001502c:	e3a0c000 	mov	ip, #0
40015030:	e3a0e00f 	mov	lr, #15
40015034:	e59f4050 	ldr	r4, [pc, #80]	; 4001508c <CyU3PDmaSocketIsValidConsumer+0xdc>
40015038:	ea000002 	b	40015048 <CyU3PDmaSocketIsValidConsumer+0x98>
4001503c:	e1a00000 	nop			; (mov r0, r0)
40015040:	e3a00000 	mov	r0, #0
40015044:	e8bd8010 	pop	{r4, pc}
40015048:	e1a00000 	nop			; (mov r0, r0)
4001504c:	e5940000 	ldr	r0, [r4]
40015050:	e3100001 	tst	r0, #1
40015054:	1a000001 	bne	40015060 <CyU3PDmaSocketIsValidConsumer+0xb0>
40015058:	e3a00000 	mov	r0, #0
4001505c:	eafffff8 	b	40015044 <CyU3PDmaSocketIsValidConsumer+0x94>
40015060:	e153000c 	cmp	r3, ip
40015064:	ba000003 	blt	40015078 <CyU3PDmaSocketIsValidConsumer+0xc8>
40015068:	e153000e 	cmp	r3, lr
4001506c:	ca000001 	bgt	40015078 <CyU3PDmaSocketIsValidConsumer+0xc8>
40015070:	e3a00001 	mov	r0, #1
40015074:	eafffff2 	b	40015044 <CyU3PDmaSocketIsValidConsumer+0x94>
40015078:	e3a00000 	mov	r0, #0
4001507c:	eafffff0 	b	40015044 <CyU3PDmaSocketIsValidConsumer+0x94>
40015080:	e0007f04 	.word	0xe0007f04
40015084:	e0017f04 	.word	0xe0017f04
40015088:	e0027f04 	.word	0xe0027f04
4001508c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40015090 <CyU3PDmaSocketIsValidProducer>:
40015090:	e92d4010 	push	{r4, lr}
40015094:	e1a01000 	mov	r1, r0
40015098:	e3a0003f 	mov	r0, #63	; 0x3f
4001509c:	e0002441 	and	r2, r0, r1, asr #8
400150a0:	e20130ff 	and	r3, r1, #255	; 0xff
400150a4:	e3a04000 	mov	r4, #0
400150a8:	e3520000 	cmp	r2, #0
400150ac:	0a000006 	beq	400150cc <CyU3PDmaSocketIsValidProducer+0x3c>
400150b0:	e3520001 	cmp	r2, #1
400150b4:	0a000009 	beq	400150e0 <CyU3PDmaSocketIsValidProducer+0x50>
400150b8:	e3520002 	cmp	r2, #2
400150bc:	0a00000c 	beq	400150f4 <CyU3PDmaSocketIsValidProducer+0x64>
400150c0:	e3520004 	cmp	r2, #4
400150c4:	1a000014 	bne	4001511c <CyU3PDmaSocketIsValidProducer+0x8c>
400150c8:	ea00000e 	b	40015108 <CyU3PDmaSocketIsValidProducer+0x78>
400150cc:	e1a00000 	nop			; (mov r0, r0)
400150d0:	e3a0c005 	mov	ip, #5
400150d4:	e3a0e007 	mov	lr, #7
400150d8:	e59f4080 	ldr	r4, [pc, #128]	; 40015160 <CyU3PDmaSocketIsValidProducer+0xd0>
400150dc:	ea000011 	b	40015128 <CyU3PDmaSocketIsValidProducer+0x98>
400150e0:	e1a00000 	nop			; (mov r0, r0)
400150e4:	e3a0c000 	mov	ip, #0
400150e8:	e3a0e01f 	mov	lr, #31
400150ec:	e59f4070 	ldr	r4, [pc, #112]	; 40015164 <CyU3PDmaSocketIsValidProducer+0xd4>
400150f0:	ea00000c 	b	40015128 <CyU3PDmaSocketIsValidProducer+0x98>
400150f4:	e1a00000 	nop			; (mov r0, r0)
400150f8:	e3a0c000 	mov	ip, #0
400150fc:	e3a0e007 	mov	lr, #7
40015100:	e59f4060 	ldr	r4, [pc, #96]	; 40015168 <CyU3PDmaSocketIsValidProducer+0xd8>
40015104:	ea000007 	b	40015128 <CyU3PDmaSocketIsValidProducer+0x98>
40015108:	e1a00000 	nop			; (mov r0, r0)
4001510c:	e3a0c000 	mov	ip, #0
40015110:	e3a0e00f 	mov	lr, #15
40015114:	e59f4050 	ldr	r4, [pc, #80]	; 4001516c <CyU3PDmaSocketIsValidProducer+0xdc>
40015118:	ea000002 	b	40015128 <CyU3PDmaSocketIsValidProducer+0x98>
4001511c:	e1a00000 	nop			; (mov r0, r0)
40015120:	e3a00000 	mov	r0, #0
40015124:	e8bd8010 	pop	{r4, pc}
40015128:	e1a00000 	nop			; (mov r0, r0)
4001512c:	e5940000 	ldr	r0, [r4]
40015130:	e3100001 	tst	r0, #1
40015134:	1a000001 	bne	40015140 <CyU3PDmaSocketIsValidProducer+0xb0>
40015138:	e3a00000 	mov	r0, #0
4001513c:	eafffff8 	b	40015124 <CyU3PDmaSocketIsValidProducer+0x94>
40015140:	e153000c 	cmp	r3, ip
40015144:	ba000003 	blt	40015158 <CyU3PDmaSocketIsValidProducer+0xc8>
40015148:	e153000e 	cmp	r3, lr
4001514c:	ca000001 	bgt	40015158 <CyU3PDmaSocketIsValidProducer+0xc8>
40015150:	e3a00001 	mov	r0, #1
40015154:	eafffff2 	b	40015124 <CyU3PDmaSocketIsValidProducer+0x94>
40015158:	e3a00000 	mov	r0, #0
4001515c:	eafffff0 	b	40015124 <CyU3PDmaSocketIsValidProducer+0x94>
40015160:	e0007f04 	.word	0xe0007f04
40015164:	e0017f04 	.word	0xe0017f04
40015168:	e0027f04 	.word	0xe0027f04
4001516c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40015170 <CyU3PDmaSocketSendEvent>:
40015170:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015174:	e1a04000 	mov	r4, r0
40015178:	e1a05001 	mov	r5, r1
4001517c:	e1a06002 	mov	r6, r2
40015180:	e3a0003f 	mov	r0, #63	; 0x3f
40015184:	e0007444 	and	r7, r0, r4, asr #8
40015188:	e20480ff 	and	r8, r4, #255	; 0xff
4001518c:	e1a09005 	mov	r9, r5
40015190:	e3560001 	cmp	r6, #1
40015194:	1a000000 	bne	4001519c <CyU3PDmaSocketSendEvent+0x2c>
40015198:	e3899801 	orr	r9, r9, #65536	; 0x10000
4001519c:	e59f0010 	ldr	r0, [pc, #16]	; 400151b4 <CyU3PDmaSocketSendEvent+0x44>
400151a0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400151a4:	e0800388 	add	r0, r0, r8, lsl #7
400151a8:	e580907c 	str	r9, [r0, #124]	; 0x7c
400151ac:	ebfff6e1 	bl	40012d38 <CyU3PSysBarrierSync>
400151b0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400151b4:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketSetConfig:

400151b8 <CyU3PDmaSocketSetConfig>:
400151b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400151bc:	e1a04000 	mov	r4, r0
400151c0:	e1a05001 	mov	r5, r1
400151c4:	e3a0003f 	mov	r0, #63	; 0x3f
400151c8:	e0006444 	and	r6, r0, r4, asr #8
400151cc:	e20470ff 	and	r7, r4, #255	; 0xff
400151d0:	e3550000 	cmp	r5, #0
400151d4:	1a000001 	bne	400151e0 <CyU3PDmaSocketSetConfig+0x28>
400151d8:	e3a00040 	mov	r0, #64	; 0x40
400151dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400151e0:	e59f1078 	ldr	r1, [pc, #120]	; 40015260 <CyU3PDmaSocketSetConfig+0xa8>
400151e4:	e5950000 	ldr	r0, [r5]
400151e8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400151ec:	e7810387 	str	r0, [r1, r7, lsl #7]
400151f0:	e59f1068 	ldr	r1, [pc, #104]	; 40015260 <CyU3PDmaSocketSetConfig+0xa8>
400151f4:	e5950004 	ldr	r0, [r5, #4]
400151f8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400151fc:	e0811387 	add	r1, r1, r7, lsl #7
40015200:	e5810004 	str	r0, [r1, #4]
40015204:	e59f1054 	ldr	r1, [pc, #84]	; 40015260 <CyU3PDmaSocketSetConfig+0xa8>
40015208:	e5950008 	ldr	r0, [r5, #8]
4001520c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015210:	e0811387 	add	r1, r1, r7, lsl #7
40015214:	e5810008 	str	r0, [r1, #8]
40015218:	e59f1040 	ldr	r1, [pc, #64]	; 40015260 <CyU3PDmaSocketSetConfig+0xa8>
4001521c:	e5950010 	ldr	r0, [r5, #16]
40015220:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015224:	e0811387 	add	r1, r1, r7, lsl #7
40015228:	e5810010 	str	r0, [r1, #16]
4001522c:	e59f102c 	ldr	r1, [pc, #44]	; 40015260 <CyU3PDmaSocketSetConfig+0xa8>
40015230:	e5950014 	ldr	r0, [r5, #20]
40015234:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015238:	e0811387 	add	r1, r1, r7, lsl #7
4001523c:	e5810014 	str	r0, [r1, #20]
40015240:	e59f1018 	ldr	r1, [pc, #24]	; 40015260 <CyU3PDmaSocketSetConfig+0xa8>
40015244:	e595000c 	ldr	r0, [r5, #12]
40015248:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001524c:	e0811387 	add	r1, r1, r7, lsl #7
40015250:	e581000c 	str	r0, [r1, #12]
40015254:	ebfff6b7 	bl	40012d38 <CyU3PSysBarrierSync>
40015258:	e3a00000 	mov	r0, #0
4001525c:	eaffffde 	b	400151dc <CyU3PDmaSocketSetConfig+0x24>
40015260:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40015264 <CyU3PDmaSocketSetWrapUp>:
40015264:	e3a0c03f 	mov	ip, #63	; 0x3f
40015268:	e00c1440 	and	r1, ip, r0, asr #8
4001526c:	e20030ff 	and	r3, r0, #255	; 0xff
40015270:	e59fc02c 	ldr	ip, [pc, #44]	; 400152a4 <CyU3PDmaSocketSetWrapUp+0x40>
40015274:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40015278:	e08cc383 	add	ip, ip, r3, lsl #7
4001527c:	e59c200c 	ldr	r2, [ip, #12]
40015280:	e3120601 	tst	r2, #1048576	; 0x100000
40015284:	1a000000 	bne	4001528c <CyU3PDmaSocketSetWrapUp+0x28>
40015288:	e12fff1e 	bx	lr
4001528c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40015290:	e59fc00c 	ldr	ip, [pc, #12]	; 400152a4 <CyU3PDmaSocketSetWrapUp+0x40>
40015294:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40015298:	e08cc383 	add	ip, ip, r3, lsl #7
4001529c:	e58c200c 	str	r2, [ip, #12]
400152a0:	eafffff8 	b	40015288 <CyU3PDmaSocketSetWrapUp+0x24>
400152a4:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

400152a8 <CyU3PDmaSocketUpdateStatus>:
400152a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400152ac:	e1a04000 	mov	r4, r0
400152b0:	e1a05001 	mov	r5, r1
400152b4:	e3a0003f 	mov	r0, #63	; 0x3f
400152b8:	e0006444 	and	r6, r0, r4, asr #8
400152bc:	e20470ff 	and	r7, r4, #255	; 0xff
400152c0:	e3550000 	cmp	r5, #0
400152c4:	1a000001 	bne	400152d0 <CyU3PDmaSocketUpdateStatus+0x28>
400152c8:	e3a00040 	mov	r0, #64	; 0x40
400152cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400152d0:	e59f1040 	ldr	r1, [pc, #64]	; 40015318 <CyU3PDmaSocketUpdateStatus+0x70>
400152d4:	e5950010 	ldr	r0, [r5, #16]
400152d8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400152dc:	e0811387 	add	r1, r1, r7, lsl #7
400152e0:	e5810010 	str	r0, [r1, #16]
400152e4:	e59f102c 	ldr	r1, [pc, #44]	; 40015318 <CyU3PDmaSocketUpdateStatus+0x70>
400152e8:	e5950014 	ldr	r0, [r5, #20]
400152ec:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400152f0:	e0811387 	add	r1, r1, r7, lsl #7
400152f4:	e5810014 	str	r0, [r1, #20]
400152f8:	e59f1018 	ldr	r1, [pc, #24]	; 40015318 <CyU3PDmaSocketUpdateStatus+0x70>
400152fc:	e595000c 	ldr	r0, [r5, #12]
40015300:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015304:	e0811387 	add	r1, r1, r7, lsl #7
40015308:	e581000c 	str	r0, [r1, #12]
4001530c:	ebfff689 	bl	40012d38 <CyU3PSysBarrierSync>
40015310:	e3a00000 	mov	r0, #0
40015314:	eaffffec 	b	400152cc <CyU3PDmaSocketUpdateStatus+0x24>
40015318:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

4001531c <CyU3PDmaUpdateSocketSuspendOption>:
4001531c:	e92d4070 	push	{r4, r5, r6, lr}
40015320:	e24dd018 	sub	sp, sp, #24
40015324:	e1a04000 	mov	r4, r0
40015328:	e1a06001 	mov	r6, r1
4001532c:	e1a0100d 	mov	r1, sp
40015330:	e1a00004 	mov	r0, r4
40015334:	ebfffef5 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40015338:	e59d000c 	ldr	r0, [sp, #12]
4001533c:	e2000702 	and	r0, r0, #524288	; 0x80000
40015340:	e1a059a0 	lsr	r5, r0, #19
40015344:	e3550001 	cmp	r5, #1
40015348:	1a000010 	bne	40015390 <CyU3PDmaUpdateSocketSuspendOption+0x74>
4001534c:	e59d000c 	ldr	r0, [sp, #12]
40015350:	e3100101 	tst	r0, #1073741824	; 0x40000000
40015354:	1a00000a 	bne	40015384 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40015358:	e59d000c 	ldr	r0, [sp, #12]
4001535c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015360:	e58d000c 	str	r0, [sp, #12]
40015364:	e3a00000 	mov	r0, #0
40015368:	e58d0010 	str	r0, [sp, #16]
4001536c:	e1a0100d 	mov	r1, sp
40015370:	e1a00004 	mov	r0, r4
40015374:	ebffffcb 	bl	400152a8 <CyU3PDmaSocketUpdateStatus>
40015378:	e1a0100d 	mov	r1, sp
4001537c:	e1a00004 	mov	r0, r4
40015380:	ebfffee2 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40015384:	e3a00000 	mov	r0, #0
40015388:	e58d0010 	str	r0, [sp, #16]
4001538c:	ea000004 	b	400153a4 <CyU3PDmaUpdateSocketSuspendOption+0x88>
40015390:	e59d000c 	ldr	r0, [sp, #12]
40015394:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40015398:	e58d000c 	str	r0, [sp, #12]
4001539c:	e3a00e12 	mov	r0, #288	; 0x120
400153a0:	e58d0010 	str	r0, [sp, #16]
400153a4:	e59d000c 	ldr	r0, [sp, #12]
400153a8:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
400153ac:	e58d000c 	str	r0, [sp, #12]
400153b0:	e59d0014 	ldr	r0, [sp, #20]
400153b4:	e3c00e12 	bic	r0, r0, #288	; 0x120
400153b8:	e58d0014 	str	r0, [sp, #20]
400153bc:	e3560000 	cmp	r6, #0
400153c0:	0a000006 	beq	400153e0 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
400153c4:	e3560001 	cmp	r6, #1
400153c8:	0a000006 	beq	400153e8 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
400153cc:	e3560002 	cmp	r6, #2
400153d0:	0a00000e 	beq	40015410 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
400153d4:	e3560003 	cmp	r6, #3
400153d8:	1a000020 	bne	40015460 <CyU3PDmaUpdateSocketSuspendOption+0x144>
400153dc:	ea000015 	b	40015438 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
400153e0:	e1a00000 	nop			; (mov r0, r0)
400153e4:	ea00001f 	b	40015468 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400153e8:	e1a00000 	nop			; (mov r0, r0)
400153ec:	e59d000c 	ldr	r0, [sp, #12]
400153f0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400153f4:	e58d000c 	str	r0, [sp, #12]
400153f8:	e3550000 	cmp	r5, #0
400153fc:	1a000002 	bne	4001540c <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40015400:	e59d0014 	ldr	r0, [sp, #20]
40015404:	e3800020 	orr	r0, r0, #32
40015408:	e58d0014 	str	r0, [sp, #20]
4001540c:	ea000015 	b	40015468 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015410:	e1a00000 	nop			; (mov r0, r0)
40015414:	e3550000 	cmp	r5, #0
40015418:	1a000005 	bne	40015434 <CyU3PDmaUpdateSocketSuspendOption+0x118>
4001541c:	e59d000c 	ldr	r0, [sp, #12]
40015420:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015424:	e58d000c 	str	r0, [sp, #12]
40015428:	e59d0014 	ldr	r0, [sp, #20]
4001542c:	e3800020 	orr	r0, r0, #32
40015430:	e58d0014 	str	r0, [sp, #20]
40015434:	ea00000b 	b	40015468 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015438:	e1a00000 	nop			; (mov r0, r0)
4001543c:	e59d000c 	ldr	r0, [sp, #12]
40015440:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40015444:	e58d000c 	str	r0, [sp, #12]
40015448:	e3550000 	cmp	r5, #0
4001544c:	1a000002 	bne	4001545c <CyU3PDmaUpdateSocketSuspendOption+0x140>
40015450:	e59d0014 	ldr	r0, [sp, #20]
40015454:	e3800c01 	orr	r0, r0, #256	; 0x100
40015458:	e58d0014 	str	r0, [sp, #20]
4001545c:	ea000001 	b	40015468 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015460:	e1a00000 	nop			; (mov r0, r0)
40015464:	e1a00000 	nop			; (mov r0, r0)
40015468:	e1a00000 	nop			; (mov r0, r0)
4001546c:	e1a0100d 	mov	r1, sp
40015470:	e1a00004 	mov	r0, r4
40015474:	ebffff8b 	bl	400152a8 <CyU3PDmaSocketUpdateStatus>
40015478:	e28dd018 	add	sp, sp, #24
4001547c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015480 <CyU3PDmaChannelAcquireLock>:
40015480:	e92d4070 	push	{r4, r5, r6, lr}
40015484:	e1a04000 	mov	r4, r0
40015488:	e1a05001 	mov	r5, r1
4001548c:	e3540000 	cmp	r4, #0
40015490:	1a000001 	bne	4001549c <CyU3PDmaChannelAcquireLock+0x1c>
40015494:	e3a00041 	mov	r0, #65	; 0x41
40015498:	e8bd8070 	pop	{r4, r5, r6, pc}
4001549c:	e5940000 	ldr	r0, [r4]
400154a0:	e3500000 	cmp	r0, #0
400154a4:	1a000001 	bne	400154b0 <CyU3PDmaChannelAcquireLock+0x30>
400154a8:	e3a00044 	mov	r0, #68	; 0x44
400154ac:	eafffff9 	b	40015498 <CyU3PDmaChannelAcquireLock+0x18>
400154b0:	e1a01005 	mov	r1, r5
400154b4:	e284003c 	add	r0, r4, #60	; 0x3c
400154b8:	ebffd393 	bl	4000a30c <_txe_mutex_get>
400154bc:	e3500000 	cmp	r0, #0
400154c0:	0a000001 	beq	400154cc <CyU3PDmaChannelAcquireLock+0x4c>
400154c4:	e3a0001d 	mov	r0, #29
400154c8:	eafffff2 	b	40015498 <CyU3PDmaChannelAcquireLock+0x18>
400154cc:	e3a00000 	mov	r0, #0
400154d0:	eafffff0 	b	40015498 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

400154d4 <CyU3PDmaChannelCacheControl>:
400154d4:	e92d4070 	push	{r4, r5, r6, lr}
400154d8:	e1a04000 	mov	r4, r0
400154dc:	e1a05001 	mov	r5, r1
400154e0:	e3e01000 	mvn	r1, #0
400154e4:	e1a00004 	mov	r0, r4
400154e8:	ebffffe4 	bl	40015480 <CyU3PDmaChannelAcquireLock>
400154ec:	e1a06000 	mov	r6, r0
400154f0:	e3560000 	cmp	r6, #0
400154f4:	0a000001 	beq	40015500 <CyU3PDmaChannelCacheControl+0x2c>
400154f8:	e1a00006 	mov	r0, r6
400154fc:	e8bd8070 	pop	{r4, r5, r6, pc}
40015500:	e5940000 	ldr	r0, [r4]
40015504:	e3500001 	cmp	r0, #1
40015508:	1a000001 	bne	40015514 <CyU3PDmaChannelCacheControl+0x40>
4001550c:	e5845038 	str	r5, [r4, #56]	; 0x38
40015510:	ea000000 	b	40015518 <CyU3PDmaChannelCacheControl+0x44>
40015514:	e3a06047 	mov	r6, #71	; 0x47
40015518:	e284003c 	add	r0, r4, #60	; 0x3c
4001551c:	ebffd3af 	bl	4000a3e0 <_txe_mutex_put>
40015520:	e1a00006 	mov	r0, r6
40015524:	eafffff4 	b	400154fc <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

40015528 <CyU3PDmaChannelCommitBuffer>:
40015528:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001552c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40015530:	e1a04000 	mov	r4, r0
40015534:	e1a05001 	mov	r5, r1
40015538:	e1a06002 	mov	r6, r2
4001553c:	e3e01000 	mvn	r1, #0
40015540:	e1a00004 	mov	r0, r4
40015544:	ebffffcd 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40015548:	e1a09000 	mov	r9, r0
4001554c:	e3590000 	cmp	r9, #0
40015550:	0a000002 	beq	40015560 <CyU3PDmaChannelCommitBuffer+0x38>
40015554:	e1a00009 	mov	r0, r9
40015558:	e28dd03c 	add	sp, sp, #60	; 0x3c
4001555c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015560:	e1d400b6 	ldrh	r0, [r4, #6]
40015564:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015568:	e0400001 	sub	r0, r0, r1
4001556c:	e1500005 	cmp	r0, r5
40015570:	aa000000 	bge	40015578 <CyU3PDmaChannelCommitBuffer+0x50>
40015574:	e3a09040 	mov	r9, #64	; 0x40
40015578:	e5940000 	ldr	r0, [r4]
4001557c:	e3500002 	cmp	r0, #2
40015580:	0a000000 	beq	40015588 <CyU3PDmaChannelCommitBuffer+0x60>
40015584:	e3a09042 	mov	r9, #66	; 0x42
40015588:	e1d400b4 	ldrh	r0, [r4, #4]
4001558c:	e3500003 	cmp	r0, #3
40015590:	1a000000 	bne	40015598 <CyU3PDmaChannelCommitBuffer+0x70>
40015594:	e3a09046 	mov	r9, #70	; 0x46
40015598:	e3590000 	cmp	r9, #0
4001559c:	0a000003 	beq	400155b0 <CyU3PDmaChannelCommitBuffer+0x88>
400155a0:	e284003c 	add	r0, r4, #60	; 0x3c
400155a4:	ebffd38d 	bl	4000a3e0 <_txe_mutex_put>
400155a8:	e1a00009 	mov	r0, r9
400155ac:	eaffffe9 	b	40015558 <CyU3PDmaChannelCommitBuffer+0x30>
400155b0:	e1d400b4 	ldrh	r0, [r4, #4]
400155b4:	e20070ff 	and	r7, r0, #255	; 0xff
400155b8:	e3570002 	cmp	r7, #2
400155bc:	1a000037 	bne	400156a0 <CyU3PDmaChannelCommitBuffer+0x178>
400155c0:	e1d401b6 	ldrh	r0, [r4, #22]
400155c4:	e28d1014 	add	r1, sp, #20
400155c8:	eb0034ae 	bl	40022888 <CyU3PDmaDscrGetConfig>
400155cc:	e1d401b8 	ldrh	r0, [r4, #24]
400155d0:	e28d1004 	add	r1, sp, #4
400155d4:	eb0034ab 	bl	40022888 <CyU3PDmaDscrGetConfig>
400155d8:	e59d0020 	ldr	r0, [sp, #32]
400155dc:	e3100008 	tst	r0, #8
400155e0:	1a000000 	bne	400155e8 <CyU3PDmaChannelCommitBuffer+0xc0>
400155e4:	e3a09047 	mov	r9, #71	; 0x47
400155e8:	e59d0010 	ldr	r0, [sp, #16]
400155ec:	e3100008 	tst	r0, #8
400155f0:	0a000000 	beq	400155f8 <CyU3PDmaChannelCommitBuffer+0xd0>
400155f4:	e3a09047 	mov	r9, #71	; 0x47
400155f8:	e3590000 	cmp	r9, #0
400155fc:	1a000080 	bne	40015804 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015600:	e59d0010 	ldr	r0, [sp, #16]
40015604:	e59f1208 	ldr	r1, [pc, #520]	; 40015814 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015608:	e0000001 	and	r0, r0, r1
4001560c:	e58d0010 	str	r0, [sp, #16]
40015610:	e59d0010 	ldr	r0, [sp, #16]
40015614:	e1800805 	orr	r0, r0, r5, lsl #16
40015618:	e58d0010 	str	r0, [sp, #16]
4001561c:	e3560000 	cmp	r6, #0
40015620:	1a000005 	bne	4001563c <CyU3PDmaChannelCommitBuffer+0x114>
40015624:	e59d1020 	ldr	r1, [sp, #32]
40015628:	e201100f 	and	r1, r1, #15
4001562c:	e59d0010 	ldr	r0, [sp, #16]
40015630:	e1800001 	orr	r0, r0, r1
40015634:	e58d0010 	str	r0, [sp, #16]
40015638:	ea000004 	b	40015650 <CyU3PDmaChannelCommitBuffer+0x128>
4001563c:	e206100e 	and	r1, r6, #14
40015640:	e3811008 	orr	r1, r1, #8
40015644:	e59d0010 	ldr	r0, [sp, #16]
40015648:	e1800001 	orr	r0, r0, r1
4001564c:	e58d0010 	str	r0, [sp, #16]
40015650:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015654:	e3500000 	cmp	r0, #0
40015658:	0a000004 	beq	40015670 <CyU3PDmaChannelCommitBuffer+0x148>
4001565c:	e59d2010 	ldr	r2, [sp, #16]
40015660:	e59f31ac 	ldr	r3, [pc, #428]	; 40015814 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015664:	e0021003 	and	r1, r2, r3
40015668:	e59d0004 	ldr	r0, [sp, #4]
4001566c:	ebfff34a 	bl	4001239c <CyU3PSysCleanDRegion>
40015670:	e1d401b8 	ldrh	r0, [r4, #24]
40015674:	e28d1004 	add	r1, sp, #4
40015678:	eb00349d 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001567c:	e1d411b8 	ldrh	r1, [r4, #24]
40015680:	e1d401b2 	ldrh	r0, [r4, #18]
40015684:	e3a02001 	mov	r2, #1
40015688:	ebfffeb8 	bl	40015170 <CyU3PDmaSocketSendEvent>
4001568c:	e59d001c 	ldr	r0, [sp, #28]
40015690:	e1c401b6 	strh	r0, [r4, #22]
40015694:	e59d000c 	ldr	r0, [sp, #12]
40015698:	e1c401b8 	strh	r0, [r4, #24]
4001569c:	ea000058 	b	40015804 <CyU3PDmaChannelCommitBuffer+0x2dc>
400156a0:	e3570004 	cmp	r7, #4
400156a4:	1a000027 	bne	40015748 <CyU3PDmaChannelCommitBuffer+0x220>
400156a8:	e1d401b8 	ldrh	r0, [r4, #24]
400156ac:	e28d1004 	add	r1, sp, #4
400156b0:	eb003474 	bl	40022888 <CyU3PDmaDscrGetConfig>
400156b4:	e59d0010 	ldr	r0, [sp, #16]
400156b8:	e3100008 	tst	r0, #8
400156bc:	0a000000 	beq	400156c4 <CyU3PDmaChannelCommitBuffer+0x19c>
400156c0:	e3a09047 	mov	r9, #71	; 0x47
400156c4:	e3590000 	cmp	r9, #0
400156c8:	1a00004d 	bne	40015804 <CyU3PDmaChannelCommitBuffer+0x2dc>
400156cc:	e59d0010 	ldr	r0, [sp, #16]
400156d0:	e1a00800 	lsl	r0, r0, #16
400156d4:	e1a00820 	lsr	r0, r0, #16
400156d8:	e58d0010 	str	r0, [sp, #16]
400156dc:	e3a01008 	mov	r1, #8
400156e0:	e1811805 	orr	r1, r1, r5, lsl #16
400156e4:	e59d0010 	ldr	r0, [sp, #16]
400156e8:	e1800001 	orr	r0, r0, r1
400156ec:	e58d0010 	str	r0, [sp, #16]
400156f0:	e206100e 	and	r1, r6, #14
400156f4:	e59d0010 	ldr	r0, [sp, #16]
400156f8:	e1800001 	orr	r0, r0, r1
400156fc:	e58d0010 	str	r0, [sp, #16]
40015700:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015704:	e3500000 	cmp	r0, #0
40015708:	0a000004 	beq	40015720 <CyU3PDmaChannelCommitBuffer+0x1f8>
4001570c:	e59d2010 	ldr	r2, [sp, #16]
40015710:	e59f30fc 	ldr	r3, [pc, #252]	; 40015814 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015714:	e0021003 	and	r1, r2, r3
40015718:	e59d0004 	ldr	r0, [sp, #4]
4001571c:	ebfff31e 	bl	4001239c <CyU3PSysCleanDRegion>
40015720:	e1d401b8 	ldrh	r0, [r4, #24]
40015724:	e28d1004 	add	r1, sp, #4
40015728:	eb003471 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001572c:	e1d411b8 	ldrh	r1, [r4, #24]
40015730:	e1d401b2 	ldrh	r0, [r4, #18]
40015734:	e3a02001 	mov	r2, #1
40015738:	ebfffe8c 	bl	40015170 <CyU3PDmaSocketSendEvent>
4001573c:	e59d000c 	ldr	r0, [sp, #12]
40015740:	e1c401b8 	strh	r0, [r4, #24]
40015744:	ea00002e 	b	40015804 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015748:	e1d401b2 	ldrh	r0, [r4, #18]
4001574c:	e28d1024 	add	r1, sp, #36	; 0x24
40015750:	ebfffdee 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40015754:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015758:	e3100702 	tst	r0, #524288	; 0x80000
4001575c:	0a000027 	beq	40015800 <CyU3PDmaChannelCommitBuffer+0x2d8>
40015760:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015764:	e1a08800 	lsl	r8, r0, #16
40015768:	e1a08828 	lsr	r8, r8, #16
4001576c:	e28d1004 	add	r1, sp, #4
40015770:	e1a00008 	mov	r0, r8
40015774:	eb003443 	bl	40022888 <CyU3PDmaDscrGetConfig>
40015778:	e59d0010 	ldr	r0, [sp, #16]
4001577c:	e3100008 	tst	r0, #8
40015780:	0a00001c 	beq	400157f8 <CyU3PDmaChannelCommitBuffer+0x2d0>
40015784:	e59d0010 	ldr	r0, [sp, #16]
40015788:	e1a00800 	lsl	r0, r0, #16
4001578c:	e1a00820 	lsr	r0, r0, #16
40015790:	e58d0010 	str	r0, [sp, #16]
40015794:	e59d0010 	ldr	r0, [sp, #16]
40015798:	e1800805 	orr	r0, r0, r5, lsl #16
4001579c:	e58d0010 	str	r0, [sp, #16]
400157a0:	e3560000 	cmp	r6, #0
400157a4:	0a000007 	beq	400157c8 <CyU3PDmaChannelCommitBuffer+0x2a0>
400157a8:	e59d0010 	ldr	r0, [sp, #16]
400157ac:	e3c0000f 	bic	r0, r0, #15
400157b0:	e58d0010 	str	r0, [sp, #16]
400157b4:	e206100e 	and	r1, r6, #14
400157b8:	e3811008 	orr	r1, r1, #8
400157bc:	e59d0010 	ldr	r0, [sp, #16]
400157c0:	e1800001 	orr	r0, r0, r1
400157c4:	e58d0010 	str	r0, [sp, #16]
400157c8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400157cc:	e3500000 	cmp	r0, #0
400157d0:	0a000004 	beq	400157e8 <CyU3PDmaChannelCommitBuffer+0x2c0>
400157d4:	e59d2010 	ldr	r2, [sp, #16]
400157d8:	e59f3034 	ldr	r3, [pc, #52]	; 40015814 <CyU3PDmaChannelCommitBuffer+0x2ec>
400157dc:	e0021003 	and	r1, r2, r3
400157e0:	e59d0004 	ldr	r0, [sp, #4]
400157e4:	ebfff2ec 	bl	4001239c <CyU3PSysCleanDRegion>
400157e8:	e28d1004 	add	r1, sp, #4
400157ec:	e1a00008 	mov	r0, r8
400157f0:	eb00343f 	bl	400228f4 <CyU3PDmaDscrSetConfig>
400157f4:	ea000002 	b	40015804 <CyU3PDmaChannelCommitBuffer+0x2dc>
400157f8:	e3a09047 	mov	r9, #71	; 0x47
400157fc:	ea000000 	b	40015804 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015800:	e3a09047 	mov	r9, #71	; 0x47
40015804:	e284003c 	add	r0, r4, #60	; 0x3c
40015808:	ebffd2f4 	bl	4000a3e0 <_txe_mutex_put>
4001580c:	e1a00009 	mov	r0, r9
40015810:	eaffff50 	b	40015558 <CyU3PDmaChannelCommitBuffer+0x30>
40015814:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

40015818 <CyU3PDmaChannelConfigure_TypeAuto>:
40015818:	e92d4070 	push	{r4, r5, r6, lr}
4001581c:	e1a05000 	mov	r5, r0
40015820:	e1d501b2 	ldrh	r0, [r5, #18]
40015824:	e3806901 	orr	r6, r0, #16384	; 0x4000
40015828:	e1d501b0 	ldrh	r0, [r5, #16]
4001582c:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015830:	e1810800 	orr	r0, r1, r0, lsl #16
40015834:	e1866000 	orr	r6, r6, r0
40015838:	e1d500b4 	ldrh	r0, [r5, #4]
4001583c:	e3500001 	cmp	r0, #1
40015840:	1a000000 	bne	40015848 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
40015844:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40015848:	e1d520b6 	ldrh	r2, [r5, #6]
4001584c:	e1d510b8 	ldrh	r1, [r5, #8]
40015850:	e1a03006 	mov	r3, r6
40015854:	e285000c 	add	r0, r5, #12
40015858:	eb00331b 	bl	400224cc <CyU3PDmaDscrChainCreate>
4001585c:	e1a04000 	mov	r4, r0
40015860:	e3540000 	cmp	r4, #0
40015864:	0a000001 	beq	40015870 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
40015868:	e1a00004 	mov	r0, r4
4001586c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015870:	e1d500bc 	ldrh	r0, [r5, #12]
40015874:	e1c501b6 	strh	r0, [r5, #22]
40015878:	e1c501ba 	strh	r0, [r5, #26]
4001587c:	e1c501be 	strh	r0, [r5, #30]
40015880:	e1d500be 	ldrh	r0, [r5, #14]
40015884:	e1c501b8 	strh	r0, [r5, #24]
40015888:	e1c501bc 	strh	r0, [r5, #28]
4001588c:	e1c502b0 	strh	r0, [r5, #32]
40015890:	e2850014 	add	r0, r5, #20
40015894:	eb003383 	bl	400226a8 <CyU3PDmaDscrGet>
40015898:	e1a00005 	mov	r0, r5
4001589c:	eb0006b7 	bl	40017380 <CyU3PDmaConfigureSockets_TypeAuto>
400158a0:	e3a00000 	mov	r0, #0
400158a4:	eafffff0 	b	4001586c <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

400158a8 <CyU3PDmaChannelConfigure_TypeManual>:
400158a8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400158ac:	e24dd024 	sub	sp, sp, #36	; 0x24
400158b0:	e1a04000 	mov	r4, r0
400158b4:	e284700c 	add	r7, r4, #12
400158b8:	e3a06cff 	mov	r6, #65280	; 0xff00
400158bc:	e1d401b0 	ldrh	r0, [r4, #16]
400158c0:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400158c4:	e1810800 	orr	r0, r1, r0, lsl #16
400158c8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400158cc:	e1866000 	orr	r6, r6, r0
400158d0:	e1d400b4 	ldrh	r0, [r4, #4]
400158d4:	e3500003 	cmp	r0, #3
400158d8:	1a000002 	bne	400158e8 <CyU3PDmaChannelConfigure_TypeManual+0x40>
400158dc:	e3a00c3f 	mov	r0, #16128	; 0x3f00
400158e0:	e1c401b2 	strh	r0, [r4, #18]
400158e4:	ea000009 	b	40015910 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400158e8:	e1d400b4 	ldrh	r0, [r4, #4]
400158ec:	e3500004 	cmp	r0, #4
400158f0:	1a000006 	bne	40015910 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400158f4:	e59f020c 	ldr	r0, [pc, #524]	; 40015b08 <CyU3PDmaChannelConfigure_TypeManual+0x260>
400158f8:	e1c401b0 	strh	r0, [r4, #16]
400158fc:	e284700e 	add	r7, r4, #14
40015900:	e1d401b2 	ldrh	r0, [r4, #18]
40015904:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015908:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
4001590c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015910:	e1d400b8 	ldrh	r0, [r4, #8]
40015914:	e3500000 	cmp	r0, #0
40015918:	0a00006b 	beq	40015acc <CyU3PDmaChannelConfigure_TypeManual+0x224>
4001591c:	e1d420b6 	ldrh	r2, [r4, #6]
40015920:	e1d410b8 	ldrh	r1, [r4, #8]
40015924:	e1a03006 	mov	r3, r6
40015928:	e1a00007 	mov	r0, r7
4001592c:	eb0032e6 	bl	400224cc <CyU3PDmaDscrChainCreate>
40015930:	e1a05000 	mov	r5, r0
40015934:	e3550000 	cmp	r5, #0
40015938:	0a000002 	beq	40015948 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
4001593c:	e1a00005 	mov	r0, r5
40015940:	e28dd024 	add	sp, sp, #36	; 0x24
40015944:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015948:	e1d400b4 	ldrh	r0, [r4, #4]
4001594c:	e3500002 	cmp	r0, #2
40015950:	1a000012 	bne	400159a0 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015954:	e1d401b2 	ldrh	r0, [r4, #18]
40015958:	e3806903 	orr	r6, r0, #49152	; 0xc000
4001595c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015960:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015964:	e1d410b8 	ldrh	r1, [r4, #8]
40015968:	e1a03006 	mov	r3, r6
4001596c:	e3a02000 	mov	r2, #0
40015970:	e284000e 	add	r0, r4, #14
40015974:	eb0032d4 	bl	400224cc <CyU3PDmaDscrChainCreate>
40015978:	e1a05000 	mov	r5, r0
4001597c:	e3550000 	cmp	r5, #0
40015980:	0a000006 	beq	400159a0 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015984:	e1d410b8 	ldrh	r1, [r4, #8]
40015988:	e1d700b0 	ldrh	r0, [r7]
4001598c:	e3a03001 	mov	r3, #1
40015990:	e1a02003 	mov	r2, r3
40015994:	eb003320 	bl	4002261c <CyU3PDmaDscrChainDestroy>
40015998:	e1a00005 	mov	r0, r5
4001599c:	eaffffe7 	b	40015940 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400159a0:	e1d400bc 	ldrh	r0, [r4, #12]
400159a4:	e1c401b6 	strh	r0, [r4, #22]
400159a8:	e1c401ba 	strh	r0, [r4, #26]
400159ac:	e1c401be 	strh	r0, [r4, #30]
400159b0:	e1d400be 	ldrh	r0, [r4, #14]
400159b4:	e1c401b8 	strh	r0, [r4, #24]
400159b8:	e1c401bc 	strh	r0, [r4, #28]
400159bc:	e1c402b0 	strh	r0, [r4, #32]
400159c0:	e3a08000 	mov	r8, #0
400159c4:	e1d790b0 	ldrh	r9, [r7]
400159c8:	ea00003b 	b	40015abc <CyU3PDmaChannelConfigure_TypeManual+0x214>
400159cc:	e28d1014 	add	r1, sp, #20
400159d0:	e1a00009 	mov	r0, r9
400159d4:	eb0033ab 	bl	40022888 <CyU3PDmaDscrGetConfig>
400159d8:	e1d400b4 	ldrh	r0, [r4, #4]
400159dc:	e3500004 	cmp	r0, #4
400159e0:	1a00000b 	bne	40015a14 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
400159e4:	e59d0014 	ldr	r0, [sp, #20]
400159e8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400159ec:	e0800001 	add	r0, r0, r1
400159f0:	e58d0014 	str	r0, [sp, #20]
400159f4:	e1d400b6 	ldrh	r0, [r4, #6]
400159f8:	e280000f 	add	r0, r0, #15
400159fc:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a00:	e0400001 	sub	r0, r0, r1
40015a04:	e59f1100 	ldr	r1, [pc, #256]	; 40015b0c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a08:	e0000001 	and	r0, r0, r1
40015a0c:	e58d0020 	str	r0, [sp, #32]
40015a10:	ea000021 	b	40015a9c <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
40015a14:	e1d400b4 	ldrh	r0, [r4, #4]
40015a18:	e3500002 	cmp	r0, #2
40015a1c:	1a000012 	bne	40015a6c <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
40015a20:	e1d401b8 	ldrh	r0, [r4, #24]
40015a24:	e28d1004 	add	r1, sp, #4
40015a28:	eb003396 	bl	40022888 <CyU3PDmaDscrGetConfig>
40015a2c:	e59d0014 	ldr	r0, [sp, #20]
40015a30:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a34:	e0800001 	add	r0, r0, r1
40015a38:	e58d0004 	str	r0, [sp, #4]
40015a3c:	e1d400b6 	ldrh	r0, [r4, #6]
40015a40:	e280000f 	add	r0, r0, #15
40015a44:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a48:	e0400001 	sub	r0, r0, r1
40015a4c:	e59f10b8 	ldr	r1, [pc, #184]	; 40015b0c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a50:	e0000001 	and	r0, r0, r1
40015a54:	e58d0010 	str	r0, [sp, #16]
40015a58:	e1d401b8 	ldrh	r0, [r4, #24]
40015a5c:	e28d1004 	add	r1, sp, #4
40015a60:	eb0033a3 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40015a64:	e59d000c 	ldr	r0, [sp, #12]
40015a68:	e1c401b8 	strh	r0, [r4, #24]
40015a6c:	e59d0014 	ldr	r0, [sp, #20]
40015a70:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015a74:	e0800001 	add	r0, r0, r1
40015a78:	e58d0014 	str	r0, [sp, #20]
40015a7c:	e1d400b6 	ldrh	r0, [r4, #6]
40015a80:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015a84:	e0400001 	sub	r0, r0, r1
40015a88:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015a8c:	e0400001 	sub	r0, r0, r1
40015a90:	e59f1074 	ldr	r1, [pc, #116]	; 40015b0c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a94:	e0000001 	and	r0, r0, r1
40015a98:	e58d0020 	str	r0, [sp, #32]
40015a9c:	e28d1014 	add	r1, sp, #20
40015aa0:	e1a00009 	mov	r0, r9
40015aa4:	eb003392 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40015aa8:	e59d001c 	ldr	r0, [sp, #28]
40015aac:	e1a09800 	lsl	r9, r0, #16
40015ab0:	e1a09829 	lsr	r9, r9, #16
40015ab4:	e2880001 	add	r0, r8, #1
40015ab8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40015abc:	e1d400b8 	ldrh	r0, [r4, #8]
40015ac0:	e1500008 	cmp	r0, r8
40015ac4:	caffffc0 	bgt	400159cc <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015ac8:	ea000008 	b	40015af0 <CyU3PDmaChannelConfigure_TypeManual+0x248>
40015acc:	e59f003c 	ldr	r0, [pc, #60]	; 40015b10 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015ad0:	e1c400bc 	strh	r0, [r4, #12]
40015ad4:	e1c401b6 	strh	r0, [r4, #22]
40015ad8:	e1c401ba 	strh	r0, [r4, #26]
40015adc:	e1c401be 	strh	r0, [r4, #30]
40015ae0:	e1c400be 	strh	r0, [r4, #14]
40015ae4:	e1c401b8 	strh	r0, [r4, #24]
40015ae8:	e1c401bc 	strh	r0, [r4, #28]
40015aec:	e1c402b0 	strh	r0, [r4, #32]
40015af0:	e2840014 	add	r0, r4, #20
40015af4:	eb0032eb 	bl	400226a8 <CyU3PDmaDscrGet>
40015af8:	e1a00004 	mov	r0, r4
40015afc:	eb00065f 	bl	40017480 <CyU3PDmaConfigureSockets_TypeManual>
40015b00:	e3a00000 	mov	r0, #0
40015b04:	eaffff8d 	b	40015940 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015b08:	00003f01 	.word	0x00003f01
40015b0c:	0000fff0 	.word	0x0000fff0
40015b10:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

40015b14 <CyU3PDmaChannelCreate>:
40015b14:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015b18:	e1a04000 	mov	r4, r0
40015b1c:	e1a05001 	mov	r5, r1
40015b20:	e1a06002 	mov	r6, r2
40015b24:	e3560000 	cmp	r6, #0
40015b28:	1a000001 	bne	40015b34 <CyU3PDmaChannelCreate+0x20>
40015b2c:	e3a00041 	mov	r0, #65	; 0x41
40015b30:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40015b34:	e3540000 	cmp	r4, #0
40015b38:	1a000001 	bne	40015b44 <CyU3PDmaChannelCreate+0x30>
40015b3c:	e3a00041 	mov	r0, #65	; 0x41
40015b40:	eafffffa 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015b44:	eb00330f 	bl	40022788 <CyU3PDmaDscrGetFreeCount>
40015b48:	e1d610b2 	ldrh	r1, [r6, #2]
40015b4c:	e2811001 	add	r1, r1, #1
40015b50:	e1500001 	cmp	r0, r1
40015b54:	da000007 	ble	40015b78 <CyU3PDmaChannelCreate+0x64>
40015b58:	e3550002 	cmp	r5, #2
40015b5c:	1a000007 	bne	40015b80 <CyU3PDmaChannelCreate+0x6c>
40015b60:	eb003308 	bl	40022788 <CyU3PDmaDscrGetFreeCount>
40015b64:	e1d610b2 	ldrh	r1, [r6, #2]
40015b68:	e3a02001 	mov	r2, #1
40015b6c:	e0821101 	add	r1, r2, r1, lsl #2
40015b70:	e1500001 	cmp	r0, r1
40015b74:	ca000001 	bgt	40015b80 <CyU3PDmaChannelCreate+0x6c>
40015b78:	e3a00010 	mov	r0, #16
40015b7c:	eaffffeb 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015b80:	e1d600b0 	ldrh	r0, [r6]
40015b84:	e3500000 	cmp	r0, #0
40015b88:	0a000003 	beq	40015b9c <CyU3PDmaChannelCreate+0x88>
40015b8c:	e1d600b0 	ldrh	r0, [r6]
40015b90:	e59f1354 	ldr	r1, [pc, #852]	; 40015eec <CyU3PDmaChannelCreate+0x3d8>
40015b94:	e1500001 	cmp	r0, r1
40015b98:	da000001 	ble	40015ba4 <CyU3PDmaChannelCreate+0x90>
40015b9c:	e3a00040 	mov	r0, #64	; 0x40
40015ba0:	eaffffe2 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015ba4:	e3550000 	cmp	r5, #0
40015ba8:	0a000001 	beq	40015bb4 <CyU3PDmaChannelCreate+0xa0>
40015bac:	e3550001 	cmp	r5, #1
40015bb0:	1a000009 	bne	40015bdc <CyU3PDmaChannelCreate+0xc8>
40015bb4:	e1d600b0 	ldrh	r0, [r6]
40015bb8:	e310000f 	tst	r0, #15
40015bbc:	0a000001 	beq	40015bc8 <CyU3PDmaChannelCreate+0xb4>
40015bc0:	e3a00040 	mov	r0, #64	; 0x40
40015bc4:	eaffffd9 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015bc8:	e1d600b2 	ldrh	r0, [r6, #2]
40015bcc:	e3500000 	cmp	r0, #0
40015bd0:	1a00000b 	bne	40015c04 <CyU3PDmaChannelCreate+0xf0>
40015bd4:	e3a00040 	mov	r0, #64	; 0x40
40015bd8:	eaffffd4 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015bdc:	e1d600b0 	ldrh	r0, [r6]
40015be0:	e1d610ba 	ldrh	r1, [r6, #10]
40015be4:	e0400001 	sub	r0, r0, r1
40015be8:	e1d610bc 	ldrh	r1, [r6, #12]
40015bec:	e0400001 	sub	r0, r0, r1
40015bf0:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015bf4:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015bf8:	0a000001 	beq	40015c04 <CyU3PDmaChannelCreate+0xf0>
40015bfc:	e3a00040 	mov	r0, #64	; 0x40
40015c00:	eaffffca 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015c04:	e5d60010 	ldrb	r0, [r6, #16]
40015c08:	e3500002 	cmp	r0, #2
40015c0c:	ba000001 	blt	40015c18 <CyU3PDmaChannelCreate+0x104>
40015c10:	e3a00040 	mov	r0, #64	; 0x40
40015c14:	eaffffc5 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015c18:	e3550004 	cmp	r5, #4
40015c1c:	0a000011 	beq	40015c68 <CyU3PDmaChannelCreate+0x154>
40015c20:	e1d600b4 	ldrh	r0, [r6, #4]
40015c24:	e3a0103f 	mov	r1, #63	; 0x3f
40015c28:	e0018440 	and	r8, r1, r0, asr #8
40015c2c:	e1d600b4 	ldrh	r0, [r6, #4]
40015c30:	e20090ff 	and	r9, r0, #255	; 0xff
40015c34:	e1d600b4 	ldrh	r0, [r6, #4]
40015c38:	ebfffd14 	bl	40015090 <CyU3PDmaSocketIsValidProducer>
40015c3c:	e3500000 	cmp	r0, #0
40015c40:	1a000001 	bne	40015c4c <CyU3PDmaChannelCreate+0x138>
40015c44:	e3a00040 	mov	r0, #64	; 0x40
40015c48:	eaffffb8 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015c4c:	e59f029c 	ldr	r0, [pc, #668]	; 40015ef0 <CyU3PDmaChannelCreate+0x3dc>
40015c50:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015c54:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015c58:	e3500000 	cmp	r0, #0
40015c5c:	0a000007 	beq	40015c80 <CyU3PDmaChannelCreate+0x16c>
40015c60:	e3a00040 	mov	r0, #64	; 0x40
40015c64:	eaffffb1 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015c68:	e1d600b4 	ldrh	r0, [r6, #4]
40015c6c:	e59f1280 	ldr	r1, [pc, #640]	; 40015ef4 <CyU3PDmaChannelCreate+0x3e0>
40015c70:	e1500001 	cmp	r0, r1
40015c74:	0a000001 	beq	40015c80 <CyU3PDmaChannelCreate+0x16c>
40015c78:	e3a00040 	mov	r0, #64	; 0x40
40015c7c:	eaffffab 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015c80:	e3550003 	cmp	r5, #3
40015c84:	0a000011 	beq	40015cd0 <CyU3PDmaChannelCreate+0x1bc>
40015c88:	e1d600b6 	ldrh	r0, [r6, #6]
40015c8c:	e3a0103f 	mov	r1, #63	; 0x3f
40015c90:	e0018440 	and	r8, r1, r0, asr #8
40015c94:	e1d600b6 	ldrh	r0, [r6, #6]
40015c98:	e20090ff 	and	r9, r0, #255	; 0xff
40015c9c:	e1d600b6 	ldrh	r0, [r6, #6]
40015ca0:	ebfffcc2 	bl	40014fb0 <CyU3PDmaSocketIsValidConsumer>
40015ca4:	e3500000 	cmp	r0, #0
40015ca8:	1a000001 	bne	40015cb4 <CyU3PDmaChannelCreate+0x1a0>
40015cac:	e3a00040 	mov	r0, #64	; 0x40
40015cb0:	eaffff9e 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015cb4:	e59f0234 	ldr	r0, [pc, #564]	; 40015ef0 <CyU3PDmaChannelCreate+0x3dc>
40015cb8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015cbc:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015cc0:	e3500000 	cmp	r0, #0
40015cc4:	0a000006 	beq	40015ce4 <CyU3PDmaChannelCreate+0x1d0>
40015cc8:	e3a00040 	mov	r0, #64	; 0x40
40015ccc:	eaffff97 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015cd0:	e1d600b6 	ldrh	r0, [r6, #6]
40015cd4:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015cd8:	0a000001 	beq	40015ce4 <CyU3PDmaChannelCreate+0x1d0>
40015cdc:	e3a00040 	mov	r0, #64	; 0x40
40015ce0:	eaffff92 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015ce4:	e1d600b8 	ldrh	r0, [r6, #8]
40015ce8:	e3500000 	cmp	r0, #0
40015cec:	0a000008 	beq	40015d14 <CyU3PDmaChannelCreate+0x200>
40015cf0:	e1d600b8 	ldrh	r0, [r6, #8]
40015cf4:	e1d610b2 	ldrh	r1, [r6, #2]
40015cf8:	e1500001 	cmp	r0, r1
40015cfc:	aa000002 	bge	40015d0c <CyU3PDmaChannelCreate+0x1f8>
40015d00:	e1d600b2 	ldrh	r0, [r6, #2]
40015d04:	e350001f 	cmp	r0, #31
40015d08:	da000001 	ble	40015d14 <CyU3PDmaChannelCreate+0x200>
40015d0c:	e3a00040 	mov	r0, #64	; 0x40
40015d10:	eaffff86 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015d14:	e3550004 	cmp	r5, #4
40015d18:	0a000007 	beq	40015d3c <CyU3PDmaChannelCreate+0x228>
40015d1c:	e1d600b4 	ldrh	r0, [r6, #4]
40015d20:	e3a0103f 	mov	r1, #63	; 0x3f
40015d24:	e0018440 	and	r8, r1, r0, asr #8
40015d28:	e1d600b4 	ldrh	r0, [r6, #4]
40015d2c:	e20090ff 	and	r9, r0, #255	; 0xff
40015d30:	e59f01b8 	ldr	r0, [pc, #440]	; 40015ef0 <CyU3PDmaChannelCreate+0x3dc>
40015d34:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015d38:	e7804109 	str	r4, [r0, r9, lsl #2]
40015d3c:	e3550003 	cmp	r5, #3
40015d40:	0a000007 	beq	40015d64 <CyU3PDmaChannelCreate+0x250>
40015d44:	e1d600b6 	ldrh	r0, [r6, #6]
40015d48:	e3a0103f 	mov	r1, #63	; 0x3f
40015d4c:	e0018440 	and	r8, r1, r0, asr #8
40015d50:	e1d600b6 	ldrh	r0, [r6, #6]
40015d54:	e20090ff 	and	r9, r0, #255	; 0xff
40015d58:	e59f0190 	ldr	r0, [pc, #400]	; 40015ef0 <CyU3PDmaChannelCreate+0x3dc>
40015d5c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015d60:	e7804109 	str	r4, [r0, r9, lsl #2]
40015d64:	e1c450b4 	strh	r5, [r4, #4]
40015d68:	e1d600b0 	ldrh	r0, [r6]
40015d6c:	e1c400b6 	strh	r0, [r4, #6]
40015d70:	e1d600b2 	ldrh	r0, [r6, #2]
40015d74:	e1c400b8 	strh	r0, [r4, #8]
40015d78:	e1d600b8 	ldrh	r0, [r6, #8]
40015d7c:	e1c400ba 	strh	r0, [r4, #10]
40015d80:	e1d600b4 	ldrh	r0, [r6, #4]
40015d84:	e1c401b0 	strh	r0, [r4, #16]
40015d88:	e1d600b6 	ldrh	r0, [r6, #6]
40015d8c:	e1c401b2 	strh	r0, [r4, #18]
40015d90:	e1d600ba 	ldrh	r0, [r6, #10]
40015d94:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015d98:	e1d600bc 	ldrh	r0, [r6, #12]
40015d9c:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015da0:	e1d600be 	ldrh	r0, [r6, #14]
40015da4:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015da8:	e5d60010 	ldrb	r0, [r6, #16]
40015dac:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015db0:	e5960014 	ldr	r0, [r6, #20]
40015db4:	e5840030 	str	r0, [r4, #48]	; 0x30
40015db8:	e3a00000 	mov	r0, #0
40015dbc:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015dc0:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015dc4:	e3a03038 	mov	r3, #56	; 0x38
40015dc8:	e3a02000 	mov	r2, #0
40015dcc:	e1a01002 	mov	r1, r2
40015dd0:	e284003c 	add	r0, r4, #60	; 0x3c
40015dd4:	ebffd0ce 	bl	4000a114 <_txe_mutex_create>
40015dd8:	e3a02028 	mov	r2, #40	; 0x28
40015ddc:	e3a01000 	mov	r1, #0
40015de0:	e2840074 	add	r0, r4, #116	; 0x74
40015de4:	ebffd010 	bl	40009e2c <_txe_event_flags_create>
40015de8:	e5960018 	ldr	r0, [r6, #24]
40015dec:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015df0:	e59f0100 	ldr	r0, [pc, #256]	; 40015ef8 <CyU3PDmaChannelCreate+0x3e4>
40015df4:	e5900000 	ldr	r0, [r0]
40015df8:	e5840038 	str	r0, [r4, #56]	; 0x38
40015dfc:	e3550005 	cmp	r5, #5
40015e00:	308ff105 	addcc	pc, pc, r5, lsl #2
40015e04:	ea000011 	b	40015e50 <CyU3PDmaChannelCreate+0x33c>
40015e08:	ea000003 	b	40015e1c <CyU3PDmaChannelCreate+0x308>
40015e0c:	ea000004 	b	40015e24 <CyU3PDmaChannelCreate+0x310>
40015e10:	ea00000a 	b	40015e40 <CyU3PDmaChannelCreate+0x32c>
40015e14:	ea000006 	b	40015e34 <CyU3PDmaChannelCreate+0x320>
40015e18:	ea000007 	b	40015e3c <CyU3PDmaChannelCreate+0x328>
40015e1c:	e1a00000 	nop			; (mov r0, r0)
40015e20:	e1a00000 	nop			; (mov r0, r0)
40015e24:	e1a00004 	mov	r0, r4
40015e28:	ebfffe7a 	bl	40015818 <CyU3PDmaChannelConfigure_TypeAuto>
40015e2c:	e1a07000 	mov	r7, r0
40015e30:	ea000009 	b	40015e5c <CyU3PDmaChannelCreate+0x348>
40015e34:	e1a00000 	nop			; (mov r0, r0)
40015e38:	e1a00000 	nop			; (mov r0, r0)
40015e3c:	e1a00000 	nop			; (mov r0, r0)
40015e40:	e1a00004 	mov	r0, r4
40015e44:	ebfffe97 	bl	400158a8 <CyU3PDmaChannelConfigure_TypeManual>
40015e48:	e1a07000 	mov	r7, r0
40015e4c:	ea000002 	b	40015e5c <CyU3PDmaChannelCreate+0x348>
40015e50:	e1a00000 	nop			; (mov r0, r0)
40015e54:	e3a07040 	mov	r7, #64	; 0x40
40015e58:	e1a00000 	nop			; (mov r0, r0)
40015e5c:	e1a00000 	nop			; (mov r0, r0)
40015e60:	e3570000 	cmp	r7, #0
40015e64:	1a000002 	bne	40015e74 <CyU3PDmaChannelCreate+0x360>
40015e68:	e3a00001 	mov	r0, #1
40015e6c:	e5840000 	str	r0, [r4]
40015e70:	ea00001b 	b	40015ee4 <CyU3PDmaChannelCreate+0x3d0>
40015e74:	e284003c 	add	r0, r4, #60	; 0x3c
40015e78:	ebffd103 	bl	4000a28c <_txe_mutex_delete>
40015e7c:	e2840074 	add	r0, r4, #116	; 0x74
40015e80:	ebffd039 	bl	40009f6c <_txe_event_flags_delete>
40015e84:	e3550004 	cmp	r5, #4
40015e88:	0a000008 	beq	40015eb0 <CyU3PDmaChannelCreate+0x39c>
40015e8c:	e1d600b4 	ldrh	r0, [r6, #4]
40015e90:	e3a0103f 	mov	r1, #63	; 0x3f
40015e94:	e0018440 	and	r8, r1, r0, asr #8
40015e98:	e1d600b4 	ldrh	r0, [r6, #4]
40015e9c:	e20090ff 	and	r9, r0, #255	; 0xff
40015ea0:	e3a00000 	mov	r0, #0
40015ea4:	e59f1044 	ldr	r1, [pc, #68]	; 40015ef0 <CyU3PDmaChannelCreate+0x3dc>
40015ea8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015eac:	e7810109 	str	r0, [r1, r9, lsl #2]
40015eb0:	e3550003 	cmp	r5, #3
40015eb4:	0a000008 	beq	40015edc <CyU3PDmaChannelCreate+0x3c8>
40015eb8:	e1d600b6 	ldrh	r0, [r6, #6]
40015ebc:	e3a0103f 	mov	r1, #63	; 0x3f
40015ec0:	e0018440 	and	r8, r1, r0, asr #8
40015ec4:	e1d600b6 	ldrh	r0, [r6, #6]
40015ec8:	e20090ff 	and	r9, r0, #255	; 0xff
40015ecc:	e3a00000 	mov	r0, #0
40015ed0:	e59f1018 	ldr	r1, [pc, #24]	; 40015ef0 <CyU3PDmaChannelCreate+0x3dc>
40015ed4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015ed8:	e7810109 	str	r0, [r1, r9, lsl #2]
40015edc:	e3a00000 	mov	r0, #0
40015ee0:	e5840000 	str	r0, [r4]
40015ee4:	e1a00007 	mov	r0, r7
40015ee8:	eaffff10 	b	40015b30 <CyU3PDmaChannelCreate+0x1c>
40015eec:	0000fff0 	.word	0x0000fff0
40015ef0:	40030d20 	.word	0x40030d20
40015ef4:	00003f01 	.word	0x00003f01
40015ef8:	40030c84 	.word	0x40030c84

Disassembly of section i.CyU3PDmaChannelDestroy:

40015efc <CyU3PDmaChannelDestroy>:
40015efc:	e92d4070 	push	{r4, r5, r6, lr}
40015f00:	e1a04000 	mov	r4, r0
40015f04:	e3e01000 	mvn	r1, #0
40015f08:	e1a00004 	mov	r0, r4
40015f0c:	ebfffd5b 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40015f10:	e1a05000 	mov	r5, r0
40015f14:	e3550000 	cmp	r5, #0
40015f18:	0a000001 	beq	40015f24 <CyU3PDmaChannelDestroy+0x28>
40015f1c:	e1a00005 	mov	r0, r5
40015f20:	e8bd8070 	pop	{r4, r5, r6, pc}
40015f24:	e1d400b4 	ldrh	r0, [r4, #4]
40015f28:	e3500005 	cmp	r0, #5
40015f2c:	308ff100 	addcc	pc, pc, r0, lsl #2
40015f30:	ea00000f 	b	40015f74 <CyU3PDmaChannelDestroy+0x78>
40015f34:	ea000003 	b	40015f48 <CyU3PDmaChannelDestroy+0x4c>
40015f38:	ea000004 	b	40015f50 <CyU3PDmaChannelDestroy+0x54>
40015f3c:	ea000009 	b	40015f68 <CyU3PDmaChannelDestroy+0x6c>
40015f40:	ea000005 	b	40015f5c <CyU3PDmaChannelDestroy+0x60>
40015f44:	ea000006 	b	40015f64 <CyU3PDmaChannelDestroy+0x68>
40015f48:	e1a00000 	nop			; (mov r0, r0)
40015f4c:	e1a00000 	nop			; (mov r0, r0)
40015f50:	e1a00004 	mov	r0, r4
40015f54:	eb000014 	bl	40015fac <CyU3PDmaChannelDestroy_TypeAuto>
40015f58:	ea00000a 	b	40015f88 <CyU3PDmaChannelDestroy+0x8c>
40015f5c:	e1a00000 	nop			; (mov r0, r0)
40015f60:	e1a00000 	nop			; (mov r0, r0)
40015f64:	e1a00000 	nop			; (mov r0, r0)
40015f68:	e1a00004 	mov	r0, r4
40015f6c:	eb000043 	bl	40016080 <CyU3PDmaChannelDestroy_TypeManual>
40015f70:	ea000004 	b	40015f88 <CyU3PDmaChannelDestroy+0x8c>
40015f74:	e1a00000 	nop			; (mov r0, r0)
40015f78:	e284003c 	add	r0, r4, #60	; 0x3c
40015f7c:	ebffd117 	bl	4000a3e0 <_txe_mutex_put>
40015f80:	e3a00040 	mov	r0, #64	; 0x40
40015f84:	eaffffe5 	b	40015f20 <CyU3PDmaChannelDestroy+0x24>
40015f88:	e1a00000 	nop			; (mov r0, r0)
40015f8c:	e3a00000 	mov	r0, #0
40015f90:	e5840000 	str	r0, [r4]
40015f94:	e284003c 	add	r0, r4, #60	; 0x3c
40015f98:	ebffd0bb 	bl	4000a28c <_txe_mutex_delete>
40015f9c:	e2840074 	add	r0, r4, #116	; 0x74
40015fa0:	ebffcff1 	bl	40009f6c <_txe_event_flags_delete>
40015fa4:	e3a00000 	mov	r0, #0
40015fa8:	eaffffdc 	b	40015f20 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015fac <CyU3PDmaChannelDestroy_TypeAuto>:
40015fac:	e92d4070 	push	{r4, r5, r6, lr}
40015fb0:	e24dd018 	sub	sp, sp, #24
40015fb4:	e1a04000 	mov	r4, r0
40015fb8:	e1d401b0 	ldrh	r0, [r4, #16]
40015fbc:	ebfffbbb 	bl	40014eb0 <CyU3PDmaSocketDisable>
40015fc0:	e1d401b2 	ldrh	r0, [r4, #18]
40015fc4:	ebfffbb9 	bl	40014eb0 <CyU3PDmaSocketDisable>
40015fc8:	e1d401b0 	ldrh	r0, [r4, #16]
40015fcc:	e1a0100d 	mov	r1, sp
40015fd0:	ebfffbce 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40015fd4:	e59f009c 	ldr	r0, [pc, #156]	; 40016078 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015fd8:	e58d0000 	str	r0, [sp]
40015fdc:	e1d401b0 	ldrh	r0, [r4, #16]
40015fe0:	e1a0100d 	mov	r1, sp
40015fe4:	ebfffc73 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40015fe8:	e1d401b0 	ldrh	r0, [r4, #16]
40015fec:	e20050ff 	and	r5, r0, #255	; 0xff
40015ff0:	e1d401b0 	ldrh	r0, [r4, #16]
40015ff4:	e3a0103f 	mov	r1, #63	; 0x3f
40015ff8:	e0016440 	and	r6, r1, r0, asr #8
40015ffc:	e3a00000 	mov	r0, #0
40016000:	e59f1074 	ldr	r1, [pc, #116]	; 4001607c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40016004:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40016008:	e7810105 	str	r0, [r1, r5, lsl #2]
4001600c:	e1d401b2 	ldrh	r0, [r4, #18]
40016010:	e1a0100d 	mov	r1, sp
40016014:	ebfffbbd 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016018:	e59f0058 	ldr	r0, [pc, #88]	; 40016078 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
4001601c:	e58d0000 	str	r0, [sp]
40016020:	e1d401b2 	ldrh	r0, [r4, #18]
40016024:	e1a0100d 	mov	r1, sp
40016028:	ebfffc62 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001602c:	e1d401b2 	ldrh	r0, [r4, #18]
40016030:	e20050ff 	and	r5, r0, #255	; 0xff
40016034:	e1d401b2 	ldrh	r0, [r4, #18]
40016038:	e3a0103f 	mov	r1, #63	; 0x3f
4001603c:	e0016440 	and	r6, r1, r0, asr #8
40016040:	e3a00000 	mov	r0, #0
40016044:	e59f1030 	ldr	r1, [pc, #48]	; 4001607c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40016048:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001604c:	e7810105 	str	r0, [r1, r5, lsl #2]
40016050:	e1d410b8 	ldrh	r1, [r4, #8]
40016054:	e1d400bc 	ldrh	r0, [r4, #12]
40016058:	e3a03001 	mov	r3, #1
4001605c:	e1a02003 	mov	r2, r3
40016060:	eb00316d 	bl	4002261c <CyU3PDmaDscrChainDestroy>
40016064:	e1d401b4 	ldrh	r0, [r4, #20]
40016068:	eb0031df 	bl	400227ec <CyU3PDmaDscrPut>
4001606c:	e3a00000 	mov	r0, #0
40016070:	e28dd018 	add	sp, sp, #24
40016074:	e8bd8070 	pop	{r4, r5, r6, pc}
40016078:	0000ffff 	.word	0x0000ffff
4001607c:	40030d20 	.word	0x40030d20

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40016080 <CyU3PDmaChannelDestroy_TypeManual>:
40016080:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016084:	e24dd028 	sub	sp, sp, #40	; 0x28
40016088:	e1a04000 	mov	r4, r0
4001608c:	e1d400b4 	ldrh	r0, [r4, #4]
40016090:	e3500004 	cmp	r0, #4
40016094:	0a000012 	beq	400160e4 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40016098:	e1d401b0 	ldrh	r0, [r4, #16]
4001609c:	ebfffb83 	bl	40014eb0 <CyU3PDmaSocketDisable>
400160a0:	e1d401b0 	ldrh	r0, [r4, #16]
400160a4:	e1a0100d 	mov	r1, sp
400160a8:	ebfffb98 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400160ac:	e59f0178 	ldr	r0, [pc, #376]	; 4001622c <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
400160b0:	e58d0000 	str	r0, [sp]
400160b4:	e1d401b0 	ldrh	r0, [r4, #16]
400160b8:	e1a0100d 	mov	r1, sp
400160bc:	ebfffc3d 	bl	400151b8 <CyU3PDmaSocketSetConfig>
400160c0:	e1d401b0 	ldrh	r0, [r4, #16]
400160c4:	e20070ff 	and	r7, r0, #255	; 0xff
400160c8:	e1d401b0 	ldrh	r0, [r4, #16]
400160cc:	e3a0103f 	mov	r1, #63	; 0x3f
400160d0:	e0018440 	and	r8, r1, r0, asr #8
400160d4:	e3a00000 	mov	r0, #0
400160d8:	e59f1150 	ldr	r1, [pc, #336]	; 40016230 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
400160dc:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400160e0:	e7810107 	str	r0, [r1, r7, lsl #2]
400160e4:	e1d400b4 	ldrh	r0, [r4, #4]
400160e8:	e3500003 	cmp	r0, #3
400160ec:	0a000012 	beq	4001613c <CyU3PDmaChannelDestroy_TypeManual+0xbc>
400160f0:	e1d401b2 	ldrh	r0, [r4, #18]
400160f4:	ebfffb6d 	bl	40014eb0 <CyU3PDmaSocketDisable>
400160f8:	e1d401b2 	ldrh	r0, [r4, #18]
400160fc:	e1a0100d 	mov	r1, sp
40016100:	ebfffb82 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016104:	e59f0120 	ldr	r0, [pc, #288]	; 4001622c <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40016108:	e58d0000 	str	r0, [sp]
4001610c:	e1d401b2 	ldrh	r0, [r4, #18]
40016110:	e1a0100d 	mov	r1, sp
40016114:	ebfffc27 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40016118:	e1d401b2 	ldrh	r0, [r4, #18]
4001611c:	e20070ff 	and	r7, r0, #255	; 0xff
40016120:	e1d401b2 	ldrh	r0, [r4, #18]
40016124:	e3a0103f 	mov	r1, #63	; 0x3f
40016128:	e0018440 	and	r8, r1, r0, asr #8
4001612c:	e3a00000 	mov	r0, #0
40016130:	e59f10f8 	ldr	r1, [pc, #248]	; 40016230 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40016134:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40016138:	e7810107 	str	r0, [r1, r7, lsl #2]
4001613c:	e1d400b8 	ldrh	r0, [r4, #8]
40016140:	e3500000 	cmp	r0, #0
40016144:	0a000033 	beq	40016218 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016148:	e1d400b4 	ldrh	r0, [r4, #4]
4001614c:	e3500004 	cmp	r0, #4
40016150:	1a000014 	bne	400161a8 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40016154:	e1d450be 	ldrh	r5, [r4, #14]
40016158:	e3a06000 	mov	r6, #0
4001615c:	ea00000d 	b	40016198 <CyU3PDmaChannelDestroy_TypeManual+0x118>
40016160:	e28d1018 	add	r1, sp, #24
40016164:	e1a00005 	mov	r0, r5
40016168:	eb0031c6 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001616c:	e59d1018 	ldr	r1, [sp, #24]
40016170:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40016174:	e0410002 	sub	r0, r1, r2
40016178:	ebffb75d 	bl	40003ef4 <CyU3PDmaBufferFree>
4001617c:	e1a00005 	mov	r0, r5
40016180:	eb003199 	bl	400227ec <CyU3PDmaDscrPut>
40016184:	e59d0020 	ldr	r0, [sp, #32]
40016188:	e1a05800 	lsl	r5, r0, #16
4001618c:	e1a05825 	lsr	r5, r5, #16
40016190:	e2860001 	add	r0, r6, #1
40016194:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40016198:	e1d400b8 	ldrh	r0, [r4, #8]
4001619c:	e1500006 	cmp	r0, r6
400161a0:	caffffee 	bgt	40016160 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
400161a4:	ea000013 	b	400161f8 <CyU3PDmaChannelDestroy_TypeManual+0x178>
400161a8:	e1d450bc 	ldrh	r5, [r4, #12]
400161ac:	e3a06000 	mov	r6, #0
400161b0:	ea00000d 	b	400161ec <CyU3PDmaChannelDestroy_TypeManual+0x16c>
400161b4:	e28d1018 	add	r1, sp, #24
400161b8:	e1a00005 	mov	r0, r5
400161bc:	eb0031b1 	bl	40022888 <CyU3PDmaDscrGetConfig>
400161c0:	e59d1018 	ldr	r1, [sp, #24]
400161c4:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
400161c8:	e0410002 	sub	r0, r1, r2
400161cc:	ebffb748 	bl	40003ef4 <CyU3PDmaBufferFree>
400161d0:	e1a00005 	mov	r0, r5
400161d4:	eb003184 	bl	400227ec <CyU3PDmaDscrPut>
400161d8:	e59d0020 	ldr	r0, [sp, #32]
400161dc:	e1a05800 	lsl	r5, r0, #16
400161e0:	e1a05825 	lsr	r5, r5, #16
400161e4:	e2860001 	add	r0, r6, #1
400161e8:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400161ec:	e1d400b8 	ldrh	r0, [r4, #8]
400161f0:	e1500006 	cmp	r0, r6
400161f4:	caffffee 	bgt	400161b4 <CyU3PDmaChannelDestroy_TypeManual+0x134>
400161f8:	e1d400b4 	ldrh	r0, [r4, #4]
400161fc:	e3500002 	cmp	r0, #2
40016200:	1a000004 	bne	40016218 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016204:	e1d410b8 	ldrh	r1, [r4, #8]
40016208:	e1d400be 	ldrh	r0, [r4, #14]
4001620c:	e3a03000 	mov	r3, #0
40016210:	e1a02003 	mov	r2, r3
40016214:	eb003100 	bl	4002261c <CyU3PDmaDscrChainDestroy>
40016218:	e1d401b4 	ldrh	r0, [r4, #20]
4001621c:	eb003172 	bl	400227ec <CyU3PDmaDscrPut>
40016220:	e3a00000 	mov	r0, #0
40016224:	e28dd028 	add	sp, sp, #40	; 0x28
40016228:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001622c:	0000ffff 	.word	0x0000ffff
40016230:	40030d20 	.word	0x40030d20

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40016234 <CyU3PDmaChannelGetBuffer>:
40016234:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016238:	e24dd030 	sub	sp, sp, #48	; 0x30
4001623c:	e1a04000 	mov	r4, r0
40016240:	e1a05001 	mov	r5, r1
40016244:	e1a06002 	mov	r6, r2
40016248:	e3550000 	cmp	r5, #0
4001624c:	1a000002 	bne	4001625c <CyU3PDmaChannelGetBuffer+0x28>
40016250:	e3a00041 	mov	r0, #65	; 0x41
40016254:	e28dd030 	add	sp, sp, #48	; 0x30
40016258:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001625c:	e1a01006 	mov	r1, r6
40016260:	e1a00004 	mov	r0, r4
40016264:	ebfffc85 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40016268:	e1a08000 	mov	r8, r0
4001626c:	e3580000 	cmp	r8, #0
40016270:	0a000001 	beq	4001627c <CyU3PDmaChannelGetBuffer+0x48>
40016274:	e1a00008 	mov	r0, r8
40016278:	eafffff5 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
4001627c:	e5940000 	ldr	r0, [r4]
40016280:	e3500002 	cmp	r0, #2
40016284:	0a000003 	beq	40016298 <CyU3PDmaChannelGetBuffer+0x64>
40016288:	e5940000 	ldr	r0, [r4]
4001628c:	e3500006 	cmp	r0, #6
40016290:	0a000000 	beq	40016298 <CyU3PDmaChannelGetBuffer+0x64>
40016294:	e3a08042 	mov	r8, #66	; 0x42
40016298:	e5940000 	ldr	r0, [r4]
4001629c:	e3500005 	cmp	r0, #5
400162a0:	1a000000 	bne	400162a8 <CyU3PDmaChannelGetBuffer+0x74>
400162a4:	e3a08049 	mov	r8, #73	; 0x49
400162a8:	e5940000 	ldr	r0, [r4]
400162ac:	e3500007 	cmp	r0, #7
400162b0:	1a000000 	bne	400162b8 <CyU3PDmaChannelGetBuffer+0x84>
400162b4:	e3a08048 	mov	r8, #72	; 0x48
400162b8:	e3580000 	cmp	r8, #0
400162bc:	0a000003 	beq	400162d0 <CyU3PDmaChannelGetBuffer+0x9c>
400162c0:	e284003c 	add	r0, r4, #60	; 0x3c
400162c4:	ebffd045 	bl	4000a3e0 <_txe_mutex_put>
400162c8:	e1a00008 	mov	r0, r8
400162cc:	eaffffe0 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
400162d0:	e1d400b4 	ldrh	r0, [r4, #4]
400162d4:	e20070ff 	and	r7, r0, #255	; 0xff
400162d8:	e3570002 	cmp	r7, #2
400162dc:	0a000001 	beq	400162e8 <CyU3PDmaChannelGetBuffer+0xb4>
400162e0:	e3570003 	cmp	r7, #3
400162e4:	1a00003e 	bne	400163e4 <CyU3PDmaChannelGetBuffer+0x1b0>
400162e8:	e3a02002 	mov	r2, #2
400162ec:	e3e01008 	mvn	r1, #8
400162f0:	e2840074 	add	r0, r4, #116	; 0x74
400162f4:	ebffcf6c 	bl	4000a0ac <_txe_event_flags_set>
400162f8:	e1d401b6 	ldrh	r0, [r4, #22]
400162fc:	e28d101c 	add	r1, sp, #28
40016300:	eb003160 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016304:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016308:	e3100008 	tst	r0, #8
4001630c:	1a000022 	bne	4001639c <CyU3PDmaChannelGetBuffer+0x168>
40016310:	e284003c 	add	r0, r4, #60	; 0x3c
40016314:	ebffd031 	bl	4000a3e0 <_txe_mutex_put>
40016318:	e58d6000 	str	r6, [sp]
4001631c:	e28d302c 	add	r3, sp, #44	; 0x2c
40016320:	e3a02000 	mov	r2, #0
40016324:	e3a01068 	mov	r1, #104	; 0x68
40016328:	e2840074 	add	r0, r4, #116	; 0x74
4001632c:	ebffcf2e 	bl	40009fec <_txe_event_flags_get>
40016330:	e1a08000 	mov	r8, r0
40016334:	e3580000 	cmp	r8, #0
40016338:	0a000001 	beq	40016344 <CyU3PDmaChannelGetBuffer+0x110>
4001633c:	e3a00045 	mov	r0, #69	; 0x45
40016340:	eaffffc3 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
40016344:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016348:	e3100040 	tst	r0, #64	; 0x40
4001634c:	0a000001 	beq	40016358 <CyU3PDmaChannelGetBuffer+0x124>
40016350:	e3a00049 	mov	r0, #73	; 0x49
40016354:	eaffffbe 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
40016358:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001635c:	e3100020 	tst	r0, #32
40016360:	0a000001 	beq	4001636c <CyU3PDmaChannelGetBuffer+0x138>
40016364:	e3a00048 	mov	r0, #72	; 0x48
40016368:	eaffffb9 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
4001636c:	e1a01006 	mov	r1, r6
40016370:	e1a00004 	mov	r0, r4
40016374:	ebfffc41 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40016378:	e1a08000 	mov	r8, r0
4001637c:	e3580000 	cmp	r8, #0
40016380:	0a000001 	beq	4001638c <CyU3PDmaChannelGetBuffer+0x158>
40016384:	e1a00008 	mov	r0, r8
40016388:	eaffffb1 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
4001638c:	e1d401b6 	ldrh	r0, [r4, #22]
40016390:	e28d101c 	add	r1, sp, #28
40016394:	eb00313b 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016398:	ea000003 	b	400163ac <CyU3PDmaChannelGetBuffer+0x178>
4001639c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400163a0:	e3500000 	cmp	r0, #0
400163a4:	0a000000 	beq	400163ac <CyU3PDmaChannelGetBuffer+0x178>
400163a8:	ebffd1f8 	bl	4000ab90 <_txe_thread_relinquish>
400163ac:	e59d001c 	ldr	r0, [sp, #28]
400163b0:	e5850000 	str	r0, [r5]
400163b4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163b8:	e59f11a4 	ldr	r1, [pc, #420]	; 40016564 <CyU3PDmaChannelGetBuffer+0x330>
400163bc:	e0010820 	and	r0, r1, r0, lsr #16
400163c0:	e1c500b4 	strh	r0, [r5, #4]
400163c4:	e241100f 	sub	r1, r1, #15
400163c8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163cc:	e0000001 	and	r0, r0, r1
400163d0:	e1c500b6 	strh	r0, [r5, #6]
400163d4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163d8:	e200000f 	and	r0, r0, #15
400163dc:	e1c500b8 	strh	r0, [r5, #8]
400163e0:	ea00005b 	b	40016554 <CyU3PDmaChannelGetBuffer+0x320>
400163e4:	e3570004 	cmp	r7, #4
400163e8:	1a000036 	bne	400164c8 <CyU3PDmaChannelGetBuffer+0x294>
400163ec:	e3a02002 	mov	r2, #2
400163f0:	e3e01010 	mvn	r1, #16
400163f4:	e2840074 	add	r0, r4, #116	; 0x74
400163f8:	ebffcf2b 	bl	4000a0ac <_txe_event_flags_set>
400163fc:	e1d401b8 	ldrh	r0, [r4, #24]
40016400:	e28d101c 	add	r1, sp, #28
40016404:	eb00311f 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016408:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001640c:	e3100008 	tst	r0, #8
40016410:	0a000021 	beq	4001649c <CyU3PDmaChannelGetBuffer+0x268>
40016414:	e284003c 	add	r0, r4, #60	; 0x3c
40016418:	ebffcff0 	bl	4000a3e0 <_txe_mutex_put>
4001641c:	e58d6000 	str	r6, [sp]
40016420:	e28d302c 	add	r3, sp, #44	; 0x2c
40016424:	e3a02000 	mov	r2, #0
40016428:	e3a01070 	mov	r1, #112	; 0x70
4001642c:	e2840074 	add	r0, r4, #116	; 0x74
40016430:	ebffceed 	bl	40009fec <_txe_event_flags_get>
40016434:	e1a08000 	mov	r8, r0
40016438:	e3580000 	cmp	r8, #0
4001643c:	0a000001 	beq	40016448 <CyU3PDmaChannelGetBuffer+0x214>
40016440:	e3a00045 	mov	r0, #69	; 0x45
40016444:	eaffff82 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
40016448:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001644c:	e3100040 	tst	r0, #64	; 0x40
40016450:	0a000001 	beq	4001645c <CyU3PDmaChannelGetBuffer+0x228>
40016454:	e3a00049 	mov	r0, #73	; 0x49
40016458:	eaffff7d 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
4001645c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016460:	e3100020 	tst	r0, #32
40016464:	0a000001 	beq	40016470 <CyU3PDmaChannelGetBuffer+0x23c>
40016468:	e3a00048 	mov	r0, #72	; 0x48
4001646c:	eaffff78 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
40016470:	e1a01006 	mov	r1, r6
40016474:	e1a00004 	mov	r0, r4
40016478:	ebfffc00 	bl	40015480 <CyU3PDmaChannelAcquireLock>
4001647c:	e1a08000 	mov	r8, r0
40016480:	e3580000 	cmp	r8, #0
40016484:	0a000001 	beq	40016490 <CyU3PDmaChannelGetBuffer+0x25c>
40016488:	e1a00008 	mov	r0, r8
4001648c:	eaffff70 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
40016490:	e1d401b8 	ldrh	r0, [r4, #24]
40016494:	e28d101c 	add	r1, sp, #28
40016498:	eb0030fa 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001649c:	e59d001c 	ldr	r0, [sp, #28]
400164a0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400164a4:	e0400001 	sub	r0, r0, r1
400164a8:	e5850000 	str	r0, [r5]
400164ac:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
400164b0:	e1c500b4 	strh	r0, [r5, #4]
400164b4:	e1d400b6 	ldrh	r0, [r4, #6]
400164b8:	e1c500b6 	strh	r0, [r5, #6]
400164bc:	e3a00000 	mov	r0, #0
400164c0:	e1c500b8 	strh	r0, [r5, #8]
400164c4:	ea000022 	b	40016554 <CyU3PDmaChannelGetBuffer+0x320>
400164c8:	e1d401b2 	ldrh	r0, [r4, #18]
400164cc:	e28d1004 	add	r1, sp, #4
400164d0:	ebfffa8e 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400164d4:	e59d1004 	ldr	r1, [sp, #4]
400164d8:	e1a00801 	lsl	r0, r1, #16
400164dc:	e1a00820 	lsr	r0, r0, #16
400164e0:	e28d101c 	add	r1, sp, #28
400164e4:	eb0030e7 	bl	40022888 <CyU3PDmaDscrGetConfig>
400164e8:	e59d0010 	ldr	r0, [sp, #16]
400164ec:	e3100702 	tst	r0, #524288	; 0x80000
400164f0:	0a000016 	beq	40016550 <CyU3PDmaChannelGetBuffer+0x31c>
400164f4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400164f8:	e3100008 	tst	r0, #8
400164fc:	0a000013 	beq	40016550 <CyU3PDmaChannelGetBuffer+0x31c>
40016500:	e59d001c 	ldr	r0, [sp, #28]
40016504:	e5850000 	str	r0, [r5]
40016508:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001650c:	e59f1050 	ldr	r1, [pc, #80]	; 40016564 <CyU3PDmaChannelGetBuffer+0x330>
40016510:	e0010820 	and	r0, r1, r0, lsr #16
40016514:	e1c500b4 	strh	r0, [r5, #4]
40016518:	e241100f 	sub	r1, r1, #15
4001651c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016520:	e0000001 	and	r0, r0, r1
40016524:	e1c500b6 	strh	r0, [r5, #6]
40016528:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001652c:	e200000f 	and	r0, r0, #15
40016530:	e1c500b8 	strh	r0, [r5, #8]
40016534:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016538:	e3500000 	cmp	r0, #0
4001653c:	0a000004 	beq	40016554 <CyU3PDmaChannelGetBuffer+0x320>
40016540:	e1d510b6 	ldrh	r1, [r5, #6]
40016544:	e5950000 	ldr	r0, [r5]
40016548:	ebffefa1 	bl	400123d4 <CyU3PSysFlushDRegion>
4001654c:	ea000000 	b	40016554 <CyU3PDmaChannelGetBuffer+0x320>
40016550:	e3a08047 	mov	r8, #71	; 0x47
40016554:	e284003c 	add	r0, r4, #60	; 0x3c
40016558:	ebffcfa0 	bl	4000a3e0 <_txe_mutex_put>
4001655c:	e1a00008 	mov	r0, r8
40016560:	eaffff3b 	b	40016254 <CyU3PDmaChannelGetBuffer+0x20>
40016564:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

40016568 <CyU3PDmaChannelReset>:
40016568:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001656c:	e1a04000 	mov	r4, r0
40016570:	e3e01000 	mvn	r1, #0
40016574:	e1a00004 	mov	r0, r4
40016578:	ebfffbc0 	bl	40015480 <CyU3PDmaChannelAcquireLock>
4001657c:	e1a06000 	mov	r6, r0
40016580:	e3560000 	cmp	r6, #0
40016584:	0a000001 	beq	40016590 <CyU3PDmaChannelReset+0x28>
40016588:	e1a00006 	mov	r0, r6
4001658c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016590:	e1d400b4 	ldrh	r0, [r4, #4]
40016594:	e3500005 	cmp	r0, #5
40016598:	308ff100 	addcc	pc, pc, r0, lsl #2
4001659c:	ea00000f 	b	400165e0 <CyU3PDmaChannelReset+0x78>
400165a0:	ea000003 	b	400165b4 <CyU3PDmaChannelReset+0x4c>
400165a4:	ea000004 	b	400165bc <CyU3PDmaChannelReset+0x54>
400165a8:	ea000009 	b	400165d4 <CyU3PDmaChannelReset+0x6c>
400165ac:	ea000005 	b	400165c8 <CyU3PDmaChannelReset+0x60>
400165b0:	ea000006 	b	400165d0 <CyU3PDmaChannelReset+0x68>
400165b4:	e1a00000 	nop			; (mov r0, r0)
400165b8:	e1a00000 	nop			; (mov r0, r0)
400165bc:	e1a00004 	mov	r0, r4
400165c0:	eb000030 	bl	40016688 <CyU3PDmaChannelReset_TypeAuto>
400165c4:	ea000007 	b	400165e8 <CyU3PDmaChannelReset+0x80>
400165c8:	e1a00000 	nop			; (mov r0, r0)
400165cc:	e1a00000 	nop			; (mov r0, r0)
400165d0:	e1a00000 	nop			; (mov r0, r0)
400165d4:	e1a00004 	mov	r0, r4
400165d8:	eb000045 	bl	400166f4 <CyU3PDmaChannelReset_TypeManual>
400165dc:	ea000001 	b	400165e8 <CyU3PDmaChannelReset+0x80>
400165e0:	e1a00000 	nop			; (mov r0, r0)
400165e4:	e1a00000 	nop			; (mov r0, r0)
400165e8:	e1a00000 	nop			; (mov r0, r0)
400165ec:	ebffc931 	bl	40008ab8 <_tx_thread_identify>
400165f0:	e1a05000 	mov	r5, r0
400165f4:	e3550000 	cmp	r5, #0
400165f8:	0a000003 	beq	4001660c <CyU3PDmaChannelReset+0xa4>
400165fc:	e1a0200d 	mov	r2, sp
40016600:	e3a01002 	mov	r1, #2
40016604:	e1a00005 	mov	r0, r5
40016608:	ebffd138 	bl	4000aaf0 <_txe_thread_priority_change>
4001660c:	e3a02002 	mov	r2, #2
40016610:	e3e01007 	mvn	r1, #7
40016614:	e2840074 	add	r0, r4, #116	; 0x74
40016618:	ebffcea3 	bl	4000a0ac <_txe_event_flags_set>
4001661c:	e3a02000 	mov	r2, #0
40016620:	e3a01020 	mov	r1, #32
40016624:	e2840074 	add	r0, r4, #116	; 0x74
40016628:	ebffce9f 	bl	4000a0ac <_txe_event_flags_set>
4001662c:	e3a00001 	mov	r0, #1
40016630:	e5840000 	str	r0, [r4]
40016634:	e284003c 	add	r0, r4, #60	; 0x3c
40016638:	ebffcf68 	bl	4000a3e0 <_txe_mutex_put>
4001663c:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40016640:	e3500000 	cmp	r0, #0
40016644:	0a000007 	beq	40016668 <CyU3PDmaChannelReset+0x100>
40016648:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001664c:	e3100020 	tst	r0, #32
40016650:	0a000004 	beq	40016668 <CyU3PDmaChannelReset+0x100>
40016654:	e3a02000 	mov	r2, #0
40016658:	e3a01020 	mov	r1, #32
4001665c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40016660:	e1a00004 	mov	r0, r4
40016664:	e12fff33 	blx	r3
40016668:	e3550000 	cmp	r5, #0
4001666c:	0a000003 	beq	40016680 <CyU3PDmaChannelReset+0x118>
40016670:	e1a0200d 	mov	r2, sp
40016674:	e1a00005 	mov	r0, r5
40016678:	e59d1000 	ldr	r1, [sp]
4001667c:	ebffd11b 	bl	4000aaf0 <_txe_thread_priority_change>
40016680:	e3a00000 	mov	r0, #0
40016684:	eaffffc0 	b	4001658c <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

40016688 <CyU3PDmaChannelReset_TypeAuto>:
40016688:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001668c:	e1a04000 	mov	r4, r0
40016690:	e1d450b8 	ldrh	r5, [r4, #8]
40016694:	e1d460bc 	ldrh	r6, [r4, #12]
40016698:	e1a00004 	mov	r0, r4
4001669c:	eb000337 	bl	40017380 <CyU3PDmaConfigureSockets_TypeAuto>
400166a0:	ea00000c 	b	400166d8 <CyU3PDmaChannelReset_TypeAuto+0x50>
400166a4:	e1a0100d 	mov	r1, sp
400166a8:	e1a00006 	mov	r0, r6
400166ac:	eb003075 	bl	40022888 <CyU3PDmaDscrGetConfig>
400166b0:	e59d000c 	ldr	r0, [sp, #12]
400166b4:	e59f1034 	ldr	r1, [pc, #52]	; 400166f0 <CyU3PDmaChannelReset_TypeAuto+0x68>
400166b8:	e0000001 	and	r0, r0, r1
400166bc:	e58d000c 	str	r0, [sp, #12]
400166c0:	e1a0100d 	mov	r1, sp
400166c4:	e1a00006 	mov	r0, r6
400166c8:	eb003089 	bl	400228f4 <CyU3PDmaDscrSetConfig>
400166cc:	e59d0008 	ldr	r0, [sp, #8]
400166d0:	e1a06800 	lsl	r6, r0, #16
400166d4:	e1a06826 	lsr	r6, r6, #16
400166d8:	e1b00005 	movs	r0, r5
400166dc:	e2451001 	sub	r1, r5, #1
400166e0:	e1a05801 	lsl	r5, r1, #16
400166e4:	e1a05825 	lsr	r5, r5, #16
400166e8:	1affffed 	bne	400166a4 <CyU3PDmaChannelReset_TypeAuto+0x1c>
400166ec:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400166f0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

400166f4 <CyU3PDmaChannelReset_TypeManual>:
400166f4:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400166f8:	e1a04000 	mov	r4, r0
400166fc:	e1d450b8 	ldrh	r5, [r4, #8]
40016700:	e1a00004 	mov	r0, r4
40016704:	eb00035d 	bl	40017480 <CyU3PDmaConfigureSockets_TypeManual>
40016708:	e1d400b4 	ldrh	r0, [r4, #4]
4001670c:	e3500004 	cmp	r0, #4
40016710:	0a000017 	beq	40016774 <CyU3PDmaChannelReset_TypeManual+0x80>
40016714:	e1d460bc 	ldrh	r6, [r4, #12]
40016718:	ea00000c 	b	40016750 <CyU3PDmaChannelReset_TypeManual+0x5c>
4001671c:	e1a0100d 	mov	r1, sp
40016720:	e1a00006 	mov	r0, r6
40016724:	eb003057 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016728:	e59d000c 	ldr	r0, [sp, #12]
4001672c:	e59f10b4 	ldr	r1, [pc, #180]	; 400167e8 <CyU3PDmaChannelReset_TypeManual+0xf4>
40016730:	e0000001 	and	r0, r0, r1
40016734:	e58d000c 	str	r0, [sp, #12]
40016738:	e1a0100d 	mov	r1, sp
4001673c:	e1a00006 	mov	r0, r6
40016740:	eb00306b 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40016744:	e59d0008 	ldr	r0, [sp, #8]
40016748:	e1a06800 	lsl	r6, r0, #16
4001674c:	e1a06826 	lsr	r6, r6, #16
40016750:	e1b00005 	movs	r0, r5
40016754:	e2451001 	sub	r1, r5, #1
40016758:	e1a05801 	lsl	r5, r1, #16
4001675c:	e1a05825 	lsr	r5, r5, #16
40016760:	1affffed 	bne	4001671c <CyU3PDmaChannelReset_TypeManual+0x28>
40016764:	e1d400bc 	ldrh	r0, [r4, #12]
40016768:	e1c401b6 	strh	r0, [r4, #22]
4001676c:	e1c401ba 	strh	r0, [r4, #26]
40016770:	e1c401be 	strh	r0, [r4, #30]
40016774:	e1d400b4 	ldrh	r0, [r4, #4]
40016778:	e3500003 	cmp	r0, #3
4001677c:	0a000018 	beq	400167e4 <CyU3PDmaChannelReset_TypeManual+0xf0>
40016780:	e1d460be 	ldrh	r6, [r4, #14]
40016784:	e1d450b8 	ldrh	r5, [r4, #8]
40016788:	ea00000c 	b	400167c0 <CyU3PDmaChannelReset_TypeManual+0xcc>
4001678c:	e1a0100d 	mov	r1, sp
40016790:	e1a00006 	mov	r0, r6
40016794:	eb00303b 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016798:	e59d000c 	ldr	r0, [sp, #12]
4001679c:	e59f1044 	ldr	r1, [pc, #68]	; 400167e8 <CyU3PDmaChannelReset_TypeManual+0xf4>
400167a0:	e0000001 	and	r0, r0, r1
400167a4:	e58d000c 	str	r0, [sp, #12]
400167a8:	e1a0100d 	mov	r1, sp
400167ac:	e1a00006 	mov	r0, r6
400167b0:	eb00304f 	bl	400228f4 <CyU3PDmaDscrSetConfig>
400167b4:	e59d0008 	ldr	r0, [sp, #8]
400167b8:	e1a06800 	lsl	r6, r0, #16
400167bc:	e1a06826 	lsr	r6, r6, #16
400167c0:	e1b00005 	movs	r0, r5
400167c4:	e2451001 	sub	r1, r5, #1
400167c8:	e1a05801 	lsl	r5, r1, #16
400167cc:	e1a05825 	lsr	r5, r5, #16
400167d0:	1affffed 	bne	4001678c <CyU3PDmaChannelReset_TypeManual+0x98>
400167d4:	e1d400be 	ldrh	r0, [r4, #14]
400167d8:	e1c401b8 	strh	r0, [r4, #24]
400167dc:	e1c401bc 	strh	r0, [r4, #28]
400167e0:	e1c402b0 	strh	r0, [r4, #32]
400167e4:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400167e8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

400167ec <CyU3PDmaChannelSetXfer>:
400167ec:	e92d4070 	push	{r4, r5, r6, lr}
400167f0:	e1a04000 	mov	r4, r0
400167f4:	e1a05001 	mov	r5, r1
400167f8:	e3e01000 	mvn	r1, #0
400167fc:	e1a00004 	mov	r0, r4
40016800:	ebfffb1e 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40016804:	e1a06000 	mov	r6, r0
40016808:	e3560000 	cmp	r6, #0
4001680c:	0a000001 	beq	40016818 <CyU3PDmaChannelSetXfer+0x2c>
40016810:	e1a00006 	mov	r0, r6
40016814:	e8bd8070 	pop	{r4, r5, r6, pc}
40016818:	e5940000 	ldr	r0, [r4]
4001681c:	e3500001 	cmp	r0, #1
40016820:	0a000000 	beq	40016828 <CyU3PDmaChannelSetXfer+0x3c>
40016824:	e3a06043 	mov	r6, #67	; 0x43
40016828:	e1d400b8 	ldrh	r0, [r4, #8]
4001682c:	e3500000 	cmp	r0, #0
40016830:	1a000000 	bne	40016838 <CyU3PDmaChannelSetXfer+0x4c>
40016834:	e3a06046 	mov	r6, #70	; 0x46
40016838:	e3560000 	cmp	r6, #0
4001683c:	1a00001d 	bne	400168b8 <CyU3PDmaChannelSetXfer+0xcc>
40016840:	e3a02002 	mov	r2, #2
40016844:	e3e01027 	mvn	r1, #39	; 0x27
40016848:	e2840074 	add	r0, r4, #116	; 0x74
4001684c:	ebffce16 	bl	4000a0ac <_txe_event_flags_set>
40016850:	e5845034 	str	r5, [r4, #52]	; 0x34
40016854:	e1d400b4 	ldrh	r0, [r4, #4]
40016858:	e3500005 	cmp	r0, #5
4001685c:	308ff100 	addcc	pc, pc, r0, lsl #2
40016860:	ea000011 	b	400168ac <CyU3PDmaChannelSetXfer+0xc0>
40016864:	ea000003 	b	40016878 <CyU3PDmaChannelSetXfer+0x8c>
40016868:	ea000004 	b	40016880 <CyU3PDmaChannelSetXfer+0x94>
4001686c:	ea00000a 	b	4001689c <CyU3PDmaChannelSetXfer+0xb0>
40016870:	ea000006 	b	40016890 <CyU3PDmaChannelSetXfer+0xa4>
40016874:	ea000007 	b	40016898 <CyU3PDmaChannelSetXfer+0xac>
40016878:	e1a00000 	nop			; (mov r0, r0)
4001687c:	e1a00000 	nop			; (mov r0, r0)
40016880:	e1a01005 	mov	r1, r5
40016884:	e1a00004 	mov	r0, r4
40016888:	eb00000e 	bl	400168c8 <CyU3PDmaChannelSetXfer_TypeAuto>
4001688c:	ea000008 	b	400168b4 <CyU3PDmaChannelSetXfer+0xc8>
40016890:	e1a00000 	nop			; (mov r0, r0)
40016894:	e1a00000 	nop			; (mov r0, r0)
40016898:	e1a00000 	nop			; (mov r0, r0)
4001689c:	e1a01005 	mov	r1, r5
400168a0:	e1a00004 	mov	r0, r4
400168a4:	eb00006f 	bl	40016a68 <CyU3PDmaChannelSetXfer_TypeManual>
400168a8:	ea000001 	b	400168b4 <CyU3PDmaChannelSetXfer+0xc8>
400168ac:	e1a00000 	nop			; (mov r0, r0)
400168b0:	e1a00000 	nop			; (mov r0, r0)
400168b4:	e1a00000 	nop			; (mov r0, r0)
400168b8:	e284003c 	add	r0, r4, #60	; 0x3c
400168bc:	ebffcec7 	bl	4000a3e0 <_txe_mutex_put>
400168c0:	e1a00006 	mov	r0, r6
400168c4:	eaffffd2 	b	40016814 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

400168c8 <CyU3PDmaChannelSetXfer_TypeAuto>:
400168c8:	e92d4030 	push	{r4, r5, lr}
400168cc:	e24dd01c 	sub	sp, sp, #28
400168d0:	e1a04000 	mov	r4, r0
400168d4:	e1a05001 	mov	r5, r1
400168d8:	e1d401b0 	ldrh	r0, [r4, #16]
400168dc:	ebfff973 	bl	40014eb0 <CyU3PDmaSocketDisable>
400168e0:	e1d401b2 	ldrh	r0, [r4, #18]
400168e4:	ebfff971 	bl	40014eb0 <CyU3PDmaSocketDisable>
400168e8:	e3a00002 	mov	r0, #2
400168ec:	e5840000 	str	r0, [r4]
400168f0:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400168f4:	e1d401b0 	ldrh	r0, [r4, #16]
400168f8:	ebfffa87 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
400168fc:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016900:	e1d401b2 	ldrh	r0, [r4, #18]
40016904:	ebfffa84 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40016908:	e1d401b0 	ldrh	r0, [r4, #16]
4001690c:	e28d1004 	add	r1, sp, #4
40016910:	ebfff97e 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016914:	e58d5008 	str	r5, [sp, #8]
40016918:	e3a00000 	mov	r0, #0
4001691c:	e58d000c 	str	r0, [sp, #12]
40016920:	e3550000 	cmp	r5, #0
40016924:	1a000003 	bne	40016938 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
40016928:	e59d0010 	ldr	r0, [sp, #16]
4001692c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016930:	e58d0010 	str	r0, [sp, #16]
40016934:	ea000002 	b	40016944 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
40016938:	e59d0010 	ldr	r0, [sp, #16]
4001693c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016940:	e58d0010 	str	r0, [sp, #16]
40016944:	e59d0010 	ldr	r0, [sp, #16]
40016948:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
4001694c:	e58d0010 	str	r0, [sp, #16]
40016950:	e59d0010 	ldr	r0, [sp, #16]
40016954:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016958:	e58d0010 	str	r0, [sp, #16]
4001695c:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016960:	e3500001 	cmp	r0, #1
40016964:	1a000003 	bne	40016978 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
40016968:	e59d0010 	ldr	r0, [sp, #16]
4001696c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016970:	e58d0010 	str	r0, [sp, #16]
40016974:	ea000002 	b	40016984 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016978:	e59d0010 	ldr	r0, [sp, #16]
4001697c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016980:	e58d0010 	str	r0, [sp, #16]
40016984:	e1d400ba 	ldrh	r0, [r4, #10]
40016988:	e3500000 	cmp	r0, #0
4001698c:	0a000006 	beq	400169ac <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016990:	e1d400b8 	ldrh	r0, [r4, #8]
40016994:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016998:	e1d410ba 	ldrh	r1, [r4, #10]
4001699c:	e1800281 	orr	r0, r0, r1, lsl #5
400169a0:	e59d1010 	ldr	r1, [sp, #16]
400169a4:	e1800001 	orr	r0, r0, r1
400169a8:	e58d0010 	str	r0, [sp, #16]
400169ac:	e3e00000 	mvn	r0, #0
400169b0:	e58d0014 	str	r0, [sp, #20]
400169b4:	e1d401b0 	ldrh	r0, [r4, #16]
400169b8:	e28d1004 	add	r1, sp, #4
400169bc:	ebfff9fd 	bl	400151b8 <CyU3PDmaSocketSetConfig>
400169c0:	e1d401b2 	ldrh	r0, [r4, #18]
400169c4:	e28d1004 	add	r1, sp, #4
400169c8:	ebfff950 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400169cc:	e58d5008 	str	r5, [sp, #8]
400169d0:	e3a00000 	mov	r0, #0
400169d4:	e58d000c 	str	r0, [sp, #12]
400169d8:	e3550000 	cmp	r5, #0
400169dc:	1a000006 	bne	400169fc <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
400169e0:	e59d0018 	ldr	r0, [sp, #24]
400169e4:	e3c00080 	bic	r0, r0, #128	; 0x80
400169e8:	e58d0018 	str	r0, [sp, #24]
400169ec:	e59d0010 	ldr	r0, [sp, #16]
400169f0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400169f4:	e58d0010 	str	r0, [sp, #16]
400169f8:	ea000005 	b	40016a14 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
400169fc:	e59d0018 	ldr	r0, [sp, #24]
40016a00:	e3800080 	orr	r0, r0, #128	; 0x80
40016a04:	e58d0018 	str	r0, [sp, #24]
40016a08:	e59d0010 	ldr	r0, [sp, #16]
40016a0c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016a10:	e58d0010 	str	r0, [sp, #16]
40016a14:	e59d0010 	ldr	r0, [sp, #16]
40016a18:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016a1c:	e58d0010 	str	r0, [sp, #16]
40016a20:	e59d0010 	ldr	r0, [sp, #16]
40016a24:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016a28:	e58d0010 	str	r0, [sp, #16]
40016a2c:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016a30:	e3500001 	cmp	r0, #1
40016a34:	1a000003 	bne	40016a48 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
40016a38:	e59d0010 	ldr	r0, [sp, #16]
40016a3c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016a40:	e58d0010 	str	r0, [sp, #16]
40016a44:	ea000002 	b	40016a54 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016a48:	e59d0010 	ldr	r0, [sp, #16]
40016a4c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016a50:	e58d0010 	str	r0, [sp, #16]
40016a54:	e1d401b2 	ldrh	r0, [r4, #18]
40016a58:	e28d1004 	add	r1, sp, #4
40016a5c:	ebfff9d5 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40016a60:	e28dd01c 	add	sp, sp, #28
40016a64:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016a68 <CyU3PDmaChannelSetXfer_TypeManual>:
40016a68:	e92d4030 	push	{r4, r5, lr}
40016a6c:	e24dd01c 	sub	sp, sp, #28
40016a70:	e1a04000 	mov	r4, r0
40016a74:	e1a05001 	mov	r5, r1
40016a78:	e3a00002 	mov	r0, #2
40016a7c:	e5840000 	str	r0, [r4]
40016a80:	e1d400b4 	ldrh	r0, [r4, #4]
40016a84:	e3500004 	cmp	r0, #4
40016a88:	0a00003d 	beq	40016b84 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016a8c:	e1d401b0 	ldrh	r0, [r4, #16]
40016a90:	ebfff906 	bl	40014eb0 <CyU3PDmaSocketDisable>
40016a94:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016a98:	e1d401b0 	ldrh	r0, [r4, #16]
40016a9c:	ebfffa1e 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40016aa0:	e1d401b0 	ldrh	r0, [r4, #16]
40016aa4:	e28d1004 	add	r1, sp, #4
40016aa8:	ebfff918 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016aac:	e58d5008 	str	r5, [sp, #8]
40016ab0:	e3a00000 	mov	r0, #0
40016ab4:	e58d000c 	str	r0, [sp, #12]
40016ab8:	e59d0010 	ldr	r0, [sp, #16]
40016abc:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016ac0:	e58d0010 	str	r0, [sp, #16]
40016ac4:	e59d0010 	ldr	r0, [sp, #16]
40016ac8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016acc:	e58d0010 	str	r0, [sp, #16]
40016ad0:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016ad4:	e3500001 	cmp	r0, #1
40016ad8:	1a000003 	bne	40016aec <CyU3PDmaChannelSetXfer_TypeManual+0x84>
40016adc:	e59d0010 	ldr	r0, [sp, #16]
40016ae0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016ae4:	e58d0010 	str	r0, [sp, #16]
40016ae8:	ea000002 	b	40016af8 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016aec:	e59d0010 	ldr	r0, [sp, #16]
40016af0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016af4:	e58d0010 	str	r0, [sp, #16]
40016af8:	e1d400ba 	ldrh	r0, [r4, #10]
40016afc:	e3500000 	cmp	r0, #0
40016b00:	0a000006 	beq	40016b20 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016b04:	e1d400b8 	ldrh	r0, [r4, #8]
40016b08:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016b0c:	e1d410ba 	ldrh	r1, [r4, #10]
40016b10:	e1800281 	orr	r0, r0, r1, lsl #5
40016b14:	e59d1010 	ldr	r1, [sp, #16]
40016b18:	e1800001 	orr	r0, r0, r1
40016b1c:	e58d0010 	str	r0, [sp, #16]
40016b20:	e3e00000 	mvn	r0, #0
40016b24:	e58d0014 	str	r0, [sp, #20]
40016b28:	e3550000 	cmp	r5, #0
40016b2c:	0a000002 	beq	40016b3c <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
40016b30:	e1d400b4 	ldrh	r0, [r4, #4]
40016b34:	e3500002 	cmp	r0, #2
40016b38:	1a000008 	bne	40016b60 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
40016b3c:	e3a00000 	mov	r0, #0
40016b40:	e58d0008 	str	r0, [sp, #8]
40016b44:	e59d0010 	ldr	r0, [sp, #16]
40016b48:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016b4c:	e58d0010 	str	r0, [sp, #16]
40016b50:	e59d0018 	ldr	r0, [sp, #24]
40016b54:	e3c00080 	bic	r0, r0, #128	; 0x80
40016b58:	e58d0018 	str	r0, [sp, #24]
40016b5c:	ea000005 	b	40016b78 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016b60:	e59d0010 	ldr	r0, [sp, #16]
40016b64:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016b68:	e58d0010 	str	r0, [sp, #16]
40016b6c:	e59d0018 	ldr	r0, [sp, #24]
40016b70:	e3800080 	orr	r0, r0, #128	; 0x80
40016b74:	e58d0018 	str	r0, [sp, #24]
40016b78:	e1d401b0 	ldrh	r0, [r4, #16]
40016b7c:	e28d1004 	add	r1, sp, #4
40016b80:	ebfff98c 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40016b84:	e1d400b4 	ldrh	r0, [r4, #4]
40016b88:	e3500003 	cmp	r0, #3
40016b8c:	0a00002e 	beq	40016c4c <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016b90:	e1d401b2 	ldrh	r0, [r4, #18]
40016b94:	ebfff8c5 	bl	40014eb0 <CyU3PDmaSocketDisable>
40016b98:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016b9c:	e1d401b2 	ldrh	r0, [r4, #18]
40016ba0:	ebfff9dd 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40016ba4:	e1d401b2 	ldrh	r0, [r4, #18]
40016ba8:	e28d1004 	add	r1, sp, #4
40016bac:	ebfff8d7 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016bb0:	e58d5008 	str	r5, [sp, #8]
40016bb4:	e3a00000 	mov	r0, #0
40016bb8:	e58d000c 	str	r0, [sp, #12]
40016bbc:	e59d0010 	ldr	r0, [sp, #16]
40016bc0:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016bc4:	e58d0010 	str	r0, [sp, #16]
40016bc8:	e59d0010 	ldr	r0, [sp, #16]
40016bcc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016bd0:	e58d0010 	str	r0, [sp, #16]
40016bd4:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016bd8:	e3500001 	cmp	r0, #1
40016bdc:	1a000003 	bne	40016bf0 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016be0:	e59d0010 	ldr	r0, [sp, #16]
40016be4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016be8:	e58d0010 	str	r0, [sp, #16]
40016bec:	ea000002 	b	40016bfc <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016bf0:	e59d0010 	ldr	r0, [sp, #16]
40016bf4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016bf8:	e58d0010 	str	r0, [sp, #16]
40016bfc:	e3e00000 	mvn	r0, #0
40016c00:	e58d0014 	str	r0, [sp, #20]
40016c04:	e3550000 	cmp	r5, #0
40016c08:	1a000006 	bne	40016c28 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016c0c:	e59d0010 	ldr	r0, [sp, #16]
40016c10:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016c14:	e58d0010 	str	r0, [sp, #16]
40016c18:	e59d0018 	ldr	r0, [sp, #24]
40016c1c:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c20:	e58d0018 	str	r0, [sp, #24]
40016c24:	ea000005 	b	40016c40 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016c28:	e59d0010 	ldr	r0, [sp, #16]
40016c2c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016c30:	e58d0010 	str	r0, [sp, #16]
40016c34:	e59d0018 	ldr	r0, [sp, #24]
40016c38:	e3800080 	orr	r0, r0, #128	; 0x80
40016c3c:	e58d0018 	str	r0, [sp, #24]
40016c40:	e1d401b2 	ldrh	r0, [r4, #18]
40016c44:	e28d1004 	add	r1, sp, #4
40016c48:	ebfff95a 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40016c4c:	e28dd01c 	add	sp, sp, #28
40016c50:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016c54 <CyU3PDmaChannelSetupRecvBuffer>:
40016c54:	e92d4070 	push	{r4, r5, r6, lr}
40016c58:	e24dd028 	sub	sp, sp, #40	; 0x28
40016c5c:	e1a04000 	mov	r4, r0
40016c60:	e1a05001 	mov	r5, r1
40016c64:	e3550000 	cmp	r5, #0
40016c68:	1a000002 	bne	40016c78 <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016c6c:	e3a00041 	mov	r0, #65	; 0x41
40016c70:	e28dd028 	add	sp, sp, #40	; 0x28
40016c74:	e8bd8070 	pop	{r4, r5, r6, pc}
40016c78:	e5950000 	ldr	r0, [r5]
40016c7c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016c80:	3a000005 	bcc	40016c9c <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016c84:	e5950000 	ldr	r0, [r5]
40016c88:	e1d510b6 	ldrh	r1, [r5, #6]
40016c8c:	e0800001 	add	r0, r0, r1
40016c90:	e59f11d4 	ldr	r1, [pc, #468]	; 40016e6c <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016c94:	e1500001 	cmp	r0, r1
40016c98:	3a000001 	bcc	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x50>
40016c9c:	e3a00040 	mov	r0, #64	; 0x40
40016ca0:	eafffff2 	b	40016c70 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016ca4:	e1d500b6 	ldrh	r0, [r5, #6]
40016ca8:	e59f11c0 	ldr	r1, [pc, #448]	; 40016e70 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
40016cac:	e1500001 	cmp	r0, r1
40016cb0:	da000001 	ble	40016cbc <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016cb4:	e3a00040 	mov	r0, #64	; 0x40
40016cb8:	eaffffec 	b	40016c70 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cbc:	e1d500b6 	ldrh	r0, [r5, #6]
40016cc0:	e3500000 	cmp	r0, #0
40016cc4:	0a000002 	beq	40016cd4 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016cc8:	e1d500b6 	ldrh	r0, [r5, #6]
40016ccc:	e310000f 	tst	r0, #15
40016cd0:	0a000001 	beq	40016cdc <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016cd4:	e3a00040 	mov	r0, #64	; 0x40
40016cd8:	eaffffe4 	b	40016c70 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cdc:	e3e01000 	mvn	r1, #0
40016ce0:	e1a00004 	mov	r0, r4
40016ce4:	ebfff9e5 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40016ce8:	e1a06000 	mov	r6, r0
40016cec:	e3560000 	cmp	r6, #0
40016cf0:	0a000001 	beq	40016cfc <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016cf4:	e1a00006 	mov	r0, r6
40016cf8:	eaffffdc 	b	40016c70 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cfc:	e1d400b4 	ldrh	r0, [r4, #4]
40016d00:	e3500004 	cmp	r0, #4
40016d04:	1a000000 	bne	40016d0c <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016d08:	e3a06046 	mov	r6, #70	; 0x46
40016d0c:	e5940000 	ldr	r0, [r4]
40016d10:	e3500001 	cmp	r0, #1
40016d14:	0a000000 	beq	40016d1c <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016d18:	e3a06043 	mov	r6, #67	; 0x43
40016d1c:	e3560000 	cmp	r6, #0
40016d20:	0a000003 	beq	40016d34 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
40016d24:	e284003c 	add	r0, r4, #60	; 0x3c
40016d28:	ebffcdac 	bl	4000a3e0 <_txe_mutex_put>
40016d2c:	e1a00006 	mov	r0, r6
40016d30:	eaffffce 	b	40016c70 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d34:	e1d401b0 	ldrh	r0, [r4, #16]
40016d38:	ebfff85c 	bl	40014eb0 <CyU3PDmaSocketDisable>
40016d3c:	e1d401b0 	ldrh	r0, [r4, #16]
40016d40:	e3a01000 	mov	r1, #0
40016d44:	ebfff974 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40016d48:	e3a02002 	mov	r2, #2
40016d4c:	e3e01027 	mvn	r1, #39	; 0x27
40016d50:	e2840074 	add	r0, r4, #116	; 0x74
40016d54:	ebffccd4 	bl	4000a0ac <_txe_event_flags_set>
40016d58:	e3a00004 	mov	r0, #4
40016d5c:	e5840000 	str	r0, [r4]
40016d60:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016d64:	e3500000 	cmp	r0, #0
40016d68:	0a000002 	beq	40016d78 <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016d6c:	e1d510b6 	ldrh	r1, [r5, #6]
40016d70:	e5950000 	ldr	r0, [r5]
40016d74:	ebffed96 	bl	400123d4 <CyU3PSysFlushDRegion>
40016d78:	e1d401b0 	ldrh	r0, [r4, #16]
40016d7c:	e1a0100d 	mov	r1, sp
40016d80:	ebfff862 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016d84:	e59d0000 	ldr	r0, [sp]
40016d88:	e1c401b6 	strh	r0, [r4, #22]
40016d8c:	e1d401b4 	ldrh	r0, [r4, #20]
40016d90:	e28d1018 	add	r1, sp, #24
40016d94:	eb002ebb 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016d98:	e5950000 	ldr	r0, [r5]
40016d9c:	e58d0018 	str	r0, [sp, #24]
40016da0:	e1d401b0 	ldrh	r0, [r4, #16]
40016da4:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016da8:	e1810800 	orr	r0, r1, r0, lsl #16
40016dac:	e58d001c 	str	r0, [sp, #28]
40016db0:	e59d001c 	ldr	r0, [sp, #28]
40016db4:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016db8:	e58d001c 	str	r0, [sp, #28]
40016dbc:	e1d401b6 	ldrh	r0, [r4, #22]
40016dc0:	e1e01741 	mvn	r1, r1, asr #14
40016dc4:	e1810800 	orr	r0, r1, r0, lsl #16
40016dc8:	e58d0020 	str	r0, [sp, #32]
40016dcc:	e1d500b6 	ldrh	r0, [r5, #6]
40016dd0:	e241100f 	sub	r1, r1, #15
40016dd4:	e0000001 	and	r0, r0, r1
40016dd8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016ddc:	e1d401b4 	ldrh	r0, [r4, #20]
40016de0:	e28d1018 	add	r1, sp, #24
40016de4:	eb002ec2 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40016de8:	e59d000c 	ldr	r0, [sp, #12]
40016dec:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016df0:	e58d000c 	str	r0, [sp, #12]
40016df4:	e59d000c 	ldr	r0, [sp, #12]
40016df8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016dfc:	e58d000c 	str	r0, [sp, #12]
40016e00:	e59d000c 	ldr	r0, [sp, #12]
40016e04:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016e08:	e58d000c 	str	r0, [sp, #12]
40016e0c:	e59d000c 	ldr	r0, [sp, #12]
40016e10:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016e14:	e58d000c 	str	r0, [sp, #12]
40016e18:	e3a00001 	mov	r0, #1
40016e1c:	e58d0004 	str	r0, [sp, #4]
40016e20:	e3a00000 	mov	r0, #0
40016e24:	e58d0008 	str	r0, [sp, #8]
40016e28:	e3e00000 	mvn	r0, #0
40016e2c:	e58d0010 	str	r0, [sp, #16]
40016e30:	e59d0014 	ldr	r0, [sp, #20]
40016e34:	e3800001 	orr	r0, r0, #1
40016e38:	e58d0014 	str	r0, [sp, #20]
40016e3c:	e59d0014 	ldr	r0, [sp, #20]
40016e40:	e3c00080 	bic	r0, r0, #128	; 0x80
40016e44:	e58d0014 	str	r0, [sp, #20]
40016e48:	e1d401b4 	ldrh	r0, [r4, #20]
40016e4c:	e58d0000 	str	r0, [sp]
40016e50:	e1d401b0 	ldrh	r0, [r4, #16]
40016e54:	e1a0100d 	mov	r1, sp
40016e58:	ebfff8d6 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40016e5c:	e284003c 	add	r0, r4, #60	; 0x3c
40016e60:	ebffcd5e 	bl	4000a3e0 <_txe_mutex_put>
40016e64:	e3a00000 	mov	r0, #0
40016e68:	eaffff80 	b	40016c70 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016e6c:	40080000 	.word	0x40080000
40016e70:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016e74 <CyU3PDmaChannelSetupSendBuffer>:
40016e74:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016e78:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016e7c:	e1a04000 	mov	r4, r0
40016e80:	e1a05001 	mov	r5, r1
40016e84:	e3550000 	cmp	r5, #0
40016e88:	1a000002 	bne	40016e98 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016e8c:	e3a00041 	mov	r0, #65	; 0x41
40016e90:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016e94:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016e98:	e5950000 	ldr	r0, [r5]
40016e9c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016ea0:	3a000005 	bcc	40016ebc <CyU3PDmaChannelSetupSendBuffer+0x48>
40016ea4:	e5950000 	ldr	r0, [r5]
40016ea8:	e1d510b4 	ldrh	r1, [r5, #4]
40016eac:	e0800001 	add	r0, r0, r1
40016eb0:	e59f11ec 	ldr	r1, [pc, #492]	; 400170a4 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016eb4:	e1500001 	cmp	r0, r1
40016eb8:	3a000001 	bcc	40016ec4 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016ebc:	e3a00040 	mov	r0, #64	; 0x40
40016ec0:	eafffff2 	b	40016e90 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016ec4:	e1d500b4 	ldrh	r0, [r5, #4]
40016ec8:	e59f11d8 	ldr	r1, [pc, #472]	; 400170a8 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016ecc:	e1500001 	cmp	r0, r1
40016ed0:	da000001 	ble	40016edc <CyU3PDmaChannelSetupSendBuffer+0x68>
40016ed4:	e3a00040 	mov	r0, #64	; 0x40
40016ed8:	eaffffec 	b	40016e90 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016edc:	e3e01000 	mvn	r1, #0
40016ee0:	e1a00004 	mov	r0, r4
40016ee4:	ebfff965 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40016ee8:	e1a07000 	mov	r7, r0
40016eec:	e3570000 	cmp	r7, #0
40016ef0:	0a000001 	beq	40016efc <CyU3PDmaChannelSetupSendBuffer+0x88>
40016ef4:	e1a00007 	mov	r0, r7
40016ef8:	eaffffe4 	b	40016e90 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016efc:	e1d400b4 	ldrh	r0, [r4, #4]
40016f00:	e3500003 	cmp	r0, #3
40016f04:	1a000000 	bne	40016f0c <CyU3PDmaChannelSetupSendBuffer+0x98>
40016f08:	e3a07046 	mov	r7, #70	; 0x46
40016f0c:	e5940000 	ldr	r0, [r4]
40016f10:	e3500001 	cmp	r0, #1
40016f14:	0a000000 	beq	40016f1c <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016f18:	e3a07043 	mov	r7, #67	; 0x43
40016f1c:	e3570000 	cmp	r7, #0
40016f20:	0a000003 	beq	40016f34 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016f24:	e284003c 	add	r0, r4, #60	; 0x3c
40016f28:	ebffcd2c 	bl	4000a3e0 <_txe_mutex_put>
40016f2c:	e1a00007 	mov	r0, r7
40016f30:	eaffffd6 	b	40016e90 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f34:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016f38:	e3500000 	cmp	r0, #0
40016f3c:	0a000005 	beq	40016f58 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016f40:	e1d500b4 	ldrh	r0, [r5, #4]
40016f44:	e3500000 	cmp	r0, #0
40016f48:	0a000002 	beq	40016f58 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016f4c:	e1d510b4 	ldrh	r1, [r5, #4]
40016f50:	e5950000 	ldr	r0, [r5]
40016f54:	ebffed10 	bl	4001239c <CyU3PSysCleanDRegion>
40016f58:	e1d401b2 	ldrh	r0, [r4, #18]
40016f5c:	ebfff7d3 	bl	40014eb0 <CyU3PDmaSocketDisable>
40016f60:	e1d401b2 	ldrh	r0, [r4, #18]
40016f64:	e3a01000 	mov	r1, #0
40016f68:	ebfff8eb 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40016f6c:	e3a02002 	mov	r2, #2
40016f70:	e3e01027 	mvn	r1, #39	; 0x27
40016f74:	e2840074 	add	r0, r4, #116	; 0x74
40016f78:	ebffcc4b 	bl	4000a0ac <_txe_event_flags_set>
40016f7c:	e3a00003 	mov	r0, #3
40016f80:	e5840000 	str	r0, [r4]
40016f84:	e1d401b2 	ldrh	r0, [r4, #18]
40016f88:	e28d1004 	add	r1, sp, #4
40016f8c:	ebfff7df 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40016f90:	e59d0004 	ldr	r0, [sp, #4]
40016f94:	e1c401b8 	strh	r0, [r4, #24]
40016f98:	e1d401b4 	ldrh	r0, [r4, #20]
40016f9c:	e28d101c 	add	r1, sp, #28
40016fa0:	eb002e38 	bl	40022888 <CyU3PDmaDscrGetConfig>
40016fa4:	e5950000 	ldr	r0, [r5]
40016fa8:	e58d001c 	str	r0, [sp, #28]
40016fac:	e1d401b2 	ldrh	r0, [r4, #18]
40016fb0:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016fb4:	e58d0020 	str	r0, [sp, #32]
40016fb8:	e59d0020 	ldr	r0, [sp, #32]
40016fbc:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016fc0:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016fc4:	e58d0020 	str	r0, [sp, #32]
40016fc8:	e1d401b8 	ldrh	r0, [r4, #24]
40016fcc:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016fd0:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016fd4:	e1d500b4 	ldrh	r0, [r5, #4]
40016fd8:	e280000f 	add	r0, r0, #15
40016fdc:	e59f10c4 	ldr	r1, [pc, #196]	; 400170a8 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016fe0:	e0006001 	and	r6, r0, r1
40016fe4:	e1d500b4 	ldrh	r0, [r5, #4]
40016fe8:	e1860800 	orr	r0, r6, r0, lsl #16
40016fec:	e3800008 	orr	r0, r0, #8
40016ff0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016ff4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016ff8:	e1d510b8 	ldrh	r1, [r5, #8]
40016ffc:	e201100e 	and	r1, r1, #14
40017000:	e1800001 	orr	r0, r0, r1
40017004:	e58d0028 	str	r0, [sp, #40]	; 0x28
40017008:	e1d401b4 	ldrh	r0, [r4, #20]
4001700c:	e28d101c 	add	r1, sp, #28
40017010:	eb002e37 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017014:	e59d0010 	ldr	r0, [sp, #16]
40017018:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001701c:	e58d0010 	str	r0, [sp, #16]
40017020:	e59d0010 	ldr	r0, [sp, #16]
40017024:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017028:	e58d0010 	str	r0, [sp, #16]
4001702c:	e59d0010 	ldr	r0, [sp, #16]
40017030:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40017034:	e58d0010 	str	r0, [sp, #16]
40017038:	e59d0010 	ldr	r0, [sp, #16]
4001703c:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40017040:	e58d0010 	str	r0, [sp, #16]
40017044:	e59d0010 	ldr	r0, [sp, #16]
40017048:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001704c:	e58d0010 	str	r0, [sp, #16]
40017050:	e1d500b4 	ldrh	r0, [r5, #4]
40017054:	e58d0008 	str	r0, [sp, #8]
40017058:	e3a00000 	mov	r0, #0
4001705c:	e58d000c 	str	r0, [sp, #12]
40017060:	e3e00000 	mvn	r0, #0
40017064:	e58d0014 	str	r0, [sp, #20]
40017068:	e59d0018 	ldr	r0, [sp, #24]
4001706c:	e3800002 	orr	r0, r0, #2
40017070:	e58d0018 	str	r0, [sp, #24]
40017074:	e59d0018 	ldr	r0, [sp, #24]
40017078:	e3c00080 	bic	r0, r0, #128	; 0x80
4001707c:	e58d0018 	str	r0, [sp, #24]
40017080:	e1d401b4 	ldrh	r0, [r4, #20]
40017084:	e58d0004 	str	r0, [sp, #4]
40017088:	e1d401b2 	ldrh	r0, [r4, #18]
4001708c:	e28d1004 	add	r1, sp, #4
40017090:	ebfff848 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40017094:	e284003c 	add	r0, r4, #60	; 0x3c
40017098:	ebffccd0 	bl	4000a3e0 <_txe_mutex_put>
4001709c:	e3a00000 	mov	r0, #0
400170a0:	eaffff7a 	b	40016e90 <CyU3PDmaChannelSetupSendBuffer+0x1c>
400170a4:	40080000 	.word	0x40080000
400170a8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

400170ac <CyU3PDmaChannelWaitForCompletion>:
400170ac:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
400170b0:	e1a04000 	mov	r4, r0
400170b4:	e1a05001 	mov	r5, r1
400170b8:	e3a08000 	mov	r8, #0
400170bc:	e1a01005 	mov	r1, r5
400170c0:	e1a00004 	mov	r0, r4
400170c4:	ebfff8ed 	bl	40015480 <CyU3PDmaChannelAcquireLock>
400170c8:	e1a07000 	mov	r7, r0
400170cc:	e3570000 	cmp	r7, #0
400170d0:	0a000001 	beq	400170dc <CyU3PDmaChannelWaitForCompletion+0x30>
400170d4:	e1a00007 	mov	r0, r7
400170d8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
400170dc:	e5946000 	ldr	r6, [r4]
400170e0:	e3560001 	cmp	r6, #1
400170e4:	1a00000b 	bne	40017118 <CyU3PDmaChannelWaitForCompletion+0x6c>
400170e8:	e3a03000 	mov	r3, #0
400170ec:	e58d3000 	str	r3, [sp]
400170f0:	e28d3004 	add	r3, sp, #4
400170f4:	e3a02000 	mov	r2, #0
400170f8:	e3a01007 	mov	r1, #7
400170fc:	e2840074 	add	r0, r4, #116	; 0x74
40017100:	ebffcbb9 	bl	40009fec <_txe_event_flags_get>
40017104:	e1a07000 	mov	r7, r0
40017108:	e3570000 	cmp	r7, #0
4001710c:	0a000016 	beq	4001716c <CyU3PDmaChannelWaitForCompletion+0xc0>
40017110:	e3a07042 	mov	r7, #66	; 0x42
40017114:	ea000014 	b	4001716c <CyU3PDmaChannelWaitForCompletion+0xc0>
40017118:	e3560002 	cmp	r6, #2
4001711c:	1a000005 	bne	40017138 <CyU3PDmaChannelWaitForCompletion+0x8c>
40017120:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40017124:	e3500000 	cmp	r0, #0
40017128:	1a000000 	bne	40017130 <CyU3PDmaChannelWaitForCompletion+0x84>
4001712c:	e3a07046 	mov	r7, #70	; 0x46
40017130:	e3a08061 	mov	r8, #97	; 0x61
40017134:	ea00000c 	b	4001716c <CyU3PDmaChannelWaitForCompletion+0xc0>
40017138:	e3560003 	cmp	r6, #3
4001713c:	1a000001 	bne	40017148 <CyU3PDmaChannelWaitForCompletion+0x9c>
40017140:	e3a08062 	mov	r8, #98	; 0x62
40017144:	ea000008 	b	4001716c <CyU3PDmaChannelWaitForCompletion+0xc0>
40017148:	e3560004 	cmp	r6, #4
4001714c:	1a000001 	bne	40017158 <CyU3PDmaChannelWaitForCompletion+0xac>
40017150:	e3a08064 	mov	r8, #100	; 0x64
40017154:	ea000004 	b	4001716c <CyU3PDmaChannelWaitForCompletion+0xc0>
40017158:	e3560005 	cmp	r6, #5
4001715c:	1a000001 	bne	40017168 <CyU3PDmaChannelWaitForCompletion+0xbc>
40017160:	e3a07049 	mov	r7, #73	; 0x49
40017164:	ea000000 	b	4001716c <CyU3PDmaChannelWaitForCompletion+0xc0>
40017168:	e3a07042 	mov	r7, #66	; 0x42
4001716c:	e284003c 	add	r0, r4, #60	; 0x3c
40017170:	ebffcc9a 	bl	4000a3e0 <_txe_mutex_put>
40017174:	e3570000 	cmp	r7, #0
40017178:	1a000015 	bne	400171d4 <CyU3PDmaChannelWaitForCompletion+0x128>
4001717c:	e3580000 	cmp	r8, #0
40017180:	0a000013 	beq	400171d4 <CyU3PDmaChannelWaitForCompletion+0x128>
40017184:	e58d5000 	str	r5, [sp]
40017188:	e28d3004 	add	r3, sp, #4
4001718c:	e3a02000 	mov	r2, #0
40017190:	e1a01008 	mov	r1, r8
40017194:	e2840074 	add	r0, r4, #116	; 0x74
40017198:	ebffcb93 	bl	40009fec <_txe_event_flags_get>
4001719c:	e1a07000 	mov	r7, r0
400171a0:	e3570000 	cmp	r7, #0
400171a4:	0a000001 	beq	400171b0 <CyU3PDmaChannelWaitForCompletion+0x104>
400171a8:	e3a07045 	mov	r7, #69	; 0x45
400171ac:	ea000008 	b	400171d4 <CyU3PDmaChannelWaitForCompletion+0x128>
400171b0:	e59d0004 	ldr	r0, [sp, #4]
400171b4:	e3100040 	tst	r0, #64	; 0x40
400171b8:	0a000001 	beq	400171c4 <CyU3PDmaChannelWaitForCompletion+0x118>
400171bc:	e3a07049 	mov	r7, #73	; 0x49
400171c0:	ea000003 	b	400171d4 <CyU3PDmaChannelWaitForCompletion+0x128>
400171c4:	e59d0004 	ldr	r0, [sp, #4]
400171c8:	e3100020 	tst	r0, #32
400171cc:	0a000000 	beq	400171d4 <CyU3PDmaChannelWaitForCompletion+0x128>
400171d0:	e3a07048 	mov	r7, #72	; 0x48
400171d4:	e1a00007 	mov	r0, r7
400171d8:	eaffffbe 	b	400170d8 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

400171dc <CyU3PDmaChannelWaitForRecvBuffer>:
400171dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400171e0:	e24dd018 	sub	sp, sp, #24
400171e4:	e1a04000 	mov	r4, r0
400171e8:	e1a05001 	mov	r5, r1
400171ec:	e1a06002 	mov	r6, r2
400171f0:	e3550000 	cmp	r5, #0
400171f4:	1a000002 	bne	40017204 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
400171f8:	e3a00041 	mov	r0, #65	; 0x41
400171fc:	e28dd018 	add	sp, sp, #24
40017200:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40017204:	e1a01006 	mov	r1, r6
40017208:	e1a00004 	mov	r0, r4
4001720c:	ebfff89b 	bl	40015480 <CyU3PDmaChannelAcquireLock>
40017210:	e1a07000 	mov	r7, r0
40017214:	e3570000 	cmp	r7, #0
40017218:	0a000001 	beq	40017224 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
4001721c:	e1a00007 	mov	r0, r7
40017220:	eafffff5 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017224:	e1d400b4 	ldrh	r0, [r4, #4]
40017228:	e3500004 	cmp	r0, #4
4001722c:	1a000000 	bne	40017234 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40017230:	e3a07046 	mov	r7, #70	; 0x46
40017234:	e5948000 	ldr	r8, [r4]
40017238:	e3570000 	cmp	r7, #0
4001723c:	1a000034 	bne	40017314 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017240:	e3580004 	cmp	r8, #4
40017244:	1a00001e 	bne	400172c4 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40017248:	e284003c 	add	r0, r4, #60	; 0x3c
4001724c:	ebffcc63 	bl	4000a3e0 <_txe_mutex_put>
40017250:	e58d6000 	str	r6, [sp]
40017254:	e28d3014 	add	r3, sp, #20
40017258:	e3a02000 	mov	r2, #0
4001725c:	e3a01064 	mov	r1, #100	; 0x64
40017260:	e2840074 	add	r0, r4, #116	; 0x74
40017264:	ebffcb60 	bl	40009fec <_txe_event_flags_get>
40017268:	e1a07000 	mov	r7, r0
4001726c:	e3570000 	cmp	r7, #0
40017270:	0a000001 	beq	4001727c <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40017274:	e3a00045 	mov	r0, #69	; 0x45
40017278:	eaffffdf 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
4001727c:	e59d0014 	ldr	r0, [sp, #20]
40017280:	e3100040 	tst	r0, #64	; 0x40
40017284:	0a000001 	beq	40017290 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40017288:	e3a00049 	mov	r0, #73	; 0x49
4001728c:	eaffffda 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017290:	e59d0014 	ldr	r0, [sp, #20]
40017294:	e3100020 	tst	r0, #32
40017298:	0a000001 	beq	400172a4 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
4001729c:	e3a00048 	mov	r0, #72	; 0x48
400172a0:	eaffffd5 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172a4:	e1a01006 	mov	r1, r6
400172a8:	e1a00004 	mov	r0, r4
400172ac:	ebfff873 	bl	40015480 <CyU3PDmaChannelAcquireLock>
400172b0:	e1a07000 	mov	r7, r0
400172b4:	e3570000 	cmp	r7, #0
400172b8:	0a000015 	beq	40017314 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400172bc:	e1a00007 	mov	r0, r7
400172c0:	eaffffcd 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172c4:	e3580001 	cmp	r8, #1
400172c8:	1a000010 	bne	40017310 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
400172cc:	e3a03000 	mov	r3, #0
400172d0:	e58d3000 	str	r3, [sp]
400172d4:	e28d3014 	add	r3, sp, #20
400172d8:	e3a02000 	mov	r2, #0
400172dc:	e3a01024 	mov	r1, #36	; 0x24
400172e0:	e2840074 	add	r0, r4, #116	; 0x74
400172e4:	ebffcb40 	bl	40009fec <_txe_event_flags_get>
400172e8:	e1a07000 	mov	r7, r0
400172ec:	e3570000 	cmp	r7, #0
400172f0:	0a000001 	beq	400172fc <CyU3PDmaChannelWaitForRecvBuffer+0x120>
400172f4:	e3a07047 	mov	r7, #71	; 0x47
400172f8:	ea000005 	b	40017314 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400172fc:	e59d0014 	ldr	r0, [sp, #20]
40017300:	e3100020 	tst	r0, #32
40017304:	0a000002 	beq	40017314 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017308:	e3a07042 	mov	r7, #66	; 0x42
4001730c:	ea000000 	b	40017314 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017310:	e3a07047 	mov	r7, #71	; 0x47
40017314:	e3570000 	cmp	r7, #0
40017318:	0a000003 	beq	4001732c <CyU3PDmaChannelWaitForRecvBuffer+0x150>
4001731c:	e284003c 	add	r0, r4, #60	; 0x3c
40017320:	ebffcc2e 	bl	4000a3e0 <_txe_mutex_put>
40017324:	e1a00007 	mov	r0, r7
40017328:	eaffffb3 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
4001732c:	e1d401b4 	ldrh	r0, [r4, #20]
40017330:	e28d1004 	add	r1, sp, #4
40017334:	eb002d53 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017338:	e59d0004 	ldr	r0, [sp, #4]
4001733c:	e5850000 	str	r0, [r5]
40017340:	e59d0010 	ldr	r0, [sp, #16]
40017344:	e59f1030 	ldr	r1, [pc, #48]	; 4001737c <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40017348:	e0010820 	and	r0, r1, r0, lsr #16
4001734c:	e1c500b4 	strh	r0, [r5, #4]
40017350:	e241100f 	sub	r1, r1, #15
40017354:	e59d0010 	ldr	r0, [sp, #16]
40017358:	e0000001 	and	r0, r0, r1
4001735c:	e1c500b6 	strh	r0, [r5, #6]
40017360:	e59d0010 	ldr	r0, [sp, #16]
40017364:	e200000f 	and	r0, r0, #15
40017368:	e1c500b8 	strh	r0, [r5, #8]
4001736c:	e284003c 	add	r0, r4, #60	; 0x3c
40017370:	ebffcc1a 	bl	4000a3e0 <_txe_mutex_put>
40017374:	e3a00000 	mov	r0, #0
40017378:	eaffff9f 	b	400171fc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
4001737c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40017380 <CyU3PDmaConfigureSockets_TypeAuto>:
40017380:	e92d4010 	push	{r4, lr}
40017384:	e24dd018 	sub	sp, sp, #24
40017388:	e1a04000 	mov	r4, r0
4001738c:	e1d401b0 	ldrh	r0, [r4, #16]
40017390:	ebfff6c6 	bl	40014eb0 <CyU3PDmaSocketDisable>
40017394:	e1d401b2 	ldrh	r0, [r4, #18]
40017398:	ebfff6c4 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001739c:	e1d401b0 	ldrh	r0, [r4, #16]
400173a0:	e1a0100d 	mov	r1, sp
400173a4:	ebfff6d9 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400173a8:	e1d400bc 	ldrh	r0, [r4, #12]
400173ac:	e58d0000 	str	r0, [sp]
400173b0:	e3a00000 	mov	r0, #0
400173b4:	e58d0004 	str	r0, [sp, #4]
400173b8:	e58d0008 	str	r0, [sp, #8]
400173bc:	e3a00646 	mov	r0, #73400320	; 0x4600000
400173c0:	e58d000c 	str	r0, [sp, #12]
400173c4:	e1d401b0 	ldrh	r0, [r4, #16]
400173c8:	eb000df6 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
400173cc:	e3500000 	cmp	r0, #0
400173d0:	0a000002 	beq	400173e0 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
400173d4:	e59d000c 	ldr	r0, [sp, #12]
400173d8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400173dc:	e58d000c 	str	r0, [sp, #12]
400173e0:	e3e00000 	mvn	r0, #0
400173e4:	e58d0010 	str	r0, [sp, #16]
400173e8:	e1d400b4 	ldrh	r0, [r4, #4]
400173ec:	e3500001 	cmp	r0, #1
400173f0:	1a000001 	bne	400173fc <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
400173f4:	e3a00041 	mov	r0, #65	; 0x41
400173f8:	ea000000 	b	40017400 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
400173fc:	e3a00040 	mov	r0, #64	; 0x40
40017400:	e58d0014 	str	r0, [sp, #20]
40017404:	e1d401b0 	ldrh	r0, [r4, #16]
40017408:	e1a0100d 	mov	r1, sp
4001740c:	ebfff769 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40017410:	e1d401b2 	ldrh	r0, [r4, #18]
40017414:	e1a0100d 	mov	r1, sp
40017418:	ebfff6bc 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001741c:	e1d400bc 	ldrh	r0, [r4, #12]
40017420:	e58d0000 	str	r0, [sp]
40017424:	e3a00000 	mov	r0, #0
40017428:	e58d0004 	str	r0, [sp, #4]
4001742c:	e58d0008 	str	r0, [sp, #8]
40017430:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017434:	e58d000c 	str	r0, [sp, #12]
40017438:	e1d401b2 	ldrh	r0, [r4, #18]
4001743c:	eb000dd9 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
40017440:	e3500000 	cmp	r0, #0
40017444:	0a000002 	beq	40017454 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40017448:	e59d000c 	ldr	r0, [sp, #12]
4001744c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017450:	e58d000c 	str	r0, [sp, #12]
40017454:	e3e00000 	mvn	r0, #0
40017458:	e58d0010 	str	r0, [sp, #16]
4001745c:	e3a000c0 	mov	r0, #192	; 0xc0
40017460:	e58d0014 	str	r0, [sp, #20]
40017464:	e1d401b2 	ldrh	r0, [r4, #18]
40017468:	e1a0100d 	mov	r1, sp
4001746c:	ebfff751 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40017470:	e3a00000 	mov	r0, #0
40017474:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017478:	e28dd018 	add	sp, sp, #24
4001747c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017480 <CyU3PDmaConfigureSockets_TypeManual>:
40017480:	e92d4010 	push	{r4, lr}
40017484:	e24dd018 	sub	sp, sp, #24
40017488:	e1a04000 	mov	r4, r0
4001748c:	e1d400b4 	ldrh	r0, [r4, #4]
40017490:	e3500004 	cmp	r0, #4
40017494:	0a00001f 	beq	40017518 <CyU3PDmaConfigureSockets_TypeManual+0x98>
40017498:	e1d401b0 	ldrh	r0, [r4, #16]
4001749c:	ebfff683 	bl	40014eb0 <CyU3PDmaSocketDisable>
400174a0:	e1d401b0 	ldrh	r0, [r4, #16]
400174a4:	e1a0100d 	mov	r1, sp
400174a8:	ebfff698 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400174ac:	e1d400bc 	ldrh	r0, [r4, #12]
400174b0:	e58d0000 	str	r0, [sp]
400174b4:	e3a00000 	mov	r0, #0
400174b8:	e58d0004 	str	r0, [sp, #4]
400174bc:	e58d0008 	str	r0, [sp, #8]
400174c0:	e3a00646 	mov	r0, #73400320	; 0x4600000
400174c4:	e58d000c 	str	r0, [sp, #12]
400174c8:	e1d401b0 	ldrh	r0, [r4, #16]
400174cc:	eb000db5 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
400174d0:	e3500000 	cmp	r0, #0
400174d4:	0a000002 	beq	400174e4 <CyU3PDmaConfigureSockets_TypeManual+0x64>
400174d8:	e59d000c 	ldr	r0, [sp, #12]
400174dc:	e3800b01 	orr	r0, r0, #1024	; 0x400
400174e0:	e58d000c 	str	r0, [sp, #12]
400174e4:	e3e00000 	mvn	r0, #0
400174e8:	e58d0010 	str	r0, [sp, #16]
400174ec:	e3a00041 	mov	r0, #65	; 0x41
400174f0:	e58d0014 	str	r0, [sp, #20]
400174f4:	e1d400b4 	ldrh	r0, [r4, #4]
400174f8:	e3500003 	cmp	r0, #3
400174fc:	1a000002 	bne	4001750c <CyU3PDmaConfigureSockets_TypeManual+0x8c>
40017500:	e59d0014 	ldr	r0, [sp, #20]
40017504:	e3800080 	orr	r0, r0, #128	; 0x80
40017508:	e58d0014 	str	r0, [sp, #20]
4001750c:	e1d401b0 	ldrh	r0, [r4, #16]
40017510:	e1a0100d 	mov	r1, sp
40017514:	ebfff727 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40017518:	e1d400b4 	ldrh	r0, [r4, #4]
4001751c:	e3500003 	cmp	r0, #3
40017520:	0a000019 	beq	4001758c <CyU3PDmaConfigureSockets_TypeManual+0x10c>
40017524:	e1d401b2 	ldrh	r0, [r4, #18]
40017528:	ebfff660 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001752c:	e1d401b2 	ldrh	r0, [r4, #18]
40017530:	e1a0100d 	mov	r1, sp
40017534:	ebfff675 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40017538:	e1d400be 	ldrh	r0, [r4, #14]
4001753c:	e58d0000 	str	r0, [sp]
40017540:	e3a00000 	mov	r0, #0
40017544:	e58d0004 	str	r0, [sp, #4]
40017548:	e58d0008 	str	r0, [sp, #8]
4001754c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017550:	e58d000c 	str	r0, [sp, #12]
40017554:	e1d401b2 	ldrh	r0, [r4, #18]
40017558:	eb000d92 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
4001755c:	e3500000 	cmp	r0, #0
40017560:	0a000002 	beq	40017570 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017564:	e59d000c 	ldr	r0, [sp, #12]
40017568:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001756c:	e58d000c 	str	r0, [sp, #12]
40017570:	e3e00000 	mvn	r0, #0
40017574:	e58d0010 	str	r0, [sp, #16]
40017578:	e3a000c2 	mov	r0, #194	; 0xc2
4001757c:	e58d0014 	str	r0, [sp, #20]
40017580:	e1d401b2 	ldrh	r0, [r4, #18]
40017584:	e1a0100d 	mov	r1, sp
40017588:	ebfff70a 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001758c:	e3a00000 	mov	r0, #0
40017590:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017594:	e28dd018 	add	sp, sp, #24
40017598:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

4001759c <CyU3PDmaMultiChannelAcquireLock>:
4001759c:	e92d4070 	push	{r4, r5, r6, lr}
400175a0:	e1a04000 	mov	r4, r0
400175a4:	e1a05001 	mov	r5, r1
400175a8:	e3540000 	cmp	r4, #0
400175ac:	1a000001 	bne	400175b8 <CyU3PDmaMultiChannelAcquireLock+0x1c>
400175b0:	e3a00041 	mov	r0, #65	; 0x41
400175b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400175b8:	e5940000 	ldr	r0, [r4]
400175bc:	e3500000 	cmp	r0, #0
400175c0:	1a000001 	bne	400175cc <CyU3PDmaMultiChannelAcquireLock+0x30>
400175c4:	e3a00044 	mov	r0, #68	; 0x44
400175c8:	eafffff9 	b	400175b4 <CyU3PDmaMultiChannelAcquireLock+0x18>
400175cc:	e1a01005 	mov	r1, r5
400175d0:	e2840078 	add	r0, r4, #120	; 0x78
400175d4:	ebffcb4c 	bl	4000a30c <_txe_mutex_get>
400175d8:	e3500000 	cmp	r0, #0
400175dc:	0a000001 	beq	400175e8 <CyU3PDmaMultiChannelAcquireLock+0x4c>
400175e0:	e3a0001d 	mov	r0, #29
400175e4:	eafffff2 	b	400175b4 <CyU3PDmaMultiChannelAcquireLock+0x18>
400175e8:	e3a00000 	mov	r0, #0
400175ec:	eafffff0 	b	400175b4 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

400175f0 <CyU3PDmaMultiChannelCommitBuffer>:
400175f0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400175f4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400175f8:	e1a04000 	mov	r4, r0
400175fc:	e1a05001 	mov	r5, r1
40017600:	e1a06002 	mov	r6, r2
40017604:	e3e01000 	mvn	r1, #0
40017608:	e1a00004 	mov	r0, r4
4001760c:	ebffffe2 	bl	4001759c <CyU3PDmaMultiChannelAcquireLock>
40017610:	e1a0b000 	mov	fp, r0
40017614:	e35b0000 	cmp	fp, #0
40017618:	0a000002 	beq	40017628 <CyU3PDmaMultiChannelCommitBuffer+0x38>
4001761c:	e1a0000b 	mov	r0, fp
40017620:	e28dd03c 	add	sp, sp, #60	; 0x3c
40017624:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40017628:	e1d400b4 	ldrh	r0, [r4, #4]
4001762c:	e20070ff 	and	r7, r0, #255	; 0xff
40017630:	e1d400b6 	ldrh	r0, [r4, #6]
40017634:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017638:	e0400001 	sub	r0, r0, r1
4001763c:	e1500005 	cmp	r0, r5
40017640:	aa000000 	bge	40017648 <CyU3PDmaMultiChannelCommitBuffer+0x58>
40017644:	e3a0b040 	mov	fp, #64	; 0x40
40017648:	e5940000 	ldr	r0, [r4]
4001764c:	e3500002 	cmp	r0, #2
40017650:	0a000000 	beq	40017658 <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017654:	e3a0b042 	mov	fp, #66	; 0x42
40017658:	e5940000 	ldr	r0, [r4]
4001765c:	e3500005 	cmp	r0, #5
40017660:	1a000000 	bne	40017668 <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017664:	e3a0b049 	mov	fp, #73	; 0x49
40017668:	e5940000 	ldr	r0, [r4]
4001766c:	e3500007 	cmp	r0, #7
40017670:	1a000000 	bne	40017678 <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017674:	e3a0b048 	mov	fp, #72	; 0x48
40017678:	e3570006 	cmp	r7, #6
4001767c:	1a000000 	bne	40017684 <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017680:	e3a0b046 	mov	fp, #70	; 0x46
40017684:	e3570005 	cmp	r7, #5
40017688:	1a000034 	bne	40017760 <CyU3PDmaMultiChannelCommitBuffer+0x170>
4001768c:	e35b0000 	cmp	fp, #0
40017690:	1a000032 	bne	40017760 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017694:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017698:	e28d1024 	add	r1, sp, #36	; 0x24
4001769c:	ebfff61b 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400176a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400176a4:	e3100702 	tst	r0, #524288	; 0x80000
400176a8:	0a000027 	beq	4001774c <CyU3PDmaMultiChannelCommitBuffer+0x15c>
400176ac:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400176b0:	e1a09800 	lsl	r9, r0, #16
400176b4:	e1a09829 	lsr	r9, r9, #16
400176b8:	e28d1004 	add	r1, sp, #4
400176bc:	e1a00009 	mov	r0, r9
400176c0:	eb002c70 	bl	40022888 <CyU3PDmaDscrGetConfig>
400176c4:	e59d0010 	ldr	r0, [sp, #16]
400176c8:	e3100008 	tst	r0, #8
400176cc:	0a00001c 	beq	40017744 <CyU3PDmaMultiChannelCommitBuffer+0x154>
400176d0:	e59d0010 	ldr	r0, [sp, #16]
400176d4:	e1a00800 	lsl	r0, r0, #16
400176d8:	e1a00820 	lsr	r0, r0, #16
400176dc:	e58d0010 	str	r0, [sp, #16]
400176e0:	e59d0010 	ldr	r0, [sp, #16]
400176e4:	e1800805 	orr	r0, r0, r5, lsl #16
400176e8:	e58d0010 	str	r0, [sp, #16]
400176ec:	e3560000 	cmp	r6, #0
400176f0:	0a000007 	beq	40017714 <CyU3PDmaMultiChannelCommitBuffer+0x124>
400176f4:	e59d0010 	ldr	r0, [sp, #16]
400176f8:	e3c0000f 	bic	r0, r0, #15
400176fc:	e58d0010 	str	r0, [sp, #16]
40017700:	e206100e 	and	r1, r6, #14
40017704:	e3811008 	orr	r1, r1, #8
40017708:	e59d0010 	ldr	r0, [sp, #16]
4001770c:	e1800001 	orr	r0, r0, r1
40017710:	e58d0010 	str	r0, [sp, #16]
40017714:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017718:	e3500000 	cmp	r0, #0
4001771c:	0a000004 	beq	40017734 <CyU3PDmaMultiChannelCommitBuffer+0x144>
40017720:	e59d2010 	ldr	r2, [sp, #16]
40017724:	e59f327c 	ldr	r3, [pc, #636]	; 400179a8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017728:	e0021003 	and	r1, r2, r3
4001772c:	e59d0004 	ldr	r0, [sp, #4]
40017730:	ebffeb19 	bl	4001239c <CyU3PSysCleanDRegion>
40017734:	e28d1004 	add	r1, sp, #4
40017738:	e1a00009 	mov	r0, r9
4001773c:	eb002c6c 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017740:	ea000002 	b	40017750 <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017744:	e3a0b047 	mov	fp, #71	; 0x47
40017748:	ea000000 	b	40017750 <CyU3PDmaMultiChannelCommitBuffer+0x160>
4001774c:	e3a0b047 	mov	fp, #71	; 0x47
40017750:	e2840078 	add	r0, r4, #120	; 0x78
40017754:	ebffcb21 	bl	4000a3e0 <_txe_mutex_put>
40017758:	e1a0000b 	mov	r0, fp
4001775c:	eaffffaf 	b	40017620 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017760:	e35b0000 	cmp	fp, #0
40017764:	1a00000d 	bne	400177a0 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017768:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001776c:	e28d1014 	add	r1, sp, #20
40017770:	eb002c44 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017774:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017778:	e28d1004 	add	r1, sp, #4
4001777c:	eb002c41 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017780:	e59d0020 	ldr	r0, [sp, #32]
40017784:	e3100008 	tst	r0, #8
40017788:	1a000000 	bne	40017790 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
4001778c:	e3a0b047 	mov	fp, #71	; 0x47
40017790:	e59d0010 	ldr	r0, [sp, #16]
40017794:	e3100008 	tst	r0, #8
40017798:	0a000000 	beq	400177a0 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
4001779c:	e3a0b047 	mov	fp, #71	; 0x47
400177a0:	e35b0000 	cmp	fp, #0
400177a4:	0a000003 	beq	400177b8 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
400177a8:	e2840078 	add	r0, r4, #120	; 0x78
400177ac:	ebffcb0b 	bl	4000a3e0 <_txe_mutex_put>
400177b0:	e1a0000b 	mov	r0, fp
400177b4:	eaffff99 	b	40017620 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400177b8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400177bc:	e3500000 	cmp	r0, #0
400177c0:	0a000004 	beq	400177d8 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
400177c4:	e59d2010 	ldr	r2, [sp, #16]
400177c8:	e59f31d8 	ldr	r3, [pc, #472]	; 400179a8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400177cc:	e0021003 	and	r1, r2, r3
400177d0:	e59d0004 	ldr	r0, [sp, #4]
400177d4:	ebffeaf0 	bl	4001239c <CyU3PSysCleanDRegion>
400177d8:	e3570009 	cmp	r7, #9
400177dc:	1a00003a 	bne	400178cc <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
400177e0:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
400177e4:	e3a0a000 	mov	sl, #0
400177e8:	ea00002a 	b	40017898 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
400177ec:	e28d1004 	add	r1, sp, #4
400177f0:	e1a00009 	mov	r0, r9
400177f4:	eb002c23 	bl	40022888 <CyU3PDmaDscrGetConfig>
400177f8:	e284000c 	add	r0, r4, #12
400177fc:	e080008a 	add	r0, r0, sl, lsl #1
40017800:	e1d000b0 	ldrh	r0, [r0]
40017804:	e3500000 	cmp	r0, #0
40017808:	1a00001d 	bne	40017884 <CyU3PDmaMultiChannelCommitBuffer+0x294>
4001780c:	e59d0010 	ldr	r0, [sp, #16]
40017810:	e59f1190 	ldr	r1, [pc, #400]	; 400179a8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017814:	e0000001 	and	r0, r0, r1
40017818:	e58d0010 	str	r0, [sp, #16]
4001781c:	e59d0010 	ldr	r0, [sp, #16]
40017820:	e1800805 	orr	r0, r0, r5, lsl #16
40017824:	e58d0010 	str	r0, [sp, #16]
40017828:	e3560000 	cmp	r6, #0
4001782c:	1a000005 	bne	40017848 <CyU3PDmaMultiChannelCommitBuffer+0x258>
40017830:	e59d1020 	ldr	r1, [sp, #32]
40017834:	e201100f 	and	r1, r1, #15
40017838:	e59d0010 	ldr	r0, [sp, #16]
4001783c:	e1800001 	orr	r0, r0, r1
40017840:	e58d0010 	str	r0, [sp, #16]
40017844:	ea000004 	b	4001785c <CyU3PDmaMultiChannelCommitBuffer+0x26c>
40017848:	e206100e 	and	r1, r6, #14
4001784c:	e3811008 	orr	r1, r1, #8
40017850:	e59d0010 	ldr	r0, [sp, #16]
40017854:	e1800001 	orr	r0, r0, r1
40017858:	e58d0010 	str	r0, [sp, #16]
4001785c:	e28d1004 	add	r1, sp, #4
40017860:	e1a00009 	mov	r0, r9
40017864:	eb002c22 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017868:	e59d0008 	ldr	r0, [sp, #8]
4001786c:	e1a08900 	lsl	r8, r0, #18
40017870:	e1a08928 	lsr	r8, r8, #18
40017874:	e3a02001 	mov	r2, #1
40017878:	e1a01009 	mov	r1, r9
4001787c:	e1a00008 	mov	r0, r8
40017880:	ebfff63a 	bl	40015170 <CyU3PDmaSocketSendEvent>
40017884:	e59d000c 	ldr	r0, [sp, #12]
40017888:	e59f111c 	ldr	r1, [pc, #284]	; 400179ac <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001788c:	e0019820 	and	r9, r1, r0, lsr #16
40017890:	e28a0001 	add	r0, sl, #1
40017894:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
40017898:	e1d400ba 	ldrh	r0, [r4, #10]
4001789c:	e150000a 	cmp	r0, sl
400178a0:	caffffd1 	bgt	400177ec <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
400178a4:	e59d001c 	ldr	r0, [sp, #28]
400178a8:	e59f10fc 	ldr	r1, [pc, #252]	; 400179ac <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400178ac:	e0010820 	and	r0, r1, r0, lsr #16
400178b0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400178b4:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400178b8:	e28d1014 	add	r1, sp, #20
400178bc:	eb002bf1 	bl	40022888 <CyU3PDmaDscrGetConfig>
400178c0:	e59d001c 	ldr	r0, [sp, #28]
400178c4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400178c8:	ea000032 	b	40017998 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400178cc:	e59d0010 	ldr	r0, [sp, #16]
400178d0:	e59f10d0 	ldr	r1, [pc, #208]	; 400179a8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400178d4:	e0000001 	and	r0, r0, r1
400178d8:	e58d0010 	str	r0, [sp, #16]
400178dc:	e59d0010 	ldr	r0, [sp, #16]
400178e0:	e1800805 	orr	r0, r0, r5, lsl #16
400178e4:	e58d0010 	str	r0, [sp, #16]
400178e8:	e3560000 	cmp	r6, #0
400178ec:	1a000005 	bne	40017908 <CyU3PDmaMultiChannelCommitBuffer+0x318>
400178f0:	e59d1020 	ldr	r1, [sp, #32]
400178f4:	e201100f 	and	r1, r1, #15
400178f8:	e59d0010 	ldr	r0, [sp, #16]
400178fc:	e1800001 	orr	r0, r0, r1
40017900:	e58d0010 	str	r0, [sp, #16]
40017904:	ea000004 	b	4001791c <CyU3PDmaMultiChannelCommitBuffer+0x32c>
40017908:	e206100e 	and	r1, r6, #14
4001790c:	e3811008 	orr	r1, r1, #8
40017910:	e59d0010 	ldr	r0, [sp, #16]
40017914:	e1800001 	orr	r0, r0, r1
40017918:	e58d0010 	str	r0, [sp, #16]
4001791c:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017920:	e28d1004 	add	r1, sp, #4
40017924:	eb002bf2 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017928:	e59d0008 	ldr	r0, [sp, #8]
4001792c:	e1a08900 	lsl	r8, r0, #18
40017930:	e1a08928 	lsr	r8, r8, #18
40017934:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
40017938:	e3a02001 	mov	r2, #1
4001793c:	e1a00008 	mov	r0, r8
40017940:	ebfff60a 	bl	40015170 <CyU3PDmaSocketSendEvent>
40017944:	e3570007 	cmp	r7, #7
40017948:	1a000009 	bne	40017974 <CyU3PDmaMultiChannelCommitBuffer+0x384>
4001794c:	e59d000c 	ldr	r0, [sp, #12]
40017950:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017954:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017958:	e28d1004 	add	r1, sp, #4
4001795c:	eb002bc9 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017960:	e59d000c 	ldr	r0, [sp, #12]
40017964:	e59f1040 	ldr	r1, [pc, #64]	; 400179ac <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017968:	e0010820 	and	r0, r1, r0, lsr #16
4001796c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017970:	ea000008 	b	40017998 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017974:	e59d001c 	ldr	r0, [sp, #28]
40017978:	e59f102c 	ldr	r1, [pc, #44]	; 400179ac <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001797c:	e0010820 	and	r0, r1, r0, lsr #16
40017980:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017984:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017988:	e28d1014 	add	r1, sp, #20
4001798c:	eb002bbd 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017990:	e59d001c 	ldr	r0, [sp, #28]
40017994:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017998:	e2840078 	add	r0, r4, #120	; 0x78
4001799c:	ebffca8f 	bl	4000a3e0 <_txe_mutex_put>
400179a0:	e3a00000 	mov	r0, #0
400179a4:	eaffff1d 	b	40017620 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400179a8:	0000fff0 	.word	0x0000fff0
400179ac:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

400179b0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
400179b0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400179b4:	e24dd024 	sub	sp, sp, #36	; 0x24
400179b8:	e1a04000 	mov	r4, r0
400179bc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400179c0:	e3806903 	orr	r6, r0, #49152	; 0xc000
400179c4:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400179c8:	e3866801 	orr	r6, r6, #65536	; 0x10000
400179cc:	e1d400b8 	ldrh	r0, [r4, #8]
400179d0:	e1d430ba 	ldrh	r3, [r4, #10]
400179d4:	e0000093 	mul	r0, r3, r0
400179d8:	e1a01800 	lsl	r1, r0, #16
400179dc:	e1a01821 	lsr	r1, r1, #16
400179e0:	e1d420b6 	ldrh	r2, [r4, #6]
400179e4:	e1a03006 	mov	r3, r6
400179e8:	e284001c 	add	r0, r4, #28
400179ec:	eb002ab6 	bl	400224cc <CyU3PDmaDscrChainCreate>
400179f0:	e1a05000 	mov	r5, r0
400179f4:	e3550000 	cmp	r5, #0
400179f8:	0a000002 	beq	40017a08 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
400179fc:	e1a00005 	mov	r0, r5
40017a00:	e28dd024 	add	sp, sp, #36	; 0x24
40017a04:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017a08:	e1d400b4 	ldrh	r0, [r4, #4]
40017a0c:	e3500005 	cmp	r0, #5
40017a10:	1a00003c 	bne	40017b08 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
40017a14:	e3a07000 	mov	r7, #0
40017a18:	e1d481bc 	ldrh	r8, [r4, #28]
40017a1c:	ea000035 	b	40017af8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
40017a20:	e3a09000 	mov	r9, #0
40017a24:	ea00002e 	b	40017ae4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
40017a28:	e28d1004 	add	r1, sp, #4
40017a2c:	e1a00008 	mov	r0, r8
40017a30:	eb002b94 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017a34:	e3570000 	cmp	r7, #0
40017a38:	1a000003 	bne	40017a4c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
40017a3c:	e2840014 	add	r0, r4, #20
40017a40:	e0800089 	add	r0, r0, r9, lsl #1
40017a44:	e1c080b0 	strh	r8, [r0]
40017a48:	ea000020 	b	40017ad0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
40017a4c:	e2841014 	add	r1, r4, #20
40017a50:	e0811089 	add	r1, r1, r9, lsl #1
40017a54:	e1d100b0 	ldrh	r0, [r1]
40017a58:	e28d1014 	add	r1, sp, #20
40017a5c:	eb002b89 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017a60:	e59d0018 	ldr	r0, [sp, #24]
40017a64:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017a68:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017a6c:	e58d0018 	str	r0, [sp, #24]
40017a70:	e2841024 	add	r1, r4, #36	; 0x24
40017a74:	e0811089 	add	r1, r1, r9, lsl #1
40017a78:	e59d0018 	ldr	r0, [sp, #24]
40017a7c:	e1d110b0 	ldrh	r1, [r1]
40017a80:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017a84:	e1821801 	orr	r1, r2, r1, lsl #16
40017a88:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017a8c:	e1800001 	orr	r0, r0, r1
40017a90:	e58d0018 	str	r0, [sp, #24]
40017a94:	e59d001c 	ldr	r0, [sp, #28]
40017a98:	e1a00800 	lsl	r0, r0, #16
40017a9c:	e1a00820 	lsr	r0, r0, #16
40017aa0:	e58d001c 	str	r0, [sp, #28]
40017aa4:	e59d001c 	ldr	r0, [sp, #28]
40017aa8:	e1800808 	orr	r0, r0, r8, lsl #16
40017aac:	e58d001c 	str	r0, [sp, #28]
40017ab0:	e2841014 	add	r1, r4, #20
40017ab4:	e0811089 	add	r1, r1, r9, lsl #1
40017ab8:	e1d100b0 	ldrh	r0, [r1]
40017abc:	e28d1014 	add	r1, sp, #20
40017ac0:	eb002b8b 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017ac4:	e2840014 	add	r0, r4, #20
40017ac8:	e0800089 	add	r0, r0, r9, lsl #1
40017acc:	e1c080b0 	strh	r8, [r0]
40017ad0:	e59d000c 	ldr	r0, [sp, #12]
40017ad4:	e1a08800 	lsl	r8, r0, #16
40017ad8:	e1a08828 	lsr	r8, r8, #16
40017adc:	e2890001 	add	r0, r9, #1
40017ae0:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017ae4:	e1d400ba 	ldrh	r0, [r4, #10]
40017ae8:	e1500009 	cmp	r0, r9
40017aec:	caffffcd 	bgt	40017a28 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017af0:	e2870001 	add	r0, r7, #1
40017af4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017af8:	e1d400b8 	ldrh	r0, [r4, #8]
40017afc:	e1500007 	cmp	r0, r7
40017b00:	aaffffc6 	bge	40017a20 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017b04:	ea000056 	b	40017c64 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017b08:	e3a07000 	mov	r7, #0
40017b0c:	e1d481bc 	ldrh	r8, [r4, #28]
40017b10:	ea000050 	b	40017c58 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
40017b14:	e3a09000 	mov	r9, #0
40017b18:	ea000049 	b	40017c44 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
40017b1c:	e3570000 	cmp	r7, #0
40017b20:	1a00000d 	bne	40017b5c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
40017b24:	e3a06cff 	mov	r6, #65280	; 0xff00
40017b28:	e2840024 	add	r0, r4, #36	; 0x24
40017b2c:	e0800089 	add	r0, r0, r9, lsl #1
40017b30:	e1d000b0 	ldrh	r0, [r0]
40017b34:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017b38:	e1810800 	orr	r0, r1, r0, lsl #16
40017b3c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017b40:	e1866000 	orr	r6, r6, r0
40017b44:	e1d410b8 	ldrh	r1, [r4, #8]
40017b48:	e2842014 	add	r2, r4, #20
40017b4c:	e0820089 	add	r0, r2, r9, lsl #1
40017b50:	e1a03006 	mov	r3, r6
40017b54:	e3a02000 	mov	r2, #0
40017b58:	eb002a5b 	bl	400224cc <CyU3PDmaDscrChainCreate>
40017b5c:	e2841014 	add	r1, r4, #20
40017b60:	e0811089 	add	r1, r1, r9, lsl #1
40017b64:	e1d100b0 	ldrh	r0, [r1]
40017b68:	e28d1014 	add	r1, sp, #20
40017b6c:	eb002b45 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017b70:	e28d1004 	add	r1, sp, #4
40017b74:	e1a00008 	mov	r0, r8
40017b78:	eb002b42 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017b7c:	e59d0004 	ldr	r0, [sp, #4]
40017b80:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017b84:	e0800001 	add	r0, r0, r1
40017b88:	e58d0014 	str	r0, [sp, #20]
40017b8c:	e59d0010 	ldr	r0, [sp, #16]
40017b90:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017b94:	e0400001 	sub	r0, r0, r1
40017b98:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017b9c:	e0400001 	sub	r0, r0, r1
40017ba0:	e58d0020 	str	r0, [sp, #32]
40017ba4:	e2841014 	add	r1, r4, #20
40017ba8:	e0811089 	add	r1, r1, r9, lsl #1
40017bac:	e1d100b0 	ldrh	r0, [r1]
40017bb0:	e28d1014 	add	r1, sp, #20
40017bb4:	eb002b4e 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017bb8:	e59d0004 	ldr	r0, [sp, #4]
40017bbc:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017bc0:	e0800001 	add	r0, r0, r1
40017bc4:	e58d0004 	str	r0, [sp, #4]
40017bc8:	e1d400b6 	ldrh	r0, [r4, #6]
40017bcc:	e280000f 	add	r0, r0, #15
40017bd0:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017bd4:	e0400001 	sub	r0, r0, r1
40017bd8:	e59f10b4 	ldr	r1, [pc, #180]	; 40017c94 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
40017bdc:	e0000001 	and	r0, r0, r1
40017be0:	e58d0010 	str	r0, [sp, #16]
40017be4:	e59d000c 	ldr	r0, [sp, #12]
40017be8:	e1a00800 	lsl	r0, r0, #16
40017bec:	e1a00820 	lsr	r0, r0, #16
40017bf0:	e58d000c 	str	r0, [sp, #12]
40017bf4:	e2841014 	add	r1, r4, #20
40017bf8:	e0811089 	add	r1, r1, r9, lsl #1
40017bfc:	e59d000c 	ldr	r0, [sp, #12]
40017c00:	e1d110b0 	ldrh	r1, [r1]
40017c04:	e1800801 	orr	r0, r0, r1, lsl #16
40017c08:	e58d000c 	str	r0, [sp, #12]
40017c0c:	e28d1004 	add	r1, sp, #4
40017c10:	e1a00008 	mov	r0, r8
40017c14:	eb002b36 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017c18:	e59d000c 	ldr	r0, [sp, #12]
40017c1c:	e1a08800 	lsl	r8, r0, #16
40017c20:	e1a08828 	lsr	r8, r8, #16
40017c24:	e59d001c 	ldr	r0, [sp, #28]
40017c28:	e59f1068 	ldr	r1, [pc, #104]	; 40017c98 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017c2c:	e0010820 	and	r0, r1, r0, lsr #16
40017c30:	e2841014 	add	r1, r4, #20
40017c34:	e0811089 	add	r1, r1, r9, lsl #1
40017c38:	e1c100b0 	strh	r0, [r1]
40017c3c:	e2890001 	add	r0, r9, #1
40017c40:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017c44:	e1d400ba 	ldrh	r0, [r4, #10]
40017c48:	e1500009 	cmp	r0, r9
40017c4c:	caffffb2 	bgt	40017b1c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017c50:	e2870001 	add	r0, r7, #1
40017c54:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017c58:	e1d400b8 	ldrh	r0, [r4, #8]
40017c5c:	e1500007 	cmp	r0, r7
40017c60:	caffffab 	bgt	40017b14 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017c64:	e1a00004 	mov	r0, r4
40017c68:	eb000509 	bl	40019094 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017c6c:	e1d401b4 	ldrh	r0, [r4, #20]
40017c70:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017c74:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017c78:	e1d401bc 	ldrh	r0, [r4, #28]
40017c7c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017c80:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017c84:	e2840034 	add	r0, r4, #52	; 0x34
40017c88:	eb002a86 	bl	400226a8 <CyU3PDmaDscrGet>
40017c8c:	e3a00000 	mov	r0, #0
40017c90:	eaffff5a 	b	40017a00 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017c94:	0000fff0 	.word	0x0000fff0
40017c98:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

40017c9c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
40017c9c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017ca0:	e24dd024 	sub	sp, sp, #36	; 0x24
40017ca4:	e1a04000 	mov	r4, r0
40017ca8:	e3a06cff 	mov	r6, #65280	; 0xff00
40017cac:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017cb0:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017cb4:	e1810800 	orr	r0, r1, r0, lsl #16
40017cb8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017cbc:	e1866000 	orr	r6, r6, r0
40017cc0:	e1d400b8 	ldrh	r0, [r4, #8]
40017cc4:	e1d430ba 	ldrh	r3, [r4, #10]
40017cc8:	e0000093 	mul	r0, r3, r0
40017ccc:	e1a01800 	lsl	r1, r0, #16
40017cd0:	e1a01821 	lsr	r1, r1, #16
40017cd4:	e1d420b6 	ldrh	r2, [r4, #6]
40017cd8:	e1a03006 	mov	r3, r6
40017cdc:	e2840014 	add	r0, r4, #20
40017ce0:	eb0029f9 	bl	400224cc <CyU3PDmaDscrChainCreate>
40017ce4:	e1a05000 	mov	r5, r0
40017ce8:	e3550000 	cmp	r5, #0
40017cec:	0a000002 	beq	40017cfc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017cf0:	e1a00005 	mov	r0, r5
40017cf4:	e28dd024 	add	sp, sp, #36	; 0x24
40017cf8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017cfc:	e1d400b4 	ldrh	r0, [r4, #4]
40017d00:	e3500006 	cmp	r0, #6
40017d04:	1a00003a 	bne	40017df4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017d08:	e3a07000 	mov	r7, #0
40017d0c:	e1d481b4 	ldrh	r8, [r4, #20]
40017d10:	ea000033 	b	40017de4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
40017d14:	e3a09000 	mov	r9, #0
40017d18:	ea00002c 	b	40017dd0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017d1c:	e28d1014 	add	r1, sp, #20
40017d20:	e1a00008 	mov	r0, r8
40017d24:	eb002ad7 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017d28:	e3570000 	cmp	r7, #0
40017d2c:	1a000003 	bne	40017d40 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017d30:	e284001c 	add	r0, r4, #28
40017d34:	e0800089 	add	r0, r0, r9, lsl #1
40017d38:	e1c080b0 	strh	r8, [r0]
40017d3c:	ea00001e 	b	40017dbc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017d40:	e284101c 	add	r1, r4, #28
40017d44:	e0811089 	add	r1, r1, r9, lsl #1
40017d48:	e1d100b0 	ldrh	r0, [r1]
40017d4c:	e28d1004 	add	r1, sp, #4
40017d50:	eb002acc 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017d54:	e59d0008 	ldr	r0, [sp, #8]
40017d58:	e1a00720 	lsr	r0, r0, #14
40017d5c:	e1a00700 	lsl	r0, r0, #14
40017d60:	e58d0008 	str	r0, [sp, #8]
40017d64:	e284102c 	add	r1, r4, #44	; 0x2c
40017d68:	e0811089 	add	r1, r1, r9, lsl #1
40017d6c:	e59d0008 	ldr	r0, [sp, #8]
40017d70:	e1d110b0 	ldrh	r1, [r1]
40017d74:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017d78:	e1800001 	orr	r0, r0, r1
40017d7c:	e58d0008 	str	r0, [sp, #8]
40017d80:	e59d000c 	ldr	r0, [sp, #12]
40017d84:	e1a00820 	lsr	r0, r0, #16
40017d88:	e1a00800 	lsl	r0, r0, #16
40017d8c:	e58d000c 	str	r0, [sp, #12]
40017d90:	e59d000c 	ldr	r0, [sp, #12]
40017d94:	e1800008 	orr	r0, r0, r8
40017d98:	e58d000c 	str	r0, [sp, #12]
40017d9c:	e284101c 	add	r1, r4, #28
40017da0:	e0811089 	add	r1, r1, r9, lsl #1
40017da4:	e1d100b0 	ldrh	r0, [r1]
40017da8:	e28d1004 	add	r1, sp, #4
40017dac:	eb002ad0 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017db0:	e284001c 	add	r0, r4, #28
40017db4:	e0800089 	add	r0, r0, r9, lsl #1
40017db8:	e1c080b0 	strh	r8, [r0]
40017dbc:	e59d001c 	ldr	r0, [sp, #28]
40017dc0:	e59f11c4 	ldr	r1, [pc, #452]	; 40017f8c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017dc4:	e0018820 	and	r8, r1, r0, lsr #16
40017dc8:	e2890001 	add	r0, r9, #1
40017dcc:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017dd0:	e1d400ba 	ldrh	r0, [r4, #10]
40017dd4:	e1500009 	cmp	r0, r9
40017dd8:	caffffcf 	bgt	40017d1c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017ddc:	e2870001 	add	r0, r7, #1
40017de0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017de4:	e1d400b8 	ldrh	r0, [r4, #8]
40017de8:	e1500007 	cmp	r0, r7
40017dec:	aaffffc8 	bge	40017d14 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017df0:	ea000059 	b	40017f5c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017df4:	e3a07000 	mov	r7, #0
40017df8:	e1d481b4 	ldrh	r8, [r4, #20]
40017dfc:	ea000053 	b	40017f50 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017e00:	e3a09000 	mov	r9, #0
40017e04:	ea00004c 	b	40017f3c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017e08:	e3570000 	cmp	r7, #0
40017e0c:	1a00000b 	bne	40017e40 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017e10:	e284002c 	add	r0, r4, #44	; 0x2c
40017e14:	e0800089 	add	r0, r0, r9, lsl #1
40017e18:	e1d000b0 	ldrh	r0, [r0]
40017e1c:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017e20:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017e24:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017e28:	e1d410b8 	ldrh	r1, [r4, #8]
40017e2c:	e284201c 	add	r2, r4, #28
40017e30:	e0820089 	add	r0, r2, r9, lsl #1
40017e34:	e1a03006 	mov	r3, r6
40017e38:	e3a02000 	mov	r2, #0
40017e3c:	eb0029a2 	bl	400224cc <CyU3PDmaDscrChainCreate>
40017e40:	e284101c 	add	r1, r4, #28
40017e44:	e0811089 	add	r1, r1, r9, lsl #1
40017e48:	e1d100b0 	ldrh	r0, [r1]
40017e4c:	e28d1004 	add	r1, sp, #4
40017e50:	eb002a8c 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017e54:	e28d1014 	add	r1, sp, #20
40017e58:	e1a00008 	mov	r0, r8
40017e5c:	eb002a89 	bl	40022888 <CyU3PDmaDscrGetConfig>
40017e60:	e59d0014 	ldr	r0, [sp, #20]
40017e64:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017e68:	e0800001 	add	r0, r0, r1
40017e6c:	e58d0004 	str	r0, [sp, #4]
40017e70:	e1d400b6 	ldrh	r0, [r4, #6]
40017e74:	e280000f 	add	r0, r0, #15
40017e78:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017e7c:	e0400001 	sub	r0, r0, r1
40017e80:	e59f1108 	ldr	r1, [pc, #264]	; 40017f90 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017e84:	e0000001 	and	r0, r0, r1
40017e88:	e58d0010 	str	r0, [sp, #16]
40017e8c:	e59d000c 	ldr	r0, [sp, #12]
40017e90:	e1a00800 	lsl	r0, r0, #16
40017e94:	e1a00820 	lsr	r0, r0, #16
40017e98:	e58d000c 	str	r0, [sp, #12]
40017e9c:	e59d000c 	ldr	r0, [sp, #12]
40017ea0:	e1800808 	orr	r0, r0, r8, lsl #16
40017ea4:	e58d000c 	str	r0, [sp, #12]
40017ea8:	e284101c 	add	r1, r4, #28
40017eac:	e0811089 	add	r1, r1, r9, lsl #1
40017eb0:	e1d100b0 	ldrh	r0, [r1]
40017eb4:	e28d1004 	add	r1, sp, #4
40017eb8:	eb002a8d 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017ebc:	e59d0014 	ldr	r0, [sp, #20]
40017ec0:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017ec4:	e0800001 	add	r0, r0, r1
40017ec8:	e58d0014 	str	r0, [sp, #20]
40017ecc:	e1d400b6 	ldrh	r0, [r4, #6]
40017ed0:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017ed4:	e0400001 	sub	r0, r0, r1
40017ed8:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017edc:	e0400001 	sub	r0, r0, r1
40017ee0:	e58d0020 	str	r0, [sp, #32]
40017ee4:	e59d001c 	ldr	r0, [sp, #28]
40017ee8:	e1a00820 	lsr	r0, r0, #16
40017eec:	e1a00800 	lsl	r0, r0, #16
40017ef0:	e58d001c 	str	r0, [sp, #28]
40017ef4:	e284101c 	add	r1, r4, #28
40017ef8:	e0811089 	add	r1, r1, r9, lsl #1
40017efc:	e59d001c 	ldr	r0, [sp, #28]
40017f00:	e1d110b0 	ldrh	r1, [r1]
40017f04:	e1800001 	orr	r0, r0, r1
40017f08:	e58d001c 	str	r0, [sp, #28]
40017f0c:	e28d1014 	add	r1, sp, #20
40017f10:	e1a00008 	mov	r0, r8
40017f14:	eb002a76 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40017f18:	e59d001c 	ldr	r0, [sp, #28]
40017f1c:	e59f1068 	ldr	r1, [pc, #104]	; 40017f8c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017f20:	e0018820 	and	r8, r1, r0, lsr #16
40017f24:	e284101c 	add	r1, r4, #28
40017f28:	e0811089 	add	r1, r1, r9, lsl #1
40017f2c:	e59d000c 	ldr	r0, [sp, #12]
40017f30:	e1c100b0 	strh	r0, [r1]
40017f34:	e2890001 	add	r0, r9, #1
40017f38:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017f3c:	e1d400ba 	ldrh	r0, [r4, #10]
40017f40:	e1500009 	cmp	r0, r9
40017f44:	caffffaf 	bgt	40017e08 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017f48:	e2870001 	add	r0, r7, #1
40017f4c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017f50:	e1d400b8 	ldrh	r0, [r4, #8]
40017f54:	e1500007 	cmp	r0, r7
40017f58:	caffffa8 	bgt	40017e00 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017f5c:	e1d401b4 	ldrh	r0, [r4, #20]
40017f60:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017f64:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017f68:	e1d401bc 	ldrh	r0, [r4, #28]
40017f6c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017f70:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017f74:	e2840034 	add	r0, r4, #52	; 0x34
40017f78:	eb0029ca 	bl	400226a8 <CyU3PDmaDscrGet>
40017f7c:	e1a00004 	mov	r0, r4
40017f80:	eb0004a3 	bl	40019214 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017f84:	e3a00000 	mov	r0, #0
40017f88:	eaffff59 	b	40017cf4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017f8c:	0000ffff 	.word	0x0000ffff
40017f90:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017f94 <CyU3PDmaMultiChannelCreate>:
40017f94:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017f98:	e1a04000 	mov	r4, r0
40017f9c:	e1a05001 	mov	r5, r1
40017fa0:	e1a06002 	mov	r6, r2
40017fa4:	e3560000 	cmp	r6, #0
40017fa8:	1a000001 	bne	40017fb4 <CyU3PDmaMultiChannelCreate+0x20>
40017fac:	e3a00041 	mov	r0, #65	; 0x41
40017fb0:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017fb4:	e3540000 	cmp	r4, #0
40017fb8:	1a000001 	bne	40017fc4 <CyU3PDmaMultiChannelCreate+0x30>
40017fbc:	e3a00041 	mov	r0, #65	; 0x41
40017fc0:	eafffffa 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40017fc4:	e1d600b2 	ldrh	r0, [r6, #2]
40017fc8:	e3500000 	cmp	r0, #0
40017fcc:	1a000001 	bne	40017fd8 <CyU3PDmaMultiChannelCreate+0x44>
40017fd0:	e3a00040 	mov	r0, #64	; 0x40
40017fd4:	eafffff5 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40017fd8:	e1d600b4 	ldrh	r0, [r6, #4]
40017fdc:	e3500002 	cmp	r0, #2
40017fe0:	ba000002 	blt	40017ff0 <CyU3PDmaMultiChannelCreate+0x5c>
40017fe4:	e1d600b4 	ldrh	r0, [r6, #4]
40017fe8:	e3500004 	cmp	r0, #4
40017fec:	da000001 	ble	40017ff8 <CyU3PDmaMultiChannelCreate+0x64>
40017ff0:	e3a00040 	mov	r0, #64	; 0x40
40017ff4:	eaffffed 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40017ff8:	e3550006 	cmp	r5, #6
40017ffc:	0a000001 	beq	40018008 <CyU3PDmaMultiChannelCreate+0x74>
40018000:	e3550005 	cmp	r5, #5
40018004:	1a000007 	bne	40018028 <CyU3PDmaMultiChannelCreate+0x94>
40018008:	eb0029de 	bl	40022788 <CyU3PDmaDscrGetFreeCount>
4001800c:	e1d610b2 	ldrh	r1, [r6, #2]
40018010:	e1d620b4 	ldrh	r2, [r6, #4]
40018014:	e0010192 	mul	r1, r2, r1
40018018:	e1500001 	cmp	r0, r1
4001801c:	ca000016 	bgt	4001807c <CyU3PDmaMultiChannelCreate+0xe8>
40018020:	e3a00010 	mov	r0, #16
40018024:	eaffffe1 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018028:	e3550008 	cmp	r5, #8
4001802c:	0a000001 	beq	40018038 <CyU3PDmaMultiChannelCreate+0xa4>
40018030:	e3550007 	cmp	r5, #7
40018034:	1a000007 	bne	40018058 <CyU3PDmaMultiChannelCreate+0xc4>
40018038:	eb0029d2 	bl	40022788 <CyU3PDmaDscrGetFreeCount>
4001803c:	e1d610b2 	ldrh	r1, [r6, #2]
40018040:	e1d620b4 	ldrh	r2, [r6, #4]
40018044:	e0010192 	mul	r1, r2, r1
40018048:	e1500081 	cmp	r0, r1, lsl #1
4001804c:	ca00000a 	bgt	4001807c <CyU3PDmaMultiChannelCreate+0xe8>
40018050:	e3a00010 	mov	r0, #16
40018054:	eaffffd5 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018058:	eb0029ca 	bl	40022788 <CyU3PDmaDscrGetFreeCount>
4001805c:	e1d610b2 	ldrh	r1, [r6, #2]
40018060:	e1d620b4 	ldrh	r2, [r6, #4]
40018064:	e2822001 	add	r2, r2, #1
40018068:	e0010192 	mul	r1, r2, r1
4001806c:	e1500001 	cmp	r0, r1
40018070:	ca000001 	bgt	4001807c <CyU3PDmaMultiChannelCreate+0xe8>
40018074:	e3a00010 	mov	r0, #16
40018078:	eaffffcc 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
4001807c:	e1d600b0 	ldrh	r0, [r6]
40018080:	e3500000 	cmp	r0, #0
40018084:	0a000003 	beq	40018098 <CyU3PDmaMultiChannelCreate+0x104>
40018088:	e1d600b0 	ldrh	r0, [r6]
4001808c:	e59f1634 	ldr	r1, [pc, #1588]	; 400186c8 <CyU3PDmaMultiChannelCreate+0x734>
40018090:	e1500001 	cmp	r0, r1
40018094:	da000001 	ble	400180a0 <CyU3PDmaMultiChannelCreate+0x10c>
40018098:	e3a00040 	mov	r0, #64	; 0x40
4001809c:	eaffffc3 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400180a0:	e3550005 	cmp	r5, #5
400180a4:	0a000001 	beq	400180b0 <CyU3PDmaMultiChannelCreate+0x11c>
400180a8:	e3550006 	cmp	r5, #6
400180ac:	1a000004 	bne	400180c4 <CyU3PDmaMultiChannelCreate+0x130>
400180b0:	e1d600b0 	ldrh	r0, [r6]
400180b4:	e310000f 	tst	r0, #15
400180b8:	0a00000b 	beq	400180ec <CyU3PDmaMultiChannelCreate+0x158>
400180bc:	e3a00040 	mov	r0, #64	; 0x40
400180c0:	eaffffba 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400180c4:	e1d600b0 	ldrh	r0, [r6]
400180c8:	e1d611b8 	ldrh	r1, [r6, #24]
400180cc:	e0400001 	sub	r0, r0, r1
400180d0:	e1d611ba 	ldrh	r1, [r6, #26]
400180d4:	e0400001 	sub	r0, r0, r1
400180d8:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
400180dc:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
400180e0:	0a000001 	beq	400180ec <CyU3PDmaMultiChannelCreate+0x158>
400180e4:	e3a00040 	mov	r0, #64	; 0x40
400180e8:	eaffffb0 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400180ec:	e5d6001e 	ldrb	r0, [r6, #30]
400180f0:	e3500002 	cmp	r0, #2
400180f4:	ba000001 	blt	40018100 <CyU3PDmaMultiChannelCreate+0x16c>
400180f8:	e3a00040 	mov	r0, #64	; 0x40
400180fc:	eaffffab 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018100:	e3550005 	cmp	r5, #5
40018104:	0a000001 	beq	40018110 <CyU3PDmaMultiChannelCreate+0x17c>
40018108:	e3550007 	cmp	r5, #7
4001810c:	1a000065 	bne	400182a8 <CyU3PDmaMultiChannelCreate+0x314>
40018110:	e1d601b6 	ldrh	r0, [r6, #22]
40018114:	e3500000 	cmp	r0, #0
40018118:	0a000008 	beq	40018140 <CyU3PDmaMultiChannelCreate+0x1ac>
4001811c:	e1d601b6 	ldrh	r0, [r6, #22]
40018120:	e1d610b2 	ldrh	r1, [r6, #2]
40018124:	e1500001 	cmp	r0, r1
40018128:	aa000002 	bge	40018138 <CyU3PDmaMultiChannelCreate+0x1a4>
4001812c:	e1d600b2 	ldrh	r0, [r6, #2]
40018130:	e350001f 	cmp	r0, #31
40018134:	da000001 	ble	40018140 <CyU3PDmaMultiChannelCreate+0x1ac>
40018138:	e3a00040 	mov	r0, #64	; 0x40
4001813c:	eaffff9b 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018140:	e3a09000 	mov	r9, #0
40018144:	ea00002b 	b	400181f8 <CyU3PDmaMultiChannelCreate+0x264>
40018148:	e2860006 	add	r0, r6, #6
4001814c:	e0800089 	add	r0, r0, r9, lsl #1
40018150:	e1d000b0 	ldrh	r0, [r0]
40018154:	e3a0103f 	mov	r1, #63	; 0x3f
40018158:	e0018440 	and	r8, r1, r0, asr #8
4001815c:	e2860006 	add	r0, r6, #6
40018160:	e0800089 	add	r0, r0, r9, lsl #1
40018164:	e1d000b0 	ldrh	r0, [r0]
40018168:	e20070ff 	and	r7, r0, #255	; 0xff
4001816c:	e2861006 	add	r1, r6, #6
40018170:	e0811089 	add	r1, r1, r9, lsl #1
40018174:	e1d100b0 	ldrh	r0, [r1]
40018178:	ebfff3c4 	bl	40015090 <CyU3PDmaSocketIsValidProducer>
4001817c:	e3500000 	cmp	r0, #0
40018180:	1a000001 	bne	4001818c <CyU3PDmaMultiChannelCreate+0x1f8>
40018184:	e3a00040 	mov	r0, #64	; 0x40
40018188:	eaffff88 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
4001818c:	e59f0538 	ldr	r0, [pc, #1336]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
40018190:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018194:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018198:	e3500000 	cmp	r0, #0
4001819c:	0a000001 	beq	400181a8 <CyU3PDmaMultiChannelCreate+0x214>
400181a0:	e3a00040 	mov	r0, #64	; 0x40
400181a4:	eaffff81 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400181a8:	e2890001 	add	r0, r9, #1
400181ac:	e200a0ff 	and	sl, r0, #255	; 0xff
400181b0:	ea00000b 	b	400181e4 <CyU3PDmaMultiChannelCreate+0x250>
400181b4:	e2860006 	add	r0, r6, #6
400181b8:	e0800089 	add	r0, r0, r9, lsl #1
400181bc:	e1d000b0 	ldrh	r0, [r0]
400181c0:	e2861006 	add	r1, r6, #6
400181c4:	e081108a 	add	r1, r1, sl, lsl #1
400181c8:	e1d110b0 	ldrh	r1, [r1]
400181cc:	e1500001 	cmp	r0, r1
400181d0:	1a000001 	bne	400181dc <CyU3PDmaMultiChannelCreate+0x248>
400181d4:	e3a00040 	mov	r0, #64	; 0x40
400181d8:	eaffff74 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400181dc:	e28a0001 	add	r0, sl, #1
400181e0:	e200a0ff 	and	sl, r0, #255	; 0xff
400181e4:	e1d600b4 	ldrh	r0, [r6, #4]
400181e8:	e150000a 	cmp	r0, sl
400181ec:	cafffff0 	bgt	400181b4 <CyU3PDmaMultiChannelCreate+0x220>
400181f0:	e2890001 	add	r0, r9, #1
400181f4:	e20090ff 	and	r9, r0, #255	; 0xff
400181f8:	e1d600b4 	ldrh	r0, [r6, #4]
400181fc:	e1500009 	cmp	r0, r9
40018200:	caffffd0 	bgt	40018148 <CyU3PDmaMultiChannelCreate+0x1b4>
40018204:	e1d600be 	ldrh	r0, [r6, #14]
40018208:	e3a0103f 	mov	r1, #63	; 0x3f
4001820c:	e0018440 	and	r8, r1, r0, asr #8
40018210:	e1d600be 	ldrh	r0, [r6, #14]
40018214:	e20070ff 	and	r7, r0, #255	; 0xff
40018218:	e1d600be 	ldrh	r0, [r6, #14]
4001821c:	ebfff363 	bl	40014fb0 <CyU3PDmaSocketIsValidConsumer>
40018220:	e3500000 	cmp	r0, #0
40018224:	1a000001 	bne	40018230 <CyU3PDmaMultiChannelCreate+0x29c>
40018228:	e3a00040 	mov	r0, #64	; 0x40
4001822c:	eaffff5f 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018230:	e59f0494 	ldr	r0, [pc, #1172]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
40018234:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018238:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001823c:	e3500000 	cmp	r0, #0
40018240:	0a000001 	beq	4001824c <CyU3PDmaMultiChannelCreate+0x2b8>
40018244:	e3a00040 	mov	r0, #64	; 0x40
40018248:	eaffff58 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
4001824c:	e59f0478 	ldr	r0, [pc, #1144]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
40018250:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018254:	e7804107 	str	r4, [r0, r7, lsl #2]
40018258:	e3a09000 	mov	r9, #0
4001825c:	ea00000d 	b	40018298 <CyU3PDmaMultiChannelCreate+0x304>
40018260:	e2860006 	add	r0, r6, #6
40018264:	e0800089 	add	r0, r0, r9, lsl #1
40018268:	e1d000b0 	ldrh	r0, [r0]
4001826c:	e3a0103f 	mov	r1, #63	; 0x3f
40018270:	e0018440 	and	r8, r1, r0, asr #8
40018274:	e2860006 	add	r0, r6, #6
40018278:	e0800089 	add	r0, r0, r9, lsl #1
4001827c:	e1d000b0 	ldrh	r0, [r0]
40018280:	e20070ff 	and	r7, r0, #255	; 0xff
40018284:	e59f0440 	ldr	r0, [pc, #1088]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
40018288:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001828c:	e7804107 	str	r4, [r0, r7, lsl #2]
40018290:	e2890001 	add	r0, r9, #1
40018294:	e20090ff 	and	r9, r0, #255	; 0xff
40018298:	e1d600b4 	ldrh	r0, [r6, #4]
4001829c:	e1500009 	cmp	r0, r9
400182a0:	caffffee 	bgt	40018260 <CyU3PDmaMultiChannelCreate+0x2cc>
400182a4:	ea00005d 	b	40018420 <CyU3PDmaMultiChannelCreate+0x48c>
400182a8:	e1d601b6 	ldrh	r0, [r6, #22]
400182ac:	e3500000 	cmp	r0, #0
400182b0:	0a000001 	beq	400182bc <CyU3PDmaMultiChannelCreate+0x328>
400182b4:	e3a00040 	mov	r0, #64	; 0x40
400182b8:	eaffff3c 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400182bc:	e3a09000 	mov	r9, #0
400182c0:	ea00002b 	b	40018374 <CyU3PDmaMultiChannelCreate+0x3e0>
400182c4:	e286000e 	add	r0, r6, #14
400182c8:	e0800089 	add	r0, r0, r9, lsl #1
400182cc:	e1d000b0 	ldrh	r0, [r0]
400182d0:	e3a0103f 	mov	r1, #63	; 0x3f
400182d4:	e0018440 	and	r8, r1, r0, asr #8
400182d8:	e286000e 	add	r0, r6, #14
400182dc:	e0800089 	add	r0, r0, r9, lsl #1
400182e0:	e1d000b0 	ldrh	r0, [r0]
400182e4:	e20070ff 	and	r7, r0, #255	; 0xff
400182e8:	e286100e 	add	r1, r6, #14
400182ec:	e0811089 	add	r1, r1, r9, lsl #1
400182f0:	e1d100b0 	ldrh	r0, [r1]
400182f4:	ebfff32d 	bl	40014fb0 <CyU3PDmaSocketIsValidConsumer>
400182f8:	e3500000 	cmp	r0, #0
400182fc:	1a000001 	bne	40018308 <CyU3PDmaMultiChannelCreate+0x374>
40018300:	e3a00040 	mov	r0, #64	; 0x40
40018304:	eaffff29 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018308:	e59f03bc 	ldr	r0, [pc, #956]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
4001830c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018310:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018314:	e3500000 	cmp	r0, #0
40018318:	0a000001 	beq	40018324 <CyU3PDmaMultiChannelCreate+0x390>
4001831c:	e3a00040 	mov	r0, #64	; 0x40
40018320:	eaffff22 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018324:	e2890001 	add	r0, r9, #1
40018328:	e200a0ff 	and	sl, r0, #255	; 0xff
4001832c:	ea00000b 	b	40018360 <CyU3PDmaMultiChannelCreate+0x3cc>
40018330:	e286000e 	add	r0, r6, #14
40018334:	e0800089 	add	r0, r0, r9, lsl #1
40018338:	e1d000b0 	ldrh	r0, [r0]
4001833c:	e286100e 	add	r1, r6, #14
40018340:	e081108a 	add	r1, r1, sl, lsl #1
40018344:	e1d110b0 	ldrh	r1, [r1]
40018348:	e1500001 	cmp	r0, r1
4001834c:	1a000001 	bne	40018358 <CyU3PDmaMultiChannelCreate+0x3c4>
40018350:	e3a00040 	mov	r0, #64	; 0x40
40018354:	eaffff15 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
40018358:	e28a0001 	add	r0, sl, #1
4001835c:	e200a0ff 	and	sl, r0, #255	; 0xff
40018360:	e1d600b4 	ldrh	r0, [r6, #4]
40018364:	e150000a 	cmp	r0, sl
40018368:	cafffff0 	bgt	40018330 <CyU3PDmaMultiChannelCreate+0x39c>
4001836c:	e2890001 	add	r0, r9, #1
40018370:	e20090ff 	and	r9, r0, #255	; 0xff
40018374:	e1d600b4 	ldrh	r0, [r6, #4]
40018378:	e1500009 	cmp	r0, r9
4001837c:	caffffd0 	bgt	400182c4 <CyU3PDmaMultiChannelCreate+0x330>
40018380:	e1d600b6 	ldrh	r0, [r6, #6]
40018384:	e3a0103f 	mov	r1, #63	; 0x3f
40018388:	e0018440 	and	r8, r1, r0, asr #8
4001838c:	e1d600b6 	ldrh	r0, [r6, #6]
40018390:	e20070ff 	and	r7, r0, #255	; 0xff
40018394:	e1d600b6 	ldrh	r0, [r6, #6]
40018398:	ebfff33c 	bl	40015090 <CyU3PDmaSocketIsValidProducer>
4001839c:	e3500000 	cmp	r0, #0
400183a0:	1a000001 	bne	400183ac <CyU3PDmaMultiChannelCreate+0x418>
400183a4:	e3a00040 	mov	r0, #64	; 0x40
400183a8:	eaffff00 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400183ac:	e59f0318 	ldr	r0, [pc, #792]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
400183b0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400183b4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400183b8:	e3500000 	cmp	r0, #0
400183bc:	0a000001 	beq	400183c8 <CyU3PDmaMultiChannelCreate+0x434>
400183c0:	e3a00040 	mov	r0, #64	; 0x40
400183c4:	eafffef9 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400183c8:	e59f02fc 	ldr	r0, [pc, #764]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
400183cc:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400183d0:	e7804107 	str	r4, [r0, r7, lsl #2]
400183d4:	e3a09000 	mov	r9, #0
400183d8:	ea00000d 	b	40018414 <CyU3PDmaMultiChannelCreate+0x480>
400183dc:	e286000e 	add	r0, r6, #14
400183e0:	e0800089 	add	r0, r0, r9, lsl #1
400183e4:	e1d000b0 	ldrh	r0, [r0]
400183e8:	e3a0103f 	mov	r1, #63	; 0x3f
400183ec:	e0018440 	and	r8, r1, r0, asr #8
400183f0:	e286000e 	add	r0, r6, #14
400183f4:	e0800089 	add	r0, r0, r9, lsl #1
400183f8:	e1d000b0 	ldrh	r0, [r0]
400183fc:	e20070ff 	and	r7, r0, #255	; 0xff
40018400:	e59f02c4 	ldr	r0, [pc, #708]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
40018404:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018408:	e7804107 	str	r4, [r0, r7, lsl #2]
4001840c:	e2890001 	add	r0, r9, #1
40018410:	e20090ff 	and	r9, r0, #255	; 0xff
40018414:	e1d600b4 	ldrh	r0, [r6, #4]
40018418:	e1500009 	cmp	r0, r9
4001841c:	caffffee 	bgt	400183dc <CyU3PDmaMultiChannelCreate+0x448>
40018420:	e1c450b4 	strh	r5, [r4, #4]
40018424:	e1d600b0 	ldrh	r0, [r6]
40018428:	e1c400b6 	strh	r0, [r4, #6]
4001842c:	e1d600b2 	ldrh	r0, [r6, #2]
40018430:	e1c400b8 	strh	r0, [r4, #8]
40018434:	e1d601b6 	ldrh	r0, [r6, #22]
40018438:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
4001843c:	e1d600b4 	ldrh	r0, [r6, #4]
40018440:	e1c400ba 	strh	r0, [r4, #10]
40018444:	e3a09000 	mov	r9, #0
40018448:	ea000014 	b	400184a0 <CyU3PDmaMultiChannelCreate+0x50c>
4001844c:	e2860006 	add	r0, r6, #6
40018450:	e0800089 	add	r0, r0, r9, lsl #1
40018454:	e1d000b0 	ldrh	r0, [r0]
40018458:	e2841024 	add	r1, r4, #36	; 0x24
4001845c:	e0811089 	add	r1, r1, r9, lsl #1
40018460:	e1c100b0 	strh	r0, [r1]
40018464:	e286000e 	add	r0, r6, #14
40018468:	e0800089 	add	r0, r0, r9, lsl #1
4001846c:	e1d000b0 	ldrh	r0, [r0]
40018470:	e284102c 	add	r1, r4, #44	; 0x2c
40018474:	e0811089 	add	r1, r1, r9, lsl #1
40018478:	e1c100b0 	strh	r0, [r1]
4001847c:	e3a00000 	mov	r0, #0
40018480:	e284105c 	add	r1, r4, #92	; 0x5c
40018484:	e0811089 	add	r1, r1, r9, lsl #1
40018488:	e1c100b0 	strh	r0, [r1]
4001848c:	e2841064 	add	r1, r4, #100	; 0x64
40018490:	e0811089 	add	r1, r1, r9, lsl #1
40018494:	e1c100b0 	strh	r0, [r1]
40018498:	e2890001 	add	r0, r9, #1
4001849c:	e20090ff 	and	r9, r0, #255	; 0xff
400184a0:	e3590004 	cmp	r9, #4
400184a4:	baffffe8 	blt	4001844c <CyU3PDmaMultiChannelCreate+0x4b8>
400184a8:	e1d601b8 	ldrh	r0, [r6, #24]
400184ac:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
400184b0:	e1d601ba 	ldrh	r0, [r6, #26]
400184b4:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
400184b8:	e1d601bc 	ldrh	r0, [r6, #28]
400184bc:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
400184c0:	e5d6001e 	ldrb	r0, [r6, #30]
400184c4:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
400184c8:	e5960020 	ldr	r0, [r6, #32]
400184cc:	e584006c 	str	r0, [r4, #108]	; 0x6c
400184d0:	e3a03038 	mov	r3, #56	; 0x38
400184d4:	e3a02000 	mov	r2, #0
400184d8:	e1a01002 	mov	r1, r2
400184dc:	e2840078 	add	r0, r4, #120	; 0x78
400184e0:	ebffc70b 	bl	4000a114 <_txe_mutex_create>
400184e4:	e3a02028 	mov	r2, #40	; 0x28
400184e8:	e3a01000 	mov	r1, #0
400184ec:	e28400b0 	add	r0, r4, #176	; 0xb0
400184f0:	ebffc64d 	bl	40009e2c <_txe_event_flags_create>
400184f4:	e5960024 	ldr	r0, [r6, #36]	; 0x24
400184f8:	e58400d8 	str	r0, [r4, #216]	; 0xd8
400184fc:	e59f01cc 	ldr	r0, [pc, #460]	; 400186d0 <CyU3PDmaMultiChannelCreate+0x73c>
40018500:	e5900000 	ldr	r0, [r0]
40018504:	e5840074 	str	r0, [r4, #116]	; 0x74
40018508:	e2450005 	sub	r0, r5, #5
4001850c:	e3500005 	cmp	r0, #5
40018510:	308ff100 	addcc	pc, pc, r0, lsl #2
40018514:	ea00001d 	b	40018590 <CyU3PDmaMultiChannelCreate+0x5fc>
40018518:	ea000003 	b	4001852c <CyU3PDmaMultiChannelCreate+0x598>
4001851c:	ea000008 	b	40018544 <CyU3PDmaMultiChannelCreate+0x5b0>
40018520:	ea000003 	b	40018534 <CyU3PDmaMultiChannelCreate+0x5a0>
40018524:	ea000008 	b	4001854c <CyU3PDmaMultiChannelCreate+0x5b8>
40018528:	ea00000b 	b	4001855c <CyU3PDmaMultiChannelCreate+0x5c8>
4001852c:	e1a00000 	nop			; (mov r0, r0)
40018530:	e1a00000 	nop			; (mov r0, r0)
40018534:	e1a00004 	mov	r0, r4
40018538:	ebfffd1c 	bl	400179b0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
4001853c:	e1a0b000 	mov	fp, r0
40018540:	ea000015 	b	4001859c <CyU3PDmaMultiChannelCreate+0x608>
40018544:	e1a00000 	nop			; (mov r0, r0)
40018548:	e1a00000 	nop			; (mov r0, r0)
4001854c:	e1a00004 	mov	r0, r4
40018550:	ebfffdd1 	bl	40017c9c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018554:	e1a0b000 	mov	fp, r0
40018558:	ea00000f 	b	4001859c <CyU3PDmaMultiChannelCreate+0x608>
4001855c:	e1a00000 	nop			; (mov r0, r0)
40018560:	e59f016c 	ldr	r0, [pc, #364]	; 400186d4 <CyU3PDmaMultiChannelCreate+0x740>
40018564:	e5900000 	ldr	r0, [r0]
40018568:	e3500000 	cmp	r0, #0
4001856c:	1a000001 	bne	40018578 <CyU3PDmaMultiChannelCreate+0x5e4>
40018570:	e3a0b047 	mov	fp, #71	; 0x47
40018574:	ea000004 	b	4001858c <CyU3PDmaMultiChannelCreate+0x5f8>
40018578:	e1a00004 	mov	r0, r4
4001857c:	e59f1150 	ldr	r1, [pc, #336]	; 400186d4 <CyU3PDmaMultiChannelCreate+0x740>
40018580:	e5911000 	ldr	r1, [r1]
40018584:	e12fff31 	blx	r1
40018588:	e1a0b000 	mov	fp, r0
4001858c:	ea000002 	b	4001859c <CyU3PDmaMultiChannelCreate+0x608>
40018590:	e1a00000 	nop			; (mov r0, r0)
40018594:	e3a0b040 	mov	fp, #64	; 0x40
40018598:	e1a00000 	nop			; (mov r0, r0)
4001859c:	e1a00000 	nop			; (mov r0, r0)
400185a0:	e35b0000 	cmp	fp, #0
400185a4:	1a000002 	bne	400185b4 <CyU3PDmaMultiChannelCreate+0x620>
400185a8:	e3a00001 	mov	r0, #1
400185ac:	e5840000 	str	r0, [r4]
400185b0:	ea000042 	b	400186c0 <CyU3PDmaMultiChannelCreate+0x72c>
400185b4:	e2840078 	add	r0, r4, #120	; 0x78
400185b8:	ebffc733 	bl	4000a28c <_txe_mutex_delete>
400185bc:	e28400b0 	add	r0, r4, #176	; 0xb0
400185c0:	ebffc669 	bl	40009f6c <_txe_event_flags_delete>
400185c4:	e3550005 	cmp	r5, #5
400185c8:	0a000001 	beq	400185d4 <CyU3PDmaMultiChannelCreate+0x640>
400185cc:	e3550007 	cmp	r5, #7
400185d0:	1a00001d 	bne	4001864c <CyU3PDmaMultiChannelCreate+0x6b8>
400185d4:	e1d600be 	ldrh	r0, [r6, #14]
400185d8:	e3a0103f 	mov	r1, #63	; 0x3f
400185dc:	e0018440 	and	r8, r1, r0, asr #8
400185e0:	e1d600be 	ldrh	r0, [r6, #14]
400185e4:	e20070ff 	and	r7, r0, #255	; 0xff
400185e8:	e3a00000 	mov	r0, #0
400185ec:	e59f10d8 	ldr	r1, [pc, #216]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
400185f0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400185f4:	e7810107 	str	r0, [r1, r7, lsl #2]
400185f8:	e3a09000 	mov	r9, #0
400185fc:	ea00000e 	b	4001863c <CyU3PDmaMultiChannelCreate+0x6a8>
40018600:	e2860006 	add	r0, r6, #6
40018604:	e0800089 	add	r0, r0, r9, lsl #1
40018608:	e1d000b0 	ldrh	r0, [r0]
4001860c:	e3a0103f 	mov	r1, #63	; 0x3f
40018610:	e0018440 	and	r8, r1, r0, asr #8
40018614:	e2860006 	add	r0, r6, #6
40018618:	e0800089 	add	r0, r0, r9, lsl #1
4001861c:	e1d000b0 	ldrh	r0, [r0]
40018620:	e20070ff 	and	r7, r0, #255	; 0xff
40018624:	e3a00000 	mov	r0, #0
40018628:	e59f109c 	ldr	r1, [pc, #156]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
4001862c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018630:	e7810107 	str	r0, [r1, r7, lsl #2]
40018634:	e2890001 	add	r0, r9, #1
40018638:	e20090ff 	and	r9, r0, #255	; 0xff
4001863c:	e1d600b4 	ldrh	r0, [r6, #4]
40018640:	e1500009 	cmp	r0, r9
40018644:	caffffed 	bgt	40018600 <CyU3PDmaMultiChannelCreate+0x66c>
40018648:	ea00001c 	b	400186c0 <CyU3PDmaMultiChannelCreate+0x72c>
4001864c:	e1d600b6 	ldrh	r0, [r6, #6]
40018650:	e3a0103f 	mov	r1, #63	; 0x3f
40018654:	e0018440 	and	r8, r1, r0, asr #8
40018658:	e1d600b6 	ldrh	r0, [r6, #6]
4001865c:	e20070ff 	and	r7, r0, #255	; 0xff
40018660:	e3a00000 	mov	r0, #0
40018664:	e59f1060 	ldr	r1, [pc, #96]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
40018668:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001866c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018670:	e3a09000 	mov	r9, #0
40018674:	ea00000e 	b	400186b4 <CyU3PDmaMultiChannelCreate+0x720>
40018678:	e286000e 	add	r0, r6, #14
4001867c:	e0800089 	add	r0, r0, r9, lsl #1
40018680:	e1d000b0 	ldrh	r0, [r0]
40018684:	e3a0103f 	mov	r1, #63	; 0x3f
40018688:	e0018440 	and	r8, r1, r0, asr #8
4001868c:	e286000e 	add	r0, r6, #14
40018690:	e0800089 	add	r0, r0, r9, lsl #1
40018694:	e1d000b0 	ldrh	r0, [r0]
40018698:	e20070ff 	and	r7, r0, #255	; 0xff
4001869c:	e3a00000 	mov	r0, #0
400186a0:	e59f1024 	ldr	r1, [pc, #36]	; 400186cc <CyU3PDmaMultiChannelCreate+0x738>
400186a4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400186a8:	e7810107 	str	r0, [r1, r7, lsl #2]
400186ac:	e2890001 	add	r0, r9, #1
400186b0:	e20090ff 	and	r9, r0, #255	; 0xff
400186b4:	e1d600b4 	ldrh	r0, [r6, #4]
400186b8:	e1500009 	cmp	r0, r9
400186bc:	caffffed 	bgt	40018678 <CyU3PDmaMultiChannelCreate+0x6e4>
400186c0:	e1a0000b 	mov	r0, fp
400186c4:	eafffe39 	b	40017fb0 <CyU3PDmaMultiChannelCreate+0x1c>
400186c8:	0000fff0 	.word	0x0000fff0
400186cc:	40030d20 	.word	0x40030d20
400186d0:	40030c84 	.word	0x40030c84
400186d4:	40030d0c 	.word	0x40030d0c

Disassembly of section i.CyU3PDmaMultiChannelReset:

400186d8 <CyU3PDmaMultiChannelReset>:
400186d8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400186dc:	e1a04000 	mov	r4, r0
400186e0:	e3e01000 	mvn	r1, #0
400186e4:	e1a00004 	mov	r0, r4
400186e8:	ebfffbab 	bl	4001759c <CyU3PDmaMultiChannelAcquireLock>
400186ec:	e1a06000 	mov	r6, r0
400186f0:	e3560000 	cmp	r6, #0
400186f4:	0a000001 	beq	40018700 <CyU3PDmaMultiChannelReset+0x28>
400186f8:	e1a00006 	mov	r0, r6
400186fc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40018700:	e1d400b4 	ldrh	r0, [r4, #4]
40018704:	e2400005 	sub	r0, r0, #5
40018708:	e3500005 	cmp	r0, #5
4001870c:	308ff100 	addcc	pc, pc, r0, lsl #2
40018710:	ea00001a 	b	40018780 <CyU3PDmaMultiChannelReset+0xa8>
40018714:	ea000003 	b	40018728 <CyU3PDmaMultiChannelReset+0x50>
40018718:	ea000007 	b	4001873c <CyU3PDmaMultiChannelReset+0x64>
4001871c:	ea000003 	b	40018730 <CyU3PDmaMultiChannelReset+0x58>
40018720:	ea000007 	b	40018744 <CyU3PDmaMultiChannelReset+0x6c>
40018724:	ea000009 	b	40018750 <CyU3PDmaMultiChannelReset+0x78>
40018728:	e1a00000 	nop			; (mov r0, r0)
4001872c:	e1a00000 	nop			; (mov r0, r0)
40018730:	e1a00004 	mov	r0, r4
40018734:	eb00003c 	bl	4001882c <CyU3PDmaMultiChannelReset_TypeManyToOne>
40018738:	ea000012 	b	40018788 <CyU3PDmaMultiChannelReset+0xb0>
4001873c:	e1a00000 	nop			; (mov r0, r0)
40018740:	e1a00000 	nop			; (mov r0, r0)
40018744:	e1a00004 	mov	r0, r4
40018748:	eb000083 	bl	4001895c <CyU3PDmaMultiChannelReset_TypeOneToMany>
4001874c:	ea00000d 	b	40018788 <CyU3PDmaMultiChannelReset+0xb0>
40018750:	e1a00000 	nop			; (mov r0, r0)
40018754:	e59f00cc 	ldr	r0, [pc, #204]	; 40018828 <CyU3PDmaMultiChannelReset+0x150>
40018758:	e5900000 	ldr	r0, [r0]
4001875c:	e3500000 	cmp	r0, #0
40018760:	1a000001 	bne	4001876c <CyU3PDmaMultiChannelReset+0x94>
40018764:	e3a00047 	mov	r0, #71	; 0x47
40018768:	eaffffe3 	b	400186fc <CyU3PDmaMultiChannelReset+0x24>
4001876c:	e1a00004 	mov	r0, r4
40018770:	e59f10b0 	ldr	r1, [pc, #176]	; 40018828 <CyU3PDmaMultiChannelReset+0x150>
40018774:	e5911000 	ldr	r1, [r1]
40018778:	e12fff31 	blx	r1
4001877c:	ea000001 	b	40018788 <CyU3PDmaMultiChannelReset+0xb0>
40018780:	e1a00000 	nop			; (mov r0, r0)
40018784:	e1a00000 	nop			; (mov r0, r0)
40018788:	e1a00000 	nop			; (mov r0, r0)
4001878c:	ebffc0c9 	bl	40008ab8 <_tx_thread_identify>
40018790:	e1a05000 	mov	r5, r0
40018794:	e3550000 	cmp	r5, #0
40018798:	0a000003 	beq	400187ac <CyU3PDmaMultiChannelReset+0xd4>
4001879c:	e1a0200d 	mov	r2, sp
400187a0:	e3a01002 	mov	r1, #2
400187a4:	e1a00005 	mov	r0, r5
400187a8:	ebffc8d0 	bl	4000aaf0 <_txe_thread_priority_change>
400187ac:	e3a02002 	mov	r2, #2
400187b0:	e3e01047 	mvn	r1, #71	; 0x47
400187b4:	e28400b0 	add	r0, r4, #176	; 0xb0
400187b8:	ebffc63b 	bl	4000a0ac <_txe_event_flags_set>
400187bc:	e3a02000 	mov	r2, #0
400187c0:	e3a01020 	mov	r1, #32
400187c4:	e28400b0 	add	r0, r4, #176	; 0xb0
400187c8:	ebffc637 	bl	4000a0ac <_txe_event_flags_set>
400187cc:	e3a00001 	mov	r0, #1
400187d0:	e5840000 	str	r0, [r4]
400187d4:	e2840078 	add	r0, r4, #120	; 0x78
400187d8:	ebffc700 	bl	4000a3e0 <_txe_mutex_put>
400187dc:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400187e0:	e3500000 	cmp	r0, #0
400187e4:	0a000007 	beq	40018808 <CyU3PDmaMultiChannelReset+0x130>
400187e8:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
400187ec:	e3100020 	tst	r0, #32
400187f0:	0a000004 	beq	40018808 <CyU3PDmaMultiChannelReset+0x130>
400187f4:	e3a02000 	mov	r2, #0
400187f8:	e3a01020 	mov	r1, #32
400187fc:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
40018800:	e1a00004 	mov	r0, r4
40018804:	e12fff33 	blx	r3
40018808:	e3550000 	cmp	r5, #0
4001880c:	0a000003 	beq	40018820 <CyU3PDmaMultiChannelReset+0x148>
40018810:	e1a0200d 	mov	r2, sp
40018814:	e1a00005 	mov	r0, r5
40018818:	e59d1000 	ldr	r1, [sp]
4001881c:	ebffc8b3 	bl	4000aaf0 <_txe_thread_priority_change>
40018820:	e3a00000 	mov	r0, #0
40018824:	eaffffb4 	b	400186fc <CyU3PDmaMultiChannelReset+0x24>
40018828:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

4001882c <CyU3PDmaMultiChannelReset_TypeManyToOne>:
4001882c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018830:	e1a04000 	mov	r4, r0
40018834:	e1a00004 	mov	r0, r4
40018838:	eb000215 	bl	40019094 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
4001883c:	e1d451bc 	ldrh	r5, [r4, #28]
40018840:	e1d400b8 	ldrh	r0, [r4, #8]
40018844:	e1d410ba 	ldrh	r1, [r4, #10]
40018848:	e0000091 	mul	r0, r1, r0
4001884c:	e1a06800 	lsl	r6, r0, #16
40018850:	e1a06826 	lsr	r6, r6, #16
40018854:	ea00000c 	b	4001888c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018858:	e1a0100d 	mov	r1, sp
4001885c:	e1a00005 	mov	r0, r5
40018860:	eb002808 	bl	40022888 <CyU3PDmaDscrGetConfig>
40018864:	e59d000c 	ldr	r0, [sp, #12]
40018868:	e59f10e4 	ldr	r1, [pc, #228]	; 40018954 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
4001886c:	e0000001 	and	r0, r0, r1
40018870:	e58d000c 	str	r0, [sp, #12]
40018874:	e1a0100d 	mov	r1, sp
40018878:	e1a00005 	mov	r0, r5
4001887c:	eb00281c 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40018880:	e59d0008 	ldr	r0, [sp, #8]
40018884:	e1a05800 	lsl	r5, r0, #16
40018888:	e1a05825 	lsr	r5, r5, #16
4001888c:	e1b00006 	movs	r0, r6
40018890:	e2461001 	sub	r1, r6, #1
40018894:	e1a06801 	lsl	r6, r1, #16
40018898:	e1a06826 	lsr	r6, r6, #16
4001889c:	1affffed 	bne	40018858 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
400188a0:	e1d400b4 	ldrh	r0, [r4, #4]
400188a4:	e3500007 	cmp	r0, #7
400188a8:	1a000021 	bne	40018934 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
400188ac:	e3a07000 	mov	r7, #0
400188b0:	ea00001c 	b	40018928 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
400188b4:	e2840014 	add	r0, r4, #20
400188b8:	e0800087 	add	r0, r0, r7, lsl #1
400188bc:	e1d000b0 	ldrh	r0, [r0]
400188c0:	e284103e 	add	r1, r4, #62	; 0x3e
400188c4:	e0811087 	add	r1, r1, r7, lsl #1
400188c8:	e1c100b0 	strh	r0, [r1]
400188cc:	e1a05000 	mov	r5, r0
400188d0:	e3a06000 	mov	r6, #0
400188d4:	ea00000e 	b	40018914 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
400188d8:	e1a0100d 	mov	r1, sp
400188dc:	e1a00005 	mov	r0, r5
400188e0:	eb0027e8 	bl	40022888 <CyU3PDmaDscrGetConfig>
400188e4:	e59d000c 	ldr	r0, [sp, #12]
400188e8:	e59f1064 	ldr	r1, [pc, #100]	; 40018954 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400188ec:	e0000001 	and	r0, r0, r1
400188f0:	e58d000c 	str	r0, [sp, #12]
400188f4:	e1a0100d 	mov	r1, sp
400188f8:	e1a00005 	mov	r0, r5
400188fc:	eb0027fc 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40018900:	e59d0008 	ldr	r0, [sp, #8]
40018904:	e59f104c 	ldr	r1, [pc, #76]	; 40018958 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
40018908:	e0015820 	and	r5, r1, r0, lsr #16
4001890c:	e2860001 	add	r0, r6, #1
40018910:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018914:	e1d400b8 	ldrh	r0, [r4, #8]
40018918:	e1500006 	cmp	r0, r6
4001891c:	caffffed 	bgt	400188d8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
40018920:	e2870001 	add	r0, r7, #1
40018924:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018928:	e1d400ba 	ldrh	r0, [r4, #10]
4001892c:	e1500007 	cmp	r0, r7
40018930:	caffffdf 	bgt	400188b4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
40018934:	e1d401b4 	ldrh	r0, [r4, #20]
40018938:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
4001893c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018940:	e1d401bc 	ldrh	r0, [r4, #28]
40018944:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018948:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001894c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018950:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018954:	0000fff0 	.word	0x0000fff0
40018958:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

4001895c <CyU3PDmaMultiChannelReset_TypeOneToMany>:
4001895c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018960:	e1a04000 	mov	r4, r0
40018964:	e1a00004 	mov	r0, r4
40018968:	eb000229 	bl	40019214 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
4001896c:	e1d451b4 	ldrh	r5, [r4, #20]
40018970:	e1d400b8 	ldrh	r0, [r4, #8]
40018974:	e1d410ba 	ldrh	r1, [r4, #10]
40018978:	e0000091 	mul	r0, r1, r0
4001897c:	e1a06800 	lsl	r6, r0, #16
40018980:	e1a06826 	lsr	r6, r6, #16
40018984:	ea00000c 	b	400189bc <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
40018988:	e1a0100d 	mov	r1, sp
4001898c:	e1a00005 	mov	r0, r5
40018990:	eb0027bc 	bl	40022888 <CyU3PDmaDscrGetConfig>
40018994:	e59d000c 	ldr	r0, [sp, #12]
40018998:	e59f10e4 	ldr	r1, [pc, #228]	; 40018a84 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
4001899c:	e0000001 	and	r0, r0, r1
400189a0:	e58d000c 	str	r0, [sp, #12]
400189a4:	e1a0100d 	mov	r1, sp
400189a8:	e1a00005 	mov	r0, r5
400189ac:	eb0027d0 	bl	400228f4 <CyU3PDmaDscrSetConfig>
400189b0:	e59d0008 	ldr	r0, [sp, #8]
400189b4:	e59f10cc 	ldr	r1, [pc, #204]	; 40018a88 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
400189b8:	e0015820 	and	r5, r1, r0, lsr #16
400189bc:	e1b00006 	movs	r0, r6
400189c0:	e2461001 	sub	r1, r6, #1
400189c4:	e1a06801 	lsl	r6, r1, #16
400189c8:	e1a06826 	lsr	r6, r6, #16
400189cc:	1affffed 	bne	40018988 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
400189d0:	e1d400b4 	ldrh	r0, [r4, #4]
400189d4:	e3500008 	cmp	r0, #8
400189d8:	1a000021 	bne	40018a64 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
400189dc:	e3a07000 	mov	r7, #0
400189e0:	ea00001c 	b	40018a58 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
400189e4:	e284001c 	add	r0, r4, #28
400189e8:	e0800087 	add	r0, r0, r7, lsl #1
400189ec:	e1d000b0 	ldrh	r0, [r0]
400189f0:	e2841046 	add	r1, r4, #70	; 0x46
400189f4:	e0811087 	add	r1, r1, r7, lsl #1
400189f8:	e1c100b0 	strh	r0, [r1]
400189fc:	e1a05000 	mov	r5, r0
40018a00:	e3a06000 	mov	r6, #0
40018a04:	ea00000e 	b	40018a44 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018a08:	e1a0100d 	mov	r1, sp
40018a0c:	e1a00005 	mov	r0, r5
40018a10:	eb00279c 	bl	40022888 <CyU3PDmaDscrGetConfig>
40018a14:	e59d000c 	ldr	r0, [sp, #12]
40018a18:	e59f1064 	ldr	r1, [pc, #100]	; 40018a84 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018a1c:	e0000001 	and	r0, r0, r1
40018a20:	e58d000c 	str	r0, [sp, #12]
40018a24:	e1a0100d 	mov	r1, sp
40018a28:	e1a00005 	mov	r0, r5
40018a2c:	eb0027b0 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40018a30:	e59d0008 	ldr	r0, [sp, #8]
40018a34:	e1a05800 	lsl	r5, r0, #16
40018a38:	e1a05825 	lsr	r5, r5, #16
40018a3c:	e2860001 	add	r0, r6, #1
40018a40:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018a44:	e1d400b8 	ldrh	r0, [r4, #8]
40018a48:	e1500006 	cmp	r0, r6
40018a4c:	caffffed 	bgt	40018a08 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018a50:	e2870001 	add	r0, r7, #1
40018a54:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a58:	e1d400ba 	ldrh	r0, [r4, #10]
40018a5c:	e1500007 	cmp	r0, r7
40018a60:	caffffdf 	bgt	400189e4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018a64:	e1d401b4 	ldrh	r0, [r4, #20]
40018a68:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018a6c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018a70:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018a74:	e1d401bc 	ldrh	r0, [r4, #28]
40018a78:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018a7c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018a80:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018a84:	0000fff0 	.word	0x0000fff0
40018a88:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018a8c <CyU3PDmaMultiChannelSetXfer>:
40018a8c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018a90:	e1a04000 	mov	r4, r0
40018a94:	e1a05001 	mov	r5, r1
40018a98:	e1a06002 	mov	r6, r2
40018a9c:	e3e01000 	mvn	r1, #0
40018aa0:	e1a00004 	mov	r0, r4
40018aa4:	ebfffabc 	bl	4001759c <CyU3PDmaMultiChannelAcquireLock>
40018aa8:	e1a07000 	mov	r7, r0
40018aac:	e3570000 	cmp	r7, #0
40018ab0:	0a000001 	beq	40018abc <CyU3PDmaMultiChannelSetXfer+0x30>
40018ab4:	e1a00007 	mov	r0, r7
40018ab8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018abc:	e5940000 	ldr	r0, [r4]
40018ac0:	e3500001 	cmp	r0, #1
40018ac4:	0a000000 	beq	40018acc <CyU3PDmaMultiChannelSetXfer+0x40>
40018ac8:	e3a07043 	mov	r7, #67	; 0x43
40018acc:	e1d400ba 	ldrh	r0, [r4, #10]
40018ad0:	e1500006 	cmp	r0, r6
40018ad4:	ca000000 	bgt	40018adc <CyU3PDmaMultiChannelSetXfer+0x50>
40018ad8:	e3a07040 	mov	r7, #64	; 0x40
40018adc:	e1d400b4 	ldrh	r0, [r4, #4]
40018ae0:	e3500009 	cmp	r0, #9
40018ae4:	1a000002 	bne	40018af4 <CyU3PDmaMultiChannelSetXfer+0x68>
40018ae8:	e3560000 	cmp	r6, #0
40018aec:	0a000000 	beq	40018af4 <CyU3PDmaMultiChannelSetXfer+0x68>
40018af0:	e3a07040 	mov	r7, #64	; 0x40
40018af4:	e3570000 	cmp	r7, #0
40018af8:	1a00002d 	bne	40018bb4 <CyU3PDmaMultiChannelSetXfer+0x128>
40018afc:	e3a02002 	mov	r2, #2
40018b00:	e3e01027 	mvn	r1, #39	; 0x27
40018b04:	e28400b0 	add	r0, r4, #176	; 0xb0
40018b08:	ebffc567 	bl	4000a0ac <_txe_event_flags_set>
40018b0c:	e5845070 	str	r5, [r4, #112]	; 0x70
40018b10:	e1d400b4 	ldrh	r0, [r4, #4]
40018b14:	e2400005 	sub	r0, r0, #5
40018b18:	e3500005 	cmp	r0, #5
40018b1c:	308ff100 	addcc	pc, pc, r0, lsl #2
40018b20:	ea000020 	b	40018ba8 <CyU3PDmaMultiChannelSetXfer+0x11c>
40018b24:	ea000003 	b	40018b38 <CyU3PDmaMultiChannelSetXfer+0xac>
40018b28:	ea000009 	b	40018b54 <CyU3PDmaMultiChannelSetXfer+0xc8>
40018b2c:	ea000003 	b	40018b40 <CyU3PDmaMultiChannelSetXfer+0xb4>
40018b30:	ea000009 	b	40018b5c <CyU3PDmaMultiChannelSetXfer+0xd0>
40018b34:	ea00000d 	b	40018b70 <CyU3PDmaMultiChannelSetXfer+0xe4>
40018b38:	e1a00000 	nop			; (mov r0, r0)
40018b3c:	e1a00000 	nop			; (mov r0, r0)
40018b40:	e1a02006 	mov	r2, r6
40018b44:	e1a01005 	mov	r1, r5
40018b48:	e1a00004 	mov	r0, r4
40018b4c:	eb00001d 	bl	40018bc8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018b50:	ea000016 	b	40018bb0 <CyU3PDmaMultiChannelSetXfer+0x124>
40018b54:	e1a00000 	nop			; (mov r0, r0)
40018b58:	e1a00000 	nop			; (mov r0, r0)
40018b5c:	e1a02006 	mov	r2, r6
40018b60:	e1a01005 	mov	r1, r5
40018b64:	e1a00004 	mov	r0, r4
40018b68:	eb0000b2 	bl	40018e38 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018b6c:	ea00000f 	b	40018bb0 <CyU3PDmaMultiChannelSetXfer+0x124>
40018b70:	e1a00000 	nop			; (mov r0, r0)
40018b74:	e59f0048 	ldr	r0, [pc, #72]	; 40018bc4 <CyU3PDmaMultiChannelSetXfer+0x138>
40018b78:	e5900000 	ldr	r0, [r0]
40018b7c:	e3500000 	cmp	r0, #0
40018b80:	1a000001 	bne	40018b8c <CyU3PDmaMultiChannelSetXfer+0x100>
40018b84:	e3a00047 	mov	r0, #71	; 0x47
40018b88:	eaffffca 	b	40018ab8 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018b8c:	e1a02006 	mov	r2, r6
40018b90:	e1a01005 	mov	r1, r5
40018b94:	e1a00004 	mov	r0, r4
40018b98:	e59f3024 	ldr	r3, [pc, #36]	; 40018bc4 <CyU3PDmaMultiChannelSetXfer+0x138>
40018b9c:	e5933000 	ldr	r3, [r3]
40018ba0:	e12fff33 	blx	r3
40018ba4:	ea000001 	b	40018bb0 <CyU3PDmaMultiChannelSetXfer+0x124>
40018ba8:	e1a00000 	nop			; (mov r0, r0)
40018bac:	e1a00000 	nop			; (mov r0, r0)
40018bb0:	e1a00000 	nop			; (mov r0, r0)
40018bb4:	e2840078 	add	r0, r4, #120	; 0x78
40018bb8:	ebffc608 	bl	4000a3e0 <_txe_mutex_put>
40018bbc:	e1a00007 	mov	r0, r7
40018bc0:	eaffffbc 	b	40018ab8 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018bc4:	40030d18 	.word	0x40030d18

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018bc8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018bc8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018bcc:	e24dd028 	sub	sp, sp, #40	; 0x28
40018bd0:	e1a04000 	mov	r4, r0
40018bd4:	e1a05001 	mov	r5, r1
40018bd8:	e1a06002 	mov	r6, r2
40018bdc:	e3a00002 	mov	r0, #2
40018be0:	e5840000 	str	r0, [r4]
40018be4:	e3a07000 	mov	r7, #0
40018be8:	ea000005 	b	40018c04 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018bec:	e2841024 	add	r1, r4, #36	; 0x24
40018bf0:	e0811087 	add	r1, r1, r7, lsl #1
40018bf4:	e1d100b0 	ldrh	r0, [r1]
40018bf8:	ebfff0ac 	bl	40014eb0 <CyU3PDmaSocketDisable>
40018bfc:	e2870001 	add	r0, r7, #1
40018c00:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c04:	e1d400ba 	ldrh	r0, [r4, #10]
40018c08:	e1500007 	cmp	r0, r7
40018c0c:	cafffff6 	bgt	40018bec <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
40018c10:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018c14:	ebfff0a5 	bl	40014eb0 <CyU3PDmaSocketDisable>
40018c18:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018c1c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018c20:	ebfff1bd 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40018c24:	e2840014 	add	r0, r4, #20
40018c28:	e0800086 	add	r0, r0, r6, lsl #1
40018c2c:	e1d000b0 	ldrh	r0, [r0]
40018c30:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018c34:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018c38:	e3a07000 	mov	r7, #0
40018c3c:	ea000040 	b	40018d44 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018c40:	e2841024 	add	r1, r4, #36	; 0x24
40018c44:	e0811087 	add	r1, r1, r7, lsl #1
40018c48:	e1d100b0 	ldrh	r0, [r1]
40018c4c:	e28d1010 	add	r1, sp, #16
40018c50:	ebfff0ae 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40018c54:	e3a00000 	mov	r0, #0
40018c58:	e58d0014 	str	r0, [sp, #20]
40018c5c:	e58d0018 	str	r0, [sp, #24]
40018c60:	e59d001c 	ldr	r0, [sp, #28]
40018c64:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018c68:	e58d001c 	str	r0, [sp, #28]
40018c6c:	e59d001c 	ldr	r0, [sp, #28]
40018c70:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018c74:	e58d001c 	str	r0, [sp, #28]
40018c78:	e59d001c 	ldr	r0, [sp, #28]
40018c7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018c80:	e58d001c 	str	r0, [sp, #28]
40018c84:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018c88:	e3500001 	cmp	r0, #1
40018c8c:	1a000003 	bne	40018ca0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018c90:	e59d001c 	ldr	r0, [sp, #28]
40018c94:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018c98:	e58d001c 	str	r0, [sp, #28]
40018c9c:	ea000002 	b	40018cac <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018ca0:	e59d001c 	ldr	r0, [sp, #28]
40018ca4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018ca8:	e58d001c 	str	r0, [sp, #28]
40018cac:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018cb0:	e3500000 	cmp	r0, #0
40018cb4:	0a000006 	beq	40018cd4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018cb8:	e1d400b8 	ldrh	r0, [r4, #8]
40018cbc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018cc0:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018cc4:	e1800281 	orr	r0, r0, r1, lsl #5
40018cc8:	e59d101c 	ldr	r1, [sp, #28]
40018ccc:	e1800001 	orr	r0, r0, r1
40018cd0:	e58d001c 	str	r0, [sp, #28]
40018cd4:	e3e00000 	mvn	r0, #0
40018cd8:	e58d0020 	str	r0, [sp, #32]
40018cdc:	e1570006 	cmp	r7, r6
40018ce0:	ba000004 	blt	40018cf8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018ce4:	e2840014 	add	r0, r4, #20
40018ce8:	e0800087 	add	r0, r0, r7, lsl #1
40018cec:	e1d000b0 	ldrh	r0, [r0]
40018cf0:	e58d0010 	str	r0, [sp, #16]
40018cf4:	ea000007 	b	40018d18 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018cf8:	e2841014 	add	r1, r4, #20
40018cfc:	e0811087 	add	r1, r1, r7, lsl #1
40018d00:	e1d100b0 	ldrh	r0, [r1]
40018d04:	e1a0100d 	mov	r1, sp
40018d08:	eb0026de 	bl	40022888 <CyU3PDmaDscrGetConfig>
40018d0c:	e59d0008 	ldr	r0, [sp, #8]
40018d10:	e1a00820 	lsr	r0, r0, #16
40018d14:	e58d0010 	str	r0, [sp, #16]
40018d18:	e284103e 	add	r1, r4, #62	; 0x3e
40018d1c:	e0811087 	add	r1, r1, r7, lsl #1
40018d20:	e59d0010 	ldr	r0, [sp, #16]
40018d24:	e1c100b0 	strh	r0, [r1]
40018d28:	e2841024 	add	r1, r4, #36	; 0x24
40018d2c:	e0811087 	add	r1, r1, r7, lsl #1
40018d30:	e1d100b0 	ldrh	r0, [r1]
40018d34:	e28d1010 	add	r1, sp, #16
40018d38:	ebfff11e 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40018d3c:	e2870001 	add	r0, r7, #1
40018d40:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018d44:	e1d400ba 	ldrh	r0, [r4, #10]
40018d48:	e1500007 	cmp	r0, r7
40018d4c:	caffffbb 	bgt	40018c40 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018d50:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d54:	e28d1010 	add	r1, sp, #16
40018d58:	ebfff06c 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40018d5c:	e58d5014 	str	r5, [sp, #20]
40018d60:	e3a00000 	mov	r0, #0
40018d64:	e58d0018 	str	r0, [sp, #24]
40018d68:	e3550000 	cmp	r5, #0
40018d6c:	1a000006 	bne	40018d8c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018d70:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018d74:	e3c00080 	bic	r0, r0, #128	; 0x80
40018d78:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018d7c:	e59d001c 	ldr	r0, [sp, #28]
40018d80:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018d84:	e58d001c 	str	r0, [sp, #28]
40018d88:	ea000005 	b	40018da4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018d8c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018d90:	e3800080 	orr	r0, r0, #128	; 0x80
40018d94:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018d98:	e59d001c 	ldr	r0, [sp, #28]
40018d9c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018da0:	e58d001c 	str	r0, [sp, #28]
40018da4:	e59d001c 	ldr	r0, [sp, #28]
40018da8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018dac:	e58d001c 	str	r0, [sp, #28]
40018db0:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018db4:	e3500001 	cmp	r0, #1
40018db8:	1a000003 	bne	40018dcc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018dbc:	e59d001c 	ldr	r0, [sp, #28]
40018dc0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018dc4:	e58d001c 	str	r0, [sp, #28]
40018dc8:	ea000002 	b	40018dd8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018dcc:	e59d001c 	ldr	r0, [sp, #28]
40018dd0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018dd4:	e58d001c 	str	r0, [sp, #28]
40018dd8:	e3e00000 	mvn	r0, #0
40018ddc:	e58d0020 	str	r0, [sp, #32]
40018de0:	e1d481bc 	ldrh	r8, [r4, #28]
40018de4:	e3a07000 	mov	r7, #0
40018de8:	ea000007 	b	40018e0c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018dec:	e1a0100d 	mov	r1, sp
40018df0:	e1a00008 	mov	r0, r8
40018df4:	eb0026a3 	bl	40022888 <CyU3PDmaDscrGetConfig>
40018df8:	e59d0008 	ldr	r0, [sp, #8]
40018dfc:	e1a08800 	lsl	r8, r0, #16
40018e00:	e1a08828 	lsr	r8, r8, #16
40018e04:	e2870001 	add	r0, r7, #1
40018e08:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018e0c:	e1570006 	cmp	r7, r6
40018e10:	bafffff5 	blt	40018dec <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018e14:	e58d8010 	str	r8, [sp, #16]
40018e18:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018e1c:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018e20:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018e24:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e28:	e28d1010 	add	r1, sp, #16
40018e2c:	ebfff0e1 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40018e30:	e28dd028 	add	sp, sp, #40	; 0x28
40018e34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018e38 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018e38:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018e3c:	e24dd028 	sub	sp, sp, #40	; 0x28
40018e40:	e1a04000 	mov	r4, r0
40018e44:	e1a05001 	mov	r5, r1
40018e48:	e1a06002 	mov	r6, r2
40018e4c:	e3a00002 	mov	r0, #2
40018e50:	e5840000 	str	r0, [r4]
40018e54:	e3a07000 	mov	r7, #0
40018e58:	ea000005 	b	40018e74 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018e5c:	e284102c 	add	r1, r4, #44	; 0x2c
40018e60:	e0811087 	add	r1, r1, r7, lsl #1
40018e64:	e1d100b0 	ldrh	r0, [r1]
40018e68:	ebfff010 	bl	40014eb0 <CyU3PDmaSocketDisable>
40018e6c:	e2870001 	add	r0, r7, #1
40018e70:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018e74:	e1d400ba 	ldrh	r0, [r4, #10]
40018e78:	e1500007 	cmp	r0, r7
40018e7c:	cafffff6 	bgt	40018e5c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018e80:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e84:	ebfff009 	bl	40014eb0 <CyU3PDmaSocketDisable>
40018e88:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018e8c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e90:	ebfff121 	bl	4001531c <CyU3PDmaUpdateSocketSuspendOption>
40018e94:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e98:	e28d1010 	add	r1, sp, #16
40018e9c:	ebfff01b 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40018ea0:	e58d5014 	str	r5, [sp, #20]
40018ea4:	e3a00000 	mov	r0, #0
40018ea8:	e58d0018 	str	r0, [sp, #24]
40018eac:	e3550000 	cmp	r5, #0
40018eb0:	1a000006 	bne	40018ed0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018eb4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018eb8:	e3c00080 	bic	r0, r0, #128	; 0x80
40018ebc:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ec0:	e59d001c 	ldr	r0, [sp, #28]
40018ec4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018ec8:	e58d001c 	str	r0, [sp, #28]
40018ecc:	ea000005 	b	40018ee8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018ed0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018ed4:	e3800080 	orr	r0, r0, #128	; 0x80
40018ed8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018edc:	e59d001c 	ldr	r0, [sp, #28]
40018ee0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018ee4:	e58d001c 	str	r0, [sp, #28]
40018ee8:	e59d001c 	ldr	r0, [sp, #28]
40018eec:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018ef0:	e58d001c 	str	r0, [sp, #28]
40018ef4:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018ef8:	e3500001 	cmp	r0, #1
40018efc:	1a000003 	bne	40018f10 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018f00:	e59d001c 	ldr	r0, [sp, #28]
40018f04:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018f08:	e58d001c 	str	r0, [sp, #28]
40018f0c:	ea000002 	b	40018f1c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018f10:	e59d001c 	ldr	r0, [sp, #28]
40018f14:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018f18:	e58d001c 	str	r0, [sp, #28]
40018f1c:	e3e00000 	mvn	r0, #0
40018f20:	e58d0020 	str	r0, [sp, #32]
40018f24:	e1d481b4 	ldrh	r8, [r4, #20]
40018f28:	e3a07000 	mov	r7, #0
40018f2c:	ea000007 	b	40018f50 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018f30:	e1a0100d 	mov	r1, sp
40018f34:	e1a00008 	mov	r0, r8
40018f38:	eb002652 	bl	40022888 <CyU3PDmaDscrGetConfig>
40018f3c:	e59d0008 	ldr	r0, [sp, #8]
40018f40:	e59f1148 	ldr	r1, [pc, #328]	; 40019090 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018f44:	e0018820 	and	r8, r1, r0, lsr #16
40018f48:	e2870001 	add	r0, r7, #1
40018f4c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018f50:	e1570006 	cmp	r7, r6
40018f54:	bafffff5 	blt	40018f30 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018f58:	e58d8010 	str	r8, [sp, #16]
40018f5c:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018f60:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018f64:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018f68:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f6c:	e28d1010 	add	r1, sp, #16
40018f70:	ebfff090 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40018f74:	e284001c 	add	r0, r4, #28
40018f78:	e0800086 	add	r0, r0, r6, lsl #1
40018f7c:	e1d000b0 	ldrh	r0, [r0]
40018f80:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018f84:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018f88:	e3a07000 	mov	r7, #0
40018f8c:	ea00003a 	b	4001907c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018f90:	e284102c 	add	r1, r4, #44	; 0x2c
40018f94:	e0811087 	add	r1, r1, r7, lsl #1
40018f98:	e1d100b0 	ldrh	r0, [r1]
40018f9c:	e28d1010 	add	r1, sp, #16
40018fa0:	ebffefda 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40018fa4:	e3a00000 	mov	r0, #0
40018fa8:	e58d0014 	str	r0, [sp, #20]
40018fac:	e58d0018 	str	r0, [sp, #24]
40018fb0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018fb4:	e3c00080 	bic	r0, r0, #128	; 0x80
40018fb8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018fbc:	e59d001c 	ldr	r0, [sp, #28]
40018fc0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018fc4:	e58d001c 	str	r0, [sp, #28]
40018fc8:	e59d001c 	ldr	r0, [sp, #28]
40018fcc:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018fd0:	e58d001c 	str	r0, [sp, #28]
40018fd4:	e59d001c 	ldr	r0, [sp, #28]
40018fd8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018fdc:	e58d001c 	str	r0, [sp, #28]
40018fe0:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018fe4:	e3500001 	cmp	r0, #1
40018fe8:	1a000003 	bne	40018ffc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018fec:	e59d001c 	ldr	r0, [sp, #28]
40018ff0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018ff4:	e58d001c 	str	r0, [sp, #28]
40018ff8:	ea000002 	b	40019008 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018ffc:	e59d001c 	ldr	r0, [sp, #28]
40019000:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40019004:	e58d001c 	str	r0, [sp, #28]
40019008:	e3e00000 	mvn	r0, #0
4001900c:	e58d0020 	str	r0, [sp, #32]
40019010:	e1570006 	cmp	r7, r6
40019014:	ba000004 	blt	4001902c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40019018:	e284001c 	add	r0, r4, #28
4001901c:	e0800087 	add	r0, r0, r7, lsl #1
40019020:	e1d000b0 	ldrh	r0, [r0]
40019024:	e58d0010 	str	r0, [sp, #16]
40019028:	ea000008 	b	40019050 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
4001902c:	e284101c 	add	r1, r4, #28
40019030:	e0811087 	add	r1, r1, r7, lsl #1
40019034:	e1d100b0 	ldrh	r0, [r1]
40019038:	e1a0100d 	mov	r1, sp
4001903c:	eb002611 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019040:	e59d0008 	ldr	r0, [sp, #8]
40019044:	e1a00800 	lsl	r0, r0, #16
40019048:	e1a00820 	lsr	r0, r0, #16
4001904c:	e58d0010 	str	r0, [sp, #16]
40019050:	e2841046 	add	r1, r4, #70	; 0x46
40019054:	e0811087 	add	r1, r1, r7, lsl #1
40019058:	e59d0010 	ldr	r0, [sp, #16]
4001905c:	e1c100b0 	strh	r0, [r1]
40019060:	e284102c 	add	r1, r4, #44	; 0x2c
40019064:	e0811087 	add	r1, r1, r7, lsl #1
40019068:	e1d100b0 	ldrh	r0, [r1]
4001906c:	e28d1010 	add	r1, sp, #16
40019070:	ebfff050 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40019074:	e2870001 	add	r0, r7, #1
40019078:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001907c:	e1d400ba 	ldrh	r0, [r4, #10]
40019080:	e1500007 	cmp	r0, r7
40019084:	caffffc1 	bgt	40018f90 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40019088:	e28dd028 	add	sp, sp, #40	; 0x28
4001908c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40019090:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40019094 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40019094:	e92d4030 	push	{r4, r5, lr}
40019098:	e24dd01c 	sub	sp, sp, #28
4001909c:	e1a04000 	mov	r4, r0
400190a0:	e3a05000 	mov	r5, #0
400190a4:	ea000031 	b	40019170 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
400190a8:	e2840014 	add	r0, r4, #20
400190ac:	e0800085 	add	r0, r0, r5, lsl #1
400190b0:	e1d000b0 	ldrh	r0, [r0]
400190b4:	e284103e 	add	r1, r4, #62	; 0x3e
400190b8:	e0811085 	add	r1, r1, r5, lsl #1
400190bc:	e1c100b0 	strh	r0, [r1]
400190c0:	e2841024 	add	r1, r4, #36	; 0x24
400190c4:	e0811085 	add	r1, r1, r5, lsl #1
400190c8:	e1d100b0 	ldrh	r0, [r1]
400190cc:	ebffef77 	bl	40014eb0 <CyU3PDmaSocketDisable>
400190d0:	e2841024 	add	r1, r4, #36	; 0x24
400190d4:	e0811085 	add	r1, r1, r5, lsl #1
400190d8:	e1d100b0 	ldrh	r0, [r1]
400190dc:	e28d1004 	add	r1, sp, #4
400190e0:	ebffef8a 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400190e4:	e2840014 	add	r0, r4, #20
400190e8:	e0800085 	add	r0, r0, r5, lsl #1
400190ec:	e1d000b0 	ldrh	r0, [r0]
400190f0:	e58d0004 	str	r0, [sp, #4]
400190f4:	e3a00000 	mov	r0, #0
400190f8:	e58d0008 	str	r0, [sp, #8]
400190fc:	e58d000c 	str	r0, [sp, #12]
40019100:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019104:	e58d0010 	str	r0, [sp, #16]
40019108:	e2841024 	add	r1, r4, #36	; 0x24
4001910c:	e0811085 	add	r1, r1, r5, lsl #1
40019110:	e1d100b0 	ldrh	r0, [r1]
40019114:	eb0006a3 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
40019118:	e3500000 	cmp	r0, #0
4001911c:	0a000002 	beq	4001912c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40019120:	e59d0010 	ldr	r0, [sp, #16]
40019124:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019128:	e58d0010 	str	r0, [sp, #16]
4001912c:	e3e00000 	mvn	r0, #0
40019130:	e58d0014 	str	r0, [sp, #20]
40019134:	e1d400b4 	ldrh	r0, [r4, #4]
40019138:	e3500005 	cmp	r0, #5
4001913c:	1a000002 	bne	4001914c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40019140:	e3a00040 	mov	r0, #64	; 0x40
40019144:	e58d0018 	str	r0, [sp, #24]
40019148:	ea000001 	b	40019154 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
4001914c:	e3a00041 	mov	r0, #65	; 0x41
40019150:	e58d0018 	str	r0, [sp, #24]
40019154:	e2841024 	add	r1, r4, #36	; 0x24
40019158:	e0811085 	add	r1, r1, r5, lsl #1
4001915c:	e1d100b0 	ldrh	r0, [r1]
40019160:	e28d1004 	add	r1, sp, #4
40019164:	ebfff013 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40019168:	e2850001 	add	r0, r5, #1
4001916c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40019170:	e1d400ba 	ldrh	r0, [r4, #10]
40019174:	e1500005 	cmp	r0, r5
40019178:	caffffca 	bgt	400190a8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
4001917c:	e1d401bc 	ldrh	r0, [r4, #28]
40019180:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40019184:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40019188:	ebffef48 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001918c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40019190:	e28d1004 	add	r1, sp, #4
40019194:	ebffef5d 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40019198:	e1d401bc 	ldrh	r0, [r4, #28]
4001919c:	e58d0004 	str	r0, [sp, #4]
400191a0:	e3a00000 	mov	r0, #0
400191a4:	e58d0008 	str	r0, [sp, #8]
400191a8:	e58d000c 	str	r0, [sp, #12]
400191ac:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400191b0:	e58d0010 	str	r0, [sp, #16]
400191b4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191b8:	eb00067a 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
400191bc:	e3500000 	cmp	r0, #0
400191c0:	0a000002 	beq	400191d0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
400191c4:	e59d0010 	ldr	r0, [sp, #16]
400191c8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400191cc:	e58d0010 	str	r0, [sp, #16]
400191d0:	e3e00000 	mvn	r0, #0
400191d4:	e58d0014 	str	r0, [sp, #20]
400191d8:	e1d400b4 	ldrh	r0, [r4, #4]
400191dc:	e3500005 	cmp	r0, #5
400191e0:	1a000002 	bne	400191f0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
400191e4:	e3a000c0 	mov	r0, #192	; 0xc0
400191e8:	e58d0018 	str	r0, [sp, #24]
400191ec:	ea000001 	b	400191f8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
400191f0:	e3a000c2 	mov	r0, #194	; 0xc2
400191f4:	e58d0018 	str	r0, [sp, #24]
400191f8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191fc:	e28d1004 	add	r1, sp, #4
40019200:	ebffefec 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40019204:	e3a00000 	mov	r0, #0
40019208:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
4001920c:	e28dd01c 	add	sp, sp, #28
40019210:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40019214 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40019214:	e92d4030 	push	{r4, r5, lr}
40019218:	e24dd01c 	sub	sp, sp, #28
4001921c:	e1a04000 	mov	r4, r0
40019220:	e1d401b4 	ldrh	r0, [r4, #20]
40019224:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40019228:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001922c:	ebffef1f 	bl	40014eb0 <CyU3PDmaSocketDisable>
40019230:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019234:	e28d1004 	add	r1, sp, #4
40019238:	ebffef34 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001923c:	e1d401b4 	ldrh	r0, [r4, #20]
40019240:	e58d0004 	str	r0, [sp, #4]
40019244:	e3a00000 	mov	r0, #0
40019248:	e58d0008 	str	r0, [sp, #8]
4001924c:	e58d000c 	str	r0, [sp, #12]
40019250:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019254:	e58d0010 	str	r0, [sp, #16]
40019258:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001925c:	eb000651 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
40019260:	e3500000 	cmp	r0, #0
40019264:	0a000002 	beq	40019274 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40019268:	e59d0010 	ldr	r0, [sp, #16]
4001926c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019270:	e58d0010 	str	r0, [sp, #16]
40019274:	e3e00000 	mvn	r0, #0
40019278:	e58d0014 	str	r0, [sp, #20]
4001927c:	e1d400b4 	ldrh	r0, [r4, #4]
40019280:	e3500006 	cmp	r0, #6
40019284:	1a000002 	bne	40019294 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40019288:	e3a000c0 	mov	r0, #192	; 0xc0
4001928c:	e58d0018 	str	r0, [sp, #24]
40019290:	ea000001 	b	4001929c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40019294:	e3a000c1 	mov	r0, #193	; 0xc1
40019298:	e58d0018 	str	r0, [sp, #24]
4001929c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400192a0:	e28d1004 	add	r1, sp, #4
400192a4:	ebffefc3 	bl	400151b8 <CyU3PDmaSocketSetConfig>
400192a8:	e3a05000 	mov	r5, #0
400192ac:	ea000035 	b	40019388 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
400192b0:	e284001c 	add	r0, r4, #28
400192b4:	e0800085 	add	r0, r0, r5, lsl #1
400192b8:	e1d000b0 	ldrh	r0, [r0]
400192bc:	e2841046 	add	r1, r4, #70	; 0x46
400192c0:	e0811085 	add	r1, r1, r5, lsl #1
400192c4:	e1c100b0 	strh	r0, [r1]
400192c8:	e284102c 	add	r1, r4, #44	; 0x2c
400192cc:	e0811085 	add	r1, r1, r5, lsl #1
400192d0:	e1d100b0 	ldrh	r0, [r1]
400192d4:	ebffeef5 	bl	40014eb0 <CyU3PDmaSocketDisable>
400192d8:	e284102c 	add	r1, r4, #44	; 0x2c
400192dc:	e0811085 	add	r1, r1, r5, lsl #1
400192e0:	e1d100b0 	ldrh	r0, [r1]
400192e4:	e28d1004 	add	r1, sp, #4
400192e8:	ebffef08 	bl	40014f10 <CyU3PDmaSocketGetConfig>
400192ec:	e284001c 	add	r0, r4, #28
400192f0:	e0800085 	add	r0, r0, r5, lsl #1
400192f4:	e1d000b0 	ldrh	r0, [r0]
400192f8:	e58d0004 	str	r0, [sp, #4]
400192fc:	e3a00000 	mov	r0, #0
40019300:	e58d0008 	str	r0, [sp, #8]
40019304:	e58d000c 	str	r0, [sp, #12]
40019308:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
4001930c:	e58d0010 	str	r0, [sp, #16]
40019310:	e284102c 	add	r1, r4, #44	; 0x2c
40019314:	e0811085 	add	r1, r1, r5, lsl #1
40019318:	e1d100b0 	ldrh	r0, [r1]
4001931c:	eb000621 	bl	4001aba8 <CyU3PDmaIsSockAvlEnReqd>
40019320:	e3500000 	cmp	r0, #0
40019324:	0a000002 	beq	40019334 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40019328:	e59d0010 	ldr	r0, [sp, #16]
4001932c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019330:	e58d0010 	str	r0, [sp, #16]
40019334:	e3e00000 	mvn	r0, #0
40019338:	e58d0014 	str	r0, [sp, #20]
4001933c:	e1d400b4 	ldrh	r0, [r4, #4]
40019340:	e3500006 	cmp	r0, #6
40019344:	1a000002 	bne	40019354 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40019348:	e3a00040 	mov	r0, #64	; 0x40
4001934c:	e58d0018 	str	r0, [sp, #24]
40019350:	ea000001 	b	4001935c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40019354:	e3a00042 	mov	r0, #66	; 0x42
40019358:	e58d0018 	str	r0, [sp, #24]
4001935c:	e284102c 	add	r1, r4, #44	; 0x2c
40019360:	e0811085 	add	r1, r1, r5, lsl #1
40019364:	e1d100b0 	ldrh	r0, [r1]
40019368:	e28d1004 	add	r1, sp, #4
4001936c:	ebffef91 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40019370:	e3a00000 	mov	r0, #0
40019374:	e2841064 	add	r1, r4, #100	; 0x64
40019378:	e0811085 	add	r1, r1, r5, lsl #1
4001937c:	e1c100b0 	strh	r0, [r1]
40019380:	e2850001 	add	r0, r5, #1
40019384:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40019388:	e1d400ba 	ldrh	r0, [r4, #10]
4001938c:	e1500005 	cmp	r0, r5
40019390:	caffffc6 	bgt	400192b0 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40019394:	e28dd01c 	add	sp, sp, #28
40019398:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

4001939c <CyU3PDmaMultiChannelSetWrapUp>:
4001939c:	e92d4070 	push	{r4, r5, r6, lr}
400193a0:	e1a04000 	mov	r4, r0
400193a4:	e1a05001 	mov	r5, r1
400193a8:	e3e01000 	mvn	r1, #0
400193ac:	e1a00004 	mov	r0, r4
400193b0:	ebfff879 	bl	4001759c <CyU3PDmaMultiChannelAcquireLock>
400193b4:	e1a06000 	mov	r6, r0
400193b8:	e3560000 	cmp	r6, #0
400193bc:	0a000001 	beq	400193c8 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
400193c0:	e1a00006 	mov	r0, r6
400193c4:	e8bd8070 	pop	{r4, r5, r6, pc}
400193c8:	e5940000 	ldr	r0, [r4]
400193cc:	e3500004 	cmp	r0, #4
400193d0:	0a000003 	beq	400193e4 <CyU3PDmaMultiChannelSetWrapUp+0x48>
400193d4:	e5940000 	ldr	r0, [r4]
400193d8:	e3500002 	cmp	r0, #2
400193dc:	0a000000 	beq	400193e4 <CyU3PDmaMultiChannelSetWrapUp+0x48>
400193e0:	e3a06047 	mov	r6, #71	; 0x47
400193e4:	e1d400b4 	ldrh	r0, [r4, #4]
400193e8:	e3500006 	cmp	r0, #6
400193ec:	0a000005 	beq	40019408 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
400193f0:	e1d400b4 	ldrh	r0, [r4, #4]
400193f4:	e3500008 	cmp	r0, #8
400193f8:	0a000002 	beq	40019408 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
400193fc:	e1d400b4 	ldrh	r0, [r4, #4]
40019400:	e3500009 	cmp	r0, #9
40019404:	1a000003 	bne	40019418 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40019408:	e3550000 	cmp	r5, #0
4001940c:	0a000005 	beq	40019428 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019410:	e3a06040 	mov	r6, #64	; 0x40
40019414:	ea000003 	b	40019428 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019418:	e1d400ba 	ldrh	r0, [r4, #10]
4001941c:	e1500005 	cmp	r0, r5
40019420:	ca000000 	bgt	40019428 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019424:	e3a06040 	mov	r6, #64	; 0x40
40019428:	e3560000 	cmp	r6, #0
4001942c:	1a000003 	bne	40019440 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40019430:	e2841024 	add	r1, r4, #36	; 0x24
40019434:	e0811085 	add	r1, r1, r5, lsl #1
40019438:	e1d100b0 	ldrh	r0, [r1]
4001943c:	ebffef88 	bl	40015264 <CyU3PDmaSocketSetWrapUp>
40019440:	e2840078 	add	r0, r4, #120	; 0x78
40019444:	ebffc3e5 	bl	4000a3e0 <_txe_mutex_put>
40019448:	e1a00006 	mov	r0, r6
4001944c:	eaffffdc 	b	400193c4 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40019450 <CyU3PDmaApplicationDefine>:
40019450:	e92d4010 	push	{r4, lr}
40019454:	e24dd020 	sub	sp, sp, #32
40019458:	eb000051 	bl	400195a4 <CyU3PDmaInit>
4001945c:	e3a02028 	mov	r2, #40	; 0x28
40019460:	e3a01000 	mov	r1, #0
40019464:	e59f007c 	ldr	r0, [pc, #124]	; 400194e8 <CyU3PDmaApplicationDefine+0x98>
40019468:	ebffc26f 	bl	40009e2c <_txe_event_flags_create>
4001946c:	e3a00c02 	mov	r0, #512	; 0x200
40019470:	ebffa87f 	bl	40003674 <CyU3PMemAlloc>
40019474:	e1a04000 	mov	r4, r0
40019478:	e3a0303c 	mov	r3, #60	; 0x3c
4001947c:	e3a02c02 	mov	r2, #512	; 0x200
40019480:	e1cd20f0 	strd	r2, [sp]
40019484:	e1a03004 	mov	r3, r4
40019488:	e3a02004 	mov	r2, #4
4001948c:	e3a01000 	mov	r1, #0
40019490:	e59f0054 	ldr	r0, [pc, #84]	; 400194ec <CyU3PDmaApplicationDefine+0x9c>
40019494:	ebffc3f9 	bl	4000a480 <_txe_queue_create>
40019498:	e3a00b01 	mov	r0, #1024	; 0x400
4001949c:	ebffa874 	bl	40003674 <CyU3PMemAlloc>
400194a0:	e1a04000 	mov	r4, r0
400194a4:	e3a030a8 	mov	r3, #168	; 0xa8
400194a8:	e3a02001 	mov	r2, #1
400194ac:	e3a01000 	mov	r1, #0
400194b0:	e3a00002 	mov	r0, #2
400194b4:	e28dc00c 	add	ip, sp, #12
400194b8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400194bc:	e3a02b01 	mov	r2, #1024	; 0x400
400194c0:	e1a03001 	mov	r3, r1
400194c4:	e58d2004 	str	r2, [sp, #4]
400194c8:	e59f2020 	ldr	r2, [pc, #32]	; 400194f0 <CyU3PDmaApplicationDefine+0xa0>
400194cc:	e28f1020 	add	r1, pc, #32
400194d0:	e58d0008 	str	r0, [sp, #8]
400194d4:	e59f0028 	ldr	r0, [pc, #40]	; 40019504 <CyU3PDmaApplicationDefine+0xb4>
400194d8:	e58d4000 	str	r4, [sp]
400194dc:	ebffc4cd 	bl	4000a818 <_txe_thread_create>
400194e0:	e28dd020 	add	sp, sp, #32
400194e4:	e8bd8010 	pop	{r4, pc}
400194e8:	4003192c 	.word	0x4003192c
400194ec:	40031954 	.word	0x40031954
400194f0:	4001ad54 	.word	0x4001ad54
400194f4:	445f3130 	.word	0x445f3130
400194f8:	545f414d 	.word	0x545f414d
400194fc:	41455248 	.word	0x41455248
40019500:	00000044 	.word	0x00000044
40019504:	40031884 	.word	0x40031884

Disassembly of section i.CyU3PDmaChannelHandleError:

40019508 <CyU3PDmaChannelHandleError>:
40019508:	e92d4010 	push	{r4, lr}
4001950c:	e1a04000 	mov	r4, r0
40019510:	e3e01000 	mvn	r1, #0
40019514:	e284003c 	add	r0, r4, #60	; 0x3c
40019518:	ebffc37b 	bl	4000a30c <_txe_mutex_get>
4001951c:	e1d400b4 	ldrh	r0, [r4, #4]
40019520:	e3500004 	cmp	r0, #4
40019524:	0a000001 	beq	40019530 <CyU3PDmaChannelHandleError+0x28>
40019528:	e1d401b0 	ldrh	r0, [r4, #16]
4001952c:	ebffee5f 	bl	40014eb0 <CyU3PDmaSocketDisable>
40019530:	e1d400b4 	ldrh	r0, [r4, #4]
40019534:	e3500003 	cmp	r0, #3
40019538:	0a000001 	beq	40019544 <CyU3PDmaChannelHandleError+0x3c>
4001953c:	e1d401b2 	ldrh	r0, [r4, #18]
40019540:	ebffee5a 	bl	40014eb0 <CyU3PDmaSocketDisable>
40019544:	e3a02002 	mov	r2, #2
40019548:	e3e01007 	mvn	r1, #7
4001954c:	e2840074 	add	r0, r4, #116	; 0x74
40019550:	ebffc2d5 	bl	4000a0ac <_txe_event_flags_set>
40019554:	e3a02000 	mov	r2, #0
40019558:	e3a01040 	mov	r1, #64	; 0x40
4001955c:	e2840074 	add	r0, r4, #116	; 0x74
40019560:	ebffc2d1 	bl	4000a0ac <_txe_event_flags_set>
40019564:	e3a00005 	mov	r0, #5
40019568:	e5840000 	str	r0, [r4]
4001956c:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40019570:	e3500000 	cmp	r0, #0
40019574:	0a000007 	beq	40019598 <CyU3PDmaChannelHandleError+0x90>
40019578:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001957c:	e3100040 	tst	r0, #64	; 0x40
40019580:	0a000004 	beq	40019598 <CyU3PDmaChannelHandleError+0x90>
40019584:	e3a02000 	mov	r2, #0
40019588:	e3a01040 	mov	r1, #64	; 0x40
4001958c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019590:	e1a00004 	mov	r0, r4
40019594:	e12fff33 	blx	r3
40019598:	e284003c 	add	r0, r4, #60	; 0x3c
4001959c:	ebffc38f 	bl	4000a3e0 <_txe_mutex_put>
400195a0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

400195a4 <CyU3PDmaInit>:
400195a4:	e92d4010 	push	{r4, lr}
400195a8:	e3a02020 	mov	r2, #32
400195ac:	e3a01000 	mov	r1, #0
400195b0:	e59f006c 	ldr	r0, [pc, #108]	; 40019624 <CyU3PDmaInit+0x80>
400195b4:	ebffa83f 	bl	400036b8 <CyU3PMemSet>
400195b8:	e3a02080 	mov	r2, #128	; 0x80
400195bc:	e3a01000 	mov	r1, #0
400195c0:	e59f0060 	ldr	r0, [pc, #96]	; 40019628 <CyU3PDmaInit+0x84>
400195c4:	ebffa83b 	bl	400036b8 <CyU3PMemSet>
400195c8:	e3a02020 	mov	r2, #32
400195cc:	e3a01000 	mov	r1, #0
400195d0:	e59f0054 	ldr	r0, [pc, #84]	; 4001962c <CyU3PDmaInit+0x88>
400195d4:	ebffa837 	bl	400036b8 <CyU3PMemSet>
400195d8:	e3a02040 	mov	r2, #64	; 0x40
400195dc:	e3a01000 	mov	r1, #0
400195e0:	e59f0048 	ldr	r0, [pc, #72]	; 40019630 <CyU3PDmaInit+0x8c>
400195e4:	ebffa833 	bl	400036b8 <CyU3PMemSet>
400195e8:	e3a02040 	mov	r2, #64	; 0x40
400195ec:	e3a01000 	mov	r1, #0
400195f0:	e59f003c 	ldr	r0, [pc, #60]	; 40019634 <CyU3PDmaInit+0x90>
400195f4:	ebffa82f 	bl	400036b8 <CyU3PMemSet>
400195f8:	e3a00000 	mov	r0, #0
400195fc:	e59f1034 	ldr	r1, [pc, #52]	; 40019638 <CyU3PDmaInit+0x94>
40019600:	e5810000 	str	r0, [r1]
40019604:	eb002463 	bl	40022798 <CyU3PDmaDscrListCreate>
40019608:	ebffa96b 	bl	40003bbc <CyU3PDmaBufferInit>
4001960c:	e3a00000 	mov	r0, #0
40019610:	e59f1024 	ldr	r1, [pc, #36]	; 4001963c <CyU3PDmaInit+0x98>
40019614:	e1c100b0 	strh	r0, [r1]
40019618:	e59f1020 	ldr	r1, [pc, #32]	; 40019640 <CyU3PDmaInit+0x9c>
4001961c:	e1c100b0 	strh	r0, [r1]
40019620:	e8bd8010 	pop	{r4, pc}
40019624:	40031744 	.word	0x40031744
40019628:	40031764 	.word	0x40031764
4001962c:	400317e4 	.word	0x400317e4
40019630:	40031804 	.word	0x40031804
40019634:	40031844 	.word	0x40031844
40019638:	40030cf4 	.word	0x40030cf4
4001963c:	40030d1c 	.word	0x40030d1c
40019640:	40030d1e 	.word	0x40030d1e

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

40019644 <CyU3PDmaIntHandler_TypeAuto>:
40019644:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019648:	e24dd01c 	sub	sp, sp, #28
4001964c:	e1a04000 	mov	r4, r0
40019650:	e5949004 	ldr	r9, [r4, #4]
40019654:	e5948008 	ldr	r8, [r4, #8]
40019658:	e3180040 	tst	r8, #64	; 0x40
4001965c:	0a000003 	beq	40019670 <CyU3PDmaIntHandler_TypeAuto+0x2c>
40019660:	e1a00009 	mov	r0, r9
40019664:	ebffffa7 	bl	40019508 <CyU3PDmaChannelHandleError>
40019668:	e28dd01c 	add	sp, sp, #28
4001966c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019670:	e3e01000 	mvn	r1, #0
40019674:	e289003c 	add	r0, r9, #60	; 0x3c
40019678:	ebffc323 	bl	4000a30c <_txe_mutex_get>
4001967c:	e1d901b2 	ldrh	r0, [r9, #18]
40019680:	e5941000 	ldr	r1, [r4]
40019684:	e1500821 	cmp	r0, r1, lsr #16
40019688:	1a00004b 	bne	400197bc <CyU3PDmaIntHandler_TypeAuto+0x178>
4001968c:	e1d901b2 	ldrh	r0, [r9, #18]
40019690:	e3a0103f 	mov	r1, #63	; 0x3f
40019694:	e0015440 	and	r5, r1, r0, asr #8
40019698:	e1d901b2 	ldrh	r0, [r9, #18]
4001969c:	e20060ff 	and	r6, r0, #255	; 0xff
400196a0:	e594000c 	ldr	r0, [r4, #12]
400196a4:	e1a07800 	lsl	r7, r0, #16
400196a8:	e1a07827 	lsr	r7, r7, #16
400196ac:	e3180080 	tst	r8, #128	; 0x80
400196b0:	0a000012 	beq	40019700 <CyU3PDmaIntHandler_TypeAuto+0xbc>
400196b4:	e3a00001 	mov	r0, #1
400196b8:	e5890000 	str	r0, [r9]
400196bc:	e3a02000 	mov	r2, #0
400196c0:	e3a01001 	mov	r1, #1
400196c4:	e2890074 	add	r0, r9, #116	; 0x74
400196c8:	ebffc277 	bl	4000a0ac <_txe_event_flags_set>
400196cc:	ebffe599 	bl	40012d38 <CyU3PSysBarrierSync>
400196d0:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400196d4:	e3500000 	cmp	r0, #0
400196d8:	0a000028 	beq	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400196dc:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400196e0:	e3100001 	tst	r0, #1
400196e4:	0a000025 	beq	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400196e8:	e3a02000 	mov	r2, #0
400196ec:	e3a01001 	mov	r1, #1
400196f0:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400196f4:	e1a00009 	mov	r0, r9
400196f8:	e12fff33 	blx	r3
400196fc:	ea00001f 	b	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019700:	e3180002 	tst	r8, #2
40019704:	0a00001d 	beq	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019708:	e5990000 	ldr	r0, [r9]
4001970c:	e3500003 	cmp	r0, #3
40019710:	1a00001a 	bne	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019714:	e3a00001 	mov	r0, #1
40019718:	e5890000 	str	r0, [r9]
4001971c:	e59f0284 	ldr	r0, [pc, #644]	; 400199a8 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019720:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019724:	e0800386 	add	r0, r0, r6, lsl #7
40019728:	e5900014 	ldr	r0, [r0, #20]
4001972c:	e3c00002 	bic	r0, r0, #2
40019730:	e59f1270 	ldr	r1, [pc, #624]	; 400199a8 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019734:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019738:	e0811386 	add	r1, r1, r6, lsl #7
4001973c:	e5810014 	str	r0, [r1, #20]
40019740:	e3a02000 	mov	r2, #0
40019744:	e3a01002 	mov	r1, #2
40019748:	e2890074 	add	r0, r9, #116	; 0x74
4001974c:	ebffc256 	bl	4000a0ac <_txe_event_flags_set>
40019750:	ebffe578 	bl	40012d38 <CyU3PSysBarrierSync>
40019754:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019758:	e3500000 	cmp	r0, #0
4001975c:	0a000007 	beq	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019760:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019764:	e3100002 	tst	r0, #2
40019768:	0a000004 	beq	40019780 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001976c:	e3a02000 	mov	r2, #0
40019770:	e3a01002 	mov	r1, #2
40019774:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019778:	e1a00009 	mov	r0, r9
4001977c:	e12fff33 	blx	r3
40019780:	e3180e12 	tst	r8, #288	; 0x120
40019784:	0a000084 	beq	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019788:	ebffe56a 	bl	40012d38 <CyU3PSysBarrierSync>
4001978c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019790:	e3500000 	cmp	r0, #0
40019794:	0a000080 	beq	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019798:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001979c:	e3100c01 	tst	r0, #256	; 0x100
400197a0:	0a00007d 	beq	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
400197a4:	e3a02000 	mov	r2, #0
400197a8:	e3a01c01 	mov	r1, #256	; 0x100
400197ac:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197b0:	e1a00009 	mov	r0, r9
400197b4:	e12fff33 	blx	r3
400197b8:	ea000077 	b	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
400197bc:	e1d901b0 	ldrh	r0, [r9, #16]
400197c0:	e3a0103f 	mov	r1, #63	; 0x3f
400197c4:	e0015440 	and	r5, r1, r0, asr #8
400197c8:	e1d901b0 	ldrh	r0, [r9, #16]
400197cc:	e20060ff 	and	r6, r0, #255	; 0xff
400197d0:	e594000c 	ldr	r0, [r4, #12]
400197d4:	e1a07800 	lsl	r7, r0, #16
400197d8:	e1a07827 	lsr	r7, r7, #16
400197dc:	e3180001 	tst	r8, #1
400197e0:	0a00005f 	beq	40019964 <CyU3PDmaIntHandler_TypeAuto+0x320>
400197e4:	e5990000 	ldr	r0, [r9]
400197e8:	e3500004 	cmp	r0, #4
400197ec:	0a00002b 	beq	400198a0 <CyU3PDmaIntHandler_TypeAuto+0x25c>
400197f0:	e1a00000 	nop			; (mov r0, r0)
400197f4:	e1d901b6 	ldrh	r0, [r9, #22]
400197f8:	e28d100c 	add	r1, sp, #12
400197fc:	eb002421 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019800:	e59d000c 	ldr	r0, [sp, #12]
40019804:	e58d0000 	str	r0, [sp]
40019808:	e59d0018 	ldr	r0, [sp, #24]
4001980c:	e59f1198 	ldr	r1, [pc, #408]	; 400199ac <CyU3PDmaIntHandler_TypeAuto+0x368>
40019810:	e0010820 	and	r0, r1, r0, lsr #16
40019814:	e1cd00b4 	strh	r0, [sp, #4]
40019818:	e241100f 	sub	r1, r1, #15
4001981c:	e59d0018 	ldr	r0, [sp, #24]
40019820:	e0000001 	and	r0, r0, r1
40019824:	e1cd00b6 	strh	r0, [sp, #6]
40019828:	e59d0018 	ldr	r0, [sp, #24]
4001982c:	e200000f 	and	r0, r0, #15
40019830:	e1cd00b8 	strh	r0, [sp, #8]
40019834:	e1811241 	orr	r1, r1, r1, asr #4
40019838:	e59d0014 	ldr	r0, [sp, #20]
4001983c:	e0010820 	and	r0, r1, r0, lsr #16
40019840:	e1c901b6 	strh	r0, [r9, #22]
40019844:	ebffe53b 	bl	40012d38 <CyU3PSysBarrierSync>
40019848:	e5990038 	ldr	r0, [r9, #56]	; 0x38
4001984c:	e3500000 	cmp	r0, #0
40019850:	0a000002 	beq	40019860 <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019854:	e1dd10b6 	ldrh	r1, [sp, #6]
40019858:	e59d0000 	ldr	r0, [sp]
4001985c:	ebffe2dc 	bl	400123d4 <CyU3PSysFlushDRegion>
40019860:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019864:	e3500000 	cmp	r0, #0
40019868:	0a000007 	beq	4001988c <CyU3PDmaIntHandler_TypeAuto+0x248>
4001986c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019870:	e3100008 	tst	r0, #8
40019874:	0a000004 	beq	4001988c <CyU3PDmaIntHandler_TypeAuto+0x248>
40019878:	e1a0200d 	mov	r2, sp
4001987c:	e3a01008 	mov	r1, #8
40019880:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019884:	e1a00009 	mov	r0, r9
40019888:	e12fff33 	blx	r3
4001988c:	e1d901b6 	ldrh	r0, [r9, #22]
40019890:	e1500007 	cmp	r0, r7
40019894:	1affffd6 	bne	400197f4 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
40019898:	e1c971be 	strh	r7, [r9, #30]
4001989c:	ea000030 	b	40019964 <CyU3PDmaIntHandler_TypeAuto+0x320>
400198a0:	e1d901b4 	ldrh	r0, [r9, #20]
400198a4:	e28d100c 	add	r1, sp, #12
400198a8:	eb0023f6 	bl	40022888 <CyU3PDmaDscrGetConfig>
400198ac:	e59d000c 	ldr	r0, [sp, #12]
400198b0:	e58d0000 	str	r0, [sp]
400198b4:	e59d0018 	ldr	r0, [sp, #24]
400198b8:	e59f10ec 	ldr	r1, [pc, #236]	; 400199ac <CyU3PDmaIntHandler_TypeAuto+0x368>
400198bc:	e0010820 	and	r0, r1, r0, lsr #16
400198c0:	e1cd00b4 	strh	r0, [sp, #4]
400198c4:	e241100f 	sub	r1, r1, #15
400198c8:	e59d0018 	ldr	r0, [sp, #24]
400198cc:	e0000001 	and	r0, r0, r1
400198d0:	e1cd00b6 	strh	r0, [sp, #6]
400198d4:	e59d0018 	ldr	r0, [sp, #24]
400198d8:	e200000f 	and	r0, r0, #15
400198dc:	e1cd00b8 	strh	r0, [sp, #8]
400198e0:	e3a00001 	mov	r0, #1
400198e4:	e5890000 	str	r0, [r9]
400198e8:	e59f00b8 	ldr	r0, [pc, #184]	; 400199a8 <CyU3PDmaIntHandler_TypeAuto+0x364>
400198ec:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400198f0:	e0800386 	add	r0, r0, r6, lsl #7
400198f4:	e5900014 	ldr	r0, [r0, #20]
400198f8:	e3c00001 	bic	r0, r0, #1
400198fc:	e59f10a4 	ldr	r1, [pc, #164]	; 400199a8 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019900:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019904:	e0811386 	add	r1, r1, r6, lsl #7
40019908:	e5810014 	str	r0, [r1, #20]
4001990c:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019910:	e3500000 	cmp	r0, #0
40019914:	0a000002 	beq	40019924 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
40019918:	e1dd10b6 	ldrh	r1, [sp, #6]
4001991c:	e59d0000 	ldr	r0, [sp]
40019920:	ebffe2ab 	bl	400123d4 <CyU3PSysFlushDRegion>
40019924:	e3a02000 	mov	r2, #0
40019928:	e3a01004 	mov	r1, #4
4001992c:	e2890074 	add	r0, r9, #116	; 0x74
40019930:	ebffc1dd 	bl	4000a0ac <_txe_event_flags_set>
40019934:	ebffe4ff 	bl	40012d38 <CyU3PSysBarrierSync>
40019938:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4001993c:	e3500000 	cmp	r0, #0
40019940:	0a000007 	beq	40019964 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019944:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019948:	e3100004 	tst	r0, #4
4001994c:	0a000004 	beq	40019964 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019950:	e1a0200d 	mov	r2, sp
40019954:	e3a01004 	mov	r1, #4
40019958:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001995c:	e1a00009 	mov	r0, r9
40019960:	e12fff33 	blx	r3
40019964:	e3180020 	tst	r8, #32
40019968:	0a00000b 	beq	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001996c:	ebffe4f1 	bl	40012d38 <CyU3PSysBarrierSync>
40019970:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019974:	e3500000 	cmp	r0, #0
40019978:	0a000007 	beq	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001997c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019980:	e3100080 	tst	r0, #128	; 0x80
40019984:	0a000004 	beq	4001999c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019988:	e3a02000 	mov	r2, #0
4001998c:	e3a01080 	mov	r1, #128	; 0x80
40019990:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019994:	e1a00009 	mov	r0, r9
40019998:	e12fff33 	blx	r3
4001999c:	e289003c 	add	r0, r9, #60	; 0x3c
400199a0:	ebffc28e 	bl	4000a3e0 <_txe_mutex_put>
400199a4:	eaffff2f 	b	40019668 <CyU3PDmaIntHandler_TypeAuto+0x24>
400199a8:	40030cf8 	.word	0x40030cf8
400199ac:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

400199b0 <CyU3PDmaIntHandler_TypeManual>:
400199b0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400199b4:	e24dd034 	sub	sp, sp, #52	; 0x34
400199b8:	e1a04000 	mov	r4, r0
400199bc:	e5945004 	ldr	r5, [r4, #4]
400199c0:	e5946008 	ldr	r6, [r4, #8]
400199c4:	e3160040 	tst	r6, #64	; 0x40
400199c8:	0a000003 	beq	400199dc <CyU3PDmaIntHandler_TypeManual+0x2c>
400199cc:	e1a00005 	mov	r0, r5
400199d0:	ebfffecc 	bl	40019508 <CyU3PDmaChannelHandleError>
400199d4:	e28dd034 	add	sp, sp, #52	; 0x34
400199d8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400199dc:	e3e01000 	mvn	r1, #0
400199e0:	e285003c 	add	r0, r5, #60	; 0x3c
400199e4:	ebffc248 	bl	4000a30c <_txe_mutex_get>
400199e8:	e1d501b2 	ldrh	r0, [r5, #18]
400199ec:	e5941000 	ldr	r1, [r4]
400199f0:	e1500821 	cmp	r0, r1, lsr #16
400199f4:	1a0000d6 	bne	40019d54 <CyU3PDmaIntHandler_TypeManual+0x3a4>
400199f8:	e594000c 	ldr	r0, [r4, #12]
400199fc:	e1a07800 	lsl	r7, r0, #16
40019a00:	e1a07827 	lsr	r7, r7, #16
40019a04:	e3160002 	tst	r6, #2
40019a08:	0a000060 	beq	40019b90 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a0c:	e5950000 	ldr	r0, [r5]
40019a10:	e3500003 	cmp	r0, #3
40019a14:	1a000013 	bne	40019a68 <CyU3PDmaIntHandler_TypeManual+0xb8>
40019a18:	e3a00001 	mov	r0, #1
40019a1c:	e5850000 	str	r0, [r5]
40019a20:	e3a02000 	mov	r2, #0
40019a24:	e3a01002 	mov	r1, #2
40019a28:	e2850074 	add	r0, r5, #116	; 0x74
40019a2c:	ebffc19e 	bl	4000a0ac <_txe_event_flags_set>
40019a30:	e3c66080 	bic	r6, r6, #128	; 0x80
40019a34:	ebffe4bf 	bl	40012d38 <CyU3PSysBarrierSync>
40019a38:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a3c:	e3500000 	cmp	r0, #0
40019a40:	0a000052 	beq	40019b90 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a44:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a48:	e3100002 	tst	r0, #2
40019a4c:	0a00004f 	beq	40019b90 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a50:	e3a02000 	mov	r2, #0
40019a54:	e3a01002 	mov	r1, #2
40019a58:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a5c:	e1a00005 	mov	r0, r5
40019a60:	e12fff33 	blx	r3
40019a64:	ea000049 	b	40019b90 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a68:	e1d500b4 	ldrh	r0, [r5, #4]
40019a6c:	e3500002 	cmp	r0, #2
40019a70:	1a000027 	bne	40019b14 <CyU3PDmaIntHandler_TypeManual+0x164>
40019a74:	e1a00000 	nop			; (mov r0, r0)
40019a78:	e1d501ba 	ldrh	r0, [r5, #26]
40019a7c:	e28d1024 	add	r1, sp, #36	; 0x24
40019a80:	eb002380 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019a84:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a88:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019f38 <CyU3PDmaIntHandler_TypeManual+0x588>
40019a8c:	e0000001 	and	r0, r0, r1
40019a90:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019a94:	e1d501ba 	ldrh	r0, [r5, #26]
40019a98:	e28d1024 	add	r1, sp, #36	; 0x24
40019a9c:	eb002394 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40019aa0:	e1d511ba 	ldrh	r1, [r5, #26]
40019aa4:	e1d501b0 	ldrh	r0, [r5, #16]
40019aa8:	e3a02000 	mov	r2, #0
40019aac:	ebffedaf 	bl	40015170 <CyU3PDmaSocketSendEvent>
40019ab0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019ab4:	e59f1480 	ldr	r1, [pc, #1152]	; 40019f3c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019ab8:	e0010820 	and	r0, r1, r0, lsr #16
40019abc:	e1c501ba 	strh	r0, [r5, #26]
40019ac0:	e1d502b0 	ldrh	r0, [r5, #32]
40019ac4:	e28d1024 	add	r1, sp, #36	; 0x24
40019ac8:	eb00236e 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019acc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019ad0:	e1c502b0 	strh	r0, [r5, #32]
40019ad4:	ebffe497 	bl	40012d38 <CyU3PSysBarrierSync>
40019ad8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019adc:	e3500000 	cmp	r0, #0
40019ae0:	0a000007 	beq	40019b04 <CyU3PDmaIntHandler_TypeManual+0x154>
40019ae4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ae8:	e3100010 	tst	r0, #16
40019aec:	0a000004 	beq	40019b04 <CyU3PDmaIntHandler_TypeManual+0x154>
40019af0:	e3a02000 	mov	r2, #0
40019af4:	e3a01010 	mov	r1, #16
40019af8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019afc:	e1a00005 	mov	r0, r5
40019b00:	e12fff33 	blx	r3
40019b04:	e1d502b0 	ldrh	r0, [r5, #32]
40019b08:	e1500007 	cmp	r0, r7
40019b0c:	1affffd9 	bne	40019a78 <CyU3PDmaIntHandler_TypeManual+0xc8>
40019b10:	ea00001e 	b	40019b90 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019b14:	e1a00000 	nop			; (mov r0, r0)
40019b18:	e1d501b8 	ldrh	r0, [r5, #24]
40019b1c:	e28d1024 	add	r1, sp, #36	; 0x24
40019b20:	eb002358 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019b24:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b28:	e3100008 	tst	r0, #8
40019b2c:	1a000003 	bne	40019b40 <CyU3PDmaIntHandler_TypeManual+0x190>
40019b30:	e3a02000 	mov	r2, #0
40019b34:	e3a01010 	mov	r1, #16
40019b38:	e2850074 	add	r0, r5, #116	; 0x74
40019b3c:	ebffc15a 	bl	4000a0ac <_txe_event_flags_set>
40019b40:	e1d502b0 	ldrh	r0, [r5, #32]
40019b44:	e28d1024 	add	r1, sp, #36	; 0x24
40019b48:	eb00234e 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019b4c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b50:	e1c502b0 	strh	r0, [r5, #32]
40019b54:	ebffe477 	bl	40012d38 <CyU3PSysBarrierSync>
40019b58:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b5c:	e3500000 	cmp	r0, #0
40019b60:	0a000007 	beq	40019b84 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019b64:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b68:	e3100010 	tst	r0, #16
40019b6c:	0a000004 	beq	40019b84 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019b70:	e3a02000 	mov	r2, #0
40019b74:	e3a01010 	mov	r1, #16
40019b78:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b7c:	e1a00005 	mov	r0, r5
40019b80:	e12fff33 	blx	r3
40019b84:	e1d502b0 	ldrh	r0, [r5, #32]
40019b88:	e1500007 	cmp	r0, r7
40019b8c:	1affffe1 	bne	40019b18 <CyU3PDmaIntHandler_TypeManual+0x168>
40019b90:	e3160010 	tst	r6, #16
40019b94:	0a000046 	beq	40019cb4 <CyU3PDmaIntHandler_TypeManual+0x304>
40019b98:	e1d502b0 	ldrh	r0, [r5, #32]
40019b9c:	e28d1024 	add	r1, sp, #36	; 0x24
40019ba0:	eb002338 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019ba4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ba8:	e3100001 	tst	r0, #1
40019bac:	0a000040 	beq	40019cb4 <CyU3PDmaIntHandler_TypeManual+0x304>
40019bb0:	e1d501b2 	ldrh	r0, [r5, #18]
40019bb4:	ebffecbd 	bl	40014eb0 <CyU3PDmaSocketDisable>
40019bb8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019bbc:	e59f1374 	ldr	r1, [pc, #884]	; 40019f38 <CyU3PDmaIntHandler_TypeManual+0x588>
40019bc0:	e0000001 	and	r0, r0, r1
40019bc4:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019bc8:	e1d502b0 	ldrh	r0, [r5, #32]
40019bcc:	e28d1024 	add	r1, sp, #36	; 0x24
40019bd0:	eb002347 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40019bd4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019bd8:	e1c502b0 	strh	r0, [r5, #32]
40019bdc:	e1d501b2 	ldrh	r0, [r5, #18]
40019be0:	e28d100c 	add	r1, sp, #12
40019be4:	ebffecc9 	bl	40014f10 <CyU3PDmaSocketGetConfig>
40019be8:	e59d0018 	ldr	r0, [sp, #24]
40019bec:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019bf0:	e58d0018 	str	r0, [sp, #24]
40019bf4:	e59d0018 	ldr	r0, [sp, #24]
40019bf8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019bfc:	e58d0018 	str	r0, [sp, #24]
40019c00:	e3a00000 	mov	r0, #0
40019c04:	e58d001c 	str	r0, [sp, #28]
40019c08:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019c0c:	e2400001 	sub	r0, r0, #1
40019c10:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
40019c14:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019c18:	e3500000 	cmp	r0, #0
40019c1c:	1a000004 	bne	40019c34 <CyU3PDmaIntHandler_TypeManual+0x284>
40019c20:	e3a00010 	mov	r0, #16
40019c24:	e58d001c 	str	r0, [sp, #28]
40019c28:	e59d0020 	ldr	r0, [sp, #32]
40019c2c:	e3c00010 	bic	r0, r0, #16
40019c30:	e58d0020 	str	r0, [sp, #32]
40019c34:	e1d502b0 	ldrh	r0, [r5, #32]
40019c38:	e58d000c 	str	r0, [sp, #12]
40019c3c:	e1d501b2 	ldrh	r0, [r5, #18]
40019c40:	e28d100c 	add	r1, sp, #12
40019c44:	ebffed5b 	bl	400151b8 <CyU3PDmaSocketSetConfig>
40019c48:	e1d501ba 	ldrh	r0, [r5, #26]
40019c4c:	e28d1024 	add	r1, sp, #36	; 0x24
40019c50:	eb00230c 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019c54:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c58:	e59f12d8 	ldr	r1, [pc, #728]	; 40019f38 <CyU3PDmaIntHandler_TypeManual+0x588>
40019c5c:	e0000001 	and	r0, r0, r1
40019c60:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019c64:	e1d501ba 	ldrh	r0, [r5, #26]
40019c68:	e28d1024 	add	r1, sp, #36	; 0x24
40019c6c:	eb002320 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40019c70:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019c74:	e3500000 	cmp	r0, #0
40019c78:	0a000004 	beq	40019c90 <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019c7c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019c80:	e59f32b0 	ldr	r3, [pc, #688]	; 40019f38 <CyU3PDmaIntHandler_TypeManual+0x588>
40019c84:	e0021003 	and	r1, r2, r3
40019c88:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019c8c:	ebffe1d0 	bl	400123d4 <CyU3PSysFlushDRegion>
40019c90:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c94:	e59f12a0 	ldr	r1, [pc, #672]	; 40019f3c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019c98:	e0010820 	and	r0, r1, r0, lsr #16
40019c9c:	e1c501ba 	strh	r0, [r5, #26]
40019ca0:	e1d511ba 	ldrh	r1, [r5, #26]
40019ca4:	e1d501b0 	ldrh	r0, [r5, #16]
40019ca8:	e3a02000 	mov	r2, #0
40019cac:	ebffed2f 	bl	40015170 <CyU3PDmaSocketSendEvent>
40019cb0:	ebffe420 	bl	40012d38 <CyU3PSysBarrierSync>
40019cb4:	e3160080 	tst	r6, #128	; 0x80
40019cb8:	0a000016 	beq	40019d18 <CyU3PDmaIntHandler_TypeManual+0x368>
40019cbc:	e1d500b4 	ldrh	r0, [r5, #4]
40019cc0:	e3500002 	cmp	r0, #2
40019cc4:	1a000001 	bne	40019cd0 <CyU3PDmaIntHandler_TypeManual+0x320>
40019cc8:	e1d501b0 	ldrh	r0, [r5, #16]
40019ccc:	ebffec77 	bl	40014eb0 <CyU3PDmaSocketDisable>
40019cd0:	e3a00001 	mov	r0, #1
40019cd4:	e5850000 	str	r0, [r5]
40019cd8:	e3a02000 	mov	r2, #0
40019cdc:	e3a01001 	mov	r1, #1
40019ce0:	e2850074 	add	r0, r5, #116	; 0x74
40019ce4:	ebffc0f0 	bl	4000a0ac <_txe_event_flags_set>
40019ce8:	ebffe412 	bl	40012d38 <CyU3PSysBarrierSync>
40019cec:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019cf0:	e3500000 	cmp	r0, #0
40019cf4:	0a000007 	beq	40019d18 <CyU3PDmaIntHandler_TypeManual+0x368>
40019cf8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019cfc:	e3100001 	tst	r0, #1
40019d00:	0a000004 	beq	40019d18 <CyU3PDmaIntHandler_TypeManual+0x368>
40019d04:	e3a02000 	mov	r2, #0
40019d08:	e3a01001 	mov	r1, #1
40019d0c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d10:	e1a00005 	mov	r0, r5
40019d14:	e12fff33 	blx	r3
40019d18:	e3160e12 	tst	r6, #288	; 0x120
40019d1c:	0a000082 	beq	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d20:	ebffe404 	bl	40012d38 <CyU3PSysBarrierSync>
40019d24:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d28:	e3500000 	cmp	r0, #0
40019d2c:	0a00007e 	beq	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d30:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d34:	e3100c01 	tst	r0, #256	; 0x100
40019d38:	0a00007b 	beq	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d3c:	e3a02000 	mov	r2, #0
40019d40:	e3a01c01 	mov	r1, #256	; 0x100
40019d44:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d48:	e1a00005 	mov	r0, r5
40019d4c:	e12fff33 	blx	r3
40019d50:	ea000075 	b	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d54:	e594000c 	ldr	r0, [r4, #12]
40019d58:	e1a07800 	lsl	r7, r0, #16
40019d5c:	e1a07827 	lsr	r7, r7, #16
40019d60:	e3160001 	tst	r6, #1
40019d64:	0a00005d 	beq	40019ee0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019d68:	e5950000 	ldr	r0, [r5]
40019d6c:	e3500004 	cmp	r0, #4
40019d70:	0a000031 	beq	40019e3c <CyU3PDmaIntHandler_TypeManual+0x48c>
40019d74:	e1a00000 	nop			; (mov r0, r0)
40019d78:	e1d501be 	ldrh	r0, [r5, #30]
40019d7c:	e28d1024 	add	r1, sp, #36	; 0x24
40019d80:	eb0022c0 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019d84:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019d88:	e58d0000 	str	r0, [sp]
40019d8c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d90:	e59f11a4 	ldr	r1, [pc, #420]	; 40019f3c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019d94:	e0010820 	and	r0, r1, r0, lsr #16
40019d98:	e1cd00b4 	strh	r0, [sp, #4]
40019d9c:	e241100f 	sub	r1, r1, #15
40019da0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019da4:	e0000001 	and	r0, r0, r1
40019da8:	e1cd00b6 	strh	r0, [sp, #6]
40019dac:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019db0:	e200000f 	and	r0, r0, #15
40019db4:	e1cd00b8 	strh	r0, [sp, #8]
40019db8:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019dbc:	e3500000 	cmp	r0, #0
40019dc0:	0a000002 	beq	40019dd0 <CyU3PDmaIntHandler_TypeManual+0x420>
40019dc4:	e1dd10b6 	ldrh	r1, [sp, #6]
40019dc8:	e59d0000 	ldr	r0, [sp]
40019dcc:	ebffe180 	bl	400123d4 <CyU3PSysFlushDRegion>
40019dd0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019dd4:	e3100008 	tst	r0, #8
40019dd8:	0a000003 	beq	40019dec <CyU3PDmaIntHandler_TypeManual+0x43c>
40019ddc:	e3a02000 	mov	r2, #0
40019de0:	e3a01008 	mov	r1, #8
40019de4:	e2850074 	add	r0, r5, #116	; 0x74
40019de8:	ebffc0af 	bl	4000a0ac <_txe_event_flags_set>
40019dec:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019df0:	e59f1144 	ldr	r1, [pc, #324]	; 40019f3c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019df4:	e0010820 	and	r0, r1, r0, lsr #16
40019df8:	e1c501be 	strh	r0, [r5, #30]
40019dfc:	ebffe3cd 	bl	40012d38 <CyU3PSysBarrierSync>
40019e00:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019e04:	e3500000 	cmp	r0, #0
40019e08:	0a000007 	beq	40019e2c <CyU3PDmaIntHandler_TypeManual+0x47c>
40019e0c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019e10:	e3100008 	tst	r0, #8
40019e14:	0a000004 	beq	40019e2c <CyU3PDmaIntHandler_TypeManual+0x47c>
40019e18:	e1a0200d 	mov	r2, sp
40019e1c:	e3a01008 	mov	r1, #8
40019e20:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019e24:	e1a00005 	mov	r0, r5
40019e28:	e12fff33 	blx	r3
40019e2c:	e1d501be 	ldrh	r0, [r5, #30]
40019e30:	e1500007 	cmp	r0, r7
40019e34:	1affffcf 	bne	40019d78 <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019e38:	ea000028 	b	40019ee0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019e3c:	e1d501b4 	ldrh	r0, [r5, #20]
40019e40:	e28d1024 	add	r1, sp, #36	; 0x24
40019e44:	eb00228f 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019e48:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019e4c:	e58d0000 	str	r0, [sp]
40019e50:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e54:	e59f10e0 	ldr	r1, [pc, #224]	; 40019f3c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019e58:	e0010820 	and	r0, r1, r0, lsr #16
40019e5c:	e1cd00b4 	strh	r0, [sp, #4]
40019e60:	e241100f 	sub	r1, r1, #15
40019e64:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e68:	e0000001 	and	r0, r0, r1
40019e6c:	e1cd00b6 	strh	r0, [sp, #6]
40019e70:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e74:	e200000f 	and	r0, r0, #15
40019e78:	e1cd00b8 	strh	r0, [sp, #8]
40019e7c:	e3a00001 	mov	r0, #1
40019e80:	e5850000 	str	r0, [r5]
40019e84:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019e88:	e3500000 	cmp	r0, #0
40019e8c:	0a000002 	beq	40019e9c <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019e90:	e1dd10b6 	ldrh	r1, [sp, #6]
40019e94:	e59d0000 	ldr	r0, [sp]
40019e98:	ebffe14d 	bl	400123d4 <CyU3PSysFlushDRegion>
40019e9c:	e3a02000 	mov	r2, #0
40019ea0:	e3a01004 	mov	r1, #4
40019ea4:	e2850074 	add	r0, r5, #116	; 0x74
40019ea8:	ebffc07f 	bl	4000a0ac <_txe_event_flags_set>
40019eac:	e3c66080 	bic	r6, r6, #128	; 0x80
40019eb0:	ebffe3a0 	bl	40012d38 <CyU3PSysBarrierSync>
40019eb4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019eb8:	e3500000 	cmp	r0, #0
40019ebc:	0a000007 	beq	40019ee0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019ec0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ec4:	e3100004 	tst	r0, #4
40019ec8:	0a000004 	beq	40019ee0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019ecc:	e1a0200d 	mov	r2, sp
40019ed0:	e3a01004 	mov	r1, #4
40019ed4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ed8:	e1a00005 	mov	r0, r5
40019edc:	e12fff33 	blx	r3
40019ee0:	e3160080 	tst	r6, #128	; 0x80
40019ee4:	0a000002 	beq	40019ef4 <CyU3PDmaIntHandler_TypeManual+0x544>
40019ee8:	e3a00006 	mov	r0, #6
40019eec:	e5850000 	str	r0, [r5]
40019ef0:	ebffe390 	bl	40012d38 <CyU3PSysBarrierSync>
40019ef4:	e3160020 	tst	r6, #32
40019ef8:	0a00000b 	beq	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019efc:	ebffe38d 	bl	40012d38 <CyU3PSysBarrierSync>
40019f00:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019f04:	e3500000 	cmp	r0, #0
40019f08:	0a000007 	beq	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f0c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019f10:	e3100080 	tst	r0, #128	; 0x80
40019f14:	0a000004 	beq	40019f2c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f18:	e3a02000 	mov	r2, #0
40019f1c:	e3a01080 	mov	r1, #128	; 0x80
40019f20:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019f24:	e1a00005 	mov	r0, r5
40019f28:	e12fff33 	blx	r3
40019f2c:	e285003c 	add	r0, r5, #60	; 0x3c
40019f30:	ebffc12a 	bl	4000a3e0 <_txe_mutex_put>
40019f34:	eafffea6 	b	400199d4 <CyU3PDmaIntHandler_TypeManual+0x24>
40019f38:	0000fff0 	.word	0x0000fff0
40019f3c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019f40 <CyU3PDmaIntHandler_TypeManyToOne>:
40019f40:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019f44:	e24dd034 	sub	sp, sp, #52	; 0x34
40019f48:	e1a04000 	mov	r4, r0
40019f4c:	e5945004 	ldr	r5, [r4, #4]
40019f50:	e5946008 	ldr	r6, [r4, #8]
40019f54:	e3160040 	tst	r6, #64	; 0x40
40019f58:	0a000003 	beq	40019f6c <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019f5c:	e1a00005 	mov	r0, r5
40019f60:	eb00033d 	bl	4001ac5c <CyU3PDmaMultiChannelHandleError>
40019f64:	e28dd034 	add	sp, sp, #52	; 0x34
40019f68:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019f6c:	e3e01000 	mvn	r1, #0
40019f70:	e2850078 	add	r0, r5, #120	; 0x78
40019f74:	ebffc0e4 	bl	4000a30c <_txe_mutex_get>
40019f78:	e5940000 	ldr	r0, [r4]
40019f7c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a514 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f80:	e0019820 	and	r9, r1, r0, lsr #16
40019f84:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019f88:	e1500009 	cmp	r0, r9
40019f8c:	1a0000d8 	bne	4001a2f4 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019f90:	e594000c 	ldr	r0, [r4, #12]
40019f94:	e0007001 	and	r7, r0, r1
40019f98:	e3160002 	tst	r6, #2
40019f9c:	0a000054 	beq	4001a0f4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019fa0:	e5950000 	ldr	r0, [r5]
40019fa4:	e3500003 	cmp	r0, #3
40019fa8:	0a000030 	beq	4001a070 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019fac:	e1a00000 	nop			; (mov r0, r0)
40019fb0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019fb4:	e28d1024 	add	r1, sp, #36	; 0x24
40019fb8:	eb002232 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019fbc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019fc0:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a514 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019fc4:	e0010820 	and	r0, r1, r0, lsr #16
40019fc8:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019fcc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019fd0:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019fd4:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019fd8:	e28d1024 	add	r1, sp, #36	; 0x24
40019fdc:	eb002229 	bl	40022888 <CyU3PDmaDscrGetConfig>
40019fe0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fe4:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a518 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019fe8:	e0000001 	and	r0, r0, r1
40019fec:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ff0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019ff4:	e28d1024 	add	r1, sp, #36	; 0x24
40019ff8:	eb00223d 	bl	400228f4 <CyU3PDmaDscrSetConfig>
40019ffc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a000:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a51c <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a004:	e0000001 	and	r0, r0, r1
4001a008:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a00c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a010:	e1a00820 	lsr	r0, r0, #16
4001a014:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a018:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a01c:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a020:	e1a00802 	lsl	r0, r2, #16
4001a024:	e1a00820 	lsr	r0, r0, #16
4001a028:	e3a02000 	mov	r2, #0
4001a02c:	ebffec4f 	bl	40015170 <CyU3PDmaSocketSendEvent>
4001a030:	ebffe340 	bl	40012d38 <CyU3PSysBarrierSync>
4001a034:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a038:	e3500000 	cmp	r0, #0
4001a03c:	0a000007 	beq	4001a060 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a040:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a044:	e3100010 	tst	r0, #16
4001a048:	0a000004 	beq	4001a060 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a04c:	e3a02000 	mov	r2, #0
4001a050:	e3a01010 	mov	r1, #16
4001a054:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a058:	e1a00005 	mov	r0, r5
4001a05c:	e12fff33 	blx	r3
4001a060:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a064:	e1500007 	cmp	r0, r7
4001a068:	1affffd0 	bne	40019fb0 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
4001a06c:	ea000020 	b	4001a0f4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a070:	e3a00001 	mov	r0, #1
4001a074:	e5850000 	str	r0, [r5]
4001a078:	e1d500b4 	ldrh	r0, [r5, #4]
4001a07c:	e3500005 	cmp	r0, #5
4001a080:	1a00000a 	bne	4001a0b0 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
4001a084:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a088:	e1a0100d 	mov	r1, sp
4001a08c:	ebffeb9f 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001a090:	e3a00000 	mov	r0, #0
4001a094:	e58d0010 	str	r0, [sp, #16]
4001a098:	e59d0014 	ldr	r0, [sp, #20]
4001a09c:	e3c00002 	bic	r0, r0, #2
4001a0a0:	e58d0014 	str	r0, [sp, #20]
4001a0a4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a0a8:	e1a0100d 	mov	r1, sp
4001a0ac:	ebffec41 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001a0b0:	e3a02000 	mov	r2, #0
4001a0b4:	e3a01002 	mov	r1, #2
4001a0b8:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a0bc:	ebffbffa 	bl	4000a0ac <_txe_event_flags_set>
4001a0c0:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a0c4:	ebffe31b 	bl	40012d38 <CyU3PSysBarrierSync>
4001a0c8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a0cc:	e3500000 	cmp	r0, #0
4001a0d0:	0a000007 	beq	4001a0f4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a0d4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a0d8:	e3100002 	tst	r0, #2
4001a0dc:	0a000004 	beq	4001a0f4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a0e0:	e3a02000 	mov	r2, #0
4001a0e4:	e3a01002 	mov	r1, #2
4001a0e8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a0ec:	e1a00005 	mov	r0, r5
4001a0f0:	e12fff33 	blx	r3
4001a0f4:	e3160010 	tst	r6, #16
4001a0f8:	0a00004f 	beq	4001a23c <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a0fc:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a100:	e28d1024 	add	r1, sp, #36	; 0x24
4001a104:	eb0021df 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a108:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a10c:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a514 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a110:	e0010820 	and	r0, r1, r0, lsr #16
4001a114:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a118:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a11c:	e3100001 	tst	r0, #1
4001a120:	0a000045 	beq	4001a23c <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a124:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a128:	ebffeb60 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001a12c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a130:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a518 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a134:	e0000001 	and	r0, r0, r1
4001a138:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a13c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a140:	e28d1024 	add	r1, sp, #36	; 0x24
4001a144:	eb0021ea 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001a148:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a14c:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a150:	e1a0100d 	mov	r1, sp
4001a154:	e1a00009 	mov	r0, r9
4001a158:	ebffeb6c 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001a15c:	e59d000c 	ldr	r0, [sp, #12]
4001a160:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a164:	e58d000c 	str	r0, [sp, #12]
4001a168:	e59d000c 	ldr	r0, [sp, #12]
4001a16c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a170:	e58d000c 	str	r0, [sp, #12]
4001a174:	e3a00000 	mov	r0, #0
4001a178:	e58d0010 	str	r0, [sp, #16]
4001a17c:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a180:	e2400001 	sub	r0, r0, #1
4001a184:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
4001a188:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a18c:	e3500000 	cmp	r0, #0
4001a190:	1a000004 	bne	4001a1a8 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
4001a194:	e3a00010 	mov	r0, #16
4001a198:	e58d0010 	str	r0, [sp, #16]
4001a19c:	e59d0014 	ldr	r0, [sp, #20]
4001a1a0:	e3c00010 	bic	r0, r0, #16
4001a1a4:	e58d0014 	str	r0, [sp, #20]
4001a1a8:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a1ac:	e58d0000 	str	r0, [sp]
4001a1b0:	e1a0100d 	mov	r1, sp
4001a1b4:	e1a00009 	mov	r0, r9
4001a1b8:	ebffebfe 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001a1bc:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a1c0:	e28d1024 	add	r1, sp, #36	; 0x24
4001a1c4:	eb0021af 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a1c8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a1cc:	e59f1344 	ldr	r1, [pc, #836]	; 4001a518 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a1d0:	e0000001 	and	r0, r0, r1
4001a1d4:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a1d8:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a1dc:	e28d1024 	add	r1, sp, #36	; 0x24
4001a1e0:	eb0021c3 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001a1e4:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a1e8:	e3500000 	cmp	r0, #0
4001a1ec:	0a000004 	beq	4001a204 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
4001a1f0:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
4001a1f4:	e59f331c 	ldr	r3, [pc, #796]	; 4001a518 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a1f8:	e0021003 	and	r1, r2, r3
4001a1fc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a200:	ebffe073 	bl	400123d4 <CyU3PSysFlushDRegion>
4001a204:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a208:	e59f130c 	ldr	r1, [pc, #780]	; 4001a51c <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a20c:	e0000001 	and	r0, r0, r1
4001a210:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a214:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a218:	e1a00820 	lsr	r0, r0, #16
4001a21c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a220:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a224:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a228:	e1a00802 	lsl	r0, r2, #16
4001a22c:	e1a00820 	lsr	r0, r0, #16
4001a230:	e3a02000 	mov	r2, #0
4001a234:	ebffebcd 	bl	40015170 <CyU3PDmaSocketSendEvent>
4001a238:	ebffe2be 	bl	40012d38 <CyU3PSysBarrierSync>
4001a23c:	e3160080 	tst	r6, #128	; 0x80
4001a240:	0a00001c 	beq	4001a2b8 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a244:	e3a08000 	mov	r8, #0
4001a248:	ea000005 	b	4001a264 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
4001a24c:	e2851024 	add	r1, r5, #36	; 0x24
4001a250:	e0811088 	add	r1, r1, r8, lsl #1
4001a254:	e1d100b0 	ldrh	r0, [r1]
4001a258:	ebffeb14 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001a25c:	e2880001 	add	r0, r8, #1
4001a260:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a264:	e1d500ba 	ldrh	r0, [r5, #10]
4001a268:	e1500008 	cmp	r0, r8
4001a26c:	cafffff6 	bgt	4001a24c <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
4001a270:	e3a00001 	mov	r0, #1
4001a274:	e5850000 	str	r0, [r5]
4001a278:	e3a02000 	mov	r2, #0
4001a27c:	e3a01001 	mov	r1, #1
4001a280:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a284:	ebffbf88 	bl	4000a0ac <_txe_event_flags_set>
4001a288:	ebffe2aa 	bl	40012d38 <CyU3PSysBarrierSync>
4001a28c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a290:	e3500000 	cmp	r0, #0
4001a294:	0a000007 	beq	4001a2b8 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a298:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a29c:	e3100001 	tst	r0, #1
4001a2a0:	0a000004 	beq	4001a2b8 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a2a4:	e3a02000 	mov	r2, #0
4001a2a8:	e3a01001 	mov	r1, #1
4001a2ac:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a2b0:	e1a00005 	mov	r0, r5
4001a2b4:	e12fff33 	blx	r3
4001a2b8:	e3160e12 	tst	r6, #288	; 0x120
4001a2bc:	0a000091 	beq	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a2c0:	ebffe29c 	bl	40012d38 <CyU3PSysBarrierSync>
4001a2c4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a2c8:	e3500000 	cmp	r0, #0
4001a2cc:	0a00008d 	beq	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a2d0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a2d4:	e3100c01 	tst	r0, #256	; 0x100
4001a2d8:	0a00008a 	beq	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a2dc:	e3a02000 	mov	r2, #0
4001a2e0:	e3a01c01 	mov	r1, #256	; 0x100
4001a2e4:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a2e8:	e1a00005 	mov	r0, r5
4001a2ec:	e12fff33 	blx	r3
4001a2f0:	ea000084 	b	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a2f4:	e594000c 	ldr	r0, [r4, #12]
4001a2f8:	e1a07800 	lsl	r7, r0, #16
4001a2fc:	e1a07827 	lsr	r7, r7, #16
4001a300:	e3160001 	tst	r6, #1
4001a304:	0a000048 	beq	4001a42c <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
4001a308:	e5950000 	ldr	r0, [r5]
4001a30c:	e3500004 	cmp	r0, #4
4001a310:	0a00007c 	beq	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a314:	e3a08000 	mov	r8, #0
4001a318:	ea000007 	b	4001a33c <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
4001a31c:	e2850024 	add	r0, r5, #36	; 0x24
4001a320:	e0800088 	add	r0, r0, r8, lsl #1
4001a324:	e1d000b0 	ldrh	r0, [r0]
4001a328:	e1500009 	cmp	r0, r9
4001a32c:	1a000000 	bne	4001a334 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
4001a330:	ea000004 	b	4001a348 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
4001a334:	e2880001 	add	r0, r8, #1
4001a338:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a33c:	e1d500ba 	ldrh	r0, [r5, #10]
4001a340:	e1500008 	cmp	r0, r8
4001a344:	cafffff4 	bgt	4001a31c <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
4001a348:	e1a00000 	nop			; (mov r0, r0)
4001a34c:	e1a00000 	nop			; (mov r0, r0)
4001a350:	e285103e 	add	r1, r5, #62	; 0x3e
4001a354:	e0811088 	add	r1, r1, r8, lsl #1
4001a358:	e1d100b0 	ldrh	r0, [r1]
4001a35c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a360:	eb002148 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a364:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a368:	e58d0018 	str	r0, [sp, #24]
4001a36c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a370:	e59f119c 	ldr	r1, [pc, #412]	; 4001a514 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a374:	e0010820 	and	r0, r1, r0, lsr #16
4001a378:	e1cd01bc 	strh	r0, [sp, #28]
4001a37c:	e241100f 	sub	r1, r1, #15
4001a380:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a384:	e0000001 	and	r0, r0, r1
4001a388:	e1cd01be 	strh	r0, [sp, #30]
4001a38c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a390:	e200000f 	and	r0, r0, #15
4001a394:	e1cd02b0 	strh	r0, [sp, #32]
4001a398:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a39c:	e3500000 	cmp	r0, #0
4001a3a0:	0a000002 	beq	4001a3b0 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a3a4:	e1dd11be 	ldrh	r1, [sp, #30]
4001a3a8:	e59d0018 	ldr	r0, [sp, #24]
4001a3ac:	ebffe008 	bl	400123d4 <CyU3PSysFlushDRegion>
4001a3b0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3b4:	e3100008 	tst	r0, #8
4001a3b8:	0a000003 	beq	4001a3cc <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a3bc:	e3a02000 	mov	r2, #0
4001a3c0:	e3a01008 	mov	r1, #8
4001a3c4:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a3c8:	ebffbf37 	bl	4000a0ac <_txe_event_flags_set>
4001a3cc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a3d0:	e59f113c 	ldr	r1, [pc, #316]	; 4001a514 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a3d4:	e0010820 	and	r0, r1, r0, lsr #16
4001a3d8:	e285103e 	add	r1, r5, #62	; 0x3e
4001a3dc:	e0811088 	add	r1, r1, r8, lsl #1
4001a3e0:	e1c100b0 	strh	r0, [r1]
4001a3e4:	ebffe253 	bl	40012d38 <CyU3PSysBarrierSync>
4001a3e8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a3ec:	e3500000 	cmp	r0, #0
4001a3f0:	0a000007 	beq	4001a414 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a3f4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a3f8:	e3100008 	tst	r0, #8
4001a3fc:	0a000004 	beq	4001a414 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a400:	e28d2018 	add	r2, sp, #24
4001a404:	e3a01008 	mov	r1, #8
4001a408:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a40c:	e1a00005 	mov	r0, r5
4001a410:	e12fff33 	blx	r3
4001a414:	e285003e 	add	r0, r5, #62	; 0x3e
4001a418:	e0800088 	add	r0, r0, r8, lsl #1
4001a41c:	e1d000b0 	ldrh	r0, [r0]
4001a420:	e1500007 	cmp	r0, r7
4001a424:	1affffc9 	bne	4001a350 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a428:	ea000036 	b	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a42c:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a430:	e28d1024 	add	r1, sp, #36	; 0x24
4001a434:	eb002113 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a438:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a43c:	e58d0018 	str	r0, [sp, #24]
4001a440:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a444:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a514 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a448:	e0010820 	and	r0, r1, r0, lsr #16
4001a44c:	e1cd01bc 	strh	r0, [sp, #28]
4001a450:	e241100f 	sub	r1, r1, #15
4001a454:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a458:	e0000001 	and	r0, r0, r1
4001a45c:	e1cd01be 	strh	r0, [sp, #30]
4001a460:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a464:	e200000f 	and	r0, r0, #15
4001a468:	e1cd02b0 	strh	r0, [sp, #32]
4001a46c:	e3a00001 	mov	r0, #1
4001a470:	e5850000 	str	r0, [r5]
4001a474:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a478:	e3500000 	cmp	r0, #0
4001a47c:	0a000002 	beq	4001a48c <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a480:	e1dd11be 	ldrh	r1, [sp, #30]
4001a484:	e59d0018 	ldr	r0, [sp, #24]
4001a488:	ebffdfd1 	bl	400123d4 <CyU3PSysFlushDRegion>
4001a48c:	e1d500b4 	ldrh	r0, [r5, #4]
4001a490:	e3500005 	cmp	r0, #5
4001a494:	1a00000a 	bne	4001a4c4 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a498:	e1a0100d 	mov	r1, sp
4001a49c:	e1a00009 	mov	r0, r9
4001a4a0:	ebffea9a 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001a4a4:	e3a00000 	mov	r0, #0
4001a4a8:	e58d0010 	str	r0, [sp, #16]
4001a4ac:	e59d0014 	ldr	r0, [sp, #20]
4001a4b0:	e3c00001 	bic	r0, r0, #1
4001a4b4:	e58d0014 	str	r0, [sp, #20]
4001a4b8:	e1a0100d 	mov	r1, sp
4001a4bc:	e1a00009 	mov	r0, r9
4001a4c0:	ebffeb3c 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001a4c4:	e3a02000 	mov	r2, #0
4001a4c8:	e3a01004 	mov	r1, #4
4001a4cc:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a4d0:	ebffbef5 	bl	4000a0ac <_txe_event_flags_set>
4001a4d4:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a4d8:	ebffe216 	bl	40012d38 <CyU3PSysBarrierSync>
4001a4dc:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a4e0:	e3500000 	cmp	r0, #0
4001a4e4:	0a000007 	beq	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a4e8:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a4ec:	e3100004 	tst	r0, #4
4001a4f0:	0a000004 	beq	4001a508 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a4f4:	e28d2018 	add	r2, sp, #24
4001a4f8:	e3a01004 	mov	r1, #4
4001a4fc:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a500:	e1a00005 	mov	r0, r5
4001a504:	e12fff33 	blx	r3
4001a508:	e2850078 	add	r0, r5, #120	; 0x78
4001a50c:	ebffbfb3 	bl	4000a3e0 <_txe_mutex_put>
4001a510:	eafffe93 	b	40019f64 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a514:	0000ffff 	.word	0x0000ffff
4001a518:	0000fff0 	.word	0x0000fff0
4001a51c:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a520 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a520:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a524:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a528:	e1a04000 	mov	r4, r0
4001a52c:	e594a004 	ldr	sl, [r4, #4]
4001a530:	e5940000 	ldr	r0, [r4]
4001a534:	e59f1664 	ldr	r1, [pc, #1636]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a538:	e0016820 	and	r6, r1, r0, lsr #16
4001a53c:	e5945008 	ldr	r5, [r4, #8]
4001a540:	e3150040 	tst	r5, #64	; 0x40
4001a544:	0a000003 	beq	4001a558 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a548:	e1a0000a 	mov	r0, sl
4001a54c:	eb0001c2 	bl	4001ac5c <CyU3PDmaMultiChannelHandleError>
4001a550:	e28dd038 	add	sp, sp, #56	; 0x38
4001a554:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a558:	e3e01000 	mvn	r1, #0
4001a55c:	e28a0078 	add	r0, sl, #120	; 0x78
4001a560:	ebffbf69 	bl	4000a30c <_txe_mutex_get>
4001a564:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a568:	e1500006 	cmp	r0, r6
4001a56c:	0a0000fc 	beq	4001a964 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a570:	e594000c 	ldr	r0, [r4, #12]
4001a574:	e1a09800 	lsl	r9, r0, #16
4001a578:	e1a09829 	lsr	r9, r9, #16
4001a57c:	e3a08000 	mov	r8, #0
4001a580:	ea000007 	b	4001a5a4 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a584:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a588:	e0800088 	add	r0, r0, r8, lsl #1
4001a58c:	e1d000b0 	ldrh	r0, [r0]
4001a590:	e1500006 	cmp	r0, r6
4001a594:	1a000000 	bne	4001a59c <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a598:	ea000004 	b	4001a5b0 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a59c:	e2880001 	add	r0, r8, #1
4001a5a0:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a5a4:	e1da00ba 	ldrh	r0, [sl, #10]
4001a5a8:	e1500008 	cmp	r0, r8
4001a5ac:	cafffff4 	bgt	4001a584 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a5b0:	e1a00000 	nop			; (mov r0, r0)
4001a5b4:	e3150002 	tst	r5, #2
4001a5b8:	0a00007e 	beq	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a5bc:	e59a0000 	ldr	r0, [sl]
4001a5c0:	e3500003 	cmp	r0, #3
4001a5c4:	0a00005a 	beq	4001a734 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a5c8:	e1a00000 	nop			; (mov r0, r0)
4001a5cc:	e28a1046 	add	r1, sl, #70	; 0x46
4001a5d0:	e0811088 	add	r1, r1, r8, lsl #1
4001a5d4:	e1d100b0 	ldrh	r0, [r1]
4001a5d8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a5dc:	eb0020a9 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a5e0:	e28a1046 	add	r1, sl, #70	; 0x46
4001a5e4:	e0811088 	add	r1, r1, r8, lsl #1
4001a5e8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a5ec:	e1c100b0 	strh	r0, [r1]
4001a5f0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a5f4:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a5f8:	e0017820 	and	r7, r1, r0, lsr #16
4001a5fc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a600:	e1a00007 	mov	r0, r7
4001a604:	eb00209f 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a608:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a60c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001aba4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a610:	e0000001 	and	r0, r0, r1
4001a614:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a618:	e28d1028 	add	r1, sp, #40	; 0x28
4001a61c:	e1a00007 	mov	r0, r7
4001a620:	eb0020b3 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001a624:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a628:	e3a02000 	mov	r2, #0
4001a62c:	e1a01007 	mov	r1, r7
4001a630:	ebffeace 	bl	40015170 <CyU3PDmaSocketSendEvent>
4001a634:	ebffe1bf 	bl	40012d38 <CyU3PSysBarrierSync>
4001a638:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a63c:	e3500000 	cmp	r0, #0
4001a640:	0a000007 	beq	4001a664 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a644:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a648:	e3100010 	tst	r0, #16
4001a64c:	0a000004 	beq	4001a664 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a650:	e3a02000 	mov	r2, #0
4001a654:	e3a01010 	mov	r1, #16
4001a658:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a65c:	e1a0000a 	mov	r0, sl
4001a660:	e12fff33 	blx	r3
4001a664:	e28a0046 	add	r0, sl, #70	; 0x46
4001a668:	e0800088 	add	r0, r0, r8, lsl #1
4001a66c:	e1d000b0 	ldrh	r0, [r0]
4001a670:	e1500009 	cmp	r0, r9
4001a674:	1affffd4 	bne	4001a5cc <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a678:	e59a0000 	ldr	r0, [sl]
4001a67c:	e3500006 	cmp	r0, #6
4001a680:	1a00004c 	bne	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a684:	e1da00b8 	ldrh	r0, [sl, #8]
4001a688:	e1da10ba 	ldrh	r1, [sl, #10]
4001a68c:	e0000091 	mul	r0, r1, r0
4001a690:	e1a08800 	lsl	r8, r0, #16
4001a694:	e1a08828 	lsr	r8, r8, #16
4001a698:	e1da71b4 	ldrh	r7, [sl, #20]
4001a69c:	ea00000c 	b	4001a6d4 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a6a0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a6a4:	e1a00007 	mov	r0, r7
4001a6a8:	eb002076 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a6ac:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6b0:	e3100008 	tst	r0, #8
4001a6b4:	0a000000 	beq	4001a6bc <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a6b8:	ea000007 	b	4001a6dc <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a6bc:	e2480001 	sub	r0, r8, #1
4001a6c0:	e1a08800 	lsl	r8, r0, #16
4001a6c4:	e1a08828 	lsr	r8, r8, #16
4001a6c8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a6cc:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a6d0:	e0017820 	and	r7, r1, r0, lsr #16
4001a6d4:	e3580000 	cmp	r8, #0
4001a6d8:	1afffff0 	bne	4001a6a0 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a6dc:	e1a00000 	nop			; (mov r0, r0)
4001a6e0:	e3580000 	cmp	r8, #0
4001a6e4:	1a000033 	bne	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a6e8:	e3a00001 	mov	r0, #1
4001a6ec:	e58a0000 	str	r0, [sl]
4001a6f0:	e3a02000 	mov	r2, #0
4001a6f4:	e3a01001 	mov	r1, #1
4001a6f8:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a6fc:	ebffbe6a 	bl	4000a0ac <_txe_event_flags_set>
4001a700:	ebffe18c 	bl	40012d38 <CyU3PSysBarrierSync>
4001a704:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a708:	e3500000 	cmp	r0, #0
4001a70c:	0a000029 	beq	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a710:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a714:	e3100001 	tst	r0, #1
4001a718:	0a000026 	beq	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a71c:	e3a02000 	mov	r2, #0
4001a720:	e3a01001 	mov	r1, #1
4001a724:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a728:	e1a0000a 	mov	r0, sl
4001a72c:	e12fff33 	blx	r3
4001a730:	ea000020 	b	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a734:	e3a00001 	mov	r0, #1
4001a738:	e58a0000 	str	r0, [sl]
4001a73c:	e1da00b4 	ldrh	r0, [sl, #4]
4001a740:	e3500006 	cmp	r0, #6
4001a744:	1a00000a 	bne	4001a774 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a748:	e28d1004 	add	r1, sp, #4
4001a74c:	e1a00006 	mov	r0, r6
4001a750:	ebffe9ee 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001a754:	e3a00000 	mov	r0, #0
4001a758:	e58d0014 	str	r0, [sp, #20]
4001a75c:	e59d0018 	ldr	r0, [sp, #24]
4001a760:	e3c00002 	bic	r0, r0, #2
4001a764:	e58d0018 	str	r0, [sp, #24]
4001a768:	e28d1004 	add	r1, sp, #4
4001a76c:	e1a00006 	mov	r0, r6
4001a770:	ebffea90 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001a774:	e3a02000 	mov	r2, #0
4001a778:	e3a01002 	mov	r1, #2
4001a77c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a780:	ebffbe49 	bl	4000a0ac <_txe_event_flags_set>
4001a784:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a788:	ebffe16a 	bl	40012d38 <CyU3PSysBarrierSync>
4001a78c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a790:	e3500000 	cmp	r0, #0
4001a794:	0a000007 	beq	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a798:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a79c:	e3100002 	tst	r0, #2
4001a7a0:	0a000004 	beq	4001a7b8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7a4:	e3a02000 	mov	r2, #0
4001a7a8:	e3a01002 	mov	r1, #2
4001a7ac:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a7b0:	e1a0000a 	mov	r0, sl
4001a7b4:	e12fff33 	blx	r3
4001a7b8:	e3150010 	tst	r5, #16
4001a7bc:	0a000059 	beq	4001a928 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a7c0:	e28a1046 	add	r1, sl, #70	; 0x46
4001a7c4:	e0811088 	add	r1, r1, r8, lsl #1
4001a7c8:	e1d100b0 	ldrh	r0, [r1]
4001a7cc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a7d0:	eb00202c 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a7d4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a7d8:	e3100001 	tst	r0, #1
4001a7dc:	0a000051 	beq	4001a928 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a7e0:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a7e4:	e0811088 	add	r1, r1, r8, lsl #1
4001a7e8:	e1d100b0 	ldrh	r0, [r1]
4001a7ec:	ebffe9af 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001a7f0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a7f4:	e59f13a8 	ldr	r1, [pc, #936]	; 4001aba4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a7f8:	e0000001 	and	r0, r0, r1
4001a7fc:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a800:	e28a1046 	add	r1, sl, #70	; 0x46
4001a804:	e0811088 	add	r1, r1, r8, lsl #1
4001a808:	e1d100b0 	ldrh	r0, [r1]
4001a80c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a810:	eb002037 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001a814:	e28a1046 	add	r1, sl, #70	; 0x46
4001a818:	e0811088 	add	r1, r1, r8, lsl #1
4001a81c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a820:	e1c100b0 	strh	r0, [r1]
4001a824:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a828:	e0811088 	add	r1, r1, r8, lsl #1
4001a82c:	e1d100b0 	ldrh	r0, [r1]
4001a830:	e28d1004 	add	r1, sp, #4
4001a834:	ebffe9b5 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001a838:	e59d0010 	ldr	r0, [sp, #16]
4001a83c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a840:	e58d0010 	str	r0, [sp, #16]
4001a844:	e59d0010 	ldr	r0, [sp, #16]
4001a848:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a84c:	e58d0010 	str	r0, [sp, #16]
4001a850:	e3a00000 	mov	r0, #0
4001a854:	e58d0014 	str	r0, [sp, #20]
4001a858:	e28a0064 	add	r0, sl, #100	; 0x64
4001a85c:	e0800088 	add	r0, r0, r8, lsl #1
4001a860:	e1d000b0 	ldrh	r0, [r0]
4001a864:	e2400001 	sub	r0, r0, #1
4001a868:	e28a1064 	add	r1, sl, #100	; 0x64
4001a86c:	e0811088 	add	r1, r1, r8, lsl #1
4001a870:	e1c100b0 	strh	r0, [r1]
4001a874:	e28a0064 	add	r0, sl, #100	; 0x64
4001a878:	e0800088 	add	r0, r0, r8, lsl #1
4001a87c:	e1d000b0 	ldrh	r0, [r0]
4001a880:	e3500000 	cmp	r0, #0
4001a884:	1a000004 	bne	4001a89c <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a888:	e3a00010 	mov	r0, #16
4001a88c:	e58d0014 	str	r0, [sp, #20]
4001a890:	e59d0018 	ldr	r0, [sp, #24]
4001a894:	e3c00010 	bic	r0, r0, #16
4001a898:	e58d0018 	str	r0, [sp, #24]
4001a89c:	e28a0046 	add	r0, sl, #70	; 0x46
4001a8a0:	e0800088 	add	r0, r0, r8, lsl #1
4001a8a4:	e1d000b0 	ldrh	r0, [r0]
4001a8a8:	e58d0004 	str	r0, [sp, #4]
4001a8ac:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a8b0:	e0811088 	add	r1, r1, r8, lsl #1
4001a8b4:	e1d100b0 	ldrh	r0, [r1]
4001a8b8:	e28d1004 	add	r1, sp, #4
4001a8bc:	ebffea3d 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001a8c0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a8c4:	e59f12d4 	ldr	r1, [pc, #724]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a8c8:	e0017820 	and	r7, r1, r0, lsr #16
4001a8cc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a8d0:	e1a00007 	mov	r0, r7
4001a8d4:	eb001feb 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a8d8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a8dc:	e59f12c0 	ldr	r1, [pc, #704]	; 4001aba4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a8e0:	e0000001 	and	r0, r0, r1
4001a8e4:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a8e8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a8ec:	e1a00007 	mov	r0, r7
4001a8f0:	eb001fff 	bl	400228f4 <CyU3PDmaDscrSetConfig>
4001a8f4:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a8f8:	e3500000 	cmp	r0, #0
4001a8fc:	0a000004 	beq	4001a914 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a900:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a904:	e59f3298 	ldr	r3, [pc, #664]	; 4001aba4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a908:	e0021003 	and	r1, r2, r3
4001a90c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a910:	ebffdeaf 	bl	400123d4 <CyU3PSysFlushDRegion>
4001a914:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a918:	e3a02000 	mov	r2, #0
4001a91c:	e1a01007 	mov	r1, r7
4001a920:	ebffea12 	bl	40015170 <CyU3PDmaSocketSendEvent>
4001a924:	ebffe103 	bl	40012d38 <CyU3PSysBarrierSync>
4001a928:	e3150020 	tst	r5, #32
4001a92c:	0a000098 	beq	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a930:	ebffe100 	bl	40012d38 <CyU3PSysBarrierSync>
4001a934:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a938:	e3500000 	cmp	r0, #0
4001a93c:	0a000094 	beq	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a940:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a944:	e3100080 	tst	r0, #128	; 0x80
4001a948:	0a000091 	beq	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a94c:	e3a02000 	mov	r2, #0
4001a950:	e3a01080 	mov	r1, #128	; 0x80
4001a954:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a958:	e1a0000a 	mov	r0, sl
4001a95c:	e12fff33 	blx	r3
4001a960:	ea00008b 	b	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a964:	e594000c 	ldr	r0, [r4, #12]
4001a968:	e1a09800 	lsl	r9, r0, #16
4001a96c:	e1a09829 	lsr	r9, r9, #16
4001a970:	e3150001 	tst	r5, #1
4001a974:	0a00006b 	beq	4001ab28 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a978:	e59a0000 	ldr	r0, [sl]
4001a97c:	e3500004 	cmp	r0, #4
4001a980:	0a000031 	beq	4001aa4c <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a984:	e1a00000 	nop			; (mov r0, r0)
4001a988:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a98c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a990:	eb001fbc 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001a994:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a998:	e58d001c 	str	r0, [sp, #28]
4001a99c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9a0:	e59f11f8 	ldr	r1, [pc, #504]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a9a4:	e0010820 	and	r0, r1, r0, lsr #16
4001a9a8:	e1cd02b0 	strh	r0, [sp, #32]
4001a9ac:	e241100f 	sub	r1, r1, #15
4001a9b0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9b4:	e0000001 	and	r0, r0, r1
4001a9b8:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a9bc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9c0:	e200000f 	and	r0, r0, #15
4001a9c4:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a9c8:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a9cc:	e3500000 	cmp	r0, #0
4001a9d0:	0a000002 	beq	4001a9e0 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a9d4:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a9d8:	e59d001c 	ldr	r0, [sp, #28]
4001a9dc:	ebffde7c 	bl	400123d4 <CyU3PSysFlushDRegion>
4001a9e0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9e4:	e3100008 	tst	r0, #8
4001a9e8:	0a000003 	beq	4001a9fc <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a9ec:	e3a02000 	mov	r2, #0
4001a9f0:	e3a01008 	mov	r1, #8
4001a9f4:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a9f8:	ebffbdab 	bl	4000a0ac <_txe_event_flags_set>
4001a9fc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001aa00:	e59f1198 	ldr	r1, [pc, #408]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aa04:	e0010820 	and	r0, r1, r0, lsr #16
4001aa08:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001aa0c:	ebffe0c9 	bl	40012d38 <CyU3PSysBarrierSync>
4001aa10:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001aa14:	e3500000 	cmp	r0, #0
4001aa18:	0a000007 	beq	4001aa3c <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001aa1c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001aa20:	e3100008 	tst	r0, #8
4001aa24:	0a000004 	beq	4001aa3c <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001aa28:	e28d201c 	add	r2, sp, #28
4001aa2c:	e3a01008 	mov	r1, #8
4001aa30:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001aa34:	e1a0000a 	mov	r0, sl
4001aa38:	e12fff33 	blx	r3
4001aa3c:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001aa40:	e1500009 	cmp	r0, r9
4001aa44:	1affffcf 	bne	4001a988 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001aa48:	ea000036 	b	4001ab28 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001aa4c:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001aa50:	e28d1028 	add	r1, sp, #40	; 0x28
4001aa54:	eb001f8b 	bl	40022888 <CyU3PDmaDscrGetConfig>
4001aa58:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001aa5c:	e58d001c 	str	r0, [sp, #28]
4001aa60:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa64:	e59f1134 	ldr	r1, [pc, #308]	; 4001aba0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aa68:	e0010820 	and	r0, r1, r0, lsr #16
4001aa6c:	e1cd02b0 	strh	r0, [sp, #32]
4001aa70:	e241100f 	sub	r1, r1, #15
4001aa74:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa78:	e0000001 	and	r0, r0, r1
4001aa7c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001aa80:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa84:	e200000f 	and	r0, r0, #15
4001aa88:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001aa8c:	e3a00001 	mov	r0, #1
4001aa90:	e58a0000 	str	r0, [sl]
4001aa94:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001aa98:	e3500000 	cmp	r0, #0
4001aa9c:	0a000002 	beq	4001aaac <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001aaa0:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001aaa4:	e59d001c 	ldr	r0, [sp, #28]
4001aaa8:	ebffde49 	bl	400123d4 <CyU3PSysFlushDRegion>
4001aaac:	e1da00b4 	ldrh	r0, [sl, #4]
4001aab0:	e3500006 	cmp	r0, #6
4001aab4:	1a00000a 	bne	4001aae4 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001aab8:	e28d1004 	add	r1, sp, #4
4001aabc:	e1a00006 	mov	r0, r6
4001aac0:	ebffe912 	bl	40014f10 <CyU3PDmaSocketGetConfig>
4001aac4:	e3a00000 	mov	r0, #0
4001aac8:	e58d0014 	str	r0, [sp, #20]
4001aacc:	e59d0018 	ldr	r0, [sp, #24]
4001aad0:	e3c00001 	bic	r0, r0, #1
4001aad4:	e58d0018 	str	r0, [sp, #24]
4001aad8:	e28d1004 	add	r1, sp, #4
4001aadc:	e1a00006 	mov	r0, r6
4001aae0:	ebffe9b4 	bl	400151b8 <CyU3PDmaSocketSetConfig>
4001aae4:	e3a02000 	mov	r2, #0
4001aae8:	e3a01004 	mov	r1, #4
4001aaec:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001aaf0:	ebffbd6d 	bl	4000a0ac <_txe_event_flags_set>
4001aaf4:	e3c55080 	bic	r5, r5, #128	; 0x80
4001aaf8:	ebffe08e 	bl	40012d38 <CyU3PSysBarrierSync>
4001aafc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab00:	e3500000 	cmp	r0, #0
4001ab04:	0a000007 	beq	4001ab28 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab08:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ab0c:	e3100004 	tst	r0, #4
4001ab10:	0a000004 	beq	4001ab28 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab14:	e28d201c 	add	r2, sp, #28
4001ab18:	e3a01004 	mov	r1, #4
4001ab1c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ab20:	e1a0000a 	mov	r0, sl
4001ab24:	e12fff33 	blx	r3
4001ab28:	e3150080 	tst	r5, #128	; 0x80
4001ab2c:	0a000018 	beq	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab30:	e1da00b4 	ldrh	r0, [sl, #4]
4001ab34:	e3500006 	cmp	r0, #6
4001ab38:	1a000012 	bne	4001ab88 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001ab3c:	e3a00001 	mov	r0, #1
4001ab40:	e58a0000 	str	r0, [sl]
4001ab44:	e3a02000 	mov	r2, #0
4001ab48:	e3a01001 	mov	r1, #1
4001ab4c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001ab50:	ebffbd55 	bl	4000a0ac <_txe_event_flags_set>
4001ab54:	ebffe077 	bl	40012d38 <CyU3PSysBarrierSync>
4001ab58:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab5c:	e3500000 	cmp	r0, #0
4001ab60:	0a00000b 	beq	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab64:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ab68:	e3100001 	tst	r0, #1
4001ab6c:	0a000008 	beq	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab70:	e3a02000 	mov	r2, #0
4001ab74:	e3a01001 	mov	r1, #1
4001ab78:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ab7c:	e1a0000a 	mov	r0, sl
4001ab80:	e12fff33 	blx	r3
4001ab84:	ea000002 	b	4001ab94 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab88:	e3a00006 	mov	r0, #6
4001ab8c:	e58a0000 	str	r0, [sl]
4001ab90:	ebffe068 	bl	40012d38 <CyU3PSysBarrierSync>
4001ab94:	e28a0078 	add	r0, sl, #120	; 0x78
4001ab98:	ebffbe10 	bl	4000a3e0 <_txe_mutex_put>
4001ab9c:	eafffe6b 	b	4001a550 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001aba0:	0000ffff 	.word	0x0000ffff
4001aba4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001aba8 <CyU3PDmaIsSockAvlEnReqd>:
4001aba8:	e1a01000 	mov	r1, r0
4001abac:	e3a0003f 	mov	r0, #63	; 0x3f
4001abb0:	e0000441 	and	r0, r0, r1, asr #8
4001abb4:	e3500003 	cmp	r0, #3
4001abb8:	1a000004 	bne	4001abd0 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001abbc:	e3a00001 	mov	r0, #1
4001abc0:	e59f203c 	ldr	r2, [pc, #60]	; 4001ac04 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001abc4:	e1d220b0 	ldrh	r2, [r2]
4001abc8:	e1120110 	tst	r2, r0, lsl r1
4001abcc:	1a000008 	bne	4001abf4 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001abd0:	e3a0003f 	mov	r0, #63	; 0x3f
4001abd4:	e0000441 	and	r0, r0, r1, asr #8
4001abd8:	e3500004 	cmp	r0, #4
4001abdc:	1a000006 	bne	4001abfc <CyU3PDmaIsSockAvlEnReqd+0x54>
4001abe0:	e3a00001 	mov	r0, #1
4001abe4:	e59f201c 	ldr	r2, [pc, #28]	; 4001ac08 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001abe8:	e1d220b0 	ldrh	r2, [r2]
4001abec:	e1120110 	tst	r2, r0, lsl r1
4001abf0:	0a000001 	beq	4001abfc <CyU3PDmaIsSockAvlEnReqd+0x54>
4001abf4:	e3a00001 	mov	r0, #1
4001abf8:	e12fff1e 	bx	lr
4001abfc:	e3a00000 	mov	r0, #0
4001ac00:	eafffffc 	b	4001abf8 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001ac04:	40030d1c 	.word	0x40030d1c
4001ac08:	40030d1e 	.word	0x40030d1e

Disassembly of section i.CyU3PDmaMsgSend:

4001ac0c <CyU3PDmaMsgSend>:
4001ac0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001ac10:	e1a04000 	mov	r4, r0
4001ac14:	e1a05001 	mov	r5, r1
4001ac18:	e1a07002 	mov	r7, r2
4001ac1c:	e3570001 	cmp	r7, #1
4001ac20:	1a000005 	bne	4001ac3c <CyU3PDmaMsgSend+0x30>
4001ac24:	e1a02005 	mov	r2, r5
4001ac28:	e1a01004 	mov	r1, r4
4001ac2c:	e59f0024 	ldr	r0, [pc, #36]	; 4001ac58 <CyU3PDmaMsgSend+0x4c>
4001ac30:	ebffbe80 	bl	4000a638 <_txe_queue_front_send>
4001ac34:	e1a06000 	mov	r6, r0
4001ac38:	ea000004 	b	4001ac50 <CyU3PDmaMsgSend+0x44>
4001ac3c:	e1a02005 	mov	r2, r5
4001ac40:	e1a01004 	mov	r1, r4
4001ac44:	e59f000c 	ldr	r0, [pc, #12]	; 4001ac58 <CyU3PDmaMsgSend+0x4c>
4001ac48:	ebffbeca 	bl	4000a778 <_txe_queue_send>
4001ac4c:	e1a06000 	mov	r6, r0
4001ac50:	e1a00006 	mov	r0, r6
4001ac54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ac58:	40031954 	.word	0x40031954

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001ac5c <CyU3PDmaMultiChannelHandleError>:
4001ac5c:	e92d4070 	push	{r4, r5, r6, lr}
4001ac60:	e1a04000 	mov	r4, r0
4001ac64:	e3e01000 	mvn	r1, #0
4001ac68:	e2840078 	add	r0, r4, #120	; 0x78
4001ac6c:	ebffbda6 	bl	4000a30c <_txe_mutex_get>
4001ac70:	e1d400b4 	ldrh	r0, [r4, #4]
4001ac74:	e3500005 	cmp	r0, #5
4001ac78:	0a000002 	beq	4001ac88 <CyU3PDmaMultiChannelHandleError+0x2c>
4001ac7c:	e1d400b4 	ldrh	r0, [r4, #4]
4001ac80:	e3500007 	cmp	r0, #7
4001ac84:	1a00000d 	bne	4001acc0 <CyU3PDmaMultiChannelHandleError+0x64>
4001ac88:	e3a05000 	mov	r5, #0
4001ac8c:	ea000005 	b	4001aca8 <CyU3PDmaMultiChannelHandleError+0x4c>
4001ac90:	e2841024 	add	r1, r4, #36	; 0x24
4001ac94:	e0811085 	add	r1, r1, r5, lsl #1
4001ac98:	e1d100b0 	ldrh	r0, [r1]
4001ac9c:	ebffe883 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001aca0:	e2850001 	add	r0, r5, #1
4001aca4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001aca8:	e1d400ba 	ldrh	r0, [r4, #10]
4001acac:	e1500005 	cmp	r0, r5
4001acb0:	cafffff6 	bgt	4001ac90 <CyU3PDmaMultiChannelHandleError+0x34>
4001acb4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001acb8:	ebffe87c 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001acbc:	ea00000c 	b	4001acf4 <CyU3PDmaMultiChannelHandleError+0x98>
4001acc0:	e3a05000 	mov	r5, #0
4001acc4:	ea000005 	b	4001ace0 <CyU3PDmaMultiChannelHandleError+0x84>
4001acc8:	e284102c 	add	r1, r4, #44	; 0x2c
4001accc:	e0811085 	add	r1, r1, r5, lsl #1
4001acd0:	e1d100b0 	ldrh	r0, [r1]
4001acd4:	ebffe875 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001acd8:	e2850001 	add	r0, r5, #1
4001acdc:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ace0:	e1d400ba 	ldrh	r0, [r4, #10]
4001ace4:	e1500005 	cmp	r0, r5
4001ace8:	cafffff6 	bgt	4001acc8 <CyU3PDmaMultiChannelHandleError+0x6c>
4001acec:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001acf0:	ebffe86e 	bl	40014eb0 <CyU3PDmaSocketDisable>
4001acf4:	e3a02002 	mov	r2, #2
4001acf8:	e3e01007 	mvn	r1, #7
4001acfc:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ad00:	ebffbce9 	bl	4000a0ac <_txe_event_flags_set>
4001ad04:	e3a02000 	mov	r2, #0
4001ad08:	e3a01040 	mov	r1, #64	; 0x40
4001ad0c:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ad10:	ebffbce5 	bl	4000a0ac <_txe_event_flags_set>
4001ad14:	e3a00005 	mov	r0, #5
4001ad18:	e5840000 	str	r0, [r4]
4001ad1c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001ad20:	e3500000 	cmp	r0, #0
4001ad24:	0a000007 	beq	4001ad48 <CyU3PDmaMultiChannelHandleError+0xec>
4001ad28:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001ad2c:	e3100040 	tst	r0, #64	; 0x40
4001ad30:	0a000004 	beq	4001ad48 <CyU3PDmaMultiChannelHandleError+0xec>
4001ad34:	e3a02000 	mov	r2, #0
4001ad38:	e3a01040 	mov	r1, #64	; 0x40
4001ad3c:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001ad40:	e1a00004 	mov	r0, r4
4001ad44:	e12fff33 	blx	r3
4001ad48:	e2840078 	add	r0, r4, #120	; 0x78
4001ad4c:	ebffbda3 	bl	4000a3e0 <_txe_mutex_put>
4001ad50:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001ad54 <CyU3PDmaThreadEntry>:
4001ad54:	e92d4070 	push	{r4, r5, r6, lr}
4001ad58:	e24dd040 	sub	sp, sp, #64	; 0x40
4001ad5c:	ea00003f 	b	4001ae60 <CyU3PDmaThreadEntry+0x10c>
4001ad60:	e3e02000 	mvn	r2, #0
4001ad64:	e1a0100d 	mov	r1, sp
4001ad68:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ae64 <CyU3PDmaThreadEntry+0x110>
4001ad6c:	ebffbe59 	bl	4000a6d8 <_txe_queue_receive>
4001ad70:	e1a05000 	mov	r5, r0
4001ad74:	e3550000 	cmp	r5, #0
4001ad78:	0a000000 	beq	4001ad80 <CyU3PDmaThreadEntry+0x2c>
4001ad7c:	ea000037 	b	4001ae60 <CyU3PDmaThreadEntry+0x10c>
4001ad80:	e59d0000 	ldr	r0, [sp]
4001ad84:	e20040ff 	and	r4, r0, #255	; 0xff
4001ad88:	e3540000 	cmp	r4, #0
4001ad8c:	0a000000 	beq	4001ad94 <CyU3PDmaThreadEntry+0x40>
4001ad90:	ea000032 	b	4001ae60 <CyU3PDmaThreadEntry+0x10c>
4001ad94:	e59d6004 	ldr	r6, [sp, #4]
4001ad98:	e1d600b4 	ldrh	r0, [r6, #4]
4001ad9c:	e350000a 	cmp	r0, #10
4001ada0:	308ff100 	addcc	pc, pc, r0, lsl #2
4001ada4:	ea000028 	b	4001ae4c <CyU3PDmaThreadEntry+0xf8>
4001ada8:	ea000008 	b	4001add0 <CyU3PDmaThreadEntry+0x7c>
4001adac:	ea000009 	b	4001add8 <CyU3PDmaThreadEntry+0x84>
4001adb0:	ea00000e 	b	4001adf0 <CyU3PDmaThreadEntry+0x9c>
4001adb4:	ea00000a 	b	4001ade4 <CyU3PDmaThreadEntry+0x90>
4001adb8:	ea00000b 	b	4001adec <CyU3PDmaThreadEntry+0x98>
4001adbc:	ea00000e 	b	4001adfc <CyU3PDmaThreadEntry+0xa8>
4001adc0:	ea000012 	b	4001ae10 <CyU3PDmaThreadEntry+0xbc>
4001adc4:	ea00000e 	b	4001ae04 <CyU3PDmaThreadEntry+0xb0>
4001adc8:	ea000012 	b	4001ae18 <CyU3PDmaThreadEntry+0xc4>
4001adcc:	ea000014 	b	4001ae24 <CyU3PDmaThreadEntry+0xd0>
4001add0:	e1a00000 	nop			; (mov r0, r0)
4001add4:	e1a00000 	nop			; (mov r0, r0)
4001add8:	e1a0000d 	mov	r0, sp
4001addc:	ebfffa18 	bl	40019644 <CyU3PDmaIntHandler_TypeAuto>
4001ade0:	ea00001b 	b	4001ae54 <CyU3PDmaThreadEntry+0x100>
4001ade4:	e1a00000 	nop			; (mov r0, r0)
4001ade8:	e1a00000 	nop			; (mov r0, r0)
4001adec:	e1a00000 	nop			; (mov r0, r0)
4001adf0:	e1a0000d 	mov	r0, sp
4001adf4:	ebfffaed 	bl	400199b0 <CyU3PDmaIntHandler_TypeManual>
4001adf8:	ea000015 	b	4001ae54 <CyU3PDmaThreadEntry+0x100>
4001adfc:	e1a00000 	nop			; (mov r0, r0)
4001ae00:	e1a00000 	nop			; (mov r0, r0)
4001ae04:	e1a0000d 	mov	r0, sp
4001ae08:	ebfffc4c 	bl	40019f40 <CyU3PDmaIntHandler_TypeManyToOne>
4001ae0c:	ea000010 	b	4001ae54 <CyU3PDmaThreadEntry+0x100>
4001ae10:	e1a00000 	nop			; (mov r0, r0)
4001ae14:	e1a00000 	nop			; (mov r0, r0)
4001ae18:	e1a0000d 	mov	r0, sp
4001ae1c:	ebfffdbf 	bl	4001a520 <CyU3PDmaIntHandler_TypeOneToMany>
4001ae20:	ea00000b 	b	4001ae54 <CyU3PDmaThreadEntry+0x100>
4001ae24:	e1a00000 	nop			; (mov r0, r0)
4001ae28:	e59f0038 	ldr	r0, [pc, #56]	; 4001ae68 <CyU3PDmaThreadEntry+0x114>
4001ae2c:	e5900000 	ldr	r0, [r0]
4001ae30:	e3500000 	cmp	r0, #0
4001ae34:	0a000003 	beq	4001ae48 <CyU3PDmaThreadEntry+0xf4>
4001ae38:	e1a0000d 	mov	r0, sp
4001ae3c:	e59f1024 	ldr	r1, [pc, #36]	; 4001ae68 <CyU3PDmaThreadEntry+0x114>
4001ae40:	e5911000 	ldr	r1, [r1]
4001ae44:	e12fff31 	blx	r1
4001ae48:	ea000001 	b	4001ae54 <CyU3PDmaThreadEntry+0x100>
4001ae4c:	e1a00000 	nop			; (mov r0, r0)
4001ae50:	e1a00000 	nop			; (mov r0, r0)
4001ae54:	e1a00000 	nop			; (mov r0, r0)
4001ae58:	ebffbf4c 	bl	4000ab90 <_txe_thread_relinquish>
4001ae5c:	e1a00000 	nop			; (mov r0, r0)
4001ae60:	eaffffbe 	b	4001ad60 <CyU3PDmaThreadEntry+0xc>
4001ae64:	40031954 	.word	0x40031954
4001ae68:	40030d34 	.word	0x40030d34

Disassembly of section i.CyU3PGpifInit:

4001ae6c <CyU3PGpifInit>:
4001ae6c:	e92d4010 	push	{r4, lr}
4001ae70:	e1a04000 	mov	r4, r0
4001ae74:	e3540000 	cmp	r4, #0
4001ae78:	0a000006 	beq	4001ae98 <CyU3PGpifInit+0x2c>
4001ae7c:	e59f005c 	ldr	r0, [pc, #92]	; 4001aee0 <CyU3PGpifInit+0x74>
4001ae80:	e5900000 	ldr	r0, [r0]
4001ae84:	e1a00800 	lsl	r0, r0, #16
4001ae88:	e1a00820 	lsr	r0, r0, #16
4001ae8c:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001ae90:	e59f1048 	ldr	r1, [pc, #72]	; 4001aee0 <CyU3PGpifInit+0x74>
4001ae94:	e5810000 	str	r0, [r1]
4001ae98:	e3e00000 	mvn	r0, #0
4001ae9c:	e59f1040 	ldr	r1, [pc, #64]	; 4001aee4 <CyU3PGpifInit+0x78>
4001aea0:	e5810014 	str	r0, [r1, #20]
4001aea4:	e3a00000 	mov	r0, #0
4001aea8:	e5810018 	str	r0, [r1, #24]
4001aeac:	e3a00e11 	mov	r0, #272	; 0x110
4001aeb0:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aeb4:	e5810008 	str	r0, [r1, #8]
4001aeb8:	ebffdf9e 	bl	40012d38 <CyU3PSysBarrierSync>
4001aebc:	e59f001c 	ldr	r0, [pc, #28]	; 4001aee0 <CyU3PGpifInit+0x74>
4001aec0:	e5900000 	ldr	r0, [r0]
4001aec4:	e1a00800 	lsl	r0, r0, #16
4001aec8:	e1a00820 	lsr	r0, r0, #16
4001aecc:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001aed0:	e59f1008 	ldr	r1, [pc, #8]	; 4001aee0 <CyU3PGpifInit+0x74>
4001aed4:	e5810000 	str	r0, [r1]
4001aed8:	e3a00000 	mov	r0, #0
4001aedc:	e8bd8010 	pop	{r4, pc}
4001aee0:	e0010000 	.word	0xe0010000
4001aee4:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001aee8 <CyU3PPibApplicationDefine>:
4001aee8:	e92d4010 	push	{r4, lr}
4001aeec:	e24dd020 	sub	sp, sp, #32
4001aef0:	e3a00000 	mov	r0, #0
4001aef4:	e59f10dc 	ldr	r1, [pc, #220]	; 4001afd8 <CyU3PPibApplicationDefine+0xf0>
4001aef8:	e5810000 	str	r0, [r1]
4001aefc:	e59f10d8 	ldr	r1, [pc, #216]	; 4001afdc <CyU3PPibApplicationDefine+0xf4>
4001af00:	e5810000 	str	r0, [r1]
4001af04:	e59f10d4 	ldr	r1, [pc, #212]	; 4001afe0 <CyU3PPibApplicationDefine+0xf8>
4001af08:	e5810000 	str	r0, [r1]
4001af0c:	e59f10d0 	ldr	r1, [pc, #208]	; 4001afe4 <CyU3PPibApplicationDefine+0xfc>
4001af10:	e5810000 	str	r0, [r1]
4001af14:	e59f10cc 	ldr	r1, [pc, #204]	; 4001afe8 <CyU3PPibApplicationDefine+0x100>
4001af18:	e5810000 	str	r0, [r1]
4001af1c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001afec <CyU3PPibApplicationDefine+0x104>
4001af20:	e5810000 	str	r0, [r1]
4001af24:	e59f10c4 	ldr	r1, [pc, #196]	; 4001aff0 <CyU3PPibApplicationDefine+0x108>
4001af28:	e5810000 	str	r0, [r1]
4001af2c:	e59f10c0 	ldr	r1, [pc, #192]	; 4001aff4 <CyU3PPibApplicationDefine+0x10c>
4001af30:	e5810000 	str	r0, [r1]
4001af34:	e59f10bc 	ldr	r1, [pc, #188]	; 4001aff8 <CyU3PPibApplicationDefine+0x110>
4001af38:	e5810000 	str	r0, [r1]
4001af3c:	e3a00b01 	mov	r0, #1024	; 0x400
4001af40:	ebffa1cb 	bl	40003674 <CyU3PMemAlloc>
4001af44:	e1a04000 	mov	r4, r0
4001af48:	e3a030a8 	mov	r3, #168	; 0xa8
4001af4c:	e3a02001 	mov	r2, #1
4001af50:	e3a01000 	mov	r1, #0
4001af54:	e3a00004 	mov	r0, #4
4001af58:	e28dc00c 	add	ip, sp, #12
4001af5c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001af60:	e3a02b01 	mov	r2, #1024	; 0x400
4001af64:	e1a03001 	mov	r3, r1
4001af68:	e58d2004 	str	r2, [sp, #4]
4001af6c:	e59f2088 	ldr	r2, [pc, #136]	; 4001affc <CyU3PPibApplicationDefine+0x114>
4001af70:	e28f1088 	add	r1, pc, #136	; 0x88
4001af74:	e58d0008 	str	r0, [sp, #8]
4001af78:	e59f0090 	ldr	r0, [pc, #144]	; 4001b010 <CyU3PPibApplicationDefine+0x128>
4001af7c:	e58d4000 	str	r4, [sp]
4001af80:	ebffbe24 	bl	4000a818 <_txe_thread_create>
4001af84:	e3a02028 	mov	r2, #40	; 0x28
4001af88:	e3a01000 	mov	r1, #0
4001af8c:	e59f0080 	ldr	r0, [pc, #128]	; 4001b014 <CyU3PPibApplicationDefine+0x12c>
4001af90:	ebffbba5 	bl	40009e2c <_txe_event_flags_create>
4001af94:	e3a02000 	mov	r2, #0
4001af98:	e3a01010 	mov	r1, #16
4001af9c:	e59f0070 	ldr	r0, [pc, #112]	; 4001b014 <CyU3PPibApplicationDefine+0x12c>
4001afa0:	ebffbc41 	bl	4000a0ac <_txe_event_flags_set>
4001afa4:	e3a00040 	mov	r0, #64	; 0x40
4001afa8:	ebffa1b1 	bl	40003674 <CyU3PMemAlloc>
4001afac:	e1a04000 	mov	r4, r0
4001afb0:	e3a0303c 	mov	r3, #60	; 0x3c
4001afb4:	e3a02040 	mov	r2, #64	; 0x40
4001afb8:	e1cd20f0 	strd	r2, [sp]
4001afbc:	e1a03004 	mov	r3, r4
4001afc0:	e3a02001 	mov	r2, #1
4001afc4:	e3a01000 	mov	r1, #0
4001afc8:	e59f0048 	ldr	r0, [pc, #72]	; 4001b018 <CyU3PPibApplicationDefine+0x130>
4001afcc:	ebffbd2b 	bl	4000a480 <_txe_queue_create>
4001afd0:	e28dd020 	add	sp, sp, #32
4001afd4:	e8bd8010 	pop	{r4, pc}
4001afd8:	40030d38 	.word	0x40030d38
4001afdc:	40030d3c 	.word	0x40030d3c
4001afe0:	40030d44 	.word	0x40030d44
4001afe4:	40030d5c 	.word	0x40030d5c
4001afe8:	40030d50 	.word	0x40030d50
4001afec:	40030d54 	.word	0x40030d54
4001aff0:	40030d48 	.word	0x40030d48
4001aff4:	40030d4c 	.word	0x40030d4c
4001aff8:	40030d40 	.word	0x40030d40
4001affc:	4001b1d0 	.word	0x4001b1d0
4001b000:	505f3330 	.word	0x505f3330
4001b004:	545f4249 	.word	0x545f4249
4001b008:	41455248 	.word	0x41455248
4001b00c:	00000044 	.word	0x00000044
4001b010:	400319b8 	.word	0x400319b8
4001b014:	40031990 	.word	0x40031990
4001b018:	40031a60 	.word	0x40031a60

Disassembly of section i.CyU3PPibInit:

4001b01c <CyU3PPibInit>:
4001b01c:	e92d4070 	push	{r4, r5, r6, lr}
4001b020:	e1a04000 	mov	r4, r0
4001b024:	e1a05001 	mov	r5, r1
4001b028:	e3a06000 	mov	r6, #0
4001b02c:	ebffe724 	bl	40014cc4 <CyFx3DevIsGpifSupported>
4001b030:	e3500000 	cmp	r0, #0
4001b034:	1a000001 	bne	4001b040 <CyU3PPibInit+0x24>
4001b038:	e3a00046 	mov	r0, #70	; 0x46
4001b03c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b040:	e59f0128 	ldr	r0, [pc, #296]	; 4001b170 <CyU3PPibInit+0x154>
4001b044:	e5900000 	ldr	r0, [r0]
4001b048:	e3500000 	cmp	r0, #0
4001b04c:	0a000001 	beq	4001b058 <CyU3PPibInit+0x3c>
4001b050:	e3a00043 	mov	r0, #67	; 0x43
4001b054:	eafffff8 	b	4001b03c <CyU3PPibInit+0x20>
4001b058:	e3550000 	cmp	r5, #0
4001b05c:	1a000001 	bne	4001b068 <CyU3PPibInit+0x4c>
4001b060:	e3a00041 	mov	r0, #65	; 0x41
4001b064:	eafffff4 	b	4001b03c <CyU3PPibInit+0x20>
4001b068:	e5d5000c 	ldrb	r0, [r5, #12]
4001b06c:	e3500004 	cmp	r0, #4
4001b070:	ba000001 	blt	4001b07c <CyU3PPibInit+0x60>
4001b074:	e3a00040 	mov	r0, #64	; 0x40
4001b078:	eaffffef 	b	4001b03c <CyU3PPibInit+0x20>
4001b07c:	e1d500b0 	ldrh	r0, [r5]
4001b080:	e3500002 	cmp	r0, #2
4001b084:	ba000002 	blt	4001b094 <CyU3PPibInit+0x78>
4001b088:	e1d500b0 	ldrh	r0, [r5]
4001b08c:	e3500b01 	cmp	r0, #1024	; 0x400
4001b090:	da000001 	ble	4001b09c <CyU3PPibInit+0x80>
4001b094:	e3a00040 	mov	r0, #64	; 0x40
4001b098:	eaffffe7 	b	4001b03c <CyU3PPibInit+0x20>
4001b09c:	e3a00001 	mov	r0, #1
4001b0a0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b170 <CyU3PPibInit+0x154>
4001b0a4:	e5810000 	str	r0, [r1]
4001b0a8:	e5d5000c 	ldrb	r0, [r5, #12]
4001b0ac:	e3a01b06 	mov	r1, #6144	; 0x1800
4001b0b0:	e0010580 	and	r0, r1, r0, lsl #11
4001b0b4:	e1d510b0 	ldrh	r1, [r5]
4001b0b8:	e2411001 	sub	r1, r1, #1
4001b0bc:	e1a01b01 	lsl	r1, r1, #22
4001b0c0:	e1a01b21 	lsr	r1, r1, #22
4001b0c4:	e1800001 	orr	r0, r0, r1
4001b0c8:	e59f10a4 	ldr	r1, [pc, #164]	; 4001b174 <CyU3PPibInit+0x158>
4001b0cc:	e581000c 	str	r0, [r1, #12]
4001b0d0:	e5950004 	ldr	r0, [r5, #4]
4001b0d4:	e3500000 	cmp	r0, #0
4001b0d8:	0a000003 	beq	4001b0ec <CyU3PPibInit+0xd0>
4001b0dc:	e1a00001 	mov	r0, r1
4001b0e0:	e590000c 	ldr	r0, [r0, #12]
4001b0e4:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001b0e8:	e581000c 	str	r0, [r1, #12]
4001b0ec:	e59f0080 	ldr	r0, [pc, #128]	; 4001b174 <CyU3PPibInit+0x158>
4001b0f0:	e590000c 	ldr	r0, [r0, #12]
4001b0f4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b0f8:	e59f1074 	ldr	r1, [pc, #116]	; 4001b174 <CyU3PPibInit+0x158>
4001b0fc:	e581000c 	str	r0, [r1, #12]
4001b100:	ebffe755 	bl	40014e5c <CyFx3PibPowerOn>
4001b104:	e5950008 	ldr	r0, [r5, #8]
4001b108:	e3500000 	cmp	r0, #0
4001b10c:	0a000000 	beq	4001b114 <CyU3PPibInit+0xf8>
4001b110:	ebffe732 	bl	40014de0 <CyFx3PibDllEnable>
4001b114:	e59f005c 	ldr	r0, [pc, #92]	; 4001b178 <CyU3PPibInit+0x15c>
4001b118:	e5900000 	ldr	r0, [r0]
4001b11c:	e3500000 	cmp	r0, #0
4001b120:	0a000003 	beq	4001b134 <CyU3PPibInit+0x118>
4001b124:	e1a00004 	mov	r0, r4
4001b128:	eb0000d4 	bl	4001b480 <CyU3PPmmcInit>
4001b12c:	e1a06000 	mov	r6, r0
4001b130:	ea000002 	b	4001b140 <CyU3PPibInit+0x124>
4001b134:	e1a00004 	mov	r0, r4
4001b138:	ebffff4b 	bl	4001ae6c <CyU3PGpifInit>
4001b13c:	e1a06000 	mov	r6, r0
4001b140:	e3e00000 	mvn	r0, #0
4001b144:	e59f1030 	ldr	r1, [pc, #48]	; 4001b17c <CyU3PPibInit+0x160>
4001b148:	e5810024 	str	r0, [r1, #36]	; 0x24
4001b14c:	e3560000 	cmp	r6, #0
4001b150:	1a000004 	bne	4001b168 <CyU3PPibInit+0x14c>
4001b154:	eb000009 	bl	4001b180 <CyU3PPibSocketInit>
4001b158:	e3a00007 	mov	r0, #7
4001b15c:	eb001c4a 	bl	4002228c <CyU3PVicEnableInt>
4001b160:	e3a00006 	mov	r0, #6
4001b164:	eb001c48 	bl	4002228c <CyU3PVicEnableInt>
4001b168:	e1a00006 	mov	r0, r6
4001b16c:	eaffffb2 	b	4001b03c <CyU3PPibInit+0x20>
4001b170:	40030d38 	.word	0x40030d38
4001b174:	e0052000 	.word	0xe0052000
4001b178:	40030d3c 	.word	0x40030d3c
4001b17c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001b180 <CyU3PPibSocketInit>:
4001b180:	e3a00000 	mov	r0, #0
4001b184:	ea00000d 	b	4001b1c0 <CyU3PPibSocketInit+0x40>
4001b188:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001b18c:	e59f2038 	ldr	r2, [pc, #56]	; 4001b1cc <CyU3PPibSocketInit+0x4c>
4001b190:	e0822380 	add	r2, r2, r0, lsl #7
4001b194:	e582100c 	str	r1, [r2, #12]
4001b198:	e3e01000 	mvn	r1, #0
4001b19c:	e59f2028 	ldr	r2, [pc, #40]	; 4001b1cc <CyU3PPibSocketInit+0x4c>
4001b1a0:	e0822380 	add	r2, r2, r0, lsl #7
4001b1a4:	e5821010 	str	r1, [r2, #16]
4001b1a8:	e3a01000 	mov	r1, #0
4001b1ac:	e59f2018 	ldr	r2, [pc, #24]	; 4001b1cc <CyU3PPibSocketInit+0x4c>
4001b1b0:	e0822380 	add	r2, r2, r0, lsl #7
4001b1b4:	e5821014 	str	r1, [r2, #20]
4001b1b8:	e2801001 	add	r1, r0, #1
4001b1bc:	e20100ff 	and	r0, r1, #255	; 0xff
4001b1c0:	e3500020 	cmp	r0, #32
4001b1c4:	baffffef 	blt	4001b188 <CyU3PPibSocketInit+0x8>
4001b1c8:	e12fff1e 	bx	lr
4001b1cc:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001b1d0 <CyU3PPibThreadEntry>:
4001b1d0:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001b1d4:	e3a00005 	mov	r0, #5
4001b1d8:	ebffe25e 	bl	40013b58 <CyU3PSysModuleInitCompleteEvt>
4001b1dc:	e59f0278 	ldr	r0, [pc, #632]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b1e0:	e5900000 	ldr	r0, [r0]
4001b1e4:	e1a00800 	lsl	r0, r0, #16
4001b1e8:	e1a00820 	lsr	r0, r0, #16
4001b1ec:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001b1f0:	e59f1264 	ldr	r1, [pc, #612]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b1f4:	e5810000 	str	r0, [r1]
4001b1f8:	e3a000e1 	mov	r0, #225	; 0xe1
4001b1fc:	e59f125c 	ldr	r1, [pc, #604]	; 4001b460 <CyU3PPibThreadEntry+0x290>
4001b200:	e5810000 	str	r0, [r1]
4001b204:	ea000093 	b	4001b458 <CyU3PPibThreadEntry+0x288>
4001b208:	e3e03000 	mvn	r3, #0
4001b20c:	e58d3000 	str	r3, [sp]
4001b210:	e28d3008 	add	r3, sp, #8
4001b214:	e3a02001 	mov	r2, #1
4001b218:	e59f0240 	ldr	r0, [pc, #576]	; 4001b460 <CyU3PPibThreadEntry+0x290>
4001b21c:	e5901000 	ldr	r1, [r0]
4001b220:	e59f023c 	ldr	r0, [pc, #572]	; 4001b464 <CyU3PPibThreadEntry+0x294>
4001b224:	ebffbb70 	bl	40009fec <_txe_event_flags_get>
4001b228:	e1a04000 	mov	r4, r0
4001b22c:	e59f122c 	ldr	r1, [pc, #556]	; 4001b460 <CyU3PPibThreadEntry+0x290>
4001b230:	e59d0008 	ldr	r0, [sp, #8]
4001b234:	e5911000 	ldr	r1, [r1]
4001b238:	e0000001 	and	r0, r0, r1
4001b23c:	e58d0008 	str	r0, [sp, #8]
4001b240:	e3540000 	cmp	r4, #0
4001b244:	0a000000 	beq	4001b24c <CyU3PPibThreadEntry+0x7c>
4001b248:	ea000082 	b	4001b458 <CyU3PPibThreadEntry+0x288>
4001b24c:	ea00007d 	b	4001b448 <CyU3PPibThreadEntry+0x278>
4001b250:	e59d0008 	ldr	r0, [sp, #8]
4001b254:	e3100020 	tst	r0, #32
4001b258:	0a000017 	beq	4001b2bc <CyU3PPibThreadEntry+0xec>
4001b25c:	e59f0204 	ldr	r0, [pc, #516]	; 4001b468 <CyU3PPibThreadEntry+0x298>
4001b260:	e5900000 	ldr	r0, [r0]
4001b264:	e3500000 	cmp	r0, #0
4001b268:	0a00000b 	beq	4001b29c <CyU3PPibThreadEntry+0xcc>
4001b26c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b46c <CyU3PPibThreadEntry+0x29c>
4001b270:	e5900000 	ldr	r0, [r0]
4001b274:	e3100002 	tst	r0, #2
4001b278:	0a000007 	beq	4001b29c <CyU3PPibThreadEntry+0xcc>
4001b27c:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b470 <CyU3PPibThreadEntry+0x2a0>
4001b280:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001b284:	e1a01800 	lsl	r1, r0, #16
4001b288:	e1a01821 	lsr	r1, r1, #16
4001b28c:	e3a00002 	mov	r0, #2
4001b290:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b468 <CyU3PPibThreadEntry+0x298>
4001b294:	e5922000 	ldr	r2, [r2]
4001b298:	e12fff32 	blx	r2
4001b29c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b2a0:	e5900000 	ldr	r0, [r0]
4001b2a4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001b2a8:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b2ac:	e5810000 	str	r0, [r1]
4001b2b0:	e59d0008 	ldr	r0, [sp, #8]
4001b2b4:	e3c00020 	bic	r0, r0, #32
4001b2b8:	e58d0008 	str	r0, [sp, #8]
4001b2bc:	e59d0008 	ldr	r0, [sp, #8]
4001b2c0:	e3100040 	tst	r0, #64	; 0x40
4001b2c4:	0a000027 	beq	4001b368 <CyU3PPibThreadEntry+0x198>
4001b2c8:	e59f0198 	ldr	r0, [pc, #408]	; 4001b468 <CyU3PPibThreadEntry+0x298>
4001b2cc:	e5900000 	ldr	r0, [r0]
4001b2d0:	e3500000 	cmp	r0, #0
4001b2d4:	0a000017 	beq	4001b338 <CyU3PPibThreadEntry+0x168>
4001b2d8:	e59f018c 	ldr	r0, [pc, #396]	; 4001b46c <CyU3PPibThreadEntry+0x29c>
4001b2dc:	e5900000 	ldr	r0, [r0]
4001b2e0:	e3100004 	tst	r0, #4
4001b2e4:	0a000013 	beq	4001b338 <CyU3PPibThreadEntry+0x168>
4001b2e8:	e59f016c 	ldr	r0, [pc, #364]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b2ec:	e5900020 	ldr	r0, [r0, #32]
4001b2f0:	e1a05800 	lsl	r5, r0, #16
4001b2f4:	e1a05825 	lsr	r5, r5, #16
4001b2f8:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001b2fc:	e3500a02 	cmp	r0, #8192	; 0x2000
4001b300:	1a000000 	bne	4001b308 <CyU3PPibThreadEntry+0x138>
4001b304:	e3a05a02 	mov	r5, #8192	; 0x2000
4001b308:	e59f0164 	ldr	r0, [pc, #356]	; 4001b474 <CyU3PPibThreadEntry+0x2a4>
4001b30c:	e5900000 	ldr	r0, [r0]
4001b310:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001b314:	1a000001 	bne	4001b320 <CyU3PPibThreadEntry+0x150>
4001b318:	e3550004 	cmp	r5, #4
4001b31c:	da000004 	ble	4001b334 <CyU3PPibThreadEntry+0x164>
4001b320:	e1a01005 	mov	r1, r5
4001b324:	e3a00004 	mov	r0, #4
4001b328:	e59f2138 	ldr	r2, [pc, #312]	; 4001b468 <CyU3PPibThreadEntry+0x298>
4001b32c:	e5922000 	ldr	r2, [r2]
4001b330:	e12fff32 	blx	r2
4001b334:	e1a00000 	nop			; (mov r0, r0)
4001b338:	e59f012c 	ldr	r0, [pc, #300]	; 4001b46c <CyU3PPibThreadEntry+0x29c>
4001b33c:	e5900000 	ldr	r0, [r0]
4001b340:	e3100004 	tst	r0, #4
4001b344:	0a000004 	beq	4001b35c <CyU3PPibThreadEntry+0x18c>
4001b348:	e59f010c 	ldr	r0, [pc, #268]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b34c:	e5900008 	ldr	r0, [r0, #8]
4001b350:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b354:	e59f1100 	ldr	r1, [pc, #256]	; 4001b45c <CyU3PPibThreadEntry+0x28c>
4001b358:	e5810008 	str	r0, [r1, #8]
4001b35c:	e59d0008 	ldr	r0, [sp, #8]
4001b360:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b364:	e58d0008 	str	r0, [sp, #8]
4001b368:	e59d0008 	ldr	r0, [sp, #8]
4001b36c:	e3100080 	tst	r0, #128	; 0x80
4001b370:	0a000011 	beq	4001b3bc <CyU3PPibThreadEntry+0x1ec>
4001b374:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b468 <CyU3PPibThreadEntry+0x298>
4001b378:	e5900000 	ldr	r0, [r0]
4001b37c:	e3500000 	cmp	r0, #0
4001b380:	0a00000a 	beq	4001b3b0 <CyU3PPibThreadEntry+0x1e0>
4001b384:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b46c <CyU3PPibThreadEntry+0x29c>
4001b388:	e5900000 	ldr	r0, [r0]
4001b38c:	e3100001 	tst	r0, #1
4001b390:	0a000006 	beq	4001b3b0 <CyU3PPibThreadEntry+0x1e0>
4001b394:	ebffe6ab 	bl	40014e48 <CyFx3PibGetDllStatus>
4001b398:	e1a05000 	mov	r5, r0
4001b39c:	e1a01000 	mov	r1, r0
4001b3a0:	e3a00001 	mov	r0, #1
4001b3a4:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b468 <CyU3PPibThreadEntry+0x298>
4001b3a8:	e5922000 	ldr	r2, [r2]
4001b3ac:	e12fff32 	blx	r2
4001b3b0:	e59d0008 	ldr	r0, [sp, #8]
4001b3b4:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b3b8:	e58d0008 	str	r0, [sp, #8]
4001b3bc:	e59d0008 	ldr	r0, [sp, #8]
4001b3c0:	e3100001 	tst	r0, #1
4001b3c4:	0a00001f 	beq	4001b448 <CyU3PPibThreadEntry+0x278>
4001b3c8:	e3a02000 	mov	r2, #0
4001b3cc:	e28d1004 	add	r1, sp, #4
4001b3d0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b478 <CyU3PPibThreadEntry+0x2a8>
4001b3d4:	ebffbcbf 	bl	4000a6d8 <_txe_queue_receive>
4001b3d8:	e1a04000 	mov	r4, r0
4001b3dc:	e3540000 	cmp	r4, #0
4001b3e0:	1a000015 	bne	4001b43c <CyU3PPibThreadEntry+0x26c>
4001b3e4:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b3e8:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b3ec:	e1b00720 	lsrs	r0, r0, #14
4001b3f0:	0a000014 	beq	4001b448 <CyU3PPibThreadEntry+0x278>
4001b3f4:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b3f8:	e20000ff 	and	r0, r0, #255	; 0xff
4001b3fc:	e3500004 	cmp	r0, #4
4001b400:	1a00000a 	bne	4001b430 <CyU3PPibThreadEntry+0x260>
4001b404:	e59f0070 	ldr	r0, [pc, #112]	; 4001b47c <CyU3PPibThreadEntry+0x2ac>
4001b408:	e5900000 	ldr	r0, [r0]
4001b40c:	e3500000 	cmp	r0, #0
4001b410:	0a000005 	beq	4001b42c <CyU3PPibThreadEntry+0x25c>
4001b414:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b418:	e1a01442 	asr	r1, r2, #8
4001b41c:	e20200ff 	and	r0, r2, #255	; 0xff
4001b420:	e59f2054 	ldr	r2, [pc, #84]	; 4001b47c <CyU3PPibThreadEntry+0x2ac>
4001b424:	e5922000 	ldr	r2, [r2]
4001b428:	e12fff32 	blx	r2
4001b42c:	ea000001 	b	4001b438 <CyU3PPibThreadEntry+0x268>
4001b430:	e1a00000 	nop			; (mov r0, r0)
4001b434:	e1a00000 	nop			; (mov r0, r0)
4001b438:	ea000002 	b	4001b448 <CyU3PPibThreadEntry+0x278>
4001b43c:	e59d0008 	ldr	r0, [sp, #8]
4001b440:	e3c00001 	bic	r0, r0, #1
4001b444:	e58d0008 	str	r0, [sp, #8]
4001b448:	e59d0008 	ldr	r0, [sp, #8]
4001b44c:	e3500000 	cmp	r0, #0
4001b450:	1affff7e 	bne	4001b250 <CyU3PPibThreadEntry+0x80>
4001b454:	e1a00000 	nop			; (mov r0, r0)
4001b458:	eaffff6a 	b	4001b208 <CyU3PPibThreadEntry+0x38>
4001b45c:	e0010000 	.word	0xe0010000
4001b460:	40030d44 	.word	0x40030d44
4001b464:	40031990 	.word	0x40031990
4001b468:	40030d48 	.word	0x40030d48
4001b46c:	40030d4c 	.word	0x40030d4c
4001b470:	e0017000 	.word	0xe0017000
4001b474:	e0014000 	.word	0xe0014000
4001b478:	40031a60 	.word	0x40031a60
4001b47c:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3PPmmcInit:

4001b480 <CyU3PPmmcInit>:
4001b480:	e92d4010 	push	{r4, lr}
4001b484:	e1a04000 	mov	r4, r0
4001b488:	e3540000 	cmp	r4, #0
4001b48c:	0a000042 	beq	4001b59c <CyU3PPmmcInit+0x11c>
4001b490:	e3e00000 	mvn	r0, #0
4001b494:	e59f1148 	ldr	r1, [pc, #328]	; 4001b5e4 <CyU3PPmmcInit+0x164>
4001b498:	e581000c 	str	r0, [r1, #12]
4001b49c:	e3a00000 	mov	r0, #0
4001b4a0:	e5810010 	str	r0, [r1, #16]
4001b4a4:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b4a8:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b4ac:	e3a00000 	mov	r0, #0
4001b4b0:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b4b4:	e5810008 	str	r0, [r1, #8]
4001b4b8:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b4bc:	e5900000 	ldr	r0, [r0]
4001b4c0:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b4c4:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b4c8:	e5810000 	str	r0, [r1]
4001b4cc:	e59f0114 	ldr	r0, [pc, #276]	; 4001b5e8 <CyU3PPmmcInit+0x168>
4001b4d0:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b4d4:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b4d8:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b4dc:	e3a00001 	mov	r0, #1
4001b4e0:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b4e4:	e59f0100 	ldr	r0, [pc, #256]	; 4001b5ec <CyU3PPmmcInit+0x16c>
4001b4e8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b4ec:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b5f0 <CyU3PPmmcInit+0x170>
4001b4f0:	e5900000 	ldr	r0, [r0]
4001b4f4:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b4f8:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b5f0 <CyU3PPmmcInit+0x170>
4001b4fc:	e5900004 	ldr	r0, [r0, #4]
4001b500:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b504:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b5f0 <CyU3PPmmcInit+0x170>
4001b508:	e5900008 	ldr	r0, [r0, #8]
4001b50c:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b510:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b5f0 <CyU3PPmmcInit+0x170>
4001b514:	e590000c 	ldr	r0, [r0, #12]
4001b518:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b51c:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b5f4 <CyU3PPmmcInit+0x174>
4001b520:	e5900000 	ldr	r0, [r0]
4001b524:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b528:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b5f4 <CyU3PPmmcInit+0x174>
4001b52c:	e5900004 	ldr	r0, [r0, #4]
4001b530:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b534:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b5f4 <CyU3PPmmcInit+0x174>
4001b538:	e5900008 	ldr	r0, [r0, #8]
4001b53c:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b540:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b5f4 <CyU3PPmmcInit+0x174>
4001b544:	e590000c 	ldr	r0, [r0, #12]
4001b548:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b54c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b5f4 <CyU3PPmmcInit+0x174>
4001b550:	e5900010 	ldr	r0, [r0, #16]
4001b554:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b558:	e59f0094 	ldr	r0, [pc, #148]	; 4001b5f4 <CyU3PPmmcInit+0x174>
4001b55c:	e5900014 	ldr	r0, [r0, #20]
4001b560:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b564:	e59f008c 	ldr	r0, [pc, #140]	; 4001b5f8 <CyU3PPmmcInit+0x178>
4001b568:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b56c:	e3a00000 	mov	r0, #0
4001b570:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b574:	e3a00c02 	mov	r0, #512	; 0x200
4001b578:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b57c:	e3a00000 	mov	r0, #0
4001b580:	e5810004 	str	r0, [r1, #4]
4001b584:	e59f0070 	ldr	r0, [pc, #112]	; 4001b5fc <CyU3PPmmcInit+0x17c>
4001b588:	e5810010 	str	r0, [r1, #16]
4001b58c:	e3a00008 	mov	r0, #8
4001b590:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b594:	e5810008 	str	r0, [r1, #8]
4001b598:	ea000002 	b	4001b5a8 <CyU3PPmmcInit+0x128>
4001b59c:	e3a00000 	mov	r0, #0
4001b5a0:	e59f103c 	ldr	r1, [pc, #60]	; 4001b5e4 <CyU3PPmmcInit+0x164>
4001b5a4:	e5810010 	str	r0, [r1, #16]
4001b5a8:	e59f0034 	ldr	r0, [pc, #52]	; 4001b5e4 <CyU3PPmmcInit+0x164>
4001b5ac:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b5b0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b5b4:	e59f1028 	ldr	r1, [pc, #40]	; 4001b5e4 <CyU3PPmmcInit+0x164>
4001b5b8:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b5bc:	ebffdddd 	bl	40012d38 <CyU3PSysBarrierSync>
4001b5c0:	e59f0038 	ldr	r0, [pc, #56]	; 4001b600 <CyU3PPmmcInit+0x180>
4001b5c4:	e5900000 	ldr	r0, [r0]
4001b5c8:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b5cc:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b5d0:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b5d4:	e59f1024 	ldr	r1, [pc, #36]	; 4001b600 <CyU3PPmmcInit+0x180>
4001b5d8:	e5810000 	str	r0, [r1]
4001b5dc:	e3a00000 	mov	r0, #0
4001b5e0:	e8bd8010 	pop	{r4, pc}
4001b5e4:	e0011000 	.word	0xe0011000
4001b5e8:	00019201 	.word	0x00019201
4001b5ec:	04010302 	.word	0x04010302
4001b5f0:	40012068 	.word	0x40012068
4001b5f4:	40012078 	.word	0x40012078
4001b5f8:	00ff8080 	.word	0x00ff8080
4001b5fc:	400a00fb 	.word	0x400a00fb
4001b600:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b604 <CyU3PMboxReset>:
4001b604:	e92d4010 	push	{r4, lr}
4001b608:	e3a00002 	mov	r0, #2
4001b60c:	e59f1028 	ldr	r1, [pc, #40]	; 4001b63c <CyU3PMboxReset+0x38>
4001b610:	e5810004 	str	r0, [r1, #4]
4001b614:	e3a02002 	mov	r2, #2
4001b618:	e3a01010 	mov	r1, #16
4001b61c:	e59f001c 	ldr	r0, [pc, #28]	; 4001b640 <CyU3PMboxReset+0x3c>
4001b620:	ebffbaa1 	bl	4000a0ac <_txe_event_flags_set>
4001b624:	e59f0010 	ldr	r0, [pc, #16]	; 4001b63c <CyU3PMboxReset+0x38>
4001b628:	e5900008 	ldr	r0, [r0, #8]
4001b62c:	e3800003 	orr	r0, r0, #3
4001b630:	e59f1004 	ldr	r1, [pc, #4]	; 4001b63c <CyU3PMboxReset+0x38>
4001b634:	e5810008 	str	r0, [r1, #8]
4001b638:	e8bd8010 	pop	{r4, pc}
4001b63c:	e0010000 	.word	0xe0010000
4001b640:	40031990 	.word	0x40031990

Disassembly of section i.CyU3PGpifConfigure:

4001b644 <CyU3PGpifConfigure>:
4001b644:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b648:	e1a04000 	mov	r4, r0
4001b64c:	e1a05001 	mov	r5, r1
4001b650:	e59f609c 	ldr	r6, [pc, #156]	; 4001b6f4 <CyU3PGpifConfigure+0xb0>
4001b654:	e3540000 	cmp	r4, #0
4001b658:	0a000001 	beq	4001b664 <CyU3PGpifConfigure+0x20>
4001b65c:	e3550000 	cmp	r5, #0
4001b660:	1a000001 	bne	4001b66c <CyU3PGpifConfigure+0x28>
4001b664:	e3a00040 	mov	r0, #64	; 0x40
4001b668:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b66c:	ebffe585 	bl	40014c88 <CyFx3DevIsGpifConfigurable>
4001b670:	e3500000 	cmp	r0, #0
4001b674:	1a000001 	bne	4001b680 <CyU3PGpifConfigure+0x3c>
4001b678:	e3a00046 	mov	r0, #70	; 0x46
4001b67c:	eafffff9 	b	4001b668 <CyU3PGpifConfigure+0x24>
4001b680:	ebffe576 	bl	40014c60 <CyFx3DevIsGpif32Supported>
4001b684:	e3500000 	cmp	r0, #0
4001b688:	1a000007 	bne	4001b6ac <CyU3PGpifConfigure+0x68>
4001b68c:	e3540001 	cmp	r4, #1
4001b690:	da000005 	ble	4001b6ac <CyU3PGpifConfigure+0x68>
4001b694:	e5950004 	ldr	r0, [r5, #4]
4001b698:	e200000c 	and	r0, r0, #12
4001b69c:	e3500004 	cmp	r0, #4
4001b6a0:	9a000001 	bls	4001b6ac <CyU3PGpifConfigure+0x68>
4001b6a4:	e3a00046 	mov	r0, #70	; 0x46
4001b6a8:	eaffffee 	b	4001b668 <CyU3PGpifConfigure+0x24>
4001b6ac:	e59f0044 	ldr	r0, [pc, #68]	; 4001b6f8 <CyU3PGpifConfigure+0xb4>
4001b6b0:	e5900000 	ldr	r0, [r0]
4001b6b4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b6b8:	0a000001 	beq	4001b6c4 <CyU3PGpifConfigure+0x80>
4001b6bc:	e3a00043 	mov	r0, #67	; 0x43
4001b6c0:	eaffffe8 	b	4001b668 <CyU3PGpifConfigure+0x24>
4001b6c4:	e3a07001 	mov	r7, #1
4001b6c8:	ea000002 	b	4001b6d8 <CyU3PGpifConfigure+0x94>
4001b6cc:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b6d0:	e4860004 	str	r0, [r6], #4
4001b6d4:	e2877001 	add	r7, r7, #1
4001b6d8:	e1570004 	cmp	r7, r4
4001b6dc:	bafffffa 	blt	4001b6cc <CyU3PGpifConfigure+0x88>
4001b6e0:	e5950000 	ldr	r0, [r5]
4001b6e4:	e59f100c 	ldr	r1, [pc, #12]	; 4001b6f8 <CyU3PGpifConfigure+0xb4>
4001b6e8:	e5810000 	str	r0, [r1]
4001b6ec:	e3a00000 	mov	r0, #0
4001b6f0:	eaffffdc 	b	4001b668 <CyU3PGpifConfigure+0x24>
4001b6f4:	e0014004 	.word	0xe0014004
4001b6f8:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b6fc <CyU3PGpifDisable>:
4001b6fc:	e92d4070 	push	{r4, r5, r6, lr}
4001b700:	e1a04000 	mov	r4, r0
4001b704:	e59f0070 	ldr	r0, [pc, #112]	; 4001b77c <CyU3PGpifDisable+0x80>
4001b708:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b70c:	e3800002 	orr	r0, r0, #2
4001b710:	e59f1064 	ldr	r1, [pc, #100]	; 4001b77c <CyU3PGpifDisable+0x80>
4001b714:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b718:	e3a0000a 	mov	r0, #10
4001b71c:	ebffe057 	bl	40013880 <CyU3PBusyWait>
4001b720:	e3a00000 	mov	r0, #0
4001b724:	e59f1050 	ldr	r1, [pc, #80]	; 4001b77c <CyU3PGpifDisable+0x80>
4001b728:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b72c:	e3540000 	cmp	r4, #0
4001b730:	0a000010 	beq	4001b778 <CyU3PGpifDisable+0x7c>
4001b734:	e3a00e22 	mov	r0, #544	; 0x220
4001b738:	e5810000 	str	r0, [r1]
4001b73c:	e3a05000 	mov	r5, #0
4001b740:	ea000007 	b	4001b764 <CyU3PGpifDisable+0x68>
4001b744:	e3a00000 	mov	r0, #0
4001b748:	e59f1030 	ldr	r1, [pc, #48]	; 4001b780 <CyU3PGpifDisable+0x84>
4001b74c:	e0811205 	add	r1, r1, r5, lsl #4
4001b750:	e5810008 	str	r0, [r1, #8]
4001b754:	e59f1028 	ldr	r1, [pc, #40]	; 4001b784 <CyU3PGpifDisable+0x88>
4001b758:	e0811205 	add	r1, r1, r5, lsl #4
4001b75c:	e5810008 	str	r0, [r1, #8]
4001b760:	e2855001 	add	r5, r5, #1
4001b764:	e3550c01 	cmp	r5, #256	; 0x100
4001b768:	3afffff5 	bcc	4001b744 <CyU3PGpifDisable+0x48>
4001b76c:	e59f1014 	ldr	r1, [pc, #20]	; 4001b788 <CyU3PGpifDisable+0x8c>
4001b770:	e3a0004c 	mov	r0, #76	; 0x4c
4001b774:	ebffffb2 	bl	4001b644 <CyU3PGpifConfigure>
4001b778:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b77c:	e0014000 	.word	0xe0014000
4001b780:	e0015000 	.word	0xe0015000
4001b784:	e0016000 	.word	0xe0016000
4001b788:	40012090 	.word	0x40012090

Disassembly of section i.CyU3PGpifLoad:

4001b78c <CyU3PGpifLoad>:
4001b78c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b790:	e1a04000 	mov	r4, r0
4001b794:	e59f7264 	ldr	r7, [pc, #612]	; 4001ba00 <CyU3PGpifLoad+0x274>
4001b798:	e3540000 	cmp	r4, #0
4001b79c:	0a000008 	beq	4001b7c4 <CyU3PGpifLoad+0x38>
4001b7a0:	e1d400b0 	ldrh	r0, [r4]
4001b7a4:	e3500000 	cmp	r0, #0
4001b7a8:	1a000007 	bne	4001b7cc <CyU3PGpifLoad+0x40>
4001b7ac:	e1d400bc 	ldrh	r0, [r4, #12]
4001b7b0:	e3500000 	cmp	r0, #0
4001b7b4:	1a000004 	bne	4001b7cc <CyU3PGpifLoad+0x40>
4001b7b8:	e1d401b4 	ldrh	r0, [r4, #20]
4001b7bc:	e3500000 	cmp	r0, #0
4001b7c0:	1a000001 	bne	4001b7cc <CyU3PGpifLoad+0x40>
4001b7c4:	e3a00040 	mov	r0, #64	; 0x40
4001b7c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b7cc:	e59f0230 	ldr	r0, [pc, #560]	; 4001ba04 <CyU3PGpifLoad+0x278>
4001b7d0:	e5900000 	ldr	r0, [r0]
4001b7d4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b7d8:	1a000003 	bne	4001b7ec <CyU3PGpifLoad+0x60>
4001b7dc:	e59f0220 	ldr	r0, [pc, #544]	; 4001ba04 <CyU3PGpifLoad+0x278>
4001b7e0:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b7e4:	e3100001 	tst	r0, #1
4001b7e8:	0a000001 	beq	4001b7f4 <CyU3PGpifLoad+0x68>
4001b7ec:	e3a00043 	mov	r0, #67	; 0x43
4001b7f0:	eafffff4 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001b7f4:	ebffe523 	bl	40014c88 <CyFx3DevIsGpifConfigurable>
4001b7f8:	e3500000 	cmp	r0, #0
4001b7fc:	1a000001 	bne	4001b808 <CyU3PGpifLoad+0x7c>
4001b800:	e3a00046 	mov	r0, #70	; 0x46
4001b804:	eaffffef 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001b808:	ebffe514 	bl	40014c60 <CyFx3DevIsGpif32Supported>
4001b80c:	e3500000 	cmp	r0, #0
4001b810:	1a00000c 	bne	4001b848 <CyU3PGpifLoad+0xbc>
4001b814:	e1d401b4 	ldrh	r0, [r4, #20]
4001b818:	e3500002 	cmp	r0, #2
4001b81c:	ba000009 	blt	4001b848 <CyU3PGpifLoad+0xbc>
4001b820:	e5940018 	ldr	r0, [r4, #24]
4001b824:	e3500000 	cmp	r0, #0
4001b828:	0a000006 	beq	4001b848 <CyU3PGpifLoad+0xbc>
4001b82c:	e5940018 	ldr	r0, [r4, #24]
4001b830:	e5900004 	ldr	r0, [r0, #4]
4001b834:	e200000c 	and	r0, r0, #12
4001b838:	e3500004 	cmp	r0, #4
4001b83c:	9a000001 	bls	4001b848 <CyU3PGpifLoad+0xbc>
4001b840:	e3a00046 	mov	r0, #70	; 0x46
4001b844:	eaffffdf 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001b848:	e1d400b0 	ldrh	r0, [r4]
4001b84c:	e3500000 	cmp	r0, #0
4001b850:	0a00003b 	beq	4001b944 <CyU3PGpifLoad+0x1b8>
4001b854:	e5940004 	ldr	r0, [r4, #4]
4001b858:	e3500000 	cmp	r0, #0
4001b85c:	1a000001 	bne	4001b868 <CyU3PGpifLoad+0xdc>
4001b860:	e3a00040 	mov	r0, #64	; 0x40
4001b864:	eaffffd7 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001b868:	e3a05000 	mov	r5, #0
4001b86c:	ea000031 	b	4001b938 <CyU3PGpifLoad+0x1ac>
4001b870:	e5940008 	ldr	r0, [r4, #8]
4001b874:	e3500000 	cmp	r0, #0
4001b878:	0a000002 	beq	4001b888 <CyU3PGpifLoad+0xfc>
4001b87c:	e5940008 	ldr	r0, [r4, #8]
4001b880:	e7d00005 	ldrb	r0, [r0, r5]
4001b884:	ea000000 	b	4001b88c <CyU3PGpifLoad+0x100>
4001b888:	e1a00005 	mov	r0, r5
4001b88c:	e1a06800 	lsl	r6, r0, #16
4001b890:	e1a06826 	lsr	r6, r6, #16
4001b894:	e0861086 	add	r1, r6, r6, lsl #1
4001b898:	e5940004 	ldr	r0, [r4, #4]
4001b89c:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b8a0:	e59f1160 	ldr	r1, [pc, #352]	; 4001ba08 <CyU3PGpifLoad+0x27c>
4001b8a4:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b8a8:	e0861086 	add	r1, r6, r6, lsl #1
4001b8ac:	e5940004 	ldr	r0, [r4, #4]
4001b8b0:	e0800181 	add	r0, r0, r1, lsl #3
4001b8b4:	e5900004 	ldr	r0, [r0, #4]
4001b8b8:	e59f1148 	ldr	r1, [pc, #328]	; 4001ba08 <CyU3PGpifLoad+0x27c>
4001b8bc:	e0811205 	add	r1, r1, r5, lsl #4
4001b8c0:	e5810004 	str	r0, [r1, #4]
4001b8c4:	e0861086 	add	r1, r6, r6, lsl #1
4001b8c8:	e5940004 	ldr	r0, [r4, #4]
4001b8cc:	e0800181 	add	r0, r0, r1, lsl #3
4001b8d0:	e5900008 	ldr	r0, [r0, #8]
4001b8d4:	e59f112c 	ldr	r1, [pc, #300]	; 4001ba08 <CyU3PGpifLoad+0x27c>
4001b8d8:	e0811205 	add	r1, r1, r5, lsl #4
4001b8dc:	e5810008 	str	r0, [r1, #8]
4001b8e0:	e0861086 	add	r1, r6, r6, lsl #1
4001b8e4:	e5940004 	ldr	r0, [r4, #4]
4001b8e8:	e0800181 	add	r0, r0, r1, lsl #3
4001b8ec:	e590000c 	ldr	r0, [r0, #12]
4001b8f0:	e59f1114 	ldr	r1, [pc, #276]	; 4001ba0c <CyU3PGpifLoad+0x280>
4001b8f4:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b8f8:	e0861086 	add	r1, r6, r6, lsl #1
4001b8fc:	e5940004 	ldr	r0, [r4, #4]
4001b900:	e0800181 	add	r0, r0, r1, lsl #3
4001b904:	e5900010 	ldr	r0, [r0, #16]
4001b908:	e59f10fc 	ldr	r1, [pc, #252]	; 4001ba0c <CyU3PGpifLoad+0x280>
4001b90c:	e0811205 	add	r1, r1, r5, lsl #4
4001b910:	e5810004 	str	r0, [r1, #4]
4001b914:	e0861086 	add	r1, r6, r6, lsl #1
4001b918:	e5940004 	ldr	r0, [r4, #4]
4001b91c:	e0800181 	add	r0, r0, r1, lsl #3
4001b920:	e5900014 	ldr	r0, [r0, #20]
4001b924:	e59f10e0 	ldr	r1, [pc, #224]	; 4001ba0c <CyU3PGpifLoad+0x280>
4001b928:	e0811205 	add	r1, r1, r5, lsl #4
4001b92c:	e5810008 	str	r0, [r1, #8]
4001b930:	e2850001 	add	r0, r5, #1
4001b934:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b938:	e1d400b0 	ldrh	r0, [r4]
4001b93c:	e1500005 	cmp	r0, r5
4001b940:	caffffca 	bgt	4001b870 <CyU3PGpifLoad+0xe4>
4001b944:	e1d400bc 	ldrh	r0, [r4, #12]
4001b948:	e3500000 	cmp	r0, #0
4001b94c:	0a000013 	beq	4001b9a0 <CyU3PGpifLoad+0x214>
4001b950:	e5940010 	ldr	r0, [r4, #16]
4001b954:	e3500000 	cmp	r0, #0
4001b958:	0a000002 	beq	4001b968 <CyU3PGpifLoad+0x1dc>
4001b95c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b960:	e3500020 	cmp	r0, #32
4001b964:	da000001 	ble	4001b970 <CyU3PGpifLoad+0x1e4>
4001b968:	e3a00040 	mov	r0, #64	; 0x40
4001b96c:	eaffff95 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001b970:	e3a05000 	mov	r5, #0
4001b974:	ea000006 	b	4001b994 <CyU3PGpifLoad+0x208>
4001b978:	e5940010 	ldr	r0, [r4, #16]
4001b97c:	e0800085 	add	r0, r0, r5, lsl #1
4001b980:	e1d000b0 	ldrh	r0, [r0]
4001b984:	e59f1084 	ldr	r1, [pc, #132]	; 4001ba10 <CyU3PGpifLoad+0x284>
4001b988:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b98c:	e2850001 	add	r0, r5, #1
4001b990:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b994:	e1d400bc 	ldrh	r0, [r4, #12]
4001b998:	e1500005 	cmp	r0, r5
4001b99c:	cafffff5 	bgt	4001b978 <CyU3PGpifLoad+0x1ec>
4001b9a0:	e1d401b4 	ldrh	r0, [r4, #20]
4001b9a4:	e3500000 	cmp	r0, #0
4001b9a8:	0a000012 	beq	4001b9f8 <CyU3PGpifLoad+0x26c>
4001b9ac:	e5940018 	ldr	r0, [r4, #24]
4001b9b0:	e3500000 	cmp	r0, #0
4001b9b4:	1a000001 	bne	4001b9c0 <CyU3PGpifLoad+0x234>
4001b9b8:	e3a00040 	mov	r0, #64	; 0x40
4001b9bc:	eaffff81 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001b9c0:	e3a05001 	mov	r5, #1
4001b9c4:	ea000004 	b	4001b9dc <CyU3PGpifLoad+0x250>
4001b9c8:	e5940018 	ldr	r0, [r4, #24]
4001b9cc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b9d0:	e4870004 	str	r0, [r7], #4
4001b9d4:	e2850001 	add	r0, r5, #1
4001b9d8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b9dc:	e1d401b4 	ldrh	r0, [r4, #20]
4001b9e0:	e1500005 	cmp	r0, r5
4001b9e4:	cafffff7 	bgt	4001b9c8 <CyU3PGpifLoad+0x23c>
4001b9e8:	e5940018 	ldr	r0, [r4, #24]
4001b9ec:	e5900000 	ldr	r0, [r0]
4001b9f0:	e59f100c 	ldr	r1, [pc, #12]	; 4001ba04 <CyU3PGpifLoad+0x278>
4001b9f4:	e5810000 	str	r0, [r1]
4001b9f8:	e3a00000 	mov	r0, #0
4001b9fc:	eaffff71 	b	4001b7c8 <CyU3PGpifLoad+0x3c>
4001ba00:	e0014004 	.word	0xe0014004
4001ba04:	e0014000 	.word	0xe0014000
4001ba08:	e0015000 	.word	0xe0015000
4001ba0c:	e0016000 	.word	0xe0016000
4001ba10:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001ba14 <CyU3PGpifRegisterCallback>:
4001ba14:	e59f1004 	ldr	r1, [pc, #4]	; 4001ba20 <CyU3PGpifRegisterCallback+0xc>
4001ba18:	e5810000 	str	r0, [r1]
4001ba1c:	e12fff1e 	bx	lr
4001ba20:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3PGpifSMStart:

4001ba24 <CyU3PGpifSMStart>:
4001ba24:	e92d4010 	push	{r4, lr}
4001ba28:	e1a02000 	mov	r2, r0
4001ba2c:	e59f012c 	ldr	r0, [pc, #300]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001ba30:	e5900000 	ldr	r0, [r0]
4001ba34:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba38:	0a000004 	beq	4001ba50 <CyU3PGpifSMStart+0x2c>
4001ba3c:	e59f0120 	ldr	r0, [pc, #288]	; 4001bb64 <CyU3PGpifSMStart+0x140>
4001ba40:	e0800202 	add	r0, r0, r2, lsl #4
4001ba44:	e5900008 	ldr	r0, [r0, #8]
4001ba48:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba4c:	1a000001 	bne	4001ba58 <CyU3PGpifSMStart+0x34>
4001ba50:	e3a00044 	mov	r0, #68	; 0x44
4001ba54:	e8bd8010 	pop	{r4, pc}
4001ba58:	e59f0100 	ldr	r0, [pc, #256]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001ba5c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001ba60:	e3100001 	tst	r0, #1
4001ba64:	0a000001 	beq	4001ba70 <CyU3PGpifSMStart+0x4c>
4001ba68:	e3a00043 	mov	r0, #67	; 0x43
4001ba6c:	eafffff8 	b	4001ba54 <CyU3PGpifSMStart+0x30>
4001ba70:	e59f00e8 	ldr	r0, [pc, #232]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001ba74:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001ba78:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001ba7c:	e1800801 	orr	r0, r0, r1, lsl #16
4001ba80:	e3800001 	orr	r0, r0, #1
4001ba84:	e59f40d4 	ldr	r4, [pc, #212]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001ba88:	e5840118 	str	r0, [r4, #280]	; 0x118
4001ba8c:	e1a00004 	mov	r0, r4
4001ba90:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001ba94:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bb68 <CyU3PGpifSMStart+0x144>
4001ba98:	e000000e 	and	r0, r0, lr
4001ba9c:	e180e802 	orr	lr, r0, r2, lsl #16
4001baa0:	e1a00004 	mov	r0, r4
4001baa4:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001baa8:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001baac:	e3800005 	orr	r0, r0, #5
4001bab0:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bab4:	e1a00004 	mov	r0, r4
4001bab8:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001babc:	e5900008 	ldr	r0, [r0, #8]
4001bac0:	e2003007 	and	r3, r0, #7
4001bac4:	e3530001 	cmp	r3, #1
4001bac8:	0a000004 	beq	4001bae0 <CyU3PGpifSMStart+0xbc>
4001bacc:	e3530002 	cmp	r3, #2
4001bad0:	0a00000b 	beq	4001bb04 <CyU3PGpifSMStart+0xe0>
4001bad4:	e3530003 	cmp	r3, #3
4001bad8:	1a00001b 	bne	4001bb4c <CyU3PGpifSMStart+0x128>
4001badc:	ea000011 	b	4001bb28 <CyU3PGpifSMStart+0x104>
4001bae0:	e1a00000 	nop			; (mov r0, r0)
4001bae4:	e59f0080 	ldr	r0, [pc, #128]	; 4001bb6c <CyU3PGpifSMStart+0x148>
4001bae8:	e1ce0000 	bic	r0, lr, r0
4001baec:	e3800005 	orr	r0, r0, #5
4001baf0:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001baf4:	e1800424 	orr	r0, r0, r4, lsr #8
4001baf8:	e59f4060 	ldr	r4, [pc, #96]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001bafc:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb00:	ea000013 	b	4001bb54 <CyU3PGpifSMStart+0x130>
4001bb04:	e1a00000 	nop			; (mov r0, r0)
4001bb08:	e59f0060 	ldr	r0, [pc, #96]	; 4001bb70 <CyU3PGpifSMStart+0x14c>
4001bb0c:	e1ce0000 	bic	r0, lr, r0
4001bb10:	e3800005 	orr	r0, r0, #5
4001bb14:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001bb18:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb1c:	e59f403c 	ldr	r4, [pc, #60]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001bb20:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb24:	ea00000a 	b	4001bb54 <CyU3PGpifSMStart+0x130>
4001bb28:	e1a00000 	nop			; (mov r0, r0)
4001bb2c:	e59f0040 	ldr	r0, [pc, #64]	; 4001bb74 <CyU3PGpifSMStart+0x150>
4001bb30:	e1ce0000 	bic	r0, lr, r0
4001bb34:	e3800005 	orr	r0, r0, #5
4001bb38:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001bb3c:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb40:	e59f4018 	ldr	r4, [pc, #24]	; 4001bb60 <CyU3PGpifSMStart+0x13c>
4001bb44:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb48:	ea000001 	b	4001bb54 <CyU3PGpifSMStart+0x130>
4001bb4c:	e1a00000 	nop			; (mov r0, r0)
4001bb50:	e1a00000 	nop			; (mov r0, r0)
4001bb54:	e1a00000 	nop			; (mov r0, r0)
4001bb58:	e3a00000 	mov	r0, #0
4001bb5c:	eaffffbc 	b	4001ba54 <CyU3PGpifSMStart+0x30>
4001bb60:	e0014000 	.word	0xe0014000
4001bb64:	e0015000 	.word	0xe0015000
4001bb68:	ff00003a 	.word	0xff00003a
4001bb6c:	0080ffc5 	.word	0x0080ffc5
4001bb70:	00c0ffc5 	.word	0x00c0ffc5
4001bb74:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001bb78 <CyU3PGpifSMSwitch>:
4001bb78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001bb7c:	e1a0c000 	mov	ip, r0
4001bb80:	e59de018 	ldr	lr, [sp, #24]
4001bb84:	e3a04000 	mov	r4, #0
4001bb88:	e3510c01 	cmp	r1, #256	; 0x100
4001bb8c:	ba000001 	blt	4001bb98 <CyU3PGpifSMSwitch+0x20>
4001bb90:	e3a00040 	mov	r0, #64	; 0x40
4001bb94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001bb98:	e59f0150 	ldr	r0, [pc, #336]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bb9c:	e5900000 	ldr	r0, [r0]
4001bba0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001bba4:	1a000001 	bne	4001bbb0 <CyU3PGpifSMSwitch+0x38>
4001bba8:	e3a00044 	mov	r0, #68	; 0x44
4001bbac:	eafffff8 	b	4001bb94 <CyU3PGpifSMSwitch+0x1c>
4001bbb0:	e59f0138 	ldr	r0, [pc, #312]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bbb4:	e5900008 	ldr	r0, [r0, #8]
4001bbb8:	e2006007 	and	r6, r0, #7
4001bbbc:	e59f012c 	ldr	r0, [pc, #300]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bbc0:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bbc4:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001bbc8:	e1800803 	orr	r0, r0, r3, lsl #16
4001bbcc:	e3800001 	orr	r0, r0, #1
4001bbd0:	e59f8118 	ldr	r8, [pc, #280]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bbd4:	e5880118 	str	r0, [r8, #280]	; 0x118
4001bbd8:	e3a00001 	mov	r0, #1
4001bbdc:	e1804801 	orr	r4, r0, r1, lsl #16
4001bbe0:	e35c0c01 	cmp	ip, #256	; 0x100
4001bbe4:	aa000012 	bge	4001bc34 <CyU3PGpifSMSwitch+0xbc>
4001bbe8:	e1c80000 	bic	r0, r8, r0
4001bbec:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bbf0:	e1a05c20 	lsr	r5, r0, #24
4001bbf4:	e59f00f8 	ldr	r0, [pc, #248]	; 4001bcf4 <CyU3PGpifSMSwitch+0x17c>
4001bbf8:	e7d00006 	ldrb	r0, [r0, r6]
4001bbfc:	e0000005 	and	r0, r0, r5
4001bc00:	e59f80ec 	ldr	r8, [pc, #236]	; 4001bcf4 <CyU3PGpifSMSwitch+0x17c>
4001bc04:	e7d88006 	ldrb	r8, [r8, r6]
4001bc08:	e008800c 	and	r8, r8, ip
4001bc0c:	e1500008 	cmp	r0, r8
4001bc10:	1a000001 	bne	4001bc1c <CyU3PGpifSMSwitch+0xa4>
4001bc14:	e3844004 	orr	r4, r4, #4
4001bc18:	ea000006 	b	4001bc38 <CyU3PGpifSMSwitch+0xc0>
4001bc1c:	e3a00008 	mov	r0, #8
4001bc20:	e180040c 	orr	r0, r0, ip, lsl #8
4001bc24:	e1844000 	orr	r4, r4, r0
4001bc28:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bc2c:	e580e120 	str	lr, [r0, #288]	; 0x120
4001bc30:	ea000000 	b	4001bc38 <CyU3PGpifSMSwitch+0xc0>
4001bc34:	e3844004 	orr	r4, r4, #4
4001bc38:	e3520c01 	cmp	r2, #256	; 0x100
4001bc3c:	aa000007 	bge	4001bc60 <CyU3PGpifSMSwitch+0xe8>
4001bc40:	e3a00002 	mov	r0, #2
4001bc44:	e1800c02 	orr	r0, r0, r2, lsl #24
4001bc48:	e1844000 	orr	r4, r4, r0
4001bc4c:	e59f009c 	ldr	r0, [pc, #156]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bc50:	e5900018 	ldr	r0, [r0, #24]
4001bc54:	e3800001 	orr	r0, r0, #1
4001bc58:	e59f8090 	ldr	r8, [pc, #144]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bc5c:	e5880018 	str	r0, [r8, #24]
4001bc60:	e59f0088 	ldr	r0, [pc, #136]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bc64:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001bc68:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001bc6c:	e3560001 	cmp	r6, #1
4001bc70:	0a000004 	beq	4001bc88 <CyU3PGpifSMSwitch+0x110>
4001bc74:	e3560002 	cmp	r6, #2
4001bc78:	0a000009 	beq	4001bca4 <CyU3PGpifSMSwitch+0x12c>
4001bc7c:	e3560003 	cmp	r6, #3
4001bc80:	1a000015 	bne	4001bcdc <CyU3PGpifSMSwitch+0x164>
4001bc84:	ea00000d 	b	4001bcc0 <CyU3PGpifSMSwitch+0x148>
4001bc88:	e1a00000 	nop			; (mov r0, r0)
4001bc8c:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001bc90:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001bc94:	e1800428 	orr	r0, r0, r8, lsr #8
4001bc98:	e59f8050 	ldr	r8, [pc, #80]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bc9c:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bca0:	ea00000f 	b	4001bce4 <CyU3PGpifSMSwitch+0x16c>
4001bca4:	e1a00000 	nop			; (mov r0, r0)
4001bca8:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001bcac:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001bcb0:	e1800428 	orr	r0, r0, r8, lsr #8
4001bcb4:	e59f8034 	ldr	r8, [pc, #52]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bcb8:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bcbc:	ea000008 	b	4001bce4 <CyU3PGpifSMSwitch+0x16c>
4001bcc0:	e1a00000 	nop			; (mov r0, r0)
4001bcc4:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001bcc8:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001bccc:	e1800428 	orr	r0, r0, r8, lsr #8
4001bcd0:	e59f8018 	ldr	r8, [pc, #24]	; 4001bcf0 <CyU3PGpifSMSwitch+0x178>
4001bcd4:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bcd8:	ea000001 	b	4001bce4 <CyU3PGpifSMSwitch+0x16c>
4001bcdc:	e1a00000 	nop			; (mov r0, r0)
4001bce0:	e1a00000 	nop			; (mov r0, r0)
4001bce4:	e1a00000 	nop			; (mov r0, r0)
4001bce8:	e3a00000 	mov	r0, #0
4001bcec:	eaffffa8 	b	4001bb94 <CyU3PGpifSMSwitch+0x1c>
4001bcf0:	e0014000 	.word	0xe0014000
4001bcf4:	400121c0 	.word	0x400121c0

Disassembly of section i.CyU3PConnectState:

4001bcf8 <CyU3PConnectState>:
4001bcf8:	e92d4070 	push	{r4, r5, r6, lr}
4001bcfc:	e1a04000 	mov	r4, r0
4001bd00:	e1a06001 	mov	r6, r1
4001bd04:	e59f0234 	ldr	r0, [pc, #564]	; 4001bf40 <CyU3PConnectState+0x248>
4001bd08:	e5d00008 	ldrb	r0, [r0, #8]
4001bd0c:	e3500000 	cmp	r0, #0
4001bd10:	1a000001 	bne	4001bd1c <CyU3PConnectState+0x24>
4001bd14:	e3a00042 	mov	r0, #66	; 0x42
4001bd18:	e8bd8070 	pop	{r4, r5, r6, pc}
4001bd1c:	ebffe41a 	bl	40014d8c <CyFx3DevIsUsb3Supported>
4001bd20:	e3500000 	cmp	r0, #0
4001bd24:	1a000000 	bne	4001bd2c <CyU3PConnectState+0x34>
4001bd28:	e3a06000 	mov	r6, #0
4001bd2c:	e3a05000 	mov	r5, #0
4001bd30:	e3e01000 	mvn	r1, #0
4001bd34:	e59f0208 	ldr	r0, [pc, #520]	; 4001bf44 <CyU3PConnectState+0x24c>
4001bd38:	ebffb973 	bl	4000a30c <_txe_mutex_get>
4001bd3c:	e3540000 	cmp	r4, #0
4001bd40:	1a00001a 	bne	4001bdb0 <CyU3PConnectState+0xb8>
4001bd44:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bf40 <CyU3PConnectState+0x248>
4001bd48:	e5d00008 	ldrb	r0, [r0, #8]
4001bd4c:	e3500004 	cmp	r0, #4
4001bd50:	ba000012 	blt	4001bda0 <CyU3PConnectState+0xa8>
4001bd54:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bf40 <CyU3PConnectState+0x248>
4001bd58:	e5d00008 	ldrb	r0, [r0, #8]
4001bd5c:	e3500005 	cmp	r0, #5
4001bd60:	ba000008 	blt	4001bd88 <CyU3PConnectState+0x90>
4001bd64:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bf40 <CyU3PConnectState+0x248>
4001bd68:	e5d11009 	ldrb	r1, [r1, #9]
4001bd6c:	e3510003 	cmp	r1, #3
4001bd70:	1a000001 	bne	4001bd7c <CyU3PConnectState+0x84>
4001bd74:	e3a01001 	mov	r1, #1
4001bd78:	ea000000 	b	4001bd80 <CyU3PConnectState+0x88>
4001bd7c:	e3a01000 	mov	r1, #0
4001bd80:	e1a00001 	mov	r0, r1
4001bd84:	eb00050f 	bl	4001d1c8 <CyU3PUsbPhyDisable>
4001bd88:	e3a00003 	mov	r0, #3
4001bd8c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bf40 <CyU3PConnectState+0x248>
4001bd90:	e5c10008 	strb	r0, [r1, #8]
4001bd94:	e3a00000 	mov	r0, #0
4001bd98:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001bd9c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bda0:	e3a00000 	mov	r0, #0
4001bda4:	e59f1194 	ldr	r1, [pc, #404]	; 4001bf40 <CyU3PConnectState+0x248>
4001bda8:	e5810044 	str	r0, [r1, #68]	; 0x44
4001bdac:	ea00005f 	b	4001bf30 <CyU3PConnectState+0x238>
4001bdb0:	e59f0188 	ldr	r0, [pc, #392]	; 4001bf40 <CyU3PConnectState+0x248>
4001bdb4:	e5d00008 	ldrb	r0, [r0, #8]
4001bdb8:	e3500003 	cmp	r0, #3
4001bdbc:	0a00000b 	beq	4001bdf0 <CyU3PConnectState+0xf8>
4001bdc0:	e3500004 	cmp	r0, #4
4001bdc4:	0a000004 	beq	4001bddc <CyU3PConnectState+0xe4>
4001bdc8:	e3500005 	cmp	r0, #5
4001bdcc:	0a000004 	beq	4001bde4 <CyU3PConnectState+0xec>
4001bdd0:	e3500006 	cmp	r0, #6
4001bdd4:	1a000051 	bne	4001bf20 <CyU3PConnectState+0x228>
4001bdd8:	ea000002 	b	4001bde8 <CyU3PConnectState+0xf0>
4001bddc:	e1a00000 	nop			; (mov r0, r0)
4001bde0:	e1a00000 	nop			; (mov r0, r0)
4001bde4:	e1a00000 	nop			; (mov r0, r0)
4001bde8:	e3a05043 	mov	r5, #67	; 0x43
4001bdec:	ea00004e 	b	4001bf2c <CyU3PConnectState+0x234>
4001bdf0:	e1a00000 	nop			; (mov r0, r0)
4001bdf4:	e59f0144 	ldr	r0, [pc, #324]	; 4001bf40 <CyU3PConnectState+0x248>
4001bdf8:	e5d00007 	ldrb	r0, [r0, #7]
4001bdfc:	e3500001 	cmp	r0, #1
4001be00:	0a00000f 	beq	4001be44 <CyU3PConnectState+0x14c>
4001be04:	e59f013c 	ldr	r0, [pc, #316]	; 4001bf48 <CyU3PConnectState+0x250>
4001be08:	e590001c 	ldr	r0, [r0, #28]
4001be0c:	e3500000 	cmp	r0, #0
4001be10:	0a000007 	beq	4001be34 <CyU3PConnectState+0x13c>
4001be14:	e59f012c 	ldr	r0, [pc, #300]	; 4001bf48 <CyU3PConnectState+0x250>
4001be18:	e5900014 	ldr	r0, [r0, #20]
4001be1c:	e3500000 	cmp	r0, #0
4001be20:	0a000003 	beq	4001be34 <CyU3PConnectState+0x13c>
4001be24:	e59f011c 	ldr	r0, [pc, #284]	; 4001bf48 <CyU3PConnectState+0x250>
4001be28:	e5900018 	ldr	r0, [r0, #24]
4001be2c:	e3500000 	cmp	r0, #0
4001be30:	1a000003 	bne	4001be44 <CyU3PConnectState+0x14c>
4001be34:	e59f0108 	ldr	r0, [pc, #264]	; 4001bf44 <CyU3PConnectState+0x24c>
4001be38:	ebffb968 	bl	4000a3e0 <_txe_mutex_put>
4001be3c:	e3a00044 	mov	r0, #68	; 0x44
4001be40:	eaffffb4 	b	4001bd18 <CyU3PConnectState+0x20>
4001be44:	e3560000 	cmp	r6, #0
4001be48:	0a000007 	beq	4001be6c <CyU3PConnectState+0x174>
4001be4c:	e3a00000 	mov	r0, #0
4001be50:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bf4c <CyU3PConnectState+0x254>
4001be54:	e5810014 	str	r0, [r1, #20]
4001be58:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bf50 <CyU3PConnectState+0x258>
4001be5c:	e5810000 	str	r0, [r1]
4001be60:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bf54 <CyU3PConnectState+0x25c>
4001be64:	e5810000 	str	r0, [r1]
4001be68:	ea000007 	b	4001be8c <CyU3PConnectState+0x194>
4001be6c:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bf40 <CyU3PConnectState+0x248>
4001be70:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001be74:	e3500000 	cmp	r0, #0
4001be78:	0a000003 	beq	4001be8c <CyU3PConnectState+0x194>
4001be7c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bf44 <CyU3PConnectState+0x24c>
4001be80:	ebffb956 	bl	4000a3e0 <_txe_mutex_put>
4001be84:	e3a000ff 	mov	r0, #255	; 0xff
4001be88:	eaffffa2 	b	4001bd18 <CyU3PConnectState+0x20>
4001be8c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bf40 <CyU3PConnectState+0x248>
4001be90:	e5806024 	str	r6, [r0, #36]	; 0x24
4001be94:	e3a00000 	mov	r0, #0
4001be98:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bf40 <CyU3PConnectState+0x248>
4001be9c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bea0:	e2810000 	add	r0, r1, #0
4001bea4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bea8:	e3500000 	cmp	r0, #0
4001beac:	0a000004 	beq	4001bec4 <CyU3PConnectState+0x1cc>
4001beb0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bf58 <CyU3PConnectState+0x260>
4001beb4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001beb8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bebc:	e1100001 	tst	r0, r1
4001bec0:	0a000012 	beq	4001bf10 <CyU3PConnectState+0x218>
4001bec4:	e3560000 	cmp	r6, #0
4001bec8:	0a000007 	beq	4001beec <CyU3PConnectState+0x1f4>
4001becc:	e3a00000 	mov	r0, #0
4001bed0:	e59f1068 	ldr	r1, [pc, #104]	; 4001bf40 <CyU3PConnectState+0x248>
4001bed4:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bed8:	e3a00001 	mov	r0, #1
4001bedc:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bee0:	e3a00000 	mov	r0, #0
4001bee4:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bee8:	ea000002 	b	4001bef8 <CyU3PConnectState+0x200>
4001beec:	e3a00000 	mov	r0, #0
4001bef0:	e59f1048 	ldr	r1, [pc, #72]	; 4001bf40 <CyU3PConnectState+0x248>
4001bef4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bef8:	e1a00006 	mov	r0, r6
4001befc:	eb000527 	bl	4001d3a0 <CyU3PUsbPhyEnable>
4001bf00:	e3a00005 	mov	r0, #5
4001bf04:	e59f1034 	ldr	r1, [pc, #52]	; 4001bf40 <CyU3PConnectState+0x248>
4001bf08:	e5c10008 	strb	r0, [r1, #8]
4001bf0c:	ea000002 	b	4001bf1c <CyU3PConnectState+0x224>
4001bf10:	e3a00004 	mov	r0, #4
4001bf14:	e59f1024 	ldr	r1, [pc, #36]	; 4001bf40 <CyU3PConnectState+0x248>
4001bf18:	e5c10008 	strb	r0, [r1, #8]
4001bf1c:	ea000002 	b	4001bf2c <CyU3PConnectState+0x234>
4001bf20:	e1a00000 	nop			; (mov r0, r0)
4001bf24:	e3a05044 	mov	r5, #68	; 0x44
4001bf28:	e1a00000 	nop			; (mov r0, r0)
4001bf2c:	e1a00000 	nop			; (mov r0, r0)
4001bf30:	e59f000c 	ldr	r0, [pc, #12]	; 4001bf44 <CyU3PConnectState+0x24c>
4001bf34:	ebffb929 	bl	4000a3e0 <_txe_mutex_put>
4001bf38:	e1a00005 	mov	r0, r5
4001bf3c:	eaffff75 	b	4001bd18 <CyU3PConnectState+0x20>
4001bf40:	40031d60 	.word	0x40031d60
4001bf44:	40031f00 	.word	0x40031f00
4001bf48:	40031fb8 	.word	0x40031fb8
4001bf4c:	e0033000 	.word	0xe0033000
4001bf50:	40030da4 	.word	0x40030da4
4001bf54:	40030da8 	.word	0x40030da8
4001bf58:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bf5c <CyU3POtgGetMode>:
4001bf5c:	e59f0004 	ldr	r0, [pc, #4]	; 4001bf68 <CyU3POtgGetMode+0xc>
4001bf60:	e5d00000 	ldrb	r0, [r0]
4001bf64:	e12fff1e 	bx	lr
4001bf68:	40030d74 	.word	0x40030d74

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bf6c <CyU3POtgIsDeviceMode>:
4001bf6c:	e3a01000 	mov	r1, #0
4001bf70:	e59f00b4 	ldr	r0, [pc, #180]	; 4001c02c <CyU3POtgIsDeviceMode+0xc0>
4001bf74:	e5d00000 	ldrb	r0, [r0]
4001bf78:	e3500000 	cmp	r0, #0
4001bf7c:	0a000003 	beq	4001bf90 <CyU3POtgIsDeviceMode+0x24>
4001bf80:	e59f00a4 	ldr	r0, [pc, #164]	; 4001c02c <CyU3POtgIsDeviceMode+0xc0>
4001bf84:	e5d00000 	ldrb	r0, [r0]
4001bf88:	e3500002 	cmp	r0, #2
4001bf8c:	1a000024 	bne	4001c024 <CyU3POtgIsDeviceMode+0xb8>
4001bf90:	e59f0098 	ldr	r0, [pc, #152]	; 4001c030 <CyU3POtgIsDeviceMode+0xc4>
4001bf94:	e5d00000 	ldrb	r0, [r0]
4001bf98:	e3500000 	cmp	r0, #0
4001bf9c:	0a000006 	beq	4001bfbc <CyU3POtgIsDeviceMode+0x50>
4001bfa0:	e3500002 	cmp	r0, #2
4001bfa4:	0a00000c 	beq	4001bfdc <CyU3POtgIsDeviceMode+0x70>
4001bfa8:	e3500004 	cmp	r0, #4
4001bfac:	0a00000b 	beq	4001bfe0 <CyU3POtgIsDeviceMode+0x74>
4001bfb0:	e3500005 	cmp	r0, #5
4001bfb4:	1a00000c 	bne	4001bfec <CyU3POtgIsDeviceMode+0x80>
4001bfb8:	ea000009 	b	4001bfe4 <CyU3POtgIsDeviceMode+0x78>
4001bfbc:	e1a00000 	nop			; (mov r0, r0)
4001bfc0:	e59f0064 	ldr	r0, [pc, #100]	; 4001c02c <CyU3POtgIsDeviceMode+0xc0>
4001bfc4:	e5d00000 	ldrb	r0, [r0]
4001bfc8:	e3500002 	cmp	r0, #2
4001bfcc:	1a000001 	bne	4001bfd8 <CyU3POtgIsDeviceMode+0x6c>
4001bfd0:	e3a00000 	mov	r0, #0
4001bfd4:	e12fff1e 	bx	lr
4001bfd8:	e1a00000 	nop			; (mov r0, r0)
4001bfdc:	e1a00000 	nop			; (mov r0, r0)
4001bfe0:	e1a00000 	nop			; (mov r0, r0)
4001bfe4:	e3a01001 	mov	r1, #1
4001bfe8:	ea000002 	b	4001bff8 <CyU3POtgIsDeviceMode+0x8c>
4001bfec:	e1a00000 	nop			; (mov r0, r0)
4001bff0:	e3a01000 	mov	r1, #0
4001bff4:	e1a00000 	nop			; (mov r0, r0)
4001bff8:	e1a00000 	nop			; (mov r0, r0)
4001bffc:	e59f0030 	ldr	r0, [pc, #48]	; 4001c034 <CyU3POtgIsDeviceMode+0xc8>
4001c000:	e5900000 	ldr	r0, [r0]
4001c004:	e3500000 	cmp	r0, #0
4001c008:	0a000005 	beq	4001c024 <CyU3POtgIsDeviceMode+0xb8>
4001c00c:	e3510000 	cmp	r1, #0
4001c010:	1a000001 	bne	4001c01c <CyU3POtgIsDeviceMode+0xb0>
4001c014:	e3a00001 	mov	r0, #1
4001c018:	ea000000 	b	4001c020 <CyU3POtgIsDeviceMode+0xb4>
4001c01c:	e3a00000 	mov	r0, #0
4001c020:	e1a01000 	mov	r1, r0
4001c024:	e1a00001 	mov	r0, r1
4001c028:	eaffffe9 	b	4001bfd4 <CyU3POtgIsDeviceMode+0x68>
4001c02c:	40030d74 	.word	0x40030d74
4001c030:	40030d70 	.word	0x40030d70
4001c034:	40030d6c 	.word	0x40030d6c

Disassembly of section i.CyU3POtgIsHostMode:

4001c038 <CyU3POtgIsHostMode>:
4001c038:	e3a01000 	mov	r1, #0
4001c03c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c0ec <CyU3POtgIsHostMode+0xb4>
4001c040:	e5d00000 	ldrb	r0, [r0]
4001c044:	e3500001 	cmp	r0, #1
4001c048:	0a000003 	beq	4001c05c <CyU3POtgIsHostMode+0x24>
4001c04c:	e59f0098 	ldr	r0, [pc, #152]	; 4001c0ec <CyU3POtgIsHostMode+0xb4>
4001c050:	e5d00000 	ldrb	r0, [r0]
4001c054:	e3500002 	cmp	r0, #2
4001c058:	1a000021 	bne	4001c0e4 <CyU3POtgIsHostMode+0xac>
4001c05c:	e59f008c 	ldr	r0, [pc, #140]	; 4001c0f0 <CyU3POtgIsHostMode+0xb8>
4001c060:	e5d00000 	ldrb	r0, [r0]
4001c064:	e3500000 	cmp	r0, #0
4001c068:	0a000004 	beq	4001c080 <CyU3POtgIsHostMode+0x48>
4001c06c:	e3500001 	cmp	r0, #1
4001c070:	0a00000a 	beq	4001c0a0 <CyU3POtgIsHostMode+0x68>
4001c074:	e3500003 	cmp	r0, #3
4001c078:	1a00000b 	bne	4001c0ac <CyU3POtgIsHostMode+0x74>
4001c07c:	ea000008 	b	4001c0a4 <CyU3POtgIsHostMode+0x6c>
4001c080:	e1a00000 	nop			; (mov r0, r0)
4001c084:	e59f0060 	ldr	r0, [pc, #96]	; 4001c0ec <CyU3POtgIsHostMode+0xb4>
4001c088:	e5d00000 	ldrb	r0, [r0]
4001c08c:	e3500002 	cmp	r0, #2
4001c090:	1a000001 	bne	4001c09c <CyU3POtgIsHostMode+0x64>
4001c094:	e3a00000 	mov	r0, #0
4001c098:	e12fff1e 	bx	lr
4001c09c:	e1a00000 	nop			; (mov r0, r0)
4001c0a0:	e1a00000 	nop			; (mov r0, r0)
4001c0a4:	e3a01001 	mov	r1, #1
4001c0a8:	ea000002 	b	4001c0b8 <CyU3POtgIsHostMode+0x80>
4001c0ac:	e1a00000 	nop			; (mov r0, r0)
4001c0b0:	e3a01000 	mov	r1, #0
4001c0b4:	e1a00000 	nop			; (mov r0, r0)
4001c0b8:	e1a00000 	nop			; (mov r0, r0)
4001c0bc:	e59f0030 	ldr	r0, [pc, #48]	; 4001c0f4 <CyU3POtgIsHostMode+0xbc>
4001c0c0:	e5900000 	ldr	r0, [r0]
4001c0c4:	e3500000 	cmp	r0, #0
4001c0c8:	0a000005 	beq	4001c0e4 <CyU3POtgIsHostMode+0xac>
4001c0cc:	e3510000 	cmp	r1, #0
4001c0d0:	1a000001 	bne	4001c0dc <CyU3POtgIsHostMode+0xa4>
4001c0d4:	e3a00001 	mov	r0, #1
4001c0d8:	ea000000 	b	4001c0e0 <CyU3POtgIsHostMode+0xa8>
4001c0dc:	e3a00000 	mov	r0, #0
4001c0e0:	e1a01000 	mov	r1, r0
4001c0e4:	e1a00001 	mov	r0, r1
4001c0e8:	eaffffea 	b	4001c098 <CyU3POtgIsHostMode+0x60>
4001c0ec:	40030d74 	.word	0x40030d74
4001c0f0:	40030d70 	.word	0x40030d70
4001c0f4:	40030d6c 	.word	0x40030d6c

Disassembly of section i.CyU3POtgIsStarted:

4001c0f8 <CyU3POtgIsStarted>:
4001c0f8:	e59f0004 	ldr	r0, [pc, #4]	; 4001c104 <CyU3POtgIsStarted+0xc>
4001c0fc:	e5900000 	ldr	r0, [r0]
4001c100:	e12fff1e 	bx	lr
4001c104:	40030d68 	.word	0x40030d68

Disassembly of section i.CyU3PSetEpConfig:

4001c108 <CyU3PSetEpConfig>:
4001c108:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001c10c:	e1a04000 	mov	r4, r0
4001c110:	e1a05001 	mov	r5, r1
4001c114:	e204607f 	and	r6, r4, #127	; 0x7f
4001c118:	e3a07000 	mov	r7, #0
4001c11c:	e3a08000 	mov	r8, #0
4001c120:	e3a09000 	mov	r9, #0
4001c124:	e3a0a000 	mov	sl, #0
4001c128:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c6b8 <CyU3PSetEpConfig+0x5b0>
4001c12c:	e5d00008 	ldrb	r0, [r0, #8]
4001c130:	e3500000 	cmp	r0, #0
4001c134:	1a000001 	bne	4001c140 <CyU3PSetEpConfig+0x38>
4001c138:	e3a00042 	mov	r0, #66	; 0x42
4001c13c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001c140:	e3550000 	cmp	r5, #0
4001c144:	1a000001 	bne	4001c150 <CyU3PSetEpConfig+0x48>
4001c148:	e3a00041 	mov	r0, #65	; 0x41
4001c14c:	eafffffa 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c150:	e5950000 	ldr	r0, [r5]
4001c154:	e3500000 	cmp	r0, #0
4001c158:	0a000074 	beq	4001c330 <CyU3PSetEpConfig+0x228>
4001c15c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c160:	e3500b01 	cmp	r0, #1024	; 0x400
4001c164:	ca000001 	bgt	4001c170 <CyU3PSetEpConfig+0x68>
4001c168:	e356000f 	cmp	r6, #15
4001c16c:	da000001 	ble	4001c178 <CyU3PSetEpConfig+0x70>
4001c170:	e3a00040 	mov	r0, #64	; 0x40
4001c174:	eafffff0 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c178:	e5d50004 	ldrb	r0, [r5, #4]
4001c17c:	e3500000 	cmp	r0, #0
4001c180:	0a000002 	beq	4001c190 <CyU3PSetEpConfig+0x88>
4001c184:	e5d50004 	ldrb	r0, [r5, #4]
4001c188:	e3500003 	cmp	r0, #3
4001c18c:	da000001 	ble	4001c198 <CyU3PSetEpConfig+0x90>
4001c190:	e3a00040 	mov	r0, #64	; 0x40
4001c194:	eaffffe8 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c198:	e5d5000a 	ldrb	r0, [r5, #10]
4001c19c:	e3500010 	cmp	r0, #16
4001c1a0:	ca000008 	bgt	4001c1c8 <CyU3PSetEpConfig+0xc0>
4001c1a4:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1a8:	e3500001 	cmp	r0, #1
4001c1ac:	da000007 	ble	4001c1d0 <CyU3PSetEpConfig+0xc8>
4001c1b0:	e1d500b8 	ldrh	r0, [r5, #8]
4001c1b4:	e3500b01 	cmp	r0, #1024	; 0x400
4001c1b8:	aa000004 	bge	4001c1d0 <CyU3PSetEpConfig+0xc8>
4001c1bc:	e1d500b8 	ldrh	r0, [r5, #8]
4001c1c0:	e3500000 	cmp	r0, #0
4001c1c4:	0a000001 	beq	4001c1d0 <CyU3PSetEpConfig+0xc8>
4001c1c8:	e3a00040 	mov	r0, #64	; 0x40
4001c1cc:	eaffffda 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c1d0:	e5d50004 	ldrb	r0, [r5, #4]
4001c1d4:	e1a00f00 	lsl	r0, r0, #30
4001c1d8:	e1a08a20 	lsr	r8, r0, #20
4001c1dc:	e5d50004 	ldrb	r0, [r5, #4]
4001c1e0:	e2000003 	and	r0, r0, #3
4001c1e4:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c6bc <CyU3PSetEpConfig+0x5b4>
4001c1e8:	e7d1a000 	ldrb	sl, [r1, r0]
4001c1ec:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1f0:	e3500000 	cmp	r0, #0
4001c1f4:	0a000004 	beq	4001c20c <CyU3PSetEpConfig+0x104>
4001c1f8:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1fc:	e2400001 	sub	r0, r0, #1
4001c200:	e200000f 	and	r0, r0, #15
4001c204:	e18aa400 	orr	sl, sl, r0, lsl #8
4001c208:	ea000001 	b	4001c214 <CyU3PSetEpConfig+0x10c>
4001c20c:	e3a00001 	mov	r0, #1
4001c210:	e5c5000a 	strb	r0, [r5, #10]
4001c214:	e5d50004 	ldrb	r0, [r5, #4]
4001c218:	e3500001 	cmp	r0, #1
4001c21c:	1a000013 	bne	4001c270 <CyU3PSetEpConfig+0x168>
4001c220:	e5950000 	ldr	r0, [r5]
4001c224:	e3500000 	cmp	r0, #0
4001c228:	0a000010 	beq	4001c270 <CyU3PSetEpConfig+0x168>
4001c22c:	e5d5000b 	ldrb	r0, [r5, #11]
4001c230:	e2000003 	and	r0, r0, #3
4001c234:	e1888600 	orr	r8, r8, r0, lsl #12
4001c238:	e5d5000a 	ldrb	r0, [r5, #10]
4001c23c:	e5d5100b 	ldrb	r1, [r5, #11]
4001c240:	e1600180 	smulbb	r0, r0, r1
4001c244:	e200003f 	and	r0, r0, #63	; 0x3f
4001c248:	e18aa100 	orr	sl, sl, r0, lsl #2
4001c24c:	e5d5000b 	ldrb	r0, [r5, #11]
4001c250:	e3500001 	cmp	r0, #1
4001c254:	da000005 	ble	4001c270 <CyU3PSetEpConfig+0x168>
4001c258:	e3560003 	cmp	r6, #3
4001c25c:	0a000003 	beq	4001c270 <CyU3PSetEpConfig+0x168>
4001c260:	e3560007 	cmp	r6, #7
4001c264:	0a000001 	beq	4001c270 <CyU3PSetEpConfig+0x168>
4001c268:	e3a0004d 	mov	r0, #77	; 0x4d
4001c26c:	eaffffb2 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c270:	e1d500b8 	ldrh	r0, [r5, #8]
4001c274:	e3500000 	cmp	r0, #0
4001c278:	0a000004 	beq	4001c290 <CyU3PSetEpConfig+0x188>
4001c27c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c280:	e3500b01 	cmp	r0, #1024	; 0x400
4001c284:	ca000001 	bgt	4001c290 <CyU3PSetEpConfig+0x188>
4001c288:	e1d500b8 	ldrh	r0, [r5, #8]
4001c28c:	ea000000 	b	4001c294 <CyU3PSetEpConfig+0x18c>
4001c290:	e3a00b01 	mov	r0, #1024	; 0x400
4001c294:	e1a07800 	lsl	r7, r0, #16
4001c298:	e1a07827 	lsr	r7, r7, #16
4001c29c:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c6b8 <CyU3PSetEpConfig+0x5b0>
4001c2a0:	e5d00008 	ldrb	r0, [r0, #8]
4001c2a4:	e3500005 	cmp	r0, #5
4001c2a8:	da00001e 	ble	4001c328 <CyU3PSetEpConfig+0x220>
4001c2ac:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c6b8 <CyU3PSetEpConfig+0x5b0>
4001c2b0:	e5d00009 	ldrb	r0, [r0, #9]
4001c2b4:	e3500001 	cmp	r0, #1
4001c2b8:	0a000008 	beq	4001c2e0 <CyU3PSetEpConfig+0x1d8>
4001c2bc:	e3500002 	cmp	r0, #2
4001c2c0:	1a000015 	bne	4001c31c <CyU3PSetEpConfig+0x214>
4001c2c4:	e5d50004 	ldrb	r0, [r5, #4]
4001c2c8:	e3500002 	cmp	r0, #2
4001c2cc:	1a000002 	bne	4001c2dc <CyU3PSetEpConfig+0x1d4>
4001c2d0:	e3570c02 	cmp	r7, #512	; 0x200
4001c2d4:	da000000 	ble	4001c2dc <CyU3PSetEpConfig+0x1d4>
4001c2d8:	e3a07c02 	mov	r7, #512	; 0x200
4001c2dc:	ea000010 	b	4001c324 <CyU3PSetEpConfig+0x21c>
4001c2e0:	e1a00000 	nop			; (mov r0, r0)
4001c2e4:	e5d50004 	ldrb	r0, [r5, #4]
4001c2e8:	e3500001 	cmp	r0, #1
4001c2ec:	1a000003 	bne	4001c300 <CyU3PSetEpConfig+0x1f8>
4001c2f0:	e3570b01 	cmp	r7, #1024	; 0x400
4001c2f4:	ba000001 	blt	4001c300 <CyU3PSetEpConfig+0x1f8>
4001c2f8:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c6c0 <CyU3PSetEpConfig+0x5b8>
4001c2fc:	ea000005 	b	4001c318 <CyU3PSetEpConfig+0x210>
4001c300:	e5d50004 	ldrb	r0, [r5, #4]
4001c304:	e3500001 	cmp	r0, #1
4001c308:	0a000002 	beq	4001c318 <CyU3PSetEpConfig+0x210>
4001c30c:	e3570040 	cmp	r7, #64	; 0x40
4001c310:	da000000 	ble	4001c318 <CyU3PSetEpConfig+0x210>
4001c314:	e3a07040 	mov	r7, #64	; 0x40
4001c318:	ea000001 	b	4001c324 <CyU3PSetEpConfig+0x21c>
4001c31c:	e1a00000 	nop			; (mov r0, r0)
4001c320:	e1a00000 	nop			; (mov r0, r0)
4001c324:	e1a00000 	nop			; (mov r0, r0)
4001c328:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001c32c:	e1888000 	orr	r8, r8, r0
4001c330:	e3e01000 	mvn	r1, #0
4001c334:	e59f0388 	ldr	r0, [pc, #904]	; 4001c6c4 <CyU3PSetEpConfig+0x5bc>
4001c338:	ebffb7f3 	bl	4000a30c <_txe_mutex_get>
4001c33c:	e3140080 	tst	r4, #128	; 0x80
4001c340:	0a000062 	beq	4001c4d0 <CyU3PSetEpConfig+0x3c8>
4001c344:	e5950000 	ldr	r0, [r5]
4001c348:	e3500000 	cmp	r0, #0
4001c34c:	1a00001d 	bne	4001c3c8 <CyU3PSetEpConfig+0x2c0>
4001c350:	e59f0370 	ldr	r0, [pc, #880]	; 4001c6c8 <CyU3PSetEpConfig+0x5c0>
4001c354:	e59f1370 	ldr	r1, [pc, #880]	; 4001c6cc <CyU3PSetEpConfig+0x5c4>
4001c358:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c35c:	e3a00020 	mov	r0, #32
4001c360:	e59f1368 	ldr	r1, [pc, #872]	; 4001c6d0 <CyU3PSetEpConfig+0x5c8>
4001c364:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c368:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c36c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c370:	e3a01001 	mov	r1, #1
4001c374:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c378:	e59f1354 	ldr	r1, [pc, #852]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c37c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c380:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c384:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c388:	e3a01001 	mov	r1, #1
4001c38c:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c390:	e59f1340 	ldr	r1, [pc, #832]	; 4001c6d8 <CyU3PSetEpConfig+0x5d0>
4001c394:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c398:	e3a00000 	mov	r0, #0
4001c39c:	e0861086 	add	r1, r6, r6, lsl #1
4001c3a0:	e59f2334 	ldr	r2, [pc, #820]	; 4001c6dc <CyU3PSetEpConfig+0x5d4>
4001c3a4:	e0821101 	add	r1, r2, r1, lsl #2
4001c3a8:	e5810004 	str	r0, [r1, #4]
4001c3ac:	e0861086 	add	r1, r6, r6, lsl #1
4001c3b0:	e0821101 	add	r1, r2, r1, lsl #2
4001c3b4:	e5810008 	str	r0, [r1, #8]
4001c3b8:	e59f0304 	ldr	r0, [pc, #772]	; 4001c6c4 <CyU3PSetEpConfig+0x5bc>
4001c3bc:	ebffb807 	bl	4000a3e0 <_txe_mutex_put>
4001c3c0:	e3a00000 	mov	r0, #0
4001c3c4:	eaffff5c 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c3c8:	e3a00001 	mov	r0, #1
4001c3cc:	e0861086 	add	r1, r6, r6, lsl #1
4001c3d0:	e59f2304 	ldr	r2, [pc, #772]	; 4001c6dc <CyU3PSetEpConfig+0x5d4>
4001c3d4:	e0821101 	add	r1, r2, r1, lsl #2
4001c3d8:	e5810004 	str	r0, [r1, #4]
4001c3dc:	e0861086 	add	r1, r6, r6, lsl #1
4001c3e0:	e0821101 	add	r1, r2, r1, lsl #2
4001c3e4:	e5810008 	str	r0, [r1, #8]
4001c3e8:	e1d500b8 	ldrh	r0, [r5, #8]
4001c3ec:	e0861086 	add	r1, r6, r6, lsl #1
4001c3f0:	e0821101 	add	r1, r2, r1, lsl #2
4001c3f4:	e1c100b0 	strh	r0, [r1]
4001c3f8:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c6e0 <CyU3PSetEpConfig+0x5d8>
4001c3fc:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c400:	e5d50004 	ldrb	r0, [r5, #4]
4001c404:	e3500002 	cmp	r0, #2
4001c408:	1a000007 	bne	4001c42c <CyU3PSetEpConfig+0x324>
4001c40c:	e1d500b6 	ldrh	r0, [r5, #6]
4001c410:	e3500000 	cmp	r0, #0
4001c414:	da000004 	ble	4001c42c <CyU3PSetEpConfig+0x324>
4001c418:	e3a02001 	mov	r2, #1
4001c41c:	e1a01006 	mov	r1, r6
4001c420:	e1a00004 	mov	r0, r4
4001c424:	eb00031b 	bl	4001d098 <CyU3PUsbMapStream>
4001c428:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c6e4 <CyU3PSetEpConfig+0x5dc>
4001c42c:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c430:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c434:	e3a01001 	mov	r1, #1
4001c438:	e1800611 	orr	r0, r0, r1, lsl r6
4001c43c:	e59f1290 	ldr	r1, [pc, #656]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c440:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c444:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c448:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c44c:	e59f1278 	ldr	r1, [pc, #632]	; 4001c6cc <CyU3PSetEpConfig+0x5c4>
4001c450:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c454:	e3890001 	orr	r0, r9, #1
4001c458:	e59f1270 	ldr	r1, [pc, #624]	; 4001c6d0 <CyU3PSetEpConfig+0x5c8>
4001c45c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c460:	e2810040 	add	r0, r1, #64	; 0x40
4001c464:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c468:	e59f0278 	ldr	r0, [pc, #632]	; 4001c6e8 <CyU3PSetEpConfig+0x5e0>
4001c46c:	e5900000 	ldr	r0, [r0]
4001c470:	e3500000 	cmp	r0, #0
4001c474:	0a00007f 	beq	4001c678 <CyU3PSetEpConfig+0x570>
4001c478:	e3a00001 	mov	r0, #1
4001c47c:	e59f1268 	ldr	r1, [pc, #616]	; 4001c6ec <CyU3PSetEpConfig+0x5e4>
4001c480:	e5911000 	ldr	r1, [r1]
4001c484:	e1110610 	tst	r1, r0, lsl r6
4001c488:	0a00007a 	beq	4001c678 <CyU3PSetEpConfig+0x570>
4001c48c:	e59f0244 	ldr	r0, [pc, #580]	; 4001c6d8 <CyU3PSetEpConfig+0x5d0>
4001c490:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c494:	e3a01001 	mov	r1, #1
4001c498:	e1800611 	orr	r0, r0, r1, lsl r6
4001c49c:	e59f1234 	ldr	r1, [pc, #564]	; 4001c6d8 <CyU3PSetEpConfig+0x5d0>
4001c4a0:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c4a4:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c4a8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c4ac:	e3a01001 	mov	r1, #1
4001c4b0:	e1800611 	orr	r0, r0, r1, lsl r6
4001c4b4:	e59f1218 	ldr	r1, [pc, #536]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c4b8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c4bc:	e59f0224 	ldr	r0, [pc, #548]	; 4001c6e8 <CyU3PSetEpConfig+0x5e0>
4001c4c0:	e5901000 	ldr	r1, [r0]
4001c4c4:	e1a00004 	mov	r0, r4
4001c4c8:	eb0001ba 	bl	4001cbb8 <CyU3PUsbEnableEpInterrupts>
4001c4cc:	ea000069 	b	4001c678 <CyU3PSetEpConfig+0x570>
4001c4d0:	e5950000 	ldr	r0, [r5]
4001c4d4:	e3500000 	cmp	r0, #0
4001c4d8:	1a00001e 	bne	4001c558 <CyU3PSetEpConfig+0x450>
4001c4dc:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c6c8 <CyU3PSetEpConfig+0x5c0>
4001c4e0:	e59f1208 	ldr	r1, [pc, #520]	; 4001c6f0 <CyU3PSetEpConfig+0x5e8>
4001c4e4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c4e8:	e3a00020 	mov	r0, #32
4001c4ec:	e59f1200 	ldr	r1, [pc, #512]	; 4001c6f4 <CyU3PSetEpConfig+0x5ec>
4001c4f0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c4f4:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c4f8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c4fc:	e2861010 	add	r1, r6, #16
4001c500:	e3a02001 	mov	r2, #1
4001c504:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c508:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c6d8 <CyU3PSetEpConfig+0x5d0>
4001c50c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c510:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c514:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c518:	e2861010 	add	r1, r6, #16
4001c51c:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c520:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c524:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c528:	e3a00000 	mov	r0, #0
4001c52c:	e0861086 	add	r1, r6, r6, lsl #1
4001c530:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c6f8 <CyU3PSetEpConfig+0x5f0>
4001c534:	e0821101 	add	r1, r2, r1, lsl #2
4001c538:	e5810004 	str	r0, [r1, #4]
4001c53c:	e0861086 	add	r1, r6, r6, lsl #1
4001c540:	e0821101 	add	r1, r2, r1, lsl #2
4001c544:	e5810008 	str	r0, [r1, #8]
4001c548:	e59f0174 	ldr	r0, [pc, #372]	; 4001c6c4 <CyU3PSetEpConfig+0x5bc>
4001c54c:	ebffb7a3 	bl	4000a3e0 <_txe_mutex_put>
4001c550:	e3a00000 	mov	r0, #0
4001c554:	eafffef8 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c558:	e3a00001 	mov	r0, #1
4001c55c:	e0861086 	add	r1, r6, r6, lsl #1
4001c560:	e59f2190 	ldr	r2, [pc, #400]	; 4001c6f8 <CyU3PSetEpConfig+0x5f0>
4001c564:	e0821101 	add	r1, r2, r1, lsl #2
4001c568:	e5810004 	str	r0, [r1, #4]
4001c56c:	e0861086 	add	r1, r6, r6, lsl #1
4001c570:	e0821101 	add	r1, r2, r1, lsl #2
4001c574:	e5810008 	str	r0, [r1, #8]
4001c578:	e1d500b8 	ldrh	r0, [r5, #8]
4001c57c:	e0861086 	add	r1, r6, r6, lsl #1
4001c580:	e0821101 	add	r1, r2, r1, lsl #2
4001c584:	e1c100b0 	strh	r0, [r1]
4001c588:	e59f016c 	ldr	r0, [pc, #364]	; 4001c6fc <CyU3PSetEpConfig+0x5f4>
4001c58c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c590:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c594:	e1800007 	orr	r0, r0, r7
4001c598:	e59f115c 	ldr	r1, [pc, #348]	; 4001c6fc <CyU3PSetEpConfig+0x5f4>
4001c59c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c5a0:	e5d50004 	ldrb	r0, [r5, #4]
4001c5a4:	e3500002 	cmp	r0, #2
4001c5a8:	1a00000e 	bne	4001c5e8 <CyU3PSetEpConfig+0x4e0>
4001c5ac:	e1d500b6 	ldrh	r0, [r5, #6]
4001c5b0:	e3500000 	cmp	r0, #0
4001c5b4:	da00000b 	ble	4001c5e8 <CyU3PSetEpConfig+0x4e0>
4001c5b8:	e3a02001 	mov	r2, #1
4001c5bc:	e1a01006 	mov	r1, r6
4001c5c0:	e1a00004 	mov	r0, r4
4001c5c4:	eb0002b3 	bl	4001d098 <CyU3PUsbMapStream>
4001c5c8:	e59f0104 	ldr	r0, [pc, #260]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c5cc:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c5d0:	e2861010 	add	r1, r6, #16
4001c5d4:	e3a02001 	mov	r2, #1
4001c5d8:	e1800112 	orr	r0, r0, r2, lsl r1
4001c5dc:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c5e0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c5e4:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c6e4 <CyU3PSetEpConfig+0x5dc>
4001c5e8:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c5ec:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c6f0 <CyU3PSetEpConfig+0x5e8>
4001c5f0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c5f4:	e3890001 	orr	r0, r9, #1
4001c5f8:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c6f4 <CyU3PSetEpConfig+0x5ec>
4001c5fc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c600:	e2810040 	add	r0, r1, #64	; 0x40
4001c604:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c608:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c6e8 <CyU3PSetEpConfig+0x5e0>
4001c60c:	e5900000 	ldr	r0, [r0]
4001c610:	e3500000 	cmp	r0, #0
4001c614:	0a000017 	beq	4001c678 <CyU3PSetEpConfig+0x570>
4001c618:	e2860010 	add	r0, r6, #16
4001c61c:	e3a01001 	mov	r1, #1
4001c620:	e1a00011 	lsl	r0, r1, r0
4001c624:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c6ec <CyU3PSetEpConfig+0x5e4>
4001c628:	e5911000 	ldr	r1, [r1]
4001c62c:	e1100001 	tst	r0, r1
4001c630:	0a000010 	beq	4001c678 <CyU3PSetEpConfig+0x570>
4001c634:	e59f009c 	ldr	r0, [pc, #156]	; 4001c6d8 <CyU3PSetEpConfig+0x5d0>
4001c638:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c63c:	e2861010 	add	r1, r6, #16
4001c640:	e3a02001 	mov	r2, #1
4001c644:	e1800112 	orr	r0, r0, r2, lsl r1
4001c648:	e59f1088 	ldr	r1, [pc, #136]	; 4001c6d8 <CyU3PSetEpConfig+0x5d0>
4001c64c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c650:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c654:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c658:	e2861010 	add	r1, r6, #16
4001c65c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c660:	e59f106c 	ldr	r1, [pc, #108]	; 4001c6d4 <CyU3PSetEpConfig+0x5cc>
4001c664:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c668:	e59f0078 	ldr	r0, [pc, #120]	; 4001c6e8 <CyU3PSetEpConfig+0x5e0>
4001c66c:	e5901000 	ldr	r1, [r0]
4001c670:	e1a00004 	mov	r0, r4
4001c674:	eb00014f 	bl	4001cbb8 <CyU3PUsbEnableEpInterrupts>
4001c678:	e59f0038 	ldr	r0, [pc, #56]	; 4001c6b8 <CyU3PSetEpConfig+0x5b0>
4001c67c:	e5d00008 	ldrb	r0, [r0, #8]
4001c680:	e3500005 	cmp	r0, #5
4001c684:	ba000007 	blt	4001c6a8 <CyU3PSetEpConfig+0x5a0>
4001c688:	e1a00004 	mov	r0, r4
4001c68c:	eb00040e 	bl	4001d6cc <CyU3PUsbResetEp>
4001c690:	e1a00004 	mov	r0, r4
4001c694:	eb0001a4 	bl	4001cd2c <CyU3PUsbFlushEp>
4001c698:	e3a02001 	mov	r2, #1
4001c69c:	e3a01000 	mov	r1, #0
4001c6a0:	e1a00004 	mov	r0, r4
4001c6a4:	eb00066c 	bl	4001e05c <CyU3PUsbStall>
4001c6a8:	e59f0014 	ldr	r0, [pc, #20]	; 4001c6c4 <CyU3PSetEpConfig+0x5bc>
4001c6ac:	ebffb74b 	bl	4000a3e0 <_txe_mutex_put>
4001c6b0:	e3a00000 	mov	r0, #0
4001c6b4:	eafffea0 	b	4001c13c <CyU3PSetEpConfig+0x34>
4001c6b8:	40031d60 	.word	0x40031d60
4001c6bc:	400121c4 	.word	0x400121c4
4001c6c0:	000003ff 	.word	0x000003ff
4001c6c4:	40031f00 	.word	0x40031f00
4001c6c8:	00004040 	.word	0x00004040
4001c6cc:	e0031418 	.word	0xe0031418
4001c6d0:	e0033500 	.word	0xe0033500
4001c6d4:	e0033000 	.word	0xe0033000
4001c6d8:	e0031000 	.word	0xe0031000
4001c6dc:	40031bdc 	.word	0x40031bdc
4001c6e0:	e0031c40 	.word	0xe0031c40
4001c6e4:	00400028 	.word	0x00400028
4001c6e8:	40030d9c 	.word	0x40030d9c
4001c6ec:	40030da0 	.word	0x40030da0
4001c6f0:	e0031498 	.word	0xe0031498
4001c6f4:	e0033600 	.word	0xe0033600
4001c6f8:	40031c9c 	.word	0x40031c9c
4001c6fc:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c700 <CyU3PSetUsbCoreClock>:
4001c700:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c704:	e1a04000 	mov	r4, r0
4001c708:	e1a05001 	mov	r5, r1
4001c70c:	eb0016d5 	bl	40022268 <CyU3PVicDisableAllInterrupts>
4001c710:	e1a06000 	mov	r6, r0
4001c714:	e59f0064 	ldr	r0, [pc, #100]	; 4001c780 <CyU3PSetUsbCoreClock+0x80>
4001c718:	e5900008 	ldr	r0, [r0, #8]
4001c71c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c720:	e59f1058 	ldr	r1, [pc, #88]	; 4001c780 <CyU3PSetUsbCoreClock+0x80>
4001c724:	e5810008 	str	r0, [r1, #8]
4001c728:	e3a07014 	mov	r7, #20
4001c72c:	ea000001 	b	4001c738 <CyU3PSetUsbCoreClock+0x38>
4001c730:	e1a00000 	nop			; (mov r0, r0)
4001c734:	e2477001 	sub	r7, r7, #1
4001c738:	e3570000 	cmp	r7, #0
4001c73c:	1afffffb 	bne	4001c730 <CyU3PSetUsbCoreClock+0x30>
4001c740:	e1850104 	orr	r0, r5, r4, lsl #2
4001c744:	e59f1034 	ldr	r1, [pc, #52]	; 4001c780 <CyU3PSetUsbCoreClock+0x80>
4001c748:	e5810008 	str	r0, [r1, #8]
4001c74c:	e1a00001 	mov	r0, r1
4001c750:	e5900008 	ldr	r0, [r0, #8]
4001c754:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c758:	e5810008 	str	r0, [r1, #8]
4001c75c:	e3a07050 	mov	r7, #80	; 0x50
4001c760:	ea000001 	b	4001c76c <CyU3PSetUsbCoreClock+0x6c>
4001c764:	e1a00000 	nop			; (mov r0, r0)
4001c768:	e2477001 	sub	r7, r7, #1
4001c76c:	e3570000 	cmp	r7, #0
4001c770:	1afffffb 	bne	4001c764 <CyU3PSetUsbCoreClock+0x64>
4001c774:	e1a00006 	mov	r0, r6
4001c778:	eb0016c8 	bl	400222a0 <CyU3PVicEnableInterrupts>
4001c77c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c780:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c784 <CyU3PUibInit>:
4001c784:	e92d4010 	push	{r4, lr}
4001c788:	e3a04000 	mov	r4, #0
4001c78c:	e3a00000 	mov	r0, #0
4001c790:	e59f117c 	ldr	r1, [pc, #380]	; 4001c914 <CyU3PUibInit+0x190>
4001c794:	e5810004 	str	r0, [r1, #4]
4001c798:	e5810008 	str	r0, [r1, #8]
4001c79c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c7a0:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c7a4:	e581001c 	str	r0, [r1, #28]
4001c7a8:	e3e00000 	mvn	r0, #0
4001c7ac:	e581000c 	str	r0, [r1, #12]
4001c7b0:	e5810004 	str	r0, [r1, #4]
4001c7b4:	e59f015c 	ldr	r0, [pc, #348]	; 4001c918 <CyU3PUibInit+0x194>
4001c7b8:	e5810008 	str	r0, [r1, #8]
4001c7bc:	e3a00000 	mov	r0, #0
4001c7c0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c7c4:	e3e00000 	mvn	r0, #0
4001c7c8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c7cc:	e59f0148 	ldr	r0, [pc, #328]	; 4001c91c <CyU3PUibInit+0x198>
4001c7d0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c7d4:	eb0016c5 	bl	400222f0 <CyFx3Usb2PhySetup>
4001c7d8:	e3e00000 	mvn	r0, #0
4001c7dc:	e59f113c 	ldr	r1, [pc, #316]	; 4001c920 <CyU3PUibInit+0x19c>
4001c7e0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c7e4:	e59f0138 	ldr	r0, [pc, #312]	; 4001c924 <CyU3PUibInit+0x1a0>
4001c7e8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c7ec:	e3e00000 	mvn	r0, #0
4001c7f0:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c7f4:	e3a00000 	mov	r0, #0
4001c7f8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c7fc:	e3a00001 	mov	r0, #1
4001c800:	e1811680 	orr	r1, r1, r0, lsl #13
4001c804:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c808:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c80c:	e3a00043 	mov	r0, #67	; 0x43
4001c810:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c814:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c818:	e59f0108 	ldr	r0, [pc, #264]	; 4001c928 <CyU3PUibInit+0x1a4>
4001c81c:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c820:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c824:	e3a00040 	mov	r0, #64	; 0x40
4001c828:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c82c:	e1800400 	orr	r0, r0, r0, lsl #8
4001c830:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c834:	e3a00040 	mov	r0, #64	; 0x40
4001c838:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c83c:	e3a04001 	mov	r4, #1
4001c840:	ea000015 	b	4001c89c <CyU3PUibInit+0x118>
4001c844:	e1a00004 	mov	r0, r4
4001c848:	eb000137 	bl	4001cd2c <CyU3PUsbFlushEp>
4001c84c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c92c <CyU3PUibInit+0x1a8>
4001c850:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c854:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c858:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c92c <CyU3PUibInit+0x1a8>
4001c85c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c860:	e3a00000 	mov	r0, #0
4001c864:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c930 <CyU3PUibInit+0x1ac>
4001c868:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c86c:	e3840080 	orr	r0, r4, #128	; 0x80
4001c870:	eb00012d 	bl	4001cd2c <CyU3PUsbFlushEp>
4001c874:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c934 <CyU3PUibInit+0x1b0>
4001c878:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c87c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c880:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c934 <CyU3PUibInit+0x1b0>
4001c884:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c888:	e3a00000 	mov	r0, #0
4001c88c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c938 <CyU3PUibInit+0x1b4>
4001c890:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c894:	e2840001 	add	r0, r4, #1
4001c898:	e20040ff 	and	r4, r0, #255	; 0xff
4001c89c:	e3540010 	cmp	r4, #16
4001c8a0:	baffffe7 	blt	4001c844 <CyU3PUibInit+0xc0>
4001c8a4:	e59f0090 	ldr	r0, [pc, #144]	; 4001c93c <CyU3PUibInit+0x1b8>
4001c8a8:	e5900004 	ldr	r0, [r0, #4]
4001c8ac:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c8b0:	e59f1084 	ldr	r1, [pc, #132]	; 4001c93c <CyU3PUibInit+0x1b8>
4001c8b4:	e5810004 	str	r0, [r1, #4]
4001c8b8:	e3e00000 	mvn	r0, #0
4001c8bc:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c8c0:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c8c4:	e3a00b01 	mov	r0, #1024	; 0x400
4001c8c8:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c8cc:	e59f106c 	ldr	r1, [pc, #108]	; 4001c940 <CyU3PUibInit+0x1bc>
4001c8d0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c8d4:	e3a00015 	mov	r0, #21
4001c8d8:	eb00166b 	bl	4002228c <CyU3PVicEnableInt>
4001c8dc:	e59f0060 	ldr	r0, [pc, #96]	; 4001c944 <CyU3PUibInit+0x1c0>
4001c8e0:	e5900000 	ldr	r0, [r0]
4001c8e4:	e3500000 	cmp	r0, #0
4001c8e8:	0a000008 	beq	4001c910 <CyU3PUibInit+0x18c>
4001c8ec:	e59f0054 	ldr	r0, [pc, #84]	; 4001c948 <CyU3PUibInit+0x1c4>
4001c8f0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c8f4:	e3100b01 	tst	r0, #1024	; 0x400
4001c8f8:	0a000004 	beq	4001c910 <CyU3PUibInit+0x18c>
4001c8fc:	e3a01000 	mov	r1, #0
4001c900:	e3a0000b 	mov	r0, #11
4001c904:	e59f2038 	ldr	r2, [pc, #56]	; 4001c944 <CyU3PUibInit+0x1c0>
4001c908:	e5922000 	ldr	r2, [r2]
4001c90c:	e12fff32 	blx	r2
4001c910:	e8bd8010 	pop	{r4, pc}
4001c914:	e0050000 	.word	0xe0050000
4001c918:	00038081 	.word	0x00038081
4001c91c:	00004a3d 	.word	0x00004a3d
4001c920:	e0031000 	.word	0xe0031000
4001c924:	0000095c 	.word	0x0000095c
4001c928:	00004040 	.word	0x00004040
4001c92c:	e0031498 	.word	0xe0031498
4001c930:	e0033600 	.word	0xe0033600
4001c934:	e0031418 	.word	0xe0031418
4001c938:	e0033500 	.word	0xe0033500
4001c93c:	e0030000 	.word	0xe0030000
4001c940:	40031d60 	.word	0x40031d60
4001c944:	40030dbc 	.word	0x40030dbc
4001c948:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c94c <CyU3PUsbAckSetup>:
4001c94c:	e92d4010 	push	{r4, lr}
4001c950:	e3e01000 	mvn	r1, #0
4001c954:	e59f00fc 	ldr	r0, [pc, #252]	; 4001ca58 <CyU3PUsbAckSetup+0x10c>
4001c958:	ebffb66b 	bl	4000a30c <_txe_mutex_get>
4001c95c:	eb000780 	bl	4001e764 <GetUsbLinkActive>
4001c960:	eb00019e 	bl	4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c964:	e3500000 	cmp	r0, #0
4001c968:	0a000002 	beq	4001c978 <CyU3PUsbAckSetup+0x2c>
4001c96c:	e59f00e4 	ldr	r0, [pc, #228]	; 4001ca58 <CyU3PUsbAckSetup+0x10c>
4001c970:	ebffb69a 	bl	4000a3e0 <_txe_mutex_put>
4001c974:	e8bd8010 	pop	{r4, pc}
4001c978:	e3a00000 	mov	r0, #0
4001c97c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ca5c <CyU3PUsbAckSetup+0x110>
4001c980:	e5810014 	str	r0, [r1, #20]
4001c984:	e2810000 	add	r0, r1, #0
4001c988:	e5d00009 	ldrb	r0, [r0, #9]
4001c98c:	e3500003 	cmp	r0, #3
4001c990:	1a000026 	bne	4001ca30 <CyU3PUsbAckSetup+0xe4>
4001c994:	e59f00c4 	ldr	r0, [pc, #196]	; 4001ca60 <CyU3PUsbAckSetup+0x114>
4001c998:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c99c:	e3c00004 	bic	r0, r0, #4
4001c9a0:	e59f10b8 	ldr	r1, [pc, #184]	; 4001ca60 <CyU3PUsbAckSetup+0x114>
4001c9a4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c9a8:	e1a00001 	mov	r0, r1
4001c9ac:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c9b0:	e3c00004 	bic	r0, r0, #4
4001c9b4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c9b8:	eb00162a 	bl	40022268 <CyU3PVicDisableAllInterrupts>
4001c9bc:	e1a04000 	mov	r4, r0
4001c9c0:	e3a00001 	mov	r0, #1
4001c9c4:	ebffdbad 	bl	40013880 <CyU3PBusyWait>
4001c9c8:	e59f0090 	ldr	r0, [pc, #144]	; 4001ca60 <CyU3PUsbAckSetup+0x114>
4001c9cc:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c9d0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c9d4:	e59f1084 	ldr	r1, [pc, #132]	; 4001ca60 <CyU3PUsbAckSetup+0x114>
4001c9d8:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c9dc:	e1a00004 	mov	r0, r4
4001c9e0:	eb00162e 	bl	400222a0 <CyU3PVicEnableInterrupts>
4001c9e4:	e3a00c02 	mov	r0, #512	; 0x200
4001c9e8:	e59f1074 	ldr	r1, [pc, #116]	; 4001ca64 <CyU3PUsbAckSetup+0x118>
4001c9ec:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c9f0:	e3a00016 	mov	r0, #22
4001c9f4:	eb000ced 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
4001c9f8:	e59f005c 	ldr	r0, [pc, #92]	; 4001ca5c <CyU3PUsbAckSetup+0x110>
4001c9fc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001ca00:	e3500000 	cmp	r0, #0
4001ca04:	1a000010 	bne	4001ca4c <CyU3PUsbAckSetup+0x100>
4001ca08:	e3a00001 	mov	r0, #1
4001ca0c:	e59f1054 	ldr	r1, [pc, #84]	; 4001ca68 <CyU3PUsbAckSetup+0x11c>
4001ca10:	e5810000 	str	r0, [r1]
4001ca14:	e3a02000 	mov	r2, #0
4001ca18:	e3a01064 	mov	r1, #100	; 0x64
4001ca1c:	e59f0048 	ldr	r0, [pc, #72]	; 4001ca6c <CyU3PUsbAckSetup+0x120>
4001ca20:	ebffb887 	bl	4000ac44 <_txe_timer_change>
4001ca24:	e59f0040 	ldr	r0, [pc, #64]	; 4001ca6c <CyU3PUsbAckSetup+0x120>
4001ca28:	ebffb875 	bl	4000ac04 <_txe_timer_activate>
4001ca2c:	ea000006 	b	4001ca4c <CyU3PUsbAckSetup+0x100>
4001ca30:	e59f002c 	ldr	r0, [pc, #44]	; 4001ca64 <CyU3PUsbAckSetup+0x118>
4001ca34:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ca38:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001ca3c:	e59f1020 	ldr	r1, [pc, #32]	; 4001ca64 <CyU3PUsbAckSetup+0x118>
4001ca40:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ca44:	e3a00040 	mov	r0, #64	; 0x40
4001ca48:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001ca4c:	e59f0004 	ldr	r0, [pc, #4]	; 4001ca58 <CyU3PUsbAckSetup+0x10c>
4001ca50:	ebffb662 	bl	4000a3e0 <_txe_mutex_put>
4001ca54:	eaffffc6 	b	4001c974 <CyU3PUsbAckSetup+0x28>
4001ca58:	40031f00 	.word	0x40031f00
4001ca5c:	40031d60 	.word	0x40031d60
4001ca60:	e0033000 	.word	0xe0033000
4001ca64:	e0031000 	.word	0xe0031000
4001ca68:	40030dd0 	.word	0x40030dd0
4001ca6c:	400326c0 	.word	0x400326c0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001ca70 <CyU3PUsbCreateDmaChannels>:
4001ca70:	e92d4010 	push	{r4, lr}
4001ca74:	e24dd020 	sub	sp, sp, #32
4001ca78:	e3a00c02 	mov	r0, #512	; 0x200
4001ca7c:	e1cd00b4 	strh	r0, [sp, #4]
4001ca80:	e3a00001 	mov	r0, #1
4001ca84:	e1cd00b6 	strh	r0, [sp, #6]
4001ca88:	e3a00000 	mov	r0, #0
4001ca8c:	e1cd00bc 	strh	r0, [sp, #12]
4001ca90:	e3a00c03 	mov	r0, #768	; 0x300
4001ca94:	e1cd00ba 	strh	r0, [sp, #10]
4001ca98:	e3a00000 	mov	r0, #0
4001ca9c:	e5cd0014 	strb	r0, [sp, #20]
4001caa0:	e1cd00be 	strh	r0, [sp, #14]
4001caa4:	e1cd01b0 	strh	r0, [sp, #16]
4001caa8:	e1cd01b2 	strh	r0, [sp, #18]
4001caac:	e58d0018 	str	r0, [sp, #24]
4001cab0:	e58d001c 	str	r0, [sp, #28]
4001cab4:	e59f00ec 	ldr	r0, [pc, #236]	; 4001cba8 <CyU3PUsbCreateDmaChannels+0x138>
4001cab8:	e1cd00b8 	strh	r0, [sp, #8]
4001cabc:	e28d2004 	add	r2, sp, #4
4001cac0:	e3a01004 	mov	r1, #4
4001cac4:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cbac <CyU3PUsbCreateDmaChannels+0x13c>
4001cac8:	ebffe411 	bl	40015b14 <CyU3PDmaChannelCreate>
4001cacc:	e1a04000 	mov	r4, r0
4001cad0:	e3540000 	cmp	r4, #0
4001cad4:	0a000002 	beq	4001cae4 <CyU3PUsbCreateDmaChannels+0x74>
4001cad8:	e3a0004e 	mov	r0, #78	; 0x4e
4001cadc:	e28dd020 	add	sp, sp, #32
4001cae0:	e8bd8010 	pop	{r4, pc}
4001cae4:	e59f00c4 	ldr	r0, [pc, #196]	; 4001cbb0 <CyU3PUsbCreateDmaChannels+0x140>
4001cae8:	e5900000 	ldr	r0, [r0]
4001caec:	e3500000 	cmp	r0, #0
4001caf0:	0a000009 	beq	4001cb1c <CyU3PUsbCreateDmaChannels+0xac>
4001caf4:	e3a01001 	mov	r1, #1
4001caf8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cbac <CyU3PUsbCreateDmaChannels+0x13c>
4001cafc:	ebffe274 	bl	400154d4 <CyU3PDmaChannelCacheControl>
4001cb00:	e1a04000 	mov	r4, r0
4001cb04:	e3540000 	cmp	r4, #0
4001cb08:	0a000003 	beq	4001cb1c <CyU3PUsbCreateDmaChannels+0xac>
4001cb0c:	e59f0098 	ldr	r0, [pc, #152]	; 4001cbac <CyU3PUsbCreateDmaChannels+0x13c>
4001cb10:	ebffe4f9 	bl	40015efc <CyU3PDmaChannelDestroy>
4001cb14:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb18:	eaffffef 	b	4001cadc <CyU3PUsbCreateDmaChannels+0x6c>
4001cb1c:	e3a00b01 	mov	r0, #1024	; 0x400
4001cb20:	e1cd00b8 	strh	r0, [sp, #8]
4001cb24:	e3a00000 	mov	r0, #0
4001cb28:	e58d001c 	str	r0, [sp, #28]
4001cb2c:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001cb30:	e1cd00ba 	strh	r0, [sp, #10]
4001cb34:	e28d2004 	add	r2, sp, #4
4001cb38:	e3a01003 	mov	r1, #3
4001cb3c:	e59f0070 	ldr	r0, [pc, #112]	; 4001cbb4 <CyU3PUsbCreateDmaChannels+0x144>
4001cb40:	ebffe3f3 	bl	40015b14 <CyU3PDmaChannelCreate>
4001cb44:	e1a04000 	mov	r4, r0
4001cb48:	e3540000 	cmp	r4, #0
4001cb4c:	0a000003 	beq	4001cb60 <CyU3PUsbCreateDmaChannels+0xf0>
4001cb50:	e59f0054 	ldr	r0, [pc, #84]	; 4001cbac <CyU3PUsbCreateDmaChannels+0x13c>
4001cb54:	ebffe4e8 	bl	40015efc <CyU3PDmaChannelDestroy>
4001cb58:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb5c:	eaffffde 	b	4001cadc <CyU3PUsbCreateDmaChannels+0x6c>
4001cb60:	e59f0048 	ldr	r0, [pc, #72]	; 4001cbb0 <CyU3PUsbCreateDmaChannels+0x140>
4001cb64:	e5900000 	ldr	r0, [r0]
4001cb68:	e3500000 	cmp	r0, #0
4001cb6c:	0a00000b 	beq	4001cba0 <CyU3PUsbCreateDmaChannels+0x130>
4001cb70:	e3a01001 	mov	r1, #1
4001cb74:	e59f0038 	ldr	r0, [pc, #56]	; 4001cbb4 <CyU3PUsbCreateDmaChannels+0x144>
4001cb78:	ebffe255 	bl	400154d4 <CyU3PDmaChannelCacheControl>
4001cb7c:	e1a04000 	mov	r4, r0
4001cb80:	e3540000 	cmp	r4, #0
4001cb84:	0a000005 	beq	4001cba0 <CyU3PUsbCreateDmaChannels+0x130>
4001cb88:	e59f001c 	ldr	r0, [pc, #28]	; 4001cbac <CyU3PUsbCreateDmaChannels+0x13c>
4001cb8c:	ebffe4da 	bl	40015efc <CyU3PDmaChannelDestroy>
4001cb90:	e59f001c 	ldr	r0, [pc, #28]	; 4001cbb4 <CyU3PUsbCreateDmaChannels+0x144>
4001cb94:	ebffe4d8 	bl	40015efc <CyU3PDmaChannelDestroy>
4001cb98:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb9c:	eaffffce 	b	4001cadc <CyU3PUsbCreateDmaChannels+0x6c>
4001cba0:	e1a00004 	mov	r0, r4
4001cba4:	eaffffcc 	b	4001cadc <CyU3PUsbCreateDmaChannels+0x6c>
4001cba8:	00003f01 	.word	0x00003f01
4001cbac:	40031a9c 	.word	0x40031a9c
4001cbb0:	40030c80 	.word	0x40030c80
4001cbb4:	40031b3c 	.word	0x40031b3c

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001cbb8 <CyU3PUsbEnableEpInterrupts>:
4001cbb8:	e200300f 	and	r3, r0, #15
4001cbbc:	e3100080 	tst	r0, #128	; 0x80
4001cbc0:	0a00002a 	beq	4001cc70 <CyU3PUsbEnableEpInterrupts+0xb8>
4001cbc4:	e59fc150 	ldr	ip, [pc, #336]	; 4001cd1c <CyU3PUsbEnableEpInterrupts+0x164>
4001cbc8:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cbcc:	e3120901 	tst	r2, #16384	; 0x4000
4001cbd0:	0a00000d 	beq	4001cc0c <CyU3PUsbEnableEpInterrupts+0x54>
4001cbd4:	e3110001 	tst	r1, #1
4001cbd8:	0a000000 	beq	4001cbe0 <CyU3PUsbEnableEpInterrupts+0x28>
4001cbdc:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cbe0:	e3110002 	tst	r1, #2
4001cbe4:	0a000000 	beq	4001cbec <CyU3PUsbEnableEpInterrupts+0x34>
4001cbe8:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cbec:	e3110004 	tst	r1, #4
4001cbf0:	0a000000 	beq	4001cbf8 <CyU3PUsbEnableEpInterrupts+0x40>
4001cbf4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cbf8:	e3110008 	tst	r1, #8
4001cbfc:	0a000000 	beq	4001cc04 <CyU3PUsbEnableEpInterrupts+0x4c>
4001cc00:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001cc04:	e59fc110 	ldr	ip, [pc, #272]	; 4001cd1c <CyU3PUsbEnableEpInterrupts+0x164>
4001cc08:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cc0c:	e59fc10c 	ldr	ip, [pc, #268]	; 4001cd20 <CyU3PUsbEnableEpInterrupts+0x168>
4001cc10:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cc14:	e3120001 	tst	r2, #1
4001cc18:	0a00003e 	beq	4001cd18 <CyU3PUsbEnableEpInterrupts+0x160>
4001cc1c:	e3110001 	tst	r1, #1
4001cc20:	0a000000 	beq	4001cc28 <CyU3PUsbEnableEpInterrupts+0x70>
4001cc24:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cc28:	e3110002 	tst	r1, #2
4001cc2c:	0a000000 	beq	4001cc34 <CyU3PUsbEnableEpInterrupts+0x7c>
4001cc30:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cc34:	e3110004 	tst	r1, #4
4001cc38:	0a000000 	beq	4001cc40 <CyU3PUsbEnableEpInterrupts+0x88>
4001cc3c:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cc40:	e3110010 	tst	r1, #16
4001cc44:	0a000000 	beq	4001cc4c <CyU3PUsbEnableEpInterrupts+0x94>
4001cc48:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cc4c:	e3110020 	tst	r1, #32
4001cc50:	0a000000 	beq	4001cc58 <CyU3PUsbEnableEpInterrupts+0xa0>
4001cc54:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cc58:	e3110040 	tst	r1, #64	; 0x40
4001cc5c:	0a000000 	beq	4001cc64 <CyU3PUsbEnableEpInterrupts+0xac>
4001cc60:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cc64:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001cd20 <CyU3PUsbEnableEpInterrupts+0x168>
4001cc68:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cc6c:	ea000029 	b	4001cd18 <CyU3PUsbEnableEpInterrupts+0x160>
4001cc70:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001cd24 <CyU3PUsbEnableEpInterrupts+0x16c>
4001cc74:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cc78:	e3120901 	tst	r2, #16384	; 0x4000
4001cc7c:	0a00000d 	beq	4001ccb8 <CyU3PUsbEnableEpInterrupts+0x100>
4001cc80:	e3110001 	tst	r1, #1
4001cc84:	0a000000 	beq	4001cc8c <CyU3PUsbEnableEpInterrupts+0xd4>
4001cc88:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cc8c:	e3110002 	tst	r1, #2
4001cc90:	0a000000 	beq	4001cc98 <CyU3PUsbEnableEpInterrupts+0xe0>
4001cc94:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cc98:	e3110004 	tst	r1, #4
4001cc9c:	0a000000 	beq	4001cca4 <CyU3PUsbEnableEpInterrupts+0xec>
4001cca0:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cca4:	e3110008 	tst	r1, #8
4001cca8:	0a000000 	beq	4001ccb0 <CyU3PUsbEnableEpInterrupts+0xf8>
4001ccac:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001ccb0:	e59fc06c 	ldr	ip, [pc, #108]	; 4001cd24 <CyU3PUsbEnableEpInterrupts+0x16c>
4001ccb4:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ccb8:	e59fc068 	ldr	ip, [pc, #104]	; 4001cd28 <CyU3PUsbEnableEpInterrupts+0x170>
4001ccbc:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ccc0:	e3120001 	tst	r2, #1
4001ccc4:	0a000013 	beq	4001cd18 <CyU3PUsbEnableEpInterrupts+0x160>
4001ccc8:	e3110001 	tst	r1, #1
4001cccc:	0a000000 	beq	4001ccd4 <CyU3PUsbEnableEpInterrupts+0x11c>
4001ccd0:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001ccd4:	e3110002 	tst	r1, #2
4001ccd8:	0a000000 	beq	4001cce0 <CyU3PUsbEnableEpInterrupts+0x128>
4001ccdc:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cce0:	e3110004 	tst	r1, #4
4001cce4:	0a000000 	beq	4001ccec <CyU3PUsbEnableEpInterrupts+0x134>
4001cce8:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001ccec:	e3110010 	tst	r1, #16
4001ccf0:	0a000000 	beq	4001ccf8 <CyU3PUsbEnableEpInterrupts+0x140>
4001ccf4:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001ccf8:	e3110020 	tst	r1, #32
4001ccfc:	0a000000 	beq	4001cd04 <CyU3PUsbEnableEpInterrupts+0x14c>
4001cd00:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cd04:	e3110040 	tst	r1, #64	; 0x40
4001cd08:	0a000000 	beq	4001cd10 <CyU3PUsbEnableEpInterrupts+0x158>
4001cd0c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cd10:	e59fc010 	ldr	ip, [pc, #16]	; 4001cd28 <CyU3PUsbEnableEpInterrupts+0x170>
4001cd14:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cd18:	e12fff1e 	bx	lr
4001cd1c:	e0031418 	.word	0xe0031418
4001cd20:	e0033500 	.word	0xe0033500
4001cd24:	e0031498 	.word	0xe0031498
4001cd28:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001cd2c <CyU3PUsbFlushEp>:
4001cd2c:	e92d4070 	push	{r4, r5, r6, lr}
4001cd30:	e1a04000 	mov	r4, r0
4001cd34:	e204507f 	and	r5, r4, #127	; 0x7f
4001cd38:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cde8 <CyU3PUsbFlushEp+0xbc>
4001cd3c:	e5d00008 	ldrb	r0, [r0, #8]
4001cd40:	e3500000 	cmp	r0, #0
4001cd44:	1a000001 	bne	4001cd50 <CyU3PUsbFlushEp+0x24>
4001cd48:	e3a00042 	mov	r0, #66	; 0x42
4001cd4c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cd50:	e355000f 	cmp	r5, #15
4001cd54:	da000001 	ble	4001cd60 <CyU3PUsbFlushEp+0x34>
4001cd58:	e3a00040 	mov	r0, #64	; 0x40
4001cd5c:	eafffffa 	b	4001cd4c <CyU3PUsbFlushEp+0x20>
4001cd60:	e3e01000 	mvn	r1, #0
4001cd64:	e59f0080 	ldr	r0, [pc, #128]	; 4001cdec <CyU3PUsbFlushEp+0xc0>
4001cd68:	ebffb567 	bl	4000a30c <_txe_mutex_get>
4001cd6c:	e3140080 	tst	r4, #128	; 0x80
4001cd70:	0a00000c 	beq	4001cda8 <CyU3PUsbFlushEp+0x7c>
4001cd74:	e59f0074 	ldr	r0, [pc, #116]	; 4001cdf0 <CyU3PUsbFlushEp+0xc4>
4001cd78:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cd7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cd80:	e59f1068 	ldr	r1, [pc, #104]	; 4001cdf0 <CyU3PUsbFlushEp+0xc4>
4001cd84:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cd88:	e3a0000a 	mov	r0, #10
4001cd8c:	ebffdabb 	bl	40013880 <CyU3PBusyWait>
4001cd90:	e59f0058 	ldr	r0, [pc, #88]	; 4001cdf0 <CyU3PUsbFlushEp+0xc4>
4001cd94:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cd98:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cd9c:	e59f104c 	ldr	r1, [pc, #76]	; 4001cdf0 <CyU3PUsbFlushEp+0xc4>
4001cda0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cda4:	ea00000b 	b	4001cdd8 <CyU3PUsbFlushEp+0xac>
4001cda8:	e59f0044 	ldr	r0, [pc, #68]	; 4001cdf4 <CyU3PUsbFlushEp+0xc8>
4001cdac:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdb0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cdb4:	e59f1038 	ldr	r1, [pc, #56]	; 4001cdf4 <CyU3PUsbFlushEp+0xc8>
4001cdb8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdbc:	e3a0000a 	mov	r0, #10
4001cdc0:	ebffdaae 	bl	40013880 <CyU3PBusyWait>
4001cdc4:	e59f0028 	ldr	r0, [pc, #40]	; 4001cdf4 <CyU3PUsbFlushEp+0xc8>
4001cdc8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdcc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cdd0:	e59f101c 	ldr	r1, [pc, #28]	; 4001cdf4 <CyU3PUsbFlushEp+0xc8>
4001cdd4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdd8:	e59f000c 	ldr	r0, [pc, #12]	; 4001cdec <CyU3PUsbFlushEp+0xc0>
4001cddc:	ebffb57f 	bl	4000a3e0 <_txe_mutex_put>
4001cde0:	e3a00000 	mov	r0, #0
4001cde4:	eaffffd8 	b	4001cd4c <CyU3PUsbFlushEp+0x20>
4001cde8:	40031d60 	.word	0x40031d60
4001cdec:	40031f00 	.word	0x40031f00
4001cdf0:	e0031c40 	.word	0xe0031c40
4001cdf4:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001cdf8 <CyU3PUsbGetEP0Data>:
4001cdf8:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001cdfc:	e1a04000 	mov	r4, r0
4001ce00:	e1a05001 	mov	r5, r1
4001ce04:	e1a06002 	mov	r6, r2
4001ce08:	e59f8198 	ldr	r8, [pc, #408]	; 4001cfa8 <CyU3PUsbGetEP0Data+0x1b0>
4001ce0c:	e59f0198 	ldr	r0, [pc, #408]	; 4001cfac <CyU3PUsbGetEP0Data+0x1b4>
4001ce10:	e5d00008 	ldrb	r0, [r0, #8]
4001ce14:	e3500000 	cmp	r0, #0
4001ce18:	1a000001 	bne	4001ce24 <CyU3PUsbGetEP0Data+0x2c>
4001ce1c:	e3a00042 	mov	r0, #66	; 0x42
4001ce20:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001ce24:	e3550000 	cmp	r5, #0
4001ce28:	1a000001 	bne	4001ce34 <CyU3PUsbGetEP0Data+0x3c>
4001ce2c:	e3a00040 	mov	r0, #64	; 0x40
4001ce30:	eafffffa 	b	4001ce20 <CyU3PUsbGetEP0Data+0x28>
4001ce34:	e3e01000 	mvn	r1, #0
4001ce38:	e59f0170 	ldr	r0, [pc, #368]	; 4001cfb0 <CyU3PUsbGetEP0Data+0x1b8>
4001ce3c:	ebffb532 	bl	4000a30c <_txe_mutex_get>
4001ce40:	e284000f 	add	r0, r4, #15
4001ce44:	e59f1168 	ldr	r1, [pc, #360]	; 4001cfb4 <CyU3PUsbGetEP0Data+0x1bc>
4001ce48:	e0004001 	and	r4, r0, r1
4001ce4c:	e59f0164 	ldr	r0, [pc, #356]	; 4001cfb8 <CyU3PUsbGetEP0Data+0x1c0>
4001ce50:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ce54:	e3c00008 	bic	r0, r0, #8
4001ce58:	e59f1158 	ldr	r1, [pc, #344]	; 4001cfb8 <CyU3PUsbGetEP0Data+0x1c0>
4001ce5c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ce60:	e59f0144 	ldr	r0, [pc, #324]	; 4001cfac <CyU3PUsbGetEP0Data+0x1b4>
4001ce64:	e5900018 	ldr	r0, [r0, #24]
4001ce68:	e3500000 	cmp	r0, #0
4001ce6c:	1a000002 	bne	4001ce7c <CyU3PUsbGetEP0Data+0x84>
4001ce70:	eb00005a 	bl	4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ce74:	e3500000 	cmp	r0, #0
4001ce78:	0a000008 	beq	4001cea0 <CyU3PUsbGetEP0Data+0xa8>
4001ce7c:	e59f0134 	ldr	r0, [pc, #308]	; 4001cfb8 <CyU3PUsbGetEP0Data+0x1c0>
4001ce80:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ce84:	e3800008 	orr	r0, r0, #8
4001ce88:	e59f1128 	ldr	r1, [pc, #296]	; 4001cfb8 <CyU3PUsbGetEP0Data+0x1c0>
4001ce8c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ce90:	e59f0118 	ldr	r0, [pc, #280]	; 4001cfb0 <CyU3PUsbGetEP0Data+0x1b8>
4001ce94:	ebffb551 	bl	4000a3e0 <_txe_mutex_put>
4001ce98:	e3a00051 	mov	r0, #81	; 0x51
4001ce9c:	eaffffdf 	b	4001ce20 <CyU3PUsbGetEP0Data+0x28>
4001cea0:	e59f0110 	ldr	r0, [pc, #272]	; 4001cfb8 <CyU3PUsbGetEP0Data+0x1c0>
4001cea4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cea8:	e3800008 	orr	r0, r0, #8
4001ceac:	e59f1104 	ldr	r1, [pc, #260]	; 4001cfb8 <CyU3PUsbGetEP0Data+0x1c0>
4001ceb0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ceb4:	eb00062a 	bl	4001e764 <GetUsbLinkActive>
4001ceb8:	e1cd40b6 	strh	r4, [sp, #6]
4001cebc:	e58d5000 	str	r5, [sp]
4001cec0:	e3a00000 	mov	r0, #0
4001cec4:	e1cd00b8 	strh	r0, [sp, #8]
4001cec8:	e1a0100d 	mov	r1, sp
4001cecc:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cfbc <CyU3PUsbGetEP0Data+0x1c4>
4001ced0:	ebffe75f 	bl	40016c54 <CyU3PDmaChannelSetupRecvBuffer>
4001ced4:	e20070ff 	and	r7, r0, #255	; 0xff
4001ced8:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cfb0 <CyU3PUsbGetEP0Data+0x1b8>
4001cedc:	ebffb53f 	bl	4000a3e0 <_txe_mutex_put>
4001cee0:	e3570000 	cmp	r7, #0
4001cee4:	1a00002d 	bne	4001cfa0 <CyU3PUsbGetEP0Data+0x1a8>
4001cee8:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cfac <CyU3PUsbGetEP0Data+0x1b4>
4001ceec:	e5900014 	ldr	r0, [r0, #20]
4001cef0:	e3500000 	cmp	r0, #0
4001cef4:	0a000000 	beq	4001cefc <CyU3PUsbGetEP0Data+0x104>
4001cef8:	ebfffe93 	bl	4001c94c <CyU3PUsbAckSetup>
4001cefc:	ea00000e 	b	4001cf3c <CyU3PUsbGetEP0Data+0x144>
4001cf00:	e3a02064 	mov	r2, #100	; 0x64
4001cf04:	e1a0100d 	mov	r1, sp
4001cf08:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cfbc <CyU3PUsbGetEP0Data+0x1c4>
4001cf0c:	ebffe8b2 	bl	400171dc <CyU3PDmaChannelWaitForRecvBuffer>
4001cf10:	e20070ff 	and	r7, r0, #255	; 0xff
4001cf14:	e3570045 	cmp	r7, #69	; 0x45
4001cf18:	1a000006 	bne	4001cf38 <CyU3PUsbGetEP0Data+0x140>
4001cf1c:	eb00002f 	bl	4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cf20:	e3500000 	cmp	r0, #0
4001cf24:	0a000001 	beq	4001cf30 <CyU3PUsbGetEP0Data+0x138>
4001cf28:	e3a00051 	mov	r0, #81	; 0x51
4001cf2c:	eaffffbb 	b	4001ce20 <CyU3PUsbGetEP0Data+0x28>
4001cf30:	e2488064 	sub	r8, r8, #100	; 0x64
4001cf34:	ea000000 	b	4001cf3c <CyU3PUsbGetEP0Data+0x144>
4001cf38:	ea000001 	b	4001cf44 <CyU3PUsbGetEP0Data+0x14c>
4001cf3c:	e3580000 	cmp	r8, #0
4001cf40:	1affffee 	bne	4001cf00 <CyU3PUsbGetEP0Data+0x108>
4001cf44:	e1a00000 	nop			; (mov r0, r0)
4001cf48:	e3570000 	cmp	r7, #0
4001cf4c:	0a00000f 	beq	4001cf90 <CyU3PUsbGetEP0Data+0x198>
4001cf50:	e3e01000 	mvn	r1, #0
4001cf54:	e59f0054 	ldr	r0, [pc, #84]	; 4001cfb0 <CyU3PUsbGetEP0Data+0x1b8>
4001cf58:	ebffb4eb 	bl	4000a30c <_txe_mutex_get>
4001cf5c:	e3a01001 	mov	r1, #1
4001cf60:	e3a00000 	mov	r0, #0
4001cf64:	eb000376 	bl	4001dd44 <CyU3PUsbSetEpNak>
4001cf68:	e3a00064 	mov	r0, #100	; 0x64
4001cf6c:	ebffda43 	bl	40013880 <CyU3PBusyWait>
4001cf70:	e59f0044 	ldr	r0, [pc, #68]	; 4001cfbc <CyU3PUsbGetEP0Data+0x1c4>
4001cf74:	ebffe57b 	bl	40016568 <CyU3PDmaChannelReset>
4001cf78:	e3a01000 	mov	r1, #0
4001cf7c:	e1a00001 	mov	r0, r1
4001cf80:	eb00036f 	bl	4001dd44 <CyU3PUsbSetEpNak>
4001cf84:	e59f0024 	ldr	r0, [pc, #36]	; 4001cfb0 <CyU3PUsbGetEP0Data+0x1b8>
4001cf88:	ebffb514 	bl	4000a3e0 <_txe_mutex_put>
4001cf8c:	ea000003 	b	4001cfa0 <CyU3PUsbGetEP0Data+0x1a8>
4001cf90:	e3560000 	cmp	r6, #0
4001cf94:	0a000001 	beq	4001cfa0 <CyU3PUsbGetEP0Data+0x1a8>
4001cf98:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cf9c:	e1c600b0 	strh	r0, [r6]
4001cfa0:	e1a00007 	mov	r0, r7
4001cfa4:	eaffff9d 	b	4001ce20 <CyU3PUsbGetEP0Data+0x28>
4001cfa8:	00001388 	.word	0x00001388
4001cfac:	40031d60 	.word	0x40031d60
4001cfb0:	40031f00 	.word	0x40031f00
4001cfb4:	0000fff0 	.word	0x0000fff0
4001cfb8:	e0031000 	.word	0xe0031000
4001cfbc:	40031b3c 	.word	0x40031b3c

Disassembly of section i.CyU3PUsbGetSpeed:

4001cfc0 <CyU3PUsbGetSpeed>:
4001cfc0:	e59f0004 	ldr	r0, [pc, #4]	; 4001cfcc <CyU3PUsbGetSpeed+0xc>
4001cfc4:	e5d00009 	ldrb	r0, [r0, #9]
4001cfc8:	e12fff1e 	bx	lr
4001cfcc:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbHostIsStarted:

4001cfd0 <CyU3PUsbHostIsStarted>:
4001cfd0:	e59f0004 	ldr	r0, [pc, #4]	; 4001cfdc <CyU3PUsbHostIsStarted+0xc>
4001cfd4:	e5900000 	ldr	r0, [r0]
4001cfd8:	e12fff1e 	bx	lr
4001cfdc:	40030d7c 	.word	0x40030d7c

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001cfe0:	e59f0038 	ldr	r0, [pc, #56]	; 4001d020 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cfe4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cfe8:	e3500000 	cmp	r0, #0
4001cfec:	1a000007 	bne	4001d010 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cff0:	e59f002c 	ldr	r0, [pc, #44]	; 4001d024 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cff4:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cff8:	e3100040 	tst	r0, #64	; 0x40
4001cffc:	1a000003 	bne	4001d010 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d000:	e59f0020 	ldr	r0, [pc, #32]	; 4001d028 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001d004:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001d008:	e3100c02 	tst	r0, #512	; 0x200
4001d00c:	0a000001 	beq	4001d018 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001d010:	e3a00001 	mov	r0, #1
4001d014:	e12fff1e 	bx	lr
4001d018:	e3a00000 	mov	r0, #0
4001d01c:	eafffffc 	b	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001d020:	40031d60 	.word	0x40031d60
4001d024:	e0031000 	.word	0xe0031000
4001d028:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001d02c <CyU3PUsbLoadBootloaderDescs>:
4001d02c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001d030:	e1a04000 	mov	r4, r0
4001d034:	e3a06000 	mov	r6, #0
4001d038:	e5940008 	ldr	r0, [r4, #8]
4001d03c:	e20070ff 	and	r7, r0, #255	; 0xff
4001d040:	e1a00000 	nop			; (mov r0, r0)
4001d044:	ea00000f 	b	4001d088 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001d048:	e2843010 	add	r3, r4, #16
4001d04c:	e0833186 	add	r3, r3, r6, lsl #3
4001d050:	e5932004 	ldr	r2, [r3, #4]
4001d054:	e2843010 	add	r3, r4, #16
4001d058:	e0833186 	add	r3, r3, r6, lsl #3
4001d05c:	e5d31001 	ldrb	r1, [r3, #1]
4001d060:	e2843010 	add	r3, r4, #16
4001d064:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001d068:	eb0002bf 	bl	4001db6c <CyU3PUsbSetDesc>
4001d06c:	e1a05000 	mov	r5, r0
4001d070:	e3550000 	cmp	r5, #0
4001d074:	0a000001 	beq	4001d080 <CyU3PUsbLoadBootloaderDescs+0x54>
4001d078:	e1a00005 	mov	r0, r5
4001d07c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001d080:	e2860001 	add	r0, r6, #1
4001d084:	e20060ff 	and	r6, r0, #255	; 0xff
4001d088:	e1560007 	cmp	r6, r7
4001d08c:	baffffed 	blt	4001d048 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001d090:	e3a00000 	mov	r0, #0
4001d094:	eafffff8 	b	4001d07c <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001d098 <CyU3PUsbMapStream>:
4001d098:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d09c:	e1a03000 	mov	r3, r0
4001d0a0:	e203c07f 	and	ip, r3, #127	; 0x7f
4001d0a4:	e59f005c 	ldr	r0, [pc, #92]	; 4001d108 <CyU3PUsbMapStream+0x70>
4001d0a8:	e5d00008 	ldrb	r0, [r0, #8]
4001d0ac:	e3500000 	cmp	r0, #0
4001d0b0:	1a000001 	bne	4001d0bc <CyU3PUsbMapStream+0x24>
4001d0b4:	e3a00042 	mov	r0, #66	; 0x42
4001d0b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d0bc:	e35c000f 	cmp	ip, #15
4001d0c0:	da000001 	ble	4001d0cc <CyU3PUsbMapStream+0x34>
4001d0c4:	e3a00040 	mov	r0, #64	; 0x40
4001d0c8:	eafffffa 	b	4001d0b8 <CyU3PUsbMapStream+0x20>
4001d0cc:	e3130080 	tst	r3, #128	; 0x80
4001d0d0:	0a000005 	beq	4001d0ec <CyU3PUsbMapStream+0x54>
4001d0d4:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d0d8:	e180080c 	orr	r0, r0, ip, lsl #16
4001d0dc:	e1800002 	orr	r0, r0, r2
4001d0e0:	e59fe024 	ldr	lr, [pc, #36]	; 4001d10c <CyU3PUsbMapStream+0x74>
4001d0e4:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d0e8:	ea000004 	b	4001d100 <CyU3PUsbMapStream+0x68>
4001d0ec:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d0f0:	e180080c 	orr	r0, r0, ip, lsl #16
4001d0f4:	e1800002 	orr	r0, r0, r2
4001d0f8:	e59fe010 	ldr	lr, [pc, #16]	; 4001d110 <CyU3PUsbMapStream+0x78>
4001d0fc:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d100:	e3a00000 	mov	r0, #0
4001d104:	eaffffeb 	b	4001d0b8 <CyU3PUsbMapStream+0x20>
4001d108:	40031d60 	.word	0x40031d60
4001d10c:	e00335c0 	.word	0xe00335c0
4001d110:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001d114 <CyU3PUsbOtgVbusChangeHandler>:
4001d114:	e92d4010 	push	{r4, lr}
4001d118:	e3a04000 	mov	r4, #0
4001d11c:	e59f0094 	ldr	r0, [pc, #148]	; 4001d1b8 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d120:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001d124:	e3500000 	cmp	r0, #0
4001d128:	0a000005 	beq	4001d144 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001d12c:	e59f0088 	ldr	r0, [pc, #136]	; 4001d1bc <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001d130:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001d134:	e59f107c 	ldr	r1, [pc, #124]	; 4001d1b8 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d138:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001d13c:	e1100001 	tst	r0, r1
4001d140:	0a000008 	beq	4001d168 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001d144:	e3a04001 	mov	r4, #1
4001d148:	e3a00018 	mov	r0, #24
4001d14c:	e59f106c 	ldr	r1, [pc, #108]	; 4001d1c0 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d150:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d154:	e1c10000 	bic	r0, r1, r0
4001d158:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d15c:	e3c00018 	bic	r0, r0, #24
4001d160:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d164:	ea000009 	b	4001d190 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d168:	ebfffbb2 	bl	4001c038 <CyU3POtgIsHostMode>
4001d16c:	e3500000 	cmp	r0, #0
4001d170:	0a000006 	beq	4001d190 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d174:	e3a00018 	mov	r0, #24
4001d178:	e59f1040 	ldr	r1, [pc, #64]	; 4001d1c0 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d17c:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d180:	e1c10000 	bic	r0, r1, r0
4001d184:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d188:	e3800018 	orr	r0, r0, #24
4001d18c:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d190:	e59f002c 	ldr	r0, [pc, #44]	; 4001d1c4 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d194:	e5900004 	ldr	r0, [r0, #4]
4001d198:	e3500000 	cmp	r0, #0
4001d19c:	0a000004 	beq	4001d1b4 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001d1a0:	e59f001c 	ldr	r0, [pc, #28]	; 4001d1c4 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d1a4:	e1a01004 	mov	r1, r4
4001d1a8:	e5902004 	ldr	r2, [r0, #4]
4001d1ac:	e3a00002 	mov	r0, #2
4001d1b0:	e12fff32 	blx	r2
4001d1b4:	e8bd8010 	pop	{r4, pc}
4001d1b8:	40031d60 	.word	0x40031d60
4001d1bc:	e0051000 	.word	0xe0051000
4001d1c0:	e0031000 	.word	0xe0031000
4001d1c4:	40030d74 	.word	0x40030d74

Disassembly of section i.CyU3PUsbPhyDisable:

4001d1c8 <CyU3PUsbPhyDisable>:
4001d1c8:	e92d4010 	push	{r4, lr}
4001d1cc:	e1a04000 	mov	r4, r0
4001d1d0:	e2841003 	add	r1, r4, #3
4001d1d4:	e20100ff 	and	r0, r1, #255	; 0xff
4001d1d8:	eb000af4 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
4001d1dc:	e3a00000 	mov	r0, #0
4001d1e0:	e59f1184 	ldr	r1, [pc, #388]	; 4001d36c <CyU3PUsbPhyDisable+0x1a4>
4001d1e4:	e5810000 	str	r0, [r1]
4001d1e8:	e59f0180 	ldr	r0, [pc, #384]	; 4001d370 <CyU3PUsbPhyDisable+0x1a8>
4001d1ec:	ebffb728 	bl	4000ae94 <_txe_timer_deactivate>
4001d1f0:	e3a00008 	mov	r0, #8
4001d1f4:	eb00141f 	bl	40022278 <CyU3PVicDisableInt>
4001d1f8:	e59f0174 	ldr	r0, [pc, #372]	; 4001d374 <CyU3PUsbPhyDisable+0x1ac>
4001d1fc:	e5900004 	ldr	r0, [r0, #4]
4001d200:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001d204:	e59f1168 	ldr	r1, [pc, #360]	; 4001d374 <CyU3PUsbPhyDisable+0x1ac>
4001d208:	e5810004 	str	r0, [r1, #4]
4001d20c:	e3e00000 	mvn	r0, #0
4001d210:	e0411600 	sub	r1, r1, r0, lsl #12
4001d214:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d218:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d21c:	e59f0154 	ldr	r0, [pc, #340]	; 4001d378 <CyU3PUsbPhyDisable+0x1b0>
4001d220:	ebffe4d0 	bl	40016568 <CyU3PDmaChannelReset>
4001d224:	e59f0150 	ldr	r0, [pc, #336]	; 4001d37c <CyU3PUsbPhyDisable+0x1b4>
4001d228:	ebffe4ce 	bl	40016568 <CyU3PDmaChannelReset>
4001d22c:	e3540000 	cmp	r4, #0
4001d230:	0a00002b 	beq	4001d2e4 <CyU3PUsbPhyDisable+0x11c>
4001d234:	e3a00001 	mov	r0, #1
4001d238:	e59f1140 	ldr	r1, [pc, #320]	; 4001d380 <CyU3PUsbPhyDisable+0x1b8>
4001d23c:	e5810060 	str	r0, [r1, #96]	; 0x60
4001d240:	ebffb652 	bl	4000ab90 <_txe_thread_relinquish>
4001d244:	e3e00000 	mvn	r0, #0
4001d248:	e59f1134 	ldr	r1, [pc, #308]	; 4001d384 <CyU3PUsbPhyDisable+0x1bc>
4001d24c:	e5810004 	str	r0, [r1, #4]
4001d250:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d254:	e0010000 	and	r0, r1, r0
4001d258:	e5900014 	ldr	r0, [r0, #20]
4001d25c:	e59f1124 	ldr	r1, [pc, #292]	; 4001d388 <CyU3PUsbPhyDisable+0x1c0>
4001d260:	e5810000 	str	r0, [r1]
4001d264:	e3a00000 	mov	r0, #0
4001d268:	e59f111c 	ldr	r1, [pc, #284]	; 4001d38c <CyU3PUsbPhyDisable+0x1c4>
4001d26c:	e5810000 	str	r0, [r1]
4001d270:	e3a01000 	mov	r1, #0
4001d274:	e59f0114 	ldr	r0, [pc, #276]	; 4001d390 <CyU3PUsbPhyDisable+0x1c8>
4001d278:	eb00146e 	bl	40022438 <CyFx3UsbWritePhyReg>
4001d27c:	e3a01002 	mov	r1, #2
4001d280:	e1a00001 	mov	r0, r1
4001d284:	ebfffd1d 	bl	4001c700 <CyU3PSetUsbCoreClock>
4001d288:	e3a00002 	mov	r0, #2
4001d28c:	ebffd97b 	bl	40013880 <CyU3PBusyWait>
4001d290:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d294:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d298:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d29c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d2a0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2a4:	e3a00002 	mov	r0, #2
4001d2a8:	ebffd974 	bl	40013880 <CyU3PBusyWait>
4001d2ac:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d2b0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2b4:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001d2b8:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d2bc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2c0:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001d2c4:	e590001c 	ldr	r0, [r0, #28]
4001d2c8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001d2cc:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001d2d0:	e581001c 	str	r0, [r1, #28]
4001d2d4:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d398 <CyU3PUsbPhyDisable+0x1d0>
4001d2d8:	e5900000 	ldr	r0, [r0]
4001d2dc:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d2e0:	ea00000e 	b	4001d320 <CyU3PUsbPhyDisable+0x158>
4001d2e4:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d2e8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d2ec:	e3800008 	orr	r0, r0, #8
4001d2f0:	e59f109c 	ldr	r1, [pc, #156]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d2f4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d2f8:	e3a01002 	mov	r1, #2
4001d2fc:	e1a00001 	mov	r0, r1
4001d300:	ebfffcfe 	bl	4001c700 <CyU3PSetUsbCoreClock>
4001d304:	e3a00002 	mov	r0, #2
4001d308:	ebffd95c 	bl	40013880 <CyU3PBusyWait>
4001d30c:	e59f0080 	ldr	r0, [pc, #128]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d310:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d314:	e2000001 	and	r0, r0, #1
4001d318:	e59f1074 	ldr	r1, [pc, #116]	; 4001d394 <CyU3PUsbPhyDisable+0x1cc>
4001d31c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d320:	e59f0074 	ldr	r0, [pc, #116]	; 4001d39c <CyU3PUsbPhyDisable+0x1d4>
4001d324:	e5900000 	ldr	r0, [r0]
4001d328:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001d32c:	e59f1068 	ldr	r1, [pc, #104]	; 4001d39c <CyU3PUsbPhyDisable+0x1d4>
4001d330:	e5810000 	str	r0, [r1]
4001d334:	e3a00000 	mov	r0, #0
4001d338:	e59f1040 	ldr	r1, [pc, #64]	; 4001d380 <CyU3PUsbPhyDisable+0x1b8>
4001d33c:	e5c10009 	strb	r0, [r1, #9]
4001d340:	ebfffb6c 	bl	4001c0f8 <CyU3POtgIsStarted>
4001d344:	e3500000 	cmp	r0, #0
4001d348:	0a000006 	beq	4001d368 <CyU3PUsbPhyDisable+0x1a0>
4001d34c:	e3a00064 	mov	r0, #100	; 0x64
4001d350:	ebffd94a 	bl	40013880 <CyU3PBusyWait>
4001d354:	e59f0040 	ldr	r0, [pc, #64]	; 4001d39c <CyU3PUsbPhyDisable+0x1d4>
4001d358:	e5900000 	ldr	r0, [r0]
4001d35c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d360:	e59f1034 	ldr	r1, [pc, #52]	; 4001d39c <CyU3PUsbPhyDisable+0x1d4>
4001d364:	e5810000 	str	r0, [r1]
4001d368:	e8bd8010 	pop	{r4, pc}
4001d36c:	40030dd0 	.word	0x40030dd0
4001d370:	400326c0 	.word	0x400326c0
4001d374:	e0030000 	.word	0xe0030000
4001d378:	40031a9c 	.word	0x40031a9c
4001d37c:	40031b3c 	.word	0x40031b3c
4001d380:	40031d60 	.word	0x40031d60
4001d384:	e0033000 	.word	0xe0033000
4001d388:	40030da4 	.word	0x40030da4
4001d38c:	40030dd4 	.word	0x40030dd4
4001d390:	00001005 	.word	0x00001005
4001d394:	e0031000 	.word	0xe0031000
4001d398:	40030c78 	.word	0x40030c78
4001d39c:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d3a0 <CyU3PUsbPhyEnable>:
4001d3a0:	e92d4070 	push	{r4, r5, r6, lr}
4001d3a4:	e1a04000 	mov	r4, r0
4001d3a8:	e2841005 	add	r1, r4, #5
4001d3ac:	e20100ff 	and	r0, r1, #255	; 0xff
4001d3b0:	eb000a7e 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
4001d3b4:	e3e00000 	mvn	r0, #0
4001d3b8:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d3bc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d3c0:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d3c4:	e3a00008 	mov	r0, #8
4001d3c8:	eb0013af 	bl	4002228c <CyU3PVicEnableInt>
4001d3cc:	e3a00009 	mov	r0, #9
4001d3d0:	eb0013ad 	bl	4002228c <CyU3PVicEnableInt>
4001d3d4:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d67c <CyU3PUsbPhyEnable+0x2dc>
4001d3d8:	e5900004 	ldr	r0, [r0, #4]
4001d3dc:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d3e0:	e59f1294 	ldr	r1, [pc, #660]	; 4001d67c <CyU3PUsbPhyEnable+0x2dc>
4001d3e4:	e5810004 	str	r0, [r1, #4]
4001d3e8:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d3ec:	e5900000 	ldr	r0, [r0]
4001d3f0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d3f4:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d3f8:	e5810000 	str	r0, [r1]
4001d3fc:	e3540000 	cmp	r4, #0
4001d400:	0a000069 	beq	4001d5ac <CyU3PUsbPhyEnable+0x20c>
4001d404:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d408:	e5900014 	ldr	r0, [r0, #20]
4001d40c:	e59f126c 	ldr	r1, [pc, #620]	; 4001d680 <CyU3PUsbPhyEnable+0x2e0>
4001d410:	e5810000 	str	r0, [r1]
4001d414:	e3a00000 	mov	r0, #0
4001d418:	e59f1264 	ldr	r1, [pc, #612]	; 4001d684 <CyU3PUsbPhyEnable+0x2e4>
4001d41c:	e5810000 	str	r0, [r1]
4001d420:	e3e00000 	mvn	r0, #0
4001d424:	e59f125c 	ldr	r1, [pc, #604]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d428:	e5810004 	str	r0, [r1, #4]
4001d42c:	e59f0258 	ldr	r0, [pc, #600]	; 4001d68c <CyU3PUsbPhyEnable+0x2ec>
4001d430:	e5810008 	str	r0, [r1, #8]
4001d434:	e3e00000 	mvn	r0, #0
4001d438:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d43c:	e59f024c 	ldr	r0, [pc, #588]	; 4001d690 <CyU3PUsbPhyEnable+0x2f0>
4001d440:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d444:	e59f0248 	ldr	r0, [pc, #584]	; 4001d694 <CyU3PUsbPhyEnable+0x2f4>
4001d448:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d44c:	e3500000 	cmp	r0, #0
4001d450:	0a000003 	beq	4001d464 <CyU3PUsbPhyEnable+0xc4>
4001d454:	e1a00001 	mov	r0, r1
4001d458:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d45c:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d460:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d464:	e3a00000 	mov	r0, #0
4001d468:	e59f1224 	ldr	r1, [pc, #548]	; 4001d694 <CyU3PUsbPhyEnable+0x2f4>
4001d46c:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d470:	e59f0220 	ldr	r0, [pc, #544]	; 4001d698 <CyU3PUsbPhyEnable+0x2f8>
4001d474:	e5900000 	ldr	r0, [r0]
4001d478:	e3500000 	cmp	r0, #0
4001d47c:	0a000003 	beq	4001d490 <CyU3PUsbPhyEnable+0xf0>
4001d480:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d484:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d488:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d48c:	ea000002 	b	4001d49c <CyU3PUsbPhyEnable+0xfc>
4001d490:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d494:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d498:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d49c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d69c <CyU3PUsbPhyEnable+0x2fc>
4001d4a0:	e5900000 	ldr	r0, [r0]
4001d4a4:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d4a8:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d4ac:	eb00139b 	bl	40022320 <CyFx3Usb3LnkSetup>
4001d4b0:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d6a0 <CyU3PUsbPhyEnable+0x300>
4001d4b4:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d4b8:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d4bc:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d4c0:	e1c10000 	bic	r0, r1, r0
4001d4c4:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d4c8:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d4cc:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d4d0:	e3a00000 	mov	r0, #0
4001d4d4:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d694 <CyU3PUsbPhyEnable+0x2f4>
4001d4d8:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d4dc:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d4e0:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d4e4:	e581001c 	str	r0, [r1, #28]
4001d4e8:	e3a01002 	mov	r1, #2
4001d4ec:	e1a00001 	mov	r0, r1
4001d4f0:	ebfffc82 	bl	4001c700 <CyU3PSetUsbCoreClock>
4001d4f4:	eb00135b 	bl	40022268 <CyU3PVicDisableAllInterrupts>
4001d4f8:	e1a05000 	mov	r5, r0
4001d4fc:	e3a00000 	mov	r0, #0
4001d500:	e59f119c 	ldr	r1, [pc, #412]	; 4001d6a4 <CyU3PUsbPhyEnable+0x304>
4001d504:	e5810000 	str	r0, [r1]
4001d508:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d50c:	e59f1174 	ldr	r1, [pc, #372]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d510:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d514:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d518:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d51c:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d520:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d524:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d528:	e3a00064 	mov	r0, #100	; 0x64
4001d52c:	ebffd8d3 	bl	40013880 <CyU3PBusyWait>
4001d530:	e59f0150 	ldr	r0, [pc, #336]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d534:	e5900000 	ldr	r0, [r0]
4001d538:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d53c:	e59f1144 	ldr	r1, [pc, #324]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d540:	e5810000 	str	r0, [r1]
4001d544:	e59f015c 	ldr	r0, [pc, #348]	; 4001d6a8 <CyU3PUsbPhyEnable+0x308>
4001d548:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d54c:	e3a01080 	mov	r1, #128	; 0x80
4001d550:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d554:	eb0013b7 	bl	40022438 <CyFx3UsbWritePhyReg>
4001d558:	e3a01d06 	mov	r1, #384	; 0x180
4001d55c:	e59f0148 	ldr	r0, [pc, #328]	; 4001d6ac <CyU3PUsbPhyEnable+0x30c>
4001d560:	eb0013b4 	bl	40022438 <CyFx3UsbWritePhyReg>
4001d564:	e3a01080 	mov	r1, #128	; 0x80
4001d568:	e59f0140 	ldr	r0, [pc, #320]	; 4001d6b0 <CyU3PUsbPhyEnable+0x310>
4001d56c:	eb0013b1 	bl	40022438 <CyFx3UsbWritePhyReg>
4001d570:	e1a00005 	mov	r0, r5
4001d574:	eb001349 	bl	400222a0 <CyU3PVicEnableInterrupts>
4001d578:	e59f0108 	ldr	r0, [pc, #264]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d57c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d580:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d584:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d688 <CyU3PUsbPhyEnable+0x2e8>
4001d588:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d58c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d590:	e581001c 	str	r0, [r1, #28]
4001d594:	e3a00064 	mov	r0, #100	; 0x64
4001d598:	ebffd8b8 	bl	40013880 <CyU3PBusyWait>
4001d59c:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d5a0:	e59f110c 	ldr	r1, [pc, #268]	; 4001d6b4 <CyU3PUsbPhyEnable+0x314>
4001d5a4:	e5810008 	str	r0, [r1, #8]
4001d5a8:	ea000031 	b	4001d674 <CyU3PUsbPhyEnable+0x2d4>
4001d5ac:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d694 <CyU3PUsbPhyEnable+0x2f4>
4001d5b0:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d5b4:	e3500000 	cmp	r0, #0
4001d5b8:	0a000000 	beq	4001d5c0 <CyU3PUsbPhyEnable+0x220>
4001d5bc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d5c0:	e3a00001 	mov	r0, #1
4001d5c4:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d694 <CyU3PUsbPhyEnable+0x2f4>
4001d5c8:	e5c10009 	strb	r0, [r1, #9]
4001d5cc:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d5d0:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d6b8 <CyU3PUsbPhyEnable+0x318>
4001d5d4:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d5d8:	e3a00000 	mov	r0, #0
4001d5dc:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d694 <CyU3PUsbPhyEnable+0x2f4>
4001d5e0:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d5e4:	e59f008c 	ldr	r0, [pc, #140]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d5e8:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d5ec:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d5f0:	e59f1080 	ldr	r1, [pc, #128]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d5f4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d5f8:	e1a00001 	mov	r0, r1
4001d5fc:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d600:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d604:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d608:	e3a00002 	mov	r0, #2
4001d60c:	ebffd89b 	bl	40013880 <CyU3PBusyWait>
4001d610:	e59f0060 	ldr	r0, [pc, #96]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d614:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d618:	e2000001 	and	r0, r0, #1
4001d61c:	e59f1054 	ldr	r1, [pc, #84]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d620:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d624:	e1a00001 	mov	r0, r1
4001d628:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d62c:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d630:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d634:	e3a00064 	mov	r0, #100	; 0x64
4001d638:	ebffd890 	bl	40013880 <CyU3PBusyWait>
4001d63c:	eb00132b 	bl	400222f0 <CyFx3Usb2PhySetup>
4001d640:	e59f0074 	ldr	r0, [pc, #116]	; 4001d6bc <CyU3PUsbPhyEnable+0x31c>
4001d644:	e59f102c 	ldr	r1, [pc, #44]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d648:	e5810008 	str	r0, [r1, #8]
4001d64c:	e3a00050 	mov	r0, #80	; 0x50
4001d650:	ebffd88a 	bl	40013880 <CyU3PBusyWait>
4001d654:	e3a01000 	mov	r1, #0
4001d658:	e3a00002 	mov	r0, #2
4001d65c:	ebfffc27 	bl	4001c700 <CyU3PSetUsbCoreClock>
4001d660:	e59f0010 	ldr	r0, [pc, #16]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d664:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d668:	e3c00008 	bic	r0, r0, #8
4001d66c:	e59f1004 	ldr	r1, [pc, #4]	; 4001d678 <CyU3PUsbPhyEnable+0x2d8>
4001d670:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d674:	eaffffd0 	b	4001d5bc <CyU3PUsbPhyEnable+0x21c>
4001d678:	e0031000 	.word	0xe0031000
4001d67c:	e0030000 	.word	0xe0030000
4001d680:	40030da4 	.word	0x40030da4
4001d684:	40030dd4 	.word	0x40030dd4
4001d688:	e0033000 	.word	0xe0033000
4001d68c:	00038081 	.word	0x00038081
4001d690:	00004a3d 	.word	0x00004a3d
4001d694:	40031d60 	.word	0x40031d60
4001d698:	40030d60 	.word	0x40030d60
4001d69c:	40030dac 	.word	0x40030dac
4001d6a0:	00000908 	.word	0x00000908
4001d6a4:	40030d94 	.word	0x40030d94
4001d6a8:	00310418 	.word	0x00310418
4001d6ac:	00001006 	.word	0x00001006
4001d6b0:	00001024 	.word	0x00001024
4001d6b4:	e0052000 	.word	0xe0052000
4001d6b8:	e0032000 	.word	0xe0032000
4001d6bc:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d6c0 <CyU3PUsbPowerOn>:
4001d6c0:	e92d4010 	push	{r4, lr}
4001d6c4:	eb00133b 	bl	400223b8 <CyFx3UsbPowerOn>
4001d6c8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d6cc <CyU3PUsbResetEp>:
4001d6cc:	e92d4070 	push	{r4, r5, r6, lr}
4001d6d0:	e1a04000 	mov	r4, r0
4001d6d4:	e204507f 	and	r5, r4, #127	; 0x7f
4001d6d8:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d79c <CyU3PUsbResetEp+0xd0>
4001d6dc:	e5d00008 	ldrb	r0, [r0, #8]
4001d6e0:	e3500000 	cmp	r0, #0
4001d6e4:	1a000001 	bne	4001d6f0 <CyU3PUsbResetEp+0x24>
4001d6e8:	e3a00042 	mov	r0, #66	; 0x42
4001d6ec:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d6f0:	e355000f 	cmp	r5, #15
4001d6f4:	da000001 	ble	4001d700 <CyU3PUsbResetEp+0x34>
4001d6f8:	e3a00040 	mov	r0, #64	; 0x40
4001d6fc:	eafffffa 	b	4001d6ec <CyU3PUsbResetEp+0x20>
4001d700:	e3e01000 	mvn	r1, #0
4001d704:	e59f0094 	ldr	r0, [pc, #148]	; 4001d7a0 <CyU3PUsbResetEp+0xd4>
4001d708:	ebffb2ff 	bl	4000a30c <_txe_mutex_get>
4001d70c:	ebfffe2b 	bl	4001cfc0 <CyU3PUsbGetSpeed>
4001d710:	e3500003 	cmp	r0, #3
4001d714:	1a00001c 	bne	4001d78c <CyU3PUsbResetEp+0xc0>
4001d718:	e59f0084 	ldr	r0, [pc, #132]	; 4001d7a4 <CyU3PUsbResetEp+0xd8>
4001d71c:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d720:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d724:	e59f1078 	ldr	r1, [pc, #120]	; 4001d7a4 <CyU3PUsbResetEp+0xd8>
4001d728:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d72c:	e3140080 	tst	r4, #128	; 0x80
4001d730:	0a00000a 	beq	4001d760 <CyU3PUsbResetEp+0x94>
4001d734:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d738:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d73c:	e3866011 	orr	r6, r6, #17
4001d740:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d744:	e3a00002 	mov	r0, #2
4001d748:	ebffd84c 	bl	40013880 <CyU3PBusyWait>
4001d74c:	e3c60010 	bic	r0, r6, #16
4001d750:	e3806001 	orr	r6, r0, #1
4001d754:	e59f004c 	ldr	r0, [pc, #76]	; 4001d7a8 <CyU3PUsbResetEp+0xdc>
4001d758:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d75c:	ea00000a 	b	4001d78c <CyU3PUsbResetEp+0xc0>
4001d760:	e59f0044 	ldr	r0, [pc, #68]	; 4001d7ac <CyU3PUsbResetEp+0xe0>
4001d764:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d768:	e3806011 	orr	r6, r0, #17
4001d76c:	e59f0038 	ldr	r0, [pc, #56]	; 4001d7ac <CyU3PUsbResetEp+0xe0>
4001d770:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d774:	e3a00002 	mov	r0, #2
4001d778:	ebffd840 	bl	40013880 <CyU3PBusyWait>
4001d77c:	e3c60010 	bic	r0, r6, #16
4001d780:	e3806001 	orr	r6, r0, #1
4001d784:	e59f0020 	ldr	r0, [pc, #32]	; 4001d7ac <CyU3PUsbResetEp+0xe0>
4001d788:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d78c:	e59f000c 	ldr	r0, [pc, #12]	; 4001d7a0 <CyU3PUsbResetEp+0xd4>
4001d790:	ebffb312 	bl	4000a3e0 <_txe_mutex_put>
4001d794:	e3a00000 	mov	r0, #0
4001d798:	eaffffd3 	b	4001d6ec <CyU3PUsbResetEp+0x20>
4001d79c:	40031d60 	.word	0x40031d60
4001d7a0:	40031f00 	.word	0x40031f00
4001d7a4:	e0033000 	.word	0xe0033000
4001d7a8:	e0033500 	.word	0xe0033500
4001d7ac:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d7b0 <CyU3PUsbSendEP0Data>:
4001d7b0:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d7b4:	e1a04000 	mov	r4, r0
4001d7b8:	e1a05001 	mov	r5, r1
4001d7bc:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d970 <CyU3PUsbSendEP0Data+0x1c0>
4001d7c0:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d974 <CyU3PUsbSendEP0Data+0x1c4>
4001d7c4:	e5d00008 	ldrb	r0, [r0, #8]
4001d7c8:	e3500000 	cmp	r0, #0
4001d7cc:	1a000001 	bne	4001d7d8 <CyU3PUsbSendEP0Data+0x28>
4001d7d0:	e3a00042 	mov	r0, #66	; 0x42
4001d7d4:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d7d8:	e3550000 	cmp	r5, #0
4001d7dc:	1a000001 	bne	4001d7e8 <CyU3PUsbSendEP0Data+0x38>
4001d7e0:	e3a00040 	mov	r0, #64	; 0x40
4001d7e4:	eafffffa 	b	4001d7d4 <CyU3PUsbSendEP0Data+0x24>
4001d7e8:	e3e01000 	mvn	r1, #0
4001d7ec:	e59f0184 	ldr	r0, [pc, #388]	; 4001d978 <CyU3PUsbSendEP0Data+0x1c8>
4001d7f0:	ebffb2c5 	bl	4000a30c <_txe_mutex_get>
4001d7f4:	e59f0180 	ldr	r0, [pc, #384]	; 4001d97c <CyU3PUsbSendEP0Data+0x1cc>
4001d7f8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d7fc:	e3c00008 	bic	r0, r0, #8
4001d800:	e59f1174 	ldr	r1, [pc, #372]	; 4001d97c <CyU3PUsbSendEP0Data+0x1cc>
4001d804:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d808:	e59f0164 	ldr	r0, [pc, #356]	; 4001d974 <CyU3PUsbSendEP0Data+0x1c4>
4001d80c:	e5900018 	ldr	r0, [r0, #24]
4001d810:	e3500000 	cmp	r0, #0
4001d814:	1a000002 	bne	4001d824 <CyU3PUsbSendEP0Data+0x74>
4001d818:	ebfffdf0 	bl	4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d81c:	e3500000 	cmp	r0, #0
4001d820:	0a000008 	beq	4001d848 <CyU3PUsbSendEP0Data+0x98>
4001d824:	e59f0150 	ldr	r0, [pc, #336]	; 4001d97c <CyU3PUsbSendEP0Data+0x1cc>
4001d828:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d82c:	e3800008 	orr	r0, r0, #8
4001d830:	e59f1144 	ldr	r1, [pc, #324]	; 4001d97c <CyU3PUsbSendEP0Data+0x1cc>
4001d834:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d838:	e59f0138 	ldr	r0, [pc, #312]	; 4001d978 <CyU3PUsbSendEP0Data+0x1c8>
4001d83c:	ebffb2e7 	bl	4000a3e0 <_txe_mutex_put>
4001d840:	e3a00000 	mov	r0, #0
4001d844:	eaffffe2 	b	4001d7d4 <CyU3PUsbSendEP0Data+0x24>
4001d848:	e59f012c 	ldr	r0, [pc, #300]	; 4001d97c <CyU3PUsbSendEP0Data+0x1cc>
4001d84c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d850:	e3800008 	orr	r0, r0, #8
4001d854:	e59f1120 	ldr	r1, [pc, #288]	; 4001d97c <CyU3PUsbSendEP0Data+0x1cc>
4001d858:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d85c:	e1a00001 	mov	r0, r1
4001d860:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d864:	e1500004 	cmp	r0, r4
4001d868:	2a000003 	bcs	4001d87c <CyU3PUsbSendEP0Data+0xcc>
4001d86c:	e1a00001 	mov	r0, r1
4001d870:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d874:	e1a04800 	lsl	r4, r0, #16
4001d878:	e1a04824 	lsr	r4, r4, #16
4001d87c:	eb0003b8 	bl	4001e764 <GetUsbLinkActive>
4001d880:	e1cd40b4 	strh	r4, [sp, #4]
4001d884:	e284000f 	add	r0, r4, #15
4001d888:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d980 <CyU3PUsbSendEP0Data+0x1d0>
4001d88c:	e0000001 	and	r0, r0, r1
4001d890:	e1cd00b6 	strh	r0, [sp, #6]
4001d894:	e58d5000 	str	r5, [sp]
4001d898:	e3a00000 	mov	r0, #0
4001d89c:	e1cd00b8 	strh	r0, [sp, #8]
4001d8a0:	e1a0100d 	mov	r1, sp
4001d8a4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d984 <CyU3PUsbSendEP0Data+0x1d4>
4001d8a8:	ebffe571 	bl	40016e74 <CyU3PDmaChannelSetupSendBuffer>
4001d8ac:	e20060ff 	and	r6, r0, #255	; 0xff
4001d8b0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d978 <CyU3PUsbSendEP0Data+0x1c8>
4001d8b4:	ebffb2c9 	bl	4000a3e0 <_txe_mutex_put>
4001d8b8:	e3560000 	cmp	r6, #0
4001d8bc:	1a000029 	bne	4001d968 <CyU3PUsbSendEP0Data+0x1b8>
4001d8c0:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d974 <CyU3PUsbSendEP0Data+0x1c4>
4001d8c4:	e5900014 	ldr	r0, [r0, #20]
4001d8c8:	e3500000 	cmp	r0, #0
4001d8cc:	0a000000 	beq	4001d8d4 <CyU3PUsbSendEP0Data+0x124>
4001d8d0:	ebfffc1d 	bl	4001c94c <CyU3PUsbAckSetup>
4001d8d4:	ea00000d 	b	4001d910 <CyU3PUsbSendEP0Data+0x160>
4001d8d8:	e3a01064 	mov	r1, #100	; 0x64
4001d8dc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d984 <CyU3PUsbSendEP0Data+0x1d4>
4001d8e0:	ebffe5f1 	bl	400170ac <CyU3PDmaChannelWaitForCompletion>
4001d8e4:	e20060ff 	and	r6, r0, #255	; 0xff
4001d8e8:	e3560045 	cmp	r6, #69	; 0x45
4001d8ec:	1a000006 	bne	4001d90c <CyU3PUsbSendEP0Data+0x15c>
4001d8f0:	ebfffdba 	bl	4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d8f4:	e3500000 	cmp	r0, #0
4001d8f8:	0a000001 	beq	4001d904 <CyU3PUsbSendEP0Data+0x154>
4001d8fc:	e3a00000 	mov	r0, #0
4001d900:	eaffffb3 	b	4001d7d4 <CyU3PUsbSendEP0Data+0x24>
4001d904:	e2477064 	sub	r7, r7, #100	; 0x64
4001d908:	ea000000 	b	4001d910 <CyU3PUsbSendEP0Data+0x160>
4001d90c:	ea000001 	b	4001d918 <CyU3PUsbSendEP0Data+0x168>
4001d910:	e3570000 	cmp	r7, #0
4001d914:	1affffef 	bne	4001d8d8 <CyU3PUsbSendEP0Data+0x128>
4001d918:	e1a00000 	nop			; (mov r0, r0)
4001d91c:	e3560000 	cmp	r6, #0
4001d920:	0a000010 	beq	4001d968 <CyU3PUsbSendEP0Data+0x1b8>
4001d924:	e3e01000 	mvn	r1, #0
4001d928:	e59f0048 	ldr	r0, [pc, #72]	; 4001d978 <CyU3PUsbSendEP0Data+0x1c8>
4001d92c:	ebffb276 	bl	4000a30c <_txe_mutex_get>
4001d930:	e3a01001 	mov	r1, #1
4001d934:	e3a00080 	mov	r0, #128	; 0x80
4001d938:	eb000101 	bl	4001dd44 <CyU3PUsbSetEpNak>
4001d93c:	e3a00064 	mov	r0, #100	; 0x64
4001d940:	ebffd7ce 	bl	40013880 <CyU3PBusyWait>
4001d944:	e59f0038 	ldr	r0, [pc, #56]	; 4001d984 <CyU3PUsbSendEP0Data+0x1d4>
4001d948:	ebffe306 	bl	40016568 <CyU3PDmaChannelReset>
4001d94c:	e3a00080 	mov	r0, #128	; 0x80
4001d950:	ebfffcf5 	bl	4001cd2c <CyU3PUsbFlushEp>
4001d954:	e3a01000 	mov	r1, #0
4001d958:	e3a00080 	mov	r0, #128	; 0x80
4001d95c:	eb0000f8 	bl	4001dd44 <CyU3PUsbSetEpNak>
4001d960:	e59f0010 	ldr	r0, [pc, #16]	; 4001d978 <CyU3PUsbSendEP0Data+0x1c8>
4001d964:	ebffb29d 	bl	4000a3e0 <_txe_mutex_put>
4001d968:	e1a00006 	mov	r0, r6
4001d96c:	eaffff98 	b	4001d7d4 <CyU3PUsbSendEP0Data+0x24>
4001d970:	00001388 	.word	0x00001388
4001d974:	40031d60 	.word	0x40031d60
4001d978:	40031f00 	.word	0x40031f00
4001d97c:	e0031000 	.word	0xe0031000
4001d980:	0000fff0 	.word	0x0000fff0
4001d984:	40031a9c 	.word	0x40031a9c

Disassembly of section i.CyU3PUsbSendErdy:

4001d988 <CyU3PUsbSendErdy>:
4001d988:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d98c:	e1a04000 	mov	r4, r0
4001d990:	e1a05001 	mov	r5, r1
4001d994:	e1a0000d 	mov	r0, sp
4001d998:	e3a02000 	mov	r2, #0
4001d99c:	e1a03002 	mov	r3, r2
4001d9a0:	e1a06002 	mov	r6, r2
4001d9a4:	e880004c 	stm	r0, {r2, r3, r6}
4001d9a8:	e204600f 	and	r6, r4, #15
4001d9ac:	e2047080 	and	r7, r4, #128	; 0x80
4001d9b0:	e59f00b4 	ldr	r0, [pc, #180]	; 4001da6c <CyU3PUsbSendErdy+0xe4>
4001d9b4:	e5d00008 	ldrb	r0, [r0, #8]
4001d9b8:	e3500000 	cmp	r0, #0
4001d9bc:	1a000001 	bne	4001d9c8 <CyU3PUsbSendErdy+0x40>
4001d9c0:	e3a00042 	mov	r0, #66	; 0x42
4001d9c4:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d9c8:	ebfffd7c 	bl	4001cfc0 <CyU3PUsbGetSpeed>
4001d9cc:	e3500003 	cmp	r0, #3
4001d9d0:	1a000004 	bne	4001d9e8 <CyU3PUsbSendErdy+0x60>
4001d9d4:	e59f0094 	ldr	r0, [pc, #148]	; 4001da70 <CyU3PUsbSendErdy+0xe8>
4001d9d8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d9dc:	e200003f 	and	r0, r0, #63	; 0x3f
4001d9e0:	e3500010 	cmp	r0, #16
4001d9e4:	0a000001 	beq	4001d9f0 <CyU3PUsbSendErdy+0x68>
4001d9e8:	e3a000ff 	mov	r0, #255	; 0xff
4001d9ec:	eafffff4 	b	4001d9c4 <CyU3PUsbSendErdy+0x3c>
4001d9f0:	e204007f 	and	r0, r4, #127	; 0x7f
4001d9f4:	e350000f 	cmp	r0, #15
4001d9f8:	da000001 	ble	4001da04 <CyU3PUsbSendErdy+0x7c>
4001d9fc:	e3a00040 	mov	r0, #64	; 0x40
4001da00:	eaffffef 	b	4001d9c4 <CyU3PUsbSendErdy+0x3c>
4001da04:	e59f0064 	ldr	r0, [pc, #100]	; 4001da70 <CyU3PUsbSendErdy+0xe8>
4001da08:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001da0c:	e3a01004 	mov	r1, #4
4001da10:	e1810c80 	orr	r0, r1, r0, lsl #25
4001da14:	e58d0000 	str	r0, [sp]
4001da18:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001da1c:	e3800003 	orr	r0, r0, #3
4001da20:	e1800406 	orr	r0, r0, r6, lsl #8
4001da24:	e58d0004 	str	r0, [sp, #4]
4001da28:	e3570000 	cmp	r7, #0
4001da2c:	0a000005 	beq	4001da48 <CyU3PUsbSendErdy+0xc0>
4001da30:	e59f003c 	ldr	r0, [pc, #60]	; 4001da74 <CyU3PUsbSendErdy+0xec>
4001da34:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001da38:	e3100008 	tst	r0, #8
4001da3c:	0a000006 	beq	4001da5c <CyU3PUsbSendErdy+0xd4>
4001da40:	e58d5008 	str	r5, [sp, #8]
4001da44:	ea000004 	b	4001da5c <CyU3PUsbSendErdy+0xd4>
4001da48:	e59f0028 	ldr	r0, [pc, #40]	; 4001da78 <CyU3PUsbSendErdy+0xf0>
4001da4c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001da50:	e3100008 	tst	r0, #8
4001da54:	0a000000 	beq	4001da5c <CyU3PUsbSendErdy+0xd4>
4001da58:	e58d5008 	str	r5, [sp, #8]
4001da5c:	e1a0000d 	mov	r0, sp
4001da60:	eb00123d 	bl	4002235c <CyFx3Usb3SendTP>
4001da64:	e3a00000 	mov	r0, #0
4001da68:	eaffffd5 	b	4001d9c4 <CyU3PUsbSendErdy+0x3c>
4001da6c:	40031d60 	.word	0x40031d60
4001da70:	e0033000 	.word	0xe0033000
4001da74:	e0033500 	.word	0xe0033500
4001da78:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001da7c <CyU3PUsbSendNrdy>:
4001da7c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001da80:	e1a04000 	mov	r4, r0
4001da84:	e1a05001 	mov	r5, r1
4001da88:	e1a0000d 	mov	r0, sp
4001da8c:	e3a02000 	mov	r2, #0
4001da90:	e1a03002 	mov	r3, r2
4001da94:	e1a06002 	mov	r6, r2
4001da98:	e880004c 	stm	r0, {r2, r3, r6}
4001da9c:	e204600f 	and	r6, r4, #15
4001daa0:	e2047080 	and	r7, r4, #128	; 0x80
4001daa4:	e59f00b0 	ldr	r0, [pc, #176]	; 4001db5c <CyU3PUsbSendNrdy+0xe0>
4001daa8:	e5d00008 	ldrb	r0, [r0, #8]
4001daac:	e3500000 	cmp	r0, #0
4001dab0:	1a000001 	bne	4001dabc <CyU3PUsbSendNrdy+0x40>
4001dab4:	e3a00042 	mov	r0, #66	; 0x42
4001dab8:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001dabc:	ebfffd3f 	bl	4001cfc0 <CyU3PUsbGetSpeed>
4001dac0:	e3500003 	cmp	r0, #3
4001dac4:	1a000004 	bne	4001dadc <CyU3PUsbSendNrdy+0x60>
4001dac8:	e59f0090 	ldr	r0, [pc, #144]	; 4001db60 <CyU3PUsbSendNrdy+0xe4>
4001dacc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dad0:	e200003f 	and	r0, r0, #63	; 0x3f
4001dad4:	e3500010 	cmp	r0, #16
4001dad8:	0a000001 	beq	4001dae4 <CyU3PUsbSendNrdy+0x68>
4001dadc:	e3a000ff 	mov	r0, #255	; 0xff
4001dae0:	eafffff4 	b	4001dab8 <CyU3PUsbSendNrdy+0x3c>
4001dae4:	e204007f 	and	r0, r4, #127	; 0x7f
4001dae8:	e350000f 	cmp	r0, #15
4001daec:	da000001 	ble	4001daf8 <CyU3PUsbSendNrdy+0x7c>
4001daf0:	e3a00040 	mov	r0, #64	; 0x40
4001daf4:	eaffffef 	b	4001dab8 <CyU3PUsbSendNrdy+0x3c>
4001daf8:	e59f0060 	ldr	r0, [pc, #96]	; 4001db60 <CyU3PUsbSendNrdy+0xe4>
4001dafc:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001db00:	e3a01004 	mov	r1, #4
4001db04:	e1810c80 	orr	r0, r1, r0, lsl #25
4001db08:	e58d0000 	str	r0, [sp]
4001db0c:	e3870002 	orr	r0, r7, #2
4001db10:	e1800406 	orr	r0, r0, r6, lsl #8
4001db14:	e58d0004 	str	r0, [sp, #4]
4001db18:	e3570000 	cmp	r7, #0
4001db1c:	0a000005 	beq	4001db38 <CyU3PUsbSendNrdy+0xbc>
4001db20:	e59f003c 	ldr	r0, [pc, #60]	; 4001db64 <CyU3PUsbSendNrdy+0xe8>
4001db24:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db28:	e3100008 	tst	r0, #8
4001db2c:	0a000006 	beq	4001db4c <CyU3PUsbSendNrdy+0xd0>
4001db30:	e58d5008 	str	r5, [sp, #8]
4001db34:	ea000004 	b	4001db4c <CyU3PUsbSendNrdy+0xd0>
4001db38:	e59f0028 	ldr	r0, [pc, #40]	; 4001db68 <CyU3PUsbSendNrdy+0xec>
4001db3c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db40:	e3100008 	tst	r0, #8
4001db44:	0a000000 	beq	4001db4c <CyU3PUsbSendNrdy+0xd0>
4001db48:	e58d5008 	str	r5, [sp, #8]
4001db4c:	e1a0000d 	mov	r0, sp
4001db50:	eb001201 	bl	4002235c <CyFx3Usb3SendTP>
4001db54:	e3a00000 	mov	r0, #0
4001db58:	eaffffd6 	b	4001dab8 <CyU3PUsbSendNrdy+0x3c>
4001db5c:	40031d60 	.word	0x40031d60
4001db60:	e0033000 	.word	0xe0033000
4001db64:	e0033500 	.word	0xe0033500
4001db68:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001db6c <CyU3PUsbSetDesc>:
4001db6c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001db70:	e1a03000 	mov	r3, r0
4001db74:	e3a0c000 	mov	ip, #0
4001db78:	e59f01b8 	ldr	r0, [pc, #440]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001db7c:	e5d00008 	ldrb	r0, [r0, #8]
4001db80:	e3500000 	cmp	r0, #0
4001db84:	1a000001 	bne	4001db90 <CyU3PUsbSetDesc+0x24>
4001db88:	e3a00042 	mov	r0, #66	; 0x42
4001db8c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001db90:	e3520000 	cmp	r2, #0
4001db94:	1a000001 	bne	4001dba0 <CyU3PUsbSetDesc+0x34>
4001db98:	e3a00040 	mov	r0, #64	; 0x40
4001db9c:	eafffffa 	b	4001db8c <CyU3PUsbSetDesc+0x20>
4001dba0:	e3530009 	cmp	r3, #9
4001dba4:	308ff103 	addcc	pc, pc, r3, lsl #2
4001dba8:	ea00004d 	b	4001dce4 <CyU3PUsbSetDesc+0x178>
4001dbac:	ea000007 	b	4001dbd0 <CyU3PUsbSetDesc+0x64>
4001dbb0:	ea00000a 	b	4001dbe0 <CyU3PUsbSetDesc+0x74>
4001dbb4:	ea000011 	b	4001dc00 <CyU3PUsbSetDesc+0x94>
4001dbb8:	ea000022 	b	4001dc48 <CyU3PUsbSetDesc+0xdc>
4001dbbc:	ea00002f 	b	4001dc80 <CyU3PUsbSetDesc+0x114>
4001dbc0:	ea00003c 	b	4001dcb8 <CyU3PUsbSetDesc+0x14c>
4001dbc4:	ea000011 	b	4001dc10 <CyU3PUsbSetDesc+0xa4>
4001dbc8:	ea000008 	b	4001dbf0 <CyU3PUsbSetDesc+0x84>
4001dbcc:	ea000040 	b	4001dcd4 <CyU3PUsbSetDesc+0x168>
4001dbd0:	e1a00000 	nop			; (mov r0, r0)
4001dbd4:	e59f0160 	ldr	r0, [pc, #352]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dbd8:	e5802004 	str	r2, [r0, #4]
4001dbdc:	ea000043 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dbe0:	e1a00000 	nop			; (mov r0, r0)
4001dbe4:	e59f0150 	ldr	r0, [pc, #336]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dbe8:	e5802000 	str	r2, [r0]
4001dbec:	ea00003f 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dbf0:	e1a00000 	nop			; (mov r0, r0)
4001dbf4:	e59f0140 	ldr	r0, [pc, #320]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dbf8:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001dbfc:	ea00003b 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dc00:	e1a00000 	nop			; (mov r0, r0)
4001dc04:	e59f0130 	ldr	r0, [pc, #304]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dc08:	e5802008 	str	r2, [r0, #8]
4001dc0c:	ea000037 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dc10:	e1a00000 	nop			; (mov r0, r0)
4001dc14:	e59f0120 	ldr	r0, [pc, #288]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dc18:	e580201c 	str	r2, [r0, #28]
4001dc1c:	e5d20007 	ldrb	r0, [r2, #7]
4001dc20:	e3100040 	tst	r0, #64	; 0x40
4001dc24:	0a000003 	beq	4001dc38 <CyU3PUsbSetDesc+0xcc>
4001dc28:	e3a00001 	mov	r0, #1
4001dc2c:	e59fe104 	ldr	lr, [pc, #260]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dc30:	e5ce0006 	strb	r0, [lr, #6]
4001dc34:	ea000002 	b	4001dc44 <CyU3PUsbSetDesc+0xd8>
4001dc38:	e3a00000 	mov	r0, #0
4001dc3c:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dc40:	e5ce0006 	strb	r0, [lr, #6]
4001dc44:	ea000029 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dc48:	e1a00000 	nop			; (mov r0, r0)
4001dc4c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dc50:	e5802018 	str	r2, [r0, #24]
4001dc54:	e5d20007 	ldrb	r0, [r2, #7]
4001dc58:	e3100040 	tst	r0, #64	; 0x40
4001dc5c:	0a000003 	beq	4001dc70 <CyU3PUsbSetDesc+0x104>
4001dc60:	e3a00001 	mov	r0, #1
4001dc64:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dc68:	e5ce0006 	strb	r0, [lr, #6]
4001dc6c:	ea000002 	b	4001dc7c <CyU3PUsbSetDesc+0x110>
4001dc70:	e3a00000 	mov	r0, #0
4001dc74:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dc78:	e5ce0006 	strb	r0, [lr, #6]
4001dc7c:	ea00001b 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dc80:	e1a00000 	nop			; (mov r0, r0)
4001dc84:	e59f00b0 	ldr	r0, [pc, #176]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dc88:	e5802014 	str	r2, [r0, #20]
4001dc8c:	e5d20007 	ldrb	r0, [r2, #7]
4001dc90:	e3100040 	tst	r0, #64	; 0x40
4001dc94:	0a000003 	beq	4001dca8 <CyU3PUsbSetDesc+0x13c>
4001dc98:	e3a00001 	mov	r0, #1
4001dc9c:	e59fe094 	ldr	lr, [pc, #148]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dca0:	e5ce0006 	strb	r0, [lr, #6]
4001dca4:	ea000002 	b	4001dcb4 <CyU3PUsbSetDesc+0x148>
4001dca8:	e3a00000 	mov	r0, #0
4001dcac:	e59fe084 	ldr	lr, [pc, #132]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dcb0:	e5ce0006 	strb	r0, [lr, #6]
4001dcb4:	ea00000d 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dcb8:	e1a00000 	nop			; (mov r0, r0)
4001dcbc:	e3510010 	cmp	r1, #16
4001dcc0:	da000000 	ble	4001dcc8 <CyU3PUsbSetDesc+0x15c>
4001dcc4:	e3a0c04b 	mov	ip, #75	; 0x4b
4001dcc8:	e59f0070 	ldr	r0, [pc, #112]	; 4001dd40 <CyU3PUsbSetDesc+0x1d4>
4001dccc:	e7802101 	str	r2, [r0, r1, lsl #2]
4001dcd0:	ea000006 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dcd4:	e1a00000 	nop			; (mov r0, r0)
4001dcd8:	e59f005c 	ldr	r0, [pc, #92]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dcdc:	e5802070 	str	r2, [r0, #112]	; 0x70
4001dce0:	ea000002 	b	4001dcf0 <CyU3PUsbSetDesc+0x184>
4001dce4:	e1a00000 	nop			; (mov r0, r0)
4001dce8:	e3a00050 	mov	r0, #80	; 0x50
4001dcec:	eaffffa6 	b	4001db8c <CyU3PUsbSetDesc+0x20>
4001dcf0:	e1a00000 	nop			; (mov r0, r0)
4001dcf4:	e59f0040 	ldr	r0, [pc, #64]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dcf8:	e5900000 	ldr	r0, [r0]
4001dcfc:	e3500000 	cmp	r0, #0
4001dd00:	0a00000a 	beq	4001dd30 <CyU3PUsbSetDesc+0x1c4>
4001dd04:	e59f0030 	ldr	r0, [pc, #48]	; 4001dd3c <CyU3PUsbSetDesc+0x1d0>
4001dd08:	e5900020 	ldr	r0, [r0, #32]
4001dd0c:	e3500000 	cmp	r0, #0
4001dd10:	0a000006 	beq	4001dd30 <CyU3PUsbSetDesc+0x1c4>
4001dd14:	e59f001c 	ldr	r0, [pc, #28]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dd18:	e5d00008 	ldrb	r0, [r0, #8]
4001dd1c:	e3500003 	cmp	r0, #3
4001dd20:	aa000002 	bge	4001dd30 <CyU3PUsbSetDesc+0x1c4>
4001dd24:	e3a00003 	mov	r0, #3
4001dd28:	e59fe008 	ldr	lr, [pc, #8]	; 4001dd38 <CyU3PUsbSetDesc+0x1cc>
4001dd2c:	e5ce0008 	strb	r0, [lr, #8]
4001dd30:	e1a0000c 	mov	r0, ip
4001dd34:	eaffff94 	b	4001db8c <CyU3PUsbSetDesc+0x20>
4001dd38:	40031d60 	.word	0x40031d60
4001dd3c:	40031fb8 	.word	0x40031fb8
4001dd40:	40031fd8 	.word	0x40031fd8

Disassembly of section i.CyU3PUsbSetEpNak:

4001dd44 <CyU3PUsbSetEpNak>:
4001dd44:	e92d4070 	push	{r4, r5, r6, lr}
4001dd48:	e1a04000 	mov	r4, r0
4001dd4c:	e1a06001 	mov	r6, r1
4001dd50:	e59f0198 	ldr	r0, [pc, #408]	; 4001def0 <CyU3PUsbSetEpNak+0x1ac>
4001dd54:	e5d00008 	ldrb	r0, [r0, #8]
4001dd58:	e3500000 	cmp	r0, #0
4001dd5c:	1a000001 	bne	4001dd68 <CyU3PUsbSetEpNak+0x24>
4001dd60:	e3a00042 	mov	r0, #66	; 0x42
4001dd64:	e8bd8070 	pop	{r4, r5, r6, pc}
4001dd68:	e204007f 	and	r0, r4, #127	; 0x7f
4001dd6c:	e350000f 	cmp	r0, #15
4001dd70:	da000001 	ble	4001dd7c <CyU3PUsbSetEpNak+0x38>
4001dd74:	e3a00040 	mov	r0, #64	; 0x40
4001dd78:	eafffff9 	b	4001dd64 <CyU3PUsbSetEpNak+0x20>
4001dd7c:	e3e01000 	mvn	r1, #0
4001dd80:	e59f016c 	ldr	r0, [pc, #364]	; 4001def4 <CyU3PUsbSetEpNak+0x1b0>
4001dd84:	ebffb160 	bl	4000a30c <_txe_mutex_get>
4001dd88:	e3560000 	cmp	r6, #0
4001dd8c:	0a000028 	beq	4001de34 <CyU3PUsbSetEpNak+0xf0>
4001dd90:	e3140080 	tst	r4, #128	; 0x80
4001dd94:	0a000012 	beq	4001dde4 <CyU3PUsbSetEpNak+0xa0>
4001dd98:	e59f0150 	ldr	r0, [pc, #336]	; 4001def0 <CyU3PUsbSetEpNak+0x1ac>
4001dd9c:	e5d00009 	ldrb	r0, [r0, #9]
4001dda0:	e3500003 	cmp	r0, #3
4001dda4:	1a000006 	bne	4001ddc4 <CyU3PUsbSetEpNak+0x80>
4001dda8:	e59f0148 	ldr	r0, [pc, #328]	; 4001def8 <CyU3PUsbSetEpNak+0x1b4>
4001ddac:	e204100f 	and	r1, r4, #15
4001ddb0:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001ddb4:	e3855003 	orr	r5, r5, #3
4001ddb8:	e204100f 	and	r1, r4, #15
4001ddbc:	e7805101 	str	r5, [r0, r1, lsl #2]
4001ddc0:	ea000046 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001ddc4:	e59f0130 	ldr	r0, [pc, #304]	; 4001defc <CyU3PUsbSetEpNak+0x1b8>
4001ddc8:	e204100f 	and	r1, r4, #15
4001ddcc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001ddd0:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001ddd4:	e59f1120 	ldr	r1, [pc, #288]	; 4001defc <CyU3PUsbSetEpNak+0x1b8>
4001ddd8:	e204200f 	and	r2, r4, #15
4001dddc:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dde0:	ea00003e 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001dde4:	e59f0104 	ldr	r0, [pc, #260]	; 4001def0 <CyU3PUsbSetEpNak+0x1ac>
4001dde8:	e5d00009 	ldrb	r0, [r0, #9]
4001ddec:	e3500003 	cmp	r0, #3
4001ddf0:	1a000007 	bne	4001de14 <CyU3PUsbSetEpNak+0xd0>
4001ddf4:	e59f0104 	ldr	r0, [pc, #260]	; 4001df00 <CyU3PUsbSetEpNak+0x1bc>
4001ddf8:	e204100f 	and	r1, r4, #15
4001ddfc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de00:	e3805003 	orr	r5, r0, #3
4001de04:	e59f00f4 	ldr	r0, [pc, #244]	; 4001df00 <CyU3PUsbSetEpNak+0x1bc>
4001de08:	e204100f 	and	r1, r4, #15
4001de0c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001de10:	ea000032 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001de14:	e59f00e8 	ldr	r0, [pc, #232]	; 4001df04 <CyU3PUsbSetEpNak+0x1c0>
4001de18:	e204100f 	and	r1, r4, #15
4001de1c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de20:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001de24:	e59f10d8 	ldr	r1, [pc, #216]	; 4001df04 <CyU3PUsbSetEpNak+0x1c0>
4001de28:	e204200f 	and	r2, r4, #15
4001de2c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001de30:	ea00002a 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001de34:	e3140080 	tst	r4, #128	; 0x80
4001de38:	0a000014 	beq	4001de90 <CyU3PUsbSetEpNak+0x14c>
4001de3c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001def0 <CyU3PUsbSetEpNak+0x1ac>
4001de40:	e5d00009 	ldrb	r0, [r0, #9]
4001de44:	e3500003 	cmp	r0, #3
4001de48:	1a000008 	bne	4001de70 <CyU3PUsbSetEpNak+0x12c>
4001de4c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001def8 <CyU3PUsbSetEpNak+0x1b4>
4001de50:	e204100f 	and	r1, r4, #15
4001de54:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001de58:	e3c50002 	bic	r0, r5, #2
4001de5c:	e3805001 	orr	r5, r0, #1
4001de60:	e59f0090 	ldr	r0, [pc, #144]	; 4001def8 <CyU3PUsbSetEpNak+0x1b4>
4001de64:	e204100f 	and	r1, r4, #15
4001de68:	e7805101 	str	r5, [r0, r1, lsl #2]
4001de6c:	ea00001b 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001de70:	e59f0084 	ldr	r0, [pc, #132]	; 4001defc <CyU3PUsbSetEpNak+0x1b8>
4001de74:	e204100f 	and	r1, r4, #15
4001de78:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de7c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001de80:	e59f1074 	ldr	r1, [pc, #116]	; 4001defc <CyU3PUsbSetEpNak+0x1b8>
4001de84:	e204200f 	and	r2, r4, #15
4001de88:	e7810102 	str	r0, [r1, r2, lsl #2]
4001de8c:	ea000013 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001de90:	e59f0058 	ldr	r0, [pc, #88]	; 4001def0 <CyU3PUsbSetEpNak+0x1ac>
4001de94:	e5d00009 	ldrb	r0, [r0, #9]
4001de98:	e3500003 	cmp	r0, #3
4001de9c:	1a000008 	bne	4001dec4 <CyU3PUsbSetEpNak+0x180>
4001dea0:	e59f0058 	ldr	r0, [pc, #88]	; 4001df00 <CyU3PUsbSetEpNak+0x1bc>
4001dea4:	e204100f 	and	r1, r4, #15
4001dea8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001deac:	e3c00002 	bic	r0, r0, #2
4001deb0:	e3805001 	orr	r5, r0, #1
4001deb4:	e59f0044 	ldr	r0, [pc, #68]	; 4001df00 <CyU3PUsbSetEpNak+0x1bc>
4001deb8:	e204100f 	and	r1, r4, #15
4001debc:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dec0:	ea000006 	b	4001dee0 <CyU3PUsbSetEpNak+0x19c>
4001dec4:	e59f0038 	ldr	r0, [pc, #56]	; 4001df04 <CyU3PUsbSetEpNak+0x1c0>
4001dec8:	e204100f 	and	r1, r4, #15
4001decc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001ded0:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001ded4:	e59f1028 	ldr	r1, [pc, #40]	; 4001df04 <CyU3PUsbSetEpNak+0x1c0>
4001ded8:	e204200f 	and	r2, r4, #15
4001dedc:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dee0:	e59f000c 	ldr	r0, [pc, #12]	; 4001def4 <CyU3PUsbSetEpNak+0x1b0>
4001dee4:	ebffb13d 	bl	4000a3e0 <_txe_mutex_put>
4001dee8:	e3a00000 	mov	r0, #0
4001deec:	eaffff9c 	b	4001dd64 <CyU3PUsbSetEpNak+0x20>
4001def0:	40031d60 	.word	0x40031d60
4001def4:	40031f00 	.word	0x40031f00
4001def8:	e0033500 	.word	0xe0033500
4001defc:	e0031418 	.word	0xe0031418
4001df00:	e0033600 	.word	0xe0033600
4001df04:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001df08 <CyU3PUsbSetLinkPowerState>:
4001df08:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001df0c:	e1a01000 	mov	r1, r0
4001df10:	e3a030ff 	mov	r3, #255	; 0xff
4001df14:	e59f0138 	ldr	r0, [pc, #312]	; 4001e054 <CyU3PUsbSetLinkPowerState+0x14c>
4001df18:	e5d00008 	ldrb	r0, [r0, #8]
4001df1c:	e3500000 	cmp	r0, #0
4001df20:	1a000001 	bne	4001df2c <CyU3PUsbSetLinkPowerState+0x24>
4001df24:	e3a00042 	mov	r0, #66	; 0x42
4001df28:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001df2c:	e59f0120 	ldr	r0, [pc, #288]	; 4001e054 <CyU3PUsbSetLinkPowerState+0x14c>
4001df30:	e5d00008 	ldrb	r0, [r0, #8]
4001df34:	e3500005 	cmp	r0, #5
4001df38:	aa000001 	bge	4001df44 <CyU3PUsbSetLinkPowerState+0x3c>
4001df3c:	e3a00044 	mov	r0, #68	; 0x44
4001df40:	eafffff8 	b	4001df28 <CyU3PUsbSetLinkPowerState+0x20>
4001df44:	ebfffc1d 	bl	4001cfc0 <CyU3PUsbGetSpeed>
4001df48:	e3500003 	cmp	r0, #3
4001df4c:	0a000001 	beq	4001df58 <CyU3PUsbSetLinkPowerState+0x50>
4001df50:	e3a000ff 	mov	r0, #255	; 0xff
4001df54:	eafffff3 	b	4001df28 <CyU3PUsbSetLinkPowerState+0x20>
4001df58:	e59f00f8 	ldr	r0, [pc, #248]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001df5c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001df60:	e200203f 	and	r2, r0, #63	; 0x3f
4001df64:	e3510000 	cmp	r1, #0
4001df68:	0a000004 	beq	4001df80 <CyU3PUsbSetLinkPowerState+0x78>
4001df6c:	e3510001 	cmp	r1, #1
4001df70:	0a000015 	beq	4001dfcc <CyU3PUsbSetLinkPowerState+0xc4>
4001df74:	e3510002 	cmp	r1, #2
4001df78:	1a00002f 	bne	4001e03c <CyU3PUsbSetLinkPowerState+0x134>
4001df7c:	ea000020 	b	4001e004 <CyU3PUsbSetLinkPowerState+0xfc>
4001df80:	e1a00000 	nop			; (mov r0, r0)
4001df84:	e59f00cc 	ldr	r0, [pc, #204]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001df88:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001df8c:	e3100c02 	tst	r0, #512	; 0x200
4001df90:	1a00000b 	bne	4001dfc4 <CyU3PUsbSetLinkPowerState+0xbc>
4001df94:	e59f00bc 	ldr	r0, [pc, #188]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001df98:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001df9c:	e200203f 	and	r2, r0, #63	; 0x3f
4001dfa0:	e3520011 	cmp	r2, #17
4001dfa4:	ba000006 	blt	4001dfc4 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfa8:	e3520013 	cmp	r2, #19
4001dfac:	ca000004 	bgt	4001dfc4 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfb0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001dfb4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dfb8:	e3800c02 	orr	r0, r0, #512	; 0x200
4001dfbc:	e59fc094 	ldr	ip, [pc, #148]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001dfc0:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dfc4:	e3a03000 	mov	r3, #0
4001dfc8:	ea00001e 	b	4001e048 <CyU3PUsbSetLinkPowerState+0x140>
4001dfcc:	e1a00000 	nop			; (mov r0, r0)
4001dfd0:	e3520010 	cmp	r2, #16
4001dfd4:	1a000009 	bne	4001e000 <CyU3PUsbSetLinkPowerState+0xf8>
4001dfd8:	e59f0074 	ldr	r0, [pc, #116]	; 4001e054 <CyU3PUsbSetLinkPowerState+0x14c>
4001dfdc:	e5d00006 	ldrb	r0, [r0, #6]
4001dfe0:	e3100004 	tst	r0, #4
4001dfe4:	0a000005 	beq	4001e000 <CyU3PUsbSetLinkPowerState+0xf8>
4001dfe8:	e59f0068 	ldr	r0, [pc, #104]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001dfec:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dff0:	e3800001 	orr	r0, r0, #1
4001dff4:	e59fc05c 	ldr	ip, [pc, #92]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001dff8:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dffc:	e3a03000 	mov	r3, #0
4001e000:	ea000010 	b	4001e048 <CyU3PUsbSetLinkPowerState+0x140>
4001e004:	e1a00000 	nop			; (mov r0, r0)
4001e008:	e3520010 	cmp	r2, #16
4001e00c:	1a000009 	bne	4001e038 <CyU3PUsbSetLinkPowerState+0x130>
4001e010:	e59f003c 	ldr	r0, [pc, #60]	; 4001e054 <CyU3PUsbSetLinkPowerState+0x14c>
4001e014:	e5d00006 	ldrb	r0, [r0, #6]
4001e018:	e3100008 	tst	r0, #8
4001e01c:	0a000005 	beq	4001e038 <CyU3PUsbSetLinkPowerState+0x130>
4001e020:	e59f0030 	ldr	r0, [pc, #48]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001e024:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e028:	e3800002 	orr	r0, r0, #2
4001e02c:	e59fc024 	ldr	ip, [pc, #36]	; 4001e058 <CyU3PUsbSetLinkPowerState+0x150>
4001e030:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e034:	e3a03000 	mov	r3, #0
4001e038:	ea000002 	b	4001e048 <CyU3PUsbSetLinkPowerState+0x140>
4001e03c:	e1a00000 	nop			; (mov r0, r0)
4001e040:	e3a03040 	mov	r3, #64	; 0x40
4001e044:	e1a00000 	nop			; (mov r0, r0)
4001e048:	e1a00000 	nop			; (mov r0, r0)
4001e04c:	e1a00003 	mov	r0, r3
4001e050:	eaffffb4 	b	4001df28 <CyU3PUsbSetLinkPowerState+0x20>
4001e054:	40031d60 	.word	0x40031d60
4001e058:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001e05c <CyU3PUsbStall>:
4001e05c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e060:	e1a04000 	mov	r4, r0
4001e064:	e1a05001 	mov	r5, r1
4001e068:	e1a06002 	mov	r6, r2
4001e06c:	e204700f 	and	r7, r4, #15
4001e070:	e3a08000 	mov	r8, #0
4001e074:	e59f0344 	ldr	r0, [pc, #836]	; 4001e3c0 <CyU3PUsbStall+0x364>
4001e078:	e5d00008 	ldrb	r0, [r0, #8]
4001e07c:	e3500000 	cmp	r0, #0
4001e080:	1a000001 	bne	4001e08c <CyU3PUsbStall+0x30>
4001e084:	e3a00042 	mov	r0, #66	; 0x42
4001e088:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001e08c:	e204007f 	and	r0, r4, #127	; 0x7f
4001e090:	e350000f 	cmp	r0, #15
4001e094:	da000001 	ble	4001e0a0 <CyU3PUsbStall+0x44>
4001e098:	e3a00040 	mov	r0, #64	; 0x40
4001e09c:	eafffff9 	b	4001e088 <CyU3PUsbStall+0x2c>
4001e0a0:	e3570000 	cmp	r7, #0
4001e0a4:	1a000003 	bne	4001e0b8 <CyU3PUsbStall+0x5c>
4001e0a8:	e3550000 	cmp	r5, #0
4001e0ac:	1a000001 	bne	4001e0b8 <CyU3PUsbStall+0x5c>
4001e0b0:	e3a00040 	mov	r0, #64	; 0x40
4001e0b4:	eafffff3 	b	4001e088 <CyU3PUsbStall+0x2c>
4001e0b8:	e59f0300 	ldr	r0, [pc, #768]	; 4001e3c0 <CyU3PUsbStall+0x364>
4001e0bc:	e5d00009 	ldrb	r0, [r0, #9]
4001e0c0:	e3500000 	cmp	r0, #0
4001e0c4:	1a000001 	bne	4001e0d0 <CyU3PUsbStall+0x74>
4001e0c8:	e3a00000 	mov	r0, #0
4001e0cc:	eaffffed 	b	4001e088 <CyU3PUsbStall+0x2c>
4001e0d0:	e3e01000 	mvn	r1, #0
4001e0d4:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e3c4 <CyU3PUsbStall+0x368>
4001e0d8:	ebffb08b 	bl	4000a30c <_txe_mutex_get>
4001e0dc:	e3570000 	cmp	r7, #0
4001e0e0:	1a000037 	bne	4001e1c4 <CyU3PUsbStall+0x168>
4001e0e4:	ebfffbbd 	bl	4001cfe0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001e0e8:	e3500000 	cmp	r0, #0
4001e0ec:	0a000003 	beq	4001e100 <CyU3PUsbStall+0xa4>
4001e0f0:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e3c4 <CyU3PUsbStall+0x368>
4001e0f4:	ebffb0b9 	bl	4000a3e0 <_txe_mutex_put>
4001e0f8:	e3a00000 	mov	r0, #0
4001e0fc:	eaffffe1 	b	4001e088 <CyU3PUsbStall+0x2c>
4001e100:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e3c0 <CyU3PUsbStall+0x364>
4001e104:	e5d00009 	ldrb	r0, [r0, #9]
4001e108:	e3500003 	cmp	r0, #3
4001e10c:	1a00001b 	bne	4001e180 <CyU3PUsbStall+0x124>
4001e110:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e3c8 <CyU3PUsbStall+0x36c>
4001e114:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e118:	e3800004 	orr	r0, r0, #4
4001e11c:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e3c8 <CyU3PUsbStall+0x36c>
4001e120:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e124:	e1a00001 	mov	r0, r1
4001e128:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e12c:	e3800004 	orr	r0, r0, #4
4001e130:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e134:	eb00104b 	bl	40022268 <CyU3PVicDisableAllInterrupts>
4001e138:	e1a0a000 	mov	sl, r0
4001e13c:	e3a00001 	mov	r0, #1
4001e140:	ebffd5ce 	bl	40013880 <CyU3PBusyWait>
4001e144:	e59f027c 	ldr	r0, [pc, #636]	; 4001e3c8 <CyU3PUsbStall+0x36c>
4001e148:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e14c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e150:	e59f1270 	ldr	r1, [pc, #624]	; 4001e3c8 <CyU3PUsbStall+0x36c>
4001e154:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e158:	e1a0000a 	mov	r0, sl
4001e15c:	eb00104f 	bl	400222a0 <CyU3PVicEnableInterrupts>
4001e160:	e3a00000 	mov	r0, #0
4001e164:	e59f1260 	ldr	r1, [pc, #608]	; 4001e3cc <CyU3PUsbStall+0x370>
4001e168:	e5810000 	str	r0, [r1]
4001e16c:	e59f125c 	ldr	r1, [pc, #604]	; 4001e3d0 <CyU3PUsbStall+0x374>
4001e170:	e5810000 	str	r0, [r1]
4001e174:	e59f0258 	ldr	r0, [pc, #600]	; 4001e3d4 <CyU3PUsbStall+0x378>
4001e178:	ebffb345 	bl	4000ae94 <_txe_timer_deactivate>
4001e17c:	ea00000c 	b	4001e1b4 <CyU3PUsbStall+0x158>
4001e180:	e59f0250 	ldr	r0, [pc, #592]	; 4001e3d8 <CyU3PUsbStall+0x37c>
4001e184:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e188:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e18c:	e59f1244 	ldr	r1, [pc, #580]	; 4001e3d8 <CyU3PUsbStall+0x37c>
4001e190:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e194:	e1a00001 	mov	r0, r1
4001e198:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e19c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e1a0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e1a4:	e1a00001 	mov	r0, r1
4001e1a8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e1ac:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001e1b0:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e1b4:	e59f0208 	ldr	r0, [pc, #520]	; 4001e3c4 <CyU3PUsbStall+0x368>
4001e1b8:	ebffb088 	bl	4000a3e0 <_txe_mutex_put>
4001e1bc:	e3a00000 	mov	r0, #0
4001e1c0:	eaffffb0 	b	4001e088 <CyU3PUsbStall+0x2c>
4001e1c4:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e3c0 <CyU3PUsbStall+0x364>
4001e1c8:	e5d00009 	ldrb	r0, [r0, #9]
4001e1cc:	e3500003 	cmp	r0, #3
4001e1d0:	1a000033 	bne	4001e2a4 <CyU3PUsbStall+0x248>
4001e1d4:	e3140080 	tst	r4, #128	; 0x80
4001e1d8:	0a000017 	beq	4001e23c <CyU3PUsbStall+0x1e0>
4001e1dc:	e3550000 	cmp	r5, #0
4001e1e0:	0a00000a 	beq	4001e210 <CyU3PUsbStall+0x1b4>
4001e1e4:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e3dc <CyU3PUsbStall+0x380>
4001e1e8:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e1ec:	e3899005 	orr	r9, r9, #5
4001e1f0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e1f4:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001e1f8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e1fc:	e1a01800 	lsl	r1, r0, #16
4001e200:	e1a01821 	lsr	r1, r1, #16
4001e204:	e1a00004 	mov	r0, r4
4001e208:	ebfffdde 	bl	4001d988 <CyU3PUsbSendErdy>
4001e20c:	ea000041 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e210:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e3dc <CyU3PUsbStall+0x380>
4001e214:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e218:	e3899011 	orr	r9, r9, #17
4001e21c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e220:	e3a00001 	mov	r0, #1
4001e224:	ebffd595 	bl	40013880 <CyU3PBusyWait>
4001e228:	e3c90014 	bic	r0, r9, #20
4001e22c:	e3809001 	orr	r9, r0, #1
4001e230:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e3dc <CyU3PUsbStall+0x380>
4001e234:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e238:	ea000036 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e23c:	e3550000 	cmp	r5, #0
4001e240:	0a00000b 	beq	4001e274 <CyU3PUsbStall+0x218>
4001e244:	e59f0194 	ldr	r0, [pc, #404]	; 4001e3e0 <CyU3PUsbStall+0x384>
4001e248:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e24c:	e3809005 	orr	r9, r0, #5
4001e250:	e59f0188 	ldr	r0, [pc, #392]	; 4001e3e0 <CyU3PUsbStall+0x384>
4001e254:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e258:	e28000c0 	add	r0, r0, #192	; 0xc0
4001e25c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e260:	e1a01800 	lsl	r1, r0, #16
4001e264:	e1a01821 	lsr	r1, r1, #16
4001e268:	e1a00004 	mov	r0, r4
4001e26c:	ebfffdc5 	bl	4001d988 <CyU3PUsbSendErdy>
4001e270:	ea000028 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e274:	e59f0164 	ldr	r0, [pc, #356]	; 4001e3e0 <CyU3PUsbStall+0x384>
4001e278:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e27c:	e3809011 	orr	r9, r0, #17
4001e280:	e59f0158 	ldr	r0, [pc, #344]	; 4001e3e0 <CyU3PUsbStall+0x384>
4001e284:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e288:	e3a00001 	mov	r0, #1
4001e28c:	ebffd57b 	bl	40013880 <CyU3PBusyWait>
4001e290:	e3c90014 	bic	r0, r9, #20
4001e294:	e3809001 	orr	r9, r0, #1
4001e298:	e59f0140 	ldr	r0, [pc, #320]	; 4001e3e0 <CyU3PUsbStall+0x384>
4001e29c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e2a0:	ea00001c 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e2a4:	e3140080 	tst	r4, #128	; 0x80
4001e2a8:	0a00000d 	beq	4001e2e4 <CyU3PUsbStall+0x288>
4001e2ac:	e3550000 	cmp	r5, #0
4001e2b0:	0a000005 	beq	4001e2cc <CyU3PUsbStall+0x270>
4001e2b4:	e59f0128 	ldr	r0, [pc, #296]	; 4001e3e4 <CyU3PUsbStall+0x388>
4001e2b8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2bc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e2c0:	e59f111c 	ldr	r1, [pc, #284]	; 4001e3e4 <CyU3PUsbStall+0x388>
4001e2c4:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e2c8:	ea000012 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e2cc:	e59f0110 	ldr	r0, [pc, #272]	; 4001e3e4 <CyU3PUsbStall+0x388>
4001e2d0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2d4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e2d8:	e59f1104 	ldr	r1, [pc, #260]	; 4001e3e4 <CyU3PUsbStall+0x388>
4001e2dc:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e2e0:	ea00000c 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e2e4:	e3550000 	cmp	r5, #0
4001e2e8:	0a000005 	beq	4001e304 <CyU3PUsbStall+0x2a8>
4001e2ec:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e3e8 <CyU3PUsbStall+0x38c>
4001e2f0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2f4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e2f8:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e3e8 <CyU3PUsbStall+0x38c>
4001e2fc:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e300:	ea000004 	b	4001e318 <CyU3PUsbStall+0x2bc>
4001e304:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e3e8 <CyU3PUsbStall+0x38c>
4001e308:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e30c:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e310:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e3e8 <CyU3PUsbStall+0x38c>
4001e314:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e318:	e3560000 	cmp	r6, #0
4001e31c:	0a000023 	beq	4001e3b0 <CyU3PUsbStall+0x354>
4001e320:	e3550000 	cmp	r5, #0
4001e324:	1a000021 	bne	4001e3b0 <CyU3PUsbStall+0x354>
4001e328:	e59f0090 	ldr	r0, [pc, #144]	; 4001e3c0 <CyU3PUsbStall+0x364>
4001e32c:	e5d00009 	ldrb	r0, [r0, #9]
4001e330:	e3500003 	cmp	r0, #3
4001e334:	1a00000b 	bne	4001e368 <CyU3PUsbStall+0x30c>
4001e338:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001e33c:	e3140080 	tst	r4, #128	; 0x80
4001e340:	0a000000 	beq	4001e348 <CyU3PUsbStall+0x2ec>
4001e344:	e3888010 	orr	r8, r8, #16
4001e348:	e59f0078 	ldr	r0, [pc, #120]	; 4001e3c8 <CyU3PUsbStall+0x36c>
4001e34c:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e350:	e1a00000 	nop			; (mov r0, r0)
4001e354:	e59f006c 	ldr	r0, [pc, #108]	; 4001e3c8 <CyU3PUsbStall+0x36c>
4001e358:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e35c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e360:	0afffffb 	beq	4001e354 <CyU3PUsbStall+0x2f8>
4001e364:	ea000011 	b	4001e3b0 <CyU3PUsbStall+0x354>
4001e368:	e3140080 	tst	r4, #128	; 0x80
4001e36c:	0a000000 	beq	4001e374 <CyU3PUsbStall+0x318>
4001e370:	e3877010 	orr	r7, r7, #16
4001e374:	e59f005c 	ldr	r0, [pc, #92]	; 4001e3d8 <CyU3PUsbStall+0x37c>
4001e378:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e37c:	e1a00000 	nop			; (mov r0, r0)
4001e380:	e59f0050 	ldr	r0, [pc, #80]	; 4001e3d8 <CyU3PUsbStall+0x37c>
4001e384:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e388:	e3100c01 	tst	r0, #256	; 0x100
4001e38c:	0afffffb 	beq	4001e380 <CyU3PUsbStall+0x324>
4001e390:	e3877020 	orr	r7, r7, #32
4001e394:	e59f003c 	ldr	r0, [pc, #60]	; 4001e3d8 <CyU3PUsbStall+0x37c>
4001e398:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e39c:	e1a00000 	nop			; (mov r0, r0)
4001e3a0:	e59f0030 	ldr	r0, [pc, #48]	; 4001e3d8 <CyU3PUsbStall+0x37c>
4001e3a4:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e3a8:	e3100c01 	tst	r0, #256	; 0x100
4001e3ac:	0afffffb 	beq	4001e3a0 <CyU3PUsbStall+0x344>
4001e3b0:	e59f000c 	ldr	r0, [pc, #12]	; 4001e3c4 <CyU3PUsbStall+0x368>
4001e3b4:	ebffb009 	bl	4000a3e0 <_txe_mutex_put>
4001e3b8:	e3a00000 	mov	r0, #0
4001e3bc:	eaffff31 	b	4001e088 <CyU3PUsbStall+0x2c>
4001e3c0:	40031d60 	.word	0x40031d60
4001e3c4:	40031f00 	.word	0x40031f00
4001e3c8:	e0033000 	.word	0xe0033000
4001e3cc:	40030dd0 	.word	0x40030dd0
4001e3d0:	40030dd4 	.word	0x40030dd4
4001e3d4:	400326c0 	.word	0x400326c0
4001e3d8:	e0031000 	.word	0xe0031000
4001e3dc:	e0033500 	.word	0xe0033500
4001e3e0:	e0033600 	.word	0xe0033600
4001e3e4:	e0031418 	.word	0xe0031418
4001e3e8:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e3ec <CyU3PUsbStart>:
4001e3ec:	e92d4070 	push	{r4, r5, r6, lr}
4001e3f0:	e59f0324 	ldr	r0, [pc, #804]	; 4001e71c <CyU3PUsbStart+0x330>
4001e3f4:	e5900000 	ldr	r0, [r0]
4001e3f8:	e3500000 	cmp	r0, #0
4001e3fc:	1a000001 	bne	4001e408 <CyU3PUsbStart+0x1c>
4001e400:	e3a00010 	mov	r0, #16
4001e404:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e408:	e59f0310 	ldr	r0, [pc, #784]	; 4001e720 <CyU3PUsbStart+0x334>
4001e40c:	e5d00008 	ldrb	r0, [r0, #8]
4001e410:	e3500000 	cmp	r0, #0
4001e414:	0a000001 	beq	4001e420 <CyU3PUsbStart+0x34>
4001e418:	e3a00043 	mov	r0, #67	; 0x43
4001e41c:	eafffff8 	b	4001e404 <CyU3PUsbStart+0x18>
4001e420:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e724 <CyU3PUsbStart+0x338>
4001e424:	e5900000 	ldr	r0, [r0]
4001e428:	e3500000 	cmp	r0, #0
4001e42c:	0a00006b 	beq	4001e5e0 <CyU3PUsbStart+0x1f4>
4001e430:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e728 <CyU3PUsbStart+0x33c>
4001e434:	eb00059e 	bl	4001fab4 <CyU3PUibSocketInit>
4001e438:	ebfff98c 	bl	4001ca70 <CyU3PUsbCreateDmaChannels>
4001e43c:	e1a04000 	mov	r4, r0
4001e440:	e3540000 	cmp	r4, #0
4001e444:	0a000001 	beq	4001e450 <CyU3PUsbStart+0x64>
4001e448:	e1a00004 	mov	r0, r4
4001e44c:	eaffffec 	b	4001e404 <CyU3PUsbStart+0x18>
4001e450:	e3a00001 	mov	r0, #1
4001e454:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e720 <CyU3PUsbStart+0x334>
4001e458:	e5c10008 	strb	r0, [r1, #8]
4001e45c:	e5950004 	ldr	r0, [r5, #4]
4001e460:	e5c10009 	strb	r0, [r1, #9]
4001e464:	e1a00005 	mov	r0, r5
4001e468:	ebfffaef 	bl	4001d02c <CyU3PUsbLoadBootloaderDescs>
4001e46c:	e1a04000 	mov	r4, r0
4001e470:	e3540000 	cmp	r4, #0
4001e474:	0a000001 	beq	4001e480 <CyU3PUsbStart+0x94>
4001e478:	e1a00004 	mov	r0, r4
4001e47c:	eaffffe0 	b	4001e404 <CyU3PUsbStart+0x18>
4001e480:	e3a00006 	mov	r0, #6
4001e484:	e59f1294 	ldr	r1, [pc, #660]	; 4001e720 <CyU3PUsbStart+0x334>
4001e488:	e5c10008 	strb	r0, [r1, #8]
4001e48c:	e2810000 	add	r0, r1, #0
4001e490:	e5d00009 	ldrb	r0, [r0, #9]
4001e494:	e3500003 	cmp	r0, #3
4001e498:	1a000002 	bne	4001e4a8 <CyU3PUsbStart+0xbc>
4001e49c:	e3a00001 	mov	r0, #1
4001e4a0:	e59f1284 	ldr	r1, [pc, #644]	; 4001e72c <CyU3PUsbStart+0x340>
4001e4a4:	e5810000 	str	r0, [r1]
4001e4a8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e4ac:	e59f127c 	ldr	r1, [pc, #636]	; 4001e730 <CyU3PUsbStart+0x344>
4001e4b0:	e1500001 	cmp	r0, r1
4001e4b4:	1a000015 	bne	4001e510 <CyU3PUsbStart+0x124>
4001e4b8:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e4bc:	e59f1270 	ldr	r1, [pc, #624]	; 4001e734 <CyU3PUsbStart+0x348>
4001e4c0:	e1500001 	cmp	r0, r1
4001e4c4:	3a000007 	bcc	4001e4e8 <CyU3PUsbStart+0xfc>
4001e4c8:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e4cc:	e3500000 	cmp	r0, #0
4001e4d0:	0a000001 	beq	4001e4dc <CyU3PUsbStart+0xf0>
4001e4d4:	e3a00001 	mov	r0, #1
4001e4d8:	ea000000 	b	4001e4e0 <CyU3PUsbStart+0xf4>
4001e4dc:	e3a00000 	mov	r0, #0
4001e4e0:	e59f1238 	ldr	r1, [pc, #568]	; 4001e720 <CyU3PUsbStart+0x334>
4001e4e4:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e4e8:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e4ec:	e59f1244 	ldr	r1, [pc, #580]	; 4001e738 <CyU3PUsbStart+0x34c>
4001e4f0:	e1500001 	cmp	r0, r1
4001e4f4:	3a000008 	bcc	4001e51c <CyU3PUsbStart+0x130>
4001e4f8:	e59f023c 	ldr	r0, [pc, #572]	; 4001e73c <CyU3PUsbStart+0x350>
4001e4fc:	e5900000 	ldr	r0, [r0]
4001e500:	e3800002 	orr	r0, r0, #2
4001e504:	e59f1230 	ldr	r1, [pc, #560]	; 4001e73c <CyU3PUsbStart+0x350>
4001e508:	e5810000 	str	r0, [r1]
4001e50c:	ea000002 	b	4001e51c <CyU3PUsbStart+0x130>
4001e510:	e3a00001 	mov	r0, #1
4001e514:	e59f1204 	ldr	r1, [pc, #516]	; 4001e720 <CyU3PUsbStart+0x334>
4001e518:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e51c:	e3e00000 	mvn	r0, #0
4001e520:	e59f1218 	ldr	r1, [pc, #536]	; 4001e740 <CyU3PUsbStart+0x354>
4001e524:	e5810004 	str	r0, [r1, #4]
4001e528:	e59f0214 	ldr	r0, [pc, #532]	; 4001e744 <CyU3PUsbStart+0x358>
4001e52c:	e5810008 	str	r0, [r1, #8]
4001e530:	e3e00000 	mvn	r0, #0
4001e534:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e538:	e59f0208 	ldr	r0, [pc, #520]	; 4001e748 <CyU3PUsbStart+0x35c>
4001e53c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e540:	e3a00000 	mov	r0, #0
4001e544:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e548:	e3e00000 	mvn	r0, #0
4001e54c:	e0811680 	add	r1, r1, r0, lsl #13
4001e550:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e554:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e74c <CyU3PUsbStart+0x360>
4001e558:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e55c:	e3e00000 	mvn	r0, #0
4001e560:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e564:	e3a00000 	mov	r0, #0
4001e568:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e56c:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e570:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e574:	e5810004 	str	r0, [r1, #4]
4001e578:	e3a00008 	mov	r0, #8
4001e57c:	eb000f42 	bl	4002228c <CyU3PVicEnableInt>
4001e580:	e3a00009 	mov	r0, #9
4001e584:	eb000f40 	bl	4002228c <CyU3PVicEnableInt>
4001e588:	ebfffa8c 	bl	4001cfc0 <CyU3PUsbGetSpeed>
4001e58c:	e1a06000 	mov	r6, r0
4001e590:	eb0006b5 	bl	4002006c <CyU3PUsbEpPrepare>
4001e594:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e73c <CyU3PUsbStart+0x350>
4001e598:	e5900000 	ldr	r0, [r0]
4001e59c:	e3100002 	tst	r0, #2
4001e5a0:	1a000003 	bne	4001e5b4 <CyU3PUsbStart+0x1c8>
4001e5a4:	e3e00000 	mvn	r0, #0
4001e5a8:	e5850000 	str	r0, [r5]
4001e5ac:	e3a00000 	mov	r0, #0
4001e5b0:	e585000c 	str	r0, [r5, #12]
4001e5b4:	e3e00000 	mvn	r0, #0
4001e5b8:	e59f1190 	ldr	r1, [pc, #400]	; 4001e750 <CyU3PUsbStart+0x364>
4001e5bc:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e5c0:	e3a00b01 	mov	r0, #1024	; 0x400
4001e5c4:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e5c8:	e59f1150 	ldr	r1, [pc, #336]	; 4001e720 <CyU3PUsbStart+0x334>
4001e5cc:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e5d0:	e3a00015 	mov	r0, #21
4001e5d4:	eb000f2c 	bl	4002228c <CyU3PVicEnableInt>
4001e5d8:	e3a000fe 	mov	r0, #254	; 0xfe
4001e5dc:	eaffff88 	b	4001e404 <CyU3PUsbStart+0x18>
4001e5e0:	e1a00000 	nop			; (mov r0, r0)
4001e5e4:	e59f0168 	ldr	r0, [pc, #360]	; 4001e754 <CyU3PUsbStart+0x368>
4001e5e8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e5ec:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e5f0:	e59f115c 	ldr	r1, [pc, #348]	; 4001e754 <CyU3PUsbStart+0x368>
4001e5f4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e5f8:	e3a00002 	mov	r0, #2
4001e5fc:	ebffd49f 	bl	40013880 <CyU3PBusyWait>
4001e600:	e59f014c 	ldr	r0, [pc, #332]	; 4001e754 <CyU3PUsbStart+0x368>
4001e604:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e608:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e60c:	e59f1140 	ldr	r1, [pc, #320]	; 4001e754 <CyU3PUsbStart+0x368>
4001e610:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e614:	e1a00001 	mov	r0, r1
4001e618:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e61c:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e620:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e624:	e1a00001 	mov	r0, r1
4001e628:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e62c:	e3800008 	orr	r0, r0, #8
4001e630:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e634:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e638:	e5900008 	ldr	r0, [r0, #8]
4001e63c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e640:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e644:	e5810008 	str	r0, [r1, #8]
4001e648:	e3a00002 	mov	r0, #2
4001e64c:	ebffd48b 	bl	40013880 <CyU3PBusyWait>
4001e650:	ebfff645 	bl	4001bf6c <CyU3POtgIsDeviceMode>
4001e654:	e3500000 	cmp	r0, #0
4001e658:	0a000002 	beq	4001e668 <CyU3PUsbStart+0x27c>
4001e65c:	ebfffa5b 	bl	4001cfd0 <CyU3PUsbHostIsStarted>
4001e660:	e3500000 	cmp	r0, #0
4001e664:	0a000001 	beq	4001e670 <CyU3PUsbStart+0x284>
4001e668:	e3a00047 	mov	r0, #71	; 0x47
4001e66c:	eaffff64 	b	4001e404 <CyU3PUsbStart+0x18>
4001e670:	e3a01002 	mov	r1, #2
4001e674:	e1a00001 	mov	r0, r1
4001e678:	ebfff820 	bl	4001c700 <CyU3PSetUsbCoreClock>
4001e67c:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e758 <CyU3PUsbStart+0x36c>
4001e680:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e75c <CyU3PUsbStart+0x370>
4001e684:	e5810000 	str	r0, [r1]
4001e688:	ebfff633 	bl	4001bf5c <CyU3POtgGetMode>
4001e68c:	e3500000 	cmp	r0, #0
4001e690:	1a000003 	bne	4001e6a4 <CyU3PUsbStart+0x2b8>
4001e694:	ebfffc09 	bl	4001d6c0 <CyU3PUsbPowerOn>
4001e698:	e3a00000 	mov	r0, #0
4001e69c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e754 <CyU3PUsbStart+0x368>
4001e6a0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e6a4:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e760 <CyU3PUsbStart+0x374>
4001e6a8:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e754 <CyU3PUsbStart+0x368>
4001e6ac:	e5810008 	str	r0, [r1, #8]
4001e6b0:	e00108c0 	and	r0, r1, r0, asr #17
4001e6b4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e6b8:	e3800008 	orr	r0, r0, #8
4001e6bc:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e6c0:	eb000662 	bl	40020050 <CyU3PUsbDescInit>
4001e6c4:	ebfff8e9 	bl	4001ca70 <CyU3PUsbCreateDmaChannels>
4001e6c8:	e1a04000 	mov	r4, r0
4001e6cc:	e3540000 	cmp	r4, #0
4001e6d0:	0a000001 	beq	4001e6dc <CyU3PUsbStart+0x2f0>
4001e6d4:	e1a00004 	mov	r0, r4
4001e6d8:	eaffff49 	b	4001e404 <CyU3PUsbStart+0x18>
4001e6dc:	e3a00001 	mov	r0, #1
4001e6e0:	e59f1038 	ldr	r1, [pc, #56]	; 4001e720 <CyU3PUsbStart+0x334>
4001e6e4:	e5c10008 	strb	r0, [r1, #8]
4001e6e8:	e2810000 	add	r0, r1, #0
4001e6ec:	e5d00007 	ldrb	r0, [r0, #7]
4001e6f0:	e3500001 	cmp	r0, #1
4001e6f4:	1a000002 	bne	4001e704 <CyU3PUsbStart+0x318>
4001e6f8:	e3a00003 	mov	r0, #3
4001e6fc:	e5c10008 	strb	r0, [r1, #8]
4001e700:	ea000002 	b	4001e710 <CyU3PUsbStart+0x324>
4001e704:	e3a00002 	mov	r0, #2
4001e708:	e59f1010 	ldr	r1, [pc, #16]	; 4001e720 <CyU3PUsbStart+0x334>
4001e70c:	e5c10008 	strb	r0, [r1, #8]
4001e710:	ebfff81b 	bl	4001c784 <CyU3PUibInit>
4001e714:	e1a00004 	mov	r0, r4
4001e718:	eaffff39 	b	4001e404 <CyU3PUsbStart+0x18>
4001e71c:	40030d80 	.word	0x40030d80
4001e720:	40031d60 	.word	0x40031d60
4001e724:	40030c88 	.word	0x40030c88
4001e728:	40002000 	.word	0x40002000
4001e72c:	40030d90 	.word	0x40030d90
4001e730:	42335846 	.word	0x42335846
4001e734:	00010101 	.word	0x00010101
4001e738:	00010200 	.word	0x00010200
4001e73c:	40030d64 	.word	0x40030d64
4001e740:	e0033000 	.word	0xe0033000
4001e744:	00038081 	.word	0x00038081
4001e748:	00004a3d 	.word	0x00004a3d
4001e74c:	0000095c 	.word	0x0000095c
4001e750:	e0051000 	.word	0xe0051000
4001e754:	e0031000 	.word	0xe0031000
4001e758:	de001011 	.word	0xde001011
4001e75c:	e0050000 	.word	0xe0050000
4001e760:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e764 <GetUsbLinkActive>:
4001e764:	e92d4010 	push	{r4, lr}
4001e768:	e59f0064 	ldr	r0, [pc, #100]	; 4001e7d4 <GetUsbLinkActive+0x70>
4001e76c:	e5d00009 	ldrb	r0, [r0, #9]
4001e770:	e3500003 	cmp	r0, #3
4001e774:	1a000015 	bne	4001e7d0 <GetUsbLinkActive+0x6c>
4001e778:	e59f0058 	ldr	r0, [pc, #88]	; 4001e7d8 <GetUsbLinkActive+0x74>
4001e77c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e780:	e3c00004 	bic	r0, r0, #4
4001e784:	e59f104c 	ldr	r1, [pc, #76]	; 4001e7d8 <GetUsbLinkActive+0x74>
4001e788:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e78c:	e1a00001 	mov	r0, r1
4001e790:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e794:	e3c00004 	bic	r0, r0, #4
4001e798:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e79c:	e59f0030 	ldr	r0, [pc, #48]	; 4001e7d4 <GetUsbLinkActive+0x70>
4001e7a0:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e7a4:	e3500000 	cmp	r0, #0
4001e7a8:	1a000008 	bne	4001e7d0 <GetUsbLinkActive+0x6c>
4001e7ac:	e1a00001 	mov	r0, r1
4001e7b0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e7b4:	e200403f 	and	r4, r0, #63	; 0x3f
4001e7b8:	e3540011 	cmp	r4, #17
4001e7bc:	0a000001 	beq	4001e7c8 <GetUsbLinkActive+0x64>
4001e7c0:	e3540012 	cmp	r4, #18
4001e7c4:	1a000001 	bne	4001e7d0 <GetUsbLinkActive+0x6c>
4001e7c8:	e3a00000 	mov	r0, #0
4001e7cc:	ebfffdcd 	bl	4001df08 <CyU3PUsbSetLinkPowerState>
4001e7d0:	e8bd8010 	pop	{r4, pc}
4001e7d4:	40031d60 	.word	0x40031d60
4001e7d8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e7dc <CyU3PHsGrantIntrHandler>:
4001e7dc:	e92d4010 	push	{r4, lr}
4001e7e0:	e59f005c 	ldr	r0, [pc, #92]	; 4001e844 <CyU3PHsGrantIntrHandler+0x68>
4001e7e4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e7e8:	e3100080 	tst	r0, #128	; 0x80
4001e7ec:	0a000013 	beq	4001e840 <CyU3PHsGrantIntrHandler+0x64>
4001e7f0:	e59f0050 	ldr	r0, [pc, #80]	; 4001e848 <CyU3PHsGrantIntrHandler+0x6c>
4001e7f4:	e5900014 	ldr	r0, [r0, #20]
4001e7f8:	e59f1048 	ldr	r1, [pc, #72]	; 4001e848 <CyU3PHsGrantIntrHandler+0x6c>
4001e7fc:	e581000c 	str	r0, [r1, #12]
4001e800:	e2810000 	add	r0, r1, #0
4001e804:	e5900018 	ldr	r0, [r0, #24]
4001e808:	e5810010 	str	r0, [r1, #16]
4001e80c:	e59f0038 	ldr	r0, [pc, #56]	; 4001e84c <CyU3PHsGrantIntrHandler+0x70>
4001e810:	e5900000 	ldr	r0, [r0]
4001e814:	e3500000 	cmp	r0, #0
4001e818:	0a000004 	beq	4001e830 <CyU3PHsGrantIntrHandler+0x54>
4001e81c:	e3a01001 	mov	r1, #1
4001e820:	e3a00006 	mov	r0, #6
4001e824:	e59f2020 	ldr	r2, [pc, #32]	; 4001e84c <CyU3PHsGrantIntrHandler+0x70>
4001e828:	e5922000 	ldr	r2, [r2]
4001e82c:	e12fff32 	blx	r2
4001e830:	e3a00002 	mov	r0, #2
4001e834:	e59f1014 	ldr	r1, [pc, #20]	; 4001e850 <CyU3PHsGrantIntrHandler+0x74>
4001e838:	e5c10009 	strb	r0, [r1, #9]
4001e83c:	eb00060a 	bl	4002006c <CyU3PUsbEpPrepare>
4001e840:	e8bd8010 	pop	{r4, pc}
4001e844:	e0031000 	.word	0xe0031000
4001e848:	40031fb8 	.word	0x40031fb8
4001e84c:	40030dbc 	.word	0x40030dbc
4001e850:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUibApplicationDefine:

4001e854 <CyU3PUibApplicationDefine>:
4001e854:	e92d4030 	push	{r4, r5, lr}
4001e858:	e24dd01c 	sub	sp, sp, #28
4001e85c:	eb000178 	bl	4001ee44 <CyU3PUibInitVars>
4001e860:	e3a00b01 	mov	r0, #1024	; 0x400
4001e864:	ebff9382 	bl	40003674 <CyU3PMemAlloc>
4001e868:	e1a05000 	mov	r5, r0
4001e86c:	e3550000 	cmp	r5, #0
4001e870:	0a00004f 	beq	4001e9b4 <CyU3PUibApplicationDefine+0x160>
4001e874:	e3a030a8 	mov	r3, #168	; 0xa8
4001e878:	e3a02000 	mov	r2, #0
4001e87c:	e3a00004 	mov	r0, #4
4001e880:	e58d000c 	str	r0, [sp, #12]
4001e884:	e58d2010 	str	r2, [sp, #16]
4001e888:	e58d2014 	str	r2, [sp, #20]
4001e88c:	e58d3018 	str	r3, [sp, #24]
4001e890:	e3a02b01 	mov	r2, #1024	; 0x400
4001e894:	e3a03000 	mov	r3, #0
4001e898:	e58d2004 	str	r2, [sp, #4]
4001e89c:	e59f2118 	ldr	r2, [pc, #280]	; 4001e9bc <CyU3PUibApplicationDefine+0x168>
4001e8a0:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e8a4:	e58d0008 	str	r0, [sp, #8]
4001e8a8:	e59f0120 	ldr	r0, [pc, #288]	; 4001e9d0 <CyU3PUibApplicationDefine+0x17c>
4001e8ac:	e58d5000 	str	r5, [sp]
4001e8b0:	ebffafd8 	bl	4000a818 <_txe_thread_create>
4001e8b4:	e1a04000 	mov	r4, r0
4001e8b8:	e3540000 	cmp	r4, #0
4001e8bc:	1a00003c 	bne	4001e9b4 <CyU3PUibApplicationDefine+0x160>
4001e8c0:	e3a00080 	mov	r0, #128	; 0x80
4001e8c4:	ebff936a 	bl	40003674 <CyU3PMemAlloc>
4001e8c8:	e1a05000 	mov	r5, r0
4001e8cc:	e3550000 	cmp	r5, #0
4001e8d0:	0a000009 	beq	4001e8fc <CyU3PUibApplicationDefine+0xa8>
4001e8d4:	e3a0303c 	mov	r3, #60	; 0x3c
4001e8d8:	e3a02080 	mov	r2, #128	; 0x80
4001e8dc:	e1cd20f0 	strd	r2, [sp]
4001e8e0:	e1a03005 	mov	r3, r5
4001e8e4:	e3a02004 	mov	r2, #4
4001e8e8:	e3a01000 	mov	r1, #0
4001e8ec:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e9d4 <CyU3PUibApplicationDefine+0x180>
4001e8f0:	ebffaee2 	bl	4000a480 <_txe_queue_create>
4001e8f4:	e1a04000 	mov	r4, r0
4001e8f8:	ea000000 	b	4001e900 <CyU3PUibApplicationDefine+0xac>
4001e8fc:	e3a04010 	mov	r4, #16
4001e900:	e3540000 	cmp	r4, #0
4001e904:	1a000004 	bne	4001e91c <CyU3PUibApplicationDefine+0xc8>
4001e908:	e3a02028 	mov	r2, #40	; 0x28
4001e90c:	e3a01000 	mov	r1, #0
4001e910:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e9d8 <CyU3PUibApplicationDefine+0x184>
4001e914:	ebffad44 	bl	40009e2c <_txe_event_flags_create>
4001e918:	e1a04000 	mov	r4, r0
4001e91c:	e3540000 	cmp	r4, #0
4001e920:	1a000005 	bne	4001e93c <CyU3PUibApplicationDefine+0xe8>
4001e924:	e3a03038 	mov	r3, #56	; 0x38
4001e928:	e3a02000 	mov	r2, #0
4001e92c:	e1a01002 	mov	r1, r2
4001e930:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e9dc <CyU3PUibApplicationDefine+0x188>
4001e934:	ebffadf6 	bl	4000a114 <_txe_mutex_create>
4001e938:	e1a04000 	mov	r4, r0
4001e93c:	e3540000 	cmp	r4, #0
4001e940:	1a00000a 	bne	4001e970 <CyU3PUibApplicationDefine+0x11c>
4001e944:	e3a0302c 	mov	r3, #44	; 0x2c
4001e948:	e3a02000 	mov	r2, #0
4001e94c:	e3a00064 	mov	r0, #100	; 0x64
4001e950:	e88d0005 	stm	sp, {r0, r2}
4001e954:	e1cd20f8 	strd	r2, [sp, #8]
4001e958:	e1a03002 	mov	r3, r2
4001e95c:	e59f207c 	ldr	r2, [pc, #124]	; 4001e9e0 <CyU3PUibApplicationDefine+0x18c>
4001e960:	e3a01000 	mov	r1, #0
4001e964:	e59f0078 	ldr	r0, [pc, #120]	; 4001e9e4 <CyU3PUibApplicationDefine+0x190>
4001e968:	ebffb0d7 	bl	4000accc <_txe_timer_create>
4001e96c:	e1a04000 	mov	r4, r0
4001e970:	e3540000 	cmp	r4, #0
4001e974:	1a00000a 	bne	4001e9a4 <CyU3PUibApplicationDefine+0x150>
4001e978:	e3a0302c 	mov	r3, #44	; 0x2c
4001e97c:	e3a02001 	mov	r2, #1
4001e980:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e984:	e58d1000 	str	r1, [sp]
4001e988:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e98c:	e3a03000 	mov	r3, #0
4001e990:	e59f2050 	ldr	r2, [pc, #80]	; 4001e9e8 <CyU3PUibApplicationDefine+0x194>
4001e994:	e1a01003 	mov	r1, r3
4001e998:	e59f004c 	ldr	r0, [pc, #76]	; 4001e9ec <CyU3PUibApplicationDefine+0x198>
4001e99c:	ebffb0ca 	bl	4000accc <_txe_timer_create>
4001e9a0:	e1a04000 	mov	r4, r0
4001e9a4:	e3540000 	cmp	r4, #0
4001e9a8:	1a000001 	bne	4001e9b4 <CyU3PUibApplicationDefine+0x160>
4001e9ac:	e59f001c 	ldr	r0, [pc, #28]	; 4001e9d0 <CyU3PUibApplicationDefine+0x17c>
4001e9b0:	ebffb083 	bl	4000abc4 <_txe_thread_resume>
4001e9b4:	e28dd01c 	add	sp, sp, #28
4001e9b8:	e8bd8030 	pop	{r4, r5, pc}
4001e9bc:	4001fbc0 	.word	0x4001fbc0
4001e9c0:	555f3430 	.word	0x555f3430
4001e9c4:	545f4249 	.word	0x545f4249
4001e9c8:	41455248 	.word	0x41455248
4001e9cc:	00000044 	.word	0x00000044
4001e9d0:	40031df4 	.word	0x40031df4
4001e9d4:	40031e9c 	.word	0x40031e9c
4001e9d8:	40031ed8 	.word	0x40031ed8
4001e9dc:	40031f00 	.word	0x40031f00
4001e9e0:	4001fb50 	.word	0x4001fb50
4001e9e4:	400326c0 	.word	0x400326c0
4001e9e8:	4001eefc 	.word	0x4001eefc
4001e9ec:	400326ec 	.word	0x400326ec

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e9f0 <CyU3PUibDevCtrlEvtHandler>:
4001e9f0:	e92d4010 	push	{r4, lr}
4001e9f4:	e59f01c8 	ldr	r0, [pc, #456]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e9f8:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e9fc:	e3140c01 	tst	r4, #256	; 0x100
4001ea00:	0a000008 	beq	4001ea28 <CyU3PUibDevCtrlEvtHandler+0x38>
4001ea04:	e3a00c01 	mov	r0, #256	; 0x100
4001ea08:	e59f11b4 	ldr	r1, [pc, #436]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea0c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea10:	eb000995 	bl	4002106c <CyU3PUsbResumeHandler>
4001ea14:	e59f01a8 	ldr	r0, [pc, #424]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea18:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea1c:	e3800c01 	orr	r0, r0, #256	; 0x100
4001ea20:	e59f119c 	ldr	r1, [pc, #412]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea24:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea28:	e3140004 	tst	r4, #4
4001ea2c:	0a000008 	beq	4001ea54 <CyU3PUibDevCtrlEvtHandler+0x64>
4001ea30:	e3a00004 	mov	r0, #4
4001ea34:	e59f1188 	ldr	r1, [pc, #392]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea38:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea3c:	eb000d6c 	bl	40021ff4 <CyU3PUsbSuspendHandler>
4001ea40:	e59f017c 	ldr	r0, [pc, #380]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea44:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea48:	e3800004 	orr	r0, r0, #4
4001ea4c:	e59f1170 	ldr	r1, [pc, #368]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea50:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea54:	e3140008 	tst	r4, #8
4001ea58:	0a000008 	beq	4001ea80 <CyU3PUibDevCtrlEvtHandler+0x90>
4001ea5c:	e3a00008 	mov	r0, #8
4001ea60:	e59f115c 	ldr	r1, [pc, #348]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea64:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea68:	eb00092e 	bl	40020f28 <CyU3PUsbResetHandler>
4001ea6c:	e59f0150 	ldr	r0, [pc, #336]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea70:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea74:	e3800008 	orr	r0, r0, #8
4001ea78:	e59f1144 	ldr	r1, [pc, #324]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea7c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea80:	e3140010 	tst	r4, #16
4001ea84:	0a000008 	beq	4001eaac <CyU3PUibDevCtrlEvtHandler+0xbc>
4001ea88:	e3a00010 	mov	r0, #16
4001ea8c:	e59f1130 	ldr	r1, [pc, #304]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea90:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea94:	ebffff50 	bl	4001e7dc <CyU3PHsGrantIntrHandler>
4001ea98:	e59f0124 	ldr	r0, [pc, #292]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea9c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eaa0:	e3800010 	orr	r0, r0, #16
4001eaa4:	e59f1118 	ldr	r1, [pc, #280]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eaa8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eaac:	e3140040 	tst	r4, #64	; 0x40
4001eab0:	0a000018 	beq	4001eb18 <CyU3PUibDevCtrlEvtHandler+0x128>
4001eab4:	e59f010c 	ldr	r0, [pc, #268]	; 4001ebc8 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eab8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001eabc:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001eac0:	e59f1100 	ldr	r1, [pc, #256]	; 4001ebc8 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eac4:	e5810074 	str	r0, [r1, #116]	; 0x74
4001eac8:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001eacc:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001ead0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001ead4:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001ead8:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001eadc:	e1a00001 	mov	r0, r1
4001eae0:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001eae4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001eae8:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001eaec:	e3a00040 	mov	r0, #64	; 0x40
4001eaf0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eaf4:	e3a00001 	mov	r0, #1
4001eaf8:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ebcc <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eafc:	e5810014 	str	r0, [r1, #20]
4001eb00:	eb000b38 	bl	400217e8 <CyU3PUsbSetupCommand>
4001eb04:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb08:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb0c:	e3800040 	orr	r0, r0, #64	; 0x40
4001eb10:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb14:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb18:	e3140080 	tst	r4, #128	; 0x80
4001eb1c:	0a000006 	beq	4001eb3c <CyU3PUibDevCtrlEvtHandler+0x14c>
4001eb20:	e3a00080 	mov	r0, #128	; 0x80
4001eb24:	e59f1098 	ldr	r1, [pc, #152]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb28:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb2c:	e1c10000 	bic	r0, r1, r0
4001eb30:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb34:	e3800080 	orr	r0, r0, #128	; 0x80
4001eb38:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb3c:	e3140b02 	tst	r4, #2048	; 0x800
4001eb40:	0a00001e 	beq	4001ebc0 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001eb44:	e59f0080 	ldr	r0, [pc, #128]	; 4001ebcc <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eb48:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001eb4c:	e3500000 	cmp	r0, #0
4001eb50:	1a000002 	bne	4001eb60 <CyU3PUibDevCtrlEvtHandler+0x170>
4001eb54:	e3a00501 	mov	r0, #4194304	; 0x400000
4001eb58:	e59f1068 	ldr	r1, [pc, #104]	; 4001ebc8 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eb5c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001eb60:	e3a00b02 	mov	r0, #2048	; 0x800
4001eb64:	e59f1058 	ldr	r1, [pc, #88]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb68:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb6c:	e59f0058 	ldr	r0, [pc, #88]	; 4001ebcc <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eb70:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001eb74:	e3500000 	cmp	r0, #0
4001eb78:	0a00000b 	beq	4001ebac <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001eb7c:	e59f004c 	ldr	r0, [pc, #76]	; 4001ebd0 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001eb80:	e5900000 	ldr	r0, [r0]
4001eb84:	e3500000 	cmp	r0, #0
4001eb88:	0a000004 	beq	4001eba0 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001eb8c:	e3a01000 	mov	r1, #0
4001eb90:	e3a0000a 	mov	r0, #10
4001eb94:	e59f2034 	ldr	r2, [pc, #52]	; 4001ebd0 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001eb98:	e5922000 	ldr	r2, [r2]
4001eb9c:	e12fff32 	blx	r2
4001eba0:	e3a00000 	mov	r0, #0
4001eba4:	e59f1020 	ldr	r1, [pc, #32]	; 4001ebcc <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eba8:	e5810040 	str	r0, [r1, #64]	; 0x40
4001ebac:	e59f0010 	ldr	r0, [pc, #16]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebb0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ebb4:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001ebb8:	e59f1004 	ldr	r1, [pc, #4]	; 4001ebc4 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebbc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ebc0:	e8bd8010 	pop	{r4, pc}
4001ebc4:	e0031000 	.word	0xe0031000
4001ebc8:	e0032000 	.word	0xe0032000
4001ebcc:	40031d60 	.word	0x40031d60
4001ebd0:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUibEPEvtHandler:

4001ebd4 <CyU3PUibEPEvtHandler>:
4001ebd4:	e92d4070 	push	{r4, r5, r6, lr}
4001ebd8:	e59f0244 	ldr	r0, [pc, #580]	; 4001ee24 <CyU3PUibEPEvtHandler+0x250>
4001ebdc:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001ebe0:	e59f123c 	ldr	r1, [pc, #572]	; 4001ee24 <CyU3PUibEPEvtHandler+0x250>
4001ebe4:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001ebe8:	e0004001 	and	r4, r0, r1
4001ebec:	e59f0234 	ldr	r0, [pc, #564]	; 4001ee28 <CyU3PUibEPEvtHandler+0x254>
4001ebf0:	e5900000 	ldr	r0, [r0]
4001ebf4:	e0044000 	and	r4, r4, r0
4001ebf8:	e3a05001 	mov	r5, #1
4001ebfc:	ea000080 	b	4001ee04 <CyU3PUibEPEvtHandler+0x230>
4001ec00:	e3a00001 	mov	r0, #1
4001ec04:	e1140510 	tst	r4, r0, lsl r5
4001ec08:	0a00003b 	beq	4001ecfc <CyU3PUibEPEvtHandler+0x128>
4001ec0c:	e59f0218 	ldr	r0, [pc, #536]	; 4001ee2c <CyU3PUibEPEvtHandler+0x258>
4001ec10:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ec14:	e59f0214 	ldr	r0, [pc, #532]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ec18:	e5900000 	ldr	r0, [r0]
4001ec1c:	e3500000 	cmp	r0, #0
4001ec20:	0a000033 	beq	4001ecf4 <CyU3PUibEPEvtHandler+0x120>
4001ec24:	e59f0208 	ldr	r0, [pc, #520]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ec28:	e5900000 	ldr	r0, [r0]
4001ec2c:	e3100001 	tst	r0, #1
4001ec30:	0a000008 	beq	4001ec58 <CyU3PUibEPEvtHandler+0x84>
4001ec34:	e3160702 	tst	r6, #524288	; 0x80000
4001ec38:	0a000006 	beq	4001ec58 <CyU3PUibEPEvtHandler+0x84>
4001ec3c:	e3852080 	orr	r2, r5, #128	; 0x80
4001ec40:	e59f01f0 	ldr	r0, [pc, #496]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001ec44:	e5d01009 	ldrb	r1, [r0, #9]
4001ec48:	e3a00001 	mov	r0, #1
4001ec4c:	e59f31dc 	ldr	r3, [pc, #476]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ec50:	e5933000 	ldr	r3, [r3]
4001ec54:	e12fff33 	blx	r3
4001ec58:	e59f01d4 	ldr	r0, [pc, #468]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ec5c:	e5900000 	ldr	r0, [r0]
4001ec60:	e3100002 	tst	r0, #2
4001ec64:	0a000008 	beq	4001ec8c <CyU3PUibEPEvtHandler+0xb8>
4001ec68:	e3160602 	tst	r6, #2097152	; 0x200000
4001ec6c:	0a000006 	beq	4001ec8c <CyU3PUibEPEvtHandler+0xb8>
4001ec70:	e3852080 	orr	r2, r5, #128	; 0x80
4001ec74:	e59f01bc 	ldr	r0, [pc, #444]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001ec78:	e5d01009 	ldrb	r1, [r0, #9]
4001ec7c:	e3a00002 	mov	r0, #2
4001ec80:	e59f31a8 	ldr	r3, [pc, #424]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ec84:	e5933000 	ldr	r3, [r3]
4001ec88:	e12fff33 	blx	r3
4001ec8c:	e59f01a0 	ldr	r0, [pc, #416]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ec90:	e5900000 	ldr	r0, [r0]
4001ec94:	e3100004 	tst	r0, #4
4001ec98:	0a000008 	beq	4001ecc0 <CyU3PUibEPEvtHandler+0xec>
4001ec9c:	e3160501 	tst	r6, #4194304	; 0x400000
4001eca0:	0a000006 	beq	4001ecc0 <CyU3PUibEPEvtHandler+0xec>
4001eca4:	e3852080 	orr	r2, r5, #128	; 0x80
4001eca8:	e59f0188 	ldr	r0, [pc, #392]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001ecac:	e5d01009 	ldrb	r1, [r0, #9]
4001ecb0:	e3a00004 	mov	r0, #4
4001ecb4:	e59f3174 	ldr	r3, [pc, #372]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ecb8:	e5933000 	ldr	r3, [r3]
4001ecbc:	e12fff33 	blx	r3
4001ecc0:	e59f016c 	ldr	r0, [pc, #364]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ecc4:	e5900000 	ldr	r0, [r0]
4001ecc8:	e3100008 	tst	r0, #8
4001eccc:	0a000008 	beq	4001ecf4 <CyU3PUibEPEvtHandler+0x120>
4001ecd0:	e3160502 	tst	r6, #8388608	; 0x800000
4001ecd4:	0a000006 	beq	4001ecf4 <CyU3PUibEPEvtHandler+0x120>
4001ecd8:	e3852080 	orr	r2, r5, #128	; 0x80
4001ecdc:	e59f0154 	ldr	r0, [pc, #340]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001ece0:	e5d01009 	ldrb	r1, [r0, #9]
4001ece4:	e3a00008 	mov	r0, #8
4001ece8:	e59f3140 	ldr	r3, [pc, #320]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ecec:	e5933000 	ldr	r3, [r3]
4001ecf0:	e12fff33 	blx	r3
4001ecf4:	e59f0130 	ldr	r0, [pc, #304]	; 4001ee2c <CyU3PUibEPEvtHandler+0x258>
4001ecf8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ecfc:	e2850010 	add	r0, r5, #16
4001ed00:	e3a01001 	mov	r1, #1
4001ed04:	e1140011 	tst	r4, r1, lsl r0
4001ed08:	0a00003b 	beq	4001edfc <CyU3PUibEPEvtHandler+0x228>
4001ed0c:	e59f0128 	ldr	r0, [pc, #296]	; 4001ee3c <CyU3PUibEPEvtHandler+0x268>
4001ed10:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ed14:	e59f0114 	ldr	r0, [pc, #276]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ed18:	e5900000 	ldr	r0, [r0]
4001ed1c:	e3500000 	cmp	r0, #0
4001ed20:	0a000033 	beq	4001edf4 <CyU3PUibEPEvtHandler+0x220>
4001ed24:	e59f0108 	ldr	r0, [pc, #264]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ed28:	e5900000 	ldr	r0, [r0]
4001ed2c:	e3100001 	tst	r0, #1
4001ed30:	0a000008 	beq	4001ed58 <CyU3PUibEPEvtHandler+0x184>
4001ed34:	e3160702 	tst	r6, #524288	; 0x80000
4001ed38:	0a000006 	beq	4001ed58 <CyU3PUibEPEvtHandler+0x184>
4001ed3c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001ed40:	e5d01009 	ldrb	r1, [r0, #9]
4001ed44:	e1a02005 	mov	r2, r5
4001ed48:	e3a00001 	mov	r0, #1
4001ed4c:	e59f30dc 	ldr	r3, [pc, #220]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ed50:	e5933000 	ldr	r3, [r3]
4001ed54:	e12fff33 	blx	r3
4001ed58:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ed5c:	e5900000 	ldr	r0, [r0]
4001ed60:	e3100002 	tst	r0, #2
4001ed64:	0a000008 	beq	4001ed8c <CyU3PUibEPEvtHandler+0x1b8>
4001ed68:	e3160602 	tst	r6, #2097152	; 0x200000
4001ed6c:	0a000006 	beq	4001ed8c <CyU3PUibEPEvtHandler+0x1b8>
4001ed70:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001ed74:	e5d01009 	ldrb	r1, [r0, #9]
4001ed78:	e1a02005 	mov	r2, r5
4001ed7c:	e3a00002 	mov	r0, #2
4001ed80:	e59f30a8 	ldr	r3, [pc, #168]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001ed84:	e5933000 	ldr	r3, [r3]
4001ed88:	e12fff33 	blx	r3
4001ed8c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001ed90:	e5900000 	ldr	r0, [r0]
4001ed94:	e3100004 	tst	r0, #4
4001ed98:	0a000008 	beq	4001edc0 <CyU3PUibEPEvtHandler+0x1ec>
4001ed9c:	e3160501 	tst	r6, #4194304	; 0x400000
4001eda0:	0a000006 	beq	4001edc0 <CyU3PUibEPEvtHandler+0x1ec>
4001eda4:	e59f008c 	ldr	r0, [pc, #140]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001eda8:	e5d01009 	ldrb	r1, [r0, #9]
4001edac:	e1a02005 	mov	r2, r5
4001edb0:	e3a00004 	mov	r0, #4
4001edb4:	e59f3074 	ldr	r3, [pc, #116]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001edb8:	e5933000 	ldr	r3, [r3]
4001edbc:	e12fff33 	blx	r3
4001edc0:	e59f006c 	ldr	r0, [pc, #108]	; 4001ee34 <CyU3PUibEPEvtHandler+0x260>
4001edc4:	e5900000 	ldr	r0, [r0]
4001edc8:	e3100008 	tst	r0, #8
4001edcc:	0a000008 	beq	4001edf4 <CyU3PUibEPEvtHandler+0x220>
4001edd0:	e3160502 	tst	r6, #8388608	; 0x800000
4001edd4:	0a000006 	beq	4001edf4 <CyU3PUibEPEvtHandler+0x220>
4001edd8:	e59f0058 	ldr	r0, [pc, #88]	; 4001ee38 <CyU3PUibEPEvtHandler+0x264>
4001eddc:	e5d01009 	ldrb	r1, [r0, #9]
4001ede0:	e1a02005 	mov	r2, r5
4001ede4:	e3a00008 	mov	r0, #8
4001ede8:	e59f3040 	ldr	r3, [pc, #64]	; 4001ee30 <CyU3PUibEPEvtHandler+0x25c>
4001edec:	e5933000 	ldr	r3, [r3]
4001edf0:	e12fff33 	blx	r3
4001edf4:	e59f0040 	ldr	r0, [pc, #64]	; 4001ee3c <CyU3PUibEPEvtHandler+0x268>
4001edf8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001edfc:	e2850001 	add	r0, r5, #1
4001ee00:	e20050ff 	and	r5, r0, #255	; 0xff
4001ee04:	e3550010 	cmp	r5, #16
4001ee08:	baffff7c 	blt	4001ec00 <CyU3PUibEPEvtHandler+0x2c>
4001ee0c:	e59f002c 	ldr	r0, [pc, #44]	; 4001ee40 <CyU3PUibEPEvtHandler+0x26c>
4001ee10:	e5900004 	ldr	r0, [r0, #4]
4001ee14:	e3800010 	orr	r0, r0, #16
4001ee18:	e59f1020 	ldr	r1, [pc, #32]	; 4001ee40 <CyU3PUibEPEvtHandler+0x26c>
4001ee1c:	e5810004 	str	r0, [r1, #4]
4001ee20:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ee24:	e0031000 	.word	0xe0031000
4001ee28:	40030da0 	.word	0x40030da0
4001ee2c:	e0031418 	.word	0xe0031418
4001ee30:	40030d98 	.word	0x40030d98
4001ee34:	40030d9c 	.word	0x40030d9c
4001ee38:	40031d60 	.word	0x40031d60
4001ee3c:	e0031498 	.word	0xe0031498
4001ee40:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ee44 <CyU3PUibInitVars>:
4001ee44:	e92d4010 	push	{r4, lr}
4001ee48:	e3a0207c 	mov	r2, #124	; 0x7c
4001ee4c:	e3a01000 	mov	r1, #0
4001ee50:	e59f0070 	ldr	r0, [pc, #112]	; 4001eec8 <CyU3PUibInitVars+0x84>
4001ee54:	ebff9217 	bl	400036b8 <CyU3PMemSet>
4001ee58:	e3a02074 	mov	r2, #116	; 0x74
4001ee5c:	e3a01000 	mov	r1, #0
4001ee60:	e59f0064 	ldr	r0, [pc, #100]	; 4001eecc <CyU3PUibInitVars+0x88>
4001ee64:	ebff9213 	bl	400036b8 <CyU3PMemSet>
4001ee68:	e3a00000 	mov	r0, #0
4001ee6c:	e59f105c 	ldr	r1, [pc, #92]	; 4001eed0 <CyU3PUibInitVars+0x8c>
4001ee70:	e5810000 	str	r0, [r1]
4001ee74:	e59f1058 	ldr	r1, [pc, #88]	; 4001eed4 <CyU3PUibInitVars+0x90>
4001ee78:	e5810000 	str	r0, [r1]
4001ee7c:	e59f1054 	ldr	r1, [pc, #84]	; 4001eed8 <CyU3PUibInitVars+0x94>
4001ee80:	e5810000 	str	r0, [r1]
4001ee84:	e59f1050 	ldr	r1, [pc, #80]	; 4001eedc <CyU3PUibInitVars+0x98>
4001ee88:	e5810000 	str	r0, [r1]
4001ee8c:	e59f104c 	ldr	r1, [pc, #76]	; 4001eee0 <CyU3PUibInitVars+0x9c>
4001ee90:	e5810000 	str	r0, [r1]
4001ee94:	e59f1048 	ldr	r1, [pc, #72]	; 4001eee4 <CyU3PUibInitVars+0xa0>
4001ee98:	e5810000 	str	r0, [r1]
4001ee9c:	e59f1044 	ldr	r1, [pc, #68]	; 4001eee8 <CyU3PUibInitVars+0xa4>
4001eea0:	e5810000 	str	r0, [r1]
4001eea4:	e59f1040 	ldr	r1, [pc, #64]	; 4001eeec <CyU3PUibInitVars+0xa8>
4001eea8:	e5810000 	str	r0, [r1]
4001eeac:	e59f103c 	ldr	r1, [pc, #60]	; 4001eef0 <CyU3PUibInitVars+0xac>
4001eeb0:	e5810000 	str	r0, [r1]
4001eeb4:	e59f1038 	ldr	r1, [pc, #56]	; 4001eef4 <CyU3PUibInitVars+0xb0>
4001eeb8:	e5810000 	str	r0, [r1]
4001eebc:	e59f1034 	ldr	r1, [pc, #52]	; 4001eef8 <CyU3PUibInitVars+0xb4>
4001eec0:	e5810000 	str	r0, [r1]
4001eec4:	e8bd8010 	pop	{r4, pc}
4001eec8:	40031d60 	.word	0x40031d60
4001eecc:	40031fb8 	.word	0x40031fb8
4001eed0:	40030d80 	.word	0x40030d80
4001eed4:	40030d84 	.word	0x40030d84
4001eed8:	40030d88 	.word	0x40030d88
4001eedc:	40030dd4 	.word	0x40030dd4
4001eee0:	40030dbc 	.word	0x40030dbc
4001eee4:	40030dc0 	.word	0x40030dc0
4001eee8:	40030dc4 	.word	0x40030dc4
4001eeec:	40030d98 	.word	0x40030d98
4001eef0:	40030d9c 	.word	0x40030d9c
4001eef4:	40030da0 	.word	0x40030da0
4001eef8:	40030d60 	.word	0x40030d60

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001eefc <CyU3PUibLnkErrClrTimerCb>:
4001eefc:	e92d4010 	push	{r4, lr}
4001ef00:	e1a04000 	mov	r4, r0
4001ef04:	ebfff82d 	bl	4001cfc0 <CyU3PUsbGetSpeed>
4001ef08:	e3500003 	cmp	r0, #3
4001ef0c:	1a000003 	bne	4001ef20 <CyU3PUibLnkErrClrTimerCb+0x24>
4001ef10:	e59f000c 	ldr	r0, [pc, #12]	; 4001ef24 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ef14:	e5900014 	ldr	r0, [r0, #20]
4001ef18:	e59f1008 	ldr	r1, [pc, #8]	; 4001ef28 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001ef1c:	e5810000 	str	r0, [r1]
4001ef20:	e8bd8010 	pop	{r4, pc}
4001ef24:	e0033000 	.word	0xe0033000
4001ef28:	40030da4 	.word	0x40030da4

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001ef2c <CyU3PUibLnkIntrEvtHandler>:
4001ef2c:	e92d4010 	push	{r4, lr}
4001ef30:	e59f008c 	ldr	r0, [pc, #140]	; 4001efc4 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef34:	e5904004 	ldr	r4, [r0, #4]
4001ef38:	e3140902 	tst	r4, #32768	; 0x8000
4001ef3c:	0a00000b 	beq	4001ef70 <CyU3PUibLnkIntrEvtHandler+0x44>
4001ef40:	e59f0080 	ldr	r0, [pc, #128]	; 4001efc8 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001ef44:	e5900000 	ldr	r0, [r0]
4001ef48:	e59f1074 	ldr	r1, [pc, #116]	; 4001efc4 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef4c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001ef50:	eb000859 	bl	400210bc <CyU3PUsbSSConnecthandler>
4001ef54:	e3a00902 	mov	r0, #32768	; 0x8000
4001ef58:	e59f1064 	ldr	r1, [pc, #100]	; 4001efc4 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef5c:	e5810004 	str	r0, [r1, #4]
4001ef60:	e1c10000 	bic	r0, r1, r0
4001ef64:	e5900008 	ldr	r0, [r0, #8]
4001ef68:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001ef6c:	e5810008 	str	r0, [r1, #8]
4001ef70:	e3140801 	tst	r4, #65536	; 0x10000
4001ef74:	0a000007 	beq	4001ef98 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001ef78:	eb0008cc 	bl	400212b0 <CyU3PUsbSSDisConnecthandler>
4001ef7c:	e3a00801 	mov	r0, #65536	; 0x10000
4001ef80:	e59f103c 	ldr	r1, [pc, #60]	; 4001efc4 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef84:	e5810004 	str	r0, [r1, #4]
4001ef88:	e1810000 	orr	r0, r1, r0
4001ef8c:	e5900008 	ldr	r0, [r0, #8]
4001ef90:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ef94:	e5810008 	str	r0, [r1, #8]
4001ef98:	e3140802 	tst	r4, #131072	; 0x20000
4001ef9c:	0a000007 	beq	4001efc0 <CyU3PUibLnkIntrEvtHandler+0x94>
4001efa0:	eb000926 	bl	40021440 <CyU3PUsbSSReset>
4001efa4:	e3a00802 	mov	r0, #131072	; 0x20000
4001efa8:	e59f1014 	ldr	r1, [pc, #20]	; 4001efc4 <CyU3PUibLnkIntrEvtHandler+0x98>
4001efac:	e5810004 	str	r0, [r1, #4]
4001efb0:	e1810000 	orr	r0, r1, r0
4001efb4:	e5900008 	ldr	r0, [r0, #8]
4001efb8:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001efbc:	e5810008 	str	r0, [r1, #8]
4001efc0:	e8bd8010 	pop	{r4, pc}
4001efc4:	e0033000 	.word	0xe0033000
4001efc8:	40030dac 	.word	0x40030dac

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001efcc <CyU3PUibProtEpIntrEvtHandler>:
4001efcc:	e92d4070 	push	{r4, r5, r6, lr}
4001efd0:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f38c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001efd4:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001efd8:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f38c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001efdc:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001efe0:	e0005001 	and	r5, r0, r1
4001efe4:	e3a04001 	mov	r4, #1
4001efe8:	ea0000df 	b	4001f36c <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001efec:	e3a00001 	mov	r0, #1
4001eff0:	e1150410 	tst	r5, r0, lsl r4
4001eff4:	0a000081 	beq	4001f200 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001eff8:	e59f0390 	ldr	r0, [pc, #912]	; 4001f390 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001effc:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f000:	e3160901 	tst	r6, #16384	; 0x4000
4001f004:	0a00002a 	beq	4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f008:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f00c:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f010:	e3800002 	orr	r0, r0, #2
4001f014:	e59f1374 	ldr	r1, [pc, #884]	; 4001f390 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f018:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f01c:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001f020:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f024:	e1a01802 	lsl	r1, r2, #16
4001f028:	e1a01821 	lsr	r1, r1, #16
4001f02c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f030:	e3820080 	orr	r0, r2, #128	; 0x80
4001f034:	ebfffa90 	bl	4001da7c <CyU3PUsbSendNrdy>
4001f038:	e20410ff 	and	r1, r4, #255	; 0xff
4001f03c:	e3810080 	orr	r0, r1, #128	; 0x80
4001f040:	ebfff9a1 	bl	4001d6cc <CyU3PUsbResetEp>
4001f044:	e3a0000a 	mov	r0, #10
4001f048:	ebffd20c 	bl	40013880 <CyU3PBusyWait>
4001f04c:	e59f2340 	ldr	r2, [pc, #832]	; 4001f394 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001f050:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f054:	e1a01802 	lsl	r1, r2, #16
4001f058:	e1a01821 	lsr	r1, r1, #16
4001f05c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f060:	e3820080 	orr	r0, r2, #128	; 0x80
4001f064:	ebfffa47 	bl	4001d988 <CyU3PUsbSendErdy>
4001f068:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001f06c:	e59f131c 	ldr	r1, [pc, #796]	; 4001f390 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f070:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f074:	e59f031c 	ldr	r0, [pc, #796]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f078:	e5900000 	ldr	r0, [r0]
4001f07c:	e3100020 	tst	r0, #32
4001f080:	0a00000b 	beq	4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f084:	e3a00001 	mov	r0, #1
4001f088:	e59f130c 	ldr	r1, [pc, #780]	; 4001f39c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f08c:	e5911000 	ldr	r1, [r1]
4001f090:	e1110410 	tst	r1, r0, lsl r4
4001f094:	0a000006 	beq	4001f0b4 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f098:	e20400ff 	and	r0, r4, #255	; 0xff
4001f09c:	e3802080 	orr	r2, r0, #128	; 0x80
4001f0a0:	e3a01003 	mov	r1, #3
4001f0a4:	e3a00020 	mov	r0, #32
4001f0a8:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f0ac:	e5933000 	ldr	r3, [r3]
4001f0b0:	e12fff33 	blx	r3
4001f0b4:	e3160801 	tst	r6, #65536	; 0x10000
4001f0b8:	0a000004 	beq	4001f0d0 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001f0bc:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f0c0:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f0c4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001f0c8:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f390 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f0cc:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f0d0:	e3a00001 	mov	r0, #1
4001f0d4:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f39c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f0d8:	e5911000 	ldr	r1, [r1]
4001f0dc:	e1110410 	tst	r1, r0, lsl r4
4001f0e0:	0a000044 	beq	4001f1f8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f0e4:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f0e8:	e5900000 	ldr	r0, [r0]
4001f0ec:	e3500000 	cmp	r0, #0
4001f0f0:	0a000040 	beq	4001f1f8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f0f4:	e59f029c 	ldr	r0, [pc, #668]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f0f8:	e5900000 	ldr	r0, [r0]
4001f0fc:	e3100001 	tst	r0, #1
4001f100:	0a000008 	beq	4001f128 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f104:	e3160b01 	tst	r6, #1024	; 0x400
4001f108:	0a000006 	beq	4001f128 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f10c:	e20400ff 	and	r0, r4, #255	; 0xff
4001f110:	e3802080 	orr	r2, r0, #128	; 0x80
4001f114:	e3a01003 	mov	r1, #3
4001f118:	e3a00001 	mov	r0, #1
4001f11c:	e59f327c 	ldr	r3, [pc, #636]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f120:	e5933000 	ldr	r3, [r3]
4001f124:	e12fff33 	blx	r3
4001f128:	e59f0268 	ldr	r0, [pc, #616]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f12c:	e5900000 	ldr	r0, [r0]
4001f130:	e3100002 	tst	r0, #2
4001f134:	0a000008 	beq	4001f15c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f138:	e3160a01 	tst	r6, #4096	; 0x1000
4001f13c:	0a000006 	beq	4001f15c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f140:	e20400ff 	and	r0, r4, #255	; 0xff
4001f144:	e3802080 	orr	r2, r0, #128	; 0x80
4001f148:	e3a01003 	mov	r1, #3
4001f14c:	e3a00002 	mov	r0, #2
4001f150:	e59f3248 	ldr	r3, [pc, #584]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f154:	e5933000 	ldr	r3, [r3]
4001f158:	e12fff33 	blx	r3
4001f15c:	e59f0234 	ldr	r0, [pc, #564]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f160:	e5900000 	ldr	r0, [r0]
4001f164:	e3100004 	tst	r0, #4
4001f168:	0a000008 	beq	4001f190 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f16c:	e3160a02 	tst	r6, #8192	; 0x2000
4001f170:	0a000006 	beq	4001f190 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f174:	e20400ff 	and	r0, r4, #255	; 0xff
4001f178:	e3802080 	orr	r2, r0, #128	; 0x80
4001f17c:	e3a01003 	mov	r1, #3
4001f180:	e3a00004 	mov	r0, #4
4001f184:	e59f3214 	ldr	r3, [pc, #532]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f188:	e5933000 	ldr	r3, [r3]
4001f18c:	e12fff33 	blx	r3
4001f190:	e59f0200 	ldr	r0, [pc, #512]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f194:	e5900000 	ldr	r0, [r0]
4001f198:	e3100010 	tst	r0, #16
4001f19c:	0a000008 	beq	4001f1c4 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f1a0:	e3160c02 	tst	r6, #512	; 0x200
4001f1a4:	0a000006 	beq	4001f1c4 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f1a8:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1ac:	e3802080 	orr	r2, r0, #128	; 0x80
4001f1b0:	e3a01003 	mov	r1, #3
4001f1b4:	e3a00010 	mov	r0, #16
4001f1b8:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1bc:	e5933000 	ldr	r3, [r3]
4001f1c0:	e12fff33 	blx	r3
4001f1c4:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1c8:	e5900000 	ldr	r0, [r0]
4001f1cc:	e3100040 	tst	r0, #64	; 0x40
4001f1d0:	0a000008 	beq	4001f1f8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f1d4:	e3160802 	tst	r6, #131072	; 0x20000
4001f1d8:	0a000006 	beq	4001f1f8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f1dc:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1e0:	e3802080 	orr	r2, r0, #128	; 0x80
4001f1e4:	e3a01003 	mov	r1, #3
4001f1e8:	e3a00040 	mov	r0, #64	; 0x40
4001f1ec:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1f0:	e5933000 	ldr	r3, [r3]
4001f1f4:	e12fff33 	blx	r3
4001f1f8:	e59f0190 	ldr	r0, [pc, #400]	; 4001f390 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f1fc:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f200:	e2840010 	add	r0, r4, #16
4001f204:	e3a01001 	mov	r1, #1
4001f208:	e1150011 	tst	r5, r1, lsl r0
4001f20c:	0a000055 	beq	4001f368 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001f210:	e59f018c 	ldr	r0, [pc, #396]	; 4001f3a4 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f214:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f218:	e2840010 	add	r0, r4, #16
4001f21c:	e1a00011 	lsl	r0, r1, r0
4001f220:	e59f1174 	ldr	r1, [pc, #372]	; 4001f39c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f224:	e5911000 	ldr	r1, [r1]
4001f228:	e1100001 	tst	r0, r1
4001f22c:	0a00004b 	beq	4001f360 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f230:	e59f0168 	ldr	r0, [pc, #360]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f234:	e5900000 	ldr	r0, [r0]
4001f238:	e3500000 	cmp	r0, #0
4001f23c:	0a000047 	beq	4001f360 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f240:	e59f0150 	ldr	r0, [pc, #336]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f244:	e5900000 	ldr	r0, [r0]
4001f248:	e3100001 	tst	r0, #1
4001f24c:	0a000007 	beq	4001f270 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f250:	e3160b01 	tst	r6, #1024	; 0x400
4001f254:	0a000005 	beq	4001f270 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f258:	e20420ff 	and	r2, r4, #255	; 0xff
4001f25c:	e3a01003 	mov	r1, #3
4001f260:	e3a00001 	mov	r0, #1
4001f264:	e59f3134 	ldr	r3, [pc, #308]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f268:	e5933000 	ldr	r3, [r3]
4001f26c:	e12fff33 	blx	r3
4001f270:	e59f0120 	ldr	r0, [pc, #288]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f274:	e5900000 	ldr	r0, [r0]
4001f278:	e3100002 	tst	r0, #2
4001f27c:	0a000007 	beq	4001f2a0 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f280:	e3160a01 	tst	r6, #4096	; 0x1000
4001f284:	0a000005 	beq	4001f2a0 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f288:	e20420ff 	and	r2, r4, #255	; 0xff
4001f28c:	e3a01003 	mov	r1, #3
4001f290:	e3a00002 	mov	r0, #2
4001f294:	e59f3104 	ldr	r3, [pc, #260]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f298:	e5933000 	ldr	r3, [r3]
4001f29c:	e12fff33 	blx	r3
4001f2a0:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2a4:	e5900000 	ldr	r0, [r0]
4001f2a8:	e3100004 	tst	r0, #4
4001f2ac:	0a000007 	beq	4001f2d0 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f2b0:	e3160a02 	tst	r6, #8192	; 0x2000
4001f2b4:	0a000005 	beq	4001f2d0 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f2b8:	e20420ff 	and	r2, r4, #255	; 0xff
4001f2bc:	e3a01003 	mov	r1, #3
4001f2c0:	e3a00004 	mov	r0, #4
4001f2c4:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2c8:	e5933000 	ldr	r3, [r3]
4001f2cc:	e12fff33 	blx	r3
4001f2d0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2d4:	e5900000 	ldr	r0, [r0]
4001f2d8:	e3100010 	tst	r0, #16
4001f2dc:	0a000007 	beq	4001f300 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f2e0:	e3160c02 	tst	r6, #512	; 0x200
4001f2e4:	0a000005 	beq	4001f300 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f2e8:	e20420ff 	and	r2, r4, #255	; 0xff
4001f2ec:	e3a01003 	mov	r1, #3
4001f2f0:	e3a00010 	mov	r0, #16
4001f2f4:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2f8:	e5933000 	ldr	r3, [r3]
4001f2fc:	e12fff33 	blx	r3
4001f300:	e59f0090 	ldr	r0, [pc, #144]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f304:	e5900000 	ldr	r0, [r0]
4001f308:	e3100040 	tst	r0, #64	; 0x40
4001f30c:	0a000007 	beq	4001f330 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f310:	e3160802 	tst	r6, #131072	; 0x20000
4001f314:	0a000005 	beq	4001f330 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f318:	e20420ff 	and	r2, r4, #255	; 0xff
4001f31c:	e3a01003 	mov	r1, #3
4001f320:	e3a00040 	mov	r0, #64	; 0x40
4001f324:	e59f3074 	ldr	r3, [pc, #116]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f328:	e5933000 	ldr	r3, [r3]
4001f32c:	e12fff33 	blx	r3
4001f330:	e59f0060 	ldr	r0, [pc, #96]	; 4001f398 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f334:	e5900000 	ldr	r0, [r0]
4001f338:	e3100020 	tst	r0, #32
4001f33c:	0a000007 	beq	4001f360 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f340:	e3160901 	tst	r6, #16384	; 0x4000
4001f344:	0a000005 	beq	4001f360 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f348:	e20420ff 	and	r2, r4, #255	; 0xff
4001f34c:	e3a01003 	mov	r1, #3
4001f350:	e3a00020 	mov	r0, #32
4001f354:	e59f3044 	ldr	r3, [pc, #68]	; 4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f358:	e5933000 	ldr	r3, [r3]
4001f35c:	e12fff33 	blx	r3
4001f360:	e59f003c 	ldr	r0, [pc, #60]	; 4001f3a4 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f364:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f368:	e2844001 	add	r4, r4, #1
4001f36c:	e3540010 	cmp	r4, #16
4001f370:	baffff1d 	blt	4001efec <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f374:	e59f002c 	ldr	r0, [pc, #44]	; 4001f3a8 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f378:	e5900004 	ldr	r0, [r0, #4]
4001f37c:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f380:	e59f1020 	ldr	r1, [pc, #32]	; 4001f3a8 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f384:	e5810004 	str	r0, [r1, #4]
4001f388:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f38c:	e0033000 	.word	0xe0033000
4001f390:	e0033500 	.word	0xe0033500
4001f394:	e00335c0 	.word	0xe00335c0
4001f398:	40030d9c 	.word	0x40030d9c
4001f39c:	40030da0 	.word	0x40030da0
4001f3a0:	40030d98 	.word	0x40030d98
4001f3a4:	e0033600 	.word	0xe0033600
4001f3a8:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f3ac <CyU3PUibProtIntrEvtHandler>:
4001f3ac:	e92d4010 	push	{r4, lr}
4001f3b0:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f488 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3b4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f3b8:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f488 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3bc:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f3c0:	e0004001 	and	r4, r0, r1
4001f3c4:	e3140c02 	tst	r4, #512	; 0x200
4001f3c8:	0a000006 	beq	4001f3e8 <CyU3PUibProtIntrEvtHandler+0x3c>
4001f3cc:	e3a00c02 	mov	r0, #512	; 0x200
4001f3d0:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f488 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3d4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f3d8:	e3a00001 	mov	r0, #1
4001f3dc:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f48c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f3e0:	e5810014 	str	r0, [r1, #20]
4001f3e4:	eb0008ff 	bl	400217e8 <CyU3PUsbSetupCommand>
4001f3e8:	e3140901 	tst	r4, #16384	; 0x4000
4001f3ec:	0a00000a 	beq	4001f41c <CyU3PUibProtIntrEvtHandler+0x70>
4001f3f0:	e59f0090 	ldr	r0, [pc, #144]	; 4001f488 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3f4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f3f8:	e3c00004 	bic	r0, r0, #4
4001f3fc:	e59f1084 	ldr	r1, [pc, #132]	; 4001f488 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f400:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f404:	e1a00001 	mov	r0, r1
4001f408:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f40c:	e3c00004 	bic	r0, r0, #4
4001f410:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f414:	e3a00901 	mov	r0, #16384	; 0x4000
4001f418:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f41c:	e3140b02 	tst	r4, #2048	; 0x800
4001f420:	0a000012 	beq	4001f470 <CyU3PUibProtIntrEvtHandler+0xc4>
4001f424:	e59f0060 	ldr	r0, [pc, #96]	; 4001f48c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f428:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f42c:	e3500000 	cmp	r0, #0
4001f430:	0a00000b 	beq	4001f464 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f434:	e59f0054 	ldr	r0, [pc, #84]	; 4001f490 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f438:	e5900000 	ldr	r0, [r0]
4001f43c:	e3500000 	cmp	r0, #0
4001f440:	0a000004 	beq	4001f458 <CyU3PUibProtIntrEvtHandler+0xac>
4001f444:	e3a01000 	mov	r1, #0
4001f448:	e3a0000a 	mov	r0, #10
4001f44c:	e59f203c 	ldr	r2, [pc, #60]	; 4001f490 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f450:	e5922000 	ldr	r2, [r2]
4001f454:	e12fff32 	blx	r2
4001f458:	e3a00000 	mov	r0, #0
4001f45c:	e59f1028 	ldr	r1, [pc, #40]	; 4001f48c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f460:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f464:	e3a00b02 	mov	r0, #2048	; 0x800
4001f468:	e59f1018 	ldr	r1, [pc, #24]	; 4001f488 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f46c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f470:	e59f001c 	ldr	r0, [pc, #28]	; 4001f494 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f474:	e5900004 	ldr	r0, [r0, #4]
4001f478:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f47c:	e59f1010 	ldr	r1, [pc, #16]	; 4001f494 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f480:	e5810004 	str	r0, [r1, #4]
4001f484:	e8bd8010 	pop	{r4, pc}
4001f488:	e0033000 	.word	0xe0033000
4001f48c:	40031d60 	.word	0x40031d60
4001f490:	40030dbc 	.word	0x40030dbc
4001f494:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f498 <CyU3PUibSendDescr>:
4001f498:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f49c:	e1a04000 	mov	r4, r0
4001f4a0:	e1a05001 	mov	r5, r1
4001f4a4:	e3a06000 	mov	r6, #0
4001f4a8:	e3a07000 	mov	r7, #0
4001f4ac:	e3a08000 	mov	r8, #0
4001f4b0:	e3a09000 	mov	r9, #0
4001f4b4:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001faa0 <CyU3PUibSendDescr+0x608>
4001f4b8:	e0000825 	and	r0, r0, r5, lsr #16
4001f4bc:	e58d0000 	str	r0, [sp]
4001f4c0:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f4c4:	e5d00009 	ldrb	r0, [r0, #9]
4001f4c8:	e3500003 	cmp	r0, #3
4001f4cc:	1a000001 	bne	4001f4d8 <CyU3PUibSendDescr+0x40>
4001f4d0:	e3a00c02 	mov	r0, #512	; 0x200
4001f4d4:	ea000000 	b	4001f4dc <CyU3PUibSendDescr+0x44>
4001f4d8:	e3a00040 	mov	r0, #64	; 0x40
4001f4dc:	e1a0a800 	lsl	sl, r0, #16
4001f4e0:	e1a0a82a 	lsr	sl, sl, #16
4001f4e4:	e1a00c24 	lsr	r0, r4, #24
4001f4e8:	e3500006 	cmp	r0, #6
4001f4ec:	0a0000b4 	beq	4001f7c4 <CyU3PUibSendDescr+0x32c>
4001f4f0:	ca000006 	bgt	4001f510 <CyU3PUibSendDescr+0x78>
4001f4f4:	e3500001 	cmp	r0, #1
4001f4f8:	0a00000b 	beq	4001f52c <CyU3PUibSendDescr+0x94>
4001f4fc:	e3500002 	cmp	r0, #2
4001f500:	0a000020 	beq	4001f588 <CyU3PUibSendDescr+0xf0>
4001f504:	e3500003 	cmp	r0, #3
4001f508:	1a00013b 	bne	4001f9fc <CyU3PUibSendDescr+0x564>
4001f50c:	ea00007b 	b	4001f700 <CyU3PUibSendDescr+0x268>
4001f510:	e3500007 	cmp	r0, #7
4001f514:	0a0000b8 	beq	4001f7fc <CyU3PUibSendDescr+0x364>
4001f518:	e3500009 	cmp	r0, #9
4001f51c:	0a000122 	beq	4001f9ac <CyU3PUibSendDescr+0x514>
4001f520:	e350000f 	cmp	r0, #15
4001f524:	1a000134 	bne	4001f9fc <CyU3PUibSendDescr+0x564>
4001f528:	ea0000f6 	b	4001f908 <CyU3PUibSendDescr+0x470>
4001f52c:	e1a00000 	nop			; (mov r0, r0)
4001f530:	e59f056c 	ldr	r0, [pc, #1388]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f534:	e5d00009 	ldrb	r0, [r0, #9]
4001f538:	e3500003 	cmp	r0, #3
4001f53c:	1a000008 	bne	4001f564 <CyU3PUibSendDescr+0xcc>
4001f540:	e59f0560 	ldr	r0, [pc, #1376]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f544:	e5900004 	ldr	r0, [r0, #4]
4001f548:	e3500000 	cmp	r0, #0
4001f54c:	0a00000c 	beq	4001f584 <CyU3PUibSendDescr+0xec>
4001f550:	e3a09001 	mov	r9, #1
4001f554:	e3a06012 	mov	r6, #18
4001f558:	e59f0548 	ldr	r0, [pc, #1352]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f55c:	e5908004 	ldr	r8, [r0, #4]
4001f560:	ea000007 	b	4001f584 <CyU3PUibSendDescr+0xec>
4001f564:	e59f053c 	ldr	r0, [pc, #1340]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f568:	e5900000 	ldr	r0, [r0]
4001f56c:	e3500000 	cmp	r0, #0
4001f570:	0a000003 	beq	4001f584 <CyU3PUibSendDescr+0xec>
4001f574:	e3a09001 	mov	r9, #1
4001f578:	e3a06012 	mov	r6, #18
4001f57c:	e59f0524 	ldr	r0, [pc, #1316]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f580:	e5908000 	ldr	r8, [r0]
4001f584:	ea000128 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f588:	e1a00000 	nop			; (mov r0, r0)
4001f58c:	e59f0510 	ldr	r0, [pc, #1296]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f590:	e5d00009 	ldrb	r0, [r0, #9]
4001f594:	e3500002 	cmp	r0, #2
4001f598:	1a00001a 	bne	4001f608 <CyU3PUibSendDescr+0x170>
4001f59c:	e59f0504 	ldr	r0, [pc, #1284]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f5a0:	e5900014 	ldr	r0, [r0, #20]
4001f5a4:	e3500000 	cmp	r0, #0
4001f5a8:	0a00004f 	beq	4001f6ec <CyU3PUibSendDescr+0x254>
4001f5ac:	e3a09001 	mov	r9, #1
4001f5b0:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f5b4:	e5908014 	ldr	r8, [r0, #20]
4001f5b8:	e5900014 	ldr	r0, [r0, #20]
4001f5bc:	e5d00002 	ldrb	r0, [r0, #2]
4001f5c0:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f5c4:	e5911014 	ldr	r1, [r1, #20]
4001f5c8:	e5d11003 	ldrb	r1, [r1, #3]
4001f5cc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f5d0:	e1500825 	cmp	r0, r5, lsr #16
4001f5d4:	2a000007 	bcs	4001f5f8 <CyU3PUibSendDescr+0x160>
4001f5d8:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f5dc:	e5900014 	ldr	r0, [r0, #20]
4001f5e0:	e5d00002 	ldrb	r0, [r0, #2]
4001f5e4:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f5e8:	e5911014 	ldr	r1, [r1, #20]
4001f5ec:	e5d11003 	ldrb	r1, [r1, #3]
4001f5f0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f5f4:	ea000000 	b	4001f5fc <CyU3PUibSendDescr+0x164>
4001f5f8:	e1a00825 	lsr	r0, r5, #16
4001f5fc:	e1a06800 	lsl	r6, r0, #16
4001f600:	e1a06826 	lsr	r6, r6, #16
4001f604:	ea000038 	b	4001f6ec <CyU3PUibSendDescr+0x254>
4001f608:	e59f0494 	ldr	r0, [pc, #1172]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f60c:	e5d00009 	ldrb	r0, [r0, #9]
4001f610:	e3500001 	cmp	r0, #1
4001f614:	1a00001a 	bne	4001f684 <CyU3PUibSendDescr+0x1ec>
4001f618:	e59f0488 	ldr	r0, [pc, #1160]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f61c:	e5900018 	ldr	r0, [r0, #24]
4001f620:	e3500000 	cmp	r0, #0
4001f624:	0a000030 	beq	4001f6ec <CyU3PUibSendDescr+0x254>
4001f628:	e3a09001 	mov	r9, #1
4001f62c:	e59f0474 	ldr	r0, [pc, #1140]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f630:	e5908018 	ldr	r8, [r0, #24]
4001f634:	e5900018 	ldr	r0, [r0, #24]
4001f638:	e5d00002 	ldrb	r0, [r0, #2]
4001f63c:	e59f1464 	ldr	r1, [pc, #1124]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f640:	e5911018 	ldr	r1, [r1, #24]
4001f644:	e5d11003 	ldrb	r1, [r1, #3]
4001f648:	e1800401 	orr	r0, r0, r1, lsl #8
4001f64c:	e1500825 	cmp	r0, r5, lsr #16
4001f650:	2a000007 	bcs	4001f674 <CyU3PUibSendDescr+0x1dc>
4001f654:	e59f044c 	ldr	r0, [pc, #1100]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f658:	e5900018 	ldr	r0, [r0, #24]
4001f65c:	e5d00002 	ldrb	r0, [r0, #2]
4001f660:	e59f1440 	ldr	r1, [pc, #1088]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f664:	e5911018 	ldr	r1, [r1, #24]
4001f668:	e5d11003 	ldrb	r1, [r1, #3]
4001f66c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f670:	ea000000 	b	4001f678 <CyU3PUibSendDescr+0x1e0>
4001f674:	e1a00825 	lsr	r0, r5, #16
4001f678:	e1a06800 	lsl	r6, r0, #16
4001f67c:	e1a06826 	lsr	r6, r6, #16
4001f680:	ea000019 	b	4001f6ec <CyU3PUibSendDescr+0x254>
4001f684:	e59f041c 	ldr	r0, [pc, #1052]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f688:	e590001c 	ldr	r0, [r0, #28]
4001f68c:	e3500000 	cmp	r0, #0
4001f690:	0a000015 	beq	4001f6ec <CyU3PUibSendDescr+0x254>
4001f694:	e3a09001 	mov	r9, #1
4001f698:	e59f0408 	ldr	r0, [pc, #1032]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f69c:	e590801c 	ldr	r8, [r0, #28]
4001f6a0:	e590001c 	ldr	r0, [r0, #28]
4001f6a4:	e5d00002 	ldrb	r0, [r0, #2]
4001f6a8:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f6ac:	e591101c 	ldr	r1, [r1, #28]
4001f6b0:	e5d11003 	ldrb	r1, [r1, #3]
4001f6b4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6b8:	e1500825 	cmp	r0, r5, lsr #16
4001f6bc:	2a000007 	bcs	4001f6e0 <CyU3PUibSendDescr+0x248>
4001f6c0:	e59f03e0 	ldr	r0, [pc, #992]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f6c4:	e590001c 	ldr	r0, [r0, #28]
4001f6c8:	e5d00002 	ldrb	r0, [r0, #2]
4001f6cc:	e59f13d4 	ldr	r1, [pc, #980]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f6d0:	e591101c 	ldr	r1, [r1, #28]
4001f6d4:	e5d11003 	ldrb	r1, [r1, #3]
4001f6d8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6dc:	ea000000 	b	4001f6e4 <CyU3PUibSendDescr+0x24c>
4001f6e0:	e1a00825 	lsr	r0, r5, #16
4001f6e4:	e1a06800 	lsl	r6, r0, #16
4001f6e8:	e1a06826 	lsr	r6, r6, #16
4001f6ec:	e3580000 	cmp	r8, #0
4001f6f0:	0a000001 	beq	4001f6fc <CyU3PUibSendDescr+0x264>
4001f6f4:	e3a00002 	mov	r0, #2
4001f6f8:	e5c80001 	strb	r0, [r8, #1]
4001f6fc:	ea0000ca 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f700:	e1a00000 	nop			; (mov r0, r0)
4001f704:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f708:	e1a0b820 	lsr	fp, r0, #16
4001f70c:	e35b0010 	cmp	fp, #16
4001f710:	ca000003 	bgt	4001f724 <CyU3PUibSendDescr+0x28c>
4001f714:	e59f0390 	ldr	r0, [pc, #912]	; 4001faac <CyU3PUibSendDescr+0x614>
4001f718:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f71c:	e3500000 	cmp	r0, #0
4001f720:	1a000013 	bne	4001f774 <CyU3PUibSendDescr+0x2dc>
4001f724:	e59f0378 	ldr	r0, [pc, #888]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f728:	e5d00007 	ldrb	r0, [r0, #7]
4001f72c:	e3500001 	cmp	r0, #1
4001f730:	0a000022 	beq	4001f7c0 <CyU3PUibSendDescr+0x328>
4001f734:	e59f0374 	ldr	r0, [pc, #884]	; 4001fab0 <CyU3PUibSendDescr+0x618>
4001f738:	e5900000 	ldr	r0, [r0]
4001f73c:	e3500000 	cmp	r0, #0
4001f740:	0a00001e 	beq	4001f7c0 <CyU3PUibSendDescr+0x328>
4001f744:	e1a01005 	mov	r1, r5
4001f748:	e1a00004 	mov	r0, r4
4001f74c:	e59f235c 	ldr	r2, [pc, #860]	; 4001fab0 <CyU3PUibSendDescr+0x618>
4001f750:	e5922000 	ldr	r2, [r2]
4001f754:	e12fff32 	blx	r2
4001f758:	e1a09000 	mov	r9, r0
4001f75c:	e3590000 	cmp	r9, #0
4001f760:	0a000016 	beq	4001f7c0 <CyU3PUibSendDescr+0x328>
4001f764:	e3a00001 	mov	r0, #1
4001f768:	e59f1334 	ldr	r1, [pc, #820]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f76c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f770:	ea000012 	b	4001f7c0 <CyU3PUibSendDescr+0x328>
4001f774:	e59f0330 	ldr	r0, [pc, #816]	; 4001faac <CyU3PUibSendDescr+0x614>
4001f778:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f77c:	e5d00000 	ldrb	r0, [r0]
4001f780:	e1500825 	cmp	r0, r5, lsr #16
4001f784:	2a000003 	bcs	4001f798 <CyU3PUibSendDescr+0x300>
4001f788:	e59f031c 	ldr	r0, [pc, #796]	; 4001faac <CyU3PUibSendDescr+0x614>
4001f78c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f790:	e5d00000 	ldrb	r0, [r0]
4001f794:	ea000000 	b	4001f79c <CyU3PUibSendDescr+0x304>
4001f798:	e1a00825 	lsr	r0, r5, #16
4001f79c:	e1a06800 	lsl	r6, r0, #16
4001f7a0:	e1a06826 	lsr	r6, r6, #16
4001f7a4:	e59f0300 	ldr	r0, [pc, #768]	; 4001faac <CyU3PUibSendDescr+0x614>
4001f7a8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7ac:	e3500000 	cmp	r0, #0
4001f7b0:	0a000002 	beq	4001f7c0 <CyU3PUibSendDescr+0x328>
4001f7b4:	e3a09001 	mov	r9, #1
4001f7b8:	e59f02ec 	ldr	r0, [pc, #748]	; 4001faac <CyU3PUibSendDescr+0x614>
4001f7bc:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f7c0:	ea000099 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f7c4:	e1a00000 	nop			; (mov r0, r0)
4001f7c8:	e59f02d8 	ldr	r0, [pc, #728]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f7cc:	e5900008 	ldr	r0, [r0, #8]
4001f7d0:	e3500000 	cmp	r0, #0
4001f7d4:	0a000007 	beq	4001f7f8 <CyU3PUibSendDescr+0x360>
4001f7d8:	e59f02c4 	ldr	r0, [pc, #708]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f7dc:	e5d00009 	ldrb	r0, [r0, #9]
4001f7e0:	e3500003 	cmp	r0, #3
4001f7e4:	0a000003 	beq	4001f7f8 <CyU3PUibSendDescr+0x360>
4001f7e8:	e3a09001 	mov	r9, #1
4001f7ec:	e3a0600a 	mov	r6, #10
4001f7f0:	e59f02b0 	ldr	r0, [pc, #688]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f7f4:	e5908008 	ldr	r8, [r0, #8]
4001f7f8:	ea00008b 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f7fc:	e1a00000 	nop			; (mov r0, r0)
4001f800:	e59f029c 	ldr	r0, [pc, #668]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f804:	e5d00009 	ldrb	r0, [r0, #9]
4001f808:	e3500002 	cmp	r0, #2
4001f80c:	1a00001a 	bne	4001f87c <CyU3PUibSendDescr+0x3e4>
4001f810:	e59f0290 	ldr	r0, [pc, #656]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f814:	e5900018 	ldr	r0, [r0, #24]
4001f818:	e3500000 	cmp	r0, #0
4001f81c:	0a000034 	beq	4001f8f4 <CyU3PUibSendDescr+0x45c>
4001f820:	e3a09001 	mov	r9, #1
4001f824:	e59f027c 	ldr	r0, [pc, #636]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f828:	e5908018 	ldr	r8, [r0, #24]
4001f82c:	e5900018 	ldr	r0, [r0, #24]
4001f830:	e5d00002 	ldrb	r0, [r0, #2]
4001f834:	e59f126c 	ldr	r1, [pc, #620]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f838:	e5911018 	ldr	r1, [r1, #24]
4001f83c:	e5d11003 	ldrb	r1, [r1, #3]
4001f840:	e1800401 	orr	r0, r0, r1, lsl #8
4001f844:	e1500825 	cmp	r0, r5, lsr #16
4001f848:	2a000007 	bcs	4001f86c <CyU3PUibSendDescr+0x3d4>
4001f84c:	e59f0254 	ldr	r0, [pc, #596]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f850:	e5900018 	ldr	r0, [r0, #24]
4001f854:	e5d00002 	ldrb	r0, [r0, #2]
4001f858:	e59f1248 	ldr	r1, [pc, #584]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f85c:	e5911018 	ldr	r1, [r1, #24]
4001f860:	e5d11003 	ldrb	r1, [r1, #3]
4001f864:	e1800401 	orr	r0, r0, r1, lsl #8
4001f868:	ea000000 	b	4001f870 <CyU3PUibSendDescr+0x3d8>
4001f86c:	e1a00825 	lsr	r0, r5, #16
4001f870:	e1a06800 	lsl	r6, r0, #16
4001f874:	e1a06826 	lsr	r6, r6, #16
4001f878:	ea00001d 	b	4001f8f4 <CyU3PUibSendDescr+0x45c>
4001f87c:	e59f0220 	ldr	r0, [pc, #544]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f880:	e5d00009 	ldrb	r0, [r0, #9]
4001f884:	e3500001 	cmp	r0, #1
4001f888:	1a000019 	bne	4001f8f4 <CyU3PUibSendDescr+0x45c>
4001f88c:	e59f0214 	ldr	r0, [pc, #532]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f890:	e5900014 	ldr	r0, [r0, #20]
4001f894:	e3500000 	cmp	r0, #0
4001f898:	0a000015 	beq	4001f8f4 <CyU3PUibSendDescr+0x45c>
4001f89c:	e3a09001 	mov	r9, #1
4001f8a0:	e59f0200 	ldr	r0, [pc, #512]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f8a4:	e5908014 	ldr	r8, [r0, #20]
4001f8a8:	e5900014 	ldr	r0, [r0, #20]
4001f8ac:	e5d00002 	ldrb	r0, [r0, #2]
4001f8b0:	e59f11f0 	ldr	r1, [pc, #496]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f8b4:	e5911014 	ldr	r1, [r1, #20]
4001f8b8:	e5d11003 	ldrb	r1, [r1, #3]
4001f8bc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f8c0:	e1500825 	cmp	r0, r5, lsr #16
4001f8c4:	2a000007 	bcs	4001f8e8 <CyU3PUibSendDescr+0x450>
4001f8c8:	e59f01d8 	ldr	r0, [pc, #472]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f8cc:	e5900014 	ldr	r0, [r0, #20]
4001f8d0:	e5d00002 	ldrb	r0, [r0, #2]
4001f8d4:	e59f11cc 	ldr	r1, [pc, #460]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f8d8:	e5911014 	ldr	r1, [r1, #20]
4001f8dc:	e5d11003 	ldrb	r1, [r1, #3]
4001f8e0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f8e4:	ea000000 	b	4001f8ec <CyU3PUibSendDescr+0x454>
4001f8e8:	e1a00825 	lsr	r0, r5, #16
4001f8ec:	e1a06800 	lsl	r6, r0, #16
4001f8f0:	e1a06826 	lsr	r6, r6, #16
4001f8f4:	e3580000 	cmp	r8, #0
4001f8f8:	0a000001 	beq	4001f904 <CyU3PUibSendDescr+0x46c>
4001f8fc:	e3a00007 	mov	r0, #7
4001f900:	e5c80001 	strb	r0, [r8, #1]
4001f904:	ea000048 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f908:	e1a00000 	nop			; (mov r0, r0)
4001f90c:	e59f0194 	ldr	r0, [pc, #404]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f910:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f914:	e3500000 	cmp	r0, #0
4001f918:	0a000022 	beq	4001f9a8 <CyU3PUibSendDescr+0x510>
4001f91c:	e59f0180 	ldr	r0, [pc, #384]	; 4001faa4 <CyU3PUibSendDescr+0x60c>
4001f920:	e5d00009 	ldrb	r0, [r0, #9]
4001f924:	e3500003 	cmp	r0, #3
4001f928:	0a000008 	beq	4001f950 <CyU3PUibSendDescr+0x4b8>
4001f92c:	e59f0174 	ldr	r0, [pc, #372]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f930:	e5900000 	ldr	r0, [r0]
4001f934:	e3500000 	cmp	r0, #0
4001f938:	0a00001a 	beq	4001f9a8 <CyU3PUibSendDescr+0x510>
4001f93c:	e59f0164 	ldr	r0, [pc, #356]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f940:	e5900000 	ldr	r0, [r0]
4001f944:	e5d00002 	ldrb	r0, [r0, #2]
4001f948:	e3500010 	cmp	r0, #16
4001f94c:	1a000015 	bne	4001f9a8 <CyU3PUibSendDescr+0x510>
4001f950:	e3a09001 	mov	r9, #1
4001f954:	e59f014c 	ldr	r0, [pc, #332]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f958:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f95c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f960:	e5d00002 	ldrb	r0, [r0, #2]
4001f964:	e59f113c 	ldr	r1, [pc, #316]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f968:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f96c:	e5d11003 	ldrb	r1, [r1, #3]
4001f970:	e1800401 	orr	r0, r0, r1, lsl #8
4001f974:	e1500825 	cmp	r0, r5, lsr #16
4001f978:	2a000007 	bcs	4001f99c <CyU3PUibSendDescr+0x504>
4001f97c:	e59f0124 	ldr	r0, [pc, #292]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f980:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f984:	e5d00002 	ldrb	r0, [r0, #2]
4001f988:	e59f1118 	ldr	r1, [pc, #280]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f98c:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f990:	e5d11003 	ldrb	r1, [r1, #3]
4001f994:	e1800401 	orr	r0, r0, r1, lsl #8
4001f998:	ea000000 	b	4001f9a0 <CyU3PUibSendDescr+0x508>
4001f99c:	e1a00825 	lsr	r0, r5, #16
4001f9a0:	e1a06800 	lsl	r6, r0, #16
4001f9a4:	e1a06826 	lsr	r6, r6, #16
4001f9a8:	ea00001f 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f9ac:	e1a00000 	nop			; (mov r0, r0)
4001f9b0:	e59f00f0 	ldr	r0, [pc, #240]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f9b4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f9b8:	e3500000 	cmp	r0, #0
4001f9bc:	0a00000d 	beq	4001f9f8 <CyU3PUibSendDescr+0x560>
4001f9c0:	e3a09001 	mov	r9, #1
4001f9c4:	e59f00dc 	ldr	r0, [pc, #220]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f9c8:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f9cc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f9d0:	e5d00000 	ldrb	r0, [r0]
4001f9d4:	e1500825 	cmp	r0, r5, lsr #16
4001f9d8:	2a000003 	bcs	4001f9ec <CyU3PUibSendDescr+0x554>
4001f9dc:	e59f00c4 	ldr	r0, [pc, #196]	; 4001faa8 <CyU3PUibSendDescr+0x610>
4001f9e0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f9e4:	e5d00000 	ldrb	r0, [r0]
4001f9e8:	ea000000 	b	4001f9f0 <CyU3PUibSendDescr+0x558>
4001f9ec:	e1a00825 	lsr	r0, r5, #16
4001f9f0:	e1a06800 	lsl	r6, r0, #16
4001f9f4:	e1a06826 	lsr	r6, r6, #16
4001f9f8:	ea00000b 	b	4001fa2c <CyU3PUibSendDescr+0x594>
4001f9fc:	e1a00000 	nop			; (mov r0, r0)
4001fa00:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fab0 <CyU3PUibSendDescr+0x618>
4001fa04:	e5900000 	ldr	r0, [r0]
4001fa08:	e3500000 	cmp	r0, #0
4001fa0c:	0a000005 	beq	4001fa28 <CyU3PUibSendDescr+0x590>
4001fa10:	e1a01005 	mov	r1, r5
4001fa14:	e1a00004 	mov	r0, r4
4001fa18:	e59f2090 	ldr	r2, [pc, #144]	; 4001fab0 <CyU3PUibSendDescr+0x618>
4001fa1c:	e5922000 	ldr	r2, [r2]
4001fa20:	e12fff32 	blx	r2
4001fa24:	e1a09000 	mov	r9, r0
4001fa28:	e1a00000 	nop			; (mov r0, r0)
4001fa2c:	e1a00000 	nop			; (mov r0, r0)
4001fa30:	e3590001 	cmp	r9, #1
4001fa34:	1a000017 	bne	4001fa98 <CyU3PUibSendDescr+0x600>
4001fa38:	e3580000 	cmp	r8, #0
4001fa3c:	0a000015 	beq	4001fa98 <CyU3PUibSendDescr+0x600>
4001fa40:	e1a01008 	mov	r1, r8
4001fa44:	e1a00006 	mov	r0, r6
4001fa48:	ebfff758 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
4001fa4c:	e1a07000 	mov	r7, r0
4001fa50:	e3570000 	cmp	r7, #0
4001fa54:	1a000009 	bne	4001fa80 <CyU3PUibSendDescr+0x5e8>
4001fa58:	e59d0000 	ldr	r0, [sp]
4001fa5c:	e1560000 	cmp	r6, r0
4001fa60:	aa000006 	bge	4001fa80 <CyU3PUibSendDescr+0x5e8>
4001fa64:	e24a0001 	sub	r0, sl, #1
4001fa68:	e1100006 	tst	r0, r6
4001fa6c:	1a000003 	bne	4001fa80 <CyU3PUibSendDescr+0x5e8>
4001fa70:	e1a01008 	mov	r1, r8
4001fa74:	e3a00000 	mov	r0, #0
4001fa78:	ebfff74c 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
4001fa7c:	e1a07000 	mov	r7, r0
4001fa80:	e3570000 	cmp	r7, #0
4001fa84:	0a000003 	beq	4001fa98 <CyU3PUibSendDescr+0x600>
4001fa88:	e3a02000 	mov	r2, #0
4001fa8c:	e3a01001 	mov	r1, #1
4001fa90:	e1a00002 	mov	r0, r2
4001fa94:	ebfff970 	bl	4001e05c <CyU3PUsbStall>
4001fa98:	e1a00009 	mov	r0, r9
4001fa9c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001faa0:	0000ffff 	.word	0x0000ffff
4001faa4:	40031d60 	.word	0x40031d60
4001faa8:	40031fb8 	.word	0x40031fb8
4001faac:	40031fd8 	.word	0x40031fd8
4001fab0:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PUibSocketInit:

4001fab4 <CyU3PUibSocketInit>:
4001fab4:	e3a00000 	mov	r0, #0
4001fab8:	ea00000d 	b	4001faf4 <CyU3PUibSocketInit+0x40>
4001fabc:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fac0:	e59f2080 	ldr	r2, [pc, #128]	; 4001fb48 <CyU3PUibSocketInit+0x94>
4001fac4:	e0822380 	add	r2, r2, r0, lsl #7
4001fac8:	e582100c 	str	r1, [r2, #12]
4001facc:	e3e01000 	mvn	r1, #0
4001fad0:	e59f2070 	ldr	r2, [pc, #112]	; 4001fb48 <CyU3PUibSocketInit+0x94>
4001fad4:	e0822380 	add	r2, r2, r0, lsl #7
4001fad8:	e5821010 	str	r1, [r2, #16]
4001fadc:	e3a01000 	mov	r1, #0
4001fae0:	e59f2060 	ldr	r2, [pc, #96]	; 4001fb48 <CyU3PUibSocketInit+0x94>
4001fae4:	e0822380 	add	r2, r2, r0, lsl #7
4001fae8:	e5821014 	str	r1, [r2, #20]
4001faec:	e2801001 	add	r1, r0, #1
4001faf0:	e20100ff 	and	r0, r1, #255	; 0xff
4001faf4:	e3500010 	cmp	r0, #16
4001faf8:	baffffef 	blt	4001fabc <CyU3PUibSocketInit+0x8>
4001fafc:	e3a00000 	mov	r0, #0
4001fb00:	ea00000d 	b	4001fb3c <CyU3PUibSocketInit+0x88>
4001fb04:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fb08:	e59f203c 	ldr	r2, [pc, #60]	; 4001fb4c <CyU3PUibSocketInit+0x98>
4001fb0c:	e0822380 	add	r2, r2, r0, lsl #7
4001fb10:	e582100c 	str	r1, [r2, #12]
4001fb14:	e3e01000 	mvn	r1, #0
4001fb18:	e59f202c 	ldr	r2, [pc, #44]	; 4001fb4c <CyU3PUibSocketInit+0x98>
4001fb1c:	e0822380 	add	r2, r2, r0, lsl #7
4001fb20:	e5821010 	str	r1, [r2, #16]
4001fb24:	e3a01000 	mov	r1, #0
4001fb28:	e59f201c 	ldr	r2, [pc, #28]	; 4001fb4c <CyU3PUibSocketInit+0x98>
4001fb2c:	e0822380 	add	r2, r2, r0, lsl #7
4001fb30:	e5821014 	str	r1, [r2, #20]
4001fb34:	e2801001 	add	r1, r0, #1
4001fb38:	e20100ff 	and	r0, r1, #255	; 0xff
4001fb3c:	e3500010 	cmp	r0, #16
4001fb40:	baffffef 	blt	4001fb04 <CyU3PUibSocketInit+0x50>
4001fb44:	e12fff1e 	bx	lr
4001fb48:	e0038000 	.word	0xe0038000
4001fb4c:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001fb50 <CyU3PUibStatusTimerCb>:
4001fb50:	e92d4010 	push	{r4, lr}
4001fb54:	e1a04000 	mov	r4, r0
4001fb58:	e59f0050 	ldr	r0, [pc, #80]	; 4001fbb0 <CyU3PUibStatusTimerCb+0x60>
4001fb5c:	e5900000 	ldr	r0, [r0]
4001fb60:	e3500000 	cmp	r0, #0
4001fb64:	0a000010 	beq	4001fbac <CyU3PUibStatusTimerCb+0x5c>
4001fb68:	e59f0044 	ldr	r0, [pc, #68]	; 4001fbb4 <CyU3PUibStatusTimerCb+0x64>
4001fb6c:	e5d00009 	ldrb	r0, [r0, #9]
4001fb70:	e3500003 	cmp	r0, #3
4001fb74:	1a00000c 	bne	4001fbac <CyU3PUibStatusTimerCb+0x5c>
4001fb78:	e59f0038 	ldr	r0, [pc, #56]	; 4001fbb8 <CyU3PUibStatusTimerCb+0x68>
4001fb7c:	e5900000 	ldr	r0, [r0]
4001fb80:	e3500000 	cmp	r0, #0
4001fb84:	0a000008 	beq	4001fbac <CyU3PUibStatusTimerCb+0x5c>
4001fb88:	e3a01000 	mov	r1, #0
4001fb8c:	e1a00001 	mov	r0, r1
4001fb90:	ebfff77c 	bl	4001d988 <CyU3PUsbSendErdy>
4001fb94:	e3a02000 	mov	r2, #0
4001fb98:	e3a01064 	mov	r1, #100	; 0x64
4001fb9c:	e59f0018 	ldr	r0, [pc, #24]	; 4001fbbc <CyU3PUibStatusTimerCb+0x6c>
4001fba0:	ebffac27 	bl	4000ac44 <_txe_timer_change>
4001fba4:	e59f0010 	ldr	r0, [pc, #16]	; 4001fbbc <CyU3PUibStatusTimerCb+0x6c>
4001fba8:	ebffac15 	bl	4000ac04 <_txe_timer_activate>
4001fbac:	e8bd8010 	pop	{r4, pc}
4001fbb0:	40030dd0 	.word	0x40030dd0
4001fbb4:	40031d60 	.word	0x40031d60
4001fbb8:	40030dd4 	.word	0x40030dd4
4001fbbc:	400326c0 	.word	0x400326c0

Disassembly of section i.CyU3PUibThreadEntry:

4001fbc0 <CyU3PUibThreadEntry>:
4001fbc0:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001fbc4:	e3a05000 	mov	r5, #0
4001fbc8:	e59f505c 	ldr	r5, [pc, #92]	; 4001fc2c <CyU3PUibThreadEntry+0x6c>
4001fbcc:	e3a00001 	mov	r0, #1
4001fbd0:	e59f1058 	ldr	r1, [pc, #88]	; 4001fc30 <CyU3PUibThreadEntry+0x70>
4001fbd4:	e5810000 	str	r0, [r1]
4001fbd8:	e3a02020 	mov	r2, #32
4001fbdc:	e3a01000 	mov	r1, #0
4001fbe0:	e59f004c 	ldr	r0, [pc, #76]	; 4001fc34 <CyU3PUibThreadEntry+0x74>
4001fbe4:	ebff8eb3 	bl	400036b8 <CyU3PMemSet>
4001fbe8:	ea00000e 	b	4001fc28 <CyU3PUibThreadEntry+0x68>
4001fbec:	e3e03000 	mvn	r3, #0
4001fbf0:	e58d3000 	str	r3, [sp]
4001fbf4:	e28d3004 	add	r3, sp, #4
4001fbf8:	e3a02001 	mov	r2, #1
4001fbfc:	e1a01005 	mov	r1, r5
4001fc00:	e59f0030 	ldr	r0, [pc, #48]	; 4001fc38 <CyU3PUibThreadEntry+0x78>
4001fc04:	ebffa8f8 	bl	40009fec <_txe_event_flags_get>
4001fc08:	e1a04000 	mov	r4, r0
4001fc0c:	e3540000 	cmp	r4, #0
4001fc10:	0a000000 	beq	4001fc18 <CyU3PUibThreadEntry+0x58>
4001fc14:	ea000003 	b	4001fc28 <CyU3PUibThreadEntry+0x68>
4001fc18:	e59d0004 	ldr	r0, [sp, #4]
4001fc1c:	eb0002a1 	bl	400206a8 <CyU3PUsbHandleEvents>
4001fc20:	ebffabda 	bl	4000ab90 <_txe_thread_relinquish>
4001fc24:	e1a00000 	nop			; (mov r0, r0)
4001fc28:	eaffffef 	b	4001fbec <CyU3PUibThreadEntry+0x2c>
4001fc2c:	073fbfe1 	.word	0x073fbfe1
4001fc30:	40030d80 	.word	0x40030d80
4001fc34:	400326a0 	.word	0x400326a0
4001fc38:	40031ed8 	.word	0x40031ed8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001fc3c <CyU3PUibVbusChangeHandler>:
4001fc3c:	e92d4010 	push	{r4, lr}
4001fc40:	e3a00000 	mov	r0, #0
4001fc44:	e59f114c 	ldr	r1, [pc, #332]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fc48:	e5810060 	str	r0, [r1, #96]	; 0x60
4001fc4c:	e59f0148 	ldr	r0, [pc, #328]	; 4001fd9c <CyU3PUibVbusChangeHandler+0x160>
4001fc50:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fc54:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fc58:	e1100001 	tst	r0, r1
4001fc5c:	0a00000b 	beq	4001fc90 <CyU3PUibVbusChangeHandler+0x54>
4001fc60:	e3a00002 	mov	r0, #2
4001fc64:	eb000051 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
4001fc68:	e59f0130 	ldr	r0, [pc, #304]	; 4001fda0 <CyU3PUibVbusChangeHandler+0x164>
4001fc6c:	e5900000 	ldr	r0, [r0]
4001fc70:	e3500000 	cmp	r0, #0
4001fc74:	0a000010 	beq	4001fcbc <CyU3PUibVbusChangeHandler+0x80>
4001fc78:	e3a01000 	mov	r1, #0
4001fc7c:	e3a0000b 	mov	r0, #11
4001fc80:	e59f2118 	ldr	r2, [pc, #280]	; 4001fda0 <CyU3PUibVbusChangeHandler+0x164>
4001fc84:	e5922000 	ldr	r2, [r2]
4001fc88:	e12fff32 	blx	r2
4001fc8c:	ea00000a 	b	4001fcbc <CyU3PUibVbusChangeHandler+0x80>
4001fc90:	e3a00001 	mov	r0, #1
4001fc94:	eb000045 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
4001fc98:	e59f0100 	ldr	r0, [pc, #256]	; 4001fda0 <CyU3PUibVbusChangeHandler+0x164>
4001fc9c:	e5900000 	ldr	r0, [r0]
4001fca0:	e3500000 	cmp	r0, #0
4001fca4:	0a000004 	beq	4001fcbc <CyU3PUibVbusChangeHandler+0x80>
4001fca8:	e3a01000 	mov	r1, #0
4001fcac:	e3a0000c 	mov	r0, #12
4001fcb0:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fda0 <CyU3PUibVbusChangeHandler+0x164>
4001fcb4:	e5922000 	ldr	r2, [r2]
4001fcb8:	e12fff32 	blx	r2
4001fcbc:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fd9c <CyU3PUibVbusChangeHandler+0x160>
4001fcc0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fcc4:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fcc8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fccc:	e1100001 	tst	r0, r1
4001fcd0:	0a000022 	beq	4001fd60 <CyU3PUibVbusChangeHandler+0x124>
4001fcd4:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fcd8:	e5d00008 	ldrb	r0, [r0, #8]
4001fcdc:	e3500005 	cmp	r0, #5
4001fce0:	ba000000 	blt	4001fce8 <CyU3PUibVbusChangeHandler+0xac>
4001fce4:	eb0008d6 	bl	40022044 <HandleVbusOffEvent>
4001fce8:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fcec:	e5d00008 	ldrb	r0, [r0, #8]
4001fcf0:	e3500004 	cmp	r0, #4
4001fcf4:	1a00001e 	bne	4001fd74 <CyU3PUibVbusChangeHandler+0x138>
4001fcf8:	e59f0098 	ldr	r0, [pc, #152]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fcfc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fd00:	e59f1090 	ldr	r1, [pc, #144]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fd04:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001fd08:	e2810000 	add	r0, r1, #0
4001fd0c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fd10:	e3500000 	cmp	r0, #0
4001fd14:	0a00000a 	beq	4001fd44 <CyU3PUibVbusChangeHandler+0x108>
4001fd18:	e3a00000 	mov	r0, #0
4001fd1c:	e59f1080 	ldr	r1, [pc, #128]	; 4001fda4 <CyU3PUibVbusChangeHandler+0x168>
4001fd20:	e5810014 	str	r0, [r1, #20]
4001fd24:	e59f107c 	ldr	r1, [pc, #124]	; 4001fda8 <CyU3PUibVbusChangeHandler+0x16c>
4001fd28:	e5810000 	str	r0, [r1]
4001fd2c:	e59f1078 	ldr	r1, [pc, #120]	; 4001fdac <CyU3PUibVbusChangeHandler+0x170>
4001fd30:	e5810000 	str	r0, [r1]
4001fd34:	e59f105c 	ldr	r1, [pc, #92]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fd38:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fd3c:	e5810050 	str	r0, [r1, #80]	; 0x50
4001fd40:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fd44:	e59f104c 	ldr	r1, [pc, #76]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fd48:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001fd4c:	ebfff593 	bl	4001d3a0 <CyU3PUsbPhyEnable>
4001fd50:	e3a00005 	mov	r0, #5
4001fd54:	e59f103c 	ldr	r1, [pc, #60]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fd58:	e5c10008 	strb	r0, [r1, #8]
4001fd5c:	ea000004 	b	4001fd74 <CyU3PUibVbusChangeHandler+0x138>
4001fd60:	e59f0030 	ldr	r0, [pc, #48]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fd64:	e5d00008 	ldrb	r0, [r0, #8]
4001fd68:	e3500005 	cmp	r0, #5
4001fd6c:	ba000000 	blt	4001fd74 <CyU3PUibVbusChangeHandler+0x138>
4001fd70:	eb0008b3 	bl	40022044 <HandleVbusOffEvent>
4001fd74:	ebfff0df 	bl	4001c0f8 <CyU3POtgIsStarted>
4001fd78:	e3500000 	cmp	r0, #0
4001fd7c:	0a000000 	beq	4001fd84 <CyU3PUibVbusChangeHandler+0x148>
4001fd80:	ebfff4e3 	bl	4001d114 <CyU3PUsbOtgVbusChangeHandler>
4001fd84:	e59f000c 	ldr	r0, [pc, #12]	; 4001fd98 <CyU3PUibVbusChangeHandler+0x15c>
4001fd88:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fd8c:	e59f1008 	ldr	r1, [pc, #8]	; 4001fd9c <CyU3PUibVbusChangeHandler+0x160>
4001fd90:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fd94:	e8bd8010 	pop	{r4, pc}
4001fd98:	40031d60 	.word	0x40031d60
4001fd9c:	e0051000 	.word	0xe0051000
4001fda0:	40030dbc 	.word	0x40030dbc
4001fda4:	e0033000 	.word	0xe0033000
4001fda8:	40030da4 	.word	0x40030da4
4001fdac:	40030da8 	.word	0x40030da8

Disassembly of section i.CyU3PUsbAddToEventLog:

4001fdb0 <CyU3PUsbAddToEventLog>:
4001fdb0:	e59f1058 	ldr	r1, [pc, #88]	; 4001fe10 <CyU3PUsbAddToEventLog+0x60>
4001fdb4:	e5911000 	ldr	r1, [r1]
4001fdb8:	e3510000 	cmp	r1, #0
4001fdbc:	0a000012 	beq	4001fe0c <CyU3PUsbAddToEventLog+0x5c>
4001fdc0:	e59f104c 	ldr	r1, [pc, #76]	; 4001fe14 <CyU3PUsbAddToEventLog+0x64>
4001fdc4:	e5911000 	ldr	r1, [r1]
4001fdc8:	e59f2044 	ldr	r2, [pc, #68]	; 4001fe14 <CyU3PUsbAddToEventLog+0x64>
4001fdcc:	e5922000 	ldr	r2, [r2]
4001fdd0:	e2822001 	add	r2, r2, #1
4001fdd4:	e59f3038 	ldr	r3, [pc, #56]	; 4001fe14 <CyU3PUsbAddToEventLog+0x64>
4001fdd8:	e5832000 	str	r2, [r3]
4001fddc:	e59f202c 	ldr	r2, [pc, #44]	; 4001fe10 <CyU3PUsbAddToEventLog+0x60>
4001fde0:	e5922000 	ldr	r2, [r2]
4001fde4:	e7c20001 	strb	r0, [r2, r1]
4001fde8:	e2831000 	add	r1, r3, #0
4001fdec:	e5911000 	ldr	r1, [r1]
4001fdf0:	e59f2020 	ldr	r2, [pc, #32]	; 4001fe18 <CyU3PUsbAddToEventLog+0x68>
4001fdf4:	e5922000 	ldr	r2, [r2]
4001fdf8:	e1510002 	cmp	r1, r2
4001fdfc:	3a000002 	bcc	4001fe0c <CyU3PUsbAddToEventLog+0x5c>
4001fe00:	e3a01000 	mov	r1, #0
4001fe04:	e2832000 	add	r2, r3, #0
4001fe08:	e5821000 	str	r1, [r2]
4001fe0c:	e12fff1e 	bx	lr
4001fe10:	40030db0 	.word	0x40030db0
4001fe14:	40030db4 	.word	0x40030db4
4001fe18:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001fe1c <CyU3PUsbCheckUsb3Disconnect>:
4001fe1c:	e92d4070 	push	{r4, r5, r6, lr}
4001fe20:	e3a04e19 	mov	r4, #400	; 0x190
4001fe24:	e3a06002 	mov	r6, #2
4001fe28:	e59f01fc 	ldr	r0, [pc, #508]	; 4002002c <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fe2c:	e1d000b0 	ldrh	r0, [r0]
4001fe30:	e3500001 	cmp	r0, #1
4001fe34:	da000008 	ble	4001fe5c <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fe38:	e59f01ec 	ldr	r0, [pc, #492]	; 4002002c <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fe3c:	e1d010b0 	ldrh	r1, [r0]
4001fe40:	e1a00004 	mov	r0, r4
4001fe44:	ebffc3de 	bl	40010dc4 <__aeabi_idivmod>
4001fe48:	e1a04800 	lsl	r4, r0, #16
4001fe4c:	e1a04824 	lsr	r4, r4, #16
4001fe50:	e2840001 	add	r0, r4, #1
4001fe54:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fe58:	e3a06001 	mov	r6, #1
4001fe5c:	e59f01cc 	ldr	r0, [pc, #460]	; 40020030 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fe60:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fe64:	e200503f 	and	r5, r0, #63	; 0x3f
4001fe68:	e3550010 	cmp	r5, #16
4001fe6c:	ba000004 	blt	4001fe84 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fe70:	e3550017 	cmp	r5, #23
4001fe74:	ca000002 	bgt	4001fe84 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fe78:	e3a00000 	mov	r0, #0
4001fe7c:	e59f11b0 	ldr	r1, [pc, #432]	; 40020034 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fe80:	e5810000 	str	r0, [r1]
4001fe84:	e59f01a8 	ldr	r0, [pc, #424]	; 40020034 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fe88:	e5900000 	ldr	r0, [r0]
4001fe8c:	e3500000 	cmp	r0, #0
4001fe90:	1a000000 	bne	4001fe98 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fe94:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fe98:	ea000010 	b	4001fee0 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fe9c:	e1a00006 	mov	r0, r6
4001fea0:	ebffa389 	bl	40008ccc <_tx_thread_sleep>
4001fea4:	e59f0184 	ldr	r0, [pc, #388]	; 40020030 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fea8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001feac:	e200503f 	and	r5, r0, #63	; 0x3f
4001feb0:	e59f017c 	ldr	r0, [pc, #380]	; 40020034 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001feb4:	e5900000 	ldr	r0, [r0]
4001feb8:	e3500000 	cmp	r0, #0
4001febc:	0a000003 	beq	4001fed0 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fec0:	e3550010 	cmp	r5, #16
4001fec4:	ba000005 	blt	4001fee0 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fec8:	e3550017 	cmp	r5, #23
4001fecc:	ca000003 	bgt	4001fee0 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fed0:	e3a00000 	mov	r0, #0
4001fed4:	e59f1158 	ldr	r1, [pc, #344]	; 40020034 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fed8:	e5810000 	str	r0, [r1]
4001fedc:	ea000004 	b	4001fef4 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fee0:	e1b00004 	movs	r0, r4
4001fee4:	e2441001 	sub	r1, r4, #1
4001fee8:	e1a04801 	lsl	r4, r1, #16
4001feec:	e1a04824 	lsr	r4, r4, #16
4001fef0:	1affffe9 	bne	4001fe9c <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fef4:	e1a00000 	nop			; (mov r0, r0)
4001fef8:	e59f0134 	ldr	r0, [pc, #308]	; 40020034 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fefc:	e5900000 	ldr	r0, [r0]
4001ff00:	e3500000 	cmp	r0, #0
4001ff04:	0a000047 	beq	40020028 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001ff08:	e59f0128 	ldr	r0, [pc, #296]	; 40020038 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff0c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff10:	e3100a02 	tst	r0, #8192	; 0x2000
4001ff14:	0a000020 	beq	4001ff9c <CyU3PUsbCheckUsb3Disconnect+0x180>
4001ff18:	e59f0118 	ldr	r0, [pc, #280]	; 40020038 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff1c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff20:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001ff24:	e59f110c 	ldr	r1, [pc, #268]	; 40020038 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff28:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ff2c:	e3a00002 	mov	r0, #2
4001ff30:	ebffce52 	bl	40013880 <CyU3PBusyWait>
4001ff34:	e59f0100 	ldr	r0, [pc, #256]	; 4002003c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff38:	e5900004 	ldr	r0, [r0, #4]
4001ff3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ff40:	e59f10f4 	ldr	r1, [pc, #244]	; 4002003c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff44:	e5810004 	str	r0, [r1, #4]
4001ff48:	e3a00001 	mov	r0, #1
4001ff4c:	ebffce4b 	bl	40013880 <CyU3PBusyWait>
4001ff50:	e59f00d8 	ldr	r0, [pc, #216]	; 40020030 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff54:	e590001c 	ldr	r0, [r0, #28]
4001ff58:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ff5c:	e59f10cc 	ldr	r1, [pc, #204]	; 40020030 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff60:	e581001c 	str	r0, [r1, #28]
4001ff64:	e59f00d4 	ldr	r0, [pc, #212]	; 40020040 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001ff68:	e5900000 	ldr	r0, [r0]
4001ff6c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ff70:	e3a00001 	mov	r0, #1
4001ff74:	ebffce41 	bl	40013880 <CyU3PBusyWait>
4001ff78:	e59f00bc 	ldr	r0, [pc, #188]	; 4002003c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff7c:	e5900004 	ldr	r0, [r0, #4]
4001ff80:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001ff84:	e59f10b0 	ldr	r1, [pc, #176]	; 4002003c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff88:	e5810004 	str	r0, [r1, #4]
4001ff8c:	e3a01000 	mov	r1, #0
4001ff90:	e3a00002 	mov	r0, #2
4001ff94:	ebfff1d9 	bl	4001c700 <CyU3PSetUsbCoreClock>
4001ff98:	ea000022 	b	40020028 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001ff9c:	e59f00a0 	ldr	r0, [pc, #160]	; 40020044 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001ffa0:	e5900000 	ldr	r0, [r0]
4001ffa4:	e3500000 	cmp	r0, #0
4001ffa8:	0a000007 	beq	4001ffcc <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001ffac:	e3a00000 	mov	r0, #0
4001ffb0:	e59f108c 	ldr	r1, [pc, #140]	; 40020044 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001ffb4:	e5810000 	str	r0, [r1]
4001ffb8:	e3a00001 	mov	r0, #1
4001ffbc:	ebfff481 	bl	4001d1c8 <CyU3PUsbPhyDisable>
4001ffc0:	e3a00001 	mov	r0, #1
4001ffc4:	ebfff4f5 	bl	4001d3a0 <CyU3PUsbPhyEnable>
4001ffc8:	eaffffb1 	b	4001fe94 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001ffcc:	e59f0074 	ldr	r0, [pc, #116]	; 40020048 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001ffd0:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001ffd4:	e3500000 	cmp	r0, #0
4001ffd8:	0a000011 	beq	40020024 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001ffdc:	e3a00001 	mov	r0, #1
4001ffe0:	ebfff478 	bl	4001d1c8 <CyU3PUsbPhyDisable>
4001ffe4:	e3a00003 	mov	r0, #3
4001ffe8:	e59f1058 	ldr	r1, [pc, #88]	; 40020048 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001ffec:	e5c10008 	strb	r0, [r1, #8]
4001fff0:	e3a00000 	mov	r0, #0
4001fff4:	e5c10009 	strb	r0, [r1, #9]
4001fff8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fffc:	e59f0048 	ldr	r0, [pc, #72]	; 4002004c <CyU3PUsbCheckUsb3Disconnect+0x230>
40020000:	e5900000 	ldr	r0, [r0]
40020004:	e3500000 	cmp	r0, #0
40020008:	0a000006 	beq	40020028 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4002000c:	e3a01000 	mov	r1, #0
40020010:	e3a00014 	mov	r0, #20
40020014:	e59f2030 	ldr	r2, [pc, #48]	; 4002004c <CyU3PUsbCheckUsb3Disconnect+0x230>
40020018:	e5922000 	ldr	r2, [r2]
4002001c:	e12fff32 	blx	r2
40020020:	ea000000 	b	40020028 <CyU3PUsbCheckUsb3Disconnect+0x20c>
40020024:	eb00008e 	bl	40020264 <CyU3PUsbFallBackToUsb2>
40020028:	eaffff99 	b	4001fe94 <CyU3PUsbCheckUsb3Disconnect+0x78>
4002002c:	40030dd8 	.word	0x40030dd8
40020030:	e0033000 	.word	0xe0033000
40020034:	40030d84 	.word	0x40030d84
40020038:	e0031000 	.word	0xe0031000
4002003c:	e0030000 	.word	0xe0030000
40020040:	40030c78 	.word	0x40030c78
40020044:	40030d94 	.word	0x40030d94
40020048:	40031d60 	.word	0x40031d60
4002004c:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbDescInit:

40020050 <CyU3PUsbDescInit>:
40020050:	e92d4010 	push	{r4, lr}
40020054:	e3a02074 	mov	r2, #116	; 0x74
40020058:	e3a01000 	mov	r1, #0
4002005c:	e59f0004 	ldr	r0, [pc, #4]	; 40020068 <CyU3PUsbDescInit+0x18>
40020060:	ebff8d94 	bl	400036b8 <CyU3PMemSet>
40020064:	e8bd8010 	pop	{r4, pc}
40020068:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbEpPrepare:

4002006c <CyU3PUsbEpPrepare>:
4002006c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40020070:	e1a04000 	mov	r4, r0
40020074:	e3a05001 	mov	r5, #1
40020078:	ea000061 	b	40020204 <CyU3PUsbEpPrepare+0x198>
4002007c:	e59f01b8 	ldr	r0, [pc, #440]	; 4002023c <CyU3PUsbEpPrepare+0x1d0>
40020080:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020084:	e3100901 	tst	r0, #16384	; 0x4000
40020088:	0a000029 	beq	40020134 <CyU3PUsbEpPrepare+0xc8>
4002008c:	e0850085 	add	r0, r5, r5, lsl #1
40020090:	e59f11a8 	ldr	r1, [pc, #424]	; 40020240 <CyU3PUsbEpPrepare+0x1d4>
40020094:	e0810100 	add	r0, r1, r0, lsl #2
40020098:	e1d070b0 	ldrh	r7, [r0]
4002009c:	e59f0198 	ldr	r0, [pc, #408]	; 4002023c <CyU3PUsbEpPrepare+0x1d0>
400200a0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400200a4:	e2000b03 	and	r0, r0, #3072	; 0xc00
400200a8:	e1a06520 	lsr	r6, r0, #10
400200ac:	e2440001 	sub	r0, r4, #1
400200b0:	e0800080 	add	r0, r0, r0, lsl #1
400200b4:	e59f1188 	ldr	r1, [pc, #392]	; 40020244 <CyU3PUsbEpPrepare+0x1d8>
400200b8:	e0810100 	add	r0, r1, r0, lsl #2
400200bc:	e2461001 	sub	r1, r6, #1
400200c0:	e7908101 	ldr	r8, [r0, r1, lsl #2]
400200c4:	e1570008 	cmp	r7, r8
400200c8:	8a000001 	bhi	400200d4 <CyU3PUsbEpPrepare+0x68>
400200cc:	e3570000 	cmp	r7, #0
400200d0:	1a000000 	bne	400200d8 <CyU3PUsbEpPrepare+0x6c>
400200d4:	e1a07008 	mov	r7, r8
400200d8:	e3540003 	cmp	r4, #3
400200dc:	1a000005 	bne	400200f8 <CyU3PUsbEpPrepare+0x8c>
400200e0:	e59f0160 	ldr	r0, [pc, #352]	; 40020248 <CyU3PUsbEpPrepare+0x1dc>
400200e4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400200e8:	e3800001 	orr	r0, r0, #1
400200ec:	e59f1154 	ldr	r1, [pc, #340]	; 40020248 <CyU3PUsbEpPrepare+0x1dc>
400200f0:	e7810105 	str	r0, [r1, r5, lsl #2]
400200f4:	ea000008 	b	4002011c <CyU3PUsbEpPrepare+0xb0>
400200f8:	e59f013c 	ldr	r0, [pc, #316]	; 4002023c <CyU3PUsbEpPrepare+0x1d0>
400200fc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020100:	e1a00520 	lsr	r0, r0, #10
40020104:	e1a00500 	lsl	r0, r0, #10
40020108:	e1a01b07 	lsl	r1, r7, #22
4002010c:	e1a01b21 	lsr	r1, r1, #22
40020110:	e1800001 	orr	r0, r0, r1
40020114:	e59f1120 	ldr	r1, [pc, #288]	; 4002023c <CyU3PUsbEpPrepare+0x1d0>
40020118:	e7810105 	str	r0, [r1, r5, lsl #2]
4002011c:	e59f0128 	ldr	r0, [pc, #296]	; 4002024c <CyU3PUsbEpPrepare+0x1e0>
40020120:	e7807105 	str	r7, [r0, r5, lsl #2]
40020124:	e3850080 	orr	r0, r5, #128	; 0x80
40020128:	e3a02001 	mov	r2, #1
4002012c:	e3a01000 	mov	r1, #0
40020130:	ebfff7c9 	bl	4001e05c <CyU3PUsbStall>
40020134:	e59f0114 	ldr	r0, [pc, #276]	; 40020250 <CyU3PUsbEpPrepare+0x1e4>
40020138:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002013c:	e3100901 	tst	r0, #16384	; 0x4000
40020140:	0a00002d 	beq	400201fc <CyU3PUsbEpPrepare+0x190>
40020144:	e0850085 	add	r0, r5, r5, lsl #1
40020148:	e59f1104 	ldr	r1, [pc, #260]	; 40020254 <CyU3PUsbEpPrepare+0x1e8>
4002014c:	e0810100 	add	r0, r1, r0, lsl #2
40020150:	e1d070b0 	ldrh	r7, [r0]
40020154:	e59f00f4 	ldr	r0, [pc, #244]	; 40020250 <CyU3PUsbEpPrepare+0x1e4>
40020158:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002015c:	e2000b03 	and	r0, r0, #3072	; 0xc00
40020160:	e1a06520 	lsr	r6, r0, #10
40020164:	e2440001 	sub	r0, r4, #1
40020168:	e0800080 	add	r0, r0, r0, lsl #1
4002016c:	e59f10d0 	ldr	r1, [pc, #208]	; 40020244 <CyU3PUsbEpPrepare+0x1d8>
40020170:	e0810100 	add	r0, r1, r0, lsl #2
40020174:	e2461001 	sub	r1, r6, #1
40020178:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4002017c:	e1570008 	cmp	r7, r8
40020180:	8a000001 	bhi	4002018c <CyU3PUsbEpPrepare+0x120>
40020184:	e3570000 	cmp	r7, #0
40020188:	1a000000 	bne	40020190 <CyU3PUsbEpPrepare+0x124>
4002018c:	e1a07008 	mov	r7, r8
40020190:	e3540003 	cmp	r4, #3
40020194:	1a000005 	bne	400201b0 <CyU3PUsbEpPrepare+0x144>
40020198:	e59f00b8 	ldr	r0, [pc, #184]	; 40020258 <CyU3PUsbEpPrepare+0x1ec>
4002019c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201a0:	e3800001 	orr	r0, r0, #1
400201a4:	e59f10ac 	ldr	r1, [pc, #172]	; 40020258 <CyU3PUsbEpPrepare+0x1ec>
400201a8:	e7810105 	str	r0, [r1, r5, lsl #2]
400201ac:	ea000008 	b	400201d4 <CyU3PUsbEpPrepare+0x168>
400201b0:	e59f0098 	ldr	r0, [pc, #152]	; 40020250 <CyU3PUsbEpPrepare+0x1e4>
400201b4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201b8:	e1a00520 	lsr	r0, r0, #10
400201bc:	e1a00500 	lsl	r0, r0, #10
400201c0:	e1a01b07 	lsl	r1, r7, #22
400201c4:	e1a01b21 	lsr	r1, r1, #22
400201c8:	e1800001 	orr	r0, r0, r1
400201cc:	e59f107c 	ldr	r1, [pc, #124]	; 40020250 <CyU3PUsbEpPrepare+0x1e4>
400201d0:	e7810105 	str	r0, [r1, r5, lsl #2]
400201d4:	e59f0080 	ldr	r0, [pc, #128]	; 4002025c <CyU3PUsbEpPrepare+0x1f0>
400201d8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201dc:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
400201e0:	e1800007 	orr	r0, r0, r7
400201e4:	e59f1070 	ldr	r1, [pc, #112]	; 4002025c <CyU3PUsbEpPrepare+0x1f0>
400201e8:	e7810105 	str	r0, [r1, r5, lsl #2]
400201ec:	e3a02001 	mov	r2, #1
400201f0:	e3a01000 	mov	r1, #0
400201f4:	e1a00005 	mov	r0, r5
400201f8:	ebfff797 	bl	4001e05c <CyU3PUsbStall>
400201fc:	e2850001 	add	r0, r5, #1
40020200:	e20050ff 	and	r5, r0, #255	; 0xff
40020204:	e3550010 	cmp	r5, #16
40020208:	baffff9b 	blt	4002007c <CyU3PUsbEpPrepare+0x10>
4002020c:	e3540003 	cmp	r4, #3
40020210:	1a000005 	bne	4002022c <CyU3PUsbEpPrepare+0x1c0>
40020214:	e59f1044 	ldr	r1, [pc, #68]	; 40020260 <CyU3PUsbEpPrepare+0x1f4>
40020218:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4002021c:	e3510000 	cmp	r1, #0
40020220:	0a000001 	beq	4002022c <CyU3PUsbEpPrepare+0x1c0>
40020224:	e3a01001 	mov	r1, #1
40020228:	ea000000 	b	40020230 <CyU3PUsbEpPrepare+0x1c4>
4002022c:	e3a01000 	mov	r1, #0
40020230:	e1a00001 	mov	r0, r1
40020234:	eb000854 	bl	4002238c <CyFx3UsbDmaPrefetchEnable>
40020238:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002023c:	e0031418 	.word	0xe0031418
40020240:	40031bdc 	.word	0x40031bdc
40020244:	400121c8 	.word	0x400121c8
40020248:	e0033500 	.word	0xe0033500
4002024c:	e0031c40 	.word	0xe0031c40
40020250:	e0031498 	.word	0xe0031498
40020254:	40031c9c 	.word	0x40031c9c
40020258:	e0033600 	.word	0xe0033600
4002025c:	e0031c80 	.word	0xe0031c80
40020260:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbFallBackToUsb2:

40020264 <CyU3PUsbFallBackToUsb2>:
40020264:	e92d4010 	push	{r4, lr}
40020268:	e59f0234 	ldr	r0, [pc, #564]	; 400204a4 <CyU3PUsbFallBackToUsb2+0x240>
4002026c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020270:	e3500000 	cmp	r0, #0
40020274:	0a000006 	beq	40020294 <CyU3PUsbFallBackToUsb2+0x30>
40020278:	e59f0228 	ldr	r0, [pc, #552]	; 400204a8 <CyU3PUsbFallBackToUsb2+0x244>
4002027c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020280:	e59f121c 	ldr	r1, [pc, #540]	; 400204a4 <CyU3PUsbFallBackToUsb2+0x240>
40020284:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020288:	e1100001 	tst	r0, r1
4002028c:	1a000000 	bne	40020294 <CyU3PUsbFallBackToUsb2+0x30>
40020290:	e8bd8010 	pop	{r4, pc}
40020294:	e3a00050 	mov	r0, #80	; 0x50
40020298:	ebfffec4 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
4002029c:	eb0007f1 	bl	40022268 <CyU3PVicDisableAllInterrupts>
400202a0:	e1a04000 	mov	r4, r0
400202a4:	e3a01000 	mov	r1, #0
400202a8:	e59f01fc 	ldr	r0, [pc, #508]	; 400204ac <CyU3PUsbFallBackToUsb2+0x248>
400202ac:	eb000861 	bl	40022438 <CyFx3UsbWritePhyReg>
400202b0:	e1a00004 	mov	r0, r4
400202b4:	eb0007f9 	bl	400222a0 <CyU3PVicEnableInterrupts>
400202b8:	e3a00a01 	mov	r0, #4096	; 0x1000
400202bc:	e59f11ec 	ldr	r1, [pc, #492]	; 400204b0 <CyU3PUsbFallBackToUsb2+0x24c>
400202c0:	e5810054 	str	r0, [r1, #84]	; 0x54
400202c4:	e59f01d8 	ldr	r0, [pc, #472]	; 400204a4 <CyU3PUsbFallBackToUsb2+0x240>
400202c8:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400202cc:	e2800001 	add	r0, r0, #1
400202d0:	e59f11cc 	ldr	r1, [pc, #460]	; 400204a4 <CyU3PUsbFallBackToUsb2+0x240>
400202d4:	e5810058 	str	r0, [r1, #88]	; 0x58
400202d8:	e3a00000 	mov	r0, #0
400202dc:	e59f11d0 	ldr	r1, [pc, #464]	; 400204b4 <CyU3PUsbFallBackToUsb2+0x250>
400202e0:	e5810000 	str	r0, [r1]
400202e4:	e59f01cc 	ldr	r0, [pc, #460]	; 400204b8 <CyU3PUsbFallBackToUsb2+0x254>
400202e8:	ebffaae9 	bl	4000ae94 <_txe_timer_deactivate>
400202ec:	e3a00002 	mov	r0, #2
400202f0:	ebffcd62 	bl	40013880 <CyU3PBusyWait>
400202f4:	e3a01002 	mov	r1, #2
400202f8:	e1a00001 	mov	r0, r1
400202fc:	ebfff0ff 	bl	4001c700 <CyU3PSetUsbCoreClock>
40020300:	e3a00002 	mov	r0, #2
40020304:	ebffcd5d 	bl	40013880 <CyU3PBusyWait>
40020308:	e59f01ac 	ldr	r0, [pc, #428]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
4002030c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020310:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020314:	e59f11a0 	ldr	r1, [pc, #416]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
40020318:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002031c:	e3a00002 	mov	r0, #2
40020320:	ebffcd56 	bl	40013880 <CyU3PBusyWait>
40020324:	e59f0190 	ldr	r0, [pc, #400]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
40020328:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002032c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
40020330:	e59f1184 	ldr	r1, [pc, #388]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
40020334:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020338:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4002033c:	e5900004 	ldr	r0, [r0, #4]
40020340:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020344:	e2411a01 	sub	r1, r1, #4096	; 0x1000
40020348:	e5810004 	str	r0, [r1, #4]
4002034c:	e2810a03 	add	r0, r1, #12288	; 0x3000
40020350:	e590001c 	ldr	r0, [r0, #28]
40020354:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020358:	e2811a03 	add	r1, r1, #12288	; 0x3000
4002035c:	e581001c 	str	r0, [r1, #28]
40020360:	e59f0158 	ldr	r0, [pc, #344]	; 400204c0 <CyU3PUsbFallBackToUsb2+0x25c>
40020364:	e5900000 	ldr	r0, [r0]
40020368:	e581002c 	str	r0, [r1, #44]	; 0x2c
4002036c:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
40020370:	e5900000 	ldr	r0, [r0]
40020374:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40020378:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
4002037c:	e5810000 	str	r0, [r1]
40020380:	e3a00005 	mov	r0, #5
40020384:	ebffcd3d 	bl	40013880 <CyU3PBusyWait>
40020388:	e59f0134 	ldr	r0, [pc, #308]	; 400204c4 <CyU3PUsbFallBackToUsb2+0x260>
4002038c:	e5900000 	ldr	r0, [r0]
40020390:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40020394:	e59f1128 	ldr	r1, [pc, #296]	; 400204c4 <CyU3PUsbFallBackToUsb2+0x260>
40020398:	e5810000 	str	r0, [r1]
4002039c:	e3a0000a 	mov	r0, #10
400203a0:	ebffcd36 	bl	40013880 <CyU3PBusyWait>
400203a4:	e3e00000 	mvn	r0, #0
400203a8:	e59f110c 	ldr	r1, [pc, #268]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
400203ac:	e581051c 	str	r0, [r1, #1308]	; 0x51c
400203b0:	e5810524 	str	r0, [r1, #1316]	; 0x524
400203b4:	e5810810 	str	r0, [r1, #2064]	; 0x810
400203b8:	e59f0108 	ldr	r0, [pc, #264]	; 400204c8 <CyU3PUsbFallBackToUsb2+0x264>
400203bc:	ebffd869 	bl	40016568 <CyU3PDmaChannelReset>
400203c0:	e59f0104 	ldr	r0, [pc, #260]	; 400204cc <CyU3PUsbFallBackToUsb2+0x268>
400203c4:	ebffd867 	bl	40016568 <CyU3PDmaChannelReset>
400203c8:	e3a00000 	mov	r0, #0
400203cc:	e59f10dc 	ldr	r1, [pc, #220]	; 400204b0 <CyU3PUsbFallBackToUsb2+0x24c>
400203d0:	e5810008 	str	r0, [r1, #8]
400203d4:	e3e00000 	mvn	r0, #0
400203d8:	e5810004 	str	r0, [r1, #4]
400203dc:	e3a00000 	mov	r0, #0
400203e0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400203e4:	e3e00000 	mvn	r0, #0
400203e8:	e5810404 	str	r0, [r1, #1028]	; 0x404
400203ec:	e1c10820 	bic	r0, r1, r0, lsr #16
400203f0:	e5900004 	ldr	r0, [r0, #4]
400203f4:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400203f8:	e2411a03 	sub	r1, r1, #12288	; 0x3000
400203fc:	e5810004 	str	r0, [r1, #4]
40020400:	e2810a01 	add	r0, r1, #4096	; 0x1000
40020404:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020408:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4002040c:	e2811a01 	add	r1, r1, #4096	; 0x1000
40020410:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020414:	e1a00001 	mov	r0, r1
40020418:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4002041c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020420:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020424:	e3a00001 	mov	r0, #1
40020428:	e59f1074 	ldr	r1, [pc, #116]	; 400204a4 <CyU3PUsbFallBackToUsb2+0x240>
4002042c:	e5c10009 	strb	r0, [r1, #9]
40020430:	e3a00000 	mov	r0, #0
40020434:	e5810044 	str	r0, [r1, #68]	; 0x44
40020438:	e3a00501 	mov	r0, #4194304	; 0x400000
4002043c:	e59f108c 	ldr	r1, [pc, #140]	; 400204d0 <CyU3PUsbFallBackToUsb2+0x26c>
40020440:	e5810074 	str	r0, [r1, #116]	; 0x74
40020444:	e3a00002 	mov	r0, #2
40020448:	ebffcd0c 	bl	40013880 <CyU3PBusyWait>
4002044c:	e59f0068 	ldr	r0, [pc, #104]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
40020450:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020454:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020458:	e59f105c 	ldr	r1, [pc, #92]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
4002045c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020460:	e3a00064 	mov	r0, #100	; 0x64
40020464:	ebffcd05 	bl	40013880 <CyU3PBusyWait>
40020468:	eb0007a0 	bl	400222f0 <CyFx3Usb2PhySetup>
4002046c:	e59f0060 	ldr	r0, [pc, #96]	; 400204d4 <CyU3PUsbFallBackToUsb2+0x270>
40020470:	e59f1044 	ldr	r1, [pc, #68]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
40020474:	e5810008 	str	r0, [r1, #8]
40020478:	e3a00050 	mov	r0, #80	; 0x50
4002047c:	ebffccff 	bl	40013880 <CyU3PBusyWait>
40020480:	e3a01000 	mov	r1, #0
40020484:	e3a00002 	mov	r0, #2
40020488:	ebfff09c 	bl	4001c700 <CyU3PSetUsbCoreClock>
4002048c:	e59f0028 	ldr	r0, [pc, #40]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
40020490:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020494:	e3c00008 	bic	r0, r0, #8
40020498:	e59f101c 	ldr	r1, [pc, #28]	; 400204bc <CyU3PUsbFallBackToUsb2+0x258>
4002049c:	e5810408 	str	r0, [r1, #1032]	; 0x408
400204a0:	eaffff7a 	b	40020290 <CyU3PUsbFallBackToUsb2+0x2c>
400204a4:	40031d60 	.word	0x40031d60
400204a8:	e0051000 	.word	0xe0051000
400204ac:	00001005 	.word	0x00001005
400204b0:	e0033000 	.word	0xe0033000
400204b4:	40030dd0 	.word	0x40030dd0
400204b8:	400326c0 	.word	0x400326c0
400204bc:	e0031000 	.word	0xe0031000
400204c0:	40030c78 	.word	0x40030c78
400204c4:	e0050000 	.word	0xe0050000
400204c8:	40031a9c 	.word	0x40031a9c
400204cc:	40031b3c 	.word	0x40031b3c
400204d0:	e0032000 	.word	0xe0032000
400204d4:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

400204d8 <CyU3PUsbGetEpStatus>:
400204d8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400204dc:	e1a04000 	mov	r4, r0
400204e0:	e204600f 	and	r6, r4, #15
400204e4:	e59f0090 	ldr	r0, [pc, #144]	; 4002057c <CyU3PUsbGetEpStatus+0xa4>
400204e8:	e5d00009 	ldrb	r0, [r0, #9]
400204ec:	e3500003 	cmp	r0, #3
400204f0:	1a00000b 	bne	40020524 <CyU3PUsbGetEpStatus+0x4c>
400204f4:	e3140080 	tst	r4, #128	; 0x80
400204f8:	0a000004 	beq	40020510 <CyU3PUsbGetEpStatus+0x38>
400204fc:	e59f007c 	ldr	r0, [pc, #124]	; 40020580 <CyU3PUsbGetEpStatus+0xa8>
40020500:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020504:	e2000004 	and	r0, r0, #4
40020508:	e58d0000 	str	r0, [sp]
4002050c:	ea00000f 	b	40020550 <CyU3PUsbGetEpStatus+0x78>
40020510:	e59f006c 	ldr	r0, [pc, #108]	; 40020584 <CyU3PUsbGetEpStatus+0xac>
40020514:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020518:	e2000004 	and	r0, r0, #4
4002051c:	e58d0000 	str	r0, [sp]
40020520:	ea00000a 	b	40020550 <CyU3PUsbGetEpStatus+0x78>
40020524:	e3140080 	tst	r4, #128	; 0x80
40020528:	0a000004 	beq	40020540 <CyU3PUsbGetEpStatus+0x68>
4002052c:	e59f0054 	ldr	r0, [pc, #84]	; 40020588 <CyU3PUsbGetEpStatus+0xb0>
40020530:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020534:	e2000801 	and	r0, r0, #65536	; 0x10000
40020538:	e58d0000 	str	r0, [sp]
4002053c:	ea000003 	b	40020550 <CyU3PUsbGetEpStatus+0x78>
40020540:	e59f0044 	ldr	r0, [pc, #68]	; 4002058c <CyU3PUsbGetEpStatus+0xb4>
40020544:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020548:	e2000801 	and	r0, r0, #65536	; 0x10000
4002054c:	e58d0000 	str	r0, [sp]
40020550:	e59d0000 	ldr	r0, [sp]
40020554:	e3500000 	cmp	r0, #0
40020558:	0a000001 	beq	40020564 <CyU3PUsbGetEpStatus+0x8c>
4002055c:	e3a00001 	mov	r0, #1
40020560:	e58d0000 	str	r0, [sp]
40020564:	e1a0100d 	mov	r1, sp
40020568:	e3a00002 	mov	r0, #2
4002056c:	ebfff48f 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40020570:	e1a05000 	mov	r5, r0
40020574:	e1a00005 	mov	r0, r5
40020578:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4002057c:	40031d60 	.word	0x40031d60
40020580:	e0033500 	.word	0xe0033500
40020584:	e0033600 	.word	0xe0033600
40020588:	e0031418 	.word	0xe0031418
4002058c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020590 <CyU3PUsbHandleClearFeature>:
40020590:	e92d4070 	push	{r4, r5, r6, lr}
40020594:	e1a04000 	mov	r4, r0
40020598:	e3a05000 	mov	r5, #0
4002059c:	e3540001 	cmp	r4, #1
400205a0:	0a000006 	beq	400205c0 <CyU3PUsbHandleClearFeature+0x30>
400205a4:	e3540002 	cmp	r4, #2
400205a8:	0a00000b 	beq	400205dc <CyU3PUsbHandleClearFeature+0x4c>
400205ac:	e3540030 	cmp	r4, #48	; 0x30
400205b0:	0a00000f 	beq	400205f4 <CyU3PUsbHandleClearFeature+0x64>
400205b4:	e3540031 	cmp	r4, #49	; 0x31
400205b8:	1a00002d 	bne	40020674 <CyU3PUsbHandleClearFeature+0xe4>
400205bc:	ea00001c 	b	40020634 <CyU3PUsbHandleClearFeature+0xa4>
400205c0:	e1a00000 	nop			; (mov r0, r0)
400205c4:	e59f00d8 	ldr	r0, [pc, #216]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
400205c8:	e5d00006 	ldrb	r0, [r0, #6]
400205cc:	e3c00002 	bic	r0, r0, #2
400205d0:	e59f10cc 	ldr	r1, [pc, #204]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
400205d4:	e5c10006 	strb	r0, [r1, #6]
400205d8:	e1a00000 	nop			; (mov r0, r0)
400205dc:	e59f00c0 	ldr	r0, [pc, #192]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
400205e0:	e5d00009 	ldrb	r0, [r0, #9]
400205e4:	e3500003 	cmp	r0, #3
400205e8:	0a000000 	beq	400205f0 <CyU3PUsbHandleClearFeature+0x60>
400205ec:	e3a05001 	mov	r5, #1
400205f0:	ea000021 	b	4002067c <CyU3PUsbHandleClearFeature+0xec>
400205f4:	e1a00000 	nop			; (mov r0, r0)
400205f8:	e59f00a4 	ldr	r0, [pc, #164]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
400205fc:	e5d00009 	ldrb	r0, [r0, #9]
40020600:	e3500003 	cmp	r0, #3
40020604:	1a000009 	bne	40020630 <CyU3PUsbHandleClearFeature+0xa0>
40020608:	e59f0094 	ldr	r0, [pc, #148]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
4002060c:	e5d00008 	ldrb	r0, [r0, #8]
40020610:	e3500006 	cmp	r0, #6
40020614:	1a000005 	bne	40020630 <CyU3PUsbHandleClearFeature+0xa0>
40020618:	e59f0084 	ldr	r0, [pc, #132]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
4002061c:	e5d00006 	ldrb	r0, [r0, #6]
40020620:	e3c00004 	bic	r0, r0, #4
40020624:	e59f1078 	ldr	r1, [pc, #120]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
40020628:	e5c10006 	strb	r0, [r1, #6]
4002062c:	e3a05001 	mov	r5, #1
40020630:	ea000011 	b	4002067c <CyU3PUsbHandleClearFeature+0xec>
40020634:	e1a00000 	nop			; (mov r0, r0)
40020638:	e59f0064 	ldr	r0, [pc, #100]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
4002063c:	e5d00009 	ldrb	r0, [r0, #9]
40020640:	e3500003 	cmp	r0, #3
40020644:	1a000009 	bne	40020670 <CyU3PUsbHandleClearFeature+0xe0>
40020648:	e59f0054 	ldr	r0, [pc, #84]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
4002064c:	e5d00008 	ldrb	r0, [r0, #8]
40020650:	e3500006 	cmp	r0, #6
40020654:	1a000005 	bne	40020670 <CyU3PUsbHandleClearFeature+0xe0>
40020658:	e59f0044 	ldr	r0, [pc, #68]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
4002065c:	e5d00006 	ldrb	r0, [r0, #6]
40020660:	e3c00008 	bic	r0, r0, #8
40020664:	e59f1038 	ldr	r1, [pc, #56]	; 400206a4 <CyU3PUsbHandleClearFeature+0x114>
40020668:	e5c10006 	strb	r0, [r1, #6]
4002066c:	e3a05001 	mov	r5, #1
40020670:	ea000001 	b	4002067c <CyU3PUsbHandleClearFeature+0xec>
40020674:	e1a00000 	nop			; (mov r0, r0)
40020678:	e1a00000 	nop			; (mov r0, r0)
4002067c:	e1a00000 	nop			; (mov r0, r0)
40020680:	e3550000 	cmp	r5, #0
40020684:	0a000001 	beq	40020690 <CyU3PUsbHandleClearFeature+0x100>
40020688:	ebfff0af 	bl	4001c94c <CyU3PUsbAckSetup>
4002068c:	ea000003 	b	400206a0 <CyU3PUsbHandleClearFeature+0x110>
40020690:	e3a02000 	mov	r2, #0
40020694:	e3a01001 	mov	r1, #1
40020698:	e1a00002 	mov	r0, r2
4002069c:	ebfff66e 	bl	4001e05c <CyU3PUsbStall>
400206a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400206a4:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbHandleEvents:

400206a8 <CyU3PUsbHandleEvents>:
400206a8:	e92d4070 	push	{r4, r5, r6, lr}
400206ac:	e1a04000 	mov	r4, r0
400206b0:	e3140040 	tst	r4, #64	; 0x40
400206b4:	0a000000 	beq	400206bc <CyU3PUsbHandleEvents+0x14>
400206b8:	ebfff8cc 	bl	4001e9f0 <CyU3PUibDevCtrlEvtHandler>
400206bc:	e3140020 	tst	r4, #32
400206c0:	0a000000 	beq	400206c8 <CyU3PUsbHandleEvents+0x20>
400206c4:	ebfff942 	bl	4001ebd4 <CyU3PUibEPEvtHandler>
400206c8:	e3140080 	tst	r4, #128	; 0x80
400206cc:	0a000000 	beq	400206d4 <CyU3PUsbHandleEvents+0x2c>
400206d0:	ebfffa15 	bl	4001ef2c <CyU3PUibLnkIntrEvtHandler>
400206d4:	e3140c01 	tst	r4, #256	; 0x100
400206d8:	0a000000 	beq	400206e0 <CyU3PUsbHandleEvents+0x38>
400206dc:	ebfffb32 	bl	4001f3ac <CyU3PUibProtIntrEvtHandler>
400206e0:	e3140c02 	tst	r4, #512	; 0x200
400206e4:	0a000000 	beq	400206ec <CyU3PUsbHandleEvents+0x44>
400206e8:	ebfffa37 	bl	4001efcc <CyU3PUibProtEpIntrEvtHandler>
400206ec:	e3140b01 	tst	r4, #1024	; 0x400
400206f0:	0a000006 	beq	40020710 <CyU3PUsbHandleEvents+0x68>
400206f4:	e59f0378 	ldr	r0, [pc, #888]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
400206f8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400206fc:	e3500b02 	cmp	r0, #2048	; 0x800
40020700:	1a000001 	bne	4002070c <CyU3PUsbHandleEvents+0x64>
40020704:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40020708:	ebffa16f 	bl	40008ccc <_tx_thread_sleep>
4002070c:	ebfffd4a 	bl	4001fc3c <CyU3PUibVbusChangeHandler>
40020710:	e3140b02 	tst	r4, #2048	; 0x800
40020714:	0a000000 	beq	4002071c <CyU3PUsbHandleEvents+0x74>
40020718:	eb0003ae 	bl	400215d8 <CyU3PUsbSendCompliancePatterns>
4002071c:	e3140a01 	tst	r4, #4096	; 0x1000
40020720:	0a00000c 	beq	40020758 <CyU3PUsbHandleEvents+0xb0>
40020724:	e59f034c 	ldr	r0, [pc, #844]	; 40020a78 <CyU3PUsbHandleEvents+0x3d0>
40020728:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002072c:	e3100902 	tst	r0, #32768	; 0x8000
40020730:	0a000008 	beq	40020758 <CyU3PUsbHandleEvents+0xb0>
40020734:	e3a00001 	mov	r0, #1
40020738:	e59f133c 	ldr	r1, [pc, #828]	; 40020a7c <CyU3PUsbHandleEvents+0x3d4>
4002073c:	e5810000 	str	r0, [r1]
40020740:	e59f1338 	ldr	r1, [pc, #824]	; 40020a80 <CyU3PUsbHandleEvents+0x3d8>
40020744:	e5810000 	str	r0, [r1]
40020748:	ebfffdb3 	bl	4001fe1c <CyU3PUsbCheckUsb3Disconnect>
4002074c:	e3a00000 	mov	r0, #0
40020750:	e59f1328 	ldr	r1, [pc, #808]	; 40020a80 <CyU3PUsbHandleEvents+0x3d8>
40020754:	e5810000 	str	r0, [r1]
40020758:	e3140301 	tst	r4, #67108864	; 0x4000000
4002075c:	0a000013 	beq	400207b0 <CyU3PUsbHandleEvents+0x108>
40020760:	e59f031c 	ldr	r0, [pc, #796]	; 40020a84 <CyU3PUsbHandleEvents+0x3dc>
40020764:	e5900000 	ldr	r0, [r0]
40020768:	e3500000 	cmp	r0, #0
4002076c:	0a000008 	beq	40020794 <CyU3PUsbHandleEvents+0xec>
40020770:	e59f0300 	ldr	r0, [pc, #768]	; 40020a78 <CyU3PUsbHandleEvents+0x3d0>
40020774:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020778:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
4002077c:	e3a02080 	mov	r2, #128	; 0x80
40020780:	e1821920 	orr	r1, r2, r0, lsr #18
40020784:	e3a00012 	mov	r0, #18
40020788:	e59f22f4 	ldr	r2, [pc, #756]	; 40020a84 <CyU3PUsbHandleEvents+0x3dc>
4002078c:	e5922000 	ldr	r2, [r2]
40020790:	e12fff32 	blx	r2
40020794:	e3a00b02 	mov	r0, #2048	; 0x800
40020798:	e59f12e8 	ldr	r1, [pc, #744]	; 40020a88 <CyU3PUsbHandleEvents+0x3e0>
4002079c:	e5810000 	str	r0, [r1]
400207a0:	e1c10000 	bic	r0, r1, r0
400207a4:	e5900004 	ldr	r0, [r0, #4]
400207a8:	e3800b02 	orr	r0, r0, #2048	; 0x800
400207ac:	e5810004 	str	r0, [r1, #4]
400207b0:	e3140901 	tst	r4, #16384	; 0x4000
400207b4:	0a000008 	beq	400207dc <CyU3PUsbHandleEvents+0x134>
400207b8:	e59f02c4 	ldr	r0, [pc, #708]	; 40020a84 <CyU3PUsbHandleEvents+0x3dc>
400207bc:	e5900000 	ldr	r0, [r0]
400207c0:	e3500000 	cmp	r0, #0
400207c4:	0a000004 	beq	400207dc <CyU3PUsbHandleEvents+0x134>
400207c8:	e3a01000 	mov	r1, #0
400207cc:	e3a00003 	mov	r0, #3
400207d0:	e59f22ac 	ldr	r2, [pc, #684]	; 40020a84 <CyU3PUsbHandleEvents+0x3dc>
400207d4:	e5922000 	ldr	r2, [r2]
400207d8:	e12fff32 	blx	r2
400207dc:	e3140a02 	tst	r4, #8192	; 0x2000
400207e0:	0a000008 	beq	40020808 <CyU3PUsbHandleEvents+0x160>
400207e4:	e59f0298 	ldr	r0, [pc, #664]	; 40020a84 <CyU3PUsbHandleEvents+0x3dc>
400207e8:	e5900000 	ldr	r0, [r0]
400207ec:	e3500000 	cmp	r0, #0
400207f0:	0a000004 	beq	40020808 <CyU3PUsbHandleEvents+0x160>
400207f4:	e3a01000 	mov	r1, #0
400207f8:	e3a00002 	mov	r0, #2
400207fc:	e59f2280 	ldr	r2, [pc, #640]	; 40020a84 <CyU3PUsbHandleEvents+0x3dc>
40020800:	e5922000 	ldr	r2, [r2]
40020804:	e12fff32 	blx	r2
40020808:	e3140902 	tst	r4, #32768	; 0x8000
4002080c:	0a000022 	beq	4002089c <CyU3PUsbHandleEvents+0x1f4>
40020810:	e59f0274 	ldr	r0, [pc, #628]	; 40020a8c <CyU3PUsbHandleEvents+0x3e4>
40020814:	e5900000 	ldr	r0, [r0]
40020818:	e3500000 	cmp	r0, #0
4002081c:	0a00001e 	beq	4002089c <CyU3PUsbHandleEvents+0x1f4>
40020820:	eb000690 	bl	40022268 <CyU3PVicDisableAllInterrupts>
40020824:	e1a06000 	mov	r6, r0
40020828:	e3a00001 	mov	r0, #1
4002082c:	ebffcc13 	bl	40013880 <CyU3PBusyWait>
40020830:	e59f0258 	ldr	r0, [pc, #600]	; 40020a90 <CyU3PUsbHandleEvents+0x3e8>
40020834:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40020838:	e3c00803 	bic	r0, r0, #196608	; 0x30000
4002083c:	e59f124c 	ldr	r1, [pc, #588]	; 40020a90 <CyU3PUsbHandleEvents+0x3e8>
40020840:	e5810400 	str	r0, [r1, #1024]	; 0x400
40020844:	e1a00006 	mov	r0, r6
40020848:	eb000694 	bl	400222a0 <CyU3PVicEnableInterrupts>
4002084c:	e3a00001 	mov	r0, #1
40020850:	ebffa11d 	bl	40008ccc <_tx_thread_sleep>
40020854:	e3a00000 	mov	r0, #0
40020858:	e59f122c 	ldr	r1, [pc, #556]	; 40020a8c <CyU3PUsbHandleEvents+0x3e4>
4002085c:	e5810000 	str	r0, [r1]
40020860:	e59f0228 	ldr	r0, [pc, #552]	; 40020a90 <CyU3PUsbHandleEvents+0x3e8>
40020864:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40020868:	e3100c02 	tst	r0, #512	; 0x200
4002086c:	1a00000a 	bne	4002089c <CyU3PUsbHandleEvents+0x1f4>
40020870:	e59f01fc 	ldr	r0, [pc, #508]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
40020874:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020878:	e3500000 	cmp	r0, #0
4002087c:	1a000006 	bne	4002089c <CyU3PUsbHandleEvents+0x1f4>
40020880:	e59f01ec 	ldr	r0, [pc, #492]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
40020884:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
40020888:	e3500000 	cmp	r0, #0
4002088c:	1a000002 	bne	4002089c <CyU3PUsbHandleEvents+0x1f4>
40020890:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020894:	e59f11f4 	ldr	r1, [pc, #500]	; 40020a90 <CyU3PUsbHandleEvents+0x3e8>
40020898:	e5810050 	str	r0, [r1, #80]	; 0x50
4002089c:	e3140401 	tst	r4, #16777216	; 0x1000000
400208a0:	0a000020 	beq	40020928 <CyU3PUsbHandleEvents+0x280>
400208a4:	e59f01e4 	ldr	r0, [pc, #484]	; 40020a90 <CyU3PUsbHandleEvents+0x3e8>
400208a8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400208ac:	e200503f 	and	r5, r0, #63	; 0x3f
400208b0:	e3550011 	cmp	r5, #17
400208b4:	0a000001 	beq	400208c0 <CyU3PUsbHandleEvents+0x218>
400208b8:	e3550012 	cmp	r5, #18
400208bc:	1a000018 	bne	40020924 <CyU3PUsbHandleEvents+0x27c>
400208c0:	e59f01cc 	ldr	r0, [pc, #460]	; 40020a94 <CyU3PUsbHandleEvents+0x3ec>
400208c4:	e5900000 	ldr	r0, [r0]
400208c8:	e3500000 	cmp	r0, #0
400208cc:	0a000014 	beq	40020924 <CyU3PUsbHandleEvents+0x27c>
400208d0:	e3a00005 	mov	r0, #5
400208d4:	ebffcbe9 	bl	40013880 <CyU3PBusyWait>
400208d8:	e59f01b0 	ldr	r0, [pc, #432]	; 40020a90 <CyU3PUsbHandleEvents+0x3e8>
400208dc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400208e0:	e200503f 	and	r5, r0, #63	; 0x3f
400208e4:	e3550011 	cmp	r5, #17
400208e8:	0a000001 	beq	400208f4 <CyU3PUsbHandleEvents+0x24c>
400208ec:	e3550012 	cmp	r5, #18
400208f0:	1a000001 	bne	400208fc <CyU3PUsbHandleEvents+0x254>
400208f4:	e3a00000 	mov	r0, #0
400208f8:	ebfff582 	bl	4001df08 <CyU3PUsbSetLinkPowerState>
400208fc:	e3a00001 	mov	r0, #1
40020900:	ebffa0f1 	bl	40008ccc <_tx_thread_sleep>
40020904:	e59f0188 	ldr	r0, [pc, #392]	; 40020a94 <CyU3PUsbHandleEvents+0x3ec>
40020908:	e5900000 	ldr	r0, [r0]
4002090c:	e3500000 	cmp	r0, #0
40020910:	0a000003 	beq	40020924 <CyU3PUsbHandleEvents+0x27c>
40020914:	e3a02000 	mov	r2, #0
40020918:	e3a01401 	mov	r1, #16777216	; 0x1000000
4002091c:	e59f0174 	ldr	r0, [pc, #372]	; 40020a98 <CyU3PUsbHandleEvents+0x3f0>
40020920:	ebffa5e1 	bl	4000a0ac <_txe_event_flags_set>
40020924:	e1a00000 	nop			; (mov r0, r0)
40020928:	e3140402 	tst	r4, #33554432	; 0x2000000
4002092c:	0a000019 	beq	40020998 <CyU3PUsbHandleEvents+0x2f0>
40020930:	e3a00052 	mov	r0, #82	; 0x52
40020934:	ebfffd1d 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
40020938:	e59f1134 	ldr	r1, [pc, #308]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
4002093c:	e5d11009 	ldrb	r1, [r1, #9]
40020940:	e3510003 	cmp	r1, #3
40020944:	1a000001 	bne	40020950 <CyU3PUsbHandleEvents+0x2a8>
40020948:	e3a01001 	mov	r1, #1
4002094c:	ea000000 	b	40020954 <CyU3PUsbHandleEvents+0x2ac>
40020950:	e3a01000 	mov	r1, #0
40020954:	e1a00001 	mov	r0, r1
40020958:	ebfff21a 	bl	4001d1c8 <CyU3PUsbPhyDisable>
4002095c:	e3a00001 	mov	r0, #1
40020960:	ebffa0d9 	bl	40008ccc <_tx_thread_sleep>
40020964:	e59f0108 	ldr	r0, [pc, #264]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
40020968:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002096c:	e3500000 	cmp	r0, #0
40020970:	0a000005 	beq	4002098c <CyU3PUsbHandleEvents+0x2e4>
40020974:	e59f0120 	ldr	r0, [pc, #288]	; 40020a9c <CyU3PUsbHandleEvents+0x3f4>
40020978:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002097c:	e59f10f0 	ldr	r1, [pc, #240]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
40020980:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020984:	e1100001 	tst	r0, r1
40020988:	0a000002 	beq	40020998 <CyU3PUsbHandleEvents+0x2f0>
4002098c:	e59f10e0 	ldr	r1, [pc, #224]	; 40020a74 <CyU3PUsbHandleEvents+0x3cc>
40020990:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020994:	ebfff281 	bl	4001d3a0 <CyU3PUsbPhyEnable>
40020998:	e3140801 	tst	r4, #65536	; 0x10000
4002099c:	0a000006 	beq	400209bc <CyU3PUsbHandleEvents+0x314>
400209a0:	e59f00f8 	ldr	r0, [pc, #248]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
400209a4:	e5900000 	ldr	r0, [r0]
400209a8:	e3500000 	cmp	r0, #0
400209ac:	0a000002 	beq	400209bc <CyU3PUsbHandleEvents+0x314>
400209b0:	e59f10e8 	ldr	r1, [pc, #232]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
400209b4:	e5910000 	ldr	r0, [r1]
400209b8:	e12fff30 	blx	r0
400209bc:	e3140802 	tst	r4, #131072	; 0x20000
400209c0:	0a000006 	beq	400209e0 <CyU3PUsbHandleEvents+0x338>
400209c4:	e59f00d4 	ldr	r0, [pc, #212]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
400209c8:	e5900004 	ldr	r0, [r0, #4]
400209cc:	e3500000 	cmp	r0, #0
400209d0:	0a000002 	beq	400209e0 <CyU3PUsbHandleEvents+0x338>
400209d4:	e59f10c4 	ldr	r1, [pc, #196]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
400209d8:	e5910004 	ldr	r0, [r1, #4]
400209dc:	e12fff30 	blx	r0
400209e0:	e3140701 	tst	r4, #262144	; 0x40000
400209e4:	0a000006 	beq	40020a04 <CyU3PUsbHandleEvents+0x35c>
400209e8:	e59f00b0 	ldr	r0, [pc, #176]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
400209ec:	e5900008 	ldr	r0, [r0, #8]
400209f0:	e3500000 	cmp	r0, #0
400209f4:	0a000002 	beq	40020a04 <CyU3PUsbHandleEvents+0x35c>
400209f8:	e59f10a0 	ldr	r1, [pc, #160]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
400209fc:	e5910008 	ldr	r0, [r1, #8]
40020a00:	e12fff30 	blx	r0
40020a04:	e3140702 	tst	r4, #524288	; 0x80000
40020a08:	0a000006 	beq	40020a28 <CyU3PUsbHandleEvents+0x380>
40020a0c:	e59f008c 	ldr	r0, [pc, #140]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
40020a10:	e590000c 	ldr	r0, [r0, #12]
40020a14:	e3500000 	cmp	r0, #0
40020a18:	0a000002 	beq	40020a28 <CyU3PUsbHandleEvents+0x380>
40020a1c:	e59f107c 	ldr	r1, [pc, #124]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
40020a20:	e591000c 	ldr	r0, [r1, #12]
40020a24:	e12fff30 	blx	r0
40020a28:	e3140601 	tst	r4, #1048576	; 0x100000
40020a2c:	0a000006 	beq	40020a4c <CyU3PUsbHandleEvents+0x3a4>
40020a30:	e59f0068 	ldr	r0, [pc, #104]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
40020a34:	e5900010 	ldr	r0, [r0, #16]
40020a38:	e3500000 	cmp	r0, #0
40020a3c:	0a000002 	beq	40020a4c <CyU3PUsbHandleEvents+0x3a4>
40020a40:	e59f1058 	ldr	r1, [pc, #88]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
40020a44:	e5910010 	ldr	r0, [r1, #16]
40020a48:	e12fff30 	blx	r0
40020a4c:	e3140602 	tst	r4, #2097152	; 0x200000
40020a50:	0a000006 	beq	40020a70 <CyU3PUsbHandleEvents+0x3c8>
40020a54:	e59f0044 	ldr	r0, [pc, #68]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
40020a58:	e5900014 	ldr	r0, [r0, #20]
40020a5c:	e3500000 	cmp	r0, #0
40020a60:	0a000002 	beq	40020a70 <CyU3PUsbHandleEvents+0x3c8>
40020a64:	e59f1034 	ldr	r1, [pc, #52]	; 40020aa0 <CyU3PUsbHandleEvents+0x3f8>
40020a68:	e5910014 	ldr	r0, [r1, #20]
40020a6c:	e12fff30 	blx	r0
40020a70:	e8bd8070 	pop	{r4, r5, r6, pc}
40020a74:	40031d60 	.word	0x40031d60
40020a78:	e0031000 	.word	0xe0031000
40020a7c:	40030d84 	.word	0x40030d84
40020a80:	40030d88 	.word	0x40030d88
40020a84:	40030dbc 	.word	0x40030dbc
40020a88:	e0030000 	.word	0xe0030000
40020a8c:	40030d8c 	.word	0x40030d8c
40020a90:	e0033000 	.word	0xe0033000
40020a94:	40030dd4 	.word	0x40030dd4
40020a98:	40031ed8 	.word	0x40031ed8
40020a9c:	e0051000 	.word	0xe0051000
40020aa0:	40031ddc 	.word	0x40031ddc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020aa4 <CyU3PUsbHandleGetStatus>:
40020aa4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020aa8:	e1a04000 	mov	r4, r0
40020aac:	e1a05001 	mov	r5, r1
40020ab0:	e3a07000 	mov	r7, #0
40020ab4:	e3a00000 	mov	r0, #0
40020ab8:	e58d0000 	str	r0, [sp]
40020abc:	e3540000 	cmp	r4, #0
40020ac0:	0a000004 	beq	40020ad8 <CyU3PUsbHandleGetStatus+0x34>
40020ac4:	e3540001 	cmp	r4, #1
40020ac8:	0a00001e 	beq	40020b48 <CyU3PUsbHandleGetStatus+0xa4>
40020acc:	e3540002 	cmp	r4, #2
40020ad0:	1a00002b 	bne	40020b84 <CyU3PUsbHandleGetStatus+0xe0>
40020ad4:	ea000023 	b	40020b68 <CyU3PUsbHandleGetStatus+0xc4>
40020ad8:	e1a00000 	nop			; (mov r0, r0)
40020adc:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020ae0:	1a00000d 	bne	40020b1c <CyU3PUsbHandleGetStatus+0x78>
40020ae4:	ebffed1c 	bl	4001bf5c <CyU3POtgGetMode>
40020ae8:	e3500002 	cmp	r0, #2
40020aec:	1a000008 	bne	40020b14 <CyU3PUsbHandleGetStatus+0x70>
40020af0:	e59f00a0 	ldr	r0, [pc, #160]	; 40020b98 <CyU3PUsbHandleGetStatus+0xf4>
40020af4:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020af8:	e3500000 	cmp	r0, #0
40020afc:	0a000001 	beq	40020b08 <CyU3PUsbHandleGetStatus+0x64>
40020b00:	e3a00001 	mov	r0, #1
40020b04:	ea000000 	b	40020b0c <CyU3PUsbHandleGetStatus+0x68>
40020b08:	e3a00000 	mov	r0, #0
40020b0c:	e5cd0000 	strb	r0, [sp]
40020b10:	ea00000b 	b	40020b44 <CyU3PUsbHandleGetStatus+0xa0>
40020b14:	e3a00000 	mov	r0, #0
40020b18:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020b1c:	e59f0074 	ldr	r0, [pc, #116]	; 40020b98 <CyU3PUsbHandleGetStatus+0xf4>
40020b20:	e5d00006 	ldrb	r0, [r0, #6]
40020b24:	e5cd0000 	strb	r0, [sp]
40020b28:	e59f0068 	ldr	r0, [pc, #104]	; 40020b98 <CyU3PUsbHandleGetStatus+0xf4>
40020b2c:	e5d00009 	ldrb	r0, [r0, #9]
40020b30:	e3500003 	cmp	r0, #3
40020b34:	1a000002 	bne	40020b44 <CyU3PUsbHandleGetStatus+0xa0>
40020b38:	e5dd0000 	ldrb	r0, [sp]
40020b3c:	e3c00002 	bic	r0, r0, #2
40020b40:	e5cd0000 	strb	r0, [sp]
40020b44:	e1a00000 	nop			; (mov r0, r0)
40020b48:	e1a0100d 	mov	r1, sp
40020b4c:	e3a00002 	mov	r0, #2
40020b50:	ebfff316 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40020b54:	e1a06000 	mov	r6, r0
40020b58:	e3560000 	cmp	r6, #0
40020b5c:	1a000000 	bne	40020b64 <CyU3PUsbHandleGetStatus+0xc0>
40020b60:	e3a07001 	mov	r7, #1
40020b64:	ea000008 	b	40020b8c <CyU3PUsbHandleGetStatus+0xe8>
40020b68:	e1a00000 	nop			; (mov r0, r0)
40020b6c:	e20500ff 	and	r0, r5, #255	; 0xff
40020b70:	ebfffe58 	bl	400204d8 <CyU3PUsbGetEpStatus>
40020b74:	e3500000 	cmp	r0, #0
40020b78:	1a000000 	bne	40020b80 <CyU3PUsbHandleGetStatus+0xdc>
40020b7c:	e3a07001 	mov	r7, #1
40020b80:	ea000001 	b	40020b8c <CyU3PUsbHandleGetStatus+0xe8>
40020b84:	e1a00000 	nop			; (mov r0, r0)
40020b88:	e1a00000 	nop			; (mov r0, r0)
40020b8c:	e1a00000 	nop			; (mov r0, r0)
40020b90:	e1a00007 	mov	r0, r7
40020b94:	eaffffdf 	b	40020b18 <CyU3PUsbHandleGetStatus+0x74>
40020b98:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbHandleSetFeature:

40020b9c <CyU3PUsbHandleSetFeature>:
40020b9c:	e92d4070 	push	{r4, r5, r6, lr}
40020ba0:	e1a04000 	mov	r4, r0
40020ba4:	e3a05000 	mov	r5, #0
40020ba8:	e3540001 	cmp	r4, #1
40020bac:	0a000006 	beq	40020bcc <CyU3PUsbHandleSetFeature+0x30>
40020bb0:	e3540002 	cmp	r4, #2
40020bb4:	0a00000b 	beq	40020be8 <CyU3PUsbHandleSetFeature+0x4c>
40020bb8:	e3540030 	cmp	r4, #48	; 0x30
40020bbc:	0a00000e 	beq	40020bfc <CyU3PUsbHandleSetFeature+0x60>
40020bc0:	e3540031 	cmp	r4, #49	; 0x31
40020bc4:	1a00002a 	bne	40020c74 <CyU3PUsbHandleSetFeature+0xd8>
40020bc8:	ea00001a 	b	40020c38 <CyU3PUsbHandleSetFeature+0x9c>
40020bcc:	e1a00000 	nop			; (mov r0, r0)
40020bd0:	e59f00cc 	ldr	r0, [pc, #204]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020bd4:	e5d00006 	ldrb	r0, [r0, #6]
40020bd8:	e3800002 	orr	r0, r0, #2
40020bdc:	e59f10c0 	ldr	r1, [pc, #192]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020be0:	e5c10006 	strb	r0, [r1, #6]
40020be4:	e1a00000 	nop			; (mov r0, r0)
40020be8:	ebfff0f4 	bl	4001cfc0 <CyU3PUsbGetSpeed>
40020bec:	e3500003 	cmp	r0, #3
40020bf0:	0a000000 	beq	40020bf8 <CyU3PUsbHandleSetFeature+0x5c>
40020bf4:	e3a05001 	mov	r5, #1
40020bf8:	ea00001f 	b	40020c7c <CyU3PUsbHandleSetFeature+0xe0>
40020bfc:	e1a00000 	nop			; (mov r0, r0)
40020c00:	ebfff0ee 	bl	4001cfc0 <CyU3PUsbGetSpeed>
40020c04:	e3500003 	cmp	r0, #3
40020c08:	1a000009 	bne	40020c34 <CyU3PUsbHandleSetFeature+0x98>
40020c0c:	e59f0090 	ldr	r0, [pc, #144]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020c10:	e5d00008 	ldrb	r0, [r0, #8]
40020c14:	e3500006 	cmp	r0, #6
40020c18:	1a000005 	bne	40020c34 <CyU3PUsbHandleSetFeature+0x98>
40020c1c:	e59f0080 	ldr	r0, [pc, #128]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020c20:	e5d00006 	ldrb	r0, [r0, #6]
40020c24:	e3800004 	orr	r0, r0, #4
40020c28:	e59f1074 	ldr	r1, [pc, #116]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020c2c:	e5c10006 	strb	r0, [r1, #6]
40020c30:	e3a05001 	mov	r5, #1
40020c34:	ea000010 	b	40020c7c <CyU3PUsbHandleSetFeature+0xe0>
40020c38:	e1a00000 	nop			; (mov r0, r0)
40020c3c:	ebfff0df 	bl	4001cfc0 <CyU3PUsbGetSpeed>
40020c40:	e3500003 	cmp	r0, #3
40020c44:	1a000009 	bne	40020c70 <CyU3PUsbHandleSetFeature+0xd4>
40020c48:	e59f0054 	ldr	r0, [pc, #84]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020c4c:	e5d00008 	ldrb	r0, [r0, #8]
40020c50:	e3500006 	cmp	r0, #6
40020c54:	1a000005 	bne	40020c70 <CyU3PUsbHandleSetFeature+0xd4>
40020c58:	e59f0044 	ldr	r0, [pc, #68]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020c5c:	e5d00006 	ldrb	r0, [r0, #6]
40020c60:	e3800008 	orr	r0, r0, #8
40020c64:	e59f1038 	ldr	r1, [pc, #56]	; 40020ca4 <CyU3PUsbHandleSetFeature+0x108>
40020c68:	e5c10006 	strb	r0, [r1, #6]
40020c6c:	e3a05001 	mov	r5, #1
40020c70:	ea000001 	b	40020c7c <CyU3PUsbHandleSetFeature+0xe0>
40020c74:	e1a00000 	nop			; (mov r0, r0)
40020c78:	e1a00000 	nop			; (mov r0, r0)
40020c7c:	e1a00000 	nop			; (mov r0, r0)
40020c80:	e3550000 	cmp	r5, #0
40020c84:	0a000001 	beq	40020c90 <CyU3PUsbHandleSetFeature+0xf4>
40020c88:	ebffef2f 	bl	4001c94c <CyU3PUsbAckSetup>
40020c8c:	ea000003 	b	40020ca0 <CyU3PUsbHandleSetFeature+0x104>
40020c90:	e3a02000 	mov	r2, #0
40020c94:	e3a01001 	mov	r1, #1
40020c98:	e1a00002 	mov	r0, r2
40020c9c:	ebfff4ee 	bl	4001e05c <CyU3PUsbStall>
40020ca0:	e8bd8070 	pop	{r4, r5, r6, pc}
40020ca4:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020ca8 <CyU3PUsbReEnableUsb3>:
40020ca8:	e92d4010 	push	{r4, lr}
40020cac:	e3a00051 	mov	r0, #81	; 0x51
40020cb0:	ebfffc3e 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
40020cb4:	e59f018c 	ldr	r0, [pc, #396]	; 40020e48 <CyU3PUsbReEnableUsb3+0x1a0>
40020cb8:	e5900004 	ldr	r0, [r0, #4]
40020cbc:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020cc0:	e59f1180 	ldr	r1, [pc, #384]	; 40020e48 <CyU3PUsbReEnableUsb3+0x1a0>
40020cc4:	e5810004 	str	r0, [r1, #4]
40020cc8:	e3e00000 	mvn	r0, #0
40020ccc:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020cd0:	e5810004 	str	r0, [r1, #4]
40020cd4:	e59f0170 	ldr	r0, [pc, #368]	; 40020e4c <CyU3PUsbReEnableUsb3+0x1a4>
40020cd8:	e5810008 	str	r0, [r1, #8]
40020cdc:	e3e00000 	mvn	r0, #0
40020ce0:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020ce4:	e59f0164 	ldr	r0, [pc, #356]	; 40020e50 <CyU3PUsbReEnableUsb3+0x1a8>
40020ce8:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020cec:	e59f0160 	ldr	r0, [pc, #352]	; 40020e54 <CyU3PUsbReEnableUsb3+0x1ac>
40020cf0:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020cf4:	e3500000 	cmp	r0, #0
40020cf8:	0a000003 	beq	40020d0c <CyU3PUsbReEnableUsb3+0x64>
40020cfc:	e1a00001 	mov	r0, r1
40020d00:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020d04:	e3800c01 	orr	r0, r0, #256	; 0x100
40020d08:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d0c:	e3a00000 	mov	r0, #0
40020d10:	e59f113c 	ldr	r1, [pc, #316]	; 40020e54 <CyU3PUsbReEnableUsb3+0x1ac>
40020d14:	e5810044 	str	r0, [r1, #68]	; 0x44
40020d18:	e59f0138 	ldr	r0, [pc, #312]	; 40020e58 <CyU3PUsbReEnableUsb3+0x1b0>
40020d1c:	e5900000 	ldr	r0, [r0]
40020d20:	e3500000 	cmp	r0, #0
40020d24:	0a000003 	beq	40020d38 <CyU3PUsbReEnableUsb3+0x90>
40020d28:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020d2c:	e59f1128 	ldr	r1, [pc, #296]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020d30:	e5810050 	str	r0, [r1, #80]	; 0x50
40020d34:	ea000002 	b	40020d44 <CyU3PUsbReEnableUsb3+0x9c>
40020d38:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020d3c:	e59f1118 	ldr	r1, [pc, #280]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020d40:	e5810050 	str	r0, [r1, #80]	; 0x50
40020d44:	eb000575 	bl	40022320 <CyFx3Usb3LnkSetup>
40020d48:	e59f0110 	ldr	r0, [pc, #272]	; 40020e60 <CyU3PUsbReEnableUsb3+0x1b8>
40020d4c:	e59f1108 	ldr	r1, [pc, #264]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020d50:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020d54:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020d58:	e1c10000 	bic	r0, r1, r0
40020d5c:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020d60:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020d64:	e5810158 	str	r0, [r1, #344]	; 0x158
40020d68:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020d6c:	e581001c 	str	r0, [r1, #28]
40020d70:	e3a01000 	mov	r1, #0
40020d74:	e3a00001 	mov	r0, #1
40020d78:	ebffee60 	bl	4001c700 <CyU3PSetUsbCoreClock>
40020d7c:	e3a0000a 	mov	r0, #10
40020d80:	ebffcabe 	bl	40013880 <CyU3PBusyWait>
40020d84:	eb000537 	bl	40022268 <CyU3PVicDisableAllInterrupts>
40020d88:	e1a04000 	mov	r4, r0
40020d8c:	e3a00000 	mov	r0, #0
40020d90:	e59f10cc 	ldr	r1, [pc, #204]	; 40020e64 <CyU3PUsbReEnableUsb3+0x1bc>
40020d94:	e5810000 	str	r0, [r1]
40020d98:	e3a00a01 	mov	r0, #4096	; 0x1000
40020d9c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020da0:	e5810054 	str	r0, [r1, #84]	; 0x54
40020da4:	e1c10080 	bic	r0, r1, r0, lsl #1
40020da8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020dac:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020db0:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020db4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020db8:	e3a00064 	mov	r0, #100	; 0x64
40020dbc:	ebffcaaf 	bl	40013880 <CyU3PBusyWait>
40020dc0:	e59f0094 	ldr	r0, [pc, #148]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020dc4:	e5900000 	ldr	r0, [r0]
40020dc8:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020dcc:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020dd0:	e59f1084 	ldr	r1, [pc, #132]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020dd4:	e5810000 	str	r0, [r1]
40020dd8:	e59f0088 	ldr	r0, [pc, #136]	; 40020e68 <CyU3PUsbReEnableUsb3+0x1c0>
40020ddc:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020de0:	e3a01080 	mov	r1, #128	; 0x80
40020de4:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020de8:	eb000592 	bl	40022438 <CyFx3UsbWritePhyReg>
40020dec:	e3a01d06 	mov	r1, #384	; 0x180
40020df0:	e59f0074 	ldr	r0, [pc, #116]	; 40020e6c <CyU3PUsbReEnableUsb3+0x1c4>
40020df4:	eb00058f 	bl	40022438 <CyFx3UsbWritePhyReg>
40020df8:	e3a01080 	mov	r1, #128	; 0x80
40020dfc:	e59f006c 	ldr	r0, [pc, #108]	; 40020e70 <CyU3PUsbReEnableUsb3+0x1c8>
40020e00:	eb00058c 	bl	40022438 <CyFx3UsbWritePhyReg>
40020e04:	e59f003c 	ldr	r0, [pc, #60]	; 40020e48 <CyU3PUsbReEnableUsb3+0x1a0>
40020e08:	e5900004 	ldr	r0, [r0, #4]
40020e0c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020e10:	e59f1030 	ldr	r1, [pc, #48]	; 40020e48 <CyU3PUsbReEnableUsb3+0x1a0>
40020e14:	e5810004 	str	r0, [r1, #4]
40020e18:	e1a00004 	mov	r0, r4
40020e1c:	eb00051f 	bl	400222a0 <CyU3PVicEnableInterrupts>
40020e20:	e59f0034 	ldr	r0, [pc, #52]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020e24:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020e28:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020e2c:	e59f1028 	ldr	r1, [pc, #40]	; 40020e5c <CyU3PUsbReEnableUsb3+0x1b4>
40020e30:	e5810054 	str	r0, [r1, #84]	; 0x54
40020e34:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020e38:	e581001c 	str	r0, [r1, #28]
40020e3c:	e3a00064 	mov	r0, #100	; 0x64
40020e40:	ebffca8e 	bl	40013880 <CyU3PBusyWait>
40020e44:	e8bd8010 	pop	{r4, pc}
40020e48:	e0030000 	.word	0xe0030000
40020e4c:	00038081 	.word	0x00038081
40020e50:	00004a3d 	.word	0x00004a3d
40020e54:	40031d60 	.word	0x40031d60
40020e58:	40030d60 	.word	0x40030d60
40020e5c:	e0033000 	.word	0xe0033000
40020e60:	00000908 	.word	0x00000908
40020e64:	40030d94 	.word	0x40030d94
40020e68:	00310418 	.word	0x00310418
40020e6c:	00001006 	.word	0x00001006
40020e70:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020e74 <CyU3PUsbRegisterEventCallback>:
40020e74:	e92d4010 	push	{r4, lr}
40020e78:	e1a04000 	mov	r4, r0
40020e7c:	e59f0038 	ldr	r0, [pc, #56]	; 40020ebc <CyU3PUsbRegisterEventCallback+0x48>
40020e80:	e5804000 	str	r4, [r0]
40020e84:	e59f0034 	ldr	r0, [pc, #52]	; 40020ec0 <CyU3PUsbRegisterEventCallback+0x4c>
40020e88:	e5d00008 	ldrb	r0, [r0, #8]
40020e8c:	e3500000 	cmp	r0, #0
40020e90:	0a000008 	beq	40020eb8 <CyU3PUsbRegisterEventCallback+0x44>
40020e94:	e59f0028 	ldr	r0, [pc, #40]	; 40020ec4 <CyU3PUsbRegisterEventCallback+0x50>
40020e98:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020e9c:	e59f101c 	ldr	r1, [pc, #28]	; 40020ec0 <CyU3PUsbRegisterEventCallback+0x4c>
40020ea0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020ea4:	e1100001 	tst	r0, r1
40020ea8:	0a000002 	beq	40020eb8 <CyU3PUsbRegisterEventCallback+0x44>
40020eac:	e3a01000 	mov	r1, #0
40020eb0:	e3a0000b 	mov	r0, #11
40020eb4:	e12fff34 	blx	r4
40020eb8:	e8bd8010 	pop	{r4, pc}
40020ebc:	40030dbc 	.word	0x40030dbc
40020ec0:	40031d60 	.word	0x40031d60
40020ec4:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020ec8 <CyU3PUsbRegisterSetupCallback>:
40020ec8:	e59f2050 	ldr	r2, [pc, #80]	; 40020f20 <CyU3PUsbRegisterSetupCallback+0x58>
40020ecc:	e5820000 	str	r0, [r2]
40020ed0:	e3510001 	cmp	r1, #1
40020ed4:	1a000003 	bne	40020ee8 <CyU3PUsbRegisterSetupCallback+0x20>
40020ed8:	e3a02000 	mov	r2, #0
40020edc:	e59f3040 	ldr	r3, [pc, #64]	; 40020f24 <CyU3PUsbRegisterSetupCallback+0x5c>
40020ee0:	e5c32007 	strb	r2, [r3, #7]
40020ee4:	ea00000c 	b	40020f1c <CyU3PUsbRegisterSetupCallback+0x54>
40020ee8:	e3a02001 	mov	r2, #1
40020eec:	e59f3030 	ldr	r3, [pc, #48]	; 40020f24 <CyU3PUsbRegisterSetupCallback+0x5c>
40020ef0:	e5c32007 	strb	r2, [r3, #7]
40020ef4:	e2832000 	add	r2, r3, #0
40020ef8:	e5d22008 	ldrb	r2, [r2, #8]
40020efc:	e3520000 	cmp	r2, #0
40020f00:	da000005 	ble	40020f1c <CyU3PUsbRegisterSetupCallback+0x54>
40020f04:	e2832000 	add	r2, r3, #0
40020f08:	e5d22008 	ldrb	r2, [r2, #8]
40020f0c:	e3520003 	cmp	r2, #3
40020f10:	aa000001 	bge	40020f1c <CyU3PUsbRegisterSetupCallback+0x54>
40020f14:	e3a02003 	mov	r2, #3
40020f18:	e5c32008 	strb	r2, [r3, #8]
40020f1c:	e12fff1e 	bx	lr
40020f20:	40030dc0 	.word	0x40030dc0
40020f24:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbResetHandler:

40020f28 <CyU3PUsbResetHandler>:
40020f28:	e92d4010 	push	{r4, lr}
40020f2c:	e3a00001 	mov	r0, #1
40020f30:	e59f1124 	ldr	r1, [pc, #292]	; 4002105c <CyU3PUsbResetHandler+0x134>
40020f34:	e5c10009 	strb	r0, [r1, #9]
40020f38:	e59f0120 	ldr	r0, [pc, #288]	; 40021060 <CyU3PUsbResetHandler+0x138>
40020f3c:	e5900018 	ldr	r0, [r0, #24]
40020f40:	e59f1118 	ldr	r1, [pc, #280]	; 40021060 <CyU3PUsbResetHandler+0x138>
40020f44:	e581000c 	str	r0, [r1, #12]
40020f48:	e2810000 	add	r0, r1, #0
40020f4c:	e5900014 	ldr	r0, [r0, #20]
40020f50:	e5810010 	str	r0, [r1, #16]
40020f54:	e59f0108 	ldr	r0, [pc, #264]	; 40021064 <CyU3PUsbResetHandler+0x13c>
40020f58:	e5900000 	ldr	r0, [r0]
40020f5c:	e3500000 	cmp	r0, #0
40020f60:	0a000010 	beq	40020fa8 <CyU3PUsbResetHandler+0x80>
40020f64:	e59f00f0 	ldr	r0, [pc, #240]	; 4002105c <CyU3PUsbResetHandler+0x134>
40020f68:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020f6c:	e3500000 	cmp	r0, #0
40020f70:	1a000007 	bne	40020f94 <CyU3PUsbResetHandler+0x6c>
40020f74:	e3a01000 	mov	r1, #0
40020f78:	e1a00001 	mov	r0, r1
40020f7c:	e59f20e0 	ldr	r2, [pc, #224]	; 40021064 <CyU3PUsbResetHandler+0x13c>
40020f80:	e5922000 	ldr	r2, [r2]
40020f84:	e12fff32 	blx	r2
40020f88:	e3a00001 	mov	r0, #1
40020f8c:	e59f10c8 	ldr	r1, [pc, #200]	; 4002105c <CyU3PUsbResetHandler+0x134>
40020f90:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020f94:	e3a01000 	mov	r1, #0
40020f98:	e3a00004 	mov	r0, #4
40020f9c:	e59f20c0 	ldr	r2, [pc, #192]	; 40021064 <CyU3PUsbResetHandler+0x13c>
40020fa0:	e5922000 	ldr	r2, [r2]
40020fa4:	e12fff32 	blx	r2
40020fa8:	e59f00b8 	ldr	r0, [pc, #184]	; 40021068 <CyU3PUsbResetHandler+0x140>
40020fac:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020fb0:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020fb4:	e59f10ac 	ldr	r1, [pc, #172]	; 40021068 <CyU3PUsbResetHandler+0x140>
40020fb8:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020fbc:	e3a00001 	mov	r0, #1
40020fc0:	ebffca2e 	bl	40013880 <CyU3PBusyWait>
40020fc4:	e59f009c 	ldr	r0, [pc, #156]	; 40021068 <CyU3PUsbResetHandler+0x140>
40020fc8:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020fcc:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020fd0:	e59f1090 	ldr	r1, [pc, #144]	; 40021068 <CyU3PUsbResetHandler+0x140>
40020fd4:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020fd8:	e3a00001 	mov	r0, #1
40020fdc:	ebffca27 	bl	40013880 <CyU3PBusyWait>
40020fe0:	e3a00040 	mov	r0, #64	; 0x40
40020fe4:	e59f107c 	ldr	r1, [pc, #124]	; 40021068 <CyU3PUsbResetHandler+0x140>
40020fe8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020fec:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020ff0:	e1c10000 	bic	r0, r1, r0
40020ff4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020ff8:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020ffc:	e5810418 	str	r0, [r1, #1048]	; 0x418
40021000:	e1a00001 	mov	r0, r1
40021004:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40021008:	e3800901 	orr	r0, r0, #16384	; 0x4000
4002100c:	e5810498 	str	r0, [r1, #1176]	; 0x498
40021010:	e3a00001 	mov	r0, #1
40021014:	ebfffc14 	bl	4002006c <CyU3PUsbEpPrepare>
40021018:	e59f003c 	ldr	r0, [pc, #60]	; 4002105c <CyU3PUsbResetHandler+0x134>
4002101c:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40021020:	e3500000 	cmp	r0, #0
40021024:	0a00000b 	beq	40021058 <CyU3PUsbResetHandler+0x130>
40021028:	e59f002c 	ldr	r0, [pc, #44]	; 4002105c <CyU3PUsbResetHandler+0x134>
4002102c:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021030:	e3500003 	cmp	r0, #3
40021034:	3a000002 	bcc	40021044 <CyU3PUsbResetHandler+0x11c>
40021038:	e3a00000 	mov	r0, #0
4002103c:	e59f1018 	ldr	r1, [pc, #24]	; 4002105c <CyU3PUsbResetHandler+0x134>
40021040:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021044:	e59f001c 	ldr	r0, [pc, #28]	; 40021068 <CyU3PUsbResetHandler+0x140>
40021048:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002104c:	e3100901 	tst	r0, #16384	; 0x4000
40021050:	1a000000 	bne	40021058 <CyU3PUsbResetHandler+0x130>
40021054:	ebffff13 	bl	40020ca8 <CyU3PUsbReEnableUsb3>
40021058:	e8bd8010 	pop	{r4, pc}
4002105c:	40031d60 	.word	0x40031d60
40021060:	40031fb8 	.word	0x40031fb8
40021064:	40030dbc 	.word	0x40030dbc
40021068:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

4002106c <CyU3PUsbResumeHandler>:
4002106c:	e92d4010 	push	{r4, lr}
40021070:	e59f003c 	ldr	r0, [pc, #60]	; 400210b4 <CyU3PUsbResumeHandler+0x48>
40021074:	e5d00008 	ldrb	r0, [r0, #8]
40021078:	e3500005 	cmp	r0, #5
4002107c:	ba00000b 	blt	400210b0 <CyU3PUsbResumeHandler+0x44>
40021080:	e59f0030 	ldr	r0, [pc, #48]	; 400210b8 <CyU3PUsbResumeHandler+0x4c>
40021084:	e5900000 	ldr	r0, [r0]
40021088:	e3500000 	cmp	r0, #0
4002108c:	0a000004 	beq	400210a4 <CyU3PUsbResumeHandler+0x38>
40021090:	e3a01000 	mov	r1, #0
40021094:	e3a00003 	mov	r0, #3
40021098:	e59f2018 	ldr	r2, [pc, #24]	; 400210b8 <CyU3PUsbResumeHandler+0x4c>
4002109c:	e5922000 	ldr	r2, [r2]
400210a0:	e12fff32 	blx	r2
400210a4:	e3a00006 	mov	r0, #6
400210a8:	e59f1004 	ldr	r1, [pc, #4]	; 400210b4 <CyU3PUsbResumeHandler+0x48>
400210ac:	e5c10008 	strb	r0, [r1, #8]
400210b0:	e8bd8010 	pop	{r4, pc}
400210b4:	40031d60 	.word	0x40031d60
400210b8:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbSSConnecthandler:

400210bc <CyU3PUsbSSConnecthandler>:
400210bc:	e92d4010 	push	{r4, lr}
400210c0:	e59f01d4 	ldr	r0, [pc, #468]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
400210c4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400210c8:	e3100a02 	tst	r0, #8192	; 0x2000
400210cc:	0a00002b 	beq	40021180 <CyU3PUsbSSConnecthandler+0xc4>
400210d0:	e59f01c8 	ldr	r0, [pc, #456]	; 400212a0 <CyU3PUsbSSConnecthandler+0x1e4>
400210d4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400210d8:	e200403f 	and	r4, r0, #63	; 0x3f
400210dc:	ea000003 	b	400210f0 <CyU3PUsbSSConnecthandler+0x34>
400210e0:	ebffa6aa 	bl	4000ab90 <_txe_thread_relinquish>
400210e4:	e59f01b4 	ldr	r0, [pc, #436]	; 400212a0 <CyU3PUsbSSConnecthandler+0x1e4>
400210e8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400210ec:	e200403f 	and	r4, r0, #63	; 0x3f
400210f0:	e59f01a4 	ldr	r0, [pc, #420]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
400210f4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400210f8:	e3100901 	tst	r0, #16384	; 0x4000
400210fc:	0a000001 	beq	40021108 <CyU3PUsbSSConnecthandler+0x4c>
40021100:	e3540008 	cmp	r4, #8
40021104:	0afffff5 	beq	400210e0 <CyU3PUsbSSConnecthandler+0x24>
40021108:	e3540017 	cmp	r4, #23
4002110c:	1a00000a 	bne	4002113c <CyU3PUsbSSConnecthandler+0x80>
40021110:	e59f018c 	ldr	r0, [pc, #396]	; 400212a4 <CyU3PUsbSSConnecthandler+0x1e8>
40021114:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40021118:	e3500000 	cmp	r0, #0
4002111c:	1a000002 	bne	4002112c <CyU3PUsbSSConnecthandler+0x70>
40021120:	e3a00010 	mov	r0, #16
40021124:	ebfffb21 	bl	4001fdb0 <CyU3PUsbAddToEventLog>
40021128:	eb000060 	bl	400212b0 <CyU3PUsbSSDisConnecthandler>
4002112c:	e3a00003 	mov	r0, #3
40021130:	e59f116c 	ldr	r1, [pc, #364]	; 400212a4 <CyU3PUsbSSConnecthandler+0x1e8>
40021134:	e5c10009 	strb	r0, [r1, #9]
40021138:	e8bd8010 	pop	{r4, pc}
4002113c:	e59f0158 	ldr	r0, [pc, #344]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
40021140:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021144:	e3100901 	tst	r0, #16384	; 0x4000
40021148:	1a000000 	bne	40021150 <CyU3PUsbSSConnecthandler+0x94>
4002114c:	eafffff9 	b	40021138 <CyU3PUsbSSConnecthandler+0x7c>
40021150:	e59f0144 	ldr	r0, [pc, #324]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
40021154:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40021158:	e3800008 	orr	r0, r0, #8
4002115c:	e59f1138 	ldr	r1, [pc, #312]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
40021160:	e5810408 	str	r0, [r1, #1032]	; 0x408
40021164:	e1a00001 	mov	r0, r1
40021168:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002116c:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40021170:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021174:	e1a00001 	mov	r0, r1
40021178:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4002117c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40021180:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40021184:	e59f111c 	ldr	r1, [pc, #284]	; 400212a8 <CyU3PUsbSSConnecthandler+0x1ec>
40021188:	e5810008 	str	r0, [r1, #8]
4002118c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40021190:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40021194:	e581001c 	str	r0, [r1, #28]
40021198:	e3a00003 	mov	r0, #3
4002119c:	e59f1100 	ldr	r1, [pc, #256]	; 400212a4 <CyU3PUsbSSConnecthandler+0x1e8>
400211a0:	e5c10009 	strb	r0, [r1, #9]
400211a4:	e59f00f0 	ldr	r0, [pc, #240]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
400211a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211ac:	e3800902 	orr	r0, r0, #32768	; 0x8000
400211b0:	e59f10e4 	ldr	r1, [pc, #228]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
400211b4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400211b8:	e1a00001 	mov	r0, r1
400211bc:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400211c0:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400211c4:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400211c8:	e3a00001 	mov	r0, #1
400211cc:	ebffc9ab 	bl	40013880 <CyU3PBusyWait>
400211d0:	e59f00c4 	ldr	r0, [pc, #196]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
400211d4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400211d8:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400211dc:	e59f10b8 	ldr	r1, [pc, #184]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
400211e0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400211e4:	e3a00001 	mov	r0, #1
400211e8:	ebffc9a4 	bl	40013880 <CyU3PBusyWait>
400211ec:	e3a00000 	mov	r0, #0
400211f0:	ebffeecd 	bl	4001cd2c <CyU3PUsbFlushEp>
400211f4:	e3a00080 	mov	r0, #128	; 0x80
400211f8:	ebffeecb 	bl	4001cd2c <CyU3PUsbFlushEp>
400211fc:	e59f009c 	ldr	r0, [pc, #156]	; 400212a0 <CyU3PUsbSSConnecthandler+0x1e4>
40021200:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021204:	e3800001 	orr	r0, r0, #1
40021208:	e59f1090 	ldr	r1, [pc, #144]	; 400212a0 <CyU3PUsbSSConnecthandler+0x1e4>
4002120c:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021210:	e3a00c02 	mov	r0, #512	; 0x200
40021214:	e1c11200 	bic	r1, r1, r0, lsl #4
40021218:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002121c:	e1810200 	orr	r0, r1, r0, lsl #4
40021220:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021224:	e3800001 	orr	r0, r0, #1
40021228:	e2811a02 	add	r1, r1, #8192	; 0x2000
4002122c:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021230:	e3a00c02 	mov	r0, #512	; 0x200
40021234:	e1c11200 	bic	r1, r1, r0, lsl #4
40021238:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4002123c:	e3a00000 	mov	r0, #0
40021240:	ebfff121 	bl	4001d6cc <CyU3PUsbResetEp>
40021244:	e3a00000 	mov	r0, #0
40021248:	ebffeeb7 	bl	4001cd2c <CyU3PUsbFlushEp>
4002124c:	e3a00080 	mov	r0, #128	; 0x80
40021250:	ebfff11d 	bl	4001d6cc <CyU3PUsbResetEp>
40021254:	e3a00080 	mov	r0, #128	; 0x80
40021258:	ebffeeb3 	bl	4001cd2c <CyU3PUsbFlushEp>
4002125c:	e3a00c02 	mov	r0, #512	; 0x200
40021260:	e59f1034 	ldr	r1, [pc, #52]	; 4002129c <CyU3PUsbSSConnecthandler+0x1e0>
40021264:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021268:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4002126c:	e59f0038 	ldr	r0, [pc, #56]	; 400212ac <CyU3PUsbSSConnecthandler+0x1f0>
40021270:	e5900000 	ldr	r0, [r0]
40021274:	e3500000 	cmp	r0, #0
40021278:	0a000004 	beq	40021290 <CyU3PUsbSSConnecthandler+0x1d4>
4002127c:	e3a01001 	mov	r1, #1
40021280:	e3a00000 	mov	r0, #0
40021284:	e59f2020 	ldr	r2, [pc, #32]	; 400212ac <CyU3PUsbSSConnecthandler+0x1f0>
40021288:	e5922000 	ldr	r2, [r2]
4002128c:	e12fff32 	blx	r2
40021290:	e3a00003 	mov	r0, #3
40021294:	ebfffb74 	bl	4002006c <CyU3PUsbEpPrepare>
40021298:	eaffffa6 	b	40021138 <CyU3PUsbSSConnecthandler+0x7c>
4002129c:	e0031000 	.word	0xe0031000
400212a0:	e0033000 	.word	0xe0033000
400212a4:	40031d60 	.word	0x40031d60
400212a8:	e0052000 	.word	0xe0052000
400212ac:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

400212b0 <CyU3PUsbSSDisConnecthandler>:
400212b0:	e92d4010 	push	{r4, lr}
400212b4:	e59f0164 	ldr	r0, [pc, #356]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
400212b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212bc:	e3500000 	cmp	r0, #0
400212c0:	0a000005 	beq	400212dc <CyU3PUsbSSDisConnecthandler+0x2c>
400212c4:	e59f0158 	ldr	r0, [pc, #344]	; 40021424 <CyU3PUsbSSDisConnecthandler+0x174>
400212c8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400212cc:	e59f114c 	ldr	r1, [pc, #332]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
400212d0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400212d4:	e1100001 	tst	r0, r1
400212d8:	0a00004e 	beq	40021418 <CyU3PUsbSSDisConnecthandler+0x168>
400212dc:	e59f013c 	ldr	r0, [pc, #316]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
400212e0:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400212e4:	e2800001 	add	r0, r0, #1
400212e8:	e59f1130 	ldr	r1, [pc, #304]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
400212ec:	e5810058 	str	r0, [r1, #88]	; 0x58
400212f0:	e59f0130 	ldr	r0, [pc, #304]	; 40021428 <CyU3PUsbSSDisConnecthandler+0x178>
400212f4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400212f8:	e3100a02 	tst	r0, #8192	; 0x2000
400212fc:	0a000020 	beq	40021384 <CyU3PUsbSSDisConnecthandler+0xd4>
40021300:	e59f0120 	ldr	r0, [pc, #288]	; 40021428 <CyU3PUsbSSDisConnecthandler+0x178>
40021304:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021308:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4002130c:	e59f1114 	ldr	r1, [pc, #276]	; 40021428 <CyU3PUsbSSDisConnecthandler+0x178>
40021310:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021314:	e3a00002 	mov	r0, #2
40021318:	ebffc958 	bl	40013880 <CyU3PBusyWait>
4002131c:	e59f0108 	ldr	r0, [pc, #264]	; 4002142c <CyU3PUsbSSDisConnecthandler+0x17c>
40021320:	e5900004 	ldr	r0, [r0, #4]
40021324:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021328:	e59f10fc 	ldr	r1, [pc, #252]	; 4002142c <CyU3PUsbSSDisConnecthandler+0x17c>
4002132c:	e5810004 	str	r0, [r1, #4]
40021330:	e3a00001 	mov	r0, #1
40021334:	ebffc951 	bl	40013880 <CyU3PBusyWait>
40021338:	e59f00f0 	ldr	r0, [pc, #240]	; 40021430 <CyU3PUsbSSDisConnecthandler+0x180>
4002133c:	e590001c 	ldr	r0, [r0, #28]
40021340:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021344:	e59f10e4 	ldr	r1, [pc, #228]	; 40021430 <CyU3PUsbSSDisConnecthandler+0x180>
40021348:	e581001c 	str	r0, [r1, #28]
4002134c:	e59f00e0 	ldr	r0, [pc, #224]	; 40021434 <CyU3PUsbSSDisConnecthandler+0x184>
40021350:	e5900000 	ldr	r0, [r0]
40021354:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021358:	e3a00001 	mov	r0, #1
4002135c:	ebffc947 	bl	40013880 <CyU3PBusyWait>
40021360:	e59f00c4 	ldr	r0, [pc, #196]	; 4002142c <CyU3PUsbSSDisConnecthandler+0x17c>
40021364:	e5900004 	ldr	r0, [r0, #4]
40021368:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4002136c:	e59f10b8 	ldr	r1, [pc, #184]	; 4002142c <CyU3PUsbSSDisConnecthandler+0x17c>
40021370:	e5810004 	str	r0, [r1, #4]
40021374:	e3a01000 	mov	r1, #0
40021378:	e3a00002 	mov	r0, #2
4002137c:	ebffecdf 	bl	4001c700 <CyU3PSetUsbCoreClock>
40021380:	ea000025 	b	4002141c <CyU3PUsbSSDisConnecthandler+0x16c>
40021384:	e3a00001 	mov	r0, #1
40021388:	e59f1090 	ldr	r1, [pc, #144]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
4002138c:	e5c10009 	strb	r0, [r1, #9]
40021390:	ebffef8c 	bl	4001d1c8 <CyU3PUsbPhyDisable>
40021394:	e59f0084 	ldr	r0, [pc, #132]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
40021398:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4002139c:	e3500000 	cmp	r0, #0
400213a0:	0a000019 	beq	4002140c <CyU3PUsbSSDisConnecthandler+0x15c>
400213a4:	e59f008c 	ldr	r0, [pc, #140]	; 40021438 <CyU3PUsbSSDisConnecthandler+0x188>
400213a8:	e5900000 	ldr	r0, [r0]
400213ac:	e3500000 	cmp	r0, #0
400213b0:	0a000005 	beq	400213cc <CyU3PUsbSSDisConnecthandler+0x11c>
400213b4:	e3a00000 	mov	r0, #0
400213b8:	e59f1078 	ldr	r1, [pc, #120]	; 40021438 <CyU3PUsbSSDisConnecthandler+0x188>
400213bc:	e5810000 	str	r0, [r1]
400213c0:	e3a00001 	mov	r0, #1
400213c4:	ebffeff5 	bl	4001d3a0 <CyU3PUsbPhyEnable>
400213c8:	ea000013 	b	4002141c <CyU3PUsbSSDisConnecthandler+0x16c>
400213cc:	e3a00003 	mov	r0, #3
400213d0:	e59f1048 	ldr	r1, [pc, #72]	; 40021420 <CyU3PUsbSSDisConnecthandler+0x170>
400213d4:	e5c10008 	strb	r0, [r1, #8]
400213d8:	e3a00000 	mov	r0, #0
400213dc:	e5c10009 	strb	r0, [r1, #9]
400213e0:	e581002c 	str	r0, [r1, #44]	; 0x2c
400213e4:	e59f0050 	ldr	r0, [pc, #80]	; 4002143c <CyU3PUsbSSDisConnecthandler+0x18c>
400213e8:	e5900000 	ldr	r0, [r0]
400213ec:	e3500000 	cmp	r0, #0
400213f0:	0a000009 	beq	4002141c <CyU3PUsbSSDisConnecthandler+0x16c>
400213f4:	e3a01000 	mov	r1, #0
400213f8:	e3a00014 	mov	r0, #20
400213fc:	e59f2038 	ldr	r2, [pc, #56]	; 4002143c <CyU3PUsbSSDisConnecthandler+0x18c>
40021400:	e5922000 	ldr	r2, [r2]
40021404:	e12fff32 	blx	r2
40021408:	ea000003 	b	4002141c <CyU3PUsbSSDisConnecthandler+0x16c>
4002140c:	e3a00000 	mov	r0, #0
40021410:	ebffefe2 	bl	4001d3a0 <CyU3PUsbPhyEnable>
40021414:	ea000000 	b	4002141c <CyU3PUsbSSDisConnecthandler+0x16c>
40021418:	ebfffa07 	bl	4001fc3c <CyU3PUibVbusChangeHandler>
4002141c:	e8bd8010 	pop	{r4, pc}
40021420:	40031d60 	.word	0x40031d60
40021424:	e0051000 	.word	0xe0051000
40021428:	e0031000 	.word	0xe0031000
4002142c:	e0030000 	.word	0xe0030000
40021430:	e0033000 	.word	0xe0033000
40021434:	40030c78 	.word	0x40030c78
40021438:	40030d94 	.word	0x40030d94
4002143c:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbSSReset:

40021440 <CyU3PUsbSSReset>:
40021440:	e92d4010 	push	{r4, lr}
40021444:	e3a04000 	mov	r4, #0
40021448:	e59f0170 	ldr	r0, [pc, #368]	; 400215c0 <CyU3PUsbSSReset+0x180>
4002144c:	e5d00009 	ldrb	r0, [r0, #9]
40021450:	e3500003 	cmp	r0, #3
40021454:	0a000000 	beq	4002145c <CyU3PUsbSSReset+0x1c>
40021458:	e8bd8010 	pop	{r4, pc}
4002145c:	e59f0160 	ldr	r0, [pc, #352]	; 400215c4 <CyU3PUsbSSReset+0x184>
40021460:	e5900000 	ldr	r0, [r0]
40021464:	e3500000 	cmp	r0, #0
40021468:	0a000004 	beq	40021480 <CyU3PUsbSSReset+0x40>
4002146c:	e3a01001 	mov	r1, #1
40021470:	e3a00004 	mov	r0, #4
40021474:	e59f2148 	ldr	r2, [pc, #328]	; 400215c4 <CyU3PUsbSSReset+0x184>
40021478:	e5922000 	ldr	r2, [r2]
4002147c:	e12fff32 	blx	r2
40021480:	e59f0140 	ldr	r0, [pc, #320]	; 400215c8 <CyU3PUsbSSReset+0x188>
40021484:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021488:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
4002148c:	e59f1134 	ldr	r1, [pc, #308]	; 400215c8 <CyU3PUsbSSReset+0x188>
40021490:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021494:	e3a00001 	mov	r0, #1
40021498:	ebffc8f8 	bl	40013880 <CyU3PBusyWait>
4002149c:	e59f0124 	ldr	r0, [pc, #292]	; 400215c8 <CyU3PUsbSSReset+0x188>
400214a0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400214a4:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400214a8:	e59f1118 	ldr	r1, [pc, #280]	; 400215c8 <CyU3PUsbSSReset+0x188>
400214ac:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400214b0:	e3a00001 	mov	r0, #1
400214b4:	ebffc8f1 	bl	40013880 <CyU3PBusyWait>
400214b8:	e3a00000 	mov	r0, #0
400214bc:	ebffee1a 	bl	4001cd2c <CyU3PUsbFlushEp>
400214c0:	e3a00080 	mov	r0, #128	; 0x80
400214c4:	ebffee18 	bl	4001cd2c <CyU3PUsbFlushEp>
400214c8:	e59f00fc 	ldr	r0, [pc, #252]	; 400215cc <CyU3PUsbSSReset+0x18c>
400214cc:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
400214d0:	e3800001 	orr	r0, r0, #1
400214d4:	e59f10f0 	ldr	r1, [pc, #240]	; 400215cc <CyU3PUsbSSReset+0x18c>
400214d8:	e5810500 	str	r0, [r1, #1280]	; 0x500
400214dc:	e3a00c02 	mov	r0, #512	; 0x200
400214e0:	e1c11200 	bic	r1, r1, r0, lsl #4
400214e4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400214e8:	e1810200 	orr	r0, r1, r0, lsl #4
400214ec:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
400214f0:	e3800001 	orr	r0, r0, #1
400214f4:	e2811a02 	add	r1, r1, #8192	; 0x2000
400214f8:	e5810600 	str	r0, [r1, #1536]	; 0x600
400214fc:	e3a00c02 	mov	r0, #512	; 0x200
40021500:	e1c11200 	bic	r1, r1, r0, lsl #4
40021504:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021508:	e3a00000 	mov	r0, #0
4002150c:	ebfff06e 	bl	4001d6cc <CyU3PUsbResetEp>
40021510:	e3a00000 	mov	r0, #0
40021514:	ebffee04 	bl	4001cd2c <CyU3PUsbFlushEp>
40021518:	e3a00080 	mov	r0, #128	; 0x80
4002151c:	ebfff06a 	bl	4001d6cc <CyU3PUsbResetEp>
40021520:	e3a00080 	mov	r0, #128	; 0x80
40021524:	ebffee00 	bl	4001cd2c <CyU3PUsbFlushEp>
40021528:	e3a00c02 	mov	r0, #512	; 0x200
4002152c:	e59f1094 	ldr	r1, [pc, #148]	; 400215c8 <CyU3PUsbSSReset+0x188>
40021530:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021534:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021538:	e3a04001 	mov	r4, #1
4002153c:	ea000019 	b	400215a8 <CyU3PUsbSSReset+0x168>
40021540:	e0840084 	add	r0, r4, r4, lsl #1
40021544:	e59f1084 	ldr	r1, [pc, #132]	; 400215d0 <CyU3PUsbSSReset+0x190>
40021548:	e0810100 	add	r0, r1, r0, lsl #2
4002154c:	e5900004 	ldr	r0, [r0, #4]
40021550:	e3500001 	cmp	r0, #1
40021554:	1a000005 	bne	40021570 <CyU3PUsbSSReset+0x130>
40021558:	e3840080 	orr	r0, r4, #128	; 0x80
4002155c:	ebffedf2 	bl	4001cd2c <CyU3PUsbFlushEp>
40021560:	e3840080 	orr	r0, r4, #128	; 0x80
40021564:	e3a02001 	mov	r2, #1
40021568:	e3a01000 	mov	r1, #0
4002156c:	ebfff2ba 	bl	4001e05c <CyU3PUsbStall>
40021570:	e0840084 	add	r0, r4, r4, lsl #1
40021574:	e59f1058 	ldr	r1, [pc, #88]	; 400215d4 <CyU3PUsbSSReset+0x194>
40021578:	e0810100 	add	r0, r1, r0, lsl #2
4002157c:	e5900004 	ldr	r0, [r0, #4]
40021580:	e3500001 	cmp	r0, #1
40021584:	1a000005 	bne	400215a0 <CyU3PUsbSSReset+0x160>
40021588:	e1a00004 	mov	r0, r4
4002158c:	ebffede6 	bl	4001cd2c <CyU3PUsbFlushEp>
40021590:	e3a02001 	mov	r2, #1
40021594:	e3a01000 	mov	r1, #0
40021598:	e1a00004 	mov	r0, r4
4002159c:	ebfff2ae 	bl	4001e05c <CyU3PUsbStall>
400215a0:	e2840001 	add	r0, r4, #1
400215a4:	e20040ff 	and	r4, r0, #255	; 0xff
400215a8:	e3540010 	cmp	r4, #16
400215ac:	baffffe3 	blt	40021540 <CyU3PUsbSSReset+0x100>
400215b0:	e3a00005 	mov	r0, #5
400215b4:	e59f1004 	ldr	r1, [pc, #4]	; 400215c0 <CyU3PUsbSSReset+0x180>
400215b8:	e5c10008 	strb	r0, [r1, #8]
400215bc:	eaffffa5 	b	40021458 <CyU3PUsbSSReset+0x18>
400215c0:	40031d60 	.word	0x40031d60
400215c4:	40030dbc 	.word	0x40030dbc
400215c8:	e0031000 	.word	0xe0031000
400215cc:	e0033000 	.word	0xe0033000
400215d0:	40031bdc 	.word	0x40031bdc
400215d4:	40031c9c 	.word	0x40031c9c

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

400215d8 <CyU3PUsbSendCompliancePatterns>:
400215d8:	e92d4070 	push	{r4, r5, r6, lr}
400215dc:	e3a04001 	mov	r4, #1
400215e0:	e59f01ec 	ldr	r0, [pc, #492]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
400215e4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400215e8:	e200503f 	and	r5, r0, #63	; 0x3f
400215ec:	e3550017 	cmp	r5, #23
400215f0:	0a000000 	beq	400215f8 <CyU3PUsbSendCompliancePatterns+0x20>
400215f4:	e8bd8070 	pop	{r4, r5, r6, pc}
400215f8:	e3a00003 	mov	r0, #3
400215fc:	e59f11d4 	ldr	r1, [pc, #468]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
40021600:	e5c10009 	strb	r0, [r1, #9]
40021604:	e3a00001 	mov	r0, #1
40021608:	e5810064 	str	r0, [r1, #100]	; 0x64
4002160c:	e3a00000 	mov	r0, #0
40021610:	e5810060 	str	r0, [r1, #96]	; 0x60
40021614:	e3a00d57 	mov	r0, #5568	; 0x15c0
40021618:	e59f11b4 	ldr	r1, [pc, #436]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002161c:	e5810054 	str	r0, [r1, #84]	; 0x54
40021620:	e59f01b4 	ldr	r0, [pc, #436]	; 400217dc <CyU3PUsbSendCompliancePatterns+0x204>
40021624:	e5900000 	ldr	r0, [r0]
40021628:	e3500000 	cmp	r0, #0
4002162c:	0a000004 	beq	40021644 <CyU3PUsbSendCompliancePatterns+0x6c>
40021630:	e3a01000 	mov	r1, #0
40021634:	e3a00015 	mov	r0, #21
40021638:	e59f219c 	ldr	r2, [pc, #412]	; 400217dc <CyU3PUsbSendCompliancePatterns+0x204>
4002163c:	e5922000 	ldr	r2, [r2]
40021640:	e12fff32 	blx	r2
40021644:	e1a00000 	nop			; (mov r0, r0)
40021648:	e59f0184 	ldr	r0, [pc, #388]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002164c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021650:	e3100002 	tst	r0, #2
40021654:	0a000031 	beq	40021720 <CyU3PUsbSendCompliancePatterns+0x148>
40021658:	e59f0180 	ldr	r0, [pc, #384]	; 400217e0 <CyU3PUsbSendCompliancePatterns+0x208>
4002165c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40021660:	e59f116c 	ldr	r1, [pc, #364]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021664:	e5810138 	str	r0, [r1, #312]	; 0x138
40021668:	e3a00001 	mov	r0, #1
4002166c:	ebff9d96 	bl	40008ccc <_tx_thread_sleep>
40021670:	e59f015c 	ldr	r0, [pc, #348]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021674:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021678:	e3c00002 	bic	r0, r0, #2
4002167c:	e59f1150 	ldr	r1, [pc, #336]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021680:	e5810064 	str	r0, [r1, #100]	; 0x64
40021684:	e3540004 	cmp	r4, #4
40021688:	1a000020 	bne	40021710 <CyU3PUsbSendCompliancePatterns+0x138>
4002168c:	ea00000d 	b	400216c8 <CyU3PUsbSendCompliancePatterns+0xf0>
40021690:	e59f013c 	ldr	r0, [pc, #316]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021694:	e590001c 	ldr	r0, [r0, #28]
40021698:	e3800008 	orr	r0, r0, #8
4002169c:	e59f1130 	ldr	r1, [pc, #304]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216a0:	e581001c 	str	r0, [r1, #28]
400216a4:	e3a0000a 	mov	r0, #10
400216a8:	ebffc874 	bl	40013880 <CyU3PBusyWait>
400216ac:	e59f0120 	ldr	r0, [pc, #288]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216b0:	e590001c 	ldr	r0, [r0, #28]
400216b4:	e3c00008 	bic	r0, r0, #8
400216b8:	e59f1114 	ldr	r1, [pc, #276]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216bc:	e581001c 	str	r0, [r1, #28]
400216c0:	e3a0001e 	mov	r0, #30
400216c4:	ebffc86d 	bl	40013880 <CyU3PBusyWait>
400216c8:	e59f0104 	ldr	r0, [pc, #260]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216cc:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400216d0:	e3100006 	tst	r0, #6
400216d4:	1a00000d 	bne	40021710 <CyU3PUsbSendCompliancePatterns+0x138>
400216d8:	e59f00f8 	ldr	r0, [pc, #248]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
400216dc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400216e0:	e3500000 	cmp	r0, #0
400216e4:	0a000005 	beq	40021700 <CyU3PUsbSendCompliancePatterns+0x128>
400216e8:	e59f00f4 	ldr	r0, [pc, #244]	; 400217e4 <CyU3PUsbSendCompliancePatterns+0x20c>
400216ec:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400216f0:	e59f10e0 	ldr	r1, [pc, #224]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
400216f4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400216f8:	e1100001 	tst	r0, r1
400216fc:	0a000003 	beq	40021710 <CyU3PUsbSendCompliancePatterns+0x138>
40021700:	e59f00d0 	ldr	r0, [pc, #208]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
40021704:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021708:	e3500000 	cmp	r0, #0
4002170c:	0affffdf 	beq	40021690 <CyU3PUsbSendCompliancePatterns+0xb8>
40021710:	e3a01009 	mov	r1, #9
40021714:	e2840001 	add	r0, r4, #1
40021718:	ebffbda9 	bl	40010dc4 <__aeabi_idivmod>
4002171c:	e20140ff 	and	r4, r1, #255	; 0xff
40021720:	e59f00ac 	ldr	r0, [pc, #172]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021724:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021728:	e3100004 	tst	r0, #4
4002172c:	1a00000d 	bne	40021768 <CyU3PUsbSendCompliancePatterns+0x190>
40021730:	e59f00a0 	ldr	r0, [pc, #160]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
40021734:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021738:	e3500000 	cmp	r0, #0
4002173c:	0a000005 	beq	40021758 <CyU3PUsbSendCompliancePatterns+0x180>
40021740:	e59f009c 	ldr	r0, [pc, #156]	; 400217e4 <CyU3PUsbSendCompliancePatterns+0x20c>
40021744:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021748:	e59f1088 	ldr	r1, [pc, #136]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
4002174c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021750:	e1100001 	tst	r0, r1
40021754:	0a000003 	beq	40021768 <CyU3PUsbSendCompliancePatterns+0x190>
40021758:	e59f0078 	ldr	r0, [pc, #120]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
4002175c:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021760:	e3500001 	cmp	r0, #1
40021764:	1a000009 	bne	40021790 <CyU3PUsbSendCompliancePatterns+0x1b8>
40021768:	e59f0064 	ldr	r0, [pc, #100]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002176c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021770:	e3c00004 	bic	r0, r0, #4
40021774:	e59f1058 	ldr	r1, [pc, #88]	; 400217d4 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021778:	e5810064 	str	r0, [r1, #100]	; 0x64
4002177c:	e3a00c06 	mov	r0, #1536	; 0x600
40021780:	e5810138 	str	r0, [r1, #312]	; 0x138
40021784:	e3a00000 	mov	r0, #0
40021788:	e5810054 	str	r0, [r1, #84]	; 0x54
4002178c:	ea000002 	b	4002179c <CyU3PUsbSendCompliancePatterns+0x1c4>
40021790:	e3a00001 	mov	r0, #1
40021794:	ebff9d4c 	bl	40008ccc <_tx_thread_sleep>
40021798:	eaffffaa 	b	40021648 <CyU3PUsbSendCompliancePatterns+0x70>
4002179c:	e1a00000 	nop			; (mov r0, r0)
400217a0:	e59f0034 	ldr	r0, [pc, #52]	; 400217dc <CyU3PUsbSendCompliancePatterns+0x204>
400217a4:	e5900000 	ldr	r0, [r0]
400217a8:	e3500000 	cmp	r0, #0
400217ac:	0a000004 	beq	400217c4 <CyU3PUsbSendCompliancePatterns+0x1ec>
400217b0:	e3a01000 	mov	r1, #0
400217b4:	e3a00016 	mov	r0, #22
400217b8:	e59f201c 	ldr	r2, [pc, #28]	; 400217dc <CyU3PUsbSendCompliancePatterns+0x204>
400217bc:	e5922000 	ldr	r2, [r2]
400217c0:	e12fff32 	blx	r2
400217c4:	e3a00000 	mov	r0, #0
400217c8:	e59f1008 	ldr	r1, [pc, #8]	; 400217d8 <CyU3PUsbSendCompliancePatterns+0x200>
400217cc:	e5810064 	str	r0, [r1, #100]	; 0x64
400217d0:	eaffff87 	b	400215f4 <CyU3PUsbSendCompliancePatterns+0x1c>
400217d4:	e0033000 	.word	0xe0033000
400217d8:	40031d60 	.word	0x40031d60
400217dc:	40030dbc 	.word	0x40030dbc
400217e0:	400121ec 	.word	0x400121ec
400217e4:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

400217e8 <CyU3PUsbSetupCommand>:
400217e8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400217ec:	e3a06000 	mov	r6, #0
400217f0:	e3a07000 	mov	r7, #0
400217f4:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
400217f8:	e5d00009 	ldrb	r0, [r0, #9]
400217fc:	e3500003 	cmp	r0, #3
40021800:	1a00001a 	bne	40021870 <CyU3PUsbSetupCommand+0x88>
40021804:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021fc0 <CyU3PUsbSetupCommand+0x7d8>
40021808:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
4002180c:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
40021810:	e3a00001 	mov	r0, #1
40021814:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021818:	e5810050 	str	r0, [r1, #80]	; 0x50
4002181c:	e3a00000 	mov	r0, #0
40021820:	e59f179c 	ldr	r1, [pc, #1948]	; 40021fc4 <CyU3PUsbSetupCommand+0x7dc>
40021824:	e5810000 	str	r0, [r1]
40021828:	e59f0798 	ldr	r0, [pc, #1944]	; 40021fc8 <CyU3PUsbSetupCommand+0x7e0>
4002182c:	ebffa598 	bl	4000ae94 <_txe_timer_deactivate>
40021830:	e3a00b02 	mov	r0, #2048	; 0x800
40021834:	e59f1784 	ldr	r1, [pc, #1924]	; 40021fc0 <CyU3PUsbSetupCommand+0x7d8>
40021838:	e5810404 	str	r0, [r1, #1028]	; 0x404
4002183c:	e1c10000 	bic	r0, r1, r0
40021840:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021844:	e200603f 	and	r6, r0, #63	; 0x3f
40021848:	e3560011 	cmp	r6, #17
4002184c:	0a000001 	beq	40021858 <CyU3PUsbSetupCommand+0x70>
40021850:	e3560012 	cmp	r6, #18
40021854:	1a000003 	bne	40021868 <CyU3PUsbSetupCommand+0x80>
40021858:	e3a02000 	mov	r2, #0
4002185c:	e3a01401 	mov	r1, #16777216	; 0x1000000
40021860:	e59f0764 	ldr	r0, [pc, #1892]	; 40021fcc <CyU3PUsbSetupCommand+0x7e4>
40021864:	ebffa210 	bl	4000a0ac <_txe_event_flags_set>
40021868:	e3a06000 	mov	r6, #0
4002186c:	ea00000d 	b	400218a8 <CyU3PUsbSetupCommand+0xc0>
40021870:	e59f0744 	ldr	r0, [pc, #1860]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021874:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021878:	e3500000 	cmp	r0, #0
4002187c:	0a000006 	beq	4002189c <CyU3PUsbSetupCommand+0xb4>
40021880:	e59f0734 	ldr	r0, [pc, #1844]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021884:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021888:	e3500003 	cmp	r0, #3
4002188c:	2a000002 	bcs	4002189c <CyU3PUsbSetupCommand+0xb4>
40021890:	e3a00001 	mov	r0, #1
40021894:	e59f1720 	ldr	r1, [pc, #1824]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021898:	e581004c 	str	r0, [r1, #76]	; 0x4c
4002189c:	e59f072c 	ldr	r0, [pc, #1836]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
400218a0:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
400218a4:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
400218a8:	e3a01064 	mov	r1, #100	; 0x64
400218ac:	e59f0720 	ldr	r0, [pc, #1824]	; 40021fd4 <CyU3PUsbSetupCommand+0x7ec>
400218b0:	ebffd5fd 	bl	400170ac <CyU3PDmaChannelWaitForCompletion>
400218b4:	e1a06000 	mov	r6, r0
400218b8:	e3560000 	cmp	r6, #0
400218bc:	0a00000b 	beq	400218f0 <CyU3PUsbSetupCommand+0x108>
400218c0:	e3560042 	cmp	r6, #66	; 0x42
400218c4:	0a000009 	beq	400218f0 <CyU3PUsbSetupCommand+0x108>
400218c8:	e3a01001 	mov	r1, #1
400218cc:	e3a00000 	mov	r0, #0
400218d0:	ebfff11b 	bl	4001dd44 <CyU3PUsbSetEpNak>
400218d4:	e3a00064 	mov	r0, #100	; 0x64
400218d8:	ebffc7e8 	bl	40013880 <CyU3PBusyWait>
400218dc:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021fd4 <CyU3PUsbSetupCommand+0x7ec>
400218e0:	ebffd320 	bl	40016568 <CyU3PDmaChannelReset>
400218e4:	e3a01000 	mov	r1, #0
400218e8:	e1a00001 	mov	r0, r1
400218ec:	ebfff114 	bl	4001dd44 <CyU3PUsbSetEpNak>
400218f0:	e3a01064 	mov	r1, #100	; 0x64
400218f4:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021fd8 <CyU3PUsbSetupCommand+0x7f0>
400218f8:	ebffd5eb 	bl	400170ac <CyU3PDmaChannelWaitForCompletion>
400218fc:	e1a06000 	mov	r6, r0
40021900:	e3560000 	cmp	r6, #0
40021904:	0a00000d 	beq	40021940 <CyU3PUsbSetupCommand+0x158>
40021908:	e3560042 	cmp	r6, #66	; 0x42
4002190c:	0a00000b 	beq	40021940 <CyU3PUsbSetupCommand+0x158>
40021910:	e3a01001 	mov	r1, #1
40021914:	e3a00080 	mov	r0, #128	; 0x80
40021918:	ebfff109 	bl	4001dd44 <CyU3PUsbSetEpNak>
4002191c:	e3a00064 	mov	r0, #100	; 0x64
40021920:	ebffc7d6 	bl	40013880 <CyU3PBusyWait>
40021924:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021fd8 <CyU3PUsbSetupCommand+0x7f0>
40021928:	ebffd30e 	bl	40016568 <CyU3PDmaChannelReset>
4002192c:	e3a00080 	mov	r0, #128	; 0x80
40021930:	ebffecfd 	bl	4001cd2c <CyU3PUsbFlushEp>
40021934:	e3a01000 	mov	r1, #0
40021938:	e3a00080 	mov	r0, #128	; 0x80
4002193c:	ebfff100 	bl	4001dd44 <CyU3PUsbSetEpNak>
40021940:	e3a06000 	mov	r6, #0
40021944:	e20490ff 	and	r9, r4, #255	; 0xff
40021948:	e209a060 	and	sl, r9, #96	; 0x60
4002194c:	e2090003 	and	r0, r9, #3
40021950:	e58d0008 	str	r0, [sp, #8]
40021954:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021958:	e1a08420 	lsr	r8, r0, #8
4002195c:	e59f0678 	ldr	r0, [pc, #1656]	; 40021fdc <CyU3PUsbSetupCommand+0x7f4>
40021960:	e000b824 	and	fp, r0, r4, lsr #16
40021964:	e0050000 	and	r0, r5, r0
40021968:	e58d0004 	str	r0, [sp, #4]
4002196c:	e59f0668 	ldr	r0, [pc, #1640]	; 40021fdc <CyU3PUsbSetupCommand+0x7f4>
40021970:	e0000825 	and	r0, r0, r5, lsr #16
40021974:	e58d0000 	str	r0, [sp]
40021978:	e3140080 	tst	r4, #128	; 0x80
4002197c:	0a000003 	beq	40021990 <CyU3PUsbSetupCommand+0x1a8>
40021980:	e59d0000 	ldr	r0, [sp]
40021984:	e59f1644 	ldr	r1, [pc, #1604]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
40021988:	e5810458 	str	r0, [r1, #1112]	; 0x458
4002198c:	ea000002 	b	4002199c <CyU3PUsbSetupCommand+0x1b4>
40021990:	e59d0000 	ldr	r0, [sp]
40021994:	e59f1634 	ldr	r1, [pc, #1588]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
40021998:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
4002199c:	e3a00000 	mov	r0, #0
400219a0:	e59f1614 	ldr	r1, [pc, #1556]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
400219a4:	e5810040 	str	r0, [r1, #64]	; 0x40
400219a8:	e59f0620 	ldr	r0, [pc, #1568]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
400219ac:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400219b0:	e3c00008 	bic	r0, r0, #8
400219b4:	e59f1614 	ldr	r1, [pc, #1556]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
400219b8:	e5810518 	str	r0, [r1, #1304]	; 0x518
400219bc:	e3a00000 	mov	r0, #0
400219c0:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
400219c4:	e5810018 	str	r0, [r1, #24]
400219c8:	e5810070 	str	r0, [r1, #112]	; 0x70
400219cc:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
400219d0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400219d4:	e3800008 	orr	r0, r0, #8
400219d8:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021fd0 <CyU3PUsbSetupCommand+0x7e8>
400219dc:	e5810518 	str	r0, [r1, #1304]	; 0x518
400219e0:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
400219e4:	e5d00007 	ldrb	r0, [r0, #7]
400219e8:	e3500001 	cmp	r0, #1
400219ec:	0a000001 	beq	400219f8 <CyU3PUsbSetupCommand+0x210>
400219f0:	e35a0000 	cmp	sl, #0
400219f4:	0a000024 	beq	40021a8c <CyU3PUsbSetupCommand+0x2a4>
400219f8:	e35a0000 	cmp	sl, #0
400219fc:	1a000012 	bne	40021a4c <CyU3PUsbSetupCommand+0x264>
40021a00:	e3580009 	cmp	r8, #9
40021a04:	1a000010 	bne	40021a4c <CyU3PUsbSetupCommand+0x264>
40021a08:	e35b0001 	cmp	fp, #1
40021a0c:	1a00000b 	bne	40021a40 <CyU3PUsbSetupCommand+0x258>
40021a10:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021a14:	e5d10009 	ldrb	r0, [r1, #9]
40021a18:	ebfff993 	bl	4002006c <CyU3PUsbEpPrepare>
40021a1c:	e3a00006 	mov	r0, #6
40021a20:	e59f1594 	ldr	r1, [pc, #1428]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021a24:	e5c10008 	strb	r0, [r1, #8]
40021a28:	e5c1b00c 	strb	fp, [r1, #12]
40021a2c:	e2810000 	add	r0, r1, #0
40021a30:	e5d00006 	ldrb	r0, [r0, #6]
40021a34:	e2000001 	and	r0, r0, #1
40021a38:	e5c10006 	strb	r0, [r1, #6]
40021a3c:	ea000002 	b	40021a4c <CyU3PUsbSetupCommand+0x264>
40021a40:	e3a00005 	mov	r0, #5
40021a44:	e59f1570 	ldr	r1, [pc, #1392]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021a48:	e5c10008 	strb	r0, [r1, #8]
40021a4c:	e59f058c 	ldr	r0, [pc, #1420]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021a50:	e5900000 	ldr	r0, [r0]
40021a54:	e3500000 	cmp	r0, #0
40021a58:	0a000005 	beq	40021a74 <CyU3PUsbSetupCommand+0x28c>
40021a5c:	e1a01005 	mov	r1, r5
40021a60:	e1a00004 	mov	r0, r4
40021a64:	e59f2574 	ldr	r2, [pc, #1396]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021a68:	e5922000 	ldr	r2, [r2]
40021a6c:	e12fff32 	blx	r2
40021a70:	e1a07000 	mov	r7, r0
40021a74:	e3570001 	cmp	r7, #1
40021a78:	1a000003 	bne	40021a8c <CyU3PUsbSetupCommand+0x2a4>
40021a7c:	e3a00001 	mov	r0, #1
40021a80:	e59f1534 	ldr	r1, [pc, #1332]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021a84:	e5810040 	str	r0, [r1, #64]	; 0x40
40021a88:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021a8c:	e35a0000 	cmp	sl, #0
40021a90:	1a000140 	bne	40021f98 <CyU3PUsbSetupCommand+0x7b0>
40021a94:	e3580009 	cmp	r8, #9
40021a98:	0a0000b1 	beq	40021d64 <CyU3PUsbSetupCommand+0x57c>
40021a9c:	ca00000b 	bgt	40021ad0 <CyU3PUsbSetupCommand+0x2e8>
40021aa0:	e3580009 	cmp	r8, #9
40021aa4:	308ff108 	addcc	pc, pc, r8, lsl #2
40021aa8:	ea000137 	b	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021aac:	ea000014 	b	40021b04 <CyU3PUsbSetupCommand+0x31c>
40021ab0:	ea000029 	b	40021b5c <CyU3PUsbSetupCommand+0x374>
40021ab4:	ea000134 	b	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021ab8:	ea000057 	b	40021c1c <CyU3PUsbSetupCommand+0x434>
40021abc:	ea000132 	b	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021ac0:	ea000131 	b	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021ac4:	ea000099 	b	40021d30 <CyU3PUsbSetupCommand+0x548>
40021ac8:	ea00012f 	b	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021acc:	ea00009d 	b	40021d48 <CyU3PUsbSetupCommand+0x560>
40021ad0:	e358000c 	cmp	r8, #12
40021ad4:	0a0000fb 	beq	40021ec8 <CyU3PUsbSetupCommand+0x6e0>
40021ad8:	ca000004 	bgt	40021af0 <CyU3PUsbSetupCommand+0x308>
40021adc:	e358000a 	cmp	r8, #10
40021ae0:	0a0000c5 	beq	40021dfc <CyU3PUsbSetupCommand+0x614>
40021ae4:	e358000b 	cmp	r8, #11
40021ae8:	1a000127 	bne	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021aec:	ea0000d6 	b	40021e4c <CyU3PUsbSetupCommand+0x664>
40021af0:	e3580030 	cmp	r8, #48	; 0x30
40021af4:	0a0000f7 	beq	40021ed8 <CyU3PUsbSetupCommand+0x6f0>
40021af8:	e3580031 	cmp	r8, #49	; 0x31
40021afc:	1a000122 	bne	40021f8c <CyU3PUsbSetupCommand+0x7a4>
40021b00:	ea000114 	b	40021f58 <CyU3PUsbSetupCommand+0x770>
40021b04:	e1a00000 	nop			; (mov r0, r0)
40021b08:	e59d0008 	ldr	r0, [sp, #8]
40021b0c:	e3500001 	cmp	r0, #1
40021b10:	1a00000c 	bne	40021b48 <CyU3PUsbSetupCommand+0x360>
40021b14:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021b18:	e5900000 	ldr	r0, [r0]
40021b1c:	e3500000 	cmp	r0, #0
40021b20:	0a000008 	beq	40021b48 <CyU3PUsbSetupCommand+0x360>
40021b24:	e1a01005 	mov	r1, r5
40021b28:	e1a00004 	mov	r0, r4
40021b2c:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021b30:	e5922000 	ldr	r2, [r2]
40021b34:	e12fff32 	blx	r2
40021b38:	e1a07000 	mov	r7, r0
40021b3c:	e3570000 	cmp	r7, #0
40021b40:	0a000000 	beq	40021b48 <CyU3PUsbSetupCommand+0x360>
40021b44:	ea000112 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021b48:	e59d0008 	ldr	r0, [sp, #8]
40021b4c:	e59d1004 	ldr	r1, [sp, #4]
40021b50:	ebfffbd3 	bl	40020aa4 <CyU3PUsbHandleGetStatus>
40021b54:	e1a07000 	mov	r7, r0
40021b58:	ea00010d 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021b5c:	e1a00000 	nop			; (mov r0, r0)
40021b60:	e59d0008 	ldr	r0, [sp, #8]
40021b64:	e3500000 	cmp	r0, #0
40021b68:	1a000002 	bne	40021b78 <CyU3PUsbSetupCommand+0x390>
40021b6c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021b70:	ebfffa86 	bl	40020590 <CyU3PUsbHandleClearFeature>
40021b74:	eaffffc3 	b	40021a88 <CyU3PUsbSetupCommand+0x2a0>
40021b78:	e3a07000 	mov	r7, #0
40021b7c:	e59f0438 	ldr	r0, [pc, #1080]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021b80:	e5d00007 	ldrb	r0, [r0, #7]
40021b84:	e3500000 	cmp	r0, #0
40021b88:	1a00000e 	bne	40021bc8 <CyU3PUsbSetupCommand+0x3e0>
40021b8c:	e59f044c 	ldr	r0, [pc, #1100]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021b90:	e5900000 	ldr	r0, [r0]
40021b94:	e3500000 	cmp	r0, #0
40021b98:	0a00000a 	beq	40021bc8 <CyU3PUsbSetupCommand+0x3e0>
40021b9c:	e1a01005 	mov	r1, r5
40021ba0:	e1a00004 	mov	r0, r4
40021ba4:	e59f2434 	ldr	r2, [pc, #1076]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021ba8:	e5922000 	ldr	r2, [r2]
40021bac:	e12fff32 	blx	r2
40021bb0:	e1a07000 	mov	r7, r0
40021bb4:	e3570000 	cmp	r7, #0
40021bb8:	0a000002 	beq	40021bc8 <CyU3PUsbSetupCommand+0x3e0>
40021bbc:	e3a00001 	mov	r0, #1
40021bc0:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021bc4:	e5810040 	str	r0, [r1, #64]	; 0x40
40021bc8:	e3570000 	cmp	r7, #0
40021bcc:	1a000011 	bne	40021c18 <CyU3PUsbSetupCommand+0x430>
40021bd0:	e59d0008 	ldr	r0, [sp, #8]
40021bd4:	e3500002 	cmp	r0, #2
40021bd8:	1a00000e 	bne	40021c18 <CyU3PUsbSetupCommand+0x430>
40021bdc:	e35b0000 	cmp	fp, #0
40021be0:	1a00000c 	bne	40021c18 <CyU3PUsbSetupCommand+0x430>
40021be4:	e59d1004 	ldr	r1, [sp, #4]
40021be8:	e20100ff 	and	r0, r1, #255	; 0xff
40021bec:	e3a02001 	mov	r2, #1
40021bf0:	e3a01000 	mov	r1, #0
40021bf4:	ebfff118 	bl	4001e05c <CyU3PUsbStall>
40021bf8:	e3500000 	cmp	r0, #0
40021bfc:	1a000005 	bne	40021c18 <CyU3PUsbSetupCommand+0x430>
40021c00:	e59d1004 	ldr	r1, [sp, #4]
40021c04:	e20100ff 	and	r0, r1, #255	; 0xff
40021c08:	ebffeeaf 	bl	4001d6cc <CyU3PUsbResetEp>
40021c0c:	ebffeb4e 	bl	4001c94c <CyU3PUsbAckSetup>
40021c10:	e3a07001 	mov	r7, #1
40021c14:	ea0000de 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021c18:	ea0000dd 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021c1c:	e1a00000 	nop			; (mov r0, r0)
40021c20:	e59d0008 	ldr	r0, [sp, #8]
40021c24:	e3500000 	cmp	r0, #0
40021c28:	1a00001b 	bne	40021c9c <CyU3PUsbSetupCommand+0x4b4>
40021c2c:	e35b0003 	cmp	fp, #3
40021c30:	0a000004 	beq	40021c48 <CyU3PUsbSetupCommand+0x460>
40021c34:	e35b0004 	cmp	fp, #4
40021c38:	0a000002 	beq	40021c48 <CyU3PUsbSetupCommand+0x460>
40021c3c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021c40:	ebfffbd5 	bl	40020b9c <CyU3PUsbHandleSetFeature>
40021c44:	eaffff8f 	b	40021a88 <CyU3PUsbSetupCommand+0x2a0>
40021c48:	e59f036c 	ldr	r0, [pc, #876]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021c4c:	e5d00007 	ldrb	r0, [r0, #7]
40021c50:	e3500000 	cmp	r0, #0
40021c54:	1a00000f 	bne	40021c98 <CyU3PUsbSetupCommand+0x4b0>
40021c58:	e59f0380 	ldr	r0, [pc, #896]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021c5c:	e5900000 	ldr	r0, [r0]
40021c60:	e3500000 	cmp	r0, #0
40021c64:	0a00000b 	beq	40021c98 <CyU3PUsbSetupCommand+0x4b0>
40021c68:	e1a01005 	mov	r1, r5
40021c6c:	e1a00004 	mov	r0, r4
40021c70:	e59f2368 	ldr	r2, [pc, #872]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021c74:	e5922000 	ldr	r2, [r2]
40021c78:	e12fff32 	blx	r2
40021c7c:	e1a07000 	mov	r7, r0
40021c80:	e3570000 	cmp	r7, #0
40021c84:	0a000003 	beq	40021c98 <CyU3PUsbSetupCommand+0x4b0>
40021c88:	e3a00001 	mov	r0, #1
40021c8c:	e59f1328 	ldr	r1, [pc, #808]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021c90:	e5810040 	str	r0, [r1, #64]	; 0x40
40021c94:	eaffff7b 	b	40021a88 <CyU3PUsbSetupCommand+0x2a0>
40021c98:	ea0000bd 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021c9c:	e3a07000 	mov	r7, #0
40021ca0:	e59f0314 	ldr	r0, [pc, #788]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021ca4:	e5d00007 	ldrb	r0, [r0, #7]
40021ca8:	e3500000 	cmp	r0, #0
40021cac:	1a00000e 	bne	40021cec <CyU3PUsbSetupCommand+0x504>
40021cb0:	e59f0328 	ldr	r0, [pc, #808]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021cb4:	e5900000 	ldr	r0, [r0]
40021cb8:	e3500000 	cmp	r0, #0
40021cbc:	0a00000a 	beq	40021cec <CyU3PUsbSetupCommand+0x504>
40021cc0:	e1a01005 	mov	r1, r5
40021cc4:	e1a00004 	mov	r0, r4
40021cc8:	e59f2310 	ldr	r2, [pc, #784]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021ccc:	e5922000 	ldr	r2, [r2]
40021cd0:	e12fff32 	blx	r2
40021cd4:	e1a07000 	mov	r7, r0
40021cd8:	e3570000 	cmp	r7, #0
40021cdc:	0a000002 	beq	40021cec <CyU3PUsbSetupCommand+0x504>
40021ce0:	e3a00001 	mov	r0, #1
40021ce4:	e59f12d0 	ldr	r1, [pc, #720]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021ce8:	e5810040 	str	r0, [r1, #64]	; 0x40
40021cec:	e3570000 	cmp	r7, #0
40021cf0:	1a00000d 	bne	40021d2c <CyU3PUsbSetupCommand+0x544>
40021cf4:	e59d0008 	ldr	r0, [sp, #8]
40021cf8:	e3500002 	cmp	r0, #2
40021cfc:	1a00000a 	bne	40021d2c <CyU3PUsbSetupCommand+0x544>
40021d00:	e35b0000 	cmp	fp, #0
40021d04:	1a000008 	bne	40021d2c <CyU3PUsbSetupCommand+0x544>
40021d08:	e59d1004 	ldr	r1, [sp, #4]
40021d0c:	e20100ff 	and	r0, r1, #255	; 0xff
40021d10:	e3a02000 	mov	r2, #0
40021d14:	e3a01001 	mov	r1, #1
40021d18:	ebfff0cf 	bl	4001e05c <CyU3PUsbStall>
40021d1c:	e3500000 	cmp	r0, #0
40021d20:	1a000001 	bne	40021d2c <CyU3PUsbSetupCommand+0x544>
40021d24:	ebffeb08 	bl	4001c94c <CyU3PUsbAckSetup>
40021d28:	e3a07001 	mov	r7, #1
40021d2c:	ea000098 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021d30:	e1a00000 	nop			; (mov r0, r0)
40021d34:	e1a01005 	mov	r1, r5
40021d38:	e1a00004 	mov	r0, r4
40021d3c:	ebfff5d5 	bl	4001f498 <CyU3PUibSendDescr>
40021d40:	e1a07000 	mov	r7, r0
40021d44:	ea000092 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021d48:	e1a00000 	nop			; (mov r0, r0)
40021d4c:	e3a07001 	mov	r7, #1
40021d50:	e59f128c 	ldr	r1, [pc, #652]	; 40021fe4 <CyU3PUsbSetupCommand+0x7fc>
40021d54:	e3a00001 	mov	r0, #1
40021d58:	ebffee94 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40021d5c:	e1a06000 	mov	r6, r0
40021d60:	ea00008b 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021d64:	e1a00000 	nop			; (mov r0, r0)
40021d68:	e3a07001 	mov	r7, #1
40021d6c:	e35b0000 	cmp	fp, #0
40021d70:	0a000005 	beq	40021d8c <CyU3PUsbSetupCommand+0x5a4>
40021d74:	e35b0001 	cmp	fp, #1
40021d78:	1a00001a 	bne	40021de8 <CyU3PUsbSetupCommand+0x600>
40021d7c:	e59f1238 	ldr	r1, [pc, #568]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021d80:	e5d10009 	ldrb	r0, [r1, #9]
40021d84:	ebfff8b8 	bl	4002006c <CyU3PUsbEpPrepare>
40021d88:	e1a00000 	nop			; (mov r0, r0)
40021d8c:	e35b0000 	cmp	fp, #0
40021d90:	1a000001 	bne	40021d9c <CyU3PUsbSetupCommand+0x5b4>
40021d94:	e3a00005 	mov	r0, #5
40021d98:	ea000000 	b	40021da0 <CyU3PUsbSetupCommand+0x5b8>
40021d9c:	e3a00006 	mov	r0, #6
40021da0:	e59f1214 	ldr	r1, [pc, #532]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021da4:	e5c10008 	strb	r0, [r1, #8]
40021da8:	e5c1b00c 	strb	fp, [r1, #12]
40021dac:	e2810000 	add	r0, r1, #0
40021db0:	e5d00006 	ldrb	r0, [r0, #6]
40021db4:	e2000001 	and	r0, r0, #1
40021db8:	e5c10006 	strb	r0, [r1, #6]
40021dbc:	e59f0224 	ldr	r0, [pc, #548]	; 40021fe8 <CyU3PUsbSetupCommand+0x800>
40021dc0:	e5900000 	ldr	r0, [r0]
40021dc4:	e3500000 	cmp	r0, #0
40021dc8:	0a000004 	beq	40021de0 <CyU3PUsbSetupCommand+0x5f8>
40021dcc:	e1a0100b 	mov	r1, fp
40021dd0:	e3a00005 	mov	r0, #5
40021dd4:	e59f220c 	ldr	r2, [pc, #524]	; 40021fe8 <CyU3PUsbSetupCommand+0x800>
40021dd8:	e5922000 	ldr	r2, [r2]
40021ddc:	e12fff32 	blx	r2
40021de0:	ebffead9 	bl	4001c94c <CyU3PUsbAckSetup>
40021de4:	ea000002 	b	40021df4 <CyU3PUsbSetupCommand+0x60c>
40021de8:	e1a00000 	nop			; (mov r0, r0)
40021dec:	e3a06040 	mov	r6, #64	; 0x40
40021df0:	e1a00000 	nop			; (mov r0, r0)
40021df4:	e1a00000 	nop			; (mov r0, r0)
40021df8:	ea000065 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021dfc:	e1a00000 	nop			; (mov r0, r0)
40021e00:	e59f01d8 	ldr	r0, [pc, #472]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021e04:	e5900000 	ldr	r0, [r0]
40021e08:	e3500000 	cmp	r0, #0
40021e0c:	0a000008 	beq	40021e34 <CyU3PUsbSetupCommand+0x64c>
40021e10:	e1a01005 	mov	r1, r5
40021e14:	e1a00004 	mov	r0, r4
40021e18:	e59f21c0 	ldr	r2, [pc, #448]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021e1c:	e5922000 	ldr	r2, [r2]
40021e20:	e12fff32 	blx	r2
40021e24:	e1a07000 	mov	r7, r0
40021e28:	e3570000 	cmp	r7, #0
40021e2c:	0a000000 	beq	40021e34 <CyU3PUsbSetupCommand+0x64c>
40021e30:	ea000057 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021e34:	e3a07001 	mov	r7, #1
40021e38:	e59f11ac 	ldr	r1, [pc, #428]	; 40021fec <CyU3PUsbSetupCommand+0x804>
40021e3c:	e3a00001 	mov	r0, #1
40021e40:	ebffee5a 	bl	4001d7b0 <CyU3PUsbSendEP0Data>
40021e44:	e1a06000 	mov	r6, r0
40021e48:	ea000051 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021e4c:	e1a00000 	nop			; (mov r0, r0)
40021e50:	e59f0188 	ldr	r0, [pc, #392]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021e54:	e5900000 	ldr	r0, [r0]
40021e58:	e3500000 	cmp	r0, #0
40021e5c:	0a000008 	beq	40021e84 <CyU3PUsbSetupCommand+0x69c>
40021e60:	e1a01005 	mov	r1, r5
40021e64:	e1a00004 	mov	r0, r4
40021e68:	e59f2170 	ldr	r2, [pc, #368]	; 40021fe0 <CyU3PUsbSetupCommand+0x7f8>
40021e6c:	e5922000 	ldr	r2, [r2]
40021e70:	e12fff32 	blx	r2
40021e74:	e1a07000 	mov	r7, r0
40021e78:	e3570000 	cmp	r7, #0
40021e7c:	0a000000 	beq	40021e84 <CyU3PUsbSetupCommand+0x69c>
40021e80:	ea000043 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021e84:	e59f1130 	ldr	r1, [pc, #304]	; 40021fbc <CyU3PUsbSetupCommand+0x7d4>
40021e88:	e5c1b00d 	strb	fp, [r1, #13]
40021e8c:	e59f0154 	ldr	r0, [pc, #340]	; 40021fe8 <CyU3PUsbSetupCommand+0x800>
40021e90:	e5900000 	ldr	r0, [r0]
40021e94:	e3500000 	cmp	r0, #0
40021e98:	0a000007 	beq	40021ebc <CyU3PUsbSetupCommand+0x6d4>
40021e9c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021ea0:	e59d2004 	ldr	r2, [sp, #4]
40021ea4:	e1800402 	orr	r0, r0, r2, lsl #8
40021ea8:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021eac:	e3a00007 	mov	r0, #7
40021eb0:	e59f2130 	ldr	r2, [pc, #304]	; 40021fe8 <CyU3PUsbSetupCommand+0x800>
40021eb4:	e5922000 	ldr	r2, [r2]
40021eb8:	e12fff32 	blx	r2
40021ebc:	e3a07001 	mov	r7, #1
40021ec0:	ebffeaa1 	bl	4001c94c <CyU3PUsbAckSetup>
40021ec4:	ea000032 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021ec8:	e1a00000 	nop			; (mov r0, r0)
40021ecc:	e3a07001 	mov	r7, #1
40021ed0:	ebffea9d 	bl	4001c94c <CyU3PUsbAckSetup>
40021ed4:	ea00002e 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021ed8:	e1a00000 	nop			; (mov r0, r0)
40021edc:	ebffec37 	bl	4001cfc0 <CyU3PUsbGetSpeed>
40021ee0:	e3500003 	cmp	r0, #3
40021ee4:	1a000019 	bne	40021f50 <CyU3PUsbSetupCommand+0x768>
40021ee8:	e35b0000 	cmp	fp, #0
40021eec:	1a000017 	bne	40021f50 <CyU3PUsbSetupCommand+0x768>
40021ef0:	e59d0004 	ldr	r0, [sp, #4]
40021ef4:	e3500000 	cmp	r0, #0
40021ef8:	1a000014 	bne	40021f50 <CyU3PUsbSetupCommand+0x768>
40021efc:	e59d0000 	ldr	r0, [sp]
40021f00:	e3500006 	cmp	r0, #6
40021f04:	1a000011 	bne	40021f50 <CyU3PUsbSetupCommand+0x768>
40021f08:	e3a07001 	mov	r7, #1
40021f0c:	e3a02000 	mov	r2, #0
40021f10:	e59f10d8 	ldr	r1, [pc, #216]	; 40021ff0 <CyU3PUsbSetupCommand+0x808>
40021f14:	e3a00020 	mov	r0, #32
40021f18:	ebffebb6 	bl	4001cdf8 <CyU3PUsbGetEP0Data>
40021f1c:	e1a06000 	mov	r6, r0
40021f20:	e59f00c0 	ldr	r0, [pc, #192]	; 40021fe8 <CyU3PUsbSetupCommand+0x800>
40021f24:	e5900000 	ldr	r0, [r0]
40021f28:	e3500000 	cmp	r0, #0
40021f2c:	0a000008 	beq	40021f54 <CyU3PUsbSetupCommand+0x76c>
40021f30:	e3560000 	cmp	r6, #0
40021f34:	1a000006 	bne	40021f54 <CyU3PUsbSetupCommand+0x76c>
40021f38:	e3a01000 	mov	r1, #0
40021f3c:	e3a00008 	mov	r0, #8
40021f40:	e59f20a0 	ldr	r2, [pc, #160]	; 40021fe8 <CyU3PUsbSetupCommand+0x800>
40021f44:	e5922000 	ldr	r2, [r2]
40021f48:	e12fff32 	blx	r2
40021f4c:	ea000000 	b	40021f54 <CyU3PUsbSetupCommand+0x76c>
40021f50:	e3a07000 	mov	r7, #0
40021f54:	ea00000e 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021f58:	e1a00000 	nop			; (mov r0, r0)
40021f5c:	ebffec17 	bl	4001cfc0 <CyU3PUsbGetSpeed>
40021f60:	e3500003 	cmp	r0, #3
40021f64:	1a000007 	bne	40021f88 <CyU3PUsbSetupCommand+0x7a0>
40021f68:	e59d0004 	ldr	r0, [sp, #4]
40021f6c:	e3500000 	cmp	r0, #0
40021f70:	1a000004 	bne	40021f88 <CyU3PUsbSetupCommand+0x7a0>
40021f74:	e59d0000 	ldr	r0, [sp]
40021f78:	e3500000 	cmp	r0, #0
40021f7c:	1a000001 	bne	40021f88 <CyU3PUsbSetupCommand+0x7a0>
40021f80:	e3a07001 	mov	r7, #1
40021f84:	ebffea70 	bl	4001c94c <CyU3PUsbAckSetup>
40021f88:	ea000001 	b	40021f94 <CyU3PUsbSetupCommand+0x7ac>
40021f8c:	e1a00000 	nop			; (mov r0, r0)
40021f90:	e1a00000 	nop			; (mov r0, r0)
40021f94:	e1a00000 	nop			; (mov r0, r0)
40021f98:	e3570001 	cmp	r7, #1
40021f9c:	1a000001 	bne	40021fa8 <CyU3PUsbSetupCommand+0x7c0>
40021fa0:	e3560000 	cmp	r6, #0
40021fa4:	0a000003 	beq	40021fb8 <CyU3PUsbSetupCommand+0x7d0>
40021fa8:	e3a02000 	mov	r2, #0
40021fac:	e3a01001 	mov	r1, #1
40021fb0:	e1a00002 	mov	r0, r2
40021fb4:	ebfff028 	bl	4001e05c <CyU3PUsbStall>
40021fb8:	eafffeb2 	b	40021a88 <CyU3PUsbSetupCommand+0x2a0>
40021fbc:	40031d60 	.word	0x40031d60
40021fc0:	e0033000 	.word	0xe0033000
40021fc4:	40030dd0 	.word	0x40030dd0
40021fc8:	400326c0 	.word	0x400326c0
40021fcc:	40031ed8 	.word	0x40031ed8
40021fd0:	e0031000 	.word	0xe0031000
40021fd4:	40031b3c 	.word	0x40031b3c
40021fd8:	40031a9c 	.word	0x40031a9c
40021fdc:	0000ffff 	.word	0x0000ffff
40021fe0:	40030dc0 	.word	0x40030dc0
40021fe4:	40031d6c 	.word	0x40031d6c
40021fe8:	40030dbc 	.word	0x40030dbc
40021fec:	40031d6d 	.word	0x40031d6d
40021ff0:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbSuspendHandler:

40021ff4 <CyU3PUsbSuspendHandler>:
40021ff4:	e92d4010 	push	{r4, lr}
40021ff8:	e59f003c 	ldr	r0, [pc, #60]	; 4002203c <CyU3PUsbSuspendHandler+0x48>
40021ffc:	e5d00008 	ldrb	r0, [r0, #8]
40022000:	e3500005 	cmp	r0, #5
40022004:	ba00000b 	blt	40022038 <CyU3PUsbSuspendHandler+0x44>
40022008:	e59f0030 	ldr	r0, [pc, #48]	; 40022040 <CyU3PUsbSuspendHandler+0x4c>
4002200c:	e5900000 	ldr	r0, [r0]
40022010:	e3500000 	cmp	r0, #0
40022014:	0a000004 	beq	4002202c <CyU3PUsbSuspendHandler+0x38>
40022018:	e3a01000 	mov	r1, #0
4002201c:	e3a00002 	mov	r0, #2
40022020:	e59f2018 	ldr	r2, [pc, #24]	; 40022040 <CyU3PUsbSuspendHandler+0x4c>
40022024:	e5922000 	ldr	r2, [r2]
40022028:	e12fff32 	blx	r2
4002202c:	e3a00005 	mov	r0, #5
40022030:	e59f1004 	ldr	r1, [pc, #4]	; 4002203c <CyU3PUsbSuspendHandler+0x48>
40022034:	e5c10008 	strb	r0, [r1, #8]
40022038:	e8bd8010 	pop	{r4, pc}
4002203c:	40031d60 	.word	0x40031d60
40022040:	40030dbc 	.word	0x40030dbc

Disassembly of section i.HandleVbusOffEvent:

40022044 <HandleVbusOffEvent>:
40022044:	e92d4010 	push	{r4, lr}
40022048:	e59f00e0 	ldr	r0, [pc, #224]	; 40022130 <HandleVbusOffEvent+0xec>
4002204c:	e5d00009 	ldrb	r0, [r0, #9]
40022050:	e3500003 	cmp	r0, #3
40022054:	1a000002 	bne	40022064 <HandleVbusOffEvent+0x20>
40022058:	e3a00001 	mov	r0, #1
4002205c:	ebffec59 	bl	4001d1c8 <CyU3PUsbPhyDisable>
40022060:	ea000022 	b	400220f0 <HandleVbusOffEvent+0xac>
40022064:	e59f00c8 	ldr	r0, [pc, #200]	; 40022134 <HandleVbusOffEvent+0xf0>
40022068:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002206c:	e3100901 	tst	r0, #16384	; 0x4000
40022070:	0a00001c 	beq	400220e8 <HandleVbusOffEvent+0xa4>
40022074:	e59f00b8 	ldr	r0, [pc, #184]	; 40022134 <HandleVbusOffEvent+0xf0>
40022078:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002207c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40022080:	e59f10ac 	ldr	r1, [pc, #172]	; 40022134 <HandleVbusOffEvent+0xf0>
40022084:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022088:	e3a00002 	mov	r0, #2
4002208c:	ebffc5fb 	bl	40013880 <CyU3PBusyWait>
40022090:	e59f00a0 	ldr	r0, [pc, #160]	; 40022138 <HandleVbusOffEvent+0xf4>
40022094:	e5900004 	ldr	r0, [r0, #4]
40022098:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4002209c:	e59f1094 	ldr	r1, [pc, #148]	; 40022138 <HandleVbusOffEvent+0xf4>
400220a0:	e5810004 	str	r0, [r1, #4]
400220a4:	e3a00001 	mov	r0, #1
400220a8:	ebffc5f4 	bl	40013880 <CyU3PBusyWait>
400220ac:	e59f0088 	ldr	r0, [pc, #136]	; 4002213c <HandleVbusOffEvent+0xf8>
400220b0:	e590001c 	ldr	r0, [r0, #28]
400220b4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
400220b8:	e59f107c 	ldr	r1, [pc, #124]	; 4002213c <HandleVbusOffEvent+0xf8>
400220bc:	e581001c 	str	r0, [r1, #28]
400220c0:	e59f0078 	ldr	r0, [pc, #120]	; 40022140 <HandleVbusOffEvent+0xfc>
400220c4:	e5900000 	ldr	r0, [r0]
400220c8:	e581002c 	str	r0, [r1, #44]	; 0x2c
400220cc:	e3a00001 	mov	r0, #1
400220d0:	ebffc5ea 	bl	40013880 <CyU3PBusyWait>
400220d4:	e59f005c 	ldr	r0, [pc, #92]	; 40022138 <HandleVbusOffEvent+0xf4>
400220d8:	e5900004 	ldr	r0, [r0, #4]
400220dc:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400220e0:	e59f1050 	ldr	r1, [pc, #80]	; 40022138 <HandleVbusOffEvent+0xf4>
400220e4:	e5810004 	str	r0, [r1, #4]
400220e8:	e3a00000 	mov	r0, #0
400220ec:	ebffec35 	bl	4001d1c8 <CyU3PUsbPhyDisable>
400220f0:	e3a01000 	mov	r1, #0
400220f4:	e3a00001 	mov	r0, #1
400220f8:	e59f2044 	ldr	r2, [pc, #68]	; 40022144 <HandleVbusOffEvent+0x100>
400220fc:	e5922000 	ldr	r2, [r2]
40022100:	e12fff32 	blx	r2
40022104:	e3a00000 	mov	r0, #0
40022108:	e59f1020 	ldr	r1, [pc, #32]	; 40022130 <HandleVbusOffEvent+0xec>
4002210c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40022110:	e3a00004 	mov	r0, #4
40022114:	e5c10008 	strb	r0, [r1, #8]
40022118:	e3a00000 	mov	r0, #0
4002211c:	e5c10009 	strb	r0, [r1, #9]
40022120:	e5810054 	str	r0, [r1, #84]	; 0x54
40022124:	e5810058 	str	r0, [r1, #88]	; 0x58
40022128:	e5810048 	str	r0, [r1, #72]	; 0x48
4002212c:	e8bd8010 	pop	{r4, pc}
40022130:	40031d60 	.word	0x40031d60
40022134:	e0031000 	.word	0xe0031000
40022138:	e0030000 	.word	0xe0030000
4002213c:	e0033000 	.word	0xe0033000
40022140:	40030c78 	.word	0x40030c78
40022144:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3POsTimerInit:

40022148 <CyU3POsTimerInit>:
40022148:	e92d4070 	push	{r4, r5, r6, lr}
4002214c:	e1a04000 	mov	r4, r0
40022150:	e3a00004 	mov	r0, #4
40022154:	eb000047 	bl	40022278 <CyU3PVicDisableInt>
40022158:	e59f00f0 	ldr	r0, [pc, #240]	; 40022250 <CyU3POsTimerInit+0x108>
4002215c:	e5905014 	ldr	r5, [r0, #20]
40022160:	e3a00064 	mov	r0, #100	; 0x64
40022164:	ebffc5c5 	bl	40013880 <CyU3PBusyWait>
40022168:	e3850c03 	orr	r0, r5, #768	; 0x300
4002216c:	e59f10dc 	ldr	r1, [pc, #220]	; 40022250 <CyU3POsTimerInit+0x108>
40022170:	e5810014 	str	r0, [r1, #20]
40022174:	e3a00064 	mov	r0, #100	; 0x64
40022178:	ebffc5c0 	bl	40013880 <CyU3PBusyWait>
4002217c:	e59f00cc 	ldr	r0, [pc, #204]	; 40022250 <CyU3POsTimerInit+0x108>
40022180:	e5905014 	ldr	r5, [r0, #20]
40022184:	e3540000 	cmp	r4, #0
40022188:	0a000001 	beq	40022194 <CyU3POsTimerInit+0x4c>
4002218c:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40022190:	da000006 	ble	400221b0 <CyU3POsTimerInit+0x68>
40022194:	e3a00001 	mov	r0, #1
40022198:	e59f10b4 	ldr	r1, [pc, #180]	; 40022254 <CyU3POsTimerInit+0x10c>
4002219c:	e1c100b0 	strh	r0, [r1]
400221a0:	e3a00020 	mov	r0, #32
400221a4:	e59f10ac 	ldr	r1, [pc, #172]	; 40022258 <CyU3POsTimerInit+0x110>
400221a8:	e5810000 	str	r0, [r1]
400221ac:	ea000004 	b	400221c4 <CyU3POsTimerInit+0x7c>
400221b0:	e59f009c 	ldr	r0, [pc, #156]	; 40022254 <CyU3POsTimerInit+0x10c>
400221b4:	e1c040b0 	strh	r4, [r0]
400221b8:	e1a00284 	lsl	r0, r4, #5
400221bc:	e59f1094 	ldr	r1, [pc, #148]	; 40022258 <CyU3POsTimerInit+0x110>
400221c0:	e5810000 	str	r0, [r1]
400221c4:	e59f008c 	ldr	r0, [pc, #140]	; 40022258 <CyU3POsTimerInit+0x110>
400221c8:	e5900000 	ldr	r0, [r0]
400221cc:	e2400007 	sub	r0, r0, #7
400221d0:	e59f1080 	ldr	r1, [pc, #128]	; 40022258 <CyU3POsTimerInit+0x110>
400221d4:	e5810000 	str	r0, [r1]
400221d8:	e3a06000 	mov	r6, #0
400221dc:	ea000001 	b	400221e8 <CyU3POsTimerInit+0xa0>
400221e0:	e2860001 	add	r0, r6, #1
400221e4:	e20060ff 	and	r6, r0, #255	; 0xff
400221e8:	e3a00001 	mov	r0, #1
400221ec:	e1a00610 	lsl	r0, r0, r6
400221f0:	e59f1060 	ldr	r1, [pc, #96]	; 40022258 <CyU3POsTimerInit+0x110>
400221f4:	e5911000 	ldr	r1, [r1]
400221f8:	e1500001 	cmp	r0, r1
400221fc:	9afffff7 	bls	400221e0 <CyU3POsTimerInit+0x98>
40022200:	e59f0050 	ldr	r0, [pc, #80]	; 40022258 <CyU3POsTimerInit+0x110>
40022204:	e5900000 	ldr	r0, [r0]
40022208:	e59f1040 	ldr	r1, [pc, #64]	; 40022250 <CyU3POsTimerInit+0x108>
4002220c:	e581001c 	str	r0, [r1, #28]
40022210:	e3a00064 	mov	r0, #100	; 0x64
40022214:	ebffc599 	bl	40013880 <CyU3PBusyWait>
40022218:	e3a00004 	mov	r0, #4
4002221c:	eb00001a 	bl	4002228c <CyU3PVicEnableInt>
40022220:	e59f0028 	ldr	r0, [pc, #40]	; 40022250 <CyU3POsTimerInit+0x108>
40022224:	e5900014 	ldr	r0, [r0, #20]
40022228:	e3c05c03 	bic	r5, r0, #768	; 0x300
4002222c:	e3a00b01 	mov	r0, #1024	; 0x400
40022230:	e1800586 	orr	r0, r0, r6, lsl #11
40022234:	e1855000 	orr	r5, r5, r0
40022238:	e3855c01 	orr	r5, r5, #256	; 0x100
4002223c:	e3a00064 	mov	r0, #100	; 0x64
40022240:	ebffc58e 	bl	40013880 <CyU3PBusyWait>
40022244:	e59f0004 	ldr	r0, [pc, #4]	; 40022250 <CyU3POsTimerInit+0x108>
40022248:	e5805014 	str	r5, [r0, #20]
4002224c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022250:	e0050000 	.word	0xe0050000
40022254:	40030dd8 	.word	0x40030dd8
40022258:	40030ddc 	.word	0x40030ddc

Disassembly of section i.CyU3PVicClearInt:

4002225c <CyU3PVicClearInt>:
4002225c:	e3a00000 	mov	r0, #0
40022260:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40022264:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40022268 <CyU3PVicDisableAllInterrupts>:
40022268:	e3a01000 	mov	r1, #0
4002226c:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40022270:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40022274:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40022278 <CyU3PVicDisableInt>:
40022278:	e3a01001 	mov	r1, #1
4002227c:	e1a01011 	lsl	r1, r1, r0
40022280:	e3a02000 	mov	r2, #0
40022284:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40022288:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

4002228c <CyU3PVicEnableInt>:
4002228c:	e3a01001 	mov	r1, #1
40022290:	e1a01011 	lsl	r1, r1, r0
40022294:	e3a02000 	mov	r2, #0
40022298:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
4002229c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

400222a0 <CyU3PVicEnableInterrupts>:
400222a0:	e3a01000 	mov	r1, #0
400222a4:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
400222a8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

400222b0 <CyU3PVicInit>:
400222b0:	e92d4010 	push	{r4, lr}
400222b4:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
400222b8:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
400222bc:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
400222c0:	e3e00000 	mvn	r0, #0
400222c4:	e3a01000 	mov	r1, #0
400222c8:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
400222cc:	e3a00000 	mov	r0, #0
400222d0:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
400222d4:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
400222d8:	ebffffdf 	bl	4002225c <CyU3PVicClearInt>
400222dc:	eb000001 	bl	400222e8 <__CyU3PVicSetupIntVectors_veneer>
400222e0:	e8bd8010 	pop	{r4, pc}
400222e4:	00000000 	andeq	r0, r0, r0

400222e8 <__CyU3PVicSetupIntVectors_veneer>:
400222e8:	e51ff004 	ldr	pc, [pc, #-4]	; 400222ec <__CyU3PVicSetupIntVectors_veneer+0x4>
400222ec:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

400222f0 <CyFx3Usb2PhySetup>:
400222f0:	e59f0008 	ldr	r0, [pc, #8]	; 40022300 <CyFx3Usb2PhySetup+0x10>
400222f4:	e59f1008 	ldr	r1, [pc, #8]	; 40022304 <CyFx3Usb2PhySetup+0x14>
400222f8:	e581000c 	str	r0, [r1, #12]
400222fc:	e12fff1e 	bx	lr
40022300:	00d4a480 	.word	0x00d4a480
40022304:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40022308 <CyFx3Usb3LnkRelaxHpTimeout>:
40022308:	e59f0008 	ldr	r0, [pc, #8]	; 40022318 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
4002230c:	e59f1008 	ldr	r1, [pc, #8]	; 4002231c <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40022310:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40022314:	e12fff1e 	bx	lr
40022318:	000009c4 	.word	0x000009c4
4002231c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40022320 <CyFx3Usb3LnkSetup>:
40022320:	e59f1024 	ldr	r1, [pc, #36]	; 4002234c <CyFx3Usb3LnkSetup+0x2c>
40022324:	e59f0024 	ldr	r0, [pc, #36]	; 40022350 <CyFx3Usb3LnkSetup+0x30>
40022328:	e580109c 	str	r1, [r0, #156]	; 0x9c
4002232c:	e5801080 	str	r1, [r0, #128]	; 0x80
40022330:	e59f101c 	ldr	r1, [pc, #28]	; 40022354 <CyFx3Usb3LnkSetup+0x34>
40022334:	e5801084 	str	r1, [r0, #132]	; 0x84
40022338:	e59f1018 	ldr	r1, [pc, #24]	; 40022358 <CyFx3Usb3LnkSetup+0x38>
4002233c:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40022340:	e3a0107d 	mov	r1, #125	; 0x7d
40022344:	e5801078 	str	r1, [r0, #120]	; 0x78
40022348:	e12fff1e 	bx	lr
4002234c:	00002710 	.word	0x00002710
40022350:	e0033000 	.word	0xe0033000
40022354:	00fa004b 	.word	0x00fa004b
40022358:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

4002235c <CyFx3Usb3SendTP>:
4002235c:	e5902000 	ldr	r2, [r0]
40022360:	e59f1020 	ldr	r1, [pc, #32]	; 40022388 <CyFx3Usb3SendTP+0x2c>
40022364:	e5812450 	str	r2, [r1, #1104]	; 0x450
40022368:	e5902004 	ldr	r2, [r0, #4]
4002236c:	e5812454 	str	r2, [r1, #1108]	; 0x454
40022370:	e5900008 	ldr	r0, [r0, #8]
40022374:	e5810458 	str	r0, [r1, #1112]	; 0x458
40022378:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
4002237c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022380:	e5810460 	str	r0, [r1, #1120]	; 0x460
40022384:	e12fff1e 	bx	lr
40022388:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

4002238c <CyFx3UsbDmaPrefetchEnable>:
4002238c:	e3500000 	cmp	r0, #0
40022390:	e59f001c 	ldr	r0, [pc, #28]	; 400223b4 <CyFx3UsbDmaPrefetchEnable+0x28>
40022394:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40022398:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
4002239c:	12811a09 	addne	r1, r1, #36864	; 0x9000
400223a0:	e3c22903 	bic	r2, r2, #49152	; 0xc000
400223a4:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
400223a8:	e1811002 	orr	r1, r1, r2
400223ac:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
400223b0:	e12fff1e 	bx	lr
400223b4:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

400223b8 <CyFx3UsbPowerOn>:
400223b8:	e92d4010 	push	{r4, lr}
400223bc:	e59f406c 	ldr	r4, [pc, #108]	; 40022430 <CyFx3UsbPowerOn+0x78>
400223c0:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400223c4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400223c8:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400223cc:	e3a0000a 	mov	r0, #10
400223d0:	ebffca77 	bl	40014db4 <CyFx3BusyWait>
400223d4:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400223d8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400223dc:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400223e0:	e3a00064 	mov	r0, #100	; 0x64
400223e4:	ebffca72 	bl	40014db4 <CyFx3BusyWait>
400223e8:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400223ec:	e3100001 	tst	r0, #1
400223f0:	0afffffc 	beq	400223e8 <CyFx3UsbPowerOn+0x30>
400223f4:	ebffca64 	bl	40014d8c <CyFx3DevIsUsb3Supported>
400223f8:	e59f4034 	ldr	r4, [pc, #52]	; 40022434 <CyFx3UsbPowerOn+0x7c>
400223fc:	e3500000 	cmp	r0, #0
40022400:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40022404:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40022408:	03a0000a 	moveq	r0, #10
4002240c:	0bffca68 	bleq	40014db4 <CyFx3BusyWait>
40022410:	ebffca3f 	bl	40014d14 <CyFx3DevIsOtgSupported>
40022414:	e3500000 	cmp	r0, #0
40022418:	18bd8010 	popne	{r4, pc}
4002241c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40022420:	e584080c 	str	r0, [r4, #2060]	; 0x80c
40022424:	e8bd4010 	pop	{r4, lr}
40022428:	e3a0000a 	mov	r0, #10
4002242c:	eaffca60 	b	40014db4 <CyFx3BusyWait>
40022430:	e0037000 	.word	0xe0037000
40022434:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40022438 <CyFx3UsbWritePhyReg>:
40022438:	e59f2084 	ldr	r2, [pc, #132]	; 400224c4 <CyFx3UsbWritePhyReg+0x8c>
4002243c:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022440:	e3120901 	tst	r2, #16384	; 0x4000
40022444:	012fff1e 	bxeq	lr
40022448:	e59f2078 	ldr	r2, [pc, #120]	; 400224c8 <CyFx3UsbWritePhyReg+0x90>
4002244c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022450:	e3803801 	orr	r3, r0, #65536	; 0x10000
40022454:	e5823024 	str	r3, [r2, #36]	; 0x24
40022458:	e5923028 	ldr	r3, [r2, #40]	; 0x28
4002245c:	e3130801 	tst	r3, #65536	; 0x10000
40022460:	0afffffc 	beq	40022458 <CyFx3UsbWritePhyReg+0x20>
40022464:	e5820024 	str	r0, [r2, #36]	; 0x24
40022468:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002246c:	e3100801 	tst	r0, #65536	; 0x10000
40022470:	1afffffc 	bne	40022468 <CyFx3UsbWritePhyReg+0x30>
40022474:	e5821024 	str	r1, [r2, #36]	; 0x24
40022478:	e3810802 	orr	r0, r1, #131072	; 0x20000
4002247c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022480:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022484:	e3100801 	tst	r0, #65536	; 0x10000
40022488:	0afffffc 	beq	40022480 <CyFx3UsbWritePhyReg+0x48>
4002248c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022490:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022494:	e3100801 	tst	r0, #65536	; 0x10000
40022498:	1afffffc 	bne	40022490 <CyFx3UsbWritePhyReg+0x58>
4002249c:	e3810702 	orr	r0, r1, #524288	; 0x80000
400224a0:	e5820024 	str	r0, [r2, #36]	; 0x24
400224a4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224a8:	e3100801 	tst	r0, #65536	; 0x10000
400224ac:	0afffffc 	beq	400224a4 <CyFx3UsbWritePhyReg+0x6c>
400224b0:	e5821024 	str	r1, [r2, #36]	; 0x24
400224b4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224b8:	e3100801 	tst	r0, #65536	; 0x10000
400224bc:	1afffffc 	bne	400224b4 <CyFx3UsbWritePhyReg+0x7c>
400224c0:	e12fff1e 	bx	lr
400224c4:	e0031000 	.word	0xe0031000
400224c8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

400224cc <CyU3PDmaDscrChainCreate>:
400224cc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400224d0:	e24dd018 	sub	sp, sp, #24
400224d4:	e1a04000 	mov	r4, r0
400224d8:	e1a05001 	mov	r5, r1
400224dc:	e1a06002 	mov	r6, r2
400224e0:	e1a07003 	mov	r7, r3
400224e4:	e3a0a000 	mov	sl, #0
400224e8:	eb0000a6 	bl	40022788 <CyU3PDmaDscrGetFreeCount>
400224ec:	e1500005 	cmp	r0, r5
400224f0:	aa000002 	bge	40022500 <CyU3PDmaDscrChainCreate+0x34>
400224f4:	e3a00010 	mov	r0, #16
400224f8:	e28dd018 	add	sp, sp, #24
400224fc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022500:	e3540000 	cmp	r4, #0
40022504:	1a000001 	bne	40022510 <CyU3PDmaDscrChainCreate+0x44>
40022508:	e3a00040 	mov	r0, #64	; 0x40
4002250c:	eafffff9 	b	400224f8 <CyU3PDmaDscrChainCreate+0x2c>
40022510:	e3550000 	cmp	r5, #0
40022514:	1a000001 	bne	40022520 <CyU3PDmaDscrChainCreate+0x54>
40022518:	e3a00040 	mov	r0, #64	; 0x40
4002251c:	eafffff5 	b	400224f8 <CyU3PDmaDscrChainCreate+0x2c>
40022520:	e1a09005 	mov	r9, r5
40022524:	e1a00004 	mov	r0, r4
40022528:	eb00005e 	bl	400226a8 <CyU3PDmaDscrGet>
4002252c:	e1d480b0 	ldrh	r8, [r4]
40022530:	ea000029 	b	400225dc <CyU3PDmaDscrChainCreate+0x110>
40022534:	e3590000 	cmp	r9, #0
40022538:	0a000002 	beq	40022548 <CyU3PDmaDscrChainCreate+0x7c>
4002253c:	e28d0014 	add	r0, sp, #20
40022540:	eb000058 	bl	400226a8 <CyU3PDmaDscrGet>
40022544:	ea000001 	b	40022550 <CyU3PDmaDscrChainCreate+0x84>
40022548:	e1d400b0 	ldrh	r0, [r4]
4002254c:	e58d0014 	str	r0, [sp, #20]
40022550:	e3560000 	cmp	r6, #0
40022554:	0a000015 	beq	400225b0 <CyU3PDmaDscrChainCreate+0xe4>
40022558:	e35a0000 	cmp	sl, #0
4002255c:	1a000013 	bne	400225b0 <CyU3PDmaDscrChainCreate+0xe4>
40022560:	e1a00006 	mov	r0, r6
40022564:	ebff85ff 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022568:	e58d0004 	str	r0, [sp, #4]
4002256c:	e59f00a0 	ldr	r0, [pc, #160]	; 40022614 <CyU3PDmaDscrChainCreate+0x148>
40022570:	e0000006 	and	r0, r0, r6
40022574:	e58d0010 	str	r0, [sp, #16]
40022578:	e59d0004 	ldr	r0, [sp, #4]
4002257c:	e3500000 	cmp	r0, #0
40022580:	1a000000 	bne	40022588 <CyU3PDmaDscrChainCreate+0xbc>
40022584:	e3a0a010 	mov	sl, #16
40022588:	e59d0004 	ldr	r0, [sp, #4]
4002258c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022590:	3a000004 	bcc	400225a8 <CyU3PDmaDscrChainCreate+0xdc>
40022594:	e59d0004 	ldr	r0, [sp, #4]
40022598:	e0800006 	add	r0, r0, r6
4002259c:	e59f1074 	ldr	r1, [pc, #116]	; 40022618 <CyU3PDmaDscrChainCreate+0x14c>
400225a0:	e1500001 	cmp	r0, r1
400225a4:	3a000004 	bcc	400225bc <CyU3PDmaDscrChainCreate+0xf0>
400225a8:	e3a0a010 	mov	sl, #16
400225ac:	ea000002 	b	400225bc <CyU3PDmaDscrChainCreate+0xf0>
400225b0:	e3a00000 	mov	r0, #0
400225b4:	e58d0004 	str	r0, [sp, #4]
400225b8:	e58d0010 	str	r0, [sp, #16]
400225bc:	e58d7008 	str	r7, [sp, #8]
400225c0:	e1dd01b4 	ldrh	r0, [sp, #20]
400225c4:	e1800800 	orr	r0, r0, r0, lsl #16
400225c8:	e58d000c 	str	r0, [sp, #12]
400225cc:	e28d1004 	add	r1, sp, #4
400225d0:	e1a00008 	mov	r0, r8
400225d4:	eb0000c6 	bl	400228f4 <CyU3PDmaDscrSetConfig>
400225d8:	e1dd81b4 	ldrh	r8, [sp, #20]
400225dc:	e1b00009 	movs	r0, r9
400225e0:	e2491001 	sub	r1, r9, #1
400225e4:	e1a09801 	lsl	r9, r1, #16
400225e8:	e1a09829 	lsr	r9, r9, #16
400225ec:	1affffd0 	bne	40022534 <CyU3PDmaDscrChainCreate+0x68>
400225f0:	e35a0000 	cmp	sl, #0
400225f4:	0a000004 	beq	4002260c <CyU3PDmaDscrChainCreate+0x140>
400225f8:	e1d400b0 	ldrh	r0, [r4]
400225fc:	e3a03001 	mov	r3, #1
40022600:	e1a02003 	mov	r2, r3
40022604:	e1a01005 	mov	r1, r5
40022608:	eb000003 	bl	4002261c <CyU3PDmaDscrChainDestroy>
4002260c:	e1a0000a 	mov	r0, sl
40022610:	eaffffb8 	b	400224f8 <CyU3PDmaDscrChainCreate+0x2c>
40022614:	0000fff0 	.word	0x0000fff0
40022618:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

4002261c <CyU3PDmaDscrChainDestroy>:
4002261c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40022620:	e1a04000 	mov	r4, r0
40022624:	e1a05001 	mov	r5, r1
40022628:	e1a06002 	mov	r6, r2
4002262c:	e1a07003 	mov	r7, r3
40022630:	ea000015 	b	4002268c <CyU3PDmaDscrChainDestroy+0x70>
40022634:	e1a0100d 	mov	r1, sp
40022638:	e1a00004 	mov	r0, r4
4002263c:	eb000091 	bl	40022888 <CyU3PDmaDscrGetConfig>
40022640:	e3570000 	cmp	r7, #0
40022644:	0a000004 	beq	4002265c <CyU3PDmaDscrChainDestroy+0x40>
40022648:	e59d0000 	ldr	r0, [sp]
4002264c:	e3500000 	cmp	r0, #0
40022650:	0a000001 	beq	4002265c <CyU3PDmaDscrChainDestroy+0x40>
40022654:	e59d0000 	ldr	r0, [sp]
40022658:	ebff8625 	bl	40003ef4 <CyU3PDmaBufferFree>
4002265c:	e3560000 	cmp	r6, #0
40022660:	0a000003 	beq	40022674 <CyU3PDmaDscrChainDestroy+0x58>
40022664:	e59d0008 	ldr	r0, [sp, #8]
40022668:	e59f1034 	ldr	r1, [pc, #52]	; 400226a4 <CyU3PDmaDscrChainDestroy+0x88>
4002266c:	e0018820 	and	r8, r1, r0, lsr #16
40022670:	ea000002 	b	40022680 <CyU3PDmaDscrChainDestroy+0x64>
40022674:	e59d0008 	ldr	r0, [sp, #8]
40022678:	e1a08800 	lsl	r8, r0, #16
4002267c:	e1a08828 	lsr	r8, r8, #16
40022680:	e1a00004 	mov	r0, r4
40022684:	eb000058 	bl	400227ec <CyU3PDmaDscrPut>
40022688:	e1a04008 	mov	r4, r8
4002268c:	e1b00005 	movs	r0, r5
40022690:	e2451001 	sub	r1, r5, #1
40022694:	e1a05801 	lsl	r5, r1, #16
40022698:	e1a05825 	lsr	r5, r5, #16
4002269c:	1affffe4 	bne	40022634 <CyU3PDmaDscrChainDestroy+0x18>
400226a0:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400226a4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

400226a8 <CyU3PDmaDscrGet>:
400226a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400226ac:	e1a04000 	mov	r4, r0
400226b0:	e3a08000 	mov	r8, #0
400226b4:	e3540000 	cmp	r4, #0
400226b8:	1a000001 	bne	400226c4 <CyU3PDmaDscrGet+0x1c>
400226bc:	e3a00040 	mov	r0, #64	; 0x40
400226c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400226c4:	e3e01000 	mvn	r1, #0
400226c8:	e59f00ac 	ldr	r0, [pc, #172]	; 4002277c <CyU3PDmaDscrGet+0xd4>
400226cc:	ebff9f0e 	bl	4000a30c <_txe_mutex_get>
400226d0:	e59f00a8 	ldr	r0, [pc, #168]	; 40022780 <CyU3PDmaDscrGet+0xd8>
400226d4:	e1d000b0 	ldrh	r0, [r0]
400226d8:	e3500000 	cmp	r0, #0
400226dc:	0a000022 	beq	4002276c <CyU3PDmaDscrGet+0xc4>
400226e0:	e3a06000 	mov	r6, #0
400226e4:	ea00001e 	b	40022764 <CyU3PDmaDscrGet+0xbc>
400226e8:	e59f0094 	ldr	r0, [pc, #148]	; 40022784 <CyU3PDmaDscrGet+0xdc>
400226ec:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400226f0:	e3750001 	cmn	r5, #1
400226f4:	0a000017 	beq	40022758 <CyU3PDmaDscrGet+0xb0>
400226f8:	e3a07001 	mov	r7, #1
400226fc:	ea000012 	b	4002274c <CyU3PDmaDscrGet+0xa4>
40022700:	e1150007 	tst	r5, r7
40022704:	1a00000d 	bne	40022740 <CyU3PDmaDscrGet+0x98>
40022708:	e1850007 	orr	r0, r5, r7
4002270c:	e59f1070 	ldr	r1, [pc, #112]	; 40022784 <CyU3PDmaDscrGet+0xdc>
40022710:	e7810106 	str	r0, [r1, r6, lsl #2]
40022714:	e2410004 	sub	r0, r1, #4
40022718:	e1c080b2 	strh	r8, [r0, #2]
4002271c:	e1d000b0 	ldrh	r0, [r0]
40022720:	e2400001 	sub	r0, r0, #1
40022724:	e2411004 	sub	r1, r1, #4
40022728:	e1c100b0 	strh	r0, [r1]
4002272c:	e1c480b0 	strh	r8, [r4]
40022730:	e2810044 	add	r0, r1, #68	; 0x44
40022734:	ebff9f29 	bl	4000a3e0 <_txe_mutex_put>
40022738:	e3a00000 	mov	r0, #0
4002273c:	eaffffdf 	b	400226c0 <CyU3PDmaDscrGet+0x18>
40022740:	e1a07087 	lsl	r7, r7, #1
40022744:	e2880001 	add	r0, r8, #1
40022748:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4002274c:	e3570000 	cmp	r7, #0
40022750:	1affffea 	bne	40022700 <CyU3PDmaDscrGet+0x58>
40022754:	ea000001 	b	40022760 <CyU3PDmaDscrGet+0xb8>
40022758:	e2880020 	add	r0, r8, #32
4002275c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022760:	e2866001 	add	r6, r6, #1
40022764:	e3560010 	cmp	r6, #16
40022768:	3affffde 	bcc	400226e8 <CyU3PDmaDscrGet+0x40>
4002276c:	e59f0008 	ldr	r0, [pc, #8]	; 4002277c <CyU3PDmaDscrGet+0xd4>
40022770:	ebff9f1a 	bl	4000a3e0 <_txe_mutex_put>
40022774:	e3a0004a 	mov	r0, #74	; 0x4a
40022778:	eaffffd0 	b	400226c0 <CyU3PDmaDscrGet+0x18>
4002277c:	4003275c 	.word	0x4003275c
40022780:	40032718 	.word	0x40032718
40022784:	4003271c 	.word	0x4003271c

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022788 <CyU3PDmaDscrGetFreeCount>:
40022788:	e59f0004 	ldr	r0, [pc, #4]	; 40022794 <CyU3PDmaDscrGetFreeCount+0xc>
4002278c:	e1d000b0 	ldrh	r0, [r0]
40022790:	e12fff1e 	bx	lr
40022794:	40032718 	.word	0x40032718

Disassembly of section i.CyU3PDmaDscrListCreate:

40022798 <CyU3PDmaDscrListCreate>:
40022798:	e92d4010 	push	{r4, lr}
4002279c:	e3a02040 	mov	r2, #64	; 0x40
400227a0:	e3a01000 	mov	r1, #0
400227a4:	e59f0034 	ldr	r0, [pc, #52]	; 400227e0 <CyU3PDmaDscrListCreate+0x48>
400227a8:	ebff83c2 	bl	400036b8 <CyU3PMemSet>
400227ac:	e3a00001 	mov	r0, #1
400227b0:	e59f102c 	ldr	r1, [pc, #44]	; 400227e4 <CyU3PDmaDscrListCreate+0x4c>
400227b4:	e5810004 	str	r0, [r1, #4]
400227b8:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
400227bc:	e1c100b0 	strh	r0, [r1]
400227c0:	e3a00001 	mov	r0, #1
400227c4:	e1c100b2 	strh	r0, [r1, #2]
400227c8:	e3a03038 	mov	r3, #56	; 0x38
400227cc:	e3a02000 	mov	r2, #0
400227d0:	e1a01002 	mov	r1, r2
400227d4:	e59f000c 	ldr	r0, [pc, #12]	; 400227e8 <CyU3PDmaDscrListCreate+0x50>
400227d8:	ebff9e4d 	bl	4000a114 <_txe_mutex_create>
400227dc:	e8bd8010 	pop	{r4, pc}
400227e0:	4003271c 	.word	0x4003271c
400227e4:	40032718 	.word	0x40032718
400227e8:	4003275c 	.word	0x4003275c

Disassembly of section i.CyU3PDmaDscrPut:

400227ec <CyU3PDmaDscrPut>:
400227ec:	e92d4070 	push	{r4, r5, r6, lr}
400227f0:	e1a04000 	mov	r4, r0
400227f4:	e3540c02 	cmp	r4, #512	; 0x200
400227f8:	aa000001 	bge	40022804 <CyU3PDmaDscrPut+0x18>
400227fc:	e3540000 	cmp	r4, #0
40022800:	1a000001 	bne	4002280c <CyU3PDmaDscrPut+0x20>
40022804:	e3a00040 	mov	r0, #64	; 0x40
40022808:	e8bd8070 	pop	{r4, r5, r6, pc}
4002280c:	e3e01000 	mvn	r1, #0
40022810:	e59f0064 	ldr	r0, [pc, #100]	; 4002287c <CyU3PDmaDscrPut+0x90>
40022814:	ebff9ebc 	bl	4000a30c <_txe_mutex_get>
40022818:	e1a00004 	mov	r0, r4
4002281c:	e1a01fc4 	asr	r1, r4, #31
40022820:	e0841da1 	add	r1, r4, r1, lsr #27
40022824:	e1a062c1 	asr	r6, r1, #5
40022828:	e59f0050 	ldr	r0, [pc, #80]	; 40022880 <CyU3PDmaDscrPut+0x94>
4002282c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022830:	e1a00004 	mov	r0, r4
40022834:	e1a01fc4 	asr	r1, r4, #31
40022838:	e0841da1 	add	r1, r4, r1, lsr #27
4002283c:	e1a012c1 	asr	r1, r1, #5
40022840:	e0441281 	sub	r1, r4, r1, lsl #5
40022844:	e3a02001 	mov	r2, #1
40022848:	e1c55112 	bic	r5, r5, r2, lsl r1
4002284c:	e59f002c 	ldr	r0, [pc, #44]	; 40022880 <CyU3PDmaDscrPut+0x94>
40022850:	e7805106 	str	r5, [r0, r6, lsl #2]
40022854:	e2400004 	sub	r0, r0, #4
40022858:	e1d000b0 	ldrh	r0, [r0]
4002285c:	e2800001 	add	r0, r0, #1
40022860:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40022864:	e59f1018 	ldr	r1, [pc, #24]	; 40022884 <CyU3PDmaDscrPut+0x98>
40022868:	e1c100b0 	strh	r0, [r1]
4002286c:	e2810044 	add	r0, r1, #68	; 0x44
40022870:	ebff9eda 	bl	4000a3e0 <_txe_mutex_put>
40022874:	e3a00000 	mov	r0, #0
40022878:	eaffffe2 	b	40022808 <CyU3PDmaDscrPut+0x1c>
4002287c:	4003275c 	.word	0x4003275c
40022880:	4003271c 	.word	0x4003271c
40022884:	40032718 	.word	0x40032718

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022888 <CyU3PDmaDscrGetConfig>:
40022888:	e92d4070 	push	{r4, r5, r6, lr}
4002288c:	e1a05000 	mov	r5, r0
40022890:	e1a04001 	mov	r4, r1
40022894:	e3550c02 	cmp	r5, #512	; 0x200
40022898:	aa000001 	bge	400228a4 <CyU3PDmaDscrGetConfig+0x1c>
4002289c:	e3550000 	cmp	r5, #0
400228a0:	1a000001 	bne	400228ac <CyU3PDmaDscrGetConfig+0x24>
400228a4:	e3a00040 	mov	r0, #64	; 0x40
400228a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400228ac:	e3540000 	cmp	r4, #0
400228b0:	1a000001 	bne	400228bc <CyU3PDmaDscrGetConfig+0x34>
400228b4:	e3a00040 	mov	r0, #64	; 0x40
400228b8:	eafffffa 	b	400228a8 <CyU3PDmaDscrGetConfig+0x20>
400228bc:	e59f102c 	ldr	r1, [pc, #44]	; 400228f0 <CyU3PDmaDscrGetConfig+0x68>
400228c0:	e5911000 	ldr	r1, [r1]
400228c4:	e0810205 	add	r0, r1, r5, lsl #4
400228c8:	e3a01010 	mov	r1, #16
400228cc:	ebffbea4 	bl	40012364 <CyU3PSysClearDRegion>
400228d0:	ebffc118 	bl	40012d38 <CyU3PSysBarrierSync>
400228d4:	e59f0014 	ldr	r0, [pc, #20]	; 400228f0 <CyU3PDmaDscrGetConfig+0x68>
400228d8:	e5900000 	ldr	r0, [r0]
400228dc:	e0800205 	add	r0, r0, r5, lsl #4
400228e0:	e890004e 	ldm	r0, {r1, r2, r3, r6}
400228e4:	e884004e 	stm	r4, {r1, r2, r3, r6}
400228e8:	e3a00000 	mov	r0, #0
400228ec:	eaffffed 	b	400228a8 <CyU3PDmaDscrGetConfig+0x20>
400228f0:	40030de0 	.word	0x40030de0

Disassembly of section i.CyU3PDmaDscrSetConfig:

400228f4 <CyU3PDmaDscrSetConfig>:
400228f4:	e92d4070 	push	{r4, r5, r6, lr}
400228f8:	e1a04000 	mov	r4, r0
400228fc:	e1a05001 	mov	r5, r1
40022900:	e3540c02 	cmp	r4, #512	; 0x200
40022904:	aa000001 	bge	40022910 <CyU3PDmaDscrSetConfig+0x1c>
40022908:	e3540000 	cmp	r4, #0
4002290c:	1a000001 	bne	40022918 <CyU3PDmaDscrSetConfig+0x24>
40022910:	e3a00040 	mov	r0, #64	; 0x40
40022914:	e8bd8070 	pop	{r4, r5, r6, pc}
40022918:	e3550000 	cmp	r5, #0
4002291c:	1a000001 	bne	40022928 <CyU3PDmaDscrSetConfig+0x34>
40022920:	e3a00040 	mov	r0, #64	; 0x40
40022924:	eafffffa 	b	40022914 <CyU3PDmaDscrSetConfig+0x20>
40022928:	e59f002c 	ldr	r0, [pc, #44]	; 4002295c <CyU3PDmaDscrSetConfig+0x68>
4002292c:	e5900000 	ldr	r0, [r0]
40022930:	e0800204 	add	r0, r0, r4, lsl #4
40022934:	e895004e 	ldm	r5, {r1, r2, r3, r6}
40022938:	e880004e 	stm	r0, {r1, r2, r3, r6}
4002293c:	e59f1018 	ldr	r1, [pc, #24]	; 4002295c <CyU3PDmaDscrSetConfig+0x68>
40022940:	e5911000 	ldr	r1, [r1]
40022944:	e0810204 	add	r0, r1, r4, lsl #4
40022948:	e3a01010 	mov	r1, #16
4002294c:	ebffbe84 	bl	40012364 <CyU3PSysClearDRegion>
40022950:	ebffc0f8 	bl	40012d38 <CyU3PSysBarrierSync>
40022954:	e3a00000 	mov	r0, #0
40022958:	eaffffed 	b	40022914 <CyU3PDmaDscrSetConfig+0x20>
4002295c:	40030de0 	.word	0x40030de0

Disassembly of section i.CyU3PDmaIntHandler:

40022960 <CyU3PDmaIntHandler>:
40022960:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40022964:	e1a04000 	mov	r4, r0
40022968:	e1a05001 	mov	r5, r1
4002296c:	e204003f 	and	r0, r4, #63	; 0x3f
40022970:	e1857400 	orr	r7, r5, r0, lsl #8
40022974:	e59f0150 	ldr	r0, [pc, #336]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022978:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002297c:	e0800385 	add	r0, r0, r5, lsl #7
40022980:	e5900010 	ldr	r0, [r0, #16]
40022984:	e59f1140 	ldr	r1, [pc, #320]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022988:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002298c:	e0811385 	add	r1, r1, r5, lsl #7
40022990:	e5911014 	ldr	r1, [r1, #20]
40022994:	e0009001 	and	r9, r0, r1
40022998:	e59f0130 	ldr	r0, [pc, #304]	; 40022ad0 <CyU3PDmaIntHandler+0x170>
4002299c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229a0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
400229a4:	e3560000 	cmp	r6, #0
400229a8:	0a000038 	beq	40022a90 <CyU3PDmaIntHandler+0x130>
400229ac:	e1a00000 	nop			; (mov r0, r0)
400229b0:	e59f0114 	ldr	r0, [pc, #276]	; 40022acc <CyU3PDmaIntHandler+0x16c>
400229b4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229b8:	e0800385 	add	r0, r0, r5, lsl #7
400229bc:	e5900010 	ldr	r0, [r0, #16]
400229c0:	e59f1104 	ldr	r1, [pc, #260]	; 40022acc <CyU3PDmaIntHandler+0x16c>
400229c4:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400229c8:	e0811385 	add	r1, r1, r5, lsl #7
400229cc:	e5911014 	ldr	r1, [r1, #20]
400229d0:	e0000001 	and	r0, r0, r1
400229d4:	e1899000 	orr	r9, r9, r0
400229d8:	e2098e12 	and	r8, r9, #288	; 0x120
400229dc:	e59f00e8 	ldr	r0, [pc, #232]	; 40022acc <CyU3PDmaIntHandler+0x16c>
400229e0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229e4:	e0800385 	add	r0, r0, r5, lsl #7
400229e8:	e5900014 	ldr	r0, [r0, #20]
400229ec:	e1c00008 	bic	r0, r0, r8
400229f0:	e59f10d4 	ldr	r1, [pc, #212]	; 40022acc <CyU3PDmaIntHandler+0x16c>
400229f4:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400229f8:	e0811385 	add	r1, r1, r5, lsl #7
400229fc:	e5810014 	str	r0, [r1, #20]
40022a00:	e1c90008 	bic	r0, r9, r8
40022a04:	e59f10c0 	ldr	r1, [pc, #192]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022a08:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a0c:	e0811385 	add	r1, r1, r5, lsl #7
40022a10:	e5810010 	str	r0, [r1, #16]
40022a14:	e59f00b0 	ldr	r0, [pc, #176]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022a18:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a1c:	e7900385 	ldr	r0, [r0, r5, lsl #7]
40022a20:	e1a00800 	lsl	r0, r0, #16
40022a24:	e1a00820 	lsr	r0, r0, #16
40022a28:	e58d000c 	str	r0, [sp, #12]
40022a2c:	e59f0098 	ldr	r0, [pc, #152]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022a30:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a34:	e0800385 	add	r0, r0, r5, lsl #7
40022a38:	e5900010 	ldr	r0, [r0, #16]
40022a3c:	e59f1088 	ldr	r1, [pc, #136]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022a40:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a44:	e0811385 	add	r1, r1, r5, lsl #7
40022a48:	e5911014 	ldr	r1, [r1, #20]
40022a4c:	e0008001 	and	r8, r0, r1
40022a50:	e3580000 	cmp	r8, #0
40022a54:	1affffd5 	bne	400229b0 <CyU3PDmaIntHandler+0x50>
40022a58:	e3a00901 	mov	r0, #16384	; 0x4000
40022a5c:	e58d0000 	str	r0, [sp]
40022a60:	e59d0000 	ldr	r0, [sp]
40022a64:	e58d0000 	str	r0, [sp]
40022a68:	e59d0000 	ldr	r0, [sp]
40022a6c:	e1800807 	orr	r0, r0, r7, lsl #16
40022a70:	e58d0000 	str	r0, [sp]
40022a74:	e58d6004 	str	r6, [sp, #4]
40022a78:	e58d9008 	str	r9, [sp, #8]
40022a7c:	e3a02000 	mov	r2, #0
40022a80:	e1a01002 	mov	r1, r2
40022a84:	e1a0000d 	mov	r0, sp
40022a88:	ebffe05f 	bl	4001ac0c <CyU3PDmaMsgSend>
40022a8c:	ea00000d 	b	40022ac8 <CyU3PDmaIntHandler+0x168>
40022a90:	e59f003c 	ldr	r0, [pc, #60]	; 40022ad4 <CyU3PDmaIntHandler+0x174>
40022a94:	e5900000 	ldr	r0, [r0]
40022a98:	e3500000 	cmp	r0, #0
40022a9c:	0a000005 	beq	40022ab8 <CyU3PDmaIntHandler+0x158>
40022aa0:	e1a01009 	mov	r1, r9
40022aa4:	e1a00007 	mov	r0, r7
40022aa8:	e59f2024 	ldr	r2, [pc, #36]	; 40022ad4 <CyU3PDmaIntHandler+0x174>
40022aac:	e5922000 	ldr	r2, [r2]
40022ab0:	e12fff32 	blx	r2
40022ab4:	ea000003 	b	40022ac8 <CyU3PDmaIntHandler+0x168>
40022ab8:	e59f000c 	ldr	r0, [pc, #12]	; 40022acc <CyU3PDmaIntHandler+0x16c>
40022abc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022ac0:	e0800385 	add	r0, r0, r5, lsl #7
40022ac4:	e5809010 	str	r9, [r0, #16]
40022ac8:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40022acc:	40030cf8 	.word	0x40030cf8
40022ad0:	40030d20 	.word	0x40030d20
40022ad4:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PGpioInit:

40022ad8 <CyU3PGpioInit>:
40022ad8:	e92d4070 	push	{r4, r5, r6, lr}
40022adc:	e1a04000 	mov	r4, r0
40022ae0:	e1a06001 	mov	r6, r1
40022ae4:	e59f00fc 	ldr	r0, [pc, #252]	; 40022be8 <CyU3PGpioInit+0x110>
40022ae8:	e5900000 	ldr	r0, [r0]
40022aec:	e3500000 	cmp	r0, #0
40022af0:	0a000001 	beq	40022afc <CyU3PGpioInit+0x24>
40022af4:	e3a00043 	mov	r0, #67	; 0x43
40022af8:	e8bd8070 	pop	{r4, r5, r6, pc}
40022afc:	e3540000 	cmp	r4, #0
40022b00:	1a000001 	bne	40022b0c <CyU3PGpioInit+0x34>
40022b04:	e3a00041 	mov	r0, #65	; 0x41
40022b08:	eafffffa 	b	40022af8 <CyU3PGpioInit+0x20>
40022b0c:	e1a00006 	mov	r0, r6
40022b10:	eb00013b 	bl	40023004 <CyU3PRegisterGpioCallBack>
40022b14:	ebffc551 	bl	40014060 <CyU3PLppGpioBlockIsOn>
40022b18:	e3500000 	cmp	r0, #0
40022b1c:	0a000003 	beq	40022b30 <CyU3PGpioInit+0x58>
40022b20:	e59f00c4 	ldr	r0, [pc, #196]	; 40022bec <CyU3PGpioInit+0x114>
40022b24:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022b28:	e3100001 	tst	r0, #1
40022b2c:	1a000020 	bne	40022bb4 <CyU3PGpioInit+0xdc>
40022b30:	e1a00004 	mov	r0, r4
40022b34:	ebffc4a7 	bl	40013dd8 <CyU3PGpioSetClock>
40022b38:	e1a05000 	mov	r5, r0
40022b3c:	e3550000 	cmp	r5, #0
40022b40:	0a000001 	beq	40022b4c <CyU3PGpioInit+0x74>
40022b44:	e1a00005 	mov	r0, r5
40022b48:	eaffffea 	b	40022af8 <CyU3PGpioInit+0x20>
40022b4c:	e59f109c 	ldr	r1, [pc, #156]	; 40022bf0 <CyU3PGpioInit+0x118>
40022b50:	e3a00004 	mov	r0, #4
40022b54:	ebffc545 	bl	40014070 <CyU3PLppInit>
40022b58:	e1a05000 	mov	r5, r0
40022b5c:	e3550000 	cmp	r5, #0
40022b60:	0a000001 	beq	40022b6c <CyU3PGpioInit+0x94>
40022b64:	e1a00005 	mov	r0, r5
40022b68:	eaffffe2 	b	40022af8 <CyU3PGpioInit+0x20>
40022b6c:	e59f0078 	ldr	r0, [pc, #120]	; 40022bec <CyU3PGpioInit+0x114>
40022b70:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022b74:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022b78:	e59f106c 	ldr	r1, [pc, #108]	; 40022bec <CyU3PGpioInit+0x114>
40022b7c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022b80:	e3a0000a 	mov	r0, #10
40022b84:	ebffc33d 	bl	40013880 <CyU3PBusyWait>
40022b88:	e59f005c 	ldr	r0, [pc, #92]	; 40022bec <CyU3PGpioInit+0x114>
40022b8c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022b90:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022b94:	e59f1050 	ldr	r1, [pc, #80]	; 40022bec <CyU3PGpioInit+0x114>
40022b98:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022b9c:	e1a00000 	nop			; (mov r0, r0)
40022ba0:	e59f0044 	ldr	r0, [pc, #68]	; 40022bec <CyU3PGpioInit+0x114>
40022ba4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022ba8:	e3100001 	tst	r0, #1
40022bac:	0afffffb 	beq	40022ba0 <CyU3PGpioInit+0xc8>
40022bb0:	ea000007 	b	40022bd4 <CyU3PGpioInit+0xfc>
40022bb4:	e59f1034 	ldr	r1, [pc, #52]	; 40022bf0 <CyU3PGpioInit+0x118>
40022bb8:	e3a00004 	mov	r0, #4
40022bbc:	ebffc52b 	bl	40014070 <CyU3PLppInit>
40022bc0:	e1a05000 	mov	r5, r0
40022bc4:	e3550000 	cmp	r5, #0
40022bc8:	0a000001 	beq	40022bd4 <CyU3PGpioInit+0xfc>
40022bcc:	e1a00005 	mov	r0, r5
40022bd0:	eaffffc8 	b	40022af8 <CyU3PGpioInit+0x20>
40022bd4:	e3a00001 	mov	r0, #1
40022bd8:	e59f1008 	ldr	r1, [pc, #8]	; 40022be8 <CyU3PGpioInit+0x110>
40022bdc:	e5810000 	str	r0, [r1]
40022be0:	e3a00000 	mov	r0, #0
40022be4:	eaffffc3 	b	40022af8 <CyU3PGpioInit+0x20>
40022be8:	40030ef8 	.word	0x40030ef8
40022bec:	e0001000 	.word	0xe0001000
40022bf0:	40022bf4 	.word	0x40022bf4

Disassembly of section i.CyU3PGpioInt_Handler:

40022bf4 <CyU3PGpioInt_Handler>:
40022bf4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022bf8:	e3a06000 	mov	r6, #0
40022bfc:	e3a05000 	mov	r5, #0
40022c00:	e3a04001 	mov	r4, #1
40022c04:	ea000029 	b	40022cb0 <CyU3PGpioInt_Handler+0xbc>
40022c08:	e59f0198 	ldr	r0, [pc, #408]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022c0c:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022c10:	e1100004 	tst	r0, r4
40022c14:	0a000021 	beq	40022ca0 <CyU3PGpioInt_Handler+0xac>
40022c18:	e59f0188 	ldr	r0, [pc, #392]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022c1c:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022c20:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022c24:	e59f117c 	ldr	r1, [pc, #380]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022c28:	e7810205 	str	r0, [r1, r5, lsl #4]
40022c2c:	e59f0178 	ldr	r0, [pc, #376]	; 40022dac <CyU3PGpioInt_Handler+0x1b8>
40022c30:	e5900000 	ldr	r0, [r0]
40022c34:	e3500000 	cmp	r0, #0
40022c38:	0a000018 	beq	40022ca0 <CyU3PGpioInt_Handler+0xac>
40022c3c:	e1a06005 	mov	r6, r5
40022c40:	e1a07005 	mov	r7, r5
40022c44:	ea00000e 	b	40022c84 <CyU3PGpioInt_Handler+0x90>
40022c48:	e1a00007 	mov	r0, r7
40022c4c:	ebffc097 	bl	40012eb0 <CyU3PIsGpioComplexIOConfigured>
40022c50:	e3500000 	cmp	r0, #0
40022c54:	0a000001 	beq	40022c60 <CyU3PGpioInt_Handler+0x6c>
40022c58:	e1a06007 	mov	r6, r7
40022c5c:	ea00000a 	b	40022c8c <CyU3PGpioInt_Handler+0x98>
40022c60:	e2870020 	add	r0, r7, #32
40022c64:	ebffc091 	bl	40012eb0 <CyU3PIsGpioComplexIOConfigured>
40022c68:	e3500000 	cmp	r0, #0
40022c6c:	0a000002 	beq	40022c7c <CyU3PGpioInt_Handler+0x88>
40022c70:	e2870020 	add	r0, r7, #32
40022c74:	e20060ff 	and	r6, r0, #255	; 0xff
40022c78:	ea000003 	b	40022c8c <CyU3PGpioInt_Handler+0x98>
40022c7c:	e2870008 	add	r0, r7, #8
40022c80:	e20070ff 	and	r7, r0, #255	; 0xff
40022c84:	e3570020 	cmp	r7, #32
40022c88:	baffffee 	blt	40022c48 <CyU3PGpioInt_Handler+0x54>
40022c8c:	e1a00000 	nop			; (mov r0, r0)
40022c90:	e1a00006 	mov	r0, r6
40022c94:	e59f1110 	ldr	r1, [pc, #272]	; 40022dac <CyU3PGpioInt_Handler+0x1b8>
40022c98:	e5911000 	ldr	r1, [r1]
40022c9c:	e12fff31 	blx	r1
40022ca0:	e59f0108 	ldr	r0, [pc, #264]	; 40022db0 <CyU3PGpioInt_Handler+0x1bc>
40022ca4:	e0004084 	and	r4, r0, r4, lsl #1
40022ca8:	e2850001 	add	r0, r5, #1
40022cac:	e20050ff 	and	r5, r0, #255	; 0xff
40022cb0:	e3540080 	cmp	r4, #128	; 0x80
40022cb4:	9affffd3 	bls	40022c08 <CyU3PGpioInt_Handler+0x14>
40022cb8:	e59f00e8 	ldr	r0, [pc, #232]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022cbc:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022cc0:	e3500000 	cmp	r0, #0
40022cc4:	0a000017 	beq	40022d28 <CyU3PGpioInt_Handler+0x134>
40022cc8:	e3a05000 	mov	r5, #0
40022ccc:	ea000013 	b	40022d20 <CyU3PGpioInt_Handler+0x12c>
40022cd0:	e59f00d0 	ldr	r0, [pc, #208]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022cd4:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022cd8:	e3a01001 	mov	r1, #1
40022cdc:	e1100511 	tst	r0, r1, lsl r5
40022ce0:	0a00000c 	beq	40022d18 <CyU3PGpioInt_Handler+0x124>
40022ce4:	e59f00c8 	ldr	r0, [pc, #200]	; 40022db4 <CyU3PGpioInt_Handler+0x1c0>
40022ce8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40022cec:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022cf0:	e59f10bc 	ldr	r1, [pc, #188]	; 40022db4 <CyU3PGpioInt_Handler+0x1c0>
40022cf4:	e7810105 	str	r0, [r1, r5, lsl #2]
40022cf8:	e59f00ac 	ldr	r0, [pc, #172]	; 40022dac <CyU3PGpioInt_Handler+0x1b8>
40022cfc:	e5900000 	ldr	r0, [r0]
40022d00:	e3500000 	cmp	r0, #0
40022d04:	0a000003 	beq	40022d18 <CyU3PGpioInt_Handler+0x124>
40022d08:	e1a00005 	mov	r0, r5
40022d0c:	e59f1098 	ldr	r1, [pc, #152]	; 40022dac <CyU3PGpioInt_Handler+0x1b8>
40022d10:	e5911000 	ldr	r1, [r1]
40022d14:	e12fff31 	blx	r1
40022d18:	e2850001 	add	r0, r5, #1
40022d1c:	e20050ff 	and	r5, r0, #255	; 0xff
40022d20:	e3550020 	cmp	r5, #32
40022d24:	baffffe9 	blt	40022cd0 <CyU3PGpioInt_Handler+0xdc>
40022d28:	e59f0078 	ldr	r0, [pc, #120]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022d2c:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022d30:	e3500000 	cmp	r0, #0
40022d34:	0a00001a 	beq	40022da4 <CyU3PGpioInt_Handler+0x1b0>
40022d38:	e3a05000 	mov	r5, #0
40022d3c:	ea000016 	b	40022d9c <CyU3PGpioInt_Handler+0x1a8>
40022d40:	e59f0060 	ldr	r0, [pc, #96]	; 40022da8 <CyU3PGpioInt_Handler+0x1b4>
40022d44:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022d48:	e3a01001 	mov	r1, #1
40022d4c:	e1100511 	tst	r0, r1, lsl r5
40022d50:	0a00000f 	beq	40022d94 <CyU3PGpioInt_Handler+0x1a0>
40022d54:	e59f0058 	ldr	r0, [pc, #88]	; 40022db4 <CyU3PGpioInt_Handler+0x1c0>
40022d58:	e2851020 	add	r1, r5, #32
40022d5c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022d60:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022d64:	e59f0048 	ldr	r0, [pc, #72]	; 40022db4 <CyU3PGpioInt_Handler+0x1c0>
40022d68:	e2852020 	add	r2, r5, #32
40022d6c:	e7801102 	str	r1, [r0, r2, lsl #2]
40022d70:	e59f0034 	ldr	r0, [pc, #52]	; 40022dac <CyU3PGpioInt_Handler+0x1b8>
40022d74:	e5900000 	ldr	r0, [r0]
40022d78:	e3500000 	cmp	r0, #0
40022d7c:	0a000004 	beq	40022d94 <CyU3PGpioInt_Handler+0x1a0>
40022d80:	e2851020 	add	r1, r5, #32
40022d84:	e20100ff 	and	r0, r1, #255	; 0xff
40022d88:	e59f101c 	ldr	r1, [pc, #28]	; 40022dac <CyU3PGpioInt_Handler+0x1b8>
40022d8c:	e5911000 	ldr	r1, [r1]
40022d90:	e12fff31 	blx	r1
40022d94:	e2850001 	add	r0, r5, #1
40022d98:	e20050ff 	and	r5, r0, #255	; 0xff
40022d9c:	e3550020 	cmp	r5, #32
40022da0:	baffffe6 	blt	40022d40 <CyU3PGpioInt_Handler+0x14c>
40022da4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022da8:	e0001000 	.word	0xe0001000
40022dac:	40030efc 	.word	0x40030efc
40022db0:	0000ffff 	.word	0x0000ffff
40022db4:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022db8 <CyU3PGpioSetSimpleConfig>:
40022db8:	e92d4070 	push	{r4, r5, r6, lr}
40022dbc:	e1a04000 	mov	r4, r0
40022dc0:	e1a05001 	mov	r5, r1
40022dc4:	e3a06000 	mov	r6, #0
40022dc8:	e59f00d0 	ldr	r0, [pc, #208]	; 40022ea0 <CyU3PGpioSetSimpleConfig+0xe8>
40022dcc:	e5900000 	ldr	r0, [r0]
40022dd0:	e3500000 	cmp	r0, #0
40022dd4:	1a000001 	bne	40022de0 <CyU3PGpioSetSimpleConfig+0x28>
40022dd8:	e3a00042 	mov	r0, #66	; 0x42
40022ddc:	e8bd8070 	pop	{r4, r5, r6, pc}
40022de0:	e1a00004 	mov	r0, r4
40022de4:	ebffc03d 	bl	40012ee0 <CyU3PIsGpioValid>
40022de8:	e3500000 	cmp	r0, #0
40022dec:	1a000001 	bne	40022df8 <CyU3PGpioSetSimpleConfig+0x40>
40022df0:	e3a00040 	mov	r0, #64	; 0x40
40022df4:	eafffff8 	b	40022ddc <CyU3PGpioSetSimpleConfig+0x24>
40022df8:	e3550000 	cmp	r5, #0
40022dfc:	1a000001 	bne	40022e08 <CyU3PGpioSetSimpleConfig+0x50>
40022e00:	e3a00041 	mov	r0, #65	; 0x41
40022e04:	eafffff4 	b	40022ddc <CyU3PGpioSetSimpleConfig+0x24>
40022e08:	e5d50010 	ldrb	r0, [r5, #16]
40022e0c:	e3500005 	cmp	r0, #5
40022e10:	da000001 	ble	40022e1c <CyU3PGpioSetSimpleConfig+0x64>
40022e14:	e3a00040 	mov	r0, #64	; 0x40
40022e18:	eaffffef 	b	40022ddc <CyU3PGpioSetSimpleConfig+0x24>
40022e1c:	e1a00004 	mov	r0, r4
40022e20:	ebffc028 	bl	40012ec8 <CyU3PIsGpioSimpleIOConfigured>
40022e24:	e3500000 	cmp	r0, #0
40022e28:	1a000001 	bne	40022e34 <CyU3PGpioSetSimpleConfig+0x7c>
40022e2c:	e3a00044 	mov	r0, #68	; 0x44
40022e30:	eaffffe9 	b	40022ddc <CyU3PGpioSetSimpleConfig+0x24>
40022e34:	e595000c 	ldr	r0, [r5, #12]
40022e38:	e3500000 	cmp	r0, #0
40022e3c:	0a000000 	beq	40022e44 <CyU3PGpioSetSimpleConfig+0x8c>
40022e40:	e3866040 	orr	r6, r6, #64	; 0x40
40022e44:	e5950004 	ldr	r0, [r5, #4]
40022e48:	e3500000 	cmp	r0, #0
40022e4c:	0a000000 	beq	40022e54 <CyU3PGpioSetSimpleConfig+0x9c>
40022e50:	e3866010 	orr	r6, r6, #16
40022e54:	e5950008 	ldr	r0, [r5, #8]
40022e58:	e3500000 	cmp	r0, #0
40022e5c:	0a000000 	beq	40022e64 <CyU3PGpioSetSimpleConfig+0xac>
40022e60:	e3866020 	orr	r6, r6, #32
40022e64:	e5950000 	ldr	r0, [r5]
40022e68:	e3500000 	cmp	r0, #0
40022e6c:	0a000000 	beq	40022e74 <CyU3PGpioSetSimpleConfig+0xbc>
40022e70:	e3866001 	orr	r6, r6, #1
40022e74:	e5d50010 	ldrb	r0, [r5, #16]
40022e78:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022e7c:	e0010c00 	and	r0, r1, r0, lsl #24
40022e80:	e1866000 	orr	r6, r6, r0
40022e84:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022e88:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022e8c:	e59f0010 	ldr	r0, [pc, #16]	; 40022ea4 <CyU3PGpioSetSimpleConfig+0xec>
40022e90:	e7806104 	str	r6, [r0, r4, lsl #2]
40022e94:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022e98:	e3a00000 	mov	r0, #0
40022e9c:	eaffffce 	b	40022ddc <CyU3PGpioSetSimpleConfig+0x24>
40022ea0:	40030ef8 	.word	0x40030ef8
40022ea4:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022ea8 <CyU3PGpioSetValue>:
40022ea8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022eac:	e1a04000 	mov	r4, r0
40022eb0:	e1a05001 	mov	r5, r1
40022eb4:	e59f00b8 	ldr	r0, [pc, #184]	; 40022f74 <CyU3PGpioSetValue+0xcc>
40022eb8:	e5900000 	ldr	r0, [r0]
40022ebc:	e3500000 	cmp	r0, #0
40022ec0:	1a000001 	bne	40022ecc <CyU3PGpioSetValue+0x24>
40022ec4:	e3a00042 	mov	r0, #66	; 0x42
40022ec8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022ecc:	e1a00004 	mov	r0, r4
40022ed0:	ebffc002 	bl	40012ee0 <CyU3PIsGpioValid>
40022ed4:	e3500000 	cmp	r0, #0
40022ed8:	1a000001 	bne	40022ee4 <CyU3PGpioSetValue+0x3c>
40022edc:	e3a00040 	mov	r0, #64	; 0x40
40022ee0:	eafffff8 	b	40022ec8 <CyU3PGpioSetValue+0x20>
40022ee4:	e1a00004 	mov	r0, r4
40022ee8:	ebffbff6 	bl	40012ec8 <CyU3PIsGpioSimpleIOConfigured>
40022eec:	e3500000 	cmp	r0, #0
40022ef0:	0a000002 	beq	40022f00 <CyU3PGpioSetValue+0x58>
40022ef4:	e59f007c 	ldr	r0, [pc, #124]	; 40022f78 <CyU3PGpioSetValue+0xd0>
40022ef8:	e0807104 	add	r7, r0, r4, lsl #2
40022efc:	ea00000d 	b	40022f38 <CyU3PGpioSetValue+0x90>
40022f00:	e1a00004 	mov	r0, r4
40022f04:	ebffbfe9 	bl	40012eb0 <CyU3PIsGpioComplexIOConfigured>
40022f08:	e3500000 	cmp	r0, #0
40022f0c:	0a000007 	beq	40022f30 <CyU3PGpioSetValue+0x88>
40022f10:	e1a00004 	mov	r0, r4
40022f14:	e1a01fc4 	asr	r1, r4, #31
40022f18:	e0841ea1 	add	r1, r4, r1, lsr #29
40022f1c:	e1a011c1 	asr	r1, r1, #3
40022f20:	e0441181 	sub	r1, r4, r1, lsl #3
40022f24:	e59f2050 	ldr	r2, [pc, #80]	; 40022f7c <CyU3PGpioSetValue+0xd4>
40022f28:	e0827201 	add	r7, r2, r1, lsl #4
40022f2c:	ea000001 	b	40022f38 <CyU3PGpioSetValue+0x90>
40022f30:	e3a00044 	mov	r0, #68	; 0x44
40022f34:	eaffffe3 	b	40022ec8 <CyU3PGpioSetValue+0x20>
40022f38:	e5970000 	ldr	r0, [r7]
40022f3c:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022f40:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022f44:	1a000001 	bne	40022f50 <CyU3PGpioSetValue+0xa8>
40022f48:	e3a00044 	mov	r0, #68	; 0x44
40022f4c:	eaffffdd 	b	40022ec8 <CyU3PGpioSetValue+0x20>
40022f50:	e3550000 	cmp	r5, #0
40022f54:	0a000001 	beq	40022f60 <CyU3PGpioSetValue+0xb8>
40022f58:	e3866001 	orr	r6, r6, #1
40022f5c:	ea000000 	b	40022f64 <CyU3PGpioSetValue+0xbc>
40022f60:	e3c66001 	bic	r6, r6, #1
40022f64:	e5876000 	str	r6, [r7]
40022f68:	e5976000 	ldr	r6, [r7]
40022f6c:	e3a00000 	mov	r0, #0
40022f70:	eaffffd4 	b	40022ec8 <CyU3PGpioSetValue+0x20>
40022f74:	40030ef8 	.word	0x40030ef8
40022f78:	e0001100 	.word	0xe0001100
40022f7c:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022f80 <CyU3PGpioSimpleGetValue>:
40022f80:	e92d4070 	push	{r4, r5, r6, lr}
40022f84:	e1a04000 	mov	r4, r0
40022f88:	e1a06001 	mov	r6, r1
40022f8c:	e59f0068 	ldr	r0, [pc, #104]	; 40022ffc <CyU3PGpioSimpleGetValue+0x7c>
40022f90:	e5900000 	ldr	r0, [r0]
40022f94:	e3500000 	cmp	r0, #0
40022f98:	1a000001 	bne	40022fa4 <CyU3PGpioSimpleGetValue+0x24>
40022f9c:	e3a00042 	mov	r0, #66	; 0x42
40022fa0:	e8bd8070 	pop	{r4, r5, r6, pc}
40022fa4:	e1a00004 	mov	r0, r4
40022fa8:	ebffbfcc 	bl	40012ee0 <CyU3PIsGpioValid>
40022fac:	e3500000 	cmp	r0, #0
40022fb0:	1a000001 	bne	40022fbc <CyU3PGpioSimpleGetValue+0x3c>
40022fb4:	e3a00040 	mov	r0, #64	; 0x40
40022fb8:	eafffff8 	b	40022fa0 <CyU3PGpioSimpleGetValue+0x20>
40022fbc:	e3560000 	cmp	r6, #0
40022fc0:	1a000001 	bne	40022fcc <CyU3PGpioSimpleGetValue+0x4c>
40022fc4:	e3a00041 	mov	r0, #65	; 0x41
40022fc8:	eafffff4 	b	40022fa0 <CyU3PGpioSimpleGetValue+0x20>
40022fcc:	e59f002c 	ldr	r0, [pc, #44]	; 40023000 <CyU3PGpioSimpleGetValue+0x80>
40022fd0:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022fd4:	e3150040 	tst	r5, #64	; 0x40
40022fd8:	0a000003 	beq	40022fec <CyU3PGpioSimpleGetValue+0x6c>
40022fdc:	e2050002 	and	r0, r5, #2
40022fe0:	e1a000a0 	lsr	r0, r0, #1
40022fe4:	e5860000 	str	r0, [r6]
40022fe8:	ea000001 	b	40022ff4 <CyU3PGpioSimpleGetValue+0x74>
40022fec:	e2050001 	and	r0, r5, #1
40022ff0:	e5860000 	str	r0, [r6]
40022ff4:	e3a00000 	mov	r0, #0
40022ff8:	eaffffe8 	b	40022fa0 <CyU3PGpioSimpleGetValue+0x20>
40022ffc:	40030ef8 	.word	0x40030ef8
40023000:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40023004 <CyU3PRegisterGpioCallBack>:
40023004:	e59f1004 	ldr	r1, [pc, #4]	; 40023010 <CyU3PRegisterGpioCallBack+0xc>
40023008:	e5810000 	str	r0, [r1]
4002300c:	e12fff1e 	bx	lr
40023010:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PRegisterUartCallBack:

40023014 <CyU3PRegisterUartCallBack>:
40023014:	e59f1004 	ldr	r1, [pc, #4]	; 40023020 <CyU3PRegisterUartCallBack+0xc>
40023018:	e5810000 	str	r0, [r1]
4002301c:	e12fff1e 	bx	lr
40023020:	40030f0c 	.word	0x40030f0c

Disassembly of section i.CyU3PUartGetLock:

40023024 <CyU3PUartGetLock>:
40023024:	e92d4010 	push	{r4, lr}
40023028:	e3a04000 	mov	r4, #0
4002302c:	e59f0044 	ldr	r0, [pc, #68]	; 40023078 <CyU3PUartGetLock+0x54>
40023030:	e5900000 	ldr	r0, [r0]
40023034:	e3500000 	cmp	r0, #0
40023038:	1a000001 	bne	40023044 <CyU3PUartGetLock+0x20>
4002303c:	e3a00044 	mov	r0, #68	; 0x44
40023040:	e8bd8010 	pop	{r4, pc}
40023044:	ebff969b 	bl	40008ab8 <_tx_thread_identify>
40023048:	e3500000 	cmp	r0, #0
4002304c:	0a000000 	beq	40023054 <CyU3PUartGetLock+0x30>
40023050:	e3e04000 	mvn	r4, #0
40023054:	e1a01004 	mov	r1, r4
40023058:	e59f001c 	ldr	r0, [pc, #28]	; 4002307c <CyU3PUartGetLock+0x58>
4002305c:	ebff9caa 	bl	4000a30c <_txe_mutex_get>
40023060:	e3500000 	cmp	r0, #0
40023064:	0a000001 	beq	40023070 <CyU3PUartGetLock+0x4c>
40023068:	e3a0001d 	mov	r0, #29
4002306c:	eafffff3 	b	40023040 <CyU3PUartGetLock+0x1c>
40023070:	e3a00000 	mov	r0, #0
40023074:	eafffff1 	b	40023040 <CyU3PUartGetLock+0x1c>
40023078:	40030f08 	.word	0x40030f08
4002307c:	40032e3c 	.word	0x40032e3c

Disassembly of section i.CyU3PUartInit:

40023080 <CyU3PUartInit>:
40023080:	e92d4010 	push	{r4, lr}
40023084:	e3a00003 	mov	r0, #3
40023088:	ebffbf9b 	bl	40012efc <CyU3PIsLppIOConfigured>
4002308c:	e3500000 	cmp	r0, #0
40023090:	1a000001 	bne	4002309c <CyU3PUartInit+0x1c>
40023094:	e3a00044 	mov	r0, #68	; 0x44
40023098:	e8bd8010 	pop	{r4, pc}
4002309c:	e59f00b8 	ldr	r0, [pc, #184]	; 4002315c <CyU3PUartInit+0xdc>
400230a0:	e5900000 	ldr	r0, [r0]
400230a4:	e3500000 	cmp	r0, #0
400230a8:	0a000001 	beq	400230b4 <CyU3PUartInit+0x34>
400230ac:	e3a00043 	mov	r0, #67	; 0x43
400230b0:	eafffff8 	b	40023098 <CyU3PUartInit+0x18>
400230b4:	e3a03038 	mov	r3, #56	; 0x38
400230b8:	e3a02000 	mov	r2, #0
400230bc:	e1a01002 	mov	r1, r2
400230c0:	e59f0098 	ldr	r0, [pc, #152]	; 40023160 <CyU3PUartInit+0xe0>
400230c4:	ebff9c12 	bl	4000a114 <_txe_mutex_create>
400230c8:	e3a00d96 	mov	r0, #9600	; 0x2580
400230cc:	ebffc505 	bl	400144e8 <CyU3PUartSetClock>
400230d0:	e1a04000 	mov	r4, r0
400230d4:	e3540000 	cmp	r4, #0
400230d8:	0a000001 	beq	400230e4 <CyU3PUartInit+0x64>
400230dc:	e1a00004 	mov	r0, r4
400230e0:	eaffffec 	b	40023098 <CyU3PUartInit+0x18>
400230e4:	e59f1078 	ldr	r1, [pc, #120]	; 40023164 <CyU3PUartInit+0xe4>
400230e8:	e3a00003 	mov	r0, #3
400230ec:	ebffc3df 	bl	40014070 <CyU3PLppInit>
400230f0:	e1a04000 	mov	r4, r0
400230f4:	e3540000 	cmp	r4, #0
400230f8:	0a000001 	beq	40023104 <CyU3PUartInit+0x84>
400230fc:	e1a00004 	mov	r0, r4
40023100:	eaffffe4 	b	40023098 <CyU3PUartInit+0x18>
40023104:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023108:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
4002310c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023110:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023114:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023118:	e3a0000a 	mov	r0, #10
4002311c:	ebffc1d7 	bl	40013880 <CyU3PBusyWait>
40023120:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023124:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023128:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002312c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023130:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023134:	e1a00000 	nop			; (mov r0, r0)
40023138:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002313c:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023140:	e3100001 	tst	r0, #1
40023144:	0afffffb 	beq	40023138 <CyU3PUartInit+0xb8>
40023148:	e3a00001 	mov	r0, #1
4002314c:	e59f1008 	ldr	r1, [pc, #8]	; 4002315c <CyU3PUartInit+0xdc>
40023150:	e5810000 	str	r0, [r1]
40023154:	e3a00000 	mov	r0, #0
40023158:	eaffffce 	b	40023098 <CyU3PUartInit+0x18>
4002315c:	40030f08 	.word	0x40030f08
40023160:	40032e3c 	.word	0x40032e3c
40023164:	40023168 	.word	0x40023168

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40023168 <CyU3PUartInt_ThreadHandler>:
40023168:	e92d4070 	push	{r4, r5, r6, lr}
4002316c:	ebffffac 	bl	40023024 <CyU3PUartGetLock>
40023170:	e1a05000 	mov	r5, r0
40023174:	e3550000 	cmp	r5, #0
40023178:	0a000000 	beq	40023180 <CyU3PUartInt_ThreadHandler+0x18>
4002317c:	e8bd8070 	pop	{r4, r5, r6, pc}
40023180:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023184:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40023188:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002318c:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40023190:	e0004001 	and	r4, r0, r1
40023194:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023198:	e5804808 	str	r4, [r0, #2056]	; 0x808
4002319c:	e59f0078 	ldr	r0, [pc, #120]	; 4002321c <CyU3PUartInt_ThreadHandler+0xb4>
400231a0:	e5900000 	ldr	r0, [r0]
400231a4:	e3500000 	cmp	r0, #0
400231a8:	1a000001 	bne	400231b4 <CyU3PUartInt_ThreadHandler+0x4c>
400231ac:	eb00001b 	bl	40023220 <CyU3PUartReleaseLock>
400231b0:	eafffff1 	b	4002317c <CyU3PUartInt_ThreadHandler+0x14>
400231b4:	e3140001 	tst	r4, #1
400231b8:	0a000004 	beq	400231d0 <CyU3PUartInt_ThreadHandler+0x68>
400231bc:	e3a01000 	mov	r1, #0
400231c0:	e1a00001 	mov	r0, r1
400231c4:	e59f2050 	ldr	r2, [pc, #80]	; 4002321c <CyU3PUartInt_ThreadHandler+0xb4>
400231c8:	e5922000 	ldr	r2, [r2]
400231cc:	e12fff32 	blx	r2
400231d0:	e3140008 	tst	r4, #8
400231d4:	0a000004 	beq	400231ec <CyU3PUartInt_ThreadHandler+0x84>
400231d8:	e3a01000 	mov	r1, #0
400231dc:	e3a00001 	mov	r0, #1
400231e0:	e59f2034 	ldr	r2, [pc, #52]	; 4002321c <CyU3PUartInt_ThreadHandler+0xb4>
400231e4:	e5922000 	ldr	r2, [r2]
400231e8:	e12fff32 	blx	r2
400231ec:	e3140c02 	tst	r4, #512	; 0x200
400231f0:	0a000007 	beq	40023214 <CyU3PUartInt_ThreadHandler+0xac>
400231f4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231f8:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
400231fc:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023200:	e1a01c20 	lsr	r1, r0, #24
40023204:	e3a00002 	mov	r0, #2
40023208:	e59f200c 	ldr	r2, [pc, #12]	; 4002321c <CyU3PUartInt_ThreadHandler+0xb4>
4002320c:	e5922000 	ldr	r2, [r2]
40023210:	e12fff32 	blx	r2
40023214:	eb000001 	bl	40023220 <CyU3PUartReleaseLock>
40023218:	eaffffd7 	b	4002317c <CyU3PUartInt_ThreadHandler+0x14>
4002321c:	40030f0c 	.word	0x40030f0c

Disassembly of section i.CyU3PUartReleaseLock:

40023220 <CyU3PUartReleaseLock>:
40023220:	e92d4010 	push	{r4, lr}
40023224:	e59f0030 	ldr	r0, [pc, #48]	; 4002325c <CyU3PUartReleaseLock+0x3c>
40023228:	e5900000 	ldr	r0, [r0]
4002322c:	e3500000 	cmp	r0, #0
40023230:	1a000001 	bne	4002323c <CyU3PUartReleaseLock+0x1c>
40023234:	e3a00044 	mov	r0, #68	; 0x44
40023238:	e8bd8010 	pop	{r4, pc}
4002323c:	e59f001c 	ldr	r0, [pc, #28]	; 40023260 <CyU3PUartReleaseLock+0x40>
40023240:	ebff9c66 	bl	4000a3e0 <_txe_mutex_put>
40023244:	e3500000 	cmp	r0, #0
40023248:	0a000001 	beq	40023254 <CyU3PUartReleaseLock+0x34>
4002324c:	e3a0001d 	mov	r0, #29
40023250:	eafffff8 	b	40023238 <CyU3PUartReleaseLock+0x18>
40023254:	e3a00000 	mov	r0, #0
40023258:	eafffff6 	b	40023238 <CyU3PUartReleaseLock+0x18>
4002325c:	40030f08 	.word	0x40030f08
40023260:	40032e3c 	.word	0x40032e3c

Disassembly of section i.CyU3PUartSetConfig:

40023264 <CyU3PUartSetConfig>:
40023264:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023268:	e1a04000 	mov	r4, r0
4002326c:	e1a05001 	mov	r5, r1
40023270:	e3a07000 	mov	r7, #0
40023274:	e59f01f0 	ldr	r0, [pc, #496]	; 4002346c <CyU3PUartSetConfig+0x208>
40023278:	e5900000 	ldr	r0, [r0]
4002327c:	e3500000 	cmp	r0, #0
40023280:	1a000001 	bne	4002328c <CyU3PUartSetConfig+0x28>
40023284:	e3a00042 	mov	r0, #66	; 0x42
40023288:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002328c:	e3540000 	cmp	r4, #0
40023290:	1a000001 	bne	4002329c <CyU3PUartSetConfig+0x38>
40023294:	e3a00041 	mov	r0, #65	; 0x41
40023298:	eafffffa 	b	40023288 <CyU3PUartSetConfig+0x24>
4002329c:	e5940004 	ldr	r0, [r4, #4]
400232a0:	e5941000 	ldr	r1, [r4]
400232a4:	e1900001 	orrs	r0, r0, r1
400232a8:	1a000001 	bne	400232b4 <CyU3PUartSetConfig+0x50>
400232ac:	e3a00040 	mov	r0, #64	; 0x40
400232b0:	eafffff4 	b	40023288 <CyU3PUartSetConfig+0x24>
400232b4:	e5d40015 	ldrb	r0, [r4, #21]
400232b8:	e3500003 	cmp	r0, #3
400232bc:	ba000001 	blt	400232c8 <CyU3PUartSetConfig+0x64>
400232c0:	e3a00040 	mov	r0, #64	; 0x40
400232c4:	eaffffef 	b	40023288 <CyU3PUartSetConfig+0x24>
400232c8:	e5d40014 	ldrb	r0, [r4, #20]
400232cc:	e3500001 	cmp	r0, #1
400232d0:	0a000004 	beq	400232e8 <CyU3PUartSetConfig+0x84>
400232d4:	e5d40014 	ldrb	r0, [r4, #20]
400232d8:	e3500002 	cmp	r0, #2
400232dc:	0a000001 	beq	400232e8 <CyU3PUartSetConfig+0x84>
400232e0:	e3a00040 	mov	r0, #64	; 0x40
400232e4:	eaffffe7 	b	40023288 <CyU3PUartSetConfig+0x24>
400232e8:	e594000c 	ldr	r0, [r4, #12]
400232ec:	e3500000 	cmp	r0, #0
400232f0:	1a000003 	bne	40023304 <CyU3PUartSetConfig+0xa0>
400232f4:	e3550000 	cmp	r5, #0
400232f8:	0a000001 	beq	40023304 <CyU3PUartSetConfig+0xa0>
400232fc:	e3a00040 	mov	r0, #64	; 0x40
40023300:	eaffffe0 	b	40023288 <CyU3PUartSetConfig+0x24>
40023304:	ebffff46 	bl	40023024 <CyU3PUartGetLock>
40023308:	e1a06000 	mov	r6, r0
4002330c:	e3560000 	cmp	r6, #0
40023310:	0a000001 	beq	4002331c <CyU3PUartSetConfig+0xb8>
40023314:	e3a0001d 	mov	r0, #29
40023318:	eaffffda 	b	40023288 <CyU3PUartSetConfig+0x24>
4002331c:	e5940010 	ldr	r0, [r4, #16]
40023320:	ebffc470 	bl	400144e8 <CyU3PUartSetClock>
40023324:	e1a06000 	mov	r6, r0
40023328:	e3560000 	cmp	r6, #0
4002332c:	0a000002 	beq	4002333c <CyU3PUartSetConfig+0xd8>
40023330:	ebffffba 	bl	40023220 <CyU3PUartReleaseLock>
40023334:	e1a00006 	mov	r0, r6
40023338:	eaffffd2 	b	40023288 <CyU3PUartSetConfig+0x24>
4002333c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023340:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023344:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023348:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002334c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023350:	e5940004 	ldr	r0, [r4, #4]
40023354:	e3500000 	cmp	r0, #0
40023358:	0a000001 	beq	40023364 <CyU3PUartSetConfig+0x100>
4002335c:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40023360:	e3877001 	orr	r7, r7, #1
40023364:	e5940000 	ldr	r0, [r4]
40023368:	e3500000 	cmp	r0, #0
4002336c:	0a000000 	beq	40023374 <CyU3PUartSetConfig+0x110>
40023370:	e3877002 	orr	r7, r7, #2
40023374:	e5940008 	ldr	r0, [r4, #8]
40023378:	e3500000 	cmp	r0, #0
4002337c:	0a000000 	beq	40023384 <CyU3PUartSetConfig+0x120>
40023380:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40023384:	e594000c 	ldr	r0, [r4, #12]
40023388:	e3500000 	cmp	r0, #0
4002338c:	0a000004 	beq	400233a4 <CyU3PUartSetConfig+0x140>
40023390:	e3877b01 	orr	r7, r7, #1024	; 0x400
40023394:	e3a00001 	mov	r0, #1
40023398:	e59f10d0 	ldr	r1, [pc, #208]	; 40023470 <CyU3PUartSetConfig+0x20c>
4002339c:	e5810000 	str	r0, [r1]
400233a0:	ea000002 	b	400233b0 <CyU3PUartSetConfig+0x14c>
400233a4:	e3a00000 	mov	r0, #0
400233a8:	e59f10c0 	ldr	r1, [pc, #192]	; 40023470 <CyU3PUartSetConfig+0x20c>
400233ac:	e5810000 	str	r0, [r1]
400233b0:	e5d40014 	ldrb	r0, [r4, #20]
400233b4:	e3a01c03 	mov	r1, #768	; 0x300
400233b8:	e0010400 	and	r0, r1, r0, lsl #8
400233bc:	e1877000 	orr	r7, r7, r0
400233c0:	e5d40015 	ldrb	r0, [r4, #21]
400233c4:	e3500001 	cmp	r0, #1
400233c8:	0a000002 	beq	400233d8 <CyU3PUartSetConfig+0x174>
400233cc:	e3500002 	cmp	r0, #2
400233d0:	1a000006 	bne	400233f0 <CyU3PUartSetConfig+0x18c>
400233d4:	ea000002 	b	400233e4 <CyU3PUartSetConfig+0x180>
400233d8:	e1a00000 	nop			; (mov r0, r0)
400233dc:	e3877008 	orr	r7, r7, #8
400233e0:	ea000004 	b	400233f8 <CyU3PUartSetConfig+0x194>
400233e4:	e1a00000 	nop			; (mov r0, r0)
400233e8:	e3877018 	orr	r7, r7, #24
400233ec:	ea000001 	b	400233f8 <CyU3PUartSetConfig+0x194>
400233f0:	e1a00000 	nop			; (mov r0, r0)
400233f4:	e1a00000 	nop			; (mov r0, r0)
400233f8:	e1a00000 	nop			; (mov r0, r0)
400233fc:	e3877807 	orr	r7, r7, #458752	; 0x70000
40023400:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023404:	e5807800 	str	r7, [r0, #2048]	; 0x800
40023408:	e59f0064 	ldr	r0, [pc, #100]	; 40023474 <CyU3PUartSetConfig+0x210>
4002340c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023410:	e5810818 	str	r0, [r1, #2072]	; 0x818
40023414:	e1a00005 	mov	r0, r5
40023418:	ebfffefd 	bl	40023014 <CyU3PRegisterUartCallBack>
4002341c:	e3550000 	cmp	r5, #0
40023420:	0a000003 	beq	40023434 <CyU3PUartSetConfig+0x1d0>
40023424:	e59f004c 	ldr	r0, [pc, #76]	; 40023478 <CyU3PUartSetConfig+0x214>
40023428:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002342c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023430:	ea000002 	b	40023440 <CyU3PUartSetConfig+0x1dc>
40023434:	e3a00000 	mov	r0, #0
40023438:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002343c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023440:	e3a00001 	mov	r0, #1
40023444:	e59f1030 	ldr	r1, [pc, #48]	; 4002347c <CyU3PUartSetConfig+0x218>
40023448:	e5810000 	str	r0, [r1]
4002344c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023450:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023454:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023458:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002345c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023460:	ebffff6e 	bl	40023220 <CyU3PUartReleaseLock>
40023464:	e3a00000 	mov	r0, #0
40023468:	eaffff86 	b	40023288 <CyU3PUartSetConfig+0x24>
4002346c:	40030f08 	.word	0x40030f08
40023470:	40030f00 	.word	0x40030f00
40023474:	00000603 	.word	0x00000603
40023478:	00000309 	.word	0x00000309
4002347c:	40030f04 	.word	0x40030f04

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023480 <CyU3PUartTxSetBlockXfer>:
40023480:	e92d4070 	push	{r4, r5, r6, lr}
40023484:	e1a05000 	mov	r5, r0
40023488:	e59f003c 	ldr	r0, [pc, #60]	; 400234cc <CyU3PUartTxSetBlockXfer+0x4c>
4002348c:	e5900000 	ldr	r0, [r0]
40023490:	e3500000 	cmp	r0, #0
40023494:	1a000001 	bne	400234a0 <CyU3PUartTxSetBlockXfer+0x20>
40023498:	e3a00044 	mov	r0, #68	; 0x44
4002349c:	e8bd8070 	pop	{r4, r5, r6, pc}
400234a0:	ebfffedf 	bl	40023024 <CyU3PUartGetLock>
400234a4:	e1a04000 	mov	r4, r0
400234a8:	e3540000 	cmp	r4, #0
400234ac:	0a000001 	beq	400234b8 <CyU3PUartTxSetBlockXfer+0x38>
400234b0:	e1a00004 	mov	r0, r4
400234b4:	eafffff8 	b	4002349c <CyU3PUartTxSetBlockXfer+0x1c>
400234b8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234bc:	e5805820 	str	r5, [r0, #2080]	; 0x820
400234c0:	ebffff56 	bl	40023220 <CyU3PUartReleaseLock>
400234c4:	e3a00000 	mov	r0, #0
400234c8:	eafffff3 	b	4002349c <CyU3PUartTxSetBlockXfer+0x1c>
400234cc:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cErrorRecovery:

400234d0 <CyU3PI2cErrorRecovery>:
400234d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400234d4:	e1a04000 	mov	r4, r0
400234d8:	e3a07000 	mov	r7, #0
400234dc:	e3a08000 	mov	r8, #0
400234e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234e4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400234e8:	e59f1164 	ldr	r1, [pc, #356]	; 40023654 <CyU3PI2cErrorRecovery+0x184>
400234ec:	e5810000 	str	r0, [r1]
400234f0:	e59f5160 	ldr	r5, [pc, #352]	; 40023658 <CyU3PI2cErrorRecovery+0x188>
400234f4:	e1a00000 	nop			; (mov r0, r0)
400234f8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234fc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023500:	e3100201 	tst	r0, #268435456	; 0x10000000
40023504:	0a000002 	beq	40023514 <CyU3PI2cErrorRecovery+0x44>
40023508:	e1b00005 	movs	r0, r5
4002350c:	e2455001 	sub	r5, r5, #1
40023510:	1afffff8 	bne	400234f8 <CyU3PI2cErrorRecovery+0x28>
40023514:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023518:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
4002351c:	e3a00000 	mov	r0, #0
40023520:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023524:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023528:	e3e00000 	mvn	r0, #0
4002352c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023530:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023534:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023538:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4002353c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023540:	e3a00005 	mov	r0, #5
40023544:	ebffc0cd 	bl	40013880 <CyU3PBusyWait>
40023548:	e3540000 	cmp	r4, #0
4002354c:	0a000032 	beq	4002361c <CyU3PI2cErrorRecovery+0x14c>
40023550:	e3a00000 	mov	r0, #0
40023554:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023558:	e5810438 	str	r0, [r1, #1080]	; 0x438
4002355c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023560:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023564:	e3100008 	tst	r0, #8
40023568:	1a000000 	bne	40023570 <CyU3PI2cErrorRecovery+0xa0>
4002356c:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023570:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023574:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023578:	e3100002 	tst	r0, #2
4002357c:	0a000000 	beq	40023584 <CyU3PI2cErrorRecovery+0xb4>
40023580:	e3a07202 	mov	r7, #536870912	; 0x20000000
40023584:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023588:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002358c:	e1800007 	orr	r0, r0, r7
40023590:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023594:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023598:	e1e05741 	mvn	r5, r1, asr #14
4002359c:	ea000004 	b	400235b4 <CyU3PI2cErrorRecovery+0xe4>
400235a0:	e1b00005 	movs	r0, r5
400235a4:	e2455001 	sub	r5, r5, #1
400235a8:	1a000001 	bne	400235b4 <CyU3PI2cErrorRecovery+0xe4>
400235ac:	e3a08054 	mov	r8, #84	; 0x54
400235b0:	ea000003 	b	400235c4 <CyU3PI2cErrorRecovery+0xf4>
400235b4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235b8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235bc:	e3100008 	tst	r0, #8
400235c0:	0afffff6 	beq	400235a0 <CyU3PI2cErrorRecovery+0xd0>
400235c4:	e1a00000 	nop			; (mov r0, r0)
400235c8:	e3580000 	cmp	r8, #0
400235cc:	1a00000b 	bne	40023600 <CyU3PI2cErrorRecovery+0x130>
400235d0:	e59f5080 	ldr	r5, [pc, #128]	; 40023658 <CyU3PI2cErrorRecovery+0x188>
400235d4:	ea000004 	b	400235ec <CyU3PI2cErrorRecovery+0x11c>
400235d8:	e1b00005 	movs	r0, r5
400235dc:	e2455001 	sub	r5, r5, #1
400235e0:	1a000001 	bne	400235ec <CyU3PI2cErrorRecovery+0x11c>
400235e4:	e3a08054 	mov	r8, #84	; 0x54
400235e8:	ea000003 	b	400235fc <CyU3PI2cErrorRecovery+0x12c>
400235ec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235f0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235f4:	e3100002 	tst	r0, #2
400235f8:	1afffff6 	bne	400235d8 <CyU3PI2cErrorRecovery+0x108>
400235fc:	e1a00000 	nop			; (mov r0, r0)
40023600:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023604:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023608:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
4002360c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023610:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023614:	e3a00001 	mov	r0, #1
40023618:	ebffc098 	bl	40013880 <CyU3PBusyWait>
4002361c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023620:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023624:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023628:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002362c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023630:	e3a00005 	mov	r0, #5
40023634:	ebffc091 	bl	40013880 <CyU3PBusyWait>
40023638:	e3e00000 	mvn	r0, #0
4002363c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023640:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023644:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023648:	e580640c 	str	r6, [r0, #1036]	; 0x40c
4002364c:	e1a00008 	mov	r0, r8
40023650:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023654:	40030f20 	.word	0x40030f20
40023658:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

4002365c <CyU3PI2cGetLock>:
4002365c:	e92d4010 	push	{r4, lr}
40023660:	e3a04000 	mov	r4, #0
40023664:	e59f0044 	ldr	r0, [pc, #68]	; 400236b0 <CyU3PI2cGetLock+0x54>
40023668:	e5900000 	ldr	r0, [r0]
4002366c:	e3500000 	cmp	r0, #0
40023670:	1a000001 	bne	4002367c <CyU3PI2cGetLock+0x20>
40023674:	e3a00044 	mov	r0, #68	; 0x44
40023678:	e8bd8010 	pop	{r4, pc}
4002367c:	ebff950d 	bl	40008ab8 <_tx_thread_identify>
40023680:	e3500000 	cmp	r0, #0
40023684:	0a000000 	beq	4002368c <CyU3PI2cGetLock+0x30>
40023688:	e3e04000 	mvn	r4, #0
4002368c:	e1a01004 	mov	r1, r4
40023690:	e59f001c 	ldr	r0, [pc, #28]	; 400236b4 <CyU3PI2cGetLock+0x58>
40023694:	ebff9b1c 	bl	4000a30c <_txe_mutex_get>
40023698:	e3500000 	cmp	r0, #0
4002369c:	0a000001 	beq	400236a8 <CyU3PI2cGetLock+0x4c>
400236a0:	e3a0001d 	mov	r0, #29
400236a4:	eafffff3 	b	40023678 <CyU3PI2cGetLock+0x1c>
400236a8:	e3a00000 	mov	r0, #0
400236ac:	eafffff1 	b	40023678 <CyU3PI2cGetLock+0x1c>
400236b0:	40030f18 	.word	0x40030f18
400236b4:	40032e74 	.word	0x40032e74

Disassembly of section i.CyU3PI2cInit:

400236b8 <CyU3PI2cInit>:
400236b8:	e92d4010 	push	{r4, lr}
400236bc:	e3a00000 	mov	r0, #0
400236c0:	ebffbe0d 	bl	40012efc <CyU3PIsLppIOConfigured>
400236c4:	e3500000 	cmp	r0, #0
400236c8:	1a000001 	bne	400236d4 <CyU3PI2cInit+0x1c>
400236cc:	e3a00044 	mov	r0, #68	; 0x44
400236d0:	e8bd8010 	pop	{r4, pc}
400236d4:	e59f00bc 	ldr	r0, [pc, #188]	; 40023798 <CyU3PI2cInit+0xe0>
400236d8:	e5900000 	ldr	r0, [r0]
400236dc:	e3500000 	cmp	r0, #0
400236e0:	0a000001 	beq	400236ec <CyU3PI2cInit+0x34>
400236e4:	e3a00043 	mov	r0, #67	; 0x43
400236e8:	eafffff8 	b	400236d0 <CyU3PI2cInit+0x18>
400236ec:	e59f00a8 	ldr	r0, [pc, #168]	; 4002379c <CyU3PI2cInit+0xe4>
400236f0:	ebffc1f7 	bl	40013ed4 <CyU3PI2cSetClock>
400236f4:	e1a04000 	mov	r4, r0
400236f8:	e3540000 	cmp	r4, #0
400236fc:	0a000001 	beq	40023708 <CyU3PI2cInit+0x50>
40023700:	e1a00004 	mov	r0, r4
40023704:	eafffff1 	b	400236d0 <CyU3PI2cInit+0x18>
40023708:	e59f1090 	ldr	r1, [pc, #144]	; 400237a0 <CyU3PI2cInit+0xe8>
4002370c:	e3a00000 	mov	r0, #0
40023710:	ebffc256 	bl	40014070 <CyU3PLppInit>
40023714:	e1a04000 	mov	r4, r0
40023718:	e3540000 	cmp	r4, #0
4002371c:	0a000001 	beq	40023728 <CyU3PI2cInit+0x70>
40023720:	e1a00004 	mov	r0, r4
40023724:	eaffffe9 	b	400236d0 <CyU3PI2cInit+0x18>
40023728:	e3a03038 	mov	r3, #56	; 0x38
4002372c:	e3a02000 	mov	r2, #0
40023730:	e1a01002 	mov	r1, r2
40023734:	e59f0068 	ldr	r0, [pc, #104]	; 400237a4 <CyU3PI2cInit+0xec>
40023738:	ebff9a75 	bl	4000a114 <_txe_mutex_create>
4002373c:	e3a00000 	mov	r0, #0
40023740:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023744:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023748:	e3a0000a 	mov	r0, #10
4002374c:	ebffc04b 	bl	40013880 <CyU3PBusyWait>
40023750:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023754:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023758:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002375c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023760:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023764:	e1a00000 	nop			; (mov r0, r0)
40023768:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002376c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023770:	e3100001 	tst	r0, #1
40023774:	0afffffb 	beq	40023768 <CyU3PI2cInit+0xb0>
40023778:	e3a00000 	mov	r0, #0
4002377c:	e59f1024 	ldr	r1, [pc, #36]	; 400237a8 <CyU3PI2cInit+0xf0>
40023780:	e5810000 	str	r0, [r1]
40023784:	e3a00001 	mov	r0, #1
40023788:	e2411008 	sub	r1, r1, #8
4002378c:	e5810000 	str	r0, [r1]
40023790:	e3a00000 	mov	r0, #0
40023794:	eaffffcd 	b	400236d0 <CyU3PI2cInit+0x18>
40023798:	40030f18 	.word	0x40030f18
4002379c:	000186a0 	.word	0x000186a0
400237a0:	400237ac 	.word	0x400237ac
400237a4:	40032e74 	.word	0x40032e74
400237a8:	40030f20 	.word	0x40030f20

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

400237ac <CyU3PI2cInt_ThreadHandler>:
400237ac:	e92d4070 	push	{r4, r5, r6, lr}
400237b0:	ebffffa9 	bl	4002365c <CyU3PI2cGetLock>
400237b4:	e1a05000 	mov	r5, r0
400237b8:	e3550000 	cmp	r5, #0
400237bc:	0a000000 	beq	400237c4 <CyU3PI2cInt_ThreadHandler+0x18>
400237c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400237c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237c8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400237cc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237d0:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
400237d4:	e0004001 	and	r4, r0, r1
400237d8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237dc:	e5804408 	str	r4, [r0, #1032]	; 0x408
400237e0:	e59f00b0 	ldr	r0, [pc, #176]	; 40023898 <CyU3PI2cInt_ThreadHandler+0xec>
400237e4:	e5900000 	ldr	r0, [r0]
400237e8:	e3500000 	cmp	r0, #0
400237ec:	1a000001 	bne	400237f8 <CyU3PI2cInt_ThreadHandler+0x4c>
400237f0:	eb000098 	bl	40023a58 <CyU3PI2cReleaseLock>
400237f4:	eafffff1 	b	400237c0 <CyU3PI2cInt_ThreadHandler+0x14>
400237f8:	e3140001 	tst	r4, #1
400237fc:	0a000004 	beq	40023814 <CyU3PI2cInt_ThreadHandler+0x68>
40023800:	e3a01000 	mov	r1, #0
40023804:	e1a00001 	mov	r0, r1
40023808:	e59f2088 	ldr	r2, [pc, #136]	; 40023898 <CyU3PI2cInt_ThreadHandler+0xec>
4002380c:	e5922000 	ldr	r2, [r2]
40023810:	e12fff32 	blx	r2
40023814:	e3140008 	tst	r4, #8
40023818:	0a000004 	beq	40023830 <CyU3PI2cInt_ThreadHandler+0x84>
4002381c:	e3a01000 	mov	r1, #0
40023820:	e3a00001 	mov	r0, #1
40023824:	e59f206c 	ldr	r2, [pc, #108]	; 40023898 <CyU3PI2cInt_ThreadHandler+0xec>
40023828:	e5922000 	ldr	r2, [r2]
4002382c:	e12fff32 	blx	r2
40023830:	e3140040 	tst	r4, #64	; 0x40
40023834:	0a000004 	beq	4002384c <CyU3PI2cInt_ThreadHandler+0xa0>
40023838:	e3a01000 	mov	r1, #0
4002383c:	e3a00002 	mov	r0, #2
40023840:	e59f2050 	ldr	r2, [pc, #80]	; 40023898 <CyU3PI2cInt_ThreadHandler+0xec>
40023844:	e5922000 	ldr	r2, [r2]
40023848:	e12fff32 	blx	r2
4002384c:	e3140080 	tst	r4, #128	; 0x80
40023850:	0a000004 	beq	40023868 <CyU3PI2cInt_ThreadHandler+0xbc>
40023854:	e3a01000 	mov	r1, #0
40023858:	e3a00003 	mov	r0, #3
4002385c:	e59f2034 	ldr	r2, [pc, #52]	; 40023898 <CyU3PI2cInt_ThreadHandler+0xec>
40023860:	e5922000 	ldr	r2, [r2]
40023864:	e12fff32 	blx	r2
40023868:	e3140c01 	tst	r4, #256	; 0x100
4002386c:	0a000007 	beq	40023890 <CyU3PI2cInt_ThreadHandler+0xe4>
40023870:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023874:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023878:	e200040f 	and	r0, r0, #251658240	; 0xf000000
4002387c:	e1a01c20 	lsr	r1, r0, #24
40023880:	e3a00004 	mov	r0, #4
40023884:	e59f200c 	ldr	r2, [pc, #12]	; 40023898 <CyU3PI2cInt_ThreadHandler+0xec>
40023888:	e5922000 	ldr	r2, [r2]
4002388c:	e12fff32 	blx	r2
40023890:	eb000070 	bl	40023a58 <CyU3PI2cReleaseLock>
40023894:	eaffffc9 	b	400237c0 <CyU3PI2cInt_ThreadHandler+0x14>
40023898:	40030f1c 	.word	0x40030f1c

Disassembly of section i.CyU3PI2cReceiveBytes:

4002389c <CyU3PI2cReceiveBytes>:
4002389c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400238a0:	e1a04000 	mov	r4, r0
400238a4:	e1a05001 	mov	r5, r1
400238a8:	e1a06002 	mov	r6, r2
400238ac:	e1a07003 	mov	r7, r3
400238b0:	e59f0194 	ldr	r0, [pc, #404]	; 40023a4c <CyU3PI2cReceiveBytes+0x1b0>
400238b4:	e5900000 	ldr	r0, [r0]
400238b8:	e3500000 	cmp	r0, #0
400238bc:	1a000001 	bne	400238c8 <CyU3PI2cReceiveBytes+0x2c>
400238c0:	e3a00044 	mov	r0, #68	; 0x44
400238c4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400238c8:	e59f0180 	ldr	r0, [pc, #384]	; 40023a50 <CyU3PI2cReceiveBytes+0x1b4>
400238cc:	e5900000 	ldr	r0, [r0]
400238d0:	e3500000 	cmp	r0, #0
400238d4:	0a000001 	beq	400238e0 <CyU3PI2cReceiveBytes+0x44>
400238d8:	e3a00044 	mov	r0, #68	; 0x44
400238dc:	eafffff8 	b	400238c4 <CyU3PI2cReceiveBytes+0x28>
400238e0:	e3550000 	cmp	r5, #0
400238e4:	0a000001 	beq	400238f0 <CyU3PI2cReceiveBytes+0x54>
400238e8:	e3540000 	cmp	r4, #0
400238ec:	1a000001 	bne	400238f8 <CyU3PI2cReceiveBytes+0x5c>
400238f0:	e3a00041 	mov	r0, #65	; 0x41
400238f4:	eafffff2 	b	400238c4 <CyU3PI2cReceiveBytes+0x28>
400238f8:	e5d40008 	ldrb	r0, [r4, #8]
400238fc:	e3500000 	cmp	r0, #0
40023900:	0a000002 	beq	40023910 <CyU3PI2cReceiveBytes+0x74>
40023904:	e5d40008 	ldrb	r0, [r4, #8]
40023908:	e3500008 	cmp	r0, #8
4002390c:	da000001 	ble	40023918 <CyU3PI2cReceiveBytes+0x7c>
40023910:	e3a00040 	mov	r0, #64	; 0x40
40023914:	eaffffea 	b	400238c4 <CyU3PI2cReceiveBytes+0x28>
40023918:	e3560000 	cmp	r6, #0
4002391c:	1a000001 	bne	40023928 <CyU3PI2cReceiveBytes+0x8c>
40023920:	e3a00000 	mov	r0, #0
40023924:	eaffffe6 	b	400238c4 <CyU3PI2cReceiveBytes+0x28>
40023928:	ebffff4b 	bl	4002365c <CyU3PI2cGetLock>
4002392c:	e1a08000 	mov	r8, r0
40023930:	e3580000 	cmp	r8, #0
40023934:	0a000001 	beq	40023940 <CyU3PI2cReceiveBytes+0xa4>
40023938:	e1a00008 	mov	r0, r8
4002393c:	eaffffe0 	b	400238c4 <CyU3PI2cReceiveBytes+0x28>
40023940:	e3a0bd07 	mov	fp, #448	; 0x1c0
40023944:	e1a00000 	nop			; (mov r0, r0)
40023948:	e3a02001 	mov	r2, #1
4002394c:	e1a01006 	mov	r1, r6
40023950:	e1a00004 	mov	r0, r4
40023954:	eb000166 	bl	40023ef4 <MyI2cSendCommand>
40023958:	e1a08000 	mov	r8, r0
4002395c:	e3580000 	cmp	r8, #0
40023960:	0a000000 	beq	40023968 <CyU3PI2cReceiveBytes+0xcc>
40023964:	ea00002a 	b	40023a14 <CyU3PI2cReceiveBytes+0x178>
40023968:	e3a0a000 	mov	sl, #0
4002396c:	ea000020 	b	400239f4 <CyU3PI2cReceiveBytes+0x158>
40023970:	e59f00dc 	ldr	r0, [pc, #220]	; 40023a54 <CyU3PI2cReceiveBytes+0x1b8>
40023974:	e58d0000 	str	r0, [sp]
40023978:	ea000006 	b	40023998 <CyU3PI2cReceiveBytes+0xfc>
4002397c:	e59d0000 	ldr	r0, [sp]
40023980:	e2401001 	sub	r1, r0, #1
40023984:	e3500000 	cmp	r0, #0
40023988:	e58d1000 	str	r1, [sp]
4002398c:	1a000001 	bne	40023998 <CyU3PI2cReceiveBytes+0xfc>
40023990:	e3a08055 	mov	r8, #85	; 0x55
40023994:	ea000004 	b	400239ac <CyU3PI2cReceiveBytes+0x110>
40023998:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002399c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239a0:	e38b1002 	orr	r1, fp, #2
400239a4:	e1100001 	tst	r0, r1
400239a8:	0afffff3 	beq	4002397c <CyU3PI2cReceiveBytes+0xe0>
400239ac:	e1a00000 	nop			; (mov r0, r0)
400239b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239b4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239b8:	e110000b 	tst	r0, fp
400239bc:	0a000000 	beq	400239c4 <CyU3PI2cReceiveBytes+0x128>
400239c0:	e3a0804a 	mov	r8, #74	; 0x4a
400239c4:	e3580000 	cmp	r8, #0
400239c8:	0a000005 	beq	400239e4 <CyU3PI2cReceiveBytes+0x148>
400239cc:	e3a00001 	mov	r0, #1
400239d0:	ebfffebe 	bl	400234d0 <CyU3PI2cErrorRecovery>
400239d4:	e3500000 	cmp	r0, #0
400239d8:	0a000000 	beq	400239e0 <CyU3PI2cReceiveBytes+0x144>
400239dc:	e3a08054 	mov	r8, #84	; 0x54
400239e0:	ea000005 	b	400239fc <CyU3PI2cReceiveBytes+0x160>
400239e4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239e8:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
400239ec:	e7c5000a 	strb	r0, [r5, sl]
400239f0:	e28aa001 	add	sl, sl, #1
400239f4:	e15a0006 	cmp	sl, r6
400239f8:	3affffdc 	bcc	40023970 <CyU3PI2cReceiveBytes+0xd4>
400239fc:	e1a00000 	nop			; (mov r0, r0)
40023a00:	e3580000 	cmp	r8, #0
40023a04:	0a000002 	beq	40023a14 <CyU3PI2cReceiveBytes+0x178>
40023a08:	e1b00007 	movs	r0, r7
40023a0c:	e2477001 	sub	r7, r7, #1
40023a10:	1affffcc 	bne	40023948 <CyU3PI2cReceiveBytes+0xac>
40023a14:	e1a00000 	nop			; (mov r0, r0)
40023a18:	e358004a 	cmp	r8, #74	; 0x4a
40023a1c:	1a000007 	bne	40023a40 <CyU3PI2cReceiveBytes+0x1a4>
40023a20:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a24:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
40023a28:	e3190040 	tst	r9, #64	; 0x40
40023a2c:	0a000000 	beq	40023a34 <CyU3PI2cReceiveBytes+0x198>
40023a30:	e3a08045 	mov	r8, #69	; 0x45
40023a34:	e3190080 	tst	r9, #128	; 0x80
40023a38:	0a000000 	beq	40023a40 <CyU3PI2cReceiveBytes+0x1a4>
40023a3c:	e3a08055 	mov	r8, #85	; 0x55
40023a40:	eb000004 	bl	40023a58 <CyU3PI2cReleaseLock>
40023a44:	e1a00008 	mov	r0, r8
40023a48:	eaffff9d 	b	400238c4 <CyU3PI2cReceiveBytes+0x28>
40023a4c:	40030f14 	.word	0x40030f14
40023a50:	40030f10 	.word	0x40030f10
40023a54:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023a58 <CyU3PI2cReleaseLock>:
40023a58:	e92d4010 	push	{r4, lr}
40023a5c:	e59f0030 	ldr	r0, [pc, #48]	; 40023a94 <CyU3PI2cReleaseLock+0x3c>
40023a60:	e5900000 	ldr	r0, [r0]
40023a64:	e3500000 	cmp	r0, #0
40023a68:	1a000001 	bne	40023a74 <CyU3PI2cReleaseLock+0x1c>
40023a6c:	e3a00044 	mov	r0, #68	; 0x44
40023a70:	e8bd8010 	pop	{r4, pc}
40023a74:	e59f001c 	ldr	r0, [pc, #28]	; 40023a98 <CyU3PI2cReleaseLock+0x40>
40023a78:	ebff9a58 	bl	4000a3e0 <_txe_mutex_put>
40023a7c:	e3500000 	cmp	r0, #0
40023a80:	0a000001 	beq	40023a8c <CyU3PI2cReleaseLock+0x34>
40023a84:	e3a0001d 	mov	r0, #29
40023a88:	eafffff8 	b	40023a70 <CyU3PI2cReleaseLock+0x18>
40023a8c:	e3a00000 	mov	r0, #0
40023a90:	eafffff6 	b	40023a70 <CyU3PI2cReleaseLock+0x18>
40023a94:	40030f18 	.word	0x40030f18
40023a98:	40032e74 	.word	0x40032e74

Disassembly of section i.CyU3PI2cSetConfig:

40023a9c <CyU3PI2cSetConfig>:
40023a9c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023aa0:	e1a04000 	mov	r4, r0
40023aa4:	e1a05001 	mov	r5, r1
40023aa8:	e59f01e0 	ldr	r0, [pc, #480]	; 40023c90 <CyU3PI2cSetConfig+0x1f4>
40023aac:	e5900000 	ldr	r0, [r0]
40023ab0:	e3500000 	cmp	r0, #0
40023ab4:	1a000001 	bne	40023ac0 <CyU3PI2cSetConfig+0x24>
40023ab8:	e3a00042 	mov	r0, #66	; 0x42
40023abc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023ac0:	e3540000 	cmp	r4, #0
40023ac4:	1a000001 	bne	40023ad0 <CyU3PI2cSetConfig+0x34>
40023ac8:	e3a00041 	mov	r0, #65	; 0x41
40023acc:	eafffffa 	b	40023abc <CyU3PI2cSetConfig+0x20>
40023ad0:	e5940004 	ldr	r0, [r4, #4]
40023ad4:	e3500000 	cmp	r0, #0
40023ad8:	1a000003 	bne	40023aec <CyU3PI2cSetConfig+0x50>
40023adc:	e3550000 	cmp	r5, #0
40023ae0:	0a000001 	beq	40023aec <CyU3PI2cSetConfig+0x50>
40023ae4:	e3a00040 	mov	r0, #64	; 0x40
40023ae8:	eafffff3 	b	40023abc <CyU3PI2cSetConfig+0x20>
40023aec:	ebfffeda 	bl	4002365c <CyU3PI2cGetLock>
40023af0:	e1a06000 	mov	r6, r0
40023af4:	e3560000 	cmp	r6, #0
40023af8:	0a000001 	beq	40023b04 <CyU3PI2cSetConfig+0x68>
40023afc:	e1a00006 	mov	r0, r6
40023b00:	eaffffed 	b	40023abc <CyU3PI2cSetConfig+0x20>
40023b04:	e3a00000 	mov	r0, #0
40023b08:	e59f1184 	ldr	r1, [pc, #388]	; 40023c94 <CyU3PI2cSetConfig+0x1f8>
40023b0c:	e5810000 	str	r0, [r1]
40023b10:	e5940000 	ldr	r0, [r4]
40023b14:	ebffc0ee 	bl	40013ed4 <CyU3PI2cSetClock>
40023b18:	e1a06000 	mov	r6, r0
40023b1c:	e3560000 	cmp	r6, #0
40023b20:	1a00000e 	bne	40023b60 <CyU3PI2cSetConfig+0xc4>
40023b24:	e3a00206 	mov	r0, #1610612736	; 0x60000000
40023b28:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b2c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023b30:	e1e07741 	mvn	r7, r1, asr #14
40023b34:	ea000004 	b	40023b4c <CyU3PI2cSetConfig+0xb0>
40023b38:	e1b00007 	movs	r0, r7
40023b3c:	e2477001 	sub	r7, r7, #1
40023b40:	1a000001 	bne	40023b4c <CyU3PI2cSetConfig+0xb0>
40023b44:	e3a06054 	mov	r6, #84	; 0x54
40023b48:	ea000003 	b	40023b5c <CyU3PI2cSetConfig+0xc0>
40023b4c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b50:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b54:	e3100008 	tst	r0, #8
40023b58:	0afffff6 	beq	40023b38 <CyU3PI2cSetConfig+0x9c>
40023b5c:	e1a00000 	nop			; (mov r0, r0)
40023b60:	e3560000 	cmp	r6, #0
40023b64:	1a00000b 	bne	40023b98 <CyU3PI2cSetConfig+0xfc>
40023b68:	e59f7128 	ldr	r7, [pc, #296]	; 40023c98 <CyU3PI2cSetConfig+0x1fc>
40023b6c:	ea000004 	b	40023b84 <CyU3PI2cSetConfig+0xe8>
40023b70:	e1b00007 	movs	r0, r7
40023b74:	e2477001 	sub	r7, r7, #1
40023b78:	1a000001 	bne	40023b84 <CyU3PI2cSetConfig+0xe8>
40023b7c:	e3a06054 	mov	r6, #84	; 0x54
40023b80:	ea000003 	b	40023b94 <CyU3PI2cSetConfig+0xf8>
40023b84:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b88:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b8c:	e3100002 	tst	r0, #2
40023b90:	1afffff6 	bne	40023b70 <CyU3PI2cSetConfig+0xd4>
40023b94:	e1a00000 	nop			; (mov r0, r0)
40023b98:	e3560000 	cmp	r6, #0
40023b9c:	0a000002 	beq	40023bac <CyU3PI2cSetConfig+0x110>
40023ba0:	ebffffac 	bl	40023a58 <CyU3PI2cReleaseLock>
40023ba4:	e1a00006 	mov	r0, r6
40023ba8:	eaffffc3 	b	40023abc <CyU3PI2cSetConfig+0x20>
40023bac:	e3a00000 	mov	r0, #0
40023bb0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bb4:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023bb8:	e3a06000 	mov	r6, #0
40023bbc:	e5940000 	ldr	r0, [r4]
40023bc0:	e59f10d4 	ldr	r1, [pc, #212]	; 40023c9c <CyU3PI2cSetConfig+0x200>
40023bc4:	e1500001 	cmp	r0, r1
40023bc8:	8a000000 	bhi	40023bd0 <CyU3PI2cSetConfig+0x134>
40023bcc:	e3a06004 	mov	r6, #4
40023bd0:	e5940004 	ldr	r0, [r4, #4]
40023bd4:	e3500000 	cmp	r0, #0
40023bd8:	0a000007 	beq	40023bfc <CyU3PI2cSetConfig+0x160>
40023bdc:	e3866001 	orr	r6, r6, #1
40023be0:	e3a00001 	mov	r0, #1
40023be4:	e59f10b4 	ldr	r1, [pc, #180]	; 40023ca0 <CyU3PI2cSetConfig+0x204>
40023be8:	e5810000 	str	r0, [r1]
40023bec:	e1d400bc 	ldrh	r0, [r4, #12]
40023bf0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bf4:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023bf8:	ea000005 	b	40023c14 <CyU3PI2cSetConfig+0x178>
40023bfc:	e3a00000 	mov	r0, #0
40023c00:	e59f1098 	ldr	r1, [pc, #152]	; 40023ca0 <CyU3PI2cSetConfig+0x204>
40023c04:	e5810000 	str	r0, [r1]
40023c08:	e59f0094 	ldr	r0, [pc, #148]	; 40023ca4 <CyU3PI2cSetConfig+0x208>
40023c0c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c10:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023c14:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c18:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023c1c:	e59f0084 	ldr	r0, [pc, #132]	; 40023ca8 <CyU3PI2cSetConfig+0x20c>
40023c20:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c24:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023c28:	e5940008 	ldr	r0, [r4, #8]
40023c2c:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023c30:	e3e00000 	mvn	r0, #0
40023c34:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023c38:	e1a00005 	mov	r0, r5
40023c3c:	eb0000a8 	bl	40023ee4 <CyU3PRegisterI2cCallBack>
40023c40:	e3550000 	cmp	r5, #0
40023c44:	0a000003 	beq	40023c58 <CyU3PI2cSetConfig+0x1bc>
40023c48:	e59f005c 	ldr	r0, [pc, #92]	; 40023cac <CyU3PI2cSetConfig+0x210>
40023c4c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c50:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023c54:	ea000002 	b	40023c64 <CyU3PI2cSetConfig+0x1c8>
40023c58:	e3a00000 	mov	r0, #0
40023c5c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c60:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023c64:	e3a00001 	mov	r0, #1
40023c68:	e59f1040 	ldr	r1, [pc, #64]	; 40023cb0 <CyU3PI2cSetConfig+0x214>
40023c6c:	e5810000 	str	r0, [r1]
40023c70:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c74:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023c78:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023c7c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c80:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023c84:	ebffff73 	bl	40023a58 <CyU3PI2cReleaseLock>
40023c88:	e3a00000 	mov	r0, #0
40023c8c:	eaffff8a 	b	40023abc <CyU3PI2cSetConfig+0x20>
40023c90:	40030f18 	.word	0x40030f18
40023c94:	40030f20 	.word	0x40030f20
40023c98:	00007fff 	.word	0x00007fff
40023c9c:	000186a0 	.word	0x000186a0
40023ca0:	40030f10 	.word	0x40030f10
40023ca4:	0000ffff 	.word	0x0000ffff
40023ca8:	00000502 	.word	0x00000502
40023cac:	000001c9 	.word	0x000001c9
40023cb0:	40030f14 	.word	0x40030f14

Disassembly of section i.CyU3PI2cTransmitBytes:

40023cb4 <CyU3PI2cTransmitBytes>:
40023cb4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023cb8:	e1a04000 	mov	r4, r0
40023cbc:	e1a05001 	mov	r5, r1
40023cc0:	e1a06002 	mov	r6, r2
40023cc4:	e59f020c 	ldr	r0, [pc, #524]	; 40023ed8 <CyU3PI2cTransmitBytes+0x224>
40023cc8:	e5900000 	ldr	r0, [r0]
40023ccc:	e3500000 	cmp	r0, #0
40023cd0:	1a000002 	bne	40023ce0 <CyU3PI2cTransmitBytes+0x2c>
40023cd4:	e3a00044 	mov	r0, #68	; 0x44
40023cd8:	e28dd010 	add	sp, sp, #16
40023cdc:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023ce0:	e59f01f4 	ldr	r0, [pc, #500]	; 40023edc <CyU3PI2cTransmitBytes+0x228>
40023ce4:	e5900000 	ldr	r0, [r0]
40023ce8:	e3500000 	cmp	r0, #0
40023cec:	0a000001 	beq	40023cf8 <CyU3PI2cTransmitBytes+0x44>
40023cf0:	e3a00044 	mov	r0, #68	; 0x44
40023cf4:	eafffff7 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023cf8:	e3550000 	cmp	r5, #0
40023cfc:	0a000001 	beq	40023d08 <CyU3PI2cTransmitBytes+0x54>
40023d00:	e3540000 	cmp	r4, #0
40023d04:	1a000001 	bne	40023d10 <CyU3PI2cTransmitBytes+0x5c>
40023d08:	e3a00041 	mov	r0, #65	; 0x41
40023d0c:	eafffff1 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023d10:	e5d40008 	ldrb	r0, [r4, #8]
40023d14:	e3500000 	cmp	r0, #0
40023d18:	0a000002 	beq	40023d28 <CyU3PI2cTransmitBytes+0x74>
40023d1c:	e5d40008 	ldrb	r0, [r4, #8]
40023d20:	e3500008 	cmp	r0, #8
40023d24:	da000001 	ble	40023d30 <CyU3PI2cTransmitBytes+0x7c>
40023d28:	e3a00040 	mov	r0, #64	; 0x40
40023d2c:	eaffffe9 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023d30:	e3560000 	cmp	r6, #0
40023d34:	1a000001 	bne	40023d40 <CyU3PI2cTransmitBytes+0x8c>
40023d38:	e3a00000 	mov	r0, #0
40023d3c:	eaffffe5 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023d40:	ebfffe45 	bl	4002365c <CyU3PI2cGetLock>
40023d44:	e1a07000 	mov	r7, r0
40023d48:	e3570000 	cmp	r7, #0
40023d4c:	0a000001 	beq	40023d58 <CyU3PI2cTransmitBytes+0xa4>
40023d50:	e1a00007 	mov	r0, r7
40023d54:	eaffffdf 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023d58:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023d5c:	e1a00000 	nop			; (mov r0, r0)
40023d60:	e3a07000 	mov	r7, #0
40023d64:	e5d50000 	ldrb	r0, [r5]
40023d68:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d6c:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023d70:	e3a02000 	mov	r2, #0
40023d74:	e1a01006 	mov	r1, r6
40023d78:	e1a00004 	mov	r0, r4
40023d7c:	eb00005c 	bl	40023ef4 <MyI2cSendCommand>
40023d80:	e1a07000 	mov	r7, r0
40023d84:	e3570000 	cmp	r7, #0
40023d88:	0a000000 	beq	40023d90 <CyU3PI2cTransmitBytes+0xdc>
40023d8c:	ea000043 	b	40023ea0 <CyU3PI2cTransmitBytes+0x1ec>
40023d90:	e3a08001 	mov	r8, #1
40023d94:	ea000018 	b	40023dfc <CyU3PI2cTransmitBytes+0x148>
40023d98:	e59f9140 	ldr	r9, [pc, #320]	; 40023ee0 <CyU3PI2cTransmitBytes+0x22c>
40023d9c:	ea000004 	b	40023db4 <CyU3PI2cTransmitBytes+0x100>
40023da0:	e1b00009 	movs	r0, r9
40023da4:	e2499001 	sub	r9, r9, #1
40023da8:	1a000001 	bne	40023db4 <CyU3PI2cTransmitBytes+0x100>
40023dac:	e3a07055 	mov	r7, #85	; 0x55
40023db0:	ea000004 	b	40023dc8 <CyU3PI2cTransmitBytes+0x114>
40023db4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023db8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023dbc:	e38a1010 	orr	r1, sl, #16
40023dc0:	e1100001 	tst	r0, r1
40023dc4:	0afffff5 	beq	40023da0 <CyU3PI2cTransmitBytes+0xec>
40023dc8:	e1a00000 	nop			; (mov r0, r0)
40023dcc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023dd0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023dd4:	e110000a 	tst	r0, sl
40023dd8:	0a000000 	beq	40023de0 <CyU3PI2cTransmitBytes+0x12c>
40023ddc:	e3a0704a 	mov	r7, #74	; 0x4a
40023de0:	e3570000 	cmp	r7, #0
40023de4:	0a000000 	beq	40023dec <CyU3PI2cTransmitBytes+0x138>
40023de8:	ea000005 	b	40023e04 <CyU3PI2cTransmitBytes+0x150>
40023dec:	e7d50008 	ldrb	r0, [r5, r8]
40023df0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023df4:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023df8:	e2888001 	add	r8, r8, #1
40023dfc:	e1580006 	cmp	r8, r6
40023e00:	3affffe4 	bcc	40023d98 <CyU3PI2cTransmitBytes+0xe4>
40023e04:	e1a00000 	nop			; (mov r0, r0)
40023e08:	e1560008 	cmp	r6, r8
40023e0c:	1a000013 	bne	40023e60 <CyU3PI2cTransmitBytes+0x1ac>
40023e10:	e3570000 	cmp	r7, #0
40023e14:	1a000011 	bne	40023e60 <CyU3PI2cTransmitBytes+0x1ac>
40023e18:	e59f90c0 	ldr	r9, [pc, #192]	; 40023ee0 <CyU3PI2cTransmitBytes+0x22c>
40023e1c:	ea000004 	b	40023e34 <CyU3PI2cTransmitBytes+0x180>
40023e20:	e1b00009 	movs	r0, r9
40023e24:	e2499001 	sub	r9, r9, #1
40023e28:	1a000001 	bne	40023e34 <CyU3PI2cTransmitBytes+0x180>
40023e2c:	e3a07055 	mov	r7, #85	; 0x55
40023e30:	ea000004 	b	40023e48 <CyU3PI2cTransmitBytes+0x194>
40023e34:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e38:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023e3c:	e38a1008 	orr	r1, sl, #8
40023e40:	e1100001 	tst	r0, r1
40023e44:	0afffff5 	beq	40023e20 <CyU3PI2cTransmitBytes+0x16c>
40023e48:	e1a00000 	nop			; (mov r0, r0)
40023e4c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e50:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023e54:	e110000a 	tst	r0, sl
40023e58:	0a000000 	beq	40023e60 <CyU3PI2cTransmitBytes+0x1ac>
40023e5c:	e3a0704a 	mov	r7, #74	; 0x4a
40023e60:	e3570000 	cmp	r7, #0
40023e64:	0a000006 	beq	40023e84 <CyU3PI2cTransmitBytes+0x1d0>
40023e68:	e3a00001 	mov	r0, #1
40023e6c:	ebfffd97 	bl	400234d0 <CyU3PI2cErrorRecovery>
40023e70:	e3500000 	cmp	r0, #0
40023e74:	0a000002 	beq	40023e84 <CyU3PI2cTransmitBytes+0x1d0>
40023e78:	ebfffef6 	bl	40023a58 <CyU3PI2cReleaseLock>
40023e7c:	e3a00054 	mov	r0, #84	; 0x54
40023e80:	eaffff94 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023e84:	e3570000 	cmp	r7, #0
40023e88:	0a000004 	beq	40023ea0 <CyU3PI2cTransmitBytes+0x1ec>
40023e8c:	e59d000c 	ldr	r0, [sp, #12]
40023e90:	e2401001 	sub	r1, r0, #1
40023e94:	e3500000 	cmp	r0, #0
40023e98:	e58d100c 	str	r1, [sp, #12]
40023e9c:	1affffaf 	bne	40023d60 <CyU3PI2cTransmitBytes+0xac>
40023ea0:	e1a00000 	nop			; (mov r0, r0)
40023ea4:	e357004a 	cmp	r7, #74	; 0x4a
40023ea8:	1a000007 	bne	40023ecc <CyU3PI2cTransmitBytes+0x218>
40023eac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023eb0:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023eb4:	e31b0040 	tst	fp, #64	; 0x40
40023eb8:	0a000000 	beq	40023ec0 <CyU3PI2cTransmitBytes+0x20c>
40023ebc:	e3a07045 	mov	r7, #69	; 0x45
40023ec0:	e31b0080 	tst	fp, #128	; 0x80
40023ec4:	0a000000 	beq	40023ecc <CyU3PI2cTransmitBytes+0x218>
40023ec8:	e3a07055 	mov	r7, #85	; 0x55
40023ecc:	ebfffee1 	bl	40023a58 <CyU3PI2cReleaseLock>
40023ed0:	e1a00007 	mov	r0, r7
40023ed4:	eaffff7f 	b	40023cd8 <CyU3PI2cTransmitBytes+0x24>
40023ed8:	40030f14 	.word	0x40030f14
40023edc:	40030f10 	.word	0x40030f10
40023ee0:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023ee4 <CyU3PRegisterI2cCallBack>:
40023ee4:	e59f1004 	ldr	r1, [pc, #4]	; 40023ef0 <CyU3PRegisterI2cCallBack+0xc>
40023ee8:	e5810000 	str	r0, [r1]
40023eec:	e12fff1e 	bx	lr
40023ef0:	40030f1c 	.word	0x40030f1c

Disassembly of section i.MyI2cSendCommand:

40023ef4 <MyI2cSendCommand>:
40023ef4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023ef8:	e1a04000 	mov	r4, r0
40023efc:	e1a06001 	mov	r6, r1
40023f00:	e1a07002 	mov	r7, r2
40023f04:	e3a00000 	mov	r0, #0
40023f08:	e59f1108 	ldr	r1, [pc, #264]	; 40024018 <MyI2cSendCommand+0x124>
40023f0c:	e5810000 	str	r0, [r1]
40023f10:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f14:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f18:	e3100202 	tst	r0, #536870912	; 0x20000000
40023f1c:	0a000006 	beq	40023f3c <MyI2cSendCommand+0x48>
40023f20:	e3a00000 	mov	r0, #0
40023f24:	ebfffd69 	bl	400234d0 <CyU3PI2cErrorRecovery>
40023f28:	e1a05000 	mov	r5, r0
40023f2c:	e3550000 	cmp	r5, #0
40023f30:	0a000001 	beq	40023f3c <MyI2cSendCommand+0x48>
40023f34:	e1a00005 	mov	r0, r5
40023f38:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023f3c:	e59f80d8 	ldr	r8, [pc, #216]	; 4002401c <MyI2cSendCommand+0x128>
40023f40:	e1a00000 	nop			; (mov r0, r0)
40023f44:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f48:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f4c:	e3100203 	tst	r0, #805306368	; 0x30000000
40023f50:	0a000002 	beq	40023f60 <MyI2cSendCommand+0x6c>
40023f54:	e1b00008 	movs	r0, r8
40023f58:	e2488001 	sub	r8, r8, #1
40023f5c:	1afffff8 	bne	40023f44 <MyI2cSendCommand+0x50>
40023f60:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f64:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f68:	e3100203 	tst	r0, #805306368	; 0x30000000
40023f6c:	0a000001 	beq	40023f78 <MyI2cSendCommand+0x84>
40023f70:	e3a00045 	mov	r0, #69	; 0x45
40023f74:	eaffffef 	b	40023f38 <MyI2cSendCommand+0x44>
40023f78:	e3a00000 	mov	r0, #0
40023f7c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023f80:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023f84:	e5d42008 	ldrb	r2, [r4, #8]
40023f88:	e1a01004 	mov	r1, r4
40023f8c:	e1a0000d 	mov	r0, sp
40023f90:	ebff7e4f 	bl	400038d4 <CyU3PMemCopy>
40023f94:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023f98:	e59d0000 	ldr	r0, [sp]
40023f9c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023fa0:	e59d0004 	ldr	r0, [sp, #4]
40023fa4:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023fa8:	e3a00000 	mov	r0, #0
40023fac:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023fb0:	e3e00000 	mvn	r0, #0
40023fb4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023fb8:	e3a00d07 	mov	r0, #448	; 0x1c0
40023fbc:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023fc0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023fc4:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023fc8:	e1d400ba 	ldrh	r0, [r4, #10]
40023fcc:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023fd0:	e3570000 	cmp	r7, #0
40023fd4:	0a000004 	beq	40023fec <MyI2cSendCommand+0xf8>
40023fd8:	e5d40008 	ldrb	r0, [r4, #8]
40023fdc:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023fe0:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023fe4:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023fe8:	ea000003 	b	40023ffc <MyI2cSendCommand+0x108>
40023fec:	e5d40008 	ldrb	r0, [r4, #8]
40023ff0:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023ff4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023ff8:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023ffc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40024000:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40024004:	e3800010 	orr	r0, r0, #16
40024008:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002400c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40024010:	e3a00000 	mov	r0, #0
40024014:	eaffffc7 	b	40023f38 <MyI2cSendCommand+0x44>
40024018:	40030f20 	.word	0x40030f20
4002401c:	00007fff 	.word	0x00007fff
