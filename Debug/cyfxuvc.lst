
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f264  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  40012264  40012264  00012264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  400123b4  400123b4  000123b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  4001244c  4001244c  0001244c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  400128b8  400128b8  000128b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  400128e4  400128e4  000128e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  400129dc  400129dc  000129dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  400129e8  400129e8  000129e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  400129f4  400129f4  000129f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012a1c  40012a1c  00012a1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012a2c  40012a2c  00012a2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012a3c  40012a3c  00012a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012a4c  40012a4c  00012a4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012a60  40012a60  00012a60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012a70  40012a70  00012a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012a7c  40012a7c  00012a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012a90  40012a90  00012a90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012acc  40012acc  00012acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012af4  40012af4  00012af4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012b2c  40012b2c  00012b2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012b60  40012b60  00012b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012b78  40012b78  00012b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012b90  40012b90  00012b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012bac  40012bac  00012bac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012c30  40012c30  00012c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012d04  40012d04  00012d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012d4c  40012d4c  00012d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40012edc  40012edc  00012edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40012f5c  40012f5c  00012f5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40012f6c  40012f6c  00012f6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  400131a0  400131a0  000131a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  40013298  40013298  00013298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013530  40013530  00013530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  40013568  40013568  00013568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  400135c4  400135c4  000135c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  400135e4  400135e4  000135e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013640  40013640  00013640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  40013664  40013664  00013664  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013684  40013684  00013684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013778  40013778  00013778  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013804  40013804  00013804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013808  40013808  00013808  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  4001382c  4001382c  0001382c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013940  40013940  00013940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  400139e0  400139e0  000139e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013a38  40013a38  00013a38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013a88  40013a88  00013a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013b84  40013b84  00013b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013c34  40013c34  00013c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013ce8  40013ce8  00013ce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013d10  40013d10  00013d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013d20  40013d20  00013d20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40013ec0  40013ec0  00013ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40013fd8  40013fd8  00013fd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40014028  40014028  00014028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  40014198  40014198  00014198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  40014270  40014270  00014270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  400142f4  400142f4  000142f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  4001430c  4001430c  0001430c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  4001448c  4001448c  0001448c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  400144cc  400144cc  000144cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  400144dc  400144dc  000144dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  400144ec  400144ec  000144ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  400144fc  400144fc  000144fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  4001450c  4001450c  0001450c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  400145dc  400145dc  000145dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  4001480c  4001480c  0001480c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  4001489c  4001489c  0001489c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014910  40014910  00014910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014938  40014938  00014938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014974  40014974  00014974  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  4001499c  4001499c  0001499c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  400149c4  400149c4  000149c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  400149ec  400149ec  000149ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014a14  40014a14  00014a14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014a3c  40014a3c  00014a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014a64  40014a64  00014a64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014a90  40014a90  00014a90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014af8  40014af8  00014af8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014b0c  40014b0c  00014b0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014b60  40014b60  00014b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014bc0  40014bc0  00014bc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014c60  40014c60  00014c60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014d40  40014d40  00014d40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014e20  40014e20  00014e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  40014e68  40014e68  00014e68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40014f14  40014f14  00014f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40014f58  40014f58  00014f58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40014fcc  40014fcc  00014fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015130  40015130  00015130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015184  40015184  00015184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  400151d8  400151d8  000151d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  400154c8  400154c8  000154c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  40015558  40015558  00015558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  400157c4  400157c4  000157c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015bac  40015bac  00015bac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015c5c  40015c5c  00015c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015d30  40015d30  00015d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40015ee4  40015ee4  00015ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  40016218  40016218  00016218  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  40016338  40016338  00016338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  400163a4  400163a4  000163a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  4001649c  4001649c  0001649c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  40016578  40016578  00016578  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016718  40016718  00016718  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016904  40016904  00016904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016b24  40016b24  00016b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016d5c  40016d5c  00016d5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40016e8c  40016e8c  00016e8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40017030  40017030  00017030  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017130  40017130  00017130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  4001724c  4001724c  0001724c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  400172a0  400172a0  000172a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  40017660  40017660  00017660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  4001794c  4001794c  0001794c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017c44  40017c44  00017c44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  40018388  40018388  00018388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  400184dc  400184dc  000184dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  4001860c  4001860c  0001860c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  4001873c  4001873c  0001873c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018878  40018878  00018878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018ae8  40018ae8  00018ae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018d44  40018d44  00018d44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40018ec4  40018ec4  00018ec4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  4001904c  4001904c  0001904c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40019100  40019100  00019100  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  400191b8  400191b8  000191b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  40019254  40019254  00019254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  400192f4  400192f4  000192f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  40019660  40019660  00019660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019bf0  40019bf0  00019bf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a1d0  4001a1d0  0001a1d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001a858  4001a858  0001a858  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001a8bc  4001a8bc  0001a8bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001a90c  4001a90c  0001a90c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001aa04  4001aa04  0001aa04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001ab1c  4001ab1c  0001ab1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001ab98  4001ab98  0001ab98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001accc  4001accc  0001accc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001ae30  4001ae30  0001ae30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001ae80  4001ae80  0001ae80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b130  4001b130  0001b130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b2b4  4001b2b4  0001b2b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b2f4  4001b2f4  0001b2f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b3ac  4001b3ac  0001b3ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b43c  4001b43c  0001b43c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b6c4  4001b6c4  0001b6c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b6d4  4001b6d4  0001b6d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b828  4001b828  0001b828  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001b9a8  4001b9a8  0001b9a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bc0c  4001bc0c  0001bc0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bc1c  4001bc1c  0001bc1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bce8  4001bce8  0001bce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001bda8  4001bda8  0001bda8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001bdb8  4001bdb8  0001bdb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c3b0  4001c3b0  0001c3b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c434  4001c434  0001c434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c5fc  4001c5fc  0001c5fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c720  4001c720  0001c720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001c868  4001c868  0001c868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001c9dc  4001c9dc  0001c9dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001caa8  4001caa8  0001caa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cc70  4001cc70  0001cc70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001cc80  4001cc80  0001cc80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001cc90  4001cc90  0001cc90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001ccdc  4001ccdc  0001ccdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cd48  4001cd48  0001cd48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001cdc4  4001cdc4  0001cdc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001ce78  4001ce78  0001ce78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d050  4001d050  0001d050  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d370  4001d370  0001d370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d37c  4001d37c  0001d37c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d460  4001d460  0001d460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d638  4001d638  0001d638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d72c  4001d72c  0001d72c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d81c  4001d81c  0001d81c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001d9f4  4001d9f4  0001d9f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001dbb8  4001dbb8  0001dbb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dd0c  4001dd0c  0001dd0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e09c  4001e09c  0001e09c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e414  4001e414  0001e414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e48c  4001e48c  0001e48c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e504  4001e504  0001e504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e6a0  4001e6a0  0001e6a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001e884  4001e884  0001e884  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001eaf4  4001eaf4  0001eaf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001ebac  4001ebac  0001ebac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001ebdc  4001ebdc  0001ebdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001ec7c  4001ec7c  0001ec7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f05c  4001f05c  0001f05c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f148  4001f148  0001f148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f764  4001f764  0001f764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f800  4001f800  0001f800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001f870  4001f870  0001f870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001f8ec  4001f8ec  0001f8ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001fa60  4001fa60  0001fa60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001facc  4001facc  0001facc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fd00  4001fd00  0001fd00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fd1c  4001fd1c  0001fd1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  4001ff14  4001ff14  0001ff14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  40020188  40020188  00020188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020240  40020240  00020240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  40020358  40020358  00020358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020754  40020754  00020754  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  4002084c  4002084c  0002084c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020958  40020958  00020958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020b24  40020b24  00020b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020b78  40020b78  00020b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020bd8  40020bd8  00020bd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020d1c  40020d1c  00020d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020d6c  40020d6c  00020d6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40020f60  40020f60  00020f60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  400210f0  400210f0  000210f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  40021288  40021288  00021288  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  40021498  40021498  00021498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021ca4  40021ca4  00021ca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021cf4  40021cf4  00021cf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021df8  40021df8  00021df8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40021f0c  40021f0c  00021f0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40021f18  40021f18  00021f18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40021f28  40021f28  00021f28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40021f3c  40021f3c  00021f3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40021f50  40021f50  00021f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40021f60  40021f60  00021f60  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40021fa0  40021fa0  00021fa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40021fb8  40021fb8  00021fb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40021fd0  40021fd0  00021fd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  4002200c  4002200c  0002200c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  4002203c  4002203c  0002203c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  40022068  40022068  00022068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  400220e8  400220e8  000220e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  4002217c  4002217c  0002217c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  400222cc  400222cc  000222cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  40022358  40022358  00022358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022438  40022438  00022438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022448  40022448  00022448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  4002249c  4002249c  0002249c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022538  40022538  00022538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  400225a4  400225a4  000225a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022610  40022610  00022610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022788  40022788  00022788  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  400228a4  400228a4  000228a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022a68  40022a68  00022a68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022b58  40022b58  00022b58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022c30  40022c30  00022c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022cb4  40022cb4  00022cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022cc4  40022cc4  00022cc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022cd4  40022cd4  00022cd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022d30  40022d30  00022d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022e18  40022e18  00022e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40022ed0  40022ed0  00022ed0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40022f14  40022f14  00022f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023130  40023130  00023130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023180  40023180  00023180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  4002330c  4002330c  0002330c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  40023368  40023368  00023368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  4002345c  4002345c  0002345c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  4002354c  4002354c  0002354c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023708  40023708  00023708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  4002374c  4002374c  0002374c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023964  40023964  00023964  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023b94  40023b94  00023b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023ba4  40023ba4  00023ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f20  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f20  40030f20  00028f20  2**5
                  ALLOC
266 .debug_abbrev 000011c9  00000000  00000000  00028f20  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d43f  00000000  00000000  0002a0e9  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   0002307d  00000000  00000000  000a7528  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca5a5  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d644a  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d6480  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6630  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042eb  00000000  00000000  000d7239  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e9c6  00000000  00000000  000db524  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 0000767c  00000000  00000000  000e9eea  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1568  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a758  00000000  00000000  000f1608  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 000004b0  00000000  00000000  000fbd60  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fc210  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031600 	.word	0x40031600

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp_.debug_frame$13>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp_.debug_frame$13+0x4>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$38+0x2e>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$20+0x34>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp_.debug_frame$13+0xc>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp_.debug_frame$13+0xc>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x14>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$27+0x40>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x1c>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_pubnames$10>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$41+0x1c>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x4>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$48+0x30>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp_.debug_frame$13>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$31>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp_.debug_frame$13>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_frame$62+0x4>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$38+0x1a>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp_.debug_frame$13+0x8>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$59+0x12>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp_.debug_frame$13>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$59+0x6>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$66+0x1f>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$66+0x13>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$66+0x2b>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$73+0x17>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0xc>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp_.debug_frame$13>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0xb>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp_.debug_frame$13>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x9>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp_.debug_frame$13>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x2>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp_.debug_frame$13>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp_.debug_frame$13+0x10>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d54 	.word	0x40030d54
     af8:	40030d3c 	.word	0x40030d3c
     afc:	40031a3c 	.word	0x40031a3c
     b00:	4003196c 	.word	0x4003196c
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d50 	.word	0x40030d50
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d58 	.word	0x40030d58

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_pubnames$59+0x1a>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp..debug_macinfo$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$24+0x20>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp_.debug_frame$34+0xc>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp_.debug_frame$27+0x3c>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$13+0x1c>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$48+0x18>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$13+0x1c>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$48+0x18>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$115+0x13>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_frame$125+0x4>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$17>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$80+0x1a>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_pubnames$24+0x1c>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_frame$118+0x10>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$17>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$115+0x27>
     cbc:	ea000000 	b	cc4 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x17>
     cc0:	ea000001 	b	ccc <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x1f>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_line$1+0x7>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$17+0x10>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_line$1+0x7>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_pubnames$24+0x18>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_pubnames$24+0x18>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$17>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_line$1+0x7>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_line$1+0x7>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$17+0xe>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$52+0xb>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$52+0xb>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_frame$104>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$17+0x12>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x2>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$17+0x12>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x2>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_frame$104>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_frame$104>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$73+0xc>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_frame$104>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$80+0x16>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$17>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_frame$20>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$94+0x1e>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_frame$118+0xc>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_line$1+0x7>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_pubnames$17+0x2>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_frame$20>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_frame$20+0x4>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$17>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_frame$13+0x8>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$10+0x29>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_frame$20>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$24+0x14>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_frame$20+0x8>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x20>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x20>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$24+0x20>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_frame$34>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_frame$41+0x14>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_pubnames$59+0x1a>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x12>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x26>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x12>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_frame$20+0xc>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x2e>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_frame$20+0xc>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_pubnames$24+0x3>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$62+0x18>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$17+0xe>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$20+0x10>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_frame$20+0x1c>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_frame$34+0x8>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$73+0x10>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_line$15+0x3>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x16>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$17+0xe>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_pubnames$17+0x6>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$59+0x1a>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_frame$48+0x8>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$73+0x8>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_frame$55+0x4>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$13+0x14>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x11>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x5>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_frame$69+0x10>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_frame$76+0x10>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_pubnames$31+0x6>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_pubnames$31+0xa>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$83+0x40>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$31+0xe>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp_.debug_frame$83+0x24>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$83+0x38>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp_.debug_frame$90+0x4>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x15>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x31>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_frame$97>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x2>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0x18>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_pubnames$17+0xa>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x5>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x2>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$38+0x2e>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$52+0x5>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$59+0xb>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$66+0x12>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_frame$125+0x4>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_pubnames$80+0x1f>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x10>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$132+0x3c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$13+0x10>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$31+0x12>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$31+0x12>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$13+0xc>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$31+0x12>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_line$1+0x3>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$13+0x20>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$13+0x18>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030da0 	.word	0x40030da0
    17d0:	40030d80 	.word	0x40030d80
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d8c 	.word	0x40030d8c
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d88 	.word	0x40030d88
    17e4:	40030db8 	.word	0x40030db8
    17e8:	40030d5c 	.word	0x40030d5c
    17ec:	40030dc0 	.word	0x40030dc0
    17f0:	40030dd0 	.word	0x40030dd0
    17f4:	40030d90 	.word	0x40030d90
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d84 	.word	0x40030d84
    1800:	80008000 	.word	0x80008000
    1804:	40030dcc 	.word	0x40030dcc
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a78 	.word	0x40031a78
    1810:	40031b18 	.word	0x40031b18
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$52+0xf>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_pubnames$52+0x13>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$52+0x17>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$52+0x1b>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$52+0x1f>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$52+0x23>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$52+0x27>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$59>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$59+0x4>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$59+0x8>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_frame$41>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_frame$41+0x4>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_frame$41+0x8>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_frame$41+0xc>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_frame$41+0x10>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_frame$41+0x14>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$41+0x18>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$41+0x1c>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_pubnames$66+0x2>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	40012218 	.word	0x40012218
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_pubnames$73+0x21>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_pubnames$73+0x25>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_line$71+0xf>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_line$71+0xf>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_line$71+0x13>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dd8 	.word	0x40030dd8

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315b0 	.word	0x400315b0

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp_.debug_pubnames$143+0xc>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$73+0x2b>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$73+0x23>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp_.debug_pubnames$73+0xb>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$143+0x10>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x1>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_frame$20+0xc>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_frame$20+0x4>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_pubnames$87+0x1>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_frame$27+0x8>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_frame$27>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$101+0x1>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$94+0x11>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$143+0x14>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x17>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0xf>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_pubnames$108>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_frame$20>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_frame$41>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$122+0xf>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$122+0x7>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$115+0x18>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_frame$20+0x4>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp_.debug_pubnames$143+0x8>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_pubnames$143>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x13>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$129+0x8>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000ad90 	.word	0x4000ad90

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__CyU3PBusyWait_veneer+0x4>
    1fb4:	40013530 	.word	0x40013530

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40021fb8 	.word	0x40021fb8

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a524 	.word	0x4000a524

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40021f28 	.word	0x40021f28

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <__ARM_grp_.debug_pubnames$157+0x2>
    1fd4:	4000ae80 	.word	0x4000ae80

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	400220e8 	.word	0x400220e8

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	400142f4 	.word	0x400142f4

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <___tx_thread_irq_nesting_end_veneer+0x4>
    1fec:	4000af98 	.word	0x4000af98

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000afbc 	.word	0x4000afbc

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40021f0c 	.word	0x40021f0c

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001fa60 	.word	0x4001fa60

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000ad3c 	.word	0x4000ad3c

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a3e4 	.word	0x4000a3e4

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009e58 	.word	0x40009e58

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__ARM_grp_.debug_pubnames$171+0x1>
    2024:	40013ce8 	.word	0x40013ce8

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c5fc 	.word	0x4001c5fc

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__ARM_grp_.debug_frame$34>
    2034:	4001b2b4 	.word	0x4001b2b4

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	40022610 	.word	0x40022610

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	40020f60 	.word	0x40020f60

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	40016218 	.word	0x40016218

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260,
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea003fd6 	b	40012f6c <CyU3PDebugPrint>
40003010:	40010c14 	.word	0x40010c14

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb003fcd 	bl	40012f6c <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb003fc0 	bl	40012f6c <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb003fb2 	bl	40012f6c <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb003fa5 	bl	40012f6c <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb003f98 	bl	40012f6c <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb003f8b 	bl	40012f6c <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003f7d 	bl	40012f6c <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003f70 	bl	40012f6c <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003f63 	bl	40012f6c <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003f56 	bl	40012f6c <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003f49 	bl	40012f6c <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003f3c 	bl	40012f6c <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003f2f 	bl	40012f6c <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003f22 	bl	40012f6c <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003f15 	bl	40012f6c <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003f08 	bl	40012f6c <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003efb 	bl	40012f6c <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003eef 	bl	40012f6c <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010c2c 	.word	0x40010c2c
400033b8:	40010c48 	.word	0x40010c48
400033bc:	40010ca8 	.word	0x40010ca8

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001ab4 	bl	40009ec0 <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010d00 	.word	0x40010d00

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb001578 	bl	40008a78 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb001574 	bl	40008a78 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003e8c 	bl	40012f6c <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010b94 	.word	0x40010b94
40003548:	40010d14 	.word	0x40010d14

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea0067b3 	b	4001d460 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea001454 	b	40008760 <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	40033244 	.word	0x40033244

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea004016 	b	40013684 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb0018b6 	bl	4000993c <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb001477 	bl	40008864 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb001863 	bl	4000982c <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea001924 	b	40009b4c <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb0018b2 	bl	40009ec0 <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb001316 	bl	40008864 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb001702 	bl	4000982c <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb0018cf 	bl	4000a038 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb0012d3 	bl	40008864 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb0018e4 	bl	4000a0b8 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001783 	bl	40009b4c <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb00190d 	bl	4000a18c <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea0018b5 	b	4000a038 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb0012bb 	bl	40008864 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb0018cc 	bl	4000a0b8 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb0018ce 	bl	4000a18c <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb0018a9 	bl	4000a18c <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb001258 	bl	40008864 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb001869 	bl	4000a0b8 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001894 	bl	4000a18c <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb00120c 	bl	40008864 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb00181d 	bl	4000a0b8 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb0016bb 	bl	40009b4c <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb001845 	bl	4000a18c <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb0017ee 	bl	4000a038 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001691 	bl	40009acc <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007e20 	bl	40023964 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001d 	bne	40004160 <SensorRead2B.clone.1+0xc4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003d0f 	bl	40013530 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007d0b 	bl	4002354c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003d00 	bl	40013530 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f103c 	ldr	r1, [pc, #60]	; 40004184 <SensorRead2B.clone.1+0xe8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003b85 	bl	40012f6c <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004154:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004158:	eb003cf4 	bl	40013530 <CyU3PBusyWait>
4000415c:	eafffff2 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004160:	e5d4c001 	ldrb	ip, [r4, #1]
40004164:	e5d43000 	ldrb	r3, [r4]
40004168:	e59f1018 	ldr	r1, [pc, #24]	; 40004188 <SensorRead2B.clone.1+0xec>
4000416c:	e3a00004 	mov	r0, #4
40004170:	e58dc000 	str	ip, [sp]
40004174:	eb003b7c 	bl	40012f6c <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004178:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000417c:	eb003ceb 	bl	40013530 <CyU3PBusyWait>
40004180:	eaffffda 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004184:	40011014 	.word	0x40011014
40004188:	40010ff8 	.word	0x40010ff8

4000418c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000418c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	e35000a0 	cmp	r0, #160	; 0xa0
40004194:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e24dd014 	sub	sp, sp, #20
4000419c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a0:	03a0e000 	moveq	lr, #0
400041a4:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
400041a8:	e1a07001 	mov	r7, r1
400041ac:	e1a06002 	mov	r6, r2
400041b0:	e1a05003 	mov	r5, r3
400041b4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041b8:	1a000020 	bne	40004240 <SensorWrite2B+0xb4>
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041bc:	e1a0300e 	mov	r3, lr
400041c0:	e28d100c 	add	r1, sp, #12
400041c4:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041c8:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041cc:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400041d4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d8:	e5cdc008 	strb	ip, [sp, #8]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041dc:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041e0:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
400041e4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041e8:	eb007ddd 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041ec:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400041f0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400041f4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400041f8:	eb003ccc 	bl	40013530 <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004204:	e1a0000d 	mov	r0, sp
40004208:	e28d100c 	add	r1, sp, #12
4000420c:	e1a0200c 	mov	r2, ip
40004210:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004214:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004218:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
4000421c:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004220:	eb007dcf 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004224:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004228:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000422c:	13a00ffa 	movne	r0, #1000	; 0x3e8
40004230:	eb003cbe 	bl	40013530 <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004234:	e1a00004 	mov	r0, r4
40004238:	e28dd014 	add	sp, sp, #20
4000423c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004240:	e3a00004 	mov	r0, #4
40004244:	e59f1008 	ldr	r1, [pc, #8]	; 40004254 <SensorWrite2B+0xc8>
40004248:	eb003b47 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
4000424c:	e3a04001 	mov	r4, #1
40004250:	eafffff7 	b	40004234 <SensorWrite2B+0xa8>
40004254:	40011030 	.word	0x40011030

40004258 <SensorWrite2B2>:
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004258:	e92d4070 	push	{r4, r5, r6, lr}
4000425c:	e24dd018 	sub	sp, sp, #24
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
40004260:	e3a0c002 	mov	ip, #2
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004264:	e1a06002 	mov	r6, r2
	/* Validate the I2C slave address. */
	//if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
	//	CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004268:	e5cd0008 	strb	r0, [sp, #8]
	preamble.buffer[1] = highAddr;
4000426c:	e5cd1009 	strb	r1, [sp, #9]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;
40004270:	e5cd3014 	strb	r3, [sp, #20]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004274:	e28d1014 	add	r1, sp, #20
40004278:	e3a02001 	mov	r2, #1
4000427c:	e3a03000 	mov	r3, #0
40004280:	e28d0008 	add	r0, sp, #8
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004284:	e3a04000 	mov	r4, #0
	preamble.length = 2; /*  Three byte preamble. */
40004288:	e5cdc010 	strb	ip, [sp, #16]
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
4000428c:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004290:	e1cd41b2 	strh	r4, [sp, #18]
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004294:	eb007db2 	bl	40023964 <CyU3PI2cTransmitBytes>
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
40004298:	e5dd3014 	ldrb	r3, [sp, #20]
4000429c:	e59f102c 	ldr	r1, [pc, #44]	; 400042d0 <SensorWrite2B2+0x78>
400042a0:	e1a02006 	mov	r2, r6
400042a4:	e58d5000 	str	r5, [sp]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400042a8:	e1a04000 	mov	r4, r0
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
400042ac:	e3a00004 	mov	r0, #4
400042b0:	eb003b2d 	bl	40012f6c <CyU3PDebugPrint>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042b4:	e3540000 	cmp	r4, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400042b8:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400042bc:	13a00ffa 	movne	r0, #1000	; 0x3e8
400042c0:	eb003c9a 	bl	40013530 <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
400042c4:	e1a00004 	mov	r0, r4
400042c8:	e28dd018 	add	sp, sp, #24
400042cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400042d0:	40011054 	.word	0x40011054

400042d4 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042d4:	e35000a0 	cmp	r0, #160	; 0xa0
400042d8:	13500070 	cmpne	r0, #112	; 0x70
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
400042dc:	e92d4010 	push	{r4, lr}
400042e0:	e1a0c000 	mov	ip, r0
400042e4:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042e8:	03a0e000 	moveq	lr, #0
400042ec:	13a0e001 	movne	lr, #1
400042f0:	1a00001a 	bne	40004360 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
400042f4:	e3530040 	cmp	r3, #64	; 0x40
400042f8:	8a000013 	bhi	4000434c <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
400042fc:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004300:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004304:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004308:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
4000430c:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004310:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004314:	e28d0004 	add	r0, sp, #4
40004318:	e59d1018 	ldr	r1, [sp, #24]
4000431c:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004320:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
40004324:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004328:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000432c:	eb007d8c 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004330:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004334:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004338:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000433c:	eb003c7b 	bl	40013530 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
40004340:	e1a00004 	mov	r0, r4
40004344:	e28dd010 	add	sp, sp, #16
40004348:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
4000434c:	e3a00004 	mov	r0, #4
40004350:	e59f101c 	ldr	r1, [pc, #28]	; 40004374 <SensorWrite+0xa0>
40004354:	eb003b04 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
40004358:	e3a04001 	mov	r4, #1
4000435c:	eafffff7 	b	40004340 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004360:	e3a00004 	mov	r0, #4
40004364:	e59f100c 	ldr	r1, [pc, #12]	; 40004378 <SensorWrite+0xa4>
40004368:	eb003aff 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
4000436c:	e3a04001 	mov	r4, #1
40004370:	eafffff2 	b	40004340 <SensorWrite+0x6c>
40004374:	40011074 	.word	0x40011074
40004378:	40011030 	.word	0x40011030

4000437c <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000437c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004380:	e35000a1 	cmp	r0, #161	; 0xa1
40004384:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004388:	e24dd01c 	sub	sp, sp, #28
4000438c:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004390:	03a0c000 	moveq	ip, #0
40004394:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004398:	e1a06001 	mov	r6, r1
4000439c:	e1a0e002 	mov	lr, r2
400043a0:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400043a4:	1a000021 	bne	40004430 <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400043a8:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043ac:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b0:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400043b4:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b8:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043bc:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043c0:	e1a01005 	mov	r1, r5
400043c4:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043c8:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
400043cc:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043d0:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400043d4:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043d8:	eb007d61 	bl	40023964 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400043dc:	e2502000 	subs	r2, r0, #0
400043e0:	1a000017 	bne	40004444 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400043e4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400043e8:	eb003c50 	bl	40013530 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400043ec:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400043f0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043f4:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400043f8:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043fc:	e1a01005 	mov	r1, r5
40004400:	e1a0200e 	mov	r2, lr
40004404:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004408:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
4000440c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004410:	eb007c4d 	bl	4002354c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004414:	e2504000 	subs	r4, r0, #0
40004418:	1a000012 	bne	40004468 <SensorRead2B+0xec>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
4000441c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004420:	eb003c42 	bl	40013530 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004424:	e1a00004 	mov	r0, r4
40004428:	e28dd01c 	add	sp, sp, #28
4000442c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004430:	e3a00004 	mov	r0, #4
40004434:	e59f1054 	ldr	r1, [pc, #84]	; 40004490 <SensorRead2B+0x114>
40004438:	eb003acb 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
4000443c:	e3a04001 	mov	r4, #1
40004440:	eafffff7 	b	40004424 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004444:	e5d5c001 	ldrb	ip, [r5, #1]
40004448:	e5d53000 	ldrb	r3, [r5]
4000444c:	e59f1040 	ldr	r1, [pc, #64]	; 40004494 <SensorRead2B+0x118>
40004450:	e3a00004 	mov	r0, #4
40004454:	e58dc000 	str	ip, [sp]
40004458:	eb003ac3 	bl	40012f6c <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000445c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004460:	eb003c32 	bl	40013530 <CyU3PBusyWait>
40004464:	eaffffe0 	b	400043ec <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004468:	e5d5c001 	ldrb	ip, [r5, #1]
4000446c:	e5d53000 	ldrb	r3, [r5]
40004470:	e59f1020 	ldr	r1, [pc, #32]	; 40004498 <SensorRead2B+0x11c>
40004474:	e1a02004 	mov	r2, r4
40004478:	e3a00004 	mov	r0, #4
4000447c:	e58dc000 	str	ip, [sp]
40004480:	eb003ab9 	bl	40012f6c <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004484:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004488:	eb003c28 	bl	40013530 <CyU3PBusyWait>
4000448c:	eaffffe4 	b	40004424 <SensorRead2B+0xa8>
40004490:	40011030 	.word	0x40011030
40004494:	40010ff8 	.word	0x40010ff8
40004498:	40011014 	.word	0x40011014

4000449c <SensorRead2B2>:
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000449c:	e92d4070 	push	{r4, r5, r6, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044a0:	e35000a1 	cmp	r0, #161	; 0xa1
400044a4:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044a8:	e24dd018 	sub	sp, sp, #24
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044ac:	03a0c000 	moveq	ip, #0
400044b0:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044b4:	e1a05001 	mov	r5, r1
400044b8:	e1a0e002 	mov	lr, r2
400044bc:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044c0:	1a000013 	bne	40004514 <SensorRead2B2+0x78>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400044c4:	e5c43000 	strb	r3, [r4]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044c8:	e3c06001 	bic	r6, r0, #1
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400044cc:	e5cde00e 	strb	lr, [sp, #14]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d0:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044d4:	e3a0e003 	mov	lr, #3
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d8:	e1a01004 	mov	r1, r4
400044dc:	e3a02001 	mov	r2, #1
400044e0:	e1a0300c 	mov	r3, ip
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400044e4:	e5cd500d 	strb	r5, [sp, #13]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044e8:	e5cd600c 	strb	r6, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044ec:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400044f0:	e1cdc1b6 	strh	ip, [sp, #22]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044f4:	eb007c14 	bl	4002354c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400044f8:	e2505000 	subs	r5, r0, #0
400044fc:	1a000009 	bne	40004528 <SensorRead2B2+0x8c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004500:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004504:	eb003c09 	bl	40013530 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004508:	e1a00005 	mov	r0, r5
4000450c:	e28dd018 	add	sp, sp, #24
40004510:	e8bd8070 	pop	{r4, r5, r6, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004514:	e3a00004 	mov	r0, #4
40004518:	e59f1030 	ldr	r1, [pc, #48]	; 40004550 <SensorRead2B2+0xb4>
4000451c:	eb003a92 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
40004520:	e3a05001 	mov	r5, #1
40004524:	eafffff7 	b	40004508 <SensorRead2B2+0x6c>
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004528:	e5d4c001 	ldrb	ip, [r4, #1]
4000452c:	e5d43000 	ldrb	r3, [r4]
40004530:	e59f101c 	ldr	r1, [pc, #28]	; 40004554 <SensorRead2B2+0xb8>
40004534:	e1a02005 	mov	r2, r5
40004538:	e3a00004 	mov	r0, #4
4000453c:	e58dc000 	str	ip, [sp]
40004540:	eb003a89 	bl	40012f6c <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004544:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004548:	eb003bf8 	bl	40013530 <CyU3PBusyWait>
4000454c:	eaffffed 	b	40004508 <SensorRead2B2+0x6c>
40004550:	40011030 	.word	0x40011030
40004554:	40011014 	.word	0x40011014

40004558 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004558:	e35000a1 	cmp	r0, #161	; 0xa1
4000455c:	13500071 	cmpne	r0, #113	; 0x71
	return apiRetStatus;
}


CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004560:	e92d4030 	push	{r4, r5, lr}
40004564:	e1a0c000 	mov	ip, r0
40004568:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000456c:	03a0e000 	moveq	lr, #0
40004570:	13a0e001 	movne	lr, #1
40004574:	1a00001c 	bne	400045ec <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004578:	e3530040 	cmp	r3, #64	; 0x40
4000457c:	8a000015 	bhi	400045d8 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004580:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004584:	e1a02003 	mov	r2, r3
40004588:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000458c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004590:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004594:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004598:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000459c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045a0:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
400045a4:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
400045a8:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400045ac:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
400045b0:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
400045b4:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045b8:	eb007be3 	bl	4002354c <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400045bc:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400045c0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400045c4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400045c8:	eb003bd8 	bl	40013530 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400045cc:	e1a00004 	mov	r0, r4
400045d0:	e28dd014 	add	sp, sp, #20
400045d4:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400045d8:	e3a00004 	mov	r0, #4
400045dc:	e59f101c 	ldr	r1, [pc, #28]	; 40004600 <SensorRead+0xa8>
400045e0:	eb003a61 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
400045e4:	e3a04001 	mov	r4, #1
400045e8:	eafffff7 	b	400045cc <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400045ec:	e3a00004 	mov	r0, #4
400045f0:	e59f100c 	ldr	r1, [pc, #12]	; 40004604 <SensorRead+0xac>
400045f4:	eb003a5c 	bl	40012f6c <CyU3PDebugPrint>
		return 1;
400045f8:	e3a04001 	mov	r4, #1
400045fc:	eafffff2 	b	400045cc <SensorRead+0x74>
40004600:	40011074 	.word	0x40011074
40004604:	40011030 	.word	0x40011030

40004608 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
40004608:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
4000460c:	e3a00016 	mov	r0, #22
40004610:	e3a01000 	mov	r1, #0
40004614:	eb00794f 	bl	40022b58 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004618:	e2502000 	subs	r2, r0, #0
4000461c:	1a000022 	bne	400046ac <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
40004620:	e59f1094 	ldr	r1, [pc, #148]	; 400046bc <SensorReset+0xb4>
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003a4f 	bl	40012f6c <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000462c:	eb001303 	bl	40009240 <_tx_time_get>
40004630:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004634:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004638:	eb00110e 	bl	40008a78 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000463c:	eb0012ff 	bl	40009240 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004640:	e1a04804 	lsl	r4, r4, #16
40004644:	e1a02824 	lsr	r2, r4, #16
40004648:	e59f1070 	ldr	r1, [pc, #112]	; 400046c0 <SensorReset+0xb8>
4000464c:	e1a00800 	lsl	r0, r0, #16
40004650:	e1a03820 	lsr	r3, r0, #16
40004654:	e3a00004 	mov	r0, #4
40004658:	eb003a43 	bl	40012f6c <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000465c:	eb0012f7 	bl	40009240 <_tx_time_get>
40004660:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004664:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004668:	eb001102 	bl	40008a78 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000466c:	eb0012f3 	bl	40009240 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004670:	e1a02804 	lsl	r2, r4, #16
40004674:	e1a02822 	lsr	r2, r2, #16
40004678:	e59f1040 	ldr	r1, [pc, #64]	; 400046c0 <SensorReset+0xb8>
4000467c:	e1a03800 	lsl	r3, r0, #16
40004680:	e1a03823 	lsr	r3, r3, #16
40004684:	e3a00004 	mov	r0, #4
40004688:	eb003a37 	bl	40012f6c <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000468c:	e3a00016 	mov	r0, #22
40004690:	e3a01001 	mov	r1, #1
40004694:	eb00792f 	bl	40022b58 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004698:	e2502000 	subs	r2, r0, #0
4000469c:	1a000002 	bne	400046ac <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a0:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046a4:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a8:	ea0010f2 	b	40008a78 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046ac:	e59f1010 	ldr	r1, [pc, #16]	; 400046c4 <SensorReset+0xbc>
400046b0:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046b4:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046b8:	ea003a2b 	b	40012f6c <CyU3PDebugPrint>
400046bc:	400110bc 	.word	0x400110bc
400046c0:	400110d0 	.word	0x400110d0
400046c4:	40011094 	.word	0x40011094

400046c8 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
400046c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400046cc:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400046d0:	e3a00052 	mov	r0, #82	; 0x52
400046d4:	e3a01030 	mov	r1, #48	; 0x30
400046d8:	e3a020f2 	mov	r2, #242	; 0xf2
400046dc:	e28d3004 	add	r3, sp, #4
400046e0:	ebfffe6d 	bl	4000409c <SensorRead2B.clone.1>
400046e4:	e3500000 	cmp	r0, #0
400046e8:	1a000002 	bne	400046f8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
400046ec:	e5dd3004 	ldrb	r3, [sp, #4]
400046f0:	e3530056 	cmp	r3, #86	; 0x56
400046f4:	0a000002 	beq	40004704 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400046f8:	e3a00004 	mov	r0, #4
400046fc:	e59f1008 	ldr	r1, [pc, #8]	; 4000470c <SensorInit+0x44>
40004700:	eb003a19 	bl	40012f6c <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
40004704:	e28dd00c 	add	sp, sp, #12
40004708:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000470c:	400110e4 	.word	0x400110e4

40004710 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004710:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004714:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004718:	e3a00052 	mov	r0, #82	; 0x52
4000471c:	e3a01030 	mov	r1, #48	; 0x30
40004720:	e3a020f2 	mov	r2, #242	; 0xf2
40004724:	e28d3004 	add	r3, sp, #4
40004728:	ebfffe5b 	bl	4000409c <SensorRead2B.clone.1>
4000472c:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
40004730:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004734:	1a000002 	bne	40004744 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004738:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
4000473c:	e2500056 	subs	r0, r0, #86	; 0x56
40004740:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
40004744:	e28dd00c 	add	sp, sp, #12
40004748:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000474c <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
4000474c:	e92d4010 	push	{r4, lr}
40004750:	e24dd008 	sub	sp, sp, #8
40004754:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004758:	e1a02000 	mov	r2, r0
4000475c:	e28d3004 	add	r3, sp, #4
40004760:	e3a00053 	mov	r0, #83	; 0x53
40004764:	ebfffe4c 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004768:	e59f1018 	ldr	r1, [pc, #24]	; 40004788 <SensorGetControl+0x3c>
4000476c:	e1a02004 	mov	r2, r4
40004770:	e5dd3004 	ldrb	r3, [sp, #4]
40004774:	e3a00004 	mov	r0, #4
40004778:	eb0039fb 	bl	40012f6c <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000477c:	e5dd0004 	ldrb	r0, [sp, #4]
40004780:	e28dd008 	add	sp, sp, #8
40004784:	e8bd8010 	pop	{r4, pc}
40004788:	40011108 	.word	0x40011108

4000478c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000478c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004790:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004794:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004798:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000479c:	e1a04000 	mov	r4, r0
400047a0:	e1a05002 	mov	r5, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
400047a4:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047a8:	e3a02001 	mov	r2, #1
400047ac:	e28d100c 	add	r1, sp, #12
400047b0:	e3a03000 	mov	r3, #0
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400047b4:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
400047b8:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047bc:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
400047c0:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047c4:	e1a0000d 	mov	r0, sp
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047c8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400047cc:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400047d0:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047d4:	eb007c62 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400047d8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400047dc:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400047e0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400047e4:	eb003b51 	bl	40013530 <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400047e8:	e3a0c001 	mov	ip, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047ec:	e1a0200c 	mov	r2, ip
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400047f0:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047f4:	e28d100c 	add	r1, sp, #12
400047f8:	e3a03000 	mov	r3, #0
400047fc:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004800:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004804:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004808:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000480c:	eb007c54 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004810:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004814:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004818:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000481c:	eb003b43 	bl	40013530 <CyU3PBusyWait>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
40004820:	e59f1018 	ldr	r1, [pc, #24]	; 40004840 <SensorSetControl+0xb4>
40004824:	e1a02004 	mov	r2, r4
40004828:	e1a03005 	mov	r3, r5
4000482c:	e3a00004 	mov	r0, #4
40004830:	eb0039cd 	bl	40012f6c <CyU3PDebugPrint>
//#endif
	return 0;
};
40004834:	e3a00000 	mov	r0, #0
40004838:	e28dd014 	add	sp, sp, #20
4000483c:	e8bd8030 	pop	{r4, r5, pc}
40004840:	40011128 	.word	0x40011128

40004844 <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
40004844:	e1a0c000 	mov	ip, r0
40004848:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000484c:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004850:	e28d3004 	add	r3, sp, #4
40004854:	e1a00002 	mov	r0, r2
40004858:	e1a0200c 	mov	r2, ip
4000485c:	ebfffe0e 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004860:	e5dd0004 	ldrb	r0, [sp, #4]
40004864:	e28dd00c 	add	sp, sp, #12
40004868:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000486c <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000486c:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004870:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004874:	e24dd010 	sub	sp, sp, #16
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004878:	e3a0e000 	mov	lr, #0
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
4000487c:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004880:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004884:	e5cd000c 	strb	r0, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004888:	e28d100c 	add	r1, sp, #12
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000488c:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004890:	e3a03000 	mov	r3, #0
40004894:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004898:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000489c:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400048a0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400048a4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400048a8:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048ac:	eb007c2c 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048b0:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048b4:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048b8:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048bc:	eb003b1b 	bl	40013530 <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400048c0:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048c4:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048c8:	e28d100c 	add	r1, sp, #12
400048cc:	e1a0200c 	mov	r2, ip
400048d0:	e3a03000 	mov	r3, #0
400048d4:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048d8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400048dc:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400048e0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048e4:	eb007c1e 	bl	40023964 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048e8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048ec:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048f0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048f4:	eb003b0d 	bl	40013530 <CyU3PBusyWait>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400048f8:	e3a00000 	mov	r0, #0
400048fc:	e28dd010 	add	sp, sp, #16
40004900:	e8bd8010 	pop	{r4, pc}

40004904 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004904:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004908:	e59f2210 	ldr	r2, [pc, #528]	; 40004b20 <I2cAppThread_Entry+0x21c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
4000490c:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004910:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004914:	e3a0effa 	mov	lr, #1000	; 0x3e8
40004918:	e284c02c 	add	ip, r4, #44	; 0x2c
4000491c:	e3a0300b 	mov	r3, #11
40004920:	e1a01004 	mov	r1, r4
40004924:	e59f01f8 	ldr	r0, [pc, #504]	; 40004b24 <I2cAppThread_Entry+0x220>
40004928:	e58de000 	str	lr, [sp]
4000492c:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
40004930:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004934:	e58d4004 	str	r4, [sp, #4]
40004938:	e58d4008 	str	r4, [sp, #8]
4000493c:	eb00184d 	bl	4000aa78 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004940:	eb00123e 	bl	40009240 <_tx_time_get>
40004944:	e59f11dc 	ldr	r1, [pc, #476]	; 40004b28 <I2cAppThread_Entry+0x224>
40004948:	e59f51dc 	ldr	r5, [pc, #476]	; 40004b2c <I2cAppThread_Entry+0x228>
4000494c:	e1a02000 	mov	r2, r0
40004950:	e3a00004 	mov	r0, #4
40004954:	eb003984 	bl	40012f6c <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004958:	e3a00032 	mov	r0, #50	; 0x32
4000495c:	eb001045 	bl	40008a78 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004960:	e59f01bc 	ldr	r0, [pc, #444]	; 40004b24 <I2cAppThread_Entry+0x220>
40004964:	eb001811 	bl	4000a9b0 <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004968:	ea000000 	b	40004970 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000496c:	eb0017f2 	bl	4000a93c <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004970:	e5d5201a 	ldrb	r2, [r5, #26]
40004974:	e3520000 	cmp	r2, #0
40004978:	0afffffb 	beq	4000496c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000497c:	e59f01a8 	ldr	r0, [pc, #424]	; 40004b2c <I2cAppThread_Entry+0x228>
40004980:	e59f11a8 	ldr	r1, [pc, #424]	; 40004b30 <I2cAppThread_Entry+0x22c>
40004984:	e5903010 	ldr	r3, [r0, #16]
40004988:	e3a00004 	mov	r0, #4
4000498c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004990:	eb003975 	bl	40012f6c <CyU3PDebugPrint>
40004994:	e59f7198 	ldr	r7, [pc, #408]	; 40004b34 <I2cAppThread_Entry+0x230>
40004998:	e59fb198 	ldr	fp, [pc, #408]	; 40004b38 <I2cAppThread_Entry+0x234>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000499c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049a0:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
400049a4:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
400049a8:	e3a02003 	mov	r2, #3
400049ac:	e28d3014 	add	r3, sp, #20
400049b0:	e3a01020 	mov	r1, #32
400049b4:	e59f0180 	ldr	r0, [pc, #384]	; 40004b3c <I2cAppThread_Entry+0x238>
400049b8:	e58d6000 	str	r6, [sp]
400049bc:	eb0014f5 	bl	40009d98 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049c0:	e1a01006 	mov	r1, r6
400049c4:	e597001c 	ldr	r0, [r7, #28]
400049c8:	eb0015ba 	bl	4000a0b8 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
400049cc:	e597001c 	ldr	r0, [r7, #28]
400049d0:	eb0015ed 	bl	4000a18c <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049d4:	e595001c 	ldr	r0, [r5, #28]
400049d8:	e1a01006 	mov	r1, r6
400049dc:	eb0015b5 	bl	4000a0b8 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400049e0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049e4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400049e8:	e3520000 	cmp	r2, #0
400049ec:	1a000008 	bne	40004a14 <I2cAppThread_Entry+0x110>
400049f0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400049f4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400049f8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049fc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
40004a00:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004a04:	e353003f 	cmp	r3, #63	; 0x3f
40004a08:	93520000 	cmpls	r2, #0
40004a0c:	0afffff8 	beq	400049f4 <I2cAppThread_Entry+0xf0>
40004a10:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
40004a14:	e3520000 	cmp	r2, #0
40004a18:	0a00002d 	beq	40004ad4 <I2cAppThread_Entry+0x1d0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a1c:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a20:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a24:	e083e083 	add	lr, r3, r3, lsl #1
40004a28:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a2c:	e242c014 	sub	ip, r2, #20
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a30:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
40004a34:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
40004a38:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
40004a3c:	e1daa0b8 	ldrh	sl, [sl, #8]
#if 1
					switch(lcCmdDes->CmdID){
40004a40:	e35c0003 	cmp	ip, #3
40004a44:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004a48:	ea00001a 	b	40004ab8 <I2cAppThread_Entry+0x1b4>
40004a4c:	40004ac4 	.word	0x40004ac4
40004a50:	40004aa8 	.word	0x40004aa8
40004a54:	40004a5c 	.word	0x40004a5c
40004a58:	40004a5c 	.word	0x40004a5c
						case 22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40004a5c:	e3a03082 	mov	r3, #130	; 0x82
40004a60:	ebffff81 	bl	4000486c <SensorSetIrisControl>
							delaytime = 300;
							break;
40004a64:	e3a01f4b 	mov	r1, #300	; 0x12c
					}
#endif
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					//delaytime =100; //temp add -6/17/2015
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004a68:	e3a02000 	mov	r2, #0
40004a6c:	e59f00b0 	ldr	r0, [pc, #176]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a70:	eb0017de 	bl	4000a9f0 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004a74:	e59f00a8 	ldr	r0, [pc, #168]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a78:	eb0017cc 	bl	4000a9b0 <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a7c:	e5d40001 	ldrb	r0, [r4, #1]
40004a80:	e5d41002 	ldrb	r1, [r4, #2]
40004a84:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004a88:	12800001 	addne	r0, r0, #1
40004a8c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004a90:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a94:	0a000014 	beq	40004aec <I2cAppThread_Entry+0x1e8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004a98:	e595001c 	ldr	r0, [r5, #28]
40004a9c:	eb0015ba 	bl	4000a18c <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004aa0:	eb0017a5 	bl	4000a93c <_txe_thread_relinquish>
		}
40004aa4:	eaffffbf 	b	400049a8 <I2cAppThread_Entry+0xa4>
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004aa8:	e3a03052 	mov	r3, #82	; 0x52
40004aac:	ebffff6e 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004ab0:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ab4:	eaffffeb 	b	40004a68 <I2cAppThread_Entry+0x164>
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004ab8:	ebffff33 	bl	4000478c <SensorSetControl>
40004abc:	e1a0100a 	mov	r1, sl
							break;
40004ac0:	eaffffe8 	b	40004a68 <I2cAppThread_Entry+0x164>
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40004ac4:	e3a03082 	mov	r3, #130	; 0x82
40004ac8:	ebffff67 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004acc:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ad0:	eaffffe4 	b	40004a68 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004ad4:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004ad8:	e59f0044 	ldr	r0, [pc, #68]	; 40004b24 <I2cAppThread_Entry+0x220>
40004adc:	eb0017c3 	bl	4000a9f0 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
40004ae0:	e59f003c 	ldr	r0, [pc, #60]	; 40004b24 <I2cAppThread_Entry+0x220>
40004ae4:	eb0017b1 	bl	4000a9b0 <_txe_timer_activate>
40004ae8:	eaffffea 	b	40004a98 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004aec:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
40004af0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004af4:	e35c001f 	cmp	ip, #31
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004af8:	824cc020 	subhi	ip, ip, #32
40004afc:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b00:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b04:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b08:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b0c:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b10:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
40004b14:	e5944034 	ldr	r4, [r4, #52]	; 0x34
40004b18:	e5854010 	str	r4, [r5, #16]
40004b1c:	eaffffdd 	b	40004a98 <I2cAppThread_Entry+0x194>
40004b20:	40004b40 	.word	0x40004b40
40004b24:	40032fc4 	.word	0x40032fc4
40004b28:	40011194 	.word	0x40011194
40004b2c:	40032ec4 	.word	0x40032ec4
40004b30:	400111a8 	.word	0x400111a8
40004b34:	40033110 	.word	0x40033110
40004b38:	40030000 	.word	0x40030000
40004b3c:	40030f90 	.word	0x40030f90

40004b40 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
40004b40:	e59f0008 	ldr	r0, [pc, #8]	; 40004b50 <I2CCmdCb+0x10>
40004b44:	e3a01020 	mov	r1, #32
40004b48:	e3a02000 	mov	r2, #0
40004b4c:	ea0014c1 	b	40009e58 <_txe_event_flags_set>
40004b50:	40030f90 	.word	0x40030f90

40004b54 <CyFxUvcApplnDmaCallback>:
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b54:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004b58:	e92d4030 	push	{r4, r5, lr}
40004b5c:	e1a04002 	mov	r4, r2
40004b60:	e24dd00c 	sub	sp, sp, #12
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b64:	0a00000b 	beq	40004b98 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
                        status, input->buffer_p.count, prodCount, consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004b68:	e3510010 	cmp	r1, #16
40004b6c:	1a000007 	bne	40004b90 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004b70:	e59f310c 	ldr	r3, [pc, #268]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
        streamingStarted = CyTrue;
40004b74:	e3a01001 	mov	r1, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b78:	e1d303b6 	ldrh	r0, [r3, #54]	; 0x36
        streamingStarted = CyTrue;
40004b7c:	e5831038 	str	r1, [r3, #56]	; 0x38
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b80:	e080c001 	add	ip, r0, r1
40004b84:	e1a0280c 	lsl	r2, ip, #16
40004b88:	e1a01822 	lsr	r1, r2, #16
40004b8c:	e1c313b6 	strh	r1, [r3, #54]	; 0x36
        streamingStarted = CyTrue;
    }
}
40004b90:	e28dd00c 	add	sp, sp, #12
40004b94:	e8bd8030 	pop	{r4, r5, pc}
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004b98:	e1d220b4 	ldrh	r2, [r2, #4]
40004b9c:	e59f30e4 	ldr	r3, [pc, #228]	; 40004c88 <CyFxUvcApplnDmaCallback+0x134>
40004ba0:	e1520003 	cmp	r2, r3
40004ba4:	0a00002b 	beq	40004c58 <CyFxUvcApplnDmaCallback+0x104>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004ba8:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004bac:	e59f10d8 	ldr	r1, [pc, #216]	; 40004c8c <CyFxUvcApplnDmaCallback+0x138>
40004bb0:	e245000c 	sub	r0, r5, #12
40004bb4:	e3a0200c 	mov	r2, #12
40004bb8:	ebfffb45 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bbc:	e555200b 	ldrb	r2, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bc0:	e59f30bc 	ldr	r3, [pc, #188]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bc4:	e3821002 	orr	r1, r2, #2
40004bc8:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bcc:	e1d3c2ba 	ldrh	ip, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004bd0:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bd4:	e28c0001 	add	r0, ip, #1
                pbc = input->buffer_p.count;
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004bd8:	e3a02001 	mov	r2, #1
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bdc:	e1c302ba 	strh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004be0:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004be4:	e5832030 	str	r2, [r3, #48]	; 0x30
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004be8:	e1d3e3b4 	ldrh	lr, [r3, #52]	; 0x34
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bec:	e281200c 	add	r2, r1, #12
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004bf0:	e28ec001 	add	ip, lr, #1
40004bf4:	e1a0080c 	lsl	r0, ip, #16
40004bf8:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004bfc:	e1a01802 	lsl	r1, r2, #16
40004c00:	e1a01821 	lsr	r1, r1, #16
40004c04:	e3a02000 	mov	r2, #0
40004c08:	e59f0080 	ldr	r0, [pc, #128]	; 40004c90 <CyFxUvcApplnDmaCallback+0x13c>
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c0c:	e1c3e3b4 	strh	lr, [r3, #52]	; 0x34
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004c10:	eb0049a2 	bl	400172a0 <CyU3PDmaMultiChannelCommitBuffer>
                //lineCount = 0; //res test
               hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c14:	e59f1068 	ldr	r1, [pc, #104]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
40004c18:	e2502000 	subs	r2, r0, #0
40004c1c:	0affffdb 	beq	40004b90 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004c20:	e1d103b4 	ldrh	r0, [r1, #52]	; 0x34
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004c24:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
            {
                prodCount--;
40004c28:	e240e001 	sub	lr, r0, #1
40004c2c:	e1a0c80e 	lsl	ip, lr, #16
40004c30:	e1a0082c 	lsr	r0, ip, #16
40004c34:	e1c103b4 	strh	r0, [r1, #52]	; 0x34
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004c38:	e1d1e3b4 	ldrh	lr, [r1, #52]	; 0x34
40004c3c:	e1d1c3b6 	ldrh	ip, [r1, #54]	; 0x36
40004c40:	e3a00004 	mov	r0, #4
40004c44:	e59f1048 	ldr	r1, [pc, #72]	; 40004c94 <CyFxUvcApplnDmaCallback+0x140>
40004c48:	e58de000 	str	lr, [sp]
40004c4c:	e58dc004 	str	ip, [sp, #4]
40004c50:	eb0038c5 	bl	40012f6c <CyU3PDebugPrint>
40004c54:	eaffffcd 	b	40004b90 <CyFxUvcApplnDmaCallback+0x3c>

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004c58:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004c5c:	e59f1028 	ldr	r1, [pc, #40]	; 40004c8c <CyFxUvcApplnDmaCallback+0x138>
40004c60:	e24e000c 	sub	r0, lr, #12
40004c64:	e3a0200c 	mov	r2, #12
40004c68:	ebfffb19 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004c6c:	e59f3010 	ldr	r3, [pc, #16]	; 40004c84 <CyFxUvcApplnDmaCallback+0x130>
40004c70:	e1d410b4 	ldrh	r1, [r4, #4]
40004c74:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004c78:	e28c0001 	add	r0, ip, #1
40004c7c:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004c80:	eaffffd8 	b	40004be8 <CyFxUvcApplnDmaCallback+0x94>
40004c84:	40030f90 	.word	0x40030f90
40004c88:	00003ff0 	.word	0x00003ff0
40004c8c:	40030480 	.word	0x40030480
40004c90:	40032ee4 	.word	0x40032ee4
40004c94:	400111cc 	.word	0x400111cc

40004c98 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004c98:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004c9c:	e92d4070 	push	{r4, r5, r6, lr}
40004ca0:	e1a03001 	mov	r3, r1
40004ca4:	e24dd010 	sub	sp, sp, #16
40004ca8:	e1a04000 	mov	r4, r0
    switch (evtype)
40004cac:	0a000036 	beq	40004d8c <CyFxUVCApplnUSBEventCB+0xf4>
40004cb0:	e3500004 	cmp	r0, #4
40004cb4:	0a00001f 	beq	40004d38 <CyFxUVCApplnUSBEventCB+0xa0>
40004cb8:	e3500001 	cmp	r0, #1
40004cbc:	0a000001 	beq	40004cc8 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004cc0:	e28dd010 	add	sp, sp, #16
40004cc4:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cc8:	e59f5128 	ldr	r5, [pc, #296]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004ccc:	e1a02000 	mov	r2, r0
40004cd0:	e59f1124 	ldr	r1, [pc, #292]	; 40004dfc <CyFxUVCApplnUSBEventCB+0x164>
40004cd4:	e3a00004 	mov	r0, #4
40004cd8:	eb0038a3 	bl	40012f6c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004cdc:	e1a00004 	mov	r0, r4
40004ce0:	eb0059b1 	bl	4001b3ac <CyU3PGpifDisable>
            gpif_initialized = 0;
40004ce4:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ce8:	e1a01004 	mov	r1, r4
40004cec:	e1a00005 	mov	r0, r5
40004cf0:	e3a02002 	mov	r2, #2
40004cf4:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004cf8:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            isUsbConnected = CyFalse;
40004cfc:	e585c040 	str	ip, [r5, #64]	; 0x40
            streamingStarted = CyFalse;
40004d00:	e585c038 	str	ip, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d04:	e58dc000 	str	ip, [sp]
40004d08:	eb001422 	bl	40009d98 <_txe_event_flags_get>
40004d0c:	e2504000 	subs	r4, r0, #0
40004d10:	1affffea 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d14:	e3e01001 	mvn	r1, #1
40004d18:	e3a02002 	mov	r2, #2
40004d1c:	e1a00005 	mov	r0, r5
40004d20:	eb00144c 	bl	40009e58 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004d24:	e1a00005 	mov	r0, r5
40004d28:	e3a01002 	mov	r1, #2
40004d2c:	e1a02004 	mov	r2, r4
40004d30:	eb001448 	bl	40009e58 <_txe_event_flags_set>
40004d34:	eaffffe1 	b	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d38:	e59f50b8 	ldr	r5, [pc, #184]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d3c:	e59f10bc 	ldr	r1, [pc, #188]	; 40004e00 <CyFxUVCApplnUSBEventCB+0x168>
40004d40:	e1a02000 	mov	r2, r0
40004d44:	eb003888 	bl	40012f6c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004d48:	e3a00001 	mov	r0, #1
40004d4c:	eb005996 	bl	4001b3ac <CyU3PGpifDisable>
            gpif_initialized = 0;
40004d50:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d54:	e3a01001 	mov	r1, #1
40004d58:	e3a02002 	mov	r2, #2
40004d5c:	e1a00005 	mov	r0, r5
40004d60:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d64:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004d68:	e585c038 	str	ip, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d6c:	e58dc000 	str	ip, [sp]
40004d70:	eb001408 	bl	40009d98 <_txe_event_flags_get>
40004d74:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004d78:	01a00005 	moveq	r0, r5
40004d7c:	03e01001 	mvneq	r1, #1
40004d80:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004d84:	1affffcd 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
40004d88:	eaffffe4 	b	40004d20 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004d8c:	e59f5064 	ldr	r5, [pc, #100]	; 40004df8 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004d90:	e1a02000 	mov	r2, r0
40004d94:	e59f1068 	ldr	r1, [pc, #104]	; 40004e04 <CyFxUVCApplnUSBEventCB+0x16c>
40004d98:	e3a00004 	mov	r0, #4
40004d9c:	eb003872 	bl	40012f6c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004da0:	e3a00001 	mov	r0, #1
40004da4:	eb005980 	bl	4001b3ac <CyU3PGpifDisable>
            gpif_initialized = 0;
40004da8:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dac:	e1a00005 	mov	r0, r5
40004db0:	e3a01001 	mov	r1, #1
40004db4:	e1a02004 	mov	r2, r4
40004db8:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004dbc:	e585603c 	str	r6, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004dc0:	e5856038 	str	r6, [r5, #56]	; 0x38
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dc4:	e58d6000 	str	r6, [sp]
40004dc8:	eb0013f2 	bl	40009d98 <_txe_event_flags_get>
40004dcc:	e2506000 	subs	r6, r0, #0
40004dd0:	1affffba 	bne	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dd4:	e1a02004 	mov	r2, r4
40004dd8:	e1a00005 	mov	r0, r5
40004ddc:	e3e01001 	mvn	r1, #1
40004de0:	eb00141c 	bl	40009e58 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004de4:	e1a00005 	mov	r0, r5
40004de8:	e1a01004 	mov	r1, r4
40004dec:	e1a02006 	mov	r2, r6
40004df0:	eb001418 	bl	40009e58 <_txe_event_flags_set>
40004df4:	eaffffb1 	b	40004cc0 <CyFxUVCApplnUSBEventCB+0x28>
40004df8:	40030f90 	.word	0x40030f90
40004dfc:	4001125c 	.word	0x4001125c
40004e00:	40011218 	.word	0x40011218
40004e04:	40011238 	.word	0x40011238

40004e08 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e08:	e59f32c0 	ldr	r3, [pc, #704]	; 400050d0 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e10:	e59fc2bc 	ldr	ip, [pc, #700]	; 400050d4 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e14:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e18:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e1c:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e20:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e24:	e59f22ac 	ldr	r2, [pc, #684]	; 400050d8 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e28:	e59f02ac 	ldr	r0, [pc, #684]	; 400050dc <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e2c:	e59f32ac 	ldr	r3, [pc, #684]	; 400050e0 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e30:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e34:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e38:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e3c:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e40:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e44:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e48:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e4c:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004e50:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004e54:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e58:	0a00004f 	beq	40004f9c <CyFxUVCApplnUSBSetupCB+0x194>
40004e5c:	9a000006 	bls	40004e7c <CyFxUVCApplnUSBSetupCB+0x74>
40004e60:	e3540021 	cmp	r4, #33	; 0x21
40004e64:	0a00003a 	beq	40004f54 <CyFxUVCApplnUSBSetupCB+0x14c>
40004e68:	e35400a1 	cmp	r4, #161	; 0xa1
40004e6c:	0a000038 	beq	40004f54 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004e70:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004e74:	e28dd010 	add	sp, sp, #16
40004e78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004e7c:	e3540001 	cmp	r4, #1
40004e80:	1afffffa 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004e84:	e358000b 	cmp	r8, #11
40004e88:	1afffff8 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004e8c:	e3550001 	cmp	r5, #1
40004e90:	1afffff6 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
40004e94:	e3570000 	cmp	r7, #0
40004e98:	1afffff4 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004e9c:	e59f4240 	ldr	r4, [pc, #576]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004ea0:	e59f1240 	ldr	r1, [pc, #576]	; 400050e8 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004ea4:	e3a00004 	mov	r0, #4
40004ea8:	eb00382f 	bl	40012f6c <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004eac:	e1a00005 	mov	r0, r5
40004eb0:	eb00593d 	bl	4001b3ac <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004eb4:	e1a01005 	mov	r1, r5
40004eb8:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004ebc:	e584703c 	str	r7, [r4, #60]	; 0x3c
                    streamingStarted = CyFalse;
40004ec0:	e5847038 	str	r7, [r4, #56]	; 0x38
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ec4:	eb0062ca 	bl	4001d9f4 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004ec8:	e3a00064 	mov	r0, #100	; 0x64
40004ecc:	eb003997 	bl	40013530 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004ed0:	e59f0214 	ldr	r0, [pc, #532]	; 400050ec <CyFxUVCApplnUSBSetupCB+0x2e4>
40004ed4:	eb004d2b 	bl	40018388 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ed8:	e3a00083 	mov	r0, #131	; 0x83
40004edc:	eb005ebe 	bl	4001c9dc <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004ee0:	e1a01007 	mov	r1, r7
40004ee4:	e3a00083 	mov	r0, #131	; 0x83
40004ee8:	eb0062c1 	bl	4001d9f4 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004eec:	e3a00064 	mov	r0, #100	; 0x64
40004ef0:	eb00398e 	bl	40013530 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004ef4:	e1a01007 	mov	r1, r7
40004ef8:	e1a02005 	mov	r2, r5
40004efc:	e3a00083 	mov	r0, #131	; 0x83
40004f00:	eb006381 	bl	4001dd0c <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004f04:	eb005dbc 	bl	4001c5fc <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004f08:	e5845044 	str	r5, [r4, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f0c:	e1a00004 	mov	r0, r4
40004f10:	e1a01005 	mov	r1, r5
40004f14:	e3a02002 	mov	r2, #2
40004f18:	e28d300c 	add	r3, sp, #12
40004f1c:	e58d7000 	str	r7, [sp]
40004f20:	eb00139c 	bl	40009d98 <_txe_event_flags_get>
40004f24:	e2506000 	subs	r6, r0, #0
40004f28:	1a00002e 	bne	40004fe8 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f2c:	e3e01001 	mvn	r1, #1
40004f30:	e3a02002 	mov	r2, #2
40004f34:	e1a00004 	mov	r0, r4
40004f38:	eb0013c6 	bl	40009e58 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f3c:	e1a00004 	mov	r0, r4
40004f40:	e3a01002 	mov	r1, #2
40004f44:	e1a02006 	mov	r2, r6
40004f48:	eb0013c2 	bl	40009e58 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004f4c:	e1a00005 	mov	r0, r5
40004f50:	eaffffc7 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004f54:	e21550ff 	ands	r5, r5, #255	; 0xff
40004f58:	1a00001a 	bne	40004fc8 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004f5c:	e1a02005 	mov	r2, r5
40004f60:	e59f017c 	ldr	r0, [pc, #380]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004f64:	e3a01004 	mov	r1, #4
40004f68:	eb0013ba 	bl	40009e58 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f6c:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f70:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f74:	0affffbe 	beq	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004f78:	e59f1170 	ldr	r1, [pc, #368]	; 400050f0 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004f7c:	e3a00004 	mov	r0, #4
40004f80:	eb0037f9 	bl	40012f6c <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004f84:	e1a00005 	mov	r0, r5
40004f88:	e3a01001 	mov	r1, #1
40004f8c:	e1a02005 	mov	r2, r5
40004f90:	eb00635d 	bl	4001dd0c <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f94:	e3a00001 	mov	r0, #1
40004f98:	eaffffb5 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004f9c:	e3580001 	cmp	r8, #1
40004fa0:	1affffb2 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004fa4:	e3550083 	cmp	r5, #131	; 0x83
40004fa8:	1affffb0 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004fac:	e59f7130 	ldr	r7, [pc, #304]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fb0:	e5976038 	ldr	r6, [r7, #56]	; 0x38
40004fb4:	e3560001 	cmp	r6, #1
40004fb8:	0a000015 	beq	40005014 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004fbc:	eb005d8e 	bl	4001c5fc <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004fc0:	e1a00008 	mov	r0, r8
40004fc4:	eaffffaa 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004fc8:	e3550001 	cmp	r5, #1
40004fcc:	1affffa7 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004fd0:	e3a02000 	mov	r2, #0
40004fd4:	e59f0108 	ldr	r0, [pc, #264]	; 400050e4 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fd8:	e3a01008 	mov	r1, #8
40004fdc:	eb00139d 	bl	40009e58 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004fe0:	e2502000 	subs	r2, r0, #0
40004fe4:	1a000001 	bne	40004ff0 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004fe8:	e1a00005 	mov	r0, r5
40004fec:	eaffffa0 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004ff0:	e59f10fc 	ldr	r1, [pc, #252]	; 400050f4 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004ff4:	e3a00004 	mov	r0, #4
40004ff8:	eb0037db 	bl	40012f6c <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ffc:	e3a00000 	mov	r0, #0
40005000:	e1a01005 	mov	r1, r5
40005004:	e1a02000 	mov	r2, r0
40005008:	eb00633f 	bl	4001dd0c <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
4000500c:	e1a00005 	mov	r0, r5
40005010:	eaffff97 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40005014:	e59f10dc 	ldr	r1, [pc, #220]	; 400050f8 <CyFxUVCApplnUSBSetupCB+0x2f0>
40005018:	e3a00004 	mov	r0, #4
4000501c:	eb0037d2 	bl	40012f6c <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005020:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40005024:	e1a00006 	mov	r0, r6
40005028:	eb0058df 	bl	4001b3ac <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
4000502c:	e1a01006 	mov	r1, r6
40005030:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005034:	e587803c 	str	r8, [r7, #60]	; 0x3c
                        streamingStarted = CyFalse;
40005038:	e5878038 	str	r8, [r7, #56]	; 0x38

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
4000503c:	eb00626c 	bl	4001d9f4 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005040:	e3a00064 	mov	r0, #100	; 0x64
40005044:	eb003939 	bl	40013530 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40005048:	e59f009c 	ldr	r0, [pc, #156]	; 400050ec <CyFxUVCApplnUSBSetupCB+0x2e4>
4000504c:	eb004ccd 	bl	40018388 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40005050:	e1a00005 	mov	r0, r5
40005054:	eb005e60 	bl	4001c9dc <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40005058:	e1a01008 	mov	r1, r8
4000505c:	e1a00005 	mov	r0, r5
40005060:	eb006263 	bl	4001d9f4 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40005064:	e3a00064 	mov	r0, #100	; 0x64
40005068:	eb003930 	bl	40013530 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
4000506c:	e1a01008 	mov	r1, r8
40005070:	e1a02006 	mov	r2, r6
40005074:	e1a00005 	mov	r0, r5
40005078:	eb006323 	bl	4001dd0c <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
4000507c:	eb005d5e 	bl	4001c5fc <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40005080:	e5876044 	str	r6, [r7, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40005084:	e1a00007 	mov	r0, r7
40005088:	e1a01006 	mov	r1, r6
4000508c:	e1a02004 	mov	r2, r4
40005090:	e28d300c 	add	r3, sp, #12
40005094:	e58d8000 	str	r8, [sp]
40005098:	eb00133e 	bl	40009d98 <_txe_event_flags_get>
4000509c:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050a0:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
400050a4:	1affff72 	bne	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
400050a8:	e3e01001 	mvn	r1, #1
400050ac:	e1a02004 	mov	r2, r4
400050b0:	e1a00007 	mov	r0, r7
400050b4:	eb001367 	bl	40009e58 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
400050b8:	e1a00007 	mov	r0, r7
400050bc:	e1a01004 	mov	r1, r4
400050c0:	e1a02005 	mov	r2, r5
400050c4:	eb001363 	bl	40009e58 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
400050c8:	e1a00006 	mov	r0, r6
400050cc:	eaffff68 	b	40004e74 <CyFxUVCApplnUSBSetupCB+0x6c>
400050d0:	40032ec0 	.word	0x40032ec0
400050d4:	4003310c 	.word	0x4003310c
400050d8:	40032fc0 	.word	0x40032fc0
400050dc:	40032ff0 	.word	0x40032ff0
400050e0:	40032ff2 	.word	0x40032ff2
400050e4:	40030f90 	.word	0x40030f90
400050e8:	400112e8 	.word	0x400112e8
400050ec:	40032ee4 	.word	0x40032ee4
400050f0:	4001127c 	.word	0x4001127c
400050f4:	400112b4 	.word	0x400112b4
400050f8:	40011300 	.word	0x40011300

400050fc <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
400050fc:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40005100:	e92d4010 	push	{r4, lr}
40005104:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40005108:	18bd8010 	popne	{r4, pc}
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
4000510c:	e59f30cc 	ldr	r3, [pc, #204]	; 400051e0 <CyFxGpifCB+0xe4>
40005110:	e5d33048 	ldrb	r3, [r3, #72]	; 0x48
40005114:	e3530003 	cmp	r3, #3
40005118:	0a000021 	beq	400051a4 <CyFxGpifCB+0xa8>
            	//lineCount++;
            	return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
4000511c:	e3530002 	cmp	r3, #2
40005120:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40005124:	e2410008 	sub	r0, r1, #8
40005128:	e350000a 	cmp	r0, #10
4000512c:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40005130:	ea000023 	b	400051c4 <CyFxGpifCB+0xc8>
40005134:	40005164 	.word	0x40005164
40005138:	400051c4 	.word	0x400051c4
4000513c:	400051c4 	.word	0x400051c4
40005140:	40005160 	.word	0x40005160
40005144:	400051c4 	.word	0x400051c4
40005148:	400051c4 	.word	0x400051c4
4000514c:	400051c4 	.word	0x400051c4
40005150:	4000519c 	.word	0x4000519c
40005154:	400051c4 	.word	0x400051c4
40005158:	400051c4 	.word	0x400051c4
4000515c:	40005160 	.word	0x40005160
40005160:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005164:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005168:	e59f0074 	ldr	r0, [pc, #116]	; 400051e4 <CyFxGpifCB+0xe8>
4000516c:	eb004fb6 	bl	4001904c <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005170:	e2502000 	subs	r2, r0, #0
40005174:	0afffff9 	beq	40005160 <CyFxGpifCB+0x64>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005178:	e3a00004 	mov	r0, #4
4000517c:	e59f1064 	ldr	r1, [pc, #100]	; 400051e8 <CyFxGpifCB+0xec>
40005180:	eb003779 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40005184:	e59f1060 	ldr	r1, [pc, #96]	; 400051ec <CyFxGpifCB+0xf0>
40005188:	e3a00004 	mov	r0, #4
4000518c:	eb003776 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005190:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40005194:	eb000e37 	bl	40008a78 <_tx_thread_sleep>
40005198:	eafffff9 	b	40005184 <CyFxGpifCB+0x88>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
4000519c:	e3a01001 	mov	r1, #1
400051a0:	eafffff0 	b	40005168 <CyFxGpifCB+0x6c>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
400051a4:	e241200b 	sub	r2, r1, #11
400051a8:	e3520003 	cmp	r2, #3
400051ac:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400051b0:	ea000006 	b	400051d0 <CyFxGpifCB+0xd4>
400051b4:	40005164 	.word	0x40005164
400051b8:	4000519c 	.word	0x4000519c
400051bc:	40005160 	.word	0x40005160
400051c0:	40005160 	.word	0x40005160
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
400051c4:	e59f1024 	ldr	r1, [pc, #36]	; 400051f0 <CyFxGpifCB+0xf4>
400051c8:	e3a00001 	mov	r0, #1
400051cc:	eb003766 	bl	40012f6c <CyU3PDebugPrint>
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
400051d0:	e59f101c 	ldr	r1, [pc, #28]	; 400051f4 <CyFxGpifCB+0xf8>
400051d4:	e3a00004 	mov	r0, #4
    }
   // CyU3PDebugPrint(4,"\r\n commiteof state = %d",currentState);
}
400051d8:	e8bd4010 	pop	{r4, lr}
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
400051dc:	ea003762 	b	40012f6c <CyU3PDebugPrint>
400051e0:	40030f90 	.word	0x40030f90
400051e4:	40032ee4 	.word	0x40032ee4
400051e8:	4001133c 	.word	0x4001133c
400051ec:	4001136c 	.word	0x4001136c
400051f0:	40011324 	.word	0x40011324
400051f4:	40011380 	.word	0x40011380

400051f8 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400051f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400051fc:	e59f4208 	ldr	r4, [pc, #520]	; 4000540c <I2CCmdHandler+0x214>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
40005200:	e24dd03c 	sub	sp, sp, #60	; 0x3c
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005204:	e5d41053 	ldrb	r1, [r4, #83]	; 0x53
//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005208:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
4000520c:	e5d4604d 	ldrb	r6, [r4, #77]	; 0x4d
	CmdDataLen = I2CCMDArry[8];
40005210:	e5d47054 	ldrb	r7, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005214:	e5d4e04e 	ldrb	lr, [r4, #78]	; 0x4e
40005218:	e5d4804f 	ldrb	r8, [r4, #79]	; 0x4f
4000521c:	e5d4a050 	ldrb	sl, [r4, #80]	; 0x50
40005220:	e5d49051 	ldrb	r9, [r4, #81]	; 0x51
40005224:	e5d4b052 	ldrb	fp, [r4, #82]	; 0x52
40005228:	e58d1014 	str	r1, [sp, #20]
4000522c:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
40005230:	e3a00004 	mov	r0, #4
40005234:	e58d301c 	str	r3, [sp, #28]
40005238:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
4000523c:	e59f11cc 	ldr	r1, [pc, #460]	; 40005410 <I2CCmdHandler+0x218>
40005240:	e1a02005 	mov	r2, r5
40005244:	e1a03006 	mov	r3, r6
40005248:	e58de000 	str	lr, [sp]
4000524c:	e98d0500 	stmib	sp, {r8, sl}
40005250:	e58d900c 	str	r9, [sp, #12]
40005254:	e58db010 	str	fp, [sp, #16]
40005258:	e58d7018 	str	r7, [sp, #24]
4000525c:	e58dc020 	str	ip, [sp, #32]
40005260:	eb003741 	bl	40012f6c <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
40005264:	e3550000 	cmp	r5, #0
40005268:	1a000015 	bne	400052c4 <I2CCmdHandler+0xcc>
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
4000526c:	e3a0000f 	mov	r0, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			if(CmdRegLen == 2){
40005270:	e3560002 	cmp	r6, #2
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005274:	e5c40057 	strb	r0, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			if(CmdRegLen == 2){
40005278:	0a000025 	beq	40005314 <I2CCmdHandler+0x11c>
				SensorRead2B2(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|0x1, 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
4000527c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005280:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005284:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005288:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
4000528c:	e28dc034 	add	ip, sp, #52	; 0x34
40005290:	e3800001 	orr	r0, r0, #1
40005294:	e3811001 	orr	r1, r1, #1
40005298:	e58dc000 	str	ip, [sp]
4000529c:	ebfffc36 	bl	4000437c <SensorRead2B>
				I2CCMDArry[9] = buf[0];
400052a0:	e5dd3034 	ldrb	r3, [sp, #52]	; 0x34
				if(CmdDataLen == 2){
400052a4:	e3570002 	cmp	r7, #2
			if(CmdRegLen == 2){
				SensorRead2B2(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|0x1, 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
				I2CCMDArry[9] = buf[0];
400052a8:	e5c43055 	strb	r3, [r4, #85]	; 0x55
				if(CmdDataLen == 2){
					I2CCMDArry[10] = buf[1];
400052ac:	05dd3035 	ldrbeq	r3, [sp, #53]	; 0x35
400052b0:	05c43056 	strbeq	r3, [r4, #86]	; 0x56
				}
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400052b4:	e3e02000 	mvn	r2, #0
400052b8:	e5c42057 	strb	r2, [r4, #87]	; 0x57
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
400052bc:	e28dd03c 	add	sp, sp, #60	; 0x3c
400052c0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
400052c4:	e3550001 	cmp	r5, #1
400052c8:	1afffffb 	bne	400052bc <I2CCmdHandler+0xc4>
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
400052cc:	e3560002 	cmp	r6, #2
400052d0:	0a000019 	beq	4000533c <I2CCmdHandler+0x144>
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400052d4:	e5d4304f 	ldrb	r3, [r4, #79]	; 0x4f
400052d8:	e20310fe 	and	r1, r3, #254	; 0xfe
400052dc:	e3510082 	cmp	r1, #130	; 0x82
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400052e0:	15d45050 	ldrbne	r5, [r4, #80]	; 0x50
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400052e4:	1a000002 	bne	400052f4 <I2CCmdHandler+0xfc>
400052e8:	e5d45050 	ldrb	r5, [r4, #80]	; 0x50
400052ec:	e3550030 	cmp	r5, #48	; 0x30
400052f0:	0a000032 	beq	400053c0 <I2CCmdHandler+0x1c8>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
400052f4:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
				}
				else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
400052f8:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
400052fc:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005300:	e1a02005 	mov	r2, r5
40005304:	e20000fe 	and	r0, r0, #254	; 0xfe
40005308:	e58de000 	str	lr, [sp]
4000530c:	ebfffb9e 	bl	4000418c <SensorWrite2B>
40005310:	eaffffe9 	b	400052bc <I2CCmdHandler+0xc4>

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			if(CmdRegLen == 2){
				SensorRead2B2(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|0x1, 0, I2CCMDArry[4], I2CCMDArry[9]);
40005314:	e5d4204f 	ldrb	r2, [r4, #79]	; 0x4f
40005318:	e5d4e04e 	ldrb	lr, [r4, #78]	; 0x4e
4000531c:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005320:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005324:	e3821001 	orr	r1, r2, #1
40005328:	e38e0001 	orr	r0, lr, #1
4000532c:	e1a02005 	mov	r2, r5
40005330:	e58dc000 	str	ip, [sp]
40005334:	ebfffc58 	bl	4000449c <SensorRead2B2>
40005338:	eaffffdd 	b	400052b4 <I2CCmdHandler+0xbc>
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
4000533c:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
40005340:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005344:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005348:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
4000534c:	e20200fe 	and	r0, r2, #254	; 0xfe
40005350:	e3a02000 	mov	r2, #0
40005354:	e58de000 	str	lr, [sp]
40005358:	ebfffbbe 	bl	40004258 <SensorWrite2B2>
4000535c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005360:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005364:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005368:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
4000536c:	e3a02000 	mov	r2, #0
40005370:	e20000fe 	and	r0, r0, #254	; 0xfe
40005374:	e58dc000 	str	ip, [sp]
40005378:	ebfffbb6 	bl	40004258 <SensorWrite2B2>
4000537c:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
40005380:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005384:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005388:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
4000538c:	e20200fe 	and	r0, r2, #254	; 0xfe
40005390:	e3a02000 	mov	r2, #0
40005394:	e58dc000 	str	ip, [sp]
40005398:	ebfffbae 	bl	40004258 <SensorWrite2B2>
4000539c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
400053a0:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
400053a4:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
400053a8:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
400053ac:	e3a02000 	mov	r2, #0
400053b0:	e20000fe 	and	r0, r0, #254	; 0xfe
400053b4:	e58dc000 	str	ip, [sp]
400053b8:	ebfffba6 	bl	40004258 <SensorWrite2B2>
400053bc:	eaffffbe 	b	400052bc <I2CCmdHandler+0xc4>
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
400053c0:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
400053c4:	e3530010 	cmp	r3, #16
400053c8:	1affffca 	bne	400052f8 <I2CCmdHandler+0x100>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
400053cc:	e59f4040 	ldr	r4, [pc, #64]	; 40005414 <I2CCmdHandler+0x21c>
400053d0:	e3e01000 	mvn	r1, #0
400053d4:	e594001c 	ldr	r0, [r4, #28]
400053d8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400053dc:	eb001335 	bl	4000a0b8 <_txe_mutex_get>
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
400053e0:	e3a0c000 	mov	ip, #0
400053e4:	e1a00004 	mov	r0, r4
400053e8:	e3a01017 	mov	r1, #23
400053ec:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
400053f0:	e1a03005 	mov	r3, r5
400053f4:	e58dc000 	str	ip, [sp]
400053f8:	e58dc004 	str	ip, [sp, #4]
400053fc:	ebfff82d 	bl	400034b8 <cmdSet>
					CyU3PMutexPut(cmdQuptr->ringMux);
40005400:	e594001c 	ldr	r0, [r4, #28]
40005404:	eb001360 	bl	4000a18c <_txe_mutex_put>
40005408:	eaffffab 	b	400052bc <I2CCmdHandler+0xc4>
4000540c:	40030f90 	.word	0x40030f90
40005410:	40011398 	.word	0x40011398
40005414:	40032ec4 	.word	0x40032ec4

40005418 <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005418:	e92d4070 	push	{r4, r5, r6, lr}
4000541c:	e1a06001 	mov	r6, r1
40005420:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005424:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005428:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000542c:	e3e01000 	mvn	r1, #0
40005430:	e590001c 	ldr	r0, [r0, #28]
40005434:	eb00131f 	bl	4000a0b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005438:	e0650006 	rsb	r0, r5, r6
4000543c:	e270c000 	rsbs	ip, r0, #0
40005440:	e0acc000 	adc	ip, ip, r0
40005444:	e3a01014 	mov	r1, #20
40005448:	e3a02027 	mov	r2, #39	; 0x27
4000544c:	e3a03030 	mov	r3, #48	; 0x30
40005450:	e1a00004 	mov	r0, r4
40005454:	e58dc000 	str	ip, [sp]
40005458:	e58d5004 	str	r5, [sp, #4]
4000545c:	ebfff815 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005460:	e1560005 	cmp	r6, r5
40005464:	03a06002 	moveq	r6, #2
40005468:	11a06005 	movne	r6, r5
4000546c:	e1a00004 	mov	r0, r4
40005470:	e3a01015 	mov	r1, #21
40005474:	e3a02025 	mov	r2, #37	; 0x25
40005478:	e3a03030 	mov	r3, #48	; 0x30
4000547c:	e58d6000 	str	r6, [sp]
40005480:	e58d5004 	str	r5, [sp, #4]
40005484:	ebfff80b 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005488:	e594001c 	ldr	r0, [r4, #28]
}
4000548c:	e28dd008 	add	sp, sp, #8
40005490:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005494:	ea00133c 	b	4000a18c <_txe_mutex_put>

40005498 <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
40005498:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
4000549c:	e350001f 	cmp	r0, #31
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400054a0:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400054a4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400054a8:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
400054ac:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400054b0:	9a000023 	bls	40005544 <ControlHandle+0xac>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400054b4:	e59f6e38 	ldr	r6, [pc, #3640]	; 400062f4 <ControlHandle+0xe5c>
400054b8:	e0872087 	add	r2, r7, r7, lsl #1
400054bc:	e1a02182 	lsl	r2, r2, #3
400054c0:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
400054c4:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
400054c8:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
400054cc:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400054d0:	e59f3e20 	ldr	r3, [pc, #3616]	; 400062f8 <ControlHandle+0xe60>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400054d4:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400054d8:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400054dc:	e3550083 	cmp	r5, #131	; 0x83
400054e0:	0a000022 	beq	40005570 <ControlHandle+0xd8>
400054e4:	9a00002b 	bls	40005598 <ControlHandle+0x100>
400054e8:	e3550085 	cmp	r5, #133	; 0x85
400054ec:	0a000084 	beq	40005704 <ControlHandle+0x26c>
400054f0:	3a000072 	bcc	400056c0 <ControlHandle+0x228>
400054f4:	e3550086 	cmp	r5, #134	; 0x86
400054f8:	0a0000bd 	beq	400057f4 <ControlHandle+0x35c>
400054fc:	e3550087 	cmp	r5, #135	; 0x87
40005500:	0a0000b1 	beq	400057cc <ControlHandle+0x334>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005504:	e3a00000 	mov	r0, #0
40005508:	e3a01001 	mov	r1, #1
4000550c:	e1a02000 	mov	r2, r0
40005510:	eb0061fd 	bl	4001dd0c <CyU3PUsbStall>
			  break;
40005514:	e3a0e0ff 	mov	lr, #255	; 0xff
40005518:	e1a0400e 	mov	r4, lr
4000551c:	e1a0c00e 	mov	ip, lr
40005520:	e1a0300e 	mov	r3, lr
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005524:	e59f1dd0 	ldr	r1, [pc, #3536]	; 400062fc <ControlHandle+0xe64>
40005528:	e1a02005 	mov	r2, r5
4000552c:	e3a00004 	mov	r0, #4
40005530:	e58dc000 	str	ip, [sp]
40005534:	e98d4010 	stmib	sp, {r4, lr}
40005538:	eb00368b 	bl	40012f6c <CyU3PDebugPrint>
}
4000553c:	e28dd02c 	add	sp, sp, #44	; 0x2c
40005540:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005544:	e59f6da8 	ldr	r6, [pc, #3496]	; 400062f4 <ControlHandle+0xe5c>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005548:	e59f3da8 	ldr	r3, [pc, #3496]	; 400062f8 <ControlHandle+0xe60>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
4000554c:	e0805080 	add	r5, r0, r0, lsl #1
40005550:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005554:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005558:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000555c:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005560:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005564:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
40005568:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000556c:	1affffdc 	bne	400054e4 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005570:	e354001f 	cmp	r4, #31
40005574:	9a0000bc 	bls	4000586c <ControlHandle+0x3d4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005578:	e0877087 	add	r7, r7, r7, lsl #1
4000557c:	e0866187 	add	r6, r6, r7, lsl #3
40005580:	e59fad78 	ldr	sl, [pc, #3448]	; 40006300 <ControlHandle+0xe68>
40005584:	e5d60005 	ldrb	r0, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005588:	e5d6c006 	ldrb	ip, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
4000558c:	e5ca0058 	strb	r0, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005590:	e5cac059 	strb	ip, [sl, #89]	; 0x59
40005594:	ea00000b 	b	400055c8 <ControlHandle+0x130>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005598:	e3550081 	cmp	r5, #129	; 0x81
4000559c:	0a000064 	beq	40005734 <ControlHandle+0x29c>
400055a0:	9a000010 	bls	400055e8 <ControlHandle+0x150>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
400055a4:	e354001f 	cmp	r4, #31
400055a8:	9a0000a3 	bls	4000583c <ControlHandle+0x3a4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400055ac:	e0877087 	add	r7, r7, r7, lsl #1
400055b0:	e0866187 	add	r6, r6, r7, lsl #3
400055b4:	e59fad44 	ldr	sl, [pc, #3396]	; 40006300 <ControlHandle+0xe68>
400055b8:	e5d62003 	ldrb	r2, [r6, #3]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400055bc:	e5d6e004 	ldrb	lr, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400055c0:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400055c4:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400055c8:	e1a00008 	mov	r0, r8
400055cc:	e59f1d30 	ldr	r1, [pc, #3376]	; 40006304 <ControlHandle+0xe6c>
400055d0:	eb005fa2 	bl	4001d460 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400055d4:	e3a0e0ff 	mov	lr, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400055d8:	e5da4058 	ldrb	r4, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400055dc:	e1a0c00e 	mov	ip, lr
400055e0:	e1a0300e 	mov	r3, lr
400055e4:	eaffffce 	b	40005524 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400055e8:	e3550001 	cmp	r5, #1
400055ec:	1affffc4 	bne	40005504 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400055f0:	e59f1d08 	ldr	r1, [pc, #3336]	; 40006300 <ControlHandle+0xe68>
400055f4:	e28d2026 	add	r2, sp, #38	; 0x26
400055f8:	e3a00020 	mov	r0, #32
400055fc:	e2811058 	add	r1, r1, #88	; 0x58
40005600:	eb005d28 	bl	4001caa8 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005604:	e2502000 	subs	r2, r0, #0
40005608:	1a0002fe 	bne	40006208 <ControlHandle+0xd70>
			   {
				  Data0 = glEp0Buffer[0];
4000560c:	e59fecec 	ldr	lr, [pc, #3308]	; 40006300 <ControlHandle+0xe68>
40005610:	e5de3058 	ldrb	r3, [lr, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
40005614:	e59fece4 	ldr	lr, [pc, #3300]	; 40006300 <ControlHandle+0xe68>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
40005618:	e58d3018 	str	r3, [sp, #24]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
4000561c:	e5de005a 	ldrb	r0, [lr, #90]	; 0x5a
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
40005620:	e5dec059 	ldrb	ip, [lr, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005624:	e58d001c 	str	r0, [sp, #28]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005628:	e3540022 	cmp	r4, #34	; 0x22
4000562c:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
40005630:	ea0002db 	b	400061a4 <ControlHandle+0xd0c>
40005634:	40006154 	.word	0x40006154
40005638:	400060ec 	.word	0x400060ec
4000563c:	400061a4 	.word	0x400061a4
40005640:	400061a4 	.word	0x400061a4
40005644:	400060a4 	.word	0x400060a4
40005648:	40005f60 	.word	0x40005f60
4000564c:	40005ee4 	.word	0x40005ee4
40005650:	400061a4 	.word	0x400061a4
40005654:	400061a4 	.word	0x400061a4
40005658:	400061a4 	.word	0x400061a4
4000565c:	400061a4 	.word	0x400061a4
40005660:	40005e5c 	.word	0x40005e5c
40005664:	400061a4 	.word	0x400061a4
40005668:	400061a4 	.word	0x400061a4
4000566c:	400061a4 	.word	0x400061a4
40005670:	400061a4 	.word	0x400061a4
40005674:	40005d64 	.word	0x40005d64
40005678:	400061a4 	.word	0x400061a4
4000567c:	400061a4 	.word	0x400061a4
40005680:	400061a4 	.word	0x400061a4
40005684:	400061a4 	.word	0x400061a4
40005688:	400061a4 	.word	0x400061a4
4000568c:	400061a4 	.word	0x400061a4
40005690:	400061a4 	.word	0x400061a4
40005694:	400061a4 	.word	0x400061a4
40005698:	40005ca8 	.word	0x40005ca8
4000569c:	400061a4 	.word	0x400061a4
400056a0:	400061a4 	.word	0x400061a4
400056a4:	40005dec 	.word	0x40005dec
400056a8:	400061a4 	.word	0x400061a4
400056ac:	40005c4c 	.word	0x40005c4c
400056b0:	40005bc8 	.word	0x40005bc8
400056b4:	40005b30 	.word	0x40005b30
400056b8:	40005b18 	.word	0x40005b18
400056bc:	40005ab4 	.word	0x40005ab4
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400056c0:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056c4:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056c8:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056cc:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056d0:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056d4:	859fac24 	ldrhi	sl, [pc, #3108]	; 40006300 <ControlHandle+0xe68>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056d8:	959fac20 	ldrls	sl, [pc, #3104]	; 40006300 <ControlHandle+0xe68>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
400056dc:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
400056e0:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056e4:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400056e8:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400056ec:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400056f0:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400056f4:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
400056f8:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400056fc:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
40005700:	eaffffb0 	b	400055c8 <ControlHandle+0x130>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005704:	e59f4bf4 	ldr	r4, [pc, #3060]	; 40006300 <ControlHandle+0xe68>
			  glEp0Buffer[1] = 0;
40005708:	e3a0c000 	mov	ip, #0
4000570c:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005710:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005714:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005718:	e3a00002 	mov	r0, #2
4000571c:	eb005f4f 	bl	4001d460 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005720:	e3a0e0ff 	mov	lr, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005724:	e5d44058 	ldrb	r4, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005728:	e1a0c00e 	mov	ip, lr
4000572c:	e1a0300e 	mov	r3, lr
40005730:	eaffff7b 	b	40005524 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
40005734:	e2441001 	sub	r1, r4, #1
40005738:	e3510021 	cmp	r1, #33	; 0x21
4000573c:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005740:	ea0000d2 	b	40005a90 <ControlHandle+0x5f8>
40005744:	40005a64 	.word	0x40005a64
40005748:	40005a90 	.word	0x40005a90
4000574c:	40005a90 	.word	0x40005a90
40005750:	40005a90 	.word	0x40005a90
40005754:	40005a44 	.word	0x40005a44
40005758:	40005a90 	.word	0x40005a90
4000575c:	40005a90 	.word	0x40005a90
40005760:	40005a90 	.word	0x40005a90
40005764:	40005a90 	.word	0x40005a90
40005768:	40005a90 	.word	0x40005a90
4000576c:	40005a20 	.word	0x40005a20
40005770:	40005a90 	.word	0x40005a90
40005774:	40005a90 	.word	0x40005a90
40005778:	40005a90 	.word	0x40005a90
4000577c:	40005a90 	.word	0x40005a90
40005780:	40005a90 	.word	0x40005a90
40005784:	40005a90 	.word	0x40005a90
40005788:	40005a90 	.word	0x40005a90
4000578c:	40005a90 	.word	0x40005a90
40005790:	40005a90 	.word	0x40005a90
40005794:	40005a90 	.word	0x40005a90
40005798:	40005a90 	.word	0x40005a90
4000579c:	40005a90 	.word	0x40005a90
400057a0:	40005a90 	.word	0x40005a90
400057a4:	400059e4 	.word	0x400059e4
400057a8:	40005a90 	.word	0x40005a90
400057ac:	40005a90 	.word	0x40005a90
400057b0:	400059bc 	.word	0x400059bc
400057b4:	40005a90 	.word	0x40005a90
400057b8:	40005a90 	.word	0x40005a90
400057bc:	40005920 	.word	0x40005920
400057c0:	400058e8 	.word	0x400058e8
400057c4:	400058e8 	.word	0x400058e8
400057c8:	400058e8 	.word	0x400058e8
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400057cc:	e354001f 	cmp	r4, #31
400057d0:	9a000031 	bls	4000589c <ControlHandle+0x404>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400057d4:	e0877087 	add	r7, r7, r7, lsl #1
400057d8:	e0866187 	add	r6, r6, r7, lsl #3
400057dc:	e59fab1c 	ldr	sl, [pc, #2844]	; 40006300 <ControlHandle+0xe68>
400057e0:	e5d6100b 	ldrb	r1, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400057e4:	e5d6400c 	ldrb	r4, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400057e8:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400057ec:	e5ca4059 	strb	r4, [sl, #89]	; 0x59
400057f0:	eaffff74 	b	400055c8 <ControlHandle+0x130>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400057f4:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400057f8:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400057fc:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005800:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005804:	80866187 	addhi	r6, r6, r7, lsl #3
40005808:	859f8af0 	ldrhi	r8, [pc, #2800]	; 40006300 <ControlHandle+0xe68>
4000580c:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005810:	959f8ae8 	ldrls	r8, [pc, #2792]	; 40006300 <ControlHandle+0xe68>
40005814:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005818:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
4000581c:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005820:	e59f1adc 	ldr	r1, [pc, #2780]	; 40006304 <ControlHandle+0xe6c>
40005824:	eb005f0d 	bl	4001d460 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005828:	e3a0e0ff 	mov	lr, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000582c:	e5d84058 	ldrb	r4, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005830:	e1a0c00e 	mov	ip, lr
40005834:	e1a0300e 	mov	r3, lr
40005838:	eaffff39 	b	40005524 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000583c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005840:	10844084 	addne	r4, r4, r4, lsl #1
40005844:	10866184 	addne	r6, r6, r4, lsl #3
40005848:	159faab0 	ldrne	sl, [pc, #2736]	; 40006300 <ControlHandle+0xe68>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000584c:	059faaac 	ldreq	sl, [pc, #2732]	; 40006300 <ControlHandle+0xe68>
40005850:	059f3ab0 	ldreq	r3, [pc, #2736]	; 40006308 <ControlHandle+0xe70>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005854:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005858:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000585c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005860:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005864:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005868:	eaffff56 	b	400055c8 <ControlHandle+0x130>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
4000586c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005870:	10844084 	addne	r4, r4, r4, lsl #1
40005874:	10866184 	addne	r6, r6, r4, lsl #3
40005878:	159faa80 	ldrne	sl, [pc, #2688]	; 40006300 <ControlHandle+0xe68>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000587c:	059faa7c 	ldreq	sl, [pc, #2684]	; 40006300 <ControlHandle+0xe68>
40005880:	059f3a84 	ldreq	r3, [pc, #2692]	; 4000630c <ControlHandle+0xe74>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005884:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005888:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000588c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005890:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005894:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005898:	eaffff4a 	b	400055c8 <ControlHandle+0x130>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000589c:	e354000b 	cmp	r4, #11
400058a0:	0a000007 	beq	400058c4 <ControlHandle+0x42c>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058a4:	e084a084 	add	sl, r4, r4, lsl #1
400058a8:	e086618a 	add	r6, r6, sl, lsl #3
400058ac:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
400058b0:	e59faa48 	ldr	sl, [pc, #2632]	; 40006300 <ControlHandle+0xe68>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400058b4:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058b8:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
400058bc:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
400058c0:	eaffff40 	b	400055c8 <ControlHandle+0x130>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058c4:	e59faa34 	ldr	sl, [pc, #2612]	; 40006300 <ControlHandle+0xe68>
400058c8:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400058cc:	e5d62294 	ldrb	r2, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
400058d0:	e3a0e000 	mov	lr, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400058d4:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
400058d8:	e5cae059 	strb	lr, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400058dc:	e5ca205a 	strb	r2, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
400058e0:	e5cae05b 	strb	lr, [sl, #91]	; 0x5b
400058e4:	eaffff37 	b	400055c8 <ControlHandle+0x130>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400058e8:	e0877087 	add	r7, r7, r7, lsl #1
400058ec:	e0866187 	add	r6, r6, r7, lsl #3
400058f0:	e59fea08 	ldr	lr, [pc, #2568]	; 40006300 <ControlHandle+0xe68>
400058f4:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400058f8:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400058fc:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
40005900:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005904:	e1a00008 	mov	r0, r8
40005908:	e59f19f4 	ldr	r1, [pc, #2548]	; 40006304 <ControlHandle+0xe6c>
4000590c:	eb005ed3 	bl	4001d460 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005910:	e3a0c0ff 	mov	ip, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005914:	e1a0e006 	mov	lr, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005918:	e1a0300c 	mov	r3, ip
4000591c:	eaffff00 	b	40005524 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005920:	e3580000 	cmp	r8, #0
40005924:	0a00026b 	beq	400062d8 <ControlHandle+0xe40>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005928:	e1a0e128 	lsr	lr, r8, #2
4000592c:	e35e0000 	cmp	lr, #0
40005930:	13580003 	cmpne	r8, #3
40005934:	83a02000 	movhi	r2, #0
40005938:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000593c:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005940:	9a000268 	bls	400062e8 <ControlHandle+0xe50>
40005944:	e59f19b8 	ldr	r1, [pc, #2488]	; 40006304 <ControlHandle+0xe6c>
40005948:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
4000594c:	e4904004 	ldr	r4, [r0], #4
40005950:	e282c001 	add	ip, r2, #1
40005954:	e20c20ff 	and	r2, ip, #255	; 0xff
40005958:	e15e0002 	cmp	lr, r2
4000595c:	e4814004 	str	r4, [r1], #4
40005960:	8afffff9 	bhi	4000594c <ControlHandle+0x4b4>
40005964:	e1580003 	cmp	r8, r3
40005968:	159f0990 	ldrne	r0, [pc, #2448]	; 40006300 <ControlHandle+0xe68>
4000596c:	0a000259 	beq	400062d8 <ControlHandle+0xe40>
40005970:	e080e003 	add	lr, r0, r3
40005974:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005978:	e2836001 	add	r6, r3, #1
4000597c:	e20630ff 	and	r3, r6, #255	; 0xff
40005980:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005984:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005988:	8afffff8 	bhi	40005970 <ControlHandle+0x4d8>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
4000598c:	e5d02057 	ldrb	r2, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005990:	e59f3968 	ldr	r3, [pc, #2408]	; 40006300 <ControlHandle+0xe68>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005994:	e35200ff 	cmp	r2, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005998:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
4000599c:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400059a0:	0affffd7 	beq	40005904 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
400059a4:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
400059a8:	e59f1960 	ldr	r1, [pc, #2400]	; 40006310 <ControlHandle+0xe78>
400059ac:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
400059b0:	e3a00004 	mov	r0, #4
400059b4:	eb00356c 	bl	40012f6c <CyU3PDebugPrint>
400059b8:	eaffffd1 	b	40005904 <ControlHandle+0x46c>
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
400059bc:	e59f793c 	ldr	r7, [pc, #2364]	; 40006300 <ControlHandle+0xe68>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
400059c0:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
400059c4:	e5d72078 	ldrb	r2, [r7, #120]	; 0x78
400059c8:	e3520001 	cmp	r2, #1
400059cc:	0a000215 	beq	40006228 <ControlHandle+0xd90>
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
400059d0:	e3a00000 	mov	r0, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
400059d4:	e5c74058 	strb	r4, [r7, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400059d8:	e5c70059 	strb	r0, [r7, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400059dc:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400059e0:	eaffffc7 	b	40005904 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400059e4:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400059e8:	e59fc910 	ldr	ip, [pc, #2320]	; 40006300 <ControlHandle+0xe68>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400059ec:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400059f0:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400059f4:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400059f8:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400059fc:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005a00:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005a04:	e59f1908 	ldr	r1, [pc, #2312]	; 40006314 <ControlHandle+0xe7c>
40005a08:	e1a02004 	mov	r2, r4
40005a0c:	e1a0300e 	mov	r3, lr
40005a10:	e3a00004 	mov	r0, #4
40005a14:	e88d4040 	stm	sp, {r6, lr}
40005a18:	eb003553 	bl	40012f6c <CyU3PDebugPrint>
					 break;
40005a1c:	eaffffb8 	b	40005904 <ControlHandle+0x46c>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a20:	e59fc8d8 	ldr	ip, [pc, #2264]	; 40006300 <ControlHandle+0xe68>
40005a24:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a28:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005a2c:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a30:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005a34:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a38:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005a3c:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005a40:	eaffffaf 	b	40005904 <ControlHandle+0x46c>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005a44:	e5d62205 	ldrb	r2, [r6, #517]	; 0x205
40005a48:	e59f68b0 	ldr	r6, [pc, #2224]	; 40006300 <ControlHandle+0xe68>
40005a4c:	e2224080 	eor	r4, r2, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005a50:	e3a01000 	mov	r1, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005a54:	e5c64058 	strb	r4, [r6, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005a58:	e5c61059 	strb	r1, [r6, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005a5c:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005a60:	eaffffa7 	b	40005904 <ControlHandle+0x46c>
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 */
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005a64:	e5d641a5 	ldrb	r4, [r6, #421]	; 0x1a5
					  if(Data0&0x80){
						  Data0 = ~Data0;
					  }else{
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
40005a68:	e59f3890 	ldr	r3, [pc, #2192]	; 40006300 <ControlHandle+0xe68>
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 */
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					  if(Data0&0x80){
40005a6c:	e3140080 	tst	r4, #128	; 0x80
						  Data0 = ~Data0;
40005a70:	11e04004 	mvnne	r4, r4
					  }else{
						  Data0 = Data0 + 0x80;
40005a74:	02444080 	subeq	r4, r4, #128	; 0x80
40005a78:	e20440ff 	and	r4, r4, #255	; 0xff
					  }
					 glEp0Buffer[0] = Data0;
					 glEp0Buffer[1] = 0;
40005a7c:	e3a00000 	mov	r0, #0
					  if(Data0&0x80){
						  Data0 = ~Data0;
					  }else{
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
40005a80:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005a84:	e5c30059 	strb	r0, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005a88:	e3a060ff 	mov	r6, #255	; 0xff
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
40005a8c:	eaffff9c 	b	40005904 <ControlHandle+0x46c>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005a90:	e0841084 	add	r1, r4, r4, lsl #1
40005a94:	e0864181 	add	r4, r6, r1, lsl #3
40005a98:	e59f3860 	ldr	r3, [pc, #2144]	; 40006300 <ControlHandle+0xe68>
40005a9c:	e5d4418d 	ldrb	r4, [r4, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005aa0:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005aa4:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005aa8:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005aac:	e5c30059 	strb	r0, [r3, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
40005ab0:	eaffff93 	b	40005904 <ControlHandle+0x46c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ab4:	e59f485c 	ldr	r4, [pc, #2140]	; 40006318 <ControlHandle+0xe80>
40005ab8:	e3e01000 	mvn	r1, #0
40005abc:	e594001c 	ldr	r0, [r4, #28]
40005ac0:	eb00117c 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005ac4:	e3a01022 	mov	r1, #34	; 0x22
40005ac8:	e59dc018 	ldr	ip, [sp, #24]
40005acc:	e3a0e000 	mov	lr, #0
40005ad0:	e1a0300a 	mov	r3, sl
40005ad4:	e1a02009 	mov	r2, r9
40005ad8:	e1a00004 	mov	r0, r4
40005adc:	e88d5000 	stm	sp, {ip, lr}
40005ae0:	ebfff674 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ae4:	e594001c 	ldr	r0, [r4, #28]
40005ae8:	eb0011a7 	bl	4000a18c <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005aec:	e59d1018 	ldr	r1, [sp, #24]
40005af0:	e0877087 	add	r7, r7, r7, lsl #1
40005af4:	e0866187 	add	r6, r6, r7, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005af8:	e3a03001 	mov	r3, #1
							 break;
40005afc:	e3a0e0ff 	mov	lr, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b00:	e5c63010 	strb	r3, [r6, #16]
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005b04:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b08:	e1a03001 	mov	r3, r1
40005b0c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005b10:	e1a0400e 	mov	r4, lr
40005b14:	eafffe82 	b	40005524 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID1: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b18:	e59f47f8 	ldr	r4, [pc, #2040]	; 40006318 <ControlHandle+0xe80>
40005b1c:	e3e01000 	mvn	r1, #0
40005b20:	e594001c 	ldr	r0, [r4, #28]
40005b24:	eb001163 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005b28:	e3a01021 	mov	r1, #33	; 0x21
40005b2c:	eaffffe5 	b	40005ac8 <ControlHandle+0x630>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b30:	e59f47e0 	ldr	r4, [pc, #2016]	; 40006318 <ControlHandle+0xe80>
40005b34:	e3e01000 	mvn	r1, #0
40005b38:	e594001c 	ldr	r0, [r4, #28]
40005b3c:	e58dc014 	str	ip, [sp, #20]
40005b40:	eb00115c 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005b44:	e59d2018 	ldr	r2, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005b48:	e3a0e000 	mov	lr, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005b4c:	e202807f 	and	r8, r2, #127	; 0x7f
40005b50:	e58d801c 	str	r8, [sp, #28]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005b54:	e59dc01c 	ldr	ip, [sp, #28]
40005b58:	e3a01020 	mov	r1, #32
40005b5c:	e1a02009 	mov	r2, r9
40005b60:	e1a0300a 	mov	r3, sl
40005b64:	e1a00004 	mov	r0, r4
40005b68:	e88d5000 	stm	sp, {ip, lr}
40005b6c:	ebfff651 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005b70:	e59dc014 	ldr	ip, [sp, #20]
40005b74:	e1a0300a 	mov	r3, sl
40005b78:	e3a08001 	mov	r8, #1
40005b7c:	e3a01020 	mov	r1, #32
40005b80:	e1a0200b 	mov	r2, fp
40005b84:	e1a00004 	mov	r0, r4
40005b88:	e58dc000 	str	ip, [sp]
40005b8c:	e58d8004 	str	r8, [sp, #4]
40005b90:	ebfff648 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b94:	e594001c 	ldr	r0, [r4, #28]
40005b98:	eb00117b 	bl	4000a18c <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005b9c:	e59d001c 	ldr	r0, [sp, #28]
40005ba0:	e0877087 	add	r7, r7, r7, lsl #1
40005ba4:	e0866187 	add	r6, r6, r7, lsl #3
40005ba8:	e5c6000d 	strb	r0, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005bac:	e59dc014 	ldr	ip, [sp, #20]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005bb0:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005bb4:	e5c6c00e 	strb	ip, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005bb8:	e5c68010 	strb	r8, [r6, #16]
40005bbc:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005bc0:	e1a0400e 	mov	r4, lr
40005bc4:	eafffe56 	b	40005524 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005bc8:	e3580000 	cmp	r8, #0
40005bcc:	0a000018 	beq	40005c34 <ControlHandle+0x79c>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005bd0:	e1a0e128 	lsr	lr, r8, #2
40005bd4:	e35e0000 	cmp	lr, #0
40005bd8:	13580003 	cmpne	r8, #3
40005bdc:	83a02000 	movhi	r2, #0
40005be0:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005be4:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005be8:	9a0001bc 	bls	400062e0 <ControlHandle+0xe48>
40005bec:	e59f1728 	ldr	r1, [pc, #1832]	; 4000631c <ControlHandle+0xe84>
40005bf0:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005bf4:	e4904004 	ldr	r4, [r0], #4
40005bf8:	e2822001 	add	r2, r2, #1
40005bfc:	e20220ff 	and	r2, r2, #255	; 0xff
40005c00:	e15e0002 	cmp	lr, r2
40005c04:	e4814004 	str	r4, [r1], #4
40005c08:	8afffff9 	bhi	40005bf4 <ControlHandle+0x75c>
40005c0c:	e1580003 	cmp	r8, r3
40005c10:	0a000007 	beq	40005c34 <ControlHandle+0x79c>
40005c14:	e59fc6e4 	ldr	ip, [pc, #1764]	; 40006300 <ControlHandle+0xe68>
40005c18:	e08ce003 	add	lr, ip, r3
40005c1c:	e5de1058 	ldrb	r1, [lr, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c20:	e2833001 	add	r3, r3, #1
40005c24:	e20330ff 	and	r3, r3, #255	; 0xff
40005c28:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005c2c:	e5ce104c 	strb	r1, [lr, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c30:	8afffff7 	bhi	40005c14 <ControlHandle+0x77c>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005c34:	ebfffd6f 	bl	400051f8 <I2CCmdHandler>
							 break;
40005c38:	e3a0e0ff 	mov	lr, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005c3c:	e59d3018 	ldr	r3, [sp, #24]
40005c40:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005c44:	e1a0400e 	mov	r4, lr
40005c48:	eafffe35 	b	40005524 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c4c:	e59f46c4 	ldr	r4, [pc, #1732]	; 40006318 <ControlHandle+0xe80>
40005c50:	e3e01000 	mvn	r1, #0
40005c54:	e594001c 	ldr	r0, [r4, #28]
40005c58:	eb001116 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c5c:	e59d0018 	ldr	r0, [sp, #24]
40005c60:	e3a0e000 	mov	lr, #0
40005c64:	e270c001 	rsbs	ip, r0, #1
40005c68:	33a0c000 	movcc	ip, #0
40005c6c:	e1a0300a 	mov	r3, sl
40005c70:	e3a0101e 	mov	r1, #30
40005c74:	e1a02009 	mov	r2, r9
40005c78:	e1a00004 	mov	r0, r4
40005c7c:	e88d5000 	stm	sp, {ip, lr}
40005c80:	ebfff60c 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c84:	e594001c 	ldr	r0, [r4, #28]
40005c88:	eb00113f 	bl	4000a18c <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c8c:	e3a03001 	mov	r3, #1
							 break;
40005c90:	e3a0e0ff 	mov	lr, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c94:	e5c63460 	strb	r3, [r6, #1120]	; 0x460
40005c98:	e59dc01c 	ldr	ip, [sp, #28]
40005c9c:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005ca0:	e1a0400e 	mov	r4, lr
40005ca4:	eafffe1e 	b	40005524 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ca8:	e59f4668 	ldr	r4, [pc, #1640]	; 40006318 <ControlHandle+0xe80>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005cac:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005cb0:	e59d301c 	ldr	r3, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cb4:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cb8:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005cbc:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cc0:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cc4:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cc8:	eb0010fa 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005ccc:	e59dc018 	ldr	ip, [sp, #24]
40005cd0:	e1a00004 	mov	r0, r4
40005cd4:	e58dc000 	str	ip, [sp]
40005cd8:	e3a01019 	mov	r1, #25
40005cdc:	e3a0c000 	mov	ip, #0
40005ce0:	e1a02009 	mov	r2, r9
40005ce4:	e1a0300a 	mov	r3, sl
40005ce8:	e58dc004 	str	ip, [sp, #4]
40005cec:	ebfff5f1 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005cf0:	e59d0018 	ldr	r0, [sp, #24]
40005cf4:	e3500000 	cmp	r0, #0
40005cf8:	0a000007 	beq	40005d1c <ControlHandle+0x884>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005cfc:	e59de01c 	ldr	lr, [sp, #28]
40005d00:	e1a00004 	mov	r0, r4
40005d04:	e3a01019 	mov	r1, #25
40005d08:	e1a0200b 	mov	r2, fp
40005d0c:	e1a0300a 	mov	r3, sl
40005d10:	e58de000 	str	lr, [sp]
40005d14:	e58d7004 	str	r7, [sp, #4]
40005d18:	ebfff5e6 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d1c:	e594001c 	ldr	r0, [r4, #28]
40005d20:	eb001119 	bl	4000a18c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d24:	e59f05d4 	ldr	r0, [pc, #1492]	; 40006300 <ControlHandle+0xe68>
40005d28:	e59f15d0 	ldr	r1, [pc, #1488]	; 40006300 <ControlHandle+0xe68>
40005d2c:	e5d0c05a 	ldrb	ip, [r0, #90]	; 0x5a
40005d30:	e5d1405b 	ldrb	r4, [r1, #91]	; 0x5b
40005d34:	e5d03059 	ldrb	r3, [r0, #89]	; 0x59
40005d38:	e5d02058 	ldrb	r2, [r0, #88]	; 0x58
40005d3c:	e59f15dc 	ldr	r1, [pc, #1500]	; 40006320 <ControlHandle+0xe88>
40005d40:	e3a00004 	mov	r0, #4
40005d44:	e58dc000 	str	ip, [sp]
40005d48:	e58d4004 	str	r4, [sp, #4]
40005d4c:	eb003486 	bl	40012f6c <CyU3PDebugPrint>
							 break;
40005d50:	e3a0e0ff 	mov	lr, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d54:	e59d3018 	ldr	r3, [sp, #24]
40005d58:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005d5c:	e1a0400e 	mov	r4, lr
40005d60:	eafffdef 	b	40005524 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005d64:	e2531000 	subs	r1, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005d68:	e5c6130d 	strb	r1, [r6, #781]	; 0x30d
40005d6c:	e59f3580 	ldr	r3, [pc, #1408]	; 400062f4 <ControlHandle+0xe5c>
							 if(Data0 == 0){//set exposure mode auto
40005d70:	1a000139 	bne	4000625c <ControlHandle+0xdc4>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005d74:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40005d78:	e3520002 	cmp	r2, #2
40005d7c:	13520008 	cmpne	r2, #8
40005d80:	0a000003 	beq	40005d94 <ControlHandle+0x8fc>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005d84:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005d88:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005d8c:	13a02002 	movne	r2, #2
40005d90:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d94:	e59f457c 	ldr	r4, [pc, #1404]	; 40006318 <ControlHandle+0xe80>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d98:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d9c:	e3e01000 	mvn	r1, #0
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005da0:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005da4:	e594001c 	ldr	r0, [r4, #28]
40005da8:	eb0010c2 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005dac:	e59dc018 	ldr	ip, [sp, #24]
40005db0:	e3a01010 	mov	r1, #16
40005db4:	e58dc000 	str	ip, [sp]
40005db8:	e1a02009 	mov	r2, r9
40005dbc:	e1a0300a 	mov	r3, sl
40005dc0:	e1a00004 	mov	r0, r4
40005dc4:	e3a0c000 	mov	ip, #0
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005dc8:	e58dc004 	str	ip, [sp, #4]
40005dcc:	ebfff5b9 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005dd0:	e594001c 	ldr	r0, [r4, #28]
40005dd4:	eb0010ec 	bl	4000a18c <_txe_mutex_put>

					 		 break;
40005dd8:	e3a0e0ff 	mov	lr, #255	; 0xff
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ddc:	e59d3018 	ldr	r3, [sp, #24]
40005de0:	e59dc01c 	ldr	ip, [sp, #28]

					 		 break;
40005de4:	e1a0400e 	mov	r4, lr
40005de8:	eafffdcd 	b	40005524 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
40005dec:	e3530003 	cmp	r3, #3
								 CamMode = 0; //set 1080p flag
40005df0:	959f2508 	ldrls	r2, [pc, #1288]	; 40006300 <ControlHandle+0xe68>
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005df4:	859fe504 	ldrhi	lr, [pc, #1284]	; 40006300 <ControlHandle+0xe68>
40005df8:	e1a04003 	mov	r4, r3
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005dfc:	93a03000 	movls	r3, #0
40005e00:	95c23078 	strbls	r3, [r2, #120]	; 0x78
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e04:	83a02001 	movhi	r2, #1
40005e08:	959d2018 	ldrls	r2, [sp, #24]
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005e0c:	91a03004 	movls	r3, r4
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e10:	85ce2078 	strbhi	r2, [lr, #120]	; 0x78
40005e14:	81a02004 	movhi	r2, r4
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e18:	e59f44f8 	ldr	r4, [pc, #1272]	; 40006318 <ControlHandle+0xe80>
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
40005e1c:	82433004 	subhi	r3, r3, #4
							 }
							 CtrlParArry[CtrlID][13] = Data0;
40005e20:	e5c6242d 	strb	r2, [r6, #1069]	; 0x42d
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e24:	e3a02001 	mov	r2, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e28:	e3e01000 	mvn	r1, #0
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
40005e2c:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e30:	e5c62430 	strb	r2, [r6, #1072]	; 0x430
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e34:	e594001c 	ldr	r0, [r4, #28]
40005e38:	eb00109e 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e3c:	e59dc018 	ldr	ip, [sp, #24]
40005e40:	e3a0101c 	mov	r1, #28
40005e44:	e58dc000 	str	ip, [sp]
40005e48:	e1a02009 	mov	r2, r9
40005e4c:	e1a0300a 	mov	r3, sl
40005e50:	e1a00004 	mov	r0, r4
40005e54:	e3a0c000 	mov	ip, #0
40005e58:	eaffffda 	b	40005dc8 <ControlHandle+0x930>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e5c:	e59f44b4 	ldr	r4, [pc, #1204]	; 40006318 <ControlHandle+0xe80>
40005e60:	e3e01000 	mvn	r1, #0
40005e64:	e594001c 	ldr	r0, [r4, #28]
40005e68:	eb001092 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e6c:	e59dc018 	ldr	ip, [sp, #24]
40005e70:	e3a0100b 	mov	r1, #11
40005e74:	e1a02009 	mov	r2, r9
40005e78:	e1a0300a 	mov	r3, sl
40005e7c:	e1a00004 	mov	r0, r4
40005e80:	e58dc000 	str	ip, [sp]
40005e84:	e3a0c000 	mov	ip, #0
40005e88:	e58dc004 	str	ip, [sp, #4]
40005e8c:	ebfff589 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005e90:	e59de01c 	ldr	lr, [sp, #28]
40005e94:	e3a0100b 	mov	r1, #11
40005e98:	e1a0200b 	mov	r2, fp
40005e9c:	e1a0300a 	mov	r3, sl
40005ea0:	e3a07001 	mov	r7, #1
40005ea4:	e1a00004 	mov	r0, r4
40005ea8:	e58de000 	str	lr, [sp]
40005eac:	e58d7004 	str	r7, [sp, #4]
40005eb0:	ebfff580 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005eb4:	e594001c 	ldr	r0, [r4, #28]
40005eb8:	eb0010b3 	bl	4000a18c <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ebc:	e59d1018 	ldr	r1, [sp, #24]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ec0:	e59d201c 	ldr	r2, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ec4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ec8:	e5c6148c 	strb	r1, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ecc:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ed0:	e5c67298 	strb	r7, [r6, #664]	; 0x298
40005ed4:	e1a03001 	mov	r3, r1
40005ed8:	e1a0c002 	mov	ip, r2
							 break;
40005edc:	e1a0400e 	mov	r4, lr
40005ee0:	eafffd8f 	b	40005524 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ee4:	e59f442c 	ldr	r4, [pc, #1068]	; 40006318 <ControlHandle+0xe80>
40005ee8:	e3e01000 	mvn	r1, #0
40005eec:	e594001c 	ldr	r0, [r4, #28]
40005ef0:	eb001070 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ef4:	e59dc018 	ldr	ip, [sp, #24]
40005ef8:	e3a0e000 	mov	lr, #0
40005efc:	e3a01006 	mov	r1, #6
40005f00:	e1a02009 	mov	r2, r9
40005f04:	e1a0300a 	mov	r3, sl
40005f08:	e1a00004 	mov	r0, r4
40005f0c:	e88d5000 	stm	sp, {ip, lr}
40005f10:	ebfff568 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005f14:	e59dc018 	ldr	ip, [sp, #24]
40005f18:	e1a0300a 	mov	r3, sl
40005f1c:	e3a07001 	mov	r7, #1
40005f20:	e3a01006 	mov	r1, #6
40005f24:	e1a0200b 	mov	r2, fp
40005f28:	e1a00004 	mov	r0, r4
40005f2c:	e58dc000 	str	ip, [sp]
40005f30:	e58d7004 	str	r7, [sp, #4]
40005f34:	ebfff55f 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f38:	e594001c 	ldr	r0, [r4, #28]
40005f3c:	eb001092 	bl	4000a18c <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005f40:	e59d4018 	ldr	r4, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f44:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005f48:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f4c:	e1a03004 	mov	r3, r4
40005f50:	e5c67220 	strb	r7, [r6, #544]	; 0x220
40005f54:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005f58:	e1a0400e 	mov	r4, lr
40005f5c:	eafffd70 	b	40005524 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f60:	e59f43b0 	ldr	r4, [pc, #944]	; 40006318 <ControlHandle+0xe80>
40005f64:	e3e01000 	mvn	r1, #0
40005f68:	e594001c 	ldr	r0, [r4, #28]
40005f6c:	eb001051 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005f70:	e59d0018 	ldr	r0, [sp, #24]
40005f74:	e3a0c000 	mov	ip, #0
40005f78:	e2403080 	sub	r3, r0, #128	; 0x80
40005f7c:	e20370ff 	and	r7, r3, #255	; 0xff
40005f80:	e3a01005 	mov	r1, #5
40005f84:	e1a02009 	mov	r2, r9
40005f88:	e1a0300a 	mov	r3, sl
40005f8c:	e1a00004 	mov	r0, r4
40005f90:	e88d1080 	stm	sp, {r7, ip}
40005f94:	ebfff547 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005f98:	e59d1018 	ldr	r1, [sp, #24]
40005f9c:	e3a020dc 	mov	r2, #220	; 0xdc
40005fa0:	e2417076 	sub	r7, r1, #118	; 0x76
40005fa4:	e207e0ff 	and	lr, r7, #255	; 0xff
40005fa8:	e3a01005 	mov	r1, #5
40005fac:	e3a07001 	mov	r7, #1
40005fb0:	e1a0300a 	mov	r3, sl
40005fb4:	e1a00004 	mov	r0, r4
40005fb8:	e58de000 	str	lr, [sp]
40005fbc:	e58d7004 	str	r7, [sp, #4]
40005fc0:	ebfff53c 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005fc4:	e59d2018 	ldr	r2, [sp, #24]
40005fc8:	e3a01005 	mov	r1, #5
40005fcc:	e282007e 	add	r0, r2, #126	; 0x7e
40005fd0:	e200c0ff 	and	ip, r0, #255	; 0xff
40005fd4:	e3a020de 	mov	r2, #222	; 0xde
40005fd8:	e1a0300a 	mov	r3, sl
40005fdc:	e1a00004 	mov	r0, r4
40005fe0:	e58dc000 	str	ip, [sp]
40005fe4:	e3a0c002 	mov	ip, #2
40005fe8:	e58dc004 	str	ip, [sp, #4]
40005fec:	ebfff531 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005ff0:	e59d3018 	ldr	r3, [sp, #24]
40005ff4:	e3a020e0 	mov	r2, #224	; 0xe0
40005ff8:	e2831072 	add	r1, r3, #114	; 0x72
40005ffc:	e201c0ff 	and	ip, r1, #255	; 0xff
40006000:	e1a0300a 	mov	r3, sl
40006004:	e3a01005 	mov	r1, #5
40006008:	e1a00004 	mov	r0, r4
4000600c:	e58dc000 	str	ip, [sp]
40006010:	e3a0c003 	mov	ip, #3
40006014:	e58dc004 	str	ip, [sp, #4]
40006018:	ebfff526 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
4000601c:	e59d2018 	ldr	r2, [sp, #24]
40006020:	e3a01005 	mov	r1, #5
40006024:	e242006f 	sub	r0, r2, #111	; 0x6f
40006028:	e200c0ff 	and	ip, r0, #255	; 0xff
4000602c:	e3a020dd 	mov	r2, #221	; 0xdd
40006030:	e1a0300a 	mov	r3, sl
40006034:	e1a00004 	mov	r0, r4
40006038:	e58dc000 	str	ip, [sp]
4000603c:	e3a0c004 	mov	ip, #4
40006040:	e58dc004 	str	ip, [sp, #4]
40006044:	ebfff51b 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40006048:	e59f32b0 	ldr	r3, [pc, #688]	; 40006300 <ControlHandle+0xe68>
4000604c:	e3a0e005 	mov	lr, #5
40006050:	e5d31058 	ldrb	r1, [r3, #88]	; 0x58
40006054:	e1a00004 	mov	r0, r4
40006058:	e281207f 	add	r2, r1, #127	; 0x7f
4000605c:	e202c0ff 	and	ip, r2, #255	; 0xff
40006060:	e1a0100e 	mov	r1, lr
40006064:	e1a0300a 	mov	r3, sl
40006068:	e1a0200b 	mov	r2, fp
4000606c:	e88d5000 	stm	sp, {ip, lr}
40006070:	ebfff510 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006074:	e594001c 	ldr	r0, [r4, #28]
40006078:	eb001043 	bl	4000a18c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
4000607c:	e59f027c 	ldr	r0, [pc, #636]	; 40006300 <ControlHandle+0xe68>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40006080:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40006084:	e5d03058 	ldrb	r3, [r0, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40006088:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
4000608c:	e2431080 	sub	r1, r3, #128	; 0x80
40006090:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40006094:	e59d3018 	ldr	r3, [sp, #24]
40006098:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
4000609c:	e1a0400e 	mov	r4, lr
400060a0:	eafffd1f 	b	40005524 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060a4:	e59f426c 	ldr	r4, [pc, #620]	; 40006318 <ControlHandle+0xe80>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
400060a8:	e2437001 	sub	r7, r3, #1
400060ac:	e20770ff 	and	r7, r7, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
400060b0:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060b4:	e3e01000 	mvn	r1, #0
400060b8:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
400060bc:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060c0:	eb000ffc 	bl	4000a0b8 <_txe_mutex_get>
							 //cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060c4:	e594001c 	ldr	r0, [r4, #28]
400060c8:	eb00102f 	bl	4000a18c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400060cc:	e3a03001 	mov	r3, #1
							 break;
400060d0:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 //cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400060d4:	e5c631f0 	strb	r3, [r6, #496]	; 0x1f0

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 //cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400060d8:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
400060dc:	e59d3018 	ldr	r3, [sp, #24]
400060e0:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
400060e4:	e1a0400e 	mov	r4, lr
400060e8:	eafffd0d 	b	40005524 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
#endif
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060ec:	e59f4224 	ldr	r4, [pc, #548]	; 40006318 <ControlHandle+0xe80>
400060f0:	e3e01000 	mvn	r1, #0
400060f4:	e594001c 	ldr	r0, [r4, #28]
400060f8:	eb000fee 	bl	4000a0b8 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
400060fc:	e59d2018 	ldr	r2, [sp, #24]
								  Data0 = Data0 - 0x80;
							  }else{
								  Data0 = ~Data0;
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006100:	e3a0c000 	mov	ip, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
#endif
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40006104:	e3120080 	tst	r2, #128	; 0x80
								  Data0 = Data0 - 0x80;
40006108:	12427080 	subne	r7, r2, #128	; 0x80
							  }else{
								  Data0 = ~Data0;
4000610c:	01e07002 	mvneq	r7, r2
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006110:	e1a0300a 	mov	r3, sl
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data0 = Data0 - 0x80;
							  }else{
								  Data0 = ~Data0;
40006114:	e20770ff 	and	r7, r7, #255	; 0xff
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006118:	e3a01001 	mov	r1, #1
4000611c:	e1a0200b 	mov	r2, fp
40006120:	e59f01f0 	ldr	r0, [pc, #496]	; 40006318 <ControlHandle+0xe80>
40006124:	e88d1080 	stm	sp, {r7, ip}
40006128:	ebfff4e2 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000612c:	e594001c 	ldr	r0, [r4, #28]
40006130:	eb001015 	bl	4000a18c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;


							 break;
40006134:	e3a0e0ff 	mov	lr, #255	; 0xff
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006138:	e3a00001 	mov	r0, #1
								  Data0 = ~Data0;
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
4000613c:	e5c671a5 	strb	r7, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][16] = CyTrue;
40006140:	e5c601a8 	strb	r0, [r6, #424]	; 0x1a8
40006144:	e59d3018 	ldr	r3, [sp, #24]
40006148:	e59dc01c 	ldr	ip, [sp, #28]


							 break;
4000614c:	e1a0400e 	mov	r4, lr
40006150:	eafffcf3 	b	40005524 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40006154:	e59f21a4 	ldr	r2, [pc, #420]	; 40006300 <ControlHandle+0xe68>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006158:	e3a00001 	mov	r0, #1
							 if(CamMode == 1) //mode 720p
4000615c:	e5d22078 	ldrb	r2, [r2, #120]	; 0x78

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40006160:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40006164:	e3520001 	cmp	r2, #1
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006168:	e5c60190 	strb	r0, [r6, #400]	; 0x190
4000616c:	11a07003 	movne	r7, r3
							 if(CamMode == 1) //mode 720p
40006170:	0a00004e 	beq	400062b0 <ControlHandle+0xe18>
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006174:	e59f419c 	ldr	r4, [pc, #412]	; 40006318 <ControlHandle+0xe80>
40006178:	e3e01000 	mvn	r1, #0
4000617c:	e594001c 	ldr	r0, [r4, #28]
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
40006180:	e5c6742d 	strb	r7, [r6, #1069]	; 0x42d
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006184:	eb000fcb 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006188:	e3a0c000 	mov	ip, #0
4000618c:	e1a0100c 	mov	r1, ip
40006190:	e1a02009 	mov	r2, r9
40006194:	e1a0300a 	mov	r3, sl
40006198:	e1a00004 	mov	r0, r4
4000619c:	e58d7000 	str	r7, [sp]
400061a0:	eaffff08 	b	40005dc8 <ControlHandle+0x930>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400061a4:	e59f716c 	ldr	r7, [pc, #364]	; 40006318 <ControlHandle+0xe80>
400061a8:	e3e01000 	mvn	r1, #0
400061ac:	e597001c 	ldr	r0, [r7, #28]
400061b0:	eb000fc0 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
400061b4:	e59dc018 	ldr	ip, [sp, #24]
400061b8:	e1a01004 	mov	r1, r4
400061bc:	e3a0e000 	mov	lr, #0
400061c0:	e1a0300a 	mov	r3, sl
400061c4:	e1a02009 	mov	r2, r9
400061c8:	e1a00007 	mov	r0, r7
400061cc:	e88d5000 	stm	sp, {ip, lr}
400061d0:	ebfff4b8 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400061d4:	e597001c 	ldr	r0, [r7, #28]
400061d8:	eb000feb 	bl	4000a18c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
400061dc:	e59d1018 	ldr	r1, [sp, #24]
400061e0:	e0843084 	add	r3, r4, r4, lsl #1
400061e4:	e0866183 	add	r6, r6, r3, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
400061e8:	e3a0c001 	mov	ip, #1
							 break;
400061ec:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061f0:	e5c6c190 	strb	ip, [r6, #400]	; 0x190

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400061f4:	e5c6118d 	strb	r1, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
400061f8:	e1a03001 	mov	r3, r1
400061fc:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40006200:	e1a0400e 	mov	r4, lr
40006204:	eafffcc6 	b	40005524 <ControlHandle+0x8c>
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
40006208:	e3a00004 	mov	r0, #4
4000620c:	e59f1110 	ldr	r1, [pc, #272]	; 40006324 <ControlHandle+0xe8c>
40006210:	eb003355 	bl	40012f6c <CyU3PDebugPrint>
40006214:	e3a0e0ff 	mov	lr, #255	; 0xff
40006218:	e1a0400e 	mov	r4, lr
4000621c:	e1a0c00e 	mov	ip, lr
40006220:	e1a0300e 	mov	r3, lr
40006224:	eafffcbe 	b	40005524 <ControlHandle+0x8c>
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
40006228:	e3540002 	cmp	r4, #2
4000622c:	92844004 	addls	r4, r4, #4
40006230:	920440ff 	andls	r4, r4, #255	; 0xff
40006234:	9afffde5 	bls	400059d0 <ControlHandle+0x538>
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
40006238:	e1a03004 	mov	r3, r4
4000623c:	e3a00004 	mov	r0, #4
40006240:	e59f10e0 	ldr	r1, [pc, #224]	; 40006328 <ControlHandle+0xe90>
40006244:	eb003348 	bl	40012f6c <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
40006248:	e59f30a4 	ldr	r3, [pc, #164]	; 400062f4 <ControlHandle+0xe5c>
4000624c:	e3a02000 	mov	r2, #0
40006250:	e3a04004 	mov	r4, #4
40006254:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
40006258:	eafffddc 	b	400059d0 <ControlHandle+0x538>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
4000625c:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006260:	e2414001 	sub	r4, r1, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006264:	e3520004 	cmp	r2, #4
40006268:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
4000626c:	e20410ff 	and	r1, r4, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006270:	0a000003 	beq	40006284 <ControlHandle+0xdec>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
40006274:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
40006278:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
4000627c:	13a02004 	movne	r2, #4
40006280:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
40006284:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006288:	959f309c 	ldrls	r3, [pc, #156]	; 4000632c <ControlHandle+0xe94>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
4000628c:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006290:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006294:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006298:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
4000629c:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
400062a0:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400062a4:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
400062a8:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
400062ac:	eafffeb8 	b	40005d94 <ControlHandle+0x8fc>
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
400062b0:	e3530002 	cmp	r3, #2
					 				 Data0 += 4;
400062b4:	92837004 	addls	r7, r3, #4
400062b8:	920770ff 	andls	r7, r7, #255	; 0xff
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
400062bc:	9affffac 	bls	40006174 <ControlHandle+0xcdc>
					 				 Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
400062c0:	e3a00004 	mov	r0, #4
400062c4:	e59f105c 	ldr	r1, [pc, #92]	; 40006328 <ControlHandle+0xe90>
400062c8:	e59d3018 	ldr	r3, [sp, #24]
400062cc:	eb003326 	bl	40012f6c <CyU3PDebugPrint>
									Data0 = 4; //set to default.
400062d0:	e3a07004 	mov	r7, #4
400062d4:	eaffffa6 	b	40006174 <ControlHandle+0xcdc>
400062d8:	e59f0020 	ldr	r0, [pc, #32]	; 40006300 <ControlHandle+0xe68>
400062dc:	eafffdaa 	b	4000598c <ControlHandle+0x4f4>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400062e0:	e3a03000 	mov	r3, #0
400062e4:	eafffe4a 	b	40005c14 <ControlHandle+0x77c>
400062e8:	e59f0010 	ldr	r0, [pc, #16]	; 40006300 <ControlHandle+0xe68>
400062ec:	e3a03000 	mov	r3, #0
400062f0:	eafffd9e 	b	40005970 <ControlHandle+0x4d8>
400062f4:	40030000 	.word	0x40030000
400062f8:	4003310c 	.word	0x4003310c
400062fc:	400114dc 	.word	0x400114dc
40006300:	40030f90 	.word	0x40030f90
40006304:	40030fe8 	.word	0x40030fe8
40006308:	00010001 	.word	0x00010001
4000630c:	00ff00ff 	.word	0x00ff00ff
40006310:	4001141c 	.word	0x4001141c
40006314:	40011458 	.word	0x40011458
40006318:	40032ec4 	.word	0x40032ec4
4000631c:	40030fdc 	.word	0x40030fdc
40006320:	40011480 	.word	0x40011480
40006324:	400114ac 	.word	0x400114ac
40006328:	400113e4 	.word	0x400113e4
4000632c:	4001114c 	.word	0x4001114c

40006330 <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006330:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006334:	e59fa960 	ldr	sl, [pc, #2400]	; 40006c9c <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006338:	e59f8960 	ldr	r8, [pc, #2400]	; 40006ca0 <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000633c:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006340:	e1a09080 	lsl	r9, r0, #1
40006344:	e0892000 	add	r2, r9, r0
40006348:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
4000634c:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006350:	e24dd05c 	sub	sp, sp, #92	; 0x5c
40006354:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006358:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
4000635c:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
40006360:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006364:	0a000076 	beq	40006544 <CTControlHandle+0x214>
40006368:	9a000021 	bls	400063f4 <CTControlHandle+0xc4>
4000636c:	e3550085 	cmp	r5, #133	; 0x85
40006370:	0a000059 	beq	400064dc <CTControlHandle+0x1ac>
40006374:	3a00004e 	bcc	400064b4 <CTControlHandle+0x184>
40006378:	e3550086 	cmp	r5, #134	; 0x86
4000637c:	0a000080 	beq	40006584 <CTControlHandle+0x254>
40006380:	e3550087 	cmp	r5, #135	; 0x87
40006384:	0a000076 	beq	40006564 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40006388:	e3a00000 	mov	r0, #0
4000638c:	e3a01001 	mov	r1, #1
40006390:	e1a02000 	mov	r2, r0
40006394:	eb005e5c 	bl	4001dd0c <CyU3PUsbStall>
40006398:	e59f4904 	ldr	r4, [pc, #2308]	; 40006ca4 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
4000639c:	e1a02006 	mov	r2, r6
400063a0:	e3a00004 	mov	r0, #4
400063a4:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006ca8 <CTControlHandle+0x978>
400063a8:	e5da3000 	ldrb	r3, [sl]
400063ac:	eb0032ee 	bl	40012f6c <CyU3PDebugPrint>
			  break;
400063b0:	e3a0c0ff 	mov	ip, #255	; 0xff
400063b4:	e1a0600c 	mov	r6, ip
400063b8:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
400063bc:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
400063c0:	e58dc008 	str	ip, [sp, #8]
400063c4:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006cac <CTControlHandle+0x97c>
400063c8:	e3a0c0ff 	mov	ip, #255	; 0xff
400063cc:	e1a02005 	mov	r2, r5
400063d0:	e1a03008 	mov	r3, r8
400063d4:	e3a00004 	mov	r0, #4
400063d8:	e88d4040 	stm	sp, {r6, lr}
400063dc:	e58dc00c 	str	ip, [sp, #12]
400063e0:	e58de010 	str	lr, [sp, #16]
400063e4:	e58d7014 	str	r7, [sp, #20]
400063e8:	eb0032df 	bl	40012f6c <CyU3PDebugPrint>
}
400063ec:	e28dd05c 	add	sp, sp, #92	; 0x5c
400063f0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400063f4:	e3550081 	cmp	r5, #129	; 0x81
400063f8:	0a000042 	beq	40006508 <CTControlHandle+0x1d8>
400063fc:	9a000011 	bls	40006448 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006400:	e59f489c 	ldr	r4, [pc, #2204]	; 40006ca4 <CTControlHandle+0x974>
40006404:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006408:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
4000640c:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006410:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006414:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006418:	0a00002c 	beq	400064d0 <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
4000641c:	e3a0e000 	mov	lr, #0
40006420:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
40006424:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006428:	e1a00007 	mov	r0, r7
4000642c:	e59f187c 	ldr	r1, [pc, #2172]	; 40006cb0 <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
40006430:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
40006434:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006438:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000643c:	eb005c07 	bl	4001d460 <CyU3PUsbSendEP0Data>
40006440:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006444:	eaffffdc 	b	400063bc <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006448:	e3550001 	cmp	r5, #1
4000644c:	1affffcd 	bne	40006388 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006450:	e59f484c 	ldr	r4, [pc, #2124]	; 40006ca4 <CTControlHandle+0x974>
40006454:	e28d2056 	add	r2, sp, #86	; 0x56
40006458:	e3a00020 	mov	r0, #32
4000645c:	e2841058 	add	r1, r4, #88	; 0x58
40006460:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006464:	eb00598f 	bl	4001caa8 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006468:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
4000646c:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
40006470:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006474:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
40006478:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
4000647c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006480:	e3520009 	cmp	r2, #9
40006484:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006488:	ea000155 	b	400069e4 <CTControlHandle+0x6b4>
4000648c:	400069a0 	.word	0x400069a0
40006490:	400069e4 	.word	0x400069e4
40006494:	400066b0 	.word	0x400066b0
40006498:	400069e4 	.word	0x400069e4
4000649c:	400069e4 	.word	0x400069e4
400064a0:	400069e4 	.word	0x400069e4
400064a4:	4000662c 	.word	0x4000662c
400064a8:	400069e4 	.word	0x400069e4
400064ac:	400069e4 	.word	0x400069e4
400064b0:	400065b0 	.word	0x400065b0
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
400064b4:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006ca4 <CTControlHandle+0x974>
400064b8:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
400064bc:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400064c0:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
400064c4:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
400064c8:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400064cc:	1affffd2 	bne	4000641c <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400064d0:	e3a01001 	mov	r1, #1
400064d4:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
400064d8:	eaffffd1 	b	40006424 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400064dc:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006ca4 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
400064e0:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400064e4:	e3a00002 	mov	r0, #2
400064e8:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400064ec:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400064f0:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
400064f4:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400064f8:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400064fc:	eb005bd7 	bl	4001d460 <CyU3PUsbSendEP0Data>
40006500:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006504:	eaffffac 	b	400063bc <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006508:	e59f4794 	ldr	r4, [pc, #1940]	; 40006ca4 <CTControlHandle+0x974>
4000650c:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006510:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
40006514:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006518:	e1a00007 	mov	r0, r7
4000651c:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006520:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006524:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
40006528:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
4000652c:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006530:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006534:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006538:	eb005bc8 	bl	4001d460 <CyU3PUsbSendEP0Data>
4000653c:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006540:	eaffff9d 	b	400063bc <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006544:	e59f4758 	ldr	r4, [pc, #1880]	; 40006ca4 <CTControlHandle+0x974>
40006548:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
4000654c:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006550:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006554:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006558:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000655c:	1affffae 	bne	4000641c <CTControlHandle+0xec>
40006560:	eaffffda 	b	400064d0 <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006564:	e59f4738 	ldr	r4, [pc, #1848]	; 40006ca4 <CTControlHandle+0x974>
40006568:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
4000656c:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006570:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006574:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006578:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000657c:	1affffa6 	bne	4000641c <CTControlHandle+0xec>
40006580:	eaffffd2 	b	400064d0 <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
40006584:	e59f4718 	ldr	r4, [pc, #1816]	; 40006ca4 <CTControlHandle+0x974>
40006588:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
4000658c:	e1a01004 	mov	r1, r4
40006590:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006594:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006598:	e3a00001 	mov	r0, #1
4000659c:	eb005baf 	bl	4001d460 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400065a0:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400065a4:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400065a8:	e3a07001 	mov	r7, #1
400065ac:	eaffff82 	b	400063bc <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400065b0:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006cb4 <CTControlHandle+0x984>
400065b4:	e3e01000 	mvn	r1, #0
400065b8:	e596001c 	ldr	r0, [r6, #28]
400065bc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400065c0:	eb000ebc 	bl	4000a0b8 <_txe_mutex_get>
					  if(getData == 1)
400065c4:	e59de030 	ldr	lr, [sp, #48]	; 0x30
400065c8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400065cc:	e35e0001 	cmp	lr, #1
400065d0:	0a0001a9 	beq	40006c7c <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
400065d4:	e35e00ff 	cmp	lr, #255	; 0xff
400065d8:	0a00019e 	beq	40006c58 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx);
400065dc:	e3a08000 	mov	r8, #0
400065e0:	e1a00006 	mov	r0, r6
400065e4:	e3a01017 	mov	r1, #23
400065e8:	e1a0200b 	mov	r2, fp
400065ec:	e58d8000 	str	r8, [sp]
400065f0:	e58d8004 	str	r8, [sp, #4]
400065f4:	ebfff3af 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400065f8:	e596001c 	ldr	r0, [r6, #28]
400065fc:	eb000ee2 	bl	4000a18c <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
40006600:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006604:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006608:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
4000660c:	e3a00004 	mov	r0, #4
40006610:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006cb8 <CTControlHandle+0x988>
40006614:	e1a02008 	mov	r2, r8
40006618:	e1a03006 	mov	r3, r6
4000661c:	e58dc000 	str	ip, [sp]
40006620:	eb003251 	bl	40012f6c <CyU3PDebugPrint>
					  break;
40006624:	e3a0c0ff 	mov	ip, #255	; 0xff
40006628:	eaffff63 	b	400063bc <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
4000662c:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
40006630:	e3580001 	cmp	r8, #1
40006634:	13580008 	cmpne	r8, #8
40006638:	13a00000 	movne	r0, #0
4000663c:	03a00001 	moveq	r0, #1
40006640:	1a000180 	bne	40006c48 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006644:	e59f8668 	ldr	r8, [pc, #1640]	; 40006cb4 <CTControlHandle+0x984>
40006648:	e3e01000 	mvn	r1, #0
4000664c:	e598001c 	ldr	r0, [r8, #28]
40006650:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006654:	eb000e97 	bl	4000a0b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
40006658:	e59da030 	ldr	sl, [sp, #48]	; 0x30
4000665c:	e3a01016 	mov	r1, #22
40006660:	e1a0200b 	mov	r2, fp
40006664:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006668:	e3a0c000 	mov	ip, #0
4000666c:	e1a00008 	mov	r0, r8
40006670:	e88d1400 	stm	sp, {sl, ip}
40006674:	ebfff38f 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006678:	e598001c 	ldr	r0, [r8, #28]
4000667c:	eb000ec2 	bl	4000a18c <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006680:	e59f0618 	ldr	r0, [pc, #1560]	; 40006ca0 <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
40006684:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006688:	e0891006 	add	r1, r9, r6
4000668c:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
40006690:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006694:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
40006698:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
4000669c:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
400066a0:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
400066a4:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
400066a8:	e3a0c0ff 	mov	ip, #255	; 0xff
400066ac:	eaffff42 	b	400063bc <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
400066b0:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
400066b4:	e3500001 	cmp	r0, #1
400066b8:	13500004 	cmpne	r0, #4
400066bc:	1a00015c 	bne	40006c34 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
400066c0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
400066c4:	e59de034 	ldr	lr, [sp, #52]	; 0x34
400066c8:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
400066cc:	e35200f9 	cmp	r2, #249	; 0xf9
400066d0:	8a000157 	bhi	40006c34 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066d4:	e242a0c8 	sub	sl, r2, #200	; 0xc8
400066d8:	e1a0c80a 	lsl	ip, sl, #16
400066dc:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
400066e0:	e262a027 	rsb	sl, r2, #39	; 0x27
400066e4:	e58da038 	str	sl, [sp, #56]	; 0x38
400066e8:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400066ec:	e26210c8 	rsb	r1, r2, #200	; 0xc8
400066f0:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066f4:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
400066f8:	e1a01801 	lsl	r1, r1, #16
400066fc:	e262e064 	rsb	lr, r2, #100	; 0x64
40006700:	81a0182a 	lsrhi	r1, sl, #16
40006704:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006708:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000670c:	e3520064 	cmp	r2, #100	; 0x64
40006710:	e1a0080e 	lsl	r0, lr, #16
40006714:	81a0082c 	lsrhi	r0, ip, #16
40006718:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000671c:	e242a014 	sub	sl, r2, #20
40006720:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006724:	91a00820 	lsrls	r0, r0, #16
40006728:	e262a014 	rsb	sl, r2, #20
4000672c:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006730:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
40006734:	e1510000 	cmp	r1, r0
40006738:	31a0a001 	movcc	sl, r1
4000673c:	21a0a000 	movcs	sl, r0
40006740:	e1a0c80c 	lsl	ip, ip, #16
40006744:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006748:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000674c:	91a0e82c 	lsrls	lr, ip, #16
40006750:	e59fc564 	ldr	ip, [pc, #1380]	; 40006cbc <CTControlHandle+0x98c>
40006754:	e58da020 	str	sl, [sp, #32]
40006758:	e06ca001 	rsb	sl, ip, r1
4000675c:	81a0e82e 	lsrhi	lr, lr, #16
40006760:	e27ac000 	rsbs	ip, sl, #0
40006764:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006768:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
4000676c:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006770:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006774:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006778:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
4000677c:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006780:	e242a00a 	sub	sl, r2, #10
40006784:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006788:	e59da020 	ldr	sl, [sp, #32]
4000678c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006790:	e15e000a 	cmp	lr, sl
40006794:	31a0a00e 	movcc	sl, lr
40006798:	e262c00a 	rsb	ip, r2, #10
4000679c:	e58dc040 	str	ip, [sp, #64]	; 0x40
400067a0:	e58da038 	str	sl, [sp, #56]	; 0x38
400067a4:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400067a8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400067ac:	e3520014 	cmp	r2, #20
400067b0:	91a0a82c 	lsrls	sl, ip, #16
400067b4:	81a0a82a 	lsrhi	sl, sl, #16
400067b8:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400067bc:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067c0:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400067c4:	33a0c001 	movcc	ip, #1
400067c8:	e58da03c 	str	sl, [sp, #60]	; 0x3c
400067cc:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067d0:	e1a0a801 	lsl	sl, r1, #16
400067d4:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
400067d8:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067dc:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400067e0:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
400067e4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067e8:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
400067ec:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400067f0:	e58d104c 	str	r1, [sp, #76]	; 0x4c
400067f4:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
400067f8:	e1a00800 	lsl	r0, r0, #16
400067fc:	e15c000a 	cmp	ip, sl
40006800:	21a0c00a 	movcs	ip, sl
40006804:	e352000a 	cmp	r2, #10
40006808:	e59da020 	ldr	sl, [sp, #32]
4000680c:	81a00821 	lsrhi	r0, r1, #16
40006810:	91a00820 	lsrls	r0, r0, #16
40006814:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006818:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000681c:	e15e000a 	cmp	lr, sl
40006820:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006824:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006828:	e58dc044 	str	ip, [sp, #68]	; 0x44
4000682c:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006830:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006834:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006838:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
4000683c:	e59de048 	ldr	lr, [sp, #72]	; 0x48
40006840:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006844:	e262a002 	rsb	sl, r2, #2
40006848:	e15e0000 	cmp	lr, r0
4000684c:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006850:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006854:	e3520005 	cmp	r2, #5
40006858:	e58da040 	str	sl, [sp, #64]	; 0x40
4000685c:	e1a01801 	lsl	r1, r1, #16
40006860:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006864:	81a0182c 	lsrhi	r1, ip, #16
40006868:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
4000686c:	e58de04c 	str	lr, [sp, #76]	; 0x4c
40006870:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006874:	e59de040 	ldr	lr, [sp, #64]	; 0x40
40006878:	91a01821 	lsrls	r1, r1, #16
4000687c:	e15a000c 	cmp	sl, ip
40006880:	e58d1020 	str	r1, [sp, #32]
40006884:	33a00003 	movcc	r0, #3
40006888:	e58d0038 	str	r0, [sp, #56]	; 0x38
4000688c:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006890:	e1a0080e 	lsl	r0, lr, #16
40006894:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006898:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
4000689c:	e15e000a 	cmp	lr, sl
400068a0:	21a0e00a 	movcs	lr, sl
400068a4:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400068a8:	e59da048 	ldr	sl, [sp, #72]	; 0x48
400068ac:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068b0:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400068b4:	91a01820 	lsrls	r1, r0, #16
400068b8:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
400068bc:	81a01821 	lsrhi	r1, r1, #16
400068c0:	e15a000c 	cmp	sl, ip
400068c4:	33a00004 	movcc	r0, #4
400068c8:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068cc:	e2420001 	sub	r0, r2, #1
400068d0:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400068d4:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400068d8:	e59d0020 	ldr	r0, [sp, #32]
400068dc:	e262c001 	rsb	ip, r2, #1
400068e0:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400068e4:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400068e8:	e59da038 	ldr	sl, [sp, #56]	; 0x38
400068ec:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400068f0:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400068f4:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400068f8:	e3520001 	cmp	r2, #1
400068fc:	91a02800 	lslls	r2, r0, #16
40006900:	81a0280a 	lslhi	r2, sl, #16
40006904:	e151000e 	cmp	r1, lr
40006908:	31a0a001 	movcc	sl, r1
4000690c:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006910:	e151000e 	cmp	r1, lr
40006914:	21a0100c 	movcs	r1, ip
40006918:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
4000691c:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006920:	e59fa38c 	ldr	sl, [pc, #908]	; 40006cb4 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006924:	91a02001 	movls	r2, r1
40006928:	83a02007 	movhi	r2, #7
4000692c:	e2822001 	add	r2, r2, #1
40006930:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006934:	e3e01000 	mvn	r1, #0
40006938:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
4000693c:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006940:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006944:	eb000ddb 	bl	4000a0b8 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006948:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
4000694c:	e3a01003 	mov	r1, #3
40006950:	e1a0200b 	mov	r2, fp
40006954:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006958:	e58dc000 	str	ip, [sp]
4000695c:	e1a0000a 	mov	r0, sl
40006960:	e3a0c000 	mov	ip, #0
40006964:	e58dc004 	str	ip, [sp, #4]
40006968:	ebfff2d2 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000696c:	e59a001c 	ldr	r0, [sl, #28]
40006970:	eb000e05 	bl	4000a18c <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006974:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006978:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
4000697c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006980:	e0891006 	add	r1, r9, r6
40006984:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006988:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
4000698c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
40006990:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006994:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006998:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
4000699c:	eaffff3f 	b	400066a0 <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400069a0:	e0892006 	add	r2, r9, r6
400069a4:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
400069a8:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
400069ac:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400069b0:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
400069b4:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
400069b8:	e35e0007 	cmp	lr, #7
400069bc:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
400069c0:	ea000097 	b	40006c24 <CTControlHandle+0x8f4>
400069c4:	40006bb8 	.word	0x40006bb8
400069c8:	40006b1c 	.word	0x40006b1c
400069cc:	40006c24 	.word	0x40006c24
400069d0:	40006ab8 	.word	0x40006ab8
400069d4:	40006c24 	.word	0x40006c24
400069d8:	40006c24 	.word	0x40006c24
400069dc:	40006c24 	.word	0x40006c24
400069e0:	40006a18 	.word	0x40006a18
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400069e4:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400069e8:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400069ec:	e0899006 	add	r9, r9, r6
400069f0:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400069f4:	e1a02006 	mov	r2, r6
400069f8:	e3a00004 	mov	r0, #4
400069fc:	e59f12bc 	ldr	r1, [pc, #700]	; 40006cc0 <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006a00:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006a04:	eb003158 	bl	40012f6c <CyU3PDebugPrint>
			  		 break;
40006a08:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a0c:	e1a0600c 	mov	r6, ip
40006a10:	e1a0800c 	mov	r8, ip
40006a14:	eafffe68 	b	400063bc <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a18:	e59f6294 	ldr	r6, [pc, #660]	; 40006cb4 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006a1c:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a20:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006a24:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a28:	e3e01000 	mvn	r1, #0
40006a2c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006a30:	eb000da0 	bl	4000a0b8 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006a34:	e1a0200b 	mov	r2, fp
40006a38:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006a3c:	e3a01010 	mov	r1, #16
40006a40:	e1a00006 	mov	r0, r6
40006a44:	e58da000 	str	sl, [sp]
40006a48:	e58da004 	str	sl, [sp, #4]
40006a4c:	ebfff299 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a50:	e596001c 	ldr	r0, [r6, #28]
40006a54:	eb000dcc 	bl	4000a18c <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a58:	e3e01000 	mvn	r1, #0
40006a5c:	e596001c 	ldr	r0, [r6, #28]
40006a60:	eb000d94 	bl	4000a0b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a64:	e3a08001 	mov	r8, #1
40006a68:	e3a01014 	mov	r1, #20
40006a6c:	e3a02027 	mov	r2, #39	; 0x27
40006a70:	e3a03030 	mov	r3, #48	; 0x30
40006a74:	e1a00006 	mov	r0, r6
40006a78:	e88d0500 	stm	sp, {r8, sl}
40006a7c:	ebfff28d 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a80:	e3a0c002 	mov	ip, #2
40006a84:	e3a01015 	mov	r1, #21
40006a88:	e3a02025 	mov	r2, #37	; 0x25
40006a8c:	e3a03030 	mov	r3, #48	; 0x30
40006a90:	e1a00006 	mov	r0, r6
40006a94:	e58dc000 	str	ip, [sp]
40006a98:	e58da004 	str	sl, [sp, #4]
40006a9c:	ebfff285 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006aa0:	e596001c 	ldr	r0, [r6, #28]
40006aa4:	eb000db8 	bl	4000a18c <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006aa8:	e3a0c0ff 	mov	ip, #255	; 0xff
40006aac:	e1a0600c 	mov	r6, ip
40006ab0:	e3a08008 	mov	r8, #8
40006ab4:	eafffe40 	b	400063bc <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006ab8:	e59f81f4 	ldr	r8, [pc, #500]	; 40006cb4 <CTControlHandle+0x984>
40006abc:	e3e01000 	mvn	r1, #0
40006ac0:	e598001c 	ldr	r0, [r8, #28]
40006ac4:	eb000d7b 	bl	4000a0b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006ac8:	e3a06000 	mov	r6, #0
40006acc:	e3a01014 	mov	r1, #20
40006ad0:	e3a02027 	mov	r2, #39	; 0x27
40006ad4:	e3a03030 	mov	r3, #48	; 0x30
40006ad8:	e1a00008 	mov	r0, r8
40006adc:	e58d6000 	str	r6, [sp]
40006ae0:	e58d6004 	str	r6, [sp, #4]
40006ae4:	ebfff273 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006ae8:	e3a01015 	mov	r1, #21
40006aec:	e3a02025 	mov	r2, #37	; 0x25
40006af0:	e3a03030 	mov	r3, #48	; 0x30
40006af4:	e1a00008 	mov	r0, r8
40006af8:	e58d6000 	str	r6, [sp]
40006afc:	e58d6004 	str	r6, [sp, #4]
40006b00:	ebfff26c 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006b04:	e598001c 	ldr	r0, [r8, #28]
40006b08:	eb000d9f 	bl	4000a18c <_txe_mutex_put>
40006b0c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b10:	e1a0600c 	mov	r6, ip
40006b14:	e3a08004 	mov	r8, #4
40006b18:	eafffe27 	b	400063bc <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b1c:	e59fa190 	ldr	sl, [pc, #400]	; 40006cb4 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006b20:	e3a06000 	mov	r6, #0
40006b24:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b28:	e3e01000 	mvn	r1, #0
40006b2c:	e59a001c 	ldr	r0, [sl, #28]
40006b30:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006b34:	eb000d5f 	bl	4000a0b8 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006b38:	e1a0200b 	mov	r2, fp
40006b3c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006b40:	e3a01010 	mov	r1, #16
40006b44:	e1a0000a 	mov	r0, sl
40006b48:	e58d6000 	str	r6, [sp]
40006b4c:	e58d6004 	str	r6, [sp, #4]
40006b50:	ebfff258 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006b54:	e59a001c 	ldr	r0, [sl, #28]
40006b58:	eb000d8b 	bl	4000a18c <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b5c:	e3e01000 	mvn	r1, #0
40006b60:	e59a001c 	ldr	r0, [sl, #28]
40006b64:	eb000d53 	bl	4000a0b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006b68:	e3a01014 	mov	r1, #20
40006b6c:	e3a02027 	mov	r2, #39	; 0x27
40006b70:	e3a03030 	mov	r3, #48	; 0x30
40006b74:	e1a0000a 	mov	r0, sl
40006b78:	e58d6000 	str	r6, [sp]
40006b7c:	e58d6004 	str	r6, [sp, #4]
40006b80:	ebfff24c 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006b84:	e3a01015 	mov	r1, #21
40006b88:	e3a02025 	mov	r2, #37	; 0x25
40006b8c:	e3a03030 	mov	r3, #48	; 0x30
40006b90:	e1a0000a 	mov	r0, sl
40006b94:	e58d6000 	str	r6, [sp]
40006b98:	e58d6004 	str	r6, [sp, #4]
40006b9c:	ebfff245 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006ba0:	e59a001c 	ldr	r0, [sl, #28]
40006ba4:	eb000d78 	bl	4000a18c <_txe_mutex_put>
40006ba8:	e3a0c0ff 	mov	ip, #255	; 0xff
40006bac:	e1a0600c 	mov	r6, ip
40006bb0:	e3a08002 	mov	r8, #2
40006bb4:	eafffe00 	b	400063bc <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006bb8:	e59f60f4 	ldr	r6, [pc, #244]	; 40006cb4 <CTControlHandle+0x984>
40006bbc:	e3e01000 	mvn	r1, #0
40006bc0:	e596001c 	ldr	r0, [r6, #28]
40006bc4:	eb000d3b 	bl	4000a0b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006bc8:	e3a08000 	mov	r8, #0
40006bcc:	e3a0a001 	mov	sl, #1
40006bd0:	e3a01014 	mov	r1, #20
40006bd4:	e3a02027 	mov	r2, #39	; 0x27
40006bd8:	e3a03030 	mov	r3, #48	; 0x30
40006bdc:	e1a00006 	mov	r0, r6
40006be0:	e58d8004 	str	r8, [sp, #4]
40006be4:	e58da000 	str	sl, [sp]
40006be8:	ebfff232 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006bec:	e3a0c002 	mov	ip, #2
40006bf0:	e3a01015 	mov	r1, #21
40006bf4:	e3a02025 	mov	r2, #37	; 0x25
40006bf8:	e3a03030 	mov	r3, #48	; 0x30
40006bfc:	e1a00006 	mov	r0, r6
40006c00:	e58dc000 	str	ip, [sp]
40006c04:	e58d8004 	str	r8, [sp, #4]
40006c08:	ebfff22a 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006c0c:	e596001c 	ldr	r0, [r6, #28]
40006c10:	eb000d5d 	bl	4000a18c <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006c14:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c18:	e1a0600c 	mov	r6, ip
40006c1c:	e1a0800a 	mov	r8, sl
40006c20:	eafffde5 	b	400063bc <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006c24:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c28:	e1a08000 	mov	r8, r0
40006c2c:	e1a0600c 	mov	r6, ip
40006c30:	eafffde1 	b	400063bc <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006c34:	e3a00000 	mov	r0, #0
40006c38:	e3a01001 	mov	r1, #1
40006c3c:	e1a02000 	mov	r2, r0
40006c40:	eb005c31 	bl	4001dd0c <CyU3PUsbStall>
40006c44:	eafffe95 	b	400066a0 <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006c48:	e3a01001 	mov	r1, #1
40006c4c:	e1a02000 	mov	r2, r0
40006c50:	eb005c2d 	bl	4001dd0c <CyU3PUsbStall>
40006c54:	eafffe91 	b	400066a0 <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006c58:	e3a0e008 	mov	lr, #8
40006c5c:	e3a0c000 	mov	ip, #0
40006c60:	e1a00006 	mov	r0, r6
40006c64:	e3a01017 	mov	r1, #23
40006c68:	e1a0200b 	mov	r2, fp
40006c6c:	e58de000 	str	lr, [sp]
40006c70:	e58dc004 	str	ip, [sp, #4]
40006c74:	ebfff20f 	bl	400034b8 <cmdSet>
40006c78:	eafffe5e 	b	400065f8 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006c7c:	e3a08004 	mov	r8, #4
40006c80:	e3a0e000 	mov	lr, #0
40006c84:	e1a00006 	mov	r0, r6
40006c88:	e3a01017 	mov	r1, #23
40006c8c:	e1a0200b 	mov	r2, fp
40006c90:	e88d4100 	stm	sp, {r8, lr}
40006c94:	ebfff207 	bl	400034b8 <cmdSet>
40006c98:	eafffe56 	b	400065f8 <CTControlHandle+0x2c8>
40006c9c:	4003310c 	.word	0x4003310c
40006ca0:	40030000 	.word	0x40030000
40006ca4:	40030f90 	.word	0x40030f90
40006ca8:	40011578 	.word	0x40011578
40006cac:	4001159c 	.word	0x4001159c
40006cb0:	40030fe8 	.word	0x40030fe8
40006cb4:	40032ec4 	.word	0x40032ec4
40006cb8:	4001152c 	.word	0x4001152c
40006cbc:	0000ffff 	.word	0x0000ffff
40006cc0:	40011554 	.word	0x40011554

40006cc4 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006cc4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006cc8:	e59f4a2c 	ldr	r4, [pc, #2604]	; 400076fc <UVCAppEP0Thread_Entry+0xa38>
40006ccc:	e59f6a2c 	ldr	r6, [pc, #2604]	; 40007700 <UVCAppEP0Thread_Entry+0xa3c>
40006cd0:	e59faa2c 	ldr	sl, [pc, #2604]	; 40007704 <UVCAppEP0Thread_Entry+0xa40>
40006cd4:	e59f9a2c 	ldr	r9, [pc, #2604]	; 40007708 <UVCAppEP0Thread_Entry+0xa44>
40006cd8:	e59f8a2c 	ldr	r8, [pc, #2604]	; 4000770c <UVCAppEP0Thread_Entry+0xa48>
40006cdc:	e59f7a2c 	ldr	r7, [pc, #2604]	; 40007710 <UVCAppEP0Thread_Entry+0xa4c>
40006ce0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006ce4:	e1a05004 	mov	r5, r4
40006ce8:	e3e0c000 	mvn	ip, #0
40006cec:	e59f0a08 	ldr	r0, [pc, #2568]	; 400076fc <UVCAppEP0Thread_Entry+0xa38>
40006cf0:	e3a0104c 	mov	r1, #76	; 0x4c
40006cf4:	e3a02001 	mov	r2, #1
40006cf8:	e28d3030 	add	r3, sp, #48	; 0x30
40006cfc:	e58dc000 	str	ip, [sp]
40006d00:	eb000c24 	bl	40009d98 <_txe_event_flags_get>
40006d04:	e3500000 	cmp	r0, #0
40006d08:	1a000030 	bne	40006dd0 <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006d0c:	e5953040 	ldr	r3, [r5, #64]	; 0x40
40006d10:	e3530000 	cmp	r3, #0
40006d14:	0a000089 	beq	40006f40 <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006d18:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d1c:	e313000c 	tst	r3, #12
40006d20:	1a000072 	bne	40006ef0 <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006d24:	e3130004 	tst	r3, #4
40006d28:	0a00001c 	beq	40006da0 <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006d2c:	e1d8e0b0 	ldrh	lr, [r8]
40006d30:	e1a0242e 	lsr	r2, lr, #8
40006d34:	e3520003 	cmp	r2, #3
40006d38:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006d3c:	ea000012 	b	40006d8c <UVCAppEP0Thread_Entry+0xc8>
40006d40:	40006d8c 	.word	0x40006d8c
40006d44:	40006e70 	.word	0x40006e70
40006d48:	40006d50 	.word	0x40006d50
40006d4c:	40006eac 	.word	0x40006eac
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006d50:	e1d920b0 	ldrh	r2, [r9]
40006d54:	e3520c06 	cmp	r2, #1536	; 0x600
40006d58:	0a0001e0 	beq	400074e0 <UVCAppEP0Thread_Entry+0x81c>
40006d5c:	8a0000d7 	bhi	400070c0 <UVCAppEP0Thread_Entry+0x3fc>
40006d60:	e3520c03 	cmp	r2, #768	; 0x300
40006d64:	0a0001d9 	beq	400074d0 <UVCAppEP0Thread_Entry+0x80c>
40006d68:	8a0001d0 	bhi	400074b0 <UVCAppEP0Thread_Entry+0x7ec>
40006d6c:	e3520c01 	cmp	r2, #256	; 0x100
40006d70:	0a00016f 	beq	40007334 <UVCAppEP0Thread_Entry+0x670>
40006d74:	e3520c02 	cmp	r2, #512	; 0x200
40006d78:	0a000169 	beq	40007324 <UVCAppEP0Thread_Entry+0x660>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006d7c:	e59f1990 	ldr	r1, [pc, #2448]	; 40007714 <UVCAppEP0Thread_Entry+0xa50>
40006d80:	e5da3000 	ldrb	r3, [sl]
40006d84:	e3a00004 	mov	r0, #4
40006d88:	eb003077 	bl	40012f6c <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006d8c:	e3a00000 	mov	r0, #0
40006d90:	e3a01001 	mov	r1, #1
40006d94:	e1a02000 	mov	r2, r0
40006d98:	eb005bdb 	bl	4001dd0c <CyU3PUsbStall>
40006d9c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006da0:	e3130008 	tst	r3, #8
40006da4:	0a000007 	beq	40006dc8 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006da8:	e1d830b0 	ldrh	r3, [r8]
40006dac:	e3530001 	cmp	r3, #1
40006db0:	0a000068 	beq	40006f58 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006db4:	e3a00000 	mov	r0, #0
40006db8:	e3a01001 	mov	r1, #1
40006dbc:	e1a02000 	mov	r2, r0
40006dc0:	eb005bd1 	bl	4001dd0c <CyU3PUsbStall>
40006dc4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006dc8:	e3130040 	tst	r3, #64	; 0x40
40006dcc:	1a000001 	bne	40006dd8 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006dd0:	eb000ed9 	bl	4000a93c <_txe_thread_relinquish>
    }
40006dd4:	eaffffc3 	b	40006ce8 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006dd8:	e3a00018 	mov	r0, #24
40006ddc:	e28d102c 	add	r1, sp, #44	; 0x2c
40006de0:	eb006f92 	bl	40022c30 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006de4:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006de8:	e3520000 	cmp	r2, #0
40006dec:	0a00006d 	beq	40006fa8 <UVCAppEP0Thread_Entry+0x2e4>
40006df0:	e5d6367b 	ldrb	r3, [r6, #1659]	; 0x67b
40006df4:	e3530000 	cmp	r3, #0
40006df8:	1afffff4 	bne	40006dd0 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006dfc:	e5972000 	ldr	r2, [r7]
40006e00:	e3a0b002 	mov	fp, #2
40006e04:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e08:	e5971000 	ldr	r1, [r7]
40006e0c:	e3a0b001 	mov	fp, #1
40006e10:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e14:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e18:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e1c:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006e20:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e24:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006e28:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006e2c:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e30:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e34:	e59f08dc 	ldr	r0, [pc, #2268]	; 40007718 <UVCAppEP0Thread_Entry+0xa54>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006e38:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006e3c:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;
40006e40:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006e44:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e48:	eb003fc3 	bl	40016d5c <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006e4c:	e59f08c4 	ldr	r0, [pc, #2244]	; 40007718 <UVCAppEP0Thread_Entry+0xa54>
40006e50:	e28d1020 	add	r1, sp, #32
40006e54:	eb003f32 	bl	40016b24 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006e58:	e2502000 	subs	r2, r0, #0
40006e5c:	1a00016e 	bne	4000741c <UVCAppEP0Thread_Entry+0x758>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006e60:	e59f3898 	ldr	r3, [pc, #2200]	; 40007700 <UVCAppEP0Thread_Entry+0xa3c>
40006e64:	e5c3b67b 	strb	fp, [r3, #1659]	; 0x67b
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006e68:	eb000eb3 	bl	4000a93c <_txe_thread_relinquish>
40006e6c:	eaffff9d 	b	40006ce8 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006e70:	e1d920b0 	ldrh	r2, [r9]
40006e74:	e3520c06 	cmp	r2, #1536	; 0x600
40006e78:	0a0000dc 	beq	400071f0 <UVCAppEP0Thread_Entry+0x52c>
40006e7c:	8a00009a 	bhi	400070ec <UVCAppEP0Thread_Entry+0x428>
40006e80:	e3520c03 	cmp	r2, #768	; 0x300
40006e84:	0a00011e 	beq	40007304 <UVCAppEP0Thread_Entry+0x640>
40006e88:	8a000115 	bhi	400072e4 <UVCAppEP0Thread_Entry+0x620>
40006e8c:	e3520c01 	cmp	r2, #256	; 0x100
40006e90:	0a00015d 	beq	4000740c <UVCAppEP0Thread_Entry+0x748>
40006e94:	e3520c02 	cmp	r2, #512	; 0x200
40006e98:	1affffb7 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006e9c:	e3a00001 	mov	r0, #1
40006ea0:	ebfffd22 	bl	40006330 <CTControlHandle>
40006ea4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006ea8:	eaffffbc 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006eac:	e1d930b0 	ldrh	r3, [r9]
40006eb0:	e3530c09 	cmp	r3, #2304	; 0x900
40006eb4:	0a0001fd 	beq	400076b0 <UVCAppEP0Thread_Entry+0x9ec>
40006eb8:	8a000093 	bhi	4000710c <UVCAppEP0Thread_Entry+0x448>
40006ebc:	e3530b01 	cmp	r3, #1024	; 0x400
40006ec0:	0a0001f6 	beq	400076a0 <UVCAppEP0Thread_Entry+0x9dc>
40006ec4:	8a00018e 	bhi	40007504 <UVCAppEP0Thread_Entry+0x840>
40006ec8:	e3530c02 	cmp	r3, #512	; 0x200
40006ecc:	0a0001ef 	beq	40007690 <UVCAppEP0Thread_Entry+0x9cc>
40006ed0:	e3530c03 	cmp	r3, #768	; 0x300
40006ed4:	0a0001e9 	beq	40007680 <UVCAppEP0Thread_Entry+0x9bc>
40006ed8:	e3530c01 	cmp	r3, #256	; 0x100
40006edc:	1affffaa 	bne	40006d8c <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006ee0:	e3a00010 	mov	r0, #16
40006ee4:	ebfff96b 	bl	40005498 <ControlHandle>
40006ee8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006eec:	eaffffab 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006ef0:	e59fb824 	ldr	fp, [pc, #2084]	; 4000771c <UVCAppEP0Thread_Entry+0xa58>
40006ef4:	e1d9c0b0 	ldrh	ip, [r9]
40006ef8:	e1d800b0 	ldrh	r0, [r8]
40006efc:	e59f181c 	ldr	r1, [pc, #2076]	; 40007720 <UVCAppEP0Thread_Entry+0xa5c>
40006f00:	e5dbe000 	ldrb	lr, [fp]
40006f04:	e5dab000 	ldrb	fp, [sl]
40006f08:	e58d000c 	str	r0, [sp, #12]
40006f0c:	e58dc008 	str	ip, [sp, #8]
40006f10:	e1d1c0b0 	ldrh	ip, [r1]
40006f14:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006f18:	e58db004 	str	fp, [sp, #4]
40006f1c:	e3a00004 	mov	r0, #4
40006f20:	e59f17fc 	ldr	r1, [pc, #2044]	; 40007724 <UVCAppEP0Thread_Entry+0xa60>
40006f24:	e3a0b000 	mov	fp, #0
40006f28:	e58de000 	str	lr, [sp]
40006f2c:	e58dc010 	str	ip, [sp, #16]
40006f30:	e58db014 	str	fp, [sp, #20]
40006f34:	eb00300c 	bl	40012f6c <CyU3PDebugPrint>
40006f38:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f3c:	eaffff78 	b	40006d24 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006f40:	eb00574a 	bl	4001cc70 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006f44:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006f48:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006f4c:	13a00001 	movne	r0, #1
40006f50:	15850040 	strne	r0, [r5, #64]	; 0x40
40006f54:	eaffff6f 	b	40006d18 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006f58:	e1d920b0 	ldrh	r2, [r9]
40006f5c:	e3520c03 	cmp	r2, #768	; 0x300
40006f60:	0a000088 	beq	40007188 <UVCAppEP0Thread_Entry+0x4c4>
40006f64:	8a000033 	bhi	40007038 <UVCAppEP0Thread_Entry+0x374>
40006f68:	e3520c01 	cmp	r2, #256	; 0x100
40006f6c:	0a000092 	beq	400071bc <UVCAppEP0Thread_Entry+0x4f8>
40006f70:	e3520c02 	cmp	r2, #512	; 0x200
40006f74:	1affff8e 	bne	40006db4 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006f78:	e5da3000 	ldrb	r3, [sl]
40006f7c:	e3530081 	cmp	r3, #129	; 0x81
40006f80:	0a0001b6 	beq	40007660 <UVCAppEP0Thread_Entry+0x99c>
40006f84:	8a00012d 	bhi	40007440 <UVCAppEP0Thread_Entry+0x77c>
40006f88:	e3530001 	cmp	r3, #1
40006f8c:	0a0001a2 	beq	4000761c <UVCAppEP0Thread_Entry+0x958>
                            }
                        }
                        break;

                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006f90:	e3a00000 	mov	r0, #0
40006f94:	e3a01001 	mov	r1, #1
40006f98:	e1a02000 	mov	r2, r0
40006f9c:	eb005b5a 	bl	4001dd0c <CyU3PUsbStall>
40006fa0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006fa4:	eaffff87 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006fa8:	e5d6e67b 	ldrb	lr, [r6, #1659]	; 0x67b
40006fac:	e35e0000 	cmp	lr, #0
40006fb0:	0affff86 	beq	40006dd0 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006fb4:	e5973000 	ldr	r3, [r7]
40006fb8:	e3a0b002 	mov	fp, #2
40006fbc:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006fc0:	e5971000 	ldr	r1, [r7]
40006fc4:	e3a0b001 	mov	fp, #1
40006fc8:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006fcc:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006fd0:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006fd4:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006fd8:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006fdc:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006fe0:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006fe4:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006fe8:	e1a0c002 	mov	ip, r2
40006fec:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ff0:	e59f0720 	ldr	r0, [pc, #1824]	; 40007718 <UVCAppEP0Thread_Entry+0xa54>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006ff4:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006ff8:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006ffc:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40007000:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40007004:	e58dc01c 	str	ip, [sp, #28]
40007008:	eb003f53 	bl	40016d5c <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
4000700c:	e59f0704 	ldr	r0, [pc, #1796]	; 40007718 <UVCAppEP0Thread_Entry+0xa54>
40007010:	e28d1020 	add	r1, sp, #32
40007014:	eb003ec2 	bl	40016b24 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40007018:	e59d301c 	ldr	r3, [sp, #28]
4000701c:	e2502000 	subs	r2, r0, #0
40007020:	1a0000c7 	bne	40007344 <UVCAppEP0Thread_Entry+0x680>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40007024:	e59f26d4 	ldr	r2, [pc, #1748]	; 40007700 <UVCAppEP0Thread_Entry+0xa3c>
					stiflag = CyTrue;
40007028:	e584b09c 	str	fp, [r4, #156]	; 0x9c
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
4000702c:	e5c2367b 	strb	r3, [r2, #1659]	; 0x67b
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40007030:	eb000e41 	bl	4000a93c <_txe_thread_relinquish>
40007034:	eaffff2b 	b	40006ce8 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40007038:	e3520b01 	cmp	r2, #1024	; 0x400
4000703c:	0a00003f 	beq	40007140 <UVCAppEP0Thread_Entry+0x47c>
40007040:	e3520c05 	cmp	r2, #1280	; 0x500
40007044:	1affff5a 	bne	40006db4 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007048:	e5da2000 	ldrb	r2, [sl]
4000704c:	e3520081 	cmp	r2, #129	; 0x81
40007050:	0a000182 	beq	40007660 <UVCAppEP0Thread_Entry+0x99c>
40007054:	8a000125 	bhi	400074f0 <UVCAppEP0Thread_Entry+0x82c>
40007058:	e3520001 	cmp	r2, #1
4000705c:	1affff54 	bne	40006db4 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007060:	e3a00020 	mov	r0, #32
40007064:	e59f16bc 	ldr	r1, [pc, #1724]	; 40007728 <UVCAppEP0Thread_Entry+0xa64>
40007068:	e28d2036 	add	r2, sp, #54	; 0x36
4000706c:	eb00568d 	bl	4001caa8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007070:	e3500000 	cmp	r0, #0
40007074:	1a000162 	bne	40007604 <UVCAppEP0Thread_Entry+0x940>
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
40007078:	e3a02000 	mov	r2, #0
4000707c:	e59f0678 	ldr	r0, [pc, #1656]	; 400076fc <UVCAppEP0Thread_Entry+0xa38>
40007080:	e3a01080 	mov	r1, #128	; 0x80
40007084:	eb000b73 	bl	40009e58 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40007088:	e2502000 	subs	r2, r0, #0
4000708c:	0a000002 	beq	4000709c <UVCAppEP0Thread_Entry+0x3d8>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007090:	e3a00004 	mov	r0, #4
40007094:	e59f1690 	ldr	r1, [pc, #1680]	; 4000772c <UVCAppEP0Thread_Entry+0xa68>
40007098:	eb002fb3 	bl	40012f6c <CyU3PDebugPrint>
                            }
    #endif
                            stiflag = CyTrue;//set still flag
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
4000709c:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
400070a0:	e3a00004 	mov	r0, #4
400070a4:	e59f1684 	ldr	r1, [pc, #1668]	; 40007730 <UVCAppEP0Thread_Entry+0xa6c>
400070a8:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            stiflag = CyTrue;//set still flag
400070ac:	e3a0b001 	mov	fp, #1
400070b0:	e584b09c 	str	fp, [r4, #156]	; 0x9c
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
400070b4:	eb002fac 	bl	40012f6c <CyU3PDebugPrint>
400070b8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070bc:	eaffff41 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400070c0:	e3520c0a 	cmp	r2, #2560	; 0xa00
400070c4:	0a0000f1 	beq	40007490 <UVCAppEP0Thread_Entry+0x7cc>
400070c8:	8a0000e6 	bhi	40007468 <UVCAppEP0Thread_Entry+0x7a4>
400070cc:	e3520c07 	cmp	r2, #1792	; 0x700
400070d0:	0a0000e0 	beq	40007458 <UVCAppEP0Thread_Entry+0x794>
400070d4:	e3520b02 	cmp	r2, #2048	; 0x800
400070d8:	1affff27 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
400070dc:	e3a00007 	mov	r0, #7
400070e0:	ebfff8ec 	bl	40005498 <ControlHandle>
400070e4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070e8:	eaffff2c 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400070ec:	e3520c09 	cmp	r2, #2304	; 0x900
400070f0:	0a000122 	beq	40007580 <UVCAppEP0Thread_Entry+0x8bc>
400070f4:	8a000117 	bhi	40007558 <UVCAppEP0Thread_Entry+0x894>
400070f8:	e3520c07 	cmp	r2, #1792	; 0x700
400070fc:	0a000109 	beq	40007528 <UVCAppEP0Thread_Entry+0x864>
40007100:	e3520b02 	cmp	r2, #2048	; 0x800
40007104:	1affff1c 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>
40007108:	eaffff24 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000710c:	e3530c0f 	cmp	r3, #3840	; 0xf00
40007110:	0a000137 	beq	400075f4 <UVCAppEP0Thread_Entry+0x930>
40007114:	8a000039 	bhi	40007200 <UVCAppEP0Thread_Entry+0x53c>
40007118:	e3530c0b 	cmp	r3, #2816	; 0xb00
4000711c:	0a000130 	beq	400075e4 <UVCAppEP0Thread_Entry+0x920>
40007120:	e3530c0d 	cmp	r3, #3328	; 0xd00
40007124:	0a00012a 	beq	400075d4 <UVCAppEP0Thread_Entry+0x910>
40007128:	e3530c0a 	cmp	r3, #2560	; 0xa00
4000712c:	1affff16 	bne	40006d8c <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(1||CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40007130:	e3a00019 	mov	r0, #25
40007134:	ebfff8d7 	bl	40005498 <ControlHandle>
40007138:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000713c:	eaffff17 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007140:	e5dab000 	ldrb	fp, [sl]
40007144:	e35b0081 	cmp	fp, #129	; 0x81
40007148:	0a000013 	beq	4000719c <UVCAppEP0Thread_Entry+0x4d8>
4000714c:	8a000085 	bhi	40007368 <UVCAppEP0Thread_Entry+0x6a4>
40007150:	e35b0001 	cmp	fp, #1
40007154:	1affff8d 	bne	40006f90 <UVCAppEP0Thread_Entry+0x2cc>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007158:	e28d2036 	add	r2, sp, #54	; 0x36
4000715c:	e3a00020 	mov	r0, #32
40007160:	e59f15c0 	ldr	r1, [pc, #1472]	; 40007728 <UVCAppEP0Thread_Entry+0xa64>
40007164:	eb00564f 	bl	4001caa8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007168:	e2502000 	subs	r2, r0, #0
4000716c:	1affff14 	bne	40006dc4 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007170:	e59f0584 	ldr	r0, [pc, #1412]	; 400076fc <UVCAppEP0Thread_Entry+0xa38>
40007174:	e1a0100b 	mov	r1, fp
40007178:	eb000b36 	bl	40009e58 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
4000717c:	e2502000 	subs	r2, r0, #0
40007180:	0affff0f 	beq	40006dc4 <UVCAppEP0Thread_Entry+0x100>
40007184:	ea000130 	b	4000764c <UVCAppEP0Thread_Entry+0x988>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007188:	e5da2000 	ldrb	r2, [sl]
4000718c:	e3520083 	cmp	r2, #131	; 0x83
40007190:	8a000098 	bhi	400073f8 <UVCAppEP0Thread_Entry+0x734>
40007194:	e3520081 	cmp	r2, #129	; 0x81
40007198:	3a00007d 	bcc	40007394 <UVCAppEP0Thread_Entry+0x6d0>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
4000719c:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400071a0:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400071a4:	e3530003 	cmp	r3, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400071a8:	059f1584 	ldreq	r1, [pc, #1412]	; 40007734 <UVCAppEP0Thread_Entry+0xa70>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
400071ac:	159f1584 	ldrne	r1, [pc, #1412]	; 40007738 <UVCAppEP0Thread_Entry+0xa74>
400071b0:	eb0058aa 	bl	4001d460 <CyU3PUsbSendEP0Data>
400071b4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071b8:	eaffff02 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400071bc:	e5da2000 	ldrb	r2, [sl]
400071c0:	e3520083 	cmp	r2, #131	; 0x83
400071c4:	8a00002f 	bhi	40007288 <UVCAppEP0Thread_Entry+0x5c4>
400071c8:	e3520081 	cmp	r2, #129	; 0x81
400071cc:	3a000014 	bcc	40007224 <UVCAppEP0Thread_Entry+0x560>
                    break;
                case CY_FX_USB_UVC_GET_CUR_REQ:
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
400071d0:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
400071d4:	e3530003 	cmp	r3, #3
400071d8:	0a0000f8 	beq	400075c0 <UVCAppEP0Thread_Entry+0x8fc>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
400071dc:	e3a0001a 	mov	r0, #26
400071e0:	e59f1554 	ldr	r1, [pc, #1364]	; 4000773c <UVCAppEP0Thread_Entry+0xa78>
400071e4:	eb00589d 	bl	4001d460 <CyU3PUsbSendEP0Data>
400071e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071ec:	eafffef5 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
400071f0:	e3a00005 	mov	r0, #5
400071f4:	ebfffc4d 	bl	40006330 <CTControlHandle>
400071f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071fc:	eafffee7 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007200:	e3530c11 	cmp	r3, #4352	; 0x1100
40007204:	0a0000e9 	beq	400075b0 <UVCAppEP0Thread_Entry+0x8ec>
40007208:	8a00002d 	bhi	400072c4 <UVCAppEP0Thread_Entry+0x600>
4000720c:	e3530a01 	cmp	r3, #4096	; 0x1000
40007210:	1afffedd 	bne	40006d8c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007214:	e3a0001f 	mov	r0, #31
40007218:	ebfff89e 	bl	40005498 <ControlHandle>
4000721c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007220:	eafffede 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007224:	e3520001 	cmp	r2, #1
40007228:	1affff58 	bne	40006f90 <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000722c:	e3a00020 	mov	r0, #32
40007230:	e59f14f0 	ldr	r1, [pc, #1264]	; 40007728 <UVCAppEP0Thread_Entry+0xa64>
40007234:	e28d2036 	add	r2, sp, #54	; 0x36
40007238:	eb00561a 	bl	4001caa8 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
4000723c:	e3500000 	cmp	r0, #0
40007240:	1afffedf 	bne	40006dc4 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007244:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
40007248:	e3510003 	cmp	r1, #3
4000724c:	1afffedc 	bne	40006dc4 <UVCAppEP0Thread_Entry+0x100>
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
40007250:	e5d43081 	ldrb	r3, [r4, #129]	; 0x81
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
40007254:	e5d4e07e 	ldrb	lr, [r4, #126]	; 0x7e
                            glProbeCtrlFull[3] = glCommitCtrl[3];
40007258:	e5d4c07f 	ldrb	ip, [r4, #127]	; 0x7f
                            glProbeCtrlFull[4] = glCommitCtrl[4];
4000725c:	e5d40080 	ldrb	r0, [r4, #128]	; 0x80
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
40007260:	e5d42082 	ldrb	r2, [r4, #130]	; 0x82
                            glProbeCtrlFull[7] = glCommitCtrl[7];
40007264:	e5d4b083 	ldrb	fp, [r4, #131]	; 0x83
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
40007268:	e5c63615 	strb	r3, [r6, #1557]	; 0x615
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
4000726c:	e5c6e612 	strb	lr, [r6, #1554]	; 0x612
                            glProbeCtrlFull[3] = glCommitCtrl[3];
40007270:	e5c6c613 	strb	ip, [r6, #1555]	; 0x613
                            glProbeCtrlFull[4] = glCommitCtrl[4];
40007274:	e5c60614 	strb	r0, [r6, #1556]	; 0x614
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
40007278:	e5c62616 	strb	r2, [r6, #1558]	; 0x616
                            glProbeCtrlFull[7] = glCommitCtrl[7];
4000727c:	e5c6b617 	strb	fp, [r6, #1559]	; 0x617
40007280:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007284:	eafffecf 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007288:	e3520086 	cmp	r2, #134	; 0x86
4000728c:	0a000039 	beq	40007378 <UVCAppEP0Thread_Entry+0x6b4>
40007290:	e3520087 	cmp	r2, #135	; 0x87
40007294:	0affffcd 	beq	400071d0 <UVCAppEP0Thread_Entry+0x50c>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007298:	e3520085 	cmp	r2, #133	; 0x85
4000729c:	1affff3b 	bne	40006f90 <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400072a0:	e59f1498 	ldr	r1, [pc, #1176]	; 40007740 <UVCAppEP0Thread_Entry+0xa7c>
400072a4:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400072a8:	e3a0301a 	mov	r3, #26
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
400072ac:	e3a02000 	mov	r2, #0
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
400072b0:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
400072b4:	e5c42059 	strb	r2, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400072b8:	eb005868 	bl	4001d460 <CyU3PUsbSendEP0Data>
400072bc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072c0:	eafffec0 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400072c4:	e3530c12 	cmp	r3, #4608	; 0x1200
400072c8:	0a000107 	beq	400076ec <UVCAppEP0Thread_Entry+0xa28>
400072cc:	e3530c13 	cmp	r3, #4864	; 0x1300
400072d0:	1afffead 	bne	40006d8c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID2-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCGridCtlID2);
400072d4:	e3a00022 	mov	r0, #34	; 0x22
400072d8:	ebfff86e 	bl	40005498 <ControlHandle>
400072dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072e0:	eafffeae 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400072e4:	e3520b01 	cmp	r2, #1024	; 0x400
400072e8:	0a000009 	beq	40007314 <UVCAppEP0Thread_Entry+0x650>
400072ec:	e3520c05 	cmp	r2, #1280	; 0x500
400072f0:	1afffea1 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
400072f4:	e3a00004 	mov	r0, #4
400072f8:	ebfffc0c 	bl	40006330 <CTControlHandle>
400072fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007300:	eafffea6 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007304:	e3a00002 	mov	r0, #2
40007308:	ebfffc08 	bl	40006330 <CTControlHandle>
4000730c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007310:	eafffea2 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007314:	e3a00003 	mov	r0, #3
40007318:	ebfffc04 	bl	40006330 <CTControlHandle>
4000731c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007320:	eafffe9e 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007324:	e3a00001 	mov	r0, #1
40007328:	ebfff85a 	bl	40005498 <ControlHandle>
4000732c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007330:	eafffe9a 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
40007334:	e3a00000 	mov	r0, #0
40007338:	ebfff856 	bl	40005498 <ControlHandle>
4000733c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007340:	eafffe96 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007344:	e3a00004 	mov	r0, #4
40007348:	e59f13f4 	ldr	r1, [pc, #1012]	; 40007744 <UVCAppEP0Thread_Entry+0xa80>
4000734c:	eb002f06 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007350:	e59f13f0 	ldr	r1, [pc, #1008]	; 40007748 <UVCAppEP0Thread_Entry+0xa84>
40007354:	e3a00004 	mov	r0, #4
40007358:	eb002f03 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000735c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007360:	eb0005c4 	bl	40008a78 <_tx_thread_sleep>
40007364:	eafffff9 	b	40007350 <UVCAppEP0Thread_Entry+0x68c>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007368:	e35b0085 	cmp	fp, #133	; 0x85
4000736c:	0affffcb 	beq	400072a0 <UVCAppEP0Thread_Entry+0x5dc>
40007370:	e35b0086 	cmp	fp, #134	; 0x86
40007374:	1affff05 	bne	40006f90 <UVCAppEP0Thread_Entry+0x2cc>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007378:	e1a00003 	mov	r0, r3
        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000737c:	e59f13bc 	ldr	r1, [pc, #956]	; 40007740 <UVCAppEP0Thread_Entry+0xa7c>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007380:	e3a0b003 	mov	fp, #3
40007384:	e5c4b058 	strb	fp, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007388:	eb005834 	bl	4001d460 <CyU3PUsbSendEP0Data>
4000738c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007390:	eafffe8c 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007394:	e3520001 	cmp	r2, #1
40007398:	1afffefc 	bne	40006f90 <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000739c:	e3a00020 	mov	r0, #32
400073a0:	e59f1380 	ldr	r1, [pc, #896]	; 40007728 <UVCAppEP0Thread_Entry+0xa64>
400073a4:	e28d2036 	add	r2, sp, #54	; 0x36
400073a8:	eb0055be 	bl	4001caa8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400073ac:	e3500000 	cmp	r0, #0
400073b0:	1afffe83 	bne	40006dc4 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
400073b4:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
400073b8:	e3510003 	cmp	r1, #3
400073bc:	1afffe80 	bne	40006dc4 <UVCAppEP0Thread_Entry+0x100>
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400073c0:	e5d53082 	ldrb	r3, [r5, #130]	; 0x82
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400073c4:	e5d5e07d 	ldrb	lr, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400073c8:	e5d5c07e 	ldrb	ip, [r5, #126]	; 0x7e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400073cc:	e5d5007f 	ldrb	r0, [r5, #127]	; 0x7f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400073d0:	e5d5b080 	ldrb	fp, [r5, #128]	; 0x80
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400073d4:	e5d52081 	ldrb	r2, [r5, #129]	; 0x81
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400073d8:	e5c6366a 	strb	r3, [r6, #1642]	; 0x66a
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400073dc:	e5c6e665 	strb	lr, [r6, #1637]	; 0x665
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400073e0:	e5c6c666 	strb	ip, [r6, #1638]	; 0x666
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400073e4:	e5c60667 	strb	r0, [r6, #1639]	; 0x667
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400073e8:	e5c6b668 	strb	fp, [r6, #1640]	; 0x668
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400073ec:	e5c62669 	strb	r2, [r6, #1641]	; 0x669
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400073f0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073f4:	eafffe73 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400073f8:	e3520086 	cmp	r2, #134	; 0x86
400073fc:	0affffdd 	beq	40007378 <UVCAppEP0Thread_Entry+0x6b4>
40007400:	e3520087 	cmp	r2, #135	; 0x87
40007404:	1affffa3 	bne	40007298 <UVCAppEP0Thread_Entry+0x5d4>
40007408:	eaffff63 	b	4000719c <UVCAppEP0Thread_Entry+0x4d8>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
4000740c:	e3a00000 	mov	r0, #0
40007410:	ebfffbc6 	bl	40006330 <CTControlHandle>
40007414:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007418:	eafffe60 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
4000741c:	e3a00004 	mov	r0, #4
40007420:	e59f131c 	ldr	r1, [pc, #796]	; 40007744 <UVCAppEP0Thread_Entry+0xa80>
40007424:	eb002ed0 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007428:	e59f1318 	ldr	r1, [pc, #792]	; 40007748 <UVCAppEP0Thread_Entry+0xa84>
4000742c:	e3a00004 	mov	r0, #4
40007430:	eb002ecd 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007434:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007438:	eb00058e 	bl	40008a78 <_tx_thread_sleep>
4000743c:	eafffff9 	b	40007428 <UVCAppEP0Thread_Entry+0x764>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007440:	e3530085 	cmp	r3, #133	; 0x85
40007444:	0affff95 	beq	400072a0 <UVCAppEP0Thread_Entry+0x5dc>
40007448:	e3530086 	cmp	r3, #134	; 0x86
4000744c:	1afffecf 	bne	40006f90 <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007450:	e3a00001 	mov	r0, #1
40007454:	eaffffc8 	b	4000737c <UVCAppEP0Thread_Entry+0x6b8>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
40007458:	e3a00006 	mov	r0, #6
4000745c:	ebfff80d 	bl	40005498 <ControlHandle>
40007460:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007464:	eafffe4d 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007468:	e3520c0d 	cmp	r2, #3328	; 0xd00
4000746c:	0a000007 	beq	40007490 <UVCAppEP0Thread_Entry+0x7cc>
40007470:	e3520c0e 	cmp	r2, #3584	; 0xe00
40007474:	0a000009 	beq	400074a0 <UVCAppEP0Thread_Entry+0x7dc>
40007478:	e3520b03 	cmp	r2, #3072	; 0xc00
4000747c:	1afffe3e 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
40007480:	e3a0000b 	mov	r0, #11
40007484:	ebfff803 	bl	40005498 <ControlHandle>
40007488:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000748c:	eafffe43 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
40007490:	e3a00009 	mov	r0, #9
40007494:	ebfff7ff 	bl	40005498 <ControlHandle>
40007498:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000749c:	eafffe3f 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400074a0:	e3a0000e 	mov	r0, #14
400074a4:	ebfff7fb 	bl	40005498 <ControlHandle>
400074a8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074ac:	eafffe3b 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400074b0:	e3520b01 	cmp	r2, #1024	; 0x400
400074b4:	0afffe39 	beq	40006da0 <UVCAppEP0Thread_Entry+0xdc>
400074b8:	e3520c05 	cmp	r2, #1280	; 0x500
400074bc:	1afffe2e 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
400074c0:	e3a00004 	mov	r0, #4
400074c4:	ebfff7f3 	bl	40005498 <ControlHandle>
400074c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074cc:	eafffe33 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
400074d0:	e3a00002 	mov	r0, #2
400074d4:	ebfff7ef 	bl	40005498 <ControlHandle>
400074d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074dc:	eafffe2f 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
400074e0:	e3a00005 	mov	r0, #5
400074e4:	ebfff7eb 	bl	40005498 <ControlHandle>
400074e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074ec:	eafffe2b 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
400074f0:	e3520085 	cmp	r2, #133	; 0x85
400074f4:	0a000079 	beq	400076e0 <UVCAppEP0Thread_Entry+0xa1c>
400074f8:	e3520086 	cmp	r2, #134	; 0x86
400074fc:	1afffe2c 	bne	40006db4 <UVCAppEP0Thread_Entry+0xf0>
40007500:	eaffffd2 	b	40007450 <UVCAppEP0Thread_Entry+0x78c>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007504:	e3530c06 	cmp	r3, #1536	; 0x600
40007508:	0a000070 	beq	400076d0 <UVCAppEP0Thread_Entry+0xa0c>
4000750c:	8a000009 	bhi	40007538 <UVCAppEP0Thread_Entry+0x874>
40007510:	e3530c05 	cmp	r3, #1280	; 0x500
40007514:	1afffe1c 	bne	40006d8c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
40007518:	e3a00014 	mov	r0, #20
4000751c:	ebfff7dd 	bl	40005498 <ControlHandle>
40007520:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007524:	eafffe1d 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007528:	e3a00006 	mov	r0, #6
4000752c:	ebfffb7f 	bl	40006330 <CTControlHandle>
40007530:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007534:	eafffe19 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007538:	e3530c07 	cmp	r3, #1792	; 0x700
4000753c:	0a00005f 	beq	400076c0 <UVCAppEP0Thread_Entry+0x9fc>
40007540:	e3530b02 	cmp	r3, #2048	; 0x800
40007544:	1afffe10 	bne	40006d8c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
40007548:	e3a00017 	mov	r0, #23
4000754c:	ebfff7d1 	bl	40005498 <ControlHandle>
40007550:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007554:	eafffe11 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007558:	e3520c0b 	cmp	r2, #2816	; 0xb00
4000755c:	0a00000f 	beq	400075a0 <UVCAppEP0Thread_Entry+0x8dc>
40007560:	e3520b03 	cmp	r2, #3072	; 0xc00
40007564:	0a000009 	beq	40007590 <UVCAppEP0Thread_Entry+0x8cc>
40007568:	e3520c0a 	cmp	r2, #2560	; 0xa00
4000756c:	1afffe02 	bne	40006d7c <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
40007570:	e3a00008 	mov	r0, #8
40007574:	ebfffb6d 	bl	40006330 <CTControlHandle>
40007578:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000757c:	eafffe07 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
40007580:	e3a00007 	mov	r0, #7
40007584:	ebfffb69 	bl	40006330 <CTControlHandle>
40007588:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000758c:	eafffe03 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
40007590:	e3a0000a 	mov	r0, #10
40007594:	ebfffb65 	bl	40006330 <CTControlHandle>
40007598:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000759c:	eafffdff 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400075a0:	e3a00009 	mov	r0, #9
400075a4:	ebfffb61 	bl	40006330 <CTControlHandle>
400075a8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075ac:	eafffdfb 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
400075b0:	e3a00020 	mov	r0, #32
400075b4:	ebfff7b7 	bl	40005498 <ControlHandle>
400075b8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075bc:	eafffdf7 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrlFull);
400075c0:	e3a0001a 	mov	r0, #26
400075c4:	e59f1180 	ldr	r1, [pc, #384]	; 4000774c <UVCAppEP0Thread_Entry+0xa88>
400075c8:	eb0057a4 	bl	4001d460 <CyU3PUsbSendEP0Data>
400075cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075d0:	eafffdfc 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
400075d4:	e3a0001c 	mov	r0, #28
400075d8:	ebfff7ae 	bl	40005498 <ControlHandle>
400075dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075e0:	eafffdee 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
400075e4:	e3a0001a 	mov	r0, #26
400075e8:	ebfff7aa 	bl	40005498 <ControlHandle>
400075ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400075f0:	eafffdea 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
400075f4:	e3a0001e 	mov	r0, #30
400075f8:	ebfff7a6 	bl	40005498 <ControlHandle>
400075fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007600:	eafffde6 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    #endif
                            stiflag = CyTrue;//set still flag
                            //stillcont = 0;
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
40007604:	e59f1144 	ldr	r1, [pc, #324]	; 40007750 <UVCAppEP0Thread_Entry+0xa8c>
40007608:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
4000760c:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40007610:	e3a00004 	mov	r0, #4
40007614:	eb002e54 	bl	40012f6c <CyU3PDebugPrint>
40007618:	eafffde5 	b	40006db4 <UVCAppEP0Thread_Entry+0xf0>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000761c:	e3a00020 	mov	r0, #32
40007620:	e59f1100 	ldr	r1, [pc, #256]	; 40007728 <UVCAppEP0Thread_Entry+0xa64>
40007624:	e28d2036 	add	r2, sp, #54	; 0x36
40007628:	eb00551e 	bl	4001caa8 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
4000762c:	e3500000 	cmp	r0, #0
40007630:	1afffde3 	bne	40006dc4 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007634:	e3a02000 	mov	r2, #0
40007638:	e59f00bc 	ldr	r0, [pc, #188]	; 400076fc <UVCAppEP0Thread_Entry+0xa38>
4000763c:	e3a01001 	mov	r1, #1
40007640:	eb000a04 	bl	40009e58 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
40007644:	e2502000 	subs	r2, r0, #0
40007648:	0afffddd 	beq	40006dc4 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
4000764c:	e3a00004 	mov	r0, #4
40007650:	e59f10d4 	ldr	r1, [pc, #212]	; 4000772c <UVCAppEP0Thread_Entry+0xa68>
40007654:	eb002e44 	bl	40012f6c <CyU3PDebugPrint>
40007658:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000765c:	eafffdd9 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007660:	e5d41048 	ldrb	r1, [r4, #72]	; 0x48
40007664:	e3510003 	cmp	r1, #3
40007668:	1afffedb 	bne	400071dc <UVCAppEP0Thread_Entry+0x518>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
4000766c:	e3a0001a 	mov	r0, #26
40007670:	e59f10dc 	ldr	r1, [pc, #220]	; 40007754 <UVCAppEP0Thread_Entry+0xa90>
40007674:	eb005779 	bl	4001d460 <CyU3PUsbSendEP0Data>
40007678:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000767c:	eafffdd1 	b	40006dc8 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
40007680:	e3a00012 	mov	r0, #18
40007684:	ebfff783 	bl	40005498 <ControlHandle>
40007688:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000768c:	eafffdc3 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007690:	e3a00011 	mov	r0, #17
40007694:	ebfff77f 	bl	40005498 <ControlHandle>
40007698:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000769c:	eafffdbf 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
400076a0:	e3a00013 	mov	r0, #19
400076a4:	ebfff77b 	bl	40005498 <ControlHandle>
400076a8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076ac:	eafffdbb 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
400076b0:	e3a00018 	mov	r0, #24
400076b4:	ebfff777 	bl	40005498 <ControlHandle>
400076b8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076bc:	eafffdb7 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
400076c0:	e3a00016 	mov	r0, #22
400076c4:	ebfff773 	bl	40005498 <ControlHandle>
400076c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076cc:	eafffdb3 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
400076d0:	e3a00015 	mov	r0, #21
400076d4:	ebfff76f 	bl	40005498 <ControlHandle>
400076d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076dc:	eafffdaf 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400076e0:	e3a00002 	mov	r0, #2
400076e4:	e59f1054 	ldr	r1, [pc, #84]	; 40007740 <UVCAppEP0Thread_Entry+0xa7c>
400076e8:	eafffeef 	b	400072ac <UVCAppEP0Thread_Entry+0x5e8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
400076ec:	e3a00021 	mov	r0, #33	; 0x21
400076f0:	ebfff768 	bl	40005498 <ControlHandle>
400076f4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400076f8:	eafffda8 	b	40006da0 <UVCAppEP0Thread_Entry+0xdc>
400076fc:	40030f90 	.word	0x40030f90
40007700:	40030000 	.word	0x40030000
40007704:	4003310c 	.word	0x4003310c
40007708:	40032fc0 	.word	0x40032fc0
4000770c:	40032ff0 	.word	0x40032ff0
40007710:	400330d0 	.word	0x400330d0
40007714:	4001167c 	.word	0x4001167c
40007718:	40033030 	.word	0x40033030
4000771c:	40032ec0 	.word	0x40032ec0
40007720:	40032ff2 	.word	0x40032ff2
40007724:	40011600 	.word	0x40011600
40007728:	4003100c 	.word	0x4003100c
4000772c:	400116a8 	.word	0x400116a8
40007730:	400116d0 	.word	0x400116d0
40007734:	40030664 	.word	0x40030664
40007738:	40030670 	.word	0x40030670
4000773c:	4003062c 	.word	0x4003062c
40007740:	40030fe8 	.word	0x40030fe8
40007744:	40011720 	.word	0x40011720
40007748:	4001136c 	.word	0x4001136c
4000774c:	40030610 	.word	0x40030610
40007750:	400116f8 	.word	0x400116f8
40007754:	40030648 	.word	0x40030648

40007758 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007758:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
4000775c:	e59f42ac 	ldr	r4, [pc, #684]	; 40007a10 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007760:	e59f22ac 	ldr	r2, [pc, #684]	; 40007a14 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
40007764:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007768:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000776c:	e592001c 	ldr	r0, [r2, #28]
40007770:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007774:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
40007778:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
4000777c:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007780:	eb000a4c 	bl	4000a0b8 <_txe_mutex_get>
    if(Data1&0x80){
40007784:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007788:	12066001 	andne	r6, r6, #1
4000778c:	11e06006 	mvnne	r6, r6
40007790:	1206603b 	andne	r6, r6, #59	; 0x3b
40007794:	11e06006 	mvnne	r6, r6
40007798:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
4000779c:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400077a0:	e3a08000 	mov	r8, #0
400077a4:	e1a0200a 	mov	r2, sl
400077a8:	e1a03007 	mov	r3, r7
400077ac:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400077b0:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400077b4:	e59f0258 	ldr	r0, [pc, #600]	; 40007a14 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400077b8:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400077bc:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400077c0:	e88d0140 	stm	sp, {r6, r8}
400077c4:	ebffef3b 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400077c8:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
400077cc:	e1a01009 	mov	r1, r9
400077d0:	e1a03007 	mov	r3, r7
400077d4:	e59f0238 	ldr	r0, [pc, #568]	; 40007a14 <CamDefSet+0x2bc>
400077d8:	e88d0220 	stm	sp, {r5, r9}
400077dc:	ebffef35 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400077e0:	e1a02006 	mov	r2, r6
400077e4:	e1a03005 	mov	r3, r5
400077e8:	e59f1228 	ldr	r1, [pc, #552]	; 40007a18 <CamDefSet+0x2c0>
400077ec:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
400077f0:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
400077f4:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400077f8:	eb002ddb 	bl	40012f6c <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400077fc:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
40007800:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007804:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007808:	e3a01002 	mov	r1, #2
4000780c:	e59f0200 	ldr	r0, [pc, #512]	; 40007a14 <CamDefSet+0x2bc>
40007810:	e58db000 	str	fp, [sp]
40007814:	e58d8004 	str	r8, [sp, #4]
40007818:	ebffef26 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000781c:	e1a0200b 	mov	r2, fp
40007820:	e1a03005 	mov	r3, r5
40007824:	e59f11ec 	ldr	r1, [pc, #492]	; 40007a18 <CamDefSet+0x2c0>
40007828:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
4000782c:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007830:	eb002dcd 	bl	40012f6c <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007834:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007838:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000783c:	e247b080 	sub	fp, r7, #128	; 0x80
40007840:	e20b10ff 	and	r1, fp, #255	; 0xff
40007844:	e58d1014 	str	r1, [sp, #20]
40007848:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
4000784c:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007850:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007854:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007858:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000785c:	e3a01005 	mov	r1, #5
40007860:	e3a020df 	mov	r2, #223	; 0xdf
40007864:	e59f01a8 	ldr	r0, [pc, #424]	; 40007a14 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007868:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000786c:	e58dc000 	str	ip, [sp]
40007870:	e58d8004 	str	r8, [sp, #4]
40007874:	ebffef0f 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007878:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
4000787c:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007880:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007884:	e1a03006 	mov	r3, r6
40007888:	e3a01005 	mov	r1, #5
4000788c:	e3a020dc 	mov	r2, #220	; 0xdc
40007890:	e59f017c 	ldr	r0, [pc, #380]	; 40007a14 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007894:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007898:	e58dc000 	str	ip, [sp]
4000789c:	e58d9004 	str	r9, [sp, #4]
400078a0:	ebffef04 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078a4:	e59d001c 	ldr	r0, [sp, #28]
400078a8:	e3a0e002 	mov	lr, #2
400078ac:	e200c0ff 	and	ip, r0, #255	; 0xff
400078b0:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400078b4:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078b8:	e3a01005 	mov	r1, #5
400078bc:	e3a020de 	mov	r2, #222	; 0xde
400078c0:	e59f014c 	ldr	r0, [pc, #332]	; 40007a14 <CamDefSet+0x2bc>
400078c4:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400078c8:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078cc:	e58dc000 	str	ip, [sp]
400078d0:	ebffeef8 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400078d4:	e59da020 	ldr	sl, [sp, #32]
400078d8:	e1a03006 	mov	r3, r6
400078dc:	e20ac0ff 	and	ip, sl, #255	; 0xff
400078e0:	e58dc000 	str	ip, [sp]
400078e4:	e3a01005 	mov	r1, #5
400078e8:	e3a0c003 	mov	ip, #3
400078ec:	e3a020e0 	mov	r2, #224	; 0xe0
400078f0:	e59f011c 	ldr	r0, [pc, #284]	; 40007a14 <CamDefSet+0x2bc>
400078f4:	e58dc004 	str	ip, [sp, #4]
400078f8:	ebffeeee 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400078fc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40007900:	e3a0a004 	mov	sl, #4
40007904:	e200c0ff 	and	ip, r0, #255	; 0xff
40007908:	e1a03006 	mov	r3, r6
4000790c:	e3a01005 	mov	r1, #5
40007910:	e3a020dd 	mov	r2, #221	; 0xdd
40007914:	e59f00f8 	ldr	r0, [pc, #248]	; 40007a14 <CamDefSet+0x2bc>
40007918:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
4000791c:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007920:	e58da004 	str	sl, [sp, #4]
40007924:	ebffeee3 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007928:	e3a0e005 	mov	lr, #5
4000792c:	e1a0100e 	mov	r1, lr
40007930:	e1a03006 	mov	r3, r6
40007934:	e3a020e1 	mov	r2, #225	; 0xe1
40007938:	e20760ff 	and	r6, r7, #255	; 0xff
4000793c:	e59f00d0 	ldr	r0, [pc, #208]	; 40007a14 <CamDefSet+0x2bc>
40007940:	e88d4040 	stm	sp, {r6, lr}
40007944:	ebffeedb 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007948:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
4000794c:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40007950:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007954:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007958:	e59dc020 	ldr	ip, [sp, #32]
4000795c:	e1a0200b 	mov	r2, fp
40007960:	e59d3018 	ldr	r3, [sp, #24]
40007964:	e59f10b0 	ldr	r1, [pc, #176]	; 40007a1c <CamDefSet+0x2c4>
40007968:	e1a0000a 	mov	r0, sl
4000796c:	e88d5040 	stm	sp, {r6, ip, lr}
40007970:	e58d700c 	str	r7, [sp, #12]
40007974:	eb002d7c 	bl	40012f6c <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007978:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
4000797c:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
40007980:	e1a03007 	mov	r3, r7
40007984:	e3a01006 	mov	r1, #6
40007988:	e3a02085 	mov	r2, #133	; 0x85
4000798c:	e59f0080 	ldr	r0, [pc, #128]	; 40007a14 <CamDefSet+0x2bc>
40007990:	e88d0140 	stm	sp, {r6, r8}
40007994:	ebffeec7 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007998:	e1a03007 	mov	r3, r7
4000799c:	e3a01006 	mov	r1, #6
400079a0:	e3a02086 	mov	r2, #134	; 0x86
400079a4:	e59f0068 	ldr	r0, [pc, #104]	; 40007a14 <CamDefSet+0x2bc>
400079a8:	e88d0240 	stm	sp, {r6, r9}
400079ac:	ebffeec1 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079b0:	e1a02006 	mov	r2, r6
400079b4:	e1a03005 	mov	r3, r5
400079b8:	e59f1058 	ldr	r1, [pc, #88]	; 40007a18 <CamDefSet+0x2c0>
400079bc:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
400079c0:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079c4:	eb002d68 	bl	40012f6c <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400079c8:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
400079cc:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
400079d0:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
400079d4:	e3a01007 	mov	r1, #7
400079d8:	e59f0034 	ldr	r0, [pc, #52]	; 40007a14 <CamDefSet+0x2bc>
400079dc:	e88d0140 	stm	sp, {r6, r8}
400079e0:	ebffeeb4 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079e4:	e1a03005 	mov	r3, r5
400079e8:	e1a0000a 	mov	r0, sl
400079ec:	e59f1024 	ldr	r1, [pc, #36]	; 40007a18 <CamDefSet+0x2c0>
400079f0:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
400079f4:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079f8:	eb002d5b 	bl	40012f6c <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400079fc:	e59f3010 	ldr	r3, [pc, #16]	; 40007a14 <CamDefSet+0x2bc>
40007a00:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007a04:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007a08:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007a0c:	ea0009de 	b	4000a18c <_txe_mutex_put>
40007a10:	40030000 	.word	0x40030000
40007a14:	40032ec4 	.word	0x40032ec4
40007a18:	40011754 	.word	0x40011754
40007a1c:	40011774 	.word	0x40011774

40007a20 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a20:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a24:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a28:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a2c:	e59f1018 	ldr	r1, [pc, #24]	; 40007a4c <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a30:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a34:	ebffefa6 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007a38:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007a3c:	15d43001 	ldrbne	r3, [r4, #1]
40007a40:	13833002 	orrne	r3, r3, #2
40007a44:	15c43001 	strbne	r3, [r4, #1]
40007a48:	e8bd8038 	pop	{r3, r4, r5, pc}
40007a4c:	40030480 	.word	0x40030480

40007a50 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007a50:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007a54:	e59f1010 	ldr	r1, [pc, #16]	; 40007a6c <CyFxAppErrorHandler+0x1c>
40007a58:	e3a00004 	mov	r0, #4
40007a5c:	eb002d42 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007a60:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007a64:	eb000403 	bl	40008a78 <_tx_thread_sleep>
40007a68:	eafffff9 	b	40007a54 <CyFxAppErrorHandler+0x4>
40007a6c:	4001136c 	.word	0x4001136c

40007a70 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007a70:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007a74:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007a78:	eb006cac 	bl	40022d30 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a7c:	e2504000 	subs	r4, r0, #0
40007a80:	0a000004 	beq	40007a98 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007a84:	e3a00004 	mov	r0, #4
40007a88:	e59f1a4c 	ldr	r1, [pc, #2636]	; 400084dc <UVCAppThread_Entry+0xa6c>
40007a8c:	eb002d36 	bl	40012f6c <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007a90:	e1a00004 	mov	r0, r4
40007a94:	ebffffed 	bl	40007a50 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007a98:	e59fca40 	ldr	ip, [pc, #2624]	; 400084e0 <UVCAppThread_Entry+0xa70>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007a9c:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007aa0:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007aa4:	e28d0050 	add	r0, sp, #80	; 0x50
40007aa8:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007aac:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007ab0:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007ab4:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007ab8:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007abc:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007ac0:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007ac4:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007ac8:	eb006d11 	bl	40022f14 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007acc:	e3500000 	cmp	r0, #0
40007ad0:	0a000000 	beq	40007ad8 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007ad4:	ebffffdd 	bl	40007a50 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007ad8:	e3e00000 	mvn	r0, #0
40007adc:	eb006d93 	bl	40023130 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ae0:	e3500000 	cmp	r0, #0
40007ae4:	0a000000 	beq	40007aec <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007ae8:	ebffffd8 	bl	40007a50 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007aec:	e3a00003 	mov	r0, #3
40007af0:	e3a01004 	mov	r1, #4
40007af4:	eb002c94 	bl	40012d4c <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007af8:	e3500000 	cmp	r0, #0
40007afc:	0a000000 	beq	40007b04 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b00:	ebffffd2 	bl	40007a50 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007b04:	e3a00000 	mov	r0, #0
40007b08:	eb002d13 	bl	40012f5c <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007b0c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b10:	eb0003d8 	bl	40008a78 <_tx_thread_sleep>
40007b14:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b18:	eb0003d6 	bl	40008a78 <_tx_thread_sleep>
40007b1c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b20:	eb0003d4 	bl	40008a78 <_tx_thread_sleep>
40007b24:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b28:	eb0003d2 	bl	40008a78 <_tx_thread_sleep>
40007b2c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b30:	eb0003d0 	bl	40008a78 <_tx_thread_sleep>
40007b34:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b38:	eb0003ce 	bl	40008a78 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007b3c:	eb006e09 	bl	40023368 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007b40:	e2504000 	subs	r4, r0, #0
40007b44:	0a000004 	beq	40007b5c <UVCAppThread_Entry+0xec>
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007b48:	e3a00004 	mov	r0, #4
40007b4c:	e59f1990 	ldr	r1, [pc, #2448]	; 400084e4 <UVCAppThread_Entry+0xa74>
40007b50:	eb002d05 	bl	40012f6c <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007b54:	e1a00004 	mov	r0, r4
40007b58:	ebffffbc 	bl	40007a50 <CyFxAppErrorHandler>
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007b5c:	e59f6984 	ldr	r6, [pc, #2436]	; 400084e8 <UVCAppThread_Entry+0xa78>
    i2cConfig.isDma      = CyFalse;
40007b60:	e3a05000 	mov	r5, #0
    i2cConfig.busTimeout = 0xffffffffU;
40007b64:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007b68:	e28d008c 	add	r0, sp, #140	; 0x8c
40007b6c:	e1a01005 	mov	r1, r5
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007b70:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007b74:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007b78:	e58d608c 	str	r6, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007b7c:	e58d5090 	str	r5, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007b80:	eb006ef1 	bl	4002374c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007b84:	e2504000 	subs	r4, r0, #0
40007b88:	0a000004 	beq	40007ba0 <UVCAppThread_Entry+0x130>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007b8c:	e3a00004 	mov	r0, #4
40007b90:	e59f1954 	ldr	r1, [pc, #2388]	; 400084ec <UVCAppThread_Entry+0xa7c>
40007b94:	eb002cf4 	bl	40012f6c <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007b98:	e1a00004 	mov	r0, r4
40007b9c:	ebffffab 	bl	40007a50 <CyFxAppErrorHandler>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007ba0:	e59f6948 	ldr	r6, [pc, #2376]	; 400084f0 <UVCAppThread_Entry+0xa80>
40007ba4:	e3a02028 	mov	r2, #40	; 0x28
40007ba8:	e3a01000 	mov	r1, #0
40007bac:	e1a00006 	mov	r0, r6
40007bb0:	eb000808 	bl	40009bd8 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007bb4:	e2502000 	subs	r2, r0, #0
40007bb8:	1a0000f3 	bne	40007f8c <UVCAppThread_Entry+0x51c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007bbc:	e3a05002 	mov	r5, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007bc0:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007bc4:	e5862040 	str	r2, [r6, #64]	; 0x40
    clearFeatureRqtReceived = CyFalse;
40007bc8:	e5862044 	str	r2, [r6, #68]	; 0x44

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007bcc:	e3a07003 	mov	r7, #3
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007bd0:	e28d009c 	add	r0, sp, #156	; 0x9c
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007bd4:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007bd8:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007bdc:	e5cd509c 	strb	r5, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007be0:	e5cd509d 	strb	r5, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007be4:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007be8:	eb006ae6 	bl	40022788 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007bec:	e2502000 	subs	r2, r0, #0
40007bf0:	1a0000f7 	bne	40007fd4 <UVCAppThread_Entry+0x564>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007bf4:	e3a00016 	mov	r0, #22
40007bf8:	e3a01001 	mov	r1, #1
40007bfc:	eb002bca 	bl	40012b2c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c00:	e2502000 	subs	r2, r0, #0
40007c04:	1a0000e9 	bne	40007fb0 <UVCAppThread_Entry+0x540>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007c08:	e3a00014 	mov	r0, #20
40007c0c:	e3a01001 	mov	r1, #1
40007c10:	eb002bc5 	bl	40012b2c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c14:	e2502000 	subs	r2, r0, #0
40007c18:	1a0000f6 	bne	40007ff8 <UVCAppThread_Entry+0x588>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007c1c:	e3a00018 	mov	r0, #24
40007c20:	e3a01001 	mov	r1, #1
40007c24:	eb002bc0 	bl	40012b2c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c28:	e2502000 	subs	r2, r0, #0
40007c2c:	1a0001db 	bne	400083a0 <UVCAppThread_Entry+0x930>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007c30:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007c34:	e3a00016 	mov	r0, #22
40007c38:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007c3c:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007c40:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007c44:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007c48:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007c4c:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007c50:	eb006b84 	bl	40022a68 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c54:	e2502000 	subs	r2, r0, #0
40007c58:	1a0001c7 	bne	4000837c <UVCAppThread_Entry+0x90c>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007c5c:	e3a00014 	mov	r0, #20
40007c60:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007c64:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007c68:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007c6c:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007c70:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007c74:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007c78:	eb006b7a 	bl	40022a68 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c7c:	e2502000 	subs	r2, r0, #0
40007c80:	1a0001cf 	bne	400083c4 <UVCAppThread_Entry+0x954>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007c84:	e3a00018 	mov	r0, #24
40007c88:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007c8c:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007c90:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007c94:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007c98:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007c9c:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007ca0:	eb006b70 	bl	40022a68 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ca4:	e2502000 	subs	r2, r0, #0
40007ca8:	1a0001aa 	bne	40008358 <UVCAppThread_Entry+0x8e8>
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007cac:	e1a00004 	mov	r0, r4
40007cb0:	e28d107c 	add	r1, sp, #124	; 0x7c
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007cb4:	e58d2084 	str	r2, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007cb8:	e58d2080 	str	r2, [sp, #128]	; 0x80
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007cbc:	e1cd57bc 	strh	r5, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007cc0:	e5cd7088 	strb	r7, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007cc4:	eb004c00 	bl	4001accc <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cc8:	e2502000 	subs	r2, r0, #0
40007ccc:	1a000198 	bne	40008334 <UVCAppThread_Entry+0x8c4>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007cd0:	e59f081c 	ldr	r0, [pc, #2076]	; 400084f4 <UVCAppThread_Entry+0xa84>
40007cd4:	eb004e7a 	bl	4001b6c4 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007cd8:	ebfff24a 	bl	40004608 <SensorReset>
    CyU3PThreadSleep(5000);
40007cdc:	e59f0814 	ldr	r0, [pc, #2068]	; 400084f8 <UVCAppThread_Entry+0xa88>
40007ce0:	eb000364 	bl	40008a78 <_tx_thread_sleep>
    //SensorInit ();

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007ce4:	eb0058ec 	bl	4001e09c <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ce8:	e2502000 	subs	r2, r0, #0
40007cec:	1a000187 	bne	40008310 <UVCAppThread_Entry+0x8a0>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007cf0:	e3a01000 	mov	r1, #0
40007cf4:	e59f0800 	ldr	r0, [pc, #2048]	; 400084fc <UVCAppThread_Entry+0xa8c>
40007cf8:	eb00639e 	bl	40020b78 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007cfc:	e59f07fc 	ldr	r0, [pc, #2044]	; 40008500 <UVCAppThread_Entry+0xa90>
40007d00:	eb006387 	bl	40020b24 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007d04:	e3a01000 	mov	r1, #0
40007d08:	e59f27f4 	ldr	r2, [pc, #2036]	; 40008504 <UVCAppThread_Entry+0xa94>
40007d0c:	e3a00001 	mov	r0, #1
40007d10:	eb0056c1 	bl	4001d81c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007d14:	e3a00000 	mov	r0, #0
40007d18:	e1a01000 	mov	r1, r0
40007d1c:	e59f27e4 	ldr	r2, [pc, #2020]	; 40008508 <UVCAppThread_Entry+0xa98>
40007d20:	eb0056bd 	bl	4001d81c <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007d24:	e3a01000 	mov	r1, #0
40007d28:	e59f27dc 	ldr	r2, [pc, #2012]	; 4000850c <UVCAppThread_Entry+0xa9c>
40007d2c:	e3a00002 	mov	r0, #2
40007d30:	eb0056b9 	bl	4001d81c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007d34:	e3a01000 	mov	r1, #0
40007d38:	e59f27d0 	ldr	r2, [pc, #2000]	; 40008510 <UVCAppThread_Entry+0xaa0>
40007d3c:	e3a00007 	mov	r0, #7
40007d40:	eb0056b5 	bl	4001d81c <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007d44:	e3a01000 	mov	r1, #0
40007d48:	e59f27c4 	ldr	r2, [pc, #1988]	; 40008514 <UVCAppThread_Entry+0xaa4>
40007d4c:	e3a00004 	mov	r0, #4
40007d50:	eb0056b1 	bl	4001d81c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007d54:	e3a01000 	mov	r1, #0
40007d58:	e59f27b8 	ldr	r2, [pc, #1976]	; 40008518 <UVCAppThread_Entry+0xaa8>
40007d5c:	e3a00003 	mov	r0, #3
40007d60:	eb0056ad 	bl	4001d81c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007d64:	e3a01000 	mov	r1, #0
40007d68:	e59f27ac 	ldr	r2, [pc, #1964]	; 4000851c <UVCAppThread_Entry+0xaac>
40007d6c:	e3a00006 	mov	r0, #6
40007d70:	eb0056a9 	bl	4001d81c <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007d74:	e3a01000 	mov	r1, #0
40007d78:	e59f27a0 	ldr	r2, [pc, #1952]	; 40008520 <UVCAppThread_Entry+0xab0>
40007d7c:	e3a00005 	mov	r0, #5
40007d80:	eb0056a5 	bl	4001d81c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007d84:	e3a01001 	mov	r1, #1
40007d88:	e59f2794 	ldr	r2, [pc, #1940]	; 40008524 <UVCAppThread_Entry+0xab4>
40007d8c:	e3a00005 	mov	r0, #5
40007d90:	eb0056a1 	bl	4001d81c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007d94:	e3a01002 	mov	r1, #2
40007d98:	e59f2788 	ldr	r2, [pc, #1928]	; 40008528 <UVCAppThread_Entry+0xab8>
40007d9c:	e3a00005 	mov	r0, #5
40007da0:	eb00569d 	bl	4001d81c <CyU3PUsbSetDesc>
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40007da4:	e3a07000 	mov	r7, #0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007da8:	e3a04001 	mov	r4, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007dac:	e3a0a003 	mov	sl, #3
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007db0:	e3a00082 	mov	r0, #130	; 0x82
40007db4:	e28d10a8 	add	r1, sp, #168	; 0xa8
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007db8:	e3a08040 	mov	r8, #64	; 0x40
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007dbc:	e5cda0ac 	strb	sl, [sp, #172]	; 0xac
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007dc0:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007dc4:	e1cd8bb0 	strh	r8, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007dc8:	e5cd70b3 	strb	r7, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007dcc:	e1cd7abe 	strh	r7, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007dd0:	e5cd40b2 	strb	r4, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007dd4:	eb004ff7 	bl	4001bdb8 <CyU3PSetEpConfig>
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
40007dd8:	e1a0a007 	mov	sl, r7
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ddc:	e2503000 	subs	r3, r0, #0
40007de0:	1a000140 	bne	400082e8 <UVCAppThread_Entry+0x878>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007de4:	e59fc740 	ldr	ip, [pc, #1856]	; 4000852c <UVCAppThread_Entry+0xabc>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007de8:	e59fe740 	ldr	lr, [pc, #1856]	; 40008530 <UVCAppThread_Entry+0xac0>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007dec:	e3a05b01 	mov	r5, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007df0:	e3a07010 	mov	r7, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007df4:	e59f0738 	ldr	r0, [pc, #1848]	; 40008534 <UVCAppThread_Entry+0xac4>
40007df8:	e3a01004 	mov	r1, #4
40007dfc:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007e00:	e1cd53b4 	strh	r5, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007e04:	e1cd43b6 	strh	r4, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007e08:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007e0c:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007e10:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007e14:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007e18:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007e1c:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007e20:	e5cda044 	strb	sl, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007e24:	e58d7048 	str	r7, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007e28:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007e2c:	eb003664 	bl	400157c4 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007e30:	e2505000 	subs	r5, r0, #0
40007e34:	1a0000e4 	bne	400081cc <UVCAppThread_Entry+0x75c>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007e38:	e3a00b01 	mov	r0, #1024	; 0x400
40007e3c:	ebffefc9 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007e40:	e59f16f0 	ldr	r1, [pc, #1776]	; 40008538 <UVCAppThread_Entry+0xac8>
    if (glInterStaBuffer == 0)
40007e44:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007e48:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007e4c:	0a0000d5 	beq	400081a8 <UVCAppThread_Entry+0x738>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007e50:	e3a03004 	mov	r3, #4
40007e54:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007e58:	e59f36dc 	ldr	r3, [pc, #1756]	; 4000853c <UVCAppThread_Entry+0xacc>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007e5c:	e3a0e901 	mov	lr, #16384	; 0x4000
40007e60:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007e64:	e59fe6d4 	ldr	lr, [pc, #1748]	; 40008540 <UVCAppThread_Entry+0xad0>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007e68:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007e6c:	e59f36d0 	ldr	r3, [pc, #1744]	; 40008544 <UVCAppThread_Entry+0xad4>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007e70:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007e74:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007e78:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007e7c:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007e80:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007e84:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007e88:	e5cda02a 	strb	sl, [sp, #42]	; 0x2a
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007e8c:	e3a08002 	mov	r8, #2
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007e90:	e59f06b0 	ldr	r0, [pc, #1712]	; 40008548 <UVCAppThread_Entry+0xad8>
40007e94:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007e98:	e3a0a018 	mov	sl, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007e9c:	e1cd81b0 	strh	r8, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007ea0:	e1cd52b2 	strh	r5, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007ea4:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007ea8:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007eac:	e1cd52b8 	strh	r5, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007eb0:	e58da02c 	str	sl, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007eb4:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007eb8:	eb003f61 	bl	40017c44 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ebc:	e2502000 	subs	r2, r0, #0
40007ec0:	1a0000af 	bne	40008184 <UVCAppThread_Entry+0x714>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007ec4:	e1a00004 	mov	r0, r4
40007ec8:	e1a01004 	mov	r1, r4
40007ecc:	eb004eb5 	bl	4001b9a8 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ed0:	e2502000 	subs	r2, r0, #0
40007ed4:	1a0000a1 	bne	40008160 <UVCAppThread_Entry+0x6f0>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007ed8:	e3a00064 	mov	r0, #100	; 0x64
40007edc:	eb002d93 	bl	40013530 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007ee0:	eb005362 	bl	4001cc70 <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007ee4:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007ee8:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007eec:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007ef0:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40007ef4:	e58d40a8 	str	r4, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007ef8:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007efc:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007f00:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007f04:	03a08b01 	moveq	r8, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007f08:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f0c:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007f10:	01cd8bb0 	strheq	r8, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007f14:	05cd70b2 	strbeq	r7, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
40007f18:	15cd40b2 	strbne	r4, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f1c:	eb004fa5 	bl	4001bdb8 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f20:	e2502000 	subs	r2, r0, #0
40007f24:	1a00004f 	bne	40008068 <UVCAppThread_Entry+0x5f8>
40007f28:	e59f861c 	ldr	r8, [pc, #1564]	; 4000854c <UVCAppThread_Entry+0xadc>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007f2c:	e59f55bc 	ldr	r5, [pc, #1468]	; 400084f0 <UVCAppThread_Entry+0xa80>
40007f30:	e1a04002 	mov	r4, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007f34:	e1a07008 	mov	r7, r8
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007f38:	e59f05b0 	ldr	r0, [pc, #1456]	; 400084f0 <UVCAppThread_Entry+0xa80>
40007f3c:	e3a01001 	mov	r1, #1
40007f40:	e3a02002 	mov	r2, #2
40007f44:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007f48:	e58d4000 	str	r4, [sp]
40007f4c:	eb000791 	bl	40009d98 <_txe_event_flags_get>
40007f50:	e3500000 	cmp	r0, #0
40007f54:	1a000030 	bne	4000801c <UVCAppThread_Entry+0x5ac>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007f58:	e5951030 	ldr	r1, [r5, #48]	; 0x30
40007f5c:	e3510000 	cmp	r1, #0
40007f60:	0a000003 	beq	40007f74 <UVCAppThread_Entry+0x504>
40007f64:	e1d5a3b4 	ldrh	sl, [r5, #52]	; 0x34
40007f68:	e1d5c3b6 	ldrh	ip, [r5, #54]	; 0x36
40007f6c:	e15a000c 	cmp	sl, ip
40007f70:	0a00011c 	beq	400083e8 <UVCAppThread_Entry+0x978>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007f74:	e3a01040 	mov	r1, #64	; 0x40
40007f78:	e3a02000 	mov	r2, #0
40007f7c:	e59f056c 	ldr	r0, [pc, #1388]	; 400084f0 <UVCAppThread_Entry+0xa80>
40007f80:	eb0007b4 	bl	40009e58 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007f84:	eb000a6c 	bl	4000a93c <_txe_thread_relinquish>
    }
40007f88:	eaffffea 	b	40007f38 <UVCAppThread_Entry+0x4c8>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007f8c:	e3a00004 	mov	r0, #4
40007f90:	e59f15b8 	ldr	r1, [pc, #1464]	; 40008550 <UVCAppThread_Entry+0xae0>
40007f94:	eb002bf4 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f98:	e59f15b4 	ldr	r1, [pc, #1460]	; 40008554 <UVCAppThread_Entry+0xae4>
40007f9c:	e3a00004 	mov	r0, #4
40007fa0:	eb002bf1 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fa4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fa8:	eb0002b2 	bl	40008a78 <_tx_thread_sleep>
40007fac:	eafffff9 	b	40007f98 <UVCAppThread_Entry+0x528>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40007fb0:	e3a00004 	mov	r0, #4
40007fb4:	e59f159c 	ldr	r1, [pc, #1436]	; 40008558 <UVCAppThread_Entry+0xae8>
40007fb8:	eb002beb 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fbc:	e59f1590 	ldr	r1, [pc, #1424]	; 40008554 <UVCAppThread_Entry+0xae4>
40007fc0:	e3a00004 	mov	r0, #4
40007fc4:	eb002be8 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fc8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fcc:	eb0002a9 	bl	40008a78 <_tx_thread_sleep>
40007fd0:	eafffff9 	b	40007fbc <UVCAppThread_Entry+0x54c>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40007fd4:	e3a00004 	mov	r0, #4
40007fd8:	e59f157c 	ldr	r1, [pc, #1404]	; 4000855c <UVCAppThread_Entry+0xaec>
40007fdc:	eb002be2 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fe0:	e59f156c 	ldr	r1, [pc, #1388]	; 40008554 <UVCAppThread_Entry+0xae4>
40007fe4:	e3a00004 	mov	r0, #4
40007fe8:	eb002bdf 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fec:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ff0:	eb0002a0 	bl	40008a78 <_tx_thread_sleep>
40007ff4:	eafffff9 	b	40007fe0 <UVCAppThread_Entry+0x570>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40007ff8:	e3a00004 	mov	r0, #4
40007ffc:	e59f155c 	ldr	r1, [pc, #1372]	; 40008560 <UVCAppThread_Entry+0xaf0>
40008000:	eb002bd9 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008004:	e59f1548 	ldr	r1, [pc, #1352]	; 40008554 <UVCAppThread_Entry+0xae4>
40008008:	e3a00004 	mov	r0, #4
4000800c:	eb002bd6 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008010:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008014:	eb000297 	bl	40008a78 <_tx_thread_sleep>
40008018:	eafffff9 	b	40008004 <UVCAppThread_Entry+0x594>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
4000801c:	e59f04cc 	ldr	r0, [pc, #1228]	; 400084f0 <UVCAppThread_Entry+0xa80>
40008020:	e3a01002 	mov	r1, #2
40008024:	e3a02003 	mov	r2, #3
40008028:	e28d30b4 	add	r3, sp, #180	; 0xb4
4000802c:	e58d4000 	str	r4, [sp]
40008030:	eb000758 	bl	40009d98 <_txe_event_flags_get>
40008034:	e3500000 	cmp	r0, #0
40008038:	1a000025 	bne	400080d4 <UVCAppThread_Entry+0x664>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
4000803c:	e5951044 	ldr	r1, [r5, #68]	; 0x44
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40008040:	e5854030 	str	r4, [r5, #48]	; 0x30
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40008044:	e3510000 	cmp	r1, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40008048:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
4000804c:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40008050:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40008054:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                pbc=0;
40008058:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
4000805c:	0a00000a 	beq	4000808c <UVCAppThread_Entry+0x61c>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40008060:	e5864044 	str	r4, [r6, #68]	; 0x44
40008064:	eaffffc2 	b	40007f74 <UVCAppThread_Entry+0x504>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008068:	e3a00004 	mov	r0, #4
4000806c:	e59f14f0 	ldr	r1, [pc, #1264]	; 40008564 <UVCAppThread_Entry+0xaf4>
40008070:	eb002bbd 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008074:	e59f14d8 	ldr	r1, [pc, #1240]	; 40008554 <UVCAppThread_Entry+0xae4>
40008078:	e3a00004 	mov	r0, #4
4000807c:	eb002bba 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008080:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008084:	eb00027b 	bl	40008a78 <_tx_thread_sleep>
40008088:	eafffff9 	b	40008074 <UVCAppThread_Entry+0x604>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
4000808c:	e59f04b4 	ldr	r0, [pc, #1204]	; 40008548 <UVCAppThread_Entry+0xad8>
40008090:	eb0040bc 	bl	40018388 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40008094:	e3500000 	cmp	r0, #0
40008098:	1a000002 	bne	400080a8 <UVCAppThread_Entry+0x638>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
4000809c:	e3a00083 	mov	r0, #131	; 0x83
400080a0:	eb00524d 	bl	4001c9dc <CyU3PUsbFlushEp>
400080a4:	eaffffed 	b	40008060 <UVCAppThread_Entry+0x5f0>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080a8:	e59f14a4 	ldr	r1, [pc, #1188]	; 40008554 <UVCAppThread_Entry+0xae4>
400080ac:	e3a00004 	mov	r0, #4
400080b0:	eb002bad 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080b4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080b8:	eb00026e 	bl	40008a78 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080bc:	e59f1490 	ldr	r1, [pc, #1168]	; 40008554 <UVCAppThread_Entry+0xae4>
400080c0:	e3a00004 	mov	r0, #4
400080c4:	eb002ba8 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080c8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080cc:	eb000269 	bl	40008a78 <_tx_thread_sleep>
400080d0:	eafffff4 	b	400080a8 <UVCAppThread_Entry+0x638>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
400080d4:	e3e0c000 	mvn	ip, #0
400080d8:	e3a01001 	mov	r1, #1
400080dc:	e3a02002 	mov	r2, #2
400080e0:	e28d30b4 	add	r3, sp, #180	; 0xb4
400080e4:	e59f0404 	ldr	r0, [pc, #1028]	; 400084f0 <UVCAppThread_Entry+0xa80>
400080e8:	e58dc000 	str	ip, [sp]
400080ec:	eb000729 	bl	40009d98 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
400080f0:	e1a02004 	mov	r2, r4
400080f4:	e59f044c 	ldr	r0, [pc, #1100]	; 40008548 <UVCAppThread_Entry+0xad8>
400080f8:	e1a01004 	mov	r1, r4
400080fc:	eb00418e 	bl	4001873c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008100:	e2502000 	subs	r2, r0, #0
40008104:	1a00006e 	bne	400082c4 <UVCAppThread_Entry+0x854>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008108:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
4000810c:	e3530000 	cmp	r3, #0
40008110:	1a000063 	bne	400082a4 <UVCAppThread_Entry+0x834>
                    CyU3PThreadSleep(1000);
                    SensorSetIrisControl(0x2, 0x30, 0x10, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                    CyU3PThreadSleep(1000);
                    SensorSetIrisControl(0x4, 0x30, 0x80, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
#endif
                    CyU3PThreadSleep(1000);
40008114:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008118:	eb000256 	bl	40008a78 <_tx_thread_sleep>
                    SensorSetIrisControl(0x1, 0x30, 0x20, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
4000811c:	e3a03052 	mov	r3, #82	; 0x52
40008120:	e3a01030 	mov	r1, #48	; 0x30
40008124:	e3a02020 	mov	r2, #32
40008128:	e3a00001 	mov	r0, #1
4000812c:	ebfff1ce 	bl	4000486c <SensorSetIrisControl>
                    CyU3PThreadSleep(1000);
40008130:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008134:	eb00024f 	bl	40008a78 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008138:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
4000813c:	e3530003 	cmp	r3, #3
40008140:	0a000047 	beq	40008264 <UVCAppThread_Entry+0x7f4>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008144:	e3530002 	cmp	r3, #2
40008148:	0a000029 	beq	400081f4 <UVCAppThread_Entry+0x784>
#endif
                    CyU3PThreadSleep(1000);
                    SensorSetIrisControl(0x1, 0x30, 0x20, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                    CyU3PThreadSleep(1000);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
4000814c:	e3a0e001 	mov	lr, #1
40008150:	e586e03c 	str	lr, [r6, #60]	; 0x3c
                    CyU3PThreadSleep(200);
40008154:	e3a000c8 	mov	r0, #200	; 0xc8
40008158:	eb000246 	bl	40008a78 <_tx_thread_sleep>
4000815c:	eaffff84 	b	40007f74 <UVCAppThread_Entry+0x504>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
40008160:	e3a00004 	mov	r0, #4
40008164:	e59f13fc 	ldr	r1, [pc, #1020]	; 40008568 <UVCAppThread_Entry+0xaf8>
40008168:	eb002b7f 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000816c:	e59f13e0 	ldr	r1, [pc, #992]	; 40008554 <UVCAppThread_Entry+0xae4>
40008170:	e3a00004 	mov	r0, #4
40008174:	eb002b7c 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008178:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000817c:	eb00023d 	bl	40008a78 <_tx_thread_sleep>
40008180:	eafffff9 	b	4000816c <UVCAppThread_Entry+0x6fc>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008184:	e3a00004 	mov	r0, #4
40008188:	e59f13dc 	ldr	r1, [pc, #988]	; 4000856c <UVCAppThread_Entry+0xafc>
4000818c:	eb002b76 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008190:	e59f13bc 	ldr	r1, [pc, #956]	; 40008554 <UVCAppThread_Entry+0xae4>
40008194:	e3a00004 	mov	r0, #4
40008198:	eb002b73 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000819c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081a0:	eb000234 	bl	40008a78 <_tx_thread_sleep>
400081a4:	eafffff9 	b	40008190 <UVCAppThread_Entry+0x720>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400081a8:	e2800004 	add	r0, r0, #4
400081ac:	e59f13bc 	ldr	r1, [pc, #956]	; 40008570 <UVCAppThread_Entry+0xb00>
400081b0:	eb002b6d 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081b4:	e59f1398 	ldr	r1, [pc, #920]	; 40008554 <UVCAppThread_Entry+0xae4>
400081b8:	e3a00004 	mov	r0, #4
400081bc:	eb002b6a 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081c0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081c4:	eb00022b 	bl	40008a78 <_tx_thread_sleep>
400081c8:	eafffff9 	b	400081b4 <UVCAppThread_Entry+0x744>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400081cc:	e3a00004 	mov	r0, #4
400081d0:	e59f139c 	ldr	r1, [pc, #924]	; 40008574 <UVCAppThread_Entry+0xb04>
400081d4:	e1a02005 	mov	r2, r5
400081d8:	eb002b63 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081dc:	e59f1370 	ldr	r1, [pc, #880]	; 40008554 <UVCAppThread_Entry+0xae4>
400081e0:	e3a00004 	mov	r0, #4
400081e4:	eb002b60 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081e8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081ec:	eb000221 	bl	40008a78 <_tx_thread_sleep>
400081f0:	eafffff9 	b	400081dc <UVCAppThread_Entry+0x76c>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
400081f4:	e59f137c 	ldr	r1, [pc, #892]	; 40008578 <UVCAppThread_Entry+0xb08>
400081f8:	e3a00001 	mov	r0, #1
400081fc:	eb002b5a 	bl	40012f6c <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
40008200:	e59f0374 	ldr	r0, [pc, #884]	; 4000857c <UVCAppThread_Entry+0xb0c>
40008204:	eb004c8c 	bl	4001b43c <CyU3PGpifLoad>
40008208:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
4000820c:	e3520000 	cmp	r2, #0
40008210:	1a00001a 	bne	40008280 <UVCAppThread_Entry+0x810>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008214:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
40008218:	e3530003 	cmp	r3, #3
4000821c:	0a000001 	beq	40008228 <UVCAppThread_Entry+0x7b8>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
40008220:	e3530002 	cmp	r3, #2
40008224:	1affffc8 	bne	4000814c <UVCAppThread_Entry+0x6dc>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008228:	e1a00002 	mov	r0, r2
4000822c:	e1a01002 	mov	r1, r2
40008230:	eb004d27 	bl	4001b6d4 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008234:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008238:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
4000823c:	0affffc2 	beq	4000814c <UVCAppThread_Entry+0x6dc>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
40008240:	e3a00004 	mov	r0, #4
40008244:	e59f1334 	ldr	r1, [pc, #820]	; 40008580 <UVCAppThread_Entry+0xb10>
40008248:	eb002b47 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000824c:	e59f1300 	ldr	r1, [pc, #768]	; 40008554 <UVCAppThread_Entry+0xae4>
40008250:	e3a00004 	mov	r0, #4
40008254:	eb002b44 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008258:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000825c:	eb000205 	bl	40008a78 <_tx_thread_sleep>
40008260:	eafffff9 	b	4000824c <UVCAppThread_Entry+0x7dc>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
40008264:	e59f1318 	ldr	r1, [pc, #792]	; 40008584 <UVCAppThread_Entry+0xb14>
40008268:	e3a00001 	mov	r0, #1
4000826c:	eb002b3e 	bl	40012f6c <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
40008270:	e59f0310 	ldr	r0, [pc, #784]	; 40008588 <UVCAppThread_Entry+0xb18>
40008274:	eb004c70 	bl	4001b43c <CyU3PGpifLoad>
40008278:	e1a02000 	mov	r2, r0
4000827c:	eaffffe2 	b	4000820c <UVCAppThread_Entry+0x79c>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
40008280:	e3a00004 	mov	r0, #4
40008284:	e59f1300 	ldr	r1, [pc, #768]	; 4000858c <UVCAppThread_Entry+0xb1c>
40008288:	eb002b37 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000828c:	e59f12c0 	ldr	r1, [pc, #704]	; 40008554 <UVCAppThread_Entry+0xae4>
40008290:	e3a00004 	mov	r0, #4
40008294:	eb002b34 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008298:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000829c:	eb0001f5 	bl	40008a78 <_tx_thread_sleep>
400082a0:	eafffff9 	b	4000828c <UVCAppThread_Entry+0x81c>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400082a4:	e59f0294 	ldr	r0, [pc, #660]	; 40008540 <UVCAppThread_Entry+0xad0>
400082a8:	e3a0a002 	mov	sl, #2
400082ac:	e1a01004 	mov	r1, r4
400082b0:	e1a02000 	mov	r2, r0
400082b4:	e1a03004 	mov	r3, r4
400082b8:	e58da000 	str	sl, [sp]
400082bc:	eb004d59 	bl	4001b828 <CyU3PGpifSMSwitch>
400082c0:	eaffff2b 	b	40007f74 <UVCAppThread_Entry+0x504>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
400082c4:	e3a00004 	mov	r0, #4
400082c8:	e59f12c0 	ldr	r1, [pc, #704]	; 40008590 <UVCAppThread_Entry+0xb20>
400082cc:	eb002b26 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082d0:	e59f127c 	ldr	r1, [pc, #636]	; 40008554 <UVCAppThread_Entry+0xae4>
400082d4:	e3a00004 	mov	r0, #4
400082d8:	eb002b23 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082dc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082e0:	eb0001e4 	bl	40008a78 <_tx_thread_sleep>
400082e4:	eafffff9 	b	400082d0 <UVCAppThread_Entry+0x860>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400082e8:	e3a00004 	mov	r0, #4
400082ec:	e59f1270 	ldr	r1, [pc, #624]	; 40008564 <UVCAppThread_Entry+0xaf4>
400082f0:	e1a02003 	mov	r2, r3
400082f4:	eb002b1c 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082f8:	e59f1254 	ldr	r1, [pc, #596]	; 40008554 <UVCAppThread_Entry+0xae4>
400082fc:	e3a00004 	mov	r0, #4
40008300:	eb002b19 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008304:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008308:	eb0001da 	bl	40008a78 <_tx_thread_sleep>
4000830c:	eafffff9 	b	400082f8 <UVCAppThread_Entry+0x888>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008310:	e3a00004 	mov	r0, #4
40008314:	e59f1278 	ldr	r1, [pc, #632]	; 40008594 <UVCAppThread_Entry+0xb24>
40008318:	eb002b13 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000831c:	e59f1230 	ldr	r1, [pc, #560]	; 40008554 <UVCAppThread_Entry+0xae4>
40008320:	e3a00004 	mov	r0, #4
40008324:	eb002b10 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008328:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000832c:	eb0001d1 	bl	40008a78 <_tx_thread_sleep>
40008330:	eafffff9 	b	4000831c <UVCAppThread_Entry+0x8ac>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008334:	e3a00004 	mov	r0, #4
40008338:	e59f1258 	ldr	r1, [pc, #600]	; 40008598 <UVCAppThread_Entry+0xb28>
4000833c:	eb002b0a 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008340:	e59f120c 	ldr	r1, [pc, #524]	; 40008554 <UVCAppThread_Entry+0xae4>
40008344:	e3a00004 	mov	r0, #4
40008348:	eb002b07 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000834c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008350:	eb0001c8 	bl	40008a78 <_tx_thread_sleep>
40008354:	eafffff9 	b	40008340 <UVCAppThread_Entry+0x8d0>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
40008358:	e3a00004 	mov	r0, #4
4000835c:	e59f1238 	ldr	r1, [pc, #568]	; 4000859c <UVCAppThread_Entry+0xb2c>
40008360:	eb002b01 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008364:	e59f11e8 	ldr	r1, [pc, #488]	; 40008554 <UVCAppThread_Entry+0xae4>
40008368:	e3a00004 	mov	r0, #4
4000836c:	eb002afe 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008370:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008374:	eb0001bf 	bl	40008a78 <_tx_thread_sleep>
40008378:	eafffff9 	b	40008364 <UVCAppThread_Entry+0x8f4>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
4000837c:	e3a00004 	mov	r0, #4
40008380:	e59f1218 	ldr	r1, [pc, #536]	; 400085a0 <UVCAppThread_Entry+0xb30>
40008384:	eb002af8 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008388:	e59f11c4 	ldr	r1, [pc, #452]	; 40008554 <UVCAppThread_Entry+0xae4>
4000838c:	e3a00004 	mov	r0, #4
40008390:	eb002af5 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008394:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008398:	eb0001b6 	bl	40008a78 <_tx_thread_sleep>
4000839c:	eafffff9 	b	40008388 <UVCAppThread_Entry+0x918>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
400083a0:	e3a00004 	mov	r0, #4
400083a4:	e59f11f8 	ldr	r1, [pc, #504]	; 400085a4 <UVCAppThread_Entry+0xb34>
400083a8:	eb002aef 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083ac:	e59f11a0 	ldr	r1, [pc, #416]	; 40008554 <UVCAppThread_Entry+0xae4>
400083b0:	e3a00004 	mov	r0, #4
400083b4:	eb002aec 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083b8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083bc:	eb0001ad 	bl	40008a78 <_tx_thread_sleep>
400083c0:	eafffff9 	b	400083ac <UVCAppThread_Entry+0x93c>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
400083c4:	e3a00004 	mov	r0, #4
400083c8:	e59f11d8 	ldr	r1, [pc, #472]	; 400085a8 <UVCAppThread_Entry+0xb38>
400083cc:	eb002ae6 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083d0:	e59f117c 	ldr	r1, [pc, #380]	; 40008554 <UVCAppThread_Entry+0xae4>
400083d4:	e3a00004 	mov	r0, #4
400083d8:	eb002ae3 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083dc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083e0:	eb0001a4 	bl	40008a78 <_tx_thread_sleep>
400083e4:	eafffff9 	b	400083d0 <UVCAppThread_Entry+0x960>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
400083e8:	e1c543b4 	strh	r4, [r5, #52]	; 0x34
                consCount = 0;
400083ec:	e1c543b6 	strh	r4, [r5, #54]	; 0x36
                hitFV     = CyFalse;
400083f0:	e5854030 	str	r4, [r5, #48]	; 0x30
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
400083f4:	e5d82481 	ldrb	r2, [r8, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
400083f8:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
400083fc:	e222e001 	eor	lr, r2, #1
40008400:	e5c8e481 	strb	lr, [r8, #1153]	; 0x481
                if(stiflag){
40008404:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
40008408:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
4000840c:	e3530000 	cmp	r3, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = CyFalse;
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40008410:	05d73481 	ldrbeq	r3, [r7, #1153]	; 0x481
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
40008414:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = CyFalse;
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40008418:	020330df 	andeq	r3, r3, #223	; 0xdf
4000841c:	05c73481 	strbeq	r3, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40008420:	0a00000a 	beq	40008450 <UVCAppThread_Entry+0x9e0>
                	if (CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008424:	e59f00c4 	ldr	r0, [pc, #196]	; 400084f0 <UVCAppThread_Entry+0xa80>
40008428:	e3a01080 	mov	r1, #128	; 0x80
4000842c:	e3a02003 	mov	r2, #3
40008430:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008434:	e58d4000 	str	r4, [sp]
40008438:	eb000656 	bl	40009d98 <_txe_event_flags_get>
4000843c:	e3500000 	cmp	r0, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){
                		glUVCHeader[1] |= (1<<5);    //set still image flag
40008440:	05d70481 	ldrbeq	r0, [r7, #1153]	; 0x481
40008444:	03800020 	orreq	r0, r0, #32
40008448:	05c70481 	strbeq	r0, [r7, #1153]	; 0x481
                		stiflag = CyFalse;
4000844c:	0585409c 	streq	r4, [r5, #156]	; 0x9c
                	}
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008450:	e59f00f0 	ldr	r0, [pc, #240]	; 40008548 <UVCAppThread_Entry+0xad8>
40008454:	eb003fcb 	bl	40018388 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008458:	e2502000 	subs	r2, r0, #0
4000845c:	1a00000c 	bne	40008494 <UVCAppThread_Entry+0xa24>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008460:	e1a01002 	mov	r1, r2
40008464:	e59f00dc 	ldr	r0, [pc, #220]	; 40008548 <UVCAppThread_Entry+0xad8>
40008468:	eb0040b3 	bl	4001873c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
4000846c:	e2502000 	subs	r2, r0, #0
40008470:	1a000010 	bne	400084b8 <UVCAppThread_Entry+0xa48>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40008474:	e59f00c4 	ldr	r0, [pc, #196]	; 40008540 <UVCAppThread_Entry+0xad0>
40008478:	e1a01002 	mov	r1, r2
4000847c:	e3a0a002 	mov	sl, #2
40008480:	e1a02000 	mov	r2, r0
40008484:	e1a03001 	mov	r3, r1
40008488:	e58da000 	str	sl, [sp]
4000848c:	eb004ce5 	bl	4001b828 <CyU3PGpifSMSwitch>
40008490:	eafffeb7 	b	40007f74 <UVCAppThread_Entry+0x504>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008494:	e3a00004 	mov	r0, #4
40008498:	e59f110c 	ldr	r1, [pc, #268]	; 400085ac <UVCAppThread_Entry+0xb3c>
4000849c:	eb002ab2 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084a0:	e59f10ac 	ldr	r1, [pc, #172]	; 40008554 <UVCAppThread_Entry+0xae4>
400084a4:	e3a00004 	mov	r0, #4
400084a8:	eb002aaf 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084ac:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084b0:	eb000170 	bl	40008a78 <_tx_thread_sleep>
400084b4:	eafffff9 	b	400084a0 <UVCAppThread_Entry+0xa30>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
400084b8:	e3a00004 	mov	r0, #4
400084bc:	e59f10ec 	ldr	r1, [pc, #236]	; 400085b0 <UVCAppThread_Entry+0xb40>
400084c0:	eb002aa9 	bl	40012f6c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084c4:	e59f1088 	ldr	r1, [pc, #136]	; 40008554 <UVCAppThread_Entry+0xae4>
400084c8:	e3a00004 	mov	r0, #4
400084cc:	eb002aa6 	bl	40012f6c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084d0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084d4:	eb000167 	bl	40008a78 <_tx_thread_sleep>
400084d8:	eafffff9 	b	400084c4 <UVCAppThread_Entry+0xa54>
400084dc:	400117ac 	.word	0x400117ac
400084e0:	0001c200 	.word	0x0001c200
400084e4:	400117cc 	.word	0x400117cc
400084e8:	000186a0 	.word	0x000186a0
400084ec:	400117e8 	.word	0x400117e8
400084f0:	40030f90 	.word	0x40030f90
400084f4:	400050fc 	.word	0x400050fc
400084f8:	00001388 	.word	0x00001388
400084fc:	40004e08 	.word	0x40004e08
40008500:	40004c98 	.word	0x40004c98
40008504:	40010d68 	.word	0x40010d68
40008508:	40010d7c 	.word	0x40010d7c
4000850c:	40010d90 	.word	0x40010d90
40008510:	40010e88 	.word	0x40010e88
40008514:	40010da8 	.word	0x40010da8
40008518:	40010d9c 	.word	0x40010d9c
4000851c:	40010ea0 	.word	0x40010ea0
40008520:	40010f8c 	.word	0x40010f8c
40008524:	40010f90 	.word	0x40010f90
40008528:	40010fc8 	.word	0x40010fc8
4000852c:	00003f01 	.word	0x00003f01
40008530:	00000302 	.word	0x00000302
40008534:	40033030 	.word	0x40033030
40008538:	400330d0 	.word	0x400330d0
4000853c:	00000303 	.word	0x00000303
40008540:	00000101 	.word	0x00000101
40008544:	40004b54 	.word	0x40004b54
40008548:	40032ee4 	.word	0x40032ee4
4000854c:	40030000 	.word	0x40030000
40008550:	40011804 	.word	0x40011804
40008554:	4001136c 	.word	0x4001136c
40008558:	40011854 	.word	0x40011854
4000855c:	40011830 	.word	0x40011830
40008560:	4001187c 	.word	0x4001187c
40008564:	400119d4 	.word	0x400119d4
40008568:	40011ab0 	.word	0x40011ab0
4000856c:	40011a80 	.word	0x40011a80
40008570:	40011a48 	.word	0x40011a48
40008574:	40011a08 	.word	0x40011a08
40008578:	40011b7c 	.word	0x40011b7c
4000857c:	40011178 	.word	0x40011178
40008580:	40011bc4 	.word	0x40011bc4
40008584:	40011b6c 	.word	0x40011b6c
40008588:	4001115c 	.word	0x4001115c
4000858c:	40011b8c 	.word	0x40011b8c
40008590:	40011b38 	.word	0x40011b38
40008594:	400119a4 	.word	0x400119a4
40008598:	40011974 	.word	0x40011974
4000859c:	4001193c 	.word	0x4001193c
400085a0:	400118d4 	.word	0x400118d4
400085a4:	400118a8 	.word	0x400118a8
400085a8:	40011908 	.word	0x40011908
400085ac:	40011ad8 	.word	0x40011ad8
400085b0:	40011b04 	.word	0x40011b04

400085b4 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400085b4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085b8:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400085bc:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085c0:	ebffec2b 	bl	40003674 <CyU3PMemAlloc>
400085c4:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085c8:	e3a00a01 	mov	r0, #4096	; 0x1000
400085cc:	ebffec28 	bl	40003674 <CyU3PMemAlloc>
400085d0:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085d4:	e3a00a01 	mov	r0, #4096	; 0x1000
400085d8:	ebffec25 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400085dc:	e35a0000 	cmp	sl, #0
400085e0:	135b0000 	cmpne	fp, #0
400085e4:	13a09000 	movne	r9, #0
400085e8:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400085ec:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400085f0:	1a000000 	bne	400085f8 <CyFxApplicationDefine+0x44>
400085f4:	eafffffe 	b	400085f4 <CyFxApplicationDefine+0x40>
400085f8:	e3500000 	cmp	r0, #0
400085fc:	0afffffc 	beq	400085f4 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008600:	e28d4028 	add	r4, sp, #40	; 0x28
40008604:	e1a00004 	mov	r0, r4
40008608:	e3a01040 	mov	r1, #64	; 0x40
4000860c:	e59f2118 	ldr	r2, [pc, #280]	; 4000872c <CyFxApplicationDefine+0x178>
40008610:	ebffeb6a 	bl	400033c0 <cmdbufCreate>
40008614:	e1a05004 	mov	r5, r4
40008618:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
4000861c:	e59f710c 	ldr	r7, [pc, #268]	; 40008730 <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008620:	e59f810c 	ldr	r8, [pc, #268]	; 40008734 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008624:	e1a0c007 	mov	ip, r7
40008628:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
4000862c:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008630:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008634:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008638:	e59f20f8 	ldr	r2, [pc, #248]	; 40008738 <CyFxApplicationDefine+0x184>
4000863c:	e1a00004 	mov	r0, r4
40008640:	e3a01020 	mov	r1, #32
40008644:	ebffeb5d 	bl	400033c0 <cmdbufCreate>
40008648:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
4000864c:	e1a0c008 	mov	ip, r8
40008650:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008654:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008658:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000865c:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
40008660:	e1a00007 	mov	r0, r7
40008664:	ebffeb6d 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008668:	e1a00008 	mov	r0, r8
4000866c:	ebffeb6b 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008670:	e3a050a8 	mov	r5, #168	; 0xa8
40008674:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008678:	e59f00bc 	ldr	r0, [pc, #188]	; 4000873c <CyFxApplicationDefine+0x188>
4000867c:	e59f10bc 	ldr	r1, [pc, #188]	; 40008740 <CyFxApplicationDefine+0x18c>
40008680:	e59f20bc 	ldr	r2, [pc, #188]	; 40008744 <CyFxApplicationDefine+0x190>
40008684:	e1a03009 	mov	r3, r9
40008688:	e88d1400 	stm	sp, {sl, ip}
4000868c:	e58d6008 	str	r6, [sp, #8]
40008690:	e58d600c 	str	r6, [sp, #12]
40008694:	e58d9010 	str	r9, [sp, #16]
40008698:	e58d4014 	str	r4, [sp, #20]
4000869c:	e58d5018 	str	r5, [sp, #24]
400086a0:	eb0007c7 	bl	4000a5c4 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400086a4:	e250c000 	subs	ip, r0, #0
400086a8:	1affffd1 	bne	400085f4 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
400086ac:	e1a0300c 	mov	r3, ip
400086b0:	e3a07b02 	mov	r7, #2048	; 0x800
400086b4:	e59f008c 	ldr	r0, [pc, #140]	; 40008748 <CyFxApplicationDefine+0x194>
400086b8:	e59f108c 	ldr	r1, [pc, #140]	; 4000874c <CyFxApplicationDefine+0x198>
400086bc:	e59f208c 	ldr	r2, [pc, #140]	; 40008750 <CyFxApplicationDefine+0x19c>
400086c0:	e58dc010 	str	ip, [sp, #16]
400086c4:	e58db000 	str	fp, [sp]
400086c8:	e58d7004 	str	r7, [sp, #4]
400086cc:	e58d6008 	str	r6, [sp, #8]
400086d0:	e58d600c 	str	r6, [sp, #12]
400086d4:	e58d4014 	str	r4, [sp, #20]
400086d8:	e58d5018 	str	r5, [sp, #24]
400086dc:	eb0007b8 	bl	4000a5c4 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400086e0:	e250c000 	subs	ip, r0, #0
400086e4:	1affffc2 	bne	400085f4 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
400086e8:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400086ec:	e59f0060 	ldr	r0, [pc, #96]	; 40008754 <CyFxApplicationDefine+0x1a0>
400086f0:	e59f1060 	ldr	r1, [pc, #96]	; 40008758 <CyFxApplicationDefine+0x1a4>
400086f4:	e59f2060 	ldr	r2, [pc, #96]	; 4000875c <CyFxApplicationDefine+0x1a8>
400086f8:	e1a0300c 	mov	r3, ip
400086fc:	e58de000 	str	lr, [sp]
40008700:	e58d7004 	str	r7, [sp, #4]
40008704:	e58d6008 	str	r6, [sp, #8]
40008708:	e58d600c 	str	r6, [sp, #12]
4000870c:	e58dc010 	str	ip, [sp, #16]
40008710:	e58d4014 	str	r4, [sp, #20]
40008714:	e58d5018 	str	r5, [sp, #24]
40008718:	eb0007a9 	bl	4000a5c4 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
4000871c:	e3500000 	cmp	r0, #0
40008720:	1affffb3 	bne	400085f4 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008724:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008728:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000872c:	400330d4 	.word	0x400330d4
40008730:	40032ec4 	.word	0x40032ec4
40008734:	40033110 	.word	0x40033110
40008738:	40032ff8 	.word	0x40032ff8
4000873c:	40031030 	.word	0x40031030
40008740:	40011bfc 	.word	0x40011bfc
40008744:	40007a70 	.word	0x40007a70
40008748:	400310d8 	.word	0x400310d8
4000874c:	40011c10 	.word	0x40011c10
40008750:	40006cc4 	.word	0x40006cc4
40008754:	40031180 	.word	0x40031180
40008758:	40011c28 	.word	0x40011c28
4000875c:	40004904 	.word	0x40004904

40008760 <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008760:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008764:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008768:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
4000876c:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008770:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008774:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008778:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
4000877c:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
40008780:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008784:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008788:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
4000878c:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008790:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008794:	eb00272c 	bl	4001244c <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008798:	e2504000 	subs	r4, r0, #0
4000879c:	0a000000 	beq	400087a4 <main+0x44>
400087a0:	eafffffe 	b	400087a0 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
400087a4:	e1a01004 	mov	r1, r4
400087a8:	e1a02004 	mov	r2, r4
400087ac:	e1a00005 	mov	r0, r5
400087b0:	eb0026ff 	bl	400123b4 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400087b4:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
400087b8:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
400087bc:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
400087c0:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
400087c4:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
400087c8:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
400087cc:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
400087d0:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
400087d4:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
400087d8:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
400087dc:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400087e0:	eb0028c3 	bl	40012af4 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
400087e4:	e2504000 	subs	r4, r0, #0
400087e8:	1affffec 	bne	400087a0 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
400087ec:	eb000002 	bl	400087fc <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
400087f0:	e1a00004 	mov	r0, r4
400087f4:	e28dd03c 	add	sp, sp, #60	; 0x3c
400087f8:	e8bd8030 	pop	{r4, r5, pc}

400087fc <_tx_initialize_kernel_enter>:
400087fc:	e92d4010 	push	{r4, lr}
40008800:	e59f004c 	ldr	r0, [pc, #76]	; 40008854 <_tx_initialize_kernel_enter+0x58>
40008804:	e5900000 	ldr	r0, [r0]
40008808:	e59f1048 	ldr	r1, [pc, #72]	; 40008858 <_tx_initialize_kernel_enter+0x5c>
4000880c:	e1500001 	cmp	r0, r1
40008810:	0a000004 	beq	40008828 <_tx_initialize_kernel_enter+0x2c>
40008814:	e1e00221 	mvn	r0, r1, lsr #4
40008818:	e59f1034 	ldr	r1, [pc, #52]	; 40008854 <_tx_initialize_kernel_enter+0x58>
4000881c:	e5810000 	str	r0, [r1]
40008820:	eb0009ee 	bl	4000afe0 <_tx_initialize_low_level>
40008824:	eb00105f 	bl	4000c9a8 <_tx_initialize_high_level>
40008828:	e59f002c 	ldr	r0, [pc, #44]	; 4000885c <_tx_initialize_kernel_enter+0x60>
4000882c:	e59f1020 	ldr	r1, [pc, #32]	; 40008854 <_tx_initialize_kernel_enter+0x58>
40008830:	e5810000 	str	r0, [r1]
40008834:	e59f0024 	ldr	r0, [pc, #36]	; 40008860 <_tx_initialize_kernel_enter+0x64>
40008838:	e5900000 	ldr	r0, [r0]
4000883c:	ebffeb78 	bl	40003624 <tx_application_define>
40008840:	e3a00000 	mov	r0, #0
40008844:	e59f1008 	ldr	r1, [pc, #8]	; 40008854 <_tx_initialize_kernel_enter+0x58>
40008848:	e5810000 	str	r0, [r1]
4000884c:	eb00091f 	bl	4000acd0 <_tx_thread_schedule>
40008850:	e8bd8010 	pop	{r4, pc}
40008854:	40030e48 	.word	0x40030e48
40008858:	f0f0f0f1 	.word	0xf0f0f0f1
4000885c:	f0f0f0f0 	.word	0xf0f0f0f0
40008860:	40030de0 	.word	0x40030de0

40008864 <_tx_thread_identify>:
40008864:	e10f1000 	mrs	r1, CPSR
40008868:	e3812080 	orr	r2, r1, #128	; 0x80
4000886c:	e121f002 	msr	CPSR_c, r2
40008870:	e59f30e0 	ldr	r3, [pc, #224]	; 40008958 <_tx_thread_identify+0xf4>
40008874:	e5930000 	ldr	r0, [r3]
40008878:	e3500000 	cmp	r0, #0
4000887c:	0a000031 	beq	40008948 <_tx_thread_identify+0xe4>
40008880:	e59f30d4 	ldr	r3, [pc, #212]	; 4000895c <_tx_thread_identify+0xf8>
40008884:	e5933000 	ldr	r3, [r3]
40008888:	e2833001 	add	r3, r3, #1
4000888c:	e59fc0c8 	ldr	ip, [pc, #200]	; 4000895c <_tx_thread_identify+0xf8>
40008890:	e58c3000 	str	r3, [ip]
40008894:	e580300c 	str	r3, [r0, #12]
40008898:	e59f30c0 	ldr	r3, [pc, #192]	; 40008960 <_tx_thread_identify+0xfc>
4000889c:	e5933000 	ldr	r3, [r3]
400088a0:	e3530000 	cmp	r3, #0
400088a4:	1a000006 	bne	400088c4 <_tx_thread_identify+0x60>
400088a8:	e59f30b4 	ldr	r3, [pc, #180]	; 40008964 <_tx_thread_identify+0x100>
400088ac:	e5933000 	ldr	r3, [r3]
400088b0:	e5803000 	str	r3, [r0]
400088b4:	e5903000 	ldr	r3, [r0]
400088b8:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400088bc:	e5803004 	str	r3, [r0, #4]
400088c0:	ea00000d 	b	400088fc <_tx_thread_identify+0x98>
400088c4:	e59f3094 	ldr	r3, [pc, #148]	; 40008960 <_tx_thread_identify+0xfc>
400088c8:	e5933000 	ldr	r3, [r3]
400088cc:	e59fc094 	ldr	ip, [pc, #148]	; 40008968 <_tx_thread_identify+0x104>
400088d0:	e153000c 	cmp	r3, ip
400088d4:	2a000004 	bcs	400088ec <_tx_thread_identify+0x88>
400088d8:	e3e03000 	mvn	r3, #0
400088dc:	e5803000 	str	r3, [r0]
400088e0:	e3a03000 	mov	r3, #0
400088e4:	e5803004 	str	r3, [r0, #4]
400088e8:	ea000003 	b	400088fc <_tx_thread_identify+0x98>
400088ec:	e59f3074 	ldr	r3, [pc, #116]	; 40008968 <_tx_thread_identify+0x104>
400088f0:	e5803000 	str	r3, [r0]
400088f4:	e3a03000 	mov	r3, #0
400088f8:	e5803004 	str	r3, [r0, #4]
400088fc:	e3a03067 	mov	r3, #103	; 0x67
40008900:	e5803008 	str	r3, [r0, #8]
40008904:	e3a03000 	mov	r3, #0
40008908:	e5803010 	str	r3, [r0, #16]
4000890c:	e5803014 	str	r3, [r0, #20]
40008910:	e5803018 	str	r3, [r0, #24]
40008914:	e580301c 	str	r3, [r0, #28]
40008918:	e2800020 	add	r0, r0, #32
4000891c:	e59f3048 	ldr	r3, [pc, #72]	; 4000896c <_tx_thread_identify+0x108>
40008920:	e5933000 	ldr	r3, [r3]
40008924:	e1500003 	cmp	r0, r3
40008928:	3a000001 	bcc	40008934 <_tx_thread_identify+0xd0>
4000892c:	e59f303c 	ldr	r3, [pc, #60]	; 40008970 <_tx_thread_identify+0x10c>
40008930:	e5930000 	ldr	r0, [r3]
40008934:	e59f301c 	ldr	r3, [pc, #28]	; 40008958 <_tx_thread_identify+0xf4>
40008938:	e5830000 	str	r0, [r3]
4000893c:	e59f3030 	ldr	r3, [pc, #48]	; 40008974 <_tx_thread_identify+0x110>
40008940:	e5933000 	ldr	r3, [r3]
40008944:	e5830020 	str	r0, [r3, #32]
40008948:	e121f001 	msr	CPSR_c, r1
4000894c:	e59f0010 	ldr	r0, [pc, #16]	; 40008964 <_tx_thread_identify+0x100>
40008950:	e5900000 	ldr	r0, [r0]
40008954:	e12fff1e 	bx	lr
40008958:	40030ebc 	.word	0x40030ebc
4000895c:	40030ec0 	.word	0x40030ec0
40008960:	40030e48 	.word	0x40030e48
40008964:	40030e50 	.word	0x40030e50
40008968:	f0f0f0f0 	.word	0xf0f0f0f0
4000896c:	40030eb8 	.word	0x40030eb8
40008970:	40030eb4 	.word	0x40030eb4
40008974:	40030ea8 	.word	0x40030ea8

40008978 <_tx_thread_initialize>:
40008978:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000897c:	e3a00000 	mov	r0, #0
40008980:	e59f10c0 	ldr	r1, [pc, #192]	; 40008a48 <_tx_thread_initialize+0xd0>
40008984:	e5810000 	str	r0, [r1]
40008988:	e59f10bc 	ldr	r1, [pc, #188]	; 40008a4c <_tx_thread_initialize+0xd4>
4000898c:	e5810000 	str	r0, [r1]
40008990:	e59f00b8 	ldr	r0, [pc, #184]	; 40008a50 <_tx_thread_initialize+0xd8>
40008994:	e3a01000 	mov	r1, #0
40008998:	e5801000 	str	r1, [r0]
4000899c:	e59f00b0 	ldr	r0, [pc, #176]	; 40008a54 <_tx_thread_initialize+0xdc>
400089a0:	e5801000 	str	r1, [r0]
400089a4:	e3a00020 	mov	r0, #32
400089a8:	e59f10a8 	ldr	r1, [pc, #168]	; 40008a58 <_tx_thread_initialize+0xe0>
400089ac:	e5810000 	str	r0, [r1]
400089b0:	e3a00000 	mov	r0, #0
400089b4:	e59f10a0 	ldr	r1, [pc, #160]	; 40008a5c <_tx_thread_initialize+0xe4>
400089b8:	e5c10000 	strb	r0, [r1]
400089bc:	e2816001 	add	r6, r1, #1
400089c0:	e3a04001 	mov	r4, #1
400089c4:	ea000009 	b	400089f0 <_tx_thread_initialize+0x78>
400089c8:	e1a07004 	mov	r7, r4
400089cc:	e3a05000 	mov	r5, #0
400089d0:	ea000002 	b	400089e0 <_tx_thread_initialize+0x68>
400089d4:	e1a070a7 	lsr	r7, r7, #1
400089d8:	e2850001 	add	r0, r5, #1
400089dc:	e20050ff 	and	r5, r0, #255	; 0xff
400089e0:	e3170001 	tst	r7, #1
400089e4:	0afffffa 	beq	400089d4 <_tx_thread_initialize+0x5c>
400089e8:	e4c65001 	strb	r5, [r6], #1
400089ec:	e2844001 	add	r4, r4, #1
400089f0:	e3540c01 	cmp	r4, #256	; 0x100
400089f4:	3afffff3 	bcc	400089c8 <_tx_thread_initialize+0x50>
400089f8:	e3a01080 	mov	r1, #128	; 0x80
400089fc:	e59f005c 	ldr	r0, [pc, #92]	; 40008a60 <_tx_thread_initialize+0xe8>
40008a00:	eb002aef 	bl	400135c4 <__aeabi_memclr4>
40008a04:	e3a00000 	mov	r0, #0
40008a08:	e59f1054 	ldr	r1, [pc, #84]	; 40008a64 <_tx_thread_initialize+0xec>
40008a0c:	e5810000 	str	r0, [r1]
40008a10:	e59f1050 	ldr	r1, [pc, #80]	; 40008a68 <_tx_thread_initialize+0xf0>
40008a14:	e5810000 	str	r0, [r1]
40008a18:	e59f104c 	ldr	r1, [pc, #76]	; 40008a6c <_tx_thread_initialize+0xf4>
40008a1c:	e5810000 	str	r0, [r1]
40008a20:	e59f1048 	ldr	r1, [pc, #72]	; 40008a70 <_tx_thread_initialize+0xf8>
40008a24:	e5810000 	str	r0, [r1]
40008a28:	e59f0044 	ldr	r0, [pc, #68]	; 40008a74 <_tx_thread_initialize+0xfc>
40008a2c:	e5900000 	ldr	r0, [r0]
40008a30:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008a34:	e3800c01 	orr	r0, r0, #256	; 0x100
40008a38:	e3800002 	orr	r0, r0, #2
40008a3c:	e59f1030 	ldr	r1, [pc, #48]	; 40008a74 <_tx_thread_initialize+0xfc>
40008a40:	e5810000 	str	r0, [r1]
40008a44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008a48:	40030e50 	.word	0x40030e50
40008a4c:	40030e54 	.word	0x40030e54
40008a50:	40030e60 	.word	0x40030e60
40008a54:	40030e64 	.word	0x40030e64
40008a58:	40030e68 	.word	0x40030e68
40008a5c:	40032774 	.word	0x40032774
40008a60:	40032874 	.word	0x40032874
40008a64:	40030e58 	.word	0x40030e58
40008a68:	40030e5c 	.word	0x40030e5c
40008a6c:	40030e6c 	.word	0x40030e6c
40008a70:	40030e74 	.word	0x40030e74
40008a74:	40030e70 	.word	0x40030e70

40008a78 <_tx_thread_sleep>:
40008a78:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008a7c:	e1a04000 	mov	r4, r0
40008a80:	e59f018c 	ldr	r0, [pc, #396]	; 40008c14 <_tx_thread_sleep+0x19c>
40008a84:	e5900000 	ldr	r0, [r0]
40008a88:	e58d0000 	str	r0, [sp]
40008a8c:	e59d0000 	ldr	r0, [sp]
40008a90:	e3500000 	cmp	r0, #0
40008a94:	0a000007 	beq	40008ab8 <_tx_thread_sleep+0x40>
40008a98:	e59f1178 	ldr	r1, [pc, #376]	; 40008c18 <_tx_thread_sleep+0x1a0>
40008a9c:	e59d0000 	ldr	r0, [sp]
40008aa0:	e1500001 	cmp	r0, r1
40008aa4:	0a000003 	beq	40008ab8 <_tx_thread_sleep+0x40>
40008aa8:	e59f016c 	ldr	r0, [pc, #364]	; 40008c1c <_tx_thread_sleep+0x1a4>
40008aac:	e5900000 	ldr	r0, [r0]
40008ab0:	e3500000 	cmp	r0, #0
40008ab4:	0a000001 	beq	40008ac0 <_tx_thread_sleep+0x48>
40008ab8:	e3a00013 	mov	r0, #19
40008abc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008ac0:	e3540000 	cmp	r4, #0
40008ac4:	1a000001 	bne	40008ad0 <_tx_thread_sleep+0x58>
40008ac8:	e3a00000 	mov	r0, #0
40008acc:	eafffffa 	b	40008abc <_tx_thread_sleep+0x44>
40008ad0:	e10f5000 	mrs	r5, CPSR
40008ad4:	e3856080 	orr	r6, r5, #128	; 0x80
40008ad8:	e121f006 	msr	CPSR_c, r6
40008adc:	e59f113c 	ldr	r1, [pc, #316]	; 40008c20 <_tx_thread_sleep+0x1a8>
40008ae0:	e5910000 	ldr	r0, [r1]
40008ae4:	e3500000 	cmp	r0, #0
40008ae8:	0a000033 	beq	40008bbc <_tx_thread_sleep+0x144>
40008aec:	e59f1130 	ldr	r1, [pc, #304]	; 40008c24 <_tx_thread_sleep+0x1ac>
40008af0:	e5911000 	ldr	r1, [r1]
40008af4:	e2811001 	add	r1, r1, #1
40008af8:	e59f2124 	ldr	r2, [pc, #292]	; 40008c24 <_tx_thread_sleep+0x1ac>
40008afc:	e5821000 	str	r1, [r2]
40008b00:	e580100c 	str	r1, [r0, #12]
40008b04:	e59f1110 	ldr	r1, [pc, #272]	; 40008c1c <_tx_thread_sleep+0x1a4>
40008b08:	e5911000 	ldr	r1, [r1]
40008b0c:	e3510000 	cmp	r1, #0
40008b10:	1a000006 	bne	40008b30 <_tx_thread_sleep+0xb8>
40008b14:	e59f10f8 	ldr	r1, [pc, #248]	; 40008c14 <_tx_thread_sleep+0x19c>
40008b18:	e5911000 	ldr	r1, [r1]
40008b1c:	e5801000 	str	r1, [r0]
40008b20:	e5901000 	ldr	r1, [r0]
40008b24:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008b28:	e5801004 	str	r1, [r0, #4]
40008b2c:	ea00000d 	b	40008b68 <_tx_thread_sleep+0xf0>
40008b30:	e59f10e4 	ldr	r1, [pc, #228]	; 40008c1c <_tx_thread_sleep+0x1a4>
40008b34:	e5911000 	ldr	r1, [r1]
40008b38:	e59f20e8 	ldr	r2, [pc, #232]	; 40008c28 <_tx_thread_sleep+0x1b0>
40008b3c:	e1510002 	cmp	r1, r2
40008b40:	2a000004 	bcs	40008b58 <_tx_thread_sleep+0xe0>
40008b44:	e3e01000 	mvn	r1, #0
40008b48:	e5801000 	str	r1, [r0]
40008b4c:	e3a01000 	mov	r1, #0
40008b50:	e5801004 	str	r1, [r0, #4]
40008b54:	ea000003 	b	40008b68 <_tx_thread_sleep+0xf0>
40008b58:	e59f10c8 	ldr	r1, [pc, #200]	; 40008c28 <_tx_thread_sleep+0x1b0>
40008b5c:	e5801000 	str	r1, [r0]
40008b60:	e3a01000 	mov	r1, #0
40008b64:	e5801004 	str	r1, [r0, #4]
40008b68:	e3a01070 	mov	r1, #112	; 0x70
40008b6c:	e5801008 	str	r1, [r0, #8]
40008b70:	e5804010 	str	r4, [r0, #16]
40008b74:	e59d1000 	ldr	r1, [sp]
40008b78:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008b7c:	e5801014 	str	r1, [r0, #20]
40008b80:	e580d018 	str	sp, [r0, #24]
40008b84:	e3a01000 	mov	r1, #0
40008b88:	e580101c 	str	r1, [r0, #28]
40008b8c:	e2800020 	add	r0, r0, #32
40008b90:	e59f1094 	ldr	r1, [pc, #148]	; 40008c2c <_tx_thread_sleep+0x1b4>
40008b94:	e5911000 	ldr	r1, [r1]
40008b98:	e1500001 	cmp	r0, r1
40008b9c:	3a000001 	bcc	40008ba8 <_tx_thread_sleep+0x130>
40008ba0:	e59f1088 	ldr	r1, [pc, #136]	; 40008c30 <_tx_thread_sleep+0x1b8>
40008ba4:	e5910000 	ldr	r0, [r1]
40008ba8:	e59f1070 	ldr	r1, [pc, #112]	; 40008c20 <_tx_thread_sleep+0x1a8>
40008bac:	e5810000 	str	r0, [r1]
40008bb0:	e59f107c 	ldr	r1, [pc, #124]	; 40008c34 <_tx_thread_sleep+0x1bc>
40008bb4:	e5911000 	ldr	r1, [r1]
40008bb8:	e5810020 	str	r0, [r1, #32]
40008bbc:	e3a00004 	mov	r0, #4
40008bc0:	e59d1000 	ldr	r1, [sp]
40008bc4:	e5810030 	str	r0, [r1, #48]	; 0x30
40008bc8:	e3a00001 	mov	r0, #1
40008bcc:	e59d1000 	ldr	r1, [sp]
40008bd0:	e5810038 	str	r0, [r1, #56]	; 0x38
40008bd4:	e3a00000 	mov	r0, #0
40008bd8:	e59d1000 	ldr	r1, [sp]
40008bdc:	e5810084 	str	r0, [r1, #132]	; 0x84
40008be0:	e59d0000 	ldr	r0, [sp]
40008be4:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008be8:	e59f0048 	ldr	r0, [pc, #72]	; 40008c38 <_tx_thread_sleep+0x1c0>
40008bec:	e5900000 	ldr	r0, [r0]
40008bf0:	e2800001 	add	r0, r0, #1
40008bf4:	e59f103c 	ldr	r1, [pc, #60]	; 40008c38 <_tx_thread_sleep+0x1c0>
40008bf8:	e5810000 	str	r0, [r1]
40008bfc:	e121f005 	msr	CPSR_c, r5
40008c00:	e59d0000 	ldr	r0, [sp]
40008c04:	eb00000c 	bl	40008c3c <_tx_thread_system_suspend>
40008c08:	e59d0000 	ldr	r0, [sp]
40008c0c:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008c10:	eaffffa9 	b	40008abc <_tx_thread_sleep+0x44>
40008c14:	40030e50 	.word	0x40030e50
40008c18:	40032974 	.word	0x40032974
40008c1c:	40030e48 	.word	0x40030e48
40008c20:	40030ebc 	.word	0x40030ebc
40008c24:	40030ec0 	.word	0x40030ec0
40008c28:	f0f0f0f0 	.word	0xf0f0f0f0
40008c2c:	40030eb8 	.word	0x40030eb8
40008c30:	40030eb4 	.word	0x40030eb4
40008c34:	40030ea8 	.word	0x40030ea8
40008c38:	40030e6c 	.word	0x40030e6c

40008c3c <_tx_thread_system_suspend>:
40008c3c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008c40:	e1a04000 	mov	r4, r0
40008c44:	e3a0b000 	mov	fp, #0
40008c48:	e59f05b0 	ldr	r0, [pc, #1456]	; 40009200 <_tx_thread_system_suspend+0x5c4>
40008c4c:	e5900000 	ldr	r0, [r0]
40008c50:	e1540000 	cmp	r4, r0
40008c54:	1a000009 	bne	40008c80 <_tx_thread_system_suspend+0x44>
40008c58:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008c5c:	e58d0000 	str	r0, [sp]
40008c60:	e59d0000 	ldr	r0, [sp]
40008c64:	e3500000 	cmp	r0, #0
40008c68:	0a000004 	beq	40008c80 <_tx_thread_system_suspend+0x44>
40008c6c:	e59d0000 	ldr	r0, [sp]
40008c70:	e3700001 	cmn	r0, #1
40008c74:	0a000001 	beq	40008c80 <_tx_thread_system_suspend+0x44>
40008c78:	e284004c 	add	r0, r4, #76	; 0x4c
40008c7c:	eb00020a 	bl	400094ac <_tx_timer_system_activate>
40008c80:	e5940008 	ldr	r0, [r4, #8]
40008c84:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008c88:	e1500001 	cmp	r0, r1
40008c8c:	2a000001 	bcs	40008c98 <_tx_thread_system_suspend+0x5c>
40008c90:	e5940008 	ldr	r0, [r4, #8]
40008c94:	e5840040 	str	r0, [r4, #64]	; 0x40
40008c98:	e594000c 	ldr	r0, [r4, #12]
40008c9c:	e5900000 	ldr	r0, [r0]
40008ca0:	e59f155c 	ldr	r1, [pc, #1372]	; 40009204 <_tx_thread_system_suspend+0x5c8>
40008ca4:	e1500001 	cmp	r0, r1
40008ca8:	1a000007 	bne	40008ccc <_tx_thread_system_suspend+0x90>
40008cac:	e5940010 	ldr	r0, [r4, #16]
40008cb0:	e5900001 	ldr	r0, [r0, #1]
40008cb4:	e1500001 	cmp	r0, r1
40008cb8:	1a000003 	bne	40008ccc <_tx_thread_system_suspend+0x90>
40008cbc:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008cc0:	e594100c 	ldr	r1, [r4, #12]
40008cc4:	e1500001 	cmp	r0, r1
40008cc8:	2a000001 	bcs	40008cd4 <_tx_thread_system_suspend+0x98>
40008ccc:	e1a00004 	mov	r0, r4
40008cd0:	eb001941 	bl	4000f1dc <_tx_thread_stack_error_handler>
40008cd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008cd8:	e5100004 	ldr	r0, [r0, #-4]
40008cdc:	e59f1520 	ldr	r1, [pc, #1312]	; 40009204 <_tx_thread_system_suspend+0x5c8>
40008ce0:	e1500001 	cmp	r0, r1
40008ce4:	0a000001 	beq	40008cf0 <_tx_thread_system_suspend+0xb4>
40008ce8:	e1a00004 	mov	r0, r4
40008cec:	eb001905 	bl	4000f108 <_tx_thread_stack_analyze>
40008cf0:	e10f5000 	mrs	r5, CPSR
40008cf4:	e3856080 	orr	r6, r5, #128	; 0x80
40008cf8:	e121f006 	msr	CPSR_c, r6
40008cfc:	e59f0504 	ldr	r0, [pc, #1284]	; 40009208 <_tx_thread_system_suspend+0x5cc>
40008d00:	e5900000 	ldr	r0, [r0]
40008d04:	e2400001 	sub	r0, r0, #1
40008d08:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009208 <_tx_thread_system_suspend+0x5cc>
40008d0c:	e5810000 	str	r0, [r1]
40008d10:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008d14:	e3500000 	cmp	r0, #0
40008d18:	0a000112 	beq	40009168 <_tx_thread_system_suspend+0x52c>
40008d1c:	e59f04e8 	ldr	r0, [pc, #1256]	; 4000920c <_tx_thread_system_suspend+0x5d0>
40008d20:	e590a000 	ldr	sl, [r0]
40008d24:	e2801000 	add	r1, r0, #0
40008d28:	e5910000 	ldr	r0, [r1]
40008d2c:	e3500000 	cmp	r0, #0
40008d30:	0a000034 	beq	40008e08 <_tx_thread_system_suspend+0x1cc>
40008d34:	e59f14d4 	ldr	r1, [pc, #1236]	; 40009210 <_tx_thread_system_suspend+0x5d4>
40008d38:	e5911000 	ldr	r1, [r1]
40008d3c:	e2811001 	add	r1, r1, #1
40008d40:	e59f24c8 	ldr	r2, [pc, #1224]	; 40009210 <_tx_thread_system_suspend+0x5d4>
40008d44:	e5821000 	str	r1, [r2]
40008d48:	e580100c 	str	r1, [r0, #12]
40008d4c:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009214 <_tx_thread_system_suspend+0x5d8>
40008d50:	e5911000 	ldr	r1, [r1]
40008d54:	e3510000 	cmp	r1, #0
40008d58:	1a000006 	bne	40008d78 <_tx_thread_system_suspend+0x13c>
40008d5c:	e59f149c 	ldr	r1, [pc, #1180]	; 40009200 <_tx_thread_system_suspend+0x5c4>
40008d60:	e5911000 	ldr	r1, [r1]
40008d64:	e5801000 	str	r1, [r0]
40008d68:	e5901000 	ldr	r1, [r0]
40008d6c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008d70:	e5801004 	str	r1, [r0, #4]
40008d74:	ea00000d 	b	40008db0 <_tx_thread_system_suspend+0x174>
40008d78:	e59f1494 	ldr	r1, [pc, #1172]	; 40009214 <_tx_thread_system_suspend+0x5d8>
40008d7c:	e5911000 	ldr	r1, [r1]
40008d80:	e59f2490 	ldr	r2, [pc, #1168]	; 40009218 <_tx_thread_system_suspend+0x5dc>
40008d84:	e1510002 	cmp	r1, r2
40008d88:	2a000004 	bcs	40008da0 <_tx_thread_system_suspend+0x164>
40008d8c:	e3e01000 	mvn	r1, #0
40008d90:	e5801000 	str	r1, [r0]
40008d94:	e3a01000 	mov	r1, #0
40008d98:	e5801004 	str	r1, [r0, #4]
40008d9c:	ea000003 	b	40008db0 <_tx_thread_system_suspend+0x174>
40008da0:	e59f1470 	ldr	r1, [pc, #1136]	; 40009218 <_tx_thread_system_suspend+0x5dc>
40008da4:	e5801000 	str	r1, [r0]
40008da8:	e3a01000 	mov	r1, #0
40008dac:	e5801004 	str	r1, [r0, #4]
40008db0:	e3a01002 	mov	r1, #2
40008db4:	e5801008 	str	r1, [r0, #8]
40008db8:	e5804010 	str	r4, [r0, #16]
40008dbc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008dc0:	e5801014 	str	r1, [r0, #20]
40008dc4:	e28d1004 	add	r1, sp, #4
40008dc8:	e5801018 	str	r1, [r0, #24]
40008dcc:	e59f1448 	ldr	r1, [pc, #1096]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40008dd0:	e5911000 	ldr	r1, [r1]
40008dd4:	e580101c 	str	r1, [r0, #28]
40008dd8:	e2800020 	add	r0, r0, #32
40008ddc:	e59f143c 	ldr	r1, [pc, #1084]	; 40009220 <_tx_thread_system_suspend+0x5e4>
40008de0:	e5911000 	ldr	r1, [r1]
40008de4:	e1500001 	cmp	r0, r1
40008de8:	3a000001 	bcc	40008df4 <_tx_thread_system_suspend+0x1b8>
40008dec:	e59f1430 	ldr	r1, [pc, #1072]	; 40009224 <_tx_thread_system_suspend+0x5e8>
40008df0:	e5910000 	ldr	r0, [r1]
40008df4:	e59f1410 	ldr	r1, [pc, #1040]	; 4000920c <_tx_thread_system_suspend+0x5d0>
40008df8:	e5810000 	str	r0, [r1]
40008dfc:	e59f1424 	ldr	r1, [pc, #1060]	; 40009228 <_tx_thread_system_suspend+0x5ec>
40008e00:	e5911000 	ldr	r1, [r1]
40008e04:	e5810020 	str	r0, [r1, #32]
40008e08:	e35a0000 	cmp	sl, #0
40008e0c:	0a000000 	beq	40008e14 <_tx_thread_system_suspend+0x1d8>
40008e10:	e59ab00c 	ldr	fp, [sl, #12]
40008e14:	e3a00000 	mov	r0, #0
40008e18:	e5840038 	str	r0, [r4, #56]	; 0x38
40008e1c:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008e20:	e5940020 	ldr	r0, [r4, #32]
40008e24:	e1500004 	cmp	r0, r4
40008e28:	0a000029 	beq	40008ed4 <_tx_thread_system_suspend+0x298>
40008e2c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008e30:	e5941020 	ldr	r1, [r4, #32]
40008e34:	e5810024 	str	r0, [r1, #36]	; 0x24
40008e38:	e5940020 	ldr	r0, [r4, #32]
40008e3c:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008e40:	e5810020 	str	r0, [r1, #32]
40008e44:	e59f03e0 	ldr	r0, [pc, #992]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40008e48:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008e4c:	e1500004 	cmp	r0, r4
40008e50:	1a0000c4 	bne	40009168 <_tx_thread_system_suspend+0x52c>
40008e54:	e59f13d0 	ldr	r1, [pc, #976]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40008e58:	e5940020 	ldr	r0, [r4, #32]
40008e5c:	e7810107 	str	r0, [r1, r7, lsl #2]
40008e60:	e59f03c8 	ldr	r0, [pc, #968]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40008e64:	e5900000 	ldr	r0, [r0]
40008e68:	e3500000 	cmp	r0, #0
40008e6c:	0a000005 	beq	40008e88 <_tx_thread_system_suspend+0x24c>
40008e70:	e59f03b8 	ldr	r0, [pc, #952]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40008e74:	e5900000 	ldr	r0, [r0]
40008e78:	e3a01001 	mov	r1, #1
40008e7c:	e1c00711 	bic	r0, r0, r1, lsl r7
40008e80:	e59f13a8 	ldr	r1, [pc, #936]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40008e84:	e5810000 	str	r0, [r1]
40008e88:	e59f038c 	ldr	r0, [pc, #908]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40008e8c:	e5900000 	ldr	r0, [r0]
40008e90:	e1540000 	cmp	r4, r0
40008e94:	1a0000b3 	bne	40009168 <_tx_thread_system_suspend+0x52c>
40008e98:	e59f038c 	ldr	r0, [pc, #908]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40008e9c:	e59f1390 	ldr	r1, [pc, #912]	; 40009234 <_tx_thread_system_suspend+0x5f8>
40008ea0:	e5911000 	ldr	r1, [r1]
40008ea4:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008ea8:	e59f136c 	ldr	r1, [pc, #876]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40008eac:	e5810000 	str	r0, [r1]
40008eb0:	e35a0000 	cmp	sl, #0
40008eb4:	0a0000ab 	beq	40009168 <_tx_thread_system_suspend+0x52c>
40008eb8:	e59a000c 	ldr	r0, [sl, #12]
40008ebc:	e150000b 	cmp	r0, fp
40008ec0:	1a0000a8 	bne	40009168 <_tx_thread_system_suspend+0x52c>
40008ec4:	e2810000 	add	r0, r1, #0
40008ec8:	e5900000 	ldr	r0, [r0]
40008ecc:	e58a001c 	str	r0, [sl, #28]
40008ed0:	ea0000a4 	b	40009168 <_tx_thread_system_suspend+0x52c>
40008ed4:	e3a00000 	mov	r0, #0
40008ed8:	e59f134c 	ldr	r1, [pc, #844]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40008edc:	e7810107 	str	r0, [r1, r7, lsl #2]
40008ee0:	e59f0350 	ldr	r0, [pc, #848]	; 40009238 <_tx_thread_system_suspend+0x5fc>
40008ee4:	e5900000 	ldr	r0, [r0]
40008ee8:	e3a01001 	mov	r1, #1
40008eec:	e1c00711 	bic	r0, r0, r1, lsl r7
40008ef0:	e59f1340 	ldr	r1, [pc, #832]	; 40009238 <_tx_thread_system_suspend+0x5fc>
40008ef4:	e5810000 	str	r0, [r1]
40008ef8:	e59f0330 	ldr	r0, [pc, #816]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40008efc:	e5900000 	ldr	r0, [r0]
40008f00:	e3500000 	cmp	r0, #0
40008f04:	0a000005 	beq	40008f20 <_tx_thread_system_suspend+0x2e4>
40008f08:	e59f0320 	ldr	r0, [pc, #800]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40008f0c:	e5900000 	ldr	r0, [r0]
40008f10:	e3a01001 	mov	r1, #1
40008f14:	e1c00711 	bic	r0, r0, r1, lsl r7
40008f18:	e59f1310 	ldr	r1, [pc, #784]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40008f1c:	e5810000 	str	r0, [r1]
40008f20:	e3a08000 	mov	r8, #0
40008f24:	e59f030c 	ldr	r0, [pc, #780]	; 40009238 <_tx_thread_system_suspend+0x5fc>
40008f28:	e5909000 	ldr	r9, [r0]
40008f2c:	e20900ff 	and	r0, r9, #255	; 0xff
40008f30:	e58d0004 	str	r0, [sp, #4]
40008f34:	e59d0004 	ldr	r0, [sp, #4]
40008f38:	e3500000 	cmp	r0, #0
40008f3c:	1a00002a 	bne	40008fec <_tx_thread_system_suspend+0x3b0>
40008f40:	e1a09429 	lsr	r9, r9, #8
40008f44:	e20900ff 	and	r0, r9, #255	; 0xff
40008f48:	e58d0004 	str	r0, [sp, #4]
40008f4c:	e2888008 	add	r8, r8, #8
40008f50:	e59d0004 	ldr	r0, [sp, #4]
40008f54:	e3500000 	cmp	r0, #0
40008f58:	1a000023 	bne	40008fec <_tx_thread_system_suspend+0x3b0>
40008f5c:	e1a09429 	lsr	r9, r9, #8
40008f60:	e20900ff 	and	r0, r9, #255	; 0xff
40008f64:	e58d0004 	str	r0, [sp, #4]
40008f68:	e2888008 	add	r8, r8, #8
40008f6c:	e59d0004 	ldr	r0, [sp, #4]
40008f70:	e3500000 	cmp	r0, #0
40008f74:	1a00001c 	bne	40008fec <_tx_thread_system_suspend+0x3b0>
40008f78:	e1a09429 	lsr	r9, r9, #8
40008f7c:	e20900ff 	and	r0, r9, #255	; 0xff
40008f80:	e58d0004 	str	r0, [sp, #4]
40008f84:	e2888008 	add	r8, r8, #8
40008f88:	e59d0004 	ldr	r0, [sp, #4]
40008f8c:	e3500000 	cmp	r0, #0
40008f90:	1a000015 	bne	40008fec <_tx_thread_system_suspend+0x3b0>
40008f94:	e3a00020 	mov	r0, #32
40008f98:	e59f1294 	ldr	r1, [pc, #660]	; 40009234 <_tx_thread_system_suspend+0x5f8>
40008f9c:	e5810000 	str	r0, [r1]
40008fa0:	e3a00000 	mov	r0, #0
40008fa4:	e59f1270 	ldr	r1, [pc, #624]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40008fa8:	e5810000 	str	r0, [r1]
40008fac:	e35a0000 	cmp	sl, #0
40008fb0:	0a000004 	beq	40008fc8 <_tx_thread_system_suspend+0x38c>
40008fb4:	e59a000c 	ldr	r0, [sl, #12]
40008fb8:	e150000b 	cmp	r0, fp
40008fbc:	1a000001 	bne	40008fc8 <_tx_thread_system_suspend+0x38c>
40008fc0:	e3a00000 	mov	r0, #0
40008fc4:	e58a001c 	str	r0, [sl, #28]
40008fc8:	e121f005 	msr	CPSR_c, r5
40008fcc:	e59f0240 	ldr	r0, [pc, #576]	; 40009214 <_tx_thread_system_suspend+0x5d8>
40008fd0:	e5900000 	ldr	r0, [r0]
40008fd4:	e59f122c 	ldr	r1, [pc, #556]	; 40009208 <_tx_thread_system_suspend+0x5cc>
40008fd8:	e5911000 	ldr	r1, [r1]
40008fdc:	e1900001 	orrs	r0, r0, r1
40008fe0:	1a000000 	bne	40008fe8 <_tx_thread_system_suspend+0x3ac>
40008fe4:	eb000725 	bl	4000ac80 <_tx_thread_system_return>
40008fe8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40008fec:	e59f0248 	ldr	r0, [pc, #584]	; 4000923c <_tx_thread_system_suspend+0x600>
40008ff0:	e59d1004 	ldr	r1, [sp, #4]
40008ff4:	e7d00001 	ldrb	r0, [r0, r1]
40008ff8:	e0800008 	add	r0, r0, r8
40008ffc:	e59f1230 	ldr	r1, [pc, #560]	; 40009234 <_tx_thread_system_suspend+0x5f8>
40009000:	e5810000 	str	r0, [r1]
40009004:	e59f0210 	ldr	r0, [pc, #528]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40009008:	e5900000 	ldr	r0, [r0]
4000900c:	e1540000 	cmp	r4, r0
40009010:	1a000054 	bne	40009168 <_tx_thread_system_suspend+0x52c>
40009014:	e59f0210 	ldr	r0, [pc, #528]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40009018:	e5911000 	ldr	r1, [r1]
4000901c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40009020:	e59f11f4 	ldr	r1, [pc, #500]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40009024:	e5810000 	str	r0, [r1]
40009028:	e35a0000 	cmp	sl, #0
4000902c:	0a000005 	beq	40009048 <_tx_thread_system_suspend+0x40c>
40009030:	e59a000c 	ldr	r0, [sl, #12]
40009034:	e150000b 	cmp	r0, fp
40009038:	1a000002 	bne	40009048 <_tx_thread_system_suspend+0x40c>
4000903c:	e2810000 	add	r0, r1, #0
40009040:	e5900000 	ldr	r0, [r0]
40009044:	e58a001c 	str	r0, [sl, #28]
40009048:	e59f01e0 	ldr	r0, [pc, #480]	; 40009230 <_tx_thread_system_suspend+0x5f4>
4000904c:	e5900000 	ldr	r0, [r0]
40009050:	e3500000 	cmp	r0, #0
40009054:	0a000043 	beq	40009168 <_tx_thread_system_suspend+0x52c>
40009058:	e59f01a8 	ldr	r0, [pc, #424]	; 40009208 <_tx_thread_system_suspend+0x5cc>
4000905c:	e5900000 	ldr	r0, [r0]
40009060:	e2800001 	add	r0, r0, #1
40009064:	e59f119c 	ldr	r1, [pc, #412]	; 40009208 <_tx_thread_system_suspend+0x5cc>
40009068:	e5810000 	str	r0, [r1]
4000906c:	e121f005 	msr	CPSR_c, r5
40009070:	e10f5000 	mrs	r5, CPSR
40009074:	e3856080 	orr	r6, r5, #128	; 0x80
40009078:	e121f006 	msr	CPSR_c, r6
4000907c:	e2810000 	add	r0, r1, #0
40009080:	e5900000 	ldr	r0, [r0]
40009084:	e2400001 	sub	r0, r0, #1
40009088:	e5810000 	str	r0, [r1]
4000908c:	e3a08000 	mov	r8, #0
40009090:	e59f0198 	ldr	r0, [pc, #408]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40009094:	e5909000 	ldr	r9, [r0]
40009098:	e20900ff 	and	r0, r9, #255	; 0xff
4000909c:	e58d0004 	str	r0, [sp, #4]
400090a0:	e59d0004 	ldr	r0, [sp, #4]
400090a4:	e3500000 	cmp	r0, #0
400090a8:	1a000011 	bne	400090f4 <_tx_thread_system_suspend+0x4b8>
400090ac:	e1a09429 	lsr	r9, r9, #8
400090b0:	e20900ff 	and	r0, r9, #255	; 0xff
400090b4:	e58d0004 	str	r0, [sp, #4]
400090b8:	e2888008 	add	r8, r8, #8
400090bc:	e59d0004 	ldr	r0, [sp, #4]
400090c0:	e3500000 	cmp	r0, #0
400090c4:	1a00000a 	bne	400090f4 <_tx_thread_system_suspend+0x4b8>
400090c8:	e1a09429 	lsr	r9, r9, #8
400090cc:	e20900ff 	and	r0, r9, #255	; 0xff
400090d0:	e58d0004 	str	r0, [sp, #4]
400090d4:	e2888008 	add	r8, r8, #8
400090d8:	e59d0004 	ldr	r0, [sp, #4]
400090dc:	e3500000 	cmp	r0, #0
400090e0:	1a000003 	bne	400090f4 <_tx_thread_system_suspend+0x4b8>
400090e4:	e1a09429 	lsr	r9, r9, #8
400090e8:	e20900ff 	and	r0, r9, #255	; 0xff
400090ec:	e58d0004 	str	r0, [sp, #4]
400090f0:	e2888008 	add	r8, r8, #8
400090f4:	e59f0140 	ldr	r0, [pc, #320]	; 4000923c <_tx_thread_system_suspend+0x600>
400090f8:	e59d1004 	ldr	r1, [sp, #4]
400090fc:	e7d00001 	ldrb	r0, [r0, r1]
40009100:	e0807008 	add	r7, r0, r8
40009104:	e59f0120 	ldr	r0, [pc, #288]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40009108:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4000910c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40009110:	e59f111c 	ldr	r1, [pc, #284]	; 40009234 <_tx_thread_system_suspend+0x5f8>
40009114:	e5911000 	ldr	r1, [r1]
40009118:	e1500001 	cmp	r0, r1
4000911c:	8a000011 	bhi	40009168 <_tx_thread_system_suspend+0x52c>
40009120:	e59f0104 	ldr	r0, [pc, #260]	; 4000922c <_tx_thread_system_suspend+0x5f0>
40009124:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009128:	e59f10ec 	ldr	r1, [pc, #236]	; 4000921c <_tx_thread_system_suspend+0x5e0>
4000912c:	e5810000 	str	r0, [r1]
40009130:	e35a0000 	cmp	sl, #0
40009134:	0a000005 	beq	40009150 <_tx_thread_system_suspend+0x514>
40009138:	e59a000c 	ldr	r0, [sl, #12]
4000913c:	e150000b 	cmp	r0, fp
40009140:	1a000002 	bne	40009150 <_tx_thread_system_suspend+0x514>
40009144:	e2810000 	add	r0, r1, #0
40009148:	e5900000 	ldr	r0, [r0]
4000914c:	e58a001c 	str	r0, [sl, #28]
40009150:	e59f00d8 	ldr	r0, [pc, #216]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40009154:	e5900000 	ldr	r0, [r0]
40009158:	e3a01001 	mov	r1, #1
4000915c:	e1c00711 	bic	r0, r0, r1, lsl r7
40009160:	e59f10c8 	ldr	r1, [pc, #200]	; 40009230 <_tx_thread_system_suspend+0x5f4>
40009164:	e5810000 	str	r0, [r1]
40009168:	e121f005 	msr	CPSR_c, r5
4000916c:	e59f008c 	ldr	r0, [pc, #140]	; 40009200 <_tx_thread_system_suspend+0x5c4>
40009170:	e5900000 	ldr	r0, [r0]
40009174:	e59f10a0 	ldr	r1, [pc, #160]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40009178:	e5911000 	ldr	r1, [r1]
4000917c:	e1500001 	cmp	r0, r1
40009180:	0a00001d 	beq	400091fc <_tx_thread_system_suspend+0x5c0>
40009184:	e59f0090 	ldr	r0, [pc, #144]	; 4000921c <_tx_thread_system_suspend+0x5e0>
40009188:	e5904000 	ldr	r4, [r0]
4000918c:	e5940008 	ldr	r0, [r4, #8]
40009190:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009194:	e1500001 	cmp	r0, r1
40009198:	2a000001 	bcs	400091a4 <_tx_thread_system_suspend+0x568>
4000919c:	e5940008 	ldr	r0, [r4, #8]
400091a0:	e5840040 	str	r0, [r4, #64]	; 0x40
400091a4:	e594000c 	ldr	r0, [r4, #12]
400091a8:	e5900000 	ldr	r0, [r0]
400091ac:	e59f1050 	ldr	r1, [pc, #80]	; 40009204 <_tx_thread_system_suspend+0x5c8>
400091b0:	e1500001 	cmp	r0, r1
400091b4:	1a000007 	bne	400091d8 <_tx_thread_system_suspend+0x59c>
400091b8:	e5940010 	ldr	r0, [r4, #16]
400091bc:	e5900001 	ldr	r0, [r0, #1]
400091c0:	e1500001 	cmp	r0, r1
400091c4:	1a000003 	bne	400091d8 <_tx_thread_system_suspend+0x59c>
400091c8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
400091cc:	e594100c 	ldr	r1, [r4, #12]
400091d0:	e1500001 	cmp	r0, r1
400091d4:	2a000001 	bcs	400091e0 <_tx_thread_system_suspend+0x5a4>
400091d8:	e1a00004 	mov	r0, r4
400091dc:	eb0017fe 	bl	4000f1dc <_tx_thread_stack_error_handler>
400091e0:	e59f002c 	ldr	r0, [pc, #44]	; 40009214 <_tx_thread_system_suspend+0x5d8>
400091e4:	e5900000 	ldr	r0, [r0]
400091e8:	e59f1018 	ldr	r1, [pc, #24]	; 40009208 <_tx_thread_system_suspend+0x5cc>
400091ec:	e5911000 	ldr	r1, [r1]
400091f0:	e1900001 	orrs	r0, r0, r1
400091f4:	1a000000 	bne	400091fc <_tx_thread_system_suspend+0x5c0>
400091f8:	eb0006a0 	bl	4000ac80 <_tx_thread_system_return>
400091fc:	eaffff79 	b	40008fe8 <_tx_thread_system_suspend+0x3ac>
40009200:	40030e50 	.word	0x40030e50
40009204:	efefefef 	.word	0xefefefef
40009208:	40030e6c 	.word	0x40030e6c
4000920c:	40030ebc 	.word	0x40030ebc
40009210:	40030ec0 	.word	0x40030ec0
40009214:	40030e48 	.word	0x40030e48
40009218:	f0f0f0f0 	.word	0xf0f0f0f0
4000921c:	40030e54 	.word	0x40030e54
40009220:	40030eb8 	.word	0x40030eb8
40009224:	40030eb4 	.word	0x40030eb4
40009228:	40030ea8 	.word	0x40030ea8
4000922c:	40032874 	.word	0x40032874
40009230:	40030e64 	.word	0x40030e64
40009234:	40030e68 	.word	0x40030e68
40009238:	40030e60 	.word	0x40030e60
4000923c:	40032774 	.word	0x40032774

40009240 <_tx_time_get>:
40009240:	e92d4008 	push	{r3, lr}
40009244:	e10f1000 	mrs	r1, CPSR
40009248:	e3812080 	orr	r2, r1, #128	; 0x80
4000924c:	e121f002 	msr	CPSR_c, r2
40009250:	e59f00ec 	ldr	r0, [pc, #236]	; 40009344 <_tx_time_get+0x104>
40009254:	e5900000 	ldr	r0, [r0]
40009258:	e58d0000 	str	r0, [sp]
4000925c:	e59f30e4 	ldr	r3, [pc, #228]	; 40009348 <_tx_time_get+0x108>
40009260:	e5930000 	ldr	r0, [r3]
40009264:	e3500000 	cmp	r0, #0
40009268:	0a000032 	beq	40009338 <_tx_time_get+0xf8>
4000926c:	e59f30d8 	ldr	r3, [pc, #216]	; 4000934c <_tx_time_get+0x10c>
40009270:	e5933000 	ldr	r3, [r3]
40009274:	e2833001 	add	r3, r3, #1
40009278:	e59fc0cc 	ldr	ip, [pc, #204]	; 4000934c <_tx_time_get+0x10c>
4000927c:	e58c3000 	str	r3, [ip]
40009280:	e580300c 	str	r3, [r0, #12]
40009284:	e59f30c4 	ldr	r3, [pc, #196]	; 40009350 <_tx_time_get+0x110>
40009288:	e5933000 	ldr	r3, [r3]
4000928c:	e3530000 	cmp	r3, #0
40009290:	1a000006 	bne	400092b0 <_tx_time_get+0x70>
40009294:	e59f30b8 	ldr	r3, [pc, #184]	; 40009354 <_tx_time_get+0x114>
40009298:	e5933000 	ldr	r3, [r3]
4000929c:	e5803000 	str	r3, [r0]
400092a0:	e5903000 	ldr	r3, [r0]
400092a4:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400092a8:	e5803004 	str	r3, [r0, #4]
400092ac:	ea00000d 	b	400092e8 <_tx_time_get+0xa8>
400092b0:	e59f3098 	ldr	r3, [pc, #152]	; 40009350 <_tx_time_get+0x110>
400092b4:	e5933000 	ldr	r3, [r3]
400092b8:	e59fc098 	ldr	ip, [pc, #152]	; 40009358 <_tx_time_get+0x118>
400092bc:	e153000c 	cmp	r3, ip
400092c0:	2a000004 	bcs	400092d8 <_tx_time_get+0x98>
400092c4:	e3e03000 	mvn	r3, #0
400092c8:	e5803000 	str	r3, [r0]
400092cc:	e3a03000 	mov	r3, #0
400092d0:	e5803004 	str	r3, [r0, #4]
400092d4:	ea000003 	b	400092e8 <_tx_time_get+0xa8>
400092d8:	e59f3078 	ldr	r3, [pc, #120]	; 40009358 <_tx_time_get+0x118>
400092dc:	e5803000 	str	r3, [r0]
400092e0:	e3a03000 	mov	r3, #0
400092e4:	e5803004 	str	r3, [r0, #4]
400092e8:	e3a03078 	mov	r3, #120	; 0x78
400092ec:	e5803008 	str	r3, [r0, #8]
400092f0:	e59d3000 	ldr	r3, [sp]
400092f4:	e5803010 	str	r3, [r0, #16]
400092f8:	e580d014 	str	sp, [r0, #20]
400092fc:	e3a03000 	mov	r3, #0
40009300:	e5803018 	str	r3, [r0, #24]
40009304:	e580301c 	str	r3, [r0, #28]
40009308:	e2800020 	add	r0, r0, #32
4000930c:	e59f3048 	ldr	r3, [pc, #72]	; 4000935c <_tx_time_get+0x11c>
40009310:	e5933000 	ldr	r3, [r3]
40009314:	e1500003 	cmp	r0, r3
40009318:	3a000001 	bcc	40009324 <_tx_time_get+0xe4>
4000931c:	e59f303c 	ldr	r3, [pc, #60]	; 40009360 <_tx_time_get+0x120>
40009320:	e5930000 	ldr	r0, [r3]
40009324:	e59f301c 	ldr	r3, [pc, #28]	; 40009348 <_tx_time_get+0x108>
40009328:	e5830000 	str	r0, [r3]
4000932c:	e59f3030 	ldr	r3, [pc, #48]	; 40009364 <_tx_time_get+0x124>
40009330:	e5933000 	ldr	r3, [r3]
40009334:	e5830020 	str	r0, [r3, #32]
40009338:	e121f001 	msr	CPSR_c, r1
4000933c:	e59d0000 	ldr	r0, [sp]
40009340:	e8bd8008 	pop	{r3, pc}
40009344:	40030e78 	.word	0x40030e78
40009348:	40030ebc 	.word	0x40030ebc
4000934c:	40030ec0 	.word	0x40030ec0
40009350:	40030e48 	.word	0x40030e48
40009354:	40030e50 	.word	0x40030e50
40009358:	f0f0f0f0 	.word	0xf0f0f0f0
4000935c:	40030eb8 	.word	0x40030eb8
40009360:	40030eb4 	.word	0x40030eb4
40009364:	40030ea8 	.word	0x40030ea8

40009368 <_tx_timer_initialize>:
40009368:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000936c:	e24dd01c 	sub	sp, sp, #28
40009370:	e3a00000 	mov	r0, #0
40009374:	e59f10d8 	ldr	r1, [pc, #216]	; 40009454 <_tx_timer_initialize+0xec>
40009378:	e5810000 	str	r0, [r1]
4000937c:	e59f10d4 	ldr	r1, [pc, #212]	; 40009458 <_tx_timer_initialize+0xf0>
40009380:	e5810000 	str	r0, [r1]
40009384:	e59f10d0 	ldr	r1, [pc, #208]	; 4000945c <_tx_timer_initialize+0xf4>
40009388:	e5810000 	str	r0, [r1]
4000938c:	e59f10cc 	ldr	r1, [pc, #204]	; 40009460 <_tx_timer_initialize+0xf8>
40009390:	e5810000 	str	r0, [r1]
40009394:	e3a01080 	mov	r1, #128	; 0x80
40009398:	e59f00c4 	ldr	r0, [pc, #196]	; 40009464 <_tx_timer_initialize+0xfc>
4000939c:	eb002888 	bl	400135c4 <__aeabi_memclr4>
400093a0:	e59f00bc 	ldr	r0, [pc, #188]	; 40009464 <_tx_timer_initialize+0xfc>
400093a4:	e59f10bc 	ldr	r1, [pc, #188]	; 40009468 <_tx_timer_initialize+0x100>
400093a8:	e5810000 	str	r0, [r1]
400093ac:	e59f10b8 	ldr	r1, [pc, #184]	; 4000946c <_tx_timer_initialize+0x104>
400093b0:	e5810000 	str	r0, [r1]
400093b4:	e280007c 	add	r0, r0, #124	; 0x7c
400093b8:	e59f10b0 	ldr	r1, [pc, #176]	; 40009470 <_tx_timer_initialize+0x108>
400093bc:	e5810000 	str	r0, [r1]
400093c0:	e2810000 	add	r0, r1, #0
400093c4:	e5900000 	ldr	r0, [r0]
400093c8:	e2800004 	add	r0, r0, #4
400093cc:	e5810000 	str	r0, [r1]
400093d0:	e59f009c 	ldr	r0, [pc, #156]	; 40009474 <_tx_timer_initialize+0x10c>
400093d4:	e59f109c 	ldr	r1, [pc, #156]	; 40009478 <_tx_timer_initialize+0x110>
400093d8:	e5810000 	str	r0, [r1]
400093dc:	e3a00b01 	mov	r0, #1024	; 0x400
400093e0:	e59f1094 	ldr	r1, [pc, #148]	; 4000947c <_tx_timer_initialize+0x114>
400093e4:	e5810000 	str	r0, [r1]
400093e8:	e3a00000 	mov	r0, #0
400093ec:	e59f108c 	ldr	r1, [pc, #140]	; 40009480 <_tx_timer_initialize+0x118>
400093f0:	e5810000 	str	r0, [r1]
400093f4:	e3a03000 	mov	r3, #0
400093f8:	e2810000 	add	r0, r1, #0
400093fc:	e5901000 	ldr	r1, [r0]
40009400:	e5900000 	ldr	r0, [r0]
40009404:	e28d2008 	add	r2, sp, #8
40009408:	e882000b 	stm	r2, {r0, r1, r3}
4000940c:	e59f0068 	ldr	r0, [pc, #104]	; 4000947c <_tx_timer_initialize+0x114>
40009410:	e58d3014 	str	r3, [sp, #20]
40009414:	e5903000 	ldr	r3, [r0]
40009418:	e59f0058 	ldr	r0, [pc, #88]	; 40009478 <_tx_timer_initialize+0x110>
4000941c:	e5902000 	ldr	r2, [r0]
40009420:	e1cd20f0 	strd	r2, [sp]
40009424:	e59f3058 	ldr	r3, [pc, #88]	; 40009484 <_tx_timer_initialize+0x11c>
40009428:	e59f2058 	ldr	r2, [pc, #88]	; 40009488 <_tx_timer_initialize+0x120>
4000942c:	e28f1058 	add	r1, pc, #88	; 0x58
40009430:	e59f0068 	ldr	r0, [pc, #104]	; 400094a0 <_tx_timer_initialize+0x138>
40009434:	eb00143b 	bl	4000e528 <_tx_thread_create>
40009438:	e3a00000 	mov	r0, #0
4000943c:	e59f1060 	ldr	r1, [pc, #96]	; 400094a4 <_tx_timer_initialize+0x13c>
40009440:	e5810000 	str	r0, [r1]
40009444:	e59f105c 	ldr	r1, [pc, #92]	; 400094a8 <_tx_timer_initialize+0x140>
40009448:	e5810000 	str	r0, [r1]
4000944c:	e28dd01c 	add	sp, sp, #28
40009450:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009454:	40030e78 	.word	0x40030e78
40009458:	40030e7c 	.word	0x40030e7c
4000945c:	40030e80 	.word	0x40030e80
40009460:	40030e90 	.word	0x40030e90
40009464:	400328f4 	.word	0x400328f4
40009468:	40030e84 	.word	0x40030e84
4000946c:	40030e8c 	.word	0x40030e8c
40009470:	40030e88 	.word	0x40030e88
40009474:	40032a1c 	.word	0x40032a1c
40009478:	40030e9c 	.word	0x40030e9c
4000947c:	40030ea0 	.word	0x40030ea0
40009480:	40030ea4 	.word	0x40030ea4
40009484:	4154494d 	.word	0x4154494d
40009488:	40009598 	.word	0x40009598
4000948c:	74737953 	.word	0x74737953
40009490:	54206d65 	.word	0x54206d65
40009494:	72656d69 	.word	0x72656d69
40009498:	72685420 	.word	0x72685420
4000949c:	00646165 	.word	0x00646165
400094a0:	40032974 	.word	0x40032974
400094a4:	40030e94 	.word	0x40030e94
400094a8:	40030e98 	.word	0x40030e98

400094ac <_tx_timer_system_activate>:
400094ac:	e92d4010 	push	{r4, lr}
400094b0:	e1a01000 	mov	r1, r0
400094b4:	e10f2000 	mrs	r2, CPSR
400094b8:	e3823080 	orr	r3, r2, #128	; 0x80
400094bc:	e121f003 	msr	CPSR_c, r3
400094c0:	e5910000 	ldr	r0, [r1]
400094c4:	e3500000 	cmp	r0, #0
400094c8:	0a00002c 	beq	40009580 <_tx_timer_system_activate+0xd4>
400094cc:	e5910000 	ldr	r0, [r1]
400094d0:	e3700001 	cmn	r0, #1
400094d4:	0a000029 	beq	40009580 <_tx_timer_system_activate+0xd4>
400094d8:	e5910018 	ldr	r0, [r1, #24]
400094dc:	e3500000 	cmp	r0, #0
400094e0:	1a000026 	bne	40009580 <_tx_timer_system_activate+0xd4>
400094e4:	e5910000 	ldr	r0, [r1]
400094e8:	e3500020 	cmp	r0, #32
400094ec:	9a000001 	bls	400094f8 <_tx_timer_system_activate+0x4c>
400094f0:	e3a0e01f 	mov	lr, #31
400094f4:	ea000001 	b	40009500 <_tx_timer_system_activate+0x54>
400094f8:	e5910000 	ldr	r0, [r1]
400094fc:	e240e001 	sub	lr, r0, #1
40009500:	e59f0084 	ldr	r0, [pc, #132]	; 4000958c <_tx_timer_system_activate+0xe0>
40009504:	e5900000 	ldr	r0, [r0]
40009508:	e080c10e 	add	ip, r0, lr, lsl #2
4000950c:	e59f007c 	ldr	r0, [pc, #124]	; 40009590 <_tx_timer_system_activate+0xe4>
40009510:	e5900000 	ldr	r0, [r0]
40009514:	e15c0000 	cmp	ip, r0
40009518:	3a000006 	bcc	40009538 <_tx_timer_system_activate+0x8c>
4000951c:	e59f006c 	ldr	r0, [pc, #108]	; 40009590 <_tx_timer_system_activate+0xe4>
40009520:	e5900000 	ldr	r0, [r0]
40009524:	e04c0000 	sub	r0, ip, r0
40009528:	e1a00140 	asr	r0, r0, #2
4000952c:	e59f4060 	ldr	r4, [pc, #96]	; 40009594 <_tx_timer_system_activate+0xe8>
40009530:	e5944000 	ldr	r4, [r4]
40009534:	e084c100 	add	ip, r4, r0, lsl #2
40009538:	e59c0000 	ldr	r0, [ip]
4000953c:	e3500000 	cmp	r0, #0
40009540:	0a00000a 	beq	40009570 <_tx_timer_system_activate+0xc4>
40009544:	e59c0000 	ldr	r0, [ip]
40009548:	e5810010 	str	r0, [r1, #16]
4000954c:	e59c0000 	ldr	r0, [ip]
40009550:	e5900014 	ldr	r0, [r0, #20]
40009554:	e5810014 	str	r0, [r1, #20]
40009558:	e5910014 	ldr	r0, [r1, #20]
4000955c:	e5801010 	str	r1, [r0, #16]
40009560:	e59c0000 	ldr	r0, [ip]
40009564:	e5801014 	str	r1, [r0, #20]
40009568:	e581c018 	str	ip, [r1, #24]
4000956c:	ea000003 	b	40009580 <_tx_timer_system_activate+0xd4>
40009570:	e5811010 	str	r1, [r1, #16]
40009574:	e5811014 	str	r1, [r1, #20]
40009578:	e581c018 	str	ip, [r1, #24]
4000957c:	e58c1000 	str	r1, [ip]
40009580:	e121f002 	msr	CPSR_c, r2
40009584:	e3a00000 	mov	r0, #0
40009588:	e8bd8010 	pop	{r4, pc}
4000958c:	40030e8c 	.word	0x40030e8c
40009590:	40030e88 	.word	0x40030e88
40009594:	40030e84 	.word	0x40030e84

40009598 <_tx_timer_thread_entry>:
40009598:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000959c:	e1a04000 	mov	r4, r0
400095a0:	e3a09000 	mov	r9, #0
400095a4:	e59f0214 	ldr	r0, [pc, #532]	; 400097c0 <_tx_timer_thread_entry+0x228>
400095a8:	e1540000 	cmp	r4, r0
400095ac:	0a000000 	beq	400095b4 <_tx_timer_thread_entry+0x1c>
400095b0:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
400095b4:	e3a00000 	mov	r0, #0
400095b8:	e58d0000 	str	r0, [sp]
400095bc:	e1a00000 	nop			; (mov r0, r0)
400095c0:	e10f5000 	mrs	r5, CPSR
400095c4:	e3856080 	orr	r6, r5, #128	; 0x80
400095c8:	e121f006 	msr	CPSR_c, r6
400095cc:	e59f01f0 	ldr	r0, [pc, #496]	; 400097c4 <_tx_timer_thread_entry+0x22c>
400095d0:	e5900000 	ldr	r0, [r0]
400095d4:	e5900000 	ldr	r0, [r0]
400095d8:	e58d0004 	str	r0, [sp, #4]
400095dc:	e59d0004 	ldr	r0, [sp, #4]
400095e0:	e3500000 	cmp	r0, #0
400095e4:	0a000002 	beq	400095f4 <_tx_timer_thread_entry+0x5c>
400095e8:	e28d0004 	add	r0, sp, #4
400095ec:	e59d1004 	ldr	r1, [sp, #4]
400095f0:	e5810018 	str	r0, [r1, #24]
400095f4:	e3a00000 	mov	r0, #0
400095f8:	e59f11c4 	ldr	r1, [pc, #452]	; 400097c4 <_tx_timer_thread_entry+0x22c>
400095fc:	e5911000 	ldr	r1, [r1]
40009600:	e5810000 	str	r0, [r1]
40009604:	e59f01b8 	ldr	r0, [pc, #440]	; 400097c4 <_tx_timer_thread_entry+0x22c>
40009608:	e5900000 	ldr	r0, [r0]
4000960c:	e2800004 	add	r0, r0, #4
40009610:	e59f11ac 	ldr	r1, [pc, #428]	; 400097c4 <_tx_timer_thread_entry+0x22c>
40009614:	e5810000 	str	r0, [r1]
40009618:	e2810000 	add	r0, r1, #0
4000961c:	e5900000 	ldr	r0, [r0]
40009620:	e59f11a0 	ldr	r1, [pc, #416]	; 400097c8 <_tx_timer_thread_entry+0x230>
40009624:	e5911000 	ldr	r1, [r1]
40009628:	e1500001 	cmp	r0, r1
4000962c:	1a000003 	bne	40009640 <_tx_timer_thread_entry+0xa8>
40009630:	e59f0194 	ldr	r0, [pc, #404]	; 400097cc <_tx_timer_thread_entry+0x234>
40009634:	e5900000 	ldr	r0, [r0]
40009638:	e59f1184 	ldr	r1, [pc, #388]	; 400097c4 <_tx_timer_thread_entry+0x22c>
4000963c:	e5810000 	str	r0, [r1]
40009640:	e3a00000 	mov	r0, #0
40009644:	e59f1184 	ldr	r1, [pc, #388]	; 400097d0 <_tx_timer_thread_entry+0x238>
40009648:	e5810000 	str	r0, [r1]
4000964c:	e121f005 	msr	CPSR_c, r5
40009650:	e10f5000 	mrs	r5, CPSR
40009654:	e3856080 	orr	r6, r5, #128	; 0x80
40009658:	e121f006 	msr	CPSR_c, r6
4000965c:	ea000040 	b	40009764 <_tx_timer_thread_entry+0x1cc>
40009660:	e59d7004 	ldr	r7, [sp, #4]
40009664:	e59d0004 	ldr	r0, [sp, #4]
40009668:	e5900010 	ldr	r0, [r0, #16]
4000966c:	e1500007 	cmp	r0, r7
40009670:	1a000002 	bne	40009680 <_tx_timer_thread_entry+0xe8>
40009674:	e3a00000 	mov	r0, #0
40009678:	e58d0004 	str	r0, [sp, #4]
4000967c:	ea00000a 	b	400096ac <_tx_timer_thread_entry+0x114>
40009680:	e5970014 	ldr	r0, [r7, #20]
40009684:	e5971010 	ldr	r1, [r7, #16]
40009688:	e5810014 	str	r0, [r1, #20]
4000968c:	e5970010 	ldr	r0, [r7, #16]
40009690:	e5971014 	ldr	r1, [r7, #20]
40009694:	e5810010 	str	r0, [r1, #16]
40009698:	e28d0004 	add	r0, sp, #4
4000969c:	e5971010 	ldr	r1, [r7, #16]
400096a0:	e5810018 	str	r0, [r1, #24]
400096a4:	e5970010 	ldr	r0, [r7, #16]
400096a8:	e58d0004 	str	r0, [sp, #4]
400096ac:	e5970000 	ldr	r0, [r7]
400096b0:	e3500020 	cmp	r0, #32
400096b4:	9a000006 	bls	400096d4 <_tx_timer_thread_entry+0x13c>
400096b8:	e5970000 	ldr	r0, [r7]
400096bc:	e2400020 	sub	r0, r0, #32
400096c0:	e5870000 	str	r0, [r7]
400096c4:	e3a08000 	mov	r8, #0
400096c8:	e587d018 	str	sp, [r7, #24]
400096cc:	e5877010 	str	r7, [r7, #16]
400096d0:	ea00000b 	b	40009704 <_tx_timer_thread_entry+0x16c>
400096d4:	e5978008 	ldr	r8, [r7, #8]
400096d8:	e597900c 	ldr	r9, [r7, #12]
400096dc:	e5970004 	ldr	r0, [r7, #4]
400096e0:	e5870000 	str	r0, [r7]
400096e4:	e5970000 	ldr	r0, [r7]
400096e8:	e3500000 	cmp	r0, #0
400096ec:	0a000002 	beq	400096fc <_tx_timer_thread_entry+0x164>
400096f0:	e587d018 	str	sp, [r7, #24]
400096f4:	e5877010 	str	r7, [r7, #16]
400096f8:	ea000001 	b	40009704 <_tx_timer_thread_entry+0x16c>
400096fc:	e3a00000 	mov	r0, #0
40009700:	e5870018 	str	r0, [r7, #24]
40009704:	e121f005 	msr	CPSR_c, r5
40009708:	e3580000 	cmp	r8, #0
4000970c:	0a000001 	beq	40009718 <_tx_timer_thread_entry+0x180>
40009710:	e1a00009 	mov	r0, r9
40009714:	e12fff38 	blx	r8
40009718:	e10f5000 	mrs	r5, CPSR
4000971c:	e3856080 	orr	r6, r5, #128	; 0x80
40009720:	e121f006 	msr	CPSR_c, r6
40009724:	e1a0100d 	mov	r1, sp
40009728:	e5970018 	ldr	r0, [r7, #24]
4000972c:	e1500001 	cmp	r0, r1
40009730:	1a000007 	bne	40009754 <_tx_timer_thread_entry+0x1bc>
40009734:	e3a00000 	mov	r0, #0
40009738:	e5870018 	str	r0, [r7, #24]
4000973c:	e121f005 	msr	CPSR_c, r5
40009740:	e1a00007 	mov	r0, r7
40009744:	ebffff58 	bl	400094ac <_tx_timer_system_activate>
40009748:	e10f5000 	mrs	r5, CPSR
4000974c:	e3856080 	orr	r6, r5, #128	; 0x80
40009750:	e121f006 	msr	CPSR_c, r6
40009754:	e121f005 	msr	CPSR_c, r5
40009758:	e10f5000 	mrs	r5, CPSR
4000975c:	e3856080 	orr	r6, r5, #128	; 0x80
40009760:	e121f006 	msr	CPSR_c, r6
40009764:	e59d0004 	ldr	r0, [sp, #4]
40009768:	e3500000 	cmp	r0, #0
4000976c:	1affffbb 	bne	40009660 <_tx_timer_thread_entry+0xc8>
40009770:	e59f0058 	ldr	r0, [pc, #88]	; 400097d0 <_tx_timer_thread_entry+0x238>
40009774:	e5900000 	ldr	r0, [r0]
40009778:	e3500000 	cmp	r0, #0
4000977c:	1a00000d 	bne	400097b8 <_tx_timer_thread_entry+0x220>
40009780:	e59fa04c 	ldr	sl, [pc, #76]	; 400097d4 <_tx_timer_thread_entry+0x23c>
40009784:	e3a00003 	mov	r0, #3
40009788:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000978c:	e3a00001 	mov	r0, #1
40009790:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009794:	e59f003c 	ldr	r0, [pc, #60]	; 400097d8 <_tx_timer_thread_entry+0x240>
40009798:	e5900000 	ldr	r0, [r0]
4000979c:	e2800001 	add	r0, r0, #1
400097a0:	e59f1030 	ldr	r1, [pc, #48]	; 400097d8 <_tx_timer_thread_entry+0x240>
400097a4:	e5810000 	str	r0, [r1]
400097a8:	e121f005 	msr	CPSR_c, r5
400097ac:	e1a0000a 	mov	r0, sl
400097b0:	ebfffd21 	bl	40008c3c <_tx_thread_system_suspend>
400097b4:	ea000000 	b	400097bc <_tx_timer_thread_entry+0x224>
400097b8:	e121f005 	msr	CPSR_c, r5
400097bc:	eaffff7f 	b	400095c0 <_tx_timer_thread_entry+0x28>
400097c0:	4154494d 	.word	0x4154494d
400097c4:	40030e8c 	.word	0x40030e8c
400097c8:	40030e88 	.word	0x40030e88
400097cc:	40030e84 	.word	0x40030e84
400097d0:	40030e90 	.word	0x40030e90
400097d4:	40032974 	.word	0x40032974
400097d8:	40030e6c 	.word	0x40030e6c

400097dc <_tx_trace_initialize>:
400097dc:	e3a00000 	mov	r0, #0
400097e0:	e59f102c 	ldr	r1, [pc, #44]	; 40009814 <_tx_trace_initialize+0x38>
400097e4:	e5810000 	str	r0, [r1]
400097e8:	e59f1028 	ldr	r1, [pc, #40]	; 40009818 <_tx_trace_initialize+0x3c>
400097ec:	e5810000 	str	r0, [r1]
400097f0:	e59f1024 	ldr	r1, [pc, #36]	; 4000981c <_tx_trace_initialize+0x40>
400097f4:	e5810000 	str	r0, [r1]
400097f8:	e59f1020 	ldr	r1, [pc, #32]	; 40009820 <_tx_trace_initialize+0x44>
400097fc:	e5810000 	str	r0, [r1]
40009800:	e59f101c 	ldr	r1, [pc, #28]	; 40009824 <_tx_trace_initialize+0x48>
40009804:	e5810000 	str	r0, [r1]
40009808:	e59f1018 	ldr	r1, [pc, #24]	; 40009828 <_tx_trace_initialize+0x4c>
4000980c:	e5810000 	str	r0, [r1]
40009810:	e12fff1e 	bx	lr
40009814:	40030ea8 	.word	0x40030ea8
40009818:	40030eac 	.word	0x40030eac
4000981c:	40030eb0 	.word	0x40030eb0
40009820:	40030eb4 	.word	0x40030eb4
40009824:	40030eb8 	.word	0x40030eb8
40009828:	40030ebc 	.word	0x40030ebc

4000982c <_txe_byte_allocate>:
4000982c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40009830:	e1a04000 	mov	r4, r0
40009834:	e1a05001 	mov	r5, r1
40009838:	e1a06002 	mov	r6, r2
4000983c:	e1a07003 	mov	r7, r3
40009840:	e3540000 	cmp	r4, #0
40009844:	0a000003 	beq	40009858 <_txe_byte_allocate+0x2c>
40009848:	e5940000 	ldr	r0, [r4]
4000984c:	e59f10d4 	ldr	r1, [pc, #212]	; 40009928 <_txe_byte_allocate+0xfc>
40009850:	e1500001 	cmp	r0, r1
40009854:	0a000001 	beq	40009860 <_txe_byte_allocate+0x34>
40009858:	e3a00002 	mov	r0, #2
4000985c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40009860:	e3550000 	cmp	r5, #0
40009864:	1a000001 	bne	40009870 <_txe_byte_allocate+0x44>
40009868:	e3a00003 	mov	r0, #3
4000986c:	eafffffa 	b	4000985c <_txe_byte_allocate+0x30>
40009870:	e3560000 	cmp	r6, #0
40009874:	0a000002 	beq	40009884 <_txe_byte_allocate+0x58>
40009878:	e594001c 	ldr	r0, [r4, #28]
4000987c:	e1500006 	cmp	r0, r6
40009880:	2a000001 	bcs	4000988c <_txe_byte_allocate+0x60>
40009884:	e3a00005 	mov	r0, #5
40009888:	eafffff3 	b	4000985c <_txe_byte_allocate+0x30>
4000988c:	e59f0098 	ldr	r0, [pc, #152]	; 4000992c <_txe_byte_allocate+0x100>
40009890:	e5908000 	ldr	r8, [r0]
40009894:	e3570000 	cmp	r7, #0
40009898:	0a000008 	beq	400098c0 <_txe_byte_allocate+0x94>
4000989c:	e59f008c 	ldr	r0, [pc, #140]	; 40009930 <_txe_byte_allocate+0x104>
400098a0:	e5900000 	ldr	r0, [r0]
400098a4:	e3500000 	cmp	r0, #0
400098a8:	1a000002 	bne	400098b8 <_txe_byte_allocate+0x8c>
400098ac:	e59f0080 	ldr	r0, [pc, #128]	; 40009934 <_txe_byte_allocate+0x108>
400098b0:	e1580000 	cmp	r8, r0
400098b4:	1a000001 	bne	400098c0 <_txe_byte_allocate+0x94>
400098b8:	e3a00004 	mov	r0, #4
400098bc:	eaffffe6 	b	4000985c <_txe_byte_allocate+0x30>
400098c0:	e3580000 	cmp	r8, #0
400098c4:	0a000008 	beq	400098ec <_txe_byte_allocate+0xc0>
400098c8:	e59f0064 	ldr	r0, [pc, #100]	; 40009934 <_txe_byte_allocate+0x108>
400098cc:	e1580000 	cmp	r8, r0
400098d0:	0a000003 	beq	400098e4 <_txe_byte_allocate+0xb8>
400098d4:	e59f0054 	ldr	r0, [pc, #84]	; 40009930 <_txe_byte_allocate+0x104>
400098d8:	e5900000 	ldr	r0, [r0]
400098dc:	e3500000 	cmp	r0, #0
400098e0:	0a000008 	beq	40009908 <_txe_byte_allocate+0xdc>
400098e4:	e3a00013 	mov	r0, #19
400098e8:	eaffffdb 	b	4000985c <_txe_byte_allocate+0x30>
400098ec:	e59f003c 	ldr	r0, [pc, #60]	; 40009930 <_txe_byte_allocate+0x104>
400098f0:	e5900000 	ldr	r0, [r0]
400098f4:	e59f103c 	ldr	r1, [pc, #60]	; 40009938 <_txe_byte_allocate+0x10c>
400098f8:	e1500001 	cmp	r0, r1
400098fc:	2a000001 	bcs	40009908 <_txe_byte_allocate+0xdc>
40009900:	e3a00013 	mov	r0, #19
40009904:	eaffffd4 	b	4000985c <_txe_byte_allocate+0x30>
40009908:	e1a03007 	mov	r3, r7
4000990c:	e1a02006 	mov	r2, r6
40009910:	e1a01005 	mov	r1, r5
40009914:	e1a00004 	mov	r0, r4
40009918:	eb0005bf 	bl	4000b01c <_tx_byte_allocate>
4000991c:	e1a09000 	mov	r9, r0
40009920:	e1a00009 	mov	r0, r9
40009924:	eaffffcc 	b	4000985c <_txe_byte_allocate+0x30>
40009928:	42595445 	.word	0x42595445
4000992c:	40030e50 	.word	0x40030e50
40009930:	40030e48 	.word	0x40030e48
40009934:	40032974 	.word	0x40032974
40009938:	f0f0f0f0 	.word	0xf0f0f0f0

4000993c <_txe_byte_pool_create>:
4000993c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009940:	e1a04000 	mov	r4, r0
40009944:	e1a05001 	mov	r5, r1
40009948:	e1a06002 	mov	r6, r2
4000994c:	e1a07003 	mov	r7, r3
40009950:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009954:	e3540000 	cmp	r4, #0
40009958:	0a000001 	beq	40009964 <_txe_byte_pool_create+0x28>
4000995c:	e3580034 	cmp	r8, #52	; 0x34
40009960:	0a000001 	beq	4000996c <_txe_byte_pool_create+0x30>
40009964:	e3a00002 	mov	r0, #2
40009968:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000996c:	e10f9000 	mrs	r9, CPSR
40009970:	e389a080 	orr	sl, r9, #128	; 0x80
40009974:	e121f00a 	msr	CPSR_c, sl
40009978:	e59f0130 	ldr	r0, [pc, #304]	; 40009ab0 <_txe_byte_pool_create+0x174>
4000997c:	e5900000 	ldr	r0, [r0]
40009980:	e2800001 	add	r0, r0, #1
40009984:	e59f1124 	ldr	r1, [pc, #292]	; 40009ab0 <_txe_byte_pool_create+0x174>
40009988:	e5810000 	str	r0, [r1]
4000998c:	e121f009 	msr	CPSR_c, r9
40009990:	e59f011c 	ldr	r0, [pc, #284]	; 40009ab4 <_txe_byte_pool_create+0x178>
40009994:	e5900000 	ldr	r0, [r0]
40009998:	e58d0004 	str	r0, [sp, #4]
4000999c:	e3a0b000 	mov	fp, #0
400099a0:	ea000007 	b	400099c4 <_txe_byte_pool_create+0x88>
400099a4:	e59d0004 	ldr	r0, [sp, #4]
400099a8:	e1540000 	cmp	r4, r0
400099ac:	1a000000 	bne	400099b4 <_txe_byte_pool_create+0x78>
400099b0:	ea000007 	b	400099d4 <_txe_byte_pool_create+0x98>
400099b4:	e59d0004 	ldr	r0, [sp, #4]
400099b8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400099bc:	e58d0004 	str	r0, [sp, #4]
400099c0:	e28bb001 	add	fp, fp, #1
400099c4:	e59f00ec 	ldr	r0, [pc, #236]	; 40009ab8 <_txe_byte_pool_create+0x17c>
400099c8:	e5900000 	ldr	r0, [r0]
400099cc:	e15b0000 	cmp	fp, r0
400099d0:	3afffff3 	bcc	400099a4 <_txe_byte_pool_create+0x68>
400099d4:	e1a00000 	nop			; (mov r0, r0)
400099d8:	e10f9000 	mrs	r9, CPSR
400099dc:	e389a080 	orr	sl, r9, #128	; 0x80
400099e0:	e121f00a 	msr	CPSR_c, sl
400099e4:	e59f00c4 	ldr	r0, [pc, #196]	; 40009ab0 <_txe_byte_pool_create+0x174>
400099e8:	e5900000 	ldr	r0, [r0]
400099ec:	e2400001 	sub	r0, r0, #1
400099f0:	e59f10b8 	ldr	r1, [pc, #184]	; 40009ab0 <_txe_byte_pool_create+0x174>
400099f4:	e5810000 	str	r0, [r1]
400099f8:	e121f009 	msr	CPSR_c, r9
400099fc:	eb001609 	bl	4000f228 <_tx_thread_system_preempt_check>
40009a00:	e59d0004 	ldr	r0, [sp, #4]
40009a04:	e1540000 	cmp	r4, r0
40009a08:	1a000001 	bne	40009a14 <_txe_byte_pool_create+0xd8>
40009a0c:	e3a00002 	mov	r0, #2
40009a10:	eaffffd4 	b	40009968 <_txe_byte_pool_create+0x2c>
40009a14:	e3560000 	cmp	r6, #0
40009a18:	1a000001 	bne	40009a24 <_txe_byte_pool_create+0xe8>
40009a1c:	e3a00003 	mov	r0, #3
40009a20:	eaffffd0 	b	40009968 <_txe_byte_pool_create+0x2c>
40009a24:	e3570064 	cmp	r7, #100	; 0x64
40009a28:	2a000001 	bcs	40009a34 <_txe_byte_pool_create+0xf8>
40009a2c:	e3a00005 	mov	r0, #5
40009a30:	eaffffcc 	b	40009968 <_txe_byte_pool_create+0x2c>
40009a34:	e59f0080 	ldr	r0, [pc, #128]	; 40009abc <_txe_byte_pool_create+0x180>
40009a38:	e5900000 	ldr	r0, [r0]
40009a3c:	e58d0000 	str	r0, [sp]
40009a40:	e59d0000 	ldr	r0, [sp]
40009a44:	e3500000 	cmp	r0, #0
40009a48:	0a000009 	beq	40009a74 <_txe_byte_pool_create+0x138>
40009a4c:	e59f106c 	ldr	r1, [pc, #108]	; 40009ac0 <_txe_byte_pool_create+0x184>
40009a50:	e59d0000 	ldr	r0, [sp]
40009a54:	e1500001 	cmp	r0, r1
40009a58:	0a000003 	beq	40009a6c <_txe_byte_pool_create+0x130>
40009a5c:	e59f0060 	ldr	r0, [pc, #96]	; 40009ac4 <_txe_byte_pool_create+0x188>
40009a60:	e5900000 	ldr	r0, [r0]
40009a64:	e3500000 	cmp	r0, #0
40009a68:	0a000008 	beq	40009a90 <_txe_byte_pool_create+0x154>
40009a6c:	e3a00013 	mov	r0, #19
40009a70:	eaffffbc 	b	40009968 <_txe_byte_pool_create+0x2c>
40009a74:	e59f0048 	ldr	r0, [pc, #72]	; 40009ac4 <_txe_byte_pool_create+0x188>
40009a78:	e5900000 	ldr	r0, [r0]
40009a7c:	e59f1044 	ldr	r1, [pc, #68]	; 40009ac8 <_txe_byte_pool_create+0x18c>
40009a80:	e1500001 	cmp	r0, r1
40009a84:	2a000001 	bcs	40009a90 <_txe_byte_pool_create+0x154>
40009a88:	e3a00013 	mov	r0, #19
40009a8c:	eaffffb5 	b	40009968 <_txe_byte_pool_create+0x2c>
40009a90:	e1a03007 	mov	r3, r7
40009a94:	e1a02006 	mov	r2, r6
40009a98:	e1a01005 	mov	r1, r5
40009a9c:	e1a00004 	mov	r0, r4
40009aa0:	eb000643 	bl	4000b3b4 <_tx_byte_pool_create>
40009aa4:	e58d0008 	str	r0, [sp, #8]
40009aa8:	e59d0008 	ldr	r0, [sp, #8]
40009aac:	eaffffad 	b	40009968 <_txe_byte_pool_create+0x2c>
40009ab0:	40030e6c 	.word	0x40030e6c
40009ab4:	40030eec 	.word	0x40030eec
40009ab8:	40030ef0 	.word	0x40030ef0
40009abc:	40030e50 	.word	0x40030e50
40009ac0:	40032974 	.word	0x40032974
40009ac4:	40030e48 	.word	0x40030e48
40009ac8:	f0f0f0f0 	.word	0xf0f0f0f0

40009acc <_txe_byte_pool_delete>:
40009acc:	e92d4070 	push	{r4, r5, r6, lr}
40009ad0:	e1a04000 	mov	r4, r0
40009ad4:	e3540000 	cmp	r4, #0
40009ad8:	0a000003 	beq	40009aec <_txe_byte_pool_delete+0x20>
40009adc:	e5940000 	ldr	r0, [r4]
40009ae0:	e59f1054 	ldr	r1, [pc, #84]	; 40009b3c <_txe_byte_pool_delete+0x70>
40009ae4:	e1500001 	cmp	r0, r1
40009ae8:	0a000001 	beq	40009af4 <_txe_byte_pool_delete+0x28>
40009aec:	e3a00002 	mov	r0, #2
40009af0:	e8bd8070 	pop	{r4, r5, r6, pc}
40009af4:	e59f0044 	ldr	r0, [pc, #68]	; 40009b40 <_txe_byte_pool_delete+0x74>
40009af8:	e5905000 	ldr	r5, [r0]
40009afc:	e3550000 	cmp	r5, #0
40009b00:	0a000006 	beq	40009b20 <_txe_byte_pool_delete+0x54>
40009b04:	e59f0038 	ldr	r0, [pc, #56]	; 40009b44 <_txe_byte_pool_delete+0x78>
40009b08:	e5900000 	ldr	r0, [r0]
40009b0c:	e3500000 	cmp	r0, #0
40009b10:	1a000002 	bne	40009b20 <_txe_byte_pool_delete+0x54>
40009b14:	e59f002c 	ldr	r0, [pc, #44]	; 40009b48 <_txe_byte_pool_delete+0x7c>
40009b18:	e1550000 	cmp	r5, r0
40009b1c:	1a000001 	bne	40009b28 <_txe_byte_pool_delete+0x5c>
40009b20:	e3a00013 	mov	r0, #19
40009b24:	eafffff1 	b	40009af0 <_txe_byte_pool_delete+0x24>
40009b28:	e1a00004 	mov	r0, r4
40009b2c:	eb0006b6 	bl	4000b60c <_tx_byte_pool_delete>
40009b30:	e1a06000 	mov	r6, r0
40009b34:	e1a00006 	mov	r0, r6
40009b38:	eaffffec 	b	40009af0 <_txe_byte_pool_delete+0x24>
40009b3c:	42595445 	.word	0x42595445
40009b40:	40030e50 	.word	0x40030e50
40009b44:	40030e48 	.word	0x40030e48
40009b48:	40032974 	.word	0x40032974

40009b4c <_txe_byte_release>:
40009b4c:	e92d4070 	push	{r4, r5, r6, lr}
40009b50:	e1a04000 	mov	r4, r0
40009b54:	e3540000 	cmp	r4, #0
40009b58:	1a000001 	bne	40009b64 <_txe_byte_release+0x18>
40009b5c:	e3a00003 	mov	r0, #3
40009b60:	e8bd8070 	pop	{r4, r5, r6, pc}
40009b64:	e59f005c 	ldr	r0, [pc, #92]	; 40009bc8 <_txe_byte_release+0x7c>
40009b68:	e5905000 	ldr	r5, [r0]
40009b6c:	e3550000 	cmp	r5, #0
40009b70:	0a000008 	beq	40009b98 <_txe_byte_release+0x4c>
40009b74:	e59f0050 	ldr	r0, [pc, #80]	; 40009bcc <_txe_byte_release+0x80>
40009b78:	e1550000 	cmp	r5, r0
40009b7c:	0a000003 	beq	40009b90 <_txe_byte_release+0x44>
40009b80:	e59f0048 	ldr	r0, [pc, #72]	; 40009bd0 <_txe_byte_release+0x84>
40009b84:	e5900000 	ldr	r0, [r0]
40009b88:	e3500000 	cmp	r0, #0
40009b8c:	0a000008 	beq	40009bb4 <_txe_byte_release+0x68>
40009b90:	e3a00013 	mov	r0, #19
40009b94:	eafffff1 	b	40009b60 <_txe_byte_release+0x14>
40009b98:	e59f0030 	ldr	r0, [pc, #48]	; 40009bd0 <_txe_byte_release+0x84>
40009b9c:	e5900000 	ldr	r0, [r0]
40009ba0:	e59f102c 	ldr	r1, [pc, #44]	; 40009bd4 <_txe_byte_release+0x88>
40009ba4:	e1500001 	cmp	r0, r1
40009ba8:	2a000001 	bcs	40009bb4 <_txe_byte_release+0x68>
40009bac:	e3a00013 	mov	r0, #19
40009bb0:	eaffffea 	b	40009b60 <_txe_byte_release+0x14>
40009bb4:	e1a00004 	mov	r0, r4
40009bb8:	eb000794 	bl	4000ba10 <_tx_byte_release>
40009bbc:	e1a06000 	mov	r6, r0
40009bc0:	e1a00006 	mov	r0, r6
40009bc4:	eaffffe5 	b	40009b60 <_txe_byte_release+0x14>
40009bc8:	40030e50 	.word	0x40030e50
40009bcc:	40032974 	.word	0x40032974
40009bd0:	40030e48 	.word	0x40030e48
40009bd4:	f0f0f0f0 	.word	0xf0f0f0f0

40009bd8 <_txe_event_flags_create>:
40009bd8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009bdc:	e1a04000 	mov	r4, r0
40009be0:	e1a05001 	mov	r5, r1
40009be4:	e1a06002 	mov	r6, r2
40009be8:	e3540000 	cmp	r4, #0
40009bec:	0a000001 	beq	40009bf8 <_txe_event_flags_create+0x20>
40009bf0:	e3560028 	cmp	r6, #40	; 0x28
40009bf4:	0a000001 	beq	40009c00 <_txe_event_flags_create+0x28>
40009bf8:	e3a00006 	mov	r0, #6
40009bfc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009c00:	e10f7000 	mrs	r7, CPSR
40009c04:	e3878080 	orr	r8, r7, #128	; 0x80
40009c08:	e121f008 	msr	CPSR_c, r8
40009c0c:	e59f00e8 	ldr	r0, [pc, #232]	; 40009cfc <_txe_event_flags_create+0x124>
40009c10:	e5900000 	ldr	r0, [r0]
40009c14:	e2800001 	add	r0, r0, #1
40009c18:	e59f10dc 	ldr	r1, [pc, #220]	; 40009cfc <_txe_event_flags_create+0x124>
40009c1c:	e5810000 	str	r0, [r1]
40009c20:	e121f007 	msr	CPSR_c, r7
40009c24:	e59f00d4 	ldr	r0, [pc, #212]	; 40009d00 <_txe_event_flags_create+0x128>
40009c28:	e590a000 	ldr	sl, [r0]
40009c2c:	e3a09000 	mov	r9, #0
40009c30:	ea000004 	b	40009c48 <_txe_event_flags_create+0x70>
40009c34:	e154000a 	cmp	r4, sl
40009c38:	1a000000 	bne	40009c40 <_txe_event_flags_create+0x68>
40009c3c:	ea000005 	b	40009c58 <_txe_event_flags_create+0x80>
40009c40:	e59aa018 	ldr	sl, [sl, #24]
40009c44:	e2899001 	add	r9, r9, #1
40009c48:	e59f00b4 	ldr	r0, [pc, #180]	; 40009d04 <_txe_event_flags_create+0x12c>
40009c4c:	e5900000 	ldr	r0, [r0]
40009c50:	e1590000 	cmp	r9, r0
40009c54:	3afffff6 	bcc	40009c34 <_txe_event_flags_create+0x5c>
40009c58:	e1a00000 	nop			; (mov r0, r0)
40009c5c:	e10f7000 	mrs	r7, CPSR
40009c60:	e3878080 	orr	r8, r7, #128	; 0x80
40009c64:	e121f008 	msr	CPSR_c, r8
40009c68:	e59f008c 	ldr	r0, [pc, #140]	; 40009cfc <_txe_event_flags_create+0x124>
40009c6c:	e5900000 	ldr	r0, [r0]
40009c70:	e2400001 	sub	r0, r0, #1
40009c74:	e59f1080 	ldr	r1, [pc, #128]	; 40009cfc <_txe_event_flags_create+0x124>
40009c78:	e5810000 	str	r0, [r1]
40009c7c:	e121f007 	msr	CPSR_c, r7
40009c80:	eb001568 	bl	4000f228 <_tx_thread_system_preempt_check>
40009c84:	e154000a 	cmp	r4, sl
40009c88:	1a000001 	bne	40009c94 <_txe_event_flags_create+0xbc>
40009c8c:	e3a00006 	mov	r0, #6
40009c90:	eaffffd9 	b	40009bfc <_txe_event_flags_create+0x24>
40009c94:	e59f006c 	ldr	r0, [pc, #108]	; 40009d08 <_txe_event_flags_create+0x130>
40009c98:	e590b000 	ldr	fp, [r0]
40009c9c:	e35b0000 	cmp	fp, #0
40009ca0:	0a000008 	beq	40009cc8 <_txe_event_flags_create+0xf0>
40009ca4:	e59f0060 	ldr	r0, [pc, #96]	; 40009d0c <_txe_event_flags_create+0x134>
40009ca8:	e15b0000 	cmp	fp, r0
40009cac:	0a000003 	beq	40009cc0 <_txe_event_flags_create+0xe8>
40009cb0:	e59f0058 	ldr	r0, [pc, #88]	; 40009d10 <_txe_event_flags_create+0x138>
40009cb4:	e5900000 	ldr	r0, [r0]
40009cb8:	e3500000 	cmp	r0, #0
40009cbc:	0a000008 	beq	40009ce4 <_txe_event_flags_create+0x10c>
40009cc0:	e3a00013 	mov	r0, #19
40009cc4:	eaffffcc 	b	40009bfc <_txe_event_flags_create+0x24>
40009cc8:	e59f0040 	ldr	r0, [pc, #64]	; 40009d10 <_txe_event_flags_create+0x138>
40009ccc:	e5900000 	ldr	r0, [r0]
40009cd0:	e59f103c 	ldr	r1, [pc, #60]	; 40009d14 <_txe_event_flags_create+0x13c>
40009cd4:	e1500001 	cmp	r0, r1
40009cd8:	2a000001 	bcs	40009ce4 <_txe_event_flags_create+0x10c>
40009cdc:	e3a00013 	mov	r0, #19
40009ce0:	eaffffc5 	b	40009bfc <_txe_event_flags_create+0x24>
40009ce4:	e1a01005 	mov	r1, r5
40009ce8:	e1a00004 	mov	r0, r4
40009cec:	eb0007f9 	bl	4000bcd8 <_tx_event_flags_create>
40009cf0:	e58d0000 	str	r0, [sp]
40009cf4:	e59d0000 	ldr	r0, [sp]
40009cf8:	eaffffbf 	b	40009bfc <_txe_event_flags_create+0x24>
40009cfc:	40030e6c 	.word	0x40030e6c
40009d00:	40030ed4 	.word	0x40030ed4
40009d04:	40030ed8 	.word	0x40030ed8
40009d08:	40030e50 	.word	0x40030e50
40009d0c:	40032974 	.word	0x40032974
40009d10:	40030e48 	.word	0x40030e48
40009d14:	f0f0f0f0 	.word	0xf0f0f0f0

40009d18 <_txe_event_flags_delete>:
40009d18:	e92d4070 	push	{r4, r5, r6, lr}
40009d1c:	e1a04000 	mov	r4, r0
40009d20:	e3540000 	cmp	r4, #0
40009d24:	0a000003 	beq	40009d38 <_txe_event_flags_delete+0x20>
40009d28:	e5940000 	ldr	r0, [r4]
40009d2c:	e59f1054 	ldr	r1, [pc, #84]	; 40009d88 <_txe_event_flags_delete+0x70>
40009d30:	e1500001 	cmp	r0, r1
40009d34:	0a000001 	beq	40009d40 <_txe_event_flags_delete+0x28>
40009d38:	e3a00006 	mov	r0, #6
40009d3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d40:	e59f0044 	ldr	r0, [pc, #68]	; 40009d8c <_txe_event_flags_delete+0x74>
40009d44:	e5905000 	ldr	r5, [r0]
40009d48:	e3550000 	cmp	r5, #0
40009d4c:	0a000006 	beq	40009d6c <_txe_event_flags_delete+0x54>
40009d50:	e59f0038 	ldr	r0, [pc, #56]	; 40009d90 <_txe_event_flags_delete+0x78>
40009d54:	e5900000 	ldr	r0, [r0]
40009d58:	e3500000 	cmp	r0, #0
40009d5c:	1a000002 	bne	40009d6c <_txe_event_flags_delete+0x54>
40009d60:	e59f002c 	ldr	r0, [pc, #44]	; 40009d94 <_txe_event_flags_delete+0x7c>
40009d64:	e1550000 	cmp	r5, r0
40009d68:	1a000001 	bne	40009d74 <_txe_event_flags_delete+0x5c>
40009d6c:	e3a00013 	mov	r0, #19
40009d70:	eafffff1 	b	40009d3c <_txe_event_flags_delete+0x24>
40009d74:	e1a00004 	mov	r0, r4
40009d78:	eb000849 	bl	4000bea4 <_tx_event_flags_delete>
40009d7c:	e1a06000 	mov	r6, r0
40009d80:	e1a00006 	mov	r0, r6
40009d84:	eaffffec 	b	40009d3c <_txe_event_flags_delete+0x24>
40009d88:	4456444e 	.word	0x4456444e
40009d8c:	40030e50 	.word	0x40030e50
40009d90:	40030e48 	.word	0x40030e48
40009d94:	40032974 	.word	0x40032974

40009d98 <_txe_event_flags_get>:
40009d98:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009d9c:	e1a04000 	mov	r4, r0
40009da0:	e1a05001 	mov	r5, r1
40009da4:	e1a06002 	mov	r6, r2
40009da8:	e1a08003 	mov	r8, r3
40009dac:	e59d9020 	ldr	r9, [sp, #32]
40009db0:	e3540000 	cmp	r4, #0
40009db4:	0a000003 	beq	40009dc8 <_txe_event_flags_get+0x30>
40009db8:	e5940000 	ldr	r0, [r4]
40009dbc:	e59f1084 	ldr	r1, [pc, #132]	; 40009e48 <_txe_event_flags_get+0xb0>
40009dc0:	e1500001 	cmp	r0, r1
40009dc4:	0a000001 	beq	40009dd0 <_txe_event_flags_get+0x38>
40009dc8:	e3a00006 	mov	r0, #6
40009dcc:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009dd0:	e3580000 	cmp	r8, #0
40009dd4:	1a000001 	bne	40009de0 <_txe_event_flags_get+0x48>
40009dd8:	e3a00003 	mov	r0, #3
40009ddc:	eafffffa 	b	40009dcc <_txe_event_flags_get+0x34>
40009de0:	e3590000 	cmp	r9, #0
40009de4:	0a00000a 	beq	40009e14 <_txe_event_flags_get+0x7c>
40009de8:	e59f005c 	ldr	r0, [pc, #92]	; 40009e4c <_txe_event_flags_get+0xb4>
40009dec:	e5900000 	ldr	r0, [r0]
40009df0:	e3500000 	cmp	r0, #0
40009df4:	1a000004 	bne	40009e0c <_txe_event_flags_get+0x74>
40009df8:	e59f0050 	ldr	r0, [pc, #80]	; 40009e50 <_txe_event_flags_get+0xb8>
40009dfc:	e5900000 	ldr	r0, [r0]
40009e00:	e59f104c 	ldr	r1, [pc, #76]	; 40009e54 <_txe_event_flags_get+0xbc>
40009e04:	e1500001 	cmp	r0, r1
40009e08:	1a000001 	bne	40009e14 <_txe_event_flags_get+0x7c>
40009e0c:	e3a00004 	mov	r0, #4
40009e10:	eaffffed 	b	40009dcc <_txe_event_flags_get+0x34>
40009e14:	e3560003 	cmp	r6, #3
40009e18:	9a000001 	bls	40009e24 <_txe_event_flags_get+0x8c>
40009e1c:	e3a00008 	mov	r0, #8
40009e20:	eaffffe9 	b	40009dcc <_txe_event_flags_get+0x34>
40009e24:	e1a03008 	mov	r3, r8
40009e28:	e1a02006 	mov	r2, r6
40009e2c:	e1a01005 	mov	r1, r5
40009e30:	e1a00004 	mov	r0, r4
40009e34:	e58d9000 	str	r9, [sp]
40009e38:	eb0008ac 	bl	4000c0f0 <_tx_event_flags_get>
40009e3c:	e1a07000 	mov	r7, r0
40009e40:	e1a00007 	mov	r0, r7
40009e44:	eaffffe0 	b	40009dcc <_txe_event_flags_get+0x34>
40009e48:	4456444e 	.word	0x4456444e
40009e4c:	40030e48 	.word	0x40030e48
40009e50:	40030e50 	.word	0x40030e50
40009e54:	40032974 	.word	0x40032974

40009e58 <_txe_event_flags_set>:
40009e58:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009e5c:	e1a04000 	mov	r4, r0
40009e60:	e1a05001 	mov	r5, r1
40009e64:	e1a06002 	mov	r6, r2
40009e68:	e3540000 	cmp	r4, #0
40009e6c:	0a000003 	beq	40009e80 <_txe_event_flags_set+0x28>
40009e70:	e5940000 	ldr	r0, [r4]
40009e74:	e59f1040 	ldr	r1, [pc, #64]	; 40009ebc <_txe_event_flags_set+0x64>
40009e78:	e1500001 	cmp	r0, r1
40009e7c:	0a000001 	beq	40009e88 <_txe_event_flags_set+0x30>
40009e80:	e3a00006 	mov	r0, #6
40009e84:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009e88:	e3560002 	cmp	r6, #2
40009e8c:	0a000003 	beq	40009ea0 <_txe_event_flags_set+0x48>
40009e90:	e3560000 	cmp	r6, #0
40009e94:	0a000001 	beq	40009ea0 <_txe_event_flags_set+0x48>
40009e98:	e3a00008 	mov	r0, #8
40009e9c:	eafffff8 	b	40009e84 <_txe_event_flags_set+0x2c>
40009ea0:	e1a02006 	mov	r2, r6
40009ea4:	e1a01005 	mov	r1, r5
40009ea8:	e1a00004 	mov	r0, r4
40009eac:	eb000943 	bl	4000c3c0 <_tx_event_flags_set>
40009eb0:	e1a07000 	mov	r7, r0
40009eb4:	e1a00007 	mov	r0, r7
40009eb8:	eafffff1 	b	40009e84 <_txe_event_flags_set+0x2c>
40009ebc:	4456444e 	.word	0x4456444e

40009ec0 <_txe_mutex_create>:
40009ec0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009ec4:	e1a04000 	mov	r4, r0
40009ec8:	e1a05001 	mov	r5, r1
40009ecc:	e1a06002 	mov	r6, r2
40009ed0:	e1a07003 	mov	r7, r3
40009ed4:	e3540000 	cmp	r4, #0
40009ed8:	0a000001 	beq	40009ee4 <_txe_mutex_create+0x24>
40009edc:	e3570038 	cmp	r7, #56	; 0x38
40009ee0:	0a000001 	beq	40009eec <_txe_mutex_create+0x2c>
40009ee4:	e3a0001c 	mov	r0, #28
40009ee8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009eec:	e10f0000 	mrs	r0, CPSR
40009ef0:	e58d0004 	str	r0, [sp, #4]
40009ef4:	e59d0004 	ldr	r0, [sp, #4]
40009ef8:	e3808080 	orr	r8, r0, #128	; 0x80
40009efc:	e121f008 	msr	CPSR_c, r8
40009f00:	e59f0114 	ldr	r0, [pc, #276]	; 4000a01c <_txe_mutex_create+0x15c>
40009f04:	e5900000 	ldr	r0, [r0]
40009f08:	e2800001 	add	r0, r0, #1
40009f0c:	e59f1108 	ldr	r1, [pc, #264]	; 4000a01c <_txe_mutex_create+0x15c>
40009f10:	e5810000 	str	r0, [r1]
40009f14:	e59d0004 	ldr	r0, [sp, #4]
40009f18:	e121f000 	msr	CPSR_c, r0
40009f1c:	e59f00fc 	ldr	r0, [pc, #252]	; 4000a020 <_txe_mutex_create+0x160>
40009f20:	e590a000 	ldr	sl, [r0]
40009f24:	e3a09000 	mov	r9, #0
40009f28:	ea000004 	b	40009f40 <_txe_mutex_create+0x80>
40009f2c:	e154000a 	cmp	r4, sl
40009f30:	1a000000 	bne	40009f38 <_txe_mutex_create+0x78>
40009f34:	ea000005 	b	40009f50 <_txe_mutex_create+0x90>
40009f38:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009f3c:	e2899001 	add	r9, r9, #1
40009f40:	e59f00dc 	ldr	r0, [pc, #220]	; 4000a024 <_txe_mutex_create+0x164>
40009f44:	e5900000 	ldr	r0, [r0]
40009f48:	e1590000 	cmp	r9, r0
40009f4c:	3afffff6 	bcc	40009f2c <_txe_mutex_create+0x6c>
40009f50:	e1a00000 	nop			; (mov r0, r0)
40009f54:	e10f0000 	mrs	r0, CPSR
40009f58:	e58d0004 	str	r0, [sp, #4]
40009f5c:	e59d0004 	ldr	r0, [sp, #4]
40009f60:	e3808080 	orr	r8, r0, #128	; 0x80
40009f64:	e121f008 	msr	CPSR_c, r8
40009f68:	e59f00ac 	ldr	r0, [pc, #172]	; 4000a01c <_txe_mutex_create+0x15c>
40009f6c:	e5900000 	ldr	r0, [r0]
40009f70:	e2400001 	sub	r0, r0, #1
40009f74:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a01c <_txe_mutex_create+0x15c>
40009f78:	e5810000 	str	r0, [r1]
40009f7c:	e59d0004 	ldr	r0, [sp, #4]
40009f80:	e121f000 	msr	CPSR_c, r0
40009f84:	eb0014a7 	bl	4000f228 <_tx_thread_system_preempt_check>
40009f88:	e154000a 	cmp	r4, sl
40009f8c:	1a000001 	bne	40009f98 <_txe_mutex_create+0xd8>
40009f90:	e3a0001c 	mov	r0, #28
40009f94:	eaffffd3 	b	40009ee8 <_txe_mutex_create+0x28>
40009f98:	e3560001 	cmp	r6, #1
40009f9c:	0a000003 	beq	40009fb0 <_txe_mutex_create+0xf0>
40009fa0:	e3560000 	cmp	r6, #0
40009fa4:	0a000001 	beq	40009fb0 <_txe_mutex_create+0xf0>
40009fa8:	e3a0001f 	mov	r0, #31
40009fac:	eaffffcd 	b	40009ee8 <_txe_mutex_create+0x28>
40009fb0:	e59f0070 	ldr	r0, [pc, #112]	; 4000a028 <_txe_mutex_create+0x168>
40009fb4:	e590b000 	ldr	fp, [r0]
40009fb8:	e35b0000 	cmp	fp, #0
40009fbc:	0a000008 	beq	40009fe4 <_txe_mutex_create+0x124>
40009fc0:	e59f0064 	ldr	r0, [pc, #100]	; 4000a02c <_txe_mutex_create+0x16c>
40009fc4:	e15b0000 	cmp	fp, r0
40009fc8:	0a000003 	beq	40009fdc <_txe_mutex_create+0x11c>
40009fcc:	e59f005c 	ldr	r0, [pc, #92]	; 4000a030 <_txe_mutex_create+0x170>
40009fd0:	e5900000 	ldr	r0, [r0]
40009fd4:	e3500000 	cmp	r0, #0
40009fd8:	0a000008 	beq	4000a000 <_txe_mutex_create+0x140>
40009fdc:	e3a00013 	mov	r0, #19
40009fe0:	eaffffc0 	b	40009ee8 <_txe_mutex_create+0x28>
40009fe4:	e59f0044 	ldr	r0, [pc, #68]	; 4000a030 <_txe_mutex_create+0x170>
40009fe8:	e5900000 	ldr	r0, [r0]
40009fec:	e59f1040 	ldr	r1, [pc, #64]	; 4000a034 <_txe_mutex_create+0x174>
40009ff0:	e1500001 	cmp	r0, r1
40009ff4:	2a000001 	bcs	4000a000 <_txe_mutex_create+0x140>
40009ff8:	e3a00013 	mov	r0, #19
40009ffc:	eaffffb9 	b	40009ee8 <_txe_mutex_create+0x28>
4000a000:	e1a02006 	mov	r2, r6
4000a004:	e1a01005 	mov	r1, r5
4000a008:	e1a00004 	mov	r0, r4
4000a00c:	eb000a8f 	bl	4000ca50 <_tx_mutex_create>
4000a010:	e58d0000 	str	r0, [sp]
4000a014:	e59d0000 	ldr	r0, [sp]
4000a018:	eaffffb2 	b	40009ee8 <_txe_mutex_create+0x28>
4000a01c:	40030e6c 	.word	0x40030e6c
4000a020:	40030edc 	.word	0x40030edc
4000a024:	40030ee0 	.word	0x40030ee0
4000a028:	40030e50 	.word	0x40030e50
4000a02c:	40032974 	.word	0x40032974
4000a030:	40030e48 	.word	0x40030e48
4000a034:	f0f0f0f0 	.word	0xf0f0f0f0

4000a038 <_txe_mutex_delete>:
4000a038:	e92d4070 	push	{r4, r5, r6, lr}
4000a03c:	e1a04000 	mov	r4, r0
4000a040:	e3540000 	cmp	r4, #0
4000a044:	0a000003 	beq	4000a058 <_txe_mutex_delete+0x20>
4000a048:	e5940000 	ldr	r0, [r4]
4000a04c:	e59f1054 	ldr	r1, [pc, #84]	; 4000a0a8 <_txe_mutex_delete+0x70>
4000a050:	e1500001 	cmp	r0, r1
4000a054:	0a000001 	beq	4000a060 <_txe_mutex_delete+0x28>
4000a058:	e3a0001c 	mov	r0, #28
4000a05c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a060:	e59f0044 	ldr	r0, [pc, #68]	; 4000a0ac <_txe_mutex_delete+0x74>
4000a064:	e5905000 	ldr	r5, [r0]
4000a068:	e3550000 	cmp	r5, #0
4000a06c:	0a000006 	beq	4000a08c <_txe_mutex_delete+0x54>
4000a070:	e59f0038 	ldr	r0, [pc, #56]	; 4000a0b0 <_txe_mutex_delete+0x78>
4000a074:	e5900000 	ldr	r0, [r0]
4000a078:	e3500000 	cmp	r0, #0
4000a07c:	1a000002 	bne	4000a08c <_txe_mutex_delete+0x54>
4000a080:	e59f002c 	ldr	r0, [pc, #44]	; 4000a0b4 <_txe_mutex_delete+0x7c>
4000a084:	e1550000 	cmp	r5, r0
4000a088:	1a000001 	bne	4000a094 <_txe_mutex_delete+0x5c>
4000a08c:	e3a00013 	mov	r0, #19
4000a090:	eafffff1 	b	4000a05c <_txe_mutex_delete+0x24>
4000a094:	e1a00004 	mov	r0, r4
4000a098:	eb000ae2 	bl	4000cc28 <_tx_mutex_delete>
4000a09c:	e1a06000 	mov	r6, r0
4000a0a0:	e1a00006 	mov	r0, r6
4000a0a4:	eaffffec 	b	4000a05c <_txe_mutex_delete+0x24>
4000a0a8:	4d555445 	.word	0x4d555445
4000a0ac:	40030e50 	.word	0x40030e50
4000a0b0:	40030e48 	.word	0x40030e48
4000a0b4:	40032974 	.word	0x40032974

4000a0b8 <_txe_mutex_get>:
4000a0b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a0bc:	e1a04000 	mov	r4, r0
4000a0c0:	e1a05001 	mov	r5, r1
4000a0c4:	e3540000 	cmp	r4, #0
4000a0c8:	0a000003 	beq	4000a0dc <_txe_mutex_get+0x24>
4000a0cc:	e5940000 	ldr	r0, [r4]
4000a0d0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a178 <_txe_mutex_get+0xc0>
4000a0d4:	e1500001 	cmp	r0, r1
4000a0d8:	0a000001 	beq	4000a0e4 <_txe_mutex_get+0x2c>
4000a0dc:	e3a0001c 	mov	r0, #28
4000a0e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a0e4:	e59f0090 	ldr	r0, [pc, #144]	; 4000a17c <_txe_mutex_get+0xc4>
4000a0e8:	e5906000 	ldr	r6, [r0]
4000a0ec:	e3550000 	cmp	r5, #0
4000a0f0:	0a000008 	beq	4000a118 <_txe_mutex_get+0x60>
4000a0f4:	e59f0084 	ldr	r0, [pc, #132]	; 4000a180 <_txe_mutex_get+0xc8>
4000a0f8:	e5900000 	ldr	r0, [r0]
4000a0fc:	e3500000 	cmp	r0, #0
4000a100:	1a000002 	bne	4000a110 <_txe_mutex_get+0x58>
4000a104:	e59f0078 	ldr	r0, [pc, #120]	; 4000a184 <_txe_mutex_get+0xcc>
4000a108:	e1560000 	cmp	r6, r0
4000a10c:	1a000001 	bne	4000a118 <_txe_mutex_get+0x60>
4000a110:	e3a00004 	mov	r0, #4
4000a114:	eafffff1 	b	4000a0e0 <_txe_mutex_get+0x28>
4000a118:	e3560000 	cmp	r6, #0
4000a11c:	0a000008 	beq	4000a144 <_txe_mutex_get+0x8c>
4000a120:	e59f005c 	ldr	r0, [pc, #92]	; 4000a184 <_txe_mutex_get+0xcc>
4000a124:	e1560000 	cmp	r6, r0
4000a128:	0a000003 	beq	4000a13c <_txe_mutex_get+0x84>
4000a12c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a180 <_txe_mutex_get+0xc8>
4000a130:	e5900000 	ldr	r0, [r0]
4000a134:	e3500000 	cmp	r0, #0
4000a138:	0a000008 	beq	4000a160 <_txe_mutex_get+0xa8>
4000a13c:	e3a00013 	mov	r0, #19
4000a140:	eaffffe6 	b	4000a0e0 <_txe_mutex_get+0x28>
4000a144:	e59f0034 	ldr	r0, [pc, #52]	; 4000a180 <_txe_mutex_get+0xc8>
4000a148:	e5900000 	ldr	r0, [r0]
4000a14c:	e59f1034 	ldr	r1, [pc, #52]	; 4000a188 <_txe_mutex_get+0xd0>
4000a150:	e1500001 	cmp	r0, r1
4000a154:	2a000001 	bcs	4000a160 <_txe_mutex_get+0xa8>
4000a158:	e3a00013 	mov	r0, #19
4000a15c:	eaffffdf 	b	4000a0e0 <_txe_mutex_get+0x28>
4000a160:	e1a01005 	mov	r1, r5
4000a164:	e1a00004 	mov	r0, r4
4000a168:	eb000b65 	bl	4000cf04 <_tx_mutex_get>
4000a16c:	e1a07000 	mov	r7, r0
4000a170:	e1a00007 	mov	r0, r7
4000a174:	eaffffd9 	b	4000a0e0 <_txe_mutex_get+0x28>
4000a178:	4d555445 	.word	0x4d555445
4000a17c:	40030e50 	.word	0x40030e50
4000a180:	40030e48 	.word	0x40030e48
4000a184:	40032974 	.word	0x40032974
4000a188:	f0f0f0f0 	.word	0xf0f0f0f0

4000a18c <_txe_mutex_put>:
4000a18c:	e92d4070 	push	{r4, r5, r6, lr}
4000a190:	e1a04000 	mov	r4, r0
4000a194:	e3540000 	cmp	r4, #0
4000a198:	0a000003 	beq	4000a1ac <_txe_mutex_put+0x20>
4000a19c:	e5940000 	ldr	r0, [r4]
4000a1a0:	e59f1070 	ldr	r1, [pc, #112]	; 4000a218 <_txe_mutex_put+0x8c>
4000a1a4:	e1500001 	cmp	r0, r1
4000a1a8:	0a000001 	beq	4000a1b4 <_txe_mutex_put+0x28>
4000a1ac:	e3a0001c 	mov	r0, #28
4000a1b0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a1b4:	e59f0060 	ldr	r0, [pc, #96]	; 4000a21c <_txe_mutex_put+0x90>
4000a1b8:	e5905000 	ldr	r5, [r0]
4000a1bc:	e3550000 	cmp	r5, #0
4000a1c0:	0a000008 	beq	4000a1e8 <_txe_mutex_put+0x5c>
4000a1c4:	e59f0054 	ldr	r0, [pc, #84]	; 4000a220 <_txe_mutex_put+0x94>
4000a1c8:	e1550000 	cmp	r5, r0
4000a1cc:	0a000003 	beq	4000a1e0 <_txe_mutex_put+0x54>
4000a1d0:	e59f004c 	ldr	r0, [pc, #76]	; 4000a224 <_txe_mutex_put+0x98>
4000a1d4:	e5900000 	ldr	r0, [r0]
4000a1d8:	e3500000 	cmp	r0, #0
4000a1dc:	0a000008 	beq	4000a204 <_txe_mutex_put+0x78>
4000a1e0:	e3a00013 	mov	r0, #19
4000a1e4:	eafffff1 	b	4000a1b0 <_txe_mutex_put+0x24>
4000a1e8:	e59f0034 	ldr	r0, [pc, #52]	; 4000a224 <_txe_mutex_put+0x98>
4000a1ec:	e5900000 	ldr	r0, [r0]
4000a1f0:	e59f1030 	ldr	r1, [pc, #48]	; 4000a228 <_txe_mutex_put+0x9c>
4000a1f4:	e1500001 	cmp	r0, r1
4000a1f8:	2a000001 	bcs	4000a204 <_txe_mutex_put+0x78>
4000a1fc:	e3a00013 	mov	r0, #19
4000a200:	eaffffea 	b	4000a1b0 <_txe_mutex_put+0x24>
4000a204:	e1a00004 	mov	r0, r4
4000a208:	eb000c1c 	bl	4000d280 <_tx_mutex_put>
4000a20c:	e1a06000 	mov	r6, r0
4000a210:	e1a00006 	mov	r0, r6
4000a214:	eaffffe5 	b	4000a1b0 <_txe_mutex_put+0x24>
4000a218:	4d555445 	.word	0x4d555445
4000a21c:	40030e50 	.word	0x40030e50
4000a220:	40032974 	.word	0x40032974
4000a224:	40030e48 	.word	0x40030e48
4000a228:	f0f0f0f0 	.word	0xf0f0f0f0

4000a22c <_txe_queue_create>:
4000a22c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a230:	e24dd014 	sub	sp, sp, #20
4000a234:	e1a04000 	mov	r4, r0
4000a238:	e1a05002 	mov	r5, r2
4000a23c:	e1a06003 	mov	r6, r3
4000a240:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a244:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a248:	e3540000 	cmp	r4, #0
4000a24c:	0a000001 	beq	4000a258 <_txe_queue_create+0x2c>
4000a250:	e358003c 	cmp	r8, #60	; 0x3c
4000a254:	0a000002 	beq	4000a264 <_txe_queue_create+0x38>
4000a258:	e3a00009 	mov	r0, #9
4000a25c:	e28dd024 	add	sp, sp, #36	; 0x24
4000a260:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a264:	e10f9000 	mrs	r9, CPSR
4000a268:	e389a080 	orr	sl, r9, #128	; 0x80
4000a26c:	e121f00a 	msr	CPSR_c, sl
4000a270:	e59f0150 	ldr	r0, [pc, #336]	; 4000a3c8 <_txe_queue_create+0x19c>
4000a274:	e5900000 	ldr	r0, [r0]
4000a278:	e2800001 	add	r0, r0, #1
4000a27c:	e59f1144 	ldr	r1, [pc, #324]	; 4000a3c8 <_txe_queue_create+0x19c>
4000a280:	e5810000 	str	r0, [r1]
4000a284:	e121f009 	msr	CPSR_c, r9
4000a288:	e59f013c 	ldr	r0, [pc, #316]	; 4000a3cc <_txe_queue_create+0x1a0>
4000a28c:	e5900000 	ldr	r0, [r0]
4000a290:	e58d0008 	str	r0, [sp, #8]
4000a294:	e3a00000 	mov	r0, #0
4000a298:	e58d000c 	str	r0, [sp, #12]
4000a29c:	ea000009 	b	4000a2c8 <_txe_queue_create+0x9c>
4000a2a0:	e59d0008 	ldr	r0, [sp, #8]
4000a2a4:	e1540000 	cmp	r4, r0
4000a2a8:	1a000000 	bne	4000a2b0 <_txe_queue_create+0x84>
4000a2ac:	ea00000a 	b	4000a2dc <_txe_queue_create+0xb0>
4000a2b0:	e59d0008 	ldr	r0, [sp, #8]
4000a2b4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a2b8:	e58d0008 	str	r0, [sp, #8]
4000a2bc:	e59d000c 	ldr	r0, [sp, #12]
4000a2c0:	e2800001 	add	r0, r0, #1
4000a2c4:	e58d000c 	str	r0, [sp, #12]
4000a2c8:	e59f1100 	ldr	r1, [pc, #256]	; 4000a3d0 <_txe_queue_create+0x1a4>
4000a2cc:	e59d000c 	ldr	r0, [sp, #12]
4000a2d0:	e5911000 	ldr	r1, [r1]
4000a2d4:	e1500001 	cmp	r0, r1
4000a2d8:	3afffff0 	bcc	4000a2a0 <_txe_queue_create+0x74>
4000a2dc:	e1a00000 	nop			; (mov r0, r0)
4000a2e0:	e10f9000 	mrs	r9, CPSR
4000a2e4:	e389a080 	orr	sl, r9, #128	; 0x80
4000a2e8:	e121f00a 	msr	CPSR_c, sl
4000a2ec:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a3c8 <_txe_queue_create+0x19c>
4000a2f0:	e5900000 	ldr	r0, [r0]
4000a2f4:	e2400001 	sub	r0, r0, #1
4000a2f8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a3c8 <_txe_queue_create+0x19c>
4000a2fc:	e5810000 	str	r0, [r1]
4000a300:	e121f009 	msr	CPSR_c, r9
4000a304:	eb0013c7 	bl	4000f228 <_tx_thread_system_preempt_check>
4000a308:	e59d0008 	ldr	r0, [sp, #8]
4000a30c:	e1540000 	cmp	r4, r0
4000a310:	1a000001 	bne	4000a31c <_txe_queue_create+0xf0>
4000a314:	e3a00009 	mov	r0, #9
4000a318:	eaffffcf 	b	4000a25c <_txe_queue_create+0x30>
4000a31c:	e3560000 	cmp	r6, #0
4000a320:	1a000001 	bne	4000a32c <_txe_queue_create+0x100>
4000a324:	e3a00003 	mov	r0, #3
4000a328:	eaffffcb 	b	4000a25c <_txe_queue_create+0x30>
4000a32c:	e3550000 	cmp	r5, #0
4000a330:	0a000001 	beq	4000a33c <_txe_queue_create+0x110>
4000a334:	e3550010 	cmp	r5, #16
4000a338:	9a000001 	bls	4000a344 <_txe_queue_create+0x118>
4000a33c:	e3a00005 	mov	r0, #5
4000a340:	eaffffc5 	b	4000a25c <_txe_queue_create+0x30>
4000a344:	e1550127 	cmp	r5, r7, lsr #2
4000a348:	9a000001 	bls	4000a354 <_txe_queue_create+0x128>
4000a34c:	e3a00005 	mov	r0, #5
4000a350:	eaffffc1 	b	4000a25c <_txe_queue_create+0x30>
4000a354:	e59f0078 	ldr	r0, [pc, #120]	; 4000a3d4 <_txe_queue_create+0x1a8>
4000a358:	e590b000 	ldr	fp, [r0]
4000a35c:	e35b0000 	cmp	fp, #0
4000a360:	0a000008 	beq	4000a388 <_txe_queue_create+0x15c>
4000a364:	e59f006c 	ldr	r0, [pc, #108]	; 4000a3d8 <_txe_queue_create+0x1ac>
4000a368:	e15b0000 	cmp	fp, r0
4000a36c:	0a000003 	beq	4000a380 <_txe_queue_create+0x154>
4000a370:	e59f0064 	ldr	r0, [pc, #100]	; 4000a3dc <_txe_queue_create+0x1b0>
4000a374:	e5900000 	ldr	r0, [r0]
4000a378:	e3500000 	cmp	r0, #0
4000a37c:	0a000008 	beq	4000a3a4 <_txe_queue_create+0x178>
4000a380:	e3a00013 	mov	r0, #19
4000a384:	eaffffb4 	b	4000a25c <_txe_queue_create+0x30>
4000a388:	e59f004c 	ldr	r0, [pc, #76]	; 4000a3dc <_txe_queue_create+0x1b0>
4000a38c:	e5900000 	ldr	r0, [r0]
4000a390:	e59f1048 	ldr	r1, [pc, #72]	; 4000a3e0 <_txe_queue_create+0x1b4>
4000a394:	e1500001 	cmp	r0, r1
4000a398:	2a000001 	bcs	4000a3a4 <_txe_queue_create+0x178>
4000a39c:	e3a00013 	mov	r0, #19
4000a3a0:	eaffffad 	b	4000a25c <_txe_queue_create+0x30>
4000a3a4:	e1a03006 	mov	r3, r6
4000a3a8:	e1a02005 	mov	r2, r5
4000a3ac:	e58d7000 	str	r7, [sp]
4000a3b0:	e1a00004 	mov	r0, r4
4000a3b4:	e59d1018 	ldr	r1, [sp, #24]
4000a3b8:	eb000ce5 	bl	4000d754 <_tx_queue_create>
4000a3bc:	e58d0010 	str	r0, [sp, #16]
4000a3c0:	e59d0010 	ldr	r0, [sp, #16]
4000a3c4:	eaffffa4 	b	4000a25c <_txe_queue_create+0x30>
4000a3c8:	40030e6c 	.word	0x40030e6c
4000a3cc:	40030ecc 	.word	0x40030ecc
4000a3d0:	40030ed0 	.word	0x40030ed0
4000a3d4:	40030e50 	.word	0x40030e50
4000a3d8:	40032974 	.word	0x40032974
4000a3dc:	40030e48 	.word	0x40030e48
4000a3e0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a3e4 <_txe_queue_front_send>:
4000a3e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a3e8:	e1a04000 	mov	r4, r0
4000a3ec:	e1a05001 	mov	r5, r1
4000a3f0:	e1a06002 	mov	r6, r2
4000a3f4:	e3540000 	cmp	r4, #0
4000a3f8:	0a000003 	beq	4000a40c <_txe_queue_front_send+0x28>
4000a3fc:	e5940000 	ldr	r0, [r4]
4000a400:	e59f106c 	ldr	r1, [pc, #108]	; 4000a474 <_txe_queue_front_send+0x90>
4000a404:	e1500001 	cmp	r0, r1
4000a408:	0a000001 	beq	4000a414 <_txe_queue_front_send+0x30>
4000a40c:	e3a00009 	mov	r0, #9
4000a410:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a414:	e3550000 	cmp	r5, #0
4000a418:	1a000001 	bne	4000a424 <_txe_queue_front_send+0x40>
4000a41c:	e3a00003 	mov	r0, #3
4000a420:	eafffffa 	b	4000a410 <_txe_queue_front_send+0x2c>
4000a424:	e3560000 	cmp	r6, #0
4000a428:	0a00000a 	beq	4000a458 <_txe_queue_front_send+0x74>
4000a42c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a478 <_txe_queue_front_send+0x94>
4000a430:	e5900000 	ldr	r0, [r0]
4000a434:	e3500000 	cmp	r0, #0
4000a438:	1a000004 	bne	4000a450 <_txe_queue_front_send+0x6c>
4000a43c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a47c <_txe_queue_front_send+0x98>
4000a440:	e5900000 	ldr	r0, [r0]
4000a444:	e59f1034 	ldr	r1, [pc, #52]	; 4000a480 <_txe_queue_front_send+0x9c>
4000a448:	e1500001 	cmp	r0, r1
4000a44c:	1a000001 	bne	4000a458 <_txe_queue_front_send+0x74>
4000a450:	e3a00004 	mov	r0, #4
4000a454:	eaffffed 	b	4000a410 <_txe_queue_front_send+0x2c>
4000a458:	e1a02006 	mov	r2, r6
4000a45c:	e1a01005 	mov	r1, r5
4000a460:	e1a00004 	mov	r0, r4
4000a464:	eb000d3d 	bl	4000d960 <_tx_queue_front_send>
4000a468:	e1a07000 	mov	r7, r0
4000a46c:	e1a00007 	mov	r0, r7
4000a470:	eaffffe6 	b	4000a410 <_txe_queue_front_send+0x2c>
4000a474:	51554555 	.word	0x51554555
4000a478:	40030e48 	.word	0x40030e48
4000a47c:	40030e50 	.word	0x40030e50
4000a480:	40032974 	.word	0x40032974

4000a484 <_txe_queue_receive>:
4000a484:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a488:	e1a04000 	mov	r4, r0
4000a48c:	e1a05001 	mov	r5, r1
4000a490:	e1a06002 	mov	r6, r2
4000a494:	e3540000 	cmp	r4, #0
4000a498:	0a000003 	beq	4000a4ac <_txe_queue_receive+0x28>
4000a49c:	e5940000 	ldr	r0, [r4]
4000a4a0:	e59f106c 	ldr	r1, [pc, #108]	; 4000a514 <_txe_queue_receive+0x90>
4000a4a4:	e1500001 	cmp	r0, r1
4000a4a8:	0a000001 	beq	4000a4b4 <_txe_queue_receive+0x30>
4000a4ac:	e3a00009 	mov	r0, #9
4000a4b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a4b4:	e3550000 	cmp	r5, #0
4000a4b8:	1a000001 	bne	4000a4c4 <_txe_queue_receive+0x40>
4000a4bc:	e3a00003 	mov	r0, #3
4000a4c0:	eafffffa 	b	4000a4b0 <_txe_queue_receive+0x2c>
4000a4c4:	e3560000 	cmp	r6, #0
4000a4c8:	0a00000a 	beq	4000a4f8 <_txe_queue_receive+0x74>
4000a4cc:	e59f0044 	ldr	r0, [pc, #68]	; 4000a518 <_txe_queue_receive+0x94>
4000a4d0:	e5900000 	ldr	r0, [r0]
4000a4d4:	e3500000 	cmp	r0, #0
4000a4d8:	1a000004 	bne	4000a4f0 <_txe_queue_receive+0x6c>
4000a4dc:	e59f0038 	ldr	r0, [pc, #56]	; 4000a51c <_txe_queue_receive+0x98>
4000a4e0:	e5900000 	ldr	r0, [r0]
4000a4e4:	e59f1034 	ldr	r1, [pc, #52]	; 4000a520 <_txe_queue_receive+0x9c>
4000a4e8:	e1500001 	cmp	r0, r1
4000a4ec:	1a000001 	bne	4000a4f8 <_txe_queue_receive+0x74>
4000a4f0:	e3a00004 	mov	r0, #4
4000a4f4:	eaffffed 	b	4000a4b0 <_txe_queue_receive+0x2c>
4000a4f8:	e1a02006 	mov	r2, r6
4000a4fc:	e1a01005 	mov	r1, r5
4000a500:	e1a00004 	mov	r0, r4
4000a504:	eb000e04 	bl	4000dd1c <_tx_queue_receive>
4000a508:	e1a07000 	mov	r7, r0
4000a50c:	e1a00007 	mov	r0, r7
4000a510:	eaffffe6 	b	4000a4b0 <_txe_queue_receive+0x2c>
4000a514:	51554555 	.word	0x51554555
4000a518:	40030e48 	.word	0x40030e48
4000a51c:	40030e50 	.word	0x40030e50
4000a520:	40032974 	.word	0x40032974

4000a524 <_txe_queue_send>:
4000a524:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a528:	e1a04000 	mov	r4, r0
4000a52c:	e1a05001 	mov	r5, r1
4000a530:	e1a06002 	mov	r6, r2
4000a534:	e3540000 	cmp	r4, #0
4000a538:	0a000003 	beq	4000a54c <_txe_queue_send+0x28>
4000a53c:	e5940000 	ldr	r0, [r4]
4000a540:	e59f106c 	ldr	r1, [pc, #108]	; 4000a5b4 <_txe_queue_send+0x90>
4000a544:	e1500001 	cmp	r0, r1
4000a548:	0a000001 	beq	4000a554 <_txe_queue_send+0x30>
4000a54c:	e3a00009 	mov	r0, #9
4000a550:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a554:	e3550000 	cmp	r5, #0
4000a558:	1a000001 	bne	4000a564 <_txe_queue_send+0x40>
4000a55c:	e3a00003 	mov	r0, #3
4000a560:	eafffffa 	b	4000a550 <_txe_queue_send+0x2c>
4000a564:	e3560000 	cmp	r6, #0
4000a568:	0a00000a 	beq	4000a598 <_txe_queue_send+0x74>
4000a56c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a5b8 <_txe_queue_send+0x94>
4000a570:	e5900000 	ldr	r0, [r0]
4000a574:	e3500000 	cmp	r0, #0
4000a578:	1a000004 	bne	4000a590 <_txe_queue_send+0x6c>
4000a57c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a5bc <_txe_queue_send+0x98>
4000a580:	e5900000 	ldr	r0, [r0]
4000a584:	e59f1034 	ldr	r1, [pc, #52]	; 4000a5c0 <_txe_queue_send+0x9c>
4000a588:	e1500001 	cmp	r0, r1
4000a58c:	1a000001 	bne	4000a598 <_txe_queue_send+0x74>
4000a590:	e3a00004 	mov	r0, #4
4000a594:	eaffffed 	b	4000a550 <_txe_queue_send+0x2c>
4000a598:	e1a02006 	mov	r2, r6
4000a59c:	e1a01005 	mov	r1, r5
4000a5a0:	e1a00004 	mov	r0, r4
4000a5a4:	eb000ef4 	bl	4000e17c <_tx_queue_send>
4000a5a8:	e1a07000 	mov	r7, r0
4000a5ac:	e1a00007 	mov	r0, r7
4000a5b0:	eaffffe6 	b	4000a550 <_txe_queue_send+0x2c>
4000a5b4:	51554555 	.word	0x51554555
4000a5b8:	40030e48 	.word	0x40030e48
4000a5bc:	40030e50 	.word	0x40030e50
4000a5c0:	40032974 	.word	0x40032974

4000a5c4 <_txe_thread_create>:
4000a5c4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a5c8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a5cc:	e1a04000 	mov	r4, r0
4000a5d0:	e1a05002 	mov	r5, r2
4000a5d4:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a5d8:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a5dc:	e3540000 	cmp	r4, #0
4000a5e0:	0a000002 	beq	4000a5f0 <_txe_thread_create+0x2c>
4000a5e4:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a5e8:	e35000a8 	cmp	r0, #168	; 0xa8
4000a5ec:	0a000002 	beq	4000a5fc <_txe_thread_create+0x38>
4000a5f0:	e3a0000e 	mov	r0, #14
4000a5f4:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a5f8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a5fc:	e10f0000 	mrs	r0, CPSR
4000a600:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a604:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a608:	e3800080 	orr	r0, r0, #128	; 0x80
4000a60c:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a610:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a614:	e121f000 	msr	CPSR_c, r0
4000a618:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a80c <_txe_thread_create+0x248>
4000a61c:	e5900000 	ldr	r0, [r0]
4000a620:	e2800001 	add	r0, r0, #1
4000a624:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a80c <_txe_thread_create+0x248>
4000a628:	e5810000 	str	r0, [r1]
4000a62c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a630:	e121f000 	msr	CPSR_c, r0
4000a634:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a810 <_txe_thread_create+0x24c>
4000a638:	e5900000 	ldr	r0, [r0]
4000a63c:	e58d0018 	str	r0, [sp, #24]
4000a640:	e2470001 	sub	r0, r7, #1
4000a644:	e080b006 	add	fp, r0, r6
4000a648:	e3a00000 	mov	r0, #0
4000a64c:	e58d001c 	str	r0, [sp, #28]
4000a650:	ea00001d 	b	4000a6cc <_txe_thread_create+0x108>
4000a654:	e59d0018 	ldr	r0, [sp, #24]
4000a658:	e1540000 	cmp	r4, r0
4000a65c:	1a000000 	bne	4000a664 <_txe_thread_create+0xa0>
4000a660:	ea00001e 	b	4000a6e0 <_txe_thread_create+0x11c>
4000a664:	e59d0018 	ldr	r0, [sp, #24]
4000a668:	e590000c 	ldr	r0, [r0, #12]
4000a66c:	e1500006 	cmp	r0, r6
4000a670:	8a000005 	bhi	4000a68c <_txe_thread_create+0xc8>
4000a674:	e59d0018 	ldr	r0, [sp, #24]
4000a678:	e5900010 	ldr	r0, [r0, #16]
4000a67c:	e1500006 	cmp	r0, r6
4000a680:	9a000001 	bls	4000a68c <_txe_thread_create+0xc8>
4000a684:	e3a06000 	mov	r6, #0
4000a688:	ea000014 	b	4000a6e0 <_txe_thread_create+0x11c>
4000a68c:	e59d0018 	ldr	r0, [sp, #24]
4000a690:	e590000c 	ldr	r0, [r0, #12]
4000a694:	e150000b 	cmp	r0, fp
4000a698:	8a000005 	bhi	4000a6b4 <_txe_thread_create+0xf0>
4000a69c:	e59d0018 	ldr	r0, [sp, #24]
4000a6a0:	e5900010 	ldr	r0, [r0, #16]
4000a6a4:	e150000b 	cmp	r0, fp
4000a6a8:	9a000001 	bls	4000a6b4 <_txe_thread_create+0xf0>
4000a6ac:	e3a06000 	mov	r6, #0
4000a6b0:	ea00000a 	b	4000a6e0 <_txe_thread_create+0x11c>
4000a6b4:	e59d0018 	ldr	r0, [sp, #24]
4000a6b8:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a6bc:	e58d0018 	str	r0, [sp, #24]
4000a6c0:	e59d001c 	ldr	r0, [sp, #28]
4000a6c4:	e2800001 	add	r0, r0, #1
4000a6c8:	e58d001c 	str	r0, [sp, #28]
4000a6cc:	e59f1140 	ldr	r1, [pc, #320]	; 4000a814 <_txe_thread_create+0x250>
4000a6d0:	e59d001c 	ldr	r0, [sp, #28]
4000a6d4:	e5911000 	ldr	r1, [r1]
4000a6d8:	e1500001 	cmp	r0, r1
4000a6dc:	3affffdc 	bcc	4000a654 <_txe_thread_create+0x90>
4000a6e0:	e1a00000 	nop			; (mov r0, r0)
4000a6e4:	e10f0000 	mrs	r0, CPSR
4000a6e8:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a6ec:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a6f0:	e3800080 	orr	r0, r0, #128	; 0x80
4000a6f4:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a6f8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a6fc:	e121f000 	msr	CPSR_c, r0
4000a700:	e59f0104 	ldr	r0, [pc, #260]	; 4000a80c <_txe_thread_create+0x248>
4000a704:	e5900000 	ldr	r0, [r0]
4000a708:	e2400001 	sub	r0, r0, #1
4000a70c:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a80c <_txe_thread_create+0x248>
4000a710:	e5810000 	str	r0, [r1]
4000a714:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a718:	e121f000 	msr	CPSR_c, r0
4000a71c:	eb0012c1 	bl	4000f228 <_tx_thread_system_preempt_check>
4000a720:	e59d0018 	ldr	r0, [sp, #24]
4000a724:	e1540000 	cmp	r4, r0
4000a728:	1a000001 	bne	4000a734 <_txe_thread_create+0x170>
4000a72c:	e3a0000e 	mov	r0, #14
4000a730:	eaffffaf 	b	4000a5f4 <_txe_thread_create+0x30>
4000a734:	e3560000 	cmp	r6, #0
4000a738:	0a000001 	beq	4000a744 <_txe_thread_create+0x180>
4000a73c:	e3550000 	cmp	r5, #0
4000a740:	1a000001 	bne	4000a74c <_txe_thread_create+0x188>
4000a744:	e3a00003 	mov	r0, #3
4000a748:	eaffffa9 	b	4000a5f4 <_txe_thread_create+0x30>
4000a74c:	e35700c8 	cmp	r7, #200	; 0xc8
4000a750:	2a000001 	bcs	4000a75c <_txe_thread_create+0x198>
4000a754:	e3a00005 	mov	r0, #5
4000a758:	eaffffa5 	b	4000a5f4 <_txe_thread_create+0x30>
4000a75c:	e3580020 	cmp	r8, #32
4000a760:	3a000001 	bcc	4000a76c <_txe_thread_create+0x1a8>
4000a764:	e3a0000f 	mov	r0, #15
4000a768:	eaffffa1 	b	4000a5f4 <_txe_thread_create+0x30>
4000a76c:	e1590008 	cmp	r9, r8
4000a770:	9a000001 	bls	4000a77c <_txe_thread_create+0x1b8>
4000a774:	e3a00018 	mov	r0, #24
4000a778:	eaffff9d 	b	4000a5f4 <_txe_thread_create+0x30>
4000a77c:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a780:	e3500001 	cmp	r0, #1
4000a784:	9a000001 	bls	4000a790 <_txe_thread_create+0x1cc>
4000a788:	e3a00010 	mov	r0, #16
4000a78c:	eaffff98 	b	4000a5f4 <_txe_thread_create+0x30>
4000a790:	e59f0080 	ldr	r0, [pc, #128]	; 4000a818 <_txe_thread_create+0x254>
4000a794:	e590a000 	ldr	sl, [r0]
4000a798:	e35a0000 	cmp	sl, #0
4000a79c:	0a000008 	beq	4000a7c4 <_txe_thread_create+0x200>
4000a7a0:	e59f0074 	ldr	r0, [pc, #116]	; 4000a81c <_txe_thread_create+0x258>
4000a7a4:	e15a0000 	cmp	sl, r0
4000a7a8:	0a000003 	beq	4000a7bc <_txe_thread_create+0x1f8>
4000a7ac:	e59f006c 	ldr	r0, [pc, #108]	; 4000a820 <_txe_thread_create+0x25c>
4000a7b0:	e5900000 	ldr	r0, [r0]
4000a7b4:	e3500000 	cmp	r0, #0
4000a7b8:	0a000008 	beq	4000a7e0 <_txe_thread_create+0x21c>
4000a7bc:	e3a00013 	mov	r0, #19
4000a7c0:	eaffff8b 	b	4000a5f4 <_txe_thread_create+0x30>
4000a7c4:	e59f0054 	ldr	r0, [pc, #84]	; 4000a820 <_txe_thread_create+0x25c>
4000a7c8:	e5900000 	ldr	r0, [r0]
4000a7cc:	e59f1050 	ldr	r1, [pc, #80]	; 4000a824 <_txe_thread_create+0x260>
4000a7d0:	e1500001 	cmp	r0, r1
4000a7d4:	2a000001 	bcs	4000a7e0 <_txe_thread_create+0x21c>
4000a7d8:	e3a00013 	mov	r0, #19
4000a7dc:	eaffff84 	b	4000a5f4 <_txe_thread_create+0x30>
4000a7e0:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a7e4:	e1cd21f0 	strd	r2, [sp, #16]
4000a7e8:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a7ec:	e1a02005 	mov	r2, r5
4000a7f0:	e1a00004 	mov	r0, r4
4000a7f4:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a7f8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a7fc:	eb000f49 	bl	4000e528 <_tx_thread_create>
4000a800:	e58d0020 	str	r0, [sp, #32]
4000a804:	e59d0020 	ldr	r0, [sp, #32]
4000a808:	eaffff79 	b	4000a5f4 <_txe_thread_create+0x30>
4000a80c:	40030e6c 	.word	0x40030e6c
4000a810:	40030e58 	.word	0x40030e58
4000a814:	40030e5c 	.word	0x40030e5c
4000a818:	40030e50 	.word	0x40030e50
4000a81c:	40032974 	.word	0x40032974
4000a820:	40030e48 	.word	0x40030e48
4000a824:	f0f0f0f0 	.word	0xf0f0f0f0

4000a828 <_txe_thread_info_get>:
4000a828:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a82c:	e24dd01c 	sub	sp, sp, #28
4000a830:	e1a04000 	mov	r4, r0
4000a834:	e1a05001 	mov	r5, r1
4000a838:	e1a06002 	mov	r6, r2
4000a83c:	e1a07003 	mov	r7, r3
4000a840:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a844:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a848:	e3540000 	cmp	r4, #0
4000a84c:	0a000003 	beq	4000a860 <_txe_thread_info_get+0x38>
4000a850:	e5940000 	ldr	r0, [r4]
4000a854:	e59f103c 	ldr	r1, [pc, #60]	; 4000a898 <_txe_thread_info_get+0x70>
4000a858:	e1500001 	cmp	r0, r1
4000a85c:	0a000002 	beq	4000a86c <_txe_thread_info_get+0x44>
4000a860:	e3a0000e 	mov	r0, #14
4000a864:	e28dd01c 	add	sp, sp, #28
4000a868:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a86c:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a870:	e58d3010 	str	r3, [sp, #16]
4000a874:	e1a03007 	mov	r3, r7
4000a878:	e1a02006 	mov	r2, r6
4000a87c:	e1a01005 	mov	r1, r5
4000a880:	e1a00004 	mov	r0, r4
4000a884:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a888:	eb000ff5 	bl	4000e864 <_tx_thread_info_get>
4000a88c:	e58d0018 	str	r0, [sp, #24]
4000a890:	e59d0018 	ldr	r0, [sp, #24]
4000a894:	eafffff2 	b	4000a864 <_txe_thread_info_get+0x3c>
4000a898:	54485244 	.word	0x54485244

4000a89c <_txe_thread_priority_change>:
4000a89c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a8a0:	e1a04000 	mov	r4, r0
4000a8a4:	e1a05001 	mov	r5, r1
4000a8a8:	e1a06002 	mov	r6, r2
4000a8ac:	e3540000 	cmp	r4, #0
4000a8b0:	0a000003 	beq	4000a8c4 <_txe_thread_priority_change+0x28>
4000a8b4:	e5940000 	ldr	r0, [r4]
4000a8b8:	e59f1070 	ldr	r1, [pc, #112]	; 4000a930 <_txe_thread_priority_change+0x94>
4000a8bc:	e1500001 	cmp	r0, r1
4000a8c0:	0a000001 	beq	4000a8cc <_txe_thread_priority_change+0x30>
4000a8c4:	e3a0000e 	mov	r0, #14
4000a8c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a8cc:	e3560000 	cmp	r6, #0
4000a8d0:	1a000001 	bne	4000a8dc <_txe_thread_priority_change+0x40>
4000a8d4:	e3a00003 	mov	r0, #3
4000a8d8:	eafffffa 	b	4000a8c8 <_txe_thread_priority_change+0x2c>
4000a8dc:	e3550020 	cmp	r5, #32
4000a8e0:	3a000001 	bcc	4000a8ec <_txe_thread_priority_change+0x50>
4000a8e4:	e3a0000f 	mov	r0, #15
4000a8e8:	eafffff6 	b	4000a8c8 <_txe_thread_priority_change+0x2c>
4000a8ec:	e59f0040 	ldr	r0, [pc, #64]	; 4000a934 <_txe_thread_priority_change+0x98>
4000a8f0:	e5900000 	ldr	r0, [r0]
4000a8f4:	e3500000 	cmp	r0, #0
4000a8f8:	0a000003 	beq	4000a90c <_txe_thread_priority_change+0x70>
4000a8fc:	e59f0034 	ldr	r0, [pc, #52]	; 4000a938 <_txe_thread_priority_change+0x9c>
4000a900:	e5900000 	ldr	r0, [r0]
4000a904:	e3500000 	cmp	r0, #0
4000a908:	0a000001 	beq	4000a914 <_txe_thread_priority_change+0x78>
4000a90c:	e3a00013 	mov	r0, #19
4000a910:	eaffffec 	b	4000a8c8 <_txe_thread_priority_change+0x2c>
4000a914:	e1a02006 	mov	r2, r6
4000a918:	e1a01005 	mov	r1, r5
4000a91c:	e1a00004 	mov	r0, r4
4000a920:	eb001039 	bl	4000ea0c <_tx_thread_priority_change>
4000a924:	e1a07000 	mov	r7, r0
4000a928:	e1a00007 	mov	r0, r7
4000a92c:	eaffffe5 	b	4000a8c8 <_txe_thread_priority_change+0x2c>
4000a930:	54485244 	.word	0x54485244
4000a934:	40030e50 	.word	0x40030e50
4000a938:	40030e48 	.word	0x40030e48

4000a93c <_txe_thread_relinquish>:
4000a93c:	e92d4010 	push	{r4, lr}
4000a940:	e59f0020 	ldr	r0, [pc, #32]	; 4000a968 <_txe_thread_relinquish+0x2c>
4000a944:	e5900000 	ldr	r0, [r0]
4000a948:	e3500000 	cmp	r0, #0
4000a94c:	0a000004 	beq	4000a964 <_txe_thread_relinquish+0x28>
4000a950:	e59f0014 	ldr	r0, [pc, #20]	; 4000a96c <_txe_thread_relinquish+0x30>
4000a954:	e5900000 	ldr	r0, [r0]
4000a958:	e3500000 	cmp	r0, #0
4000a95c:	1a000000 	bne	4000a964 <_txe_thread_relinquish+0x28>
4000a960:	eb001091 	bl	4000ebac <_tx_thread_relinquish>
4000a964:	e8bd8010 	pop	{r4, pc}
4000a968:	40030e50 	.word	0x40030e50
4000a96c:	40030e48 	.word	0x40030e48

4000a970 <_txe_thread_resume>:
4000a970:	e92d4070 	push	{r4, r5, r6, lr}
4000a974:	e1a04000 	mov	r4, r0
4000a978:	e3540000 	cmp	r4, #0
4000a97c:	0a000003 	beq	4000a990 <_txe_thread_resume+0x20>
4000a980:	e5940000 	ldr	r0, [r4]
4000a984:	e59f1020 	ldr	r1, [pc, #32]	; 4000a9ac <_txe_thread_resume+0x3c>
4000a988:	e1500001 	cmp	r0, r1
4000a98c:	0a000001 	beq	4000a998 <_txe_thread_resume+0x28>
4000a990:	e3a0000e 	mov	r0, #14
4000a994:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a998:	e1a00004 	mov	r0, r4
4000a99c:	eb00113e 	bl	4000ee9c <_tx_thread_resume>
4000a9a0:	e1a05000 	mov	r5, r0
4000a9a4:	e1a00005 	mov	r0, r5
4000a9a8:	eafffff9 	b	4000a994 <_txe_thread_resume+0x24>
4000a9ac:	54485244 	.word	0x54485244

4000a9b0 <_txe_timer_activate>:
4000a9b0:	e92d4070 	push	{r4, r5, r6, lr}
4000a9b4:	e1a04000 	mov	r4, r0
4000a9b8:	e3540000 	cmp	r4, #0
4000a9bc:	0a000003 	beq	4000a9d0 <_txe_timer_activate+0x20>
4000a9c0:	e5940000 	ldr	r0, [r4]
4000a9c4:	e59f1020 	ldr	r1, [pc, #32]	; 4000a9ec <_txe_timer_activate+0x3c>
4000a9c8:	e1500001 	cmp	r0, r1
4000a9cc:	0a000001 	beq	4000a9d8 <_txe_timer_activate+0x28>
4000a9d0:	e3a00015 	mov	r0, #21
4000a9d4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a9d8:	e1a00004 	mov	r0, r4
4000a9dc:	eb0013a4 	bl	4000f874 <_tx_timer_activate>
4000a9e0:	e1a05000 	mov	r5, r0
4000a9e4:	e1a00005 	mov	r0, r5
4000a9e8:	eafffff9 	b	4000a9d4 <_txe_timer_activate+0x24>
4000a9ec:	4154494d 	.word	0x4154494d

4000a9f0 <_txe_timer_change>:
4000a9f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a9f4:	e1a04000 	mov	r4, r0
4000a9f8:	e1a05001 	mov	r5, r1
4000a9fc:	e1a06002 	mov	r6, r2
4000aa00:	e3540000 	cmp	r4, #0
4000aa04:	0a000003 	beq	4000aa18 <_txe_timer_change+0x28>
4000aa08:	e5940000 	ldr	r0, [r4]
4000aa0c:	e59f1058 	ldr	r1, [pc, #88]	; 4000aa6c <_txe_timer_change+0x7c>
4000aa10:	e1500001 	cmp	r0, r1
4000aa14:	0a000001 	beq	4000aa20 <_txe_timer_change+0x30>
4000aa18:	e3a00015 	mov	r0, #21
4000aa1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000aa20:	e3550000 	cmp	r5, #0
4000aa24:	1a000001 	bne	4000aa30 <_txe_timer_change+0x40>
4000aa28:	e3a00016 	mov	r0, #22
4000aa2c:	eafffffa 	b	4000aa1c <_txe_timer_change+0x2c>
4000aa30:	e59f0038 	ldr	r0, [pc, #56]	; 4000aa70 <_txe_timer_change+0x80>
4000aa34:	e5900000 	ldr	r0, [r0]
4000aa38:	e3c0000f 	bic	r0, r0, #15
4000aa3c:	e59f1030 	ldr	r1, [pc, #48]	; 4000aa74 <_txe_timer_change+0x84>
4000aa40:	e1500001 	cmp	r0, r1
4000aa44:	1a000001 	bne	4000aa50 <_txe_timer_change+0x60>
4000aa48:	e3a00013 	mov	r0, #19
4000aa4c:	eafffff2 	b	4000aa1c <_txe_timer_change+0x2c>
4000aa50:	e1a02006 	mov	r2, r6
4000aa54:	e1a01005 	mov	r1, r5
4000aa58:	e1a00004 	mov	r0, r4
4000aa5c:	eb0013d4 	bl	4000f9b4 <_tx_timer_change>
4000aa60:	e1a07000 	mov	r7, r0
4000aa64:	e1a00007 	mov	r0, r7
4000aa68:	eaffffeb 	b	4000aa1c <_txe_timer_change+0x2c>
4000aa6c:	4154494d 	.word	0x4154494d
4000aa70:	40030e48 	.word	0x40030e48
4000aa74:	f0f0f0f0 	.word	0xf0f0f0f0

4000aa78 <_txe_timer_create>:
4000aa78:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aa7c:	e24dd01c 	sub	sp, sp, #28
4000aa80:	e1a04000 	mov	r4, r0
4000aa84:	e1a05001 	mov	r5, r1
4000aa88:	e1a06002 	mov	r6, r2
4000aa8c:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000aa90:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000aa94:	e3540000 	cmp	r4, #0
4000aa98:	0a000001 	beq	4000aaa4 <_txe_timer_create+0x2c>
4000aa9c:	e358002c 	cmp	r8, #44	; 0x2c
4000aaa0:	0a000002 	beq	4000aab0 <_txe_timer_create+0x38>
4000aaa4:	e3a00015 	mov	r0, #21
4000aaa8:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000aaac:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000aab0:	e10f9000 	mrs	r9, CPSR
4000aab4:	e389a080 	orr	sl, r9, #128	; 0x80
4000aab8:	e121f00a 	msr	CPSR_c, sl
4000aabc:	e59f0160 	ldr	r0, [pc, #352]	; 4000ac24 <_txe_timer_create+0x1ac>
4000aac0:	e5900000 	ldr	r0, [r0]
4000aac4:	e2800001 	add	r0, r0, #1
4000aac8:	e59f1154 	ldr	r1, [pc, #340]	; 4000ac24 <_txe_timer_create+0x1ac>
4000aacc:	e5810000 	str	r0, [r1]
4000aad0:	e121f009 	msr	CPSR_c, r9
4000aad4:	e59f014c 	ldr	r0, [pc, #332]	; 4000ac28 <_txe_timer_create+0x1b0>
4000aad8:	e5900000 	ldr	r0, [r0]
4000aadc:	e58d0014 	str	r0, [sp, #20]
4000aae0:	e3a00000 	mov	r0, #0
4000aae4:	e58d0018 	str	r0, [sp, #24]
4000aae8:	ea000009 	b	4000ab14 <_txe_timer_create+0x9c>
4000aaec:	e59d0014 	ldr	r0, [sp, #20]
4000aaf0:	e1540000 	cmp	r4, r0
4000aaf4:	1a000000 	bne	4000aafc <_txe_timer_create+0x84>
4000aaf8:	ea00000a 	b	4000ab28 <_txe_timer_create+0xb0>
4000aafc:	e59d0014 	ldr	r0, [sp, #20]
4000ab00:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000ab04:	e58d0014 	str	r0, [sp, #20]
4000ab08:	e59d0018 	ldr	r0, [sp, #24]
4000ab0c:	e2800001 	add	r0, r0, #1
4000ab10:	e58d0018 	str	r0, [sp, #24]
4000ab14:	e59f1110 	ldr	r1, [pc, #272]	; 4000ac2c <_txe_timer_create+0x1b4>
4000ab18:	e59d0018 	ldr	r0, [sp, #24]
4000ab1c:	e5911000 	ldr	r1, [r1]
4000ab20:	e1500001 	cmp	r0, r1
4000ab24:	3afffff0 	bcc	4000aaec <_txe_timer_create+0x74>
4000ab28:	e1a00000 	nop			; (mov r0, r0)
4000ab2c:	e10f9000 	mrs	r9, CPSR
4000ab30:	e389a080 	orr	sl, r9, #128	; 0x80
4000ab34:	e121f00a 	msr	CPSR_c, sl
4000ab38:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ac24 <_txe_timer_create+0x1ac>
4000ab3c:	e5900000 	ldr	r0, [r0]
4000ab40:	e2400001 	sub	r0, r0, #1
4000ab44:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ac24 <_txe_timer_create+0x1ac>
4000ab48:	e5810000 	str	r0, [r1]
4000ab4c:	e121f009 	msr	CPSR_c, r9
4000ab50:	eb0011b4 	bl	4000f228 <_tx_thread_system_preempt_check>
4000ab54:	e59d0014 	ldr	r0, [sp, #20]
4000ab58:	e1540000 	cmp	r4, r0
4000ab5c:	1a000001 	bne	4000ab68 <_txe_timer_create+0xf0>
4000ab60:	e3a00015 	mov	r0, #21
4000ab64:	eaffffcf 	b	4000aaa8 <_txe_timer_create+0x30>
4000ab68:	e3570000 	cmp	r7, #0
4000ab6c:	1a000001 	bne	4000ab78 <_txe_timer_create+0x100>
4000ab70:	e3a00016 	mov	r0, #22
4000ab74:	eaffffcb 	b	4000aaa8 <_txe_timer_create+0x30>
4000ab78:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ab7c:	e3500001 	cmp	r0, #1
4000ab80:	0a000004 	beq	4000ab98 <_txe_timer_create+0x120>
4000ab84:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ab88:	e3500000 	cmp	r0, #0
4000ab8c:	0a000001 	beq	4000ab98 <_txe_timer_create+0x120>
4000ab90:	e3a00017 	mov	r0, #23
4000ab94:	eaffffc3 	b	4000aaa8 <_txe_timer_create+0x30>
4000ab98:	e59f0090 	ldr	r0, [pc, #144]	; 4000ac30 <_txe_timer_create+0x1b8>
4000ab9c:	e5900000 	ldr	r0, [r0]
4000aba0:	e58d0010 	str	r0, [sp, #16]
4000aba4:	e59d0010 	ldr	r0, [sp, #16]
4000aba8:	e3500000 	cmp	r0, #0
4000abac:	0a000009 	beq	4000abd8 <_txe_timer_create+0x160>
4000abb0:	e59f107c 	ldr	r1, [pc, #124]	; 4000ac34 <_txe_timer_create+0x1bc>
4000abb4:	e59d0010 	ldr	r0, [sp, #16]
4000abb8:	e1500001 	cmp	r0, r1
4000abbc:	0a000003 	beq	4000abd0 <_txe_timer_create+0x158>
4000abc0:	e59f0070 	ldr	r0, [pc, #112]	; 4000ac38 <_txe_timer_create+0x1c0>
4000abc4:	e5900000 	ldr	r0, [r0]
4000abc8:	e3500000 	cmp	r0, #0
4000abcc:	0a000008 	beq	4000abf4 <_txe_timer_create+0x17c>
4000abd0:	e3a00013 	mov	r0, #19
4000abd4:	eaffffb3 	b	4000aaa8 <_txe_timer_create+0x30>
4000abd8:	e59f0058 	ldr	r0, [pc, #88]	; 4000ac38 <_txe_timer_create+0x1c0>
4000abdc:	e5900000 	ldr	r0, [r0]
4000abe0:	e59f1054 	ldr	r1, [pc, #84]	; 4000ac3c <_txe_timer_create+0x1c4>
4000abe4:	e1500001 	cmp	r0, r1
4000abe8:	2a000001 	bcs	4000abf4 <_txe_timer_create+0x17c>
4000abec:	e3a00013 	mov	r0, #19
4000abf0:	eaffffac 	b	4000aaa8 <_txe_timer_create+0x30>
4000abf4:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000abf8:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000abfc:	e98d000c 	stmib	sp, {r2, r3}
4000ac00:	e58d7000 	str	r7, [sp]
4000ac04:	e1a02006 	mov	r2, r6
4000ac08:	e1a01005 	mov	r1, r5
4000ac0c:	e1a00004 	mov	r0, r4
4000ac10:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ac14:	eb0013b1 	bl	4000fae0 <_tx_timer_create>
4000ac18:	e1a0b000 	mov	fp, r0
4000ac1c:	e1a0000b 	mov	r0, fp
4000ac20:	eaffffa0 	b	4000aaa8 <_txe_timer_create+0x30>
4000ac24:	40030e6c 	.word	0x40030e6c
4000ac28:	40030e94 	.word	0x40030e94
4000ac2c:	40030e98 	.word	0x40030e98
4000ac30:	40030e50 	.word	0x40030e50
4000ac34:	40032974 	.word	0x40032974
4000ac38:	40030e48 	.word	0x40030e48
4000ac3c:	f0f0f0f0 	.word	0xf0f0f0f0

4000ac40 <_txe_timer_deactivate>:
4000ac40:	e92d4070 	push	{r4, r5, r6, lr}
4000ac44:	e1a04000 	mov	r4, r0
4000ac48:	e3540000 	cmp	r4, #0
4000ac4c:	0a000003 	beq	4000ac60 <_txe_timer_deactivate+0x20>
4000ac50:	e5940000 	ldr	r0, [r4]
4000ac54:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac7c <_txe_timer_deactivate+0x3c>
4000ac58:	e1500001 	cmp	r0, r1
4000ac5c:	0a000001 	beq	4000ac68 <_txe_timer_deactivate+0x28>
4000ac60:	e3a00015 	mov	r0, #21
4000ac64:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ac68:	e1a00004 	mov	r0, r4
4000ac6c:	eb00141a 	bl	4000fcdc <_tx_timer_deactivate>
4000ac70:	e1a05000 	mov	r5, r0
4000ac74:	e1a00005 	mov	r0, r5
4000ac78:	eafffff9 	b	4000ac64 <_txe_timer_deactivate+0x24>
4000ac7c:	4154494d 	.word	0x4154494d

4000ac80 <_tx_thread_system_return>:
4000ac80:	e3a00000 	mov	r0, #0
4000ac84:	e10f1000 	mrs	r1, CPSR
4000ac88:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac8c:	e3812080 	orr	r2, r1, #128	; 0x80
4000ac90:	e12ff002 	msr	CPSR_fsxc, r2
4000ac94:	e59f302c 	ldr	r3, [pc, #44]	; 4000acc8 <_tx_thread_system_return+0x48>
4000ac98:	e5930000 	ldr	r0, [r3]
4000ac9c:	e59f2028 	ldr	r2, [pc, #40]	; 4000accc <_tx_thread_system_return+0x4c>
4000aca0:	e5921000 	ldr	r1, [r2]
4000aca4:	e580d008 	str	sp, [r0, #8]
4000aca8:	e3a04000 	mov	r4, #0
4000acac:	e3510000 	cmp	r1, #0
4000acb0:	0a000002 	beq	4000acc0 <_tx_thread_system_return+0x40>
4000acb4:	e590101c 	ldr	r1, [r0, #28]
4000acb8:	e5824000 	str	r4, [r2]
4000acbc:	e5801018 	str	r1, [r0, #24]
4000acc0:	e5834000 	str	r4, [r3]
4000acc4:	ea000001 	b	4000acd0 <_tx_thread_schedule>
4000acc8:	40030e50 	.word	0x40030e50
4000accc:	40030e7c 	.word	0x40030e7c

4000acd0 <_tx_thread_schedule>:
4000acd0:	e10f2000 	mrs	r2, CPSR
4000acd4:	e3c20080 	bic	r0, r2, #128	; 0x80
4000acd8:	e12ff000 	msr	CPSR_fsxc, r0
4000acdc:	e59f104c 	ldr	r1, [pc, #76]	; 4000ad30 <_tx_thread_schedule+0x60>
4000ace0:	e5910000 	ldr	r0, [r1]
4000ace4:	e3500000 	cmp	r0, #0
4000ace8:	0afffffc 	beq	4000ace0 <_tx_thread_schedule+0x10>
4000acec:	e12ff002 	msr	CPSR_fsxc, r2
4000acf0:	e59f103c 	ldr	r1, [pc, #60]	; 4000ad34 <_tx_thread_schedule+0x64>
4000acf4:	e5810000 	str	r0, [r1]
4000acf8:	e5902004 	ldr	r2, [r0, #4]
4000acfc:	e5903018 	ldr	r3, [r0, #24]
4000ad00:	e2822001 	add	r2, r2, #1
4000ad04:	e5802004 	str	r2, [r0, #4]
4000ad08:	e59f2028 	ldr	r2, [pc, #40]	; 4000ad38 <_tx_thread_schedule+0x68>
4000ad0c:	e590d008 	ldr	sp, [r0, #8]
4000ad10:	e5823000 	str	r3, [r2]
4000ad14:	e8bd0003 	pop	{r0, r1}
4000ad18:	e3500000 	cmp	r0, #0
4000ad1c:	116ff001 	msrne	SPSR_fsxc, r1
4000ad20:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000ad24:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ad28:	e12ff001 	msr	CPSR_fsxc, r1
4000ad2c:	e12fff1e 	bx	lr
4000ad30:	40030e54 	.word	0x40030e54
4000ad34:	40030e50 	.word	0x40030e50
4000ad38:	40030e7c 	.word	0x40030e7c

4000ad3c <_tx_thread_vectored_context_save>:
4000ad3c:	e59f3044 	ldr	r3, [pc, #68]	; 4000ad88 <_tx_thread_vectored_context_save+0x4c>
4000ad40:	e5932000 	ldr	r2, [r3]
4000ad44:	e3520000 	cmp	r2, #0
4000ad48:	0a000003 	beq	4000ad5c <_tx_thread_vectored_context_save+0x20>
4000ad4c:	e2822001 	add	r2, r2, #1
4000ad50:	e5832000 	str	r2, [r3]
4000ad54:	e3a0a000 	mov	sl, #0
4000ad58:	e12fff1e 	bx	lr
4000ad5c:	e2822001 	add	r2, r2, #1
4000ad60:	e5832000 	str	r2, [r3]
4000ad64:	e59f1020 	ldr	r1, [pc, #32]	; 4000ad8c <_tx_thread_vectored_context_save+0x50>
4000ad68:	e5910000 	ldr	r0, [r1]
4000ad6c:	e3500000 	cmp	r0, #0
4000ad70:	0a000001 	beq	4000ad7c <_tx_thread_vectored_context_save+0x40>
4000ad74:	e3a0a000 	mov	sl, #0
4000ad78:	e12fff1e 	bx	lr
4000ad7c:	e3a0a000 	mov	sl, #0
4000ad80:	e28dd020 	add	sp, sp, #32
4000ad84:	e12fff1e 	bx	lr
4000ad88:	40030e48 	.word	0x40030e48
4000ad8c:	40030e50 	.word	0x40030e50

4000ad90 <_tx_timer_interrupt>:
4000ad90:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ae64 <_tx_timer_interrupt+0xd4>
4000ad94:	e5910000 	ldr	r0, [r1]
4000ad98:	e2800001 	add	r0, r0, #1
4000ad9c:	e5810000 	str	r0, [r1]
4000ada0:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ae68 <_tx_timer_interrupt+0xd8>
4000ada4:	e5932000 	ldr	r2, [r3]
4000ada8:	e3520000 	cmp	r2, #0
4000adac:	0a000006 	beq	4000adcc <_tx_timer_interrupt+0x3c>
4000adb0:	e2422001 	sub	r2, r2, #1
4000adb4:	e5832000 	str	r2, [r3]
4000adb8:	e3520000 	cmp	r2, #0
4000adbc:	1a000002 	bne	4000adcc <_tx_timer_interrupt+0x3c>
4000adc0:	e59f30a4 	ldr	r3, [pc, #164]	; 4000ae6c <_tx_timer_interrupt+0xdc>
4000adc4:	e3a00001 	mov	r0, #1
4000adc8:	e5830000 	str	r0, [r3]
4000adcc:	e59f109c 	ldr	r1, [pc, #156]	; 4000ae70 <_tx_timer_interrupt+0xe0>
4000add0:	e5910000 	ldr	r0, [r1]
4000add4:	e5902000 	ldr	r2, [r0]
4000add8:	e3520000 	cmp	r2, #0
4000addc:	0a000003 	beq	4000adf0 <_tx_timer_interrupt+0x60>
4000ade0:	e59f308c 	ldr	r3, [pc, #140]	; 4000ae74 <_tx_timer_interrupt+0xe4>
4000ade4:	e3a02001 	mov	r2, #1
4000ade8:	e5832000 	str	r2, [r3]
4000adec:	ea000007 	b	4000ae10 <_tx_timer_interrupt+0x80>
4000adf0:	e2800004 	add	r0, r0, #4
4000adf4:	e59f307c 	ldr	r3, [pc, #124]	; 4000ae78 <_tx_timer_interrupt+0xe8>
4000adf8:	e5932000 	ldr	r2, [r3]
4000adfc:	e1500002 	cmp	r0, r2
4000ae00:	1a000001 	bne	4000ae0c <_tx_timer_interrupt+0x7c>
4000ae04:	e59f3070 	ldr	r3, [pc, #112]	; 4000ae7c <_tx_timer_interrupt+0xec>
4000ae08:	e5930000 	ldr	r0, [r3]
4000ae0c:	e5810000 	str	r0, [r1]
4000ae10:	e59f3054 	ldr	r3, [pc, #84]	; 4000ae6c <_tx_timer_interrupt+0xdc>
4000ae14:	e5932000 	ldr	r2, [r3]
4000ae18:	e3520000 	cmp	r2, #0
4000ae1c:	1a000003 	bne	4000ae30 <_tx_timer_interrupt+0xa0>
4000ae20:	e59f104c 	ldr	r1, [pc, #76]	; 4000ae74 <_tx_timer_interrupt+0xe4>
4000ae24:	e5910000 	ldr	r0, [r1]
4000ae28:	e3500000 	cmp	r0, #0
4000ae2c:	0a00000b 	beq	4000ae60 <_tx_timer_interrupt+0xd0>
4000ae30:	e92d4001 	push	{r0, lr}
4000ae34:	e59f1038 	ldr	r1, [pc, #56]	; 4000ae74 <_tx_timer_interrupt+0xe4>
4000ae38:	e5910000 	ldr	r0, [r1]
4000ae3c:	e3500000 	cmp	r0, #0
4000ae40:	0a000000 	beq	4000ae48 <_tx_timer_interrupt+0xb8>
4000ae44:	eb001441 	bl	4000ff50 <_tx_timer_expiration_process>
4000ae48:	e59f301c 	ldr	r3, [pc, #28]	; 4000ae6c <_tx_timer_interrupt+0xdc>
4000ae4c:	e5932000 	ldr	r2, [r3]
4000ae50:	e3520000 	cmp	r2, #0
4000ae54:	0a000000 	beq	4000ae5c <_tx_timer_interrupt+0xcc>
4000ae58:	eb001210 	bl	4000f6a0 <_tx_thread_time_slice>
4000ae5c:	e8bd4001 	pop	{r0, lr}
4000ae60:	e12fff1e 	bx	lr
4000ae64:	40030e78 	.word	0x40030e78
4000ae68:	40030e7c 	.word	0x40030e7c
4000ae6c:	40030e80 	.word	0x40030e80
4000ae70:	40030e8c 	.word	0x40030e8c
4000ae74:	40030e90 	.word	0x40030e90
4000ae78:	40030e88 	.word	0x40030e88
4000ae7c:	40030e84 	.word	0x40030e84

4000ae80 <_tx_thread_context_restore>:
4000ae80:	e10f3000 	mrs	r3, CPSR
4000ae84:	e3830080 	orr	r0, r3, #128	; 0x80
4000ae88:	e12ff000 	msr	CPSR_fsxc, r0
4000ae8c:	e59f30f0 	ldr	r3, [pc, #240]	; 4000af84 <_tx_thread_context_restore+0x104>
4000ae90:	e5932000 	ldr	r2, [r3]
4000ae94:	e2422001 	sub	r2, r2, #1
4000ae98:	e5832000 	str	r2, [r3]
4000ae9c:	e3520000 	cmp	r2, #0
4000aea0:	0a000003 	beq	4000aeb4 <_tx_thread_context_restore+0x34>
4000aea4:	e8bd5401 	pop	{r0, sl, ip, lr}
4000aea8:	e16ff000 	msr	SPSR_fsxc, r0
4000aeac:	e8bd000f 	pop	{r0, r1, r2, r3}
4000aeb0:	e1b0f00e 	movs	pc, lr
4000aeb4:	e59f10cc 	ldr	r1, [pc, #204]	; 4000af88 <_tx_thread_context_restore+0x108>
4000aeb8:	e5910000 	ldr	r0, [r1]
4000aebc:	e3500000 	cmp	r0, #0
4000aec0:	0a00002a 	beq	4000af70 <_tx_thread_context_restore+0xf0>
4000aec4:	e59f30c0 	ldr	r3, [pc, #192]	; 4000af8c <_tx_thread_context_restore+0x10c>
4000aec8:	e5932000 	ldr	r2, [r3]
4000aecc:	e3520000 	cmp	r2, #0
4000aed0:	1a000003 	bne	4000aee4 <_tx_thread_context_restore+0x64>
4000aed4:	e59f30b4 	ldr	r3, [pc, #180]	; 4000af90 <_tx_thread_context_restore+0x110>
4000aed8:	e5932000 	ldr	r2, [r3]
4000aedc:	e1500002 	cmp	r0, r2
4000aee0:	1a000003 	bne	4000aef4 <_tx_thread_context_restore+0x74>
4000aee4:	e8bd5401 	pop	{r0, sl, ip, lr}
4000aee8:	e16ff000 	msr	SPSR_fsxc, r0
4000aeec:	e8bd000f 	pop	{r0, r1, r2, r3}
4000aef0:	e1b0f00e 	movs	pc, lr
4000aef4:	e8bd5408 	pop	{r3, sl, ip, lr}
4000aef8:	e1a0100e 	mov	r1, lr
4000aefc:	e3a020d3 	mov	r2, #211	; 0xd3
4000af00:	e121f002 	msr	CPSR_c, r2
4000af04:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000af08:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000af0c:	e1a04003 	mov	r4, r3
4000af10:	e3a020d2 	mov	r2, #210	; 0xd2
4000af14:	e121f002 	msr	CPSR_c, r2
4000af18:	e8bd000f 	pop	{r0, r1, r2, r3}
4000af1c:	e3a050d3 	mov	r5, #211	; 0xd3
4000af20:	e121f005 	msr	CPSR_c, r5
4000af24:	e92d000f 	push	{r0, r1, r2, r3}
4000af28:	e3a03001 	mov	r3, #1
4000af2c:	e92d0018 	push	{r3, r4}
4000af30:	e59f1050 	ldr	r1, [pc, #80]	; 4000af88 <_tx_thread_context_restore+0x108>
4000af34:	e5910000 	ldr	r0, [r1]
4000af38:	e580d008 	str	sp, [r0, #8]
4000af3c:	e3c44020 	bic	r4, r4, #32
4000af40:	e3843080 	orr	r3, r4, #128	; 0x80
4000af44:	e12ff003 	msr	CPSR_fsxc, r3
4000af48:	e59f3044 	ldr	r3, [pc, #68]	; 4000af94 <_tx_thread_context_restore+0x114>
4000af4c:	e5932000 	ldr	r2, [r3]
4000af50:	e3520000 	cmp	r2, #0
4000af54:	0a000002 	beq	4000af64 <_tx_thread_context_restore+0xe4>
4000af58:	e5802018 	str	r2, [r0, #24]
4000af5c:	e3a02000 	mov	r2, #0
4000af60:	e5832000 	str	r2, [r3]
4000af64:	e3a00000 	mov	r0, #0
4000af68:	e5810000 	str	r0, [r1]
4000af6c:	eaffff57 	b	4000acd0 <_tx_thread_schedule>
4000af70:	e10f3000 	mrs	r3, CPSR
4000af74:	e3c3301f 	bic	r3, r3, #31
4000af78:	e3833013 	orr	r3, r3, #19
4000af7c:	e12ff003 	msr	CPSR_fsxc, r3
4000af80:	eaffff52 	b	4000acd0 <_tx_thread_schedule>
4000af84:	40030e48 	.word	0x40030e48
4000af88:	40030e50 	.word	0x40030e50
4000af8c:	40030e6c 	.word	0x40030e6c
4000af90:	40030e54 	.word	0x40030e54
4000af94:	40030e7c 	.word	0x40030e7c

4000af98 <_tx_thread_irq_nesting_end>:
4000af98:	e1a0300e 	mov	r3, lr
4000af9c:	e10f0000 	mrs	r0, CPSR
4000afa0:	e3800080 	orr	r0, r0, #128	; 0x80
4000afa4:	e12ff000 	msr	CPSR_fsxc, r0
4000afa8:	e8bd4002 	pop	{r1, lr}
4000afac:	e3c0001f 	bic	r0, r0, #31
4000afb0:	e3800012 	orr	r0, r0, #18
4000afb4:	e12ff000 	msr	CPSR_fsxc, r0
4000afb8:	e12fff13 	bx	r3

4000afbc <_tx_thread_irq_nesting_start>:
4000afbc:	e1a0300e 	mov	r3, lr
4000afc0:	e10f0000 	mrs	r0, CPSR
4000afc4:	e3c0001f 	bic	r0, r0, #31
4000afc8:	e380001f 	orr	r0, r0, #31
4000afcc:	e12ff000 	msr	CPSR_fsxc, r0
4000afd0:	e92d4002 	push	{r1, lr}
4000afd4:	e3c00080 	bic	r0, r0, #128	; 0x80
4000afd8:	e12ff000 	msr	CPSR_fsxc, r0
4000afdc:	e12fff13 	bx	r3

4000afe0 <_tx_initialize_low_level>:
4000afe0:	e1a0100d 	mov	r1, sp
4000afe4:	e59f3024 	ldr	r3, [pc, #36]	; 4000b010 <_tx_initialize_low_level+0x30>
4000afe8:	e5831000 	str	r1, [r3]
4000afec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000aff0:	e3a00000 	mov	r0, #0
4000aff4:	eb005b7f 	bl	40021df8 <CyU3POsTimerInit>
4000aff8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000affc:	e12fff1e 	bx	lr
4000b000:	e59f200c 	ldr	r2, [pc, #12]	; 4000b014 <_tx_initialize_low_level+0x34>
4000b004:	e5920000 	ldr	r0, [r2]
4000b008:	e59f2008 	ldr	r2, [pc, #8]	; 4000b018 <_tx_initialize_low_level+0x38>
4000b00c:	e5920000 	ldr	r0, [r2]
4000b010:	40030e4c 	.word	0x40030e4c
4000b014:	40030e70 	.word	0x40030e70
4000b018:	40030de4 	.word	0x40030de4

4000b01c <_tx_byte_allocate>:
4000b01c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b020:	e1a04000 	mov	r4, r0
4000b024:	e1a05001 	mov	r5, r1
4000b028:	e1a06002 	mov	r6, r2
4000b02c:	e1a07003 	mov	r7, r3
4000b030:	e3a00000 	mov	r0, #0
4000b034:	e58d0000 	str	r0, [sp]
4000b038:	e59f027c 	ldr	r0, [pc, #636]	; 4000b2bc <_tx_byte_allocate+0x2a0>
4000b03c:	e590a000 	ldr	sl, [r0]
4000b040:	e10f8000 	mrs	r8, CPSR
4000b044:	e3889080 	orr	r9, r8, #128	; 0x80
4000b048:	e121f009 	msr	CPSR_c, r9
4000b04c:	e2860003 	add	r0, r6, #3
4000b050:	e1a00120 	lsr	r0, r0, #2
4000b054:	e1a06100 	lsl	r6, r0, #2
4000b058:	e59f0260 	ldr	r0, [pc, #608]	; 4000b2c0 <_tx_byte_allocate+0x2a4>
4000b05c:	e5900000 	ldr	r0, [r0]
4000b060:	e58d0004 	str	r0, [sp, #4]
4000b064:	e59f1254 	ldr	r1, [pc, #596]	; 4000b2c0 <_tx_byte_allocate+0x2a4>
4000b068:	e5910000 	ldr	r0, [r1]
4000b06c:	e3500000 	cmp	r0, #0
4000b070:	0a000031 	beq	4000b13c <_tx_byte_allocate+0x120>
4000b074:	e59f1248 	ldr	r1, [pc, #584]	; 4000b2c4 <_tx_byte_allocate+0x2a8>
4000b078:	e5911000 	ldr	r1, [r1]
4000b07c:	e2811001 	add	r1, r1, #1
4000b080:	e59f223c 	ldr	r2, [pc, #572]	; 4000b2c4 <_tx_byte_allocate+0x2a8>
4000b084:	e5821000 	str	r1, [r2]
4000b088:	e580100c 	str	r1, [r0, #12]
4000b08c:	e59f1234 	ldr	r1, [pc, #564]	; 4000b2c8 <_tx_byte_allocate+0x2ac>
4000b090:	e5911000 	ldr	r1, [r1]
4000b094:	e3510000 	cmp	r1, #0
4000b098:	1a000006 	bne	4000b0b8 <_tx_byte_allocate+0x9c>
4000b09c:	e59f1218 	ldr	r1, [pc, #536]	; 4000b2bc <_tx_byte_allocate+0x2a0>
4000b0a0:	e5911000 	ldr	r1, [r1]
4000b0a4:	e5801000 	str	r1, [r0]
4000b0a8:	e5901000 	ldr	r1, [r0]
4000b0ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b0b0:	e5801004 	str	r1, [r0, #4]
4000b0b4:	ea00000d 	b	4000b0f0 <_tx_byte_allocate+0xd4>
4000b0b8:	e59f1208 	ldr	r1, [pc, #520]	; 4000b2c8 <_tx_byte_allocate+0x2ac>
4000b0bc:	e5911000 	ldr	r1, [r1]
4000b0c0:	e59f2204 	ldr	r2, [pc, #516]	; 4000b2cc <_tx_byte_allocate+0x2b0>
4000b0c4:	e1510002 	cmp	r1, r2
4000b0c8:	2a000004 	bcs	4000b0e0 <_tx_byte_allocate+0xc4>
4000b0cc:	e3e01000 	mvn	r1, #0
4000b0d0:	e5801000 	str	r1, [r0]
4000b0d4:	e3a01000 	mov	r1, #0
4000b0d8:	e5801004 	str	r1, [r0, #4]
4000b0dc:	ea000003 	b	4000b0f0 <_tx_byte_allocate+0xd4>
4000b0e0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b2cc <_tx_byte_allocate+0x2b0>
4000b0e4:	e5801000 	str	r1, [r0]
4000b0e8:	e3a01000 	mov	r1, #0
4000b0ec:	e5801004 	str	r1, [r0, #4]
4000b0f0:	e3a01014 	mov	r1, #20
4000b0f4:	e5801008 	str	r1, [r0, #8]
4000b0f8:	e5804010 	str	r4, [r0, #16]
4000b0fc:	e3a01000 	mov	r1, #0
4000b100:	e5801014 	str	r1, [r0, #20]
4000b104:	e5806018 	str	r6, [r0, #24]
4000b108:	e580701c 	str	r7, [r0, #28]
4000b10c:	e2800020 	add	r0, r0, #32
4000b110:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b2d0 <_tx_byte_allocate+0x2b4>
4000b114:	e5911000 	ldr	r1, [r1]
4000b118:	e1500001 	cmp	r0, r1
4000b11c:	3a000001 	bcc	4000b128 <_tx_byte_allocate+0x10c>
4000b120:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b2d4 <_tx_byte_allocate+0x2b8>
4000b124:	e5910000 	ldr	r0, [r1]
4000b128:	e59f1190 	ldr	r1, [pc, #400]	; 4000b2c0 <_tx_byte_allocate+0x2a4>
4000b12c:	e5810000 	str	r0, [r1]
4000b130:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b2d8 <_tx_byte_allocate+0x2bc>
4000b134:	e5911000 	ldr	r1, [r1]
4000b138:	e5810020 	str	r0, [r1, #32]
4000b13c:	e59d0004 	ldr	r0, [sp, #4]
4000b140:	e3500000 	cmp	r0, #0
4000b144:	0a000002 	beq	4000b154 <_tx_byte_allocate+0x138>
4000b148:	e59d0004 	ldr	r0, [sp, #4]
4000b14c:	e590000c 	ldr	r0, [r0, #12]
4000b150:	e58d0000 	str	r0, [sp]
4000b154:	e1a00000 	nop			; (mov r0, r0)
4000b158:	e584a020 	str	sl, [r4, #32]
4000b15c:	e121f008 	msr	CPSR_c, r8
4000b160:	e1a01006 	mov	r1, r6
4000b164:	e1a00004 	mov	r0, r4
4000b168:	eb0001ba 	bl	4000b858 <_tx_byte_pool_search>
4000b16c:	e1a0b000 	mov	fp, r0
4000b170:	e10f8000 	mrs	r8, CPSR
4000b174:	e3889080 	orr	r9, r8, #128	; 0x80
4000b178:	e121f009 	msr	CPSR_c, r9
4000b17c:	e35b0000 	cmp	fp, #0
4000b180:	1a000002 	bne	4000b190 <_tx_byte_allocate+0x174>
4000b184:	e5940020 	ldr	r0, [r4, #32]
4000b188:	e150000a 	cmp	r0, sl
4000b18c:	1afffff1 	bne	4000b158 <_tx_byte_allocate+0x13c>
4000b190:	e35b0000 	cmp	fp, #0
4000b194:	0a00000e 	beq	4000b1d4 <_tx_byte_allocate+0x1b8>
4000b198:	e585b000 	str	fp, [r5]
4000b19c:	e59d0004 	ldr	r0, [sp, #4]
4000b1a0:	e3500000 	cmp	r0, #0
4000b1a4:	0a000007 	beq	4000b1c8 <_tx_byte_allocate+0x1ac>
4000b1a8:	e59d0004 	ldr	r0, [sp, #4]
4000b1ac:	e590100c 	ldr	r1, [r0, #12]
4000b1b0:	e59d0000 	ldr	r0, [sp]
4000b1b4:	e1510000 	cmp	r1, r0
4000b1b8:	1a000002 	bne	4000b1c8 <_tx_byte_allocate+0x1ac>
4000b1bc:	e5950000 	ldr	r0, [r5]
4000b1c0:	e59d1004 	ldr	r1, [sp, #4]
4000b1c4:	e5810014 	str	r0, [r1, #20]
4000b1c8:	e3a00000 	mov	r0, #0
4000b1cc:	e58d0008 	str	r0, [sp, #8]
4000b1d0:	ea000036 	b	4000b2b0 <_tx_byte_allocate+0x294>
4000b1d4:	e3570000 	cmp	r7, #0
4000b1d8:	0a000032 	beq	4000b2a8 <_tx_byte_allocate+0x28c>
4000b1dc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b2dc <_tx_byte_allocate+0x2c0>
4000b1e0:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b1e4:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b1e8:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b1ec:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b1f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b1f4:	e3500000 	cmp	r0, #0
4000b1f8:	0a00000a 	beq	4000b228 <_tx_byte_allocate+0x20c>
4000b1fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b200:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b204:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b208:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b20c:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b210:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b214:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b218:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b21c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b220:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b224:	ea000002 	b	4000b234 <_tx_byte_allocate+0x218>
4000b228:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b22c:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b230:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b234:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b238:	e2800001 	add	r0, r0, #1
4000b23c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b240:	e3a00009 	mov	r0, #9
4000b244:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b248:	e3a00001 	mov	r0, #1
4000b24c:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b250:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b254:	e59f0084 	ldr	r0, [pc, #132]	; 4000b2e0 <_tx_byte_allocate+0x2c4>
4000b258:	e5900000 	ldr	r0, [r0]
4000b25c:	e2800001 	add	r0, r0, #1
4000b260:	e59f1078 	ldr	r1, [pc, #120]	; 4000b2e0 <_tx_byte_allocate+0x2c4>
4000b264:	e5810000 	str	r0, [r1]
4000b268:	e121f008 	msr	CPSR_c, r8
4000b26c:	e1a0000a 	mov	r0, sl
4000b270:	ebfff671 	bl	40008c3c <_tx_thread_system_suspend>
4000b274:	e59d0004 	ldr	r0, [sp, #4]
4000b278:	e3500000 	cmp	r0, #0
4000b27c:	0a000007 	beq	4000b2a0 <_tx_byte_allocate+0x284>
4000b280:	e59d0004 	ldr	r0, [sp, #4]
4000b284:	e590100c 	ldr	r1, [r0, #12]
4000b288:	e59d0000 	ldr	r0, [sp]
4000b28c:	e1510000 	cmp	r1, r0
4000b290:	1a000002 	bne	4000b2a0 <_tx_byte_allocate+0x284>
4000b294:	e5950000 	ldr	r0, [r5]
4000b298:	e59d1004 	ldr	r1, [sp, #4]
4000b29c:	e5810014 	str	r0, [r1, #20]
4000b2a0:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b2a4:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b2a8:	e3a00010 	mov	r0, #16
4000b2ac:	e58d0008 	str	r0, [sp, #8]
4000b2b0:	e121f008 	msr	CPSR_c, r8
4000b2b4:	e59d0008 	ldr	r0, [sp, #8]
4000b2b8:	eafffff9 	b	4000b2a4 <_tx_byte_allocate+0x288>
4000b2bc:	40030e50 	.word	0x40030e50
4000b2c0:	40030ebc 	.word	0x40030ebc
4000b2c4:	40030ec0 	.word	0x40030ec0
4000b2c8:	40030e48 	.word	0x40030e48
4000b2cc:	f0f0f0f0 	.word	0xf0f0f0f0
4000b2d0:	40030eb8 	.word	0x40030eb8
4000b2d4:	40030eb4 	.word	0x40030eb4
4000b2d8:	40030ea8 	.word	0x40030ea8
4000b2dc:	4000b2e4 	.word	0x4000b2e4
4000b2e0:	40030e6c 	.word	0x40030e6c

4000b2e4 <_tx_byte_pool_cleanup>:
4000b2e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b2e8:	e1a04000 	mov	r4, r0
4000b2ec:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b2f0:	e10f5000 	mrs	r5, CPSR
4000b2f4:	e3856080 	orr	r6, r5, #128	; 0x80
4000b2f8:	e121f006 	msr	CPSR_c, r6
4000b2fc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b300:	e3500000 	cmp	r0, #0
4000b304:	0a000026 	beq	4000b3a4 <_tx_byte_pool_cleanup+0xc0>
4000b308:	e3570000 	cmp	r7, #0
4000b30c:	0a000024 	beq	4000b3a4 <_tx_byte_pool_cleanup+0xc0>
4000b310:	e5970000 	ldr	r0, [r7]
4000b314:	e59f1090 	ldr	r1, [pc, #144]	; 4000b3ac <_tx_byte_pool_cleanup+0xc8>
4000b318:	e1500001 	cmp	r0, r1
4000b31c:	1a000020 	bne	4000b3a4 <_tx_byte_pool_cleanup+0xc0>
4000b320:	e3a00000 	mov	r0, #0
4000b324:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b328:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b32c:	e1500004 	cmp	r0, r4
4000b330:	1a000002 	bne	4000b340 <_tx_byte_pool_cleanup+0x5c>
4000b334:	e3a00000 	mov	r0, #0
4000b338:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b33c:	ea000007 	b	4000b360 <_tx_byte_pool_cleanup+0x7c>
4000b340:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b344:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b348:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b34c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b350:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b354:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b358:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b35c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b360:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b364:	e2400001 	sub	r0, r0, #1
4000b368:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b36c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b370:	e3500009 	cmp	r0, #9
4000b374:	1a00000a 	bne	4000b3a4 <_tx_byte_pool_cleanup+0xc0>
4000b378:	e3a00010 	mov	r0, #16
4000b37c:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b380:	e59f0028 	ldr	r0, [pc, #40]	; 4000b3b0 <_tx_byte_pool_cleanup+0xcc>
4000b384:	e5900000 	ldr	r0, [r0]
4000b388:	e2800001 	add	r0, r0, #1
4000b38c:	e59f101c 	ldr	r1, [pc, #28]	; 4000b3b0 <_tx_byte_pool_cleanup+0xcc>
4000b390:	e5810000 	str	r0, [r1]
4000b394:	e121f005 	msr	CPSR_c, r5
4000b398:	e1a00004 	mov	r0, r4
4000b39c:	eb000fcd 	bl	4000f2d8 <_tx_thread_system_resume>
4000b3a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b3a4:	e121f005 	msr	CPSR_c, r5
4000b3a8:	eafffffc 	b	4000b3a0 <_tx_byte_pool_cleanup+0xbc>
4000b3ac:	42595445 	.word	0x42595445
4000b3b0:	40030e6c 	.word	0x40030e6c

4000b3b4 <_tx_byte_pool_create>:
4000b3b4:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b3b8:	e1a04000 	mov	r4, r0
4000b3bc:	e1a05001 	mov	r5, r1
4000b3c0:	e1a06002 	mov	r6, r2
4000b3c4:	e1a07003 	mov	r7, r3
4000b3c8:	e3a01034 	mov	r1, #52	; 0x34
4000b3cc:	e1a00004 	mov	r0, r4
4000b3d0:	eb00207b 	bl	400135c4 <__aeabi_memclr4>
4000b3d4:	e1a00127 	lsr	r0, r7, #2
4000b3d8:	e1a07100 	lsl	r7, r0, #2
4000b3dc:	e5845004 	str	r5, [r4, #4]
4000b3e0:	e5846018 	str	r6, [r4, #24]
4000b3e4:	e584701c 	str	r7, [r4, #28]
4000b3e8:	e5846010 	str	r6, [r4, #16]
4000b3ec:	e5846014 	str	r6, [r4, #20]
4000b3f0:	e2470008 	sub	r0, r7, #8
4000b3f4:	e5840008 	str	r0, [r4, #8]
4000b3f8:	e3a00002 	mov	r0, #2
4000b3fc:	e584000c 	str	r0, [r4, #12]
4000b400:	e0860007 	add	r0, r6, r7
4000b404:	e58d0004 	str	r0, [sp, #4]
4000b408:	e59d0004 	ldr	r0, [sp, #4]
4000b40c:	e2400004 	sub	r0, r0, #4
4000b410:	e58d0004 	str	r0, [sp, #4]
4000b414:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b5d8 <_tx_byte_pool_create+0x224>
4000b418:	e59d1004 	ldr	r1, [sp, #4]
4000b41c:	e5810000 	str	r0, [r1]
4000b420:	e59d0004 	ldr	r0, [sp, #4]
4000b424:	e2400004 	sub	r0, r0, #4
4000b428:	e58d0004 	str	r0, [sp, #4]
4000b42c:	e59d0004 	ldr	r0, [sp, #4]
4000b430:	e5806000 	str	r6, [r0]
4000b434:	e59d0004 	ldr	r0, [sp, #4]
4000b438:	e5860000 	str	r0, [r6]
4000b43c:	e58d6004 	str	r6, [sp, #4]
4000b440:	e59d0004 	ldr	r0, [sp, #4]
4000b444:	e2800004 	add	r0, r0, #4
4000b448:	e58d0004 	str	r0, [sp, #4]
4000b44c:	e59f0188 	ldr	r0, [pc, #392]	; 4000b5dc <_tx_byte_pool_create+0x228>
4000b450:	e59d1004 	ldr	r1, [sp, #4]
4000b454:	e5810000 	str	r0, [r1]
4000b458:	e3a00000 	mov	r0, #0
4000b45c:	e5840020 	str	r0, [r4, #32]
4000b460:	e10f8000 	mrs	r8, CPSR
4000b464:	e3889080 	orr	r9, r8, #128	; 0x80
4000b468:	e121f009 	msr	CPSR_c, r9
4000b46c:	e59f016c 	ldr	r0, [pc, #364]	; 4000b5e0 <_tx_byte_pool_create+0x22c>
4000b470:	e5840000 	str	r0, [r4]
4000b474:	e59f0168 	ldr	r0, [pc, #360]	; 4000b5e4 <_tx_byte_pool_create+0x230>
4000b478:	e5900000 	ldr	r0, [r0]
4000b47c:	e3500000 	cmp	r0, #0
4000b480:	0a00000b 	beq	4000b4b4 <_tx_byte_pool_create+0x100>
4000b484:	e59f0158 	ldr	r0, [pc, #344]	; 4000b5e4 <_tx_byte_pool_create+0x230>
4000b488:	e5900000 	ldr	r0, [r0]
4000b48c:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b490:	e59f014c 	ldr	r0, [pc, #332]	; 4000b5e4 <_tx_byte_pool_create+0x230>
4000b494:	e5900000 	ldr	r0, [r0]
4000b498:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b49c:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b4a0:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b4a4:	e59f0138 	ldr	r0, [pc, #312]	; 4000b5e4 <_tx_byte_pool_create+0x230>
4000b4a8:	e5900000 	ldr	r0, [r0]
4000b4ac:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b4b0:	ea000003 	b	4000b4c4 <_tx_byte_pool_create+0x110>
4000b4b4:	e59f0128 	ldr	r0, [pc, #296]	; 4000b5e4 <_tx_byte_pool_create+0x230>
4000b4b8:	e5804000 	str	r4, [r0]
4000b4bc:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b4c0:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b4c4:	e59f011c 	ldr	r0, [pc, #284]	; 4000b5e8 <_tx_byte_pool_create+0x234>
4000b4c8:	e5900000 	ldr	r0, [r0]
4000b4cc:	e2800001 	add	r0, r0, #1
4000b4d0:	e59f1110 	ldr	r1, [pc, #272]	; 4000b5e8 <_tx_byte_pool_create+0x234>
4000b4d4:	e5810000 	str	r0, [r1]
4000b4d8:	e3a03000 	mov	r3, #0
4000b4dc:	e58d3000 	str	r3, [sp]
4000b4e0:	e1a03007 	mov	r3, r7
4000b4e4:	e1a02005 	mov	r2, r5
4000b4e8:	e1a01004 	mov	r1, r4
4000b4ec:	e3a00008 	mov	r0, #8
4000b4f0:	eb0012ce 	bl	40010030 <_tx_trace_object_register>
4000b4f4:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b5ec <_tx_byte_pool_create+0x238>
4000b4f8:	e5910000 	ldr	r0, [r1]
4000b4fc:	e3500000 	cmp	r0, #0
4000b500:	0a000031 	beq	4000b5cc <_tx_byte_pool_create+0x218>
4000b504:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b5f0 <_tx_byte_pool_create+0x23c>
4000b508:	e5911000 	ldr	r1, [r1]
4000b50c:	e2811001 	add	r1, r1, #1
4000b510:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b5f0 <_tx_byte_pool_create+0x23c>
4000b514:	e5821000 	str	r1, [r2]
4000b518:	e580100c 	str	r1, [r0, #12]
4000b51c:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b5f4 <_tx_byte_pool_create+0x240>
4000b520:	e5911000 	ldr	r1, [r1]
4000b524:	e3510000 	cmp	r1, #0
4000b528:	1a000006 	bne	4000b548 <_tx_byte_pool_create+0x194>
4000b52c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b5f8 <_tx_byte_pool_create+0x244>
4000b530:	e5911000 	ldr	r1, [r1]
4000b534:	e5801000 	str	r1, [r0]
4000b538:	e5901000 	ldr	r1, [r0]
4000b53c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b540:	e5801004 	str	r1, [r0, #4]
4000b544:	ea00000d 	b	4000b580 <_tx_byte_pool_create+0x1cc>
4000b548:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b5f4 <_tx_byte_pool_create+0x240>
4000b54c:	e5911000 	ldr	r1, [r1]
4000b550:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b5fc <_tx_byte_pool_create+0x248>
4000b554:	e1510002 	cmp	r1, r2
4000b558:	2a000004 	bcs	4000b570 <_tx_byte_pool_create+0x1bc>
4000b55c:	e3e01000 	mvn	r1, #0
4000b560:	e5801000 	str	r1, [r0]
4000b564:	e3a01000 	mov	r1, #0
4000b568:	e5801004 	str	r1, [r0, #4]
4000b56c:	ea000003 	b	4000b580 <_tx_byte_pool_create+0x1cc>
4000b570:	e59f1084 	ldr	r1, [pc, #132]	; 4000b5fc <_tx_byte_pool_create+0x248>
4000b574:	e5801000 	str	r1, [r0]
4000b578:	e3a01000 	mov	r1, #0
4000b57c:	e5801004 	str	r1, [r0, #4]
4000b580:	e3a01015 	mov	r1, #21
4000b584:	e5801008 	str	r1, [r0, #8]
4000b588:	e5804010 	str	r4, [r0, #16]
4000b58c:	e5806014 	str	r6, [r0, #20]
4000b590:	e5807018 	str	r7, [r0, #24]
4000b594:	e28d1004 	add	r1, sp, #4
4000b598:	e580101c 	str	r1, [r0, #28]
4000b59c:	e2800020 	add	r0, r0, #32
4000b5a0:	e59f1058 	ldr	r1, [pc, #88]	; 4000b600 <_tx_byte_pool_create+0x24c>
4000b5a4:	e5911000 	ldr	r1, [r1]
4000b5a8:	e1500001 	cmp	r0, r1
4000b5ac:	3a000001 	bcc	4000b5b8 <_tx_byte_pool_create+0x204>
4000b5b0:	e59f104c 	ldr	r1, [pc, #76]	; 4000b604 <_tx_byte_pool_create+0x250>
4000b5b4:	e5910000 	ldr	r0, [r1]
4000b5b8:	e59f102c 	ldr	r1, [pc, #44]	; 4000b5ec <_tx_byte_pool_create+0x238>
4000b5bc:	e5810000 	str	r0, [r1]
4000b5c0:	e59f1040 	ldr	r1, [pc, #64]	; 4000b608 <_tx_byte_pool_create+0x254>
4000b5c4:	e5911000 	ldr	r1, [r1]
4000b5c8:	e5810020 	str	r0, [r1, #32]
4000b5cc:	e121f008 	msr	CPSR_c, r8
4000b5d0:	e3a00000 	mov	r0, #0
4000b5d4:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b5d8:	aaaaaaaa 	.word	0xaaaaaaaa
4000b5dc:	ffffeeee 	.word	0xffffeeee
4000b5e0:	42595445 	.word	0x42595445
4000b5e4:	40030eec 	.word	0x40030eec
4000b5e8:	40030ef0 	.word	0x40030ef0
4000b5ec:	40030ebc 	.word	0x40030ebc
4000b5f0:	40030ec0 	.word	0x40030ec0
4000b5f4:	40030e48 	.word	0x40030e48
4000b5f8:	40030e50 	.word	0x40030e50
4000b5fc:	f0f0f0f0 	.word	0xf0f0f0f0
4000b600:	40030eb8 	.word	0x40030eb8
4000b604:	40030eb4 	.word	0x40030eb4
4000b608:	40030ea8 	.word	0x40030ea8

4000b60c <_tx_byte_pool_delete>:
4000b60c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b610:	e1a04000 	mov	r4, r0
4000b614:	e10f5000 	mrs	r5, CPSR
4000b618:	e3856080 	orr	r6, r5, #128	; 0x80
4000b61c:	e121f006 	msr	CPSR_c, r6
4000b620:	e59f1204 	ldr	r1, [pc, #516]	; 4000b82c <_tx_byte_pool_delete+0x220>
4000b624:	e5910000 	ldr	r0, [r1]
4000b628:	e3500000 	cmp	r0, #0
4000b62c:	0a000031 	beq	4000b6f8 <_tx_byte_pool_delete+0xec>
4000b630:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b830 <_tx_byte_pool_delete+0x224>
4000b634:	e5911000 	ldr	r1, [r1]
4000b638:	e2811001 	add	r1, r1, #1
4000b63c:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b830 <_tx_byte_pool_delete+0x224>
4000b640:	e5821000 	str	r1, [r2]
4000b644:	e580100c 	str	r1, [r0, #12]
4000b648:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b834 <_tx_byte_pool_delete+0x228>
4000b64c:	e5911000 	ldr	r1, [r1]
4000b650:	e3510000 	cmp	r1, #0
4000b654:	1a000006 	bne	4000b674 <_tx_byte_pool_delete+0x68>
4000b658:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b838 <_tx_byte_pool_delete+0x22c>
4000b65c:	e5911000 	ldr	r1, [r1]
4000b660:	e5801000 	str	r1, [r0]
4000b664:	e5901000 	ldr	r1, [r0]
4000b668:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b66c:	e5801004 	str	r1, [r0, #4]
4000b670:	ea00000d 	b	4000b6ac <_tx_byte_pool_delete+0xa0>
4000b674:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b834 <_tx_byte_pool_delete+0x228>
4000b678:	e5911000 	ldr	r1, [r1]
4000b67c:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b83c <_tx_byte_pool_delete+0x230>
4000b680:	e1510002 	cmp	r1, r2
4000b684:	2a000004 	bcs	4000b69c <_tx_byte_pool_delete+0x90>
4000b688:	e3e01000 	mvn	r1, #0
4000b68c:	e5801000 	str	r1, [r0]
4000b690:	e3a01000 	mov	r1, #0
4000b694:	e5801004 	str	r1, [r0, #4]
4000b698:	ea000003 	b	4000b6ac <_tx_byte_pool_delete+0xa0>
4000b69c:	e59f1198 	ldr	r1, [pc, #408]	; 4000b83c <_tx_byte_pool_delete+0x230>
4000b6a0:	e5801000 	str	r1, [r0]
4000b6a4:	e3a01000 	mov	r1, #0
4000b6a8:	e5801004 	str	r1, [r0, #4]
4000b6ac:	e3a01016 	mov	r1, #22
4000b6b0:	e5801008 	str	r1, [r0, #8]
4000b6b4:	e5804010 	str	r4, [r0, #16]
4000b6b8:	e580d014 	str	sp, [r0, #20]
4000b6bc:	e3a01000 	mov	r1, #0
4000b6c0:	e5801018 	str	r1, [r0, #24]
4000b6c4:	e580101c 	str	r1, [r0, #28]
4000b6c8:	e2800020 	add	r0, r0, #32
4000b6cc:	e59f116c 	ldr	r1, [pc, #364]	; 4000b840 <_tx_byte_pool_delete+0x234>
4000b6d0:	e5911000 	ldr	r1, [r1]
4000b6d4:	e1500001 	cmp	r0, r1
4000b6d8:	3a000001 	bcc	4000b6e4 <_tx_byte_pool_delete+0xd8>
4000b6dc:	e59f1160 	ldr	r1, [pc, #352]	; 4000b844 <_tx_byte_pool_delete+0x238>
4000b6e0:	e5910000 	ldr	r0, [r1]
4000b6e4:	e59f1140 	ldr	r1, [pc, #320]	; 4000b82c <_tx_byte_pool_delete+0x220>
4000b6e8:	e5810000 	str	r0, [r1]
4000b6ec:	e59f1154 	ldr	r1, [pc, #340]	; 4000b848 <_tx_byte_pool_delete+0x23c>
4000b6f0:	e5911000 	ldr	r1, [r1]
4000b6f4:	e5810020 	str	r0, [r1, #32]
4000b6f8:	e1a00004 	mov	r0, r4
4000b6fc:	eb0012b6 	bl	400101dc <_tx_trace_object_unregister>
4000b700:	e59f0144 	ldr	r0, [pc, #324]	; 4000b84c <_tx_byte_pool_delete+0x240>
4000b704:	e5900000 	ldr	r0, [r0]
4000b708:	e2400001 	sub	r0, r0, #1
4000b70c:	e59f1138 	ldr	r1, [pc, #312]	; 4000b84c <_tx_byte_pool_delete+0x240>
4000b710:	e5810000 	str	r0, [r1]
4000b714:	e3a00000 	mov	r0, #0
4000b718:	e5840000 	str	r0, [r4]
4000b71c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b720:	e1500004 	cmp	r0, r4
4000b724:	1a000003 	bne	4000b738 <_tx_byte_pool_delete+0x12c>
4000b728:	e3a00000 	mov	r0, #0
4000b72c:	e59f111c 	ldr	r1, [pc, #284]	; 4000b850 <_tx_byte_pool_delete+0x244>
4000b730:	e5810000 	str	r0, [r1]
4000b734:	ea00000c 	b	4000b76c <_tx_byte_pool_delete+0x160>
4000b738:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b73c:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b740:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b744:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b748:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b74c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b750:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b850 <_tx_byte_pool_delete+0x244>
4000b754:	e5900000 	ldr	r0, [r0]
4000b758:	e1500004 	cmp	r0, r4
4000b75c:	1a000002 	bne	4000b76c <_tx_byte_pool_delete+0x160>
4000b760:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b850 <_tx_byte_pool_delete+0x244>
4000b764:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b768:	e5810000 	str	r0, [r1]
4000b76c:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b854 <_tx_byte_pool_delete+0x248>
4000b770:	e5900000 	ldr	r0, [r0]
4000b774:	e2800001 	add	r0, r0, #1
4000b778:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b854 <_tx_byte_pool_delete+0x248>
4000b77c:	e5810000 	str	r0, [r1]
4000b780:	e121f005 	msr	CPSR_c, r5
4000b784:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b788:	e58d0000 	str	r0, [sp]
4000b78c:	ea000017 	b	4000b7f0 <_tx_byte_pool_delete+0x1e4>
4000b790:	e10f5000 	mrs	r5, CPSR
4000b794:	e3856080 	orr	r6, r5, #128	; 0x80
4000b798:	e121f006 	msr	CPSR_c, r6
4000b79c:	e3a00000 	mov	r0, #0
4000b7a0:	e59d1000 	ldr	r1, [sp]
4000b7a4:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b7a8:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b854 <_tx_byte_pool_delete+0x248>
4000b7ac:	e5900000 	ldr	r0, [r0]
4000b7b0:	e2800001 	add	r0, r0, #1
4000b7b4:	e59f1098 	ldr	r1, [pc, #152]	; 4000b854 <_tx_byte_pool_delete+0x248>
4000b7b8:	e5810000 	str	r0, [r1]
4000b7bc:	e121f005 	msr	CPSR_c, r5
4000b7c0:	e3a00001 	mov	r0, #1
4000b7c4:	e59d1000 	ldr	r1, [sp]
4000b7c8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b7cc:	e59d0000 	ldr	r0, [sp]
4000b7d0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b7d4:	e58d0000 	str	r0, [sp]
4000b7d8:	e59d1000 	ldr	r1, [sp]
4000b7dc:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b7e0:	eb000ebc 	bl	4000f2d8 <_tx_thread_system_resume>
4000b7e4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b7e8:	e2400001 	sub	r0, r0, #1
4000b7ec:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b7f0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b7f4:	e3500000 	cmp	r0, #0
4000b7f8:	1affffe4 	bne	4000b790 <_tx_byte_pool_delete+0x184>
4000b7fc:	e10f5000 	mrs	r5, CPSR
4000b800:	e3856080 	orr	r6, r5, #128	; 0x80
4000b804:	e121f006 	msr	CPSR_c, r6
4000b808:	e59f0044 	ldr	r0, [pc, #68]	; 4000b854 <_tx_byte_pool_delete+0x248>
4000b80c:	e5900000 	ldr	r0, [r0]
4000b810:	e2400001 	sub	r0, r0, #1
4000b814:	e59f1038 	ldr	r1, [pc, #56]	; 4000b854 <_tx_byte_pool_delete+0x248>
4000b818:	e5810000 	str	r0, [r1]
4000b81c:	e121f005 	msr	CPSR_c, r5
4000b820:	eb000e80 	bl	4000f228 <_tx_thread_system_preempt_check>
4000b824:	e3a00000 	mov	r0, #0
4000b828:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b82c:	40030ebc 	.word	0x40030ebc
4000b830:	40030ec0 	.word	0x40030ec0
4000b834:	40030e48 	.word	0x40030e48
4000b838:	40030e50 	.word	0x40030e50
4000b83c:	f0f0f0f0 	.word	0xf0f0f0f0
4000b840:	40030eb8 	.word	0x40030eb8
4000b844:	40030eb4 	.word	0x40030eb4
4000b848:	40030ea8 	.word	0x40030ea8
4000b84c:	40030ef0 	.word	0x40030ef0
4000b850:	40030eec 	.word	0x40030eec
4000b854:	40030e6c 	.word	0x40030e6c

4000b858 <_tx_byte_pool_search>:
4000b858:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b85c:	e1a02000 	mov	r2, r0
4000b860:	e3a08000 	mov	r8, #0
4000b864:	e10f3000 	mrs	r3, CPSR
4000b868:	e383c080 	orr	ip, r3, #128	; 0x80
4000b86c:	e121f00c 	msr	CPSR_c, ip
4000b870:	e5920008 	ldr	r0, [r2, #8]
4000b874:	e1500001 	cmp	r0, r1
4000b878:	8a000002 	bhi	4000b888 <_tx_byte_pool_search+0x30>
4000b87c:	e121f003 	msr	CPSR_c, r3
4000b880:	e3a00000 	mov	r0, #0
4000b884:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b888:	e5925014 	ldr	r5, [r2, #20]
4000b88c:	e1a0e005 	mov	lr, r5
4000b890:	e592000c 	ldr	r0, [r2, #12]
4000b894:	e2807001 	add	r7, r0, #1
4000b898:	e3a06000 	mov	r6, #0
4000b89c:	e1a00000 	nop			; (mov r0, r0)
4000b8a0:	e59e0004 	ldr	r0, [lr, #4]
4000b8a4:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b8a8:	e29aa012 	adds	sl, sl, #18
4000b8ac:	1a000020 	bne	4000b934 <_tx_byte_pool_search+0xdc>
4000b8b0:	e3580000 	cmp	r8, #0
4000b8b4:	1a000004 	bne	4000b8cc <_tx_byte_pool_search+0x74>
4000b8b8:	e5920014 	ldr	r0, [r2, #20]
4000b8bc:	e1500005 	cmp	r0, r5
4000b8c0:	1a000000 	bne	4000b8c8 <_tx_byte_pool_search+0x70>
4000b8c4:	e582e014 	str	lr, [r2, #20]
4000b8c8:	e3a08001 	mov	r8, #1
4000b8cc:	e59e4000 	ldr	r4, [lr]
4000b8d0:	e044000e 	sub	r0, r4, lr
4000b8d4:	e2406008 	sub	r6, r0, #8
4000b8d8:	e1560001 	cmp	r6, r1
4000b8dc:	3a000000 	bcc	4000b8e4 <_tx_byte_pool_search+0x8c>
4000b8e0:	ea000026 	b	4000b980 <_tx_byte_pool_search+0x128>
4000b8e4:	e3a06000 	mov	r6, #0
4000b8e8:	e5940004 	ldr	r0, [r4, #4]
4000b8ec:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b8f0:	e29aa012 	adds	sl, sl, #18
4000b8f4:	1a000009 	bne	4000b920 <_tx_byte_pool_search+0xc8>
4000b8f8:	e5940000 	ldr	r0, [r4]
4000b8fc:	e58e0000 	str	r0, [lr]
4000b900:	e592000c 	ldr	r0, [r2, #12]
4000b904:	e2400001 	sub	r0, r0, #1
4000b908:	e582000c 	str	r0, [r2, #12]
4000b90c:	e5920014 	ldr	r0, [r2, #20]
4000b910:	e1500004 	cmp	r0, r4
4000b914:	1a000007 	bne	4000b938 <_tx_byte_pool_search+0xe0>
4000b918:	e582e014 	str	lr, [r2, #20]
4000b91c:	ea000005 	b	4000b938 <_tx_byte_pool_search+0xe0>
4000b920:	e594e000 	ldr	lr, [r4]
4000b924:	e3570000 	cmp	r7, #0
4000b928:	0a000002 	beq	4000b938 <_tx_byte_pool_search+0xe0>
4000b92c:	e2477001 	sub	r7, r7, #1
4000b930:	ea000000 	b	4000b938 <_tx_byte_pool_search+0xe0>
4000b934:	e59ee000 	ldr	lr, [lr]
4000b938:	e3570000 	cmp	r7, #0
4000b93c:	0a000000 	beq	4000b944 <_tx_byte_pool_search+0xec>
4000b940:	e2477001 	sub	r7, r7, #1
4000b944:	e121f003 	msr	CPSR_c, r3
4000b948:	e10f3000 	mrs	r3, CPSR
4000b94c:	e383c080 	orr	ip, r3, #128	; 0x80
4000b950:	e121f00c 	msr	CPSR_c, ip
4000b954:	e59f00ac 	ldr	r0, [pc, #172]	; 4000ba08 <_tx_byte_pool_search+0x1b0>
4000b958:	e5909000 	ldr	r9, [r0]
4000b95c:	e5920020 	ldr	r0, [r2, #32]
4000b960:	e1500009 	cmp	r0, r9
4000b964:	0a000003 	beq	4000b978 <_tx_byte_pool_search+0x120>
4000b968:	e592e014 	ldr	lr, [r2, #20]
4000b96c:	e592000c 	ldr	r0, [r2, #12]
4000b970:	e2807001 	add	r7, r0, #1
4000b974:	e5829020 	str	r9, [r2, #32]
4000b978:	e3570000 	cmp	r7, #0
4000b97c:	1affffc7 	bne	4000b8a0 <_tx_byte_pool_search+0x48>
4000b980:	e1a00000 	nop			; (mov r0, r0)
4000b984:	e3560000 	cmp	r6, #0
4000b988:	0a00001a 	beq	4000b9f8 <_tx_byte_pool_search+0x1a0>
4000b98c:	e0460001 	sub	r0, r6, r1
4000b990:	e3500014 	cmp	r0, #20
4000b994:	3a00000a 	bcc	4000b9c4 <_tx_byte_pool_search+0x16c>
4000b998:	e08e0001 	add	r0, lr, r1
4000b99c:	e2804008 	add	r4, r0, #8
4000b9a0:	e59e0000 	ldr	r0, [lr]
4000b9a4:	e5840000 	str	r0, [r4]
4000b9a8:	e59f005c 	ldr	r0, [pc, #92]	; 4000ba0c <_tx_byte_pool_search+0x1b4>
4000b9ac:	e5840004 	str	r0, [r4, #4]
4000b9b0:	e592000c 	ldr	r0, [r2, #12]
4000b9b4:	e2800001 	add	r0, r0, #1
4000b9b8:	e582000c 	str	r0, [r2, #12]
4000b9bc:	e58e4000 	str	r4, [lr]
4000b9c0:	e1a06001 	mov	r6, r1
4000b9c4:	e58e2004 	str	r2, [lr, #4]
4000b9c8:	e5920008 	ldr	r0, [r2, #8]
4000b9cc:	e0400006 	sub	r0, r0, r6
4000b9d0:	e2400008 	sub	r0, r0, #8
4000b9d4:	e5820008 	str	r0, [r2, #8]
4000b9d8:	e5920014 	ldr	r0, [r2, #20]
4000b9dc:	e150000e 	cmp	r0, lr
4000b9e0:	1a000001 	bne	4000b9ec <_tx_byte_pool_search+0x194>
4000b9e4:	e59e0000 	ldr	r0, [lr]
4000b9e8:	e5820014 	str	r0, [r2, #20]
4000b9ec:	e121f003 	msr	CPSR_c, r3
4000b9f0:	e28ee008 	add	lr, lr, #8
4000b9f4:	ea000001 	b	4000ba00 <_tx_byte_pool_search+0x1a8>
4000b9f8:	e121f003 	msr	CPSR_c, r3
4000b9fc:	e3a0e000 	mov	lr, #0
4000ba00:	e1a0000e 	mov	r0, lr
4000ba04:	eaffff9e 	b	4000b884 <_tx_byte_pool_search+0x2c>
4000ba08:	40030e50 	.word	0x40030e50
4000ba0c:	ffffeeee 	.word	0xffffeeee

4000ba10 <_tx_byte_release>:
4000ba10:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ba14:	e1a04000 	mov	r4, r0
4000ba18:	e1a09004 	mov	r9, r4
4000ba1c:	e1b04009 	movs	r4, r9
4000ba20:	0a00000f 	beq	4000ba64 <_tx_byte_release+0x54>
4000ba24:	e2499008 	sub	r9, r9, #8
4000ba28:	e5990004 	ldr	r0, [r9, #4]
4000ba2c:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000ba30:	e2911012 	adds	r1, r1, #18
4000ba34:	0a000008 	beq	4000ba5c <_tx_byte_release+0x4c>
4000ba38:	e5997004 	ldr	r7, [r9, #4]
4000ba3c:	e3570000 	cmp	r7, #0
4000ba40:	0a000003 	beq	4000ba54 <_tx_byte_release+0x44>
4000ba44:	e5970000 	ldr	r0, [r7]
4000ba48:	e59f125c 	ldr	r1, [pc, #604]	; 4000bcac <_tx_byte_release+0x29c>
4000ba4c:	e1500001 	cmp	r0, r1
4000ba50:	0a000005 	beq	4000ba6c <_tx_byte_release+0x5c>
4000ba54:	e3a00003 	mov	r0, #3
4000ba58:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000ba5c:	e3a00003 	mov	r0, #3
4000ba60:	eafffffc 	b	4000ba58 <_tx_byte_release+0x48>
4000ba64:	e3a00003 	mov	r0, #3
4000ba68:	eafffffa 	b	4000ba58 <_tx_byte_release+0x48>
4000ba6c:	e59f023c 	ldr	r0, [pc, #572]	; 4000bcb0 <_tx_byte_release+0x2a0>
4000ba70:	e5908000 	ldr	r8, [r0]
4000ba74:	e5878020 	str	r8, [r7, #32]
4000ba78:	e10f5000 	mrs	r5, CPSR
4000ba7c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba80:	e121f006 	msr	CPSR_c, r6
4000ba84:	e59f1228 	ldr	r1, [pc, #552]	; 4000bcb4 <_tx_byte_release+0x2a4>
4000ba88:	e5910000 	ldr	r0, [r1]
4000ba8c:	e3500000 	cmp	r0, #0
4000ba90:	0a000032 	beq	4000bb60 <_tx_byte_release+0x150>
4000ba94:	e59f121c 	ldr	r1, [pc, #540]	; 4000bcb8 <_tx_byte_release+0x2a8>
4000ba98:	e5911000 	ldr	r1, [r1]
4000ba9c:	e2811001 	add	r1, r1, #1
4000baa0:	e59f2210 	ldr	r2, [pc, #528]	; 4000bcb8 <_tx_byte_release+0x2a8>
4000baa4:	e5821000 	str	r1, [r2]
4000baa8:	e580100c 	str	r1, [r0, #12]
4000baac:	e59f1208 	ldr	r1, [pc, #520]	; 4000bcbc <_tx_byte_release+0x2ac>
4000bab0:	e5911000 	ldr	r1, [r1]
4000bab4:	e3510000 	cmp	r1, #0
4000bab8:	1a000006 	bne	4000bad8 <_tx_byte_release+0xc8>
4000babc:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bcb0 <_tx_byte_release+0x2a0>
4000bac0:	e5911000 	ldr	r1, [r1]
4000bac4:	e5801000 	str	r1, [r0]
4000bac8:	e5901000 	ldr	r1, [r0]
4000bacc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bad0:	e5801004 	str	r1, [r0, #4]
4000bad4:	ea00000d 	b	4000bb10 <_tx_byte_release+0x100>
4000bad8:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bcbc <_tx_byte_release+0x2ac>
4000badc:	e5911000 	ldr	r1, [r1]
4000bae0:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bcc0 <_tx_byte_release+0x2b0>
4000bae4:	e1510002 	cmp	r1, r2
4000bae8:	2a000004 	bcs	4000bb00 <_tx_byte_release+0xf0>
4000baec:	e3e01000 	mvn	r1, #0
4000baf0:	e5801000 	str	r1, [r0]
4000baf4:	e3a01000 	mov	r1, #0
4000baf8:	e5801004 	str	r1, [r0, #4]
4000bafc:	ea000003 	b	4000bb10 <_tx_byte_release+0x100>
4000bb00:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bcc0 <_tx_byte_release+0x2b0>
4000bb04:	e5801000 	str	r1, [r0]
4000bb08:	e3a01000 	mov	r1, #0
4000bb0c:	e5801004 	str	r1, [r0, #4]
4000bb10:	e3a0101b 	mov	r1, #27
4000bb14:	e5801008 	str	r1, [r0, #8]
4000bb18:	e5807010 	str	r7, [r0, #16]
4000bb1c:	e5804014 	str	r4, [r0, #20]
4000bb20:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000bb24:	e5801018 	str	r1, [r0, #24]
4000bb28:	e5971008 	ldr	r1, [r7, #8]
4000bb2c:	e580101c 	str	r1, [r0, #28]
4000bb30:	e2800020 	add	r0, r0, #32
4000bb34:	e59f1188 	ldr	r1, [pc, #392]	; 4000bcc4 <_tx_byte_release+0x2b4>
4000bb38:	e5911000 	ldr	r1, [r1]
4000bb3c:	e1500001 	cmp	r0, r1
4000bb40:	3a000001 	bcc	4000bb4c <_tx_byte_release+0x13c>
4000bb44:	e59f117c 	ldr	r1, [pc, #380]	; 4000bcc8 <_tx_byte_release+0x2b8>
4000bb48:	e5910000 	ldr	r0, [r1]
4000bb4c:	e59f1160 	ldr	r1, [pc, #352]	; 4000bcb4 <_tx_byte_release+0x2a4>
4000bb50:	e5810000 	str	r0, [r1]
4000bb54:	e59f1170 	ldr	r1, [pc, #368]	; 4000bccc <_tx_byte_release+0x2bc>
4000bb58:	e5911000 	ldr	r1, [r1]
4000bb5c:	e5810020 	str	r0, [r1, #32]
4000bb60:	e59f0168 	ldr	r0, [pc, #360]	; 4000bcd0 <_tx_byte_release+0x2c0>
4000bb64:	e5890004 	str	r0, [r9, #4]
4000bb68:	e5970008 	ldr	r0, [r7, #8]
4000bb6c:	e5991000 	ldr	r1, [r9]
4000bb70:	e0411009 	sub	r1, r1, r9
4000bb74:	e0800001 	add	r0, r0, r1
4000bb78:	e5870008 	str	r0, [r7, #8]
4000bb7c:	e5970014 	ldr	r0, [r7, #20]
4000bb80:	e1500009 	cmp	r0, r9
4000bb84:	9a000000 	bls	4000bb8c <_tx_byte_release+0x17c>
4000bb88:	e5879014 	str	r9, [r7, #20]
4000bb8c:	ea00003e 	b	4000bc8c <_tx_byte_release+0x27c>
4000bb90:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bb94:	e121f005 	msr	CPSR_c, r5
4000bb98:	e1a00007 	mov	r0, r7
4000bb9c:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bba0:	ebffff2c 	bl	4000b858 <_tx_byte_pool_search>
4000bba4:	e1a09000 	mov	r9, r0
4000bba8:	e10f5000 	mrs	r5, CPSR
4000bbac:	e3856080 	orr	r6, r5, #128	; 0x80
4000bbb0:	e121f006 	msr	CPSR_c, r6
4000bbb4:	e3590000 	cmp	r9, #0
4000bbb8:	1a000000 	bne	4000bbc0 <_tx_byte_release+0x1b0>
4000bbbc:	ea000035 	b	4000bc98 <_tx_byte_release+0x288>
4000bbc0:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bbc4:	e150000a 	cmp	r0, sl
4000bbc8:	0a00000c 	beq	4000bc00 <_tx_byte_release+0x1f0>
4000bbcc:	e2499008 	sub	r9, r9, #8
4000bbd0:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bcd0 <_tx_byte_release+0x2c0>
4000bbd4:	e5890004 	str	r0, [r9, #4]
4000bbd8:	e5970008 	ldr	r0, [r7, #8]
4000bbdc:	e5991000 	ldr	r1, [r9]
4000bbe0:	e0411009 	sub	r1, r1, r9
4000bbe4:	e0800001 	add	r0, r0, r1
4000bbe8:	e5870008 	str	r0, [r7, #8]
4000bbec:	e5970014 	ldr	r0, [r7, #20]
4000bbf0:	e1500009 	cmp	r0, r9
4000bbf4:	9a000000 	bls	4000bbfc <_tx_byte_release+0x1ec>
4000bbf8:	e5879014 	str	r9, [r7, #20]
4000bbfc:	ea000022 	b	4000bc8c <_tx_byte_release+0x27c>
4000bc00:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bc04:	e150000a 	cmp	r0, sl
4000bc08:	1a000002 	bne	4000bc18 <_tx_byte_release+0x208>
4000bc0c:	e3a00000 	mov	r0, #0
4000bc10:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bc14:	ea000007 	b	4000bc38 <_tx_byte_release+0x228>
4000bc18:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bc1c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bc20:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bc24:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bc28:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bc2c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bc30:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bc34:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bc38:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bc3c:	e2400001 	sub	r0, r0, #1
4000bc40:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bc44:	e3a00000 	mov	r0, #0
4000bc48:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bc4c:	e59f0080 	ldr	r0, [pc, #128]	; 4000bcd4 <_tx_byte_release+0x2c4>
4000bc50:	e5900000 	ldr	r0, [r0]
4000bc54:	e2800001 	add	r0, r0, #1
4000bc58:	e59f1074 	ldr	r1, [pc, #116]	; 4000bcd4 <_tx_byte_release+0x2c4>
4000bc5c:	e5810000 	str	r0, [r1]
4000bc60:	e121f005 	msr	CPSR_c, r5
4000bc64:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bc68:	e5809000 	str	r9, [r0]
4000bc6c:	e3a00000 	mov	r0, #0
4000bc70:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bc74:	e1a0000a 	mov	r0, sl
4000bc78:	eb000d96 	bl	4000f2d8 <_tx_thread_system_resume>
4000bc7c:	e10f5000 	mrs	r5, CPSR
4000bc80:	e3856080 	orr	r6, r5, #128	; 0x80
4000bc84:	e121f006 	msr	CPSR_c, r6
4000bc88:	e1a00000 	nop			; (mov r0, r0)
4000bc8c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bc90:	e3500000 	cmp	r0, #0
4000bc94:	1affffbd 	bne	4000bb90 <_tx_byte_release+0x180>
4000bc98:	e1a00000 	nop			; (mov r0, r0)
4000bc9c:	e121f005 	msr	CPSR_c, r5
4000bca0:	eb000d60 	bl	4000f228 <_tx_thread_system_preempt_check>
4000bca4:	e3a00000 	mov	r0, #0
4000bca8:	eaffff6a 	b	4000ba58 <_tx_byte_release+0x48>
4000bcac:	42595445 	.word	0x42595445
4000bcb0:	40030e50 	.word	0x40030e50
4000bcb4:	40030ebc 	.word	0x40030ebc
4000bcb8:	40030ec0 	.word	0x40030ec0
4000bcbc:	40030e48 	.word	0x40030e48
4000bcc0:	f0f0f0f0 	.word	0xf0f0f0f0
4000bcc4:	40030eb8 	.word	0x40030eb8
4000bcc8:	40030eb4 	.word	0x40030eb4
4000bccc:	40030ea8 	.word	0x40030ea8
4000bcd0:	ffffeeee 	.word	0xffffeeee
4000bcd4:	40030e6c 	.word	0x40030e6c

4000bcd8 <_tx_event_flags_create>:
4000bcd8:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bcdc:	e1a04000 	mov	r4, r0
4000bce0:	e1a05001 	mov	r5, r1
4000bce4:	e3a01028 	mov	r1, #40	; 0x28
4000bce8:	e1a00004 	mov	r0, r4
4000bcec:	eb001e34 	bl	400135c4 <__aeabi_memclr4>
4000bcf0:	e5845004 	str	r5, [r4, #4]
4000bcf4:	e10f6000 	mrs	r6, CPSR
4000bcf8:	e3867080 	orr	r7, r6, #128	; 0x80
4000bcfc:	e121f007 	msr	CPSR_c, r7
4000bd00:	e59f0170 	ldr	r0, [pc, #368]	; 4000be78 <_tx_event_flags_create+0x1a0>
4000bd04:	e5840000 	str	r0, [r4]
4000bd08:	e59f016c 	ldr	r0, [pc, #364]	; 4000be7c <_tx_event_flags_create+0x1a4>
4000bd0c:	e5900000 	ldr	r0, [r0]
4000bd10:	e3500000 	cmp	r0, #0
4000bd14:	0a00000e 	beq	4000bd54 <_tx_event_flags_create+0x7c>
4000bd18:	e59f015c 	ldr	r0, [pc, #348]	; 4000be7c <_tx_event_flags_create+0x1a4>
4000bd1c:	e5900000 	ldr	r0, [r0]
4000bd20:	e590001c 	ldr	r0, [r0, #28]
4000bd24:	e58d0004 	str	r0, [sp, #4]
4000bd28:	e59f014c 	ldr	r0, [pc, #332]	; 4000be7c <_tx_event_flags_create+0x1a4>
4000bd2c:	e5900000 	ldr	r0, [r0]
4000bd30:	e580401c 	str	r4, [r0, #28]
4000bd34:	e59d0004 	ldr	r0, [sp, #4]
4000bd38:	e5804018 	str	r4, [r0, #24]
4000bd3c:	e59d0004 	ldr	r0, [sp, #4]
4000bd40:	e584001c 	str	r0, [r4, #28]
4000bd44:	e59f0130 	ldr	r0, [pc, #304]	; 4000be7c <_tx_event_flags_create+0x1a4>
4000bd48:	e5900000 	ldr	r0, [r0]
4000bd4c:	e5840018 	str	r0, [r4, #24]
4000bd50:	ea000003 	b	4000bd64 <_tx_event_flags_create+0x8c>
4000bd54:	e59f0120 	ldr	r0, [pc, #288]	; 4000be7c <_tx_event_flags_create+0x1a4>
4000bd58:	e5804000 	str	r4, [r0]
4000bd5c:	e5844018 	str	r4, [r4, #24]
4000bd60:	e584401c 	str	r4, [r4, #28]
4000bd64:	e59f0114 	ldr	r0, [pc, #276]	; 4000be80 <_tx_event_flags_create+0x1a8>
4000bd68:	e5900000 	ldr	r0, [r0]
4000bd6c:	e2800001 	add	r0, r0, #1
4000bd70:	e59f1108 	ldr	r1, [pc, #264]	; 4000be80 <_tx_event_flags_create+0x1a8>
4000bd74:	e5810000 	str	r0, [r1]
4000bd78:	e3a03000 	mov	r3, #0
4000bd7c:	e1a02005 	mov	r2, r5
4000bd80:	e1a01004 	mov	r1, r4
4000bd84:	e3a00006 	mov	r0, #6
4000bd88:	e58d3000 	str	r3, [sp]
4000bd8c:	eb0010a7 	bl	40010030 <_tx_trace_object_register>
4000bd90:	e59f10ec 	ldr	r1, [pc, #236]	; 4000be84 <_tx_event_flags_create+0x1ac>
4000bd94:	e5910000 	ldr	r0, [r1]
4000bd98:	e3500000 	cmp	r0, #0
4000bd9c:	0a000032 	beq	4000be6c <_tx_event_flags_create+0x194>
4000bda0:	e59f10e0 	ldr	r1, [pc, #224]	; 4000be88 <_tx_event_flags_create+0x1b0>
4000bda4:	e5911000 	ldr	r1, [r1]
4000bda8:	e2811001 	add	r1, r1, #1
4000bdac:	e59f20d4 	ldr	r2, [pc, #212]	; 4000be88 <_tx_event_flags_create+0x1b0>
4000bdb0:	e5821000 	str	r1, [r2]
4000bdb4:	e580100c 	str	r1, [r0, #12]
4000bdb8:	e59f10cc 	ldr	r1, [pc, #204]	; 4000be8c <_tx_event_flags_create+0x1b4>
4000bdbc:	e5911000 	ldr	r1, [r1]
4000bdc0:	e3510000 	cmp	r1, #0
4000bdc4:	1a000006 	bne	4000bde4 <_tx_event_flags_create+0x10c>
4000bdc8:	e59f10c0 	ldr	r1, [pc, #192]	; 4000be90 <_tx_event_flags_create+0x1b8>
4000bdcc:	e5911000 	ldr	r1, [r1]
4000bdd0:	e5801000 	str	r1, [r0]
4000bdd4:	e5901000 	ldr	r1, [r0]
4000bdd8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bddc:	e5801004 	str	r1, [r0, #4]
4000bde0:	ea00000d 	b	4000be1c <_tx_event_flags_create+0x144>
4000bde4:	e59f10a0 	ldr	r1, [pc, #160]	; 4000be8c <_tx_event_flags_create+0x1b4>
4000bde8:	e5911000 	ldr	r1, [r1]
4000bdec:	e59f20a0 	ldr	r2, [pc, #160]	; 4000be94 <_tx_event_flags_create+0x1bc>
4000bdf0:	e1510002 	cmp	r1, r2
4000bdf4:	2a000004 	bcs	4000be0c <_tx_event_flags_create+0x134>
4000bdf8:	e3e01000 	mvn	r1, #0
4000bdfc:	e5801000 	str	r1, [r0]
4000be00:	e3a01000 	mov	r1, #0
4000be04:	e5801004 	str	r1, [r0, #4]
4000be08:	ea000003 	b	4000be1c <_tx_event_flags_create+0x144>
4000be0c:	e59f1080 	ldr	r1, [pc, #128]	; 4000be94 <_tx_event_flags_create+0x1bc>
4000be10:	e5801000 	str	r1, [r0]
4000be14:	e3a01000 	mov	r1, #0
4000be18:	e5801004 	str	r1, [r0, #4]
4000be1c:	e3a0101e 	mov	r1, #30
4000be20:	e5801008 	str	r1, [r0, #8]
4000be24:	e5804010 	str	r4, [r0, #16]
4000be28:	e28d1004 	add	r1, sp, #4
4000be2c:	e5801014 	str	r1, [r0, #20]
4000be30:	e3a01000 	mov	r1, #0
4000be34:	e5801018 	str	r1, [r0, #24]
4000be38:	e580101c 	str	r1, [r0, #28]
4000be3c:	e2800020 	add	r0, r0, #32
4000be40:	e59f1050 	ldr	r1, [pc, #80]	; 4000be98 <_tx_event_flags_create+0x1c0>
4000be44:	e5911000 	ldr	r1, [r1]
4000be48:	e1500001 	cmp	r0, r1
4000be4c:	3a000001 	bcc	4000be58 <_tx_event_flags_create+0x180>
4000be50:	e59f1044 	ldr	r1, [pc, #68]	; 4000be9c <_tx_event_flags_create+0x1c4>
4000be54:	e5910000 	ldr	r0, [r1]
4000be58:	e59f1024 	ldr	r1, [pc, #36]	; 4000be84 <_tx_event_flags_create+0x1ac>
4000be5c:	e5810000 	str	r0, [r1]
4000be60:	e59f1038 	ldr	r1, [pc, #56]	; 4000bea0 <_tx_event_flags_create+0x1c8>
4000be64:	e5911000 	ldr	r1, [r1]
4000be68:	e5810020 	str	r0, [r1, #32]
4000be6c:	e121f006 	msr	CPSR_c, r6
4000be70:	e3a00000 	mov	r0, #0
4000be74:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000be78:	4456444e 	.word	0x4456444e
4000be7c:	40030ed4 	.word	0x40030ed4
4000be80:	40030ed8 	.word	0x40030ed8
4000be84:	40030ebc 	.word	0x40030ebc
4000be88:	40030ec0 	.word	0x40030ec0
4000be8c:	40030e48 	.word	0x40030e48
4000be90:	40030e50 	.word	0x40030e50
4000be94:	f0f0f0f0 	.word	0xf0f0f0f0
4000be98:	40030eb8 	.word	0x40030eb8
4000be9c:	40030eb4 	.word	0x40030eb4
4000bea0:	40030ea8 	.word	0x40030ea8

4000bea4 <_tx_event_flags_delete>:
4000bea4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000bea8:	e1a04000 	mov	r4, r0
4000beac:	e10f5000 	mrs	r5, CPSR
4000beb0:	e3856080 	orr	r6, r5, #128	; 0x80
4000beb4:	e121f006 	msr	CPSR_c, r6
4000beb8:	e59f1204 	ldr	r1, [pc, #516]	; 4000c0c4 <_tx_event_flags_delete+0x220>
4000bebc:	e5910000 	ldr	r0, [r1]
4000bec0:	e3500000 	cmp	r0, #0
4000bec4:	0a000031 	beq	4000bf90 <_tx_event_flags_delete+0xec>
4000bec8:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c0c8 <_tx_event_flags_delete+0x224>
4000becc:	e5911000 	ldr	r1, [r1]
4000bed0:	e2811001 	add	r1, r1, #1
4000bed4:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c0c8 <_tx_event_flags_delete+0x224>
4000bed8:	e5821000 	str	r1, [r2]
4000bedc:	e580100c 	str	r1, [r0, #12]
4000bee0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c0cc <_tx_event_flags_delete+0x228>
4000bee4:	e5911000 	ldr	r1, [r1]
4000bee8:	e3510000 	cmp	r1, #0
4000beec:	1a000006 	bne	4000bf0c <_tx_event_flags_delete+0x68>
4000bef0:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c0d0 <_tx_event_flags_delete+0x22c>
4000bef4:	e5911000 	ldr	r1, [r1]
4000bef8:	e5801000 	str	r1, [r0]
4000befc:	e5901000 	ldr	r1, [r0]
4000bf00:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bf04:	e5801004 	str	r1, [r0, #4]
4000bf08:	ea00000d 	b	4000bf44 <_tx_event_flags_delete+0xa0>
4000bf0c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c0cc <_tx_event_flags_delete+0x228>
4000bf10:	e5911000 	ldr	r1, [r1]
4000bf14:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c0d4 <_tx_event_flags_delete+0x230>
4000bf18:	e1510002 	cmp	r1, r2
4000bf1c:	2a000004 	bcs	4000bf34 <_tx_event_flags_delete+0x90>
4000bf20:	e3e01000 	mvn	r1, #0
4000bf24:	e5801000 	str	r1, [r0]
4000bf28:	e3a01000 	mov	r1, #0
4000bf2c:	e5801004 	str	r1, [r0, #4]
4000bf30:	ea000003 	b	4000bf44 <_tx_event_flags_delete+0xa0>
4000bf34:	e59f1198 	ldr	r1, [pc, #408]	; 4000c0d4 <_tx_event_flags_delete+0x230>
4000bf38:	e5801000 	str	r1, [r0]
4000bf3c:	e3a01000 	mov	r1, #0
4000bf40:	e5801004 	str	r1, [r0, #4]
4000bf44:	e3a0101f 	mov	r1, #31
4000bf48:	e5801008 	str	r1, [r0, #8]
4000bf4c:	e5804010 	str	r4, [r0, #16]
4000bf50:	e580d014 	str	sp, [r0, #20]
4000bf54:	e3a01000 	mov	r1, #0
4000bf58:	e5801018 	str	r1, [r0, #24]
4000bf5c:	e580101c 	str	r1, [r0, #28]
4000bf60:	e2800020 	add	r0, r0, #32
4000bf64:	e59f116c 	ldr	r1, [pc, #364]	; 4000c0d8 <_tx_event_flags_delete+0x234>
4000bf68:	e5911000 	ldr	r1, [r1]
4000bf6c:	e1500001 	cmp	r0, r1
4000bf70:	3a000001 	bcc	4000bf7c <_tx_event_flags_delete+0xd8>
4000bf74:	e59f1160 	ldr	r1, [pc, #352]	; 4000c0dc <_tx_event_flags_delete+0x238>
4000bf78:	e5910000 	ldr	r0, [r1]
4000bf7c:	e59f1140 	ldr	r1, [pc, #320]	; 4000c0c4 <_tx_event_flags_delete+0x220>
4000bf80:	e5810000 	str	r0, [r1]
4000bf84:	e59f1154 	ldr	r1, [pc, #340]	; 4000c0e0 <_tx_event_flags_delete+0x23c>
4000bf88:	e5911000 	ldr	r1, [r1]
4000bf8c:	e5810020 	str	r0, [r1, #32]
4000bf90:	e1a00004 	mov	r0, r4
4000bf94:	eb001090 	bl	400101dc <_tx_trace_object_unregister>
4000bf98:	e59f0144 	ldr	r0, [pc, #324]	; 4000c0e4 <_tx_event_flags_delete+0x240>
4000bf9c:	e5900000 	ldr	r0, [r0]
4000bfa0:	e2400001 	sub	r0, r0, #1
4000bfa4:	e59f1138 	ldr	r1, [pc, #312]	; 4000c0e4 <_tx_event_flags_delete+0x240>
4000bfa8:	e5810000 	str	r0, [r1]
4000bfac:	e3a00000 	mov	r0, #0
4000bfb0:	e5840000 	str	r0, [r4]
4000bfb4:	e5940018 	ldr	r0, [r4, #24]
4000bfb8:	e1500004 	cmp	r0, r4
4000bfbc:	1a000003 	bne	4000bfd0 <_tx_event_flags_delete+0x12c>
4000bfc0:	e3a00000 	mov	r0, #0
4000bfc4:	e59f111c 	ldr	r1, [pc, #284]	; 4000c0e8 <_tx_event_flags_delete+0x244>
4000bfc8:	e5810000 	str	r0, [r1]
4000bfcc:	ea00000c 	b	4000c004 <_tx_event_flags_delete+0x160>
4000bfd0:	e594001c 	ldr	r0, [r4, #28]
4000bfd4:	e5941018 	ldr	r1, [r4, #24]
4000bfd8:	e581001c 	str	r0, [r1, #28]
4000bfdc:	e5940018 	ldr	r0, [r4, #24]
4000bfe0:	e594101c 	ldr	r1, [r4, #28]
4000bfe4:	e5810018 	str	r0, [r1, #24]
4000bfe8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c0e8 <_tx_event_flags_delete+0x244>
4000bfec:	e5900000 	ldr	r0, [r0]
4000bff0:	e1500004 	cmp	r0, r4
4000bff4:	1a000002 	bne	4000c004 <_tx_event_flags_delete+0x160>
4000bff8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c0e8 <_tx_event_flags_delete+0x244>
4000bffc:	e5940018 	ldr	r0, [r4, #24]
4000c000:	e5810000 	str	r0, [r1]
4000c004:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c0ec <_tx_event_flags_delete+0x248>
4000c008:	e5900000 	ldr	r0, [r0]
4000c00c:	e2800001 	add	r0, r0, #1
4000c010:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c0ec <_tx_event_flags_delete+0x248>
4000c014:	e5810000 	str	r0, [r1]
4000c018:	e121f005 	msr	CPSR_c, r5
4000c01c:	e5940010 	ldr	r0, [r4, #16]
4000c020:	e58d0000 	str	r0, [sp]
4000c024:	ea000017 	b	4000c088 <_tx_event_flags_delete+0x1e4>
4000c028:	e10f5000 	mrs	r5, CPSR
4000c02c:	e3856080 	orr	r6, r5, #128	; 0x80
4000c030:	e121f006 	msr	CPSR_c, r6
4000c034:	e3a00000 	mov	r0, #0
4000c038:	e59d1000 	ldr	r1, [sp]
4000c03c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c040:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c0ec <_tx_event_flags_delete+0x248>
4000c044:	e5900000 	ldr	r0, [r0]
4000c048:	e2800001 	add	r0, r0, #1
4000c04c:	e59f1098 	ldr	r1, [pc, #152]	; 4000c0ec <_tx_event_flags_delete+0x248>
4000c050:	e5810000 	str	r0, [r1]
4000c054:	e121f005 	msr	CPSR_c, r5
4000c058:	e3a00001 	mov	r0, #1
4000c05c:	e59d1000 	ldr	r1, [sp]
4000c060:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c064:	e59d0000 	ldr	r0, [sp]
4000c068:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c06c:	e58d0000 	str	r0, [sp]
4000c070:	e59d1000 	ldr	r1, [sp]
4000c074:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c078:	eb000c96 	bl	4000f2d8 <_tx_thread_system_resume>
4000c07c:	e5940014 	ldr	r0, [r4, #20]
4000c080:	e2400001 	sub	r0, r0, #1
4000c084:	e5840014 	str	r0, [r4, #20]
4000c088:	e5940014 	ldr	r0, [r4, #20]
4000c08c:	e3500000 	cmp	r0, #0
4000c090:	1affffe4 	bne	4000c028 <_tx_event_flags_delete+0x184>
4000c094:	e10f5000 	mrs	r5, CPSR
4000c098:	e3856080 	orr	r6, r5, #128	; 0x80
4000c09c:	e121f006 	msr	CPSR_c, r6
4000c0a0:	e59f0044 	ldr	r0, [pc, #68]	; 4000c0ec <_tx_event_flags_delete+0x248>
4000c0a4:	e5900000 	ldr	r0, [r0]
4000c0a8:	e2400001 	sub	r0, r0, #1
4000c0ac:	e59f1038 	ldr	r1, [pc, #56]	; 4000c0ec <_tx_event_flags_delete+0x248>
4000c0b0:	e5810000 	str	r0, [r1]
4000c0b4:	e121f005 	msr	CPSR_c, r5
4000c0b8:	eb000c5a 	bl	4000f228 <_tx_thread_system_preempt_check>
4000c0bc:	e3a00000 	mov	r0, #0
4000c0c0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c0c4:	40030ebc 	.word	0x40030ebc
4000c0c8:	40030ec0 	.word	0x40030ec0
4000c0cc:	40030e48 	.word	0x40030e48
4000c0d0:	40030e50 	.word	0x40030e50
4000c0d4:	f0f0f0f0 	.word	0xf0f0f0f0
4000c0d8:	40030eb8 	.word	0x40030eb8
4000c0dc:	40030eb4 	.word	0x40030eb4
4000c0e0:	40030ea8 	.word	0x40030ea8
4000c0e4:	40030ed8 	.word	0x40030ed8
4000c0e8:	40030ed4 	.word	0x40030ed4
4000c0ec:	40030e6c 	.word	0x40030e6c

4000c0f0 <_tx_event_flags_get>:
4000c0f0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c0f4:	e1a04000 	mov	r4, r0
4000c0f8:	e1a05001 	mov	r5, r1
4000c0fc:	e1a06002 	mov	r6, r2
4000c100:	e1a07003 	mov	r7, r3
4000c104:	e10f8000 	mrs	r8, CPSR
4000c108:	e3880080 	orr	r0, r8, #128	; 0x80
4000c10c:	e58d0004 	str	r0, [sp, #4]
4000c110:	e59d0004 	ldr	r0, [sp, #4]
4000c114:	e121f000 	msr	CPSR_c, r0
4000c118:	e59f1278 	ldr	r1, [pc, #632]	; 4000c398 <_tx_event_flags_get+0x2a8>
4000c11c:	e5910000 	ldr	r0, [r1]
4000c120:	e3500000 	cmp	r0, #0
4000c124:	0a000031 	beq	4000c1f0 <_tx_event_flags_get+0x100>
4000c128:	e59f126c 	ldr	r1, [pc, #620]	; 4000c39c <_tx_event_flags_get+0x2ac>
4000c12c:	e5911000 	ldr	r1, [r1]
4000c130:	e2811001 	add	r1, r1, #1
4000c134:	e59f2260 	ldr	r2, [pc, #608]	; 4000c39c <_tx_event_flags_get+0x2ac>
4000c138:	e5821000 	str	r1, [r2]
4000c13c:	e580100c 	str	r1, [r0, #12]
4000c140:	e59f1258 	ldr	r1, [pc, #600]	; 4000c3a0 <_tx_event_flags_get+0x2b0>
4000c144:	e5911000 	ldr	r1, [r1]
4000c148:	e3510000 	cmp	r1, #0
4000c14c:	1a000006 	bne	4000c16c <_tx_event_flags_get+0x7c>
4000c150:	e59f124c 	ldr	r1, [pc, #588]	; 4000c3a4 <_tx_event_flags_get+0x2b4>
4000c154:	e5911000 	ldr	r1, [r1]
4000c158:	e5801000 	str	r1, [r0]
4000c15c:	e5901000 	ldr	r1, [r0]
4000c160:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c164:	e5801004 	str	r1, [r0, #4]
4000c168:	ea00000d 	b	4000c1a4 <_tx_event_flags_get+0xb4>
4000c16c:	e59f122c 	ldr	r1, [pc, #556]	; 4000c3a0 <_tx_event_flags_get+0x2b0>
4000c170:	e5911000 	ldr	r1, [r1]
4000c174:	e59f222c 	ldr	r2, [pc, #556]	; 4000c3a8 <_tx_event_flags_get+0x2b8>
4000c178:	e1510002 	cmp	r1, r2
4000c17c:	2a000004 	bcs	4000c194 <_tx_event_flags_get+0xa4>
4000c180:	e3e01000 	mvn	r1, #0
4000c184:	e5801000 	str	r1, [r0]
4000c188:	e3a01000 	mov	r1, #0
4000c18c:	e5801004 	str	r1, [r0, #4]
4000c190:	ea000003 	b	4000c1a4 <_tx_event_flags_get+0xb4>
4000c194:	e59f120c 	ldr	r1, [pc, #524]	; 4000c3a8 <_tx_event_flags_get+0x2b8>
4000c198:	e5801000 	str	r1, [r0]
4000c19c:	e3a01000 	mov	r1, #0
4000c1a0:	e5801004 	str	r1, [r0, #4]
4000c1a4:	e3a01020 	mov	r1, #32
4000c1a8:	e5801008 	str	r1, [r0, #8]
4000c1ac:	e5804010 	str	r4, [r0, #16]
4000c1b0:	e5805014 	str	r5, [r0, #20]
4000c1b4:	e5941008 	ldr	r1, [r4, #8]
4000c1b8:	e5801018 	str	r1, [r0, #24]
4000c1bc:	e580601c 	str	r6, [r0, #28]
4000c1c0:	e2800020 	add	r0, r0, #32
4000c1c4:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c3ac <_tx_event_flags_get+0x2bc>
4000c1c8:	e5911000 	ldr	r1, [r1]
4000c1cc:	e1500001 	cmp	r0, r1
4000c1d0:	3a000001 	bcc	4000c1dc <_tx_event_flags_get+0xec>
4000c1d4:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c3b0 <_tx_event_flags_get+0x2c0>
4000c1d8:	e5910000 	ldr	r0, [r1]
4000c1dc:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c398 <_tx_event_flags_get+0x2a8>
4000c1e0:	e5810000 	str	r0, [r1]
4000c1e4:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c3b4 <_tx_event_flags_get+0x2c4>
4000c1e8:	e5911000 	ldr	r1, [r1]
4000c1ec:	e5810020 	str	r0, [r1, #32]
4000c1f0:	e594a008 	ldr	sl, [r4, #8]
4000c1f4:	e594b020 	ldr	fp, [r4, #32]
4000c1f8:	e35b0000 	cmp	fp, #0
4000c1fc:	0a000000 	beq	4000c204 <_tx_event_flags_get+0x114>
4000c200:	e1caa00b 	bic	sl, sl, fp
4000c204:	e3160002 	tst	r6, #2
4000c208:	0a000006 	beq	4000c228 <_tx_event_flags_get+0x138>
4000c20c:	e00a0005 	and	r0, sl, r5
4000c210:	e1500005 	cmp	r0, r5
4000c214:	1a000001 	bne	4000c220 <_tx_event_flags_get+0x130>
4000c218:	e3a09000 	mov	r9, #0
4000c21c:	ea000006 	b	4000c23c <_tx_event_flags_get+0x14c>
4000c220:	e3a09007 	mov	r9, #7
4000c224:	ea000004 	b	4000c23c <_tx_event_flags_get+0x14c>
4000c228:	e11a0005 	tst	sl, r5
4000c22c:	0a000001 	beq	4000c238 <_tx_event_flags_get+0x148>
4000c230:	e3a09000 	mov	r9, #0
4000c234:	ea000000 	b	4000c23c <_tx_event_flags_get+0x14c>
4000c238:	e3a09007 	mov	r9, #7
4000c23c:	e3590000 	cmp	r9, #0
4000c240:	1a000010 	bne	4000c288 <_tx_event_flags_get+0x198>
4000c244:	e587a000 	str	sl, [r7]
4000c248:	e3160001 	tst	r6, #1
4000c24c:	0a00004e 	beq	4000c38c <_tx_event_flags_get+0x29c>
4000c250:	e5940014 	ldr	r0, [r4, #20]
4000c254:	e3500000 	cmp	r0, #0
4000c258:	0a000006 	beq	4000c278 <_tx_event_flags_get+0x188>
4000c25c:	e5940010 	ldr	r0, [r4, #16]
4000c260:	e3500000 	cmp	r0, #0
4000c264:	1a000003 	bne	4000c278 <_tx_event_flags_get+0x188>
4000c268:	e5940020 	ldr	r0, [r4, #32]
4000c26c:	e1800005 	orr	r0, r0, r5
4000c270:	e5840020 	str	r0, [r4, #32]
4000c274:	ea000044 	b	4000c38c <_tx_event_flags_get+0x29c>
4000c278:	e5940008 	ldr	r0, [r4, #8]
4000c27c:	e1c00005 	bic	r0, r0, r5
4000c280:	e5840008 	str	r0, [r4, #8]
4000c284:	ea000040 	b	4000c38c <_tx_event_flags_get+0x29c>
4000c288:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c28c:	e3500000 	cmp	r0, #0
4000c290:	0a00003c 	beq	4000c388 <_tx_event_flags_get+0x298>
4000c294:	e59f0108 	ldr	r0, [pc, #264]	; 4000c3a4 <_tx_event_flags_get+0x2b4>
4000c298:	e5900000 	ldr	r0, [r0]
4000c29c:	e58d0000 	str	r0, [sp]
4000c2a0:	e59f1110 	ldr	r1, [pc, #272]	; 4000c3b8 <_tx_event_flags_get+0x2c8>
4000c2a4:	e59d0000 	ldr	r0, [sp]
4000c2a8:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c2ac:	e59d0000 	ldr	r0, [sp]
4000c2b0:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c2b4:	e59d0000 	ldr	r0, [sp]
4000c2b8:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c2bc:	e59d0000 	ldr	r0, [sp]
4000c2c0:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c2c4:	e59d0000 	ldr	r0, [sp]
4000c2c8:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c2cc:	e5940010 	ldr	r0, [r4, #16]
4000c2d0:	e3500000 	cmp	r0, #0
4000c2d4:	0a00000e 	beq	4000c314 <_tx_event_flags_get+0x224>
4000c2d8:	e5941010 	ldr	r1, [r4, #16]
4000c2dc:	e59d0000 	ldr	r0, [sp]
4000c2e0:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c2e4:	e5940010 	ldr	r0, [r4, #16]
4000c2e8:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c2ec:	e59d0000 	ldr	r0, [sp]
4000c2f0:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c2f4:	e59d0000 	ldr	r0, [sp]
4000c2f8:	e5941010 	ldr	r1, [r4, #16]
4000c2fc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c300:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c304:	e59d0000 	ldr	r0, [sp]
4000c308:	e5941010 	ldr	r1, [r4, #16]
4000c30c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c310:	ea000005 	b	4000c32c <_tx_event_flags_get+0x23c>
4000c314:	e59d0000 	ldr	r0, [sp]
4000c318:	e5840010 	str	r0, [r4, #16]
4000c31c:	e59d0000 	ldr	r0, [sp]
4000c320:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c324:	e59d0000 	ldr	r0, [sp]
4000c328:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c32c:	e5940014 	ldr	r0, [r4, #20]
4000c330:	e2800001 	add	r0, r0, #1
4000c334:	e5840014 	str	r0, [r4, #20]
4000c338:	e3a00007 	mov	r0, #7
4000c33c:	e59d1000 	ldr	r1, [sp]
4000c340:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c344:	e3a01001 	mov	r1, #1
4000c348:	e59d0000 	ldr	r0, [sp]
4000c34c:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c350:	e59d0000 	ldr	r0, [sp]
4000c354:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c358:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c35c:	e59f0058 	ldr	r0, [pc, #88]	; 4000c3bc <_tx_event_flags_get+0x2cc>
4000c360:	e5900000 	ldr	r0, [r0]
4000c364:	e2800001 	add	r0, r0, #1
4000c368:	e59f104c 	ldr	r1, [pc, #76]	; 4000c3bc <_tx_event_flags_get+0x2cc>
4000c36c:	e5810000 	str	r0, [r1]
4000c370:	e121f008 	msr	CPSR_c, r8
4000c374:	e59d0000 	ldr	r0, [sp]
4000c378:	ebfff22f 	bl	40008c3c <_tx_thread_system_suspend>
4000c37c:	e59d0000 	ldr	r0, [sp]
4000c380:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c384:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c388:	e3a09007 	mov	r9, #7
4000c38c:	e121f008 	msr	CPSR_c, r8
4000c390:	e1a00009 	mov	r0, r9
4000c394:	eafffffa 	b	4000c384 <_tx_event_flags_get+0x294>
4000c398:	40030ebc 	.word	0x40030ebc
4000c39c:	40030ec0 	.word	0x40030ec0
4000c3a0:	40030e48 	.word	0x40030e48
4000c3a4:	40030e50 	.word	0x40030e50
4000c3a8:	f0f0f0f0 	.word	0xf0f0f0f0
4000c3ac:	40030eb8 	.word	0x40030eb8
4000c3b0:	40030eb4 	.word	0x40030eb4
4000c3b4:	40030ea8 	.word	0x40030ea8
4000c3b8:	400102e8 	.word	0x400102e8
4000c3bc:	40030e6c 	.word	0x40030e6c

4000c3c0 <_tx_event_flags_set>:
4000c3c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c3c4:	e24dd01c 	sub	sp, sp, #28
4000c3c8:	e1a04000 	mov	r4, r0
4000c3cc:	e1a05001 	mov	r5, r1
4000c3d0:	e1a06002 	mov	r6, r2
4000c3d4:	e10f7000 	mrs	r7, CPSR
4000c3d8:	e3870080 	orr	r0, r7, #128	; 0x80
4000c3dc:	e58d0018 	str	r0, [sp, #24]
4000c3e0:	e59d0018 	ldr	r0, [sp, #24]
4000c3e4:	e121f000 	msr	CPSR_c, r0
4000c3e8:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c984 <_tx_event_flags_set+0x5c4>
4000c3ec:	e5910000 	ldr	r0, [r1]
4000c3f0:	e3500000 	cmp	r0, #0
4000c3f4:	0a000031 	beq	4000c4c0 <_tx_event_flags_set+0x100>
4000c3f8:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c988 <_tx_event_flags_set+0x5c8>
4000c3fc:	e5911000 	ldr	r1, [r1]
4000c400:	e2811001 	add	r1, r1, #1
4000c404:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c988 <_tx_event_flags_set+0x5c8>
4000c408:	e5821000 	str	r1, [r2]
4000c40c:	e580100c 	str	r1, [r0, #12]
4000c410:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c98c <_tx_event_flags_set+0x5cc>
4000c414:	e5911000 	ldr	r1, [r1]
4000c418:	e3510000 	cmp	r1, #0
4000c41c:	1a000006 	bne	4000c43c <_tx_event_flags_set+0x7c>
4000c420:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c990 <_tx_event_flags_set+0x5d0>
4000c424:	e5911000 	ldr	r1, [r1]
4000c428:	e5801000 	str	r1, [r0]
4000c42c:	e5901000 	ldr	r1, [r0]
4000c430:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c434:	e5801004 	str	r1, [r0, #4]
4000c438:	ea00000d 	b	4000c474 <_tx_event_flags_set+0xb4>
4000c43c:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c98c <_tx_event_flags_set+0x5cc>
4000c440:	e5911000 	ldr	r1, [r1]
4000c444:	e59f2548 	ldr	r2, [pc, #1352]	; 4000c994 <_tx_event_flags_set+0x5d4>
4000c448:	e1510002 	cmp	r1, r2
4000c44c:	2a000004 	bcs	4000c464 <_tx_event_flags_set+0xa4>
4000c450:	e3e01000 	mvn	r1, #0
4000c454:	e5801000 	str	r1, [r0]
4000c458:	e3a01000 	mov	r1, #0
4000c45c:	e5801004 	str	r1, [r0, #4]
4000c460:	ea000003 	b	4000c474 <_tx_event_flags_set+0xb4>
4000c464:	e59f1528 	ldr	r1, [pc, #1320]	; 4000c994 <_tx_event_flags_set+0x5d4>
4000c468:	e5801000 	str	r1, [r0]
4000c46c:	e3a01000 	mov	r1, #0
4000c470:	e5801004 	str	r1, [r0, #4]
4000c474:	e3a01024 	mov	r1, #36	; 0x24
4000c478:	e5801008 	str	r1, [r0, #8]
4000c47c:	e5804010 	str	r4, [r0, #16]
4000c480:	e5805014 	str	r5, [r0, #20]
4000c484:	e5806018 	str	r6, [r0, #24]
4000c488:	e5941014 	ldr	r1, [r4, #20]
4000c48c:	e580101c 	str	r1, [r0, #28]
4000c490:	e2800020 	add	r0, r0, #32
4000c494:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000c998 <_tx_event_flags_set+0x5d8>
4000c498:	e5911000 	ldr	r1, [r1]
4000c49c:	e1500001 	cmp	r0, r1
4000c4a0:	3a000001 	bcc	4000c4ac <_tx_event_flags_set+0xec>
4000c4a4:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000c99c <_tx_event_flags_set+0x5dc>
4000c4a8:	e5910000 	ldr	r0, [r1]
4000c4ac:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c984 <_tx_event_flags_set+0x5c4>
4000c4b0:	e5810000 	str	r0, [r1]
4000c4b4:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000c9a0 <_tx_event_flags_set+0x5e0>
4000c4b8:	e5911000 	ldr	r1, [r1]
4000c4bc:	e5810020 	str	r0, [r1, #32]
4000c4c0:	e3160002 	tst	r6, #2
4000c4c4:	0a000011 	beq	4000c510 <_tx_event_flags_set+0x150>
4000c4c8:	e5940014 	ldr	r0, [r4, #20]
4000c4cc:	e3500000 	cmp	r0, #0
4000c4d0:	0a000007 	beq	4000c4f4 <_tx_event_flags_set+0x134>
4000c4d4:	e5940010 	ldr	r0, [r4, #16]
4000c4d8:	e3500000 	cmp	r0, #0
4000c4dc:	1a000004 	bne	4000c4f4 <_tx_event_flags_set+0x134>
4000c4e0:	e1e01005 	mvn	r1, r5
4000c4e4:	e5940020 	ldr	r0, [r4, #32]
4000c4e8:	e1800001 	orr	r0, r0, r1
4000c4ec:	e5840020 	str	r0, [r4, #32]
4000c4f0:	ea000002 	b	4000c500 <_tx_event_flags_set+0x140>
4000c4f4:	e5940008 	ldr	r0, [r4, #8]
4000c4f8:	e0000005 	and	r0, r0, r5
4000c4fc:	e5840008 	str	r0, [r4, #8]
4000c500:	e121f007 	msr	CPSR_c, r7
4000c504:	e3a00000 	mov	r0, #0
4000c508:	e28dd01c 	add	sp, sp, #28
4000c50c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c510:	e5940008 	ldr	r0, [r4, #8]
4000c514:	e1800005 	orr	r0, r0, r5
4000c518:	e5840008 	str	r0, [r4, #8]
4000c51c:	e5940020 	ldr	r0, [r4, #32]
4000c520:	e3500000 	cmp	r0, #0
4000c524:	0a000002 	beq	4000c534 <_tx_event_flags_set+0x174>
4000c528:	e5940020 	ldr	r0, [r4, #32]
4000c52c:	e1c00005 	bic	r0, r0, r5
4000c530:	e5840020 	str	r0, [r4, #32]
4000c534:	e5940010 	ldr	r0, [r4, #16]
4000c538:	e3500000 	cmp	r0, #0
4000c53c:	0a000102 	beq	4000c94c <_tx_event_flags_set+0x58c>
4000c540:	e5940014 	ldr	r0, [r4, #20]
4000c544:	e3500001 	cmp	r0, #1
4000c548:	1a000048 	bne	4000c670 <_tx_event_flags_set+0x2b0>
4000c54c:	e5940010 	ldr	r0, [r4, #16]
4000c550:	e58d0014 	str	r0, [sp, #20]
4000c554:	e59d0014 	ldr	r0, [sp, #20]
4000c558:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c55c:	e3100002 	tst	r0, #2
4000c560:	0a00000b 	beq	4000c594 <_tx_event_flags_set+0x1d4>
4000c564:	e5940008 	ldr	r0, [r4, #8]
4000c568:	e59d1014 	ldr	r1, [sp, #20]
4000c56c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c570:	e0000001 	and	r0, r0, r1
4000c574:	e59d1014 	ldr	r1, [sp, #20]
4000c578:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c57c:	e1500001 	cmp	r0, r1
4000c580:	1a000001 	bne	4000c58c <_tx_event_flags_set+0x1cc>
4000c584:	e3a08000 	mov	r8, #0
4000c588:	ea000009 	b	4000c5b4 <_tx_event_flags_set+0x1f4>
4000c58c:	e3a08007 	mov	r8, #7
4000c590:	ea000007 	b	4000c5b4 <_tx_event_flags_set+0x1f4>
4000c594:	e5940008 	ldr	r0, [r4, #8]
4000c598:	e59d1014 	ldr	r1, [sp, #20]
4000c59c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c5a0:	e1100001 	tst	r0, r1
4000c5a4:	0a000001 	beq	4000c5b0 <_tx_event_flags_set+0x1f0>
4000c5a8:	e3a08000 	mov	r8, #0
4000c5ac:	ea000000 	b	4000c5b4 <_tx_event_flags_set+0x1f4>
4000c5b0:	e3a08007 	mov	r8, #7
4000c5b4:	e3580000 	cmp	r8, #0
4000c5b8:	1a000024 	bne	4000c650 <_tx_event_flags_set+0x290>
4000c5bc:	e5941008 	ldr	r1, [r4, #8]
4000c5c0:	e59d0014 	ldr	r0, [sp, #20]
4000c5c4:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c5c8:	e5801000 	str	r1, [r0]
4000c5cc:	e59d0014 	ldr	r0, [sp, #20]
4000c5d0:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c5d4:	e3100001 	tst	r0, #1
4000c5d8:	0a000004 	beq	4000c5f0 <_tx_event_flags_set+0x230>
4000c5dc:	e5940008 	ldr	r0, [r4, #8]
4000c5e0:	e59d1014 	ldr	r1, [sp, #20]
4000c5e4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c5e8:	e1c00001 	bic	r0, r0, r1
4000c5ec:	e5840008 	str	r0, [r4, #8]
4000c5f0:	e3a00000 	mov	r0, #0
4000c5f4:	e5840010 	str	r0, [r4, #16]
4000c5f8:	e5840014 	str	r0, [r4, #20]
4000c5fc:	e3a01000 	mov	r1, #0
4000c600:	e59d0014 	ldr	r0, [sp, #20]
4000c604:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c608:	e59f0394 	ldr	r0, [pc, #916]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c60c:	e5900000 	ldr	r0, [r0]
4000c610:	e2800001 	add	r0, r0, #1
4000c614:	e59f1388 	ldr	r1, [pc, #904]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c618:	e5810000 	str	r0, [r1]
4000c61c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c620:	e121f007 	msr	CPSR_c, r7
4000c624:	e35b0000 	cmp	fp, #0
4000c628:	0a000001 	beq	4000c634 <_tx_event_flags_set+0x274>
4000c62c:	e1a00004 	mov	r0, r4
4000c630:	e12fff3b 	blx	fp
4000c634:	e3a00000 	mov	r0, #0
4000c638:	e59d1014 	ldr	r1, [sp, #20]
4000c63c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c640:	e59d0014 	ldr	r0, [sp, #20]
4000c644:	eb000b23 	bl	4000f2d8 <_tx_thread_system_resume>
4000c648:	e3a00000 	mov	r0, #0
4000c64c:	eaffffad 	b	4000c508 <_tx_event_flags_set+0x148>
4000c650:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c654:	e121f007 	msr	CPSR_c, r7
4000c658:	e35b0000 	cmp	fp, #0
4000c65c:	0a000001 	beq	4000c668 <_tx_event_flags_set+0x2a8>
4000c660:	e1a00004 	mov	r0, r4
4000c664:	e12fff3b 	blx	fp
4000c668:	e3a00000 	mov	r0, #0
4000c66c:	eaffffa5 	b	4000c508 <_tx_event_flags_set+0x148>
4000c670:	e5940010 	ldr	r0, [r4, #16]
4000c674:	e58d0004 	str	r0, [sp, #4]
4000c678:	e59d0004 	ldr	r0, [sp, #4]
4000c67c:	e58d0014 	str	r0, [sp, #20]
4000c680:	e3a00000 	mov	r0, #0
4000c684:	e5840010 	str	r0, [r4, #16]
4000c688:	e58d000c 	str	r0, [sp, #12]
4000c68c:	e58d0008 	str	r0, [sp, #8]
4000c690:	e5940014 	ldr	r0, [r4, #20]
4000c694:	e58d0000 	str	r0, [sp]
4000c698:	e5949008 	ldr	r9, [r4, #8]
4000c69c:	e59f0300 	ldr	r0, [pc, #768]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c6a0:	e5900000 	ldr	r0, [r0]
4000c6a4:	e2800001 	add	r0, r0, #1
4000c6a8:	e59f12f4 	ldr	r1, [pc, #756]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c6ac:	e5810000 	str	r0, [r1]
4000c6b0:	e1a00000 	nop			; (mov r0, r0)
4000c6b4:	e121f007 	msr	CPSR_c, r7
4000c6b8:	e10f7000 	mrs	r7, CPSR
4000c6bc:	e3870080 	orr	r0, r7, #128	; 0x80
4000c6c0:	e58d0018 	str	r0, [sp, #24]
4000c6c4:	e59d0018 	ldr	r0, [sp, #24]
4000c6c8:	e121f000 	msr	CPSR_c, r0
4000c6cc:	e594000c 	ldr	r0, [r4, #12]
4000c6d0:	e3500000 	cmp	r0, #0
4000c6d4:	0a00000b 	beq	4000c708 <_tx_event_flags_set+0x348>
4000c6d8:	e3a00000 	mov	r0, #0
4000c6dc:	e584000c 	str	r0, [r4, #12]
4000c6e0:	e59d0004 	ldr	r0, [sp, #4]
4000c6e4:	e58d0014 	str	r0, [sp, #20]
4000c6e8:	e5940014 	ldr	r0, [r4, #20]
4000c6ec:	e58d0000 	str	r0, [sp]
4000c6f0:	e5940008 	ldr	r0, [r4, #8]
4000c6f4:	e1899000 	orr	r9, r9, r0
4000c6f8:	e59d0014 	ldr	r0, [sp, #20]
4000c6fc:	e3500000 	cmp	r0, #0
4000c700:	1a000000 	bne	4000c708 <_tx_event_flags_set+0x348>
4000c704:	ea00005d 	b	4000c880 <_tx_event_flags_set+0x4c0>
4000c708:	e59d0014 	ldr	r0, [sp, #20]
4000c70c:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c710:	e31a0002 	tst	sl, #2
4000c714:	0a00000a 	beq	4000c744 <_tx_event_flags_set+0x384>
4000c718:	e59d0014 	ldr	r0, [sp, #20]
4000c71c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c720:	e0000009 	and	r0, r0, r9
4000c724:	e59d1014 	ldr	r1, [sp, #20]
4000c728:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c72c:	e1500001 	cmp	r0, r1
4000c730:	1a000001 	bne	4000c73c <_tx_event_flags_set+0x37c>
4000c734:	e3a08000 	mov	r8, #0
4000c738:	ea000008 	b	4000c760 <_tx_event_flags_set+0x3a0>
4000c73c:	e3a08007 	mov	r8, #7
4000c740:	ea000006 	b	4000c760 <_tx_event_flags_set+0x3a0>
4000c744:	e59d0014 	ldr	r0, [sp, #20]
4000c748:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c74c:	e1100009 	tst	r0, r9
4000c750:	0a000001 	beq	4000c75c <_tx_event_flags_set+0x39c>
4000c754:	e3a08000 	mov	r8, #0
4000c758:	ea000000 	b	4000c760 <_tx_event_flags_set+0x3a0>
4000c75c:	e3a08007 	mov	r8, #7
4000c760:	e59d0014 	ldr	r0, [sp, #20]
4000c764:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c768:	e58d0010 	str	r0, [sp, #16]
4000c76c:	e3580000 	cmp	r8, #0
4000c770:	1a00003c 	bne	4000c868 <_tx_event_flags_set+0x4a8>
4000c774:	e59d0014 	ldr	r0, [sp, #20]
4000c778:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c77c:	e5809000 	str	r9, [r0]
4000c780:	e31a0001 	tst	sl, #1
4000c784:	0a000004 	beq	4000c79c <_tx_event_flags_set+0x3dc>
4000c788:	e5940008 	ldr	r0, [r4, #8]
4000c78c:	e59d1014 	ldr	r1, [sp, #20]
4000c790:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c794:	e1c00001 	bic	r0, r0, r1
4000c798:	e5840008 	str	r0, [r4, #8]
4000c79c:	e59d0014 	ldr	r0, [sp, #20]
4000c7a0:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c7a4:	e1510000 	cmp	r1, r0
4000c7a8:	1a000002 	bne	4000c7b8 <_tx_event_flags_set+0x3f8>
4000c7ac:	e3a00000 	mov	r0, #0
4000c7b0:	e58d0004 	str	r0, [sp, #4]
4000c7b4:	ea000010 	b	4000c7fc <_tx_event_flags_set+0x43c>
4000c7b8:	e59d0004 	ldr	r0, [sp, #4]
4000c7bc:	e59d1014 	ldr	r1, [sp, #20]
4000c7c0:	e1500001 	cmp	r0, r1
4000c7c4:	1a000002 	bne	4000c7d4 <_tx_event_flags_set+0x414>
4000c7c8:	e59d0014 	ldr	r0, [sp, #20]
4000c7cc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c7d0:	e58d0004 	str	r0, [sp, #4]
4000c7d4:	e59d0014 	ldr	r0, [sp, #20]
4000c7d8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c7dc:	e59d1014 	ldr	r1, [sp, #20]
4000c7e0:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c7e4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c7e8:	e59d0014 	ldr	r0, [sp, #20]
4000c7ec:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c7f0:	e59d1014 	ldr	r1, [sp, #20]
4000c7f4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c7f8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c7fc:	e5940014 	ldr	r0, [r4, #20]
4000c800:	e2400001 	sub	r0, r0, #1
4000c804:	e5840014 	str	r0, [r4, #20]
4000c808:	e3a00000 	mov	r0, #0
4000c80c:	e59d1014 	ldr	r1, [sp, #20]
4000c810:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c814:	e59d1014 	ldr	r1, [sp, #20]
4000c818:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c81c:	e59d000c 	ldr	r0, [sp, #12]
4000c820:	e3500000 	cmp	r0, #0
4000c824:	1a000007 	bne	4000c848 <_tx_event_flags_set+0x488>
4000c828:	e59d0014 	ldr	r0, [sp, #20]
4000c82c:	e58d000c 	str	r0, [sp, #12]
4000c830:	e59d0014 	ldr	r0, [sp, #20]
4000c834:	e58d0008 	str	r0, [sp, #8]
4000c838:	e3a01000 	mov	r1, #0
4000c83c:	e59d0014 	ldr	r0, [sp, #20]
4000c840:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c844:	ea000007 	b	4000c868 <_tx_event_flags_set+0x4a8>
4000c848:	e59d0014 	ldr	r0, [sp, #20]
4000c84c:	e59d1008 	ldr	r1, [sp, #8]
4000c850:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c854:	e3a00000 	mov	r0, #0
4000c858:	e59d1014 	ldr	r1, [sp, #20]
4000c85c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c860:	e59d0014 	ldr	r0, [sp, #20]
4000c864:	e58d0008 	str	r0, [sp, #8]
4000c868:	e59d0010 	ldr	r0, [sp, #16]
4000c86c:	e58d0014 	str	r0, [sp, #20]
4000c870:	e59d0000 	ldr	r0, [sp]
4000c874:	e2500001 	subs	r0, r0, #1
4000c878:	e58d0000 	str	r0, [sp]
4000c87c:	1affff8c 	bne	4000c6b4 <_tx_event_flags_set+0x2f4>
4000c880:	e1a00000 	nop			; (mov r0, r0)
4000c884:	e59d0004 	ldr	r0, [sp, #4]
4000c888:	e5840010 	str	r0, [r4, #16]
4000c88c:	e5940020 	ldr	r0, [r4, #32]
4000c890:	e3500000 	cmp	r0, #0
4000c894:	0a000005 	beq	4000c8b0 <_tx_event_flags_set+0x4f0>
4000c898:	e5940008 	ldr	r0, [r4, #8]
4000c89c:	e5941020 	ldr	r1, [r4, #32]
4000c8a0:	e1c00001 	bic	r0, r0, r1
4000c8a4:	e5840008 	str	r0, [r4, #8]
4000c8a8:	e3a00000 	mov	r0, #0
4000c8ac:	e5840020 	str	r0, [r4, #32]
4000c8b0:	e121f007 	msr	CPSR_c, r7
4000c8b4:	e59d000c 	ldr	r0, [sp, #12]
4000c8b8:	e58d0014 	str	r0, [sp, #20]
4000c8bc:	ea000011 	b	4000c908 <_tx_event_flags_set+0x548>
4000c8c0:	e59d0014 	ldr	r0, [sp, #20]
4000c8c4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c8c8:	e58d0010 	str	r0, [sp, #16]
4000c8cc:	e10f7000 	mrs	r7, CPSR
4000c8d0:	e3870080 	orr	r0, r7, #128	; 0x80
4000c8d4:	e58d0018 	str	r0, [sp, #24]
4000c8d8:	e59d0018 	ldr	r0, [sp, #24]
4000c8dc:	e121f000 	msr	CPSR_c, r0
4000c8e0:	e59f00bc 	ldr	r0, [pc, #188]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c8e4:	e5900000 	ldr	r0, [r0]
4000c8e8:	e2800001 	add	r0, r0, #1
4000c8ec:	e59f10b0 	ldr	r1, [pc, #176]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c8f0:	e5810000 	str	r0, [r1]
4000c8f4:	e121f007 	msr	CPSR_c, r7
4000c8f8:	e59d0014 	ldr	r0, [sp, #20]
4000c8fc:	eb000a75 	bl	4000f2d8 <_tx_thread_system_resume>
4000c900:	e59d0010 	ldr	r0, [sp, #16]
4000c904:	e58d0014 	str	r0, [sp, #20]
4000c908:	e59d0014 	ldr	r0, [sp, #20]
4000c90c:	e3500000 	cmp	r0, #0
4000c910:	1affffea 	bne	4000c8c0 <_tx_event_flags_set+0x500>
4000c914:	e10f7000 	mrs	r7, CPSR
4000c918:	e3870080 	orr	r0, r7, #128	; 0x80
4000c91c:	e58d0018 	str	r0, [sp, #24]
4000c920:	e59d0018 	ldr	r0, [sp, #24]
4000c924:	e121f000 	msr	CPSR_c, r0
4000c928:	e59f0074 	ldr	r0, [pc, #116]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c92c:	e5900000 	ldr	r0, [r0]
4000c930:	e2400001 	sub	r0, r0, #1
4000c934:	e59f1068 	ldr	r1, [pc, #104]	; 4000c9a4 <_tx_event_flags_set+0x5e4>
4000c938:	e5810000 	str	r0, [r1]
4000c93c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c940:	e121f007 	msr	CPSR_c, r7
4000c944:	eb000a37 	bl	4000f228 <_tx_thread_system_preempt_check>
4000c948:	ea000007 	b	4000c96c <_tx_event_flags_set+0x5ac>
4000c94c:	e5940014 	ldr	r0, [r4, #20]
4000c950:	e3500000 	cmp	r0, #0
4000c954:	0a000002 	beq	4000c964 <_tx_event_flags_set+0x5a4>
4000c958:	e594000c 	ldr	r0, [r4, #12]
4000c95c:	e2800001 	add	r0, r0, #1
4000c960:	e584000c 	str	r0, [r4, #12]
4000c964:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c968:	e121f007 	msr	CPSR_c, r7
4000c96c:	e35b0000 	cmp	fp, #0
4000c970:	0a000001 	beq	4000c97c <_tx_event_flags_set+0x5bc>
4000c974:	e1a00004 	mov	r0, r4
4000c978:	e12fff3b 	blx	fp
4000c97c:	e3a00000 	mov	r0, #0
4000c980:	eafffee0 	b	4000c508 <_tx_event_flags_set+0x148>
4000c984:	40030ebc 	.word	0x40030ebc
4000c988:	40030ec0 	.word	0x40030ec0
4000c98c:	40030e48 	.word	0x40030e48
4000c990:	40030e50 	.word	0x40030e50
4000c994:	f0f0f0f0 	.word	0xf0f0f0f0
4000c998:	40030eb8 	.word	0x40030eb8
4000c99c:	40030eb4 	.word	0x40030eb4
4000c9a0:	40030ea8 	.word	0x40030ea8
4000c9a4:	40030e6c 	.word	0x40030e6c

4000c9a8 <_tx_initialize_high_level>:
4000c9a8:	e92d4010 	push	{r4, lr}
4000c9ac:	ebfff38a 	bl	400097dc <_tx_trace_initialize>
4000c9b0:	ebffeff0 	bl	40008978 <_tx_thread_initialize>
4000c9b4:	ebfff26b 	bl	40009368 <_tx_timer_initialize>
4000c9b8:	e3a00000 	mov	r0, #0
4000c9bc:	e59f105c 	ldr	r1, [pc, #92]	; 4000ca20 <_tx_initialize_high_level+0x78>
4000c9c0:	e5810000 	str	r0, [r1]
4000c9c4:	e59f1058 	ldr	r1, [pc, #88]	; 4000ca24 <_tx_initialize_high_level+0x7c>
4000c9c8:	e5810000 	str	r0, [r1]
4000c9cc:	e59f1054 	ldr	r1, [pc, #84]	; 4000ca28 <_tx_initialize_high_level+0x80>
4000c9d0:	e5810000 	str	r0, [r1]
4000c9d4:	e59f1050 	ldr	r1, [pc, #80]	; 4000ca2c <_tx_initialize_high_level+0x84>
4000c9d8:	e5810000 	str	r0, [r1]
4000c9dc:	e59f104c 	ldr	r1, [pc, #76]	; 4000ca30 <_tx_initialize_high_level+0x88>
4000c9e0:	e5810000 	str	r0, [r1]
4000c9e4:	e59f1048 	ldr	r1, [pc, #72]	; 4000ca34 <_tx_initialize_high_level+0x8c>
4000c9e8:	e5810000 	str	r0, [r1]
4000c9ec:	e59f1044 	ldr	r1, [pc, #68]	; 4000ca38 <_tx_initialize_high_level+0x90>
4000c9f0:	e5810000 	str	r0, [r1]
4000c9f4:	e59f1040 	ldr	r1, [pc, #64]	; 4000ca3c <_tx_initialize_high_level+0x94>
4000c9f8:	e5810000 	str	r0, [r1]
4000c9fc:	e59f103c 	ldr	r1, [pc, #60]	; 4000ca40 <_tx_initialize_high_level+0x98>
4000ca00:	e5810000 	str	r0, [r1]
4000ca04:	e59f1038 	ldr	r1, [pc, #56]	; 4000ca44 <_tx_initialize_high_level+0x9c>
4000ca08:	e5810000 	str	r0, [r1]
4000ca0c:	e59f1034 	ldr	r1, [pc, #52]	; 4000ca48 <_tx_initialize_high_level+0xa0>
4000ca10:	e5810000 	str	r0, [r1]
4000ca14:	e59f1030 	ldr	r1, [pc, #48]	; 4000ca4c <_tx_initialize_high_level+0xa4>
4000ca18:	e5810000 	str	r0, [r1]
4000ca1c:	e8bd8010 	pop	{r4, pc}
4000ca20:	40030ec4 	.word	0x40030ec4
4000ca24:	40030ec8 	.word	0x40030ec8
4000ca28:	40030ecc 	.word	0x40030ecc
4000ca2c:	40030ed0 	.word	0x40030ed0
4000ca30:	40030ed4 	.word	0x40030ed4
4000ca34:	40030ed8 	.word	0x40030ed8
4000ca38:	40030ee4 	.word	0x40030ee4
4000ca3c:	40030ee8 	.word	0x40030ee8
4000ca40:	40030eec 	.word	0x40030eec
4000ca44:	40030ef0 	.word	0x40030ef0
4000ca48:	40030edc 	.word	0x40030edc
4000ca4c:	40030ee0 	.word	0x40030ee0

4000ca50 <_tx_mutex_create>:
4000ca50:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000ca54:	e1a04000 	mov	r4, r0
4000ca58:	e1a05001 	mov	r5, r1
4000ca5c:	e1a06002 	mov	r6, r2
4000ca60:	e3a01038 	mov	r1, #56	; 0x38
4000ca64:	e1a00004 	mov	r0, r4
4000ca68:	eb001ad5 	bl	400135c4 <__aeabi_memclr4>
4000ca6c:	e5845004 	str	r5, [r4, #4]
4000ca70:	e5846010 	str	r6, [r4, #16]
4000ca74:	e10f7000 	mrs	r7, CPSR
4000ca78:	e3878080 	orr	r8, r7, #128	; 0x80
4000ca7c:	e121f008 	msr	CPSR_c, r8
4000ca80:	e59f0174 	ldr	r0, [pc, #372]	; 4000cbfc <_tx_mutex_create+0x1ac>
4000ca84:	e5840000 	str	r0, [r4]
4000ca88:	e59f0170 	ldr	r0, [pc, #368]	; 4000cc00 <_tx_mutex_create+0x1b0>
4000ca8c:	e5900000 	ldr	r0, [r0]
4000ca90:	e3500000 	cmp	r0, #0
4000ca94:	0a00000e 	beq	4000cad4 <_tx_mutex_create+0x84>
4000ca98:	e59f0160 	ldr	r0, [pc, #352]	; 4000cc00 <_tx_mutex_create+0x1b0>
4000ca9c:	e5900000 	ldr	r0, [r0]
4000caa0:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000caa4:	e58d0004 	str	r0, [sp, #4]
4000caa8:	e59f0150 	ldr	r0, [pc, #336]	; 4000cc00 <_tx_mutex_create+0x1b0>
4000caac:	e5900000 	ldr	r0, [r0]
4000cab0:	e5804028 	str	r4, [r0, #40]	; 0x28
4000cab4:	e59d0004 	ldr	r0, [sp, #4]
4000cab8:	e5804024 	str	r4, [r0, #36]	; 0x24
4000cabc:	e59d0004 	ldr	r0, [sp, #4]
4000cac0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000cac4:	e59f0134 	ldr	r0, [pc, #308]	; 4000cc00 <_tx_mutex_create+0x1b0>
4000cac8:	e5900000 	ldr	r0, [r0]
4000cacc:	e5840024 	str	r0, [r4, #36]	; 0x24
4000cad0:	ea000003 	b	4000cae4 <_tx_mutex_create+0x94>
4000cad4:	e59f0124 	ldr	r0, [pc, #292]	; 4000cc00 <_tx_mutex_create+0x1b0>
4000cad8:	e5804000 	str	r4, [r0]
4000cadc:	e5844024 	str	r4, [r4, #36]	; 0x24
4000cae0:	e5844028 	str	r4, [r4, #40]	; 0x28
4000cae4:	e59f0118 	ldr	r0, [pc, #280]	; 4000cc04 <_tx_mutex_create+0x1b4>
4000cae8:	e5900000 	ldr	r0, [r0]
4000caec:	e2800001 	add	r0, r0, #1
4000caf0:	e59f110c 	ldr	r1, [pc, #268]	; 4000cc04 <_tx_mutex_create+0x1b4>
4000caf4:	e5810000 	str	r0, [r1]
4000caf8:	e3a03000 	mov	r3, #0
4000cafc:	e58d3000 	str	r3, [sp]
4000cb00:	e1a03006 	mov	r3, r6
4000cb04:	e1a02005 	mov	r2, r5
4000cb08:	e1a01004 	mov	r1, r4
4000cb0c:	e3a00005 	mov	r0, #5
4000cb10:	eb000d46 	bl	40010030 <_tx_trace_object_register>
4000cb14:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cc08 <_tx_mutex_create+0x1b8>
4000cb18:	e5910000 	ldr	r0, [r1]
4000cb1c:	e3500000 	cmp	r0, #0
4000cb20:	0a000032 	beq	4000cbf0 <_tx_mutex_create+0x1a0>
4000cb24:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cc0c <_tx_mutex_create+0x1bc>
4000cb28:	e5911000 	ldr	r1, [r1]
4000cb2c:	e2811001 	add	r1, r1, #1
4000cb30:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cc0c <_tx_mutex_create+0x1bc>
4000cb34:	e5821000 	str	r1, [r2]
4000cb38:	e580100c 	str	r1, [r0, #12]
4000cb3c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cc10 <_tx_mutex_create+0x1c0>
4000cb40:	e5911000 	ldr	r1, [r1]
4000cb44:	e3510000 	cmp	r1, #0
4000cb48:	1a000006 	bne	4000cb68 <_tx_mutex_create+0x118>
4000cb4c:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cc14 <_tx_mutex_create+0x1c4>
4000cb50:	e5911000 	ldr	r1, [r1]
4000cb54:	e5801000 	str	r1, [r0]
4000cb58:	e5901000 	ldr	r1, [r0]
4000cb5c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cb60:	e5801004 	str	r1, [r0, #4]
4000cb64:	ea00000d 	b	4000cba0 <_tx_mutex_create+0x150>
4000cb68:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cc10 <_tx_mutex_create+0x1c0>
4000cb6c:	e5911000 	ldr	r1, [r1]
4000cb70:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cc18 <_tx_mutex_create+0x1c8>
4000cb74:	e1510002 	cmp	r1, r2
4000cb78:	2a000004 	bcs	4000cb90 <_tx_mutex_create+0x140>
4000cb7c:	e3e01000 	mvn	r1, #0
4000cb80:	e5801000 	str	r1, [r0]
4000cb84:	e3a01000 	mov	r1, #0
4000cb88:	e5801004 	str	r1, [r0, #4]
4000cb8c:	ea000003 	b	4000cba0 <_tx_mutex_create+0x150>
4000cb90:	e59f1080 	ldr	r1, [pc, #128]	; 4000cc18 <_tx_mutex_create+0x1c8>
4000cb94:	e5801000 	str	r1, [r0]
4000cb98:	e3a01000 	mov	r1, #0
4000cb9c:	e5801004 	str	r1, [r0, #4]
4000cba0:	e3a01032 	mov	r1, #50	; 0x32
4000cba4:	e5801008 	str	r1, [r0, #8]
4000cba8:	e5804010 	str	r4, [r0, #16]
4000cbac:	e5806014 	str	r6, [r0, #20]
4000cbb0:	e28d1004 	add	r1, sp, #4
4000cbb4:	e5801018 	str	r1, [r0, #24]
4000cbb8:	e3a01000 	mov	r1, #0
4000cbbc:	e580101c 	str	r1, [r0, #28]
4000cbc0:	e2800020 	add	r0, r0, #32
4000cbc4:	e59f1050 	ldr	r1, [pc, #80]	; 4000cc1c <_tx_mutex_create+0x1cc>
4000cbc8:	e5911000 	ldr	r1, [r1]
4000cbcc:	e1500001 	cmp	r0, r1
4000cbd0:	3a000001 	bcc	4000cbdc <_tx_mutex_create+0x18c>
4000cbd4:	e59f1044 	ldr	r1, [pc, #68]	; 4000cc20 <_tx_mutex_create+0x1d0>
4000cbd8:	e5910000 	ldr	r0, [r1]
4000cbdc:	e59f1024 	ldr	r1, [pc, #36]	; 4000cc08 <_tx_mutex_create+0x1b8>
4000cbe0:	e5810000 	str	r0, [r1]
4000cbe4:	e59f1038 	ldr	r1, [pc, #56]	; 4000cc24 <_tx_mutex_create+0x1d4>
4000cbe8:	e5911000 	ldr	r1, [r1]
4000cbec:	e5810020 	str	r0, [r1, #32]
4000cbf0:	e121f007 	msr	CPSR_c, r7
4000cbf4:	e3a00000 	mov	r0, #0
4000cbf8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cbfc:	4d555445 	.word	0x4d555445
4000cc00:	40030edc 	.word	0x40030edc
4000cc04:	40030ee0 	.word	0x40030ee0
4000cc08:	40030ebc 	.word	0x40030ebc
4000cc0c:	40030ec0 	.word	0x40030ec0
4000cc10:	40030e48 	.word	0x40030e48
4000cc14:	40030e50 	.word	0x40030e50
4000cc18:	f0f0f0f0 	.word	0xf0f0f0f0
4000cc1c:	40030eb8 	.word	0x40030eb8
4000cc20:	40030eb4 	.word	0x40030eb4
4000cc24:	40030ea8 	.word	0x40030ea8

4000cc28 <_tx_mutex_delete>:
4000cc28:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cc2c:	e1a04000 	mov	r4, r0
4000cc30:	e10f5000 	mrs	r5, CPSR
4000cc34:	e3856080 	orr	r6, r5, #128	; 0x80
4000cc38:	e121f006 	msr	CPSR_c, r6
4000cc3c:	e59f1294 	ldr	r1, [pc, #660]	; 4000ced8 <_tx_mutex_delete+0x2b0>
4000cc40:	e5910000 	ldr	r0, [r1]
4000cc44:	e3500000 	cmp	r0, #0
4000cc48:	0a000031 	beq	4000cd14 <_tx_mutex_delete+0xec>
4000cc4c:	e59f1288 	ldr	r1, [pc, #648]	; 4000cedc <_tx_mutex_delete+0x2b4>
4000cc50:	e5911000 	ldr	r1, [r1]
4000cc54:	e2811001 	add	r1, r1, #1
4000cc58:	e59f227c 	ldr	r2, [pc, #636]	; 4000cedc <_tx_mutex_delete+0x2b4>
4000cc5c:	e5821000 	str	r1, [r2]
4000cc60:	e580100c 	str	r1, [r0, #12]
4000cc64:	e59f1274 	ldr	r1, [pc, #628]	; 4000cee0 <_tx_mutex_delete+0x2b8>
4000cc68:	e5911000 	ldr	r1, [r1]
4000cc6c:	e3510000 	cmp	r1, #0
4000cc70:	1a000006 	bne	4000cc90 <_tx_mutex_delete+0x68>
4000cc74:	e59f1268 	ldr	r1, [pc, #616]	; 4000cee4 <_tx_mutex_delete+0x2bc>
4000cc78:	e5911000 	ldr	r1, [r1]
4000cc7c:	e5801000 	str	r1, [r0]
4000cc80:	e5901000 	ldr	r1, [r0]
4000cc84:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cc88:	e5801004 	str	r1, [r0, #4]
4000cc8c:	ea00000d 	b	4000ccc8 <_tx_mutex_delete+0xa0>
4000cc90:	e59f1248 	ldr	r1, [pc, #584]	; 4000cee0 <_tx_mutex_delete+0x2b8>
4000cc94:	e5911000 	ldr	r1, [r1]
4000cc98:	e59f2248 	ldr	r2, [pc, #584]	; 4000cee8 <_tx_mutex_delete+0x2c0>
4000cc9c:	e1510002 	cmp	r1, r2
4000cca0:	2a000004 	bcs	4000ccb8 <_tx_mutex_delete+0x90>
4000cca4:	e3e01000 	mvn	r1, #0
4000cca8:	e5801000 	str	r1, [r0]
4000ccac:	e3a01000 	mov	r1, #0
4000ccb0:	e5801004 	str	r1, [r0, #4]
4000ccb4:	ea000003 	b	4000ccc8 <_tx_mutex_delete+0xa0>
4000ccb8:	e59f1228 	ldr	r1, [pc, #552]	; 4000cee8 <_tx_mutex_delete+0x2c0>
4000ccbc:	e5801000 	str	r1, [r0]
4000ccc0:	e3a01000 	mov	r1, #0
4000ccc4:	e5801004 	str	r1, [r0, #4]
4000ccc8:	e3a01033 	mov	r1, #51	; 0x33
4000cccc:	e5801008 	str	r1, [r0, #8]
4000ccd0:	e5804010 	str	r4, [r0, #16]
4000ccd4:	e580d014 	str	sp, [r0, #20]
4000ccd8:	e3a01000 	mov	r1, #0
4000ccdc:	e5801018 	str	r1, [r0, #24]
4000cce0:	e580101c 	str	r1, [r0, #28]
4000cce4:	e2800020 	add	r0, r0, #32
4000cce8:	e59f11fc 	ldr	r1, [pc, #508]	; 4000ceec <_tx_mutex_delete+0x2c4>
4000ccec:	e5911000 	ldr	r1, [r1]
4000ccf0:	e1500001 	cmp	r0, r1
4000ccf4:	3a000001 	bcc	4000cd00 <_tx_mutex_delete+0xd8>
4000ccf8:	e59f11f0 	ldr	r1, [pc, #496]	; 4000cef0 <_tx_mutex_delete+0x2c8>
4000ccfc:	e5910000 	ldr	r0, [r1]
4000cd00:	e59f11d0 	ldr	r1, [pc, #464]	; 4000ced8 <_tx_mutex_delete+0x2b0>
4000cd04:	e5810000 	str	r0, [r1]
4000cd08:	e59f11e4 	ldr	r1, [pc, #484]	; 4000cef4 <_tx_mutex_delete+0x2cc>
4000cd0c:	e5911000 	ldr	r1, [r1]
4000cd10:	e5810020 	str	r0, [r1, #32]
4000cd14:	e1a00004 	mov	r0, r4
4000cd18:	eb000d2f 	bl	400101dc <_tx_trace_object_unregister>
4000cd1c:	e59f01d4 	ldr	r0, [pc, #468]	; 4000cef8 <_tx_mutex_delete+0x2d0>
4000cd20:	e5900000 	ldr	r0, [r0]
4000cd24:	e2400001 	sub	r0, r0, #1
4000cd28:	e59f11c8 	ldr	r1, [pc, #456]	; 4000cef8 <_tx_mutex_delete+0x2d0>
4000cd2c:	e5810000 	str	r0, [r1]
4000cd30:	e3a00000 	mov	r0, #0
4000cd34:	e5840000 	str	r0, [r4]
4000cd38:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cd3c:	e1500004 	cmp	r0, r4
4000cd40:	1a000003 	bne	4000cd54 <_tx_mutex_delete+0x12c>
4000cd44:	e3a00000 	mov	r0, #0
4000cd48:	e59f11ac 	ldr	r1, [pc, #428]	; 4000cefc <_tx_mutex_delete+0x2d4>
4000cd4c:	e5810000 	str	r0, [r1]
4000cd50:	ea00000c 	b	4000cd88 <_tx_mutex_delete+0x160>
4000cd54:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cd58:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cd5c:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cd60:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cd64:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cd68:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cd6c:	e59f0188 	ldr	r0, [pc, #392]	; 4000cefc <_tx_mutex_delete+0x2d4>
4000cd70:	e5900000 	ldr	r0, [r0]
4000cd74:	e1500004 	cmp	r0, r4
4000cd78:	1a000002 	bne	4000cd88 <_tx_mutex_delete+0x160>
4000cd7c:	e59f1178 	ldr	r1, [pc, #376]	; 4000cefc <_tx_mutex_delete+0x2d4>
4000cd80:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cd84:	e5810000 	str	r0, [r1]
4000cd88:	e594000c 	ldr	r0, [r4, #12]
4000cd8c:	e58d0000 	str	r0, [sp]
4000cd90:	e5940010 	ldr	r0, [r4, #16]
4000cd94:	e3500000 	cmp	r0, #0
4000cd98:	0a00001c 	beq	4000ce10 <_tx_mutex_delete+0x1e8>
4000cd9c:	e59d0000 	ldr	r0, [sp]
4000cda0:	e3500000 	cmp	r0, #0
4000cda4:	0a000019 	beq	4000ce10 <_tx_mutex_delete+0x1e8>
4000cda8:	e59d0000 	ldr	r0, [sp]
4000cdac:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cdb0:	e2400001 	sub	r0, r0, #1
4000cdb4:	e59d1000 	ldr	r1, [sp]
4000cdb8:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cdbc:	e59d0000 	ldr	r0, [sp]
4000cdc0:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cdc4:	e3500000 	cmp	r0, #0
4000cdc8:	1a000003 	bne	4000cddc <_tx_mutex_delete+0x1b4>
4000cdcc:	e3a00000 	mov	r0, #0
4000cdd0:	e59d1000 	ldr	r1, [sp]
4000cdd4:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cdd8:	ea00000c 	b	4000ce10 <_tx_mutex_delete+0x1e8>
4000cddc:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000cde0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cde4:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cde8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cdec:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000cdf0:	e5810030 	str	r0, [r1, #48]	; 0x30
4000cdf4:	e59d0000 	ldr	r0, [sp]
4000cdf8:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000cdfc:	e1500004 	cmp	r0, r4
4000ce00:	1a000002 	bne	4000ce10 <_tx_mutex_delete+0x1e8>
4000ce04:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ce08:	e59d1000 	ldr	r1, [sp]
4000ce0c:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ce10:	e3a00000 	mov	r0, #0
4000ce14:	e584000c 	str	r0, [r4, #12]
4000ce18:	e59f00e0 	ldr	r0, [pc, #224]	; 4000cf00 <_tx_mutex_delete+0x2d8>
4000ce1c:	e5900000 	ldr	r0, [r0]
4000ce20:	e2800001 	add	r0, r0, #1
4000ce24:	e59f10d4 	ldr	r1, [pc, #212]	; 4000cf00 <_tx_mutex_delete+0x2d8>
4000ce28:	e5810000 	str	r0, [r1]
4000ce2c:	e121f005 	msr	CPSR_c, r5
4000ce30:	e594001c 	ldr	r0, [r4, #28]
4000ce34:	e58d0000 	str	r0, [sp]
4000ce38:	ea000017 	b	4000ce9c <_tx_mutex_delete+0x274>
4000ce3c:	e10f5000 	mrs	r5, CPSR
4000ce40:	e3856080 	orr	r6, r5, #128	; 0x80
4000ce44:	e121f006 	msr	CPSR_c, r6
4000ce48:	e3a00000 	mov	r0, #0
4000ce4c:	e59d1000 	ldr	r1, [sp]
4000ce50:	e5810068 	str	r0, [r1, #104]	; 0x68
4000ce54:	e59f00a4 	ldr	r0, [pc, #164]	; 4000cf00 <_tx_mutex_delete+0x2d8>
4000ce58:	e5900000 	ldr	r0, [r0]
4000ce5c:	e2800001 	add	r0, r0, #1
4000ce60:	e59f1098 	ldr	r1, [pc, #152]	; 4000cf00 <_tx_mutex_delete+0x2d8>
4000ce64:	e5810000 	str	r0, [r1]
4000ce68:	e121f005 	msr	CPSR_c, r5
4000ce6c:	e3a00001 	mov	r0, #1
4000ce70:	e59d1000 	ldr	r1, [sp]
4000ce74:	e5810084 	str	r0, [r1, #132]	; 0x84
4000ce78:	e59d0000 	ldr	r0, [sp]
4000ce7c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000ce80:	e58d0000 	str	r0, [sp]
4000ce84:	e59d1000 	ldr	r1, [sp]
4000ce88:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000ce8c:	eb000911 	bl	4000f2d8 <_tx_thread_system_resume>
4000ce90:	e5940020 	ldr	r0, [r4, #32]
4000ce94:	e2400001 	sub	r0, r0, #1
4000ce98:	e5840020 	str	r0, [r4, #32]
4000ce9c:	e5940020 	ldr	r0, [r4, #32]
4000cea0:	e3500000 	cmp	r0, #0
4000cea4:	1affffe4 	bne	4000ce3c <_tx_mutex_delete+0x214>
4000cea8:	e10f5000 	mrs	r5, CPSR
4000ceac:	e3856080 	orr	r6, r5, #128	; 0x80
4000ceb0:	e121f006 	msr	CPSR_c, r6
4000ceb4:	e59f0044 	ldr	r0, [pc, #68]	; 4000cf00 <_tx_mutex_delete+0x2d8>
4000ceb8:	e5900000 	ldr	r0, [r0]
4000cebc:	e2400001 	sub	r0, r0, #1
4000cec0:	e59f1038 	ldr	r1, [pc, #56]	; 4000cf00 <_tx_mutex_delete+0x2d8>
4000cec4:	e5810000 	str	r0, [r1]
4000cec8:	e121f005 	msr	CPSR_c, r5
4000cecc:	eb0008d5 	bl	4000f228 <_tx_thread_system_preempt_check>
4000ced0:	e3a00000 	mov	r0, #0
4000ced4:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ced8:	40030ebc 	.word	0x40030ebc
4000cedc:	40030ec0 	.word	0x40030ec0
4000cee0:	40030e48 	.word	0x40030e48
4000cee4:	40030e50 	.word	0x40030e50
4000cee8:	f0f0f0f0 	.word	0xf0f0f0f0
4000ceec:	40030eb8 	.word	0x40030eb8
4000cef0:	40030eb4 	.word	0x40030eb4
4000cef4:	40030ea8 	.word	0x40030ea8
4000cef8:	40030ee0 	.word	0x40030ee0
4000cefc:	40030edc 	.word	0x40030edc
4000cf00:	40030e6c 	.word	0x40030e6c

4000cf04 <_tx_mutex_get>:
4000cf04:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000cf08:	e1a04000 	mov	r4, r0
4000cf0c:	e1a05001 	mov	r5, r1
4000cf10:	e10f6000 	mrs	r6, CPSR
4000cf14:	e3867080 	orr	r7, r6, #128	; 0x80
4000cf18:	e121f007 	msr	CPSR_c, r7
4000cf1c:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d1d0 <_tx_mutex_get+0x2cc>
4000cf20:	e5910000 	ldr	r0, [r1]
4000cf24:	e3500000 	cmp	r0, #0
4000cf28:	0a000032 	beq	4000cff8 <_tx_mutex_get+0xf4>
4000cf2c:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d1d4 <_tx_mutex_get+0x2d0>
4000cf30:	e5911000 	ldr	r1, [r1]
4000cf34:	e2811001 	add	r1, r1, #1
4000cf38:	e59f2294 	ldr	r2, [pc, #660]	; 4000d1d4 <_tx_mutex_get+0x2d0>
4000cf3c:	e5821000 	str	r1, [r2]
4000cf40:	e580100c 	str	r1, [r0, #12]
4000cf44:	e59f128c 	ldr	r1, [pc, #652]	; 4000d1d8 <_tx_mutex_get+0x2d4>
4000cf48:	e5911000 	ldr	r1, [r1]
4000cf4c:	e3510000 	cmp	r1, #0
4000cf50:	1a000006 	bne	4000cf70 <_tx_mutex_get+0x6c>
4000cf54:	e59f1280 	ldr	r1, [pc, #640]	; 4000d1dc <_tx_mutex_get+0x2d8>
4000cf58:	e5911000 	ldr	r1, [r1]
4000cf5c:	e5801000 	str	r1, [r0]
4000cf60:	e5901000 	ldr	r1, [r0]
4000cf64:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cf68:	e5801004 	str	r1, [r0, #4]
4000cf6c:	ea00000d 	b	4000cfa8 <_tx_mutex_get+0xa4>
4000cf70:	e59f1260 	ldr	r1, [pc, #608]	; 4000d1d8 <_tx_mutex_get+0x2d4>
4000cf74:	e5911000 	ldr	r1, [r1]
4000cf78:	e59f2260 	ldr	r2, [pc, #608]	; 4000d1e0 <_tx_mutex_get+0x2dc>
4000cf7c:	e1510002 	cmp	r1, r2
4000cf80:	2a000004 	bcs	4000cf98 <_tx_mutex_get+0x94>
4000cf84:	e3e01000 	mvn	r1, #0
4000cf88:	e5801000 	str	r1, [r0]
4000cf8c:	e3a01000 	mov	r1, #0
4000cf90:	e5801004 	str	r1, [r0, #4]
4000cf94:	ea000003 	b	4000cfa8 <_tx_mutex_get+0xa4>
4000cf98:	e59f1240 	ldr	r1, [pc, #576]	; 4000d1e0 <_tx_mutex_get+0x2dc>
4000cf9c:	e5801000 	str	r1, [r0]
4000cfa0:	e3a01000 	mov	r1, #0
4000cfa4:	e5801004 	str	r1, [r0, #4]
4000cfa8:	e3a01034 	mov	r1, #52	; 0x34
4000cfac:	e5801008 	str	r1, [r0, #8]
4000cfb0:	e5804010 	str	r4, [r0, #16]
4000cfb4:	e5805014 	str	r5, [r0, #20]
4000cfb8:	e594100c 	ldr	r1, [r4, #12]
4000cfbc:	e5801018 	str	r1, [r0, #24]
4000cfc0:	e5941008 	ldr	r1, [r4, #8]
4000cfc4:	e580101c 	str	r1, [r0, #28]
4000cfc8:	e2800020 	add	r0, r0, #32
4000cfcc:	e59f1210 	ldr	r1, [pc, #528]	; 4000d1e4 <_tx_mutex_get+0x2e0>
4000cfd0:	e5911000 	ldr	r1, [r1]
4000cfd4:	e1500001 	cmp	r0, r1
4000cfd8:	3a000001 	bcc	4000cfe4 <_tx_mutex_get+0xe0>
4000cfdc:	e59f1204 	ldr	r1, [pc, #516]	; 4000d1e8 <_tx_mutex_get+0x2e4>
4000cfe0:	e5910000 	ldr	r0, [r1]
4000cfe4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d1d0 <_tx_mutex_get+0x2cc>
4000cfe8:	e5810000 	str	r0, [r1]
4000cfec:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d1ec <_tx_mutex_get+0x2e8>
4000cff0:	e5911000 	ldr	r1, [r1]
4000cff4:	e5810020 	str	r0, [r1, #32]
4000cff8:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d1dc <_tx_mutex_get+0x2d8>
4000cffc:	e5909000 	ldr	r9, [r0]
4000d000:	e5940008 	ldr	r0, [r4, #8]
4000d004:	e3500000 	cmp	r0, #0
4000d008:	1a000025 	bne	4000d0a4 <_tx_mutex_get+0x1a0>
4000d00c:	e3a00001 	mov	r0, #1
4000d010:	e5840008 	str	r0, [r4, #8]
4000d014:	e584900c 	str	r9, [r4, #12]
4000d018:	e5940010 	ldr	r0, [r4, #16]
4000d01c:	e3500000 	cmp	r0, #0
4000d020:	0a00001d 	beq	4000d09c <_tx_mutex_get+0x198>
4000d024:	e3590000 	cmp	r9, #0
4000d028:	0a00001b 	beq	4000d09c <_tx_mutex_get+0x198>
4000d02c:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d030:	e5840014 	str	r0, [r4, #20]
4000d034:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d038:	e5840018 	str	r0, [r4, #24]
4000d03c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d040:	e3500000 	cmp	r0, #0
4000d044:	0a000008 	beq	4000d06c <_tx_mutex_get+0x168>
4000d048:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d04c:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d050:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d054:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d058:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d05c:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d060:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d064:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d068:	ea000006 	b	4000d088 <_tx_mutex_get+0x184>
4000d06c:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d070:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d074:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d078:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d07c:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d080:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d084:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d088:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d08c:	e2800001 	add	r0, r0, #1
4000d090:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d094:	e3a00020 	mov	r0, #32
4000d098:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d09c:	e3a08000 	mov	r8, #0
4000d0a0:	ea000047 	b	4000d1c4 <_tx_mutex_get+0x2c0>
4000d0a4:	e594000c 	ldr	r0, [r4, #12]
4000d0a8:	e1500009 	cmp	r0, r9
4000d0ac:	1a000004 	bne	4000d0c4 <_tx_mutex_get+0x1c0>
4000d0b0:	e5940008 	ldr	r0, [r4, #8]
4000d0b4:	e2800001 	add	r0, r0, #1
4000d0b8:	e5840008 	str	r0, [r4, #8]
4000d0bc:	e3a08000 	mov	r8, #0
4000d0c0:	ea00003f 	b	4000d1c4 <_tx_mutex_get+0x2c0>
4000d0c4:	e3550000 	cmp	r5, #0
4000d0c8:	0a00003c 	beq	4000d1c0 <_tx_mutex_get+0x2bc>
4000d0cc:	e59f011c 	ldr	r0, [pc, #284]	; 4000d1f0 <_tx_mutex_get+0x2ec>
4000d0d0:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d0d4:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d0d8:	e594001c 	ldr	r0, [r4, #28]
4000d0dc:	e3500000 	cmp	r0, #0
4000d0e0:	0a00000a 	beq	4000d110 <_tx_mutex_get+0x20c>
4000d0e4:	e594001c 	ldr	r0, [r4, #28]
4000d0e8:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d0ec:	e594001c 	ldr	r0, [r4, #28]
4000d0f0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d0f4:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d0f8:	e594001c 	ldr	r0, [r4, #28]
4000d0fc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d100:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d104:	e594001c 	ldr	r0, [r4, #28]
4000d108:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d10c:	ea000002 	b	4000d11c <_tx_mutex_get+0x218>
4000d110:	e584901c 	str	r9, [r4, #28]
4000d114:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d118:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d11c:	e5940020 	ldr	r0, [r4, #32]
4000d120:	e2800001 	add	r0, r0, #1
4000d124:	e5840020 	str	r0, [r4, #32]
4000d128:	e3a0000d 	mov	r0, #13
4000d12c:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d130:	e3a00001 	mov	r0, #1
4000d134:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d138:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d13c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d1f4 <_tx_mutex_get+0x2f0>
4000d140:	e5900000 	ldr	r0, [r0]
4000d144:	e2800001 	add	r0, r0, #1
4000d148:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d1f4 <_tx_mutex_get+0x2f0>
4000d14c:	e5810000 	str	r0, [r1]
4000d150:	e121f006 	msr	CPSR_c, r6
4000d154:	e5940010 	ldr	r0, [r4, #16]
4000d158:	e3500000 	cmp	r0, #0
4000d15c:	0a000013 	beq	4000d1b0 <_tx_mutex_get+0x2ac>
4000d160:	e594000c 	ldr	r0, [r4, #12]
4000d164:	e3500000 	cmp	r0, #0
4000d168:	0a000010 	beq	4000d1b0 <_tx_mutex_get+0x2ac>
4000d16c:	e3590000 	cmp	r9, #0
4000d170:	0a00000e 	beq	4000d1b0 <_tx_mutex_get+0x2ac>
4000d174:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d178:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d17c:	e1500001 	cmp	r0, r1
4000d180:	9a000001 	bls	4000d18c <_tx_mutex_get+0x288>
4000d184:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d188:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d18c:	e594000c 	ldr	r0, [r4, #12]
4000d190:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d194:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d198:	e1500001 	cmp	r0, r1
4000d19c:	9a000003 	bls	4000d1b0 <_tx_mutex_get+0x2ac>
4000d1a0:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d1a4:	e1a01002 	mov	r1, r2
4000d1a8:	e594000c 	ldr	r0, [r4, #12]
4000d1ac:	eb000011 	bl	4000d1f8 <_tx_mutex_priority_change>
4000d1b0:	e1a00009 	mov	r0, r9
4000d1b4:	ebffeea0 	bl	40008c3c <_tx_thread_system_suspend>
4000d1b8:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d1bc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d1c0:	e3a0801d 	mov	r8, #29
4000d1c4:	e121f006 	msr	CPSR_c, r6
4000d1c8:	e1a00008 	mov	r0, r8
4000d1cc:	eafffffa 	b	4000d1bc <_tx_mutex_get+0x2b8>
4000d1d0:	40030ebc 	.word	0x40030ebc
4000d1d4:	40030ec0 	.word	0x40030ec0
4000d1d8:	40030e48 	.word	0x40030e48
4000d1dc:	40030e50 	.word	0x40030e50
4000d1e0:	f0f0f0f0 	.word	0xf0f0f0f0
4000d1e4:	40030eb8 	.word	0x40030eb8
4000d1e8:	40030eb4 	.word	0x40030eb4
4000d1ec:	40030ea8 	.word	0x40030ea8
4000d1f0:	400103b8 	.word	0x400103b8
4000d1f4:	40030e6c 	.word	0x40030e6c

4000d1f8 <_tx_mutex_priority_change>:
4000d1f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d1fc:	e1a04000 	mov	r4, r0
4000d200:	e1a05001 	mov	r5, r1
4000d204:	e1a06002 	mov	r6, r2
4000d208:	e10f7000 	mrs	r7, CPSR
4000d20c:	e3878080 	orr	r8, r7, #128	; 0x80
4000d210:	e121f008 	msr	CPSR_c, r8
4000d214:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d218:	e3500000 	cmp	r0, #0
4000d21c:	0a000003 	beq	4000d230 <_tx_mutex_priority_change+0x38>
4000d220:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d224:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d228:	e121f007 	msr	CPSR_c, r7
4000d22c:	ea000011 	b	4000d278 <_tx_mutex_priority_change+0x80>
4000d230:	e59f0044 	ldr	r0, [pc, #68]	; 4000d27c <_tx_mutex_priority_change+0x84>
4000d234:	e5900000 	ldr	r0, [r0]
4000d238:	e2800002 	add	r0, r0, #2
4000d23c:	e59f1038 	ldr	r1, [pc, #56]	; 4000d27c <_tx_mutex_priority_change+0x84>
4000d240:	e5810000 	str	r0, [r1]
4000d244:	e3a00003 	mov	r0, #3
4000d248:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d24c:	e3a00001 	mov	r0, #1
4000d250:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d254:	e3a00000 	mov	r0, #0
4000d258:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d25c:	e121f007 	msr	CPSR_c, r7
4000d260:	e1a00004 	mov	r0, r4
4000d264:	ebffee74 	bl	40008c3c <_tx_thread_system_suspend>
4000d268:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d26c:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d270:	e1a00004 	mov	r0, r4
4000d274:	eb000817 	bl	4000f2d8 <_tx_thread_system_resume>
4000d278:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d27c:	40030e6c 	.word	0x40030e6c

4000d280 <_tx_mutex_put>:
4000d280:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d284:	e1a04000 	mov	r4, r0
4000d288:	e10f5000 	mrs	r5, CPSR
4000d28c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d290:	e121f006 	msr	CPSR_c, r6
4000d294:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d730 <_tx_mutex_put+0x4b0>
4000d298:	e5910000 	ldr	r0, [r1]
4000d29c:	e3500000 	cmp	r0, #0
4000d2a0:	0a000032 	beq	4000d370 <_tx_mutex_put+0xf0>
4000d2a4:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d734 <_tx_mutex_put+0x4b4>
4000d2a8:	e5911000 	ldr	r1, [r1]
4000d2ac:	e2811001 	add	r1, r1, #1
4000d2b0:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d734 <_tx_mutex_put+0x4b4>
4000d2b4:	e5821000 	str	r1, [r2]
4000d2b8:	e580100c 	str	r1, [r0, #12]
4000d2bc:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d738 <_tx_mutex_put+0x4b8>
4000d2c0:	e5911000 	ldr	r1, [r1]
4000d2c4:	e3510000 	cmp	r1, #0
4000d2c8:	1a000006 	bne	4000d2e8 <_tx_mutex_put+0x68>
4000d2cc:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d73c <_tx_mutex_put+0x4bc>
4000d2d0:	e5911000 	ldr	r1, [r1]
4000d2d4:	e5801000 	str	r1, [r0]
4000d2d8:	e5901000 	ldr	r1, [r0]
4000d2dc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d2e0:	e5801004 	str	r1, [r0, #4]
4000d2e4:	ea00000d 	b	4000d320 <_tx_mutex_put+0xa0>
4000d2e8:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d738 <_tx_mutex_put+0x4b8>
4000d2ec:	e5911000 	ldr	r1, [r1]
4000d2f0:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d740 <_tx_mutex_put+0x4c0>
4000d2f4:	e1510002 	cmp	r1, r2
4000d2f8:	2a000004 	bcs	4000d310 <_tx_mutex_put+0x90>
4000d2fc:	e3e01000 	mvn	r1, #0
4000d300:	e5801000 	str	r1, [r0]
4000d304:	e3a01000 	mov	r1, #0
4000d308:	e5801004 	str	r1, [r0, #4]
4000d30c:	ea000003 	b	4000d320 <_tx_mutex_put+0xa0>
4000d310:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d740 <_tx_mutex_put+0x4c0>
4000d314:	e5801000 	str	r1, [r0]
4000d318:	e3a01000 	mov	r1, #0
4000d31c:	e5801004 	str	r1, [r0, #4]
4000d320:	e3a01039 	mov	r1, #57	; 0x39
4000d324:	e5801008 	str	r1, [r0, #8]
4000d328:	e5804010 	str	r4, [r0, #16]
4000d32c:	e594100c 	ldr	r1, [r4, #12]
4000d330:	e5801014 	str	r1, [r0, #20]
4000d334:	e5941008 	ldr	r1, [r4, #8]
4000d338:	e5801018 	str	r1, [r0, #24]
4000d33c:	e580d01c 	str	sp, [r0, #28]
4000d340:	e2800020 	add	r0, r0, #32
4000d344:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d744 <_tx_mutex_put+0x4c4>
4000d348:	e5911000 	ldr	r1, [r1]
4000d34c:	e1500001 	cmp	r0, r1
4000d350:	3a000001 	bcc	4000d35c <_tx_mutex_put+0xdc>
4000d354:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d748 <_tx_mutex_put+0x4c8>
4000d358:	e5910000 	ldr	r0, [r1]
4000d35c:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d730 <_tx_mutex_put+0x4b0>
4000d360:	e5810000 	str	r0, [r1]
4000d364:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d74c <_tx_mutex_put+0x4cc>
4000d368:	e5911000 	ldr	r1, [r1]
4000d36c:	e5810020 	str	r0, [r1, #32]
4000d370:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d73c <_tx_mutex_put+0x4bc>
4000d374:	e5907000 	ldr	r7, [r0]
4000d378:	e5940008 	ldr	r0, [r4, #8]
4000d37c:	e3500000 	cmp	r0, #0
4000d380:	0a0000e7 	beq	4000d724 <_tx_mutex_put+0x4a4>
4000d384:	e594000c 	ldr	r0, [r4, #12]
4000d388:	e1500007 	cmp	r0, r7
4000d38c:	1a0000e4 	bne	4000d724 <_tx_mutex_put+0x4a4>
4000d390:	e5940008 	ldr	r0, [r4, #8]
4000d394:	e2400001 	sub	r0, r0, #1
4000d398:	e5840008 	str	r0, [r4, #8]
4000d39c:	e5940008 	ldr	r0, [r4, #8]
4000d3a0:	e3500000 	cmp	r0, #0
4000d3a4:	0a000002 	beq	4000d3b4 <_tx_mutex_put+0x134>
4000d3a8:	e121f005 	msr	CPSR_c, r5
4000d3ac:	e3a00000 	mov	r0, #0
4000d3b0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d3b4:	e3a08000 	mov	r8, #0
4000d3b8:	e3a09000 	mov	r9, #0
4000d3bc:	e3a0a000 	mov	sl, #0
4000d3c0:	e5940010 	ldr	r0, [r4, #16]
4000d3c4:	e3500000 	cmp	r0, #0
4000d3c8:	0a000033 	beq	4000d49c <_tx_mutex_put+0x21c>
4000d3cc:	e3570000 	cmp	r7, #0
4000d3d0:	0a000031 	beq	4000d49c <_tx_mutex_put+0x21c>
4000d3d4:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d3d8:	e2400001 	sub	r0, r0, #1
4000d3dc:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d3e0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d3e4:	e3500000 	cmp	r0, #0
4000d3e8:	1a000002 	bne	4000d3f8 <_tx_mutex_put+0x178>
4000d3ec:	e3a00000 	mov	r0, #0
4000d3f0:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d3f4:	ea00000a 	b	4000d424 <_tx_mutex_put+0x1a4>
4000d3f8:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d3fc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d400:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d404:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d408:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d40c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d410:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d414:	e1500004 	cmp	r0, r4
4000d418:	1a000001 	bne	4000d424 <_tx_mutex_put+0x1a4>
4000d41c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d420:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d424:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d428:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d42c:	e59f031c 	ldr	r0, [pc, #796]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d430:	e5900000 	ldr	r0, [r0]
4000d434:	e2800001 	add	r0, r0, #1
4000d438:	e59f1310 	ldr	r1, [pc, #784]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d43c:	e5810000 	str	r0, [r1]
4000d440:	e121f005 	msr	CPSR_c, r5
4000d444:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d448:	ea000009 	b	4000d474 <_tx_mutex_put+0x1f4>
4000d44c:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d450:	e1500009 	cmp	r0, r9
4000d454:	2a000001 	bcs	4000d460 <_tx_mutex_put+0x1e0>
4000d458:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d45c:	e1a0a009 	mov	sl, r9
4000d460:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d464:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d468:	e150000b 	cmp	r0, fp
4000d46c:	1a000000 	bne	4000d474 <_tx_mutex_put+0x1f4>
4000d470:	e3a0b000 	mov	fp, #0
4000d474:	e35b0000 	cmp	fp, #0
4000d478:	1afffff3 	bne	4000d44c <_tx_mutex_put+0x1cc>
4000d47c:	e10f5000 	mrs	r5, CPSR
4000d480:	e3856080 	orr	r6, r5, #128	; 0x80
4000d484:	e121f006 	msr	CPSR_c, r6
4000d488:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d48c:	e5900000 	ldr	r0, [r0]
4000d490:	e2400001 	sub	r0, r0, #1
4000d494:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d498:	e5810000 	str	r0, [r1]
4000d49c:	e5940020 	ldr	r0, [r4, #32]
4000d4a0:	e3500001 	cmp	r0, #1
4000d4a4:	9a000012 	bls	4000d4f4 <_tx_mutex_put+0x274>
4000d4a8:	e5940010 	ldr	r0, [r4, #16]
4000d4ac:	e3500000 	cmp	r0, #0
4000d4b0:	0a00000f 	beq	4000d4f4 <_tx_mutex_put+0x274>
4000d4b4:	e59f0294 	ldr	r0, [pc, #660]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d4b8:	e5900000 	ldr	r0, [r0]
4000d4bc:	e2800001 	add	r0, r0, #1
4000d4c0:	e59f1288 	ldr	r1, [pc, #648]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d4c4:	e5810000 	str	r0, [r1]
4000d4c8:	e121f005 	msr	CPSR_c, r5
4000d4cc:	e1a00004 	mov	r0, r4
4000d4d0:	eb000bec 	bl	40010488 <_tx_mutex_prioritize>
4000d4d4:	e10f5000 	mrs	r5, CPSR
4000d4d8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d4dc:	e121f006 	msr	CPSR_c, r6
4000d4e0:	e59f0268 	ldr	r0, [pc, #616]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d4e4:	e5900000 	ldr	r0, [r0]
4000d4e8:	e2400001 	sub	r0, r0, #1
4000d4ec:	e59f125c 	ldr	r1, [pc, #604]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d4f0:	e5810000 	str	r0, [r1]
4000d4f4:	e594001c 	ldr	r0, [r4, #28]
4000d4f8:	e3500000 	cmp	r0, #0
4000d4fc:	1a000024 	bne	4000d594 <_tx_mutex_put+0x314>
4000d500:	e59f0248 	ldr	r0, [pc, #584]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d504:	e5900000 	ldr	r0, [r0]
4000d508:	e2800001 	add	r0, r0, #1
4000d50c:	e59f123c 	ldr	r1, [pc, #572]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d510:	e5810000 	str	r0, [r1]
4000d514:	e121f005 	msr	CPSR_c, r5
4000d518:	e5940010 	ldr	r0, [r4, #16]
4000d51c:	e3500000 	cmp	r0, #0
4000d520:	0a00000a 	beq	4000d550 <_tx_mutex_put+0x2d0>
4000d524:	e3a00020 	mov	r0, #32
4000d528:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d52c:	e3570000 	cmp	r7, #0
4000d530:	0a000006 	beq	4000d550 <_tx_mutex_put+0x2d0>
4000d534:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d538:	e1500009 	cmp	r0, r9
4000d53c:	0a000003 	beq	4000d550 <_tx_mutex_put+0x2d0>
4000d540:	e1a0200a 	mov	r2, sl
4000d544:	e1a01009 	mov	r1, r9
4000d548:	e594000c 	ldr	r0, [r4, #12]
4000d54c:	ebffff29 	bl	4000d1f8 <_tx_mutex_priority_change>
4000d550:	e10f5000 	mrs	r5, CPSR
4000d554:	e3856080 	orr	r6, r5, #128	; 0x80
4000d558:	e121f006 	msr	CPSR_c, r6
4000d55c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d560:	e5900000 	ldr	r0, [r0]
4000d564:	e2400001 	sub	r0, r0, #1
4000d568:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d56c:	e5810000 	str	r0, [r1]
4000d570:	e5940008 	ldr	r0, [r4, #8]
4000d574:	e3500000 	cmp	r0, #0
4000d578:	1a000001 	bne	4000d584 <_tx_mutex_put+0x304>
4000d57c:	e3a00000 	mov	r0, #0
4000d580:	e584000c 	str	r0, [r4, #12]
4000d584:	e121f005 	msr	CPSR_c, r5
4000d588:	eb000726 	bl	4000f228 <_tx_thread_system_preempt_check>
4000d58c:	e3a00000 	mov	r0, #0
4000d590:	eaffff86 	b	4000d3b0 <_tx_mutex_put+0x130>
4000d594:	e594701c 	ldr	r7, [r4, #28]
4000d598:	e5940010 	ldr	r0, [r4, #16]
4000d59c:	e3500000 	cmp	r0, #0
4000d5a0:	0a00001f 	beq	4000d624 <_tx_mutex_put+0x3a4>
4000d5a4:	e594800c 	ldr	r8, [r4, #12]
4000d5a8:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d5ac:	e5840014 	str	r0, [r4, #20]
4000d5b0:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d5b4:	e5840018 	str	r0, [r4, #24]
4000d5b8:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d5bc:	e3500000 	cmp	r0, #0
4000d5c0:	0a00000b 	beq	4000d5f4 <_tx_mutex_put+0x374>
4000d5c4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d5c8:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d5cc:	e58d0000 	str	r0, [sp]
4000d5d0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d5d4:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d5d8:	e59d0000 	ldr	r0, [sp]
4000d5dc:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d5e0:	e59d0000 	ldr	r0, [sp]
4000d5e4:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d5e8:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d5ec:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d5f0:	ea000006 	b	4000d610 <_tx_mutex_put+0x390>
4000d5f4:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d5f8:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d5fc:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d600:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d604:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d608:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d60c:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d610:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d614:	e2800001 	add	r0, r0, #1
4000d618:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d61c:	e3a00020 	mov	r0, #32
4000d620:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d624:	e3a00001 	mov	r0, #1
4000d628:	e5840008 	str	r0, [r4, #8]
4000d62c:	e584700c 	str	r7, [r4, #12]
4000d630:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d634:	e1500007 	cmp	r0, r7
4000d638:	1a000002 	bne	4000d648 <_tx_mutex_put+0x3c8>
4000d63c:	e3a00000 	mov	r0, #0
4000d640:	e584001c 	str	r0, [r4, #28]
4000d644:	ea000007 	b	4000d668 <_tx_mutex_put+0x3e8>
4000d648:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d64c:	e584001c 	str	r0, [r4, #28]
4000d650:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d654:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d658:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d65c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d660:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d664:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d668:	e5940020 	ldr	r0, [r4, #32]
4000d66c:	e2400001 	sub	r0, r0, #1
4000d670:	e5840020 	str	r0, [r4, #32]
4000d674:	e3a00000 	mov	r0, #0
4000d678:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d67c:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d680:	e5900000 	ldr	r0, [r0]
4000d684:	e2800001 	add	r0, r0, #1
4000d688:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d750 <_tx_mutex_put+0x4d0>
4000d68c:	e5810000 	str	r0, [r1]
4000d690:	e121f005 	msr	CPSR_c, r5
4000d694:	e3a00000 	mov	r0, #0
4000d698:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d69c:	e5940010 	ldr	r0, [r4, #16]
4000d6a0:	e3500000 	cmp	r0, #0
4000d6a4:	0a00001a 	beq	4000d714 <_tx_mutex_put+0x494>
4000d6a8:	e5940020 	ldr	r0, [r4, #32]
4000d6ac:	e3500000 	cmp	r0, #0
4000d6b0:	0a00000e 	beq	4000d6f0 <_tx_mutex_put+0x470>
4000d6b4:	e5940020 	ldr	r0, [r4, #32]
4000d6b8:	e3500001 	cmp	r0, #1
4000d6bc:	9a000001 	bls	4000d6c8 <_tx_mutex_put+0x448>
4000d6c0:	e1a00004 	mov	r0, r4
4000d6c4:	eb000b6f 	bl	40010488 <_tx_mutex_prioritize>
4000d6c8:	e10f5000 	mrs	r5, CPSR
4000d6cc:	e3856080 	orr	r6, r5, #128	; 0x80
4000d6d0:	e121f006 	msr	CPSR_c, r6
4000d6d4:	e594001c 	ldr	r0, [r4, #28]
4000d6d8:	e3500000 	cmp	r0, #0
4000d6dc:	0a000002 	beq	4000d6ec <_tx_mutex_put+0x46c>
4000d6e0:	e594001c 	ldr	r0, [r4, #28]
4000d6e4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d6e8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d6ec:	e121f005 	msr	CPSR_c, r5
4000d6f0:	e3580000 	cmp	r8, #0
4000d6f4:	0a000006 	beq	4000d714 <_tx_mutex_put+0x494>
4000d6f8:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d6fc:	e1500009 	cmp	r0, r9
4000d700:	0a000003 	beq	4000d714 <_tx_mutex_put+0x494>
4000d704:	e1a0200a 	mov	r2, sl
4000d708:	e1a01009 	mov	r1, r9
4000d70c:	e1a00008 	mov	r0, r8
4000d710:	ebfffeb8 	bl	4000d1f8 <_tx_mutex_priority_change>
4000d714:	e1a00007 	mov	r0, r7
4000d718:	eb0006ee 	bl	4000f2d8 <_tx_thread_system_resume>
4000d71c:	e3a00000 	mov	r0, #0
4000d720:	eaffff22 	b	4000d3b0 <_tx_mutex_put+0x130>
4000d724:	e121f005 	msr	CPSR_c, r5
4000d728:	e3a0001e 	mov	r0, #30
4000d72c:	eaffff1f 	b	4000d3b0 <_tx_mutex_put+0x130>
4000d730:	40030ebc 	.word	0x40030ebc
4000d734:	40030ec0 	.word	0x40030ec0
4000d738:	40030e48 	.word	0x40030e48
4000d73c:	40030e50 	.word	0x40030e50
4000d740:	f0f0f0f0 	.word	0xf0f0f0f0
4000d744:	40030eb8 	.word	0x40030eb8
4000d748:	40030eb4 	.word	0x40030eb4
4000d74c:	40030ea8 	.word	0x40030ea8
4000d750:	40030e6c 	.word	0x40030e6c

4000d754 <_tx_queue_create>:
4000d754:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d758:	e1a04000 	mov	r4, r0
4000d75c:	e1a05001 	mov	r5, r1
4000d760:	e1a06002 	mov	r6, r2
4000d764:	e1a07003 	mov	r7, r3
4000d768:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d76c:	e3a0103c 	mov	r1, #60	; 0x3c
4000d770:	e1a00004 	mov	r0, r4
4000d774:	eb001792 	bl	400135c4 <__aeabi_memclr4>
4000d778:	e5845004 	str	r5, [r4, #4]
4000d77c:	e5846008 	str	r6, [r4, #8]
4000d780:	e1a01106 	lsl	r1, r6, #2
4000d784:	e1a00008 	mov	r0, r8
4000d788:	eb000ca6 	bl	40010a28 <__aeabi_uidivmod>
4000d78c:	e1a0b000 	mov	fp, r0
4000d790:	e000069b 	mul	r0, fp, r6
4000d794:	e58d0004 	str	r0, [sp, #4]
4000d798:	e5847018 	str	r7, [r4, #24]
4000d79c:	e59d0004 	ldr	r0, [sp, #4]
4000d7a0:	e0870100 	add	r0, r7, r0, lsl #2
4000d7a4:	e584001c 	str	r0, [r4, #28]
4000d7a8:	e5847020 	str	r7, [r4, #32]
4000d7ac:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d7b0:	e584b014 	str	fp, [r4, #20]
4000d7b4:	e584b00c 	str	fp, [r4, #12]
4000d7b8:	e10f9000 	mrs	r9, CPSR
4000d7bc:	e3890080 	orr	r0, r9, #128	; 0x80
4000d7c0:	e58d0008 	str	r0, [sp, #8]
4000d7c4:	e59d0008 	ldr	r0, [sp, #8]
4000d7c8:	e121f000 	msr	CPSR_c, r0
4000d7cc:	e59f0160 	ldr	r0, [pc, #352]	; 4000d934 <_tx_queue_create+0x1e0>
4000d7d0:	e5840000 	str	r0, [r4]
4000d7d4:	e59f015c 	ldr	r0, [pc, #348]	; 4000d938 <_tx_queue_create+0x1e4>
4000d7d8:	e5900000 	ldr	r0, [r0]
4000d7dc:	e3500000 	cmp	r0, #0
4000d7e0:	0a00000b 	beq	4000d814 <_tx_queue_create+0xc0>
4000d7e4:	e59f014c 	ldr	r0, [pc, #332]	; 4000d938 <_tx_queue_create+0x1e4>
4000d7e8:	e5900000 	ldr	r0, [r0]
4000d7ec:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d7f0:	e59f0140 	ldr	r0, [pc, #320]	; 4000d938 <_tx_queue_create+0x1e4>
4000d7f4:	e5900000 	ldr	r0, [r0]
4000d7f8:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d7fc:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d800:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d804:	e59f012c 	ldr	r0, [pc, #300]	; 4000d938 <_tx_queue_create+0x1e4>
4000d808:	e5900000 	ldr	r0, [r0]
4000d80c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d810:	ea000003 	b	4000d824 <_tx_queue_create+0xd0>
4000d814:	e59f011c 	ldr	r0, [pc, #284]	; 4000d938 <_tx_queue_create+0x1e4>
4000d818:	e5804000 	str	r4, [r0]
4000d81c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d820:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d824:	e59f0110 	ldr	r0, [pc, #272]	; 4000d93c <_tx_queue_create+0x1e8>
4000d828:	e5900000 	ldr	r0, [r0]
4000d82c:	e2800001 	add	r0, r0, #1
4000d830:	e59f1104 	ldr	r1, [pc, #260]	; 4000d93c <_tx_queue_create+0x1e8>
4000d834:	e5810000 	str	r0, [r1]
4000d838:	e3a03000 	mov	r3, #0
4000d83c:	e58d3000 	str	r3, [sp]
4000d840:	e1a03008 	mov	r3, r8
4000d844:	e1a02005 	mov	r2, r5
4000d848:	e1a01004 	mov	r1, r4
4000d84c:	e3a00003 	mov	r0, #3
4000d850:	eb0009f6 	bl	40010030 <_tx_trace_object_register>
4000d854:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d940 <_tx_queue_create+0x1ec>
4000d858:	e5910000 	ldr	r0, [r1]
4000d85c:	e3500000 	cmp	r0, #0
4000d860:	0a000030 	beq	4000d928 <_tx_queue_create+0x1d4>
4000d864:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d944 <_tx_queue_create+0x1f0>
4000d868:	e5911000 	ldr	r1, [r1]
4000d86c:	e2811001 	add	r1, r1, #1
4000d870:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d944 <_tx_queue_create+0x1f0>
4000d874:	e5821000 	str	r1, [r2]
4000d878:	e580100c 	str	r1, [r0, #12]
4000d87c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d948 <_tx_queue_create+0x1f4>
4000d880:	e5911000 	ldr	r1, [r1]
4000d884:	e3510000 	cmp	r1, #0
4000d888:	1a000006 	bne	4000d8a8 <_tx_queue_create+0x154>
4000d88c:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d94c <_tx_queue_create+0x1f8>
4000d890:	e5911000 	ldr	r1, [r1]
4000d894:	e5801000 	str	r1, [r0]
4000d898:	e5901000 	ldr	r1, [r0]
4000d89c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d8a0:	e5801004 	str	r1, [r0, #4]
4000d8a4:	ea00000d 	b	4000d8e0 <_tx_queue_create+0x18c>
4000d8a8:	e59f1098 	ldr	r1, [pc, #152]	; 4000d948 <_tx_queue_create+0x1f4>
4000d8ac:	e5911000 	ldr	r1, [r1]
4000d8b0:	e59f2098 	ldr	r2, [pc, #152]	; 4000d950 <_tx_queue_create+0x1fc>
4000d8b4:	e1510002 	cmp	r1, r2
4000d8b8:	2a000004 	bcs	4000d8d0 <_tx_queue_create+0x17c>
4000d8bc:	e3e01000 	mvn	r1, #0
4000d8c0:	e5801000 	str	r1, [r0]
4000d8c4:	e3a01000 	mov	r1, #0
4000d8c8:	e5801004 	str	r1, [r0, #4]
4000d8cc:	ea000003 	b	4000d8e0 <_tx_queue_create+0x18c>
4000d8d0:	e59f1078 	ldr	r1, [pc, #120]	; 4000d950 <_tx_queue_create+0x1fc>
4000d8d4:	e5801000 	str	r1, [r0]
4000d8d8:	e3a01000 	mov	r1, #0
4000d8dc:	e5801004 	str	r1, [r0, #4]
4000d8e0:	e3a0103c 	mov	r1, #60	; 0x3c
4000d8e4:	e5801008 	str	r1, [r0, #8]
4000d8e8:	e5804010 	str	r4, [r0, #16]
4000d8ec:	e5806014 	str	r6, [r0, #20]
4000d8f0:	e5807018 	str	r7, [r0, #24]
4000d8f4:	e580801c 	str	r8, [r0, #28]
4000d8f8:	e2800020 	add	r0, r0, #32
4000d8fc:	e59f1050 	ldr	r1, [pc, #80]	; 4000d954 <_tx_queue_create+0x200>
4000d900:	e5911000 	ldr	r1, [r1]
4000d904:	e1500001 	cmp	r0, r1
4000d908:	3a000001 	bcc	4000d914 <_tx_queue_create+0x1c0>
4000d90c:	e59f1044 	ldr	r1, [pc, #68]	; 4000d958 <_tx_queue_create+0x204>
4000d910:	e5910000 	ldr	r0, [r1]
4000d914:	e59f1024 	ldr	r1, [pc, #36]	; 4000d940 <_tx_queue_create+0x1ec>
4000d918:	e5810000 	str	r0, [r1]
4000d91c:	e59f1038 	ldr	r1, [pc, #56]	; 4000d95c <_tx_queue_create+0x208>
4000d920:	e5911000 	ldr	r1, [r1]
4000d924:	e5810020 	str	r0, [r1, #32]
4000d928:	e121f009 	msr	CPSR_c, r9
4000d92c:	e3a00000 	mov	r0, #0
4000d930:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d934:	51554555 	.word	0x51554555
4000d938:	40030ecc 	.word	0x40030ecc
4000d93c:	40030ed0 	.word	0x40030ed0
4000d940:	40030ebc 	.word	0x40030ebc
4000d944:	40030ec0 	.word	0x40030ec0
4000d948:	40030e48 	.word	0x40030e48
4000d94c:	40030e50 	.word	0x40030e50
4000d950:	f0f0f0f0 	.word	0xf0f0f0f0
4000d954:	40030eb8 	.word	0x40030eb8
4000d958:	40030eb4 	.word	0x40030eb4
4000d95c:	40030ea8 	.word	0x40030ea8

4000d960 <_tx_queue_front_send>:
4000d960:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d964:	e1a04000 	mov	r4, r0
4000d968:	e1a05001 	mov	r5, r1
4000d96c:	e1a06002 	mov	r6, r2
4000d970:	e10f7000 	mrs	r7, CPSR
4000d974:	e3870080 	orr	r0, r7, #128	; 0x80
4000d978:	e58d0004 	str	r0, [sp, #4]
4000d97c:	e59d0004 	ldr	r0, [sp, #4]
4000d980:	e121f000 	msr	CPSR_c, r0
4000d984:	e59f1368 	ldr	r1, [pc, #872]	; 4000dcf4 <_tx_queue_front_send+0x394>
4000d988:	e5910000 	ldr	r0, [r1]
4000d98c:	e3500000 	cmp	r0, #0
4000d990:	0a000031 	beq	4000da5c <_tx_queue_front_send+0xfc>
4000d994:	e59f135c 	ldr	r1, [pc, #860]	; 4000dcf8 <_tx_queue_front_send+0x398>
4000d998:	e5911000 	ldr	r1, [r1]
4000d99c:	e2811001 	add	r1, r1, #1
4000d9a0:	e59f2350 	ldr	r2, [pc, #848]	; 4000dcf8 <_tx_queue_front_send+0x398>
4000d9a4:	e5821000 	str	r1, [r2]
4000d9a8:	e580100c 	str	r1, [r0, #12]
4000d9ac:	e59f1348 	ldr	r1, [pc, #840]	; 4000dcfc <_tx_queue_front_send+0x39c>
4000d9b0:	e5911000 	ldr	r1, [r1]
4000d9b4:	e3510000 	cmp	r1, #0
4000d9b8:	1a000006 	bne	4000d9d8 <_tx_queue_front_send+0x78>
4000d9bc:	e59f133c 	ldr	r1, [pc, #828]	; 4000dd00 <_tx_queue_front_send+0x3a0>
4000d9c0:	e5911000 	ldr	r1, [r1]
4000d9c4:	e5801000 	str	r1, [r0]
4000d9c8:	e5901000 	ldr	r1, [r0]
4000d9cc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d9d0:	e5801004 	str	r1, [r0, #4]
4000d9d4:	ea00000d 	b	4000da10 <_tx_queue_front_send+0xb0>
4000d9d8:	e59f131c 	ldr	r1, [pc, #796]	; 4000dcfc <_tx_queue_front_send+0x39c>
4000d9dc:	e5911000 	ldr	r1, [r1]
4000d9e0:	e59f231c 	ldr	r2, [pc, #796]	; 4000dd04 <_tx_queue_front_send+0x3a4>
4000d9e4:	e1510002 	cmp	r1, r2
4000d9e8:	2a000004 	bcs	4000da00 <_tx_queue_front_send+0xa0>
4000d9ec:	e3e01000 	mvn	r1, #0
4000d9f0:	e5801000 	str	r1, [r0]
4000d9f4:	e3a01000 	mov	r1, #0
4000d9f8:	e5801004 	str	r1, [r0, #4]
4000d9fc:	ea000003 	b	4000da10 <_tx_queue_front_send+0xb0>
4000da00:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dd04 <_tx_queue_front_send+0x3a4>
4000da04:	e5801000 	str	r1, [r0]
4000da08:	e3a01000 	mov	r1, #0
4000da0c:	e5801004 	str	r1, [r0, #4]
4000da10:	e3a0103f 	mov	r1, #63	; 0x3f
4000da14:	e5801008 	str	r1, [r0, #8]
4000da18:	e5804010 	str	r4, [r0, #16]
4000da1c:	e5805014 	str	r5, [r0, #20]
4000da20:	e5806018 	str	r6, [r0, #24]
4000da24:	e5941010 	ldr	r1, [r4, #16]
4000da28:	e580101c 	str	r1, [r0, #28]
4000da2c:	e2800020 	add	r0, r0, #32
4000da30:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dd08 <_tx_queue_front_send+0x3a8>
4000da34:	e5911000 	ldr	r1, [r1]
4000da38:	e1500001 	cmp	r0, r1
4000da3c:	3a000001 	bcc	4000da48 <_tx_queue_front_send+0xe8>
4000da40:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dd0c <_tx_queue_front_send+0x3ac>
4000da44:	e5910000 	ldr	r0, [r1]
4000da48:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dcf4 <_tx_queue_front_send+0x394>
4000da4c:	e5810000 	str	r0, [r1]
4000da50:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dd10 <_tx_queue_front_send+0x3b0>
4000da54:	e5911000 	ldr	r1, [r1]
4000da58:	e5810020 	str	r0, [r1, #32]
4000da5c:	e5940014 	ldr	r0, [r4, #20]
4000da60:	e3500000 	cmp	r0, #0
4000da64:	0a000064 	beq	4000dbfc <_tx_queue_front_send+0x29c>
4000da68:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000da6c:	e3500000 	cmp	r0, #0
4000da70:	1a00002b 	bne	4000db24 <_tx_queue_front_send+0x1c4>
4000da74:	e5940020 	ldr	r0, [r4, #32]
4000da78:	e5941018 	ldr	r1, [r4, #24]
4000da7c:	e1500001 	cmp	r0, r1
4000da80:	1a000004 	bne	4000da98 <_tx_queue_front_send+0x138>
4000da84:	e594001c 	ldr	r0, [r4, #28]
4000da88:	e5941008 	ldr	r1, [r4, #8]
4000da8c:	e0400101 	sub	r0, r0, r1, lsl #2
4000da90:	e5840020 	str	r0, [r4, #32]
4000da94:	ea000003 	b	4000daa8 <_tx_queue_front_send+0x148>
4000da98:	e5940020 	ldr	r0, [r4, #32]
4000da9c:	e5941008 	ldr	r1, [r4, #8]
4000daa0:	e0400101 	sub	r0, r0, r1, lsl #2
4000daa4:	e5840020 	str	r0, [r4, #32]
4000daa8:	e5940014 	ldr	r0, [r4, #20]
4000daac:	e2400001 	sub	r0, r0, #1
4000dab0:	e5840014 	str	r0, [r4, #20]
4000dab4:	e5940010 	ldr	r0, [r4, #16]
4000dab8:	e2800001 	add	r0, r0, #1
4000dabc:	e5840010 	str	r0, [r4, #16]
4000dac0:	e1a09005 	mov	r9, r5
4000dac4:	e594a020 	ldr	sl, [r4, #32]
4000dac8:	e594b008 	ldr	fp, [r4, #8]
4000dacc:	e1a00000 	nop			; (mov r0, r0)
4000dad0:	e5990000 	ldr	r0, [r9]
4000dad4:	e58a0000 	str	r0, [sl]
4000dad8:	e24bb001 	sub	fp, fp, #1
4000dadc:	e35b0000 	cmp	fp, #0
4000dae0:	1a000000 	bne	4000dae8 <_tx_queue_front_send+0x188>
4000dae4:	ea000002 	b	4000daf4 <_tx_queue_front_send+0x194>
4000dae8:	e28aa004 	add	sl, sl, #4
4000daec:	e2899004 	add	r9, r9, #4
4000daf0:	eafffff6 	b	4000dad0 <_tx_queue_front_send+0x170>
4000daf4:	e1a00000 	nop			; (mov r0, r0)
4000daf8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dafc:	e58d0000 	str	r0, [sp]
4000db00:	e121f007 	msr	CPSR_c, r7
4000db04:	e59d0000 	ldr	r0, [sp]
4000db08:	e3500000 	cmp	r0, #0
4000db0c:	0a000002 	beq	4000db1c <_tx_queue_front_send+0x1bc>
4000db10:	e1a00004 	mov	r0, r4
4000db14:	e59d1000 	ldr	r1, [sp]
4000db18:	e12fff31 	blx	r1
4000db1c:	e3a00000 	mov	r0, #0
4000db20:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000db24:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000db28:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000db2c:	e1500008 	cmp	r0, r8
4000db30:	1a000002 	bne	4000db40 <_tx_queue_front_send+0x1e0>
4000db34:	e3a00000 	mov	r0, #0
4000db38:	e5840028 	str	r0, [r4, #40]	; 0x28
4000db3c:	ea000007 	b	4000db60 <_tx_queue_front_send+0x200>
4000db40:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000db44:	e5840028 	str	r0, [r4, #40]	; 0x28
4000db48:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000db4c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000db50:	e5810074 	str	r0, [r1, #116]	; 0x74
4000db54:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000db58:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000db5c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000db60:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000db64:	e2400001 	sub	r0, r0, #1
4000db68:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000db6c:	e3a00000 	mov	r0, #0
4000db70:	e5880068 	str	r0, [r8, #104]	; 0x68
4000db74:	e59f0198 	ldr	r0, [pc, #408]	; 4000dd14 <_tx_queue_front_send+0x3b4>
4000db78:	e5900000 	ldr	r0, [r0]
4000db7c:	e2800001 	add	r0, r0, #1
4000db80:	e59f118c 	ldr	r1, [pc, #396]	; 4000dd14 <_tx_queue_front_send+0x3b4>
4000db84:	e5810000 	str	r0, [r1]
4000db88:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db8c:	e58d0000 	str	r0, [sp]
4000db90:	e121f007 	msr	CPSR_c, r7
4000db94:	e1a09005 	mov	r9, r5
4000db98:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000db9c:	e594b008 	ldr	fp, [r4, #8]
4000dba0:	e1a00000 	nop			; (mov r0, r0)
4000dba4:	e5990000 	ldr	r0, [r9]
4000dba8:	e58a0000 	str	r0, [sl]
4000dbac:	e24bb001 	sub	fp, fp, #1
4000dbb0:	e35b0000 	cmp	fp, #0
4000dbb4:	1a000000 	bne	4000dbbc <_tx_queue_front_send+0x25c>
4000dbb8:	ea000002 	b	4000dbc8 <_tx_queue_front_send+0x268>
4000dbbc:	e28aa004 	add	sl, sl, #4
4000dbc0:	e2899004 	add	r9, r9, #4
4000dbc4:	eafffff6 	b	4000dba4 <_tx_queue_front_send+0x244>
4000dbc8:	e1a00000 	nop			; (mov r0, r0)
4000dbcc:	e3a00000 	mov	r0, #0
4000dbd0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dbd4:	e1a00008 	mov	r0, r8
4000dbd8:	eb0005be 	bl	4000f2d8 <_tx_thread_system_resume>
4000dbdc:	e59d0000 	ldr	r0, [sp]
4000dbe0:	e3500000 	cmp	r0, #0
4000dbe4:	0a000002 	beq	4000dbf4 <_tx_queue_front_send+0x294>
4000dbe8:	e1a00004 	mov	r0, r4
4000dbec:	e59d1000 	ldr	r1, [sp]
4000dbf0:	e12fff31 	blx	r1
4000dbf4:	e3a00000 	mov	r0, #0
4000dbf8:	eaffffc8 	b	4000db20 <_tx_queue_front_send+0x1c0>
4000dbfc:	e3560000 	cmp	r6, #0
4000dc00:	0a000038 	beq	4000dce8 <_tx_queue_front_send+0x388>
4000dc04:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dd00 <_tx_queue_front_send+0x3a0>
4000dc08:	e5908000 	ldr	r8, [r0]
4000dc0c:	e59f0104 	ldr	r0, [pc, #260]	; 4000dd18 <_tx_queue_front_send+0x3b8>
4000dc10:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dc14:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000dc18:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000dc1c:	e3a00001 	mov	r0, #1
4000dc20:	e5880080 	str	r0, [r8, #128]	; 0x80
4000dc24:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc28:	e3500000 	cmp	r0, #0
4000dc2c:	0a00000b 	beq	4000dc60 <_tx_queue_front_send+0x300>
4000dc30:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc34:	e5880070 	str	r0, [r8, #112]	; 0x70
4000dc38:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc3c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dc40:	e5880074 	str	r0, [r8, #116]	; 0x74
4000dc44:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc48:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dc4c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dc50:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc54:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dc58:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dc5c:	ea000002 	b	4000dc6c <_tx_queue_front_send+0x30c>
4000dc60:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dc64:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dc68:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dc6c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dc70:	e2800001 	add	r0, r0, #1
4000dc74:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dc78:	e3a00005 	mov	r0, #5
4000dc7c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dc80:	e3a00001 	mov	r0, #1
4000dc84:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dc88:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dc8c:	e59f0080 	ldr	r0, [pc, #128]	; 4000dd14 <_tx_queue_front_send+0x3b4>
4000dc90:	e5900000 	ldr	r0, [r0]
4000dc94:	e2800001 	add	r0, r0, #1
4000dc98:	e59f1074 	ldr	r1, [pc, #116]	; 4000dd14 <_tx_queue_front_send+0x3b4>
4000dc9c:	e5810000 	str	r0, [r1]
4000dca0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dca4:	e58d0000 	str	r0, [sp]
4000dca8:	e121f007 	msr	CPSR_c, r7
4000dcac:	e1a00008 	mov	r0, r8
4000dcb0:	ebffebe1 	bl	40008c3c <_tx_thread_system_suspend>
4000dcb4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dcb8:	e58d0000 	str	r0, [sp]
4000dcbc:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dcc0:	e3500000 	cmp	r0, #0
4000dcc4:	1a000005 	bne	4000dce0 <_tx_queue_front_send+0x380>
4000dcc8:	e59d0000 	ldr	r0, [sp]
4000dccc:	e3500000 	cmp	r0, #0
4000dcd0:	0a000002 	beq	4000dce0 <_tx_queue_front_send+0x380>
4000dcd4:	e1a00004 	mov	r0, r4
4000dcd8:	e59d1000 	ldr	r1, [sp]
4000dcdc:	e12fff31 	blx	r1
4000dce0:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dce4:	eaffff8d 	b	4000db20 <_tx_queue_front_send+0x1c0>
4000dce8:	e121f007 	msr	CPSR_c, r7
4000dcec:	e3a0000b 	mov	r0, #11
4000dcf0:	eaffff8a 	b	4000db20 <_tx_queue_front_send+0x1c0>
4000dcf4:	40030ebc 	.word	0x40030ebc
4000dcf8:	40030ec0 	.word	0x40030ec0
4000dcfc:	40030e48 	.word	0x40030e48
4000dd00:	40030e50 	.word	0x40030e50
4000dd04:	f0f0f0f0 	.word	0xf0f0f0f0
4000dd08:	40030eb8 	.word	0x40030eb8
4000dd0c:	40030eb4 	.word	0x40030eb4
4000dd10:	40030ea8 	.word	0x40030ea8
4000dd14:	40030e6c 	.word	0x40030e6c
4000dd18:	400106fc 	.word	0x400106fc

4000dd1c <_tx_queue_receive>:
4000dd1c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dd20:	e1a04000 	mov	r4, r0
4000dd24:	e1a05001 	mov	r5, r1
4000dd28:	e1a06002 	mov	r6, r2
4000dd2c:	e10f7000 	mrs	r7, CPSR
4000dd30:	e3870080 	orr	r0, r7, #128	; 0x80
4000dd34:	e58d0000 	str	r0, [sp]
4000dd38:	e59d0000 	ldr	r0, [sp]
4000dd3c:	e121f000 	msr	CPSR_c, r0
4000dd40:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e154 <_tx_queue_receive+0x438>
4000dd44:	e5910000 	ldr	r0, [r1]
4000dd48:	e3500000 	cmp	r0, #0
4000dd4c:	0a000031 	beq	4000de18 <_tx_queue_receive+0xfc>
4000dd50:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e158 <_tx_queue_receive+0x43c>
4000dd54:	e5911000 	ldr	r1, [r1]
4000dd58:	e2811001 	add	r1, r1, #1
4000dd5c:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e158 <_tx_queue_receive+0x43c>
4000dd60:	e5821000 	str	r1, [r2]
4000dd64:	e580100c 	str	r1, [r0, #12]
4000dd68:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e15c <_tx_queue_receive+0x440>
4000dd6c:	e5911000 	ldr	r1, [r1]
4000dd70:	e3510000 	cmp	r1, #0
4000dd74:	1a000006 	bne	4000dd94 <_tx_queue_receive+0x78>
4000dd78:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e160 <_tx_queue_receive+0x444>
4000dd7c:	e5911000 	ldr	r1, [r1]
4000dd80:	e5801000 	str	r1, [r0]
4000dd84:	e5901000 	ldr	r1, [r0]
4000dd88:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dd8c:	e5801004 	str	r1, [r0, #4]
4000dd90:	ea00000d 	b	4000ddcc <_tx_queue_receive+0xb0>
4000dd94:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e15c <_tx_queue_receive+0x440>
4000dd98:	e5911000 	ldr	r1, [r1]
4000dd9c:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e164 <_tx_queue_receive+0x448>
4000dda0:	e1510002 	cmp	r1, r2
4000dda4:	2a000004 	bcs	4000ddbc <_tx_queue_receive+0xa0>
4000dda8:	e3e01000 	mvn	r1, #0
4000ddac:	e5801000 	str	r1, [r0]
4000ddb0:	e3a01000 	mov	r1, #0
4000ddb4:	e5801004 	str	r1, [r0, #4]
4000ddb8:	ea000003 	b	4000ddcc <_tx_queue_receive+0xb0>
4000ddbc:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e164 <_tx_queue_receive+0x448>
4000ddc0:	e5801000 	str	r1, [r0]
4000ddc4:	e3a01000 	mov	r1, #0
4000ddc8:	e5801004 	str	r1, [r0, #4]
4000ddcc:	e3a01044 	mov	r1, #68	; 0x44
4000ddd0:	e5801008 	str	r1, [r0, #8]
4000ddd4:	e5804010 	str	r4, [r0, #16]
4000ddd8:	e5805014 	str	r5, [r0, #20]
4000dddc:	e5806018 	str	r6, [r0, #24]
4000dde0:	e5941010 	ldr	r1, [r4, #16]
4000dde4:	e580101c 	str	r1, [r0, #28]
4000dde8:	e2800020 	add	r0, r0, #32
4000ddec:	e59f1374 	ldr	r1, [pc, #884]	; 4000e168 <_tx_queue_receive+0x44c>
4000ddf0:	e5911000 	ldr	r1, [r1]
4000ddf4:	e1500001 	cmp	r0, r1
4000ddf8:	3a000001 	bcc	4000de04 <_tx_queue_receive+0xe8>
4000ddfc:	e59f1368 	ldr	r1, [pc, #872]	; 4000e16c <_tx_queue_receive+0x450>
4000de00:	e5910000 	ldr	r0, [r1]
4000de04:	e59f1348 	ldr	r1, [pc, #840]	; 4000e154 <_tx_queue_receive+0x438>
4000de08:	e5810000 	str	r0, [r1]
4000de0c:	e59f135c 	ldr	r1, [pc, #860]	; 4000e170 <_tx_queue_receive+0x454>
4000de10:	e5911000 	ldr	r1, [r1]
4000de14:	e5810020 	str	r0, [r1, #32]
4000de18:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000de1c:	e3580000 	cmp	r8, #0
4000de20:	0a00002f 	beq	4000dee4 <_tx_queue_receive+0x1c8>
4000de24:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000de28:	e3500000 	cmp	r0, #0
4000de2c:	0a00002c 	beq	4000dee4 <_tx_queue_receive+0x1c8>
4000de30:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000de34:	e1a0a005 	mov	sl, r5
4000de38:	e594b008 	ldr	fp, [r4, #8]
4000de3c:	e1a00000 	nop			; (mov r0, r0)
4000de40:	e5990000 	ldr	r0, [r9]
4000de44:	e58a0000 	str	r0, [sl]
4000de48:	e24bb001 	sub	fp, fp, #1
4000de4c:	e35b0000 	cmp	fp, #0
4000de50:	1a000000 	bne	4000de58 <_tx_queue_receive+0x13c>
4000de54:	ea000002 	b	4000de64 <_tx_queue_receive+0x148>
4000de58:	e28aa004 	add	sl, sl, #4
4000de5c:	e2899004 	add	r9, r9, #4
4000de60:	eafffff6 	b	4000de40 <_tx_queue_receive+0x124>
4000de64:	e1a00000 	nop			; (mov r0, r0)
4000de68:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de6c:	e1500008 	cmp	r0, r8
4000de70:	1a000002 	bne	4000de80 <_tx_queue_receive+0x164>
4000de74:	e3a00000 	mov	r0, #0
4000de78:	e5840028 	str	r0, [r4, #40]	; 0x28
4000de7c:	ea000007 	b	4000dea0 <_tx_queue_receive+0x184>
4000de80:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de84:	e5840028 	str	r0, [r4, #40]	; 0x28
4000de88:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000de8c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000de90:	e5810074 	str	r0, [r1, #116]	; 0x74
4000de94:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de98:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000de9c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dea0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dea4:	e2400001 	sub	r0, r0, #1
4000dea8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000deac:	e3a00000 	mov	r0, #0
4000deb0:	e5880068 	str	r0, [r8, #104]	; 0x68
4000deb4:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e174 <_tx_queue_receive+0x458>
4000deb8:	e5900000 	ldr	r0, [r0]
4000debc:	e2800001 	add	r0, r0, #1
4000dec0:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e174 <_tx_queue_receive+0x458>
4000dec4:	e5810000 	str	r0, [r1]
4000dec8:	e121f007 	msr	CPSR_c, r7
4000decc:	e3a00000 	mov	r0, #0
4000ded0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000ded4:	e1a00008 	mov	r0, r8
4000ded8:	eb0004fe 	bl	4000f2d8 <_tx_thread_system_resume>
4000dedc:	e3a00000 	mov	r0, #0
4000dee0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000dee4:	e5940010 	ldr	r0, [r4, #16]
4000dee8:	e3500000 	cmp	r0, #0
4000deec:	0a000068 	beq	4000e094 <_tx_queue_receive+0x378>
4000def0:	e5949020 	ldr	r9, [r4, #32]
4000def4:	e1a0a005 	mov	sl, r5
4000def8:	e594b008 	ldr	fp, [r4, #8]
4000defc:	e1a00000 	nop			; (mov r0, r0)
4000df00:	e5990000 	ldr	r0, [r9]
4000df04:	e58a0000 	str	r0, [sl]
4000df08:	e24bb001 	sub	fp, fp, #1
4000df0c:	e35b0000 	cmp	fp, #0
4000df10:	1a000000 	bne	4000df18 <_tx_queue_receive+0x1fc>
4000df14:	ea000002 	b	4000df24 <_tx_queue_receive+0x208>
4000df18:	e28aa004 	add	sl, sl, #4
4000df1c:	e2899004 	add	r9, r9, #4
4000df20:	eafffff6 	b	4000df00 <_tx_queue_receive+0x1e4>
4000df24:	e1a00000 	nop			; (mov r0, r0)
4000df28:	e5940020 	ldr	r0, [r4, #32]
4000df2c:	e5941008 	ldr	r1, [r4, #8]
4000df30:	e0800101 	add	r0, r0, r1, lsl #2
4000df34:	e5840020 	str	r0, [r4, #32]
4000df38:	e5940020 	ldr	r0, [r4, #32]
4000df3c:	e594101c 	ldr	r1, [r4, #28]
4000df40:	e1500001 	cmp	r0, r1
4000df44:	3a000001 	bcc	4000df50 <_tx_queue_receive+0x234>
4000df48:	e5940018 	ldr	r0, [r4, #24]
4000df4c:	e5840020 	str	r0, [r4, #32]
4000df50:	e3580000 	cmp	r8, #0
4000df54:	1a000008 	bne	4000df7c <_tx_queue_receive+0x260>
4000df58:	e5940014 	ldr	r0, [r4, #20]
4000df5c:	e2800001 	add	r0, r0, #1
4000df60:	e5840014 	str	r0, [r4, #20]
4000df64:	e5940010 	ldr	r0, [r4, #16]
4000df68:	e2400001 	sub	r0, r0, #1
4000df6c:	e5840010 	str	r0, [r4, #16]
4000df70:	e121f007 	msr	CPSR_c, r7
4000df74:	e3a00000 	mov	r0, #0
4000df78:	eaffffd8 	b	4000dee0 <_tx_queue_receive+0x1c4>
4000df7c:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e174 <_tx_queue_receive+0x458>
4000df80:	e5900000 	ldr	r0, [r0]
4000df84:	e2800001 	add	r0, r0, #1
4000df88:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e174 <_tx_queue_receive+0x458>
4000df8c:	e5810000 	str	r0, [r1]
4000df90:	e121f007 	msr	CPSR_c, r7
4000df94:	e10f7000 	mrs	r7, CPSR
4000df98:	e3870080 	orr	r0, r7, #128	; 0x80
4000df9c:	e58d0000 	str	r0, [sp]
4000dfa0:	e59d0000 	ldr	r0, [sp]
4000dfa4:	e121f000 	msr	CPSR_c, r0
4000dfa8:	e2810000 	add	r0, r1, #0
4000dfac:	e5900000 	ldr	r0, [r0]
4000dfb0:	e2400001 	sub	r0, r0, #1
4000dfb4:	e5810000 	str	r0, [r1]
4000dfb8:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000dfbc:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000dfc0:	e594b008 	ldr	fp, [r4, #8]
4000dfc4:	e1a00000 	nop			; (mov r0, r0)
4000dfc8:	e5990000 	ldr	r0, [r9]
4000dfcc:	e58a0000 	str	r0, [sl]
4000dfd0:	e24bb001 	sub	fp, fp, #1
4000dfd4:	e35b0000 	cmp	fp, #0
4000dfd8:	1a000000 	bne	4000dfe0 <_tx_queue_receive+0x2c4>
4000dfdc:	ea000002 	b	4000dfec <_tx_queue_receive+0x2d0>
4000dfe0:	e28aa004 	add	sl, sl, #4
4000dfe4:	e2899004 	add	r9, r9, #4
4000dfe8:	eafffff6 	b	4000dfc8 <_tx_queue_receive+0x2ac>
4000dfec:	e1a00000 	nop			; (mov r0, r0)
4000dff0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000dff4:	e5941008 	ldr	r1, [r4, #8]
4000dff8:	e0800101 	add	r0, r0, r1, lsl #2
4000dffc:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e000:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e004:	e594101c 	ldr	r1, [r4, #28]
4000e008:	e1500001 	cmp	r0, r1
4000e00c:	3a000001 	bcc	4000e018 <_tx_queue_receive+0x2fc>
4000e010:	e5940018 	ldr	r0, [r4, #24]
4000e014:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e018:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e01c:	e1500008 	cmp	r0, r8
4000e020:	1a000002 	bne	4000e030 <_tx_queue_receive+0x314>
4000e024:	e3a00000 	mov	r0, #0
4000e028:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e02c:	ea000007 	b	4000e050 <_tx_queue_receive+0x334>
4000e030:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e034:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e038:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e03c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e040:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e044:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e048:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e04c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e050:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e054:	e2400001 	sub	r0, r0, #1
4000e058:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e05c:	e3a00000 	mov	r0, #0
4000e060:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e064:	e59f0108 	ldr	r0, [pc, #264]	; 4000e174 <_tx_queue_receive+0x458>
4000e068:	e5900000 	ldr	r0, [r0]
4000e06c:	e2800001 	add	r0, r0, #1
4000e070:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e174 <_tx_queue_receive+0x458>
4000e074:	e5810000 	str	r0, [r1]
4000e078:	e121f007 	msr	CPSR_c, r7
4000e07c:	e3a00000 	mov	r0, #0
4000e080:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e084:	e1a00008 	mov	r0, r8
4000e088:	eb000492 	bl	4000f2d8 <_tx_thread_system_resume>
4000e08c:	e3a00000 	mov	r0, #0
4000e090:	eaffff92 	b	4000dee0 <_tx_queue_receive+0x1c4>
4000e094:	e3560000 	cmp	r6, #0
4000e098:	0a00002a 	beq	4000e148 <_tx_queue_receive+0x42c>
4000e09c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e160 <_tx_queue_receive+0x444>
4000e0a0:	e5908000 	ldr	r8, [r0]
4000e0a4:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e178 <_tx_queue_receive+0x45c>
4000e0a8:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e0ac:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e0b0:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e0b4:	e3a00000 	mov	r0, #0
4000e0b8:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e0bc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0c0:	e3500000 	cmp	r0, #0
4000e0c4:	0a00000a 	beq	4000e0f4 <_tx_queue_receive+0x3d8>
4000e0c8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0cc:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e0d0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0d4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e0d8:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e0dc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0e0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e0e4:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e0e8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e0ec:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e0f0:	ea000002 	b	4000e100 <_tx_queue_receive+0x3e4>
4000e0f4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e0f8:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e0fc:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e100:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e104:	e2800001 	add	r0, r0, #1
4000e108:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e10c:	e3a00005 	mov	r0, #5
4000e110:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e114:	e3a00001 	mov	r0, #1
4000e118:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e11c:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e120:	e59f004c 	ldr	r0, [pc, #76]	; 4000e174 <_tx_queue_receive+0x458>
4000e124:	e5900000 	ldr	r0, [r0]
4000e128:	e2800001 	add	r0, r0, #1
4000e12c:	e59f1040 	ldr	r1, [pc, #64]	; 4000e174 <_tx_queue_receive+0x458>
4000e130:	e5810000 	str	r0, [r1]
4000e134:	e121f007 	msr	CPSR_c, r7
4000e138:	e1a00008 	mov	r0, r8
4000e13c:	ebffeabe 	bl	40008c3c <_tx_thread_system_suspend>
4000e140:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e144:	eaffff65 	b	4000dee0 <_tx_queue_receive+0x1c4>
4000e148:	e121f007 	msr	CPSR_c, r7
4000e14c:	e3a0000a 	mov	r0, #10
4000e150:	eaffff62 	b	4000dee0 <_tx_queue_receive+0x1c4>
4000e154:	40030ebc 	.word	0x40030ebc
4000e158:	40030ec0 	.word	0x40030ec0
4000e15c:	40030e48 	.word	0x40030e48
4000e160:	40030e50 	.word	0x40030e50
4000e164:	f0f0f0f0 	.word	0xf0f0f0f0
4000e168:	40030eb8 	.word	0x40030eb8
4000e16c:	40030eb4 	.word	0x40030eb4
4000e170:	40030ea8 	.word	0x40030ea8
4000e174:	40030e6c 	.word	0x40030e6c
4000e178:	400106fc 	.word	0x400106fc

4000e17c <_tx_queue_send>:
4000e17c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e180:	e1a04000 	mov	r4, r0
4000e184:	e1a05001 	mov	r5, r1
4000e188:	e1a06002 	mov	r6, r2
4000e18c:	e10f7000 	mrs	r7, CPSR
4000e190:	e3870080 	orr	r0, r7, #128	; 0x80
4000e194:	e58d0004 	str	r0, [sp, #4]
4000e198:	e59d0004 	ldr	r0, [sp, #4]
4000e19c:	e121f000 	msr	CPSR_c, r0
4000e1a0:	e59f1358 	ldr	r1, [pc, #856]	; 4000e500 <_tx_queue_send+0x384>
4000e1a4:	e5910000 	ldr	r0, [r1]
4000e1a8:	e3500000 	cmp	r0, #0
4000e1ac:	0a000031 	beq	4000e278 <_tx_queue_send+0xfc>
4000e1b0:	e59f134c 	ldr	r1, [pc, #844]	; 4000e504 <_tx_queue_send+0x388>
4000e1b4:	e5911000 	ldr	r1, [r1]
4000e1b8:	e2811001 	add	r1, r1, #1
4000e1bc:	e59f2340 	ldr	r2, [pc, #832]	; 4000e504 <_tx_queue_send+0x388>
4000e1c0:	e5821000 	str	r1, [r2]
4000e1c4:	e580100c 	str	r1, [r0, #12]
4000e1c8:	e59f1338 	ldr	r1, [pc, #824]	; 4000e508 <_tx_queue_send+0x38c>
4000e1cc:	e5911000 	ldr	r1, [r1]
4000e1d0:	e3510000 	cmp	r1, #0
4000e1d4:	1a000006 	bne	4000e1f4 <_tx_queue_send+0x78>
4000e1d8:	e59f132c 	ldr	r1, [pc, #812]	; 4000e50c <_tx_queue_send+0x390>
4000e1dc:	e5911000 	ldr	r1, [r1]
4000e1e0:	e5801000 	str	r1, [r0]
4000e1e4:	e5901000 	ldr	r1, [r0]
4000e1e8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e1ec:	e5801004 	str	r1, [r0, #4]
4000e1f0:	ea00000d 	b	4000e22c <_tx_queue_send+0xb0>
4000e1f4:	e59f130c 	ldr	r1, [pc, #780]	; 4000e508 <_tx_queue_send+0x38c>
4000e1f8:	e5911000 	ldr	r1, [r1]
4000e1fc:	e59f230c 	ldr	r2, [pc, #780]	; 4000e510 <_tx_queue_send+0x394>
4000e200:	e1510002 	cmp	r1, r2
4000e204:	2a000004 	bcs	4000e21c <_tx_queue_send+0xa0>
4000e208:	e3e01000 	mvn	r1, #0
4000e20c:	e5801000 	str	r1, [r0]
4000e210:	e3a01000 	mov	r1, #0
4000e214:	e5801004 	str	r1, [r0, #4]
4000e218:	ea000003 	b	4000e22c <_tx_queue_send+0xb0>
4000e21c:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e510 <_tx_queue_send+0x394>
4000e220:	e5801000 	str	r1, [r0]
4000e224:	e3a01000 	mov	r1, #0
4000e228:	e5801004 	str	r1, [r0, #4]
4000e22c:	e3a01045 	mov	r1, #69	; 0x45
4000e230:	e5801008 	str	r1, [r0, #8]
4000e234:	e5804010 	str	r4, [r0, #16]
4000e238:	e5805014 	str	r5, [r0, #20]
4000e23c:	e5806018 	str	r6, [r0, #24]
4000e240:	e5941010 	ldr	r1, [r4, #16]
4000e244:	e580101c 	str	r1, [r0, #28]
4000e248:	e2800020 	add	r0, r0, #32
4000e24c:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e514 <_tx_queue_send+0x398>
4000e250:	e5911000 	ldr	r1, [r1]
4000e254:	e1500001 	cmp	r0, r1
4000e258:	3a000001 	bcc	4000e264 <_tx_queue_send+0xe8>
4000e25c:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e518 <_tx_queue_send+0x39c>
4000e260:	e5910000 	ldr	r0, [r1]
4000e264:	e59f1294 	ldr	r1, [pc, #660]	; 4000e500 <_tx_queue_send+0x384>
4000e268:	e5810000 	str	r0, [r1]
4000e26c:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e51c <_tx_queue_send+0x3a0>
4000e270:	e5911000 	ldr	r1, [r1]
4000e274:	e5810020 	str	r0, [r1, #32]
4000e278:	e5940014 	ldr	r0, [r4, #20]
4000e27c:	e3500000 	cmp	r0, #0
4000e280:	0a000061 	beq	4000e40c <_tx_queue_send+0x290>
4000e284:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e288:	e3500000 	cmp	r0, #0
4000e28c:	1a000028 	bne	4000e334 <_tx_queue_send+0x1b8>
4000e290:	e5940014 	ldr	r0, [r4, #20]
4000e294:	e2400001 	sub	r0, r0, #1
4000e298:	e5840014 	str	r0, [r4, #20]
4000e29c:	e5940010 	ldr	r0, [r4, #16]
4000e2a0:	e2800001 	add	r0, r0, #1
4000e2a4:	e5840010 	str	r0, [r4, #16]
4000e2a8:	e1a09005 	mov	r9, r5
4000e2ac:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e2b0:	e594b008 	ldr	fp, [r4, #8]
4000e2b4:	e1a00000 	nop			; (mov r0, r0)
4000e2b8:	e5990000 	ldr	r0, [r9]
4000e2bc:	e58a0000 	str	r0, [sl]
4000e2c0:	e24bb001 	sub	fp, fp, #1
4000e2c4:	e35b0000 	cmp	fp, #0
4000e2c8:	1a000000 	bne	4000e2d0 <_tx_queue_send+0x154>
4000e2cc:	ea000002 	b	4000e2dc <_tx_queue_send+0x160>
4000e2d0:	e28aa004 	add	sl, sl, #4
4000e2d4:	e2899004 	add	r9, r9, #4
4000e2d8:	eafffff6 	b	4000e2b8 <_tx_queue_send+0x13c>
4000e2dc:	e1a00000 	nop			; (mov r0, r0)
4000e2e0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e2e4:	e5941008 	ldr	r1, [r4, #8]
4000e2e8:	e0800101 	add	r0, r0, r1, lsl #2
4000e2ec:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e2f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e2f4:	e594101c 	ldr	r1, [r4, #28]
4000e2f8:	e1500001 	cmp	r0, r1
4000e2fc:	3a000001 	bcc	4000e308 <_tx_queue_send+0x18c>
4000e300:	e5940018 	ldr	r0, [r4, #24]
4000e304:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e308:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e30c:	e58d0000 	str	r0, [sp]
4000e310:	e121f007 	msr	CPSR_c, r7
4000e314:	e59d0000 	ldr	r0, [sp]
4000e318:	e3500000 	cmp	r0, #0
4000e31c:	0a000002 	beq	4000e32c <_tx_queue_send+0x1b0>
4000e320:	e1a00004 	mov	r0, r4
4000e324:	e59d1000 	ldr	r1, [sp]
4000e328:	e12fff31 	blx	r1
4000e32c:	e3a00000 	mov	r0, #0
4000e330:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e334:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e338:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e33c:	e1500008 	cmp	r0, r8
4000e340:	1a000002 	bne	4000e350 <_tx_queue_send+0x1d4>
4000e344:	e3a00000 	mov	r0, #0
4000e348:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e34c:	ea000007 	b	4000e370 <_tx_queue_send+0x1f4>
4000e350:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e354:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e358:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e35c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e360:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e364:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e368:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e36c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e370:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e374:	e2400001 	sub	r0, r0, #1
4000e378:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e37c:	e3a00000 	mov	r0, #0
4000e380:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e384:	e59f0194 	ldr	r0, [pc, #404]	; 4000e520 <_tx_queue_send+0x3a4>
4000e388:	e5900000 	ldr	r0, [r0]
4000e38c:	e2800001 	add	r0, r0, #1
4000e390:	e59f1188 	ldr	r1, [pc, #392]	; 4000e520 <_tx_queue_send+0x3a4>
4000e394:	e5810000 	str	r0, [r1]
4000e398:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e39c:	e58d0000 	str	r0, [sp]
4000e3a0:	e121f007 	msr	CPSR_c, r7
4000e3a4:	e1a09005 	mov	r9, r5
4000e3a8:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e3ac:	e594b008 	ldr	fp, [r4, #8]
4000e3b0:	e1a00000 	nop			; (mov r0, r0)
4000e3b4:	e5990000 	ldr	r0, [r9]
4000e3b8:	e58a0000 	str	r0, [sl]
4000e3bc:	e24bb001 	sub	fp, fp, #1
4000e3c0:	e35b0000 	cmp	fp, #0
4000e3c4:	1a000000 	bne	4000e3cc <_tx_queue_send+0x250>
4000e3c8:	ea000002 	b	4000e3d8 <_tx_queue_send+0x25c>
4000e3cc:	e28aa004 	add	sl, sl, #4
4000e3d0:	e2899004 	add	r9, r9, #4
4000e3d4:	eafffff6 	b	4000e3b4 <_tx_queue_send+0x238>
4000e3d8:	e1a00000 	nop			; (mov r0, r0)
4000e3dc:	e3a00000 	mov	r0, #0
4000e3e0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e3e4:	e1a00008 	mov	r0, r8
4000e3e8:	eb0003ba 	bl	4000f2d8 <_tx_thread_system_resume>
4000e3ec:	e59d0000 	ldr	r0, [sp]
4000e3f0:	e3500000 	cmp	r0, #0
4000e3f4:	0a000002 	beq	4000e404 <_tx_queue_send+0x288>
4000e3f8:	e1a00004 	mov	r0, r4
4000e3fc:	e59d1000 	ldr	r1, [sp]
4000e400:	e12fff31 	blx	r1
4000e404:	e3a00000 	mov	r0, #0
4000e408:	eaffffc8 	b	4000e330 <_tx_queue_send+0x1b4>
4000e40c:	e3560000 	cmp	r6, #0
4000e410:	0a000037 	beq	4000e4f4 <_tx_queue_send+0x378>
4000e414:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e50c <_tx_queue_send+0x390>
4000e418:	e5908000 	ldr	r8, [r0]
4000e41c:	e59f0100 	ldr	r0, [pc, #256]	; 4000e524 <_tx_queue_send+0x3a8>
4000e420:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e424:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e428:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e42c:	e3a00000 	mov	r0, #0
4000e430:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e434:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e438:	e3500000 	cmp	r0, #0
4000e43c:	0a00000a 	beq	4000e46c <_tx_queue_send+0x2f0>
4000e440:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e444:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e448:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e44c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e450:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e454:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e458:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e45c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e460:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e464:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e468:	ea000002 	b	4000e478 <_tx_queue_send+0x2fc>
4000e46c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e470:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e474:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e478:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e47c:	e2800001 	add	r0, r0, #1
4000e480:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e484:	e3a00005 	mov	r0, #5
4000e488:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e48c:	e3a00001 	mov	r0, #1
4000e490:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e494:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e498:	e59f0080 	ldr	r0, [pc, #128]	; 4000e520 <_tx_queue_send+0x3a4>
4000e49c:	e5900000 	ldr	r0, [r0]
4000e4a0:	e2800001 	add	r0, r0, #1
4000e4a4:	e59f1074 	ldr	r1, [pc, #116]	; 4000e520 <_tx_queue_send+0x3a4>
4000e4a8:	e5810000 	str	r0, [r1]
4000e4ac:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e4b0:	e58d0000 	str	r0, [sp]
4000e4b4:	e121f007 	msr	CPSR_c, r7
4000e4b8:	e1a00008 	mov	r0, r8
4000e4bc:	ebffe9de 	bl	40008c3c <_tx_thread_system_suspend>
4000e4c0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e4c4:	e58d0000 	str	r0, [sp]
4000e4c8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e4cc:	e3500000 	cmp	r0, #0
4000e4d0:	1a000005 	bne	4000e4ec <_tx_queue_send+0x370>
4000e4d4:	e59d0000 	ldr	r0, [sp]
4000e4d8:	e3500000 	cmp	r0, #0
4000e4dc:	0a000002 	beq	4000e4ec <_tx_queue_send+0x370>
4000e4e0:	e1a00004 	mov	r0, r4
4000e4e4:	e59d1000 	ldr	r1, [sp]
4000e4e8:	e12fff31 	blx	r1
4000e4ec:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e4f0:	eaffff8e 	b	4000e330 <_tx_queue_send+0x1b4>
4000e4f4:	e121f007 	msr	CPSR_c, r7
4000e4f8:	e3a0000b 	mov	r0, #11
4000e4fc:	eaffff8b 	b	4000e330 <_tx_queue_send+0x1b4>
4000e500:	40030ebc 	.word	0x40030ebc
4000e504:	40030ec0 	.word	0x40030ec0
4000e508:	40030e48 	.word	0x40030e48
4000e50c:	40030e50 	.word	0x40030e50
4000e510:	f0f0f0f0 	.word	0xf0f0f0f0
4000e514:	40030eb8 	.word	0x40030eb8
4000e518:	40030eb4 	.word	0x40030eb4
4000e51c:	40030ea8 	.word	0x40030ea8
4000e520:	40030e6c 	.word	0x40030e6c
4000e524:	400106fc 	.word	0x400106fc

4000e528 <_tx_thread_create>:
4000e528:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e52c:	e24dd014 	sub	sp, sp, #20
4000e530:	e1a04000 	mov	r4, r0
4000e534:	e1a05001 	mov	r5, r1
4000e538:	e28da048 	add	sl, sp, #72	; 0x48
4000e53c:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e540:	e3a00000 	mov	r0, #0
4000e544:	e58d0004 	str	r0, [sp, #4]
4000e548:	e3a020ef 	mov	r2, #239	; 0xef
4000e54c:	e1a01007 	mov	r1, r7
4000e550:	e1a00006 	mov	r0, r6
4000e554:	eb001442 	bl	40013664 <__aeabi_memset>
4000e558:	e1a00127 	lsr	r0, r7, #2
4000e55c:	e3a01004 	mov	r1, #4
4000e560:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e564:	e3a010a8 	mov	r1, #168	; 0xa8
4000e568:	e1a00004 	mov	r0, r4
4000e56c:	eb001414 	bl	400135c4 <__aeabi_memclr4>
4000e570:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e574:	e59d001c 	ldr	r0, [sp, #28]
4000e578:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e57c:	e59d0020 	ldr	r0, [sp, #32]
4000e580:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e584:	e584600c 	str	r6, [r4, #12]
4000e588:	e5847014 	str	r7, [r4, #20]
4000e58c:	e2470001 	sub	r0, r7, #1
4000e590:	e0800006 	add	r0, r0, r6
4000e594:	e5840010 	str	r0, [r4, #16]
4000e598:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e59c:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e5a0:	e584a018 	str	sl, [r4, #24]
4000e5a4:	e584a01c 	str	sl, [r4, #28]
4000e5a8:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e5ac:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e5b0:	e3a00003 	mov	r0, #3
4000e5b4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e5b8:	e59f0268 	ldr	r0, [pc, #616]	; 4000e828 <_tx_thread_create+0x300>
4000e5bc:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e5c0:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e5c4:	e59f1260 	ldr	r1, [pc, #608]	; 4000e82c <_tx_thread_create+0x304>
4000e5c8:	e1a00004 	mov	r0, r4
4000e5cc:	eb000727 	bl	40010270 <_tx_thread_stack_build>
4000e5d0:	e5940008 	ldr	r0, [r4, #8]
4000e5d4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e5d8:	e10f0000 	mrs	r0, CPSR
4000e5dc:	e58d0010 	str	r0, [sp, #16]
4000e5e0:	e59d0010 	ldr	r0, [sp, #16]
4000e5e4:	e380b080 	orr	fp, r0, #128	; 0x80
4000e5e8:	e121f00b 	msr	CPSR_c, fp
4000e5ec:	e59f023c 	ldr	r0, [pc, #572]	; 4000e830 <_tx_thread_create+0x308>
4000e5f0:	e5840000 	str	r0, [r4]
4000e5f4:	e59f0238 	ldr	r0, [pc, #568]	; 4000e834 <_tx_thread_create+0x30c>
4000e5f8:	e5900000 	ldr	r0, [r0]
4000e5fc:	e3500000 	cmp	r0, #0
4000e600:	0a00000e 	beq	4000e640 <_tx_thread_create+0x118>
4000e604:	e59f0228 	ldr	r0, [pc, #552]	; 4000e834 <_tx_thread_create+0x30c>
4000e608:	e5900000 	ldr	r0, [r0]
4000e60c:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e610:	e58d000c 	str	r0, [sp, #12]
4000e614:	e59f0218 	ldr	r0, [pc, #536]	; 4000e834 <_tx_thread_create+0x30c>
4000e618:	e5900000 	ldr	r0, [r0]
4000e61c:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e620:	e59d000c 	ldr	r0, [sp, #12]
4000e624:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e628:	e59d000c 	ldr	r0, [sp, #12]
4000e62c:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e630:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e834 <_tx_thread_create+0x30c>
4000e634:	e5900000 	ldr	r0, [r0]
4000e638:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e63c:	ea000003 	b	4000e650 <_tx_thread_create+0x128>
4000e640:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e834 <_tx_thread_create+0x30c>
4000e644:	e5804000 	str	r4, [r0]
4000e648:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e64c:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e650:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e838 <_tx_thread_create+0x310>
4000e654:	e5900000 	ldr	r0, [r0]
4000e658:	e2800001 	add	r0, r0, #1
4000e65c:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e838 <_tx_thread_create+0x310>
4000e660:	e5810000 	str	r0, [r1]
4000e664:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e83c <_tx_thread_create+0x314>
4000e668:	e5900000 	ldr	r0, [r0]
4000e66c:	e2800001 	add	r0, r0, #1
4000e670:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e83c <_tx_thread_create+0x314>
4000e674:	e5810000 	str	r0, [r1]
4000e678:	e1a03006 	mov	r3, r6
4000e67c:	e1a02005 	mov	r2, r5
4000e680:	e1a01004 	mov	r1, r4
4000e684:	e3a00001 	mov	r0, #1
4000e688:	e58d7000 	str	r7, [sp]
4000e68c:	eb000667 	bl	40010030 <_tx_trace_object_register>
4000e690:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e840 <_tx_thread_create+0x318>
4000e694:	e5910000 	ldr	r0, [r1]
4000e698:	e3500000 	cmp	r0, #0
4000e69c:	0a000030 	beq	4000e764 <_tx_thread_create+0x23c>
4000e6a0:	e59f119c 	ldr	r1, [pc, #412]	; 4000e844 <_tx_thread_create+0x31c>
4000e6a4:	e5911000 	ldr	r1, [r1]
4000e6a8:	e2811001 	add	r1, r1, #1
4000e6ac:	e59f2190 	ldr	r2, [pc, #400]	; 4000e844 <_tx_thread_create+0x31c>
4000e6b0:	e5821000 	str	r1, [r2]
4000e6b4:	e580100c 	str	r1, [r0, #12]
4000e6b8:	e59f1188 	ldr	r1, [pc, #392]	; 4000e848 <_tx_thread_create+0x320>
4000e6bc:	e5911000 	ldr	r1, [r1]
4000e6c0:	e3510000 	cmp	r1, #0
4000e6c4:	1a000006 	bne	4000e6e4 <_tx_thread_create+0x1bc>
4000e6c8:	e59f117c 	ldr	r1, [pc, #380]	; 4000e84c <_tx_thread_create+0x324>
4000e6cc:	e5911000 	ldr	r1, [r1]
4000e6d0:	e5801000 	str	r1, [r0]
4000e6d4:	e5901000 	ldr	r1, [r0]
4000e6d8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e6dc:	e5801004 	str	r1, [r0, #4]
4000e6e0:	ea00000d 	b	4000e71c <_tx_thread_create+0x1f4>
4000e6e4:	e59f115c 	ldr	r1, [pc, #348]	; 4000e848 <_tx_thread_create+0x320>
4000e6e8:	e5911000 	ldr	r1, [r1]
4000e6ec:	e59f215c 	ldr	r2, [pc, #348]	; 4000e850 <_tx_thread_create+0x328>
4000e6f0:	e1510002 	cmp	r1, r2
4000e6f4:	2a000004 	bcs	4000e70c <_tx_thread_create+0x1e4>
4000e6f8:	e3e01000 	mvn	r1, #0
4000e6fc:	e5801000 	str	r1, [r0]
4000e700:	e3a01000 	mov	r1, #0
4000e704:	e5801004 	str	r1, [r0, #4]
4000e708:	ea000003 	b	4000e71c <_tx_thread_create+0x1f4>
4000e70c:	e59f113c 	ldr	r1, [pc, #316]	; 4000e850 <_tx_thread_create+0x328>
4000e710:	e5801000 	str	r1, [r0]
4000e714:	e3a01000 	mov	r1, #0
4000e718:	e5801004 	str	r1, [r0, #4]
4000e71c:	e3a01064 	mov	r1, #100	; 0x64
4000e720:	e5801008 	str	r1, [r0, #8]
4000e724:	e5804010 	str	r4, [r0, #16]
4000e728:	e5808014 	str	r8, [r0, #20]
4000e72c:	e5806018 	str	r6, [r0, #24]
4000e730:	e580701c 	str	r7, [r0, #28]
4000e734:	e2800020 	add	r0, r0, #32
4000e738:	e59f1114 	ldr	r1, [pc, #276]	; 4000e854 <_tx_thread_create+0x32c>
4000e73c:	e5911000 	ldr	r1, [r1]
4000e740:	e1500001 	cmp	r0, r1
4000e744:	3a000001 	bcc	4000e750 <_tx_thread_create+0x228>
4000e748:	e59f1108 	ldr	r1, [pc, #264]	; 4000e858 <_tx_thread_create+0x330>
4000e74c:	e5910000 	ldr	r0, [r1]
4000e750:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e840 <_tx_thread_create+0x318>
4000e754:	e5810000 	str	r0, [r1]
4000e758:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e85c <_tx_thread_create+0x334>
4000e75c:	e5911000 	ldr	r1, [r1]
4000e760:	e5810020 	str	r0, [r1, #32]
4000e764:	e59d0010 	ldr	r0, [sp, #16]
4000e768:	e121f000 	msr	CPSR_c, r0
4000e76c:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e770:	e3500000 	cmp	r0, #0
4000e774:	0a00001c 	beq	4000e7ec <_tx_thread_create+0x2c4>
4000e778:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e848 <_tx_thread_create+0x320>
4000e77c:	e5900000 	ldr	r0, [r0]
4000e780:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e850 <_tx_thread_create+0x328>
4000e784:	e1500001 	cmp	r0, r1
4000e788:	3a00000c 	bcc	4000e7c0 <_tx_thread_create+0x298>
4000e78c:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e860 <_tx_thread_create+0x338>
4000e790:	e5900000 	ldr	r0, [r0]
4000e794:	e58d0008 	str	r0, [sp, #8]
4000e798:	e59d0008 	ldr	r0, [sp, #8]
4000e79c:	e3500000 	cmp	r0, #0
4000e7a0:	0a000008 	beq	4000e7c8 <_tx_thread_create+0x2a0>
4000e7a4:	e59d0008 	ldr	r0, [sp, #8]
4000e7a8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e7ac:	e58d0004 	str	r0, [sp, #4]
4000e7b0:	e59d0008 	ldr	r0, [sp, #8]
4000e7b4:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e7b8:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e7bc:	ea000001 	b	4000e7c8 <_tx_thread_create+0x2a0>
4000e7c0:	e3a00000 	mov	r0, #0
4000e7c4:	e58d0008 	str	r0, [sp, #8]
4000e7c8:	e1a00004 	mov	r0, r4
4000e7cc:	eb0002c1 	bl	4000f2d8 <_tx_thread_system_resume>
4000e7d0:	e59d0008 	ldr	r0, [sp, #8]
4000e7d4:	e3500000 	cmp	r0, #0
4000e7d8:	0a00000f 	beq	4000e81c <_tx_thread_create+0x2f4>
4000e7dc:	e59d0008 	ldr	r0, [sp, #8]
4000e7e0:	e59d1004 	ldr	r1, [sp, #4]
4000e7e4:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e7e8:	ea00000b 	b	4000e81c <_tx_thread_create+0x2f4>
4000e7ec:	e10f0000 	mrs	r0, CPSR
4000e7f0:	e58d0010 	str	r0, [sp, #16]
4000e7f4:	e59d0010 	ldr	r0, [sp, #16]
4000e7f8:	e380b080 	orr	fp, r0, #128	; 0x80
4000e7fc:	e121f00b 	msr	CPSR_c, fp
4000e800:	e59f0034 	ldr	r0, [pc, #52]	; 4000e83c <_tx_thread_create+0x314>
4000e804:	e5900000 	ldr	r0, [r0]
4000e808:	e2400001 	sub	r0, r0, #1
4000e80c:	e59f1028 	ldr	r1, [pc, #40]	; 4000e83c <_tx_thread_create+0x314>
4000e810:	e5810000 	str	r0, [r1]
4000e814:	e59d0010 	ldr	r0, [sp, #16]
4000e818:	e121f000 	msr	CPSR_c, r0
4000e81c:	e3a00000 	mov	r0, #0
4000e820:	e28dd024 	add	sp, sp, #36	; 0x24
4000e824:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e828:	4000f808 	.word	0x4000f808
4000e82c:	4000f06c 	.word	0x4000f06c
4000e830:	54485244 	.word	0x54485244
4000e834:	40030e58 	.word	0x40030e58
4000e838:	40030e5c 	.word	0x40030e5c
4000e83c:	40030e6c 	.word	0x40030e6c
4000e840:	40030ebc 	.word	0x40030ebc
4000e844:	40030ec0 	.word	0x40030ec0
4000e848:	40030e48 	.word	0x40030e48
4000e84c:	40030e50 	.word	0x40030e50
4000e850:	f0f0f0f0 	.word	0xf0f0f0f0
4000e854:	40030eb8 	.word	0x40030eb8
4000e858:	40030eb4 	.word	0x40030eb4
4000e85c:	40030ea8 	.word	0x40030ea8
4000e860:	40030e54 	.word	0x40030e54

4000e864 <_tx_thread_info_get>:
4000e864:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e868:	e1a0c000 	mov	ip, r0
4000e86c:	e28d7028 	add	r7, sp, #40	; 0x28
4000e870:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e874:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e878:	e10f8000 	mrs	r8, CPSR
4000e87c:	e3889080 	orr	r9, r8, #128	; 0x80
4000e880:	e121f009 	msr	CPSR_c, r9
4000e884:	e59fa160 	ldr	sl, [pc, #352]	; 4000e9ec <_tx_thread_info_get+0x188>
4000e888:	e59a0000 	ldr	r0, [sl]
4000e88c:	e3500000 	cmp	r0, #0
4000e890:	0a000032 	beq	4000e960 <_tx_thread_info_get+0xfc>
4000e894:	e59fa154 	ldr	sl, [pc, #340]	; 4000e9f0 <_tx_thread_info_get+0x18c>
4000e898:	e59aa000 	ldr	sl, [sl]
4000e89c:	e28aa001 	add	sl, sl, #1
4000e8a0:	e59fb148 	ldr	fp, [pc, #328]	; 4000e9f0 <_tx_thread_info_get+0x18c>
4000e8a4:	e58ba000 	str	sl, [fp]
4000e8a8:	e580a00c 	str	sl, [r0, #12]
4000e8ac:	e59fa140 	ldr	sl, [pc, #320]	; 4000e9f4 <_tx_thread_info_get+0x190>
4000e8b0:	e59aa000 	ldr	sl, [sl]
4000e8b4:	e35a0000 	cmp	sl, #0
4000e8b8:	1a000006 	bne	4000e8d8 <_tx_thread_info_get+0x74>
4000e8bc:	e59fa134 	ldr	sl, [pc, #308]	; 4000e9f8 <_tx_thread_info_get+0x194>
4000e8c0:	e59aa000 	ldr	sl, [sl]
4000e8c4:	e580a000 	str	sl, [r0]
4000e8c8:	e590a000 	ldr	sl, [r0]
4000e8cc:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e8d0:	e580a004 	str	sl, [r0, #4]
4000e8d4:	ea00000d 	b	4000e910 <_tx_thread_info_get+0xac>
4000e8d8:	e59fa114 	ldr	sl, [pc, #276]	; 4000e9f4 <_tx_thread_info_get+0x190>
4000e8dc:	e59aa000 	ldr	sl, [sl]
4000e8e0:	e59fb114 	ldr	fp, [pc, #276]	; 4000e9fc <_tx_thread_info_get+0x198>
4000e8e4:	e15a000b 	cmp	sl, fp
4000e8e8:	2a000004 	bcs	4000e900 <_tx_thread_info_get+0x9c>
4000e8ec:	e3e0a000 	mvn	sl, #0
4000e8f0:	e580a000 	str	sl, [r0]
4000e8f4:	e3a0a000 	mov	sl, #0
4000e8f8:	e580a004 	str	sl, [r0, #4]
4000e8fc:	ea000003 	b	4000e910 <_tx_thread_info_get+0xac>
4000e900:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000e9fc <_tx_thread_info_get+0x198>
4000e904:	e580a000 	str	sl, [r0]
4000e908:	e3a0a000 	mov	sl, #0
4000e90c:	e580a004 	str	sl, [r0, #4]
4000e910:	e3a0a068 	mov	sl, #104	; 0x68
4000e914:	e580a008 	str	sl, [r0, #8]
4000e918:	e580c010 	str	ip, [r0, #16]
4000e91c:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e920:	e580a014 	str	sl, [r0, #20]
4000e924:	e3a0a000 	mov	sl, #0
4000e928:	e580a018 	str	sl, [r0, #24]
4000e92c:	e580a01c 	str	sl, [r0, #28]
4000e930:	e2800020 	add	r0, r0, #32
4000e934:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000ea00 <_tx_thread_info_get+0x19c>
4000e938:	e59aa000 	ldr	sl, [sl]
4000e93c:	e150000a 	cmp	r0, sl
4000e940:	3a000001 	bcc	4000e94c <_tx_thread_info_get+0xe8>
4000e944:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000ea04 <_tx_thread_info_get+0x1a0>
4000e948:	e59a0000 	ldr	r0, [sl]
4000e94c:	e59fa098 	ldr	sl, [pc, #152]	; 4000e9ec <_tx_thread_info_get+0x188>
4000e950:	e58a0000 	str	r0, [sl]
4000e954:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000ea08 <_tx_thread_info_get+0x1a4>
4000e958:	e59aa000 	ldr	sl, [sl]
4000e95c:	e58a0020 	str	r0, [sl, #32]
4000e960:	e3510000 	cmp	r1, #0
4000e964:	0a000001 	beq	4000e970 <_tx_thread_info_get+0x10c>
4000e968:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e96c:	e5810000 	str	r0, [r1]
4000e970:	e3520000 	cmp	r2, #0
4000e974:	0a000001 	beq	4000e980 <_tx_thread_info_get+0x11c>
4000e978:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e97c:	e5820000 	str	r0, [r2]
4000e980:	e3530000 	cmp	r3, #0
4000e984:	0a000001 	beq	4000e990 <_tx_thread_info_get+0x12c>
4000e988:	e59c0004 	ldr	r0, [ip, #4]
4000e98c:	e5830000 	str	r0, [r3]
4000e990:	e35e0000 	cmp	lr, #0
4000e994:	0a000001 	beq	4000e9a0 <_tx_thread_info_get+0x13c>
4000e998:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000e99c:	e58e0000 	str	r0, [lr]
4000e9a0:	e3540000 	cmp	r4, #0
4000e9a4:	0a000001 	beq	4000e9b0 <_tx_thread_info_get+0x14c>
4000e9a8:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000e9ac:	e5840000 	str	r0, [r4]
4000e9b0:	e3550000 	cmp	r5, #0
4000e9b4:	0a000001 	beq	4000e9c0 <_tx_thread_info_get+0x15c>
4000e9b8:	e59c0018 	ldr	r0, [ip, #24]
4000e9bc:	e5850000 	str	r0, [r5]
4000e9c0:	e3560000 	cmp	r6, #0
4000e9c4:	0a000001 	beq	4000e9d0 <_tx_thread_info_get+0x16c>
4000e9c8:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000e9cc:	e5860000 	str	r0, [r6]
4000e9d0:	e3570000 	cmp	r7, #0
4000e9d4:	0a000001 	beq	4000e9e0 <_tx_thread_info_get+0x17c>
4000e9d8:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000e9dc:	e5870000 	str	r0, [r7]
4000e9e0:	e121f008 	msr	CPSR_c, r8
4000e9e4:	e3a00000 	mov	r0, #0
4000e9e8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e9ec:	40030ebc 	.word	0x40030ebc
4000e9f0:	40030ec0 	.word	0x40030ec0
4000e9f4:	40030e48 	.word	0x40030e48
4000e9f8:	40030e50 	.word	0x40030e50
4000e9fc:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea00:	40030eb8 	.word	0x40030eb8
4000ea04:	40030eb4 	.word	0x40030eb4
4000ea08:	40030ea8 	.word	0x40030ea8

4000ea0c <_tx_thread_priority_change>:
4000ea0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ea10:	e1a04000 	mov	r4, r0
4000ea14:	e1a05001 	mov	r5, r1
4000ea18:	e1a06002 	mov	r6, r2
4000ea1c:	e10f7000 	mrs	r7, CPSR
4000ea20:	e3878080 	orr	r8, r7, #128	; 0x80
4000ea24:	e121f008 	msr	CPSR_c, r8
4000ea28:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000ea2c:	e5860000 	str	r0, [r6]
4000ea30:	e59f1150 	ldr	r1, [pc, #336]	; 4000eb88 <_tx_thread_priority_change+0x17c>
4000ea34:	e5910000 	ldr	r0, [r1]
4000ea38:	e3500000 	cmp	r0, #0
4000ea3c:	0a000032 	beq	4000eb0c <_tx_thread_priority_change+0x100>
4000ea40:	e59f1144 	ldr	r1, [pc, #324]	; 4000eb8c <_tx_thread_priority_change+0x180>
4000ea44:	e5911000 	ldr	r1, [r1]
4000ea48:	e2811001 	add	r1, r1, #1
4000ea4c:	e59f2138 	ldr	r2, [pc, #312]	; 4000eb8c <_tx_thread_priority_change+0x180>
4000ea50:	e5821000 	str	r1, [r2]
4000ea54:	e580100c 	str	r1, [r0, #12]
4000ea58:	e59f1130 	ldr	r1, [pc, #304]	; 4000eb90 <_tx_thread_priority_change+0x184>
4000ea5c:	e5911000 	ldr	r1, [r1]
4000ea60:	e3510000 	cmp	r1, #0
4000ea64:	1a000006 	bne	4000ea84 <_tx_thread_priority_change+0x78>
4000ea68:	e59f1124 	ldr	r1, [pc, #292]	; 4000eb94 <_tx_thread_priority_change+0x188>
4000ea6c:	e5911000 	ldr	r1, [r1]
4000ea70:	e5801000 	str	r1, [r0]
4000ea74:	e5901000 	ldr	r1, [r0]
4000ea78:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ea7c:	e5801004 	str	r1, [r0, #4]
4000ea80:	ea00000d 	b	4000eabc <_tx_thread_priority_change+0xb0>
4000ea84:	e59f1104 	ldr	r1, [pc, #260]	; 4000eb90 <_tx_thread_priority_change+0x184>
4000ea88:	e5911000 	ldr	r1, [r1]
4000ea8c:	e59f2104 	ldr	r2, [pc, #260]	; 4000eb98 <_tx_thread_priority_change+0x18c>
4000ea90:	e1510002 	cmp	r1, r2
4000ea94:	2a000004 	bcs	4000eaac <_tx_thread_priority_change+0xa0>
4000ea98:	e3e01000 	mvn	r1, #0
4000ea9c:	e5801000 	str	r1, [r0]
4000eaa0:	e3a01000 	mov	r1, #0
4000eaa4:	e5801004 	str	r1, [r0, #4]
4000eaa8:	ea000003 	b	4000eabc <_tx_thread_priority_change+0xb0>
4000eaac:	e59f10e4 	ldr	r1, [pc, #228]	; 4000eb98 <_tx_thread_priority_change+0x18c>
4000eab0:	e5801000 	str	r1, [r0]
4000eab4:	e3a01000 	mov	r1, #0
4000eab8:	e5801004 	str	r1, [r0, #4]
4000eabc:	e3a0106c 	mov	r1, #108	; 0x6c
4000eac0:	e5801008 	str	r1, [r0, #8]
4000eac4:	e5804010 	str	r4, [r0, #16]
4000eac8:	e5805014 	str	r5, [r0, #20]
4000eacc:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ead0:	e5801018 	str	r1, [r0, #24]
4000ead4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ead8:	e580101c 	str	r1, [r0, #28]
4000eadc:	e2800020 	add	r0, r0, #32
4000eae0:	e59f10b4 	ldr	r1, [pc, #180]	; 4000eb9c <_tx_thread_priority_change+0x190>
4000eae4:	e5911000 	ldr	r1, [r1]
4000eae8:	e1500001 	cmp	r0, r1
4000eaec:	3a000001 	bcc	4000eaf8 <_tx_thread_priority_change+0xec>
4000eaf0:	e59f10a8 	ldr	r1, [pc, #168]	; 4000eba0 <_tx_thread_priority_change+0x194>
4000eaf4:	e5910000 	ldr	r0, [r1]
4000eaf8:	e59f1088 	ldr	r1, [pc, #136]	; 4000eb88 <_tx_thread_priority_change+0x17c>
4000eafc:	e5810000 	str	r0, [r1]
4000eb00:	e59f109c 	ldr	r1, [pc, #156]	; 4000eba4 <_tx_thread_priority_change+0x198>
4000eb04:	e5911000 	ldr	r1, [r1]
4000eb08:	e5810020 	str	r0, [r1, #32]
4000eb0c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000eb10:	e3500000 	cmp	r0, #0
4000eb14:	0a000005 	beq	4000eb30 <_tx_thread_priority_change+0x124>
4000eb18:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eb1c:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eb20:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eb24:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eb28:	e121f007 	msr	CPSR_c, r7
4000eb2c:	ea000013 	b	4000eb80 <_tx_thread_priority_change+0x174>
4000eb30:	e59f0070 	ldr	r0, [pc, #112]	; 4000eba8 <_tx_thread_priority_change+0x19c>
4000eb34:	e5900000 	ldr	r0, [r0]
4000eb38:	e2800002 	add	r0, r0, #2
4000eb3c:	e59f1064 	ldr	r1, [pc, #100]	; 4000eba8 <_tx_thread_priority_change+0x19c>
4000eb40:	e5810000 	str	r0, [r1]
4000eb44:	e3a00003 	mov	r0, #3
4000eb48:	e5840030 	str	r0, [r4, #48]	; 0x30
4000eb4c:	e3a00001 	mov	r0, #1
4000eb50:	e5840038 	str	r0, [r4, #56]	; 0x38
4000eb54:	e3a00000 	mov	r0, #0
4000eb58:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000eb5c:	e121f007 	msr	CPSR_c, r7
4000eb60:	e1a00004 	mov	r0, r4
4000eb64:	ebffe834 	bl	40008c3c <_tx_thread_system_suspend>
4000eb68:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eb6c:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eb70:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eb74:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eb78:	e1a00004 	mov	r0, r4
4000eb7c:	eb0001d5 	bl	4000f2d8 <_tx_thread_system_resume>
4000eb80:	e3a00000 	mov	r0, #0
4000eb84:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000eb88:	40030ebc 	.word	0x40030ebc
4000eb8c:	40030ec0 	.word	0x40030ec0
4000eb90:	40030e48 	.word	0x40030e48
4000eb94:	40030e50 	.word	0x40030e50
4000eb98:	f0f0f0f0 	.word	0xf0f0f0f0
4000eb9c:	40030eb8 	.word	0x40030eb8
4000eba0:	40030eb4 	.word	0x40030eb4
4000eba4:	40030ea8 	.word	0x40030ea8
4000eba8:	40030e6c 	.word	0x40030e6c

4000ebac <_tx_thread_relinquish>:
4000ebac:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ebb0:	e59f02b0 	ldr	r0, [pc, #688]	; 4000ee68 <_tx_thread_relinquish+0x2bc>
4000ebb4:	e5900000 	ldr	r0, [r0]
4000ebb8:	e58d0000 	str	r0, [sp]
4000ebbc:	e59d0000 	ldr	r0, [sp]
4000ebc0:	e5900008 	ldr	r0, [r0, #8]
4000ebc4:	e59d1000 	ldr	r1, [sp]
4000ebc8:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ebcc:	e1500001 	cmp	r0, r1
4000ebd0:	2a000003 	bcs	4000ebe4 <_tx_thread_relinquish+0x38>
4000ebd4:	e59d0000 	ldr	r0, [sp]
4000ebd8:	e5900008 	ldr	r0, [r0, #8]
4000ebdc:	e59d1000 	ldr	r1, [sp]
4000ebe0:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ebe4:	e59d0000 	ldr	r0, [sp]
4000ebe8:	e590000c 	ldr	r0, [r0, #12]
4000ebec:	e5900000 	ldr	r0, [r0]
4000ebf0:	e59f1274 	ldr	r1, [pc, #628]	; 4000ee6c <_tx_thread_relinquish+0x2c0>
4000ebf4:	e1500001 	cmp	r0, r1
4000ebf8:	1a00000a 	bne	4000ec28 <_tx_thread_relinquish+0x7c>
4000ebfc:	e59d0000 	ldr	r0, [sp]
4000ec00:	e5900010 	ldr	r0, [r0, #16]
4000ec04:	e5900001 	ldr	r0, [r0, #1]
4000ec08:	e1500001 	cmp	r0, r1
4000ec0c:	1a000005 	bne	4000ec28 <_tx_thread_relinquish+0x7c>
4000ec10:	e59d0000 	ldr	r0, [sp]
4000ec14:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ec18:	e59d1000 	ldr	r1, [sp]
4000ec1c:	e591100c 	ldr	r1, [r1, #12]
4000ec20:	e1500001 	cmp	r0, r1
4000ec24:	2a000001 	bcs	4000ec30 <_tx_thread_relinquish+0x84>
4000ec28:	e59d0000 	ldr	r0, [sp]
4000ec2c:	eb00016a 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000ec30:	e59d0000 	ldr	r0, [sp]
4000ec34:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ec38:	e5100004 	ldr	r0, [r0, #-4]
4000ec3c:	e59f1228 	ldr	r1, [pc, #552]	; 4000ee6c <_tx_thread_relinquish+0x2c0>
4000ec40:	e1500001 	cmp	r0, r1
4000ec44:	0a000001 	beq	4000ec50 <_tx_thread_relinquish+0xa4>
4000ec48:	e59d0000 	ldr	r0, [sp]
4000ec4c:	eb00012d 	bl	4000f108 <_tx_thread_stack_analyze>
4000ec50:	e10f4000 	mrs	r4, CPSR
4000ec54:	e3845080 	orr	r5, r4, #128	; 0x80
4000ec58:	e121f005 	msr	CPSR_c, r5
4000ec5c:	e59f120c 	ldr	r1, [pc, #524]	; 4000ee70 <_tx_thread_relinquish+0x2c4>
4000ec60:	e5910000 	ldr	r0, [r1]
4000ec64:	e3500000 	cmp	r0, #0
4000ec68:	0a000031 	beq	4000ed34 <_tx_thread_relinquish+0x188>
4000ec6c:	e59f1200 	ldr	r1, [pc, #512]	; 4000ee74 <_tx_thread_relinquish+0x2c8>
4000ec70:	e5911000 	ldr	r1, [r1]
4000ec74:	e2811001 	add	r1, r1, #1
4000ec78:	e59f21f4 	ldr	r2, [pc, #500]	; 4000ee74 <_tx_thread_relinquish+0x2c8>
4000ec7c:	e5821000 	str	r1, [r2]
4000ec80:	e580100c 	str	r1, [r0, #12]
4000ec84:	e59f11ec 	ldr	r1, [pc, #492]	; 4000ee78 <_tx_thread_relinquish+0x2cc>
4000ec88:	e5911000 	ldr	r1, [r1]
4000ec8c:	e3510000 	cmp	r1, #0
4000ec90:	1a000006 	bne	4000ecb0 <_tx_thread_relinquish+0x104>
4000ec94:	e59f11cc 	ldr	r1, [pc, #460]	; 4000ee68 <_tx_thread_relinquish+0x2bc>
4000ec98:	e5911000 	ldr	r1, [r1]
4000ec9c:	e5801000 	str	r1, [r0]
4000eca0:	e5901000 	ldr	r1, [r0]
4000eca4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eca8:	e5801004 	str	r1, [r0, #4]
4000ecac:	ea00000d 	b	4000ece8 <_tx_thread_relinquish+0x13c>
4000ecb0:	e59f11c0 	ldr	r1, [pc, #448]	; 4000ee78 <_tx_thread_relinquish+0x2cc>
4000ecb4:	e5911000 	ldr	r1, [r1]
4000ecb8:	e59f21bc 	ldr	r2, [pc, #444]	; 4000ee7c <_tx_thread_relinquish+0x2d0>
4000ecbc:	e1510002 	cmp	r1, r2
4000ecc0:	2a000004 	bcs	4000ecd8 <_tx_thread_relinquish+0x12c>
4000ecc4:	e3e01000 	mvn	r1, #0
4000ecc8:	e5801000 	str	r1, [r0]
4000eccc:	e3a01000 	mov	r1, #0
4000ecd0:	e5801004 	str	r1, [r0, #4]
4000ecd4:	ea000003 	b	4000ece8 <_tx_thread_relinquish+0x13c>
4000ecd8:	e59f119c 	ldr	r1, [pc, #412]	; 4000ee7c <_tx_thread_relinquish+0x2d0>
4000ecdc:	e5801000 	str	r1, [r0]
4000ece0:	e3a01000 	mov	r1, #0
4000ece4:	e5801004 	str	r1, [r0, #4]
4000ece8:	e3a0106d 	mov	r1, #109	; 0x6d
4000ecec:	e5801008 	str	r1, [r0, #8]
4000ecf0:	e580d010 	str	sp, [r0, #16]
4000ecf4:	e3a01000 	mov	r1, #0
4000ecf8:	e5801014 	str	r1, [r0, #20]
4000ecfc:	e5801018 	str	r1, [r0, #24]
4000ed00:	e580101c 	str	r1, [r0, #28]
4000ed04:	e2800020 	add	r0, r0, #32
4000ed08:	e59f1170 	ldr	r1, [pc, #368]	; 4000ee80 <_tx_thread_relinquish+0x2d4>
4000ed0c:	e5911000 	ldr	r1, [r1]
4000ed10:	e1500001 	cmp	r0, r1
4000ed14:	3a000001 	bcc	4000ed20 <_tx_thread_relinquish+0x174>
4000ed18:	e59f1164 	ldr	r1, [pc, #356]	; 4000ee84 <_tx_thread_relinquish+0x2d8>
4000ed1c:	e5910000 	ldr	r0, [r1]
4000ed20:	e59f1148 	ldr	r1, [pc, #328]	; 4000ee70 <_tx_thread_relinquish+0x2c4>
4000ed24:	e5810000 	str	r0, [r1]
4000ed28:	e59f1158 	ldr	r1, [pc, #344]	; 4000ee88 <_tx_thread_relinquish+0x2dc>
4000ed2c:	e5911000 	ldr	r1, [r1]
4000ed30:	e5810020 	str	r0, [r1, #32]
4000ed34:	e59d0000 	ldr	r0, [sp]
4000ed38:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ed3c:	e59d0000 	ldr	r0, [sp]
4000ed40:	e5900020 	ldr	r0, [r0, #32]
4000ed44:	e59d1000 	ldr	r1, [sp]
4000ed48:	e1500001 	cmp	r0, r1
4000ed4c:	0a000013 	beq	4000eda0 <_tx_thread_relinquish+0x1f4>
4000ed50:	e59d0000 	ldr	r0, [sp]
4000ed54:	e5900020 	ldr	r0, [r0, #32]
4000ed58:	e59f112c 	ldr	r1, [pc, #300]	; 4000ee8c <_tx_thread_relinquish+0x2e0>
4000ed5c:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ed60:	e59d0000 	ldr	r0, [sp]
4000ed64:	e5900020 	ldr	r0, [r0, #32]
4000ed68:	e59f1120 	ldr	r1, [pc, #288]	; 4000ee90 <_tx_thread_relinquish+0x2e4>
4000ed6c:	e5810000 	str	r0, [r1]
4000ed70:	e59f011c 	ldr	r0, [pc, #284]	; 4000ee94 <_tx_thread_relinquish+0x2e8>
4000ed74:	e5900000 	ldr	r0, [r0]
4000ed78:	e3500000 	cmp	r0, #0
4000ed7c:	0a000007 	beq	4000eda0 <_tx_thread_relinquish+0x1f4>
4000ed80:	e59f010c 	ldr	r0, [pc, #268]	; 4000ee94 <_tx_thread_relinquish+0x2e8>
4000ed84:	e5900000 	ldr	r0, [r0]
4000ed88:	e59d1000 	ldr	r1, [sp]
4000ed8c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ed90:	e3a02001 	mov	r2, #1
4000ed94:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ed98:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ee94 <_tx_thread_relinquish+0x2e8>
4000ed9c:	e5810000 	str	r0, [r1]
4000eda0:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ee98 <_tx_thread_relinquish+0x2ec>
4000eda4:	e5900000 	ldr	r0, [r0]
4000eda8:	e1500006 	cmp	r0, r6
4000edac:	2a000005 	bcs	4000edc8 <_tx_thread_relinquish+0x21c>
4000edb0:	e59f00d4 	ldr	r0, [pc, #212]	; 4000ee8c <_tx_thread_relinquish+0x2e0>
4000edb4:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ee98 <_tx_thread_relinquish+0x2ec>
4000edb8:	e5911000 	ldr	r1, [r1]
4000edbc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000edc0:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ee90 <_tx_thread_relinquish+0x2e4>
4000edc4:	e5810000 	str	r0, [r1]
4000edc8:	e121f004 	msr	CPSR_c, r4
4000edcc:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ee90 <_tx_thread_relinquish+0x2e4>
4000edd0:	e5900000 	ldr	r0, [r0]
4000edd4:	e59d1000 	ldr	r1, [sp]
4000edd8:	e1500001 	cmp	r0, r1
4000eddc:	0a000020 	beq	4000ee64 <_tx_thread_relinquish+0x2b8>
4000ede0:	e59f00a8 	ldr	r0, [pc, #168]	; 4000ee90 <_tx_thread_relinquish+0x2e4>
4000ede4:	e5900000 	ldr	r0, [r0]
4000ede8:	e58d0000 	str	r0, [sp]
4000edec:	e59d0000 	ldr	r0, [sp]
4000edf0:	e5900008 	ldr	r0, [r0, #8]
4000edf4:	e59d1000 	ldr	r1, [sp]
4000edf8:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000edfc:	e1500001 	cmp	r0, r1
4000ee00:	2a000003 	bcs	4000ee14 <_tx_thread_relinquish+0x268>
4000ee04:	e59d0000 	ldr	r0, [sp]
4000ee08:	e5900008 	ldr	r0, [r0, #8]
4000ee0c:	e59d1000 	ldr	r1, [sp]
4000ee10:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ee14:	e59d0000 	ldr	r0, [sp]
4000ee18:	e590000c 	ldr	r0, [r0, #12]
4000ee1c:	e5900000 	ldr	r0, [r0]
4000ee20:	e59f1044 	ldr	r1, [pc, #68]	; 4000ee6c <_tx_thread_relinquish+0x2c0>
4000ee24:	e1500001 	cmp	r0, r1
4000ee28:	1a00000a 	bne	4000ee58 <_tx_thread_relinquish+0x2ac>
4000ee2c:	e59d0000 	ldr	r0, [sp]
4000ee30:	e5900010 	ldr	r0, [r0, #16]
4000ee34:	e5900001 	ldr	r0, [r0, #1]
4000ee38:	e1500001 	cmp	r0, r1
4000ee3c:	1a000005 	bne	4000ee58 <_tx_thread_relinquish+0x2ac>
4000ee40:	e59d0000 	ldr	r0, [sp]
4000ee44:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee48:	e59d1000 	ldr	r1, [sp]
4000ee4c:	e591100c 	ldr	r1, [r1, #12]
4000ee50:	e1500001 	cmp	r0, r1
4000ee54:	2a000001 	bcs	4000ee60 <_tx_thread_relinquish+0x2b4>
4000ee58:	e59d0000 	ldr	r0, [sp]
4000ee5c:	eb0000de 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000ee60:	ebffef86 	bl	4000ac80 <_tx_thread_system_return>
4000ee64:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ee68:	40030e50 	.word	0x40030e50
4000ee6c:	efefefef 	.word	0xefefefef
4000ee70:	40030ebc 	.word	0x40030ebc
4000ee74:	40030ec0 	.word	0x40030ec0
4000ee78:	40030e48 	.word	0x40030e48
4000ee7c:	f0f0f0f0 	.word	0xf0f0f0f0
4000ee80:	40030eb8 	.word	0x40030eb8
4000ee84:	40030eb4 	.word	0x40030eb4
4000ee88:	40030ea8 	.word	0x40030ea8
4000ee8c:	40032874 	.word	0x40032874
4000ee90:	40030e54 	.word	0x40030e54
4000ee94:	40030e64 	.word	0x40030e64
4000ee98:	40030e68 	.word	0x40030e68

4000ee9c <_tx_thread_resume>:
4000ee9c:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000eea0:	e1a04000 	mov	r4, r0
4000eea4:	e3a00000 	mov	r0, #0
4000eea8:	e58d0000 	str	r0, [sp]
4000eeac:	e10f5000 	mrs	r5, CPSR
4000eeb0:	e3856080 	orr	r6, r5, #128	; 0x80
4000eeb4:	e121f006 	msr	CPSR_c, r6
4000eeb8:	e59f1184 	ldr	r1, [pc, #388]	; 4000f044 <_tx_thread_resume+0x1a8>
4000eebc:	e5910000 	ldr	r0, [r1]
4000eec0:	e3500000 	cmp	r0, #0
4000eec4:	0a000032 	beq	4000ef94 <_tx_thread_resume+0xf8>
4000eec8:	e59f1178 	ldr	r1, [pc, #376]	; 4000f048 <_tx_thread_resume+0x1ac>
4000eecc:	e5911000 	ldr	r1, [r1]
4000eed0:	e2811001 	add	r1, r1, #1
4000eed4:	e59f216c 	ldr	r2, [pc, #364]	; 4000f048 <_tx_thread_resume+0x1ac>
4000eed8:	e5821000 	str	r1, [r2]
4000eedc:	e580100c 	str	r1, [r0, #12]
4000eee0:	e59f1164 	ldr	r1, [pc, #356]	; 4000f04c <_tx_thread_resume+0x1b0>
4000eee4:	e5911000 	ldr	r1, [r1]
4000eee8:	e3510000 	cmp	r1, #0
4000eeec:	1a000006 	bne	4000ef0c <_tx_thread_resume+0x70>
4000eef0:	e59f1158 	ldr	r1, [pc, #344]	; 4000f050 <_tx_thread_resume+0x1b4>
4000eef4:	e5911000 	ldr	r1, [r1]
4000eef8:	e5801000 	str	r1, [r0]
4000eefc:	e5901000 	ldr	r1, [r0]
4000ef00:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ef04:	e5801004 	str	r1, [r0, #4]
4000ef08:	ea00000d 	b	4000ef44 <_tx_thread_resume+0xa8>
4000ef0c:	e59f1138 	ldr	r1, [pc, #312]	; 4000f04c <_tx_thread_resume+0x1b0>
4000ef10:	e5911000 	ldr	r1, [r1]
4000ef14:	e59f2138 	ldr	r2, [pc, #312]	; 4000f054 <_tx_thread_resume+0x1b8>
4000ef18:	e1510002 	cmp	r1, r2
4000ef1c:	2a000004 	bcs	4000ef34 <_tx_thread_resume+0x98>
4000ef20:	e3e01000 	mvn	r1, #0
4000ef24:	e5801000 	str	r1, [r0]
4000ef28:	e3a01000 	mov	r1, #0
4000ef2c:	e5801004 	str	r1, [r0, #4]
4000ef30:	ea000003 	b	4000ef44 <_tx_thread_resume+0xa8>
4000ef34:	e59f1118 	ldr	r1, [pc, #280]	; 4000f054 <_tx_thread_resume+0x1b8>
4000ef38:	e5801000 	str	r1, [r0]
4000ef3c:	e3a01000 	mov	r1, #0
4000ef40:	e5801004 	str	r1, [r0, #4]
4000ef44:	e3a0106f 	mov	r1, #111	; 0x6f
4000ef48:	e5801008 	str	r1, [r0, #8]
4000ef4c:	e5804010 	str	r4, [r0, #16]
4000ef50:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ef54:	e5801014 	str	r1, [r0, #20]
4000ef58:	e580d018 	str	sp, [r0, #24]
4000ef5c:	e3a01000 	mov	r1, #0
4000ef60:	e580101c 	str	r1, [r0, #28]
4000ef64:	e2800020 	add	r0, r0, #32
4000ef68:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f058 <_tx_thread_resume+0x1bc>
4000ef6c:	e5911000 	ldr	r1, [r1]
4000ef70:	e1500001 	cmp	r0, r1
4000ef74:	3a000001 	bcc	4000ef80 <_tx_thread_resume+0xe4>
4000ef78:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f05c <_tx_thread_resume+0x1c0>
4000ef7c:	e5910000 	ldr	r0, [r1]
4000ef80:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f044 <_tx_thread_resume+0x1a8>
4000ef84:	e5810000 	str	r0, [r1]
4000ef88:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f060 <_tx_thread_resume+0x1c4>
4000ef8c:	e5911000 	ldr	r1, [r1]
4000ef90:	e5810020 	str	r0, [r1, #32]
4000ef94:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ef98:	e3500003 	cmp	r0, #3
4000ef9c:	1a00001c 	bne	4000f014 <_tx_thread_resume+0x178>
4000efa0:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f064 <_tx_thread_resume+0x1c8>
4000efa4:	e5900000 	ldr	r0, [r0]
4000efa8:	e2800001 	add	r0, r0, #1
4000efac:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f064 <_tx_thread_resume+0x1c8>
4000efb0:	e5810000 	str	r0, [r1]
4000efb4:	e121f005 	msr	CPSR_c, r5
4000efb8:	e59f008c 	ldr	r0, [pc, #140]	; 4000f04c <_tx_thread_resume+0x1b0>
4000efbc:	e5900000 	ldr	r0, [r0]
4000efc0:	e59f108c 	ldr	r1, [pc, #140]	; 4000f054 <_tx_thread_resume+0x1b8>
4000efc4:	e1500001 	cmp	r0, r1
4000efc8:	3a000008 	bcc	4000eff0 <_tx_thread_resume+0x154>
4000efcc:	e59f0094 	ldr	r0, [pc, #148]	; 4000f068 <_tx_thread_resume+0x1cc>
4000efd0:	e5907000 	ldr	r7, [r0]
4000efd4:	e3570000 	cmp	r7, #0
4000efd8:	0a000005 	beq	4000eff4 <_tx_thread_resume+0x158>
4000efdc:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000efe0:	e58d0000 	str	r0, [sp]
4000efe4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000efe8:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000efec:	ea000000 	b	4000eff4 <_tx_thread_resume+0x158>
4000eff0:	e3a07000 	mov	r7, #0
4000eff4:	e1a00004 	mov	r0, r4
4000eff8:	eb0000b6 	bl	4000f2d8 <_tx_thread_system_resume>
4000effc:	e3570000 	cmp	r7, #0
4000f000:	0a000001 	beq	4000f00c <_tx_thread_resume+0x170>
4000f004:	e59d0000 	ldr	r0, [sp]
4000f008:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f00c:	e3a08000 	mov	r8, #0
4000f010:	ea000009 	b	4000f03c <_tx_thread_resume+0x1a0>
4000f014:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f018:	e3500000 	cmp	r0, #0
4000f01c:	0a000004 	beq	4000f034 <_tx_thread_resume+0x198>
4000f020:	e3a00000 	mov	r0, #0
4000f024:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f028:	e121f005 	msr	CPSR_c, r5
4000f02c:	e3a08019 	mov	r8, #25
4000f030:	ea000001 	b	4000f03c <_tx_thread_resume+0x1a0>
4000f034:	e121f005 	msr	CPSR_c, r5
4000f038:	e3a08012 	mov	r8, #18
4000f03c:	e1a00008 	mov	r0, r8
4000f040:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f044:	40030ebc 	.word	0x40030ebc
4000f048:	40030ec0 	.word	0x40030ec0
4000f04c:	40030e48 	.word	0x40030e48
4000f050:	40030e50 	.word	0x40030e50
4000f054:	f0f0f0f0 	.word	0xf0f0f0f0
4000f058:	40030eb8 	.word	0x40030eb8
4000f05c:	40030eb4 	.word	0x40030eb4
4000f060:	40030ea8 	.word	0x40030ea8
4000f064:	40030e6c 	.word	0x40030e6c
4000f068:	40030e54 	.word	0x40030e54

4000f06c <_tx_thread_shell_entry>:
4000f06c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f070:	e59f0088 	ldr	r0, [pc, #136]	; 4000f100 <_tx_thread_shell_entry+0x94>
4000f074:	e5907000 	ldr	r7, [r0]
4000f078:	e10f4000 	mrs	r4, CPSR
4000f07c:	e3845080 	orr	r5, r4, #128	; 0x80
4000f080:	e121f005 	msr	CPSR_c, r5
4000f084:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f088:	e121f004 	msr	CPSR_c, r4
4000f08c:	e3560000 	cmp	r6, #0
4000f090:	0a000002 	beq	4000f0a0 <_tx_thread_shell_entry+0x34>
4000f094:	e3a01000 	mov	r1, #0
4000f098:	e1a00007 	mov	r0, r7
4000f09c:	e12fff36 	blx	r6
4000f0a0:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f0a4:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f0a8:	e12fff31 	blx	r1
4000f0ac:	e10f4000 	mrs	r4, CPSR
4000f0b0:	e3845080 	orr	r5, r4, #128	; 0x80
4000f0b4:	e121f005 	msr	CPSR_c, r5
4000f0b8:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f0bc:	e3a00001 	mov	r0, #1
4000f0c0:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f0c4:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f0c8:	e59f0034 	ldr	r0, [pc, #52]	; 4000f104 <_tx_thread_shell_entry+0x98>
4000f0cc:	e5900000 	ldr	r0, [r0]
4000f0d0:	e2800001 	add	r0, r0, #1
4000f0d4:	e59f1028 	ldr	r1, [pc, #40]	; 4000f104 <_tx_thread_shell_entry+0x98>
4000f0d8:	e5810000 	str	r0, [r1]
4000f0dc:	e121f004 	msr	CPSR_c, r4
4000f0e0:	e3560000 	cmp	r6, #0
4000f0e4:	0a000002 	beq	4000f0f4 <_tx_thread_shell_entry+0x88>
4000f0e8:	e3a01001 	mov	r1, #1
4000f0ec:	e1a00007 	mov	r0, r7
4000f0f0:	e12fff36 	blx	r6
4000f0f4:	e1a00007 	mov	r0, r7
4000f0f8:	ebffe6cf 	bl	40008c3c <_tx_thread_system_suspend>
4000f0fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f100:	40030e50 	.word	0x40030e50
4000f104:	40030e6c 	.word	0x40030e6c

4000f108 <_tx_thread_stack_analyze>:
4000f108:	e92d4070 	push	{r4, r5, r6, lr}
4000f10c:	e10f1000 	mrs	r1, CPSR
4000f110:	e3812080 	orr	r2, r1, #128	; 0x80
4000f114:	e121f002 	msr	CPSR_c, r2
4000f118:	e3500000 	cmp	r0, #0
4000f11c:	0a000003 	beq	4000f130 <_tx_thread_stack_analyze+0x28>
4000f120:	e5905000 	ldr	r5, [r0]
4000f124:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f1d4 <_tx_thread_stack_analyze+0xcc>
4000f128:	e1550006 	cmp	r5, r6
4000f12c:	0a000001 	beq	4000f138 <_tx_thread_stack_analyze+0x30>
4000f130:	e121f001 	msr	CPSR_c, r1
4000f134:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f138:	e590c008 	ldr	ip, [r0, #8]
4000f13c:	e590300c 	ldr	r3, [r0, #12]
4000f140:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f144:	e121f001 	msr	CPSR_c, r1
4000f148:	e24ec004 	sub	ip, lr, #4
4000f14c:	e04e6003 	sub	r6, lr, r3
4000f150:	e1a05146 	asr	r5, r6, #2
4000f154:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f158:	e1a040c6 	asr	r4, r6, #1
4000f15c:	e083c104 	add	ip, r3, r4, lsl #2
4000f160:	e1a00000 	nop			; (mov r0, r0)
4000f164:	e59c5000 	ldr	r5, [ip]
4000f168:	e59f6068 	ldr	r6, [pc, #104]	; 4000f1d8 <_tx_thread_stack_analyze+0xd0>
4000f16c:	e1550006 	cmp	r5, r6
4000f170:	0a000002 	beq	4000f180 <_tx_thread_stack_analyze+0x78>
4000f174:	e1a050a4 	lsr	r5, r4, #1
4000f178:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f17c:	ea000001 	b	4000f188 <_tx_thread_stack_analyze+0x80>
4000f180:	e1a050a4 	lsr	r5, r4, #1
4000f184:	e08cc105 	add	ip, ip, r5, lsl #2
4000f188:	e1a040a4 	lsr	r4, r4, #1
4000f18c:	e3540001 	cmp	r4, #1
4000f190:	8afffff3 	bhi	4000f164 <_tx_thread_stack_analyze+0x5c>
4000f194:	ea000000 	b	4000f19c <_tx_thread_stack_analyze+0x94>
4000f198:	e28cc004 	add	ip, ip, #4
4000f19c:	e59c5000 	ldr	r5, [ip]
4000f1a0:	e59f6030 	ldr	r6, [pc, #48]	; 4000f1d8 <_tx_thread_stack_analyze+0xd0>
4000f1a4:	e1550006 	cmp	r5, r6
4000f1a8:	0afffffa 	beq	4000f198 <_tx_thread_stack_analyze+0x90>
4000f1ac:	e10f1000 	mrs	r1, CPSR
4000f1b0:	e3812080 	orr	r2, r1, #128	; 0x80
4000f1b4:	e121f002 	msr	CPSR_c, r2
4000f1b8:	e5905000 	ldr	r5, [r0]
4000f1bc:	e59f6010 	ldr	r6, [pc, #16]	; 4000f1d4 <_tx_thread_stack_analyze+0xcc>
4000f1c0:	e1550006 	cmp	r5, r6
4000f1c4:	1a000000 	bne	4000f1cc <_tx_thread_stack_analyze+0xc4>
4000f1c8:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f1cc:	e121f001 	msr	CPSR_c, r1
4000f1d0:	eaffffd7 	b	4000f134 <_tx_thread_stack_analyze+0x2c>
4000f1d4:	54485244 	.word	0x54485244
4000f1d8:	efefefef 	.word	0xefefefef

4000f1dc <_tx_thread_stack_error_handler>:
4000f1dc:	e92d4070 	push	{r4, r5, r6, lr}
4000f1e0:	e1a04000 	mov	r4, r0
4000f1e4:	e10f5000 	mrs	r5, CPSR
4000f1e8:	e3856080 	orr	r6, r5, #128	; 0x80
4000f1ec:	e121f006 	msr	CPSR_c, r6
4000f1f0:	e59f002c 	ldr	r0, [pc, #44]	; 4000f224 <_tx_thread_stack_error_handler+0x48>
4000f1f4:	e5900000 	ldr	r0, [r0]
4000f1f8:	e3500000 	cmp	r0, #0
4000f1fc:	0a000004 	beq	4000f214 <_tx_thread_stack_error_handler+0x38>
4000f200:	e1a00004 	mov	r0, r4
4000f204:	e59f1018 	ldr	r1, [pc, #24]	; 4000f224 <_tx_thread_stack_error_handler+0x48>
4000f208:	e5911000 	ldr	r1, [r1]
4000f20c:	e12fff31 	blx	r1
4000f210:	ea000001 	b	4000f21c <_tx_thread_stack_error_handler+0x40>
4000f214:	e1a00000 	nop			; (mov r0, r0)
4000f218:	eafffffe 	b	4000f218 <_tx_thread_stack_error_handler+0x3c>
4000f21c:	e121f005 	msr	CPSR_c, r5
4000f220:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f224:	40030e74 	.word	0x40030e74

4000f228 <_tx_thread_system_preempt_check>:
4000f228:	e92d4010 	push	{r4, lr}
4000f22c:	e59f0090 	ldr	r0, [pc, #144]	; 4000f2c4 <_tx_thread_system_preempt_check+0x9c>
4000f230:	e5900000 	ldr	r0, [r0]
4000f234:	e59f108c 	ldr	r1, [pc, #140]	; 4000f2c8 <_tx_thread_system_preempt_check+0xa0>
4000f238:	e5911000 	ldr	r1, [r1]
4000f23c:	e1500001 	cmp	r0, r1
4000f240:	0a00001e 	beq	4000f2c0 <_tx_thread_system_preempt_check+0x98>
4000f244:	e59f0080 	ldr	r0, [pc, #128]	; 4000f2cc <_tx_thread_system_preempt_check+0xa4>
4000f248:	e5900000 	ldr	r0, [r0]
4000f24c:	e59f107c 	ldr	r1, [pc, #124]	; 4000f2d0 <_tx_thread_system_preempt_check+0xa8>
4000f250:	e5911000 	ldr	r1, [r1]
4000f254:	e1900001 	orrs	r0, r0, r1
4000f258:	1a000018 	bne	4000f2c0 <_tx_thread_system_preempt_check+0x98>
4000f25c:	e59f0064 	ldr	r0, [pc, #100]	; 4000f2c8 <_tx_thread_system_preempt_check+0xa0>
4000f260:	e5904000 	ldr	r4, [r0]
4000f264:	e5940008 	ldr	r0, [r4, #8]
4000f268:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f26c:	e1500001 	cmp	r0, r1
4000f270:	2a000001 	bcs	4000f27c <_tx_thread_system_preempt_check+0x54>
4000f274:	e5940008 	ldr	r0, [r4, #8]
4000f278:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f27c:	e594000c 	ldr	r0, [r4, #12]
4000f280:	e5900000 	ldr	r0, [r0]
4000f284:	e59f1048 	ldr	r1, [pc, #72]	; 4000f2d4 <_tx_thread_system_preempt_check+0xac>
4000f288:	e1500001 	cmp	r0, r1
4000f28c:	1a000007 	bne	4000f2b0 <_tx_thread_system_preempt_check+0x88>
4000f290:	e5940010 	ldr	r0, [r4, #16]
4000f294:	e5900001 	ldr	r0, [r0, #1]
4000f298:	e1500001 	cmp	r0, r1
4000f29c:	1a000003 	bne	4000f2b0 <_tx_thread_system_preempt_check+0x88>
4000f2a0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f2a4:	e594100c 	ldr	r1, [r4, #12]
4000f2a8:	e1500001 	cmp	r0, r1
4000f2ac:	2a000001 	bcs	4000f2b8 <_tx_thread_system_preempt_check+0x90>
4000f2b0:	e1a00004 	mov	r0, r4
4000f2b4:	ebffffc8 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000f2b8:	ebffee70 	bl	4000ac80 <_tx_thread_system_return>
4000f2bc:	e1a00000 	nop			; (mov r0, r0)
4000f2c0:	e8bd8010 	pop	{r4, pc}
4000f2c4:	40030e50 	.word	0x40030e50
4000f2c8:	40030e54 	.word	0x40030e54
4000f2cc:	40030e48 	.word	0x40030e48
4000f2d0:	40030e6c 	.word	0x40030e6c
4000f2d4:	efefefef 	.word	0xefefefef

4000f2d8 <_tx_thread_system_resume>:
4000f2d8:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f2dc:	e1a04000 	mov	r4, r0
4000f2e0:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f2e4:	e3500000 	cmp	r0, #0
4000f2e8:	0a000002 	beq	4000f2f8 <_tx_thread_system_resume+0x20>
4000f2ec:	e284004c 	add	r0, r4, #76	; 0x4c
4000f2f0:	eb000325 	bl	4000ff8c <_tx_timer_system_deactivate>
4000f2f4:	ea000001 	b	4000f300 <_tx_thread_system_resume+0x28>
4000f2f8:	e3a00000 	mov	r0, #0
4000f2fc:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f300:	e5940008 	ldr	r0, [r4, #8]
4000f304:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f308:	e1500001 	cmp	r0, r1
4000f30c:	2a000001 	bcs	4000f318 <_tx_thread_system_resume+0x40>
4000f310:	e5940008 	ldr	r0, [r4, #8]
4000f314:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f318:	e594000c 	ldr	r0, [r4, #12]
4000f31c:	e5900000 	ldr	r0, [r0]
4000f320:	e59f133c 	ldr	r1, [pc, #828]	; 4000f664 <_tx_thread_system_resume+0x38c>
4000f324:	e1500001 	cmp	r0, r1
4000f328:	1a000007 	bne	4000f34c <_tx_thread_system_resume+0x74>
4000f32c:	e5940010 	ldr	r0, [r4, #16]
4000f330:	e5900001 	ldr	r0, [r0, #1]
4000f334:	e1500001 	cmp	r0, r1
4000f338:	1a000003 	bne	4000f34c <_tx_thread_system_resume+0x74>
4000f33c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f340:	e594100c 	ldr	r1, [r4, #12]
4000f344:	e1500001 	cmp	r0, r1
4000f348:	2a000001 	bcs	4000f354 <_tx_thread_system_resume+0x7c>
4000f34c:	e1a00004 	mov	r0, r4
4000f350:	ebffffa1 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000f354:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f358:	e5100004 	ldr	r0, [r0, #-4]
4000f35c:	e59f1300 	ldr	r1, [pc, #768]	; 4000f664 <_tx_thread_system_resume+0x38c>
4000f360:	e1500001 	cmp	r0, r1
4000f364:	0a000001 	beq	4000f370 <_tx_thread_system_resume+0x98>
4000f368:	e1a00004 	mov	r0, r4
4000f36c:	ebffff65 	bl	4000f108 <_tx_thread_stack_analyze>
4000f370:	e10f5000 	mrs	r5, CPSR
4000f374:	e3856080 	orr	r6, r5, #128	; 0x80
4000f378:	e121f006 	msr	CPSR_c, r6
4000f37c:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f668 <_tx_thread_system_resume+0x390>
4000f380:	e5900000 	ldr	r0, [r0]
4000f384:	e2400001 	sub	r0, r0, #1
4000f388:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f668 <_tx_thread_system_resume+0x390>
4000f38c:	e5810000 	str	r0, [r1]
4000f390:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f394:	e3500000 	cmp	r0, #0
4000f398:	0a000009 	beq	4000f3c4 <_tx_thread_system_resume+0xec>
4000f39c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f3a0:	e3500001 	cmp	r0, #1
4000f3a4:	0a000084 	beq	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f3a8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f3ac:	e3500002 	cmp	r0, #2
4000f3b0:	0a000081 	beq	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f3b4:	e3a00000 	mov	r0, #0
4000f3b8:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f3bc:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f3c0:	ea00007d 	b	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f3c4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f3c8:	e3500000 	cmp	r0, #0
4000f3cc:	0a00007a 	beq	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f3d0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f3d4:	e3500000 	cmp	r0, #0
4000f3d8:	0a000004 	beq	4000f3f0 <_tx_thread_system_resume+0x118>
4000f3dc:	e3a00000 	mov	r0, #0
4000f3e0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f3e4:	e3a00003 	mov	r0, #3
4000f3e8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f3ec:	ea000072 	b	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f3f0:	e59f1274 	ldr	r1, [pc, #628]	; 4000f66c <_tx_thread_system_resume+0x394>
4000f3f4:	e5910000 	ldr	r0, [r1]
4000f3f8:	e3500000 	cmp	r0, #0
4000f3fc:	0a000032 	beq	4000f4cc <_tx_thread_system_resume+0x1f4>
4000f400:	e59f1268 	ldr	r1, [pc, #616]	; 4000f670 <_tx_thread_system_resume+0x398>
4000f404:	e5911000 	ldr	r1, [r1]
4000f408:	e2811001 	add	r1, r1, #1
4000f40c:	e59f225c 	ldr	r2, [pc, #604]	; 4000f670 <_tx_thread_system_resume+0x398>
4000f410:	e5821000 	str	r1, [r2]
4000f414:	e580100c 	str	r1, [r0, #12]
4000f418:	e59f1254 	ldr	r1, [pc, #596]	; 4000f674 <_tx_thread_system_resume+0x39c>
4000f41c:	e5911000 	ldr	r1, [r1]
4000f420:	e3510000 	cmp	r1, #0
4000f424:	1a000006 	bne	4000f444 <_tx_thread_system_resume+0x16c>
4000f428:	e59f1248 	ldr	r1, [pc, #584]	; 4000f678 <_tx_thread_system_resume+0x3a0>
4000f42c:	e5911000 	ldr	r1, [r1]
4000f430:	e5801000 	str	r1, [r0]
4000f434:	e5901000 	ldr	r1, [r0]
4000f438:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f43c:	e5801004 	str	r1, [r0, #4]
4000f440:	ea00000d 	b	4000f47c <_tx_thread_system_resume+0x1a4>
4000f444:	e59f1228 	ldr	r1, [pc, #552]	; 4000f674 <_tx_thread_system_resume+0x39c>
4000f448:	e5911000 	ldr	r1, [r1]
4000f44c:	e59f2228 	ldr	r2, [pc, #552]	; 4000f67c <_tx_thread_system_resume+0x3a4>
4000f450:	e1510002 	cmp	r1, r2
4000f454:	2a000004 	bcs	4000f46c <_tx_thread_system_resume+0x194>
4000f458:	e3e01000 	mvn	r1, #0
4000f45c:	e5801000 	str	r1, [r0]
4000f460:	e3a01000 	mov	r1, #0
4000f464:	e5801004 	str	r1, [r0, #4]
4000f468:	ea000003 	b	4000f47c <_tx_thread_system_resume+0x1a4>
4000f46c:	e59f1208 	ldr	r1, [pc, #520]	; 4000f67c <_tx_thread_system_resume+0x3a4>
4000f470:	e5801000 	str	r1, [r0]
4000f474:	e3a01000 	mov	r1, #0
4000f478:	e5801004 	str	r1, [r0, #4]
4000f47c:	e3a01001 	mov	r1, #1
4000f480:	e5801008 	str	r1, [r0, #8]
4000f484:	e5804010 	str	r4, [r0, #16]
4000f488:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f48c:	e5801014 	str	r1, [r0, #20]
4000f490:	e580d018 	str	sp, [r0, #24]
4000f494:	e3a01000 	mov	r1, #0
4000f498:	e580101c 	str	r1, [r0, #28]
4000f49c:	e2800020 	add	r0, r0, #32
4000f4a0:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f680 <_tx_thread_system_resume+0x3a8>
4000f4a4:	e5911000 	ldr	r1, [r1]
4000f4a8:	e1500001 	cmp	r0, r1
4000f4ac:	3a000001 	bcc	4000f4b8 <_tx_thread_system_resume+0x1e0>
4000f4b0:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f684 <_tx_thread_system_resume+0x3ac>
4000f4b4:	e5910000 	ldr	r0, [r1]
4000f4b8:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f66c <_tx_thread_system_resume+0x394>
4000f4bc:	e5810000 	str	r0, [r1]
4000f4c0:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f688 <_tx_thread_system_resume+0x3b0>
4000f4c4:	e5911000 	ldr	r1, [r1]
4000f4c8:	e5810020 	str	r0, [r1, #32]
4000f4cc:	e3a00000 	mov	r0, #0
4000f4d0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f4d4:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f4d8:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f68c <_tx_thread_system_resume+0x3b4>
4000f4dc:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f4e0:	e3580000 	cmp	r8, #0
4000f4e4:	0a000005 	beq	4000f500 <_tx_thread_system_resume+0x228>
4000f4e8:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f4ec:	e5894020 	str	r4, [r9, #32]
4000f4f0:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f4f4:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f4f8:	e5848020 	str	r8, [r4, #32]
4000f4fc:	ea00002e 	b	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f500:	e59f0184 	ldr	r0, [pc, #388]	; 4000f68c <_tx_thread_system_resume+0x3b4>
4000f504:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f508:	e5844020 	str	r4, [r4, #32]
4000f50c:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f510:	e59f0178 	ldr	r0, [pc, #376]	; 4000f690 <_tx_thread_system_resume+0x3b8>
4000f514:	e5900000 	ldr	r0, [r0]
4000f518:	e3a01001 	mov	r1, #1
4000f51c:	e1800711 	orr	r0, r0, r1, lsl r7
4000f520:	e59f1168 	ldr	r1, [pc, #360]	; 4000f690 <_tx_thread_system_resume+0x3b8>
4000f524:	e5810000 	str	r0, [r1]
4000f528:	e59f0164 	ldr	r0, [pc, #356]	; 4000f694 <_tx_thread_system_resume+0x3bc>
4000f52c:	e5900000 	ldr	r0, [r0]
4000f530:	e58d0000 	str	r0, [sp]
4000f534:	e59d0000 	ldr	r0, [sp]
4000f538:	e3500000 	cmp	r0, #0
4000f53c:	1a000004 	bne	4000f554 <_tx_thread_system_resume+0x27c>
4000f540:	e59f014c 	ldr	r0, [pc, #332]	; 4000f694 <_tx_thread_system_resume+0x3bc>
4000f544:	e5804000 	str	r4, [r0]
4000f548:	e59f0148 	ldr	r0, [pc, #328]	; 4000f698 <_tx_thread_system_resume+0x3c0>
4000f54c:	e5807000 	str	r7, [r0]
4000f550:	ea000019 	b	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f554:	e59f013c 	ldr	r0, [pc, #316]	; 4000f698 <_tx_thread_system_resume+0x3c0>
4000f558:	e5900000 	ldr	r0, [r0]
4000f55c:	e1570000 	cmp	r7, r0
4000f560:	2a000015 	bcs	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f564:	e59f012c 	ldr	r0, [pc, #300]	; 4000f698 <_tx_thread_system_resume+0x3c0>
4000f568:	e5807000 	str	r7, [r0]
4000f56c:	e59d0000 	ldr	r0, [sp]
4000f570:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f574:	e1500007 	cmp	r0, r7
4000f578:	9a00000f 	bls	4000f5bc <_tx_thread_system_resume+0x2e4>
4000f57c:	e59d0000 	ldr	r0, [sp]
4000f580:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f584:	e59d1000 	ldr	r1, [sp]
4000f588:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f58c:	e1500001 	cmp	r0, r1
4000f590:	0a000007 	beq	4000f5b4 <_tx_thread_system_resume+0x2dc>
4000f594:	e59f0100 	ldr	r0, [pc, #256]	; 4000f69c <_tx_thread_system_resume+0x3c4>
4000f598:	e5900000 	ldr	r0, [r0]
4000f59c:	e59d1000 	ldr	r1, [sp]
4000f5a0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f5a4:	e3a02001 	mov	r2, #1
4000f5a8:	e1800112 	orr	r0, r0, r2, lsl r1
4000f5ac:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f69c <_tx_thread_system_resume+0x3c4>
4000f5b0:	e5810000 	str	r0, [r1]
4000f5b4:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f694 <_tx_thread_system_resume+0x3bc>
4000f5b8:	e5804000 	str	r4, [r0]
4000f5bc:	e121f005 	msr	CPSR_c, r5
4000f5c0:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f678 <_tx_thread_system_resume+0x3a0>
4000f5c4:	e5900000 	ldr	r0, [r0]
4000f5c8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f694 <_tx_thread_system_resume+0x3bc>
4000f5cc:	e5911000 	ldr	r1, [r1]
4000f5d0:	e1500001 	cmp	r0, r1
4000f5d4:	0a000021 	beq	4000f660 <_tx_thread_system_resume+0x388>
4000f5d8:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f694 <_tx_thread_system_resume+0x3bc>
4000f5dc:	e5900000 	ldr	r0, [r0]
4000f5e0:	e1540000 	cmp	r4, r0
4000f5e4:	0a000016 	beq	4000f644 <_tx_thread_system_resume+0x36c>
4000f5e8:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f694 <_tx_thread_system_resume+0x3bc>
4000f5ec:	e5904000 	ldr	r4, [r0]
4000f5f0:	e5940008 	ldr	r0, [r4, #8]
4000f5f4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f5f8:	e1500001 	cmp	r0, r1
4000f5fc:	2a000001 	bcs	4000f608 <_tx_thread_system_resume+0x330>
4000f600:	e5940008 	ldr	r0, [r4, #8]
4000f604:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f608:	e594000c 	ldr	r0, [r4, #12]
4000f60c:	e5900000 	ldr	r0, [r0]
4000f610:	e59f104c 	ldr	r1, [pc, #76]	; 4000f664 <_tx_thread_system_resume+0x38c>
4000f614:	e1500001 	cmp	r0, r1
4000f618:	1a000007 	bne	4000f63c <_tx_thread_system_resume+0x364>
4000f61c:	e5940010 	ldr	r0, [r4, #16]
4000f620:	e5900001 	ldr	r0, [r0, #1]
4000f624:	e1500001 	cmp	r0, r1
4000f628:	1a000003 	bne	4000f63c <_tx_thread_system_resume+0x364>
4000f62c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f630:	e594100c 	ldr	r1, [r4, #12]
4000f634:	e1500001 	cmp	r0, r1
4000f638:	2a000001 	bcs	4000f644 <_tx_thread_system_resume+0x36c>
4000f63c:	e1a00004 	mov	r0, r4
4000f640:	ebfffee5 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000f644:	e59f0028 	ldr	r0, [pc, #40]	; 4000f674 <_tx_thread_system_resume+0x39c>
4000f648:	e5900000 	ldr	r0, [r0]
4000f64c:	e59f1014 	ldr	r1, [pc, #20]	; 4000f668 <_tx_thread_system_resume+0x390>
4000f650:	e5911000 	ldr	r1, [r1]
4000f654:	e1900001 	orrs	r0, r0, r1
4000f658:	1a000000 	bne	4000f660 <_tx_thread_system_resume+0x388>
4000f65c:	ebffed87 	bl	4000ac80 <_tx_thread_system_return>
4000f660:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f664:	efefefef 	.word	0xefefefef
4000f668:	40030e6c 	.word	0x40030e6c
4000f66c:	40030ebc 	.word	0x40030ebc
4000f670:	40030ec0 	.word	0x40030ec0
4000f674:	40030e48 	.word	0x40030e48
4000f678:	40030e50 	.word	0x40030e50
4000f67c:	f0f0f0f0 	.word	0xf0f0f0f0
4000f680:	40030eb8 	.word	0x40030eb8
4000f684:	40030eb4 	.word	0x40030eb4
4000f688:	40030ea8 	.word	0x40030ea8
4000f68c:	40032874 	.word	0x40032874
4000f690:	40030e60 	.word	0x40030e60
4000f694:	40030e54 	.word	0x40030e54
4000f698:	40030e68 	.word	0x40030e68
4000f69c:	40030e64 	.word	0x40030e64

4000f6a0 <_tx_thread_time_slice>:
4000f6a0:	e92d4070 	push	{r4, r5, r6, lr}
4000f6a4:	e59f0140 	ldr	r0, [pc, #320]	; 4000f7ec <_tx_thread_time_slice+0x14c>
4000f6a8:	e5906000 	ldr	r6, [r0]
4000f6ac:	e5960008 	ldr	r0, [r6, #8]
4000f6b0:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f6b4:	e1500001 	cmp	r0, r1
4000f6b8:	2a000001 	bcs	4000f6c4 <_tx_thread_time_slice+0x24>
4000f6bc:	e5960008 	ldr	r0, [r6, #8]
4000f6c0:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f6c4:	e596000c 	ldr	r0, [r6, #12]
4000f6c8:	e5900000 	ldr	r0, [r0]
4000f6cc:	e59f111c 	ldr	r1, [pc, #284]	; 4000f7f0 <_tx_thread_time_slice+0x150>
4000f6d0:	e1500001 	cmp	r0, r1
4000f6d4:	1a000007 	bne	4000f6f8 <_tx_thread_time_slice+0x58>
4000f6d8:	e5960010 	ldr	r0, [r6, #16]
4000f6dc:	e5900001 	ldr	r0, [r0, #1]
4000f6e0:	e1500001 	cmp	r0, r1
4000f6e4:	1a000003 	bne	4000f6f8 <_tx_thread_time_slice+0x58>
4000f6e8:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f6ec:	e596100c 	ldr	r1, [r6, #12]
4000f6f0:	e1500001 	cmp	r0, r1
4000f6f4:	2a000001 	bcs	4000f700 <_tx_thread_time_slice+0x60>
4000f6f8:	e1a00006 	mov	r0, r6
4000f6fc:	ebfffeb6 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000f700:	e10f4000 	mrs	r4, CPSR
4000f704:	e3845080 	orr	r5, r4, #128	; 0x80
4000f708:	e121f005 	msr	CPSR_c, r5
4000f70c:	e3a00000 	mov	r0, #0
4000f710:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f7f4 <_tx_thread_time_slice+0x154>
4000f714:	e5810000 	str	r0, [r1]
4000f718:	e3560000 	cmp	r6, #0
4000f71c:	0a000030 	beq	4000f7e4 <_tx_thread_time_slice+0x144>
4000f720:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f724:	e3500000 	cmp	r0, #0
4000f728:	1a00002d 	bne	4000f7e4 <_tx_thread_time_slice+0x144>
4000f72c:	e596001c 	ldr	r0, [r6, #28]
4000f730:	e5860018 	str	r0, [r6, #24]
4000f734:	e5960020 	ldr	r0, [r6, #32]
4000f738:	e1500006 	cmp	r0, r6
4000f73c:	0a000025 	beq	4000f7d8 <_tx_thread_time_slice+0x138>
4000f740:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f744:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f748:	e1500001 	cmp	r0, r1
4000f74c:	1a000021 	bne	4000f7d8 <_tx_thread_time_slice+0x138>
4000f750:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f7f8 <_tx_thread_time_slice+0x158>
4000f754:	e5960020 	ldr	r0, [r6, #32]
4000f758:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f75c:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f760:	e2820000 	add	r0, r2, #0
4000f764:	e59f1090 	ldr	r1, [pc, #144]	; 4000f7fc <_tx_thread_time_slice+0x15c>
4000f768:	e5911000 	ldr	r1, [r1]
4000f76c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f770:	e59f1088 	ldr	r1, [pc, #136]	; 4000f800 <_tx_thread_time_slice+0x160>
4000f774:	e5810000 	str	r0, [r1]
4000f778:	e2810000 	add	r0, r1, #0
4000f77c:	e5906000 	ldr	r6, [r0]
4000f780:	e5960008 	ldr	r0, [r6, #8]
4000f784:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f788:	e1500001 	cmp	r0, r1
4000f78c:	2a000001 	bcs	4000f798 <_tx_thread_time_slice+0xf8>
4000f790:	e5960008 	ldr	r0, [r6, #8]
4000f794:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f798:	e596000c 	ldr	r0, [r6, #12]
4000f79c:	e5900000 	ldr	r0, [r0]
4000f7a0:	e59f1048 	ldr	r1, [pc, #72]	; 4000f7f0 <_tx_thread_time_slice+0x150>
4000f7a4:	e1500001 	cmp	r0, r1
4000f7a8:	1a000007 	bne	4000f7cc <_tx_thread_time_slice+0x12c>
4000f7ac:	e5960010 	ldr	r0, [r6, #16]
4000f7b0:	e5900001 	ldr	r0, [r0, #1]
4000f7b4:	e1500001 	cmp	r0, r1
4000f7b8:	1a000003 	bne	4000f7cc <_tx_thread_time_slice+0x12c>
4000f7bc:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f7c0:	e596100c 	ldr	r1, [r6, #12]
4000f7c4:	e1500001 	cmp	r0, r1
4000f7c8:	2a000005 	bcs	4000f7e4 <_tx_thread_time_slice+0x144>
4000f7cc:	e1a00006 	mov	r0, r6
4000f7d0:	ebfffe81 	bl	4000f1dc <_tx_thread_stack_error_handler>
4000f7d4:	ea000002 	b	4000f7e4 <_tx_thread_time_slice+0x144>
4000f7d8:	e59f1024 	ldr	r1, [pc, #36]	; 4000f804 <_tx_thread_time_slice+0x164>
4000f7dc:	e5960018 	ldr	r0, [r6, #24]
4000f7e0:	e5810000 	str	r0, [r1]
4000f7e4:	e121f004 	msr	CPSR_c, r4
4000f7e8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f7ec:	40030e50 	.word	0x40030e50
4000f7f0:	efefefef 	.word	0xefefefef
4000f7f4:	40030e80 	.word	0x40030e80
4000f7f8:	40032874 	.word	0x40032874
4000f7fc:	40030e68 	.word	0x40030e68
4000f800:	40030e54 	.word	0x40030e54
4000f804:	40030e7c 	.word	0x40030e7c

4000f808 <_tx_thread_timeout>:
4000f808:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f80c:	e1a04000 	mov	r4, r0
4000f810:	e1a08004 	mov	r8, r4
4000f814:	e10f5000 	mrs	r5, CPSR
4000f818:	e3856080 	orr	r6, r5, #128	; 0x80
4000f81c:	e121f006 	msr	CPSR_c, r6
4000f820:	e1a04008 	mov	r4, r8
4000f824:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f828:	e3500004 	cmp	r0, #4
4000f82c:	1a000008 	bne	4000f854 <_tx_thread_timeout+0x4c>
4000f830:	e59f0038 	ldr	r0, [pc, #56]	; 4000f870 <_tx_thread_timeout+0x68>
4000f834:	e5900000 	ldr	r0, [r0]
4000f838:	e2800001 	add	r0, r0, #1
4000f83c:	e59f102c 	ldr	r1, [pc, #44]	; 4000f870 <_tx_thread_timeout+0x68>
4000f840:	e5810000 	str	r0, [r1]
4000f844:	e121f005 	msr	CPSR_c, r5
4000f848:	e1a00008 	mov	r0, r8
4000f84c:	ebfffea1 	bl	4000f2d8 <_tx_thread_system_resume>
4000f850:	ea000005 	b	4000f86c <_tx_thread_timeout+0x64>
4000f854:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f858:	e121f005 	msr	CPSR_c, r5
4000f85c:	e3570000 	cmp	r7, #0
4000f860:	0a000001 	beq	4000f86c <_tx_thread_timeout+0x64>
4000f864:	e1a00008 	mov	r0, r8
4000f868:	e12fff37 	blx	r7
4000f86c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f870:	40030e6c 	.word	0x40030e6c

4000f874 <_tx_timer_activate>:
4000f874:	e92d4070 	push	{r4, r5, r6, lr}
4000f878:	e1a04000 	mov	r4, r0
4000f87c:	e10f5000 	mrs	r5, CPSR
4000f880:	e3856080 	orr	r6, r5, #128	; 0x80
4000f884:	e121f006 	msr	CPSR_c, r6
4000f888:	e59f1104 	ldr	r1, [pc, #260]	; 4000f994 <_tx_timer_activate+0x120>
4000f88c:	e5910000 	ldr	r0, [r1]
4000f890:	e3500000 	cmp	r0, #0
4000f894:	0a000031 	beq	4000f960 <_tx_timer_activate+0xec>
4000f898:	e59f10f8 	ldr	r1, [pc, #248]	; 4000f998 <_tx_timer_activate+0x124>
4000f89c:	e5911000 	ldr	r1, [r1]
4000f8a0:	e2811001 	add	r1, r1, #1
4000f8a4:	e59f20ec 	ldr	r2, [pc, #236]	; 4000f998 <_tx_timer_activate+0x124>
4000f8a8:	e5821000 	str	r1, [r2]
4000f8ac:	e580100c 	str	r1, [r0, #12]
4000f8b0:	e59f10e4 	ldr	r1, [pc, #228]	; 4000f99c <_tx_timer_activate+0x128>
4000f8b4:	e5911000 	ldr	r1, [r1]
4000f8b8:	e3510000 	cmp	r1, #0
4000f8bc:	1a000006 	bne	4000f8dc <_tx_timer_activate+0x68>
4000f8c0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000f9a0 <_tx_timer_activate+0x12c>
4000f8c4:	e5911000 	ldr	r1, [r1]
4000f8c8:	e5801000 	str	r1, [r0]
4000f8cc:	e5901000 	ldr	r1, [r0]
4000f8d0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f8d4:	e5801004 	str	r1, [r0, #4]
4000f8d8:	ea00000d 	b	4000f914 <_tx_timer_activate+0xa0>
4000f8dc:	e59f10b8 	ldr	r1, [pc, #184]	; 4000f99c <_tx_timer_activate+0x128>
4000f8e0:	e5911000 	ldr	r1, [r1]
4000f8e4:	e59f20b8 	ldr	r2, [pc, #184]	; 4000f9a4 <_tx_timer_activate+0x130>
4000f8e8:	e1510002 	cmp	r1, r2
4000f8ec:	2a000004 	bcs	4000f904 <_tx_timer_activate+0x90>
4000f8f0:	e3e01000 	mvn	r1, #0
4000f8f4:	e5801000 	str	r1, [r0]
4000f8f8:	e3a01000 	mov	r1, #0
4000f8fc:	e5801004 	str	r1, [r0, #4]
4000f900:	ea000003 	b	4000f914 <_tx_timer_activate+0xa0>
4000f904:	e59f1098 	ldr	r1, [pc, #152]	; 4000f9a4 <_tx_timer_activate+0x130>
4000f908:	e5801000 	str	r1, [r0]
4000f90c:	e3a01000 	mov	r1, #0
4000f910:	e5801004 	str	r1, [r0, #4]
4000f914:	e3a0107a 	mov	r1, #122	; 0x7a
4000f918:	e5801008 	str	r1, [r0, #8]
4000f91c:	e5804010 	str	r4, [r0, #16]
4000f920:	e3a01000 	mov	r1, #0
4000f924:	e5801014 	str	r1, [r0, #20]
4000f928:	e5801018 	str	r1, [r0, #24]
4000f92c:	e580101c 	str	r1, [r0, #28]
4000f930:	e2800020 	add	r0, r0, #32
4000f934:	e59f106c 	ldr	r1, [pc, #108]	; 4000f9a8 <_tx_timer_activate+0x134>
4000f938:	e5911000 	ldr	r1, [r1]
4000f93c:	e1500001 	cmp	r0, r1
4000f940:	3a000001 	bcc	4000f94c <_tx_timer_activate+0xd8>
4000f944:	e59f1060 	ldr	r1, [pc, #96]	; 4000f9ac <_tx_timer_activate+0x138>
4000f948:	e5910000 	ldr	r0, [r1]
4000f94c:	e59f1040 	ldr	r1, [pc, #64]	; 4000f994 <_tx_timer_activate+0x120>
4000f950:	e5810000 	str	r0, [r1]
4000f954:	e59f1054 	ldr	r1, [pc, #84]	; 4000f9b0 <_tx_timer_activate+0x13c>
4000f958:	e5911000 	ldr	r1, [r1]
4000f95c:	e5810020 	str	r0, [r1, #32]
4000f960:	e121f005 	msr	CPSR_c, r5
4000f964:	e5940020 	ldr	r0, [r4, #32]
4000f968:	e3500000 	cmp	r0, #0
4000f96c:	1a000002 	bne	4000f97c <_tx_timer_activate+0x108>
4000f970:	e5940008 	ldr	r0, [r4, #8]
4000f974:	e3500000 	cmp	r0, #0
4000f978:	1a000001 	bne	4000f984 <_tx_timer_activate+0x110>
4000f97c:	e3a00017 	mov	r0, #23
4000f980:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f984:	e2840008 	add	r0, r4, #8
4000f988:	ebffe6c7 	bl	400094ac <_tx_timer_system_activate>
4000f98c:	e3a00000 	mov	r0, #0
4000f990:	eafffffa 	b	4000f980 <_tx_timer_activate+0x10c>
4000f994:	40030ebc 	.word	0x40030ebc
4000f998:	40030ec0 	.word	0x40030ec0
4000f99c:	40030e48 	.word	0x40030e48
4000f9a0:	40030e50 	.word	0x40030e50
4000f9a4:	f0f0f0f0 	.word	0xf0f0f0f0
4000f9a8:	40030eb8 	.word	0x40030eb8
4000f9ac:	40030eb4 	.word	0x40030eb4
4000f9b0:	40030ea8 	.word	0x40030ea8

4000f9b4 <_tx_timer_change>:
4000f9b4:	e92d4030 	push	{r4, r5, lr}
4000f9b8:	e1a03000 	mov	r3, r0
4000f9bc:	e10fc000 	mrs	ip, CPSR
4000f9c0:	e38ce080 	orr	lr, ip, #128	; 0x80
4000f9c4:	e121f00e 	msr	CPSR_c, lr
4000f9c8:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fac0 <_tx_timer_change+0x10c>
4000f9cc:	e5940000 	ldr	r0, [r4]
4000f9d0:	e3500000 	cmp	r0, #0
4000f9d4:	0a000031 	beq	4000faa0 <_tx_timer_change+0xec>
4000f9d8:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fac4 <_tx_timer_change+0x110>
4000f9dc:	e5944000 	ldr	r4, [r4]
4000f9e0:	e2844001 	add	r4, r4, #1
4000f9e4:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fac4 <_tx_timer_change+0x110>
4000f9e8:	e5854000 	str	r4, [r5]
4000f9ec:	e580400c 	str	r4, [r0, #12]
4000f9f0:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fac8 <_tx_timer_change+0x114>
4000f9f4:	e5944000 	ldr	r4, [r4]
4000f9f8:	e3540000 	cmp	r4, #0
4000f9fc:	1a000006 	bne	4000fa1c <_tx_timer_change+0x68>
4000fa00:	e59f40c4 	ldr	r4, [pc, #196]	; 4000facc <_tx_timer_change+0x118>
4000fa04:	e5944000 	ldr	r4, [r4]
4000fa08:	e5804000 	str	r4, [r0]
4000fa0c:	e5904000 	ldr	r4, [r0]
4000fa10:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000fa14:	e5804004 	str	r4, [r0, #4]
4000fa18:	ea00000d 	b	4000fa54 <_tx_timer_change+0xa0>
4000fa1c:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fac8 <_tx_timer_change+0x114>
4000fa20:	e5944000 	ldr	r4, [r4]
4000fa24:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fad0 <_tx_timer_change+0x11c>
4000fa28:	e1540005 	cmp	r4, r5
4000fa2c:	2a000004 	bcs	4000fa44 <_tx_timer_change+0x90>
4000fa30:	e3e04000 	mvn	r4, #0
4000fa34:	e5804000 	str	r4, [r0]
4000fa38:	e3a04000 	mov	r4, #0
4000fa3c:	e5804004 	str	r4, [r0, #4]
4000fa40:	ea000003 	b	4000fa54 <_tx_timer_change+0xa0>
4000fa44:	e59f4084 	ldr	r4, [pc, #132]	; 4000fad0 <_tx_timer_change+0x11c>
4000fa48:	e5804000 	str	r4, [r0]
4000fa4c:	e3a04000 	mov	r4, #0
4000fa50:	e5804004 	str	r4, [r0, #4]
4000fa54:	e3a0407b 	mov	r4, #123	; 0x7b
4000fa58:	e5804008 	str	r4, [r0, #8]
4000fa5c:	e5803010 	str	r3, [r0, #16]
4000fa60:	e5801014 	str	r1, [r0, #20]
4000fa64:	e5802018 	str	r2, [r0, #24]
4000fa68:	e3a04000 	mov	r4, #0
4000fa6c:	e580401c 	str	r4, [r0, #28]
4000fa70:	e2800020 	add	r0, r0, #32
4000fa74:	e59f4058 	ldr	r4, [pc, #88]	; 4000fad4 <_tx_timer_change+0x120>
4000fa78:	e5944000 	ldr	r4, [r4]
4000fa7c:	e1500004 	cmp	r0, r4
4000fa80:	3a000001 	bcc	4000fa8c <_tx_timer_change+0xd8>
4000fa84:	e59f404c 	ldr	r4, [pc, #76]	; 4000fad8 <_tx_timer_change+0x124>
4000fa88:	e5940000 	ldr	r0, [r4]
4000fa8c:	e59f402c 	ldr	r4, [pc, #44]	; 4000fac0 <_tx_timer_change+0x10c>
4000fa90:	e5840000 	str	r0, [r4]
4000fa94:	e59f4040 	ldr	r4, [pc, #64]	; 4000fadc <_tx_timer_change+0x128>
4000fa98:	e5944000 	ldr	r4, [r4]
4000fa9c:	e5840020 	str	r0, [r4, #32]
4000faa0:	e5930020 	ldr	r0, [r3, #32]
4000faa4:	e3500000 	cmp	r0, #0
4000faa8:	1a000001 	bne	4000fab4 <_tx_timer_change+0x100>
4000faac:	e5831008 	str	r1, [r3, #8]
4000fab0:	e583200c 	str	r2, [r3, #12]
4000fab4:	e121f00c 	msr	CPSR_c, ip
4000fab8:	e3a00000 	mov	r0, #0
4000fabc:	e8bd8030 	pop	{r4, r5, pc}
4000fac0:	40030ebc 	.word	0x40030ebc
4000fac4:	40030ec0 	.word	0x40030ec0
4000fac8:	40030e48 	.word	0x40030e48
4000facc:	40030e50 	.word	0x40030e50
4000fad0:	f0f0f0f0 	.word	0xf0f0f0f0
4000fad4:	40030eb8 	.word	0x40030eb8
4000fad8:	40030eb4 	.word	0x40030eb4
4000fadc:	40030ea8 	.word	0x40030ea8

4000fae0 <_tx_timer_create>:
4000fae0:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fae4:	e1a04000 	mov	r4, r0
4000fae8:	e1a05001 	mov	r5, r1
4000faec:	e1a06002 	mov	r6, r2
4000faf0:	e1a07003 	mov	r7, r3
4000faf4:	e28da030 	add	sl, sp, #48	; 0x30
4000faf8:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fafc:	e3a0102c 	mov	r1, #44	; 0x2c
4000fb00:	e1a00004 	mov	r0, r4
4000fb04:	eb000eae 	bl	400135c4 <__aeabi_memclr4>
4000fb08:	e5845004 	str	r5, [r4, #4]
4000fb0c:	e5848008 	str	r8, [r4, #8]
4000fb10:	e584900c 	str	r9, [r4, #12]
4000fb14:	e5846010 	str	r6, [r4, #16]
4000fb18:	e5847014 	str	r7, [r4, #20]
4000fb1c:	e10fb000 	mrs	fp, CPSR
4000fb20:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fb24:	e58d0008 	str	r0, [sp, #8]
4000fb28:	e59d0008 	ldr	r0, [sp, #8]
4000fb2c:	e121f000 	msr	CPSR_c, r0
4000fb30:	e59f0178 	ldr	r0, [pc, #376]	; 4000fcb0 <_tx_timer_create+0x1d0>
4000fb34:	e5840000 	str	r0, [r4]
4000fb38:	e59f0174 	ldr	r0, [pc, #372]	; 4000fcb4 <_tx_timer_create+0x1d4>
4000fb3c:	e5900000 	ldr	r0, [r0]
4000fb40:	e3500000 	cmp	r0, #0
4000fb44:	0a00000e 	beq	4000fb84 <_tx_timer_create+0xa4>
4000fb48:	e59f0164 	ldr	r0, [pc, #356]	; 4000fcb4 <_tx_timer_create+0x1d4>
4000fb4c:	e5900000 	ldr	r0, [r0]
4000fb50:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fb54:	e58d0004 	str	r0, [sp, #4]
4000fb58:	e59f0154 	ldr	r0, [pc, #340]	; 4000fcb4 <_tx_timer_create+0x1d4>
4000fb5c:	e5900000 	ldr	r0, [r0]
4000fb60:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fb64:	e59d0004 	ldr	r0, [sp, #4]
4000fb68:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fb6c:	e59d0004 	ldr	r0, [sp, #4]
4000fb70:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fb74:	e59f0138 	ldr	r0, [pc, #312]	; 4000fcb4 <_tx_timer_create+0x1d4>
4000fb78:	e5900000 	ldr	r0, [r0]
4000fb7c:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fb80:	ea000003 	b	4000fb94 <_tx_timer_create+0xb4>
4000fb84:	e59f0128 	ldr	r0, [pc, #296]	; 4000fcb4 <_tx_timer_create+0x1d4>
4000fb88:	e5804000 	str	r4, [r0]
4000fb8c:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fb90:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fb94:	e59f011c 	ldr	r0, [pc, #284]	; 4000fcb8 <_tx_timer_create+0x1d8>
4000fb98:	e5900000 	ldr	r0, [r0]
4000fb9c:	e2800001 	add	r0, r0, #1
4000fba0:	e59f1110 	ldr	r1, [pc, #272]	; 4000fcb8 <_tx_timer_create+0x1d8>
4000fba4:	e5810000 	str	r0, [r1]
4000fba8:	e1a03008 	mov	r3, r8
4000fbac:	e1a02005 	mov	r2, r5
4000fbb0:	e1a01004 	mov	r1, r4
4000fbb4:	e3a00002 	mov	r0, #2
4000fbb8:	e58d9000 	str	r9, [sp]
4000fbbc:	eb00011b 	bl	40010030 <_tx_trace_object_register>
4000fbc0:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fcbc <_tx_timer_create+0x1dc>
4000fbc4:	e5910000 	ldr	r0, [r1]
4000fbc8:	e3500000 	cmp	r0, #0
4000fbcc:	0a000030 	beq	4000fc94 <_tx_timer_create+0x1b4>
4000fbd0:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fcc0 <_tx_timer_create+0x1e0>
4000fbd4:	e5911000 	ldr	r1, [r1]
4000fbd8:	e2811001 	add	r1, r1, #1
4000fbdc:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fcc0 <_tx_timer_create+0x1e0>
4000fbe0:	e5821000 	str	r1, [r2]
4000fbe4:	e580100c 	str	r1, [r0, #12]
4000fbe8:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fcc4 <_tx_timer_create+0x1e4>
4000fbec:	e5911000 	ldr	r1, [r1]
4000fbf0:	e3510000 	cmp	r1, #0
4000fbf4:	1a000006 	bne	4000fc14 <_tx_timer_create+0x134>
4000fbf8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fcc8 <_tx_timer_create+0x1e8>
4000fbfc:	e5911000 	ldr	r1, [r1]
4000fc00:	e5801000 	str	r1, [r0]
4000fc04:	e5901000 	ldr	r1, [r0]
4000fc08:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fc0c:	e5801004 	str	r1, [r0, #4]
4000fc10:	ea00000d 	b	4000fc4c <_tx_timer_create+0x16c>
4000fc14:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fcc4 <_tx_timer_create+0x1e4>
4000fc18:	e5911000 	ldr	r1, [r1]
4000fc1c:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fccc <_tx_timer_create+0x1ec>
4000fc20:	e1510002 	cmp	r1, r2
4000fc24:	2a000004 	bcs	4000fc3c <_tx_timer_create+0x15c>
4000fc28:	e3e01000 	mvn	r1, #0
4000fc2c:	e5801000 	str	r1, [r0]
4000fc30:	e3a01000 	mov	r1, #0
4000fc34:	e5801004 	str	r1, [r0, #4]
4000fc38:	ea000003 	b	4000fc4c <_tx_timer_create+0x16c>
4000fc3c:	e59f1088 	ldr	r1, [pc, #136]	; 4000fccc <_tx_timer_create+0x1ec>
4000fc40:	e5801000 	str	r1, [r0]
4000fc44:	e3a01000 	mov	r1, #0
4000fc48:	e5801004 	str	r1, [r0, #4]
4000fc4c:	e3a0107c 	mov	r1, #124	; 0x7c
4000fc50:	e5801008 	str	r1, [r0, #8]
4000fc54:	e5804010 	str	r4, [r0, #16]
4000fc58:	e5808014 	str	r8, [r0, #20]
4000fc5c:	e5809018 	str	r9, [r0, #24]
4000fc60:	e580a01c 	str	sl, [r0, #28]
4000fc64:	e2800020 	add	r0, r0, #32
4000fc68:	e59f1060 	ldr	r1, [pc, #96]	; 4000fcd0 <_tx_timer_create+0x1f0>
4000fc6c:	e5911000 	ldr	r1, [r1]
4000fc70:	e1500001 	cmp	r0, r1
4000fc74:	3a000001 	bcc	4000fc80 <_tx_timer_create+0x1a0>
4000fc78:	e59f1054 	ldr	r1, [pc, #84]	; 4000fcd4 <_tx_timer_create+0x1f4>
4000fc7c:	e5910000 	ldr	r0, [r1]
4000fc80:	e59f1034 	ldr	r1, [pc, #52]	; 4000fcbc <_tx_timer_create+0x1dc>
4000fc84:	e5810000 	str	r0, [r1]
4000fc88:	e59f1048 	ldr	r1, [pc, #72]	; 4000fcd8 <_tx_timer_create+0x1f8>
4000fc8c:	e5911000 	ldr	r1, [r1]
4000fc90:	e5810020 	str	r0, [r1, #32]
4000fc94:	e121f00b 	msr	CPSR_c, fp
4000fc98:	e35a0000 	cmp	sl, #0
4000fc9c:	0a000001 	beq	4000fca8 <_tx_timer_create+0x1c8>
4000fca0:	e2840008 	add	r0, r4, #8
4000fca4:	ebffe600 	bl	400094ac <_tx_timer_system_activate>
4000fca8:	e3a00000 	mov	r0, #0
4000fcac:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fcb0:	4154494d 	.word	0x4154494d
4000fcb4:	40030e94 	.word	0x40030e94
4000fcb8:	40030e98 	.word	0x40030e98
4000fcbc:	40030ebc 	.word	0x40030ebc
4000fcc0:	40030ec0 	.word	0x40030ec0
4000fcc4:	40030e48 	.word	0x40030e48
4000fcc8:	40030e50 	.word	0x40030e50
4000fccc:	f0f0f0f0 	.word	0xf0f0f0f0
4000fcd0:	40030eb8 	.word	0x40030eb8
4000fcd4:	40030eb4 	.word	0x40030eb4
4000fcd8:	40030ea8 	.word	0x40030ea8

4000fcdc <_tx_timer_deactivate>:
4000fcdc:	e92d4018 	push	{r3, r4, lr}
4000fce0:	e1a01000 	mov	r1, r0
4000fce4:	e281c008 	add	ip, r1, #8
4000fce8:	e10f2000 	mrs	r2, CPSR
4000fcec:	e3823080 	orr	r3, r2, #128	; 0x80
4000fcf0:	e121f003 	msr	CPSR_c, r3
4000fcf4:	e59fe228 	ldr	lr, [pc, #552]	; 4000ff24 <_tx_timer_deactivate+0x248>
4000fcf8:	e59e0000 	ldr	r0, [lr]
4000fcfc:	e3500000 	cmp	r0, #0
4000fd00:	0a000031 	beq	4000fdcc <_tx_timer_deactivate+0xf0>
4000fd04:	e59fe21c 	ldr	lr, [pc, #540]	; 4000ff28 <_tx_timer_deactivate+0x24c>
4000fd08:	e59ee000 	ldr	lr, [lr]
4000fd0c:	e28ee001 	add	lr, lr, #1
4000fd10:	e59f4210 	ldr	r4, [pc, #528]	; 4000ff28 <_tx_timer_deactivate+0x24c>
4000fd14:	e584e000 	str	lr, [r4]
4000fd18:	e580e00c 	str	lr, [r0, #12]
4000fd1c:	e59fe208 	ldr	lr, [pc, #520]	; 4000ff2c <_tx_timer_deactivate+0x250>
4000fd20:	e59ee000 	ldr	lr, [lr]
4000fd24:	e35e0000 	cmp	lr, #0
4000fd28:	1a000006 	bne	4000fd48 <_tx_timer_deactivate+0x6c>
4000fd2c:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000ff30 <_tx_timer_deactivate+0x254>
4000fd30:	e59ee000 	ldr	lr, [lr]
4000fd34:	e580e000 	str	lr, [r0]
4000fd38:	e590e000 	ldr	lr, [r0]
4000fd3c:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fd40:	e580e004 	str	lr, [r0, #4]
4000fd44:	ea00000d 	b	4000fd80 <_tx_timer_deactivate+0xa4>
4000fd48:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000ff2c <_tx_timer_deactivate+0x250>
4000fd4c:	e59ee000 	ldr	lr, [lr]
4000fd50:	e59f41dc 	ldr	r4, [pc, #476]	; 4000ff34 <_tx_timer_deactivate+0x258>
4000fd54:	e15e0004 	cmp	lr, r4
4000fd58:	2a000004 	bcs	4000fd70 <_tx_timer_deactivate+0x94>
4000fd5c:	e3e0e000 	mvn	lr, #0
4000fd60:	e580e000 	str	lr, [r0]
4000fd64:	e3a0e000 	mov	lr, #0
4000fd68:	e580e004 	str	lr, [r0, #4]
4000fd6c:	ea000003 	b	4000fd80 <_tx_timer_deactivate+0xa4>
4000fd70:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000ff34 <_tx_timer_deactivate+0x258>
4000fd74:	e580e000 	str	lr, [r0]
4000fd78:	e3a0e000 	mov	lr, #0
4000fd7c:	e580e004 	str	lr, [r0, #4]
4000fd80:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fd84:	e580e008 	str	lr, [r0, #8]
4000fd88:	e5801010 	str	r1, [r0, #16]
4000fd8c:	e580d014 	str	sp, [r0, #20]
4000fd90:	e3a0e000 	mov	lr, #0
4000fd94:	e580e018 	str	lr, [r0, #24]
4000fd98:	e580e01c 	str	lr, [r0, #28]
4000fd9c:	e2800020 	add	r0, r0, #32
4000fda0:	e59fe190 	ldr	lr, [pc, #400]	; 4000ff38 <_tx_timer_deactivate+0x25c>
4000fda4:	e59ee000 	ldr	lr, [lr]
4000fda8:	e150000e 	cmp	r0, lr
4000fdac:	3a000001 	bcc	4000fdb8 <_tx_timer_deactivate+0xdc>
4000fdb0:	e59fe184 	ldr	lr, [pc, #388]	; 4000ff3c <_tx_timer_deactivate+0x260>
4000fdb4:	e59e0000 	ldr	r0, [lr]
4000fdb8:	e59fe164 	ldr	lr, [pc, #356]	; 4000ff24 <_tx_timer_deactivate+0x248>
4000fdbc:	e58e0000 	str	r0, [lr]
4000fdc0:	e59fe178 	ldr	lr, [pc, #376]	; 4000ff40 <_tx_timer_deactivate+0x264>
4000fdc4:	e59ee000 	ldr	lr, [lr]
4000fdc8:	e58e0020 	str	r0, [lr, #32]
4000fdcc:	e59fe170 	ldr	lr, [pc, #368]	; 4000ff44 <_tx_timer_deactivate+0x268>
4000fdd0:	e59c0018 	ldr	r0, [ip, #24]
4000fdd4:	e59ee000 	ldr	lr, [lr]
4000fdd8:	e150000e 	cmp	r0, lr
4000fddc:	3a00002b 	bcc	4000fe90 <_tx_timer_deactivate+0x1b4>
4000fde0:	e59fe160 	ldr	lr, [pc, #352]	; 4000ff48 <_tx_timer_deactivate+0x26c>
4000fde4:	e59c0018 	ldr	r0, [ip, #24]
4000fde8:	e59ee000 	ldr	lr, [lr]
4000fdec:	e150000e 	cmp	r0, lr
4000fdf0:	2a000026 	bcs	4000fe90 <_tx_timer_deactivate+0x1b4>
4000fdf4:	e59fe150 	ldr	lr, [pc, #336]	; 4000ff4c <_tx_timer_deactivate+0x270>
4000fdf8:	e59c0018 	ldr	r0, [ip, #24]
4000fdfc:	e59ee000 	ldr	lr, [lr]
4000fe00:	e150000e 	cmp	r0, lr
4000fe04:	3a000007 	bcc	4000fe28 <_tx_timer_deactivate+0x14c>
4000fe08:	e59fe13c 	ldr	lr, [pc, #316]	; 4000ff4c <_tx_timer_deactivate+0x270>
4000fe0c:	e59c0018 	ldr	r0, [ip, #24]
4000fe10:	e59ee000 	ldr	lr, [lr]
4000fe14:	e040000e 	sub	r0, r0, lr
4000fe18:	e3a0e001 	mov	lr, #1
4000fe1c:	e08e0140 	add	r0, lr, r0, asr #2
4000fe20:	e58d0000 	str	r0, [sp]
4000fe24:	ea00000e 	b	4000fe64 <_tx_timer_deactivate+0x188>
4000fe28:	e59fe114 	ldr	lr, [pc, #276]	; 4000ff44 <_tx_timer_deactivate+0x268>
4000fe2c:	e59c0018 	ldr	r0, [ip, #24]
4000fe30:	e59ee000 	ldr	lr, [lr]
4000fe34:	e040000e 	sub	r0, r0, lr
4000fe38:	e1a00140 	asr	r0, r0, #2
4000fe3c:	e58d0000 	str	r0, [sp]
4000fe40:	e59f0100 	ldr	r0, [pc, #256]	; 4000ff48 <_tx_timer_deactivate+0x26c>
4000fe44:	e5900000 	ldr	r0, [r0]
4000fe48:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000ff4c <_tx_timer_deactivate+0x270>
4000fe4c:	e59ee000 	ldr	lr, [lr]
4000fe50:	e040000e 	sub	r0, r0, lr
4000fe54:	e59de000 	ldr	lr, [sp]
4000fe58:	e08e0140 	add	r0, lr, r0, asr #2
4000fe5c:	e2800001 	add	r0, r0, #1
4000fe60:	e58d0000 	str	r0, [sp]
4000fe64:	e59c0000 	ldr	r0, [ip]
4000fe68:	e3500020 	cmp	r0, #32
4000fe6c:	9a000005 	bls	4000fe88 <_tx_timer_deactivate+0x1ac>
4000fe70:	e59c0000 	ldr	r0, [ip]
4000fe74:	e2400020 	sub	r0, r0, #32
4000fe78:	e59de000 	ldr	lr, [sp]
4000fe7c:	e080000e 	add	r0, r0, lr
4000fe80:	e58c0000 	str	r0, [ip]
4000fe84:	ea000001 	b	4000fe90 <_tx_timer_deactivate+0x1b4>
4000fe88:	e59d0000 	ldr	r0, [sp]
4000fe8c:	e58c0000 	str	r0, [ip]
4000fe90:	e59c0018 	ldr	r0, [ip, #24]
4000fe94:	e3500000 	cmp	r0, #0
4000fe98:	0a00001e 	beq	4000ff18 <_tx_timer_deactivate+0x23c>
4000fe9c:	e59c0010 	ldr	r0, [ip, #16]
4000fea0:	e150000c 	cmp	r0, ip
4000fea4:	1a000009 	bne	4000fed0 <_tx_timer_deactivate+0x1f4>
4000fea8:	e59c0018 	ldr	r0, [ip, #24]
4000feac:	e5900000 	ldr	r0, [r0]
4000feb0:	e150000c 	cmp	r0, ip
4000feb4:	1a000002 	bne	4000fec4 <_tx_timer_deactivate+0x1e8>
4000feb8:	e3a00000 	mov	r0, #0
4000febc:	e59ce018 	ldr	lr, [ip, #24]
4000fec0:	e58e0000 	str	r0, [lr]
4000fec4:	e3a00000 	mov	r0, #0
4000fec8:	e58c0018 	str	r0, [ip, #24]
4000fecc:	ea000011 	b	4000ff18 <_tx_timer_deactivate+0x23c>
4000fed0:	e59c0014 	ldr	r0, [ip, #20]
4000fed4:	e59ce010 	ldr	lr, [ip, #16]
4000fed8:	e58e0014 	str	r0, [lr, #20]
4000fedc:	e59c0010 	ldr	r0, [ip, #16]
4000fee0:	e59ce014 	ldr	lr, [ip, #20]
4000fee4:	e58e0010 	str	r0, [lr, #16]
4000fee8:	e59c0018 	ldr	r0, [ip, #24]
4000feec:	e5900000 	ldr	r0, [r0]
4000fef0:	e150000c 	cmp	r0, ip
4000fef4:	1a000005 	bne	4000ff10 <_tx_timer_deactivate+0x234>
4000fef8:	e59c0018 	ldr	r0, [ip, #24]
4000fefc:	e59ce010 	ldr	lr, [ip, #16]
4000ff00:	e58e0018 	str	r0, [lr, #24]
4000ff04:	e59c0010 	ldr	r0, [ip, #16]
4000ff08:	e59ce018 	ldr	lr, [ip, #24]
4000ff0c:	e58e0000 	str	r0, [lr]
4000ff10:	e3a00000 	mov	r0, #0
4000ff14:	e58c0018 	str	r0, [ip, #24]
4000ff18:	e121f002 	msr	CPSR_c, r2
4000ff1c:	e3a00000 	mov	r0, #0
4000ff20:	e8bd8018 	pop	{r3, r4, pc}
4000ff24:	40030ebc 	.word	0x40030ebc
4000ff28:	40030ec0 	.word	0x40030ec0
4000ff2c:	40030e48 	.word	0x40030e48
4000ff30:	40030e50 	.word	0x40030e50
4000ff34:	f0f0f0f0 	.word	0xf0f0f0f0
4000ff38:	40030eb8 	.word	0x40030eb8
4000ff3c:	40030eb4 	.word	0x40030eb4
4000ff40:	40030ea8 	.word	0x40030ea8
4000ff44:	40030e84 	.word	0x40030e84
4000ff48:	40030e88 	.word	0x40030e88
4000ff4c:	40030e8c 	.word	0x40030e8c

4000ff50 <_tx_timer_expiration_process>:
4000ff50:	e92d4070 	push	{r4, r5, r6, lr}
4000ff54:	e10f4000 	mrs	r4, CPSR
4000ff58:	e3845080 	orr	r5, r4, #128	; 0x80
4000ff5c:	e121f005 	msr	CPSR_c, r5
4000ff60:	e59f001c 	ldr	r0, [pc, #28]	; 4000ff84 <_tx_timer_expiration_process+0x34>
4000ff64:	e5900000 	ldr	r0, [r0]
4000ff68:	e2800001 	add	r0, r0, #1
4000ff6c:	e59f1010 	ldr	r1, [pc, #16]	; 4000ff84 <_tx_timer_expiration_process+0x34>
4000ff70:	e5810000 	str	r0, [r1]
4000ff74:	e121f004 	msr	CPSR_c, r4
4000ff78:	e59f0008 	ldr	r0, [pc, #8]	; 4000ff88 <_tx_timer_expiration_process+0x38>
4000ff7c:	ebfffcd5 	bl	4000f2d8 <_tx_thread_system_resume>
4000ff80:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ff84:	40030e6c 	.word	0x40030e6c
4000ff88:	40032974 	.word	0x40032974

4000ff8c <_tx_timer_system_deactivate>:
4000ff8c:	e1a01000 	mov	r1, r0
4000ff90:	e10f2000 	mrs	r2, CPSR
4000ff94:	e3823080 	orr	r3, r2, #128	; 0x80
4000ff98:	e121f003 	msr	CPSR_c, r3
4000ff9c:	e5910018 	ldr	r0, [r1, #24]
4000ffa0:	e3500000 	cmp	r0, #0
4000ffa4:	0a00001e 	beq	40010024 <_tx_timer_system_deactivate+0x98>
4000ffa8:	e5910010 	ldr	r0, [r1, #16]
4000ffac:	e1500001 	cmp	r0, r1
4000ffb0:	1a000009 	bne	4000ffdc <_tx_timer_system_deactivate+0x50>
4000ffb4:	e5910018 	ldr	r0, [r1, #24]
4000ffb8:	e5900000 	ldr	r0, [r0]
4000ffbc:	e1500001 	cmp	r0, r1
4000ffc0:	1a000002 	bne	4000ffd0 <_tx_timer_system_deactivate+0x44>
4000ffc4:	e3a00000 	mov	r0, #0
4000ffc8:	e591c018 	ldr	ip, [r1, #24]
4000ffcc:	e58c0000 	str	r0, [ip]
4000ffd0:	e3a00000 	mov	r0, #0
4000ffd4:	e5810018 	str	r0, [r1, #24]
4000ffd8:	ea000011 	b	40010024 <_tx_timer_system_deactivate+0x98>
4000ffdc:	e5910014 	ldr	r0, [r1, #20]
4000ffe0:	e591c010 	ldr	ip, [r1, #16]
4000ffe4:	e58c0014 	str	r0, [ip, #20]
4000ffe8:	e5910010 	ldr	r0, [r1, #16]
4000ffec:	e591c014 	ldr	ip, [r1, #20]
4000fff0:	e58c0010 	str	r0, [ip, #16]
4000fff4:	e5910018 	ldr	r0, [r1, #24]
4000fff8:	e5900000 	ldr	r0, [r0]
4000fffc:	e1500001 	cmp	r0, r1
40010000:	1a000005 	bne	4001001c <_tx_timer_system_deactivate+0x90>
40010004:	e5910018 	ldr	r0, [r1, #24]
40010008:	e591c010 	ldr	ip, [r1, #16]
4001000c:	e58c0018 	str	r0, [ip, #24]
40010010:	e5910010 	ldr	r0, [r1, #16]
40010014:	e591c018 	ldr	ip, [r1, #24]
40010018:	e58c0000 	str	r0, [ip]
4001001c:	e3a00000 	mov	r0, #0
40010020:	e5810018 	str	r0, [r1, #24]
40010024:	e121f002 	msr	CPSR_c, r2
40010028:	e3a00000 	mov	r0, #0
4001002c:	e12fff1e 	bx	lr

40010030 <_tx_trace_object_register>:
40010030:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40010034:	e1a04000 	mov	r4, r0
40010038:	e1a05001 	mov	r5, r1
4001003c:	e1a06002 	mov	r6, r2
40010040:	e1a07003 	mov	r7, r3
40010044:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
40010048:	e59f0184 	ldr	r0, [pc, #388]	; 400101d4 <_tx_trace_object_register+0x1a4>
4001004c:	e5900000 	ldr	r0, [r0]
40010050:	e3500000 	cmp	r0, #0
40010054:	1a000000 	bne	4001005c <_tx_trace_object_register+0x2c>
40010058:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4001005c:	e59f1174 	ldr	r1, [pc, #372]	; 400101d8 <_tx_trace_object_register+0x1a8>
40010060:	e5911000 	ldr	r1, [r1]
40010064:	e59f2168 	ldr	r2, [pc, #360]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010068:	e5922000 	ldr	r2, [r2]
4001006c:	e0410002 	sub	r0, r1, r2
40010070:	e3a01030 	mov	r1, #48	; 0x30
40010074:	eb0002bd 	bl	40010b70 <__aeabi_idivmod>
40010078:	e1a0a000 	mov	sl, r0
4001007c:	e1a0b00a 	mov	fp, sl
40010080:	e3a09000 	mov	r9, #0
40010084:	ea00001b 	b	400100f8 <_tx_trace_object_register+0xc8>
40010088:	e0890089 	add	r0, r9, r9, lsl #1
4001008c:	e59f1140 	ldr	r1, [pc, #320]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010090:	e5911000 	ldr	r1, [r1]
40010094:	e0810200 	add	r0, r1, r0, lsl #4
40010098:	e5900004 	ldr	r0, [r0, #4]
4001009c:	e1500005 	cmp	r0, r5
400100a0:	1a000001 	bne	400100ac <_tx_trace_object_register+0x7c>
400100a4:	e1a0b009 	mov	fp, r9
400100a8:	ea000014 	b	40010100 <_tx_trace_object_register+0xd0>
400100ac:	e0890089 	add	r0, r9, r9, lsl #1
400100b0:	e59f111c 	ldr	r1, [pc, #284]	; 400101d4 <_tx_trace_object_register+0x1a4>
400100b4:	e5911000 	ldr	r1, [r1]
400100b8:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
400100bc:	e3500000 	cmp	r0, #0
400100c0:	0a00000b 	beq	400100f4 <_tx_trace_object_register+0xc4>
400100c4:	e15b000a 	cmp	fp, sl
400100c8:	1a000001 	bne	400100d4 <_tx_trace_object_register+0xa4>
400100cc:	e1a0b009 	mov	fp, r9
400100d0:	ea000007 	b	400100f4 <_tx_trace_object_register+0xc4>
400100d4:	e08b008b 	add	r0, fp, fp, lsl #1
400100d8:	e59f10f4 	ldr	r1, [pc, #244]	; 400101d4 <_tx_trace_object_register+0x1a4>
400100dc:	e5911000 	ldr	r1, [r1]
400100e0:	e0810200 	add	r0, r1, r0, lsl #4
400100e4:	e5d00001 	ldrb	r0, [r0, #1]
400100e8:	e3500000 	cmp	r0, #0
400100ec:	0a000000 	beq	400100f4 <_tx_trace_object_register+0xc4>
400100f0:	e1a0b009 	mov	fp, r9
400100f4:	e2899001 	add	r9, r9, #1
400100f8:	e159000a 	cmp	r9, sl
400100fc:	3affffe1 	bcc	40010088 <_tx_trace_object_register+0x58>
40010100:	e1a00000 	nop			; (mov r0, r0)
40010104:	e15b000a 	cmp	fp, sl
40010108:	2a000030 	bcs	400101d0 <_tx_trace_object_register+0x1a0>
4001010c:	e3a00000 	mov	r0, #0
40010110:	e08b108b 	add	r1, fp, fp, lsl #1
40010114:	e59f20b8 	ldr	r2, [pc, #184]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010118:	e5922000 	ldr	r2, [r2]
4001011c:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010120:	e08b008b 	add	r0, fp, fp, lsl #1
40010124:	e59f10a8 	ldr	r1, [pc, #168]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010128:	e5911000 	ldr	r1, [r1]
4001012c:	e0810200 	add	r0, r1, r0, lsl #4
40010130:	e5c04001 	strb	r4, [r0, #1]
40010134:	e08b008b 	add	r0, fp, fp, lsl #1
40010138:	e59f1094 	ldr	r1, [pc, #148]	; 400101d4 <_tx_trace_object_register+0x1a4>
4001013c:	e5911000 	ldr	r1, [r1]
40010140:	e0810200 	add	r0, r1, r0, lsl #4
40010144:	e5805004 	str	r5, [r0, #4]
40010148:	e08b008b 	add	r0, fp, fp, lsl #1
4001014c:	e59f1080 	ldr	r1, [pc, #128]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010150:	e5911000 	ldr	r1, [r1]
40010154:	e0810200 	add	r0, r1, r0, lsl #4
40010158:	e5807008 	str	r7, [r0, #8]
4001015c:	e08b008b 	add	r0, fp, fp, lsl #1
40010160:	e59f106c 	ldr	r1, [pc, #108]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010164:	e5911000 	ldr	r1, [r1]
40010168:	e0810200 	add	r0, r1, r0, lsl #4
4001016c:	e580800c 	str	r8, [r0, #12]
40010170:	e3a09000 	mov	r9, #0
40010174:	ea00000b 	b	400101a8 <_tx_trace_object_register+0x178>
40010178:	e7d60009 	ldrb	r0, [r6, r9]
4001017c:	e08b108b 	add	r1, fp, fp, lsl #1
40010180:	e59f204c 	ldr	r2, [pc, #76]	; 400101d4 <_tx_trace_object_register+0x1a4>
40010184:	e5922000 	ldr	r2, [r2]
40010188:	e0821201 	add	r1, r2, r1, lsl #4
4001018c:	e2811010 	add	r1, r1, #16
40010190:	e7c10009 	strb	r0, [r1, r9]
40010194:	e7d60009 	ldrb	r0, [r6, r9]
40010198:	e3500000 	cmp	r0, #0
4001019c:	1a000000 	bne	400101a4 <_tx_trace_object_register+0x174>
400101a0:	ea000002 	b	400101b0 <_tx_trace_object_register+0x180>
400101a4:	e2899001 	add	r9, r9, #1
400101a8:	e359001f 	cmp	r9, #31
400101ac:	3afffff1 	bcc	40010178 <_tx_trace_object_register+0x148>
400101b0:	e1a00000 	nop			; (mov r0, r0)
400101b4:	e3a00000 	mov	r0, #0
400101b8:	e08b108b 	add	r1, fp, fp, lsl #1
400101bc:	e59f2010 	ldr	r2, [pc, #16]	; 400101d4 <_tx_trace_object_register+0x1a4>
400101c0:	e5922000 	ldr	r2, [r2]
400101c4:	e0821201 	add	r1, r2, r1, lsl #4
400101c8:	e2811010 	add	r1, r1, #16
400101cc:	e7c10009 	strb	r0, [r1, r9]
400101d0:	eaffffa0 	b	40010058 <_tx_trace_object_register+0x28>
400101d4:	40030eac 	.word	0x40030eac
400101d8:	40030eb0 	.word	0x40030eb0

400101dc <_tx_trace_object_unregister>:
400101dc:	e92d4070 	push	{r4, r5, r6, lr}
400101e0:	e1a04000 	mov	r4, r0
400101e4:	e59f007c 	ldr	r0, [pc, #124]	; 40010268 <_tx_trace_object_unregister+0x8c>
400101e8:	e5900000 	ldr	r0, [r0]
400101ec:	e3500000 	cmp	r0, #0
400101f0:	1a000000 	bne	400101f8 <_tx_trace_object_unregister+0x1c>
400101f4:	e8bd8070 	pop	{r4, r5, r6, pc}
400101f8:	e59f106c 	ldr	r1, [pc, #108]	; 4001026c <_tx_trace_object_unregister+0x90>
400101fc:	e5911000 	ldr	r1, [r1]
40010200:	e59f2060 	ldr	r2, [pc, #96]	; 40010268 <_tx_trace_object_unregister+0x8c>
40010204:	e5922000 	ldr	r2, [r2]
40010208:	e0410002 	sub	r0, r1, r2
4001020c:	e3a01030 	mov	r1, #48	; 0x30
40010210:	eb000256 	bl	40010b70 <__aeabi_idivmod>
40010214:	e1a05000 	mov	r5, r0
40010218:	e3a06000 	mov	r6, #0
4001021c:	ea00000d 	b	40010258 <_tx_trace_object_unregister+0x7c>
40010220:	e0860086 	add	r0, r6, r6, lsl #1
40010224:	e59f103c 	ldr	r1, [pc, #60]	; 40010268 <_tx_trace_object_unregister+0x8c>
40010228:	e5911000 	ldr	r1, [r1]
4001022c:	e0810200 	add	r0, r1, r0, lsl #4
40010230:	e5900004 	ldr	r0, [r0, #4]
40010234:	e1500004 	cmp	r0, r4
40010238:	1a000005 	bne	40010254 <_tx_trace_object_unregister+0x78>
4001023c:	e3a00001 	mov	r0, #1
40010240:	e0861086 	add	r1, r6, r6, lsl #1
40010244:	e59f201c 	ldr	r2, [pc, #28]	; 40010268 <_tx_trace_object_unregister+0x8c>
40010248:	e5922000 	ldr	r2, [r2]
4001024c:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010250:	ea000002 	b	40010260 <_tx_trace_object_unregister+0x84>
40010254:	e2866001 	add	r6, r6, #1
40010258:	e1560005 	cmp	r6, r5
4001025c:	3affffef 	bcc	40010220 <_tx_trace_object_unregister+0x44>
40010260:	e1a00000 	nop			; (mov r0, r0)
40010264:	eaffffe2 	b	400101f4 <_tx_trace_object_unregister+0x18>
40010268:	40030eac 	.word	0x40030eac
4001026c:	40030eb0 	.word	0x40030eb0

40010270 <_tx_thread_stack_build>:
40010270:	e5902010 	ldr	r2, [r0, #16]
40010274:	e3c22007 	bic	r2, r2, #7
40010278:	e242204c 	sub	r2, r2, #76	; 0x4c
4001027c:	e3a03001 	mov	r3, #1
40010280:	e5823000 	str	r3, [r2]
40010284:	e3a03000 	mov	r3, #0
40010288:	e5823008 	str	r3, [r2, #8]
4001028c:	e582300c 	str	r3, [r2, #12]
40010290:	e5823010 	str	r3, [r2, #16]
40010294:	e5823014 	str	r3, [r2, #20]
40010298:	e5823018 	str	r3, [r2, #24]
4001029c:	e582301c 	str	r3, [r2, #28]
400102a0:	e5823020 	str	r3, [r2, #32]
400102a4:	e5823024 	str	r3, [r2, #36]	; 0x24
400102a8:	e5823028 	str	r3, [r2, #40]	; 0x28
400102ac:	e582302c 	str	r3, [r2, #44]	; 0x2c
400102b0:	e590300c 	ldr	r3, [r0, #12]
400102b4:	e5823030 	str	r3, [r2, #48]	; 0x30
400102b8:	e3a03000 	mov	r3, #0
400102bc:	e5823034 	str	r3, [r2, #52]	; 0x34
400102c0:	e5823038 	str	r3, [r2, #56]	; 0x38
400102c4:	e582303c 	str	r3, [r2, #60]	; 0x3c
400102c8:	e5821040 	str	r1, [r2, #64]	; 0x40
400102cc:	e5823044 	str	r3, [r2, #68]	; 0x44
400102d0:	e10f1000 	mrs	r1, CPSR
400102d4:	e3c1109f 	bic	r1, r1, #159	; 0x9f
400102d8:	e3813013 	orr	r3, r1, #19
400102dc:	e5823004 	str	r3, [r2, #4]
400102e0:	e5802008 	str	r2, [r0, #8]
400102e4:	e12fff1e 	bx	lr

400102e8 <_tx_event_flags_cleanup>:
400102e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400102ec:	e1a04000 	mov	r4, r0
400102f0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400102f4:	e10f5000 	mrs	r5, CPSR
400102f8:	e3856080 	orr	r6, r5, #128	; 0x80
400102fc:	e121f006 	msr	CPSR_c, r6
40010300:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010304:	e3500000 	cmp	r0, #0
40010308:	0a000026 	beq	400103a8 <_tx_event_flags_cleanup+0xc0>
4001030c:	e3570000 	cmp	r7, #0
40010310:	0a000024 	beq	400103a8 <_tx_event_flags_cleanup+0xc0>
40010314:	e5970000 	ldr	r0, [r7]
40010318:	e59f1090 	ldr	r1, [pc, #144]	; 400103b0 <_tx_event_flags_cleanup+0xc8>
4001031c:	e1500001 	cmp	r0, r1
40010320:	1a000020 	bne	400103a8 <_tx_event_flags_cleanup+0xc0>
40010324:	e3a00000 	mov	r0, #0
40010328:	e5840068 	str	r0, [r4, #104]	; 0x68
4001032c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010330:	e1500004 	cmp	r0, r4
40010334:	1a000002 	bne	40010344 <_tx_event_flags_cleanup+0x5c>
40010338:	e3a00000 	mov	r0, #0
4001033c:	e5870010 	str	r0, [r7, #16]
40010340:	ea000007 	b	40010364 <_tx_event_flags_cleanup+0x7c>
40010344:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010348:	e5870010 	str	r0, [r7, #16]
4001034c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010350:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010354:	e5810074 	str	r0, [r1, #116]	; 0x74
40010358:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001035c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010360:	e5810070 	str	r0, [r1, #112]	; 0x70
40010364:	e5970014 	ldr	r0, [r7, #20]
40010368:	e2400001 	sub	r0, r0, #1
4001036c:	e5870014 	str	r0, [r7, #20]
40010370:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010374:	e3500007 	cmp	r0, #7
40010378:	1a00000a 	bne	400103a8 <_tx_event_flags_cleanup+0xc0>
4001037c:	e3a00007 	mov	r0, #7
40010380:	e5840084 	str	r0, [r4, #132]	; 0x84
40010384:	e59f0028 	ldr	r0, [pc, #40]	; 400103b4 <_tx_event_flags_cleanup+0xcc>
40010388:	e5900000 	ldr	r0, [r0]
4001038c:	e2800001 	add	r0, r0, #1
40010390:	e59f101c 	ldr	r1, [pc, #28]	; 400103b4 <_tx_event_flags_cleanup+0xcc>
40010394:	e5810000 	str	r0, [r1]
40010398:	e121f005 	msr	CPSR_c, r5
4001039c:	e1a00004 	mov	r0, r4
400103a0:	ebfffbcc 	bl	4000f2d8 <_tx_thread_system_resume>
400103a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400103a8:	e121f005 	msr	CPSR_c, r5
400103ac:	eafffffc 	b	400103a4 <_tx_event_flags_cleanup+0xbc>
400103b0:	4456444e 	.word	0x4456444e
400103b4:	40030e6c 	.word	0x40030e6c

400103b8 <_tx_mutex_cleanup>:
400103b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400103bc:	e1a04000 	mov	r4, r0
400103c0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400103c4:	e10f5000 	mrs	r5, CPSR
400103c8:	e3856080 	orr	r6, r5, #128	; 0x80
400103cc:	e121f006 	msr	CPSR_c, r6
400103d0:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400103d4:	e3500000 	cmp	r0, #0
400103d8:	0a000026 	beq	40010478 <_tx_mutex_cleanup+0xc0>
400103dc:	e3570000 	cmp	r7, #0
400103e0:	0a000024 	beq	40010478 <_tx_mutex_cleanup+0xc0>
400103e4:	e5970000 	ldr	r0, [r7]
400103e8:	e59f1090 	ldr	r1, [pc, #144]	; 40010480 <_tx_mutex_cleanup+0xc8>
400103ec:	e1500001 	cmp	r0, r1
400103f0:	1a000020 	bne	40010478 <_tx_mutex_cleanup+0xc0>
400103f4:	e3a00000 	mov	r0, #0
400103f8:	e5840068 	str	r0, [r4, #104]	; 0x68
400103fc:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010400:	e1500004 	cmp	r0, r4
40010404:	1a000002 	bne	40010414 <_tx_mutex_cleanup+0x5c>
40010408:	e3a00000 	mov	r0, #0
4001040c:	e587001c 	str	r0, [r7, #28]
40010410:	ea000007 	b	40010434 <_tx_mutex_cleanup+0x7c>
40010414:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010418:	e587001c 	str	r0, [r7, #28]
4001041c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010420:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010424:	e5810074 	str	r0, [r1, #116]	; 0x74
40010428:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001042c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010430:	e5810070 	str	r0, [r1, #112]	; 0x70
40010434:	e5970020 	ldr	r0, [r7, #32]
40010438:	e2400001 	sub	r0, r0, #1
4001043c:	e5870020 	str	r0, [r7, #32]
40010440:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010444:	e350000d 	cmp	r0, #13
40010448:	1a00000a 	bne	40010478 <_tx_mutex_cleanup+0xc0>
4001044c:	e3a0001d 	mov	r0, #29
40010450:	e5840084 	str	r0, [r4, #132]	; 0x84
40010454:	e59f0028 	ldr	r0, [pc, #40]	; 40010484 <_tx_mutex_cleanup+0xcc>
40010458:	e5900000 	ldr	r0, [r0]
4001045c:	e2800001 	add	r0, r0, #1
40010460:	e59f101c 	ldr	r1, [pc, #28]	; 40010484 <_tx_mutex_cleanup+0xcc>
40010464:	e5810000 	str	r0, [r1]
40010468:	e121f005 	msr	CPSR_c, r5
4001046c:	e1a00004 	mov	r0, r4
40010470:	ebfffb98 	bl	4000f2d8 <_tx_thread_system_resume>
40010474:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010478:	e121f005 	msr	CPSR_c, r5
4001047c:	eafffffc 	b	40010474 <_tx_mutex_cleanup+0xbc>
40010480:	4d555445 	.word	0x4d555445
40010484:	40030e6c 	.word	0x40030e6c

40010488 <_tx_mutex_prioritize>:
40010488:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4001048c:	e1a04000 	mov	r4, r0
40010490:	e10f5000 	mrs	r5, CPSR
40010494:	e3856080 	orr	r6, r5, #128	; 0x80
40010498:	e121f006 	msr	CPSR_c, r6
4001049c:	e59f1234 	ldr	r1, [pc, #564]	; 400106d8 <_tx_mutex_prioritize+0x250>
400104a0:	e5910000 	ldr	r0, [r1]
400104a4:	e3500000 	cmp	r0, #0
400104a8:	0a000032 	beq	40010578 <_tx_mutex_prioritize+0xf0>
400104ac:	e59f1228 	ldr	r1, [pc, #552]	; 400106dc <_tx_mutex_prioritize+0x254>
400104b0:	e5911000 	ldr	r1, [r1]
400104b4:	e2811001 	add	r1, r1, #1
400104b8:	e59f221c 	ldr	r2, [pc, #540]	; 400106dc <_tx_mutex_prioritize+0x254>
400104bc:	e5821000 	str	r1, [r2]
400104c0:	e580100c 	str	r1, [r0, #12]
400104c4:	e59f1214 	ldr	r1, [pc, #532]	; 400106e0 <_tx_mutex_prioritize+0x258>
400104c8:	e5911000 	ldr	r1, [r1]
400104cc:	e3510000 	cmp	r1, #0
400104d0:	1a000006 	bne	400104f0 <_tx_mutex_prioritize+0x68>
400104d4:	e59f1208 	ldr	r1, [pc, #520]	; 400106e4 <_tx_mutex_prioritize+0x25c>
400104d8:	e5911000 	ldr	r1, [r1]
400104dc:	e5801000 	str	r1, [r0]
400104e0:	e5901000 	ldr	r1, [r0]
400104e4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400104e8:	e5801004 	str	r1, [r0, #4]
400104ec:	ea00000d 	b	40010528 <_tx_mutex_prioritize+0xa0>
400104f0:	e59f11e8 	ldr	r1, [pc, #488]	; 400106e0 <_tx_mutex_prioritize+0x258>
400104f4:	e5911000 	ldr	r1, [r1]
400104f8:	e59f21e8 	ldr	r2, [pc, #488]	; 400106e8 <_tx_mutex_prioritize+0x260>
400104fc:	e1510002 	cmp	r1, r2
40010500:	2a000004 	bcs	40010518 <_tx_mutex_prioritize+0x90>
40010504:	e3e01000 	mvn	r1, #0
40010508:	e5801000 	str	r1, [r0]
4001050c:	e3a01000 	mov	r1, #0
40010510:	e5801004 	str	r1, [r0, #4]
40010514:	ea000003 	b	40010528 <_tx_mutex_prioritize+0xa0>
40010518:	e59f11c8 	ldr	r1, [pc, #456]	; 400106e8 <_tx_mutex_prioritize+0x260>
4001051c:	e5801000 	str	r1, [r0]
40010520:	e3a01000 	mov	r1, #0
40010524:	e5801004 	str	r1, [r0, #4]
40010528:	e3a01038 	mov	r1, #56	; 0x38
4001052c:	e5801008 	str	r1, [r0, #8]
40010530:	e5804010 	str	r4, [r0, #16]
40010534:	e5941020 	ldr	r1, [r4, #32]
40010538:	e5801014 	str	r1, [r0, #20]
4001053c:	e580d018 	str	sp, [r0, #24]
40010540:	e3a01000 	mov	r1, #0
40010544:	e580101c 	str	r1, [r0, #28]
40010548:	e2800020 	add	r0, r0, #32
4001054c:	e59f1198 	ldr	r1, [pc, #408]	; 400106ec <_tx_mutex_prioritize+0x264>
40010550:	e5911000 	ldr	r1, [r1]
40010554:	e1500001 	cmp	r0, r1
40010558:	3a000001 	bcc	40010564 <_tx_mutex_prioritize+0xdc>
4001055c:	e59f118c 	ldr	r1, [pc, #396]	; 400106f0 <_tx_mutex_prioritize+0x268>
40010560:	e5910000 	ldr	r0, [r1]
40010564:	e59f116c 	ldr	r1, [pc, #364]	; 400106d8 <_tx_mutex_prioritize+0x250>
40010568:	e5810000 	str	r0, [r1]
4001056c:	e59f1180 	ldr	r1, [pc, #384]	; 400106f4 <_tx_mutex_prioritize+0x26c>
40010570:	e5911000 	ldr	r1, [r1]
40010574:	e5810020 	str	r0, [r1, #32]
40010578:	e5940020 	ldr	r0, [r4, #32]
4001057c:	e3500002 	cmp	r0, #2
40010580:	2a000002 	bcs	40010590 <_tx_mutex_prioritize+0x108>
40010584:	e121f005 	msr	CPSR_c, r5
40010588:	e3a00000 	mov	r0, #0
4001058c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40010590:	e5940020 	ldr	r0, [r4, #32]
40010594:	e3500002 	cmp	r0, #2
40010598:	1a00000c 	bne	400105d0 <_tx_mutex_prioritize+0x148>
4001059c:	e594001c 	ldr	r0, [r4, #28]
400105a0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400105a4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400105a8:	e594101c 	ldr	r1, [r4, #28]
400105ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400105b0:	e1500001 	cmp	r0, r1
400105b4:	2a000002 	bcs	400105c4 <_tx_mutex_prioritize+0x13c>
400105b8:	e594001c 	ldr	r0, [r4, #28]
400105bc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400105c0:	e584001c 	str	r0, [r4, #28]
400105c4:	e121f005 	msr	CPSR_c, r5
400105c8:	e3a00000 	mov	r0, #0
400105cc:	eaffffee 	b	4001058c <_tx_mutex_prioritize+0x104>
400105d0:	e594901c 	ldr	r9, [r4, #28]
400105d4:	e5940020 	ldr	r0, [r4, #32]
400105d8:	e58d0000 	str	r0, [sp]
400105dc:	e594801c 	ldr	r8, [r4, #28]
400105e0:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400105e4:	e59f010c 	ldr	r0, [pc, #268]	; 400106f8 <_tx_mutex_prioritize+0x270>
400105e8:	e5900000 	ldr	r0, [r0]
400105ec:	e2800001 	add	r0, r0, #1
400105f0:	e59f1100 	ldr	r1, [pc, #256]	; 400106f8 <_tx_mutex_prioritize+0x270>
400105f4:	e5810000 	str	r0, [r1]
400105f8:	e1a00000 	nop			; (mov r0, r0)
400105fc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010600:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010604:	e1500001 	cmp	r0, r1
40010608:	2a000000 	bcs	40010610 <_tx_mutex_prioritize+0x188>
4001060c:	e1a08007 	mov	r8, r7
40010610:	e121f005 	msr	CPSR_c, r5
40010614:	e10f5000 	mrs	r5, CPSR
40010618:	e3856080 	orr	r6, r5, #128	; 0x80
4001061c:	e121f006 	msr	CPSR_c, r6
40010620:	e594001c 	ldr	r0, [r4, #28]
40010624:	e1500009 	cmp	r0, r9
40010628:	1a000005 	bne	40010644 <_tx_mutex_prioritize+0x1bc>
4001062c:	e5940020 	ldr	r0, [r4, #32]
40010630:	e59d1000 	ldr	r1, [sp]
40010634:	e1500001 	cmp	r0, r1
40010638:	1a000001 	bne	40010644 <_tx_mutex_prioritize+0x1bc>
4001063c:	e5977070 	ldr	r7, [r7, #112]	; 0x70
40010640:	ea000004 	b	40010658 <_tx_mutex_prioritize+0x1d0>
40010644:	e594901c 	ldr	r9, [r4, #28]
40010648:	e5940020 	ldr	r0, [r4, #32]
4001064c:	e58d0000 	str	r0, [sp]
40010650:	e594801c 	ldr	r8, [r4, #28]
40010654:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010658:	e594001c 	ldr	r0, [r4, #28]
4001065c:	e1500007 	cmp	r0, r7
40010660:	1affffe5 	bne	400105fc <_tx_mutex_prioritize+0x174>
40010664:	e59f008c 	ldr	r0, [pc, #140]	; 400106f8 <_tx_mutex_prioritize+0x270>
40010668:	e5900000 	ldr	r0, [r0]
4001066c:	e2400001 	sub	r0, r0, #1
40010670:	e59f1080 	ldr	r1, [pc, #128]	; 400106f8 <_tx_mutex_prioritize+0x270>
40010674:	e5810000 	str	r0, [r1]
40010678:	e594001c 	ldr	r0, [r4, #28]
4001067c:	e1500008 	cmp	r0, r8
40010680:	0a000010 	beq	400106c8 <_tx_mutex_prioritize+0x240>
40010684:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010688:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4001068c:	e5810074 	str	r0, [r1, #116]	; 0x74
40010690:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010694:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010698:	e5810070 	str	r0, [r1, #112]	; 0x70
4001069c:	e594001c 	ldr	r0, [r4, #28]
400106a0:	e5880070 	str	r0, [r8, #112]	; 0x70
400106a4:	e594001c 	ldr	r0, [r4, #28]
400106a8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400106ac:	e5880074 	str	r0, [r8, #116]	; 0x74
400106b0:	e594001c 	ldr	r0, [r4, #28]
400106b4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400106b8:	e5808070 	str	r8, [r0, #112]	; 0x70
400106bc:	e594001c 	ldr	r0, [r4, #28]
400106c0:	e5808074 	str	r8, [r0, #116]	; 0x74
400106c4:	e584801c 	str	r8, [r4, #28]
400106c8:	e121f005 	msr	CPSR_c, r5
400106cc:	ebfffad5 	bl	4000f228 <_tx_thread_system_preempt_check>
400106d0:	e3a00000 	mov	r0, #0
400106d4:	eaffffac 	b	4001058c <_tx_mutex_prioritize+0x104>
400106d8:	40030ebc 	.word	0x40030ebc
400106dc:	40030ec0 	.word	0x40030ec0
400106e0:	40030e48 	.word	0x40030e48
400106e4:	40030e50 	.word	0x40030e50
400106e8:	f0f0f0f0 	.word	0xf0f0f0f0
400106ec:	40030eb8 	.word	0x40030eb8
400106f0:	40030eb4 	.word	0x40030eb4
400106f4:	40030ea8 	.word	0x40030ea8
400106f8:	40030e6c 	.word	0x40030e6c

400106fc <_tx_queue_cleanup>:
400106fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010700:	e1a04000 	mov	r4, r0
40010704:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010708:	e10f5000 	mrs	r5, CPSR
4001070c:	e3856080 	orr	r6, r5, #128	; 0x80
40010710:	e121f006 	msr	CPSR_c, r6
40010714:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010718:	e3500000 	cmp	r0, #0
4001071c:	0a00002c 	beq	400107d4 <_tx_queue_cleanup+0xd8>
40010720:	e3570000 	cmp	r7, #0
40010724:	0a00002a 	beq	400107d4 <_tx_queue_cleanup+0xd8>
40010728:	e5970000 	ldr	r0, [r7]
4001072c:	e59f10a8 	ldr	r1, [pc, #168]	; 400107dc <_tx_queue_cleanup+0xe0>
40010730:	e1500001 	cmp	r0, r1
40010734:	1a000026 	bne	400107d4 <_tx_queue_cleanup+0xd8>
40010738:	e3a00000 	mov	r0, #0
4001073c:	e5840068 	str	r0, [r4, #104]	; 0x68
40010740:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010744:	e1500004 	cmp	r0, r4
40010748:	1a000002 	bne	40010758 <_tx_queue_cleanup+0x5c>
4001074c:	e3a00000 	mov	r0, #0
40010750:	e5870028 	str	r0, [r7, #40]	; 0x28
40010754:	ea000007 	b	40010778 <_tx_queue_cleanup+0x7c>
40010758:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001075c:	e5870028 	str	r0, [r7, #40]	; 0x28
40010760:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010764:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010768:	e5810074 	str	r0, [r1, #116]	; 0x74
4001076c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010770:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010774:	e5810070 	str	r0, [r1, #112]	; 0x70
40010778:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4001077c:	e2400001 	sub	r0, r0, #1
40010780:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010784:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010788:	e3500005 	cmp	r0, #5
4001078c:	1a000010 	bne	400107d4 <_tx_queue_cleanup+0xd8>
40010790:	e5970010 	ldr	r0, [r7, #16]
40010794:	e3500000 	cmp	r0, #0
40010798:	0a000002 	beq	400107a8 <_tx_queue_cleanup+0xac>
4001079c:	e3a0000b 	mov	r0, #11
400107a0:	e5840084 	str	r0, [r4, #132]	; 0x84
400107a4:	ea000001 	b	400107b0 <_tx_queue_cleanup+0xb4>
400107a8:	e3a0000a 	mov	r0, #10
400107ac:	e5840084 	str	r0, [r4, #132]	; 0x84
400107b0:	e59f0028 	ldr	r0, [pc, #40]	; 400107e0 <_tx_queue_cleanup+0xe4>
400107b4:	e5900000 	ldr	r0, [r0]
400107b8:	e2800001 	add	r0, r0, #1
400107bc:	e59f101c 	ldr	r1, [pc, #28]	; 400107e0 <_tx_queue_cleanup+0xe4>
400107c0:	e5810000 	str	r0, [r1]
400107c4:	e121f005 	msr	CPSR_c, r5
400107c8:	e1a00004 	mov	r0, r4
400107cc:	ebfffac1 	bl	4000f2d8 <_tx_thread_system_resume>
400107d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400107d4:	e121f005 	msr	CPSR_c, r5
400107d8:	eafffffc 	b	400107d0 <_tx_queue_cleanup+0xd4>
400107dc:	51554555 	.word	0x51554555
400107e0:	40030e6c 	.word	0x40030e6c

400107e4 <strcpy>:
400107e4:	e0202001 	eor	r2, r0, r1
400107e8:	e1a0c000 	mov	ip, r0
400107ec:	e3120003 	tst	r2, #3
400107f0:	1a000032 	bne	400108c0 <strcpy+0xdc>
400107f4:	e3110003 	tst	r1, #3
400107f8:	1a000021 	bne	40010884 <strcpy+0xa0>
400107fc:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
40010800:	e3a05001 	mov	r5, #1
40010804:	e1855405 	orr	r5, r5, r5, lsl #8
40010808:	e1855805 	orr	r5, r5, r5, lsl #16
4001080c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
40010810:	e3110004 	tst	r1, #4
40010814:	e4913004 	ldr	r3, [r1], #4
40010818:	0a000005 	beq	40010834 <strcpy+0x50>
4001081c:	e0432005 	sub	r2, r3, r5
40010820:	e1d22003 	bics	r2, r2, r3
40010824:	e1120385 	tst	r2, r5, lsl #7
40010828:	048c3004 	streq	r3, [ip], #4
4001082c:	04913004 	ldreq	r3, [r1], #4
40010830:	1a00000c 	bne	40010868 <strcpy+0x84>
40010834:	e4914004 	ldr	r4, [r1], #4
40010838:	e0432005 	sub	r2, r3, r5
4001083c:	e1d22003 	bics	r2, r2, r3
40010840:	e1120385 	tst	r2, r5, lsl #7
40010844:	e0442005 	sub	r2, r4, r5
40010848:	1a000006 	bne	40010868 <strcpy+0x84>
4001084c:	e48c3004 	str	r3, [ip], #4
40010850:	e1d22004 	bics	r2, r2, r4
40010854:	e1120385 	tst	r2, r5, lsl #7
40010858:	04913004 	ldreq	r3, [r1], #4
4001085c:	048c4004 	streq	r4, [ip], #4
40010860:	0afffff3 	beq	40010834 <strcpy+0x50>
40010864:	e1a03004 	mov	r3, r4
40010868:	e4cc3001 	strb	r3, [ip], #1
4001086c:	e31300ff 	tst	r3, #255	; 0xff
40010870:	e1a03463 	ror	r3, r3, #8
40010874:	1afffffb 	bne	40010868 <strcpy+0x84>
40010878:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
4001087c:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
40010880:	e12fff1e 	bx	lr
40010884:	e3110001 	tst	r1, #1
40010888:	0a000003 	beq	4001089c <strcpy+0xb8>
4001088c:	e4d12001 	ldrb	r2, [r1], #1
40010890:	e4cc2001 	strb	r2, [ip], #1
40010894:	e3520000 	cmp	r2, #0
40010898:	012fff1e 	bxeq	lr
4001089c:	e3110002 	tst	r1, #2
400108a0:	0affffd5 	beq	400107fc <strcpy+0x18>
400108a4:	e0d120b2 	ldrh	r2, [r1], #2
400108a8:	e31200ff 	tst	r2, #255	; 0xff
400108ac:	10cc20b2 	strhne	r2, [ip], #2
400108b0:	05cc2000 	strbeq	r2, [ip]
400108b4:	13120cff 	tstne	r2, #65280	; 0xff00
400108b8:	1affffcf 	bne	400107fc <strcpy+0x18>
400108bc:	e12fff1e 	bx	lr
400108c0:	e4d12001 	ldrb	r2, [r1], #1
400108c4:	e4cc2001 	strb	r2, [ip], #1
400108c8:	e3520000 	cmp	r2, #0
400108cc:	1afffffb 	bne	400108c0 <strcpy+0xdc>
400108d0:	e12fff1e 	bx	lr

400108d4 <strlen>:
400108d4:	e3c01003 	bic	r1, r0, #3
400108d8:	e2100003 	ands	r0, r0, #3
400108dc:	e2600000 	rsb	r0, r0, #0
400108e0:	e4913004 	ldr	r3, [r1], #4
400108e4:	e280c004 	add	ip, r0, #4
400108e8:	e1a0c18c 	lsl	ip, ip, #3
400108ec:	e3e02000 	mvn	r2, #0
400108f0:	11833c32 	orrne	r3, r3, r2, lsr ip
400108f4:	e3a0c001 	mov	ip, #1
400108f8:	e18cc40c 	orr	ip, ip, ip, lsl #8
400108fc:	e18cc80c 	orr	ip, ip, ip, lsl #16
40010900:	e043200c 	sub	r2, r3, ip
40010904:	e1c22003 	bic	r2, r2, r3
40010908:	e012238c 	ands	r2, r2, ip, lsl #7
4001090c:	04913004 	ldreq	r3, [r1], #4
40010910:	02800004 	addeq	r0, r0, #4
40010914:	0afffff9 	beq	40010900 <strlen+0x2c>
40010918:	e31300ff 	tst	r3, #255	; 0xff
4001091c:	12800001 	addne	r0, r0, #1
40010920:	13130cff 	tstne	r3, #65280	; 0xff00
40010924:	12800001 	addne	r0, r0, #1
40010928:	131308ff 	tstne	r3, #16711680	; 0xff0000
4001092c:	12800001 	addne	r0, r0, #1
40010930:	e12fff1e 	bx	lr

40010934 <__aeabi_uidiv>:
40010934:	e2512001 	subs	r2, r1, #1
40010938:	012fff1e 	bxeq	lr
4001093c:	3a000036 	bcc	40010a1c <__aeabi_uidiv+0xe8>
40010940:	e1500001 	cmp	r0, r1
40010944:	9a000022 	bls	400109d4 <__aeabi_uidiv+0xa0>
40010948:	e1110002 	tst	r1, r2
4001094c:	0a000023 	beq	400109e0 <__aeabi_uidiv+0xac>
40010950:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010954:	01a01181 	lsleq	r1, r1, #3
40010958:	03a03008 	moveq	r3, #8
4001095c:	13a03001 	movne	r3, #1
40010960:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010964:	31510000 	cmpcc	r1, r0
40010968:	31a01201 	lslcc	r1, r1, #4
4001096c:	31a03203 	lslcc	r3, r3, #4
40010970:	3afffffa 	bcc	40010960 <__aeabi_uidiv+0x2c>
40010974:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010978:	31510000 	cmpcc	r1, r0
4001097c:	31a01081 	lslcc	r1, r1, #1
40010980:	31a03083 	lslcc	r3, r3, #1
40010984:	3afffffa 	bcc	40010974 <__aeabi_uidiv+0x40>
40010988:	e3a02000 	mov	r2, #0
4001098c:	e1500001 	cmp	r0, r1
40010990:	20400001 	subcs	r0, r0, r1
40010994:	21822003 	orrcs	r2, r2, r3
40010998:	e15000a1 	cmp	r0, r1, lsr #1
4001099c:	204000a1 	subcs	r0, r0, r1, lsr #1
400109a0:	218220a3 	orrcs	r2, r2, r3, lsr #1
400109a4:	e1500121 	cmp	r0, r1, lsr #2
400109a8:	20400121 	subcs	r0, r0, r1, lsr #2
400109ac:	21822123 	orrcs	r2, r2, r3, lsr #2
400109b0:	e15001a1 	cmp	r0, r1, lsr #3
400109b4:	204001a1 	subcs	r0, r0, r1, lsr #3
400109b8:	218221a3 	orrcs	r2, r2, r3, lsr #3
400109bc:	e3500000 	cmp	r0, #0
400109c0:	11b03223 	lsrsne	r3, r3, #4
400109c4:	11a01221 	lsrne	r1, r1, #4
400109c8:	1affffef 	bne	4001098c <__aeabi_uidiv+0x58>
400109cc:	e1a00002 	mov	r0, r2
400109d0:	e12fff1e 	bx	lr
400109d4:	03a00001 	moveq	r0, #1
400109d8:	13a00000 	movne	r0, #0
400109dc:	e12fff1e 	bx	lr
400109e0:	e3510801 	cmp	r1, #65536	; 0x10000
400109e4:	21a01821 	lsrcs	r1, r1, #16
400109e8:	23a02010 	movcs	r2, #16
400109ec:	33a02000 	movcc	r2, #0
400109f0:	e3510c01 	cmp	r1, #256	; 0x100
400109f4:	21a01421 	lsrcs	r1, r1, #8
400109f8:	22822008 	addcs	r2, r2, #8
400109fc:	e3510010 	cmp	r1, #16
40010a00:	21a01221 	lsrcs	r1, r1, #4
40010a04:	22822004 	addcs	r2, r2, #4
40010a08:	e3510004 	cmp	r1, #4
40010a0c:	82822003 	addhi	r2, r2, #3
40010a10:	908220a1 	addls	r2, r2, r1, lsr #1
40010a14:	e1a00230 	lsr	r0, r0, r2
40010a18:	e12fff1e 	bx	lr
40010a1c:	e3500000 	cmp	r0, #0
40010a20:	13e00000 	mvnne	r0, #0
40010a24:	ea000059 	b	40010b90 <__aeabi_idiv0>

40010a28 <__aeabi_uidivmod>:
40010a28:	e3510000 	cmp	r1, #0
40010a2c:	0afffffa 	beq	40010a1c <__aeabi_uidiv+0xe8>
40010a30:	e92d4003 	push	{r0, r1, lr}
40010a34:	ebffffbe 	bl	40010934 <__aeabi_uidiv>
40010a38:	e8bd4006 	pop	{r1, r2, lr}
40010a3c:	e0030092 	mul	r3, r2, r0
40010a40:	e0411003 	sub	r1, r1, r3
40010a44:	e12fff1e 	bx	lr

40010a48 <__aeabi_idiv>:
40010a48:	e3510000 	cmp	r1, #0
40010a4c:	0a000043 	beq	40010b60 <.divsi3_skip_div0_test+0x110>

40010a50 <.divsi3_skip_div0_test>:
40010a50:	e020c001 	eor	ip, r0, r1
40010a54:	42611000 	rsbmi	r1, r1, #0
40010a58:	e2512001 	subs	r2, r1, #1
40010a5c:	0a000027 	beq	40010b00 <.divsi3_skip_div0_test+0xb0>
40010a60:	e1b03000 	movs	r3, r0
40010a64:	42603000 	rsbmi	r3, r0, #0
40010a68:	e1530001 	cmp	r3, r1
40010a6c:	9a000026 	bls	40010b0c <.divsi3_skip_div0_test+0xbc>
40010a70:	e1110002 	tst	r1, r2
40010a74:	0a000028 	beq	40010b1c <.divsi3_skip_div0_test+0xcc>
40010a78:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010a7c:	01a01181 	lsleq	r1, r1, #3
40010a80:	03a02008 	moveq	r2, #8
40010a84:	13a02001 	movne	r2, #1
40010a88:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010a8c:	31510003 	cmpcc	r1, r3
40010a90:	31a01201 	lslcc	r1, r1, #4
40010a94:	31a02202 	lslcc	r2, r2, #4
40010a98:	3afffffa 	bcc	40010a88 <.divsi3_skip_div0_test+0x38>
40010a9c:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010aa0:	31510003 	cmpcc	r1, r3
40010aa4:	31a01081 	lslcc	r1, r1, #1
40010aa8:	31a02082 	lslcc	r2, r2, #1
40010aac:	3afffffa 	bcc	40010a9c <.divsi3_skip_div0_test+0x4c>
40010ab0:	e3a00000 	mov	r0, #0
40010ab4:	e1530001 	cmp	r3, r1
40010ab8:	20433001 	subcs	r3, r3, r1
40010abc:	21800002 	orrcs	r0, r0, r2
40010ac0:	e15300a1 	cmp	r3, r1, lsr #1
40010ac4:	204330a1 	subcs	r3, r3, r1, lsr #1
40010ac8:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010acc:	e1530121 	cmp	r3, r1, lsr #2
40010ad0:	20433121 	subcs	r3, r3, r1, lsr #2
40010ad4:	21800122 	orrcs	r0, r0, r2, lsr #2
40010ad8:	e15301a1 	cmp	r3, r1, lsr #3
40010adc:	204331a1 	subcs	r3, r3, r1, lsr #3
40010ae0:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010ae4:	e3530000 	cmp	r3, #0
40010ae8:	11b02222 	lsrsne	r2, r2, #4
40010aec:	11a01221 	lsrne	r1, r1, #4
40010af0:	1affffef 	bne	40010ab4 <.divsi3_skip_div0_test+0x64>
40010af4:	e35c0000 	cmp	ip, #0
40010af8:	42600000 	rsbmi	r0, r0, #0
40010afc:	e12fff1e 	bx	lr
40010b00:	e13c0000 	teq	ip, r0
40010b04:	42600000 	rsbmi	r0, r0, #0
40010b08:	e12fff1e 	bx	lr
40010b0c:	33a00000 	movcc	r0, #0
40010b10:	01a00fcc 	asreq	r0, ip, #31
40010b14:	03800001 	orreq	r0, r0, #1
40010b18:	e12fff1e 	bx	lr
40010b1c:	e3510801 	cmp	r1, #65536	; 0x10000
40010b20:	21a01821 	lsrcs	r1, r1, #16
40010b24:	23a02010 	movcs	r2, #16
40010b28:	33a02000 	movcc	r2, #0
40010b2c:	e3510c01 	cmp	r1, #256	; 0x100
40010b30:	21a01421 	lsrcs	r1, r1, #8
40010b34:	22822008 	addcs	r2, r2, #8
40010b38:	e3510010 	cmp	r1, #16
40010b3c:	21a01221 	lsrcs	r1, r1, #4
40010b40:	22822004 	addcs	r2, r2, #4
40010b44:	e3510004 	cmp	r1, #4
40010b48:	82822003 	addhi	r2, r2, #3
40010b4c:	908220a1 	addls	r2, r2, r1, lsr #1
40010b50:	e35c0000 	cmp	ip, #0
40010b54:	e1a00233 	lsr	r0, r3, r2
40010b58:	42600000 	rsbmi	r0, r0, #0
40010b5c:	e12fff1e 	bx	lr
40010b60:	e3500000 	cmp	r0, #0
40010b64:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010b68:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010b6c:	ea000007 	b	40010b90 <__aeabi_idiv0>

40010b70 <__aeabi_idivmod>:
40010b70:	e3510000 	cmp	r1, #0
40010b74:	0afffff9 	beq	40010b60 <.divsi3_skip_div0_test+0x110>
40010b78:	e92d4003 	push	{r0, r1, lr}
40010b7c:	ebffffb3 	bl	40010a50 <.divsi3_skip_div0_test>
40010b80:	e8bd4006 	pop	{r1, r2, lr}
40010b84:	e0030092 	mul	r3, r2, r0
40010b88:	e0411003 	sub	r1, r1, r3
40010b8c:	e12fff1e 	bx	lr

40010b90 <__aeabi_idiv0>:
40010b90:	e12fff1e 	bx	lr

40010b94 <DelayArray>:
40010b94:	010402bc 01040104 010402bc 01040104     ................
40010ba4:	01040104 01040104 01040104 01040104     ................
40010bb4:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010bc4:	02bc0104 010402bc 010402bc 010401f4     ................
40010bd4:	01040104 00000104 00000000 00000000     ................
	...
40010c14:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010c24:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010c34:	75657551 73252065 61747320 25206574     Queue %s state %
40010c44:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010c54:	68632065 206b6365 75657571 20444965     e check queueID 
40010c64:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010c74:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010c84:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010c94:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010ca4:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010cb4:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010cc4:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010cd4:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010ce4:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010cf4:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010d04:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010d14:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010d24:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010d34:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010d44:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010d54:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010d64:	00000a0d                                ....

40010d68 <CyFxUSBDeviceDscr>:
40010d68:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010d78:	00000100                                ....

40010d7c <CyFxUSBDeviceDscrSS>:
40010d7c:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010d8c:	00000100                                ....

40010d90 <CyFxUSBDeviceQualDscr>:
40010d90:	0200060a 400102ef 00000001              .......@....

40010d9c <CyFxUSBFSConfigDscr>:
40010d9c:	00090209 80000100 00000032              ........2...

40010da8 <CyFxUSBHSConfigDscr>:
40010da8:	00dd0209 80000102 000b08fa 00030e02     ................
40010db8:	00040900 010e0100 240d0000 50010001     ...........$...P
40010dc8:	6cf71000 12010104 01010224 00000002     ...l....$.......
40010dd8:	00000000 059e0300 05240c00 02580102     ..........$...X.
40010de8:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010df8:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010e08:	03240900 00010104 05070003 04000382     ..$.............
40010e18:	03250501 04090040 0e010001 0e000002     ..%.@...........
40010e28:	57010124 04008300 01010102 04241b00     $..W..........$.
40010e38:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
40010e48:	0110719b 00000608 0105241e 1c03c002     .q.......$......
40010e58:	d4e00002 d4e0000e 0fd2000e 05161500     ................
40010e68:	16150100 240a0005 c0010003 00021c03     .......$........
40010e78:	000d2406 05070000 02000283 00000001     .$..............

40010e88 <CyFxUSBBOSDscr>:
40010e88:	00160f05 02100702 00000000 0003100a     ................
40010e98:	0003000e 00000000                       ........

40010ea0 <CyFxUSBSSConfigDscr>:
40010ea0:	00e90209 80000102 000b0864 00030e02     ........d.......
40010eb0:	00040900 010e0100 240d0000 50010001     ...........$...P
40010ec0:	b8d80000 12010105 01010224 00000002     ........$.......
40010ed0:	00000000 00000300 05240c00 02580102     ..........$...X.
40010ee0:	00001103 06241c00 57ca7a03 5b1aa337     ......$..z.W7..[
40010ef0:	8e8d9649 76961f36 02010b50 00860403     I...6..vP.......
40010f00:	03240900 00010104 05070003 04000382     ..$.............
40010f10:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010f20:	00020e01 01240e00 83005701 01020400     ......$..W......
40010f30:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010f40:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010f50:	20020205 0007980a 00317040 004814d0     ... ....@p1...H.
40010f60:	2a0099c6 01000a2c 000a2c2a 0003240a     ...*,...*,...$..
40010f70:	980a2001 24060007 0000000d 02830507     . .....$........
40010f80:	06010400 00000f30 00000000              ....0.......

40010f8c <CyFxUSBStringLangIDDscr>:
40010f8c:	04090304                                ....

40010f90 <CyFxUSBManufactureDscr>:
40010f90:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40010fa0:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40010fb0:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40010fc0:	006f0069 0073006e                       i.o.n.s.

40010fc8 <CyFxUSBProductDscr>:
40010fc8:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40010fd8:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40010fe8:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40010ff8:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40011008:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40011018:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40011028:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40011038:	64612065 73657264 73692073 746f6e20     e address is not
40011048:	6c617620 0a216469 00000000 736e6573      valid!.....sens
40011058:	7720726f 65746972 30284232 64252029     or write2B(0) %d
40011068:	20642520 0a0d6425 00000000 4f525245      %d %d......ERRO
40011078:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40011088:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40011098:	74655320 6c615620 45206575 726f7272      Set Value Error
400110a8:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400110b8:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
400110c8:	0a0d6575 00000000 20656854 6b636974     ue......The tick
400110d8:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
400110e8:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
400110f8:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40011108:	20656854 20746547 746e6f63 206c6f72     The Get control 
40011118:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011128:	20656854 20746553 746e6f63 206c6f72     The Set control 
40011138:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011148:	00000a0d                                ....

4001114c <ExTime>:
4001114c:	004e009c 00140027 0005000a 00010002     ..N.'...........

4001115c <CyFxGpifConfig>:
4001115c:	0000000f 40030688 400307a8 00000005     .......@...@....
4001116c:	4003067c 0000004c 400307b8              |..@L......@

40011178 <CyFxGpifConfig_usb2>:
40011178:	00000093 400308f8 40030aa8 00000008     .......@...@....
40011188:	400308e8 0000004c 40030b3c 20433249     ...@L...<..@I2C 
40011198:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
400111a8:	20656854 6d6d6f63 20646e61 75657571     The command queu
400111b8:	73692065 61657220 25207964 64252064     e is ready %d %d
400111c8:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
400111d8:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
400111e8:	65666675 29312872 6f43203a 3d206564     uffer(1): Code =
400111f8:	2c642520 7a697320 203d2065 202c7825      %d, size = %x, 
40011208:	44616d64 20656e6f 25206425 000a0d64     dmaDone %d %d...
40011218:	45534552 6e652054 6e756f63 65726574     RESET encountere
40011228:	2e2e2e64 78257830 25783020 000a0d78     d...0x%x 0x%x...
40011238:	50535553 20444e45 6f636e65 65746e75     SUSPEND encounte
40011248:	2e646572 78302e2e 30207825 0d782578     red...0x%x 0x%x.
40011258:	0000000a 20425355 63736964 656e6e6f     ....USB disconne
40011268:	64657463 302e2e2e 20782578 78257830     cted...0x%x 0x%x
40011278:	00000a0d 20746553 465f5943 56555f58     ....Set CY_FX_UV
40011288:	49565f43 5f4f4544 544e4f43 5f4c4f52     C_VIDEO_CONTROL_
40011298:	55514552 5f545345 4e455645 61462054     REQUEST_EVENT Fa
400112a8:	64656c69 0a782520 00000000 20746553     iled %x.....Set 
400112b8:	465f5943 56555f58 49565f43 5f4f4544     CY_FX_UVC_VIDEO_
400112c8:	45525453 525f4d41 45555145 455f5453     STREAM_REQUEST_E
400112d8:	544e4556 69614620 2064656c 000a7825     VENT Failed %x..
400112e8:	65746c41 74616e72 65732065 6e697474     Alternate settin
400112f8:	2e302067 000a0d2e 61656c43 65662072     g 0.....Clear fe
40011308:	72757461 65722065 73657571 65642074     ature request de
40011318:	74636574 2e2e6465 00000a0d 63200a0d     tected........ c
40011328:	696d6d6f 666f6574 61747320 3d206574     ommiteof state =
40011338:	00642520 6e616843 206c656e 20746553      %d.Channel Set 
40011348:	70617257 66207055 656c6961 45202c64     WrapUp failed, E
40011358:	726f7272 646f6320 203d2065 0a0d6425     rror code = %d..
40011368:	00000000 6f727245 61682072 656c646e     ....Error handle
40011378:	2e2e2e72 00000a0d 6d6d6f43 45207469     r.......Commit E
40011388:	6620464f 656c6961 0a0d2164 00000000     OF failed!......
40011398:	20656854 20433249 6d6d6f63 20646e61     The I2C command 
400113a8:	30207369 20782578 78257830 25783020     is 0x%x 0x%x 0x%
400113b8:	78302078 30207825 20782578 78257830     x 0x%x 0x%x 0x%x
400113c8:	25783020 78302078 30207825 20782578      0x%x 0x%x 0x%x 
400113d8:	78257830 25783020 000a0d78 6b636162     0x%x 0x%x...back
400113e8:	67696c20 63207468 65706d6f 7461736e      light compensat
400113f8:	206e6f69 74746573 20676e69 6e207369     ion setting is n
40011408:	6320746f 6572726f 202e7463 25206425     ot correct. %d %
40011418:	000a0d64 20656854 20433249 72727563     d...The I2C curr
40011428:	20746e65 61746164 20736920 20746f6e     ent data is not 
40011438:	69617661 6c62616c 74202e65 61207972     available. try a
40011448:	6e696167 6425202e 0d642520 0000000a     gain. %d %d.....
40011458:	4d707845 43474126 6e657320 6f742074     ExpM&AGC sent to
40011468:	736f6820 25202e74 64252064 6425203b      host. %d %d; %d
40011478:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011488:	746f6720 206e6574 6d6f7266 736f6820      gotten from hos
40011498:	25202e74 64252064 6425203b 0d642520     t. %d %d; %d %d.
400114a8:	0000000a 20656854 20746567 61746164     ....The get data
400114b8:	6f726620 6f68206d 66207473 206c6961      from host fail 
400114c8:	6f727265 6f632072 25206564 0a0d2e64     error code %d...
400114d8:	00000000 20656854 75716552 20747365     ....The Request 
400114e8:	78257830 72617020 74656d61 67207265     0x%x parameter g
400114f8:	66207465 206d6f72 74736f68 25783020     et from host 0x%
40011508:	78302078 2f207825 6e657320 6f742064     x 0x%x / send to
40011518:	736f6820 78302074 30207825 0d782578      host 0x%x 0x%x.
40011528:	0000000a 6d6f6f5a 20704f20 65636572     ....Zoom Op rece
40011538:	73657669 54432820 78302029 30207825     ives (CT) 0x%x 0
40011548:	20782578 78257830 00000a0d 61666564     x%x 0x%x....defa
40011558:	20746c75 656c6573 726f7463 54432820     ult selector (CT
40011568:	78302029 30207825 0d782578 0000000a     ) 0x%x 0x%x.....
40011578:	61666564 20746c75 75716572 20747365     default request 
40011588:	29544328 25783020 78302078 0a0d7825     (CT) 0x%x 0x%x..
40011598:	00000000 20656854 75716552 20747365     ....The Request 
400115a8:	78257830 72617020 74656d61 67207265     0x%x parameter g
400115b8:	66207465 206d6f72 74736f68 54432820     et from host (CT
400115c8:	78302029 30207825 20782578 78257830     ) 0x%x 0x%x 0x%x
400115d8:	73202f20 20646e65 68206f74 2074736f      / send to host 
400115e8:	78257830 25783020 78302078 202c7825     0x%x 0x%x 0x%x, 
400115f8:	0a0d6425 00000000 20425355 65657073     %d......USB spee
40011608:	203d2064 65206425 666e6576 2067616c     d = %d evenflag 
40011618:	7830203d 62207825 7165526d 65707954     = 0x%x bmReqType
40011628:	30203d20 0d782578 6552620a 73657571      = 0x%x..bReques
40011638:	203d2074 78257830 61567720 2065756c     t = 0x%x wValue 
40011648:	7830203d 77207825 65646e49 203d2078     = 0x%x wIndex = 
40011658:	78257830 654c7720 6874676e 30203d20     0x%x wLength = 0
40011668:	20782578 6c667369 30206761 0d782578     x%x isflag 0x%x.
40011678:	0000000a 20656854 61666564 20746c75     ....The default 
40011688:	75746573 65722070 73657571 61762074     setup request va
40011698:	2065756c 78257830 25783020 000a0d78     lue 0x%x 0x%x...
400116a8:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
400116b8:	4d414552 4556455f 6620544e 656c6961     REAM_EVENT faile
400116c8:	78252064 0000000a 20746547 20435655     d %x....Get UVC 
400116d8:	6c697473 7274206c 65676769 6f632072     still trigger co
400116e8:	6f72746e 6425206c 0d642520 0000000a     ntrol %d %d.....
400116f8:	20435655 6c697473 7274206c 65676769     UVC still trigge
40011708:	6f632072 6f72746e 6166206c 25206c69     r control fail %
40011718:	64252064 00000a0d 6c696146 74206465     d %d....Failed t
40011728:	6573206f 6920646e 7265746e 74707572     o send interrupt
40011738:	61747320 2c737574 72724520 6320726f      status, Error c
40011748:	2065646f 6425203d 00000a0d 20656854     ode = %d....The 
40011758:	20746573 20666564 61746164 25783020     set def data 0x%
40011768:	30202c78 2e782578 00000a0d 20656854     x, 0x%x.....The 
40011778:	20746573 20666564 61746164 25783020     set def data 0x%
40011788:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
40011798:	2c782578 25783020 30202c78 2e782578     x%x, 0x%x, 0x%x.
400117a8:	00000a0d 54524155 696e6920 6c616974     ....UART initial
400117b8:	74617a69 206e6f69 6c696166 0a216465     ization failed!.
400117c8:	00000000 20433249 74696e69 696c6169     ....I2C initiali
400117d8:	6974617a 66206e6f 656c6961 000a2164     zation failed!..
400117e8:	20433249 666e6f63 72756769 6f697461     I2C configuratio
400117f8:	6166206e 64656c69 00000a21 20435655     n failed!...UVC 
40011808:	61657243 45206574 746e6576 69616620     Create Event fai
40011818:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011828:	6425203d 0000000a 4f495047 696e4920     = %d....GPIO Ini
40011838:	61662074 64656c69 7245202c 20726f72     t failed, Error 
40011848:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011858:	65764f20 64697272 61662065 64656c69      Override failed
40011868:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011878:	00000a64 4f495047 29303228 65764f20     d...GPIO(20) Ove
40011888:	64697272 61662065 64656c69 7245202c     rride failed, Er
40011898:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400118a8:	4f495047 29343228 65764f20 64697272     GPIO(24) Overrid
400118b8:	61662065 64656c69 7245202c 20726f72     e failed, Error 
400118c8:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
400118d8:	74655320 65722820 20746573 20293232      Set (reset 22) 
400118e8:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
400118f8:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011908:	4f495047 74655320 6f702820 20726577     GPIO Set (power 
40011918:	20293032 666e6f43 45206769 726f7272     20) Config Error
40011928:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011938:	00000a64 4f495047 74655320 6e732820     d...GPIO Set (sn
40011948:	73207061 20746f68 20293432 666e6f43     ap shot 24) Conf
40011958:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011968:	65646f43 25203d20 00000a64 20424950     Code = %d...PIB 
40011978:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
40011988:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011998:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
400119a8:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
400119b8:	53206f74 74726174 7245202c 20726f72     to Start, Error 
400119c8:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
400119d8:	20746553 70646e45 746e696f 6e6f6320     Set Endpoint con
400119e8:	20676966 6c696166 202c6465 6f727245     fig failed, Erro
400119f8:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011a08:	20414d44 65746e49 70757272 74532074     DMA Interrupt St
40011a18:	73757461 61684320 6c656e6e 65724320     atus Channel Cre
40011a28:	6f697461 6146206e 64656c69 7245202c     ation Failed, Er
40011a38:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011a48:	6c696146 74206465 6c61206f 61636f6c     Failed to alloca
40011a58:	6d206574 726f6d65 6f662079 6e692072     te memory for in
40011a68:	72726574 20747075 74617473 62207375     terrupt status b
40011a78:	65666675 000a0d72 20414d44 6e616843     uffer...DMA Chan
40011a88:	206c656e 61657243 6e6f6974 69614620     nel Creation Fai
40011a98:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011aa8:	6425203d 0000000a 20425355 6e6e6f43     = %d....USB Conn
40011ab8:	20746365 6c696166 202c6465 6f727245     ect failed, Erro
40011ac8:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011ad8:	20414d44 6e616843 206c656e 65736552     DMA Channel Rese
40011ae8:	61462074 64656c69 7245202c 20726f72     t Failed, Error 
40011af8:	65646f43 25203d20 00000a64 20414d44     Code = %d...DMA 
40011b08:	6e616843 206c656e 20746553 6e617254     Channel Set Tran
40011b18:	72656673 69614620 2c64656c 72724520     sfer Failed, Err
40011b28:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011b38:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
40011b48:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011b58:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011b68:	00000a0d 73200a0d 72657075 69706720     ...... super gpi
40011b78:	00000066 68200a0d 20686769 66697067     f..... high gpif
40011b88:	00000000 64616f4c 20676e69 46495047     ....Loading GPIF
40011b98:	6e6f4320 75676966 69746172 66206e6f      Configuration f
40011ba8:	656c6961 45202c64 726f7272 646f4320     ailed, Error Cod
40011bb8:	203d2065 0a0d6425 00000000 72617453     e = %d......Star
40011bc8:	676e6974 49504720 74732046 20657461     ting GPIF state 
40011bd8:	6863616d 20656e69 6c696166 202c6465     machine failed, 
40011be8:	6f727245 6f432072 3d206564 0d642520     Error Code = %d.
40011bf8:	0000000a 553a3033 41204356 54207070     ....30:UVC App T
40011c08:	61657268 00000064 553a3133 41204356     hread...31:UVC A
40011c18:	45207070 54203050 61657268 00000064     pp EP0 Thread...
40011c28:	493a3233 41204332 43207070 204c5254     32:I2C App CTRL 
40011c38:	65726854 00006461                       Thread..

40011c40 <glFx3PartProperties>:
40011c40:	00000000 0000009f 00000010 0000009b     ................
40011c50:	00000020 0000008f 00000030 0000008b      .......0.......
40011c60:	00000004 000000ef 00000104 000000ef     ................
40011c70:	00000184 000000af 00000154 000000e9     ........T.......
40011c80:	000001d4 000000a9 10000004 000000ee     ................
40011c90:	10000104 000000ee 10000184 000000ae     ................
40011ca0:	10000154 000000e8 100001d4 000000a8     T...............
40011cb0:	00000002 00000077 00000102 00000077     ....w.......w...
40011cc0:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011cd0:	10000002 00000076 10000102 00000076     ....v.......v...
40011ce0:	100001c2 00000034 00000258 00000199     ....4...X.......
40011cf0:	00000248 0000019d 00000458 00000299     H.......X.......
40011d00:	00000448 0000029d 00000848 0000049d     H.......H.......
40011d10:	10000448 0000029c                       H.......

40011d18 <glPmmcCsdValue>:
40011d18:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011d28 <glPmmcExtCsdValue>:
40011d28:	40040000 03020200 00000404 32321414     ...@..........22
40011d38:	00406464 00000000                       dd@.....

40011d40 <glConstGpifDefaults>:
40011d40:	00000220 00000000 00000000 00000000      ...............
40011d50:	000f0000 00000000 00000000 00000082     ................
40011d60:	00000782 00000000 00000000 00000000     ................
	...
40011db4:	00000006 00000000 0000ffff 0000010a     ................
40011dc4:	00000000 0000ffff 00000000 0000ffff     ................
40011dd4:	0000010a 00000000 0000ffff 00000000     ................
	...
40011e3c:	00010400 00010400 00010400 00010400     ................
40011e4c:	10000000 00000000 00000000 00000000     ................
	...
40011e6c:	00000001                                ....

40011e70 <glGpifConstMaxState>:
40011e70:	1f3f7fff                                ..?.

40011e74 <CyU3PSSEpTypeMap>:
40011e74:	01020003                                ....

40011e78 <glUsbMaxPacketSize>:
40011e78:	000003ff 00000040 00000040 00000400     ....@...@.......
40011e88:	00000200 00000400 00000400 00000400     ................
40011e98:	00000400                                ....

40011e9c <glUsb3CompliancePatterns>:
40011e9c:	00000600 0000044a 00000478 000005bc     ....J...x.......
40011eac:	00000c00 000005fc 000001fc 00001400     ................
40011ebc:	00001000                                ....

40011ec0 <CyU3PFirmwareEntry>:
40011ec0:	e59f1038 	ldr	r1, [pc, #56]	; 40011f00 <CyU3PFirmwareEntry+0x40>
40011ec4:	e3e00000 	mvn	r0, #0
40011ec8:	e5810000 	str	r0, [r1]
40011ecc:	e59f1030 	ldr	r1, [pc, #48]	; 40011f04 <CyU3PFirmwareEntry+0x44>
40011ed0:	e2411008 	sub	r1, r1, #8
40011ed4:	e3a02a01 	mov	r2, #4096	; 0x1000
40011ed8:	e3a000d3 	mov	r0, #211	; 0xd3
40011edc:	e121f000 	msr	CPSR_c, r0
40011ee0:	e0811002 	add	r1, r1, r2
40011ee4:	e3c11007 	bic	r1, r1, #7
40011ee8:	e1a0d001 	mov	sp, r1
40011eec:	eb000271 	bl	400128b8 <CyU3PSysSetupMMU>
40011ef0:	eb000620 	bl	40013778 <CyU3PSysCheckBootState>
40011ef4:	eb000003 	bl	40011f08 <CyU3PSetupStackPtrs>
40011ef8:	eb0000d1 	bl	40012244 <__CyU3PEntryKeep>
40011efc:	eaffc5bb 	b	400035f0 <CyU3PToolChainInit>
40011f00:	fffff014 	.word	0xfffff014
40011f04:	40002000 	.word	0x40002000

40011f08 <CyU3PSetupStackPtrs>:
40011f08:	e3a01201 	mov	r1, #268435456	; 0x10000000
40011f0c:	e2411008 	sub	r1, r1, #8
40011f10:	e3a02b02 	mov	r2, #2048	; 0x800
40011f14:	e3a030df 	mov	r3, #223	; 0xdf
40011f18:	e12ff003 	msr	CPSR_fsxc, r3
40011f1c:	e0811002 	add	r1, r1, r2
40011f20:	e3c11007 	bic	r1, r1, #7
40011f24:	e1a0d001 	mov	sp, r1
40011f28:	e3a0a000 	mov	sl, #0
40011f2c:	e3a0b000 	mov	fp, #0
40011f30:	e3a02c01 	mov	r2, #256	; 0x100
40011f34:	e3a030d7 	mov	r3, #215	; 0xd7
40011f38:	e12ff003 	msr	CPSR_fsxc, r3
40011f3c:	e0811002 	add	r1, r1, r2
40011f40:	e3c11007 	bic	r1, r1, #7
40011f44:	e1a0d001 	mov	sp, r1
40011f48:	e3a0a000 	mov	sl, #0
40011f4c:	e3a0b000 	mov	fp, #0
40011f50:	e3a02c01 	mov	r2, #256	; 0x100
40011f54:	e3a030db 	mov	r3, #219	; 0xdb
40011f58:	e12ff003 	msr	CPSR_fsxc, r3
40011f5c:	e0811002 	add	r1, r1, r2
40011f60:	e3c11007 	bic	r1, r1, #7
40011f64:	e1a0d001 	mov	sp, r1
40011f68:	e3a0a000 	mov	sl, #0
40011f6c:	e3a0b000 	mov	fp, #0
40011f70:	e3a02c02 	mov	r2, #512	; 0x200
40011f74:	e3a000d1 	mov	r0, #209	; 0xd1
40011f78:	e121f000 	msr	CPSR_c, r0
40011f7c:	e0811002 	add	r1, r1, r2
40011f80:	e3c11007 	bic	r1, r1, #7
40011f84:	e1a0d001 	mov	sp, r1
40011f88:	e3a0a000 	mov	sl, #0
40011f8c:	e3a0b000 	mov	fp, #0
40011f90:	e3a02b01 	mov	r2, #1024	; 0x400
40011f94:	e3a000d2 	mov	r0, #210	; 0xd2
40011f98:	e121f000 	msr	CPSR_c, r0
40011f9c:	e0811002 	add	r1, r1, r2
40011fa0:	e3c11007 	bic	r1, r1, #7
40011fa4:	e1a0d001 	mov	sp, r1
40011fa8:	e3a02a01 	mov	r2, #4096	; 0x1000
40011fac:	e3a000d3 	mov	r0, #211	; 0xd3
40011fb0:	e121f000 	msr	CPSR_c, r0
40011fb4:	e0811002 	add	r1, r1, r2
40011fb8:	e3c11007 	bic	r1, r1, #7
40011fbc:	e1a0d001 	mov	sp, r1
40011fc0:	e12fff1e 	bx	lr

40011fc4 <CyU3PSysCleanDCache>:
40011fc4:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40011fc8:	1afffffd 	bne	40011fc4 <CyU3PSysCleanDCache>
40011fcc:	e12fff1e 	bx	lr

40011fd0 <CyU3PSysClearDCache>:
40011fd0:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40011fd4:	1afffffd 	bne	40011fd0 <CyU3PSysClearDCache>
40011fd8:	e12fff1e 	bx	lr

40011fdc <CyU3PSysFlushIRegion>:
40011fdc:	e3510000 	cmp	r1, #0
40011fe0:	0a00000a 	beq	40012010 <CyU3PSysFlushIRegion+0x34>
40011fe4:	e0801001 	add	r1, r0, r1
40011fe8:	e3c0001f 	bic	r0, r0, #31
40011fec:	e3a0201f 	mov	r2, #31
40011ff0:	e1110002 	tst	r1, r2
40011ff4:	e0411000 	sub	r1, r1, r0
40011ff8:	e1a012a1 	lsr	r1, r1, #5
40011ffc:	12811001 	addne	r1, r1, #1
40012000:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40012004:	e2800020 	add	r0, r0, #32
40012008:	e2511001 	subs	r1, r1, #1
4001200c:	1afffffb 	bne	40012000 <CyU3PSysFlushIRegion+0x24>
40012010:	e12fff1e 	bx	lr

40012014 <CyU3PSysClearDRegion>:
40012014:	e3510000 	cmp	r1, #0
40012018:	0a00000a 	beq	40012048 <CyU3PSysClearDRegion+0x34>
4001201c:	e0801001 	add	r1, r0, r1
40012020:	e3c0001f 	bic	r0, r0, #31
40012024:	e3a0201f 	mov	r2, #31
40012028:	e1110002 	tst	r1, r2
4001202c:	e0411000 	sub	r1, r1, r0
40012030:	e1a012a1 	lsr	r1, r1, #5
40012034:	12811001 	addne	r1, r1, #1
40012038:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
4001203c:	e2800020 	add	r0, r0, #32
40012040:	e2511001 	subs	r1, r1, #1
40012044:	1afffffb 	bne	40012038 <CyU3PSysClearDRegion+0x24>
40012048:	e12fff1e 	bx	lr

4001204c <CyU3PSysCleanDRegion>:
4001204c:	e3510000 	cmp	r1, #0
40012050:	0a00000a 	beq	40012080 <CyU3PSysCleanDRegion+0x34>
40012054:	e0801001 	add	r1, r0, r1
40012058:	e3c0001f 	bic	r0, r0, #31
4001205c:	e3a0201f 	mov	r2, #31
40012060:	e1110002 	tst	r1, r2
40012064:	e0411000 	sub	r1, r1, r0
40012068:	e1a012a1 	lsr	r1, r1, #5
4001206c:	12811001 	addne	r1, r1, #1
40012070:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40012074:	e2800020 	add	r0, r0, #32
40012078:	e2511001 	subs	r1, r1, #1
4001207c:	1afffffb 	bne	40012070 <CyU3PSysCleanDRegion+0x24>
40012080:	e12fff1e 	bx	lr

40012084 <CyU3PSysFlushDRegion>:
40012084:	e3510000 	cmp	r1, #0
40012088:	0a00000a 	beq	400120b8 <CyU3PSysFlushDRegion+0x34>
4001208c:	e0801001 	add	r1, r0, r1
40012090:	e3c0001f 	bic	r0, r0, #31
40012094:	e3a0201f 	mov	r2, #31
40012098:	e1110002 	tst	r1, r2
4001209c:	e0411000 	sub	r1, r1, r0
400120a0:	e1a012a1 	lsr	r1, r1, #5
400120a4:	12811001 	addne	r1, r1, #1
400120a8:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
400120ac:	e2800020 	add	r0, r0, #32
400120b0:	e2511001 	subs	r1, r1, #1
400120b4:	1afffffb 	bne	400120a8 <CyU3PSysFlushDRegion+0x24>
400120b8:	e12fff1e 	bx	lr

400120bc <CyU3PSysCacheIRegion>:
400120bc:	e3a03000 	mov	r3, #0
400120c0:	e3510000 	cmp	r1, #0
400120c4:	0a000023 	beq	40012158 <CyU3PSysCacheIRegion+0x9c>
400120c8:	e0801001 	add	r1, r0, r1
400120cc:	e3c0001f 	bic	r0, r0, #31
400120d0:	e3a0201f 	mov	r2, #31
400120d4:	e1110002 	tst	r1, r2
400120d8:	e0411000 	sub	r1, r1, r0
400120dc:	e1a012a1 	lsr	r1, r1, #5
400120e0:	12811001 	addne	r1, r1, #1
400120e4:	e351003f 	cmp	r1, #63	; 0x3f
400120e8:	8a00001a 	bhi	40012158 <CyU3PSysCacheIRegion+0x9c>
400120ec:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
400120f0:	e20c200f 	and	r2, ip, #15
400120f4:	e3a03001 	mov	r3, #1
400120f8:	e11c0003 	tst	ip, r3
400120fc:	11a03083 	lslne	r3, r3, #1
40012100:	111c0003 	tstne	ip, r3
40012104:	11a03083 	lslne	r3, r3, #1
40012108:	111c0003 	tstne	ip, r3
4001210c:	11a03083 	lslne	r3, r3, #1
40012110:	1a000010 	bne	40012158 <CyU3PSysCacheIRegion+0x9c>
40012114:	e3510000 	cmp	r1, #0
40012118:	0a00000e 	beq	40012158 <CyU3PSysCacheIRegion+0x9c>
4001211c:	e1e03003 	mvn	r3, r3
40012120:	e203300f 	and	r3, r3, #15
40012124:	e3ccc00f 	bic	ip, ip, #15
40012128:	e08cc003 	add	ip, ip, r3
4001212c:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012130:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012134:	e2800020 	add	r0, r0, #32
40012138:	e2511001 	subs	r1, r1, #1
4001213c:	1afffffb 	bne	40012130 <CyU3PSysCacheIRegion+0x74>
40012140:	e1e0300c 	mvn	r3, ip
40012144:	e203300f 	and	r3, r3, #15
40012148:	e1822003 	orr	r2, r2, r3
4001214c:	e3ccc00f 	bic	ip, ip, #15
40012150:	e00cc002 	and	ip, ip, r2
40012154:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
40012158:	e1a00003 	mov	r0, r3
4001215c:	e12fff1e 	bx	lr

40012160 <CyU3PSysCacheDRegion>:
40012160:	e3a03000 	mov	r3, #0
40012164:	e3510000 	cmp	r1, #0
40012168:	0a000022 	beq	400121f8 <CyU3PSysCacheDRegion+0x98>
4001216c:	e0801001 	add	r1, r0, r1
40012170:	e3c0001f 	bic	r0, r0, #31
40012174:	e3a0201f 	mov	r2, #31
40012178:	e1110002 	tst	r1, r2
4001217c:	e0411000 	sub	r1, r1, r0
40012180:	e1a012a1 	lsr	r1, r1, #5
40012184:	12811001 	addne	r1, r1, #1
40012188:	e351003f 	cmp	r1, #63	; 0x3f
4001218c:	8a000019 	bhi	400121f8 <CyU3PSysCacheDRegion+0x98>
40012190:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012194:	e20c200f 	and	r2, ip, #15
40012198:	e3a03001 	mov	r3, #1
4001219c:	e11c0003 	tst	ip, r3
400121a0:	11a03083 	lslne	r3, r3, #1
400121a4:	111c0003 	tstne	ip, r3
400121a8:	11a03083 	lslne	r3, r3, #1
400121ac:	111c0003 	tstne	ip, r3
400121b0:	11a03083 	lslne	r3, r3, #1
400121b4:	1a00000f 	bne	400121f8 <CyU3PSysCacheDRegion+0x98>
400121b8:	e3510000 	cmp	r1, #0
400121bc:	0a00000d 	beq	400121f8 <CyU3PSysCacheDRegion+0x98>
400121c0:	e1e03003 	mvn	r3, r3
400121c4:	e203300f 	and	r3, r3, #15
400121c8:	e3ccc00f 	bic	ip, ip, #15
400121cc:	e08cc003 	add	ip, ip, r3
400121d0:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
400121d4:	e4903020 	ldr	r3, [r0], #32
400121d8:	e2511001 	subs	r1, r1, #1
400121dc:	1afffffc 	bne	400121d4 <CyU3PSysCacheDRegion+0x74>
400121e0:	e1e0300c 	mvn	r3, ip
400121e4:	e203300f 	and	r3, r3, #15
400121e8:	e1822003 	orr	r2, r2, r3
400121ec:	e3ccc00f 	bic	ip, ip, #15
400121f0:	e00cc002 	and	ip, ip, r2
400121f4:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
400121f8:	e1a00003 	mov	r0, r3
400121fc:	e12fff1e 	bx	lr

40012200 <CyU3PSysUnlockICache>:
40012200:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012204:	e3c0000f 	bic	r0, r0, #15
40012208:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

4001220c <CyU3PSysUnlockDCache>:
4001220c:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
40012210:	e3c0000f 	bic	r0, r0, #15
40012214:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

40012218 <__cyu3p_exception_vectors>:
40012218:	e59ff028 	ldr	pc, [pc, #40]	; 40012248 <__CyU3PEntryKeep+0x4>
4001221c:	e59ff028 	ldr	pc, [pc, #40]	; 4001224c <__CyU3PEntryKeep+0x8>
40012220:	e59ff028 	ldr	pc, [pc, #40]	; 40012250 <__CyU3PEntryKeep+0xc>
40012224:	e59ff028 	ldr	pc, [pc, #40]	; 40012254 <__CyU3PEntryKeep+0x10>
40012228:	e59ff028 	ldr	pc, [pc, #40]	; 40012258 <__CyU3PEntryKeep+0x14>
4001222c:	e59ff028 	ldr	pc, [pc, #40]	; 4001225c <__CyU3PEntryKeep+0x18>
40012230:	e51ff120 	ldr	pc, [pc, #-288]	; 40012118 <CyU3PSysCacheIRegion+0x5c>
40012234:	e59ff024 	ldr	pc, [pc, #36]	; 40012260 <__CyU3PEntryKeep+0x1c>

40012238 <__CyU3PSWIHandler>:
40012238:	eafffffe 	b	40012238 <__CyU3PSWIHandler>

4001223c <__CyU3PReservedHandler>:
4001223c:	eafffffe 	b	4001223c <__CyU3PReservedHandler>

40012240 <__CyU3PFiqHandler>:
40012240:	eafffffe 	b	40012240 <__CyU3PFiqHandler>

40012244 <__CyU3PEntryKeep>:
40012244:	e12fff1e 	bx	lr
40012248:	40011ec0 	.word	0x40011ec0
4001224c:	40003618 	.word	0x40003618
40012250:	40012238 	.word	0x40012238
40012254:	4000361c 	.word	0x4000361c
40012258:	40003620 	.word	0x40003620
4001225c:	4001223c 	.word	0x4001223c
40012260:	40012240 	.word	0x40012240

Disassembly of section i.CyU3PDevCheckDevStateStruct:

40012264 <CyU3PDevCheckDevStateStruct>:
40012264:	e92d4038 	push	{r3, r4, r5, lr}
40012268:	e59f4118 	ldr	r4, [pc, #280]	; 40012388 <_etext+0x124>
4001226c:	e3a00000 	mov	r0, #0
40012270:	e58d0000 	str	r0, [sp]
40012274:	e5940000 	ldr	r0, [r4]
40012278:	e59f110c 	ldr	r1, [pc, #268]	; 4001238c <_etext+0x128>
4001227c:	e1500001 	cmp	r0, r1
40012280:	0a000000 	beq	40012288 <CyU3PDevCheckDevStateStruct+0x24>
40012284:	ea00003b 	b	40012378 <CyU3PDevCheckDevStateStruct+0x114>
40012288:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001228c:	e59f10fc 	ldr	r1, [pc, #252]	; 40012390 <_etext+0x12c>
40012290:	e1500001 	cmp	r0, r1
40012294:	1a000005 	bne	400122b0 <CyU3PDevCheckDevStateStruct+0x4c>
40012298:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
4001229c:	e59f10f0 	ldr	r1, [pc, #240]	; 40012394 <_etext+0x130>
400122a0:	e1500001 	cmp	r0, r1
400122a4:	3a000001 	bcc	400122b0 <CyU3PDevCheckDevStateStruct+0x4c>
400122a8:	e594500c 	ldr	r5, [r4, #12]
400122ac:	ea000001 	b	400122b8 <CyU3PDevCheckDevStateStruct+0x54>
400122b0:	e594000c 	ldr	r0, [r4, #12]
400122b4:	e20050ff 	and	r5, r0, #255	; 0xff
400122b8:	e594000c 	ldr	r0, [r4, #12]
400122bc:	e3500000 	cmp	r0, #0
400122c0:	0a000003 	beq	400122d4 <CyU3PDevCheckDevStateStruct+0x70>
400122c4:	e594000c 	ldr	r0, [r4, #12]
400122c8:	e59f10c8 	ldr	r1, [pc, #200]	; 40012398 <_etext+0x134>
400122cc:	e1500001 	cmp	r0, r1
400122d0:	9a000000 	bls	400122d8 <CyU3PDevCheckDevStateStruct+0x74>
400122d4:	ea000027 	b	40012378 <CyU3PDevCheckDevStateStruct+0x114>
400122d8:	e1a0200d 	mov	r2, sp
400122dc:	e1a01005 	mov	r1, r5
400122e0:	e59f00a0 	ldr	r0, [pc, #160]	; 40012388 <_etext+0x124>
400122e4:	eb00049f 	bl	40013568 <CyU3PComputeChecksum>
400122e8:	e594000c 	ldr	r0, [r4, #12]
400122ec:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
400122f0:	e2800a02 	add	r0, r0, #8192	; 0x2000
400122f4:	e5900000 	ldr	r0, [r0]
400122f8:	e59d1000 	ldr	r1, [sp]
400122fc:	e1500001 	cmp	r0, r1
40012300:	0a000000 	beq	40012308 <CyU3PDevCheckDevStateStruct+0xa4>
40012304:	ea00001b 	b	40012378 <CyU3PDevCheckDevStateStruct+0x114>
40012308:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001230c:	e59f107c 	ldr	r1, [pc, #124]	; 40012390 <_etext+0x12c>
40012310:	e1500001 	cmp	r0, r1
40012314:	0a000001 	beq	40012320 <CyU3PDevCheckDevStateStruct+0xbc>
40012318:	e59f007c 	ldr	r0, [pc, #124]	; 4001239c <_etext+0x138>
4001231c:	e58400dc 	str	r0, [r4, #220]	; 0xdc
40012320:	e3a00001 	mov	r0, #1
40012324:	e59f1074 	ldr	r1, [pc, #116]	; 400123a0 <_etext+0x13c>
40012328:	e5810000 	str	r0, [r1]
4001232c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012330:	e59f106c 	ldr	r1, [pc, #108]	; 400123a4 <_etext+0x140>
40012334:	e1500001 	cmp	r0, r1
40012338:	3a00000d 	bcc	40012374 <CyU3PDevCheckDevStateStruct+0x110>
4001233c:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012340:	e3500000 	cmp	r0, #0
40012344:	0a00000a 	beq	40012374 <CyU3PDevCheckDevStateStruct+0x110>
40012348:	e59f0058 	ldr	r0, [pc, #88]	; 400123a8 <_etext+0x144>
4001234c:	e5900018 	ldr	r0, [r0, #24]
40012350:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012354:	0a000006 	beq	40012374 <CyU3PDevCheckDevStateStruct+0x110>
40012358:	e59f004c 	ldr	r0, [pc, #76]	; 400123ac <_etext+0x148>
4001235c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40012360:	e3100001 	tst	r0, #1
40012364:	0a000002 	beq	40012374 <CyU3PDevCheckDevStateStruct+0x110>
40012368:	e3a00001 	mov	r0, #1
4001236c:	e59f103c 	ldr	r1, [pc, #60]	; 400123b0 <_etext+0x14c>
40012370:	e5810000 	str	r0, [r1]
40012374:	e8bd8038 	pop	{r3, r4, r5, pc}
40012378:	e1a00000 	nop			; (mov r0, r0)
4001237c:	e3e00000 	mvn	r0, #0
40012380:	e5840000 	str	r0, [r4]
40012384:	eafffffa 	b	40012374 <CyU3PDevCheckDevStateStruct+0x110>
40012388:	40002000 	.word	0x40002000
4001238c:	42575943 	.word	0x42575943
40012390:	42335846 	.word	0x42335846
40012394:	00010300 	.word	0x00010300
40012398:	00000ff8 	.word	0x00000ff8
4001239c:	00010101 	.word	0x00010101
400123a0:	40030c84 	.word	0x40030c84
400123a4:	00010201 	.word	0x00010201
400123a8:	e0052000 	.word	0xe0052000
400123ac:	e0001000 	.word	0xe0001000
400123b0:	40030c88 	.word	0x40030c88

Disassembly of section i.CyU3PDeviceCacheControl:

400123b4 <CyU3PDeviceCacheControl>:
400123b4:	e92d4070 	push	{r4, r5, r6, lr}
400123b8:	e1a04000 	mov	r4, r0
400123bc:	e1a06001 	mov	r6, r1
400123c0:	e1a05002 	mov	r5, r2
400123c4:	e3550000 	cmp	r5, #0
400123c8:	0a000003 	beq	400123dc <CyU3PDeviceCacheControl+0x28>
400123cc:	e3560000 	cmp	r6, #0
400123d0:	1a000001 	bne	400123dc <CyU3PDeviceCacheControl+0x28>
400123d4:	e3a00040 	mov	r0, #64	; 0x40
400123d8:	e8bd8070 	pop	{r4, r5, r6, pc}
400123dc:	eb000181 	bl	400129e8 <CyU3PSysBarrierSync>
400123e0:	ebfffefa 	bl	40011fd0 <CyU3PSysClearDCache>
400123e4:	eb0001a1 	bl	40012a70 <CyU3PSysFlushICache>
400123e8:	eb00018f 	bl	40012a2c <CyU3PSysDisableICache>
400123ec:	eb00018a 	bl	40012a1c <CyU3PSysDisableDCache>
400123f0:	e3540000 	cmp	r4, #0
400123f4:	0a000003 	beq	40012408 <CyU3PDeviceCacheControl+0x54>
400123f8:	eb000193 	bl	40012a4c <CyU3PSysEnableICache>
400123fc:	eb000179 	bl	400129e8 <CyU3PSysBarrierSync>
40012400:	e59f0038 	ldr	r0, [pc, #56]	; 40012440 <CyU3PDeviceCacheControl+0x8c>
40012404:	e5804000 	str	r4, [r0]
40012408:	e3a00000 	mov	r0, #0
4001240c:	e59f1030 	ldr	r1, [pc, #48]	; 40012444 <CyU3PDeviceCacheControl+0x90>
40012410:	e5810000 	str	r0, [r1]
40012414:	e3560000 	cmp	r6, #0
40012418:	0a000005 	beq	40012434 <CyU3PDeviceCacheControl+0x80>
4001241c:	eb000186 	bl	40012a3c <CyU3PSysEnableDCache>
40012420:	eb000170 	bl	400129e8 <CyU3PSysBarrierSync>
40012424:	e59f0018 	ldr	r0, [pc, #24]	; 40012444 <CyU3PDeviceCacheControl+0x90>
40012428:	e5805000 	str	r5, [r0]
4001242c:	e59f0014 	ldr	r0, [pc, #20]	; 40012448 <CyU3PDeviceCacheControl+0x94>
40012430:	e5806000 	str	r6, [r0]
40012434:	eb00016b 	bl	400129e8 <CyU3PSysBarrierSync>
40012438:	e3a00000 	mov	r0, #0
4001243c:	eaffffe5 	b	400123d8 <CyU3PDeviceCacheControl+0x24>
40012440:	40030c78 	.word	0x40030c78
40012444:	40030c80 	.word	0x40030c80
40012448:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDeviceInit:

4001244c <CyU3PDeviceInit>:
4001244c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40012450:	e1a04000 	mov	r4, r0
40012454:	e3a06000 	mov	r6, #0
40012458:	e3a07000 	mov	r7, #0
4001245c:	e3a09000 	mov	r9, #0
40012460:	e3a0a000 	mov	sl, #0
40012464:	e3540000 	cmp	r4, #0
40012468:	0a000033 	beq	4001253c <CyU3PDeviceInit+0xf0>
4001246c:	e5d40004 	ldrb	r0, [r4, #4]
40012470:	e3500002 	cmp	r0, #2
40012474:	ba000002 	blt	40012484 <CyU3PDeviceInit+0x38>
40012478:	e5d40004 	ldrb	r0, [r4, #4]
4001247c:	e3500010 	cmp	r0, #16
40012480:	da000001 	ble	4001248c <CyU3PDeviceInit+0x40>
40012484:	e3a00040 	mov	r0, #64	; 0x40
40012488:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001248c:	e5d40005 	ldrb	r0, [r4, #5]
40012490:	e3500002 	cmp	r0, #2
40012494:	ba000002 	blt	400124a4 <CyU3PDeviceInit+0x58>
40012498:	e5d40005 	ldrb	r0, [r4, #5]
4001249c:	e3500010 	cmp	r0, #16
400124a0:	da000001 	ble	400124ac <CyU3PDeviceInit+0x60>
400124a4:	e3a00040 	mov	r0, #64	; 0x40
400124a8:	eafffff6 	b	40012488 <CyU3PDeviceInit+0x3c>
400124ac:	e5d40006 	ldrb	r0, [r4, #6]
400124b0:	e3500002 	cmp	r0, #2
400124b4:	ba000002 	blt	400124c4 <CyU3PDeviceInit+0x78>
400124b8:	e5d40006 	ldrb	r0, [r4, #6]
400124bc:	e3500010 	cmp	r0, #16
400124c0:	da000001 	ble	400124cc <CyU3PDeviceInit+0x80>
400124c4:	e3a00040 	mov	r0, #64	; 0x40
400124c8:	eaffffee 	b	40012488 <CyU3PDeviceInit+0x3c>
400124cc:	e5d40006 	ldrb	r0, [r4, #6]
400124d0:	e5d41005 	ldrb	r1, [r4, #5]
400124d4:	e1500001 	cmp	r0, r1
400124d8:	ba000004 	blt	400124f0 <CyU3PDeviceInit+0xa4>
400124dc:	e5d41005 	ldrb	r1, [r4, #5]
400124e0:	e5d40006 	ldrb	r0, [r4, #6]
400124e4:	ebfff9a1 	bl	40010b70 <__aeabi_idivmod>
400124e8:	e3510000 	cmp	r1, #0
400124ec:	0a000001 	beq	400124f8 <CyU3PDeviceInit+0xac>
400124f0:	e3a00040 	mov	r0, #64	; 0x40
400124f4:	eaffffe3 	b	40012488 <CyU3PDeviceInit+0x3c>
400124f8:	e5d4000c 	ldrb	r0, [r4, #12]
400124fc:	e3500004 	cmp	r0, #4
40012500:	ba000001 	blt	4001250c <CyU3PDeviceInit+0xc0>
40012504:	e3a00040 	mov	r0, #64	; 0x40
40012508:	eaffffde 	b	40012488 <CyU3PDeviceInit+0x3c>
4001250c:	e5d40004 	ldrb	r0, [r4, #4]
40012510:	e2400001 	sub	r0, r0, #1
40012514:	e5d41005 	ldrb	r1, [r4, #5]
40012518:	e2411001 	sub	r1, r1, #1
4001251c:	e1800401 	orr	r0, r0, r1, lsl #8
40012520:	e5d41006 	ldrb	r1, [r4, #6]
40012524:	e2411001 	sub	r1, r1, #1
40012528:	e1800601 	orr	r0, r0, r1, lsl #12
4001252c:	e5d4100c 	ldrb	r1, [r4, #12]
40012530:	e1805201 	orr	r5, r0, r1, lsl #4
40012534:	e594a000 	ldr	sl, [r4]
40012538:	ea000000 	b	40012540 <CyU3PDeviceInit+0xf4>
4001253c:	e59f5334 	ldr	r5, [pc, #820]	; 40012878 <CyU3PDeviceInit+0x42c>
40012540:	e59f0334 	ldr	r0, [pc, #820]	; 4001287c <CyU3PDeviceInit+0x430>
40012544:	e5805004 	str	r5, [r0, #4]
40012548:	e5905004 	ldr	r5, [r0, #4]
4001254c:	e3a0000a 	mov	r0, #10
40012550:	eb0003f6 	bl	40013530 <CyU3PBusyWait>
40012554:	e59f0320 	ldr	r0, [pc, #800]	; 4001287c <CyU3PDeviceInit+0x430>
40012558:	e5900000 	ldr	r0, [r0]
4001255c:	e2000807 	and	r0, r0, #458752	; 0x70000
40012560:	e1a05820 	lsr	r5, r0, #16
40012564:	e2150003 	ands	r0, r5, #3
40012568:	0a000004 	beq	40012580 <CyU3PDeviceInit+0x134>
4001256c:	e3500001 	cmp	r0, #1
40012570:	0a00000e 	beq	400125b0 <CyU3PDeviceInit+0x164>
40012574:	e3500002 	cmp	r0, #2
40012578:	1a000024 	bne	40012610 <CyU3PDeviceInit+0x1c4>
4001257c:	ea000014 	b	400125d4 <CyU3PDeviceInit+0x188>
40012580:	e1a00000 	nop			; (mov r0, r0)
40012584:	e59f92f4 	ldr	r9, [pc, #756]	; 40012880 <CyU3PDeviceInit+0x434>
40012588:	e35a0000 	cmp	sl, #0
4001258c:	0a000003 	beq	400125a0 <CyU3PDeviceInit+0x154>
40012590:	e59f02ec 	ldr	r0, [pc, #748]	; 40012884 <CyU3PDeviceInit+0x438>
40012594:	e59f12ec 	ldr	r1, [pc, #748]	; 40012888 <CyU3PDeviceInit+0x43c>
40012598:	e5810000 	str	r0, [r1]
4001259c:	ea000002 	b	400125ac <CyU3PDeviceInit+0x160>
400125a0:	e59f02e4 	ldr	r0, [pc, #740]	; 4001288c <CyU3PDeviceInit+0x440>
400125a4:	e59f12dc 	ldr	r1, [pc, #732]	; 40012888 <CyU3PDeviceInit+0x43c>
400125a8:	e5810000 	str	r0, [r1]
400125ac:	ea000020 	b	40012634 <CyU3PDeviceInit+0x1e8>
400125b0:	e1a00000 	nop			; (mov r0, r0)
400125b4:	e59f92d4 	ldr	r9, [pc, #724]	; 40012890 <CyU3PDeviceInit+0x444>
400125b8:	e1a00209 	lsl	r0, r9, #4
400125bc:	e59f12c4 	ldr	r1, [pc, #708]	; 40012888 <CyU3PDeviceInit+0x43c>
400125c0:	e5810000 	str	r0, [r1]
400125c4:	e59f02c8 	ldr	r0, [pc, #712]	; 40012894 <CyU3PDeviceInit+0x448>
400125c8:	e59f12c8 	ldr	r1, [pc, #712]	; 40012898 <CyU3PDeviceInit+0x44c>
400125cc:	e5810000 	str	r0, [r1]
400125d0:	ea000017 	b	40012634 <CyU3PDeviceInit+0x1e8>
400125d4:	e1a00000 	nop			; (mov r0, r0)
400125d8:	e59f92bc 	ldr	r9, [pc, #700]	; 4001289c <CyU3PDeviceInit+0x450>
400125dc:	e59f02bc 	ldr	r0, [pc, #700]	; 400128a0 <CyU3PDeviceInit+0x454>
400125e0:	e59f12b0 	ldr	r1, [pc, #688]	; 40012898 <CyU3PDeviceInit+0x44c>
400125e4:	e5810000 	str	r0, [r1]
400125e8:	e35a0000 	cmp	sl, #0
400125ec:	0a000003 	beq	40012600 <CyU3PDeviceInit+0x1b4>
400125f0:	e59f028c 	ldr	r0, [pc, #652]	; 40012884 <CyU3PDeviceInit+0x438>
400125f4:	e59f128c 	ldr	r1, [pc, #652]	; 40012888 <CyU3PDeviceInit+0x43c>
400125f8:	e5810000 	str	r0, [r1]
400125fc:	ea000002 	b	4001260c <CyU3PDeviceInit+0x1c0>
40012600:	e59f0284 	ldr	r0, [pc, #644]	; 4001288c <CyU3PDeviceInit+0x440>
40012604:	e59f127c 	ldr	r1, [pc, #636]	; 40012888 <CyU3PDeviceInit+0x43c>
40012608:	e5810000 	str	r0, [r1]
4001260c:	ea000008 	b	40012634 <CyU3PDeviceInit+0x1e8>
40012610:	e1a00000 	nop			; (mov r0, r0)
40012614:	e59f9288 	ldr	r9, [pc, #648]	; 400128a4 <CyU3PDeviceInit+0x458>
40012618:	e1a00189 	lsl	r0, r9, #3
4001261c:	e59f1264 	ldr	r1, [pc, #612]	; 40012888 <CyU3PDeviceInit+0x43c>
40012620:	e5810000 	str	r0, [r1]
40012624:	e59f027c 	ldr	r0, [pc, #636]	; 400128a8 <CyU3PDeviceInit+0x45c>
40012628:	e59f1268 	ldr	r1, [pc, #616]	; 40012898 <CyU3PDeviceInit+0x44c>
4001262c:	e5810000 	str	r0, [r1]
40012630:	e1a00000 	nop			; (mov r0, r0)
40012634:	e1a00000 	nop			; (mov r0, r0)
40012638:	e59f023c 	ldr	r0, [pc, #572]	; 4001287c <CyU3PDeviceInit+0x430>
4001263c:	e5900000 	ldr	r0, [r0]
40012640:	e200003f 	and	r0, r0, #63	; 0x3f
40012644:	e3500015 	cmp	r0, #21
40012648:	1a000002 	bne	40012658 <CyU3PDeviceInit+0x20c>
4001264c:	e59f0230 	ldr	r0, [pc, #560]	; 40012884 <CyU3PDeviceInit+0x438>
40012650:	e59f1230 	ldr	r1, [pc, #560]	; 40012888 <CyU3PDeviceInit+0x43c>
40012654:	e5810000 	str	r0, [r1]
40012658:	e59f0228 	ldr	r0, [pc, #552]	; 40012888 <CyU3PDeviceInit+0x43c>
4001265c:	e5900000 	ldr	r0, [r0]
40012660:	e59f121c 	ldr	r1, [pc, #540]	; 40012884 <CyU3PDeviceInit+0x438>
40012664:	e1500001 	cmp	r0, r1
40012668:	1a000013 	bne	400126bc <CyU3PDeviceInit+0x270>
4001266c:	e59f0208 	ldr	r0, [pc, #520]	; 4001287c <CyU3PDeviceInit+0x430>
40012670:	e5900000 	ldr	r0, [r0]
40012674:	e200003f 	and	r0, r0, #63	; 0x3f
40012678:	e3500015 	cmp	r0, #21
4001267c:	0a00000e 	beq	400126bc <CyU3PDeviceInit+0x270>
40012680:	e59f01f4 	ldr	r0, [pc, #500]	; 4001287c <CyU3PDeviceInit+0x430>
40012684:	e5900000 	ldr	r0, [r0]
40012688:	e3c0003f 	bic	r0, r0, #63	; 0x3f
4001268c:	e3800015 	orr	r0, r0, #21
40012690:	e59f11e4 	ldr	r1, [pc, #484]	; 4001287c <CyU3PDeviceInit+0x430>
40012694:	e5810000 	str	r0, [r1]
40012698:	e3a00064 	mov	r0, #100	; 0x64
4001269c:	eb0003a3 	bl	40013530 <CyU3PBusyWait>
400126a0:	e1a00000 	nop			; (mov r0, r0)
400126a4:	e59f01d0 	ldr	r0, [pc, #464]	; 4001287c <CyU3PDeviceInit+0x430>
400126a8:	e5900000 	ldr	r0, [r0]
400126ac:	e3100702 	tst	r0, #524288	; 0x80000
400126b0:	0afffffb 	beq	400126a4 <CyU3PDeviceInit+0x258>
400126b4:	e3a00064 	mov	r0, #100	; 0x64
400126b8:	eb00039c 	bl	40013530 <CyU3PBusyWait>
400126bc:	e59f01e8 	ldr	r0, [pc, #488]	; 400128ac <CyU3PDeviceInit+0x460>
400126c0:	e5908014 	ldr	r8, [r0, #20]
400126c4:	e3a0000a 	mov	r0, #10
400126c8:	eb000398 	bl	40013530 <CyU3PBusyWait>
400126cc:	e2080003 	and	r0, r8, #3
400126d0:	e3500002 	cmp	r0, #2
400126d4:	1a000005 	bne	400126f0 <CyU3PDeviceInit+0x2a4>
400126d8:	e3a07001 	mov	r7, #1
400126dc:	e3880003 	orr	r0, r8, #3
400126e0:	e59f11c4 	ldr	r1, [pc, #452]	; 400128ac <CyU3PDeviceInit+0x460>
400126e4:	e5810014 	str	r0, [r1, #20]
400126e8:	e3a0000a 	mov	r0, #10
400126ec:	eb00038f 	bl	40013530 <CyU3PBusyWait>
400126f0:	e3180102 	tst	r8, #-2147483648	; 0x80000000
400126f4:	1a000004 	bne	4001270c <CyU3PDeviceInit+0x2c0>
400126f8:	e3540000 	cmp	r4, #0
400126fc:	0a000003 	beq	40012710 <CyU3PDeviceInit+0x2c4>
40012700:	e5940008 	ldr	r0, [r4, #8]
40012704:	e3500000 	cmp	r0, #0
40012708:	1a000000 	bne	40012710 <CyU3PDeviceInit+0x2c4>
4001270c:	e3a06001 	mov	r6, #1
40012710:	e3560000 	cmp	r6, #0
40012714:	1a000014 	bne	4001276c <CyU3PDeviceInit+0x320>
40012718:	e3c80003 	bic	r0, r8, #3
4001271c:	e3800001 	orr	r0, r0, #1
40012720:	e59f1184 	ldr	r1, [pc, #388]	; 400128ac <CyU3PDeviceInit+0x460>
40012724:	e5810014 	str	r0, [r1, #20]
40012728:	e3a00064 	mov	r0, #100	; 0x64
4001272c:	eb00037f 	bl	40013530 <CyU3PBusyWait>
40012730:	e59f0174 	ldr	r0, [pc, #372]	; 400128ac <CyU3PDeviceInit+0x460>
40012734:	e5905018 	ldr	r5, [r0, #24]
40012738:	e3a000c8 	mov	r0, #200	; 0xc8
4001273c:	eb00037b 	bl	40013530 <CyU3PBusyWait>
40012740:	e59f0164 	ldr	r0, [pc, #356]	; 400128ac <CyU3PDeviceInit+0x460>
40012744:	e5900018 	ldr	r0, [r0, #24]
40012748:	e1500005 	cmp	r0, r5
4001274c:	1a000000 	bne	40012754 <CyU3PDeviceInit+0x308>
40012750:	e3a06001 	mov	r6, #1
40012754:	e3a00064 	mov	r0, #100	; 0x64
40012758:	eb000374 	bl	40013530 <CyU3PBusyWait>
4001275c:	e59f0148 	ldr	r0, [pc, #328]	; 400128ac <CyU3PDeviceInit+0x460>
40012760:	e5808014 	str	r8, [r0, #20]
40012764:	e3a00064 	mov	r0, #100	; 0x64
40012768:	eb000370 	bl	40013530 <CyU3PBusyWait>
4001276c:	e3560000 	cmp	r6, #0
40012770:	0a000026 	beq	40012810 <CyU3PDeviceInit+0x3c4>
40012774:	e59f0130 	ldr	r0, [pc, #304]	; 400128ac <CyU3PDeviceInit+0x460>
40012778:	e5900014 	ldr	r0, [r0, #20]
4001277c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012780:	1a000022 	bne	40012810 <CyU3PDeviceInit+0x3c4>
40012784:	e1a09109 	lsl	r9, r9, #2
40012788:	e3a01c7d 	mov	r1, #32000	; 0x7d00
4001278c:	e1a00009 	mov	r0, r9
40012790:	ebfff8a4 	bl	40010a28 <__aeabi_uidivmod>
40012794:	e1a09000 	mov	r9, r0
40012798:	e2095003 	and	r5, r9, #3
4001279c:	e1a09129 	lsr	r9, r9, #2
400127a0:	e3550010 	cmp	r5, #16
400127a4:	2a000000 	bcs	400127ac <CyU3PDeviceInit+0x360>
400127a8:	e2499001 	sub	r9, r9, #1
400127ac:	e1a09809 	lsl	r9, r9, #16
400127b0:	e59f00f8 	ldr	r0, [pc, #248]	; 400128b0 <CyU3PDeviceInit+0x464>
400127b4:	e1590000 	cmp	r9, r0
400127b8:	9a000000 	bls	400127c0 <CyU3PDeviceInit+0x374>
400127bc:	e1a09000 	mov	r9, r0
400127c0:	e3a00064 	mov	r0, #100	; 0x64
400127c4:	eb000359 	bl	40013530 <CyU3PBusyWait>
400127c8:	e59f00dc 	ldr	r0, [pc, #220]	; 400128ac <CyU3PDeviceInit+0x460>
400127cc:	e5905014 	ldr	r5, [r0, #20]
400127d0:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
400127d4:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400127d8:	e1805009 	orr	r5, r0, r9
400127dc:	e3a00064 	mov	r0, #100	; 0x64
400127e0:	eb000352 	bl	40013530 <CyU3PBusyWait>
400127e4:	e59f00c0 	ldr	r0, [pc, #192]	; 400128ac <CyU3PDeviceInit+0x460>
400127e8:	e5805014 	str	r5, [r0, #20]
400127ec:	e3a00064 	mov	r0, #100	; 0x64
400127f0:	eb00034e 	bl	40013530 <CyU3PBusyWait>
400127f4:	e59f00b0 	ldr	r0, [pc, #176]	; 400128ac <CyU3PDeviceInit+0x460>
400127f8:	e5900014 	ldr	r0, [r0, #20]
400127fc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012800:	e59f10a4 	ldr	r1, [pc, #164]	; 400128ac <CyU3PDeviceInit+0x460>
40012804:	e5810014 	str	r0, [r1, #20]
40012808:	e3a00064 	mov	r0, #100	; 0x64
4001280c:	eb000347 	bl	40013530 <CyU3PBusyWait>
40012810:	e59f0094 	ldr	r0, [pc, #148]	; 400128ac <CyU3PDeviceInit+0x460>
40012814:	e5900000 	ldr	r0, [r0]
40012818:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001281c:	e59f1088 	ldr	r1, [pc, #136]	; 400128ac <CyU3PDeviceInit+0x460>
40012820:	e5810000 	str	r0, [r1]
40012824:	e3a00064 	mov	r0, #100	; 0x64
40012828:	eb000340 	bl	40013530 <CyU3PBusyWait>
4001282c:	eb003dcb 	bl	40021f60 <CyU3PVicInit>
40012830:	e10f0000 	mrs	r0, CPSR
40012834:	e3c00080 	bic	r0, r0, #128	; 0x80
40012838:	e121f000 	msr	CPSR_c, r0
4001283c:	e3570000 	cmp	r7, #0
40012840:	0a000002 	beq	40012850 <CyU3PDeviceInit+0x404>
40012844:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012848:	e3a00001 	mov	r0, #1
4001284c:	eb000024 	bl	400128e4 <CyU3PSysWatchDogConfigure>
40012850:	e59f005c 	ldr	r0, [pc, #92]	; 400128b4 <CyU3PDeviceInit+0x468>
40012854:	e5900000 	ldr	r0, [r0]
40012858:	e3500000 	cmp	r0, #0
4001285c:	0a000002 	beq	4001286c <CyU3PDeviceInit+0x420>
40012860:	e59f004c 	ldr	r0, [pc, #76]	; 400128b4 <CyU3PDeviceInit+0x468>
40012864:	e5900000 	ldr	r0, [r0]
40012868:	eb000594 	bl	40013ec0 <CyU3PLppRestoreState>
4001286c:	ebfffe7c 	bl	40012264 <_etext>
40012870:	e3a00000 	mov	r0, #0
40012874:	eaffff03 	b	40012488 <CyU3PDeviceInit+0x3c>
40012878:	00001131 	.word	0x00001131
4001287c:	e0052000 	.word	0xe0052000
40012880:	0124f800 	.word	0x0124f800
40012884:	18085800 	.word	0x18085800
40012888:	40030c6c 	.word	0x40030c6c
4001288c:	16e36000 	.word	0x16e36000
40012890:	018cba80 	.word	0x018cba80
40012894:	00910700 	.word	0x00910700
40012898:	40030c74 	.word	0x40030c74
4001289c:	0249f000 	.word	0x0249f000
400128a0:	00910608 	.word	0x00910608
400128a4:	03197500 	.word	0x03197500
400128a8:	00910580 	.word	0x00910580
400128ac:	e0050000 	.word	0xe0050000
400128b0:	7fff0000 	.word	0x7fff0000
400128b4:	40030ca8 	.word	0x40030ca8

Disassembly of section i.CyU3PSysSetupMMU:

400128b8 <CyU3PSysSetupMMU>:
400128b8:	e92d4010 	push	{r4, lr}
400128bc:	eb000049 	bl	400129e8 <CyU3PSysBarrierSync>
400128c0:	ebfffdc2 	bl	40011fd0 <CyU3PSysClearDCache>
400128c4:	eb000069 	bl	40012a70 <CyU3PSysFlushICache>
400128c8:	eb000049 	bl	400129f4 <CyU3PSysDisableCacheMMU>
400128cc:	eb00006a 	bl	40012a7c <CyU3PSysInitTCMs>
400128d0:	eb000041 	bl	400129dc <CyU3PInitPageTable>
400128d4:	eb000061 	bl	40012a60 <CyU3PSysEnableMMU>
400128d8:	eb00006c 	bl	40012a90 <CyU3PSysLoadTLB>
400128dc:	eb000041 	bl	400129e8 <CyU3PSysBarrierSync>
400128e0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

400128e4 <CyU3PSysWatchDogConfigure>:
400128e4:	e92d4070 	push	{r4, r5, r6, lr}
400128e8:	e1a04000 	mov	r4, r0
400128ec:	e1a05001 	mov	r5, r1
400128f0:	e59f00d8 	ldr	r0, [pc, #216]	; 400129d0 <CyU3PSysWatchDogConfigure+0xec>
400128f4:	e5906014 	ldr	r6, [r0, #20]
400128f8:	e3a00064 	mov	r0, #100	; 0x64
400128fc:	eb00030b 	bl	40013530 <CyU3PBusyWait>
40012900:	e3540000 	cmp	r4, #0
40012904:	0a000023 	beq	40012998 <CyU3PSysWatchDogConfigure+0xb4>
40012908:	e2060003 	and	r0, r6, #3
4001290c:	e3500003 	cmp	r0, #3
40012910:	0a000004 	beq	40012928 <CyU3PSysWatchDogConfigure+0x44>
40012914:	e3860003 	orr	r0, r6, #3
40012918:	e59f10b0 	ldr	r1, [pc, #176]	; 400129d0 <CyU3PSysWatchDogConfigure+0xec>
4001291c:	e5810014 	str	r0, [r1, #20]
40012920:	e3a00064 	mov	r0, #100	; 0x64
40012924:	eb000301 	bl	40013530 <CyU3PBusyWait>
40012928:	e0850285 	add	r0, r5, r5, lsl #5
4001292c:	e59f10a0 	ldr	r1, [pc, #160]	; 400129d4 <CyU3PSysWatchDogConfigure+0xf0>
40012930:	e5810000 	str	r0, [r1]
40012934:	e2810000 	add	r0, r1, #0
40012938:	e5900000 	ldr	r0, [r0]
4001293c:	e1500005 	cmp	r0, r5
40012940:	2a000001 	bcs	4001294c <CyU3PSysWatchDogConfigure+0x68>
40012944:	e3e00000 	mvn	r0, #0
40012948:	e5810000 	str	r0, [r1]
4001294c:	e59f0080 	ldr	r0, [pc, #128]	; 400129d4 <CyU3PSysWatchDogConfigure+0xf0>
40012950:	e5900000 	ldr	r0, [r0]
40012954:	e59f1074 	ldr	r1, [pc, #116]	; 400129d0 <CyU3PSysWatchDogConfigure+0xec>
40012958:	e5810018 	str	r0, [r1, #24]
4001295c:	e3a00064 	mov	r0, #100	; 0x64
40012960:	eb0002f2 	bl	40013530 <CyU3PBusyWait>
40012964:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012968:	e38660fa 	orr	r6, r6, #250	; 0xfa
4001296c:	e59f005c 	ldr	r0, [pc, #92]	; 400129d0 <CyU3PSysWatchDogConfigure+0xec>
40012970:	e5806014 	str	r6, [r0, #20]
40012974:	e3a00064 	mov	r0, #100	; 0x64
40012978:	eb0002ec 	bl	40013530 <CyU3PBusyWait>
4001297c:	e2060c03 	and	r0, r6, #768	; 0x300
40012980:	e3500c03 	cmp	r0, #768	; 0x300
40012984:	1a000010 	bne	400129cc <CyU3PSysWatchDogConfigure+0xe8>
40012988:	e59f0048 	ldr	r0, [pc, #72]	; 400129d8 <CyU3PSysWatchDogConfigure+0xf4>
4001298c:	e1d000b0 	ldrh	r0, [r0]
40012990:	eb003d18 	bl	40021df8 <CyU3POsTimerInit>
40012994:	ea00000c 	b	400129cc <CyU3PSysWatchDogConfigure+0xe8>
40012998:	e2060003 	and	r0, r6, #3
4001299c:	e3500003 	cmp	r0, #3
400129a0:	0a000006 	beq	400129c0 <CyU3PSysWatchDogConfigure+0xdc>
400129a4:	e59f0024 	ldr	r0, [pc, #36]	; 400129d0 <CyU3PSysWatchDogConfigure+0xec>
400129a8:	e5900014 	ldr	r0, [r0, #20]
400129ac:	e3800003 	orr	r0, r0, #3
400129b0:	e59f1018 	ldr	r1, [pc, #24]	; 400129d0 <CyU3PSysWatchDogConfigure+0xec>
400129b4:	e5810014 	str	r0, [r1, #20]
400129b8:	e3a00064 	mov	r0, #100	; 0x64
400129bc:	eb0002db 	bl	40013530 <CyU3PBusyWait>
400129c0:	e3a00000 	mov	r0, #0
400129c4:	e59f1008 	ldr	r1, [pc, #8]	; 400129d4 <CyU3PSysWatchDogConfigure+0xf0>
400129c8:	e5810000 	str	r0, [r1]
400129cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400129d0:	e0050000 	.word	0xe0050000
400129d4:	40030c70 	.word	0x40030c70
400129d8:	40030dd4 	.word	0x40030dd4

Disassembly of section i.CyU3PInitPageTable:

400129dc <CyU3PInitPageTable>:
400129dc:	e92d4010 	push	{r4, lr}
400129e0:	eb0007ad 	bl	4001489c <CyFx3DevInitPageTables>
400129e4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

400129e8 <CyU3PSysBarrierSync>:
400129e8:	e3a00000 	mov	r0, #0
400129ec:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
400129f0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

400129f4 <CyU3PSysDisableCacheMMU>:
400129f4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
400129f8:	e59f2018 	ldr	r2, [pc, #24]	; 40012a18 <CyU3PSysDisableCacheMMU+0x24>
400129fc:	e1c00002 	bic	r0, r0, r2
40012a00:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a04:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012a08:	e3e01801 	mvn	r1, #65536	; 0x10000
40012a0c:	e0000001 	and	r0, r0, r1
40012a10:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012a14:	e12fff1e 	bx	lr
40012a18:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012a1c <CyU3PSysDisableDCache>:
40012a1c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a20:	e3c00004 	bic	r0, r0, #4
40012a24:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a28:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012a2c <CyU3PSysDisableICache>:
40012a2c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a30:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012a34:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a38:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012a3c <CyU3PSysEnableDCache>:
40012a3c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a40:	e3800004 	orr	r0, r0, #4
40012a44:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a48:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012a4c <CyU3PSysEnableICache>:
40012a4c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a50:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012a54:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012a58:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a5c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012a60 <CyU3PSysEnableMMU>:
40012a60:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012a64:	e3800001 	orr	r0, r0, #1
40012a68:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012a6c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012a70 <CyU3PSysFlushICache>:
40012a70:	e3a00000 	mov	r0, #0
40012a74:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012a78:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012a7c <CyU3PSysInitTCMs>:
40012a7c:	e3a00015 	mov	r0, #21
40012a80:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012a84:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012a88:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012a8c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012a90 <CyU3PSysLoadTLB>:
40012a90:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012a94:	e3a00000 	mov	r0, #0
40012a98:	eb00000b 	bl	40012acc <CyU3PSysLockTLBEntry>
40012a9c:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012aa0:	eb000009 	bl	40012acc <CyU3PSysLockTLBEntry>
40012aa4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012aa8:	eb000007 	bl	40012acc <CyU3PSysLockTLBEntry>
40012aac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012ab0:	eb000005 	bl	40012acc <CyU3PSysLockTLBEntry>
40012ab4:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012ab8:	eb000003 	bl	40012acc <CyU3PSysLockTLBEntry>
40012abc:	e59f0004 	ldr	r0, [pc, #4]	; 40012ac8 <CyU3PSysLoadTLB+0x38>
40012ac0:	eb000001 	bl	40012acc <CyU3PSysLockTLBEntry>
40012ac4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012ac8:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012acc <CyU3PSysLockTLBEntry>:
40012acc:	e3a01000 	mov	r1, #0
40012ad0:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012ad4:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012ad8:	e3811001 	orr	r1, r1, #1
40012adc:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012ae0:	e5900000 	ldr	r0, [r0]
40012ae4:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012ae8:	e3c11001 	bic	r1, r1, #1
40012aec:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012af0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012af4 <CyU3PDeviceConfigureIOMatrix>:
40012af4:	e92d4010 	push	{r4, lr}
40012af8:	e1a04000 	mov	r4, r0
40012afc:	e3540000 	cmp	r4, #0
40012b00:	1a000001 	bne	40012b0c <CyU3PDeviceConfigureIOMatrix+0x18>
40012b04:	e3a00041 	mov	r0, #65	; 0x41
40012b08:	e8bd8010 	pop	{r4, pc}
40012b0c:	e1a00004 	mov	r0, r4
40012b10:	eb0005fd 	bl	4001430c <CyFx3DevIOConfigure>
40012b14:	e3500000 	cmp	r0, #0
40012b18:	1a000001 	bne	40012b24 <CyU3PDeviceConfigureIOMatrix+0x30>
40012b1c:	e3a00040 	mov	r0, #64	; 0x40
40012b20:	eafffff8 	b	40012b08 <CyU3PDeviceConfigureIOMatrix+0x14>
40012b24:	e3a00000 	mov	r0, #0
40012b28:	eafffff6 	b	40012b08 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012b2c <CyU3PDeviceGpioOverride>:
40012b2c:	e92d4070 	push	{r4, r5, r6, lr}
40012b30:	e1a04000 	mov	r4, r0
40012b34:	e1a05001 	mov	r5, r1
40012b38:	e354003d 	cmp	r4, #61	; 0x3d
40012b3c:	ba000001 	blt	40012b48 <CyU3PDeviceGpioOverride+0x1c>
40012b40:	e3a00040 	mov	r0, #64	; 0x40
40012b44:	e8bd8070 	pop	{r4, r5, r6, pc}
40012b48:	e1a02005 	mov	r2, r5
40012b4c:	e3a01001 	mov	r1, #1
40012b50:	e1a00004 	mov	r0, r4
40012b54:	eb00066c 	bl	4001450c <CyFx3DevIOSelectGpio>
40012b58:	e3a00000 	mov	r0, #0
40012b5c:	eafffff8 	b	40012b44 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012b60 <CyU3PIsGpioComplexIOConfigured>:
40012b60:	e92d4010 	push	{r4, lr}
40012b64:	e1a04000 	mov	r4, r0
40012b68:	e3a01000 	mov	r1, #0
40012b6c:	e1a00004 	mov	r0, r4
40012b70:	eb000645 	bl	4001448c <CyFx3DevIOIsGpio>
40012b74:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012b78 <CyU3PIsGpioSimpleIOConfigured>:
40012b78:	e92d4010 	push	{r4, lr}
40012b7c:	e1a04000 	mov	r4, r0
40012b80:	e3a01001 	mov	r1, #1
40012b84:	e1a00004 	mov	r0, r4
40012b88:	eb00063f 	bl	4001448c <CyFx3DevIOIsGpio>
40012b8c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012b90 <CyU3PIsGpioValid>:
40012b90:	e1a01000 	mov	r1, r0
40012b94:	e351003d 	cmp	r1, #61	; 0x3d
40012b98:	aa000001 	bge	40012ba4 <CyU3PIsGpioValid+0x14>
40012b9c:	e3a00001 	mov	r0, #1
40012ba0:	e12fff1e 	bx	lr
40012ba4:	e3a00000 	mov	r0, #0
40012ba8:	eafffffc 	b	40012ba0 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012bac <CyU3PIsLppIOConfigured>:
40012bac:	e92d4070 	push	{r4, r5, r6, lr}
40012bb0:	e1a04000 	mov	r4, r0
40012bb4:	e3a05000 	mov	r5, #0
40012bb8:	e3540000 	cmp	r4, #0
40012bbc:	0a00000a 	beq	40012bec <CyU3PIsLppIOConfigured+0x40>
40012bc0:	e3540001 	cmp	r4, #1
40012bc4:	0a000004 	beq	40012bdc <CyU3PIsLppIOConfigured+0x30>
40012bc8:	e3540002 	cmp	r4, #2
40012bcc:	0a00000e 	beq	40012c0c <CyU3PIsLppIOConfigured+0x60>
40012bd0:	e3540003 	cmp	r4, #3
40012bd4:	1a000010 	bne	40012c1c <CyU3PIsLppIOConfigured+0x70>
40012bd8:	ea000007 	b	40012bfc <CyU3PIsLppIOConfigured+0x50>
40012bdc:	e1a00000 	nop			; (mov r0, r0)
40012be0:	eb00063d 	bl	400144dc <CyFx3DevIOIsI2sConfigured>
40012be4:	e1a05000 	mov	r5, r0
40012be8:	ea00000d 	b	40012c24 <CyU3PIsLppIOConfigured+0x78>
40012bec:	e1a00000 	nop			; (mov r0, r0)
40012bf0:	eb000635 	bl	400144cc <CyFx3DevIOIsI2cConfigured>
40012bf4:	e1a05000 	mov	r5, r0
40012bf8:	ea000009 	b	40012c24 <CyU3PIsLppIOConfigured+0x78>
40012bfc:	e1a00000 	nop			; (mov r0, r0)
40012c00:	eb00063d 	bl	400144fc <CyFx3DevIOIsUartConfigured>
40012c04:	e1a05000 	mov	r5, r0
40012c08:	ea000005 	b	40012c24 <CyU3PIsLppIOConfigured+0x78>
40012c0c:	e1a00000 	nop			; (mov r0, r0)
40012c10:	eb000635 	bl	400144ec <CyFx3DevIOIsSpiConfigured>
40012c14:	e1a05000 	mov	r5, r0
40012c18:	ea000001 	b	40012c24 <CyU3PIsLppIOConfigured+0x78>
40012c1c:	e1a00000 	nop			; (mov r0, r0)
40012c20:	e1a00000 	nop			; (mov r0, r0)
40012c24:	e1a00000 	nop			; (mov r0, r0)
40012c28:	e1a00005 	mov	r0, r5
40012c2c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012c30 <CyU3PDebugApplicationDefine>:
40012c30:	e92d4010 	push	{r4, lr}
40012c34:	e24dd020 	sub	sp, sp, #32
40012c38:	e3a00000 	mov	r0, #0
40012c3c:	e59f109c 	ldr	r1, [pc, #156]	; 40012ce0 <CyU3PDebugApplicationDefine+0xb0>
40012c40:	e5810000 	str	r0, [r1]
40012c44:	e3a00001 	mov	r0, #1
40012c48:	e2811008 	add	r1, r1, #8
40012c4c:	e5810000 	str	r0, [r1]
40012c50:	e3a00c02 	mov	r0, #512	; 0x200
40012c54:	ebffc286 	bl	40003674 <CyU3PMemAlloc>
40012c58:	e1a04000 	mov	r4, r0
40012c5c:	e3a030a8 	mov	r3, #168	; 0xa8
40012c60:	e3a02001 	mov	r2, #1
40012c64:	e3a01000 	mov	r1, #0
40012c68:	e3a00006 	mov	r0, #6
40012c6c:	e28dc00c 	add	ip, sp, #12
40012c70:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012c74:	e3a02c02 	mov	r2, #512	; 0x200
40012c78:	e1a03001 	mov	r3, r1
40012c7c:	e58d2004 	str	r2, [sp, #4]
40012c80:	e59f205c 	ldr	r2, [pc, #92]	; 40012ce4 <CyU3PDebugApplicationDefine+0xb4>
40012c84:	e28f105c 	add	r1, pc, #92	; 0x5c
40012c88:	e58d0008 	str	r0, [sp, #8]
40012c8c:	e59f0064 	ldr	r0, [pc, #100]	; 40012cf8 <CyU3PDebugApplicationDefine+0xc8>
40012c90:	e58d4000 	str	r4, [sp]
40012c94:	ebffde4a 	bl	4000a5c4 <_txe_thread_create>
40012c98:	e3a00084 	mov	r0, #132	; 0x84
40012c9c:	ebffc274 	bl	40003674 <CyU3PMemAlloc>
40012ca0:	e1a04000 	mov	r4, r0
40012ca4:	e3a0303c 	mov	r3, #60	; 0x3c
40012ca8:	e3a02084 	mov	r2, #132	; 0x84
40012cac:	e1cd20f0 	strd	r2, [sp]
40012cb0:	e1a03004 	mov	r3, r4
40012cb4:	e3a02003 	mov	r2, #3
40012cb8:	e3a01000 	mov	r1, #0
40012cbc:	e59f0038 	ldr	r0, [pc, #56]	; 40012cfc <CyU3PDebugApplicationDefine+0xcc>
40012cc0:	ebffdd59 	bl	4000a22c <_txe_queue_create>
40012cc4:	e3a03038 	mov	r3, #56	; 0x38
40012cc8:	e3a02000 	mov	r2, #0
40012ccc:	e1a01002 	mov	r1, r2
40012cd0:	e59f0028 	ldr	r0, [pc, #40]	; 40012d00 <CyU3PDebugApplicationDefine+0xd0>
40012cd4:	ebffdc79 	bl	40009ec0 <_txe_mutex_create>
40012cd8:	e28dd020 	add	sp, sp, #32
40012cdc:	e8bd8010 	pop	{r4, pc}
40012ce0:	40030c8c 	.word	0x40030c8c
40012ce4:	400131a0 	.word	0x400131a0
40012ce8:	75626544 	.word	0x75626544
40012cec:	68542067 	.word	0x68542067
40012cf0:	64616572 	.word	0x64616572
40012cf4:	00000000 	.word	0x00000000
40012cf8:	40031234 	.word	0x40031234
40012cfc:	400312dc 	.word	0x400312dc
40012d00:	40031318 	.word	0x40031318

Disassembly of section i.CyU3PDebugChannelReset:

40012d04 <CyU3PDebugChannelReset>:
40012d04:	e92d4010 	push	{r4, lr}
40012d08:	e59f0034 	ldr	r0, [pc, #52]	; 40012d44 <CyU3PDebugChannelReset+0x40>
40012d0c:	eb000d41 	bl	40016218 <CyU3PDmaChannelReset>
40012d10:	e3a01000 	mov	r1, #0
40012d14:	e59f0028 	ldr	r0, [pc, #40]	; 40012d44 <CyU3PDebugChannelReset+0x40>
40012d18:	eb000ddf 	bl	4001649c <CyU3PDmaChannelSetXfer>
40012d1c:	e1a04000 	mov	r4, r0
40012d20:	e3540000 	cmp	r4, #0
40012d24:	1a000004 	bne	40012d3c <CyU3PDebugChannelReset+0x38>
40012d28:	e3e02000 	mvn	r2, #0
40012d2c:	e59f1014 	ldr	r1, [pc, #20]	; 40012d48 <CyU3PDebugChannelReset+0x44>
40012d30:	e281000c 	add	r0, r1, #12
40012d34:	eb000c6a 	bl	40015ee4 <CyU3PDmaChannelGetBuffer>
40012d38:	e1a04000 	mov	r4, r0
40012d3c:	e1a00004 	mov	r0, r4
40012d40:	e8bd8010 	pop	{r4, pc}
40012d44:	4003135c 	.word	0x4003135c
40012d48:	40031350 	.word	0x40031350

Disassembly of section i.CyU3PDebugInit:

40012d4c <CyU3PDebugInit>:
40012d4c:	e92d4070 	push	{r4, r5, r6, lr}
40012d50:	e24dd020 	sub	sp, sp, #32
40012d54:	e1a04000 	mov	r4, r0
40012d58:	e1a06001 	mov	r6, r1
40012d5c:	e59f0150 	ldr	r0, [pc, #336]	; 40012eb4 <CyU3PDebugInit+0x168>
40012d60:	e5900000 	ldr	r0, [r0]
40012d64:	e3500000 	cmp	r0, #0
40012d68:	1a000003 	bne	40012d7c <CyU3PDebugInit+0x30>
40012d6c:	e59f0144 	ldr	r0, [pc, #324]	; 40012eb8 <CyU3PDebugInit+0x16c>
40012d70:	e5900000 	ldr	r0, [r0]
40012d74:	e3500000 	cmp	r0, #0
40012d78:	0a000002 	beq	40012d88 <CyU3PDebugInit+0x3c>
40012d7c:	e3a00043 	mov	r0, #67	; 0x43
40012d80:	e28dd020 	add	sp, sp, #32
40012d84:	e8bd8070 	pop	{r4, r5, r6, pc}
40012d88:	e1a00004 	mov	r0, r4
40012d8c:	eb0007b3 	bl	40014c60 <CyU3PDmaSocketIsValidConsumer>
40012d90:	e1a05000 	mov	r5, r0
40012d94:	e3550000 	cmp	r5, #0
40012d98:	1a000001 	bne	40012da4 <CyU3PDebugInit+0x58>
40012d9c:	e3a00040 	mov	r0, #64	; 0x40
40012da0:	eafffff6 	b	40012d80 <CyU3PDebugInit+0x34>
40012da4:	e3e01000 	mvn	r1, #0
40012da8:	e59f010c 	ldr	r0, [pc, #268]	; 40012ebc <CyU3PDebugInit+0x170>
40012dac:	ebffdcc1 	bl	4000a0b8 <_txe_mutex_get>
40012db0:	e3a00c01 	mov	r0, #256	; 0x100
40012db4:	e1cd00b4 	strh	r0, [sp, #4]
40012db8:	e3a00008 	mov	r0, #8
40012dbc:	e1cd00b6 	strh	r0, [sp, #6]
40012dc0:	e3a00000 	mov	r0, #0
40012dc4:	e1cd00bc 	strh	r0, [sp, #12]
40012dc8:	e59f00f0 	ldr	r0, [pc, #240]	; 40012ec0 <CyU3PDebugInit+0x174>
40012dcc:	e1cd00b8 	strh	r0, [sp, #8]
40012dd0:	e1cd40ba 	strh	r4, [sp, #10]
40012dd4:	e3a00000 	mov	r0, #0
40012dd8:	e5cd0014 	strb	r0, [sp, #20]
40012ddc:	e1cd00be 	strh	r0, [sp, #14]
40012de0:	e1cd01b0 	strh	r0, [sp, #16]
40012de4:	e1cd01b2 	strh	r0, [sp, #18]
40012de8:	e58d001c 	str	r0, [sp, #28]
40012dec:	e28d2004 	add	r2, sp, #4
40012df0:	e3a01004 	mov	r1, #4
40012df4:	e59f00c8 	ldr	r0, [pc, #200]	; 40012ec4 <CyU3PDebugInit+0x178>
40012df8:	eb000a71 	bl	400157c4 <CyU3PDmaChannelCreate>
40012dfc:	e1a05000 	mov	r5, r0
40012e00:	e3550000 	cmp	r5, #0
40012e04:	1a000007 	bne	40012e28 <CyU3PDebugInit+0xdc>
40012e08:	e59f00b8 	ldr	r0, [pc, #184]	; 40012ec8 <CyU3PDebugInit+0x17c>
40012e0c:	e5900000 	ldr	r0, [r0]
40012e10:	e3500000 	cmp	r0, #0
40012e14:	0a000003 	beq	40012e28 <CyU3PDebugInit+0xdc>
40012e18:	e3a01001 	mov	r1, #1
40012e1c:	e59f00a0 	ldr	r0, [pc, #160]	; 40012ec4 <CyU3PDebugInit+0x178>
40012e20:	eb0008d7 	bl	40015184 <CyU3PDmaChannelCacheControl>
40012e24:	e1a05000 	mov	r5, r0
40012e28:	e3550000 	cmp	r5, #0
40012e2c:	1a000003 	bne	40012e40 <CyU3PDebugInit+0xf4>
40012e30:	e3a01000 	mov	r1, #0
40012e34:	e59f0088 	ldr	r0, [pc, #136]	; 40012ec4 <CyU3PDebugInit+0x178>
40012e38:	eb000d97 	bl	4001649c <CyU3PDmaChannelSetXfer>
40012e3c:	e1a05000 	mov	r5, r0
40012e40:	e3550000 	cmp	r5, #0
40012e44:	1a000004 	bne	40012e5c <CyU3PDebugInit+0x110>
40012e48:	e3e02000 	mvn	r2, #0
40012e4c:	e59f1078 	ldr	r1, [pc, #120]	; 40012ecc <CyU3PDebugInit+0x180>
40012e50:	e281000c 	add	r0, r1, #12
40012e54:	eb000c22 	bl	40015ee4 <CyU3PDmaChannelGetBuffer>
40012e58:	e1a05000 	mov	r5, r0
40012e5c:	e3550000 	cmp	r5, #0
40012e60:	0a000005 	beq	40012e7c <CyU3PDebugInit+0x130>
40012e64:	e59f0058 	ldr	r0, [pc, #88]	; 40012ec4 <CyU3PDebugInit+0x178>
40012e68:	eb000b4f 	bl	40015bac <CyU3PDmaChannelDestroy>
40012e6c:	e59f0048 	ldr	r0, [pc, #72]	; 40012ebc <CyU3PDebugInit+0x170>
40012e70:	ebffdcc5 	bl	4000a18c <_txe_mutex_put>
40012e74:	e1a00005 	mov	r0, r5
40012e78:	eaffffc0 	b	40012d80 <CyU3PDebugInit+0x34>
40012e7c:	e3a00000 	mov	r0, #0
40012e80:	e59f1048 	ldr	r1, [pc, #72]	; 40012ed0 <CyU3PDebugInit+0x184>
40012e84:	e1c100b0 	strh	r0, [r1]
40012e88:	e59f1044 	ldr	r1, [pc, #68]	; 40012ed4 <CyU3PDebugInit+0x188>
40012e8c:	e1c100b0 	strh	r0, [r1]
40012e90:	e59f0040 	ldr	r0, [pc, #64]	; 40012ed8 <CyU3PDebugInit+0x18c>
40012e94:	e5c06000 	strb	r6, [r0]
40012e98:	e3a00001 	mov	r0, #1
40012e9c:	e2411010 	sub	r1, r1, #16
40012ea0:	e5810000 	str	r0, [r1]
40012ea4:	e59f0010 	ldr	r0, [pc, #16]	; 40012ebc <CyU3PDebugInit+0x170>
40012ea8:	ebffdcb7 	bl	4000a18c <_txe_mutex_put>
40012eac:	e1a00005 	mov	r0, r5
40012eb0:	eaffffb2 	b	40012d80 <CyU3PDebugInit+0x34>
40012eb4:	40030c8c 	.word	0x40030c8c
40012eb8:	40030c90 	.word	0x40030c90
40012ebc:	40031318 	.word	0x40031318
40012ec0:	00003f01 	.word	0x00003f01
40012ec4:	4003135c 	.word	0x4003135c
40012ec8:	40030c7c 	.word	0x40030c7c
40012ecc:	40031350 	.word	0x40031350
40012ed0:	40030c9a 	.word	0x40030c9a
40012ed4:	40030c9c 	.word	0x40030c9c
40012ed8:	40030c98 	.word	0x40030c98

Disassembly of section i.CyU3PDebugIntToStr:

40012edc <CyU3PDebugIntToStr>:
40012edc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012ee0:	e1a04000 	mov	r4, r0
40012ee4:	e1a05001 	mov	r5, r1
40012ee8:	e1a08002 	mov	r8, r2
40012eec:	e3a0600a 	mov	r6, #10
40012ef0:	e1a07004 	mov	r7, r4
40012ef4:	e3a00000 	mov	r0, #0
40012ef8:	e1a04007 	mov	r4, r7
40012efc:	e7c70006 	strb	r0, [r7, r6]
40012f00:	e1a00000 	nop			; (mov r0, r0)
40012f04:	e1a01008 	mov	r1, r8
40012f08:	e1a00005 	mov	r0, r5
40012f0c:	ebfff6c5 	bl	40010a28 <__aeabi_uidivmod>
40012f10:	e28f0030 	add	r0, pc, #48	; 0x30
40012f14:	e7d00001 	ldrb	r0, [r0, r1]
40012f18:	e2461001 	sub	r1, r6, #1
40012f1c:	e20110ff 	and	r1, r1, #255	; 0xff
40012f20:	e1a06001 	mov	r6, r1
40012f24:	e7c70001 	strb	r0, [r7, r1]
40012f28:	e1a01008 	mov	r1, r8
40012f2c:	e1a00005 	mov	r0, r5
40012f30:	ebfff6bc 	bl	40010a28 <__aeabi_uidivmod>
40012f34:	e1a05000 	mov	r5, r0
40012f38:	e3550000 	cmp	r5, #0
40012f3c:	1afffff0 	bne	40012f04 <CyU3PDebugIntToStr+0x28>
40012f40:	e0870006 	add	r0, r7, r6
40012f44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40012f48:	33323130 	.word	0x33323130
40012f4c:	37363534 	.word	0x37363534
40012f50:	42413938 	.word	0x42413938
40012f54:	46454443 	.word	0x46454443
40012f58:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40012f5c <CyU3PDebugPreamble>:
40012f5c:	e59f1004 	ldr	r1, [pc, #4]	; 40012f68 <CyU3PDebugPreamble+0xc>
40012f60:	e5810000 	str	r0, [r1]
40012f64:	e12fff1e 	bx	lr
40012f68:	40030c94 	.word	0x40030c94

Disassembly of section i.CyU3PDebugPrint:

40012f6c <CyU3PDebugPrint>:
40012f6c:	e92d000f 	push	{r0, r1, r2, r3}
40012f70:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012f74:	e24dd028 	sub	sp, sp, #40	; 0x28
40012f78:	e1a04000 	mov	r4, r0
40012f7c:	e59f0200 	ldr	r0, [pc, #512]	; 40013184 <CyU3PDebugPrint+0x218>
40012f80:	e5900000 	ldr	r0, [r0]
40012f84:	e3500000 	cmp	r0, #0
40012f88:	1a000003 	bne	40012f9c <CyU3PDebugPrint+0x30>
40012f8c:	e3a00042 	mov	r0, #66	; 0x42
40012f90:	e28dd028 	add	sp, sp, #40	; 0x28
40012f94:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40012f98:	e49df014 	ldr	pc, [sp], #20
40012f9c:	e59f01e4 	ldr	r0, [pc, #484]	; 40013188 <CyU3PDebugPrint+0x21c>
40012fa0:	e5d00000 	ldrb	r0, [r0]
40012fa4:	e1540000 	cmp	r4, r0
40012fa8:	da000001 	ble	40012fb4 <CyU3PDebugPrint+0x48>
40012fac:	e3a00000 	mov	r0, #0
40012fb0:	eafffff6 	b	40012f90 <CyU3PDebugPrint+0x24>
40012fb4:	ebffd62a 	bl	40008864 <_tx_thread_identify>
40012fb8:	e1a05000 	mov	r5, r0
40012fbc:	e3550000 	cmp	r5, #0
40012fc0:	1a000001 	bne	40012fcc <CyU3PDebugPrint+0x60>
40012fc4:	e3a00013 	mov	r0, #19
40012fc8:	eafffff0 	b	40012f90 <CyU3PDebugPrint+0x24>
40012fcc:	e3a03000 	mov	r3, #0
40012fd0:	e58d3004 	str	r3, [sp, #4]
40012fd4:	e58d3008 	str	r3, [sp, #8]
40012fd8:	e58d300c 	str	r3, [sp, #12]
40012fdc:	e58d3010 	str	r3, [sp, #16]
40012fe0:	e58d3000 	str	r3, [sp]
40012fe4:	e1a02003 	mov	r2, r3
40012fe8:	e28d1018 	add	r1, sp, #24
40012fec:	e1a00005 	mov	r0, r5
40012ff0:	ebffde0c 	bl	4000a828 <_txe_thread_info_get>
40012ff4:	e59d0018 	ldr	r0, [sp, #24]
40012ff8:	e5d00001 	ldrb	r0, [r0, #1]
40012ffc:	e2400030 	sub	r0, r0, #48	; 0x30
40013000:	e59d1018 	ldr	r1, [sp, #24]
40013004:	e5d11000 	ldrb	r1, [r1]
40013008:	e2411030 	sub	r1, r1, #48	; 0x30
4001300c:	e3a0200a 	mov	r2, #10
40013010:	e1000182 	smlabb	r0, r2, r1, r0
40013014:	e20080ff 	and	r8, r0, #255	; 0xff
40013018:	e3e01000 	mvn	r1, #0
4001301c:	e59f0168 	ldr	r0, [pc, #360]	; 4001318c <CyU3PDebugPrint+0x220>
40013020:	ebffdc24 	bl	4000a0b8 <_txe_mutex_get>
40013024:	e59f0164 	ldr	r0, [pc, #356]	; 40013190 <CyU3PDebugPrint+0x224>
40013028:	e1d000b0 	ldrh	r0, [r0]
4001302c:	e3500000 	cmp	r0, #0
40013030:	0a000011 	beq	4001307c <CyU3PDebugPrint+0x110>
40013034:	e3a02000 	mov	r2, #0
40013038:	e3a01c01 	mov	r1, #256	; 0x100
4001303c:	e59f0150 	ldr	r0, [pc, #336]	; 40013194 <CyU3PDebugPrint+0x228>
40013040:	eb000864 	bl	400151d8 <CyU3PDmaChannelCommitBuffer>
40013044:	e1a06000 	mov	r6, r0
40013048:	e3560000 	cmp	r6, #0
4001304c:	1a000004 	bne	40013064 <CyU3PDebugPrint+0xf8>
40013050:	e3e02000 	mvn	r2, #0
40013054:	e59f113c 	ldr	r1, [pc, #316]	; 40013198 <CyU3PDebugPrint+0x22c>
40013058:	e281000c 	add	r0, r1, #12
4001305c:	eb000ba0 	bl	40015ee4 <CyU3PDmaChannelGetBuffer>
40013060:	e1a06000 	mov	r6, r0
40013064:	e3560000 	cmp	r6, #0
40013068:	0a000000 	beq	40013070 <CyU3PDebugPrint+0x104>
4001306c:	ebffff24 	bl	40012d04 <CyU3PDebugChannelReset>
40013070:	e3a00000 	mov	r0, #0
40013074:	e59f1114 	ldr	r1, [pc, #276]	; 40013190 <CyU3PDebugPrint+0x224>
40013078:	e1c100b0 	strh	r0, [r1]
4001307c:	e59f0114 	ldr	r0, [pc, #276]	; 40013198 <CyU3PDebugPrint+0x22c>
40013080:	e5907000 	ldr	r7, [r0]
40013084:	e3a00c01 	mov	r0, #256	; 0x100
40013088:	e58d0014 	str	r0, [sp, #20]
4001308c:	e59f0108 	ldr	r0, [pc, #264]	; 4001319c <CyU3PDebugPrint+0x230>
40013090:	e5900000 	ldr	r0, [r0]
40013094:	e3500000 	cmp	r0, #0
40013098:	0a000005 	beq	400130b4 <CyU3PDebugPrint+0x148>
4001309c:	e2877008 	add	r7, r7, #8
400130a0:	e1dd01b4 	ldrh	r0, [sp, #20]
400130a4:	e2400008 	sub	r0, r0, #8
400130a8:	e1a00800 	lsl	r0, r0, #16
400130ac:	e1a00820 	lsr	r0, r0, #16
400130b0:	e58d0014 	str	r0, [sp, #20]
400130b4:	e28d0048 	add	r0, sp, #72	; 0x48
400130b8:	e58d001c 	str	r0, [sp, #28]
400130bc:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
400130c0:	e59d301c 	ldr	r3, [sp, #28]
400130c4:	e28d1014 	add	r1, sp, #20
400130c8:	e1a00007 	mov	r0, r7
400130cc:	eb000071 	bl	40013298 <MyDebugSNPrint>
400130d0:	e1a06000 	mov	r6, r0
400130d4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001319c <CyU3PDebugPrint+0x230>
400130d8:	e5900000 	ldr	r0, [r0]
400130dc:	e3500000 	cmp	r0, #0
400130e0:	0a00000f 	beq	40013124 <CyU3PDebugPrint+0x1b8>
400130e4:	e59f00ac 	ldr	r0, [pc, #172]	; 40013198 <CyU3PDebugPrint+0x22c>
400130e8:	e5907000 	ldr	r7, [r0]
400130ec:	e5cd4020 	strb	r4, [sp, #32]
400130f0:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
400130f4:	e3e00000 	mvn	r0, #0
400130f8:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
400130fc:	e1dd01b4 	ldrh	r0, [sp, #20]
40013100:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013104:	e3a02008 	mov	r2, #8
40013108:	e28d1020 	add	r1, sp, #32
4001310c:	e1a00007 	mov	r0, r7
40013110:	ebffc1ef 	bl	400038d4 <CyU3PMemCopy>
40013114:	e1dd01b4 	ldrh	r0, [sp, #20]
40013118:	e2800008 	add	r0, r0, #8
4001311c:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40013120:	e58d0014 	str	r0, [sp, #20]
40013124:	e3a02000 	mov	r2, #0
40013128:	e1dd11b4 	ldrh	r1, [sp, #20]
4001312c:	e59f0060 	ldr	r0, [pc, #96]	; 40013194 <CyU3PDebugPrint+0x228>
40013130:	eb000828 	bl	400151d8 <CyU3PDmaChannelCommitBuffer>
40013134:	e1a06000 	mov	r6, r0
40013138:	e3560000 	cmp	r6, #0
4001313c:	1a000004 	bne	40013154 <CyU3PDebugPrint+0x1e8>
40013140:	e3e02000 	mvn	r2, #0
40013144:	e59f104c 	ldr	r1, [pc, #76]	; 40013198 <CyU3PDebugPrint+0x22c>
40013148:	e281000c 	add	r0, r1, #12
4001314c:	eb000b64 	bl	40015ee4 <CyU3PDmaChannelGetBuffer>
40013150:	e1a06000 	mov	r6, r0
40013154:	e3560000 	cmp	r6, #0
40013158:	0a000002 	beq	40013168 <CyU3PDebugPrint+0x1fc>
4001315c:	ebfffee8 	bl	40012d04 <CyU3PDebugChannelReset>
40013160:	e1a00006 	mov	r0, r6
40013164:	eaffff89 	b	40012f90 <CyU3PDebugPrint+0x24>
40013168:	e3a00000 	mov	r0, #0
4001316c:	e59f101c 	ldr	r1, [pc, #28]	; 40013190 <CyU3PDebugPrint+0x224>
40013170:	e1c100b0 	strh	r0, [r1]
40013174:	e59f0010 	ldr	r0, [pc, #16]	; 4001318c <CyU3PDebugPrint+0x220>
40013178:	ebffdc03 	bl	4000a18c <_txe_mutex_put>
4001317c:	e3a00000 	mov	r0, #0
40013180:	eaffff82 	b	40012f90 <CyU3PDebugPrint+0x24>
40013184:	40030c8c 	.word	0x40030c8c
40013188:	40030c98 	.word	0x40030c98
4001318c:	40031318 	.word	0x40031318
40013190:	40030c9c 	.word	0x40030c9c
40013194:	4003135c 	.word	0x4003135c
40013198:	40031350 	.word	0x40031350
4001319c:	40030c94 	.word	0x40030c94

Disassembly of section i.CyU3PDebugThreadEntry:

400131a0 <CyU3PDebugThreadEntry>:
400131a0:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
400131a4:	e1a06000 	mov	r6, r0
400131a8:	e3a05000 	mov	r5, #0
400131ac:	e1a00000 	nop			; (mov r0, r0)
400131b0:	e3e02000 	mvn	r2, #0
400131b4:	e1a0100d 	mov	r1, sp
400131b8:	e59f00c4 	ldr	r0, [pc, #196]	; 40013284 <CyU3PDebugThreadEntry+0xe4>
400131bc:	ebffdcb0 	bl	4000a484 <_txe_queue_receive>
400131c0:	e1a04000 	mov	r4, r0
400131c4:	e3540000 	cmp	r4, #0
400131c8:	1afffff8 	bne	400131b0 <CyU3PDebugThreadEntry+0x10>
400131cc:	e3e01000 	mvn	r1, #0
400131d0:	e59f00b0 	ldr	r0, [pc, #176]	; 40013288 <CyU3PDebugThreadEntry+0xe8>
400131d4:	ebffdbb7 	bl	4000a0b8 <_txe_mutex_get>
400131d8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001328c <CyU3PDebugThreadEntry+0xec>
400131dc:	e1d000b0 	ldrh	r0, [r0]
400131e0:	e3500c01 	cmp	r0, #256	; 0x100
400131e4:	0a000007 	beq	40013208 <CyU3PDebugThreadEntry+0x68>
400131e8:	e59f10a0 	ldr	r1, [pc, #160]	; 40013290 <CyU3PDebugThreadEntry+0xf0>
400131ec:	e5911000 	ldr	r1, [r1]
400131f0:	e59f2094 	ldr	r2, [pc, #148]	; 4001328c <CyU3PDebugThreadEntry+0xec>
400131f4:	e1d220b0 	ldrh	r2, [r2]
400131f8:	e0810002 	add	r0, r1, r2
400131fc:	e3a02008 	mov	r2, #8
40013200:	e1a0100d 	mov	r1, sp
40013204:	ebffc1b2 	bl	400038d4 <CyU3PMemCopy>
40013208:	e59f007c 	ldr	r0, [pc, #124]	; 4001328c <CyU3PDebugThreadEntry+0xec>
4001320c:	e1d000b0 	ldrh	r0, [r0]
40013210:	e35000f8 	cmp	r0, #248	; 0xf8
40013214:	1a000015 	bne	40013270 <CyU3PDebugThreadEntry+0xd0>
40013218:	e3a02000 	mov	r2, #0
4001321c:	e3a01c01 	mov	r1, #256	; 0x100
40013220:	e59f006c 	ldr	r0, [pc, #108]	; 40013294 <CyU3PDebugThreadEntry+0xf4>
40013224:	eb0007eb 	bl	400151d8 <CyU3PDmaChannelCommitBuffer>
40013228:	e1a05000 	mov	r5, r0
4001322c:	e3550000 	cmp	r5, #0
40013230:	1a000004 	bne	40013248 <CyU3PDebugThreadEntry+0xa8>
40013234:	e3e02000 	mvn	r2, #0
40013238:	e59f1050 	ldr	r1, [pc, #80]	; 40013290 <CyU3PDebugThreadEntry+0xf0>
4001323c:	e281000c 	add	r0, r1, #12
40013240:	eb000b27 	bl	40015ee4 <CyU3PDmaChannelGetBuffer>
40013244:	e1a05000 	mov	r5, r0
40013248:	e3550000 	cmp	r5, #0
4001324c:	0a000004 	beq	40013264 <CyU3PDebugThreadEntry+0xc4>
40013250:	ebfffeab 	bl	40012d04 <CyU3PDebugChannelReset>
40013254:	e1a05000 	mov	r5, r0
40013258:	e3550000 	cmp	r5, #0
4001325c:	0a000000 	beq	40013264 <CyU3PDebugThreadEntry+0xc4>
40013260:	ea000005 	b	4001327c <CyU3PDebugThreadEntry+0xdc>
40013264:	e3a00000 	mov	r0, #0
40013268:	e59f101c 	ldr	r1, [pc, #28]	; 4001328c <CyU3PDebugThreadEntry+0xec>
4001326c:	e1c100b0 	strh	r0, [r1]
40013270:	e59f0010 	ldr	r0, [pc, #16]	; 40013288 <CyU3PDebugThreadEntry+0xe8>
40013274:	ebffdbc4 	bl	4000a18c <_txe_mutex_put>
40013278:	eaffffcc 	b	400131b0 <CyU3PDebugThreadEntry+0x10>
4001327c:	e1a00000 	nop			; (mov r0, r0)
40013280:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013284:	400312dc 	.word	0x400312dc
40013288:	40031318 	.word	0x40031318
4001328c:	40030c9c 	.word	0x40030c9c
40013290:	40031350 	.word	0x40031350
40013294:	4003135c 	.word	0x4003135c

Disassembly of section i.MyDebugSNPrint:

40013298 <MyDebugSNPrint>:
40013298:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001329c:	e24dd01c 	sub	sp, sp, #28
400132a0:	e1a04000 	mov	r4, r0
400132a4:	e1a05001 	mov	r5, r1
400132a8:	e1a06002 	mov	r6, r2
400132ac:	e3a08000 	mov	r8, #0
400132b0:	e3a00000 	mov	r0, #0
400132b4:	e58d0018 	str	r0, [sp, #24]
400132b8:	e3a09000 	mov	r9, #0
400132bc:	e1d5b0b0 	ldrh	fp, [r5]
400132c0:	e3540000 	cmp	r4, #0
400132c4:	1a000002 	bne	400132d4 <MyDebugSNPrint+0x3c>
400132c8:	e3a00040 	mov	r0, #64	; 0x40
400132cc:	e28dd02c 	add	sp, sp, #44	; 0x2c
400132d0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400132d4:	e1a07006 	mov	r7, r6
400132d8:	ea00008d 	b	40013514 <MyDebugSNPrint+0x27c>
400132dc:	e24b0002 	sub	r0, fp, #2
400132e0:	e1500009 	cmp	r0, r9
400132e4:	ca000001 	bgt	400132f0 <MyDebugSNPrint+0x58>
400132e8:	e3a00040 	mov	r0, #64	; 0x40
400132ec:	eafffff6 	b	400132cc <MyDebugSNPrint+0x34>
400132f0:	e5d70000 	ldrb	r0, [r7]
400132f4:	e3500025 	cmp	r0, #37	; 0x25
400132f8:	0a000005 	beq	40013314 <MyDebugSNPrint+0x7c>
400132fc:	e5d71000 	ldrb	r1, [r7]
40013300:	e1a00009 	mov	r0, r9
40013304:	e2892001 	add	r2, r9, #1
40013308:	e3c29801 	bic	r9, r2, #65536	; 0x10000
4001330c:	e7c41000 	strb	r1, [r4, r0]
40013310:	ea00007e 	b	40013510 <MyDebugSNPrint+0x278>
40013314:	e2877001 	add	r7, r7, #1
40013318:	e5d70000 	ldrb	r0, [r7]
4001331c:	e3500064 	cmp	r0, #100	; 0x64
40013320:	0a000021 	beq	400133ac <MyDebugSNPrint+0x114>
40013324:	ca000006 	bgt	40013344 <MyDebugSNPrint+0xac>
40013328:	e3500025 	cmp	r0, #37	; 0x25
4001332c:	0a00000b 	beq	40013360 <MyDebugSNPrint+0xc8>
40013330:	e3500058 	cmp	r0, #88	; 0x58
40013334:	0a00004c 	beq	4001346c <MyDebugSNPrint+0x1d4>
40013338:	e3500063 	cmp	r0, #99	; 0x63
4001333c:	1a00005a 	bne	400134ac <MyDebugSNPrint+0x214>
40013340:	ea00000d 	b	4001337c <MyDebugSNPrint+0xe4>
40013344:	e3500073 	cmp	r0, #115	; 0x73
40013348:	0a000031 	beq	40013414 <MyDebugSNPrint+0x17c>
4001334c:	e3500075 	cmp	r0, #117	; 0x75
40013350:	0a000036 	beq	40013430 <MyDebugSNPrint+0x198>
40013354:	e3500078 	cmp	r0, #120	; 0x78
40013358:	1a000053 	bne	400134ac <MyDebugSNPrint+0x214>
4001335c:	ea000044 	b	40013474 <MyDebugSNPrint+0x1dc>
40013360:	e1a00000 	nop			; (mov r0, r0)
40013364:	e3a01025 	mov	r1, #37	; 0x25
40013368:	e1a00009 	mov	r0, r9
4001336c:	e2892001 	add	r2, r9, #1
40013370:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013374:	e7c41000 	strb	r1, [r4, r0]
40013378:	ea00004e 	b	400134b8 <MyDebugSNPrint+0x220>
4001337c:	e1a00000 	nop			; (mov r0, r0)
40013380:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013384:	e5900000 	ldr	r0, [r0]
40013388:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
4001338c:	e2811004 	add	r1, r1, #4
40013390:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013394:	e20010ff 	and	r1, r0, #255	; 0xff
40013398:	e1a00009 	mov	r0, r9
4001339c:	e2892001 	add	r2, r9, #1
400133a0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400133a4:	e7c41000 	strb	r1, [r4, r0]
400133a8:	ea000042 	b	400134b8 <MyDebugSNPrint+0x220>
400133ac:	e1a00000 	nop			; (mov r0, r0)
400133b0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400133b4:	e5900000 	ldr	r0, [r0]
400133b8:	e58d0014 	str	r0, [sp, #20]
400133bc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400133c0:	e2800004 	add	r0, r0, #4
400133c4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400133c8:	e59d0014 	ldr	r0, [sp, #20]
400133cc:	e3500000 	cmp	r0, #0
400133d0:	aa000007 	bge	400133f4 <MyDebugSNPrint+0x15c>
400133d4:	e3a0102d 	mov	r1, #45	; 0x2d
400133d8:	e1a00009 	mov	r0, r9
400133dc:	e2892001 	add	r2, r9, #1
400133e0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400133e4:	e7c41000 	strb	r1, [r4, r0]
400133e8:	e59d0014 	ldr	r0, [sp, #20]
400133ec:	e2600000 	rsb	r0, r0, #0
400133f0:	e58d0014 	str	r0, [sp, #20]
400133f4:	e3a0200a 	mov	r2, #10
400133f8:	e59d1014 	ldr	r1, [sp, #20]
400133fc:	e28d0004 	add	r0, sp, #4
40013400:	ebfffeb5 	bl	40012edc <CyU3PDebugIntToStr>
40013404:	e1a08000 	mov	r8, r0
40013408:	e3a00001 	mov	r0, #1
4001340c:	e58d0018 	str	r0, [sp, #24]
40013410:	ea000028 	b	400134b8 <MyDebugSNPrint+0x220>
40013414:	e1a00000 	nop			; (mov r0, r0)
40013418:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001341c:	e4908004 	ldr	r8, [r0], #4
40013420:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013424:	e3a00001 	mov	r0, #1
40013428:	e58d0018 	str	r0, [sp, #24]
4001342c:	ea000021 	b	400134b8 <MyDebugSNPrint+0x220>
40013430:	e1a00000 	nop			; (mov r0, r0)
40013434:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013438:	e5900000 	ldr	r0, [r0]
4001343c:	e58d0010 	str	r0, [sp, #16]
40013440:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013444:	e2800004 	add	r0, r0, #4
40013448:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001344c:	e3a0200a 	mov	r2, #10
40013450:	e59d1010 	ldr	r1, [sp, #16]
40013454:	e28d0004 	add	r0, sp, #4
40013458:	ebfffe9f 	bl	40012edc <CyU3PDebugIntToStr>
4001345c:	e1a08000 	mov	r8, r0
40013460:	e3a00001 	mov	r0, #1
40013464:	e58d0018 	str	r0, [sp, #24]
40013468:	ea000012 	b	400134b8 <MyDebugSNPrint+0x220>
4001346c:	e1a00000 	nop			; (mov r0, r0)
40013470:	e1a00000 	nop			; (mov r0, r0)
40013474:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013478:	e5900000 	ldr	r0, [r0]
4001347c:	e58d0010 	str	r0, [sp, #16]
40013480:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013484:	e2800004 	add	r0, r0, #4
40013488:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001348c:	e3a02010 	mov	r2, #16
40013490:	e59d1010 	ldr	r1, [sp, #16]
40013494:	e28d0004 	add	r0, sp, #4
40013498:	ebfffe8f 	bl	40012edc <CyU3PDebugIntToStr>
4001349c:	e1a08000 	mov	r8, r0
400134a0:	e3a00001 	mov	r0, #1
400134a4:	e58d0018 	str	r0, [sp, #24]
400134a8:	ea000002 	b	400134b8 <MyDebugSNPrint+0x220>
400134ac:	e1a00000 	nop			; (mov r0, r0)
400134b0:	e3a00040 	mov	r0, #64	; 0x40
400134b4:	eaffff84 	b	400132cc <MyDebugSNPrint+0x34>
400134b8:	e1a00000 	nop			; (mov r0, r0)
400134bc:	e59d0018 	ldr	r0, [sp, #24]
400134c0:	e3500000 	cmp	r0, #0
400134c4:	0a000010 	beq	4001350c <MyDebugSNPrint+0x274>
400134c8:	e1a00008 	mov	r0, r8
400134cc:	ebfff500 	bl	400108d4 <strlen>
400134d0:	e1a0a800 	lsl	sl, r0, #16
400134d4:	e1a0a82a 	lsr	sl, sl, #16
400134d8:	e04b000a 	sub	r0, fp, sl
400134dc:	e2400001 	sub	r0, r0, #1
400134e0:	e1500009 	cmp	r0, r9
400134e4:	ca000001 	bgt	400134f0 <MyDebugSNPrint+0x258>
400134e8:	e3a00040 	mov	r0, #64	; 0x40
400134ec:	eaffff76 	b	400132cc <MyDebugSNPrint+0x34>
400134f0:	e0840009 	add	r0, r4, r9
400134f4:	e1a01008 	mov	r1, r8
400134f8:	ebfff4b9 	bl	400107e4 <strcpy>
400134fc:	e089000a 	add	r0, r9, sl
40013500:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013504:	e3a00000 	mov	r0, #0
40013508:	e58d0018 	str	r0, [sp, #24]
4001350c:	e1a00000 	nop			; (mov r0, r0)
40013510:	e2877001 	add	r7, r7, #1
40013514:	e5d70000 	ldrb	r0, [r7]
40013518:	e3500000 	cmp	r0, #0
4001351c:	1affff6e 	bne	400132dc <MyDebugSNPrint+0x44>
40013520:	e3a00000 	mov	r0, #0
40013524:	e7c40009 	strb	r0, [r4, r9]
40013528:	e1c590b0 	strh	r9, [r5]
4001352c:	eaffff66 	b	400132cc <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013530 <CyU3PBusyWait>:
40013530:	ea000006 	b	40013550 <CyU3PBusyWait+0x20>
40013534:	e3a01000 	mov	r1, #0
40013538:	ea000002 	b	40013548 <CyU3PBusyWait+0x18>
4001353c:	e281100a 	add	r1, r1, #10
40013540:	e241100a 	sub	r1, r1, #10
40013544:	e2811001 	add	r1, r1, #1
40013548:	e351001f 	cmp	r1, #31
4001354c:	3afffffa 	bcc	4001353c <CyU3PBusyWait+0xc>
40013550:	e1b02000 	movs	r2, r0
40013554:	e2403001 	sub	r3, r0, #1
40013558:	e1a00803 	lsl	r0, r3, #16
4001355c:	e1a00820 	lsr	r0, r0, #16
40013560:	1afffff3 	bne	40013534 <CyU3PBusyWait+0x4>
40013564:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

40013568 <CyU3PComputeChecksum>:
40013568:	e92d4010 	push	{r4, lr}
4001356c:	e1a03000 	mov	r3, r0
40013570:	e3a00000 	mov	r0, #0
40013574:	e3530000 	cmp	r3, #0
40013578:	0a000003 	beq	4001358c <CyU3PComputeChecksum+0x24>
4001357c:	e3510000 	cmp	r1, #0
40013580:	0a000001 	beq	4001358c <CyU3PComputeChecksum+0x24>
40013584:	e3520000 	cmp	r2, #0
40013588:	1a000001 	bne	40013594 <CyU3PComputeChecksum+0x2c>
4001358c:	e3a00040 	mov	r0, #64	; 0x40
40013590:	ea00000a 	b	400135c0 <CyU3PComputeChecksum+0x58>
40013594:	e3a0e000 	mov	lr, #0
40013598:	e582e000 	str	lr, [r2]
4001359c:	e3a0c000 	mov	ip, #0
400135a0:	ea000004 	b	400135b8 <CyU3PComputeChecksum+0x50>
400135a4:	e592e000 	ldr	lr, [r2]
400135a8:	e793410c 	ldr	r4, [r3, ip, lsl #2]
400135ac:	e08ee004 	add	lr, lr, r4
400135b0:	e582e000 	str	lr, [r2]
400135b4:	e28cc001 	add	ip, ip, #1
400135b8:	e15c0121 	cmp	ip, r1, lsr #2
400135bc:	3afffff8 	bcc	400135a4 <CyU3PComputeChecksum+0x3c>
400135c0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

400135c4 <__aeabi_memclr4>:
400135c4:	e92d4030 	push	{r4, r5, lr}
400135c8:	e1a04000 	mov	r4, r0
400135cc:	e1a05001 	mov	r5, r1
400135d0:	e3a02000 	mov	r2, #0
400135d4:	e1a01005 	mov	r1, r5
400135d8:	e1a00004 	mov	r0, r4
400135dc:	eb000020 	bl	40013664 <__aeabi_memset>
400135e0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

400135e4 <__aeabi_memcpy>:
400135e4:	e92d4010 	push	{r4, lr}
400135e8:	e1a03000 	mov	r3, r0
400135ec:	e1a0c001 	mov	ip, r1
400135f0:	e1500001 	cmp	r0, r1
400135f4:	2a000006 	bcs	40013614 <__aeabi_memcpy+0x30>
400135f8:	ea000001 	b	40013604 <__aeabi_memcpy+0x20>
400135fc:	e4dce001 	ldrb	lr, [ip], #1
40013600:	e4c3e001 	strb	lr, [r3], #1
40013604:	e1b0e002 	movs	lr, r2
40013608:	e2422001 	sub	r2, r2, #1
4001360c:	1afffffa 	bne	400135fc <__aeabi_memcpy+0x18>
40013610:	ea000009 	b	4001363c <__aeabi_memcpy+0x58>
40013614:	e080e002 	add	lr, r0, r2
40013618:	e24e3001 	sub	r3, lr, #1
4001361c:	e081e002 	add	lr, r1, r2
40013620:	e24ec001 	sub	ip, lr, #1
40013624:	ea000001 	b	40013630 <__aeabi_memcpy+0x4c>
40013628:	e45ce001 	ldrb	lr, [ip], #-1
4001362c:	e443e001 	strb	lr, [r3], #-1
40013630:	e1b0e002 	movs	lr, r2
40013634:	e2422001 	sub	r2, r2, #1
40013638:	1afffffa 	bne	40013628 <__aeabi_memcpy+0x44>
4001363c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013640 <__aeabi_memcpy4>:
40013640:	e92d4070 	push	{r4, r5, r6, lr}
40013644:	e1a04000 	mov	r4, r0
40013648:	e1a05001 	mov	r5, r1
4001364c:	e1a06002 	mov	r6, r2
40013650:	e1a02006 	mov	r2, r6
40013654:	e1a01005 	mov	r1, r5
40013658:	e1a00004 	mov	r0, r4
4001365c:	ebffffe0 	bl	400135e4 <__aeabi_memcpy>
40013660:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

40013664 <__aeabi_memset>:
40013664:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40013668:	e1a03000 	mov	r3, r0
4001366c:	ea000000 	b	40013674 <__aeabi_memset+0x10>
40013670:	e4c32001 	strb	r2, [r3], #1
40013674:	e1b0c001 	movs	ip, r1
40013678:	e2411001 	sub	r1, r1, #1
4001367c:	1afffffb 	bne	40013670 <__aeabi_memset+0xc>
40013680:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013684 <CyU3PApplicationDefine>:
40013684:	e92d4010 	push	{r4, lr}
40013688:	e24dd020 	sub	sp, sp, #32
4001368c:	e3e00000 	mvn	r0, #0
40013690:	e59f10b4 	ldr	r1, [pc, #180]	; 4001374c <CyU3PApplicationDefine+0xc8>
40013694:	e5810000 	str	r0, [r1]
40013698:	e3a00000 	mov	r0, #0
4001369c:	e59f10ac 	ldr	r1, [pc, #172]	; 40013750 <CyU3PApplicationDefine+0xcc>
400136a0:	e5810000 	str	r0, [r1]
400136a4:	ebffbfdf 	bl	40003628 <CyU3PMemInit>
400136a8:	eb001694 	bl	40019100 <CyU3PDmaApplicationDefine>
400136ac:	e3a02028 	mov	r2, #40	; 0x28
400136b0:	e3a01000 	mov	r1, #0
400136b4:	e59f0098 	ldr	r0, [pc, #152]	; 40013754 <CyU3PApplicationDefine+0xd0>
400136b8:	ebffd946 	bl	40009bd8 <_txe_event_flags_create>
400136bc:	e3a00080 	mov	r0, #128	; 0x80
400136c0:	ebffbfeb 	bl	40003674 <CyU3PMemAlloc>
400136c4:	e1a04000 	mov	r4, r0
400136c8:	e3a0303c 	mov	r3, #60	; 0x3c
400136cc:	e3a02080 	mov	r2, #128	; 0x80
400136d0:	e1cd20f0 	strd	r2, [sp]
400136d4:	e1a03004 	mov	r3, r4
400136d8:	e3a02006 	mov	r2, #6
400136dc:	e3a01000 	mov	r1, #0
400136e0:	e59f0070 	ldr	r0, [pc, #112]	; 40013758 <CyU3PApplicationDefine+0xd4>
400136e4:	ebffdad0 	bl	4000a22c <_txe_queue_create>
400136e8:	e3a00b01 	mov	r0, #1024	; 0x400
400136ec:	ebffbfe0 	bl	40003674 <CyU3PMemAlloc>
400136f0:	e1a04000 	mov	r4, r0
400136f4:	e3a030a8 	mov	r3, #168	; 0xa8
400136f8:	e3a02001 	mov	r2, #1
400136fc:	e3a01000 	mov	r1, #0
40013700:	e3a00004 	mov	r0, #4
40013704:	e28dc00c 	add	ip, sp, #12
40013708:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001370c:	e3a02b01 	mov	r2, #1024	; 0x400
40013710:	e1a03001 	mov	r3, r1
40013714:	e58d2004 	str	r2, [sp, #4]
40013718:	e59f203c 	ldr	r2, [pc, #60]	; 4001375c <CyU3PApplicationDefine+0xd8>
4001371c:	e28f103c 	add	r1, pc, #60	; 0x3c
40013720:	e58d0008 	str	r0, [sp, #8]
40013724:	e59f0048 	ldr	r0, [pc, #72]	; 40013774 <CyU3PApplicationDefine+0xf0>
40013728:	e58d4000 	str	r4, [sp]
4001372c:	ebffdba4 	bl	4000a5c4 <_txe_thread_create>
40013730:	eb000082 	bl	40013940 <CyU3PSibApplicationDefine>
40013734:	ebfffd3d 	bl	40012c30 <CyU3PDebugApplicationDefine>
40013738:	eb001d16 	bl	4001ab98 <CyU3PPibApplicationDefine>
4001373c:	eb00013c 	bl	40013c34 <CyU3PLppApplicationDefine>
40013740:	eb002b6f 	bl	4001e504 <CyU3PUibApplicationDefine>
40013744:	e28dd020 	add	sp, sp, #32
40013748:	e8bd8010 	pop	{r4, pc}
4001374c:	40030ca0 	.word	0x40030ca0
40013750:	40030ca4 	.word	0x40030ca4
40013754:	400314a4 	.word	0x400314a4
40013758:	400314cc 	.word	0x400314cc
4001375c:	4001382c 	.word	0x4001382c
40013760:	535f3230 	.word	0x535f3230
40013764:	45545359 	.word	0x45545359
40013768:	48545f4d 	.word	0x48545f4d
4001376c:	44414552 	.word	0x44414552
40013770:	00000000 	.word	0x00000000
40013774:	400313fc 	.word	0x400313fc

Disassembly of section i.CyU3PSysCheckBootState:

40013778 <CyU3PSysCheckBootState>:
40013778:	e92d4070 	push	{r4, r5, r6, lr}
4001377c:	e3a00000 	mov	r0, #0
40013780:	e59f106c 	ldr	r1, [pc, #108]	; 400137f4 <CyU3PSysCheckBootState+0x7c>
40013784:	e5810000 	str	r0, [r1]
40013788:	e59f0068 	ldr	r0, [pc, #104]	; 400137f8 <CyU3PSysCheckBootState+0x80>
4001378c:	e5900000 	ldr	r0, [r0]
40013790:	e3100401 	tst	r0, #16777216	; 0x1000000
40013794:	0a000015 	beq	400137f0 <CyU3PSysCheckBootState+0x78>
40013798:	e59f005c 	ldr	r0, [pc, #92]	; 400137fc <CyU3PSysCheckBootState+0x84>
4001379c:	e5900000 	ldr	r0, [r0]
400137a0:	e3500001 	cmp	r0, #1
400137a4:	1a000011 	bne	400137f0 <CyU3PSysCheckBootState+0x78>
400137a8:	e3a00000 	mov	r0, #0
400137ac:	e59f1048 	ldr	r1, [pc, #72]	; 400137fc <CyU3PSysCheckBootState+0x84>
400137b0:	e5810000 	str	r0, [r1]
400137b4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400137b8:	e5904004 	ldr	r4, [r0, #4]
400137bc:	e1a05004 	mov	r5, r4
400137c0:	e3a02901 	mov	r2, #16384	; 0x4000
400137c4:	e1a01005 	mov	r1, r5
400137c8:	e3a00000 	mov	r0, #0
400137cc:	ebffc040 	bl	400038d4 <CyU3PMemCopy>
400137d0:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400137d4:	e5900008 	ldr	r0, [r0, #8]
400137d8:	e59f1020 	ldr	r1, [pc, #32]	; 40013800 <CyU3PSysCheckBootState+0x88>
400137dc:	e1500001 	cmp	r0, r1
400137e0:	1a000002 	bne	400137f0 <CyU3PSysCheckBootState+0x78>
400137e4:	e2840901 	add	r0, r4, #16384	; 0x4000
400137e8:	e59f1004 	ldr	r1, [pc, #4]	; 400137f4 <CyU3PSysCheckBootState+0x7c>
400137ec:	e5810000 	str	r0, [r1]
400137f0:	e8bd8070 	pop	{r4, r5, r6, pc}
400137f4:	40030ca8 	.word	0x40030ca8
400137f8:	e0050000 	.word	0xe0050000
400137fc:	40030ca4 	.word	0x40030ca4
40013800:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013804 <CyU3PSysFwMsgHandler>:
40013804:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013808 <CyU3PSysModuleInitCompleteEvt>:
40013808:	e92d4010 	push	{r4, lr}
4001380c:	e1a04000 	mov	r4, r0
40013810:	e3a00010 	mov	r0, #16
40013814:	e1a01410 	lsl	r1, r0, r4
40013818:	e3a02000 	mov	r2, #0
4001381c:	e59f0004 	ldr	r0, [pc, #4]	; 40013828 <CyU3PSysModuleInitCompleteEvt+0x20>
40013820:	ebffd98c 	bl	40009e58 <_txe_event_flags_set>
40013824:	e8bd8010 	pop	{r4, pc}
40013828:	400314a4 	.word	0x400314a4

Disassembly of section i.CyU3PSysThreadEntry:

4001382c <CyU3PSysThreadEntry>:
4001382c:	e92d4010 	push	{r4, lr}
40013830:	e24dd028 	sub	sp, sp, #40	; 0x28
40013834:	e3a04c02 	mov	r4, #512	; 0x200
40013838:	e3844080 	orr	r4, r4, #128	; 0x80
4001383c:	e3e03000 	mvn	r3, #0
40013840:	e58d3000 	str	r3, [sp]
40013844:	e28d3024 	add	r3, sp, #36	; 0x24
40013848:	e3a02003 	mov	r2, #3
4001384c:	e1a01004 	mov	r1, r4
40013850:	e59f00d8 	ldr	r0, [pc, #216]	; 40013930 <CyU3PSysThreadEntry+0x104>
40013854:	ebffd94f 	bl	40009d98 <_txe_event_flags_get>
40013858:	e28d2020 	add	r2, sp, #32
4001385c:	e3a01000 	mov	r1, #0
40013860:	e59f00cc 	ldr	r0, [pc, #204]	; 40013934 <CyU3PSysThreadEntry+0x108>
40013864:	ebffdc0c 	bl	4000a89c <_txe_thread_priority_change>
40013868:	ebffd351 	bl	400085b4 <CyFxApplicationDefine>
4001386c:	e28d2020 	add	r2, sp, #32
40013870:	e3a01004 	mov	r1, #4
40013874:	e59f00b8 	ldr	r0, [pc, #184]	; 40013934 <CyU3PSysThreadEntry+0x108>
40013878:	ebffdc07 	bl	4000a89c <_txe_thread_priority_change>
4001387c:	ea00002a 	b	4001392c <CyU3PSysThreadEntry+0x100>
40013880:	e59f00b0 	ldr	r0, [pc, #176]	; 40013938 <CyU3PSysThreadEntry+0x10c>
40013884:	e5903000 	ldr	r3, [r0]
40013888:	e58d3000 	str	r3, [sp]
4001388c:	e28d3024 	add	r3, sp, #36	; 0x24
40013890:	e3a02001 	mov	r2, #1
40013894:	e3e01000 	mvn	r1, #0
40013898:	e59f0090 	ldr	r0, [pc, #144]	; 40013930 <CyU3PSysThreadEntry+0x104>
4001389c:	ebffd93d 	bl	40009d98 <_txe_event_flags_get>
400138a0:	e58d0020 	str	r0, [sp, #32]
400138a4:	e59d0020 	ldr	r0, [sp, #32]
400138a8:	e3500000 	cmp	r0, #0
400138ac:	0a000000 	beq	400138b4 <CyU3PSysThreadEntry+0x88>
400138b0:	ea00001d 	b	4001392c <CyU3PSysThreadEntry+0x100>
400138b4:	e3a04001 	mov	r4, #1
400138b8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400138bc:	e0000004 	and	r0, r0, r4
400138c0:	e58d0024 	str	r0, [sp, #36]	; 0x24
400138c4:	ea000014 	b	4001391c <CyU3PSysThreadEntry+0xf0>
400138c8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400138cc:	e3100001 	tst	r0, #1
400138d0:	0a000011 	beq	4001391c <CyU3PSysThreadEntry+0xf0>
400138d4:	e3a02000 	mov	r2, #0
400138d8:	e28d1008 	add	r1, sp, #8
400138dc:	e59f0058 	ldr	r0, [pc, #88]	; 4001393c <CyU3PSysThreadEntry+0x110>
400138e0:	ebffdae7 	bl	4000a484 <_txe_queue_receive>
400138e4:	e58d0020 	str	r0, [sp, #32]
400138e8:	e59d0020 	ldr	r0, [sp, #32]
400138ec:	e3500000 	cmp	r0, #0
400138f0:	1a000006 	bne	40013910 <CyU3PSysThreadEntry+0xe4>
400138f4:	e1dd00b8 	ldrh	r0, [sp, #8]
400138f8:	e2000902 	and	r0, r0, #32768	; 0x8000
400138fc:	e1b007a0 	lsrs	r0, r0, #15
40013900:	1a000005 	bne	4001391c <CyU3PSysThreadEntry+0xf0>
40013904:	e28d0008 	add	r0, sp, #8
40013908:	ebffffbd 	bl	40013804 <CyU3PSysFwMsgHandler>
4001390c:	ea000002 	b	4001391c <CyU3PSysThreadEntry+0xf0>
40013910:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013914:	e3c00001 	bic	r0, r0, #1
40013918:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001391c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013920:	e3500000 	cmp	r0, #0
40013924:	1affffe7 	bne	400138c8 <CyU3PSysThreadEntry+0x9c>
40013928:	e1a00000 	nop			; (mov r0, r0)
4001392c:	eaffffd3 	b	40013880 <CyU3PSysThreadEntry+0x54>
40013930:	400314a4 	.word	0x400314a4
40013934:	400313fc 	.word	0x400313fc
40013938:	40030ca0 	.word	0x40030ca0
4001393c:	400314cc 	.word	0x400314cc

Disassembly of section i.CyU3PSibApplicationDefine:

40013940 <CyU3PSibApplicationDefine>:
40013940:	e92d4010 	push	{r4, lr}
40013944:	e24dd020 	sub	sp, sp, #32
40013948:	e3a04000 	mov	r4, #0
4001394c:	e3a02028 	mov	r2, #40	; 0x28
40013950:	e3a01000 	mov	r1, #0
40013954:	e59f0064 	ldr	r0, [pc, #100]	; 400139c0 <CyU3PSibApplicationDefine+0x80>
40013958:	ebffd89e 	bl	40009bd8 <_txe_event_flags_create>
4001395c:	e3a00000 	mov	r0, #0
40013960:	e59f105c 	ldr	r1, [pc, #92]	; 400139c4 <CyU3PSibApplicationDefine+0x84>
40013964:	e5810000 	str	r0, [r1]
40013968:	e3a00b02 	mov	r0, #2048	; 0x800
4001396c:	ebffbf40 	bl	40003674 <CyU3PMemAlloc>
40013970:	e1a04000 	mov	r4, r0
40013974:	e3540000 	cmp	r4, #0
40013978:	0a00000e 	beq	400139b8 <CyU3PSibApplicationDefine+0x78>
4001397c:	e3a030a8 	mov	r3, #168	; 0xa8
40013980:	e3a02001 	mov	r2, #1
40013984:	e3a01000 	mov	r1, #0
40013988:	e3a00004 	mov	r0, #4
4001398c:	e28dc00c 	add	ip, sp, #12
40013990:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013994:	e3a02b02 	mov	r2, #2048	; 0x800
40013998:	e1a03001 	mov	r3, r1
4001399c:	e58d2004 	str	r2, [sp, #4]
400139a0:	e59f2020 	ldr	r2, [pc, #32]	; 400139c8 <CyU3PSibApplicationDefine+0x88>
400139a4:	e28f1020 	add	r1, pc, #32
400139a8:	e58d0008 	str	r0, [sp, #8]
400139ac:	e59f0028 	ldr	r0, [pc, #40]	; 400139dc <CyU3PSibApplicationDefine+0x9c>
400139b0:	e58d4000 	str	r4, [sp]
400139b4:	ebffdb02 	bl	4000a5c4 <_txe_thread_create>
400139b8:	e28dd020 	add	sp, sp, #32
400139bc:	e8bd8010 	pop	{r4, pc}
400139c0:	400315b0 	.word	0x400315b0
400139c4:	40030cac 	.word	0x40030cac
400139c8:	40013a38 	.word	0x40013a38
400139cc:	535f3630 	.word	0x535f3630
400139d0:	545f4249 	.word	0x545f4249
400139d4:	41455248 	.word	0x41455248
400139d8:	00000044 	.word	0x00000044
400139dc:	40031508 	.word	0x40031508

Disassembly of section i.CyU3PSibInitIntfParams:

400139e0 <CyU3PSibInitIntfParams>:
400139e0:	e0802100 	add	r2, r0, r0, lsl #2
400139e4:	e59f3048 	ldr	r3, [pc, #72]	; 40013a34 <CyU3PSibInitIntfParams+0x54>
400139e8:	e0831102 	add	r1, r3, r2, lsl #2
400139ec:	e3a020ff 	mov	r2, #255	; 0xff
400139f0:	e5c12000 	strb	r2, [r1]
400139f4:	e3a02002 	mov	r2, #2
400139f8:	e5c12008 	strb	r2, [r1, #8]
400139fc:	e3a02001 	mov	r2, #1
40013a00:	e5c12009 	strb	r2, [r1, #9]
40013a04:	e3a02000 	mov	r2, #0
40013a08:	e5c12010 	strb	r2, [r1, #16]
40013a0c:	e5c1200a 	strb	r2, [r1, #10]
40013a10:	e3a020ff 	mov	r2, #255	; 0xff
40013a14:	e5c1200b 	strb	r2, [r1, #11]
40013a18:	e3a02000 	mov	r2, #0
40013a1c:	e581200c 	str	r2, [r1, #12]
40013a20:	e3a02004 	mov	r2, #4
40013a24:	e5c12011 	strb	r2, [r1, #17]
40013a28:	e3a02000 	mov	r2, #0
40013a2c:	e5c12012 	strb	r2, [r1, #18]
40013a30:	e12fff1e 	bx	lr
40013a34:	400315d8 	.word	0x400315d8

Disassembly of section i.CyU3PSibThreadEntry:

40013a38 <CyU3PSibThreadEntry>:
40013a38:	e92d4010 	push	{r4, lr}
40013a3c:	e3a00000 	mov	r0, #0
40013a40:	ebffffe6 	bl	400139e0 <CyU3PSibInitIntfParams>
40013a44:	e3a00001 	mov	r0, #1
40013a48:	ebffffe4 	bl	400139e0 <CyU3PSibInitIntfParams>
40013a4c:	e3a00003 	mov	r0, #3
40013a50:	ebffff6c 	bl	40013808 <CyU3PSysModuleInitCompleteEvt>
40013a54:	ea000009 	b	40013a80 <CyU3PSibThreadEntry+0x48>
40013a58:	e59f0024 	ldr	r0, [pc, #36]	; 40013a84 <CyU3PSibThreadEntry+0x4c>
40013a5c:	e5900000 	ldr	r0, [r0]
40013a60:	e3500000 	cmp	r0, #0
40013a64:	0a000003 	beq	40013a78 <CyU3PSibThreadEntry+0x40>
40013a68:	e59f0014 	ldr	r0, [pc, #20]	; 40013a84 <CyU3PSibThreadEntry+0x4c>
40013a6c:	e5900000 	ldr	r0, [r0]
40013a70:	e12fff30 	blx	r0
40013a74:	ea000001 	b	40013a80 <CyU3PSibThreadEntry+0x48>
40013a78:	e3a0000a 	mov	r0, #10
40013a7c:	ebffd3fd 	bl	40008a78 <_tx_thread_sleep>
40013a80:	eafffff4 	b	40013a58 <CyU3PSibThreadEntry+0x20>
40013a84:	40030cac 	.word	0x40030cac

Disassembly of section i.CyU3PGpioSetClock:

40013a88 <CyU3PGpioSetClock>:
40013a88:	e92d4070 	push	{r4, r5, r6, lr}
40013a8c:	e1a04000 	mov	r4, r0
40013a90:	e3a05000 	mov	r5, #0
40013a94:	e5d40000 	ldrb	r0, [r4]
40013a98:	e3500002 	cmp	r0, #2
40013a9c:	ba000002 	blt	40013aac <CyU3PGpioSetClock+0x24>
40013aa0:	e5d40000 	ldrb	r0, [r4]
40013aa4:	e3500010 	cmp	r0, #16
40013aa8:	da000001 	ble	40013ab4 <CyU3PGpioSetClock+0x2c>
40013aac:	e3a00040 	mov	r0, #64	; 0x40
40013ab0:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ab4:	e5d40001 	ldrb	r0, [r4, #1]
40013ab8:	e3500000 	cmp	r0, #0
40013abc:	1a000004 	bne	40013ad4 <CyU3PGpioSetClock+0x4c>
40013ac0:	e5940004 	ldr	r0, [r4, #4]
40013ac4:	e3500000 	cmp	r0, #0
40013ac8:	0a000009 	beq	40013af4 <CyU3PGpioSetClock+0x6c>
40013acc:	e3a00040 	mov	r0, #64	; 0x40
40013ad0:	eafffff6 	b	40013ab0 <CyU3PGpioSetClock+0x28>
40013ad4:	e5d40001 	ldrb	r0, [r4, #1]
40013ad8:	e3500002 	cmp	r0, #2
40013adc:	ba000002 	blt	40013aec <CyU3PGpioSetClock+0x64>
40013ae0:	e5d40001 	ldrb	r0, [r4, #1]
40013ae4:	e3500040 	cmp	r0, #64	; 0x40
40013ae8:	da000001 	ble	40013af4 <CyU3PGpioSetClock+0x6c>
40013aec:	e3a00040 	mov	r0, #64	; 0x40
40013af0:	eaffffee 	b	40013ab0 <CyU3PGpioSetClock+0x28>
40013af4:	e5d40009 	ldrb	r0, [r4, #9]
40013af8:	e3500004 	cmp	r0, #4
40013afc:	ba000001 	blt	40013b08 <CyU3PGpioSetClock+0x80>
40013b00:	e3a00040 	mov	r0, #64	; 0x40
40013b04:	eaffffe9 	b	40013ab0 <CyU3PGpioSetClock+0x28>
40013b08:	e5d40008 	ldrb	r0, [r4, #8]
40013b0c:	e3500004 	cmp	r0, #4
40013b10:	ba000001 	blt	40013b1c <CyU3PGpioSetClock+0x94>
40013b14:	e3a00040 	mov	r0, #64	; 0x40
40013b18:	eaffffe4 	b	40013ab0 <CyU3PGpioSetClock+0x28>
40013b1c:	e5d40000 	ldrb	r0, [r4]
40013b20:	e2400001 	sub	r0, r0, #1
40013b24:	e5d41009 	ldrb	r1, [r4, #9]
40013b28:	e1800281 	orr	r0, r0, r1, lsl #5
40013b2c:	e5d41008 	ldrb	r1, [r4, #8]
40013b30:	e1800381 	orr	r0, r0, r1, lsl #7
40013b34:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013b38:	e5940004 	ldr	r0, [r4, #4]
40013b3c:	e3500000 	cmp	r0, #0
40013b40:	0a000000 	beq	40013b48 <CyU3PGpioSetClock+0xc0>
40013b44:	e3855010 	orr	r5, r5, #16
40013b48:	e59f0030 	ldr	r0, [pc, #48]	; 40013b80 <CyU3PGpioSetClock+0xf8>
40013b4c:	e5805018 	str	r5, [r0, #24]
40013b50:	e5d40001 	ldrb	r0, [r4, #1]
40013b54:	e3500000 	cmp	r0, #0
40013b58:	0a000006 	beq	40013b78 <CyU3PGpioSetClock+0xf0>
40013b5c:	e3a00001 	mov	r0, #1
40013b60:	ebfffe72 	bl	40013530 <CyU3PBusyWait>
40013b64:	e5d40001 	ldrb	r0, [r4, #1]
40013b68:	e2400001 	sub	r0, r0, #1
40013b6c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013b70:	e59f1008 	ldr	r1, [pc, #8]	; 40013b80 <CyU3PGpioSetClock+0xf8>
40013b74:	e581001c 	str	r0, [r1, #28]
40013b78:	e3a00000 	mov	r0, #0
40013b7c:	eaffffcb 	b	40013ab0 <CyU3PGpioSetClock+0x28>
40013b80:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013b84 <CyU3PI2cSetClock>:
40013b84:	e92d4070 	push	{r4, r5, r6, lr}
40013b88:	e1a05000 	mov	r5, r0
40013b8c:	e3a06000 	mov	r6, #0
40013b90:	e3550000 	cmp	r5, #0
40013b94:	1a000001 	bne	40013ba0 <CyU3PI2cSetClock+0x1c>
40013b98:	e3a00040 	mov	r0, #64	; 0x40
40013b9c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ba0:	e0852105 	add	r2, r5, r5, lsl #2
40013ba4:	e1a01082 	lsl	r1, r2, #1
40013ba8:	e59f207c 	ldr	r2, [pc, #124]	; 40013c2c <CyU3PI2cSetClock+0xa8>
40013bac:	e5922000 	ldr	r2, [r2]
40013bb0:	e1a00122 	lsr	r0, r2, #2
40013bb4:	ebfff39b 	bl	40010a28 <__aeabi_uidivmod>
40013bb8:	e1a04000 	mov	r4, r0
40013bbc:	e3140003 	tst	r4, #3
40013bc0:	1a000001 	bne	40013bcc <CyU3PI2cSetClock+0x48>
40013bc4:	e1a04144 	asr	r4, r4, #2
40013bc8:	ea00000a 	b	40013bf8 <CyU3PI2cSetClock+0x74>
40013bcc:	e2040003 	and	r0, r4, #3
40013bd0:	e3500001 	cmp	r0, #1
40013bd4:	0a000002 	beq	40013be4 <CyU3PI2cSetClock+0x60>
40013bd8:	e2040003 	and	r0, r4, #3
40013bdc:	e3500002 	cmp	r0, #2
40013be0:	1a000002 	bne	40013bf0 <CyU3PI2cSetClock+0x6c>
40013be4:	e1a04144 	asr	r4, r4, #2
40013be8:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013bec:	ea000001 	b	40013bf8 <CyU3PI2cSetClock+0x74>
40013bf0:	e3a00001 	mov	r0, #1
40013bf4:	e0804144 	add	r4, r0, r4, asr #2
40013bf8:	e2444001 	sub	r4, r4, #1
40013bfc:	e3540001 	cmp	r4, #1
40013c00:	ba000001 	blt	40013c0c <CyU3PI2cSetClock+0x88>
40013c04:	e3540a01 	cmp	r4, #4096	; 0x1000
40013c08:	ba000001 	blt	40013c14 <CyU3PI2cSetClock+0x90>
40013c0c:	e3a00040 	mov	r0, #64	; 0x40
40013c10:	eaffffe1 	b	40013b9c <CyU3PI2cSetClock+0x18>
40013c14:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013c18:	e1866000 	orr	r6, r6, r0
40013c1c:	e59f000c 	ldr	r0, [pc, #12]	; 40013c30 <CyU3PI2cSetClock+0xac>
40013c20:	e5806020 	str	r6, [r0, #32]
40013c24:	e3a00000 	mov	r0, #0
40013c28:	eaffffdb 	b	40013b9c <CyU3PI2cSetClock+0x18>
40013c2c:	40030c6c 	.word	0x40030c6c
40013c30:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013c34 <CyU3PLppApplicationDefine>:
40013c34:	e92d4010 	push	{r4, lr}
40013c38:	e24dd020 	sub	sp, sp, #32
40013c3c:	e3a00b01 	mov	r0, #1024	; 0x400
40013c40:	ebffbe8b 	bl	40003674 <CyU3PMemAlloc>
40013c44:	e1a04000 	mov	r4, r0
40013c48:	e3a030a8 	mov	r3, #168	; 0xa8
40013c4c:	e3a02001 	mov	r2, #1
40013c50:	e3a01000 	mov	r1, #0
40013c54:	e3a00004 	mov	r0, #4
40013c58:	e28dc00c 	add	ip, sp, #12
40013c5c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013c60:	e3a02b01 	mov	r2, #1024	; 0x400
40013c64:	e1a03001 	mov	r3, r1
40013c68:	e58d2004 	str	r2, [sp, #4]
40013c6c:	e59f2054 	ldr	r2, [pc, #84]	; 40013cc8 <CyU3PLppApplicationDefine+0x94>
40013c70:	e28f1054 	add	r1, pc, #84	; 0x54
40013c74:	e58d0008 	str	r0, [sp, #8]
40013c78:	e59f005c 	ldr	r0, [pc, #92]	; 40013cdc <CyU3PLppApplicationDefine+0xa8>
40013c7c:	e58d4000 	str	r4, [sp]
40013c80:	ebffda4f 	bl	4000a5c4 <_txe_thread_create>
40013c84:	e3a02028 	mov	r2, #40	; 0x28
40013c88:	e3a01000 	mov	r1, #0
40013c8c:	e59f004c 	ldr	r0, [pc, #76]	; 40013ce0 <CyU3PLppApplicationDefine+0xac>
40013c90:	ebffd7d0 	bl	40009bd8 <_txe_event_flags_create>
40013c94:	e3a00040 	mov	r0, #64	; 0x40
40013c98:	ebffbe75 	bl	40003674 <CyU3PMemAlloc>
40013c9c:	e1a04000 	mov	r4, r0
40013ca0:	e3a0303c 	mov	r3, #60	; 0x3c
40013ca4:	e3a02040 	mov	r2, #64	; 0x40
40013ca8:	e1cd20f0 	strd	r2, [sp]
40013cac:	e1a03004 	mov	r3, r4
40013cb0:	e3a02005 	mov	r2, #5
40013cb4:	e3a01000 	mov	r1, #0
40013cb8:	e59f0024 	ldr	r0, [pc, #36]	; 40013ce4 <CyU3PLppApplicationDefine+0xb0>
40013cbc:	ebffd95a 	bl	4000a22c <_txe_queue_create>
40013cc0:	e28dd020 	add	sp, sp, #32
40013cc4:	e8bd8010 	pop	{r4, pc}
40013cc8:	40014028 	.word	0x40014028
40013ccc:	4c5f3530 	.word	0x4c5f3530
40013cd0:	545f5050 	.word	0x545f5050
40013cd4:	41455248 	.word	0x41455248
40013cd8:	00000044 	.word	0x00000044
40013cdc:	4003163c 	.word	0x4003163c
40013ce0:	40031614 	.word	0x40031614
40013ce4:	400316e4 	.word	0x400316e4

Disassembly of section i.CyU3PLppEventSend:

40013ce8 <CyU3PLppEventSend>:
40013ce8:	e92d4070 	push	{r4, r5, r6, lr}
40013cec:	e1a04000 	mov	r4, r0
40013cf0:	e3a02000 	mov	r2, #0
40013cf4:	e1a01004 	mov	r1, r4
40013cf8:	e59f000c 	ldr	r0, [pc, #12]	; 40013d0c <CyU3PLppEventSend+0x24>
40013cfc:	ebffd855 	bl	40009e58 <_txe_event_flags_set>
40013d00:	e1a05000 	mov	r5, r0
40013d04:	e1a00005 	mov	r0, r5
40013d08:	e8bd8070 	pop	{r4, r5, r6, pc}
40013d0c:	40031614 	.word	0x40031614

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013d10 <CyU3PLppGpioBlockIsOn>:
40013d10:	e59f0004 	ldr	r0, [pc, #4]	; 40013d1c <CyU3PLppGpioBlockIsOn+0xc>
40013d14:	e5900000 	ldr	r0, [r0]
40013d18:	e12fff1e 	bx	lr
40013d1c:	40030c88 	.word	0x40030c88

Disassembly of section i.CyU3PLppInit:

40013d20 <CyU3PLppInit>:
40013d20:	e92d4070 	push	{r4, r5, r6, lr}
40013d24:	e1a04000 	mov	r4, r0
40013d28:	e1a05001 	mov	r5, r1
40013d2c:	e3a06000 	mov	r6, #0
40013d30:	e3a00001 	mov	r0, #1
40013d34:	e59f1174 	ldr	r1, [pc, #372]	; 40013eb0 <CyU3PLppInit+0x190>
40013d38:	e5d11000 	ldrb	r1, [r1]
40013d3c:	e1110410 	tst	r1, r0, lsl r4
40013d40:	0a000001 	beq	40013d4c <CyU3PLppInit+0x2c>
40013d44:	e3a00043 	mov	r0, #67	; 0x43
40013d48:	e8bd8070 	pop	{r4, r5, r6, pc}
40013d4c:	e3540001 	cmp	r4, #1
40013d50:	1a000004 	bne	40013d68 <CyU3PLppInit+0x48>
40013d54:	eb000310 	bl	4001499c <CyFx3DevIsI2sSupported>
40013d58:	e3500000 	cmp	r0, #0
40013d5c:	1a000001 	bne	40013d68 <CyU3PLppInit+0x48>
40013d60:	e3a00046 	mov	r0, #70	; 0x46
40013d64:	eafffff7 	b	40013d48 <CyU3PLppInit+0x28>
40013d68:	e3540005 	cmp	r4, #5
40013d6c:	308ff104 	addcc	pc, pc, r4, lsl #2
40013d70:	ea000027 	b	40013e14 <CyU3PLppInit+0xf4>
40013d74:	ea000003 	b	40013d88 <CyU3PLppInit+0x68>
40013d78:	ea000009 	b	40013da4 <CyU3PLppInit+0x84>
40013d7c:	ea00000f 	b	40013dc0 <CyU3PLppInit+0xa0>
40013d80:	ea000015 	b	40013ddc <CyU3PLppInit+0xbc>
40013d84:	ea00001b 	b	40013df8 <CyU3PLppInit+0xd8>
40013d88:	e1a00000 	nop			; (mov r0, r0)
40013d8c:	e59f0120 	ldr	r0, [pc, #288]	; 40013eb4 <CyU3PLppInit+0x194>
40013d90:	e5900020 	ldr	r0, [r0, #32]
40013d94:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013d98:	0a000000 	beq	40013da0 <CyU3PLppInit+0x80>
40013d9c:	e3a06001 	mov	r6, #1
40013da0:	ea00001b 	b	40013e14 <CyU3PLppInit+0xf4>
40013da4:	e1a00000 	nop			; (mov r0, r0)
40013da8:	e59f0104 	ldr	r0, [pc, #260]	; 40013eb4 <CyU3PLppInit+0x194>
40013dac:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013db0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013db4:	0a000000 	beq	40013dbc <CyU3PLppInit+0x9c>
40013db8:	e3a06001 	mov	r6, #1
40013dbc:	ea000014 	b	40013e14 <CyU3PLppInit+0xf4>
40013dc0:	e1a00000 	nop			; (mov r0, r0)
40013dc4:	e59f00e8 	ldr	r0, [pc, #232]	; 40013eb4 <CyU3PLppInit+0x194>
40013dc8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013dcc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013dd0:	0a000000 	beq	40013dd8 <CyU3PLppInit+0xb8>
40013dd4:	e3a06001 	mov	r6, #1
40013dd8:	ea00000d 	b	40013e14 <CyU3PLppInit+0xf4>
40013ddc:	e1a00000 	nop			; (mov r0, r0)
40013de0:	e59f00cc 	ldr	r0, [pc, #204]	; 40013eb4 <CyU3PLppInit+0x194>
40013de4:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013de8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013dec:	0a000000 	beq	40013df4 <CyU3PLppInit+0xd4>
40013df0:	e3a06001 	mov	r6, #1
40013df4:	ea000006 	b	40013e14 <CyU3PLppInit+0xf4>
40013df8:	e1a00000 	nop			; (mov r0, r0)
40013dfc:	e59f00b0 	ldr	r0, [pc, #176]	; 40013eb4 <CyU3PLppInit+0x194>
40013e00:	e5900018 	ldr	r0, [r0, #24]
40013e04:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013e08:	0a000000 	beq	40013e10 <CyU3PLppInit+0xf0>
40013e0c:	e3a06001 	mov	r6, #1
40013e10:	e1a00000 	nop			; (mov r0, r0)
40013e14:	e1a00000 	nop			; (mov r0, r0)
40013e18:	e3560000 	cmp	r6, #0
40013e1c:	1a000001 	bne	40013e28 <CyU3PLppInit+0x108>
40013e20:	e3a00047 	mov	r0, #71	; 0x47
40013e24:	eaffffc7 	b	40013d48 <CyU3PLppInit+0x28>
40013e28:	e59f0080 	ldr	r0, [pc, #128]	; 40013eb0 <CyU3PLppInit+0x190>
40013e2c:	e5d00000 	ldrb	r0, [r0]
40013e30:	e3500000 	cmp	r0, #0
40013e34:	1a000017 	bne	40013e98 <CyU3PLppInit+0x178>
40013e38:	e59f0078 	ldr	r0, [pc, #120]	; 40013eb8 <CyU3PLppInit+0x198>
40013e3c:	e5900000 	ldr	r0, [r0]
40013e40:	e3500000 	cmp	r0, #0
40013e44:	1a000010 	bne	40013e8c <CyU3PLppInit+0x16c>
40013e48:	e59f006c 	ldr	r0, [pc, #108]	; 40013ebc <CyU3PLppInit+0x19c>
40013e4c:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013e50:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40013e54:	e59f1060 	ldr	r1, [pc, #96]	; 40013ebc <CyU3PLppInit+0x19c>
40013e58:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013e5c:	e3a0000a 	mov	r0, #10
40013e60:	ebfffdb2 	bl	40013530 <CyU3PBusyWait>
40013e64:	e59f0050 	ldr	r0, [pc, #80]	; 40013ebc <CyU3PLppInit+0x19c>
40013e68:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013e6c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013e70:	e59f1044 	ldr	r1, [pc, #68]	; 40013ebc <CyU3PLppInit+0x19c>
40013e74:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013e78:	e1a00000 	nop			; (mov r0, r0)
40013e7c:	e59f0038 	ldr	r0, [pc, #56]	; 40013ebc <CyU3PLppInit+0x19c>
40013e80:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013e84:	e3100001 	tst	r0, #1
40013e88:	0afffffb 	beq	40013e7c <CyU3PLppInit+0x15c>
40013e8c:	eb000051 	bl	40013fd8 <CyU3PLppSocketInit>
40013e90:	e3a00014 	mov	r0, #20
40013e94:	eb003828 	bl	40021f3c <CyU3PVicEnableInt>
40013e98:	e1a02005 	mov	r2, r5
40013e9c:	e3a01001 	mov	r1, #1
40013ea0:	e1a00004 	mov	r0, r4
40013ea4:	eb0000f1 	bl	40014270 <CyU3UpdateLppActiveInfo>
40013ea8:	e3a00000 	mov	r0, #0
40013eac:	eaffffa5 	b	40013d48 <CyU3PLppInit+0x28>
40013eb0:	40030cb0 	.word	0x40030cb0
40013eb4:	e0052000 	.word	0xe0052000
40013eb8:	40030c88 	.word	0x40030c88
40013ebc:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40013ec0 <CyU3PLppRestoreState>:
40013ec0:	e92d4070 	push	{r4, r5, r6, lr}
40013ec4:	e1a04000 	mov	r4, r0
40013ec8:	e3a00000 	mov	r0, #0
40013ecc:	e59f10ec 	ldr	r1, [pc, #236]	; 40013fc0 <CyU3PLppRestoreState+0x100>
40013ed0:	e5c10000 	strb	r0, [r1]
40013ed4:	e5940000 	ldr	r0, [r4]
40013ed8:	e59f10e4 	ldr	r1, [pc, #228]	; 40013fc4 <CyU3PLppRestoreState+0x104>
40013edc:	e5810018 	str	r0, [r1, #24]
40013ee0:	e3a00001 	mov	r0, #1
40013ee4:	ebfffd91 	bl	40013530 <CyU3PBusyWait>
40013ee8:	e5940004 	ldr	r0, [r4, #4]
40013eec:	e59f10d0 	ldr	r1, [pc, #208]	; 40013fc4 <CyU3PLppRestoreState+0x104>
40013ef0:	e581001c 	str	r0, [r1, #28]
40013ef4:	e3a00001 	mov	r0, #1
40013ef8:	ebfffd8c 	bl	40013530 <CyU3PBusyWait>
40013efc:	e5940008 	ldr	r0, [r4, #8]
40013f00:	e59f10c0 	ldr	r1, [pc, #192]	; 40013fc8 <CyU3PLppRestoreState+0x108>
40013f04:	e581000c 	str	r0, [r1, #12]
40013f08:	e3a00001 	mov	r0, #1
40013f0c:	ebfffd87 	bl	40013530 <CyU3PBusyWait>
40013f10:	e594000c 	ldr	r0, [r4, #12]
40013f14:	e59f10ac 	ldr	r1, [pc, #172]	; 40013fc8 <CyU3PLppRestoreState+0x108>
40013f18:	e5810010 	str	r0, [r1, #16]
40013f1c:	e3a00001 	mov	r0, #1
40013f20:	ebfffd82 	bl	40013530 <CyU3PBusyWait>
40013f24:	e5940010 	ldr	r0, [r4, #16]
40013f28:	e59f1098 	ldr	r1, [pc, #152]	; 40013fc8 <CyU3PLppRestoreState+0x108>
40013f2c:	e5810008 	str	r0, [r1, #8]
40013f30:	e3a00001 	mov	r0, #1
40013f34:	ebfffd7d 	bl	40013530 <CyU3PBusyWait>
40013f38:	e3a00004 	mov	r0, #4
40013f3c:	e5941014 	ldr	r1, [r4, #20]
40013f40:	ebffff76 	bl	40013d20 <CyU3PLppInit>
40013f44:	e3a00001 	mov	r0, #1
40013f48:	ebfffd78 	bl	40013530 <CyU3PBusyWait>
40013f4c:	e59f0078 	ldr	r0, [pc, #120]	; 40013fcc <CyU3PLppRestoreState+0x10c>
40013f50:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013f54:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013f58:	e59f106c 	ldr	r1, [pc, #108]	; 40013fcc <CyU3PLppRestoreState+0x10c>
40013f5c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40013f60:	e3a0000a 	mov	r0, #10
40013f64:	ebfffd71 	bl	40013530 <CyU3PBusyWait>
40013f68:	e1a00000 	nop			; (mov r0, r0)
40013f6c:	e59f0058 	ldr	r0, [pc, #88]	; 40013fcc <CyU3PLppRestoreState+0x10c>
40013f70:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013f74:	e3100001 	tst	r0, #1
40013f78:	0afffffb 	beq	40013f6c <CyU3PLppRestoreState+0xac>
40013f7c:	e3a05000 	mov	r5, #0
40013f80:	ea000006 	b	40013fa0 <CyU3PLppRestoreState+0xe0>
40013f84:	e2850006 	add	r0, r5, #6
40013f88:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40013f8c:	e59f103c 	ldr	r1, [pc, #60]	; 40013fd0 <CyU3PLppRestoreState+0x110>
40013f90:	e7810105 	str	r0, [r1, r5, lsl #2]
40013f94:	e3a00001 	mov	r0, #1
40013f98:	ebfffd64 	bl	40013530 <CyU3PBusyWait>
40013f9c:	e2855001 	add	r5, r5, #1
40013fa0:	e355003d 	cmp	r5, #61	; 0x3d
40013fa4:	3afffff6 	bcc	40013f84 <CyU3PLppRestoreState+0xc4>
40013fa8:	e59f0024 	ldr	r0, [pc, #36]	; 40013fd4 <CyU3PLppRestoreState+0x114>
40013fac:	e5900000 	ldr	r0, [r0]
40013fb0:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40013fb4:	e59f1018 	ldr	r1, [pc, #24]	; 40013fd4 <CyU3PLppRestoreState+0x114>
40013fb8:	e5810000 	str	r0, [r1]
40013fbc:	e8bd8070 	pop	{r4, r5, r6, pc}
40013fc0:	40030cb0 	.word	0x40030cb0
40013fc4:	e0052000 	.word	0xe0052000
40013fc8:	e0051000 	.word	0xe0051000
40013fcc:	e0001000 	.word	0xe0001000
40013fd0:	e0001100 	.word	0xe0001100
40013fd4:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40013fd8 <CyU3PLppSocketInit>:
40013fd8:	e3a00000 	mov	r0, #0
40013fdc:	ea00000d 	b	40014018 <CyU3PLppSocketInit+0x40>
40013fe0:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40013fe4:	e59f2038 	ldr	r2, [pc, #56]	; 40014024 <CyU3PLppSocketInit+0x4c>
40013fe8:	e0822380 	add	r2, r2, r0, lsl #7
40013fec:	e582100c 	str	r1, [r2, #12]
40013ff0:	e3e01000 	mvn	r1, #0
40013ff4:	e59f2028 	ldr	r2, [pc, #40]	; 40014024 <CyU3PLppSocketInit+0x4c>
40013ff8:	e0822380 	add	r2, r2, r0, lsl #7
40013ffc:	e5821010 	str	r1, [r2, #16]
40014000:	e3a01000 	mov	r1, #0
40014004:	e59f2018 	ldr	r2, [pc, #24]	; 40014024 <CyU3PLppSocketInit+0x4c>
40014008:	e0822380 	add	r2, r2, r0, lsl #7
4001400c:	e5821014 	str	r1, [r2, #20]
40014010:	e2801001 	add	r1, r0, #1
40014014:	e20100ff 	and	r0, r1, #255	; 0xff
40014018:	e3500008 	cmp	r0, #8
4001401c:	baffffef 	blt	40013fe0 <CyU3PLppSocketInit+0x8>
40014020:	e12fff1e 	bx	lr
40014024:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40014028 <CyU3PLppThreadEntry>:
40014028:	e92d4010 	push	{r4, lr}
4001402c:	e24dd020 	sub	sp, sp, #32
40014030:	e3a00006 	mov	r0, #6
40014034:	ebfffdf3 	bl	40013808 <CyU3PSysModuleInitCompleteEvt>
40014038:	e3a000f1 	mov	r0, #241	; 0xf1
4001403c:	e59f1144 	ldr	r1, [pc, #324]	; 40014188 <CyU3PLppThreadEntry+0x160>
40014040:	e5810000 	str	r0, [r1]
40014044:	e1a00000 	nop			; (mov r0, r0)
40014048:	e3e03000 	mvn	r3, #0
4001404c:	e58d3000 	str	r3, [sp]
40014050:	e28d301c 	add	r3, sp, #28
40014054:	e3a02001 	mov	r2, #1
40014058:	e59f0128 	ldr	r0, [pc, #296]	; 40014188 <CyU3PLppThreadEntry+0x160>
4001405c:	e5901000 	ldr	r1, [r0]
40014060:	e59f0124 	ldr	r0, [pc, #292]	; 4001418c <CyU3PLppThreadEntry+0x164>
40014064:	ebffd74b 	bl	40009d98 <_txe_event_flags_get>
40014068:	e1a04000 	mov	r4, r0
4001406c:	e59f1114 	ldr	r1, [pc, #276]	; 40014188 <CyU3PLppThreadEntry+0x160>
40014070:	e59d001c 	ldr	r0, [sp, #28]
40014074:	e5911000 	ldr	r1, [r1]
40014078:	e0000001 	and	r0, r0, r1
4001407c:	e58d001c 	str	r0, [sp, #28]
40014080:	e3540000 	cmp	r4, #0
40014084:	0a000000 	beq	4001408c <CyU3PLppThreadEntry+0x64>
40014088:	eaffffee 	b	40014048 <CyU3PLppThreadEntry+0x20>
4001408c:	ea000009 	b	400140b8 <CyU3PLppThreadEntry+0x90>
40014090:	e3a02000 	mov	r2, #0
40014094:	e28d1008 	add	r1, sp, #8
40014098:	e59f00f0 	ldr	r0, [pc, #240]	; 40014190 <CyU3PLppThreadEntry+0x168>
4001409c:	ebffd8f8 	bl	4000a484 <_txe_queue_receive>
400140a0:	e1a04000 	mov	r4, r0
400140a4:	e3540000 	cmp	r4, #0
400140a8:	0a000002 	beq	400140b8 <CyU3PLppThreadEntry+0x90>
400140ac:	e59d001c 	ldr	r0, [sp, #28]
400140b0:	e3c00001 	bic	r0, r0, #1
400140b4:	e58d001c 	str	r0, [sp, #28]
400140b8:	e59d001c 	ldr	r0, [sp, #28]
400140bc:	e3100001 	tst	r0, #1
400140c0:	1afffff2 	bne	40014090 <CyU3PLppThreadEntry+0x68>
400140c4:	e59d001c 	ldr	r0, [sp, #28]
400140c8:	e3100020 	tst	r0, #32
400140cc:	0a000008 	beq	400140f4 <CyU3PLppThreadEntry+0xcc>
400140d0:	e59f00bc 	ldr	r0, [pc, #188]	; 40014194 <CyU3PLppThreadEntry+0x16c>
400140d4:	e5900000 	ldr	r0, [r0]
400140d8:	e3500000 	cmp	r0, #0
400140dc:	0a000002 	beq	400140ec <CyU3PLppThreadEntry+0xc4>
400140e0:	e59f10ac 	ldr	r1, [pc, #172]	; 40014194 <CyU3PLppThreadEntry+0x16c>
400140e4:	e5910000 	ldr	r0, [r1]
400140e8:	e12fff30 	blx	r0
400140ec:	e3a0000f 	mov	r0, #15
400140f0:	eb003791 	bl	40021f3c <CyU3PVicEnableInt>
400140f4:	e59d001c 	ldr	r0, [sp, #28]
400140f8:	e3100010 	tst	r0, #16
400140fc:	0a000008 	beq	40014124 <CyU3PLppThreadEntry+0xfc>
40014100:	e59f008c 	ldr	r0, [pc, #140]	; 40014194 <CyU3PLppThreadEntry+0x16c>
40014104:	e5900004 	ldr	r0, [r0, #4]
40014108:	e3500000 	cmp	r0, #0
4001410c:	0a000002 	beq	4001411c <CyU3PLppThreadEntry+0xf4>
40014110:	e59f107c 	ldr	r1, [pc, #124]	; 40014194 <CyU3PLppThreadEntry+0x16c>
40014114:	e5910004 	ldr	r0, [r1, #4]
40014118:	e12fff30 	blx	r0
4001411c:	e3a00010 	mov	r0, #16
40014120:	eb003785 	bl	40021f3c <CyU3PVicEnableInt>
40014124:	e59d001c 	ldr	r0, [sp, #28]
40014128:	e3100080 	tst	r0, #128	; 0x80
4001412c:	0a000008 	beq	40014154 <CyU3PLppThreadEntry+0x12c>
40014130:	e59f005c 	ldr	r0, [pc, #92]	; 40014194 <CyU3PLppThreadEntry+0x16c>
40014134:	e5900008 	ldr	r0, [r0, #8]
40014138:	e3500000 	cmp	r0, #0
4001413c:	0a000002 	beq	4001414c <CyU3PLppThreadEntry+0x124>
40014140:	e59f104c 	ldr	r1, [pc, #76]	; 40014194 <CyU3PLppThreadEntry+0x16c>
40014144:	e5910008 	ldr	r0, [r1, #8]
40014148:	e12fff30 	blx	r0
4001414c:	e3a00011 	mov	r0, #17
40014150:	eb003779 	bl	40021f3c <CyU3PVicEnableInt>
40014154:	e59d001c 	ldr	r0, [sp, #28]
40014158:	e3100040 	tst	r0, #64	; 0x40
4001415c:	0a000008 	beq	40014184 <CyU3PLppThreadEntry+0x15c>
40014160:	e59f002c 	ldr	r0, [pc, #44]	; 40014194 <CyU3PLppThreadEntry+0x16c>
40014164:	e590000c 	ldr	r0, [r0, #12]
40014168:	e3500000 	cmp	r0, #0
4001416c:	0a000002 	beq	4001417c <CyU3PLppThreadEntry+0x154>
40014170:	e59f101c 	ldr	r1, [pc, #28]	; 40014194 <CyU3PLppThreadEntry+0x16c>
40014174:	e591000c 	ldr	r0, [r1, #12]
40014178:	e12fff30 	blx	r0
4001417c:	e3a00012 	mov	r0, #18
40014180:	eb00376d 	bl	40021f3c <CyU3PVicEnableInt>
40014184:	eaffffaf 	b	40014048 <CyU3PLppThreadEntry+0x20>
40014188:	40030cb4 	.word	0x40030cb4
4001418c:	40031614 	.word	0x40031614
40014190:	400316e4 	.word	0x400316e4
40014194:	40031600 	.word	0x40031600

Disassembly of section i.CyU3PUartSetClock:

40014198 <CyU3PUartSetClock>:
40014198:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001419c:	e1a04000 	mov	r4, r0
400141a0:	e3a06000 	mov	r6, #0
400141a4:	e59f00bc 	ldr	r0, [pc, #188]	; 40014268 <CyU3PUartSetClock+0xd0>
400141a8:	e5907000 	ldr	r7, [r0]
400141ac:	e3540000 	cmp	r4, #0
400141b0:	1a000001 	bne	400141bc <CyU3PUartSetClock+0x24>
400141b4:	e3a00040 	mov	r0, #64	; 0x40
400141b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400141bc:	e3540f96 	cmp	r4, #600	; 0x258
400141c0:	2a000002 	bcs	400141d0 <CyU3PUartSetClock+0x38>
400141c4:	e59f009c 	ldr	r0, [pc, #156]	; 40014268 <CyU3PUartSetClock+0xd0>
400141c8:	e5900000 	ldr	r0, [r0]
400141cc:	e1a07220 	lsr	r7, r0, #4
400141d0:	e1a01204 	lsl	r1, r4, #4
400141d4:	e1a00107 	lsl	r0, r7, #2
400141d8:	ebfff212 	bl	40010a28 <__aeabi_uidivmod>
400141dc:	e1a05000 	mov	r5, r0
400141e0:	e3150003 	tst	r5, #3
400141e4:	1a000001 	bne	400141f0 <CyU3PUartSetClock+0x58>
400141e8:	e1a05145 	asr	r5, r5, #2
400141ec:	ea00000a 	b	4001421c <CyU3PUartSetClock+0x84>
400141f0:	e2050003 	and	r0, r5, #3
400141f4:	e3500001 	cmp	r0, #1
400141f8:	0a000002 	beq	40014208 <CyU3PUartSetClock+0x70>
400141fc:	e2050003 	and	r0, r5, #3
40014200:	e3500002 	cmp	r0, #2
40014204:	1a000002 	bne	40014214 <CyU3PUartSetClock+0x7c>
40014208:	e1a05145 	asr	r5, r5, #2
4001420c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40014210:	ea000001 	b	4001421c <CyU3PUartSetClock+0x84>
40014214:	e3a00001 	mov	r0, #1
40014218:	e0805145 	add	r5, r0, r5, asr #2
4001421c:	e2455001 	sub	r5, r5, #1
40014220:	e3550001 	cmp	r5, #1
40014224:	ba000001 	blt	40014230 <CyU3PUartSetClock+0x98>
40014228:	e3550801 	cmp	r5, #65536	; 0x10000
4001422c:	ba000001 	blt	40014238 <CyU3PUartSetClock+0xa0>
40014230:	e3a00040 	mov	r0, #64	; 0x40
40014234:	eaffffdf 	b	400141b8 <CyU3PUartSetClock+0x20>
40014238:	e3540f96 	cmp	r4, #600	; 0x258
4001423c:	2a000002 	bcs	4001424c <CyU3PUartSetClock+0xb4>
40014240:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014244:	e1866000 	orr	r6, r6, r0
40014248:	ea000002 	b	40014258 <CyU3PUartSetClock+0xc0>
4001424c:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014250:	e3800806 	orr	r0, r0, #393216	; 0x60000
40014254:	e1866000 	orr	r6, r6, r0
40014258:	e59f000c 	ldr	r0, [pc, #12]	; 4001426c <CyU3PUartSetClock+0xd4>
4001425c:	e5806024 	str	r6, [r0, #36]	; 0x24
40014260:	e3a00000 	mov	r0, #0
40014264:	eaffffd3 	b	400141b8 <CyU3PUartSetClock+0x20>
40014268:	40030c6c 	.word	0x40030c6c
4001426c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

40014270 <CyU3UpdateLppActiveInfo>:
40014270:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014274:	e1a04000 	mov	r4, r0
40014278:	e1a05001 	mov	r5, r1
4001427c:	e1a06002 	mov	r6, r2
40014280:	e3a00001 	mov	r0, #1
40014284:	e1a00410 	lsl	r0, r0, r4
40014288:	e20070ff 	and	r7, r0, #255	; 0xff
4001428c:	e284000f 	add	r0, r4, #15
40014290:	e20080ff 	and	r8, r0, #255	; 0xff
40014294:	e59f0050 	ldr	r0, [pc, #80]	; 400142ec <CyU3UpdateLppActiveInfo+0x7c>
40014298:	e7806104 	str	r6, [r0, r4, lsl #2]
4001429c:	e3550000 	cmp	r5, #0
400142a0:	0a000009 	beq	400142cc <CyU3UpdateLppActiveInfo+0x5c>
400142a4:	e3560000 	cmp	r6, #0
400142a8:	0a000001 	beq	400142b4 <CyU3UpdateLppActiveInfo+0x44>
400142ac:	e1a00008 	mov	r0, r8
400142b0:	eb003721 	bl	40021f3c <CyU3PVicEnableInt>
400142b4:	e59f0034 	ldr	r0, [pc, #52]	; 400142f0 <CyU3UpdateLppActiveInfo+0x80>
400142b8:	e5d00000 	ldrb	r0, [r0]
400142bc:	e1800007 	orr	r0, r0, r7
400142c0:	e59f1028 	ldr	r1, [pc, #40]	; 400142f0 <CyU3UpdateLppActiveInfo+0x80>
400142c4:	e5c10000 	strb	r0, [r1]
400142c8:	ea000006 	b	400142e8 <CyU3UpdateLppActiveInfo+0x78>
400142cc:	e59f001c 	ldr	r0, [pc, #28]	; 400142f0 <CyU3UpdateLppActiveInfo+0x80>
400142d0:	e5d00000 	ldrb	r0, [r0]
400142d4:	e1c00007 	bic	r0, r0, r7
400142d8:	e59f1010 	ldr	r1, [pc, #16]	; 400142f0 <CyU3UpdateLppActiveInfo+0x80>
400142dc:	e5c10000 	strb	r0, [r1]
400142e0:	e1a00008 	mov	r0, r8
400142e4:	eb00370f 	bl	40021f28 <CyU3PVicDisableInt>
400142e8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400142ec:	40031600 	.word	0x40031600
400142f0:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevClearSwInterrupt:

400142f4 <CyFx3DevClearSwInterrupt>:
400142f4:	e59f000c 	ldr	r0, [pc, #12]	; 40014308 <CyFx3DevClearSwInterrupt+0x14>
400142f8:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
400142fc:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
40014300:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014304:	e12fff1e 	bx	lr
40014308:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

4001430c <CyFx3DevIOConfigure>:
4001430c:	e92d4030 	push	{r4, r5, lr}
40014310:	e1b04000 	movs	r4, r0
40014314:	e24dd024 	sub	sp, sp, #36	; 0x24
40014318:	0a000045 	beq	40014434 <CyFx3DevIOConfigure+0x128>
4001431c:	eb00017b 	bl	40014910 <CyFx3DevIsGpif32Supported>
40014320:	e3500000 	cmp	r0, #0
40014324:	e3a05000 	mov	r5, #0
40014328:	05845000 	streq	r5, [r4]
4001432c:	eb0001ae 	bl	400149ec <CyFx3DevIsSib0Supported>
40014330:	e3500000 	cmp	r0, #0
40014334:	05c45014 	strbeq	r5, [r4, #20]
40014338:	eb0001b5 	bl	40014a14 <CyFx3DevIsSib1Supported>
4001433c:	e3500000 	cmp	r0, #0
40014340:	05c45015 	strbeq	r5, [r4, #21]
40014344:	eb000194 	bl	4001499c <CyFx3DevIsI2sSupported>
40014348:	e3500000 	cmp	r0, #0
4001434c:	1a000002 	bne	4001435c <CyFx3DevIOConfigure+0x50>
40014350:	e594000c 	ldr	r0, [r4, #12]
40014354:	e3500000 	cmp	r0, #0
40014358:	1a000035 	bne	40014434 <CyFx3DevIOConfigure+0x128>
4001435c:	e5940000 	ldr	r0, [r4]
40014360:	e3500000 	cmp	r0, #0
40014364:	0a000009 	beq	40014390 <CyFx3DevIOConfigure+0x84>
40014368:	e5d40016 	ldrb	r0, [r4, #22]
4001436c:	e3500000 	cmp	r0, #0
40014370:	05d40014 	ldrbeq	r0, [r4, #20]
40014374:	03500000 	cmpeq	r0, #0
40014378:	05d40015 	ldrbeq	r0, [r4, #21]
4001437c:	03500000 	cmpeq	r0, #0
40014380:	1a00002b 	bne	40014434 <CyFx3DevIOConfigure+0x128>
40014384:	e3a00002 	mov	r0, #2
40014388:	e5cd0000 	strb	r0, [sp]
4001438c:	ea000022 	b	4001441c <CyFx3DevIOConfigure+0x110>
40014390:	e5d40014 	ldrb	r0, [r4, #20]
40014394:	e3a02003 	mov	r2, #3
40014398:	e3a03001 	mov	r3, #1
4001439c:	e3500000 	cmp	r0, #0
400143a0:	05cd2000 	strbeq	r2, [sp]
400143a4:	0a000004 	beq	400143bc <CyFx3DevIOConfigure+0xb0>
400143a8:	e3500001 	cmp	r0, #1
400143ac:	05cd3000 	strbeq	r3, [sp]
400143b0:	0a000001 	beq	400143bc <CyFx3DevIOConfigure+0xb0>
400143b4:	e3500002 	cmp	r0, #2
400143b8:	05cd5000 	strbeq	r5, [sp]
400143bc:	e5d41015 	ldrb	r1, [r4, #21]
400143c0:	e5d40016 	ldrb	r0, [r4, #22]
400143c4:	e3510002 	cmp	r1, #2
400143c8:	1a000009 	bne	400143f4 <CyFx3DevIOConfigure+0xe8>
400143cc:	e3500004 	cmp	r0, #4
400143d0:	05940004 	ldreq	r0, [r4, #4]
400143d4:	03500000 	cmpeq	r0, #0
400143d8:	05940010 	ldreq	r0, [r4, #16]
400143dc:	03500000 	cmpeq	r0, #0
400143e0:	0594000c 	ldreq	r0, [r4, #12]
400143e4:	03500000 	cmpeq	r0, #0
400143e8:	05cd5001 	strbeq	r5, [sp, #1]
400143ec:	0a000013 	beq	40014440 <CyFx3DevIOConfigure+0x134>
400143f0:	ea00000f 	b	40014434 <CyFx3DevIOConfigure+0x128>
400143f4:	e3500000 	cmp	r0, #0
400143f8:	0a000009 	beq	40014424 <CyFx3DevIOConfigure+0x118>
400143fc:	e3500001 	cmp	r0, #1
40014400:	13500002 	cmpne	r0, #2
40014404:	13500003 	cmpne	r0, #3
40014408:	1a000009 	bne	40014434 <CyFx3DevIOConfigure+0x128>
4001440c:	e3510001 	cmp	r1, #1
40014410:	05cd3001 	strbeq	r3, [sp, #1]
40014414:	0a000009 	beq	40014440 <CyFx3DevIOConfigure+0x134>
40014418:	e3a00004 	mov	r0, #4
4001441c:	e5cd0001 	strb	r0, [sp, #1]
40014420:	ea000006 	b	40014440 <CyFx3DevIOConfigure+0x134>
40014424:	e5cd2001 	strb	r2, [sp, #1]
40014428:	e5d40015 	ldrb	r0, [r4, #21]
4001442c:	e3500000 	cmp	r0, #0
40014430:	0a000002 	beq	40014440 <CyFx3DevIOConfigure+0x134>
40014434:	e3a00000 	mov	r0, #0
40014438:	e28dd024 	add	sp, sp, #36	; 0x24
4001443c:	e8bd8030 	pop	{r4, r5, pc}
40014440:	e5940004 	ldr	r0, [r4, #4]
40014444:	e58d0004 	str	r0, [sp, #4]
40014448:	e594000c 	ldr	r0, [r4, #12]
4001444c:	e58d000c 	str	r0, [sp, #12]
40014450:	e5940010 	ldr	r0, [r4, #16]
40014454:	e58d0010 	str	r0, [sp, #16]
40014458:	e5940008 	ldr	r0, [r4, #8]
4001445c:	e58d0008 	str	r0, [sp, #8]
40014460:	e5940018 	ldr	r0, [r4, #24]
40014464:	e58d0014 	str	r0, [sp, #20]
40014468:	e594001c 	ldr	r0, [r4, #28]
4001446c:	e58d0018 	str	r0, [sp, #24]
40014470:	e5940020 	ldr	r0, [r4, #32]
40014474:	e58d001c 	str	r0, [sp, #28]
40014478:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4001447c:	e58d0020 	str	r0, [sp, #32]
40014480:	e1a0000d 	mov	r0, sp
40014484:	eb000054 	bl	400145dc <CyFx3DevIOSetConfig>
40014488:	eaffffea 	b	40014438 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

4001448c <CyFx3DevIOIsGpio>:
4001448c:	e350003d 	cmp	r0, #61	; 0x3d
40014490:	e3a02000 	mov	r2, #0
40014494:	23a00000 	movcs	r0, #0
40014498:	212fff1e 	bxcs	lr
4001449c:	e3500020 	cmp	r0, #32
400144a0:	83a02001 	movhi	r2, #1
400144a4:	82400020 	subhi	r0, r0, #32
400144a8:	e59fc018 	ldr	ip, [pc, #24]	; 400144c8 <CyFx3DevIOIsGpio+0x3c>
400144ac:	e3510000 	cmp	r1, #0
400144b0:	e08c1102 	add	r1, ip, r2, lsl #2
400144b4:	0591101c 	ldreq	r1, [r1, #28]
400144b8:	15911014 	ldrne	r1, [r1, #20]
400144bc:	e3a03001 	mov	r3, #1
400144c0:	e0010013 	and	r0, r1, r3, lsl r0
400144c4:	e12fff1e 	bx	lr
400144c8:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

400144cc <CyFx3DevIOIsI2cConfigured>:
400144cc:	e59f0004 	ldr	r0, [pc, #4]	; 400144d8 <CyFx3DevIOIsI2cConfigured+0xc>
400144d0:	e5900008 	ldr	r0, [r0, #8]
400144d4:	e12fff1e 	bx	lr
400144d8:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

400144dc <CyFx3DevIOIsI2sConfigured>:
400144dc:	e59f0004 	ldr	r0, [pc, #4]	; 400144e8 <CyFx3DevIOIsI2sConfigured+0xc>
400144e0:	e590000c 	ldr	r0, [r0, #12]
400144e4:	e12fff1e 	bx	lr
400144e8:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

400144ec <CyFx3DevIOIsSpiConfigured>:
400144ec:	e59f0004 	ldr	r0, [pc, #4]	; 400144f8 <CyFx3DevIOIsSpiConfigured+0xc>
400144f0:	e5900010 	ldr	r0, [r0, #16]
400144f4:	e12fff1e 	bx	lr
400144f8:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOIsUartConfigured:

400144fc <CyFx3DevIOIsUartConfigured>:
400144fc:	e59f0004 	ldr	r0, [pc, #4]	; 40014508 <CyFx3DevIOIsUartConfigured+0xc>
40014500:	e5900004 	ldr	r0, [r0, #4]
40014504:	e12fff1e 	bx	lr
40014508:	40030ccc 	.word	0x40030ccc

Disassembly of section i.CyFx3DevIOSelectGpio:

4001450c <CyFx3DevIOSelectGpio>:
4001450c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014510:	e350003d 	cmp	r0, #61	; 0x3d
40014514:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
40014518:	e3a08001 	mov	r8, #1
4001451c:	e59f30b0 	ldr	r3, [pc, #176]	; 400145d4 <CyFx3DevIOSelectGpio+0xc8>
40014520:	e1a0c018 	lsl	ip, r8, r0
40014524:	e2837014 	add	r7, r3, #20
40014528:	e89700d0 	ldm	r7, {r4, r6, r7}
4001452c:	e5935020 	ldr	r5, [r3, #32]
40014530:	e3510000 	cmp	r1, #0
40014534:	e240e020 	sub	lr, r0, #32
40014538:	0a00000f 	beq	4001457c <CyFx3DevIOSelectGpio+0x70>
4001453c:	e3500020 	cmp	r0, #32
40014540:	2a000005 	bcs	4001455c <CyFx3DevIOSelectGpio+0x50>
40014544:	e3520000 	cmp	r2, #0
40014548:	0187000c 	orreq	r0, r7, ip
4001454c:	0a00000f 	beq	40014590 <CyFx3DevIOSelectGpio+0x84>
40014550:	e184000c 	orr	r0, r4, ip
40014554:	e5830014 	str	r0, [r3, #20]
40014558:	ea000013 	b	400145ac <CyFx3DevIOSelectGpio+0xa0>
4001455c:	e3520000 	cmp	r2, #0
40014560:	e20e00ff 	and	r0, lr, #255	; 0xff
40014564:	e1a00018 	lsl	r0, r8, r0
40014568:	01800005 	orreq	r0, r0, r5
4001456c:	0a00000d 	beq	400145a8 <CyFx3DevIOSelectGpio+0x9c>
40014570:	e1800006 	orr	r0, r0, r6
40014574:	e5830018 	str	r0, [r3, #24]
40014578:	ea00000b 	b	400145ac <CyFx3DevIOSelectGpio+0xa0>
4001457c:	e3500020 	cmp	r0, #32
40014580:	2a000004 	bcs	40014598 <CyFx3DevIOSelectGpio+0x8c>
40014584:	e1c4000c 	bic	r0, r4, ip
40014588:	e5830014 	str	r0, [r3, #20]
4001458c:	e1c7000c 	bic	r0, r7, ip
40014590:	e583001c 	str	r0, [r3, #28]
40014594:	ea000004 	b	400145ac <CyFx3DevIOSelectGpio+0xa0>
40014598:	e1a00e18 	lsl	r0, r8, lr
4001459c:	e1c61000 	bic	r1, r6, r0
400145a0:	e1c50000 	bic	r0, r5, r0
400145a4:	e5831018 	str	r1, [r3, #24]
400145a8:	e5830020 	str	r0, [r3, #32]
400145ac:	e5931014 	ldr	r1, [r3, #20]
400145b0:	e59f0020 	ldr	r0, [pc, #32]	; 400145d8 <CyFx3DevIOSelectGpio+0xcc>
400145b4:	e580100c 	str	r1, [r0, #12]
400145b8:	e5931018 	ldr	r1, [r3, #24]
400145bc:	e5801010 	str	r1, [r0, #16]
400145c0:	e593101c 	ldr	r1, [r3, #28]
400145c4:	e5801014 	str	r1, [r0, #20]
400145c8:	e5931020 	ldr	r1, [r3, #32]
400145cc:	e5801018 	str	r1, [r0, #24]
400145d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400145d4:	40030ccc 	.word	0x40030ccc
400145d8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

400145dc <CyFx3DevIOSetConfig>:
400145dc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400145e0:	e59f8208 	ldr	r8, [pc, #520]	; 400147f0 <CyFx3DevIOSetConfig+0x214>
400145e4:	e1a05000 	mov	r5, r0
400145e8:	e5980008 	ldr	r0, [r8, #8]
400145ec:	e59f7200 	ldr	r7, [pc, #512]	; 400147f4 <CyFx3DevIOSetConfig+0x218>
400145f0:	e2006002 	and	r6, r0, #2
400145f4:	e5d50000 	ldrb	r0, [r5]
400145f8:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
400145fc:	e3500000 	cmp	r0, #0
40014600:	01c44944 	biceq	r4, r4, r4, asr #18
40014604:	0a000008 	beq	4001462c <CyFx3DevIOSetConfig+0x50>
40014608:	e3500001 	cmp	r0, #1
4001460c:	059f41e4 	ldreq	r4, [pc, #484]	; 400147f8 <CyFx3DevIOSetConfig+0x21c>
40014610:	0a000005 	beq	4001462c <CyFx3DevIOSetConfig+0x50>
40014614:	e3500002 	cmp	r0, #2
40014618:	059f41dc 	ldreq	r4, [pc, #476]	; 400147fc <CyFx3DevIOSetConfig+0x220>
4001461c:	0a000001 	beq	40014628 <CyFx3DevIOSetConfig+0x4c>
40014620:	e3500003 	cmp	r0, #3
40014624:	1a000058 	bne	4001478c <CyFx3DevIOSetConfig+0x1b0>
40014628:	e3866010 	orr	r6, r6, #16
4001462c:	e5d50001 	ldrb	r0, [r5, #1]
40014630:	e3500005 	cmp	r0, #5
40014634:	308ff100 	addcc	pc, pc, r0, lsl #2
40014638:	ea000053 	b	4001478c <CyFx3DevIOSetConfig+0x1b0>
4001463c:	ea000003 	b	40014650 <CyFx3DevIOSetConfig+0x74>
40014640:	ea000005 	b	4001465c <CyFx3DevIOSetConfig+0x80>
40014644:	ea000021 	b	400146d0 <CyFx3DevIOSetConfig+0xf4>
40014648:	ea00002c 	b	40014700 <CyFx3DevIOSetConfig+0x124>
4001464c:	ea000002 	b	4001465c <CyFx3DevIOSetConfig+0x80>
40014650:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
40014654:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
40014658:	ea000032 	b	40014728 <CyFx3DevIOSetConfig+0x14c>
4001465c:	e3500001 	cmp	r0, #1
40014660:	e5950004 	ldr	r0, [r5, #4]
40014664:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
40014668:	e3500000 	cmp	r0, #0
4001466c:	1a000006 	bne	4001468c <CyFx3DevIOSetConfig+0xb0>
40014670:	e5950010 	ldr	r0, [r5, #16]
40014674:	e3500000 	cmp	r0, #0
40014678:	1a00000b 	bne	400146ac <CyFx3DevIOSetConfig+0xd0>
4001467c:	e595000c 	ldr	r0, [r5, #12]
40014680:	e3500000 	cmp	r0, #0
40014684:	1a00000e 	bne	400146c4 <CyFx3DevIOSetConfig+0xe8>
40014688:	ea000005 	b	400146a4 <CyFx3DevIOSetConfig+0xc8>
4001468c:	e595000c 	ldr	r0, [r5, #12]
40014690:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014694:	e3500000 	cmp	r0, #0
40014698:	05950010 	ldreq	r0, [r5, #16]
4001469c:	03500000 	cmpeq	r0, #0
400146a0:	1a000039 	bne	4001478c <CyFx3DevIOSetConfig+0x1b0>
400146a4:	e3866c01 	orr	r6, r6, #256	; 0x100
400146a8:	ea00001e 	b	40014728 <CyFx3DevIOSetConfig+0x14c>
400146ac:	e595000c 	ldr	r0, [r5, #12]
400146b0:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
400146b4:	e3500000 	cmp	r0, #0
400146b8:	1a000033 	bne	4001478c <CyFx3DevIOSetConfig+0x1b0>
400146bc:	e3866c02 	orr	r6, r6, #512	; 0x200
400146c0:	ea000018 	b	40014728 <CyFx3DevIOSetConfig+0x14c>
400146c4:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
400146c8:	e3866c03 	orr	r6, r6, #768	; 0x300
400146cc:	ea000015 	b	40014728 <CyFx3DevIOSetConfig+0x14c>
400146d0:	e5950010 	ldr	r0, [r5, #16]
400146d4:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
400146d8:	e3500000 	cmp	r0, #0
400146dc:	1a00002a 	bne	4001478c <CyFx3DevIOSetConfig+0x1b0>
400146e0:	e5950004 	ldr	r0, [r5, #4]
400146e4:	e3866c05 	orr	r6, r6, #1280	; 0x500
400146e8:	e3500000 	cmp	r0, #0
400146ec:	e595000c 	ldr	r0, [r5, #12]
400146f0:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
400146f4:	e3500000 	cmp	r0, #0
400146f8:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
400146fc:	ea000009 	b	40014728 <CyFx3DevIOSetConfig+0x14c>
40014700:	e5950004 	ldr	r0, [r5, #4]
40014704:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014708:	e3500000 	cmp	r0, #0
4001470c:	e5950010 	ldr	r0, [r5, #16]
40014710:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014714:	e3500000 	cmp	r0, #0
40014718:	e595000c 	ldr	r0, [r5, #12]
4001471c:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014720:	e3500000 	cmp	r0, #0
40014724:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014728:	e5950008 	ldr	r0, [r5, #8]
4001472c:	e5959014 	ldr	r9, [r5, #20]
40014730:	e3500000 	cmp	r0, #0
40014734:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014738:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
4001473c:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014740:	05950018 	ldreq	r0, [r5, #24]
40014744:	01d00004 	bicseq	r0, r0, r4
40014748:	0595e01c 	ldreq	lr, [r5, #28]
4001474c:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014750:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014754:	0595c020 	ldreq	ip, [r5, #32]
40014758:	01dc0004 	bicseq	r0, ip, r4
4001475c:	1a00000a 	bne	4001478c <CyFx3DevIOSetConfig+0x1b0>
40014760:	e59f0098 	ldr	r0, [pc, #152]	; 40014800 <CyFx3DevIOSetConfig+0x224>
40014764:	e3a01000 	mov	r1, #0
40014768:	e01e2000 	ands	r2, lr, r0
4001476c:	000c2000 	andeq	r2, ip, r0
40014770:	0a000001 	beq	4001477c <CyFx3DevIOSetConfig+0x1a0>
40014774:	e11c0000 	tst	ip, r0
40014778:	1a000003 	bne	4001478c <CyFx3DevIOSetConfig+0x1b0>
4001477c:	e2523001 	subs	r3, r2, #1
40014780:	13a03001 	movne	r3, #1
40014784:	e1120003 	tst	r2, r3
40014788:	0a000001 	beq	40014794 <CyFx3DevIOSetConfig+0x1b8>
4001478c:	e3a00000 	mov	r0, #0
40014790:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014794:	e2811001 	add	r1, r1, #1
40014798:	e3510008 	cmp	r1, #8
4001479c:	e1a00080 	lsl	r0, r0, #1
400147a0:	3afffff0 	bcc	40014768 <CyFx3DevIOSetConfig+0x18c>
400147a4:	e588900c 	str	r9, [r8, #12]
400147a8:	e5950018 	ldr	r0, [r5, #24]
400147ac:	e5880010 	str	r0, [r8, #16]
400147b0:	e595001c 	ldr	r0, [r5, #28]
400147b4:	e5880014 	str	r0, [r8, #20]
400147b8:	e5950020 	ldr	r0, [r5, #32]
400147bc:	e5880018 	str	r0, [r8, #24]
400147c0:	e3a00001 	mov	r0, #1
400147c4:	eb0000a6 	bl	40014a64 <CyFx3BusyWait>
400147c8:	e5886008 	str	r6, [r8, #8]
400147cc:	e59f0030 	ldr	r0, [pc, #48]	; 40014804 <CyFx3DevIOSetConfig+0x228>
400147d0:	e3a02024 	mov	r2, #36	; 0x24
400147d4:	e1a01005 	mov	r1, r5
400147d8:	ebfffb98 	bl	40013640 <__aeabi_memcpy4>
400147dc:	e59f0024 	ldr	r0, [pc, #36]	; 40014808 <CyFx3DevIOSetConfig+0x22c>
400147e0:	e5804004 	str	r4, [r0, #4]
400147e4:	e5807000 	str	r7, [r0]
400147e8:	e3a00001 	mov	r0, #1
400147ec:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400147f0:	e0051000 	.word	0xe0051000
400147f4:	3fe00000 	.word	0x3fe00000
400147f8:	1ffff9e0 	.word	0x1ffff9e0
400147fc:	1fffe000 	.word	0x1fffe000
40014800:	01010101 	.word	0x01010101
40014804:	40030ccc 	.word	0x40030ccc
40014808:	40030cc4 	.word	0x40030cc4

Disassembly of section i.CyFx3DevIdentifyPart:

4001480c <CyFx3DevIdentifyPart>:
4001480c:	e59f0078 	ldr	r0, [pc, #120]	; 4001488c <CyFx3DevIdentifyPart+0x80>
40014810:	e5901008 	ldr	r1, [r0, #8]
40014814:	e59f2074 	ldr	r2, [pc, #116]	; 40014890 <CyFx3DevIdentifyPart+0x84>
40014818:	e1a01221 	lsr	r1, r1, #4
4001481c:	e5923004 	ldr	r3, [r2, #4]
40014820:	e3530000 	cmp	r3, #0
40014824:	15d20000 	ldrbne	r0, [r2]
40014828:	112fff1e 	bxne	lr
4001482c:	e5900004 	ldr	r0, [r0, #4]
40014830:	e3100040 	tst	r0, #64	; 0x40
40014834:	e59f2058 	ldr	r2, [pc, #88]	; 40014894 <CyFx3DevIdentifyPart+0x88>
40014838:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
4001483c:	e3a00000 	mov	r0, #0
40014840:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014844:	e1530001 	cmp	r3, r1
40014848:	12800001 	addne	r0, r0, #1
4001484c:	120000ff 	andne	r0, r0, #255	; 0xff
40014850:	1350001b 	cmpne	r0, #27
40014854:	3afffff9 	bcc	40014840 <CyFx3DevIdentifyPart+0x34>
40014858:	e350001b 	cmp	r0, #27
4001485c:	03a00003 	moveq	r0, #3
40014860:	0a000000 	beq	40014868 <CyFx3DevIdentifyPart+0x5c>
40014864:	2a000003 	bcs	40014878 <CyFx3DevIdentifyPart+0x6c>
40014868:	e0821180 	add	r1, r2, r0, lsl #3
4001486c:	e5911004 	ldr	r1, [r1, #4]
40014870:	e3110004 	tst	r1, #4
40014874:	112fff1e 	bxne	lr
40014878:	e59f1018 	ldr	r1, [pc, #24]	; 40014898 <CyFx3DevIdentifyPart+0x8c>
4001487c:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014880:	e3822004 	orr	r2, r2, #4
40014884:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014888:	e12fff1e 	bx	lr
4001488c:	e0055000 	.word	0xe0055000
40014890:	40030cb8 	.word	0x40030cb8
40014894:	40011c40 	.word	0x40011c40
40014898:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

4001489c <CyFx3DevInitPageTables>:
4001489c:	e92d4030 	push	{r4, r5, lr}
400148a0:	e59f0058 	ldr	r0, [pc, #88]	; 40014900 <CyFx3DevInitPageTables+0x64>
400148a4:	e3a04000 	mov	r4, #0
400148a8:	e59f504c 	ldr	r5, [pc, #76]	; 400148fc <CyFx3DevInitPageTables+0x60>
400148ac:	e5804004 	str	r4, [r0, #4]
400148b0:	ebffffd5 	bl	4001480c <CyFx3DevIdentifyPart>
400148b4:	e59f1048 	ldr	r1, [pc, #72]	; 40014904 <CyFx3DevInitPageTables+0x68>
400148b8:	e2450a05 	sub	r0, r5, #20480	; 0x5000
400148bc:	e5801000 	str	r1, [r0]
400148c0:	e2811201 	add	r1, r1, #268435456	; 0x10000000
400148c4:	e5801008 	str	r1, [r0, #8]
400148c8:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
400148cc:	e5801010 	str	r1, [r0, #16]
400148d0:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
400148d4:	e5801018 	str	r1, [r0, #24]
400148d8:	e59f1028 	ldr	r1, [pc, #40]	; 40014908 <CyFx3DevInitPageTables+0x6c>
400148dc:	e5801020 	str	r1, [r0, #32]
400148e0:	e59f1024 	ldr	r1, [pc, #36]	; 4001490c <CyFx3DevInitPageTables+0x70>
400148e4:	e580101c 	str	r1, [r0, #28]
400148e8:	e5804024 	str	r4, [r0, #36]	; 0x24
400148ec:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
400148f0:	e3a00003 	mov	r0, #3
400148f4:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
400148f8:	e8bd8030 	pop	{r4, r5, pc}
400148fc:	e0058000 	.word	0xe0058000
40014900:	40030cb8 	.word	0x40030cb8
40014904:	00000c12 	.word	0x00000c12
40014908:	fff00c12 	.word	0xfff00c12
4001490c:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014910 <CyFx3DevIsGpif32Supported>:
40014910:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014914:	ebffffbc 	bl	4001480c <CyFx3DevIdentifyPart>
40014918:	e350001b 	cmp	r0, #27
4001491c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014934 <CyFx3DevIsGpif32Supported+0x24>
40014920:	30810180 	addcc	r0, r1, r0, lsl #3
40014924:	35900004 	ldrcc	r0, [r0, #4]
40014928:	32000010 	andcc	r0, r0, #16
4001492c:	23a00000 	movcs	r0, #0
40014930:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014934:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014938 <CyFx3DevIsGpifConfigurable>:
40014938:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001493c:	ebffffb2 	bl	4001480c <CyFx3DevIdentifyPart>
40014940:	e350001b 	cmp	r0, #27
40014944:	2a000006 	bcs	40014964 <CyFx3DevIsGpifConfigurable+0x2c>
40014948:	e59f101c 	ldr	r1, [pc, #28]	; 4001496c <CyFx3DevIsGpifConfigurable+0x34>
4001494c:	e0810180 	add	r0, r1, r0, lsl #3
40014950:	e5900004 	ldr	r0, [r0, #4]
40014954:	e3100c0f 	tst	r0, #3840	; 0xf00
40014958:	159f0010 	ldrne	r0, [pc, #16]	; 40014970 <CyFx3DevIsGpifConfigurable+0x38>
4001495c:	15900008 	ldrne	r0, [r0, #8]
40014960:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014964:	e3a00001 	mov	r0, #1
40014968:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001496c:	40011c40 	.word	0x40011c40
40014970:	40030cb8 	.word	0x40030cb8

Disassembly of section i.CyFx3DevIsGpifSupported:

40014974 <CyFx3DevIsGpifSupported>:
40014974:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014978:	ebffffa3 	bl	4001480c <CyFx3DevIdentifyPart>
4001497c:	e350001b 	cmp	r0, #27
40014980:	359f1010 	ldrcc	r1, [pc, #16]	; 40014998 <CyFx3DevIsGpifSupported+0x24>
40014984:	30810180 	addcc	r0, r1, r0, lsl #3
40014988:	35900004 	ldrcc	r0, [r0, #4]
4001498c:	32000008 	andcc	r0, r0, #8
40014990:	23a00000 	movcs	r0, #0
40014994:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014998:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3DevIsI2sSupported:

4001499c <CyFx3DevIsI2sSupported>:
4001499c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149a0:	ebffff99 	bl	4001480c <CyFx3DevIdentifyPart>
400149a4:	e350001b 	cmp	r0, #27
400149a8:	359f1010 	ldrcc	r1, [pc, #16]	; 400149c0 <CyFx3DevIsI2sSupported+0x24>
400149ac:	30810180 	addcc	r0, r1, r0, lsl #3
400149b0:	35900004 	ldrcc	r0, [r0, #4]
400149b4:	32000080 	andcc	r0, r0, #128	; 0x80
400149b8:	23a00000 	movcs	r0, #0
400149bc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149c0:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3DevIsOtgSupported:

400149c4 <CyFx3DevIsOtgSupported>:
400149c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149c8:	ebffff8f 	bl	4001480c <CyFx3DevIdentifyPart>
400149cc:	e350001b 	cmp	r0, #27
400149d0:	359f1010 	ldrcc	r1, [pc, #16]	; 400149e8 <CyFx3DevIsOtgSupported+0x24>
400149d4:	30810180 	addcc	r0, r1, r0, lsl #3
400149d8:	35900004 	ldrcc	r0, [r0, #4]
400149dc:	32000002 	andcc	r0, r0, #2
400149e0:	23a00000 	movcs	r0, #0
400149e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149e8:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3DevIsSib0Supported:

400149ec <CyFx3DevIsSib0Supported>:
400149ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149f0:	ebffff85 	bl	4001480c <CyFx3DevIdentifyPart>
400149f4:	e350001b 	cmp	r0, #27
400149f8:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a10 <CyFx3DevIsSib0Supported+0x24>
400149fc:	30810180 	addcc	r0, r1, r0, lsl #3
40014a00:	35900004 	ldrcc	r0, [r0, #4]
40014a04:	32000020 	andcc	r0, r0, #32
40014a08:	23a00000 	movcs	r0, #0
40014a0c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a10:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3DevIsSib1Supported:

40014a14 <CyFx3DevIsSib1Supported>:
40014a14:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a18:	ebffff7b 	bl	4001480c <CyFx3DevIdentifyPart>
40014a1c:	e350001b 	cmp	r0, #27
40014a20:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a38 <CyFx3DevIsSib1Supported+0x24>
40014a24:	30810180 	addcc	r0, r1, r0, lsl #3
40014a28:	35900004 	ldrcc	r0, [r0, #4]
40014a2c:	32000040 	andcc	r0, r0, #64	; 0x40
40014a30:	23a00000 	movcs	r0, #0
40014a34:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a38:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014a3c <CyFx3DevIsUsb3Supported>:
40014a3c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a40:	ebffff71 	bl	4001480c <CyFx3DevIdentifyPart>
40014a44:	e350001b 	cmp	r0, #27
40014a48:	359f1010 	ldrcc	r1, [pc, #16]	; 40014a60 <CyFx3DevIsUsb3Supported+0x24>
40014a4c:	30810180 	addcc	r0, r1, r0, lsl #3
40014a50:	35900004 	ldrcc	r0, [r0, #4]
40014a54:	32000001 	andcc	r0, r0, #1
40014a58:	23a00000 	movcs	r0, #0
40014a5c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a60:	40011c40 	.word	0x40011c40

Disassembly of section i.CyFx3BusyWait:

40014a64 <CyFx3BusyWait>:
40014a64:	ea000003 	b	40014a78 <CyFx3BusyWait+0x14>
40014a68:	e3a01000 	mov	r1, #0
40014a6c:	e2811001 	add	r1, r1, #1
40014a70:	e351002f 	cmp	r1, #47	; 0x2f
40014a74:	3afffffc 	bcc	40014a6c <CyFx3BusyWait+0x8>
40014a78:	e1b01000 	movs	r1, r0
40014a7c:	e2400001 	sub	r0, r0, #1
40014a80:	e1a00800 	lsl	r0, r0, #16
40014a84:	e1a00820 	lsr	r0, r0, #16
40014a88:	1afffff6 	bne	40014a68 <CyFx3BusyWait+0x4>
40014a8c:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014a90 <CyFx3PibDllEnable>:
40014a90:	e59f205c 	ldr	r2, [pc, #92]	; 40014af4 <CyFx3PibDllEnable+0x64>
40014a94:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014a98:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014a9c:	e3c00001 	bic	r0, r0, #1
40014aa0:	e5820028 	str	r0, [r2, #40]	; 0x28
40014aa4:	e3a00001 	mov	r0, #1
40014aa8:	ebffffed 	bl	40014a64 <CyFx3BusyWait>
40014aac:	e3a00003 	mov	r0, #3
40014ab0:	e5820028 	str	r0, [r2, #40]	; 0x28
40014ab4:	e3a00001 	mov	r0, #1
40014ab8:	ebffffe9 	bl	40014a64 <CyFx3BusyWait>
40014abc:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014ac0:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014ac4:	e5820028 	str	r0, [r2, #40]	; 0x28
40014ac8:	e3a00001 	mov	r0, #1
40014acc:	ebffffe4 	bl	40014a64 <CyFx3BusyWait>
40014ad0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014ad4:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014ad8:	e5820028 	str	r0, [r2, #40]	; 0x28
40014adc:	e3a00001 	mov	r0, #1
40014ae0:	ebffffdf 	bl	40014a64 <CyFx3BusyWait>
40014ae4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014ae8:	e3100004 	tst	r0, #4
40014aec:	0afffffc 	beq	40014ae4 <CyFx3PibDllEnable+0x54>
40014af0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014af4:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014af8 <CyFx3PibGetDllStatus>:
40014af8:	e59f0008 	ldr	r0, [pc, #8]	; 40014b08 <CyFx3PibGetDllStatus+0x10>
40014afc:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014b00:	e2000004 	and	r0, r0, #4
40014b04:	e12fff1e 	bx	lr
40014b08:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014b0c <CyFx3PibPowerOn>:
40014b0c:	e92d4010 	push	{r4, lr}
40014b10:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014b14:	ebffff96 	bl	40014974 <CyFx3DevIsGpifSupported>
40014b18:	e3500000 	cmp	r0, #0
40014b1c:	1a000002 	bne	40014b2c <CyFx3PibPowerOn+0x20>
40014b20:	e4940004 	ldr	r0, [r4], #4
40014b24:	e3500000 	cmp	r0, #0
40014b28:	1afffffc 	bne	40014b20 <CyFx3PibPowerOn+0x14>
40014b2c:	e59f2028 	ldr	r2, [pc, #40]	; 40014b5c <CyFx3PibPowerOn+0x50>
40014b30:	e3a00000 	mov	r0, #0
40014b34:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014b38:	e3a0000a 	mov	r0, #10
40014b3c:	ebffffc8 	bl	40014a64 <CyFx3BusyWait>
40014b40:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014b44:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014b48:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014b4c:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014b50:	e3100001 	tst	r0, #1
40014b54:	0afffffc 	beq	40014b4c <CyFx3PibPowerOn+0x40>
40014b58:	e8bd8010 	pop	{r4, pc}
40014b5c:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014b60 <CyU3PDmaSocketDisable>:
40014b60:	e3a0c03f 	mov	ip, #63	; 0x3f
40014b64:	e00c1440 	and	r1, ip, r0, asr #8
40014b68:	e20030ff 	and	r3, r0, #255	; 0xff
40014b6c:	e59fc048 	ldr	ip, [pc, #72]	; 40014bbc <CyU3PDmaSocketDisable+0x5c>
40014b70:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014b74:	e08cc383 	add	ip, ip, r3, lsl #7
40014b78:	e59c200c 	ldr	r2, [ip, #12]
40014b7c:	e3120601 	tst	r2, #1048576	; 0x100000
40014b80:	1a000000 	bne	40014b88 <CyU3PDmaSocketDisable+0x28>
40014b84:	e12fff1e 	bx	lr
40014b88:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014b8c:	e59fc028 	ldr	ip, [pc, #40]	; 40014bbc <CyU3PDmaSocketDisable+0x5c>
40014b90:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014b94:	e08cc383 	add	ip, ip, r3, lsl #7
40014b98:	e58c200c 	str	r2, [ip, #12]
40014b9c:	e1a00000 	nop			; (mov r0, r0)
40014ba0:	e59fc014 	ldr	ip, [pc, #20]	; 40014bbc <CyU3PDmaSocketDisable+0x5c>
40014ba4:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ba8:	e08cc383 	add	ip, ip, r3, lsl #7
40014bac:	e59cc00c 	ldr	ip, [ip, #12]
40014bb0:	e31c0601 	tst	ip, #1048576	; 0x100000
40014bb4:	1afffff9 	bne	40014ba0 <CyU3PDmaSocketDisable+0x40>
40014bb8:	eafffff1 	b	40014b84 <CyU3PDmaSocketDisable+0x24>
40014bbc:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014bc0 <CyU3PDmaSocketGetConfig>:
40014bc0:	e1a02000 	mov	r2, r0
40014bc4:	e3a0003f 	mov	r0, #63	; 0x3f
40014bc8:	e0003442 	and	r3, r0, r2, asr #8
40014bcc:	e202c0ff 	and	ip, r2, #255	; 0xff
40014bd0:	e3510000 	cmp	r1, #0
40014bd4:	1a000001 	bne	40014be0 <CyU3PDmaSocketGetConfig+0x20>
40014bd8:	e3a00040 	mov	r0, #64	; 0x40
40014bdc:	e12fff1e 	bx	lr
40014be0:	e59f0074 	ldr	r0, [pc, #116]	; 40014c5c <CyU3PDmaSocketGetConfig+0x9c>
40014be4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014be8:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014bec:	e5810000 	str	r0, [r1]
40014bf0:	e59f0064 	ldr	r0, [pc, #100]	; 40014c5c <CyU3PDmaSocketGetConfig+0x9c>
40014bf4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014bf8:	e080038c 	add	r0, r0, ip, lsl #7
40014bfc:	e5900004 	ldr	r0, [r0, #4]
40014c00:	e5810004 	str	r0, [r1, #4]
40014c04:	e59f0050 	ldr	r0, [pc, #80]	; 40014c5c <CyU3PDmaSocketGetConfig+0x9c>
40014c08:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c0c:	e080038c 	add	r0, r0, ip, lsl #7
40014c10:	e5900008 	ldr	r0, [r0, #8]
40014c14:	e5810008 	str	r0, [r1, #8]
40014c18:	e59f003c 	ldr	r0, [pc, #60]	; 40014c5c <CyU3PDmaSocketGetConfig+0x9c>
40014c1c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c20:	e080038c 	add	r0, r0, ip, lsl #7
40014c24:	e590000c 	ldr	r0, [r0, #12]
40014c28:	e581000c 	str	r0, [r1, #12]
40014c2c:	e59f0028 	ldr	r0, [pc, #40]	; 40014c5c <CyU3PDmaSocketGetConfig+0x9c>
40014c30:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c34:	e080038c 	add	r0, r0, ip, lsl #7
40014c38:	e5900010 	ldr	r0, [r0, #16]
40014c3c:	e5810010 	str	r0, [r1, #16]
40014c40:	e59f0014 	ldr	r0, [pc, #20]	; 40014c5c <CyU3PDmaSocketGetConfig+0x9c>
40014c44:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014c48:	e080038c 	add	r0, r0, ip, lsl #7
40014c4c:	e5900014 	ldr	r0, [r0, #20]
40014c50:	e5810014 	str	r0, [r1, #20]
40014c54:	e3a00000 	mov	r0, #0
40014c58:	eaffffdf 	b	40014bdc <CyU3PDmaSocketGetConfig+0x1c>
40014c5c:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014c60 <CyU3PDmaSocketIsValidConsumer>:
40014c60:	e92d4010 	push	{r4, lr}
40014c64:	e1a01000 	mov	r1, r0
40014c68:	e3a0003f 	mov	r0, #63	; 0x3f
40014c6c:	e0002441 	and	r2, r0, r1, asr #8
40014c70:	e20130ff 	and	r3, r1, #255	; 0xff
40014c74:	e3a04000 	mov	r4, #0
40014c78:	e3520000 	cmp	r2, #0
40014c7c:	0a000006 	beq	40014c9c <CyU3PDmaSocketIsValidConsumer+0x3c>
40014c80:	e3520001 	cmp	r2, #1
40014c84:	0a000009 	beq	40014cb0 <CyU3PDmaSocketIsValidConsumer+0x50>
40014c88:	e3520002 	cmp	r2, #2
40014c8c:	0a00000c 	beq	40014cc4 <CyU3PDmaSocketIsValidConsumer+0x64>
40014c90:	e3520003 	cmp	r2, #3
40014c94:	1a000014 	bne	40014cec <CyU3PDmaSocketIsValidConsumer+0x8c>
40014c98:	ea00000e 	b	40014cd8 <CyU3PDmaSocketIsValidConsumer+0x78>
40014c9c:	e1a00000 	nop			; (mov r0, r0)
40014ca0:	e3a0c000 	mov	ip, #0
40014ca4:	e3a0e004 	mov	lr, #4
40014ca8:	e59f4080 	ldr	r4, [pc, #128]	; 40014d30 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014cac:	ea000011 	b	40014cf8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014cb0:	e1a00000 	nop			; (mov r0, r0)
40014cb4:	e3a0c000 	mov	ip, #0
40014cb8:	e3a0e00f 	mov	lr, #15
40014cbc:	e59f4070 	ldr	r4, [pc, #112]	; 40014d34 <CyU3PDmaSocketIsValidConsumer+0xd4>
40014cc0:	ea00000c 	b	40014cf8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014cc4:	e1a00000 	nop			; (mov r0, r0)
40014cc8:	e3a0c000 	mov	ip, #0
40014ccc:	e3a0e007 	mov	lr, #7
40014cd0:	e59f4060 	ldr	r4, [pc, #96]	; 40014d38 <CyU3PDmaSocketIsValidConsumer+0xd8>
40014cd4:	ea000007 	b	40014cf8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014cd8:	e1a00000 	nop			; (mov r0, r0)
40014cdc:	e3a0c000 	mov	ip, #0
40014ce0:	e3a0e00f 	mov	lr, #15
40014ce4:	e59f4050 	ldr	r4, [pc, #80]	; 40014d3c <CyU3PDmaSocketIsValidConsumer+0xdc>
40014ce8:	ea000002 	b	40014cf8 <CyU3PDmaSocketIsValidConsumer+0x98>
40014cec:	e1a00000 	nop			; (mov r0, r0)
40014cf0:	e3a00000 	mov	r0, #0
40014cf4:	e8bd8010 	pop	{r4, pc}
40014cf8:	e1a00000 	nop			; (mov r0, r0)
40014cfc:	e5940000 	ldr	r0, [r4]
40014d00:	e3100001 	tst	r0, #1
40014d04:	1a000001 	bne	40014d10 <CyU3PDmaSocketIsValidConsumer+0xb0>
40014d08:	e3a00000 	mov	r0, #0
40014d0c:	eafffff8 	b	40014cf4 <CyU3PDmaSocketIsValidConsumer+0x94>
40014d10:	e153000c 	cmp	r3, ip
40014d14:	ba000003 	blt	40014d28 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014d18:	e153000e 	cmp	r3, lr
40014d1c:	ca000001 	bgt	40014d28 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014d20:	e3a00001 	mov	r0, #1
40014d24:	eafffff2 	b	40014cf4 <CyU3PDmaSocketIsValidConsumer+0x94>
40014d28:	e3a00000 	mov	r0, #0
40014d2c:	eafffff0 	b	40014cf4 <CyU3PDmaSocketIsValidConsumer+0x94>
40014d30:	e0007f04 	.word	0xe0007f04
40014d34:	e0017f04 	.word	0xe0017f04
40014d38:	e0027f04 	.word	0xe0027f04
40014d3c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014d40 <CyU3PDmaSocketIsValidProducer>:
40014d40:	e92d4010 	push	{r4, lr}
40014d44:	e1a01000 	mov	r1, r0
40014d48:	e3a0003f 	mov	r0, #63	; 0x3f
40014d4c:	e0002441 	and	r2, r0, r1, asr #8
40014d50:	e20130ff 	and	r3, r1, #255	; 0xff
40014d54:	e3a04000 	mov	r4, #0
40014d58:	e3520000 	cmp	r2, #0
40014d5c:	0a000006 	beq	40014d7c <CyU3PDmaSocketIsValidProducer+0x3c>
40014d60:	e3520001 	cmp	r2, #1
40014d64:	0a000009 	beq	40014d90 <CyU3PDmaSocketIsValidProducer+0x50>
40014d68:	e3520002 	cmp	r2, #2
40014d6c:	0a00000c 	beq	40014da4 <CyU3PDmaSocketIsValidProducer+0x64>
40014d70:	e3520004 	cmp	r2, #4
40014d74:	1a000014 	bne	40014dcc <CyU3PDmaSocketIsValidProducer+0x8c>
40014d78:	ea00000e 	b	40014db8 <CyU3PDmaSocketIsValidProducer+0x78>
40014d7c:	e1a00000 	nop			; (mov r0, r0)
40014d80:	e3a0c005 	mov	ip, #5
40014d84:	e3a0e007 	mov	lr, #7
40014d88:	e59f4080 	ldr	r4, [pc, #128]	; 40014e10 <CyU3PDmaSocketIsValidProducer+0xd0>
40014d8c:	ea000011 	b	40014dd8 <CyU3PDmaSocketIsValidProducer+0x98>
40014d90:	e1a00000 	nop			; (mov r0, r0)
40014d94:	e3a0c000 	mov	ip, #0
40014d98:	e3a0e01f 	mov	lr, #31
40014d9c:	e59f4070 	ldr	r4, [pc, #112]	; 40014e14 <CyU3PDmaSocketIsValidProducer+0xd4>
40014da0:	ea00000c 	b	40014dd8 <CyU3PDmaSocketIsValidProducer+0x98>
40014da4:	e1a00000 	nop			; (mov r0, r0)
40014da8:	e3a0c000 	mov	ip, #0
40014dac:	e3a0e007 	mov	lr, #7
40014db0:	e59f4060 	ldr	r4, [pc, #96]	; 40014e18 <CyU3PDmaSocketIsValidProducer+0xd8>
40014db4:	ea000007 	b	40014dd8 <CyU3PDmaSocketIsValidProducer+0x98>
40014db8:	e1a00000 	nop			; (mov r0, r0)
40014dbc:	e3a0c000 	mov	ip, #0
40014dc0:	e3a0e00f 	mov	lr, #15
40014dc4:	e59f4050 	ldr	r4, [pc, #80]	; 40014e1c <CyU3PDmaSocketIsValidProducer+0xdc>
40014dc8:	ea000002 	b	40014dd8 <CyU3PDmaSocketIsValidProducer+0x98>
40014dcc:	e1a00000 	nop			; (mov r0, r0)
40014dd0:	e3a00000 	mov	r0, #0
40014dd4:	e8bd8010 	pop	{r4, pc}
40014dd8:	e1a00000 	nop			; (mov r0, r0)
40014ddc:	e5940000 	ldr	r0, [r4]
40014de0:	e3100001 	tst	r0, #1
40014de4:	1a000001 	bne	40014df0 <CyU3PDmaSocketIsValidProducer+0xb0>
40014de8:	e3a00000 	mov	r0, #0
40014dec:	eafffff8 	b	40014dd4 <CyU3PDmaSocketIsValidProducer+0x94>
40014df0:	e153000c 	cmp	r3, ip
40014df4:	ba000003 	blt	40014e08 <CyU3PDmaSocketIsValidProducer+0xc8>
40014df8:	e153000e 	cmp	r3, lr
40014dfc:	ca000001 	bgt	40014e08 <CyU3PDmaSocketIsValidProducer+0xc8>
40014e00:	e3a00001 	mov	r0, #1
40014e04:	eafffff2 	b	40014dd4 <CyU3PDmaSocketIsValidProducer+0x94>
40014e08:	e3a00000 	mov	r0, #0
40014e0c:	eafffff0 	b	40014dd4 <CyU3PDmaSocketIsValidProducer+0x94>
40014e10:	e0007f04 	.word	0xe0007f04
40014e14:	e0017f04 	.word	0xe0017f04
40014e18:	e0027f04 	.word	0xe0027f04
40014e1c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014e20 <CyU3PDmaSocketSendEvent>:
40014e20:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014e24:	e1a04000 	mov	r4, r0
40014e28:	e1a05001 	mov	r5, r1
40014e2c:	e1a06002 	mov	r6, r2
40014e30:	e3a0003f 	mov	r0, #63	; 0x3f
40014e34:	e0007444 	and	r7, r0, r4, asr #8
40014e38:	e20480ff 	and	r8, r4, #255	; 0xff
40014e3c:	e1a09005 	mov	r9, r5
40014e40:	e3560001 	cmp	r6, #1
40014e44:	1a000000 	bne	40014e4c <CyU3PDmaSocketSendEvent+0x2c>
40014e48:	e3899801 	orr	r9, r9, #65536	; 0x10000
40014e4c:	e59f0010 	ldr	r0, [pc, #16]	; 40014e64 <CyU3PDmaSocketSendEvent+0x44>
40014e50:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40014e54:	e0800388 	add	r0, r0, r8, lsl #7
40014e58:	e580907c 	str	r9, [r0, #124]	; 0x7c
40014e5c:	ebfff6e1 	bl	400129e8 <CyU3PSysBarrierSync>
40014e60:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014e64:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketSetConfig:

40014e68 <CyU3PDmaSocketSetConfig>:
40014e68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014e6c:	e1a04000 	mov	r4, r0
40014e70:	e1a05001 	mov	r5, r1
40014e74:	e3a0003f 	mov	r0, #63	; 0x3f
40014e78:	e0006444 	and	r6, r0, r4, asr #8
40014e7c:	e20470ff 	and	r7, r4, #255	; 0xff
40014e80:	e3550000 	cmp	r5, #0
40014e84:	1a000001 	bne	40014e90 <CyU3PDmaSocketSetConfig+0x28>
40014e88:	e3a00040 	mov	r0, #64	; 0x40
40014e8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014e90:	e59f1078 	ldr	r1, [pc, #120]	; 40014f10 <CyU3PDmaSocketSetConfig+0xa8>
40014e94:	e5950000 	ldr	r0, [r5]
40014e98:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e9c:	e7810387 	str	r0, [r1, r7, lsl #7]
40014ea0:	e59f1068 	ldr	r1, [pc, #104]	; 40014f10 <CyU3PDmaSocketSetConfig+0xa8>
40014ea4:	e5950004 	ldr	r0, [r5, #4]
40014ea8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014eac:	e0811387 	add	r1, r1, r7, lsl #7
40014eb0:	e5810004 	str	r0, [r1, #4]
40014eb4:	e59f1054 	ldr	r1, [pc, #84]	; 40014f10 <CyU3PDmaSocketSetConfig+0xa8>
40014eb8:	e5950008 	ldr	r0, [r5, #8]
40014ebc:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ec0:	e0811387 	add	r1, r1, r7, lsl #7
40014ec4:	e5810008 	str	r0, [r1, #8]
40014ec8:	e59f1040 	ldr	r1, [pc, #64]	; 40014f10 <CyU3PDmaSocketSetConfig+0xa8>
40014ecc:	e5950010 	ldr	r0, [r5, #16]
40014ed0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ed4:	e0811387 	add	r1, r1, r7, lsl #7
40014ed8:	e5810010 	str	r0, [r1, #16]
40014edc:	e59f102c 	ldr	r1, [pc, #44]	; 40014f10 <CyU3PDmaSocketSetConfig+0xa8>
40014ee0:	e5950014 	ldr	r0, [r5, #20]
40014ee4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ee8:	e0811387 	add	r1, r1, r7, lsl #7
40014eec:	e5810014 	str	r0, [r1, #20]
40014ef0:	e59f1018 	ldr	r1, [pc, #24]	; 40014f10 <CyU3PDmaSocketSetConfig+0xa8>
40014ef4:	e595000c 	ldr	r0, [r5, #12]
40014ef8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014efc:	e0811387 	add	r1, r1, r7, lsl #7
40014f00:	e581000c 	str	r0, [r1, #12]
40014f04:	ebfff6b7 	bl	400129e8 <CyU3PSysBarrierSync>
40014f08:	e3a00000 	mov	r0, #0
40014f0c:	eaffffde 	b	40014e8c <CyU3PDmaSocketSetConfig+0x24>
40014f10:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40014f14 <CyU3PDmaSocketSetWrapUp>:
40014f14:	e3a0c03f 	mov	ip, #63	; 0x3f
40014f18:	e00c1440 	and	r1, ip, r0, asr #8
40014f1c:	e20030ff 	and	r3, r0, #255	; 0xff
40014f20:	e59fc02c 	ldr	ip, [pc, #44]	; 40014f54 <CyU3PDmaSocketSetWrapUp+0x40>
40014f24:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f28:	e08cc383 	add	ip, ip, r3, lsl #7
40014f2c:	e59c200c 	ldr	r2, [ip, #12]
40014f30:	e3120601 	tst	r2, #1048576	; 0x100000
40014f34:	1a000000 	bne	40014f3c <CyU3PDmaSocketSetWrapUp+0x28>
40014f38:	e12fff1e 	bx	lr
40014f3c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40014f40:	e59fc00c 	ldr	ip, [pc, #12]	; 40014f54 <CyU3PDmaSocketSetWrapUp+0x40>
40014f44:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f48:	e08cc383 	add	ip, ip, r3, lsl #7
40014f4c:	e58c200c 	str	r2, [ip, #12]
40014f50:	eafffff8 	b	40014f38 <CyU3PDmaSocketSetWrapUp+0x24>
40014f54:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40014f58 <CyU3PDmaSocketUpdateStatus>:
40014f58:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014f5c:	e1a04000 	mov	r4, r0
40014f60:	e1a05001 	mov	r5, r1
40014f64:	e3a0003f 	mov	r0, #63	; 0x3f
40014f68:	e0006444 	and	r6, r0, r4, asr #8
40014f6c:	e20470ff 	and	r7, r4, #255	; 0xff
40014f70:	e3550000 	cmp	r5, #0
40014f74:	1a000001 	bne	40014f80 <CyU3PDmaSocketUpdateStatus+0x28>
40014f78:	e3a00040 	mov	r0, #64	; 0x40
40014f7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014f80:	e59f1040 	ldr	r1, [pc, #64]	; 40014fc8 <CyU3PDmaSocketUpdateStatus+0x70>
40014f84:	e5950010 	ldr	r0, [r5, #16]
40014f88:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f8c:	e0811387 	add	r1, r1, r7, lsl #7
40014f90:	e5810010 	str	r0, [r1, #16]
40014f94:	e59f102c 	ldr	r1, [pc, #44]	; 40014fc8 <CyU3PDmaSocketUpdateStatus+0x70>
40014f98:	e5950014 	ldr	r0, [r5, #20]
40014f9c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014fa0:	e0811387 	add	r1, r1, r7, lsl #7
40014fa4:	e5810014 	str	r0, [r1, #20]
40014fa8:	e59f1018 	ldr	r1, [pc, #24]	; 40014fc8 <CyU3PDmaSocketUpdateStatus+0x70>
40014fac:	e595000c 	ldr	r0, [r5, #12]
40014fb0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014fb4:	e0811387 	add	r1, r1, r7, lsl #7
40014fb8:	e581000c 	str	r0, [r1, #12]
40014fbc:	ebfff689 	bl	400129e8 <CyU3PSysBarrierSync>
40014fc0:	e3a00000 	mov	r0, #0
40014fc4:	eaffffec 	b	40014f7c <CyU3PDmaSocketUpdateStatus+0x24>
40014fc8:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40014fcc <CyU3PDmaUpdateSocketSuspendOption>:
40014fcc:	e92d4070 	push	{r4, r5, r6, lr}
40014fd0:	e24dd018 	sub	sp, sp, #24
40014fd4:	e1a04000 	mov	r4, r0
40014fd8:	e1a06001 	mov	r6, r1
40014fdc:	e1a0100d 	mov	r1, sp
40014fe0:	e1a00004 	mov	r0, r4
40014fe4:	ebfffef5 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40014fe8:	e59d000c 	ldr	r0, [sp, #12]
40014fec:	e2000702 	and	r0, r0, #524288	; 0x80000
40014ff0:	e1a059a0 	lsr	r5, r0, #19
40014ff4:	e3550001 	cmp	r5, #1
40014ff8:	1a000010 	bne	40015040 <CyU3PDmaUpdateSocketSuspendOption+0x74>
40014ffc:	e59d000c 	ldr	r0, [sp, #12]
40015000:	e3100101 	tst	r0, #1073741824	; 0x40000000
40015004:	1a00000a 	bne	40015034 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40015008:	e59d000c 	ldr	r0, [sp, #12]
4001500c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015010:	e58d000c 	str	r0, [sp, #12]
40015014:	e3a00000 	mov	r0, #0
40015018:	e58d0010 	str	r0, [sp, #16]
4001501c:	e1a0100d 	mov	r1, sp
40015020:	e1a00004 	mov	r0, r4
40015024:	ebffffcb 	bl	40014f58 <CyU3PDmaSocketUpdateStatus>
40015028:	e1a0100d 	mov	r1, sp
4001502c:	e1a00004 	mov	r0, r4
40015030:	ebfffee2 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40015034:	e3a00000 	mov	r0, #0
40015038:	e58d0010 	str	r0, [sp, #16]
4001503c:	ea000004 	b	40015054 <CyU3PDmaUpdateSocketSuspendOption+0x88>
40015040:	e59d000c 	ldr	r0, [sp, #12]
40015044:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40015048:	e58d000c 	str	r0, [sp, #12]
4001504c:	e3a00e12 	mov	r0, #288	; 0x120
40015050:	e58d0010 	str	r0, [sp, #16]
40015054:	e59d000c 	ldr	r0, [sp, #12]
40015058:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
4001505c:	e58d000c 	str	r0, [sp, #12]
40015060:	e59d0014 	ldr	r0, [sp, #20]
40015064:	e3c00e12 	bic	r0, r0, #288	; 0x120
40015068:	e58d0014 	str	r0, [sp, #20]
4001506c:	e3560000 	cmp	r6, #0
40015070:	0a000006 	beq	40015090 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40015074:	e3560001 	cmp	r6, #1
40015078:	0a000006 	beq	40015098 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
4001507c:	e3560002 	cmp	r6, #2
40015080:	0a00000e 	beq	400150c0 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40015084:	e3560003 	cmp	r6, #3
40015088:	1a000020 	bne	40015110 <CyU3PDmaUpdateSocketSuspendOption+0x144>
4001508c:	ea000015 	b	400150e8 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40015090:	e1a00000 	nop			; (mov r0, r0)
40015094:	ea00001f 	b	40015118 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015098:	e1a00000 	nop			; (mov r0, r0)
4001509c:	e59d000c 	ldr	r0, [sp, #12]
400150a0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400150a4:	e58d000c 	str	r0, [sp, #12]
400150a8:	e3550000 	cmp	r5, #0
400150ac:	1a000002 	bne	400150bc <CyU3PDmaUpdateSocketSuspendOption+0xf0>
400150b0:	e59d0014 	ldr	r0, [sp, #20]
400150b4:	e3800020 	orr	r0, r0, #32
400150b8:	e58d0014 	str	r0, [sp, #20]
400150bc:	ea000015 	b	40015118 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400150c0:	e1a00000 	nop			; (mov r0, r0)
400150c4:	e3550000 	cmp	r5, #0
400150c8:	1a000005 	bne	400150e4 <CyU3PDmaUpdateSocketSuspendOption+0x118>
400150cc:	e59d000c 	ldr	r0, [sp, #12]
400150d0:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400150d4:	e58d000c 	str	r0, [sp, #12]
400150d8:	e59d0014 	ldr	r0, [sp, #20]
400150dc:	e3800020 	orr	r0, r0, #32
400150e0:	e58d0014 	str	r0, [sp, #20]
400150e4:	ea00000b 	b	40015118 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400150e8:	e1a00000 	nop			; (mov r0, r0)
400150ec:	e59d000c 	ldr	r0, [sp, #12]
400150f0:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
400150f4:	e58d000c 	str	r0, [sp, #12]
400150f8:	e3550000 	cmp	r5, #0
400150fc:	1a000002 	bne	4001510c <CyU3PDmaUpdateSocketSuspendOption+0x140>
40015100:	e59d0014 	ldr	r0, [sp, #20]
40015104:	e3800c01 	orr	r0, r0, #256	; 0x100
40015108:	e58d0014 	str	r0, [sp, #20]
4001510c:	ea000001 	b	40015118 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015110:	e1a00000 	nop			; (mov r0, r0)
40015114:	e1a00000 	nop			; (mov r0, r0)
40015118:	e1a00000 	nop			; (mov r0, r0)
4001511c:	e1a0100d 	mov	r1, sp
40015120:	e1a00004 	mov	r0, r4
40015124:	ebffff8b 	bl	40014f58 <CyU3PDmaSocketUpdateStatus>
40015128:	e28dd018 	add	sp, sp, #24
4001512c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015130 <CyU3PDmaChannelAcquireLock>:
40015130:	e92d4070 	push	{r4, r5, r6, lr}
40015134:	e1a04000 	mov	r4, r0
40015138:	e1a05001 	mov	r5, r1
4001513c:	e3540000 	cmp	r4, #0
40015140:	1a000001 	bne	4001514c <CyU3PDmaChannelAcquireLock+0x1c>
40015144:	e3a00041 	mov	r0, #65	; 0x41
40015148:	e8bd8070 	pop	{r4, r5, r6, pc}
4001514c:	e5940000 	ldr	r0, [r4]
40015150:	e3500000 	cmp	r0, #0
40015154:	1a000001 	bne	40015160 <CyU3PDmaChannelAcquireLock+0x30>
40015158:	e3a00044 	mov	r0, #68	; 0x44
4001515c:	eafffff9 	b	40015148 <CyU3PDmaChannelAcquireLock+0x18>
40015160:	e1a01005 	mov	r1, r5
40015164:	e284003c 	add	r0, r4, #60	; 0x3c
40015168:	ebffd3d2 	bl	4000a0b8 <_txe_mutex_get>
4001516c:	e3500000 	cmp	r0, #0
40015170:	0a000001 	beq	4001517c <CyU3PDmaChannelAcquireLock+0x4c>
40015174:	e3a0001d 	mov	r0, #29
40015178:	eafffff2 	b	40015148 <CyU3PDmaChannelAcquireLock+0x18>
4001517c:	e3a00000 	mov	r0, #0
40015180:	eafffff0 	b	40015148 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015184 <CyU3PDmaChannelCacheControl>:
40015184:	e92d4070 	push	{r4, r5, r6, lr}
40015188:	e1a04000 	mov	r4, r0
4001518c:	e1a05001 	mov	r5, r1
40015190:	e3e01000 	mvn	r1, #0
40015194:	e1a00004 	mov	r0, r4
40015198:	ebffffe4 	bl	40015130 <CyU3PDmaChannelAcquireLock>
4001519c:	e1a06000 	mov	r6, r0
400151a0:	e3560000 	cmp	r6, #0
400151a4:	0a000001 	beq	400151b0 <CyU3PDmaChannelCacheControl+0x2c>
400151a8:	e1a00006 	mov	r0, r6
400151ac:	e8bd8070 	pop	{r4, r5, r6, pc}
400151b0:	e5940000 	ldr	r0, [r4]
400151b4:	e3500001 	cmp	r0, #1
400151b8:	1a000001 	bne	400151c4 <CyU3PDmaChannelCacheControl+0x40>
400151bc:	e5845038 	str	r5, [r4, #56]	; 0x38
400151c0:	ea000000 	b	400151c8 <CyU3PDmaChannelCacheControl+0x44>
400151c4:	e3a06047 	mov	r6, #71	; 0x47
400151c8:	e284003c 	add	r0, r4, #60	; 0x3c
400151cc:	ebffd3ee 	bl	4000a18c <_txe_mutex_put>
400151d0:	e1a00006 	mov	r0, r6
400151d4:	eafffff4 	b	400151ac <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

400151d8 <CyU3PDmaChannelCommitBuffer>:
400151d8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400151dc:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400151e0:	e1a04000 	mov	r4, r0
400151e4:	e1a05001 	mov	r5, r1
400151e8:	e1a06002 	mov	r6, r2
400151ec:	e3e01000 	mvn	r1, #0
400151f0:	e1a00004 	mov	r0, r4
400151f4:	ebffffcd 	bl	40015130 <CyU3PDmaChannelAcquireLock>
400151f8:	e1a09000 	mov	r9, r0
400151fc:	e3590000 	cmp	r9, #0
40015200:	0a000002 	beq	40015210 <CyU3PDmaChannelCommitBuffer+0x38>
40015204:	e1a00009 	mov	r0, r9
40015208:	e28dd03c 	add	sp, sp, #60	; 0x3c
4001520c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015210:	e1d400b6 	ldrh	r0, [r4, #6]
40015214:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015218:	e0400001 	sub	r0, r0, r1
4001521c:	e1500005 	cmp	r0, r5
40015220:	aa000000 	bge	40015228 <CyU3PDmaChannelCommitBuffer+0x50>
40015224:	e3a09040 	mov	r9, #64	; 0x40
40015228:	e5940000 	ldr	r0, [r4]
4001522c:	e3500002 	cmp	r0, #2
40015230:	0a000000 	beq	40015238 <CyU3PDmaChannelCommitBuffer+0x60>
40015234:	e3a09042 	mov	r9, #66	; 0x42
40015238:	e1d400b4 	ldrh	r0, [r4, #4]
4001523c:	e3500003 	cmp	r0, #3
40015240:	1a000000 	bne	40015248 <CyU3PDmaChannelCommitBuffer+0x70>
40015244:	e3a09046 	mov	r9, #70	; 0x46
40015248:	e3590000 	cmp	r9, #0
4001524c:	0a000003 	beq	40015260 <CyU3PDmaChannelCommitBuffer+0x88>
40015250:	e284003c 	add	r0, r4, #60	; 0x3c
40015254:	ebffd3cc 	bl	4000a18c <_txe_mutex_put>
40015258:	e1a00009 	mov	r0, r9
4001525c:	eaffffe9 	b	40015208 <CyU3PDmaChannelCommitBuffer+0x30>
40015260:	e1d400b4 	ldrh	r0, [r4, #4]
40015264:	e20070ff 	and	r7, r0, #255	; 0xff
40015268:	e3570002 	cmp	r7, #2
4001526c:	1a000037 	bne	40015350 <CyU3PDmaChannelCommitBuffer+0x178>
40015270:	e1d401b6 	ldrh	r0, [r4, #22]
40015274:	e28d1014 	add	r1, sp, #20
40015278:	eb0034ae 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001527c:	e1d401b8 	ldrh	r0, [r4, #24]
40015280:	e28d1004 	add	r1, sp, #4
40015284:	eb0034ab 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015288:	e59d0020 	ldr	r0, [sp, #32]
4001528c:	e3100008 	tst	r0, #8
40015290:	1a000000 	bne	40015298 <CyU3PDmaChannelCommitBuffer+0xc0>
40015294:	e3a09047 	mov	r9, #71	; 0x47
40015298:	e59d0010 	ldr	r0, [sp, #16]
4001529c:	e3100008 	tst	r0, #8
400152a0:	0a000000 	beq	400152a8 <CyU3PDmaChannelCommitBuffer+0xd0>
400152a4:	e3a09047 	mov	r9, #71	; 0x47
400152a8:	e3590000 	cmp	r9, #0
400152ac:	1a000080 	bne	400154b4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400152b0:	e59d0010 	ldr	r0, [sp, #16]
400152b4:	e59f1208 	ldr	r1, [pc, #520]	; 400154c4 <CyU3PDmaChannelCommitBuffer+0x2ec>
400152b8:	e0000001 	and	r0, r0, r1
400152bc:	e58d0010 	str	r0, [sp, #16]
400152c0:	e59d0010 	ldr	r0, [sp, #16]
400152c4:	e1800805 	orr	r0, r0, r5, lsl #16
400152c8:	e58d0010 	str	r0, [sp, #16]
400152cc:	e3560000 	cmp	r6, #0
400152d0:	1a000005 	bne	400152ec <CyU3PDmaChannelCommitBuffer+0x114>
400152d4:	e59d1020 	ldr	r1, [sp, #32]
400152d8:	e201100f 	and	r1, r1, #15
400152dc:	e59d0010 	ldr	r0, [sp, #16]
400152e0:	e1800001 	orr	r0, r0, r1
400152e4:	e58d0010 	str	r0, [sp, #16]
400152e8:	ea000004 	b	40015300 <CyU3PDmaChannelCommitBuffer+0x128>
400152ec:	e206100e 	and	r1, r6, #14
400152f0:	e3811008 	orr	r1, r1, #8
400152f4:	e59d0010 	ldr	r0, [sp, #16]
400152f8:	e1800001 	orr	r0, r0, r1
400152fc:	e58d0010 	str	r0, [sp, #16]
40015300:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015304:	e3500000 	cmp	r0, #0
40015308:	0a000004 	beq	40015320 <CyU3PDmaChannelCommitBuffer+0x148>
4001530c:	e59d2010 	ldr	r2, [sp, #16]
40015310:	e59f31ac 	ldr	r3, [pc, #428]	; 400154c4 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015314:	e0021003 	and	r1, r2, r3
40015318:	e59d0004 	ldr	r0, [sp, #4]
4001531c:	ebfff34a 	bl	4001204c <CyU3PSysCleanDRegion>
40015320:	e1d401b8 	ldrh	r0, [r4, #24]
40015324:	e28d1004 	add	r1, sp, #4
40015328:	eb00349d 	bl	400225a4 <CyU3PDmaDscrSetConfig>
4001532c:	e1d411b8 	ldrh	r1, [r4, #24]
40015330:	e1d401b2 	ldrh	r0, [r4, #18]
40015334:	e3a02001 	mov	r2, #1
40015338:	ebfffeb8 	bl	40014e20 <CyU3PDmaSocketSendEvent>
4001533c:	e59d001c 	ldr	r0, [sp, #28]
40015340:	e1c401b6 	strh	r0, [r4, #22]
40015344:	e59d000c 	ldr	r0, [sp, #12]
40015348:	e1c401b8 	strh	r0, [r4, #24]
4001534c:	ea000058 	b	400154b4 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015350:	e3570004 	cmp	r7, #4
40015354:	1a000027 	bne	400153f8 <CyU3PDmaChannelCommitBuffer+0x220>
40015358:	e1d401b8 	ldrh	r0, [r4, #24]
4001535c:	e28d1004 	add	r1, sp, #4
40015360:	eb003474 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015364:	e59d0010 	ldr	r0, [sp, #16]
40015368:	e3100008 	tst	r0, #8
4001536c:	0a000000 	beq	40015374 <CyU3PDmaChannelCommitBuffer+0x19c>
40015370:	e3a09047 	mov	r9, #71	; 0x47
40015374:	e3590000 	cmp	r9, #0
40015378:	1a00004d 	bne	400154b4 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001537c:	e59d0010 	ldr	r0, [sp, #16]
40015380:	e1a00800 	lsl	r0, r0, #16
40015384:	e1a00820 	lsr	r0, r0, #16
40015388:	e58d0010 	str	r0, [sp, #16]
4001538c:	e3a01008 	mov	r1, #8
40015390:	e1811805 	orr	r1, r1, r5, lsl #16
40015394:	e59d0010 	ldr	r0, [sp, #16]
40015398:	e1800001 	orr	r0, r0, r1
4001539c:	e58d0010 	str	r0, [sp, #16]
400153a0:	e206100e 	and	r1, r6, #14
400153a4:	e59d0010 	ldr	r0, [sp, #16]
400153a8:	e1800001 	orr	r0, r0, r1
400153ac:	e58d0010 	str	r0, [sp, #16]
400153b0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400153b4:	e3500000 	cmp	r0, #0
400153b8:	0a000004 	beq	400153d0 <CyU3PDmaChannelCommitBuffer+0x1f8>
400153bc:	e59d2010 	ldr	r2, [sp, #16]
400153c0:	e59f30fc 	ldr	r3, [pc, #252]	; 400154c4 <CyU3PDmaChannelCommitBuffer+0x2ec>
400153c4:	e0021003 	and	r1, r2, r3
400153c8:	e59d0004 	ldr	r0, [sp, #4]
400153cc:	ebfff31e 	bl	4001204c <CyU3PSysCleanDRegion>
400153d0:	e1d401b8 	ldrh	r0, [r4, #24]
400153d4:	e28d1004 	add	r1, sp, #4
400153d8:	eb003471 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400153dc:	e1d411b8 	ldrh	r1, [r4, #24]
400153e0:	e1d401b2 	ldrh	r0, [r4, #18]
400153e4:	e3a02001 	mov	r2, #1
400153e8:	ebfffe8c 	bl	40014e20 <CyU3PDmaSocketSendEvent>
400153ec:	e59d000c 	ldr	r0, [sp, #12]
400153f0:	e1c401b8 	strh	r0, [r4, #24]
400153f4:	ea00002e 	b	400154b4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400153f8:	e1d401b2 	ldrh	r0, [r4, #18]
400153fc:	e28d1024 	add	r1, sp, #36	; 0x24
40015400:	ebfffdee 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40015404:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015408:	e3100702 	tst	r0, #524288	; 0x80000
4001540c:	0a000027 	beq	400154b0 <CyU3PDmaChannelCommitBuffer+0x2d8>
40015410:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015414:	e1a08800 	lsl	r8, r0, #16
40015418:	e1a08828 	lsr	r8, r8, #16
4001541c:	e28d1004 	add	r1, sp, #4
40015420:	e1a00008 	mov	r0, r8
40015424:	eb003443 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015428:	e59d0010 	ldr	r0, [sp, #16]
4001542c:	e3100008 	tst	r0, #8
40015430:	0a00001c 	beq	400154a8 <CyU3PDmaChannelCommitBuffer+0x2d0>
40015434:	e59d0010 	ldr	r0, [sp, #16]
40015438:	e1a00800 	lsl	r0, r0, #16
4001543c:	e1a00820 	lsr	r0, r0, #16
40015440:	e58d0010 	str	r0, [sp, #16]
40015444:	e59d0010 	ldr	r0, [sp, #16]
40015448:	e1800805 	orr	r0, r0, r5, lsl #16
4001544c:	e58d0010 	str	r0, [sp, #16]
40015450:	e3560000 	cmp	r6, #0
40015454:	0a000007 	beq	40015478 <CyU3PDmaChannelCommitBuffer+0x2a0>
40015458:	e59d0010 	ldr	r0, [sp, #16]
4001545c:	e3c0000f 	bic	r0, r0, #15
40015460:	e58d0010 	str	r0, [sp, #16]
40015464:	e206100e 	and	r1, r6, #14
40015468:	e3811008 	orr	r1, r1, #8
4001546c:	e59d0010 	ldr	r0, [sp, #16]
40015470:	e1800001 	orr	r0, r0, r1
40015474:	e58d0010 	str	r0, [sp, #16]
40015478:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001547c:	e3500000 	cmp	r0, #0
40015480:	0a000004 	beq	40015498 <CyU3PDmaChannelCommitBuffer+0x2c0>
40015484:	e59d2010 	ldr	r2, [sp, #16]
40015488:	e59f3034 	ldr	r3, [pc, #52]	; 400154c4 <CyU3PDmaChannelCommitBuffer+0x2ec>
4001548c:	e0021003 	and	r1, r2, r3
40015490:	e59d0004 	ldr	r0, [sp, #4]
40015494:	ebfff2ec 	bl	4001204c <CyU3PSysCleanDRegion>
40015498:	e28d1004 	add	r1, sp, #4
4001549c:	e1a00008 	mov	r0, r8
400154a0:	eb00343f 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400154a4:	ea000002 	b	400154b4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400154a8:	e3a09047 	mov	r9, #71	; 0x47
400154ac:	ea000000 	b	400154b4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400154b0:	e3a09047 	mov	r9, #71	; 0x47
400154b4:	e284003c 	add	r0, r4, #60	; 0x3c
400154b8:	ebffd333 	bl	4000a18c <_txe_mutex_put>
400154bc:	e1a00009 	mov	r0, r9
400154c0:	eaffff50 	b	40015208 <CyU3PDmaChannelCommitBuffer+0x30>
400154c4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

400154c8 <CyU3PDmaChannelConfigure_TypeAuto>:
400154c8:	e92d4070 	push	{r4, r5, r6, lr}
400154cc:	e1a05000 	mov	r5, r0
400154d0:	e1d501b2 	ldrh	r0, [r5, #18]
400154d4:	e3806901 	orr	r6, r0, #16384	; 0x4000
400154d8:	e1d501b0 	ldrh	r0, [r5, #16]
400154dc:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400154e0:	e1810800 	orr	r0, r1, r0, lsl #16
400154e4:	e1866000 	orr	r6, r6, r0
400154e8:	e1d500b4 	ldrh	r0, [r5, #4]
400154ec:	e3500001 	cmp	r0, #1
400154f0:	1a000000 	bne	400154f8 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
400154f4:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
400154f8:	e1d520b6 	ldrh	r2, [r5, #6]
400154fc:	e1d510b8 	ldrh	r1, [r5, #8]
40015500:	e1a03006 	mov	r3, r6
40015504:	e285000c 	add	r0, r5, #12
40015508:	eb00331b 	bl	4002217c <CyU3PDmaDscrChainCreate>
4001550c:	e1a04000 	mov	r4, r0
40015510:	e3540000 	cmp	r4, #0
40015514:	0a000001 	beq	40015520 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
40015518:	e1a00004 	mov	r0, r4
4001551c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015520:	e1d500bc 	ldrh	r0, [r5, #12]
40015524:	e1c501b6 	strh	r0, [r5, #22]
40015528:	e1c501ba 	strh	r0, [r5, #26]
4001552c:	e1c501be 	strh	r0, [r5, #30]
40015530:	e1d500be 	ldrh	r0, [r5, #14]
40015534:	e1c501b8 	strh	r0, [r5, #24]
40015538:	e1c501bc 	strh	r0, [r5, #28]
4001553c:	e1c502b0 	strh	r0, [r5, #32]
40015540:	e2850014 	add	r0, r5, #20
40015544:	eb003383 	bl	40022358 <CyU3PDmaDscrGet>
40015548:	e1a00005 	mov	r0, r5
4001554c:	eb0006b7 	bl	40017030 <CyU3PDmaConfigureSockets_TypeAuto>
40015550:	e3a00000 	mov	r0, #0
40015554:	eafffff0 	b	4001551c <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

40015558 <CyU3PDmaChannelConfigure_TypeManual>:
40015558:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001555c:	e24dd024 	sub	sp, sp, #36	; 0x24
40015560:	e1a04000 	mov	r4, r0
40015564:	e284700c 	add	r7, r4, #12
40015568:	e3a06cff 	mov	r6, #65280	; 0xff00
4001556c:	e1d401b0 	ldrh	r0, [r4, #16]
40015570:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015574:	e1810800 	orr	r0, r1, r0, lsl #16
40015578:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001557c:	e1866000 	orr	r6, r6, r0
40015580:	e1d400b4 	ldrh	r0, [r4, #4]
40015584:	e3500003 	cmp	r0, #3
40015588:	1a000002 	bne	40015598 <CyU3PDmaChannelConfigure_TypeManual+0x40>
4001558c:	e3a00c3f 	mov	r0, #16128	; 0x3f00
40015590:	e1c401b2 	strh	r0, [r4, #18]
40015594:	ea000009 	b	400155c0 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015598:	e1d400b4 	ldrh	r0, [r4, #4]
4001559c:	e3500004 	cmp	r0, #4
400155a0:	1a000006 	bne	400155c0 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400155a4:	e59f020c 	ldr	r0, [pc, #524]	; 400157b8 <CyU3PDmaChannelConfigure_TypeManual+0x260>
400155a8:	e1c401b0 	strh	r0, [r4, #16]
400155ac:	e284700e 	add	r7, r4, #14
400155b0:	e1d401b2 	ldrh	r0, [r4, #18]
400155b4:	e3806903 	orr	r6, r0, #49152	; 0xc000
400155b8:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400155bc:	e3866801 	orr	r6, r6, #65536	; 0x10000
400155c0:	e1d400b8 	ldrh	r0, [r4, #8]
400155c4:	e3500000 	cmp	r0, #0
400155c8:	0a00006b 	beq	4001577c <CyU3PDmaChannelConfigure_TypeManual+0x224>
400155cc:	e1d420b6 	ldrh	r2, [r4, #6]
400155d0:	e1d410b8 	ldrh	r1, [r4, #8]
400155d4:	e1a03006 	mov	r3, r6
400155d8:	e1a00007 	mov	r0, r7
400155dc:	eb0032e6 	bl	4002217c <CyU3PDmaDscrChainCreate>
400155e0:	e1a05000 	mov	r5, r0
400155e4:	e3550000 	cmp	r5, #0
400155e8:	0a000002 	beq	400155f8 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
400155ec:	e1a00005 	mov	r0, r5
400155f0:	e28dd024 	add	sp, sp, #36	; 0x24
400155f4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400155f8:	e1d400b4 	ldrh	r0, [r4, #4]
400155fc:	e3500002 	cmp	r0, #2
40015600:	1a000012 	bne	40015650 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015604:	e1d401b2 	ldrh	r0, [r4, #18]
40015608:	e3806903 	orr	r6, r0, #49152	; 0xc000
4001560c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015610:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015614:	e1d410b8 	ldrh	r1, [r4, #8]
40015618:	e1a03006 	mov	r3, r6
4001561c:	e3a02000 	mov	r2, #0
40015620:	e284000e 	add	r0, r4, #14
40015624:	eb0032d4 	bl	4002217c <CyU3PDmaDscrChainCreate>
40015628:	e1a05000 	mov	r5, r0
4001562c:	e3550000 	cmp	r5, #0
40015630:	0a000006 	beq	40015650 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015634:	e1d410b8 	ldrh	r1, [r4, #8]
40015638:	e1d700b0 	ldrh	r0, [r7]
4001563c:	e3a03001 	mov	r3, #1
40015640:	e1a02003 	mov	r2, r3
40015644:	eb003320 	bl	400222cc <CyU3PDmaDscrChainDestroy>
40015648:	e1a00005 	mov	r0, r5
4001564c:	eaffffe7 	b	400155f0 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015650:	e1d400bc 	ldrh	r0, [r4, #12]
40015654:	e1c401b6 	strh	r0, [r4, #22]
40015658:	e1c401ba 	strh	r0, [r4, #26]
4001565c:	e1c401be 	strh	r0, [r4, #30]
40015660:	e1d400be 	ldrh	r0, [r4, #14]
40015664:	e1c401b8 	strh	r0, [r4, #24]
40015668:	e1c401bc 	strh	r0, [r4, #28]
4001566c:	e1c402b0 	strh	r0, [r4, #32]
40015670:	e3a08000 	mov	r8, #0
40015674:	e1d790b0 	ldrh	r9, [r7]
40015678:	ea00003b 	b	4001576c <CyU3PDmaChannelConfigure_TypeManual+0x214>
4001567c:	e28d1014 	add	r1, sp, #20
40015680:	e1a00009 	mov	r0, r9
40015684:	eb0033ab 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015688:	e1d400b4 	ldrh	r0, [r4, #4]
4001568c:	e3500004 	cmp	r0, #4
40015690:	1a00000b 	bne	400156c4 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015694:	e59d0014 	ldr	r0, [sp, #20]
40015698:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
4001569c:	e0800001 	add	r0, r0, r1
400156a0:	e58d0014 	str	r0, [sp, #20]
400156a4:	e1d400b6 	ldrh	r0, [r4, #6]
400156a8:	e280000f 	add	r0, r0, #15
400156ac:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400156b0:	e0400001 	sub	r0, r0, r1
400156b4:	e59f1100 	ldr	r1, [pc, #256]	; 400157bc <CyU3PDmaChannelConfigure_TypeManual+0x264>
400156b8:	e0000001 	and	r0, r0, r1
400156bc:	e58d0020 	str	r0, [sp, #32]
400156c0:	ea000021 	b	4001574c <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
400156c4:	e1d400b4 	ldrh	r0, [r4, #4]
400156c8:	e3500002 	cmp	r0, #2
400156cc:	1a000012 	bne	4001571c <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
400156d0:	e1d401b8 	ldrh	r0, [r4, #24]
400156d4:	e28d1004 	add	r1, sp, #4
400156d8:	eb003396 	bl	40022538 <CyU3PDmaDscrGetConfig>
400156dc:	e59d0014 	ldr	r0, [sp, #20]
400156e0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400156e4:	e0800001 	add	r0, r0, r1
400156e8:	e58d0004 	str	r0, [sp, #4]
400156ec:	e1d400b6 	ldrh	r0, [r4, #6]
400156f0:	e280000f 	add	r0, r0, #15
400156f4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400156f8:	e0400001 	sub	r0, r0, r1
400156fc:	e59f10b8 	ldr	r1, [pc, #184]	; 400157bc <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015700:	e0000001 	and	r0, r0, r1
40015704:	e58d0010 	str	r0, [sp, #16]
40015708:	e1d401b8 	ldrh	r0, [r4, #24]
4001570c:	e28d1004 	add	r1, sp, #4
40015710:	eb0033a3 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40015714:	e59d000c 	ldr	r0, [sp, #12]
40015718:	e1c401b8 	strh	r0, [r4, #24]
4001571c:	e59d0014 	ldr	r0, [sp, #20]
40015720:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015724:	e0800001 	add	r0, r0, r1
40015728:	e58d0014 	str	r0, [sp, #20]
4001572c:	e1d400b6 	ldrh	r0, [r4, #6]
40015730:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015734:	e0400001 	sub	r0, r0, r1
40015738:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
4001573c:	e0400001 	sub	r0, r0, r1
40015740:	e59f1074 	ldr	r1, [pc, #116]	; 400157bc <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015744:	e0000001 	and	r0, r0, r1
40015748:	e58d0020 	str	r0, [sp, #32]
4001574c:	e28d1014 	add	r1, sp, #20
40015750:	e1a00009 	mov	r0, r9
40015754:	eb003392 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40015758:	e59d001c 	ldr	r0, [sp, #28]
4001575c:	e1a09800 	lsl	r9, r0, #16
40015760:	e1a09829 	lsr	r9, r9, #16
40015764:	e2880001 	add	r0, r8, #1
40015768:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001576c:	e1d400b8 	ldrh	r0, [r4, #8]
40015770:	e1500008 	cmp	r0, r8
40015774:	caffffc0 	bgt	4001567c <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015778:	ea000008 	b	400157a0 <CyU3PDmaChannelConfigure_TypeManual+0x248>
4001577c:	e59f003c 	ldr	r0, [pc, #60]	; 400157c0 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015780:	e1c400bc 	strh	r0, [r4, #12]
40015784:	e1c401b6 	strh	r0, [r4, #22]
40015788:	e1c401ba 	strh	r0, [r4, #26]
4001578c:	e1c401be 	strh	r0, [r4, #30]
40015790:	e1c400be 	strh	r0, [r4, #14]
40015794:	e1c401b8 	strh	r0, [r4, #24]
40015798:	e1c401bc 	strh	r0, [r4, #28]
4001579c:	e1c402b0 	strh	r0, [r4, #32]
400157a0:	e2840014 	add	r0, r4, #20
400157a4:	eb0032eb 	bl	40022358 <CyU3PDmaDscrGet>
400157a8:	e1a00004 	mov	r0, r4
400157ac:	eb00065f 	bl	40017130 <CyU3PDmaConfigureSockets_TypeManual>
400157b0:	e3a00000 	mov	r0, #0
400157b4:	eaffff8d 	b	400155f0 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400157b8:	00003f01 	.word	0x00003f01
400157bc:	0000fff0 	.word	0x0000fff0
400157c0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

400157c4 <CyU3PDmaChannelCreate>:
400157c4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400157c8:	e1a04000 	mov	r4, r0
400157cc:	e1a05001 	mov	r5, r1
400157d0:	e1a06002 	mov	r6, r2
400157d4:	e3560000 	cmp	r6, #0
400157d8:	1a000001 	bne	400157e4 <CyU3PDmaChannelCreate+0x20>
400157dc:	e3a00041 	mov	r0, #65	; 0x41
400157e0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400157e4:	e3540000 	cmp	r4, #0
400157e8:	1a000001 	bne	400157f4 <CyU3PDmaChannelCreate+0x30>
400157ec:	e3a00041 	mov	r0, #65	; 0x41
400157f0:	eafffffa 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
400157f4:	eb00330f 	bl	40022438 <CyU3PDmaDscrGetFreeCount>
400157f8:	e1d610b2 	ldrh	r1, [r6, #2]
400157fc:	e2811001 	add	r1, r1, #1
40015800:	e1500001 	cmp	r0, r1
40015804:	da000007 	ble	40015828 <CyU3PDmaChannelCreate+0x64>
40015808:	e3550002 	cmp	r5, #2
4001580c:	1a000007 	bne	40015830 <CyU3PDmaChannelCreate+0x6c>
40015810:	eb003308 	bl	40022438 <CyU3PDmaDscrGetFreeCount>
40015814:	e1d610b2 	ldrh	r1, [r6, #2]
40015818:	e3a02001 	mov	r2, #1
4001581c:	e0821101 	add	r1, r2, r1, lsl #2
40015820:	e1500001 	cmp	r0, r1
40015824:	ca000001 	bgt	40015830 <CyU3PDmaChannelCreate+0x6c>
40015828:	e3a00010 	mov	r0, #16
4001582c:	eaffffeb 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015830:	e1d600b0 	ldrh	r0, [r6]
40015834:	e3500000 	cmp	r0, #0
40015838:	0a000003 	beq	4001584c <CyU3PDmaChannelCreate+0x88>
4001583c:	e1d600b0 	ldrh	r0, [r6]
40015840:	e59f1354 	ldr	r1, [pc, #852]	; 40015b9c <CyU3PDmaChannelCreate+0x3d8>
40015844:	e1500001 	cmp	r0, r1
40015848:	da000001 	ble	40015854 <CyU3PDmaChannelCreate+0x90>
4001584c:	e3a00040 	mov	r0, #64	; 0x40
40015850:	eaffffe2 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015854:	e3550000 	cmp	r5, #0
40015858:	0a000001 	beq	40015864 <CyU3PDmaChannelCreate+0xa0>
4001585c:	e3550001 	cmp	r5, #1
40015860:	1a000009 	bne	4001588c <CyU3PDmaChannelCreate+0xc8>
40015864:	e1d600b0 	ldrh	r0, [r6]
40015868:	e310000f 	tst	r0, #15
4001586c:	0a000001 	beq	40015878 <CyU3PDmaChannelCreate+0xb4>
40015870:	e3a00040 	mov	r0, #64	; 0x40
40015874:	eaffffd9 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015878:	e1d600b2 	ldrh	r0, [r6, #2]
4001587c:	e3500000 	cmp	r0, #0
40015880:	1a00000b 	bne	400158b4 <CyU3PDmaChannelCreate+0xf0>
40015884:	e3a00040 	mov	r0, #64	; 0x40
40015888:	eaffffd4 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
4001588c:	e1d600b0 	ldrh	r0, [r6]
40015890:	e1d610ba 	ldrh	r1, [r6, #10]
40015894:	e0400001 	sub	r0, r0, r1
40015898:	e1d610bc 	ldrh	r1, [r6, #12]
4001589c:	e0400001 	sub	r0, r0, r1
400158a0:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
400158a4:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
400158a8:	0a000001 	beq	400158b4 <CyU3PDmaChannelCreate+0xf0>
400158ac:	e3a00040 	mov	r0, #64	; 0x40
400158b0:	eaffffca 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
400158b4:	e5d60010 	ldrb	r0, [r6, #16]
400158b8:	e3500002 	cmp	r0, #2
400158bc:	ba000001 	blt	400158c8 <CyU3PDmaChannelCreate+0x104>
400158c0:	e3a00040 	mov	r0, #64	; 0x40
400158c4:	eaffffc5 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
400158c8:	e3550004 	cmp	r5, #4
400158cc:	0a000011 	beq	40015918 <CyU3PDmaChannelCreate+0x154>
400158d0:	e1d600b4 	ldrh	r0, [r6, #4]
400158d4:	e3a0103f 	mov	r1, #63	; 0x3f
400158d8:	e0018440 	and	r8, r1, r0, asr #8
400158dc:	e1d600b4 	ldrh	r0, [r6, #4]
400158e0:	e20090ff 	and	r9, r0, #255	; 0xff
400158e4:	e1d600b4 	ldrh	r0, [r6, #4]
400158e8:	ebfffd14 	bl	40014d40 <CyU3PDmaSocketIsValidProducer>
400158ec:	e3500000 	cmp	r0, #0
400158f0:	1a000001 	bne	400158fc <CyU3PDmaChannelCreate+0x138>
400158f4:	e3a00040 	mov	r0, #64	; 0x40
400158f8:	eaffffb8 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
400158fc:	e59f029c 	ldr	r0, [pc, #668]	; 40015ba0 <CyU3PDmaChannelCreate+0x3dc>
40015900:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015904:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015908:	e3500000 	cmp	r0, #0
4001590c:	0a000007 	beq	40015930 <CyU3PDmaChannelCreate+0x16c>
40015910:	e3a00040 	mov	r0, #64	; 0x40
40015914:	eaffffb1 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015918:	e1d600b4 	ldrh	r0, [r6, #4]
4001591c:	e59f1280 	ldr	r1, [pc, #640]	; 40015ba4 <CyU3PDmaChannelCreate+0x3e0>
40015920:	e1500001 	cmp	r0, r1
40015924:	0a000001 	beq	40015930 <CyU3PDmaChannelCreate+0x16c>
40015928:	e3a00040 	mov	r0, #64	; 0x40
4001592c:	eaffffab 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015930:	e3550003 	cmp	r5, #3
40015934:	0a000011 	beq	40015980 <CyU3PDmaChannelCreate+0x1bc>
40015938:	e1d600b6 	ldrh	r0, [r6, #6]
4001593c:	e3a0103f 	mov	r1, #63	; 0x3f
40015940:	e0018440 	and	r8, r1, r0, asr #8
40015944:	e1d600b6 	ldrh	r0, [r6, #6]
40015948:	e20090ff 	and	r9, r0, #255	; 0xff
4001594c:	e1d600b6 	ldrh	r0, [r6, #6]
40015950:	ebfffcc2 	bl	40014c60 <CyU3PDmaSocketIsValidConsumer>
40015954:	e3500000 	cmp	r0, #0
40015958:	1a000001 	bne	40015964 <CyU3PDmaChannelCreate+0x1a0>
4001595c:	e3a00040 	mov	r0, #64	; 0x40
40015960:	eaffff9e 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015964:	e59f0234 	ldr	r0, [pc, #564]	; 40015ba0 <CyU3PDmaChannelCreate+0x3dc>
40015968:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001596c:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015970:	e3500000 	cmp	r0, #0
40015974:	0a000006 	beq	40015994 <CyU3PDmaChannelCreate+0x1d0>
40015978:	e3a00040 	mov	r0, #64	; 0x40
4001597c:	eaffff97 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015980:	e1d600b6 	ldrh	r0, [r6, #6]
40015984:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015988:	0a000001 	beq	40015994 <CyU3PDmaChannelCreate+0x1d0>
4001598c:	e3a00040 	mov	r0, #64	; 0x40
40015990:	eaffff92 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015994:	e1d600b8 	ldrh	r0, [r6, #8]
40015998:	e3500000 	cmp	r0, #0
4001599c:	0a000008 	beq	400159c4 <CyU3PDmaChannelCreate+0x200>
400159a0:	e1d600b8 	ldrh	r0, [r6, #8]
400159a4:	e1d610b2 	ldrh	r1, [r6, #2]
400159a8:	e1500001 	cmp	r0, r1
400159ac:	aa000002 	bge	400159bc <CyU3PDmaChannelCreate+0x1f8>
400159b0:	e1d600b2 	ldrh	r0, [r6, #2]
400159b4:	e350001f 	cmp	r0, #31
400159b8:	da000001 	ble	400159c4 <CyU3PDmaChannelCreate+0x200>
400159bc:	e3a00040 	mov	r0, #64	; 0x40
400159c0:	eaffff86 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
400159c4:	e3550004 	cmp	r5, #4
400159c8:	0a000007 	beq	400159ec <CyU3PDmaChannelCreate+0x228>
400159cc:	e1d600b4 	ldrh	r0, [r6, #4]
400159d0:	e3a0103f 	mov	r1, #63	; 0x3f
400159d4:	e0018440 	and	r8, r1, r0, asr #8
400159d8:	e1d600b4 	ldrh	r0, [r6, #4]
400159dc:	e20090ff 	and	r9, r0, #255	; 0xff
400159e0:	e59f01b8 	ldr	r0, [pc, #440]	; 40015ba0 <CyU3PDmaChannelCreate+0x3dc>
400159e4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400159e8:	e7804109 	str	r4, [r0, r9, lsl #2]
400159ec:	e3550003 	cmp	r5, #3
400159f0:	0a000007 	beq	40015a14 <CyU3PDmaChannelCreate+0x250>
400159f4:	e1d600b6 	ldrh	r0, [r6, #6]
400159f8:	e3a0103f 	mov	r1, #63	; 0x3f
400159fc:	e0018440 	and	r8, r1, r0, asr #8
40015a00:	e1d600b6 	ldrh	r0, [r6, #6]
40015a04:	e20090ff 	and	r9, r0, #255	; 0xff
40015a08:	e59f0190 	ldr	r0, [pc, #400]	; 40015ba0 <CyU3PDmaChannelCreate+0x3dc>
40015a0c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015a10:	e7804109 	str	r4, [r0, r9, lsl #2]
40015a14:	e1c450b4 	strh	r5, [r4, #4]
40015a18:	e1d600b0 	ldrh	r0, [r6]
40015a1c:	e1c400b6 	strh	r0, [r4, #6]
40015a20:	e1d600b2 	ldrh	r0, [r6, #2]
40015a24:	e1c400b8 	strh	r0, [r4, #8]
40015a28:	e1d600b8 	ldrh	r0, [r6, #8]
40015a2c:	e1c400ba 	strh	r0, [r4, #10]
40015a30:	e1d600b4 	ldrh	r0, [r6, #4]
40015a34:	e1c401b0 	strh	r0, [r4, #16]
40015a38:	e1d600b6 	ldrh	r0, [r6, #6]
40015a3c:	e1c401b2 	strh	r0, [r4, #18]
40015a40:	e1d600ba 	ldrh	r0, [r6, #10]
40015a44:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015a48:	e1d600bc 	ldrh	r0, [r6, #12]
40015a4c:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015a50:	e1d600be 	ldrh	r0, [r6, #14]
40015a54:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015a58:	e5d60010 	ldrb	r0, [r6, #16]
40015a5c:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015a60:	e5960014 	ldr	r0, [r6, #20]
40015a64:	e5840030 	str	r0, [r4, #48]	; 0x30
40015a68:	e3a00000 	mov	r0, #0
40015a6c:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015a70:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015a74:	e3a03038 	mov	r3, #56	; 0x38
40015a78:	e3a02000 	mov	r2, #0
40015a7c:	e1a01002 	mov	r1, r2
40015a80:	e284003c 	add	r0, r4, #60	; 0x3c
40015a84:	ebffd10d 	bl	40009ec0 <_txe_mutex_create>
40015a88:	e3a02028 	mov	r2, #40	; 0x28
40015a8c:	e3a01000 	mov	r1, #0
40015a90:	e2840074 	add	r0, r4, #116	; 0x74
40015a94:	ebffd04f 	bl	40009bd8 <_txe_event_flags_create>
40015a98:	e5960018 	ldr	r0, [r6, #24]
40015a9c:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015aa0:	e59f0100 	ldr	r0, [pc, #256]	; 40015ba8 <CyU3PDmaChannelCreate+0x3e4>
40015aa4:	e5900000 	ldr	r0, [r0]
40015aa8:	e5840038 	str	r0, [r4, #56]	; 0x38
40015aac:	e3550005 	cmp	r5, #5
40015ab0:	308ff105 	addcc	pc, pc, r5, lsl #2
40015ab4:	ea000011 	b	40015b00 <CyU3PDmaChannelCreate+0x33c>
40015ab8:	ea000003 	b	40015acc <CyU3PDmaChannelCreate+0x308>
40015abc:	ea000004 	b	40015ad4 <CyU3PDmaChannelCreate+0x310>
40015ac0:	ea00000a 	b	40015af0 <CyU3PDmaChannelCreate+0x32c>
40015ac4:	ea000006 	b	40015ae4 <CyU3PDmaChannelCreate+0x320>
40015ac8:	ea000007 	b	40015aec <CyU3PDmaChannelCreate+0x328>
40015acc:	e1a00000 	nop			; (mov r0, r0)
40015ad0:	e1a00000 	nop			; (mov r0, r0)
40015ad4:	e1a00004 	mov	r0, r4
40015ad8:	ebfffe7a 	bl	400154c8 <CyU3PDmaChannelConfigure_TypeAuto>
40015adc:	e1a07000 	mov	r7, r0
40015ae0:	ea000009 	b	40015b0c <CyU3PDmaChannelCreate+0x348>
40015ae4:	e1a00000 	nop			; (mov r0, r0)
40015ae8:	e1a00000 	nop			; (mov r0, r0)
40015aec:	e1a00000 	nop			; (mov r0, r0)
40015af0:	e1a00004 	mov	r0, r4
40015af4:	ebfffe97 	bl	40015558 <CyU3PDmaChannelConfigure_TypeManual>
40015af8:	e1a07000 	mov	r7, r0
40015afc:	ea000002 	b	40015b0c <CyU3PDmaChannelCreate+0x348>
40015b00:	e1a00000 	nop			; (mov r0, r0)
40015b04:	e3a07040 	mov	r7, #64	; 0x40
40015b08:	e1a00000 	nop			; (mov r0, r0)
40015b0c:	e1a00000 	nop			; (mov r0, r0)
40015b10:	e3570000 	cmp	r7, #0
40015b14:	1a000002 	bne	40015b24 <CyU3PDmaChannelCreate+0x360>
40015b18:	e3a00001 	mov	r0, #1
40015b1c:	e5840000 	str	r0, [r4]
40015b20:	ea00001b 	b	40015b94 <CyU3PDmaChannelCreate+0x3d0>
40015b24:	e284003c 	add	r0, r4, #60	; 0x3c
40015b28:	ebffd142 	bl	4000a038 <_txe_mutex_delete>
40015b2c:	e2840074 	add	r0, r4, #116	; 0x74
40015b30:	ebffd078 	bl	40009d18 <_txe_event_flags_delete>
40015b34:	e3550004 	cmp	r5, #4
40015b38:	0a000008 	beq	40015b60 <CyU3PDmaChannelCreate+0x39c>
40015b3c:	e1d600b4 	ldrh	r0, [r6, #4]
40015b40:	e3a0103f 	mov	r1, #63	; 0x3f
40015b44:	e0018440 	and	r8, r1, r0, asr #8
40015b48:	e1d600b4 	ldrh	r0, [r6, #4]
40015b4c:	e20090ff 	and	r9, r0, #255	; 0xff
40015b50:	e3a00000 	mov	r0, #0
40015b54:	e59f1044 	ldr	r1, [pc, #68]	; 40015ba0 <CyU3PDmaChannelCreate+0x3dc>
40015b58:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015b5c:	e7810109 	str	r0, [r1, r9, lsl #2]
40015b60:	e3550003 	cmp	r5, #3
40015b64:	0a000008 	beq	40015b8c <CyU3PDmaChannelCreate+0x3c8>
40015b68:	e1d600b6 	ldrh	r0, [r6, #6]
40015b6c:	e3a0103f 	mov	r1, #63	; 0x3f
40015b70:	e0018440 	and	r8, r1, r0, asr #8
40015b74:	e1d600b6 	ldrh	r0, [r6, #6]
40015b78:	e20090ff 	and	r9, r0, #255	; 0xff
40015b7c:	e3a00000 	mov	r0, #0
40015b80:	e59f1018 	ldr	r1, [pc, #24]	; 40015ba0 <CyU3PDmaChannelCreate+0x3dc>
40015b84:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015b88:	e7810109 	str	r0, [r1, r9, lsl #2]
40015b8c:	e3a00000 	mov	r0, #0
40015b90:	e5840000 	str	r0, [r4]
40015b94:	e1a00007 	mov	r0, r7
40015b98:	eaffff10 	b	400157e0 <CyU3PDmaChannelCreate+0x1c>
40015b9c:	0000fff0 	.word	0x0000fff0
40015ba0:	40030d1c 	.word	0x40030d1c
40015ba4:	00003f01 	.word	0x00003f01
40015ba8:	40030c80 	.word	0x40030c80

Disassembly of section i.CyU3PDmaChannelDestroy:

40015bac <CyU3PDmaChannelDestroy>:
40015bac:	e92d4070 	push	{r4, r5, r6, lr}
40015bb0:	e1a04000 	mov	r4, r0
40015bb4:	e3e01000 	mvn	r1, #0
40015bb8:	e1a00004 	mov	r0, r4
40015bbc:	ebfffd5b 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40015bc0:	e1a05000 	mov	r5, r0
40015bc4:	e3550000 	cmp	r5, #0
40015bc8:	0a000001 	beq	40015bd4 <CyU3PDmaChannelDestroy+0x28>
40015bcc:	e1a00005 	mov	r0, r5
40015bd0:	e8bd8070 	pop	{r4, r5, r6, pc}
40015bd4:	e1d400b4 	ldrh	r0, [r4, #4]
40015bd8:	e3500005 	cmp	r0, #5
40015bdc:	308ff100 	addcc	pc, pc, r0, lsl #2
40015be0:	ea00000f 	b	40015c24 <CyU3PDmaChannelDestroy+0x78>
40015be4:	ea000003 	b	40015bf8 <CyU3PDmaChannelDestroy+0x4c>
40015be8:	ea000004 	b	40015c00 <CyU3PDmaChannelDestroy+0x54>
40015bec:	ea000009 	b	40015c18 <CyU3PDmaChannelDestroy+0x6c>
40015bf0:	ea000005 	b	40015c0c <CyU3PDmaChannelDestroy+0x60>
40015bf4:	ea000006 	b	40015c14 <CyU3PDmaChannelDestroy+0x68>
40015bf8:	e1a00000 	nop			; (mov r0, r0)
40015bfc:	e1a00000 	nop			; (mov r0, r0)
40015c00:	e1a00004 	mov	r0, r4
40015c04:	eb000014 	bl	40015c5c <CyU3PDmaChannelDestroy_TypeAuto>
40015c08:	ea00000a 	b	40015c38 <CyU3PDmaChannelDestroy+0x8c>
40015c0c:	e1a00000 	nop			; (mov r0, r0)
40015c10:	e1a00000 	nop			; (mov r0, r0)
40015c14:	e1a00000 	nop			; (mov r0, r0)
40015c18:	e1a00004 	mov	r0, r4
40015c1c:	eb000043 	bl	40015d30 <CyU3PDmaChannelDestroy_TypeManual>
40015c20:	ea000004 	b	40015c38 <CyU3PDmaChannelDestroy+0x8c>
40015c24:	e1a00000 	nop			; (mov r0, r0)
40015c28:	e284003c 	add	r0, r4, #60	; 0x3c
40015c2c:	ebffd156 	bl	4000a18c <_txe_mutex_put>
40015c30:	e3a00040 	mov	r0, #64	; 0x40
40015c34:	eaffffe5 	b	40015bd0 <CyU3PDmaChannelDestroy+0x24>
40015c38:	e1a00000 	nop			; (mov r0, r0)
40015c3c:	e3a00000 	mov	r0, #0
40015c40:	e5840000 	str	r0, [r4]
40015c44:	e284003c 	add	r0, r4, #60	; 0x3c
40015c48:	ebffd0fa 	bl	4000a038 <_txe_mutex_delete>
40015c4c:	e2840074 	add	r0, r4, #116	; 0x74
40015c50:	ebffd030 	bl	40009d18 <_txe_event_flags_delete>
40015c54:	e3a00000 	mov	r0, #0
40015c58:	eaffffdc 	b	40015bd0 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015c5c <CyU3PDmaChannelDestroy_TypeAuto>:
40015c5c:	e92d4070 	push	{r4, r5, r6, lr}
40015c60:	e24dd018 	sub	sp, sp, #24
40015c64:	e1a04000 	mov	r4, r0
40015c68:	e1d401b0 	ldrh	r0, [r4, #16]
40015c6c:	ebfffbbb 	bl	40014b60 <CyU3PDmaSocketDisable>
40015c70:	e1d401b2 	ldrh	r0, [r4, #18]
40015c74:	ebfffbb9 	bl	40014b60 <CyU3PDmaSocketDisable>
40015c78:	e1d401b0 	ldrh	r0, [r4, #16]
40015c7c:	e1a0100d 	mov	r1, sp
40015c80:	ebfffbce 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40015c84:	e59f009c 	ldr	r0, [pc, #156]	; 40015d28 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015c88:	e58d0000 	str	r0, [sp]
40015c8c:	e1d401b0 	ldrh	r0, [r4, #16]
40015c90:	e1a0100d 	mov	r1, sp
40015c94:	ebfffc73 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40015c98:	e1d401b0 	ldrh	r0, [r4, #16]
40015c9c:	e20050ff 	and	r5, r0, #255	; 0xff
40015ca0:	e1d401b0 	ldrh	r0, [r4, #16]
40015ca4:	e3a0103f 	mov	r1, #63	; 0x3f
40015ca8:	e0016440 	and	r6, r1, r0, asr #8
40015cac:	e3a00000 	mov	r0, #0
40015cb0:	e59f1074 	ldr	r1, [pc, #116]	; 40015d2c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015cb4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015cb8:	e7810105 	str	r0, [r1, r5, lsl #2]
40015cbc:	e1d401b2 	ldrh	r0, [r4, #18]
40015cc0:	e1a0100d 	mov	r1, sp
40015cc4:	ebfffbbd 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40015cc8:	e59f0058 	ldr	r0, [pc, #88]	; 40015d28 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015ccc:	e58d0000 	str	r0, [sp]
40015cd0:	e1d401b2 	ldrh	r0, [r4, #18]
40015cd4:	e1a0100d 	mov	r1, sp
40015cd8:	ebfffc62 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40015cdc:	e1d401b2 	ldrh	r0, [r4, #18]
40015ce0:	e20050ff 	and	r5, r0, #255	; 0xff
40015ce4:	e1d401b2 	ldrh	r0, [r4, #18]
40015ce8:	e3a0103f 	mov	r1, #63	; 0x3f
40015cec:	e0016440 	and	r6, r1, r0, asr #8
40015cf0:	e3a00000 	mov	r0, #0
40015cf4:	e59f1030 	ldr	r1, [pc, #48]	; 40015d2c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015cf8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015cfc:	e7810105 	str	r0, [r1, r5, lsl #2]
40015d00:	e1d410b8 	ldrh	r1, [r4, #8]
40015d04:	e1d400bc 	ldrh	r0, [r4, #12]
40015d08:	e3a03001 	mov	r3, #1
40015d0c:	e1a02003 	mov	r2, r3
40015d10:	eb00316d 	bl	400222cc <CyU3PDmaDscrChainDestroy>
40015d14:	e1d401b4 	ldrh	r0, [r4, #20]
40015d18:	eb0031df 	bl	4002249c <CyU3PDmaDscrPut>
40015d1c:	e3a00000 	mov	r0, #0
40015d20:	e28dd018 	add	sp, sp, #24
40015d24:	e8bd8070 	pop	{r4, r5, r6, pc}
40015d28:	0000ffff 	.word	0x0000ffff
40015d2c:	40030d1c 	.word	0x40030d1c

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015d30 <CyU3PDmaChannelDestroy_TypeManual>:
40015d30:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015d34:	e24dd028 	sub	sp, sp, #40	; 0x28
40015d38:	e1a04000 	mov	r4, r0
40015d3c:	e1d400b4 	ldrh	r0, [r4, #4]
40015d40:	e3500004 	cmp	r0, #4
40015d44:	0a000012 	beq	40015d94 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015d48:	e1d401b0 	ldrh	r0, [r4, #16]
40015d4c:	ebfffb83 	bl	40014b60 <CyU3PDmaSocketDisable>
40015d50:	e1d401b0 	ldrh	r0, [r4, #16]
40015d54:	e1a0100d 	mov	r1, sp
40015d58:	ebfffb98 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40015d5c:	e59f0178 	ldr	r0, [pc, #376]	; 40015edc <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015d60:	e58d0000 	str	r0, [sp]
40015d64:	e1d401b0 	ldrh	r0, [r4, #16]
40015d68:	e1a0100d 	mov	r1, sp
40015d6c:	ebfffc3d 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40015d70:	e1d401b0 	ldrh	r0, [r4, #16]
40015d74:	e20070ff 	and	r7, r0, #255	; 0xff
40015d78:	e1d401b0 	ldrh	r0, [r4, #16]
40015d7c:	e3a0103f 	mov	r1, #63	; 0x3f
40015d80:	e0018440 	and	r8, r1, r0, asr #8
40015d84:	e3a00000 	mov	r0, #0
40015d88:	e59f1150 	ldr	r1, [pc, #336]	; 40015ee0 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015d8c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015d90:	e7810107 	str	r0, [r1, r7, lsl #2]
40015d94:	e1d400b4 	ldrh	r0, [r4, #4]
40015d98:	e3500003 	cmp	r0, #3
40015d9c:	0a000012 	beq	40015dec <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015da0:	e1d401b2 	ldrh	r0, [r4, #18]
40015da4:	ebfffb6d 	bl	40014b60 <CyU3PDmaSocketDisable>
40015da8:	e1d401b2 	ldrh	r0, [r4, #18]
40015dac:	e1a0100d 	mov	r1, sp
40015db0:	ebfffb82 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40015db4:	e59f0120 	ldr	r0, [pc, #288]	; 40015edc <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015db8:	e58d0000 	str	r0, [sp]
40015dbc:	e1d401b2 	ldrh	r0, [r4, #18]
40015dc0:	e1a0100d 	mov	r1, sp
40015dc4:	ebfffc27 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40015dc8:	e1d401b2 	ldrh	r0, [r4, #18]
40015dcc:	e20070ff 	and	r7, r0, #255	; 0xff
40015dd0:	e1d401b2 	ldrh	r0, [r4, #18]
40015dd4:	e3a0103f 	mov	r1, #63	; 0x3f
40015dd8:	e0018440 	and	r8, r1, r0, asr #8
40015ddc:	e3a00000 	mov	r0, #0
40015de0:	e59f10f8 	ldr	r1, [pc, #248]	; 40015ee0 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015de4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015de8:	e7810107 	str	r0, [r1, r7, lsl #2]
40015dec:	e1d400b8 	ldrh	r0, [r4, #8]
40015df0:	e3500000 	cmp	r0, #0
40015df4:	0a000033 	beq	40015ec8 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015df8:	e1d400b4 	ldrh	r0, [r4, #4]
40015dfc:	e3500004 	cmp	r0, #4
40015e00:	1a000014 	bne	40015e58 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015e04:	e1d450be 	ldrh	r5, [r4, #14]
40015e08:	e3a06000 	mov	r6, #0
40015e0c:	ea00000d 	b	40015e48 <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015e10:	e28d1018 	add	r1, sp, #24
40015e14:	e1a00005 	mov	r0, r5
40015e18:	eb0031c6 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015e1c:	e59d1018 	ldr	r1, [sp, #24]
40015e20:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015e24:	e0410002 	sub	r0, r1, r2
40015e28:	ebffb831 	bl	40003ef4 <CyU3PDmaBufferFree>
40015e2c:	e1a00005 	mov	r0, r5
40015e30:	eb003199 	bl	4002249c <CyU3PDmaDscrPut>
40015e34:	e59d0020 	ldr	r0, [sp, #32]
40015e38:	e1a05800 	lsl	r5, r0, #16
40015e3c:	e1a05825 	lsr	r5, r5, #16
40015e40:	e2860001 	add	r0, r6, #1
40015e44:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015e48:	e1d400b8 	ldrh	r0, [r4, #8]
40015e4c:	e1500006 	cmp	r0, r6
40015e50:	caffffee 	bgt	40015e10 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40015e54:	ea000013 	b	40015ea8 <CyU3PDmaChannelDestroy_TypeManual+0x178>
40015e58:	e1d450bc 	ldrh	r5, [r4, #12]
40015e5c:	e3a06000 	mov	r6, #0
40015e60:	ea00000d 	b	40015e9c <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40015e64:	e28d1018 	add	r1, sp, #24
40015e68:	e1a00005 	mov	r0, r5
40015e6c:	eb0031b1 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015e70:	e59d1018 	ldr	r1, [sp, #24]
40015e74:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40015e78:	e0410002 	sub	r0, r1, r2
40015e7c:	ebffb81c 	bl	40003ef4 <CyU3PDmaBufferFree>
40015e80:	e1a00005 	mov	r0, r5
40015e84:	eb003184 	bl	4002249c <CyU3PDmaDscrPut>
40015e88:	e59d0020 	ldr	r0, [sp, #32]
40015e8c:	e1a05800 	lsl	r5, r0, #16
40015e90:	e1a05825 	lsr	r5, r5, #16
40015e94:	e2860001 	add	r0, r6, #1
40015e98:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015e9c:	e1d400b8 	ldrh	r0, [r4, #8]
40015ea0:	e1500006 	cmp	r0, r6
40015ea4:	caffffee 	bgt	40015e64 <CyU3PDmaChannelDestroy_TypeManual+0x134>
40015ea8:	e1d400b4 	ldrh	r0, [r4, #4]
40015eac:	e3500002 	cmp	r0, #2
40015eb0:	1a000004 	bne	40015ec8 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015eb4:	e1d410b8 	ldrh	r1, [r4, #8]
40015eb8:	e1d400be 	ldrh	r0, [r4, #14]
40015ebc:	e3a03000 	mov	r3, #0
40015ec0:	e1a02003 	mov	r2, r3
40015ec4:	eb003100 	bl	400222cc <CyU3PDmaDscrChainDestroy>
40015ec8:	e1d401b4 	ldrh	r0, [r4, #20]
40015ecc:	eb003172 	bl	4002249c <CyU3PDmaDscrPut>
40015ed0:	e3a00000 	mov	r0, #0
40015ed4:	e28dd028 	add	sp, sp, #40	; 0x28
40015ed8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015edc:	0000ffff 	.word	0x0000ffff
40015ee0:	40030d1c 	.word	0x40030d1c

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40015ee4 <CyU3PDmaChannelGetBuffer>:
40015ee4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015ee8:	e24dd030 	sub	sp, sp, #48	; 0x30
40015eec:	e1a04000 	mov	r4, r0
40015ef0:	e1a05001 	mov	r5, r1
40015ef4:	e1a06002 	mov	r6, r2
40015ef8:	e3550000 	cmp	r5, #0
40015efc:	1a000002 	bne	40015f0c <CyU3PDmaChannelGetBuffer+0x28>
40015f00:	e3a00041 	mov	r0, #65	; 0x41
40015f04:	e28dd030 	add	sp, sp, #48	; 0x30
40015f08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015f0c:	e1a01006 	mov	r1, r6
40015f10:	e1a00004 	mov	r0, r4
40015f14:	ebfffc85 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40015f18:	e1a08000 	mov	r8, r0
40015f1c:	e3580000 	cmp	r8, #0
40015f20:	0a000001 	beq	40015f2c <CyU3PDmaChannelGetBuffer+0x48>
40015f24:	e1a00008 	mov	r0, r8
40015f28:	eafffff5 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40015f2c:	e5940000 	ldr	r0, [r4]
40015f30:	e3500002 	cmp	r0, #2
40015f34:	0a000003 	beq	40015f48 <CyU3PDmaChannelGetBuffer+0x64>
40015f38:	e5940000 	ldr	r0, [r4]
40015f3c:	e3500006 	cmp	r0, #6
40015f40:	0a000000 	beq	40015f48 <CyU3PDmaChannelGetBuffer+0x64>
40015f44:	e3a08042 	mov	r8, #66	; 0x42
40015f48:	e5940000 	ldr	r0, [r4]
40015f4c:	e3500005 	cmp	r0, #5
40015f50:	1a000000 	bne	40015f58 <CyU3PDmaChannelGetBuffer+0x74>
40015f54:	e3a08049 	mov	r8, #73	; 0x49
40015f58:	e5940000 	ldr	r0, [r4]
40015f5c:	e3500007 	cmp	r0, #7
40015f60:	1a000000 	bne	40015f68 <CyU3PDmaChannelGetBuffer+0x84>
40015f64:	e3a08048 	mov	r8, #72	; 0x48
40015f68:	e3580000 	cmp	r8, #0
40015f6c:	0a000003 	beq	40015f80 <CyU3PDmaChannelGetBuffer+0x9c>
40015f70:	e284003c 	add	r0, r4, #60	; 0x3c
40015f74:	ebffd084 	bl	4000a18c <_txe_mutex_put>
40015f78:	e1a00008 	mov	r0, r8
40015f7c:	eaffffe0 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40015f80:	e1d400b4 	ldrh	r0, [r4, #4]
40015f84:	e20070ff 	and	r7, r0, #255	; 0xff
40015f88:	e3570002 	cmp	r7, #2
40015f8c:	0a000001 	beq	40015f98 <CyU3PDmaChannelGetBuffer+0xb4>
40015f90:	e3570003 	cmp	r7, #3
40015f94:	1a00003e 	bne	40016094 <CyU3PDmaChannelGetBuffer+0x1b0>
40015f98:	e3a02002 	mov	r2, #2
40015f9c:	e3e01008 	mvn	r1, #8
40015fa0:	e2840074 	add	r0, r4, #116	; 0x74
40015fa4:	ebffcfab 	bl	40009e58 <_txe_event_flags_set>
40015fa8:	e1d401b6 	ldrh	r0, [r4, #22]
40015fac:	e28d101c 	add	r1, sp, #28
40015fb0:	eb003160 	bl	40022538 <CyU3PDmaDscrGetConfig>
40015fb4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015fb8:	e3100008 	tst	r0, #8
40015fbc:	1a000022 	bne	4001604c <CyU3PDmaChannelGetBuffer+0x168>
40015fc0:	e284003c 	add	r0, r4, #60	; 0x3c
40015fc4:	ebffd070 	bl	4000a18c <_txe_mutex_put>
40015fc8:	e58d6000 	str	r6, [sp]
40015fcc:	e28d302c 	add	r3, sp, #44	; 0x2c
40015fd0:	e3a02000 	mov	r2, #0
40015fd4:	e3a01068 	mov	r1, #104	; 0x68
40015fd8:	e2840074 	add	r0, r4, #116	; 0x74
40015fdc:	ebffcf6d 	bl	40009d98 <_txe_event_flags_get>
40015fe0:	e1a08000 	mov	r8, r0
40015fe4:	e3580000 	cmp	r8, #0
40015fe8:	0a000001 	beq	40015ff4 <CyU3PDmaChannelGetBuffer+0x110>
40015fec:	e3a00045 	mov	r0, #69	; 0x45
40015ff0:	eaffffc3 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40015ff4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015ff8:	e3100040 	tst	r0, #64	; 0x40
40015ffc:	0a000001 	beq	40016008 <CyU3PDmaChannelGetBuffer+0x124>
40016000:	e3a00049 	mov	r0, #73	; 0x49
40016004:	eaffffbe 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40016008:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001600c:	e3100020 	tst	r0, #32
40016010:	0a000001 	beq	4001601c <CyU3PDmaChannelGetBuffer+0x138>
40016014:	e3a00048 	mov	r0, #72	; 0x48
40016018:	eaffffb9 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
4001601c:	e1a01006 	mov	r1, r6
40016020:	e1a00004 	mov	r0, r4
40016024:	ebfffc41 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40016028:	e1a08000 	mov	r8, r0
4001602c:	e3580000 	cmp	r8, #0
40016030:	0a000001 	beq	4001603c <CyU3PDmaChannelGetBuffer+0x158>
40016034:	e1a00008 	mov	r0, r8
40016038:	eaffffb1 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
4001603c:	e1d401b6 	ldrh	r0, [r4, #22]
40016040:	e28d101c 	add	r1, sp, #28
40016044:	eb00313b 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016048:	ea000003 	b	4001605c <CyU3PDmaChannelGetBuffer+0x178>
4001604c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016050:	e3500000 	cmp	r0, #0
40016054:	0a000000 	beq	4001605c <CyU3PDmaChannelGetBuffer+0x178>
40016058:	ebffd237 	bl	4000a93c <_txe_thread_relinquish>
4001605c:	e59d001c 	ldr	r0, [sp, #28]
40016060:	e5850000 	str	r0, [r5]
40016064:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016068:	e59f11a4 	ldr	r1, [pc, #420]	; 40016214 <CyU3PDmaChannelGetBuffer+0x330>
4001606c:	e0010820 	and	r0, r1, r0, lsr #16
40016070:	e1c500b4 	strh	r0, [r5, #4]
40016074:	e241100f 	sub	r1, r1, #15
40016078:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001607c:	e0000001 	and	r0, r0, r1
40016080:	e1c500b6 	strh	r0, [r5, #6]
40016084:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016088:	e200000f 	and	r0, r0, #15
4001608c:	e1c500b8 	strh	r0, [r5, #8]
40016090:	ea00005b 	b	40016204 <CyU3PDmaChannelGetBuffer+0x320>
40016094:	e3570004 	cmp	r7, #4
40016098:	1a000036 	bne	40016178 <CyU3PDmaChannelGetBuffer+0x294>
4001609c:	e3a02002 	mov	r2, #2
400160a0:	e3e01010 	mvn	r1, #16
400160a4:	e2840074 	add	r0, r4, #116	; 0x74
400160a8:	ebffcf6a 	bl	40009e58 <_txe_event_flags_set>
400160ac:	e1d401b8 	ldrh	r0, [r4, #24]
400160b0:	e28d101c 	add	r1, sp, #28
400160b4:	eb00311f 	bl	40022538 <CyU3PDmaDscrGetConfig>
400160b8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160bc:	e3100008 	tst	r0, #8
400160c0:	0a000021 	beq	4001614c <CyU3PDmaChannelGetBuffer+0x268>
400160c4:	e284003c 	add	r0, r4, #60	; 0x3c
400160c8:	ebffd02f 	bl	4000a18c <_txe_mutex_put>
400160cc:	e58d6000 	str	r6, [sp]
400160d0:	e28d302c 	add	r3, sp, #44	; 0x2c
400160d4:	e3a02000 	mov	r2, #0
400160d8:	e3a01070 	mov	r1, #112	; 0x70
400160dc:	e2840074 	add	r0, r4, #116	; 0x74
400160e0:	ebffcf2c 	bl	40009d98 <_txe_event_flags_get>
400160e4:	e1a08000 	mov	r8, r0
400160e8:	e3580000 	cmp	r8, #0
400160ec:	0a000001 	beq	400160f8 <CyU3PDmaChannelGetBuffer+0x214>
400160f0:	e3a00045 	mov	r0, #69	; 0x45
400160f4:	eaffff82 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
400160f8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400160fc:	e3100040 	tst	r0, #64	; 0x40
40016100:	0a000001 	beq	4001610c <CyU3PDmaChannelGetBuffer+0x228>
40016104:	e3a00049 	mov	r0, #73	; 0x49
40016108:	eaffff7d 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
4001610c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016110:	e3100020 	tst	r0, #32
40016114:	0a000001 	beq	40016120 <CyU3PDmaChannelGetBuffer+0x23c>
40016118:	e3a00048 	mov	r0, #72	; 0x48
4001611c:	eaffff78 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40016120:	e1a01006 	mov	r1, r6
40016124:	e1a00004 	mov	r0, r4
40016128:	ebfffc00 	bl	40015130 <CyU3PDmaChannelAcquireLock>
4001612c:	e1a08000 	mov	r8, r0
40016130:	e3580000 	cmp	r8, #0
40016134:	0a000001 	beq	40016140 <CyU3PDmaChannelGetBuffer+0x25c>
40016138:	e1a00008 	mov	r0, r8
4001613c:	eaffff70 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40016140:	e1d401b8 	ldrh	r0, [r4, #24]
40016144:	e28d101c 	add	r1, sp, #28
40016148:	eb0030fa 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001614c:	e59d001c 	ldr	r0, [sp, #28]
40016150:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40016154:	e0400001 	sub	r0, r0, r1
40016158:	e5850000 	str	r0, [r5]
4001615c:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
40016160:	e1c500b4 	strh	r0, [r5, #4]
40016164:	e1d400b6 	ldrh	r0, [r4, #6]
40016168:	e1c500b6 	strh	r0, [r5, #6]
4001616c:	e3a00000 	mov	r0, #0
40016170:	e1c500b8 	strh	r0, [r5, #8]
40016174:	ea000022 	b	40016204 <CyU3PDmaChannelGetBuffer+0x320>
40016178:	e1d401b2 	ldrh	r0, [r4, #18]
4001617c:	e28d1004 	add	r1, sp, #4
40016180:	ebfffa8e 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40016184:	e59d1004 	ldr	r1, [sp, #4]
40016188:	e1a00801 	lsl	r0, r1, #16
4001618c:	e1a00820 	lsr	r0, r0, #16
40016190:	e28d101c 	add	r1, sp, #28
40016194:	eb0030e7 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016198:	e59d0010 	ldr	r0, [sp, #16]
4001619c:	e3100702 	tst	r0, #524288	; 0x80000
400161a0:	0a000016 	beq	40016200 <CyU3PDmaChannelGetBuffer+0x31c>
400161a4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400161a8:	e3100008 	tst	r0, #8
400161ac:	0a000013 	beq	40016200 <CyU3PDmaChannelGetBuffer+0x31c>
400161b0:	e59d001c 	ldr	r0, [sp, #28]
400161b4:	e5850000 	str	r0, [r5]
400161b8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400161bc:	e59f1050 	ldr	r1, [pc, #80]	; 40016214 <CyU3PDmaChannelGetBuffer+0x330>
400161c0:	e0010820 	and	r0, r1, r0, lsr #16
400161c4:	e1c500b4 	strh	r0, [r5, #4]
400161c8:	e241100f 	sub	r1, r1, #15
400161cc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400161d0:	e0000001 	and	r0, r0, r1
400161d4:	e1c500b6 	strh	r0, [r5, #6]
400161d8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400161dc:	e200000f 	and	r0, r0, #15
400161e0:	e1c500b8 	strh	r0, [r5, #8]
400161e4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400161e8:	e3500000 	cmp	r0, #0
400161ec:	0a000004 	beq	40016204 <CyU3PDmaChannelGetBuffer+0x320>
400161f0:	e1d510b6 	ldrh	r1, [r5, #6]
400161f4:	e5950000 	ldr	r0, [r5]
400161f8:	ebffefa1 	bl	40012084 <CyU3PSysFlushDRegion>
400161fc:	ea000000 	b	40016204 <CyU3PDmaChannelGetBuffer+0x320>
40016200:	e3a08047 	mov	r8, #71	; 0x47
40016204:	e284003c 	add	r0, r4, #60	; 0x3c
40016208:	ebffcfdf 	bl	4000a18c <_txe_mutex_put>
4001620c:	e1a00008 	mov	r0, r8
40016210:	eaffff3b 	b	40015f04 <CyU3PDmaChannelGetBuffer+0x20>
40016214:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

40016218 <CyU3PDmaChannelReset>:
40016218:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001621c:	e1a04000 	mov	r4, r0
40016220:	e3e01000 	mvn	r1, #0
40016224:	e1a00004 	mov	r0, r4
40016228:	ebfffbc0 	bl	40015130 <CyU3PDmaChannelAcquireLock>
4001622c:	e1a06000 	mov	r6, r0
40016230:	e3560000 	cmp	r6, #0
40016234:	0a000001 	beq	40016240 <CyU3PDmaChannelReset+0x28>
40016238:	e1a00006 	mov	r0, r6
4001623c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016240:	e1d400b4 	ldrh	r0, [r4, #4]
40016244:	e3500005 	cmp	r0, #5
40016248:	308ff100 	addcc	pc, pc, r0, lsl #2
4001624c:	ea00000f 	b	40016290 <CyU3PDmaChannelReset+0x78>
40016250:	ea000003 	b	40016264 <CyU3PDmaChannelReset+0x4c>
40016254:	ea000004 	b	4001626c <CyU3PDmaChannelReset+0x54>
40016258:	ea000009 	b	40016284 <CyU3PDmaChannelReset+0x6c>
4001625c:	ea000005 	b	40016278 <CyU3PDmaChannelReset+0x60>
40016260:	ea000006 	b	40016280 <CyU3PDmaChannelReset+0x68>
40016264:	e1a00000 	nop			; (mov r0, r0)
40016268:	e1a00000 	nop			; (mov r0, r0)
4001626c:	e1a00004 	mov	r0, r4
40016270:	eb000030 	bl	40016338 <CyU3PDmaChannelReset_TypeAuto>
40016274:	ea000007 	b	40016298 <CyU3PDmaChannelReset+0x80>
40016278:	e1a00000 	nop			; (mov r0, r0)
4001627c:	e1a00000 	nop			; (mov r0, r0)
40016280:	e1a00000 	nop			; (mov r0, r0)
40016284:	e1a00004 	mov	r0, r4
40016288:	eb000045 	bl	400163a4 <CyU3PDmaChannelReset_TypeManual>
4001628c:	ea000001 	b	40016298 <CyU3PDmaChannelReset+0x80>
40016290:	e1a00000 	nop			; (mov r0, r0)
40016294:	e1a00000 	nop			; (mov r0, r0)
40016298:	e1a00000 	nop			; (mov r0, r0)
4001629c:	ebffc970 	bl	40008864 <_tx_thread_identify>
400162a0:	e1a05000 	mov	r5, r0
400162a4:	e3550000 	cmp	r5, #0
400162a8:	0a000003 	beq	400162bc <CyU3PDmaChannelReset+0xa4>
400162ac:	e1a0200d 	mov	r2, sp
400162b0:	e3a01002 	mov	r1, #2
400162b4:	e1a00005 	mov	r0, r5
400162b8:	ebffd177 	bl	4000a89c <_txe_thread_priority_change>
400162bc:	e3a02002 	mov	r2, #2
400162c0:	e3e01007 	mvn	r1, #7
400162c4:	e2840074 	add	r0, r4, #116	; 0x74
400162c8:	ebffcee2 	bl	40009e58 <_txe_event_flags_set>
400162cc:	e3a02000 	mov	r2, #0
400162d0:	e3a01020 	mov	r1, #32
400162d4:	e2840074 	add	r0, r4, #116	; 0x74
400162d8:	ebffcede 	bl	40009e58 <_txe_event_flags_set>
400162dc:	e3a00001 	mov	r0, #1
400162e0:	e5840000 	str	r0, [r4]
400162e4:	e284003c 	add	r0, r4, #60	; 0x3c
400162e8:	ebffcfa7 	bl	4000a18c <_txe_mutex_put>
400162ec:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400162f0:	e3500000 	cmp	r0, #0
400162f4:	0a000007 	beq	40016318 <CyU3PDmaChannelReset+0x100>
400162f8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400162fc:	e3100020 	tst	r0, #32
40016300:	0a000004 	beq	40016318 <CyU3PDmaChannelReset+0x100>
40016304:	e3a02000 	mov	r2, #0
40016308:	e3a01020 	mov	r1, #32
4001630c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40016310:	e1a00004 	mov	r0, r4
40016314:	e12fff33 	blx	r3
40016318:	e3550000 	cmp	r5, #0
4001631c:	0a000003 	beq	40016330 <CyU3PDmaChannelReset+0x118>
40016320:	e1a0200d 	mov	r2, sp
40016324:	e1a00005 	mov	r0, r5
40016328:	e59d1000 	ldr	r1, [sp]
4001632c:	ebffd15a 	bl	4000a89c <_txe_thread_priority_change>
40016330:	e3a00000 	mov	r0, #0
40016334:	eaffffc0 	b	4001623c <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

40016338 <CyU3PDmaChannelReset_TypeAuto>:
40016338:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001633c:	e1a04000 	mov	r4, r0
40016340:	e1d450b8 	ldrh	r5, [r4, #8]
40016344:	e1d460bc 	ldrh	r6, [r4, #12]
40016348:	e1a00004 	mov	r0, r4
4001634c:	eb000337 	bl	40017030 <CyU3PDmaConfigureSockets_TypeAuto>
40016350:	ea00000c 	b	40016388 <CyU3PDmaChannelReset_TypeAuto+0x50>
40016354:	e1a0100d 	mov	r1, sp
40016358:	e1a00006 	mov	r0, r6
4001635c:	eb003075 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016360:	e59d000c 	ldr	r0, [sp, #12]
40016364:	e59f1034 	ldr	r1, [pc, #52]	; 400163a0 <CyU3PDmaChannelReset_TypeAuto+0x68>
40016368:	e0000001 	and	r0, r0, r1
4001636c:	e58d000c 	str	r0, [sp, #12]
40016370:	e1a0100d 	mov	r1, sp
40016374:	e1a00006 	mov	r0, r6
40016378:	eb003089 	bl	400225a4 <CyU3PDmaDscrSetConfig>
4001637c:	e59d0008 	ldr	r0, [sp, #8]
40016380:	e1a06800 	lsl	r6, r0, #16
40016384:	e1a06826 	lsr	r6, r6, #16
40016388:	e1b00005 	movs	r0, r5
4001638c:	e2451001 	sub	r1, r5, #1
40016390:	e1a05801 	lsl	r5, r1, #16
40016394:	e1a05825 	lsr	r5, r5, #16
40016398:	1affffed 	bne	40016354 <CyU3PDmaChannelReset_TypeAuto+0x1c>
4001639c:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400163a0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

400163a4 <CyU3PDmaChannelReset_TypeManual>:
400163a4:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400163a8:	e1a04000 	mov	r4, r0
400163ac:	e1d450b8 	ldrh	r5, [r4, #8]
400163b0:	e1a00004 	mov	r0, r4
400163b4:	eb00035d 	bl	40017130 <CyU3PDmaConfigureSockets_TypeManual>
400163b8:	e1d400b4 	ldrh	r0, [r4, #4]
400163bc:	e3500004 	cmp	r0, #4
400163c0:	0a000017 	beq	40016424 <CyU3PDmaChannelReset_TypeManual+0x80>
400163c4:	e1d460bc 	ldrh	r6, [r4, #12]
400163c8:	ea00000c 	b	40016400 <CyU3PDmaChannelReset_TypeManual+0x5c>
400163cc:	e1a0100d 	mov	r1, sp
400163d0:	e1a00006 	mov	r0, r6
400163d4:	eb003057 	bl	40022538 <CyU3PDmaDscrGetConfig>
400163d8:	e59d000c 	ldr	r0, [sp, #12]
400163dc:	e59f10b4 	ldr	r1, [pc, #180]	; 40016498 <CyU3PDmaChannelReset_TypeManual+0xf4>
400163e0:	e0000001 	and	r0, r0, r1
400163e4:	e58d000c 	str	r0, [sp, #12]
400163e8:	e1a0100d 	mov	r1, sp
400163ec:	e1a00006 	mov	r0, r6
400163f0:	eb00306b 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400163f4:	e59d0008 	ldr	r0, [sp, #8]
400163f8:	e1a06800 	lsl	r6, r0, #16
400163fc:	e1a06826 	lsr	r6, r6, #16
40016400:	e1b00005 	movs	r0, r5
40016404:	e2451001 	sub	r1, r5, #1
40016408:	e1a05801 	lsl	r5, r1, #16
4001640c:	e1a05825 	lsr	r5, r5, #16
40016410:	1affffed 	bne	400163cc <CyU3PDmaChannelReset_TypeManual+0x28>
40016414:	e1d400bc 	ldrh	r0, [r4, #12]
40016418:	e1c401b6 	strh	r0, [r4, #22]
4001641c:	e1c401ba 	strh	r0, [r4, #26]
40016420:	e1c401be 	strh	r0, [r4, #30]
40016424:	e1d400b4 	ldrh	r0, [r4, #4]
40016428:	e3500003 	cmp	r0, #3
4001642c:	0a000018 	beq	40016494 <CyU3PDmaChannelReset_TypeManual+0xf0>
40016430:	e1d460be 	ldrh	r6, [r4, #14]
40016434:	e1d450b8 	ldrh	r5, [r4, #8]
40016438:	ea00000c 	b	40016470 <CyU3PDmaChannelReset_TypeManual+0xcc>
4001643c:	e1a0100d 	mov	r1, sp
40016440:	e1a00006 	mov	r0, r6
40016444:	eb00303b 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016448:	e59d000c 	ldr	r0, [sp, #12]
4001644c:	e59f1044 	ldr	r1, [pc, #68]	; 40016498 <CyU3PDmaChannelReset_TypeManual+0xf4>
40016450:	e0000001 	and	r0, r0, r1
40016454:	e58d000c 	str	r0, [sp, #12]
40016458:	e1a0100d 	mov	r1, sp
4001645c:	e1a00006 	mov	r0, r6
40016460:	eb00304f 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40016464:	e59d0008 	ldr	r0, [sp, #8]
40016468:	e1a06800 	lsl	r6, r0, #16
4001646c:	e1a06826 	lsr	r6, r6, #16
40016470:	e1b00005 	movs	r0, r5
40016474:	e2451001 	sub	r1, r5, #1
40016478:	e1a05801 	lsl	r5, r1, #16
4001647c:	e1a05825 	lsr	r5, r5, #16
40016480:	1affffed 	bne	4001643c <CyU3PDmaChannelReset_TypeManual+0x98>
40016484:	e1d400be 	ldrh	r0, [r4, #14]
40016488:	e1c401b8 	strh	r0, [r4, #24]
4001648c:	e1c401bc 	strh	r0, [r4, #28]
40016490:	e1c402b0 	strh	r0, [r4, #32]
40016494:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016498:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

4001649c <CyU3PDmaChannelSetXfer>:
4001649c:	e92d4070 	push	{r4, r5, r6, lr}
400164a0:	e1a04000 	mov	r4, r0
400164a4:	e1a05001 	mov	r5, r1
400164a8:	e3e01000 	mvn	r1, #0
400164ac:	e1a00004 	mov	r0, r4
400164b0:	ebfffb1e 	bl	40015130 <CyU3PDmaChannelAcquireLock>
400164b4:	e1a06000 	mov	r6, r0
400164b8:	e3560000 	cmp	r6, #0
400164bc:	0a000001 	beq	400164c8 <CyU3PDmaChannelSetXfer+0x2c>
400164c0:	e1a00006 	mov	r0, r6
400164c4:	e8bd8070 	pop	{r4, r5, r6, pc}
400164c8:	e5940000 	ldr	r0, [r4]
400164cc:	e3500001 	cmp	r0, #1
400164d0:	0a000000 	beq	400164d8 <CyU3PDmaChannelSetXfer+0x3c>
400164d4:	e3a06043 	mov	r6, #67	; 0x43
400164d8:	e1d400b8 	ldrh	r0, [r4, #8]
400164dc:	e3500000 	cmp	r0, #0
400164e0:	1a000000 	bne	400164e8 <CyU3PDmaChannelSetXfer+0x4c>
400164e4:	e3a06046 	mov	r6, #70	; 0x46
400164e8:	e3560000 	cmp	r6, #0
400164ec:	1a00001d 	bne	40016568 <CyU3PDmaChannelSetXfer+0xcc>
400164f0:	e3a02002 	mov	r2, #2
400164f4:	e3e01027 	mvn	r1, #39	; 0x27
400164f8:	e2840074 	add	r0, r4, #116	; 0x74
400164fc:	ebffce55 	bl	40009e58 <_txe_event_flags_set>
40016500:	e5845034 	str	r5, [r4, #52]	; 0x34
40016504:	e1d400b4 	ldrh	r0, [r4, #4]
40016508:	e3500005 	cmp	r0, #5
4001650c:	308ff100 	addcc	pc, pc, r0, lsl #2
40016510:	ea000011 	b	4001655c <CyU3PDmaChannelSetXfer+0xc0>
40016514:	ea000003 	b	40016528 <CyU3PDmaChannelSetXfer+0x8c>
40016518:	ea000004 	b	40016530 <CyU3PDmaChannelSetXfer+0x94>
4001651c:	ea00000a 	b	4001654c <CyU3PDmaChannelSetXfer+0xb0>
40016520:	ea000006 	b	40016540 <CyU3PDmaChannelSetXfer+0xa4>
40016524:	ea000007 	b	40016548 <CyU3PDmaChannelSetXfer+0xac>
40016528:	e1a00000 	nop			; (mov r0, r0)
4001652c:	e1a00000 	nop			; (mov r0, r0)
40016530:	e1a01005 	mov	r1, r5
40016534:	e1a00004 	mov	r0, r4
40016538:	eb00000e 	bl	40016578 <CyU3PDmaChannelSetXfer_TypeAuto>
4001653c:	ea000008 	b	40016564 <CyU3PDmaChannelSetXfer+0xc8>
40016540:	e1a00000 	nop			; (mov r0, r0)
40016544:	e1a00000 	nop			; (mov r0, r0)
40016548:	e1a00000 	nop			; (mov r0, r0)
4001654c:	e1a01005 	mov	r1, r5
40016550:	e1a00004 	mov	r0, r4
40016554:	eb00006f 	bl	40016718 <CyU3PDmaChannelSetXfer_TypeManual>
40016558:	ea000001 	b	40016564 <CyU3PDmaChannelSetXfer+0xc8>
4001655c:	e1a00000 	nop			; (mov r0, r0)
40016560:	e1a00000 	nop			; (mov r0, r0)
40016564:	e1a00000 	nop			; (mov r0, r0)
40016568:	e284003c 	add	r0, r4, #60	; 0x3c
4001656c:	ebffcf06 	bl	4000a18c <_txe_mutex_put>
40016570:	e1a00006 	mov	r0, r6
40016574:	eaffffd2 	b	400164c4 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

40016578 <CyU3PDmaChannelSetXfer_TypeAuto>:
40016578:	e92d4030 	push	{r4, r5, lr}
4001657c:	e24dd01c 	sub	sp, sp, #28
40016580:	e1a04000 	mov	r4, r0
40016584:	e1a05001 	mov	r5, r1
40016588:	e1d401b0 	ldrh	r0, [r4, #16]
4001658c:	ebfff973 	bl	40014b60 <CyU3PDmaSocketDisable>
40016590:	e1d401b2 	ldrh	r0, [r4, #18]
40016594:	ebfff971 	bl	40014b60 <CyU3PDmaSocketDisable>
40016598:	e3a00002 	mov	r0, #2
4001659c:	e5840000 	str	r0, [r4]
400165a0:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400165a4:	e1d401b0 	ldrh	r0, [r4, #16]
400165a8:	ebfffa87 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
400165ac:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
400165b0:	e1d401b2 	ldrh	r0, [r4, #18]
400165b4:	ebfffa84 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
400165b8:	e1d401b0 	ldrh	r0, [r4, #16]
400165bc:	e28d1004 	add	r1, sp, #4
400165c0:	ebfff97e 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
400165c4:	e58d5008 	str	r5, [sp, #8]
400165c8:	e3a00000 	mov	r0, #0
400165cc:	e58d000c 	str	r0, [sp, #12]
400165d0:	e3550000 	cmp	r5, #0
400165d4:	1a000003 	bne	400165e8 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
400165d8:	e59d0010 	ldr	r0, [sp, #16]
400165dc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400165e0:	e58d0010 	str	r0, [sp, #16]
400165e4:	ea000002 	b	400165f4 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
400165e8:	e59d0010 	ldr	r0, [sp, #16]
400165ec:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400165f0:	e58d0010 	str	r0, [sp, #16]
400165f4:	e59d0010 	ldr	r0, [sp, #16]
400165f8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400165fc:	e58d0010 	str	r0, [sp, #16]
40016600:	e59d0010 	ldr	r0, [sp, #16]
40016604:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016608:	e58d0010 	str	r0, [sp, #16]
4001660c:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016610:	e3500001 	cmp	r0, #1
40016614:	1a000003 	bne	40016628 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
40016618:	e59d0010 	ldr	r0, [sp, #16]
4001661c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016620:	e58d0010 	str	r0, [sp, #16]
40016624:	ea000002 	b	40016634 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016628:	e59d0010 	ldr	r0, [sp, #16]
4001662c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016630:	e58d0010 	str	r0, [sp, #16]
40016634:	e1d400ba 	ldrh	r0, [r4, #10]
40016638:	e3500000 	cmp	r0, #0
4001663c:	0a000006 	beq	4001665c <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016640:	e1d400b8 	ldrh	r0, [r4, #8]
40016644:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016648:	e1d410ba 	ldrh	r1, [r4, #10]
4001664c:	e1800281 	orr	r0, r0, r1, lsl #5
40016650:	e59d1010 	ldr	r1, [sp, #16]
40016654:	e1800001 	orr	r0, r0, r1
40016658:	e58d0010 	str	r0, [sp, #16]
4001665c:	e3e00000 	mvn	r0, #0
40016660:	e58d0014 	str	r0, [sp, #20]
40016664:	e1d401b0 	ldrh	r0, [r4, #16]
40016668:	e28d1004 	add	r1, sp, #4
4001666c:	ebfff9fd 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40016670:	e1d401b2 	ldrh	r0, [r4, #18]
40016674:	e28d1004 	add	r1, sp, #4
40016678:	ebfff950 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001667c:	e58d5008 	str	r5, [sp, #8]
40016680:	e3a00000 	mov	r0, #0
40016684:	e58d000c 	str	r0, [sp, #12]
40016688:	e3550000 	cmp	r5, #0
4001668c:	1a000006 	bne	400166ac <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016690:	e59d0018 	ldr	r0, [sp, #24]
40016694:	e3c00080 	bic	r0, r0, #128	; 0x80
40016698:	e58d0018 	str	r0, [sp, #24]
4001669c:	e59d0010 	ldr	r0, [sp, #16]
400166a0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400166a4:	e58d0010 	str	r0, [sp, #16]
400166a8:	ea000005 	b	400166c4 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
400166ac:	e59d0018 	ldr	r0, [sp, #24]
400166b0:	e3800080 	orr	r0, r0, #128	; 0x80
400166b4:	e58d0018 	str	r0, [sp, #24]
400166b8:	e59d0010 	ldr	r0, [sp, #16]
400166bc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400166c0:	e58d0010 	str	r0, [sp, #16]
400166c4:	e59d0010 	ldr	r0, [sp, #16]
400166c8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400166cc:	e58d0010 	str	r0, [sp, #16]
400166d0:	e59d0010 	ldr	r0, [sp, #16]
400166d4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400166d8:	e58d0010 	str	r0, [sp, #16]
400166dc:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400166e0:	e3500001 	cmp	r0, #1
400166e4:	1a000003 	bne	400166f8 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
400166e8:	e59d0010 	ldr	r0, [sp, #16]
400166ec:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400166f0:	e58d0010 	str	r0, [sp, #16]
400166f4:	ea000002 	b	40016704 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
400166f8:	e59d0010 	ldr	r0, [sp, #16]
400166fc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016700:	e58d0010 	str	r0, [sp, #16]
40016704:	e1d401b2 	ldrh	r0, [r4, #18]
40016708:	e28d1004 	add	r1, sp, #4
4001670c:	ebfff9d5 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40016710:	e28dd01c 	add	sp, sp, #28
40016714:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016718 <CyU3PDmaChannelSetXfer_TypeManual>:
40016718:	e92d4030 	push	{r4, r5, lr}
4001671c:	e24dd01c 	sub	sp, sp, #28
40016720:	e1a04000 	mov	r4, r0
40016724:	e1a05001 	mov	r5, r1
40016728:	e3a00002 	mov	r0, #2
4001672c:	e5840000 	str	r0, [r4]
40016730:	e1d400b4 	ldrh	r0, [r4, #4]
40016734:	e3500004 	cmp	r0, #4
40016738:	0a00003d 	beq	40016834 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
4001673c:	e1d401b0 	ldrh	r0, [r4, #16]
40016740:	ebfff906 	bl	40014b60 <CyU3PDmaSocketDisable>
40016744:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016748:	e1d401b0 	ldrh	r0, [r4, #16]
4001674c:	ebfffa1e 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
40016750:	e1d401b0 	ldrh	r0, [r4, #16]
40016754:	e28d1004 	add	r1, sp, #4
40016758:	ebfff918 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001675c:	e58d5008 	str	r5, [sp, #8]
40016760:	e3a00000 	mov	r0, #0
40016764:	e58d000c 	str	r0, [sp, #12]
40016768:	e59d0010 	ldr	r0, [sp, #16]
4001676c:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016770:	e58d0010 	str	r0, [sp, #16]
40016774:	e59d0010 	ldr	r0, [sp, #16]
40016778:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001677c:	e58d0010 	str	r0, [sp, #16]
40016780:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016784:	e3500001 	cmp	r0, #1
40016788:	1a000003 	bne	4001679c <CyU3PDmaChannelSetXfer_TypeManual+0x84>
4001678c:	e59d0010 	ldr	r0, [sp, #16]
40016790:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016794:	e58d0010 	str	r0, [sp, #16]
40016798:	ea000002 	b	400167a8 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
4001679c:	e59d0010 	ldr	r0, [sp, #16]
400167a0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400167a4:	e58d0010 	str	r0, [sp, #16]
400167a8:	e1d400ba 	ldrh	r0, [r4, #10]
400167ac:	e3500000 	cmp	r0, #0
400167b0:	0a000006 	beq	400167d0 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
400167b4:	e1d400b8 	ldrh	r0, [r4, #8]
400167b8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400167bc:	e1d410ba 	ldrh	r1, [r4, #10]
400167c0:	e1800281 	orr	r0, r0, r1, lsl #5
400167c4:	e59d1010 	ldr	r1, [sp, #16]
400167c8:	e1800001 	orr	r0, r0, r1
400167cc:	e58d0010 	str	r0, [sp, #16]
400167d0:	e3e00000 	mvn	r0, #0
400167d4:	e58d0014 	str	r0, [sp, #20]
400167d8:	e3550000 	cmp	r5, #0
400167dc:	0a000002 	beq	400167ec <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
400167e0:	e1d400b4 	ldrh	r0, [r4, #4]
400167e4:	e3500002 	cmp	r0, #2
400167e8:	1a000008 	bne	40016810 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
400167ec:	e3a00000 	mov	r0, #0
400167f0:	e58d0008 	str	r0, [sp, #8]
400167f4:	e59d0010 	ldr	r0, [sp, #16]
400167f8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400167fc:	e58d0010 	str	r0, [sp, #16]
40016800:	e59d0018 	ldr	r0, [sp, #24]
40016804:	e3c00080 	bic	r0, r0, #128	; 0x80
40016808:	e58d0018 	str	r0, [sp, #24]
4001680c:	ea000005 	b	40016828 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016810:	e59d0010 	ldr	r0, [sp, #16]
40016814:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016818:	e58d0010 	str	r0, [sp, #16]
4001681c:	e59d0018 	ldr	r0, [sp, #24]
40016820:	e3800080 	orr	r0, r0, #128	; 0x80
40016824:	e58d0018 	str	r0, [sp, #24]
40016828:	e1d401b0 	ldrh	r0, [r4, #16]
4001682c:	e28d1004 	add	r1, sp, #4
40016830:	ebfff98c 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40016834:	e1d400b4 	ldrh	r0, [r4, #4]
40016838:	e3500003 	cmp	r0, #3
4001683c:	0a00002e 	beq	400168fc <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016840:	e1d401b2 	ldrh	r0, [r4, #18]
40016844:	ebfff8c5 	bl	40014b60 <CyU3PDmaSocketDisable>
40016848:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
4001684c:	e1d401b2 	ldrh	r0, [r4, #18]
40016850:	ebfff9dd 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
40016854:	e1d401b2 	ldrh	r0, [r4, #18]
40016858:	e28d1004 	add	r1, sp, #4
4001685c:	ebfff8d7 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40016860:	e58d5008 	str	r5, [sp, #8]
40016864:	e3a00000 	mov	r0, #0
40016868:	e58d000c 	str	r0, [sp, #12]
4001686c:	e59d0010 	ldr	r0, [sp, #16]
40016870:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016874:	e58d0010 	str	r0, [sp, #16]
40016878:	e59d0010 	ldr	r0, [sp, #16]
4001687c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016880:	e58d0010 	str	r0, [sp, #16]
40016884:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016888:	e3500001 	cmp	r0, #1
4001688c:	1a000003 	bne	400168a0 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016890:	e59d0010 	ldr	r0, [sp, #16]
40016894:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016898:	e58d0010 	str	r0, [sp, #16]
4001689c:	ea000002 	b	400168ac <CyU3PDmaChannelSetXfer_TypeManual+0x194>
400168a0:	e59d0010 	ldr	r0, [sp, #16]
400168a4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400168a8:	e58d0010 	str	r0, [sp, #16]
400168ac:	e3e00000 	mvn	r0, #0
400168b0:	e58d0014 	str	r0, [sp, #20]
400168b4:	e3550000 	cmp	r5, #0
400168b8:	1a000006 	bne	400168d8 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
400168bc:	e59d0010 	ldr	r0, [sp, #16]
400168c0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400168c4:	e58d0010 	str	r0, [sp, #16]
400168c8:	e59d0018 	ldr	r0, [sp, #24]
400168cc:	e3c00080 	bic	r0, r0, #128	; 0x80
400168d0:	e58d0018 	str	r0, [sp, #24]
400168d4:	ea000005 	b	400168f0 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
400168d8:	e59d0010 	ldr	r0, [sp, #16]
400168dc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400168e0:	e58d0010 	str	r0, [sp, #16]
400168e4:	e59d0018 	ldr	r0, [sp, #24]
400168e8:	e3800080 	orr	r0, r0, #128	; 0x80
400168ec:	e58d0018 	str	r0, [sp, #24]
400168f0:	e1d401b2 	ldrh	r0, [r4, #18]
400168f4:	e28d1004 	add	r1, sp, #4
400168f8:	ebfff95a 	bl	40014e68 <CyU3PDmaSocketSetConfig>
400168fc:	e28dd01c 	add	sp, sp, #28
40016900:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016904 <CyU3PDmaChannelSetupRecvBuffer>:
40016904:	e92d4070 	push	{r4, r5, r6, lr}
40016908:	e24dd028 	sub	sp, sp, #40	; 0x28
4001690c:	e1a04000 	mov	r4, r0
40016910:	e1a05001 	mov	r5, r1
40016914:	e3550000 	cmp	r5, #0
40016918:	1a000002 	bne	40016928 <CyU3PDmaChannelSetupRecvBuffer+0x24>
4001691c:	e3a00041 	mov	r0, #65	; 0x41
40016920:	e28dd028 	add	sp, sp, #40	; 0x28
40016924:	e8bd8070 	pop	{r4, r5, r6, pc}
40016928:	e5950000 	ldr	r0, [r5]
4001692c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016930:	3a000005 	bcc	4001694c <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016934:	e5950000 	ldr	r0, [r5]
40016938:	e1d510b6 	ldrh	r1, [r5, #6]
4001693c:	e0800001 	add	r0, r0, r1
40016940:	e59f11d4 	ldr	r1, [pc, #468]	; 40016b1c <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016944:	e1500001 	cmp	r0, r1
40016948:	3a000001 	bcc	40016954 <CyU3PDmaChannelSetupRecvBuffer+0x50>
4001694c:	e3a00040 	mov	r0, #64	; 0x40
40016950:	eafffff2 	b	40016920 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016954:	e1d500b6 	ldrh	r0, [r5, #6]
40016958:	e59f11c0 	ldr	r1, [pc, #448]	; 40016b20 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
4001695c:	e1500001 	cmp	r0, r1
40016960:	da000001 	ble	4001696c <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016964:	e3a00040 	mov	r0, #64	; 0x40
40016968:	eaffffec 	b	40016920 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001696c:	e1d500b6 	ldrh	r0, [r5, #6]
40016970:	e3500000 	cmp	r0, #0
40016974:	0a000002 	beq	40016984 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016978:	e1d500b6 	ldrh	r0, [r5, #6]
4001697c:	e310000f 	tst	r0, #15
40016980:	0a000001 	beq	4001698c <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016984:	e3a00040 	mov	r0, #64	; 0x40
40016988:	eaffffe4 	b	40016920 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001698c:	e3e01000 	mvn	r1, #0
40016990:	e1a00004 	mov	r0, r4
40016994:	ebfff9e5 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40016998:	e1a06000 	mov	r6, r0
4001699c:	e3560000 	cmp	r6, #0
400169a0:	0a000001 	beq	400169ac <CyU3PDmaChannelSetupRecvBuffer+0xa8>
400169a4:	e1a00006 	mov	r0, r6
400169a8:	eaffffdc 	b	40016920 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400169ac:	e1d400b4 	ldrh	r0, [r4, #4]
400169b0:	e3500004 	cmp	r0, #4
400169b4:	1a000000 	bne	400169bc <CyU3PDmaChannelSetupRecvBuffer+0xb8>
400169b8:	e3a06046 	mov	r6, #70	; 0x46
400169bc:	e5940000 	ldr	r0, [r4]
400169c0:	e3500001 	cmp	r0, #1
400169c4:	0a000000 	beq	400169cc <CyU3PDmaChannelSetupRecvBuffer+0xc8>
400169c8:	e3a06043 	mov	r6, #67	; 0x43
400169cc:	e3560000 	cmp	r6, #0
400169d0:	0a000003 	beq	400169e4 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
400169d4:	e284003c 	add	r0, r4, #60	; 0x3c
400169d8:	ebffcdeb 	bl	4000a18c <_txe_mutex_put>
400169dc:	e1a00006 	mov	r0, r6
400169e0:	eaffffce 	b	40016920 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400169e4:	e1d401b0 	ldrh	r0, [r4, #16]
400169e8:	ebfff85c 	bl	40014b60 <CyU3PDmaSocketDisable>
400169ec:	e1d401b0 	ldrh	r0, [r4, #16]
400169f0:	e3a01000 	mov	r1, #0
400169f4:	ebfff974 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
400169f8:	e3a02002 	mov	r2, #2
400169fc:	e3e01027 	mvn	r1, #39	; 0x27
40016a00:	e2840074 	add	r0, r4, #116	; 0x74
40016a04:	ebffcd13 	bl	40009e58 <_txe_event_flags_set>
40016a08:	e3a00004 	mov	r0, #4
40016a0c:	e5840000 	str	r0, [r4]
40016a10:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016a14:	e3500000 	cmp	r0, #0
40016a18:	0a000002 	beq	40016a28 <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016a1c:	e1d510b6 	ldrh	r1, [r5, #6]
40016a20:	e5950000 	ldr	r0, [r5]
40016a24:	ebffed96 	bl	40012084 <CyU3PSysFlushDRegion>
40016a28:	e1d401b0 	ldrh	r0, [r4, #16]
40016a2c:	e1a0100d 	mov	r1, sp
40016a30:	ebfff862 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40016a34:	e59d0000 	ldr	r0, [sp]
40016a38:	e1c401b6 	strh	r0, [r4, #22]
40016a3c:	e1d401b4 	ldrh	r0, [r4, #20]
40016a40:	e28d1018 	add	r1, sp, #24
40016a44:	eb002ebb 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016a48:	e5950000 	ldr	r0, [r5]
40016a4c:	e58d0018 	str	r0, [sp, #24]
40016a50:	e1d401b0 	ldrh	r0, [r4, #16]
40016a54:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016a58:	e1810800 	orr	r0, r1, r0, lsl #16
40016a5c:	e58d001c 	str	r0, [sp, #28]
40016a60:	e59d001c 	ldr	r0, [sp, #28]
40016a64:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016a68:	e58d001c 	str	r0, [sp, #28]
40016a6c:	e1d401b6 	ldrh	r0, [r4, #22]
40016a70:	e1e01741 	mvn	r1, r1, asr #14
40016a74:	e1810800 	orr	r0, r1, r0, lsl #16
40016a78:	e58d0020 	str	r0, [sp, #32]
40016a7c:	e1d500b6 	ldrh	r0, [r5, #6]
40016a80:	e241100f 	sub	r1, r1, #15
40016a84:	e0000001 	and	r0, r0, r1
40016a88:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016a8c:	e1d401b4 	ldrh	r0, [r4, #20]
40016a90:	e28d1018 	add	r1, sp, #24
40016a94:	eb002ec2 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40016a98:	e59d000c 	ldr	r0, [sp, #12]
40016a9c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016aa0:	e58d000c 	str	r0, [sp, #12]
40016aa4:	e59d000c 	ldr	r0, [sp, #12]
40016aa8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016aac:	e58d000c 	str	r0, [sp, #12]
40016ab0:	e59d000c 	ldr	r0, [sp, #12]
40016ab4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016ab8:	e58d000c 	str	r0, [sp, #12]
40016abc:	e59d000c 	ldr	r0, [sp, #12]
40016ac0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016ac4:	e58d000c 	str	r0, [sp, #12]
40016ac8:	e3a00001 	mov	r0, #1
40016acc:	e58d0004 	str	r0, [sp, #4]
40016ad0:	e3a00000 	mov	r0, #0
40016ad4:	e58d0008 	str	r0, [sp, #8]
40016ad8:	e3e00000 	mvn	r0, #0
40016adc:	e58d0010 	str	r0, [sp, #16]
40016ae0:	e59d0014 	ldr	r0, [sp, #20]
40016ae4:	e3800001 	orr	r0, r0, #1
40016ae8:	e58d0014 	str	r0, [sp, #20]
40016aec:	e59d0014 	ldr	r0, [sp, #20]
40016af0:	e3c00080 	bic	r0, r0, #128	; 0x80
40016af4:	e58d0014 	str	r0, [sp, #20]
40016af8:	e1d401b4 	ldrh	r0, [r4, #20]
40016afc:	e58d0000 	str	r0, [sp]
40016b00:	e1d401b0 	ldrh	r0, [r4, #16]
40016b04:	e1a0100d 	mov	r1, sp
40016b08:	ebfff8d6 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40016b0c:	e284003c 	add	r0, r4, #60	; 0x3c
40016b10:	ebffcd9d 	bl	4000a18c <_txe_mutex_put>
40016b14:	e3a00000 	mov	r0, #0
40016b18:	eaffff80 	b	40016920 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016b1c:	40080000 	.word	0x40080000
40016b20:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016b24 <CyU3PDmaChannelSetupSendBuffer>:
40016b24:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016b28:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016b2c:	e1a04000 	mov	r4, r0
40016b30:	e1a05001 	mov	r5, r1
40016b34:	e3550000 	cmp	r5, #0
40016b38:	1a000002 	bne	40016b48 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016b3c:	e3a00041 	mov	r0, #65	; 0x41
40016b40:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016b44:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016b48:	e5950000 	ldr	r0, [r5]
40016b4c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016b50:	3a000005 	bcc	40016b6c <CyU3PDmaChannelSetupSendBuffer+0x48>
40016b54:	e5950000 	ldr	r0, [r5]
40016b58:	e1d510b4 	ldrh	r1, [r5, #4]
40016b5c:	e0800001 	add	r0, r0, r1
40016b60:	e59f11ec 	ldr	r1, [pc, #492]	; 40016d54 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016b64:	e1500001 	cmp	r0, r1
40016b68:	3a000001 	bcc	40016b74 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016b6c:	e3a00040 	mov	r0, #64	; 0x40
40016b70:	eafffff2 	b	40016b40 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016b74:	e1d500b4 	ldrh	r0, [r5, #4]
40016b78:	e59f11d8 	ldr	r1, [pc, #472]	; 40016d58 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016b7c:	e1500001 	cmp	r0, r1
40016b80:	da000001 	ble	40016b8c <CyU3PDmaChannelSetupSendBuffer+0x68>
40016b84:	e3a00040 	mov	r0, #64	; 0x40
40016b88:	eaffffec 	b	40016b40 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016b8c:	e3e01000 	mvn	r1, #0
40016b90:	e1a00004 	mov	r0, r4
40016b94:	ebfff965 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40016b98:	e1a07000 	mov	r7, r0
40016b9c:	e3570000 	cmp	r7, #0
40016ba0:	0a000001 	beq	40016bac <CyU3PDmaChannelSetupSendBuffer+0x88>
40016ba4:	e1a00007 	mov	r0, r7
40016ba8:	eaffffe4 	b	40016b40 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016bac:	e1d400b4 	ldrh	r0, [r4, #4]
40016bb0:	e3500003 	cmp	r0, #3
40016bb4:	1a000000 	bne	40016bbc <CyU3PDmaChannelSetupSendBuffer+0x98>
40016bb8:	e3a07046 	mov	r7, #70	; 0x46
40016bbc:	e5940000 	ldr	r0, [r4]
40016bc0:	e3500001 	cmp	r0, #1
40016bc4:	0a000000 	beq	40016bcc <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016bc8:	e3a07043 	mov	r7, #67	; 0x43
40016bcc:	e3570000 	cmp	r7, #0
40016bd0:	0a000003 	beq	40016be4 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016bd4:	e284003c 	add	r0, r4, #60	; 0x3c
40016bd8:	ebffcd6b 	bl	4000a18c <_txe_mutex_put>
40016bdc:	e1a00007 	mov	r0, r7
40016be0:	eaffffd6 	b	40016b40 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016be4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016be8:	e3500000 	cmp	r0, #0
40016bec:	0a000005 	beq	40016c08 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016bf0:	e1d500b4 	ldrh	r0, [r5, #4]
40016bf4:	e3500000 	cmp	r0, #0
40016bf8:	0a000002 	beq	40016c08 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016bfc:	e1d510b4 	ldrh	r1, [r5, #4]
40016c00:	e5950000 	ldr	r0, [r5]
40016c04:	ebffed10 	bl	4001204c <CyU3PSysCleanDRegion>
40016c08:	e1d401b2 	ldrh	r0, [r4, #18]
40016c0c:	ebfff7d3 	bl	40014b60 <CyU3PDmaSocketDisable>
40016c10:	e1d401b2 	ldrh	r0, [r4, #18]
40016c14:	e3a01000 	mov	r1, #0
40016c18:	ebfff8eb 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
40016c1c:	e3a02002 	mov	r2, #2
40016c20:	e3e01027 	mvn	r1, #39	; 0x27
40016c24:	e2840074 	add	r0, r4, #116	; 0x74
40016c28:	ebffcc8a 	bl	40009e58 <_txe_event_flags_set>
40016c2c:	e3a00003 	mov	r0, #3
40016c30:	e5840000 	str	r0, [r4]
40016c34:	e1d401b2 	ldrh	r0, [r4, #18]
40016c38:	e28d1004 	add	r1, sp, #4
40016c3c:	ebfff7df 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40016c40:	e59d0004 	ldr	r0, [sp, #4]
40016c44:	e1c401b8 	strh	r0, [r4, #24]
40016c48:	e1d401b4 	ldrh	r0, [r4, #20]
40016c4c:	e28d101c 	add	r1, sp, #28
40016c50:	eb002e38 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016c54:	e5950000 	ldr	r0, [r5]
40016c58:	e58d001c 	str	r0, [sp, #28]
40016c5c:	e1d401b2 	ldrh	r0, [r4, #18]
40016c60:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016c64:	e58d0020 	str	r0, [sp, #32]
40016c68:	e59d0020 	ldr	r0, [sp, #32]
40016c6c:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016c70:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016c74:	e58d0020 	str	r0, [sp, #32]
40016c78:	e1d401b8 	ldrh	r0, [r4, #24]
40016c7c:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016c80:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016c84:	e1d500b4 	ldrh	r0, [r5, #4]
40016c88:	e280000f 	add	r0, r0, #15
40016c8c:	e59f10c4 	ldr	r1, [pc, #196]	; 40016d58 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016c90:	e0006001 	and	r6, r0, r1
40016c94:	e1d500b4 	ldrh	r0, [r5, #4]
40016c98:	e1860800 	orr	r0, r6, r0, lsl #16
40016c9c:	e3800008 	orr	r0, r0, #8
40016ca0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016ca4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016ca8:	e1d510b8 	ldrh	r1, [r5, #8]
40016cac:	e201100e 	and	r1, r1, #14
40016cb0:	e1800001 	orr	r0, r0, r1
40016cb4:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016cb8:	e1d401b4 	ldrh	r0, [r4, #20]
40016cbc:	e28d101c 	add	r1, sp, #28
40016cc0:	eb002e37 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40016cc4:	e59d0010 	ldr	r0, [sp, #16]
40016cc8:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016ccc:	e58d0010 	str	r0, [sp, #16]
40016cd0:	e59d0010 	ldr	r0, [sp, #16]
40016cd4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016cd8:	e58d0010 	str	r0, [sp, #16]
40016cdc:	e59d0010 	ldr	r0, [sp, #16]
40016ce0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016ce4:	e58d0010 	str	r0, [sp, #16]
40016ce8:	e59d0010 	ldr	r0, [sp, #16]
40016cec:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016cf0:	e58d0010 	str	r0, [sp, #16]
40016cf4:	e59d0010 	ldr	r0, [sp, #16]
40016cf8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016cfc:	e58d0010 	str	r0, [sp, #16]
40016d00:	e1d500b4 	ldrh	r0, [r5, #4]
40016d04:	e58d0008 	str	r0, [sp, #8]
40016d08:	e3a00000 	mov	r0, #0
40016d0c:	e58d000c 	str	r0, [sp, #12]
40016d10:	e3e00000 	mvn	r0, #0
40016d14:	e58d0014 	str	r0, [sp, #20]
40016d18:	e59d0018 	ldr	r0, [sp, #24]
40016d1c:	e3800002 	orr	r0, r0, #2
40016d20:	e58d0018 	str	r0, [sp, #24]
40016d24:	e59d0018 	ldr	r0, [sp, #24]
40016d28:	e3c00080 	bic	r0, r0, #128	; 0x80
40016d2c:	e58d0018 	str	r0, [sp, #24]
40016d30:	e1d401b4 	ldrh	r0, [r4, #20]
40016d34:	e58d0004 	str	r0, [sp, #4]
40016d38:	e1d401b2 	ldrh	r0, [r4, #18]
40016d3c:	e28d1004 	add	r1, sp, #4
40016d40:	ebfff848 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40016d44:	e284003c 	add	r0, r4, #60	; 0x3c
40016d48:	ebffcd0f 	bl	4000a18c <_txe_mutex_put>
40016d4c:	e3a00000 	mov	r0, #0
40016d50:	eaffff7a 	b	40016b40 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016d54:	40080000 	.word	0x40080000
40016d58:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016d5c <CyU3PDmaChannelWaitForCompletion>:
40016d5c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016d60:	e1a04000 	mov	r4, r0
40016d64:	e1a05001 	mov	r5, r1
40016d68:	e3a08000 	mov	r8, #0
40016d6c:	e1a01005 	mov	r1, r5
40016d70:	e1a00004 	mov	r0, r4
40016d74:	ebfff8ed 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40016d78:	e1a07000 	mov	r7, r0
40016d7c:	e3570000 	cmp	r7, #0
40016d80:	0a000001 	beq	40016d8c <CyU3PDmaChannelWaitForCompletion+0x30>
40016d84:	e1a00007 	mov	r0, r7
40016d88:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016d8c:	e5946000 	ldr	r6, [r4]
40016d90:	e3560001 	cmp	r6, #1
40016d94:	1a00000b 	bne	40016dc8 <CyU3PDmaChannelWaitForCompletion+0x6c>
40016d98:	e3a03000 	mov	r3, #0
40016d9c:	e58d3000 	str	r3, [sp]
40016da0:	e28d3004 	add	r3, sp, #4
40016da4:	e3a02000 	mov	r2, #0
40016da8:	e3a01007 	mov	r1, #7
40016dac:	e2840074 	add	r0, r4, #116	; 0x74
40016db0:	ebffcbf8 	bl	40009d98 <_txe_event_flags_get>
40016db4:	e1a07000 	mov	r7, r0
40016db8:	e3570000 	cmp	r7, #0
40016dbc:	0a000016 	beq	40016e1c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016dc0:	e3a07042 	mov	r7, #66	; 0x42
40016dc4:	ea000014 	b	40016e1c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016dc8:	e3560002 	cmp	r6, #2
40016dcc:	1a000005 	bne	40016de8 <CyU3PDmaChannelWaitForCompletion+0x8c>
40016dd0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016dd4:	e3500000 	cmp	r0, #0
40016dd8:	1a000000 	bne	40016de0 <CyU3PDmaChannelWaitForCompletion+0x84>
40016ddc:	e3a07046 	mov	r7, #70	; 0x46
40016de0:	e3a08061 	mov	r8, #97	; 0x61
40016de4:	ea00000c 	b	40016e1c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016de8:	e3560003 	cmp	r6, #3
40016dec:	1a000001 	bne	40016df8 <CyU3PDmaChannelWaitForCompletion+0x9c>
40016df0:	e3a08062 	mov	r8, #98	; 0x62
40016df4:	ea000008 	b	40016e1c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016df8:	e3560004 	cmp	r6, #4
40016dfc:	1a000001 	bne	40016e08 <CyU3PDmaChannelWaitForCompletion+0xac>
40016e00:	e3a08064 	mov	r8, #100	; 0x64
40016e04:	ea000004 	b	40016e1c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e08:	e3560005 	cmp	r6, #5
40016e0c:	1a000001 	bne	40016e18 <CyU3PDmaChannelWaitForCompletion+0xbc>
40016e10:	e3a07049 	mov	r7, #73	; 0x49
40016e14:	ea000000 	b	40016e1c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016e18:	e3a07042 	mov	r7, #66	; 0x42
40016e1c:	e284003c 	add	r0, r4, #60	; 0x3c
40016e20:	ebffccd9 	bl	4000a18c <_txe_mutex_put>
40016e24:	e3570000 	cmp	r7, #0
40016e28:	1a000015 	bne	40016e84 <CyU3PDmaChannelWaitForCompletion+0x128>
40016e2c:	e3580000 	cmp	r8, #0
40016e30:	0a000013 	beq	40016e84 <CyU3PDmaChannelWaitForCompletion+0x128>
40016e34:	e58d5000 	str	r5, [sp]
40016e38:	e28d3004 	add	r3, sp, #4
40016e3c:	e3a02000 	mov	r2, #0
40016e40:	e1a01008 	mov	r1, r8
40016e44:	e2840074 	add	r0, r4, #116	; 0x74
40016e48:	ebffcbd2 	bl	40009d98 <_txe_event_flags_get>
40016e4c:	e1a07000 	mov	r7, r0
40016e50:	e3570000 	cmp	r7, #0
40016e54:	0a000001 	beq	40016e60 <CyU3PDmaChannelWaitForCompletion+0x104>
40016e58:	e3a07045 	mov	r7, #69	; 0x45
40016e5c:	ea000008 	b	40016e84 <CyU3PDmaChannelWaitForCompletion+0x128>
40016e60:	e59d0004 	ldr	r0, [sp, #4]
40016e64:	e3100040 	tst	r0, #64	; 0x40
40016e68:	0a000001 	beq	40016e74 <CyU3PDmaChannelWaitForCompletion+0x118>
40016e6c:	e3a07049 	mov	r7, #73	; 0x49
40016e70:	ea000003 	b	40016e84 <CyU3PDmaChannelWaitForCompletion+0x128>
40016e74:	e59d0004 	ldr	r0, [sp, #4]
40016e78:	e3100020 	tst	r0, #32
40016e7c:	0a000000 	beq	40016e84 <CyU3PDmaChannelWaitForCompletion+0x128>
40016e80:	e3a07048 	mov	r7, #72	; 0x48
40016e84:	e1a00007 	mov	r0, r7
40016e88:	eaffffbe 	b	40016d88 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40016e8c <CyU3PDmaChannelWaitForRecvBuffer>:
40016e8c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016e90:	e24dd018 	sub	sp, sp, #24
40016e94:	e1a04000 	mov	r4, r0
40016e98:	e1a05001 	mov	r5, r1
40016e9c:	e1a06002 	mov	r6, r2
40016ea0:	e3550000 	cmp	r5, #0
40016ea4:	1a000002 	bne	40016eb4 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40016ea8:	e3a00041 	mov	r0, #65	; 0x41
40016eac:	e28dd018 	add	sp, sp, #24
40016eb0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016eb4:	e1a01006 	mov	r1, r6
40016eb8:	e1a00004 	mov	r0, r4
40016ebc:	ebfff89b 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40016ec0:	e1a07000 	mov	r7, r0
40016ec4:	e3570000 	cmp	r7, #0
40016ec8:	0a000001 	beq	40016ed4 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40016ecc:	e1a00007 	mov	r0, r7
40016ed0:	eafffff5 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016ed4:	e1d400b4 	ldrh	r0, [r4, #4]
40016ed8:	e3500004 	cmp	r0, #4
40016edc:	1a000000 	bne	40016ee4 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40016ee0:	e3a07046 	mov	r7, #70	; 0x46
40016ee4:	e5948000 	ldr	r8, [r4]
40016ee8:	e3570000 	cmp	r7, #0
40016eec:	1a000034 	bne	40016fc4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ef0:	e3580004 	cmp	r8, #4
40016ef4:	1a00001e 	bne	40016f74 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40016ef8:	e284003c 	add	r0, r4, #60	; 0x3c
40016efc:	ebffcca2 	bl	4000a18c <_txe_mutex_put>
40016f00:	e58d6000 	str	r6, [sp]
40016f04:	e28d3014 	add	r3, sp, #20
40016f08:	e3a02000 	mov	r2, #0
40016f0c:	e3a01064 	mov	r1, #100	; 0x64
40016f10:	e2840074 	add	r0, r4, #116	; 0x74
40016f14:	ebffcb9f 	bl	40009d98 <_txe_event_flags_get>
40016f18:	e1a07000 	mov	r7, r0
40016f1c:	e3570000 	cmp	r7, #0
40016f20:	0a000001 	beq	40016f2c <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40016f24:	e3a00045 	mov	r0, #69	; 0x45
40016f28:	eaffffdf 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f2c:	e59d0014 	ldr	r0, [sp, #20]
40016f30:	e3100040 	tst	r0, #64	; 0x40
40016f34:	0a000001 	beq	40016f40 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40016f38:	e3a00049 	mov	r0, #73	; 0x49
40016f3c:	eaffffda 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f40:	e59d0014 	ldr	r0, [sp, #20]
40016f44:	e3100020 	tst	r0, #32
40016f48:	0a000001 	beq	40016f54 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40016f4c:	e3a00048 	mov	r0, #72	; 0x48
40016f50:	eaffffd5 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f54:	e1a01006 	mov	r1, r6
40016f58:	e1a00004 	mov	r0, r4
40016f5c:	ebfff873 	bl	40015130 <CyU3PDmaChannelAcquireLock>
40016f60:	e1a07000 	mov	r7, r0
40016f64:	e3570000 	cmp	r7, #0
40016f68:	0a000015 	beq	40016fc4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016f6c:	e1a00007 	mov	r0, r7
40016f70:	eaffffcd 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f74:	e3580001 	cmp	r8, #1
40016f78:	1a000010 	bne	40016fc0 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40016f7c:	e3a03000 	mov	r3, #0
40016f80:	e58d3000 	str	r3, [sp]
40016f84:	e28d3014 	add	r3, sp, #20
40016f88:	e3a02000 	mov	r2, #0
40016f8c:	e3a01024 	mov	r1, #36	; 0x24
40016f90:	e2840074 	add	r0, r4, #116	; 0x74
40016f94:	ebffcb7f 	bl	40009d98 <_txe_event_flags_get>
40016f98:	e1a07000 	mov	r7, r0
40016f9c:	e3570000 	cmp	r7, #0
40016fa0:	0a000001 	beq	40016fac <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40016fa4:	e3a07047 	mov	r7, #71	; 0x47
40016fa8:	ea000005 	b	40016fc4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016fac:	e59d0014 	ldr	r0, [sp, #20]
40016fb0:	e3100020 	tst	r0, #32
40016fb4:	0a000002 	beq	40016fc4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016fb8:	e3a07042 	mov	r7, #66	; 0x42
40016fbc:	ea000000 	b	40016fc4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016fc0:	e3a07047 	mov	r7, #71	; 0x47
40016fc4:	e3570000 	cmp	r7, #0
40016fc8:	0a000003 	beq	40016fdc <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40016fcc:	e284003c 	add	r0, r4, #60	; 0x3c
40016fd0:	ebffcc6d 	bl	4000a18c <_txe_mutex_put>
40016fd4:	e1a00007 	mov	r0, r7
40016fd8:	eaffffb3 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016fdc:	e1d401b4 	ldrh	r0, [r4, #20]
40016fe0:	e28d1004 	add	r1, sp, #4
40016fe4:	eb002d53 	bl	40022538 <CyU3PDmaDscrGetConfig>
40016fe8:	e59d0004 	ldr	r0, [sp, #4]
40016fec:	e5850000 	str	r0, [r5]
40016ff0:	e59d0010 	ldr	r0, [sp, #16]
40016ff4:	e59f1030 	ldr	r1, [pc, #48]	; 4001702c <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40016ff8:	e0010820 	and	r0, r1, r0, lsr #16
40016ffc:	e1c500b4 	strh	r0, [r5, #4]
40017000:	e241100f 	sub	r1, r1, #15
40017004:	e59d0010 	ldr	r0, [sp, #16]
40017008:	e0000001 	and	r0, r0, r1
4001700c:	e1c500b6 	strh	r0, [r5, #6]
40017010:	e59d0010 	ldr	r0, [sp, #16]
40017014:	e200000f 	and	r0, r0, #15
40017018:	e1c500b8 	strh	r0, [r5, #8]
4001701c:	e284003c 	add	r0, r4, #60	; 0x3c
40017020:	ebffcc59 	bl	4000a18c <_txe_mutex_put>
40017024:	e3a00000 	mov	r0, #0
40017028:	eaffff9f 	b	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0x20>
4001702c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40017030 <CyU3PDmaConfigureSockets_TypeAuto>:
40017030:	e92d4010 	push	{r4, lr}
40017034:	e24dd018 	sub	sp, sp, #24
40017038:	e1a04000 	mov	r4, r0
4001703c:	e1d401b0 	ldrh	r0, [r4, #16]
40017040:	ebfff6c6 	bl	40014b60 <CyU3PDmaSocketDisable>
40017044:	e1d401b2 	ldrh	r0, [r4, #18]
40017048:	ebfff6c4 	bl	40014b60 <CyU3PDmaSocketDisable>
4001704c:	e1d401b0 	ldrh	r0, [r4, #16]
40017050:	e1a0100d 	mov	r1, sp
40017054:	ebfff6d9 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40017058:	e1d400bc 	ldrh	r0, [r4, #12]
4001705c:	e58d0000 	str	r0, [sp]
40017060:	e3a00000 	mov	r0, #0
40017064:	e58d0004 	str	r0, [sp, #4]
40017068:	e58d0008 	str	r0, [sp, #8]
4001706c:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017070:	e58d000c 	str	r0, [sp, #12]
40017074:	e1d401b0 	ldrh	r0, [r4, #16]
40017078:	eb000df6 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
4001707c:	e3500000 	cmp	r0, #0
40017080:	0a000002 	beq	40017090 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40017084:	e59d000c 	ldr	r0, [sp, #12]
40017088:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001708c:	e58d000c 	str	r0, [sp, #12]
40017090:	e3e00000 	mvn	r0, #0
40017094:	e58d0010 	str	r0, [sp, #16]
40017098:	e1d400b4 	ldrh	r0, [r4, #4]
4001709c:	e3500001 	cmp	r0, #1
400170a0:	1a000001 	bne	400170ac <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
400170a4:	e3a00041 	mov	r0, #65	; 0x41
400170a8:	ea000000 	b	400170b0 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
400170ac:	e3a00040 	mov	r0, #64	; 0x40
400170b0:	e58d0014 	str	r0, [sp, #20]
400170b4:	e1d401b0 	ldrh	r0, [r4, #16]
400170b8:	e1a0100d 	mov	r1, sp
400170bc:	ebfff769 	bl	40014e68 <CyU3PDmaSocketSetConfig>
400170c0:	e1d401b2 	ldrh	r0, [r4, #18]
400170c4:	e1a0100d 	mov	r1, sp
400170c8:	ebfff6bc 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
400170cc:	e1d400bc 	ldrh	r0, [r4, #12]
400170d0:	e58d0000 	str	r0, [sp]
400170d4:	e3a00000 	mov	r0, #0
400170d8:	e58d0004 	str	r0, [sp, #4]
400170dc:	e58d0008 	str	r0, [sp, #8]
400170e0:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400170e4:	e58d000c 	str	r0, [sp, #12]
400170e8:	e1d401b2 	ldrh	r0, [r4, #18]
400170ec:	eb000dd9 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
400170f0:	e3500000 	cmp	r0, #0
400170f4:	0a000002 	beq	40017104 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
400170f8:	e59d000c 	ldr	r0, [sp, #12]
400170fc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017100:	e58d000c 	str	r0, [sp, #12]
40017104:	e3e00000 	mvn	r0, #0
40017108:	e58d0010 	str	r0, [sp, #16]
4001710c:	e3a000c0 	mov	r0, #192	; 0xc0
40017110:	e58d0014 	str	r0, [sp, #20]
40017114:	e1d401b2 	ldrh	r0, [r4, #18]
40017118:	e1a0100d 	mov	r1, sp
4001711c:	ebfff751 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40017120:	e3a00000 	mov	r0, #0
40017124:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017128:	e28dd018 	add	sp, sp, #24
4001712c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017130 <CyU3PDmaConfigureSockets_TypeManual>:
40017130:	e92d4010 	push	{r4, lr}
40017134:	e24dd018 	sub	sp, sp, #24
40017138:	e1a04000 	mov	r4, r0
4001713c:	e1d400b4 	ldrh	r0, [r4, #4]
40017140:	e3500004 	cmp	r0, #4
40017144:	0a00001f 	beq	400171c8 <CyU3PDmaConfigureSockets_TypeManual+0x98>
40017148:	e1d401b0 	ldrh	r0, [r4, #16]
4001714c:	ebfff683 	bl	40014b60 <CyU3PDmaSocketDisable>
40017150:	e1d401b0 	ldrh	r0, [r4, #16]
40017154:	e1a0100d 	mov	r1, sp
40017158:	ebfff698 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001715c:	e1d400bc 	ldrh	r0, [r4, #12]
40017160:	e58d0000 	str	r0, [sp]
40017164:	e3a00000 	mov	r0, #0
40017168:	e58d0004 	str	r0, [sp, #4]
4001716c:	e58d0008 	str	r0, [sp, #8]
40017170:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017174:	e58d000c 	str	r0, [sp, #12]
40017178:	e1d401b0 	ldrh	r0, [r4, #16]
4001717c:	eb000db5 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
40017180:	e3500000 	cmp	r0, #0
40017184:	0a000002 	beq	40017194 <CyU3PDmaConfigureSockets_TypeManual+0x64>
40017188:	e59d000c 	ldr	r0, [sp, #12]
4001718c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017190:	e58d000c 	str	r0, [sp, #12]
40017194:	e3e00000 	mvn	r0, #0
40017198:	e58d0010 	str	r0, [sp, #16]
4001719c:	e3a00041 	mov	r0, #65	; 0x41
400171a0:	e58d0014 	str	r0, [sp, #20]
400171a4:	e1d400b4 	ldrh	r0, [r4, #4]
400171a8:	e3500003 	cmp	r0, #3
400171ac:	1a000002 	bne	400171bc <CyU3PDmaConfigureSockets_TypeManual+0x8c>
400171b0:	e59d0014 	ldr	r0, [sp, #20]
400171b4:	e3800080 	orr	r0, r0, #128	; 0x80
400171b8:	e58d0014 	str	r0, [sp, #20]
400171bc:	e1d401b0 	ldrh	r0, [r4, #16]
400171c0:	e1a0100d 	mov	r1, sp
400171c4:	ebfff727 	bl	40014e68 <CyU3PDmaSocketSetConfig>
400171c8:	e1d400b4 	ldrh	r0, [r4, #4]
400171cc:	e3500003 	cmp	r0, #3
400171d0:	0a000019 	beq	4001723c <CyU3PDmaConfigureSockets_TypeManual+0x10c>
400171d4:	e1d401b2 	ldrh	r0, [r4, #18]
400171d8:	ebfff660 	bl	40014b60 <CyU3PDmaSocketDisable>
400171dc:	e1d401b2 	ldrh	r0, [r4, #18]
400171e0:	e1a0100d 	mov	r1, sp
400171e4:	ebfff675 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
400171e8:	e1d400be 	ldrh	r0, [r4, #14]
400171ec:	e58d0000 	str	r0, [sp]
400171f0:	e3a00000 	mov	r0, #0
400171f4:	e58d0004 	str	r0, [sp, #4]
400171f8:	e58d0008 	str	r0, [sp, #8]
400171fc:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017200:	e58d000c 	str	r0, [sp, #12]
40017204:	e1d401b2 	ldrh	r0, [r4, #18]
40017208:	eb000d92 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
4001720c:	e3500000 	cmp	r0, #0
40017210:	0a000002 	beq	40017220 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017214:	e59d000c 	ldr	r0, [sp, #12]
40017218:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001721c:	e58d000c 	str	r0, [sp, #12]
40017220:	e3e00000 	mvn	r0, #0
40017224:	e58d0010 	str	r0, [sp, #16]
40017228:	e3a000c2 	mov	r0, #194	; 0xc2
4001722c:	e58d0014 	str	r0, [sp, #20]
40017230:	e1d401b2 	ldrh	r0, [r4, #18]
40017234:	e1a0100d 	mov	r1, sp
40017238:	ebfff70a 	bl	40014e68 <CyU3PDmaSocketSetConfig>
4001723c:	e3a00000 	mov	r0, #0
40017240:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017244:	e28dd018 	add	sp, sp, #24
40017248:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

4001724c <CyU3PDmaMultiChannelAcquireLock>:
4001724c:	e92d4070 	push	{r4, r5, r6, lr}
40017250:	e1a04000 	mov	r4, r0
40017254:	e1a05001 	mov	r5, r1
40017258:	e3540000 	cmp	r4, #0
4001725c:	1a000001 	bne	40017268 <CyU3PDmaMultiChannelAcquireLock+0x1c>
40017260:	e3a00041 	mov	r0, #65	; 0x41
40017264:	e8bd8070 	pop	{r4, r5, r6, pc}
40017268:	e5940000 	ldr	r0, [r4]
4001726c:	e3500000 	cmp	r0, #0
40017270:	1a000001 	bne	4001727c <CyU3PDmaMultiChannelAcquireLock+0x30>
40017274:	e3a00044 	mov	r0, #68	; 0x44
40017278:	eafffff9 	b	40017264 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001727c:	e1a01005 	mov	r1, r5
40017280:	e2840078 	add	r0, r4, #120	; 0x78
40017284:	ebffcb8b 	bl	4000a0b8 <_txe_mutex_get>
40017288:	e3500000 	cmp	r0, #0
4001728c:	0a000001 	beq	40017298 <CyU3PDmaMultiChannelAcquireLock+0x4c>
40017290:	e3a0001d 	mov	r0, #29
40017294:	eafffff2 	b	40017264 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017298:	e3a00000 	mov	r0, #0
4001729c:	eafffff0 	b	40017264 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

400172a0 <CyU3PDmaMultiChannelCommitBuffer>:
400172a0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400172a4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400172a8:	e1a04000 	mov	r4, r0
400172ac:	e1a05001 	mov	r5, r1
400172b0:	e1a06002 	mov	r6, r2
400172b4:	e3e01000 	mvn	r1, #0
400172b8:	e1a00004 	mov	r0, r4
400172bc:	ebffffe2 	bl	4001724c <CyU3PDmaMultiChannelAcquireLock>
400172c0:	e1a0b000 	mov	fp, r0
400172c4:	e35b0000 	cmp	fp, #0
400172c8:	0a000002 	beq	400172d8 <CyU3PDmaMultiChannelCommitBuffer+0x38>
400172cc:	e1a0000b 	mov	r0, fp
400172d0:	e28dd03c 	add	sp, sp, #60	; 0x3c
400172d4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400172d8:	e1d400b4 	ldrh	r0, [r4, #4]
400172dc:	e20070ff 	and	r7, r0, #255	; 0xff
400172e0:	e1d400b6 	ldrh	r0, [r4, #6]
400172e4:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400172e8:	e0400001 	sub	r0, r0, r1
400172ec:	e1500005 	cmp	r0, r5
400172f0:	aa000000 	bge	400172f8 <CyU3PDmaMultiChannelCommitBuffer+0x58>
400172f4:	e3a0b040 	mov	fp, #64	; 0x40
400172f8:	e5940000 	ldr	r0, [r4]
400172fc:	e3500002 	cmp	r0, #2
40017300:	0a000000 	beq	40017308 <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017304:	e3a0b042 	mov	fp, #66	; 0x42
40017308:	e5940000 	ldr	r0, [r4]
4001730c:	e3500005 	cmp	r0, #5
40017310:	1a000000 	bne	40017318 <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017314:	e3a0b049 	mov	fp, #73	; 0x49
40017318:	e5940000 	ldr	r0, [r4]
4001731c:	e3500007 	cmp	r0, #7
40017320:	1a000000 	bne	40017328 <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017324:	e3a0b048 	mov	fp, #72	; 0x48
40017328:	e3570006 	cmp	r7, #6
4001732c:	1a000000 	bne	40017334 <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017330:	e3a0b046 	mov	fp, #70	; 0x46
40017334:	e3570005 	cmp	r7, #5
40017338:	1a000034 	bne	40017410 <CyU3PDmaMultiChannelCommitBuffer+0x170>
4001733c:	e35b0000 	cmp	fp, #0
40017340:	1a000032 	bne	40017410 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017344:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017348:	e28d1024 	add	r1, sp, #36	; 0x24
4001734c:	ebfff61b 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40017350:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40017354:	e3100702 	tst	r0, #524288	; 0x80000
40017358:	0a000027 	beq	400173fc <CyU3PDmaMultiChannelCommitBuffer+0x15c>
4001735c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40017360:	e1a09800 	lsl	r9, r0, #16
40017364:	e1a09829 	lsr	r9, r9, #16
40017368:	e28d1004 	add	r1, sp, #4
4001736c:	e1a00009 	mov	r0, r9
40017370:	eb002c70 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017374:	e59d0010 	ldr	r0, [sp, #16]
40017378:	e3100008 	tst	r0, #8
4001737c:	0a00001c 	beq	400173f4 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017380:	e59d0010 	ldr	r0, [sp, #16]
40017384:	e1a00800 	lsl	r0, r0, #16
40017388:	e1a00820 	lsr	r0, r0, #16
4001738c:	e58d0010 	str	r0, [sp, #16]
40017390:	e59d0010 	ldr	r0, [sp, #16]
40017394:	e1800805 	orr	r0, r0, r5, lsl #16
40017398:	e58d0010 	str	r0, [sp, #16]
4001739c:	e3560000 	cmp	r6, #0
400173a0:	0a000007 	beq	400173c4 <CyU3PDmaMultiChannelCommitBuffer+0x124>
400173a4:	e59d0010 	ldr	r0, [sp, #16]
400173a8:	e3c0000f 	bic	r0, r0, #15
400173ac:	e58d0010 	str	r0, [sp, #16]
400173b0:	e206100e 	and	r1, r6, #14
400173b4:	e3811008 	orr	r1, r1, #8
400173b8:	e59d0010 	ldr	r0, [sp, #16]
400173bc:	e1800001 	orr	r0, r0, r1
400173c0:	e58d0010 	str	r0, [sp, #16]
400173c4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400173c8:	e3500000 	cmp	r0, #0
400173cc:	0a000004 	beq	400173e4 <CyU3PDmaMultiChannelCommitBuffer+0x144>
400173d0:	e59d2010 	ldr	r2, [sp, #16]
400173d4:	e59f327c 	ldr	r3, [pc, #636]	; 40017658 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400173d8:	e0021003 	and	r1, r2, r3
400173dc:	e59d0004 	ldr	r0, [sp, #4]
400173e0:	ebffeb19 	bl	4001204c <CyU3PSysCleanDRegion>
400173e4:	e28d1004 	add	r1, sp, #4
400173e8:	e1a00009 	mov	r0, r9
400173ec:	eb002c6c 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400173f0:	ea000002 	b	40017400 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400173f4:	e3a0b047 	mov	fp, #71	; 0x47
400173f8:	ea000000 	b	40017400 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400173fc:	e3a0b047 	mov	fp, #71	; 0x47
40017400:	e2840078 	add	r0, r4, #120	; 0x78
40017404:	ebffcb60 	bl	4000a18c <_txe_mutex_put>
40017408:	e1a0000b 	mov	r0, fp
4001740c:	eaffffaf 	b	400172d0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017410:	e35b0000 	cmp	fp, #0
40017414:	1a00000d 	bne	40017450 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017418:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001741c:	e28d1014 	add	r1, sp, #20
40017420:	eb002c44 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017424:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017428:	e28d1004 	add	r1, sp, #4
4001742c:	eb002c41 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017430:	e59d0020 	ldr	r0, [sp, #32]
40017434:	e3100008 	tst	r0, #8
40017438:	1a000000 	bne	40017440 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
4001743c:	e3a0b047 	mov	fp, #71	; 0x47
40017440:	e59d0010 	ldr	r0, [sp, #16]
40017444:	e3100008 	tst	r0, #8
40017448:	0a000000 	beq	40017450 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
4001744c:	e3a0b047 	mov	fp, #71	; 0x47
40017450:	e35b0000 	cmp	fp, #0
40017454:	0a000003 	beq	40017468 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
40017458:	e2840078 	add	r0, r4, #120	; 0x78
4001745c:	ebffcb4a 	bl	4000a18c <_txe_mutex_put>
40017460:	e1a0000b 	mov	r0, fp
40017464:	eaffff99 	b	400172d0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017468:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001746c:	e3500000 	cmp	r0, #0
40017470:	0a000004 	beq	40017488 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
40017474:	e59d2010 	ldr	r2, [sp, #16]
40017478:	e59f31d8 	ldr	r3, [pc, #472]	; 40017658 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
4001747c:	e0021003 	and	r1, r2, r3
40017480:	e59d0004 	ldr	r0, [sp, #4]
40017484:	ebffeaf0 	bl	4001204c <CyU3PSysCleanDRegion>
40017488:	e3570009 	cmp	r7, #9
4001748c:	1a00003a 	bne	4001757c <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
40017490:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017494:	e3a0a000 	mov	sl, #0
40017498:	ea00002a 	b	40017548 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
4001749c:	e28d1004 	add	r1, sp, #4
400174a0:	e1a00009 	mov	r0, r9
400174a4:	eb002c23 	bl	40022538 <CyU3PDmaDscrGetConfig>
400174a8:	e284000c 	add	r0, r4, #12
400174ac:	e080008a 	add	r0, r0, sl, lsl #1
400174b0:	e1d000b0 	ldrh	r0, [r0]
400174b4:	e3500000 	cmp	r0, #0
400174b8:	1a00001d 	bne	40017534 <CyU3PDmaMultiChannelCommitBuffer+0x294>
400174bc:	e59d0010 	ldr	r0, [sp, #16]
400174c0:	e59f1190 	ldr	r1, [pc, #400]	; 40017658 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400174c4:	e0000001 	and	r0, r0, r1
400174c8:	e58d0010 	str	r0, [sp, #16]
400174cc:	e59d0010 	ldr	r0, [sp, #16]
400174d0:	e1800805 	orr	r0, r0, r5, lsl #16
400174d4:	e58d0010 	str	r0, [sp, #16]
400174d8:	e3560000 	cmp	r6, #0
400174dc:	1a000005 	bne	400174f8 <CyU3PDmaMultiChannelCommitBuffer+0x258>
400174e0:	e59d1020 	ldr	r1, [sp, #32]
400174e4:	e201100f 	and	r1, r1, #15
400174e8:	e59d0010 	ldr	r0, [sp, #16]
400174ec:	e1800001 	orr	r0, r0, r1
400174f0:	e58d0010 	str	r0, [sp, #16]
400174f4:	ea000004 	b	4001750c <CyU3PDmaMultiChannelCommitBuffer+0x26c>
400174f8:	e206100e 	and	r1, r6, #14
400174fc:	e3811008 	orr	r1, r1, #8
40017500:	e59d0010 	ldr	r0, [sp, #16]
40017504:	e1800001 	orr	r0, r0, r1
40017508:	e58d0010 	str	r0, [sp, #16]
4001750c:	e28d1004 	add	r1, sp, #4
40017510:	e1a00009 	mov	r0, r9
40017514:	eb002c22 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40017518:	e59d0008 	ldr	r0, [sp, #8]
4001751c:	e1a08900 	lsl	r8, r0, #18
40017520:	e1a08928 	lsr	r8, r8, #18
40017524:	e3a02001 	mov	r2, #1
40017528:	e1a01009 	mov	r1, r9
4001752c:	e1a00008 	mov	r0, r8
40017530:	ebfff63a 	bl	40014e20 <CyU3PDmaSocketSendEvent>
40017534:	e59d000c 	ldr	r0, [sp, #12]
40017538:	e59f111c 	ldr	r1, [pc, #284]	; 4001765c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001753c:	e0019820 	and	r9, r1, r0, lsr #16
40017540:	e28a0001 	add	r0, sl, #1
40017544:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
40017548:	e1d400ba 	ldrh	r0, [r4, #10]
4001754c:	e150000a 	cmp	r0, sl
40017550:	caffffd1 	bgt	4001749c <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
40017554:	e59d001c 	ldr	r0, [sp, #28]
40017558:	e59f10fc 	ldr	r1, [pc, #252]	; 4001765c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001755c:	e0010820 	and	r0, r1, r0, lsr #16
40017560:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017564:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017568:	e28d1014 	add	r1, sp, #20
4001756c:	eb002bf1 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017570:	e59d001c 	ldr	r0, [sp, #28]
40017574:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017578:	ea000032 	b	40017648 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
4001757c:	e59d0010 	ldr	r0, [sp, #16]
40017580:	e59f10d0 	ldr	r1, [pc, #208]	; 40017658 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017584:	e0000001 	and	r0, r0, r1
40017588:	e58d0010 	str	r0, [sp, #16]
4001758c:	e59d0010 	ldr	r0, [sp, #16]
40017590:	e1800805 	orr	r0, r0, r5, lsl #16
40017594:	e58d0010 	str	r0, [sp, #16]
40017598:	e3560000 	cmp	r6, #0
4001759c:	1a000005 	bne	400175b8 <CyU3PDmaMultiChannelCommitBuffer+0x318>
400175a0:	e59d1020 	ldr	r1, [sp, #32]
400175a4:	e201100f 	and	r1, r1, #15
400175a8:	e59d0010 	ldr	r0, [sp, #16]
400175ac:	e1800001 	orr	r0, r0, r1
400175b0:	e58d0010 	str	r0, [sp, #16]
400175b4:	ea000004 	b	400175cc <CyU3PDmaMultiChannelCommitBuffer+0x32c>
400175b8:	e206100e 	and	r1, r6, #14
400175bc:	e3811008 	orr	r1, r1, #8
400175c0:	e59d0010 	ldr	r0, [sp, #16]
400175c4:	e1800001 	orr	r0, r0, r1
400175c8:	e58d0010 	str	r0, [sp, #16]
400175cc:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400175d0:	e28d1004 	add	r1, sp, #4
400175d4:	eb002bf2 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400175d8:	e59d0008 	ldr	r0, [sp, #8]
400175dc:	e1a08900 	lsl	r8, r0, #18
400175e0:	e1a08928 	lsr	r8, r8, #18
400175e4:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
400175e8:	e3a02001 	mov	r2, #1
400175ec:	e1a00008 	mov	r0, r8
400175f0:	ebfff60a 	bl	40014e20 <CyU3PDmaSocketSendEvent>
400175f4:	e3570007 	cmp	r7, #7
400175f8:	1a000009 	bne	40017624 <CyU3PDmaMultiChannelCommitBuffer+0x384>
400175fc:	e59d000c 	ldr	r0, [sp, #12]
40017600:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017604:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017608:	e28d1004 	add	r1, sp, #4
4001760c:	eb002bc9 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017610:	e59d000c 	ldr	r0, [sp, #12]
40017614:	e59f1040 	ldr	r1, [pc, #64]	; 4001765c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017618:	e0010820 	and	r0, r1, r0, lsr #16
4001761c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017620:	ea000008 	b	40017648 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017624:	e59d001c 	ldr	r0, [sp, #28]
40017628:	e59f102c 	ldr	r1, [pc, #44]	; 4001765c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001762c:	e0010820 	and	r0, r1, r0, lsr #16
40017630:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017634:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017638:	e28d1014 	add	r1, sp, #20
4001763c:	eb002bbd 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017640:	e59d001c 	ldr	r0, [sp, #28]
40017644:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017648:	e2840078 	add	r0, r4, #120	; 0x78
4001764c:	ebffcace 	bl	4000a18c <_txe_mutex_put>
40017650:	e3a00000 	mov	r0, #0
40017654:	eaffff1d 	b	400172d0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017658:	0000fff0 	.word	0x0000fff0
4001765c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

40017660 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
40017660:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017664:	e24dd024 	sub	sp, sp, #36	; 0x24
40017668:	e1a04000 	mov	r4, r0
4001766c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017670:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017674:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017678:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001767c:	e1d400b8 	ldrh	r0, [r4, #8]
40017680:	e1d430ba 	ldrh	r3, [r4, #10]
40017684:	e0000093 	mul	r0, r3, r0
40017688:	e1a01800 	lsl	r1, r0, #16
4001768c:	e1a01821 	lsr	r1, r1, #16
40017690:	e1d420b6 	ldrh	r2, [r4, #6]
40017694:	e1a03006 	mov	r3, r6
40017698:	e284001c 	add	r0, r4, #28
4001769c:	eb002ab6 	bl	4002217c <CyU3PDmaDscrChainCreate>
400176a0:	e1a05000 	mov	r5, r0
400176a4:	e3550000 	cmp	r5, #0
400176a8:	0a000002 	beq	400176b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
400176ac:	e1a00005 	mov	r0, r5
400176b0:	e28dd024 	add	sp, sp, #36	; 0x24
400176b4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400176b8:	e1d400b4 	ldrh	r0, [r4, #4]
400176bc:	e3500005 	cmp	r0, #5
400176c0:	1a00003c 	bne	400177b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
400176c4:	e3a07000 	mov	r7, #0
400176c8:	e1d481bc 	ldrh	r8, [r4, #28]
400176cc:	ea000035 	b	400177a8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
400176d0:	e3a09000 	mov	r9, #0
400176d4:	ea00002e 	b	40017794 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
400176d8:	e28d1004 	add	r1, sp, #4
400176dc:	e1a00008 	mov	r0, r8
400176e0:	eb002b94 	bl	40022538 <CyU3PDmaDscrGetConfig>
400176e4:	e3570000 	cmp	r7, #0
400176e8:	1a000003 	bne	400176fc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
400176ec:	e2840014 	add	r0, r4, #20
400176f0:	e0800089 	add	r0, r0, r9, lsl #1
400176f4:	e1c080b0 	strh	r8, [r0]
400176f8:	ea000020 	b	40017780 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
400176fc:	e2841014 	add	r1, r4, #20
40017700:	e0811089 	add	r1, r1, r9, lsl #1
40017704:	e1d100b0 	ldrh	r0, [r1]
40017708:	e28d1014 	add	r1, sp, #20
4001770c:	eb002b89 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017710:	e59d0018 	ldr	r0, [sp, #24]
40017714:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017718:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001771c:	e58d0018 	str	r0, [sp, #24]
40017720:	e2841024 	add	r1, r4, #36	; 0x24
40017724:	e0811089 	add	r1, r1, r9, lsl #1
40017728:	e59d0018 	ldr	r0, [sp, #24]
4001772c:	e1d110b0 	ldrh	r1, [r1]
40017730:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017734:	e1821801 	orr	r1, r2, r1, lsl #16
40017738:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
4001773c:	e1800001 	orr	r0, r0, r1
40017740:	e58d0018 	str	r0, [sp, #24]
40017744:	e59d001c 	ldr	r0, [sp, #28]
40017748:	e1a00800 	lsl	r0, r0, #16
4001774c:	e1a00820 	lsr	r0, r0, #16
40017750:	e58d001c 	str	r0, [sp, #28]
40017754:	e59d001c 	ldr	r0, [sp, #28]
40017758:	e1800808 	orr	r0, r0, r8, lsl #16
4001775c:	e58d001c 	str	r0, [sp, #28]
40017760:	e2841014 	add	r1, r4, #20
40017764:	e0811089 	add	r1, r1, r9, lsl #1
40017768:	e1d100b0 	ldrh	r0, [r1]
4001776c:	e28d1014 	add	r1, sp, #20
40017770:	eb002b8b 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40017774:	e2840014 	add	r0, r4, #20
40017778:	e0800089 	add	r0, r0, r9, lsl #1
4001777c:	e1c080b0 	strh	r8, [r0]
40017780:	e59d000c 	ldr	r0, [sp, #12]
40017784:	e1a08800 	lsl	r8, r0, #16
40017788:	e1a08828 	lsr	r8, r8, #16
4001778c:	e2890001 	add	r0, r9, #1
40017790:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017794:	e1d400ba 	ldrh	r0, [r4, #10]
40017798:	e1500009 	cmp	r0, r9
4001779c:	caffffcd 	bgt	400176d8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
400177a0:	e2870001 	add	r0, r7, #1
400177a4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400177a8:	e1d400b8 	ldrh	r0, [r4, #8]
400177ac:	e1500007 	cmp	r0, r7
400177b0:	aaffffc6 	bge	400176d0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
400177b4:	ea000056 	b	40017914 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
400177b8:	e3a07000 	mov	r7, #0
400177bc:	e1d481bc 	ldrh	r8, [r4, #28]
400177c0:	ea000050 	b	40017908 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
400177c4:	e3a09000 	mov	r9, #0
400177c8:	ea000049 	b	400178f4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
400177cc:	e3570000 	cmp	r7, #0
400177d0:	1a00000d 	bne	4001780c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
400177d4:	e3a06cff 	mov	r6, #65280	; 0xff00
400177d8:	e2840024 	add	r0, r4, #36	; 0x24
400177dc:	e0800089 	add	r0, r0, r9, lsl #1
400177e0:	e1d000b0 	ldrh	r0, [r0]
400177e4:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400177e8:	e1810800 	orr	r0, r1, r0, lsl #16
400177ec:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400177f0:	e1866000 	orr	r6, r6, r0
400177f4:	e1d410b8 	ldrh	r1, [r4, #8]
400177f8:	e2842014 	add	r2, r4, #20
400177fc:	e0820089 	add	r0, r2, r9, lsl #1
40017800:	e1a03006 	mov	r3, r6
40017804:	e3a02000 	mov	r2, #0
40017808:	eb002a5b 	bl	4002217c <CyU3PDmaDscrChainCreate>
4001780c:	e2841014 	add	r1, r4, #20
40017810:	e0811089 	add	r1, r1, r9, lsl #1
40017814:	e1d100b0 	ldrh	r0, [r1]
40017818:	e28d1014 	add	r1, sp, #20
4001781c:	eb002b45 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017820:	e28d1004 	add	r1, sp, #4
40017824:	e1a00008 	mov	r0, r8
40017828:	eb002b42 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001782c:	e59d0004 	ldr	r0, [sp, #4]
40017830:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017834:	e0800001 	add	r0, r0, r1
40017838:	e58d0014 	str	r0, [sp, #20]
4001783c:	e59d0010 	ldr	r0, [sp, #16]
40017840:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017844:	e0400001 	sub	r0, r0, r1
40017848:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
4001784c:	e0400001 	sub	r0, r0, r1
40017850:	e58d0020 	str	r0, [sp, #32]
40017854:	e2841014 	add	r1, r4, #20
40017858:	e0811089 	add	r1, r1, r9, lsl #1
4001785c:	e1d100b0 	ldrh	r0, [r1]
40017860:	e28d1014 	add	r1, sp, #20
40017864:	eb002b4e 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40017868:	e59d0004 	ldr	r0, [sp, #4]
4001786c:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017870:	e0800001 	add	r0, r0, r1
40017874:	e58d0004 	str	r0, [sp, #4]
40017878:	e1d400b6 	ldrh	r0, [r4, #6]
4001787c:	e280000f 	add	r0, r0, #15
40017880:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017884:	e0400001 	sub	r0, r0, r1
40017888:	e59f10b4 	ldr	r1, [pc, #180]	; 40017944 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
4001788c:	e0000001 	and	r0, r0, r1
40017890:	e58d0010 	str	r0, [sp, #16]
40017894:	e59d000c 	ldr	r0, [sp, #12]
40017898:	e1a00800 	lsl	r0, r0, #16
4001789c:	e1a00820 	lsr	r0, r0, #16
400178a0:	e58d000c 	str	r0, [sp, #12]
400178a4:	e2841014 	add	r1, r4, #20
400178a8:	e0811089 	add	r1, r1, r9, lsl #1
400178ac:	e59d000c 	ldr	r0, [sp, #12]
400178b0:	e1d110b0 	ldrh	r1, [r1]
400178b4:	e1800801 	orr	r0, r0, r1, lsl #16
400178b8:	e58d000c 	str	r0, [sp, #12]
400178bc:	e28d1004 	add	r1, sp, #4
400178c0:	e1a00008 	mov	r0, r8
400178c4:	eb002b36 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400178c8:	e59d000c 	ldr	r0, [sp, #12]
400178cc:	e1a08800 	lsl	r8, r0, #16
400178d0:	e1a08828 	lsr	r8, r8, #16
400178d4:	e59d001c 	ldr	r0, [sp, #28]
400178d8:	e59f1068 	ldr	r1, [pc, #104]	; 40017948 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
400178dc:	e0010820 	and	r0, r1, r0, lsr #16
400178e0:	e2841014 	add	r1, r4, #20
400178e4:	e0811089 	add	r1, r1, r9, lsl #1
400178e8:	e1c100b0 	strh	r0, [r1]
400178ec:	e2890001 	add	r0, r9, #1
400178f0:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400178f4:	e1d400ba 	ldrh	r0, [r4, #10]
400178f8:	e1500009 	cmp	r0, r9
400178fc:	caffffb2 	bgt	400177cc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017900:	e2870001 	add	r0, r7, #1
40017904:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017908:	e1d400b8 	ldrh	r0, [r4, #8]
4001790c:	e1500007 	cmp	r0, r7
40017910:	caffffab 	bgt	400177c4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017914:	e1a00004 	mov	r0, r4
40017918:	eb000509 	bl	40018d44 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
4001791c:	e1d401b4 	ldrh	r0, [r4, #20]
40017920:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017924:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017928:	e1d401bc 	ldrh	r0, [r4, #28]
4001792c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017930:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017934:	e2840034 	add	r0, r4, #52	; 0x34
40017938:	eb002a86 	bl	40022358 <CyU3PDmaDscrGet>
4001793c:	e3a00000 	mov	r0, #0
40017940:	eaffff5a 	b	400176b0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017944:	0000fff0 	.word	0x0000fff0
40017948:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

4001794c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
4001794c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017950:	e24dd024 	sub	sp, sp, #36	; 0x24
40017954:	e1a04000 	mov	r4, r0
40017958:	e3a06cff 	mov	r6, #65280	; 0xff00
4001795c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017960:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017964:	e1810800 	orr	r0, r1, r0, lsl #16
40017968:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001796c:	e1866000 	orr	r6, r6, r0
40017970:	e1d400b8 	ldrh	r0, [r4, #8]
40017974:	e1d430ba 	ldrh	r3, [r4, #10]
40017978:	e0000093 	mul	r0, r3, r0
4001797c:	e1a01800 	lsl	r1, r0, #16
40017980:	e1a01821 	lsr	r1, r1, #16
40017984:	e1d420b6 	ldrh	r2, [r4, #6]
40017988:	e1a03006 	mov	r3, r6
4001798c:	e2840014 	add	r0, r4, #20
40017990:	eb0029f9 	bl	4002217c <CyU3PDmaDscrChainCreate>
40017994:	e1a05000 	mov	r5, r0
40017998:	e3550000 	cmp	r5, #0
4001799c:	0a000002 	beq	400179ac <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
400179a0:	e1a00005 	mov	r0, r5
400179a4:	e28dd024 	add	sp, sp, #36	; 0x24
400179a8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400179ac:	e1d400b4 	ldrh	r0, [r4, #4]
400179b0:	e3500006 	cmp	r0, #6
400179b4:	1a00003a 	bne	40017aa4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
400179b8:	e3a07000 	mov	r7, #0
400179bc:	e1d481b4 	ldrh	r8, [r4, #20]
400179c0:	ea000033 	b	40017a94 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
400179c4:	e3a09000 	mov	r9, #0
400179c8:	ea00002c 	b	40017a80 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
400179cc:	e28d1014 	add	r1, sp, #20
400179d0:	e1a00008 	mov	r0, r8
400179d4:	eb002ad7 	bl	40022538 <CyU3PDmaDscrGetConfig>
400179d8:	e3570000 	cmp	r7, #0
400179dc:	1a000003 	bne	400179f0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
400179e0:	e284001c 	add	r0, r4, #28
400179e4:	e0800089 	add	r0, r0, r9, lsl #1
400179e8:	e1c080b0 	strh	r8, [r0]
400179ec:	ea00001e 	b	40017a6c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
400179f0:	e284101c 	add	r1, r4, #28
400179f4:	e0811089 	add	r1, r1, r9, lsl #1
400179f8:	e1d100b0 	ldrh	r0, [r1]
400179fc:	e28d1004 	add	r1, sp, #4
40017a00:	eb002acc 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017a04:	e59d0008 	ldr	r0, [sp, #8]
40017a08:	e1a00720 	lsr	r0, r0, #14
40017a0c:	e1a00700 	lsl	r0, r0, #14
40017a10:	e58d0008 	str	r0, [sp, #8]
40017a14:	e284102c 	add	r1, r4, #44	; 0x2c
40017a18:	e0811089 	add	r1, r1, r9, lsl #1
40017a1c:	e59d0008 	ldr	r0, [sp, #8]
40017a20:	e1d110b0 	ldrh	r1, [r1]
40017a24:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017a28:	e1800001 	orr	r0, r0, r1
40017a2c:	e58d0008 	str	r0, [sp, #8]
40017a30:	e59d000c 	ldr	r0, [sp, #12]
40017a34:	e1a00820 	lsr	r0, r0, #16
40017a38:	e1a00800 	lsl	r0, r0, #16
40017a3c:	e58d000c 	str	r0, [sp, #12]
40017a40:	e59d000c 	ldr	r0, [sp, #12]
40017a44:	e1800008 	orr	r0, r0, r8
40017a48:	e58d000c 	str	r0, [sp, #12]
40017a4c:	e284101c 	add	r1, r4, #28
40017a50:	e0811089 	add	r1, r1, r9, lsl #1
40017a54:	e1d100b0 	ldrh	r0, [r1]
40017a58:	e28d1004 	add	r1, sp, #4
40017a5c:	eb002ad0 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40017a60:	e284001c 	add	r0, r4, #28
40017a64:	e0800089 	add	r0, r0, r9, lsl #1
40017a68:	e1c080b0 	strh	r8, [r0]
40017a6c:	e59d001c 	ldr	r0, [sp, #28]
40017a70:	e59f11c4 	ldr	r1, [pc, #452]	; 40017c3c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017a74:	e0018820 	and	r8, r1, r0, lsr #16
40017a78:	e2890001 	add	r0, r9, #1
40017a7c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017a80:	e1d400ba 	ldrh	r0, [r4, #10]
40017a84:	e1500009 	cmp	r0, r9
40017a88:	caffffcf 	bgt	400179cc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017a8c:	e2870001 	add	r0, r7, #1
40017a90:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017a94:	e1d400b8 	ldrh	r0, [r4, #8]
40017a98:	e1500007 	cmp	r0, r7
40017a9c:	aaffffc8 	bge	400179c4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017aa0:	ea000059 	b	40017c0c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017aa4:	e3a07000 	mov	r7, #0
40017aa8:	e1d481b4 	ldrh	r8, [r4, #20]
40017aac:	ea000053 	b	40017c00 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017ab0:	e3a09000 	mov	r9, #0
40017ab4:	ea00004c 	b	40017bec <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017ab8:	e3570000 	cmp	r7, #0
40017abc:	1a00000b 	bne	40017af0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017ac0:	e284002c 	add	r0, r4, #44	; 0x2c
40017ac4:	e0800089 	add	r0, r0, r9, lsl #1
40017ac8:	e1d000b0 	ldrh	r0, [r0]
40017acc:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017ad0:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017ad4:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017ad8:	e1d410b8 	ldrh	r1, [r4, #8]
40017adc:	e284201c 	add	r2, r4, #28
40017ae0:	e0820089 	add	r0, r2, r9, lsl #1
40017ae4:	e1a03006 	mov	r3, r6
40017ae8:	e3a02000 	mov	r2, #0
40017aec:	eb0029a2 	bl	4002217c <CyU3PDmaDscrChainCreate>
40017af0:	e284101c 	add	r1, r4, #28
40017af4:	e0811089 	add	r1, r1, r9, lsl #1
40017af8:	e1d100b0 	ldrh	r0, [r1]
40017afc:	e28d1004 	add	r1, sp, #4
40017b00:	eb002a8c 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017b04:	e28d1014 	add	r1, sp, #20
40017b08:	e1a00008 	mov	r0, r8
40017b0c:	eb002a89 	bl	40022538 <CyU3PDmaDscrGetConfig>
40017b10:	e59d0014 	ldr	r0, [sp, #20]
40017b14:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017b18:	e0800001 	add	r0, r0, r1
40017b1c:	e58d0004 	str	r0, [sp, #4]
40017b20:	e1d400b6 	ldrh	r0, [r4, #6]
40017b24:	e280000f 	add	r0, r0, #15
40017b28:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017b2c:	e0400001 	sub	r0, r0, r1
40017b30:	e59f1108 	ldr	r1, [pc, #264]	; 40017c40 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017b34:	e0000001 	and	r0, r0, r1
40017b38:	e58d0010 	str	r0, [sp, #16]
40017b3c:	e59d000c 	ldr	r0, [sp, #12]
40017b40:	e1a00800 	lsl	r0, r0, #16
40017b44:	e1a00820 	lsr	r0, r0, #16
40017b48:	e58d000c 	str	r0, [sp, #12]
40017b4c:	e59d000c 	ldr	r0, [sp, #12]
40017b50:	e1800808 	orr	r0, r0, r8, lsl #16
40017b54:	e58d000c 	str	r0, [sp, #12]
40017b58:	e284101c 	add	r1, r4, #28
40017b5c:	e0811089 	add	r1, r1, r9, lsl #1
40017b60:	e1d100b0 	ldrh	r0, [r1]
40017b64:	e28d1004 	add	r1, sp, #4
40017b68:	eb002a8d 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40017b6c:	e59d0014 	ldr	r0, [sp, #20]
40017b70:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017b74:	e0800001 	add	r0, r0, r1
40017b78:	e58d0014 	str	r0, [sp, #20]
40017b7c:	e1d400b6 	ldrh	r0, [r4, #6]
40017b80:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017b84:	e0400001 	sub	r0, r0, r1
40017b88:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017b8c:	e0400001 	sub	r0, r0, r1
40017b90:	e58d0020 	str	r0, [sp, #32]
40017b94:	e59d001c 	ldr	r0, [sp, #28]
40017b98:	e1a00820 	lsr	r0, r0, #16
40017b9c:	e1a00800 	lsl	r0, r0, #16
40017ba0:	e58d001c 	str	r0, [sp, #28]
40017ba4:	e284101c 	add	r1, r4, #28
40017ba8:	e0811089 	add	r1, r1, r9, lsl #1
40017bac:	e59d001c 	ldr	r0, [sp, #28]
40017bb0:	e1d110b0 	ldrh	r1, [r1]
40017bb4:	e1800001 	orr	r0, r0, r1
40017bb8:	e58d001c 	str	r0, [sp, #28]
40017bbc:	e28d1014 	add	r1, sp, #20
40017bc0:	e1a00008 	mov	r0, r8
40017bc4:	eb002a76 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40017bc8:	e59d001c 	ldr	r0, [sp, #28]
40017bcc:	e59f1068 	ldr	r1, [pc, #104]	; 40017c3c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017bd0:	e0018820 	and	r8, r1, r0, lsr #16
40017bd4:	e284101c 	add	r1, r4, #28
40017bd8:	e0811089 	add	r1, r1, r9, lsl #1
40017bdc:	e59d000c 	ldr	r0, [sp, #12]
40017be0:	e1c100b0 	strh	r0, [r1]
40017be4:	e2890001 	add	r0, r9, #1
40017be8:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017bec:	e1d400ba 	ldrh	r0, [r4, #10]
40017bf0:	e1500009 	cmp	r0, r9
40017bf4:	caffffaf 	bgt	40017ab8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017bf8:	e2870001 	add	r0, r7, #1
40017bfc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017c00:	e1d400b8 	ldrh	r0, [r4, #8]
40017c04:	e1500007 	cmp	r0, r7
40017c08:	caffffa8 	bgt	40017ab0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017c0c:	e1d401b4 	ldrh	r0, [r4, #20]
40017c10:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017c14:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017c18:	e1d401bc 	ldrh	r0, [r4, #28]
40017c1c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017c20:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017c24:	e2840034 	add	r0, r4, #52	; 0x34
40017c28:	eb0029ca 	bl	40022358 <CyU3PDmaDscrGet>
40017c2c:	e1a00004 	mov	r0, r4
40017c30:	eb0004a3 	bl	40018ec4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017c34:	e3a00000 	mov	r0, #0
40017c38:	eaffff59 	b	400179a4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017c3c:	0000ffff 	.word	0x0000ffff
40017c40:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017c44 <CyU3PDmaMultiChannelCreate>:
40017c44:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017c48:	e1a04000 	mov	r4, r0
40017c4c:	e1a05001 	mov	r5, r1
40017c50:	e1a06002 	mov	r6, r2
40017c54:	e3560000 	cmp	r6, #0
40017c58:	1a000001 	bne	40017c64 <CyU3PDmaMultiChannelCreate+0x20>
40017c5c:	e3a00041 	mov	r0, #65	; 0x41
40017c60:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017c64:	e3540000 	cmp	r4, #0
40017c68:	1a000001 	bne	40017c74 <CyU3PDmaMultiChannelCreate+0x30>
40017c6c:	e3a00041 	mov	r0, #65	; 0x41
40017c70:	eafffffa 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017c74:	e1d600b2 	ldrh	r0, [r6, #2]
40017c78:	e3500000 	cmp	r0, #0
40017c7c:	1a000001 	bne	40017c88 <CyU3PDmaMultiChannelCreate+0x44>
40017c80:	e3a00040 	mov	r0, #64	; 0x40
40017c84:	eafffff5 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017c88:	e1d600b4 	ldrh	r0, [r6, #4]
40017c8c:	e3500002 	cmp	r0, #2
40017c90:	ba000002 	blt	40017ca0 <CyU3PDmaMultiChannelCreate+0x5c>
40017c94:	e1d600b4 	ldrh	r0, [r6, #4]
40017c98:	e3500004 	cmp	r0, #4
40017c9c:	da000001 	ble	40017ca8 <CyU3PDmaMultiChannelCreate+0x64>
40017ca0:	e3a00040 	mov	r0, #64	; 0x40
40017ca4:	eaffffed 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017ca8:	e3550006 	cmp	r5, #6
40017cac:	0a000001 	beq	40017cb8 <CyU3PDmaMultiChannelCreate+0x74>
40017cb0:	e3550005 	cmp	r5, #5
40017cb4:	1a000007 	bne	40017cd8 <CyU3PDmaMultiChannelCreate+0x94>
40017cb8:	eb0029de 	bl	40022438 <CyU3PDmaDscrGetFreeCount>
40017cbc:	e1d610b2 	ldrh	r1, [r6, #2]
40017cc0:	e1d620b4 	ldrh	r2, [r6, #4]
40017cc4:	e0010192 	mul	r1, r2, r1
40017cc8:	e1500001 	cmp	r0, r1
40017ccc:	ca000016 	bgt	40017d2c <CyU3PDmaMultiChannelCreate+0xe8>
40017cd0:	e3a00010 	mov	r0, #16
40017cd4:	eaffffe1 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017cd8:	e3550008 	cmp	r5, #8
40017cdc:	0a000001 	beq	40017ce8 <CyU3PDmaMultiChannelCreate+0xa4>
40017ce0:	e3550007 	cmp	r5, #7
40017ce4:	1a000007 	bne	40017d08 <CyU3PDmaMultiChannelCreate+0xc4>
40017ce8:	eb0029d2 	bl	40022438 <CyU3PDmaDscrGetFreeCount>
40017cec:	e1d610b2 	ldrh	r1, [r6, #2]
40017cf0:	e1d620b4 	ldrh	r2, [r6, #4]
40017cf4:	e0010192 	mul	r1, r2, r1
40017cf8:	e1500081 	cmp	r0, r1, lsl #1
40017cfc:	ca00000a 	bgt	40017d2c <CyU3PDmaMultiChannelCreate+0xe8>
40017d00:	e3a00010 	mov	r0, #16
40017d04:	eaffffd5 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017d08:	eb0029ca 	bl	40022438 <CyU3PDmaDscrGetFreeCount>
40017d0c:	e1d610b2 	ldrh	r1, [r6, #2]
40017d10:	e1d620b4 	ldrh	r2, [r6, #4]
40017d14:	e2822001 	add	r2, r2, #1
40017d18:	e0010192 	mul	r1, r2, r1
40017d1c:	e1500001 	cmp	r0, r1
40017d20:	ca000001 	bgt	40017d2c <CyU3PDmaMultiChannelCreate+0xe8>
40017d24:	e3a00010 	mov	r0, #16
40017d28:	eaffffcc 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017d2c:	e1d600b0 	ldrh	r0, [r6]
40017d30:	e3500000 	cmp	r0, #0
40017d34:	0a000003 	beq	40017d48 <CyU3PDmaMultiChannelCreate+0x104>
40017d38:	e1d600b0 	ldrh	r0, [r6]
40017d3c:	e59f1634 	ldr	r1, [pc, #1588]	; 40018378 <CyU3PDmaMultiChannelCreate+0x734>
40017d40:	e1500001 	cmp	r0, r1
40017d44:	da000001 	ble	40017d50 <CyU3PDmaMultiChannelCreate+0x10c>
40017d48:	e3a00040 	mov	r0, #64	; 0x40
40017d4c:	eaffffc3 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017d50:	e3550005 	cmp	r5, #5
40017d54:	0a000001 	beq	40017d60 <CyU3PDmaMultiChannelCreate+0x11c>
40017d58:	e3550006 	cmp	r5, #6
40017d5c:	1a000004 	bne	40017d74 <CyU3PDmaMultiChannelCreate+0x130>
40017d60:	e1d600b0 	ldrh	r0, [r6]
40017d64:	e310000f 	tst	r0, #15
40017d68:	0a00000b 	beq	40017d9c <CyU3PDmaMultiChannelCreate+0x158>
40017d6c:	e3a00040 	mov	r0, #64	; 0x40
40017d70:	eaffffba 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017d74:	e1d600b0 	ldrh	r0, [r6]
40017d78:	e1d611b8 	ldrh	r1, [r6, #24]
40017d7c:	e0400001 	sub	r0, r0, r1
40017d80:	e1d611ba 	ldrh	r1, [r6, #26]
40017d84:	e0400001 	sub	r0, r0, r1
40017d88:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017d8c:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017d90:	0a000001 	beq	40017d9c <CyU3PDmaMultiChannelCreate+0x158>
40017d94:	e3a00040 	mov	r0, #64	; 0x40
40017d98:	eaffffb0 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017d9c:	e5d6001e 	ldrb	r0, [r6, #30]
40017da0:	e3500002 	cmp	r0, #2
40017da4:	ba000001 	blt	40017db0 <CyU3PDmaMultiChannelCreate+0x16c>
40017da8:	e3a00040 	mov	r0, #64	; 0x40
40017dac:	eaffffab 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017db0:	e3550005 	cmp	r5, #5
40017db4:	0a000001 	beq	40017dc0 <CyU3PDmaMultiChannelCreate+0x17c>
40017db8:	e3550007 	cmp	r5, #7
40017dbc:	1a000065 	bne	40017f58 <CyU3PDmaMultiChannelCreate+0x314>
40017dc0:	e1d601b6 	ldrh	r0, [r6, #22]
40017dc4:	e3500000 	cmp	r0, #0
40017dc8:	0a000008 	beq	40017df0 <CyU3PDmaMultiChannelCreate+0x1ac>
40017dcc:	e1d601b6 	ldrh	r0, [r6, #22]
40017dd0:	e1d610b2 	ldrh	r1, [r6, #2]
40017dd4:	e1500001 	cmp	r0, r1
40017dd8:	aa000002 	bge	40017de8 <CyU3PDmaMultiChannelCreate+0x1a4>
40017ddc:	e1d600b2 	ldrh	r0, [r6, #2]
40017de0:	e350001f 	cmp	r0, #31
40017de4:	da000001 	ble	40017df0 <CyU3PDmaMultiChannelCreate+0x1ac>
40017de8:	e3a00040 	mov	r0, #64	; 0x40
40017dec:	eaffff9b 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017df0:	e3a09000 	mov	r9, #0
40017df4:	ea00002b 	b	40017ea8 <CyU3PDmaMultiChannelCreate+0x264>
40017df8:	e2860006 	add	r0, r6, #6
40017dfc:	e0800089 	add	r0, r0, r9, lsl #1
40017e00:	e1d000b0 	ldrh	r0, [r0]
40017e04:	e3a0103f 	mov	r1, #63	; 0x3f
40017e08:	e0018440 	and	r8, r1, r0, asr #8
40017e0c:	e2860006 	add	r0, r6, #6
40017e10:	e0800089 	add	r0, r0, r9, lsl #1
40017e14:	e1d000b0 	ldrh	r0, [r0]
40017e18:	e20070ff 	and	r7, r0, #255	; 0xff
40017e1c:	e2861006 	add	r1, r6, #6
40017e20:	e0811089 	add	r1, r1, r9, lsl #1
40017e24:	e1d100b0 	ldrh	r0, [r1]
40017e28:	ebfff3c4 	bl	40014d40 <CyU3PDmaSocketIsValidProducer>
40017e2c:	e3500000 	cmp	r0, #0
40017e30:	1a000001 	bne	40017e3c <CyU3PDmaMultiChannelCreate+0x1f8>
40017e34:	e3a00040 	mov	r0, #64	; 0x40
40017e38:	eaffff88 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017e3c:	e59f0538 	ldr	r0, [pc, #1336]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40017e40:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e44:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017e48:	e3500000 	cmp	r0, #0
40017e4c:	0a000001 	beq	40017e58 <CyU3PDmaMultiChannelCreate+0x214>
40017e50:	e3a00040 	mov	r0, #64	; 0x40
40017e54:	eaffff81 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017e58:	e2890001 	add	r0, r9, #1
40017e5c:	e200a0ff 	and	sl, r0, #255	; 0xff
40017e60:	ea00000b 	b	40017e94 <CyU3PDmaMultiChannelCreate+0x250>
40017e64:	e2860006 	add	r0, r6, #6
40017e68:	e0800089 	add	r0, r0, r9, lsl #1
40017e6c:	e1d000b0 	ldrh	r0, [r0]
40017e70:	e2861006 	add	r1, r6, #6
40017e74:	e081108a 	add	r1, r1, sl, lsl #1
40017e78:	e1d110b0 	ldrh	r1, [r1]
40017e7c:	e1500001 	cmp	r0, r1
40017e80:	1a000001 	bne	40017e8c <CyU3PDmaMultiChannelCreate+0x248>
40017e84:	e3a00040 	mov	r0, #64	; 0x40
40017e88:	eaffff74 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017e8c:	e28a0001 	add	r0, sl, #1
40017e90:	e200a0ff 	and	sl, r0, #255	; 0xff
40017e94:	e1d600b4 	ldrh	r0, [r6, #4]
40017e98:	e150000a 	cmp	r0, sl
40017e9c:	cafffff0 	bgt	40017e64 <CyU3PDmaMultiChannelCreate+0x220>
40017ea0:	e2890001 	add	r0, r9, #1
40017ea4:	e20090ff 	and	r9, r0, #255	; 0xff
40017ea8:	e1d600b4 	ldrh	r0, [r6, #4]
40017eac:	e1500009 	cmp	r0, r9
40017eb0:	caffffd0 	bgt	40017df8 <CyU3PDmaMultiChannelCreate+0x1b4>
40017eb4:	e1d600be 	ldrh	r0, [r6, #14]
40017eb8:	e3a0103f 	mov	r1, #63	; 0x3f
40017ebc:	e0018440 	and	r8, r1, r0, asr #8
40017ec0:	e1d600be 	ldrh	r0, [r6, #14]
40017ec4:	e20070ff 	and	r7, r0, #255	; 0xff
40017ec8:	e1d600be 	ldrh	r0, [r6, #14]
40017ecc:	ebfff363 	bl	40014c60 <CyU3PDmaSocketIsValidConsumer>
40017ed0:	e3500000 	cmp	r0, #0
40017ed4:	1a000001 	bne	40017ee0 <CyU3PDmaMultiChannelCreate+0x29c>
40017ed8:	e3a00040 	mov	r0, #64	; 0x40
40017edc:	eaffff5f 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017ee0:	e59f0494 	ldr	r0, [pc, #1172]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40017ee4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017ee8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017eec:	e3500000 	cmp	r0, #0
40017ef0:	0a000001 	beq	40017efc <CyU3PDmaMultiChannelCreate+0x2b8>
40017ef4:	e3a00040 	mov	r0, #64	; 0x40
40017ef8:	eaffff58 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017efc:	e59f0478 	ldr	r0, [pc, #1144]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40017f00:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f04:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f08:	e3a09000 	mov	r9, #0
40017f0c:	ea00000d 	b	40017f48 <CyU3PDmaMultiChannelCreate+0x304>
40017f10:	e2860006 	add	r0, r6, #6
40017f14:	e0800089 	add	r0, r0, r9, lsl #1
40017f18:	e1d000b0 	ldrh	r0, [r0]
40017f1c:	e3a0103f 	mov	r1, #63	; 0x3f
40017f20:	e0018440 	and	r8, r1, r0, asr #8
40017f24:	e2860006 	add	r0, r6, #6
40017f28:	e0800089 	add	r0, r0, r9, lsl #1
40017f2c:	e1d000b0 	ldrh	r0, [r0]
40017f30:	e20070ff 	and	r7, r0, #255	; 0xff
40017f34:	e59f0440 	ldr	r0, [pc, #1088]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40017f38:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f3c:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f40:	e2890001 	add	r0, r9, #1
40017f44:	e20090ff 	and	r9, r0, #255	; 0xff
40017f48:	e1d600b4 	ldrh	r0, [r6, #4]
40017f4c:	e1500009 	cmp	r0, r9
40017f50:	caffffee 	bgt	40017f10 <CyU3PDmaMultiChannelCreate+0x2cc>
40017f54:	ea00005d 	b	400180d0 <CyU3PDmaMultiChannelCreate+0x48c>
40017f58:	e1d601b6 	ldrh	r0, [r6, #22]
40017f5c:	e3500000 	cmp	r0, #0
40017f60:	0a000001 	beq	40017f6c <CyU3PDmaMultiChannelCreate+0x328>
40017f64:	e3a00040 	mov	r0, #64	; 0x40
40017f68:	eaffff3c 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017f6c:	e3a09000 	mov	r9, #0
40017f70:	ea00002b 	b	40018024 <CyU3PDmaMultiChannelCreate+0x3e0>
40017f74:	e286000e 	add	r0, r6, #14
40017f78:	e0800089 	add	r0, r0, r9, lsl #1
40017f7c:	e1d000b0 	ldrh	r0, [r0]
40017f80:	e3a0103f 	mov	r1, #63	; 0x3f
40017f84:	e0018440 	and	r8, r1, r0, asr #8
40017f88:	e286000e 	add	r0, r6, #14
40017f8c:	e0800089 	add	r0, r0, r9, lsl #1
40017f90:	e1d000b0 	ldrh	r0, [r0]
40017f94:	e20070ff 	and	r7, r0, #255	; 0xff
40017f98:	e286100e 	add	r1, r6, #14
40017f9c:	e0811089 	add	r1, r1, r9, lsl #1
40017fa0:	e1d100b0 	ldrh	r0, [r1]
40017fa4:	ebfff32d 	bl	40014c60 <CyU3PDmaSocketIsValidConsumer>
40017fa8:	e3500000 	cmp	r0, #0
40017fac:	1a000001 	bne	40017fb8 <CyU3PDmaMultiChannelCreate+0x374>
40017fb0:	e3a00040 	mov	r0, #64	; 0x40
40017fb4:	eaffff29 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017fb8:	e59f03bc 	ldr	r0, [pc, #956]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40017fbc:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017fc0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017fc4:	e3500000 	cmp	r0, #0
40017fc8:	0a000001 	beq	40017fd4 <CyU3PDmaMultiChannelCreate+0x390>
40017fcc:	e3a00040 	mov	r0, #64	; 0x40
40017fd0:	eaffff22 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40017fd4:	e2890001 	add	r0, r9, #1
40017fd8:	e200a0ff 	and	sl, r0, #255	; 0xff
40017fdc:	ea00000b 	b	40018010 <CyU3PDmaMultiChannelCreate+0x3cc>
40017fe0:	e286000e 	add	r0, r6, #14
40017fe4:	e0800089 	add	r0, r0, r9, lsl #1
40017fe8:	e1d000b0 	ldrh	r0, [r0]
40017fec:	e286100e 	add	r1, r6, #14
40017ff0:	e081108a 	add	r1, r1, sl, lsl #1
40017ff4:	e1d110b0 	ldrh	r1, [r1]
40017ff8:	e1500001 	cmp	r0, r1
40017ffc:	1a000001 	bne	40018008 <CyU3PDmaMultiChannelCreate+0x3c4>
40018000:	e3a00040 	mov	r0, #64	; 0x40
40018004:	eaffff15 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40018008:	e28a0001 	add	r0, sl, #1
4001800c:	e200a0ff 	and	sl, r0, #255	; 0xff
40018010:	e1d600b4 	ldrh	r0, [r6, #4]
40018014:	e150000a 	cmp	r0, sl
40018018:	cafffff0 	bgt	40017fe0 <CyU3PDmaMultiChannelCreate+0x39c>
4001801c:	e2890001 	add	r0, r9, #1
40018020:	e20090ff 	and	r9, r0, #255	; 0xff
40018024:	e1d600b4 	ldrh	r0, [r6, #4]
40018028:	e1500009 	cmp	r0, r9
4001802c:	caffffd0 	bgt	40017f74 <CyU3PDmaMultiChannelCreate+0x330>
40018030:	e1d600b6 	ldrh	r0, [r6, #6]
40018034:	e3a0103f 	mov	r1, #63	; 0x3f
40018038:	e0018440 	and	r8, r1, r0, asr #8
4001803c:	e1d600b6 	ldrh	r0, [r6, #6]
40018040:	e20070ff 	and	r7, r0, #255	; 0xff
40018044:	e1d600b6 	ldrh	r0, [r6, #6]
40018048:	ebfff33c 	bl	40014d40 <CyU3PDmaSocketIsValidProducer>
4001804c:	e3500000 	cmp	r0, #0
40018050:	1a000001 	bne	4001805c <CyU3PDmaMultiChannelCreate+0x418>
40018054:	e3a00040 	mov	r0, #64	; 0x40
40018058:	eaffff00 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
4001805c:	e59f0318 	ldr	r0, [pc, #792]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40018060:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018064:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018068:	e3500000 	cmp	r0, #0
4001806c:	0a000001 	beq	40018078 <CyU3PDmaMultiChannelCreate+0x434>
40018070:	e3a00040 	mov	r0, #64	; 0x40
40018074:	eafffef9 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40018078:	e59f02fc 	ldr	r0, [pc, #764]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
4001807c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018080:	e7804107 	str	r4, [r0, r7, lsl #2]
40018084:	e3a09000 	mov	r9, #0
40018088:	ea00000d 	b	400180c4 <CyU3PDmaMultiChannelCreate+0x480>
4001808c:	e286000e 	add	r0, r6, #14
40018090:	e0800089 	add	r0, r0, r9, lsl #1
40018094:	e1d000b0 	ldrh	r0, [r0]
40018098:	e3a0103f 	mov	r1, #63	; 0x3f
4001809c:	e0018440 	and	r8, r1, r0, asr #8
400180a0:	e286000e 	add	r0, r6, #14
400180a4:	e0800089 	add	r0, r0, r9, lsl #1
400180a8:	e1d000b0 	ldrh	r0, [r0]
400180ac:	e20070ff 	and	r7, r0, #255	; 0xff
400180b0:	e59f02c4 	ldr	r0, [pc, #708]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
400180b4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400180b8:	e7804107 	str	r4, [r0, r7, lsl #2]
400180bc:	e2890001 	add	r0, r9, #1
400180c0:	e20090ff 	and	r9, r0, #255	; 0xff
400180c4:	e1d600b4 	ldrh	r0, [r6, #4]
400180c8:	e1500009 	cmp	r0, r9
400180cc:	caffffee 	bgt	4001808c <CyU3PDmaMultiChannelCreate+0x448>
400180d0:	e1c450b4 	strh	r5, [r4, #4]
400180d4:	e1d600b0 	ldrh	r0, [r6]
400180d8:	e1c400b6 	strh	r0, [r4, #6]
400180dc:	e1d600b2 	ldrh	r0, [r6, #2]
400180e0:	e1c400b8 	strh	r0, [r4, #8]
400180e4:	e1d601b6 	ldrh	r0, [r6, #22]
400180e8:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
400180ec:	e1d600b4 	ldrh	r0, [r6, #4]
400180f0:	e1c400ba 	strh	r0, [r4, #10]
400180f4:	e3a09000 	mov	r9, #0
400180f8:	ea000014 	b	40018150 <CyU3PDmaMultiChannelCreate+0x50c>
400180fc:	e2860006 	add	r0, r6, #6
40018100:	e0800089 	add	r0, r0, r9, lsl #1
40018104:	e1d000b0 	ldrh	r0, [r0]
40018108:	e2841024 	add	r1, r4, #36	; 0x24
4001810c:	e0811089 	add	r1, r1, r9, lsl #1
40018110:	e1c100b0 	strh	r0, [r1]
40018114:	e286000e 	add	r0, r6, #14
40018118:	e0800089 	add	r0, r0, r9, lsl #1
4001811c:	e1d000b0 	ldrh	r0, [r0]
40018120:	e284102c 	add	r1, r4, #44	; 0x2c
40018124:	e0811089 	add	r1, r1, r9, lsl #1
40018128:	e1c100b0 	strh	r0, [r1]
4001812c:	e3a00000 	mov	r0, #0
40018130:	e284105c 	add	r1, r4, #92	; 0x5c
40018134:	e0811089 	add	r1, r1, r9, lsl #1
40018138:	e1c100b0 	strh	r0, [r1]
4001813c:	e2841064 	add	r1, r4, #100	; 0x64
40018140:	e0811089 	add	r1, r1, r9, lsl #1
40018144:	e1c100b0 	strh	r0, [r1]
40018148:	e2890001 	add	r0, r9, #1
4001814c:	e20090ff 	and	r9, r0, #255	; 0xff
40018150:	e3590004 	cmp	r9, #4
40018154:	baffffe8 	blt	400180fc <CyU3PDmaMultiChannelCreate+0x4b8>
40018158:	e1d601b8 	ldrh	r0, [r6, #24]
4001815c:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
40018160:	e1d601ba 	ldrh	r0, [r6, #26]
40018164:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
40018168:	e1d601bc 	ldrh	r0, [r6, #28]
4001816c:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
40018170:	e5d6001e 	ldrb	r0, [r6, #30]
40018174:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
40018178:	e5960020 	ldr	r0, [r6, #32]
4001817c:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018180:	e3a03038 	mov	r3, #56	; 0x38
40018184:	e3a02000 	mov	r2, #0
40018188:	e1a01002 	mov	r1, r2
4001818c:	e2840078 	add	r0, r4, #120	; 0x78
40018190:	ebffc74a 	bl	40009ec0 <_txe_mutex_create>
40018194:	e3a02028 	mov	r2, #40	; 0x28
40018198:	e3a01000 	mov	r1, #0
4001819c:	e28400b0 	add	r0, r4, #176	; 0xb0
400181a0:	ebffc68c 	bl	40009bd8 <_txe_event_flags_create>
400181a4:	e5960024 	ldr	r0, [r6, #36]	; 0x24
400181a8:	e58400d8 	str	r0, [r4, #216]	; 0xd8
400181ac:	e59f01cc 	ldr	r0, [pc, #460]	; 40018380 <CyU3PDmaMultiChannelCreate+0x73c>
400181b0:	e5900000 	ldr	r0, [r0]
400181b4:	e5840074 	str	r0, [r4, #116]	; 0x74
400181b8:	e2450005 	sub	r0, r5, #5
400181bc:	e3500005 	cmp	r0, #5
400181c0:	308ff100 	addcc	pc, pc, r0, lsl #2
400181c4:	ea00001d 	b	40018240 <CyU3PDmaMultiChannelCreate+0x5fc>
400181c8:	ea000003 	b	400181dc <CyU3PDmaMultiChannelCreate+0x598>
400181cc:	ea000008 	b	400181f4 <CyU3PDmaMultiChannelCreate+0x5b0>
400181d0:	ea000003 	b	400181e4 <CyU3PDmaMultiChannelCreate+0x5a0>
400181d4:	ea000008 	b	400181fc <CyU3PDmaMultiChannelCreate+0x5b8>
400181d8:	ea00000b 	b	4001820c <CyU3PDmaMultiChannelCreate+0x5c8>
400181dc:	e1a00000 	nop			; (mov r0, r0)
400181e0:	e1a00000 	nop			; (mov r0, r0)
400181e4:	e1a00004 	mov	r0, r4
400181e8:	ebfffd1c 	bl	40017660 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
400181ec:	e1a0b000 	mov	fp, r0
400181f0:	ea000015 	b	4001824c <CyU3PDmaMultiChannelCreate+0x608>
400181f4:	e1a00000 	nop			; (mov r0, r0)
400181f8:	e1a00000 	nop			; (mov r0, r0)
400181fc:	e1a00004 	mov	r0, r4
40018200:	ebfffdd1 	bl	4001794c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018204:	e1a0b000 	mov	fp, r0
40018208:	ea00000f 	b	4001824c <CyU3PDmaMultiChannelCreate+0x608>
4001820c:	e1a00000 	nop			; (mov r0, r0)
40018210:	e59f016c 	ldr	r0, [pc, #364]	; 40018384 <CyU3PDmaMultiChannelCreate+0x740>
40018214:	e5900000 	ldr	r0, [r0]
40018218:	e3500000 	cmp	r0, #0
4001821c:	1a000001 	bne	40018228 <CyU3PDmaMultiChannelCreate+0x5e4>
40018220:	e3a0b047 	mov	fp, #71	; 0x47
40018224:	ea000004 	b	4001823c <CyU3PDmaMultiChannelCreate+0x5f8>
40018228:	e1a00004 	mov	r0, r4
4001822c:	e59f1150 	ldr	r1, [pc, #336]	; 40018384 <CyU3PDmaMultiChannelCreate+0x740>
40018230:	e5911000 	ldr	r1, [r1]
40018234:	e12fff31 	blx	r1
40018238:	e1a0b000 	mov	fp, r0
4001823c:	ea000002 	b	4001824c <CyU3PDmaMultiChannelCreate+0x608>
40018240:	e1a00000 	nop			; (mov r0, r0)
40018244:	e3a0b040 	mov	fp, #64	; 0x40
40018248:	e1a00000 	nop			; (mov r0, r0)
4001824c:	e1a00000 	nop			; (mov r0, r0)
40018250:	e35b0000 	cmp	fp, #0
40018254:	1a000002 	bne	40018264 <CyU3PDmaMultiChannelCreate+0x620>
40018258:	e3a00001 	mov	r0, #1
4001825c:	e5840000 	str	r0, [r4]
40018260:	ea000042 	b	40018370 <CyU3PDmaMultiChannelCreate+0x72c>
40018264:	e2840078 	add	r0, r4, #120	; 0x78
40018268:	ebffc772 	bl	4000a038 <_txe_mutex_delete>
4001826c:	e28400b0 	add	r0, r4, #176	; 0xb0
40018270:	ebffc6a8 	bl	40009d18 <_txe_event_flags_delete>
40018274:	e3550005 	cmp	r5, #5
40018278:	0a000001 	beq	40018284 <CyU3PDmaMultiChannelCreate+0x640>
4001827c:	e3550007 	cmp	r5, #7
40018280:	1a00001d 	bne	400182fc <CyU3PDmaMultiChannelCreate+0x6b8>
40018284:	e1d600be 	ldrh	r0, [r6, #14]
40018288:	e3a0103f 	mov	r1, #63	; 0x3f
4001828c:	e0018440 	and	r8, r1, r0, asr #8
40018290:	e1d600be 	ldrh	r0, [r6, #14]
40018294:	e20070ff 	and	r7, r0, #255	; 0xff
40018298:	e3a00000 	mov	r0, #0
4001829c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
400182a0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400182a4:	e7810107 	str	r0, [r1, r7, lsl #2]
400182a8:	e3a09000 	mov	r9, #0
400182ac:	ea00000e 	b	400182ec <CyU3PDmaMultiChannelCreate+0x6a8>
400182b0:	e2860006 	add	r0, r6, #6
400182b4:	e0800089 	add	r0, r0, r9, lsl #1
400182b8:	e1d000b0 	ldrh	r0, [r0]
400182bc:	e3a0103f 	mov	r1, #63	; 0x3f
400182c0:	e0018440 	and	r8, r1, r0, asr #8
400182c4:	e2860006 	add	r0, r6, #6
400182c8:	e0800089 	add	r0, r0, r9, lsl #1
400182cc:	e1d000b0 	ldrh	r0, [r0]
400182d0:	e20070ff 	and	r7, r0, #255	; 0xff
400182d4:	e3a00000 	mov	r0, #0
400182d8:	e59f109c 	ldr	r1, [pc, #156]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
400182dc:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400182e0:	e7810107 	str	r0, [r1, r7, lsl #2]
400182e4:	e2890001 	add	r0, r9, #1
400182e8:	e20090ff 	and	r9, r0, #255	; 0xff
400182ec:	e1d600b4 	ldrh	r0, [r6, #4]
400182f0:	e1500009 	cmp	r0, r9
400182f4:	caffffed 	bgt	400182b0 <CyU3PDmaMultiChannelCreate+0x66c>
400182f8:	ea00001c 	b	40018370 <CyU3PDmaMultiChannelCreate+0x72c>
400182fc:	e1d600b6 	ldrh	r0, [r6, #6]
40018300:	e3a0103f 	mov	r1, #63	; 0x3f
40018304:	e0018440 	and	r8, r1, r0, asr #8
40018308:	e1d600b6 	ldrh	r0, [r6, #6]
4001830c:	e20070ff 	and	r7, r0, #255	; 0xff
40018310:	e3a00000 	mov	r0, #0
40018314:	e59f1060 	ldr	r1, [pc, #96]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40018318:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001831c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018320:	e3a09000 	mov	r9, #0
40018324:	ea00000e 	b	40018364 <CyU3PDmaMultiChannelCreate+0x720>
40018328:	e286000e 	add	r0, r6, #14
4001832c:	e0800089 	add	r0, r0, r9, lsl #1
40018330:	e1d000b0 	ldrh	r0, [r0]
40018334:	e3a0103f 	mov	r1, #63	; 0x3f
40018338:	e0018440 	and	r8, r1, r0, asr #8
4001833c:	e286000e 	add	r0, r6, #14
40018340:	e0800089 	add	r0, r0, r9, lsl #1
40018344:	e1d000b0 	ldrh	r0, [r0]
40018348:	e20070ff 	and	r7, r0, #255	; 0xff
4001834c:	e3a00000 	mov	r0, #0
40018350:	e59f1024 	ldr	r1, [pc, #36]	; 4001837c <CyU3PDmaMultiChannelCreate+0x738>
40018354:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018358:	e7810107 	str	r0, [r1, r7, lsl #2]
4001835c:	e2890001 	add	r0, r9, #1
40018360:	e20090ff 	and	r9, r0, #255	; 0xff
40018364:	e1d600b4 	ldrh	r0, [r6, #4]
40018368:	e1500009 	cmp	r0, r9
4001836c:	caffffed 	bgt	40018328 <CyU3PDmaMultiChannelCreate+0x6e4>
40018370:	e1a0000b 	mov	r0, fp
40018374:	eafffe39 	b	40017c60 <CyU3PDmaMultiChannelCreate+0x1c>
40018378:	0000fff0 	.word	0x0000fff0
4001837c:	40030d1c 	.word	0x40030d1c
40018380:	40030c80 	.word	0x40030c80
40018384:	40030d08 	.word	0x40030d08

Disassembly of section i.CyU3PDmaMultiChannelReset:

40018388 <CyU3PDmaMultiChannelReset>:
40018388:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001838c:	e1a04000 	mov	r4, r0
40018390:	e3e01000 	mvn	r1, #0
40018394:	e1a00004 	mov	r0, r4
40018398:	ebfffbab 	bl	4001724c <CyU3PDmaMultiChannelAcquireLock>
4001839c:	e1a06000 	mov	r6, r0
400183a0:	e3560000 	cmp	r6, #0
400183a4:	0a000001 	beq	400183b0 <CyU3PDmaMultiChannelReset+0x28>
400183a8:	e1a00006 	mov	r0, r6
400183ac:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400183b0:	e1d400b4 	ldrh	r0, [r4, #4]
400183b4:	e2400005 	sub	r0, r0, #5
400183b8:	e3500005 	cmp	r0, #5
400183bc:	308ff100 	addcc	pc, pc, r0, lsl #2
400183c0:	ea00001a 	b	40018430 <CyU3PDmaMultiChannelReset+0xa8>
400183c4:	ea000003 	b	400183d8 <CyU3PDmaMultiChannelReset+0x50>
400183c8:	ea000007 	b	400183ec <CyU3PDmaMultiChannelReset+0x64>
400183cc:	ea000003 	b	400183e0 <CyU3PDmaMultiChannelReset+0x58>
400183d0:	ea000007 	b	400183f4 <CyU3PDmaMultiChannelReset+0x6c>
400183d4:	ea000009 	b	40018400 <CyU3PDmaMultiChannelReset+0x78>
400183d8:	e1a00000 	nop			; (mov r0, r0)
400183dc:	e1a00000 	nop			; (mov r0, r0)
400183e0:	e1a00004 	mov	r0, r4
400183e4:	eb00003c 	bl	400184dc <CyU3PDmaMultiChannelReset_TypeManyToOne>
400183e8:	ea000012 	b	40018438 <CyU3PDmaMultiChannelReset+0xb0>
400183ec:	e1a00000 	nop			; (mov r0, r0)
400183f0:	e1a00000 	nop			; (mov r0, r0)
400183f4:	e1a00004 	mov	r0, r4
400183f8:	eb000083 	bl	4001860c <CyU3PDmaMultiChannelReset_TypeOneToMany>
400183fc:	ea00000d 	b	40018438 <CyU3PDmaMultiChannelReset+0xb0>
40018400:	e1a00000 	nop			; (mov r0, r0)
40018404:	e59f00cc 	ldr	r0, [pc, #204]	; 400184d8 <CyU3PDmaMultiChannelReset+0x150>
40018408:	e5900000 	ldr	r0, [r0]
4001840c:	e3500000 	cmp	r0, #0
40018410:	1a000001 	bne	4001841c <CyU3PDmaMultiChannelReset+0x94>
40018414:	e3a00047 	mov	r0, #71	; 0x47
40018418:	eaffffe3 	b	400183ac <CyU3PDmaMultiChannelReset+0x24>
4001841c:	e1a00004 	mov	r0, r4
40018420:	e59f10b0 	ldr	r1, [pc, #176]	; 400184d8 <CyU3PDmaMultiChannelReset+0x150>
40018424:	e5911000 	ldr	r1, [r1]
40018428:	e12fff31 	blx	r1
4001842c:	ea000001 	b	40018438 <CyU3PDmaMultiChannelReset+0xb0>
40018430:	e1a00000 	nop			; (mov r0, r0)
40018434:	e1a00000 	nop			; (mov r0, r0)
40018438:	e1a00000 	nop			; (mov r0, r0)
4001843c:	ebffc108 	bl	40008864 <_tx_thread_identify>
40018440:	e1a05000 	mov	r5, r0
40018444:	e3550000 	cmp	r5, #0
40018448:	0a000003 	beq	4001845c <CyU3PDmaMultiChannelReset+0xd4>
4001844c:	e1a0200d 	mov	r2, sp
40018450:	e3a01002 	mov	r1, #2
40018454:	e1a00005 	mov	r0, r5
40018458:	ebffc90f 	bl	4000a89c <_txe_thread_priority_change>
4001845c:	e3a02002 	mov	r2, #2
40018460:	e3e01047 	mvn	r1, #71	; 0x47
40018464:	e28400b0 	add	r0, r4, #176	; 0xb0
40018468:	ebffc67a 	bl	40009e58 <_txe_event_flags_set>
4001846c:	e3a02000 	mov	r2, #0
40018470:	e3a01020 	mov	r1, #32
40018474:	e28400b0 	add	r0, r4, #176	; 0xb0
40018478:	ebffc676 	bl	40009e58 <_txe_event_flags_set>
4001847c:	e3a00001 	mov	r0, #1
40018480:	e5840000 	str	r0, [r4]
40018484:	e2840078 	add	r0, r4, #120	; 0x78
40018488:	ebffc73f 	bl	4000a18c <_txe_mutex_put>
4001848c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40018490:	e3500000 	cmp	r0, #0
40018494:	0a000007 	beq	400184b8 <CyU3PDmaMultiChannelReset+0x130>
40018498:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001849c:	e3100020 	tst	r0, #32
400184a0:	0a000004 	beq	400184b8 <CyU3PDmaMultiChannelReset+0x130>
400184a4:	e3a02000 	mov	r2, #0
400184a8:	e3a01020 	mov	r1, #32
400184ac:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
400184b0:	e1a00004 	mov	r0, r4
400184b4:	e12fff33 	blx	r3
400184b8:	e3550000 	cmp	r5, #0
400184bc:	0a000003 	beq	400184d0 <CyU3PDmaMultiChannelReset+0x148>
400184c0:	e1a0200d 	mov	r2, sp
400184c4:	e1a00005 	mov	r0, r5
400184c8:	e59d1000 	ldr	r1, [sp]
400184cc:	ebffc8f2 	bl	4000a89c <_txe_thread_priority_change>
400184d0:	e3a00000 	mov	r0, #0
400184d4:	eaffffb4 	b	400183ac <CyU3PDmaMultiChannelReset+0x24>
400184d8:	40030d10 	.word	0x40030d10

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

400184dc <CyU3PDmaMultiChannelReset_TypeManyToOne>:
400184dc:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400184e0:	e1a04000 	mov	r4, r0
400184e4:	e1a00004 	mov	r0, r4
400184e8:	eb000215 	bl	40018d44 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
400184ec:	e1d451bc 	ldrh	r5, [r4, #28]
400184f0:	e1d400b8 	ldrh	r0, [r4, #8]
400184f4:	e1d410ba 	ldrh	r1, [r4, #10]
400184f8:	e0000091 	mul	r0, r1, r0
400184fc:	e1a06800 	lsl	r6, r0, #16
40018500:	e1a06826 	lsr	r6, r6, #16
40018504:	ea00000c 	b	4001853c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018508:	e1a0100d 	mov	r1, sp
4001850c:	e1a00005 	mov	r0, r5
40018510:	eb002808 	bl	40022538 <CyU3PDmaDscrGetConfig>
40018514:	e59d000c 	ldr	r0, [sp, #12]
40018518:	e59f10e4 	ldr	r1, [pc, #228]	; 40018604 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
4001851c:	e0000001 	and	r0, r0, r1
40018520:	e58d000c 	str	r0, [sp, #12]
40018524:	e1a0100d 	mov	r1, sp
40018528:	e1a00005 	mov	r0, r5
4001852c:	eb00281c 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40018530:	e59d0008 	ldr	r0, [sp, #8]
40018534:	e1a05800 	lsl	r5, r0, #16
40018538:	e1a05825 	lsr	r5, r5, #16
4001853c:	e1b00006 	movs	r0, r6
40018540:	e2461001 	sub	r1, r6, #1
40018544:	e1a06801 	lsl	r6, r1, #16
40018548:	e1a06826 	lsr	r6, r6, #16
4001854c:	1affffed 	bne	40018508 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
40018550:	e1d400b4 	ldrh	r0, [r4, #4]
40018554:	e3500007 	cmp	r0, #7
40018558:	1a000021 	bne	400185e4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
4001855c:	e3a07000 	mov	r7, #0
40018560:	ea00001c 	b	400185d8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
40018564:	e2840014 	add	r0, r4, #20
40018568:	e0800087 	add	r0, r0, r7, lsl #1
4001856c:	e1d000b0 	ldrh	r0, [r0]
40018570:	e284103e 	add	r1, r4, #62	; 0x3e
40018574:	e0811087 	add	r1, r1, r7, lsl #1
40018578:	e1c100b0 	strh	r0, [r1]
4001857c:	e1a05000 	mov	r5, r0
40018580:	e3a06000 	mov	r6, #0
40018584:	ea00000e 	b	400185c4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
40018588:	e1a0100d 	mov	r1, sp
4001858c:	e1a00005 	mov	r0, r5
40018590:	eb0027e8 	bl	40022538 <CyU3PDmaDscrGetConfig>
40018594:	e59d000c 	ldr	r0, [sp, #12]
40018598:	e59f1064 	ldr	r1, [pc, #100]	; 40018604 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
4001859c:	e0000001 	and	r0, r0, r1
400185a0:	e58d000c 	str	r0, [sp, #12]
400185a4:	e1a0100d 	mov	r1, sp
400185a8:	e1a00005 	mov	r0, r5
400185ac:	eb0027fc 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400185b0:	e59d0008 	ldr	r0, [sp, #8]
400185b4:	e59f104c 	ldr	r1, [pc, #76]	; 40018608 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
400185b8:	e0015820 	and	r5, r1, r0, lsr #16
400185bc:	e2860001 	add	r0, r6, #1
400185c0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400185c4:	e1d400b8 	ldrh	r0, [r4, #8]
400185c8:	e1500006 	cmp	r0, r6
400185cc:	caffffed 	bgt	40018588 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
400185d0:	e2870001 	add	r0, r7, #1
400185d4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400185d8:	e1d400ba 	ldrh	r0, [r4, #10]
400185dc:	e1500007 	cmp	r0, r7
400185e0:	caffffdf 	bgt	40018564 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
400185e4:	e1d401b4 	ldrh	r0, [r4, #20]
400185e8:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400185ec:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400185f0:	e1d401bc 	ldrh	r0, [r4, #28]
400185f4:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
400185f8:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
400185fc:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018600:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018604:	0000fff0 	.word	0x0000fff0
40018608:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

4001860c <CyU3PDmaMultiChannelReset_TypeOneToMany>:
4001860c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018610:	e1a04000 	mov	r4, r0
40018614:	e1a00004 	mov	r0, r4
40018618:	eb000229 	bl	40018ec4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
4001861c:	e1d451b4 	ldrh	r5, [r4, #20]
40018620:	e1d400b8 	ldrh	r0, [r4, #8]
40018624:	e1d410ba 	ldrh	r1, [r4, #10]
40018628:	e0000091 	mul	r0, r1, r0
4001862c:	e1a06800 	lsl	r6, r0, #16
40018630:	e1a06826 	lsr	r6, r6, #16
40018634:	ea00000c 	b	4001866c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
40018638:	e1a0100d 	mov	r1, sp
4001863c:	e1a00005 	mov	r0, r5
40018640:	eb0027bc 	bl	40022538 <CyU3PDmaDscrGetConfig>
40018644:	e59d000c 	ldr	r0, [sp, #12]
40018648:	e59f10e4 	ldr	r1, [pc, #228]	; 40018734 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
4001864c:	e0000001 	and	r0, r0, r1
40018650:	e58d000c 	str	r0, [sp, #12]
40018654:	e1a0100d 	mov	r1, sp
40018658:	e1a00005 	mov	r0, r5
4001865c:	eb0027d0 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40018660:	e59d0008 	ldr	r0, [sp, #8]
40018664:	e59f10cc 	ldr	r1, [pc, #204]	; 40018738 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
40018668:	e0015820 	and	r5, r1, r0, lsr #16
4001866c:	e1b00006 	movs	r0, r6
40018670:	e2461001 	sub	r1, r6, #1
40018674:	e1a06801 	lsl	r6, r1, #16
40018678:	e1a06826 	lsr	r6, r6, #16
4001867c:	1affffed 	bne	40018638 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018680:	e1d400b4 	ldrh	r0, [r4, #4]
40018684:	e3500008 	cmp	r0, #8
40018688:	1a000021 	bne	40018714 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
4001868c:	e3a07000 	mov	r7, #0
40018690:	ea00001c 	b	40018708 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018694:	e284001c 	add	r0, r4, #28
40018698:	e0800087 	add	r0, r0, r7, lsl #1
4001869c:	e1d000b0 	ldrh	r0, [r0]
400186a0:	e2841046 	add	r1, r4, #70	; 0x46
400186a4:	e0811087 	add	r1, r1, r7, lsl #1
400186a8:	e1c100b0 	strh	r0, [r1]
400186ac:	e1a05000 	mov	r5, r0
400186b0:	e3a06000 	mov	r6, #0
400186b4:	ea00000e 	b	400186f4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
400186b8:	e1a0100d 	mov	r1, sp
400186bc:	e1a00005 	mov	r0, r5
400186c0:	eb00279c 	bl	40022538 <CyU3PDmaDscrGetConfig>
400186c4:	e59d000c 	ldr	r0, [sp, #12]
400186c8:	e59f1064 	ldr	r1, [pc, #100]	; 40018734 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400186cc:	e0000001 	and	r0, r0, r1
400186d0:	e58d000c 	str	r0, [sp, #12]
400186d4:	e1a0100d 	mov	r1, sp
400186d8:	e1a00005 	mov	r0, r5
400186dc:	eb0027b0 	bl	400225a4 <CyU3PDmaDscrSetConfig>
400186e0:	e59d0008 	ldr	r0, [sp, #8]
400186e4:	e1a05800 	lsl	r5, r0, #16
400186e8:	e1a05825 	lsr	r5, r5, #16
400186ec:	e2860001 	add	r0, r6, #1
400186f0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400186f4:	e1d400b8 	ldrh	r0, [r4, #8]
400186f8:	e1500006 	cmp	r0, r6
400186fc:	caffffed 	bgt	400186b8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018700:	e2870001 	add	r0, r7, #1
40018704:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018708:	e1d400ba 	ldrh	r0, [r4, #10]
4001870c:	e1500007 	cmp	r0, r7
40018710:	caffffdf 	bgt	40018694 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018714:	e1d401b4 	ldrh	r0, [r4, #20]
40018718:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
4001871c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018720:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018724:	e1d401bc 	ldrh	r0, [r4, #28]
40018728:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001872c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018730:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018734:	0000fff0 	.word	0x0000fff0
40018738:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

4001873c <CyU3PDmaMultiChannelSetXfer>:
4001873c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018740:	e1a04000 	mov	r4, r0
40018744:	e1a05001 	mov	r5, r1
40018748:	e1a06002 	mov	r6, r2
4001874c:	e3e01000 	mvn	r1, #0
40018750:	e1a00004 	mov	r0, r4
40018754:	ebfffabc 	bl	4001724c <CyU3PDmaMultiChannelAcquireLock>
40018758:	e1a07000 	mov	r7, r0
4001875c:	e3570000 	cmp	r7, #0
40018760:	0a000001 	beq	4001876c <CyU3PDmaMultiChannelSetXfer+0x30>
40018764:	e1a00007 	mov	r0, r7
40018768:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001876c:	e5940000 	ldr	r0, [r4]
40018770:	e3500001 	cmp	r0, #1
40018774:	0a000000 	beq	4001877c <CyU3PDmaMultiChannelSetXfer+0x40>
40018778:	e3a07043 	mov	r7, #67	; 0x43
4001877c:	e1d400ba 	ldrh	r0, [r4, #10]
40018780:	e1500006 	cmp	r0, r6
40018784:	ca000000 	bgt	4001878c <CyU3PDmaMultiChannelSetXfer+0x50>
40018788:	e3a07040 	mov	r7, #64	; 0x40
4001878c:	e1d400b4 	ldrh	r0, [r4, #4]
40018790:	e3500009 	cmp	r0, #9
40018794:	1a000002 	bne	400187a4 <CyU3PDmaMultiChannelSetXfer+0x68>
40018798:	e3560000 	cmp	r6, #0
4001879c:	0a000000 	beq	400187a4 <CyU3PDmaMultiChannelSetXfer+0x68>
400187a0:	e3a07040 	mov	r7, #64	; 0x40
400187a4:	e3570000 	cmp	r7, #0
400187a8:	1a00002d 	bne	40018864 <CyU3PDmaMultiChannelSetXfer+0x128>
400187ac:	e3a02002 	mov	r2, #2
400187b0:	e3e01027 	mvn	r1, #39	; 0x27
400187b4:	e28400b0 	add	r0, r4, #176	; 0xb0
400187b8:	ebffc5a6 	bl	40009e58 <_txe_event_flags_set>
400187bc:	e5845070 	str	r5, [r4, #112]	; 0x70
400187c0:	e1d400b4 	ldrh	r0, [r4, #4]
400187c4:	e2400005 	sub	r0, r0, #5
400187c8:	e3500005 	cmp	r0, #5
400187cc:	308ff100 	addcc	pc, pc, r0, lsl #2
400187d0:	ea000020 	b	40018858 <CyU3PDmaMultiChannelSetXfer+0x11c>
400187d4:	ea000003 	b	400187e8 <CyU3PDmaMultiChannelSetXfer+0xac>
400187d8:	ea000009 	b	40018804 <CyU3PDmaMultiChannelSetXfer+0xc8>
400187dc:	ea000003 	b	400187f0 <CyU3PDmaMultiChannelSetXfer+0xb4>
400187e0:	ea000009 	b	4001880c <CyU3PDmaMultiChannelSetXfer+0xd0>
400187e4:	ea00000d 	b	40018820 <CyU3PDmaMultiChannelSetXfer+0xe4>
400187e8:	e1a00000 	nop			; (mov r0, r0)
400187ec:	e1a00000 	nop			; (mov r0, r0)
400187f0:	e1a02006 	mov	r2, r6
400187f4:	e1a01005 	mov	r1, r5
400187f8:	e1a00004 	mov	r0, r4
400187fc:	eb00001d 	bl	40018878 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018800:	ea000016 	b	40018860 <CyU3PDmaMultiChannelSetXfer+0x124>
40018804:	e1a00000 	nop			; (mov r0, r0)
40018808:	e1a00000 	nop			; (mov r0, r0)
4001880c:	e1a02006 	mov	r2, r6
40018810:	e1a01005 	mov	r1, r5
40018814:	e1a00004 	mov	r0, r4
40018818:	eb0000b2 	bl	40018ae8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
4001881c:	ea00000f 	b	40018860 <CyU3PDmaMultiChannelSetXfer+0x124>
40018820:	e1a00000 	nop			; (mov r0, r0)
40018824:	e59f0048 	ldr	r0, [pc, #72]	; 40018874 <CyU3PDmaMultiChannelSetXfer+0x138>
40018828:	e5900000 	ldr	r0, [r0]
4001882c:	e3500000 	cmp	r0, #0
40018830:	1a000001 	bne	4001883c <CyU3PDmaMultiChannelSetXfer+0x100>
40018834:	e3a00047 	mov	r0, #71	; 0x47
40018838:	eaffffca 	b	40018768 <CyU3PDmaMultiChannelSetXfer+0x2c>
4001883c:	e1a02006 	mov	r2, r6
40018840:	e1a01005 	mov	r1, r5
40018844:	e1a00004 	mov	r0, r4
40018848:	e59f3024 	ldr	r3, [pc, #36]	; 40018874 <CyU3PDmaMultiChannelSetXfer+0x138>
4001884c:	e5933000 	ldr	r3, [r3]
40018850:	e12fff33 	blx	r3
40018854:	ea000001 	b	40018860 <CyU3PDmaMultiChannelSetXfer+0x124>
40018858:	e1a00000 	nop			; (mov r0, r0)
4001885c:	e1a00000 	nop			; (mov r0, r0)
40018860:	e1a00000 	nop			; (mov r0, r0)
40018864:	e2840078 	add	r0, r4, #120	; 0x78
40018868:	ebffc647 	bl	4000a18c <_txe_mutex_put>
4001886c:	e1a00007 	mov	r0, r7
40018870:	eaffffbc 	b	40018768 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018874:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018878 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018878:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001887c:	e24dd028 	sub	sp, sp, #40	; 0x28
40018880:	e1a04000 	mov	r4, r0
40018884:	e1a05001 	mov	r5, r1
40018888:	e1a06002 	mov	r6, r2
4001888c:	e3a00002 	mov	r0, #2
40018890:	e5840000 	str	r0, [r4]
40018894:	e3a07000 	mov	r7, #0
40018898:	ea000005 	b	400188b4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
4001889c:	e2841024 	add	r1, r4, #36	; 0x24
400188a0:	e0811087 	add	r1, r1, r7, lsl #1
400188a4:	e1d100b0 	ldrh	r0, [r1]
400188a8:	ebfff0ac 	bl	40014b60 <CyU3PDmaSocketDisable>
400188ac:	e2870001 	add	r0, r7, #1
400188b0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400188b4:	e1d400ba 	ldrh	r0, [r4, #10]
400188b8:	e1500007 	cmp	r0, r7
400188bc:	cafffff6 	bgt	4001889c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
400188c0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400188c4:	ebfff0a5 	bl	40014b60 <CyU3PDmaSocketDisable>
400188c8:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
400188cc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400188d0:	ebfff1bd 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
400188d4:	e2840014 	add	r0, r4, #20
400188d8:	e0800086 	add	r0, r0, r6, lsl #1
400188dc:	e1d000b0 	ldrh	r0, [r0]
400188e0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400188e4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400188e8:	e3a07000 	mov	r7, #0
400188ec:	ea000040 	b	400189f4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
400188f0:	e2841024 	add	r1, r4, #36	; 0x24
400188f4:	e0811087 	add	r1, r1, r7, lsl #1
400188f8:	e1d100b0 	ldrh	r0, [r1]
400188fc:	e28d1010 	add	r1, sp, #16
40018900:	ebfff0ae 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018904:	e3a00000 	mov	r0, #0
40018908:	e58d0014 	str	r0, [sp, #20]
4001890c:	e58d0018 	str	r0, [sp, #24]
40018910:	e59d001c 	ldr	r0, [sp, #28]
40018914:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018918:	e58d001c 	str	r0, [sp, #28]
4001891c:	e59d001c 	ldr	r0, [sp, #28]
40018920:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018924:	e58d001c 	str	r0, [sp, #28]
40018928:	e59d001c 	ldr	r0, [sp, #28]
4001892c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018930:	e58d001c 	str	r0, [sp, #28]
40018934:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018938:	e3500001 	cmp	r0, #1
4001893c:	1a000003 	bne	40018950 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018940:	e59d001c 	ldr	r0, [sp, #28]
40018944:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018948:	e58d001c 	str	r0, [sp, #28]
4001894c:	ea000002 	b	4001895c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018950:	e59d001c 	ldr	r0, [sp, #28]
40018954:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018958:	e58d001c 	str	r0, [sp, #28]
4001895c:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018960:	e3500000 	cmp	r0, #0
40018964:	0a000006 	beq	40018984 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018968:	e1d400b8 	ldrh	r0, [r4, #8]
4001896c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018970:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018974:	e1800281 	orr	r0, r0, r1, lsl #5
40018978:	e59d101c 	ldr	r1, [sp, #28]
4001897c:	e1800001 	orr	r0, r0, r1
40018980:	e58d001c 	str	r0, [sp, #28]
40018984:	e3e00000 	mvn	r0, #0
40018988:	e58d0020 	str	r0, [sp, #32]
4001898c:	e1570006 	cmp	r7, r6
40018990:	ba000004 	blt	400189a8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018994:	e2840014 	add	r0, r4, #20
40018998:	e0800087 	add	r0, r0, r7, lsl #1
4001899c:	e1d000b0 	ldrh	r0, [r0]
400189a0:	e58d0010 	str	r0, [sp, #16]
400189a4:	ea000007 	b	400189c8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
400189a8:	e2841014 	add	r1, r4, #20
400189ac:	e0811087 	add	r1, r1, r7, lsl #1
400189b0:	e1d100b0 	ldrh	r0, [r1]
400189b4:	e1a0100d 	mov	r1, sp
400189b8:	eb0026de 	bl	40022538 <CyU3PDmaDscrGetConfig>
400189bc:	e59d0008 	ldr	r0, [sp, #8]
400189c0:	e1a00820 	lsr	r0, r0, #16
400189c4:	e58d0010 	str	r0, [sp, #16]
400189c8:	e284103e 	add	r1, r4, #62	; 0x3e
400189cc:	e0811087 	add	r1, r1, r7, lsl #1
400189d0:	e59d0010 	ldr	r0, [sp, #16]
400189d4:	e1c100b0 	strh	r0, [r1]
400189d8:	e2841024 	add	r1, r4, #36	; 0x24
400189dc:	e0811087 	add	r1, r1, r7, lsl #1
400189e0:	e1d100b0 	ldrh	r0, [r1]
400189e4:	e28d1010 	add	r1, sp, #16
400189e8:	ebfff11e 	bl	40014e68 <CyU3PDmaSocketSetConfig>
400189ec:	e2870001 	add	r0, r7, #1
400189f0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400189f4:	e1d400ba 	ldrh	r0, [r4, #10]
400189f8:	e1500007 	cmp	r0, r7
400189fc:	caffffbb 	bgt	400188f0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018a00:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018a04:	e28d1010 	add	r1, sp, #16
40018a08:	ebfff06c 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018a0c:	e58d5014 	str	r5, [sp, #20]
40018a10:	e3a00000 	mov	r0, #0
40018a14:	e58d0018 	str	r0, [sp, #24]
40018a18:	e3550000 	cmp	r5, #0
40018a1c:	1a000006 	bne	40018a3c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018a20:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a24:	e3c00080 	bic	r0, r0, #128	; 0x80
40018a28:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a2c:	e59d001c 	ldr	r0, [sp, #28]
40018a30:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018a34:	e58d001c 	str	r0, [sp, #28]
40018a38:	ea000005 	b	40018a54 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018a3c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a40:	e3800080 	orr	r0, r0, #128	; 0x80
40018a44:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a48:	e59d001c 	ldr	r0, [sp, #28]
40018a4c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018a50:	e58d001c 	str	r0, [sp, #28]
40018a54:	e59d001c 	ldr	r0, [sp, #28]
40018a58:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018a5c:	e58d001c 	str	r0, [sp, #28]
40018a60:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018a64:	e3500001 	cmp	r0, #1
40018a68:	1a000003 	bne	40018a7c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018a6c:	e59d001c 	ldr	r0, [sp, #28]
40018a70:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018a74:	e58d001c 	str	r0, [sp, #28]
40018a78:	ea000002 	b	40018a88 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018a7c:	e59d001c 	ldr	r0, [sp, #28]
40018a80:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018a84:	e58d001c 	str	r0, [sp, #28]
40018a88:	e3e00000 	mvn	r0, #0
40018a8c:	e58d0020 	str	r0, [sp, #32]
40018a90:	e1d481bc 	ldrh	r8, [r4, #28]
40018a94:	e3a07000 	mov	r7, #0
40018a98:	ea000007 	b	40018abc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018a9c:	e1a0100d 	mov	r1, sp
40018aa0:	e1a00008 	mov	r0, r8
40018aa4:	eb0026a3 	bl	40022538 <CyU3PDmaDscrGetConfig>
40018aa8:	e59d0008 	ldr	r0, [sp, #8]
40018aac:	e1a08800 	lsl	r8, r0, #16
40018ab0:	e1a08828 	lsr	r8, r8, #16
40018ab4:	e2870001 	add	r0, r7, #1
40018ab8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018abc:	e1570006 	cmp	r7, r6
40018ac0:	bafffff5 	blt	40018a9c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018ac4:	e58d8010 	str	r8, [sp, #16]
40018ac8:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018acc:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018ad0:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018ad4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018ad8:	e28d1010 	add	r1, sp, #16
40018adc:	ebfff0e1 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40018ae0:	e28dd028 	add	sp, sp, #40	; 0x28
40018ae4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018ae8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018ae8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018aec:	e24dd028 	sub	sp, sp, #40	; 0x28
40018af0:	e1a04000 	mov	r4, r0
40018af4:	e1a05001 	mov	r5, r1
40018af8:	e1a06002 	mov	r6, r2
40018afc:	e3a00002 	mov	r0, #2
40018b00:	e5840000 	str	r0, [r4]
40018b04:	e3a07000 	mov	r7, #0
40018b08:	ea000005 	b	40018b24 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018b0c:	e284102c 	add	r1, r4, #44	; 0x2c
40018b10:	e0811087 	add	r1, r1, r7, lsl #1
40018b14:	e1d100b0 	ldrh	r0, [r1]
40018b18:	ebfff010 	bl	40014b60 <CyU3PDmaSocketDisable>
40018b1c:	e2870001 	add	r0, r7, #1
40018b20:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018b24:	e1d400ba 	ldrh	r0, [r4, #10]
40018b28:	e1500007 	cmp	r0, r7
40018b2c:	cafffff6 	bgt	40018b0c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018b30:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018b34:	ebfff009 	bl	40014b60 <CyU3PDmaSocketDisable>
40018b38:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018b3c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018b40:	ebfff121 	bl	40014fcc <CyU3PDmaUpdateSocketSuspendOption>
40018b44:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018b48:	e28d1010 	add	r1, sp, #16
40018b4c:	ebfff01b 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018b50:	e58d5014 	str	r5, [sp, #20]
40018b54:	e3a00000 	mov	r0, #0
40018b58:	e58d0018 	str	r0, [sp, #24]
40018b5c:	e3550000 	cmp	r5, #0
40018b60:	1a000006 	bne	40018b80 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018b64:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018b68:	e3c00080 	bic	r0, r0, #128	; 0x80
40018b6c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018b70:	e59d001c 	ldr	r0, [sp, #28]
40018b74:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018b78:	e58d001c 	str	r0, [sp, #28]
40018b7c:	ea000005 	b	40018b98 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018b80:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018b84:	e3800080 	orr	r0, r0, #128	; 0x80
40018b88:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018b8c:	e59d001c 	ldr	r0, [sp, #28]
40018b90:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018b94:	e58d001c 	str	r0, [sp, #28]
40018b98:	e59d001c 	ldr	r0, [sp, #28]
40018b9c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018ba0:	e58d001c 	str	r0, [sp, #28]
40018ba4:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018ba8:	e3500001 	cmp	r0, #1
40018bac:	1a000003 	bne	40018bc0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018bb0:	e59d001c 	ldr	r0, [sp, #28]
40018bb4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018bb8:	e58d001c 	str	r0, [sp, #28]
40018bbc:	ea000002 	b	40018bcc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018bc0:	e59d001c 	ldr	r0, [sp, #28]
40018bc4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018bc8:	e58d001c 	str	r0, [sp, #28]
40018bcc:	e3e00000 	mvn	r0, #0
40018bd0:	e58d0020 	str	r0, [sp, #32]
40018bd4:	e1d481b4 	ldrh	r8, [r4, #20]
40018bd8:	e3a07000 	mov	r7, #0
40018bdc:	ea000007 	b	40018c00 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018be0:	e1a0100d 	mov	r1, sp
40018be4:	e1a00008 	mov	r0, r8
40018be8:	eb002652 	bl	40022538 <CyU3PDmaDscrGetConfig>
40018bec:	e59d0008 	ldr	r0, [sp, #8]
40018bf0:	e59f1148 	ldr	r1, [pc, #328]	; 40018d40 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018bf4:	e0018820 	and	r8, r1, r0, lsr #16
40018bf8:	e2870001 	add	r0, r7, #1
40018bfc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c00:	e1570006 	cmp	r7, r6
40018c04:	bafffff5 	blt	40018be0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018c08:	e58d8010 	str	r8, [sp, #16]
40018c0c:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018c10:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018c14:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018c18:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018c1c:	e28d1010 	add	r1, sp, #16
40018c20:	ebfff090 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40018c24:	e284001c 	add	r0, r4, #28
40018c28:	e0800086 	add	r0, r0, r6, lsl #1
40018c2c:	e1d000b0 	ldrh	r0, [r0]
40018c30:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018c34:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018c38:	e3a07000 	mov	r7, #0
40018c3c:	ea00003a 	b	40018d2c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018c40:	e284102c 	add	r1, r4, #44	; 0x2c
40018c44:	e0811087 	add	r1, r1, r7, lsl #1
40018c48:	e1d100b0 	ldrh	r0, [r1]
40018c4c:	e28d1010 	add	r1, sp, #16
40018c50:	ebffefda 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018c54:	e3a00000 	mov	r0, #0
40018c58:	e58d0014 	str	r0, [sp, #20]
40018c5c:	e58d0018 	str	r0, [sp, #24]
40018c60:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018c64:	e3c00080 	bic	r0, r0, #128	; 0x80
40018c68:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018c6c:	e59d001c 	ldr	r0, [sp, #28]
40018c70:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018c74:	e58d001c 	str	r0, [sp, #28]
40018c78:	e59d001c 	ldr	r0, [sp, #28]
40018c7c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018c80:	e58d001c 	str	r0, [sp, #28]
40018c84:	e59d001c 	ldr	r0, [sp, #28]
40018c88:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018c8c:	e58d001c 	str	r0, [sp, #28]
40018c90:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018c94:	e3500001 	cmp	r0, #1
40018c98:	1a000003 	bne	40018cac <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018c9c:	e59d001c 	ldr	r0, [sp, #28]
40018ca0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018ca4:	e58d001c 	str	r0, [sp, #28]
40018ca8:	ea000002 	b	40018cb8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018cac:	e59d001c 	ldr	r0, [sp, #28]
40018cb0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018cb4:	e58d001c 	str	r0, [sp, #28]
40018cb8:	e3e00000 	mvn	r0, #0
40018cbc:	e58d0020 	str	r0, [sp, #32]
40018cc0:	e1570006 	cmp	r7, r6
40018cc4:	ba000004 	blt	40018cdc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018cc8:	e284001c 	add	r0, r4, #28
40018ccc:	e0800087 	add	r0, r0, r7, lsl #1
40018cd0:	e1d000b0 	ldrh	r0, [r0]
40018cd4:	e58d0010 	str	r0, [sp, #16]
40018cd8:	ea000008 	b	40018d00 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018cdc:	e284101c 	add	r1, r4, #28
40018ce0:	e0811087 	add	r1, r1, r7, lsl #1
40018ce4:	e1d100b0 	ldrh	r0, [r1]
40018ce8:	e1a0100d 	mov	r1, sp
40018cec:	eb002611 	bl	40022538 <CyU3PDmaDscrGetConfig>
40018cf0:	e59d0008 	ldr	r0, [sp, #8]
40018cf4:	e1a00800 	lsl	r0, r0, #16
40018cf8:	e1a00820 	lsr	r0, r0, #16
40018cfc:	e58d0010 	str	r0, [sp, #16]
40018d00:	e2841046 	add	r1, r4, #70	; 0x46
40018d04:	e0811087 	add	r1, r1, r7, lsl #1
40018d08:	e59d0010 	ldr	r0, [sp, #16]
40018d0c:	e1c100b0 	strh	r0, [r1]
40018d10:	e284102c 	add	r1, r4, #44	; 0x2c
40018d14:	e0811087 	add	r1, r1, r7, lsl #1
40018d18:	e1d100b0 	ldrh	r0, [r1]
40018d1c:	e28d1010 	add	r1, sp, #16
40018d20:	ebfff050 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40018d24:	e2870001 	add	r0, r7, #1
40018d28:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018d2c:	e1d400ba 	ldrh	r0, [r4, #10]
40018d30:	e1500007 	cmp	r0, r7
40018d34:	caffffc1 	bgt	40018c40 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018d38:	e28dd028 	add	sp, sp, #40	; 0x28
40018d3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018d40:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018d44 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018d44:	e92d4030 	push	{r4, r5, lr}
40018d48:	e24dd01c 	sub	sp, sp, #28
40018d4c:	e1a04000 	mov	r4, r0
40018d50:	e3a05000 	mov	r5, #0
40018d54:	ea000031 	b	40018e20 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018d58:	e2840014 	add	r0, r4, #20
40018d5c:	e0800085 	add	r0, r0, r5, lsl #1
40018d60:	e1d000b0 	ldrh	r0, [r0]
40018d64:	e284103e 	add	r1, r4, #62	; 0x3e
40018d68:	e0811085 	add	r1, r1, r5, lsl #1
40018d6c:	e1c100b0 	strh	r0, [r1]
40018d70:	e2841024 	add	r1, r4, #36	; 0x24
40018d74:	e0811085 	add	r1, r1, r5, lsl #1
40018d78:	e1d100b0 	ldrh	r0, [r1]
40018d7c:	ebffef77 	bl	40014b60 <CyU3PDmaSocketDisable>
40018d80:	e2841024 	add	r1, r4, #36	; 0x24
40018d84:	e0811085 	add	r1, r1, r5, lsl #1
40018d88:	e1d100b0 	ldrh	r0, [r1]
40018d8c:	e28d1004 	add	r1, sp, #4
40018d90:	ebffef8a 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018d94:	e2840014 	add	r0, r4, #20
40018d98:	e0800085 	add	r0, r0, r5, lsl #1
40018d9c:	e1d000b0 	ldrh	r0, [r0]
40018da0:	e58d0004 	str	r0, [sp, #4]
40018da4:	e3a00000 	mov	r0, #0
40018da8:	e58d0008 	str	r0, [sp, #8]
40018dac:	e58d000c 	str	r0, [sp, #12]
40018db0:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018db4:	e58d0010 	str	r0, [sp, #16]
40018db8:	e2841024 	add	r1, r4, #36	; 0x24
40018dbc:	e0811085 	add	r1, r1, r5, lsl #1
40018dc0:	e1d100b0 	ldrh	r0, [r1]
40018dc4:	eb0006a3 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
40018dc8:	e3500000 	cmp	r0, #0
40018dcc:	0a000002 	beq	40018ddc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018dd0:	e59d0010 	ldr	r0, [sp, #16]
40018dd4:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018dd8:	e58d0010 	str	r0, [sp, #16]
40018ddc:	e3e00000 	mvn	r0, #0
40018de0:	e58d0014 	str	r0, [sp, #20]
40018de4:	e1d400b4 	ldrh	r0, [r4, #4]
40018de8:	e3500005 	cmp	r0, #5
40018dec:	1a000002 	bne	40018dfc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018df0:	e3a00040 	mov	r0, #64	; 0x40
40018df4:	e58d0018 	str	r0, [sp, #24]
40018df8:	ea000001 	b	40018e04 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018dfc:	e3a00041 	mov	r0, #65	; 0x41
40018e00:	e58d0018 	str	r0, [sp, #24]
40018e04:	e2841024 	add	r1, r4, #36	; 0x24
40018e08:	e0811085 	add	r1, r1, r5, lsl #1
40018e0c:	e1d100b0 	ldrh	r0, [r1]
40018e10:	e28d1004 	add	r1, sp, #4
40018e14:	ebfff013 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40018e18:	e2850001 	add	r0, r5, #1
40018e1c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018e20:	e1d400ba 	ldrh	r0, [r4, #10]
40018e24:	e1500005 	cmp	r0, r5
40018e28:	caffffca 	bgt	40018d58 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40018e2c:	e1d401bc 	ldrh	r0, [r4, #28]
40018e30:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018e34:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e38:	ebffef48 	bl	40014b60 <CyU3PDmaSocketDisable>
40018e3c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e40:	e28d1004 	add	r1, sp, #4
40018e44:	ebffef5d 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018e48:	e1d401bc 	ldrh	r0, [r4, #28]
40018e4c:	e58d0004 	str	r0, [sp, #4]
40018e50:	e3a00000 	mov	r0, #0
40018e54:	e58d0008 	str	r0, [sp, #8]
40018e58:	e58d000c 	str	r0, [sp, #12]
40018e5c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018e60:	e58d0010 	str	r0, [sp, #16]
40018e64:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e68:	eb00067a 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
40018e6c:	e3500000 	cmp	r0, #0
40018e70:	0a000002 	beq	40018e80 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40018e74:	e59d0010 	ldr	r0, [sp, #16]
40018e78:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018e7c:	e58d0010 	str	r0, [sp, #16]
40018e80:	e3e00000 	mvn	r0, #0
40018e84:	e58d0014 	str	r0, [sp, #20]
40018e88:	e1d400b4 	ldrh	r0, [r4, #4]
40018e8c:	e3500005 	cmp	r0, #5
40018e90:	1a000002 	bne	40018ea0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40018e94:	e3a000c0 	mov	r0, #192	; 0xc0
40018e98:	e58d0018 	str	r0, [sp, #24]
40018e9c:	ea000001 	b	40018ea8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40018ea0:	e3a000c2 	mov	r0, #194	; 0xc2
40018ea4:	e58d0018 	str	r0, [sp, #24]
40018ea8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018eac:	e28d1004 	add	r1, sp, #4
40018eb0:	ebffefec 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40018eb4:	e3a00000 	mov	r0, #0
40018eb8:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40018ebc:	e28dd01c 	add	sp, sp, #28
40018ec0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40018ec4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40018ec4:	e92d4030 	push	{r4, r5, lr}
40018ec8:	e24dd01c 	sub	sp, sp, #28
40018ecc:	e1a04000 	mov	r4, r0
40018ed0:	e1d401b4 	ldrh	r0, [r4, #20]
40018ed4:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018ed8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018edc:	ebffef1f 	bl	40014b60 <CyU3PDmaSocketDisable>
40018ee0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ee4:	e28d1004 	add	r1, sp, #4
40018ee8:	ebffef34 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018eec:	e1d401b4 	ldrh	r0, [r4, #20]
40018ef0:	e58d0004 	str	r0, [sp, #4]
40018ef4:	e3a00000 	mov	r0, #0
40018ef8:	e58d0008 	str	r0, [sp, #8]
40018efc:	e58d000c 	str	r0, [sp, #12]
40018f00:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018f04:	e58d0010 	str	r0, [sp, #16]
40018f08:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f0c:	eb000651 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
40018f10:	e3500000 	cmp	r0, #0
40018f14:	0a000002 	beq	40018f24 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40018f18:	e59d0010 	ldr	r0, [sp, #16]
40018f1c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018f20:	e58d0010 	str	r0, [sp, #16]
40018f24:	e3e00000 	mvn	r0, #0
40018f28:	e58d0014 	str	r0, [sp, #20]
40018f2c:	e1d400b4 	ldrh	r0, [r4, #4]
40018f30:	e3500006 	cmp	r0, #6
40018f34:	1a000002 	bne	40018f44 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40018f38:	e3a000c0 	mov	r0, #192	; 0xc0
40018f3c:	e58d0018 	str	r0, [sp, #24]
40018f40:	ea000001 	b	40018f4c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40018f44:	e3a000c1 	mov	r0, #193	; 0xc1
40018f48:	e58d0018 	str	r0, [sp, #24]
40018f4c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f50:	e28d1004 	add	r1, sp, #4
40018f54:	ebffefc3 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40018f58:	e3a05000 	mov	r5, #0
40018f5c:	ea000035 	b	40019038 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40018f60:	e284001c 	add	r0, r4, #28
40018f64:	e0800085 	add	r0, r0, r5, lsl #1
40018f68:	e1d000b0 	ldrh	r0, [r0]
40018f6c:	e2841046 	add	r1, r4, #70	; 0x46
40018f70:	e0811085 	add	r1, r1, r5, lsl #1
40018f74:	e1c100b0 	strh	r0, [r1]
40018f78:	e284102c 	add	r1, r4, #44	; 0x2c
40018f7c:	e0811085 	add	r1, r1, r5, lsl #1
40018f80:	e1d100b0 	ldrh	r0, [r1]
40018f84:	ebffeef5 	bl	40014b60 <CyU3PDmaSocketDisable>
40018f88:	e284102c 	add	r1, r4, #44	; 0x2c
40018f8c:	e0811085 	add	r1, r1, r5, lsl #1
40018f90:	e1d100b0 	ldrh	r0, [r1]
40018f94:	e28d1004 	add	r1, sp, #4
40018f98:	ebffef08 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40018f9c:	e284001c 	add	r0, r4, #28
40018fa0:	e0800085 	add	r0, r0, r5, lsl #1
40018fa4:	e1d000b0 	ldrh	r0, [r0]
40018fa8:	e58d0004 	str	r0, [sp, #4]
40018fac:	e3a00000 	mov	r0, #0
40018fb0:	e58d0008 	str	r0, [sp, #8]
40018fb4:	e58d000c 	str	r0, [sp, #12]
40018fb8:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018fbc:	e58d0010 	str	r0, [sp, #16]
40018fc0:	e284102c 	add	r1, r4, #44	; 0x2c
40018fc4:	e0811085 	add	r1, r1, r5, lsl #1
40018fc8:	e1d100b0 	ldrh	r0, [r1]
40018fcc:	eb000621 	bl	4001a858 <CyU3PDmaIsSockAvlEnReqd>
40018fd0:	e3500000 	cmp	r0, #0
40018fd4:	0a000002 	beq	40018fe4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40018fd8:	e59d0010 	ldr	r0, [sp, #16]
40018fdc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018fe0:	e58d0010 	str	r0, [sp, #16]
40018fe4:	e3e00000 	mvn	r0, #0
40018fe8:	e58d0014 	str	r0, [sp, #20]
40018fec:	e1d400b4 	ldrh	r0, [r4, #4]
40018ff0:	e3500006 	cmp	r0, #6
40018ff4:	1a000002 	bne	40019004 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40018ff8:	e3a00040 	mov	r0, #64	; 0x40
40018ffc:	e58d0018 	str	r0, [sp, #24]
40019000:	ea000001 	b	4001900c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40019004:	e3a00042 	mov	r0, #66	; 0x42
40019008:	e58d0018 	str	r0, [sp, #24]
4001900c:	e284102c 	add	r1, r4, #44	; 0x2c
40019010:	e0811085 	add	r1, r1, r5, lsl #1
40019014:	e1d100b0 	ldrh	r0, [r1]
40019018:	e28d1004 	add	r1, sp, #4
4001901c:	ebffef91 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40019020:	e3a00000 	mov	r0, #0
40019024:	e2841064 	add	r1, r4, #100	; 0x64
40019028:	e0811085 	add	r1, r1, r5, lsl #1
4001902c:	e1c100b0 	strh	r0, [r1]
40019030:	e2850001 	add	r0, r5, #1
40019034:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40019038:	e1d400ba 	ldrh	r0, [r4, #10]
4001903c:	e1500005 	cmp	r0, r5
40019040:	caffffc6 	bgt	40018f60 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40019044:	e28dd01c 	add	sp, sp, #28
40019048:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

4001904c <CyU3PDmaMultiChannelSetWrapUp>:
4001904c:	e92d4070 	push	{r4, r5, r6, lr}
40019050:	e1a04000 	mov	r4, r0
40019054:	e1a05001 	mov	r5, r1
40019058:	e3e01000 	mvn	r1, #0
4001905c:	e1a00004 	mov	r0, r4
40019060:	ebfff879 	bl	4001724c <CyU3PDmaMultiChannelAcquireLock>
40019064:	e1a06000 	mov	r6, r0
40019068:	e3560000 	cmp	r6, #0
4001906c:	0a000001 	beq	40019078 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40019070:	e1a00006 	mov	r0, r6
40019074:	e8bd8070 	pop	{r4, r5, r6, pc}
40019078:	e5940000 	ldr	r0, [r4]
4001907c:	e3500004 	cmp	r0, #4
40019080:	0a000003 	beq	40019094 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019084:	e5940000 	ldr	r0, [r4]
40019088:	e3500002 	cmp	r0, #2
4001908c:	0a000000 	beq	40019094 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019090:	e3a06047 	mov	r6, #71	; 0x47
40019094:	e1d400b4 	ldrh	r0, [r4, #4]
40019098:	e3500006 	cmp	r0, #6
4001909c:	0a000005 	beq	400190b8 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
400190a0:	e1d400b4 	ldrh	r0, [r4, #4]
400190a4:	e3500008 	cmp	r0, #8
400190a8:	0a000002 	beq	400190b8 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
400190ac:	e1d400b4 	ldrh	r0, [r4, #4]
400190b0:	e3500009 	cmp	r0, #9
400190b4:	1a000003 	bne	400190c8 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
400190b8:	e3550000 	cmp	r5, #0
400190bc:	0a000005 	beq	400190d8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
400190c0:	e3a06040 	mov	r6, #64	; 0x40
400190c4:	ea000003 	b	400190d8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
400190c8:	e1d400ba 	ldrh	r0, [r4, #10]
400190cc:	e1500005 	cmp	r0, r5
400190d0:	ca000000 	bgt	400190d8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
400190d4:	e3a06040 	mov	r6, #64	; 0x40
400190d8:	e3560000 	cmp	r6, #0
400190dc:	1a000003 	bne	400190f0 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
400190e0:	e2841024 	add	r1, r4, #36	; 0x24
400190e4:	e0811085 	add	r1, r1, r5, lsl #1
400190e8:	e1d100b0 	ldrh	r0, [r1]
400190ec:	ebffef88 	bl	40014f14 <CyU3PDmaSocketSetWrapUp>
400190f0:	e2840078 	add	r0, r4, #120	; 0x78
400190f4:	ebffc424 	bl	4000a18c <_txe_mutex_put>
400190f8:	e1a00006 	mov	r0, r6
400190fc:	eaffffdc 	b	40019074 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40019100 <CyU3PDmaApplicationDefine>:
40019100:	e92d4010 	push	{r4, lr}
40019104:	e24dd020 	sub	sp, sp, #32
40019108:	eb000051 	bl	40019254 <CyU3PDmaInit>
4001910c:	e3a02028 	mov	r2, #40	; 0x28
40019110:	e3a01000 	mov	r1, #0
40019114:	e59f007c 	ldr	r0, [pc, #124]	; 40019198 <CyU3PDmaApplicationDefine+0x98>
40019118:	ebffc2ae 	bl	40009bd8 <_txe_event_flags_create>
4001911c:	e3a00c02 	mov	r0, #512	; 0x200
40019120:	ebffa953 	bl	40003674 <CyU3PMemAlloc>
40019124:	e1a04000 	mov	r4, r0
40019128:	e3a0303c 	mov	r3, #60	; 0x3c
4001912c:	e3a02c02 	mov	r2, #512	; 0x200
40019130:	e1cd20f0 	strd	r2, [sp]
40019134:	e1a03004 	mov	r3, r4
40019138:	e3a02004 	mov	r2, #4
4001913c:	e3a01000 	mov	r1, #0
40019140:	e59f0054 	ldr	r0, [pc, #84]	; 4001919c <CyU3PDmaApplicationDefine+0x9c>
40019144:	ebffc438 	bl	4000a22c <_txe_queue_create>
40019148:	e3a00b01 	mov	r0, #1024	; 0x400
4001914c:	ebffa948 	bl	40003674 <CyU3PMemAlloc>
40019150:	e1a04000 	mov	r4, r0
40019154:	e3a030a8 	mov	r3, #168	; 0xa8
40019158:	e3a02001 	mov	r2, #1
4001915c:	e3a01000 	mov	r1, #0
40019160:	e3a00002 	mov	r0, #2
40019164:	e28dc00c 	add	ip, sp, #12
40019168:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001916c:	e3a02b01 	mov	r2, #1024	; 0x400
40019170:	e1a03001 	mov	r3, r1
40019174:	e58d2004 	str	r2, [sp, #4]
40019178:	e59f2020 	ldr	r2, [pc, #32]	; 400191a0 <CyU3PDmaApplicationDefine+0xa0>
4001917c:	e28f1020 	add	r1, pc, #32
40019180:	e58d0008 	str	r0, [sp, #8]
40019184:	e59f0028 	ldr	r0, [pc, #40]	; 400191b4 <CyU3PDmaApplicationDefine+0xb4>
40019188:	e58d4000 	str	r4, [sp]
4001918c:	ebffc50c 	bl	4000a5c4 <_txe_thread_create>
40019190:	e28dd020 	add	sp, sp, #32
40019194:	e8bd8010 	pop	{r4, pc}
40019198:	40031908 	.word	0x40031908
4001919c:	40031930 	.word	0x40031930
400191a0:	4001aa04 	.word	0x4001aa04
400191a4:	445f3130 	.word	0x445f3130
400191a8:	545f414d 	.word	0x545f414d
400191ac:	41455248 	.word	0x41455248
400191b0:	00000044 	.word	0x00000044
400191b4:	40031860 	.word	0x40031860

Disassembly of section i.CyU3PDmaChannelHandleError:

400191b8 <CyU3PDmaChannelHandleError>:
400191b8:	e92d4010 	push	{r4, lr}
400191bc:	e1a04000 	mov	r4, r0
400191c0:	e3e01000 	mvn	r1, #0
400191c4:	e284003c 	add	r0, r4, #60	; 0x3c
400191c8:	ebffc3ba 	bl	4000a0b8 <_txe_mutex_get>
400191cc:	e1d400b4 	ldrh	r0, [r4, #4]
400191d0:	e3500004 	cmp	r0, #4
400191d4:	0a000001 	beq	400191e0 <CyU3PDmaChannelHandleError+0x28>
400191d8:	e1d401b0 	ldrh	r0, [r4, #16]
400191dc:	ebffee5f 	bl	40014b60 <CyU3PDmaSocketDisable>
400191e0:	e1d400b4 	ldrh	r0, [r4, #4]
400191e4:	e3500003 	cmp	r0, #3
400191e8:	0a000001 	beq	400191f4 <CyU3PDmaChannelHandleError+0x3c>
400191ec:	e1d401b2 	ldrh	r0, [r4, #18]
400191f0:	ebffee5a 	bl	40014b60 <CyU3PDmaSocketDisable>
400191f4:	e3a02002 	mov	r2, #2
400191f8:	e3e01007 	mvn	r1, #7
400191fc:	e2840074 	add	r0, r4, #116	; 0x74
40019200:	ebffc314 	bl	40009e58 <_txe_event_flags_set>
40019204:	e3a02000 	mov	r2, #0
40019208:	e3a01040 	mov	r1, #64	; 0x40
4001920c:	e2840074 	add	r0, r4, #116	; 0x74
40019210:	ebffc310 	bl	40009e58 <_txe_event_flags_set>
40019214:	e3a00005 	mov	r0, #5
40019218:	e5840000 	str	r0, [r4]
4001921c:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40019220:	e3500000 	cmp	r0, #0
40019224:	0a000007 	beq	40019248 <CyU3PDmaChannelHandleError+0x90>
40019228:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001922c:	e3100040 	tst	r0, #64	; 0x40
40019230:	0a000004 	beq	40019248 <CyU3PDmaChannelHandleError+0x90>
40019234:	e3a02000 	mov	r2, #0
40019238:	e3a01040 	mov	r1, #64	; 0x40
4001923c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019240:	e1a00004 	mov	r0, r4
40019244:	e12fff33 	blx	r3
40019248:	e284003c 	add	r0, r4, #60	; 0x3c
4001924c:	ebffc3ce 	bl	4000a18c <_txe_mutex_put>
40019250:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

40019254 <CyU3PDmaInit>:
40019254:	e92d4010 	push	{r4, lr}
40019258:	e3a02020 	mov	r2, #32
4001925c:	e3a01000 	mov	r1, #0
40019260:	e59f006c 	ldr	r0, [pc, #108]	; 400192d4 <CyU3PDmaInit+0x80>
40019264:	ebffa913 	bl	400036b8 <CyU3PMemSet>
40019268:	e3a02080 	mov	r2, #128	; 0x80
4001926c:	e3a01000 	mov	r1, #0
40019270:	e59f0060 	ldr	r0, [pc, #96]	; 400192d8 <CyU3PDmaInit+0x84>
40019274:	ebffa90f 	bl	400036b8 <CyU3PMemSet>
40019278:	e3a02020 	mov	r2, #32
4001927c:	e3a01000 	mov	r1, #0
40019280:	e59f0054 	ldr	r0, [pc, #84]	; 400192dc <CyU3PDmaInit+0x88>
40019284:	ebffa90b 	bl	400036b8 <CyU3PMemSet>
40019288:	e3a02040 	mov	r2, #64	; 0x40
4001928c:	e3a01000 	mov	r1, #0
40019290:	e59f0048 	ldr	r0, [pc, #72]	; 400192e0 <CyU3PDmaInit+0x8c>
40019294:	ebffa907 	bl	400036b8 <CyU3PMemSet>
40019298:	e3a02040 	mov	r2, #64	; 0x40
4001929c:	e3a01000 	mov	r1, #0
400192a0:	e59f003c 	ldr	r0, [pc, #60]	; 400192e4 <CyU3PDmaInit+0x90>
400192a4:	ebffa903 	bl	400036b8 <CyU3PMemSet>
400192a8:	e3a00000 	mov	r0, #0
400192ac:	e59f1034 	ldr	r1, [pc, #52]	; 400192e8 <CyU3PDmaInit+0x94>
400192b0:	e5810000 	str	r0, [r1]
400192b4:	eb002463 	bl	40022448 <CyU3PDmaDscrListCreate>
400192b8:	ebffaa3f 	bl	40003bbc <CyU3PDmaBufferInit>
400192bc:	e3a00000 	mov	r0, #0
400192c0:	e59f1024 	ldr	r1, [pc, #36]	; 400192ec <CyU3PDmaInit+0x98>
400192c4:	e1c100b0 	strh	r0, [r1]
400192c8:	e59f1020 	ldr	r1, [pc, #32]	; 400192f0 <CyU3PDmaInit+0x9c>
400192cc:	e1c100b0 	strh	r0, [r1]
400192d0:	e8bd8010 	pop	{r4, pc}
400192d4:	40031720 	.word	0x40031720
400192d8:	40031740 	.word	0x40031740
400192dc:	400317c0 	.word	0x400317c0
400192e0:	400317e0 	.word	0x400317e0
400192e4:	40031820 	.word	0x40031820
400192e8:	40030cf0 	.word	0x40030cf0
400192ec:	40030d18 	.word	0x40030d18
400192f0:	40030d1a 	.word	0x40030d1a

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

400192f4 <CyU3PDmaIntHandler_TypeAuto>:
400192f4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400192f8:	e24dd01c 	sub	sp, sp, #28
400192fc:	e1a04000 	mov	r4, r0
40019300:	e5949004 	ldr	r9, [r4, #4]
40019304:	e5948008 	ldr	r8, [r4, #8]
40019308:	e3180040 	tst	r8, #64	; 0x40
4001930c:	0a000003 	beq	40019320 <CyU3PDmaIntHandler_TypeAuto+0x2c>
40019310:	e1a00009 	mov	r0, r9
40019314:	ebffffa7 	bl	400191b8 <CyU3PDmaChannelHandleError>
40019318:	e28dd01c 	add	sp, sp, #28
4001931c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019320:	e3e01000 	mvn	r1, #0
40019324:	e289003c 	add	r0, r9, #60	; 0x3c
40019328:	ebffc362 	bl	4000a0b8 <_txe_mutex_get>
4001932c:	e1d901b2 	ldrh	r0, [r9, #18]
40019330:	e5941000 	ldr	r1, [r4]
40019334:	e1500821 	cmp	r0, r1, lsr #16
40019338:	1a00004b 	bne	4001946c <CyU3PDmaIntHandler_TypeAuto+0x178>
4001933c:	e1d901b2 	ldrh	r0, [r9, #18]
40019340:	e3a0103f 	mov	r1, #63	; 0x3f
40019344:	e0015440 	and	r5, r1, r0, asr #8
40019348:	e1d901b2 	ldrh	r0, [r9, #18]
4001934c:	e20060ff 	and	r6, r0, #255	; 0xff
40019350:	e594000c 	ldr	r0, [r4, #12]
40019354:	e1a07800 	lsl	r7, r0, #16
40019358:	e1a07827 	lsr	r7, r7, #16
4001935c:	e3180080 	tst	r8, #128	; 0x80
40019360:	0a000012 	beq	400193b0 <CyU3PDmaIntHandler_TypeAuto+0xbc>
40019364:	e3a00001 	mov	r0, #1
40019368:	e5890000 	str	r0, [r9]
4001936c:	e3a02000 	mov	r2, #0
40019370:	e3a01001 	mov	r1, #1
40019374:	e2890074 	add	r0, r9, #116	; 0x74
40019378:	ebffc2b6 	bl	40009e58 <_txe_event_flags_set>
4001937c:	ebffe599 	bl	400129e8 <CyU3PSysBarrierSync>
40019380:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019384:	e3500000 	cmp	r0, #0
40019388:	0a000028 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001938c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019390:	e3100001 	tst	r0, #1
40019394:	0a000025 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019398:	e3a02000 	mov	r2, #0
4001939c:	e3a01001 	mov	r1, #1
400193a0:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400193a4:	e1a00009 	mov	r0, r9
400193a8:	e12fff33 	blx	r3
400193ac:	ea00001f 	b	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400193b0:	e3180002 	tst	r8, #2
400193b4:	0a00001d 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400193b8:	e5990000 	ldr	r0, [r9]
400193bc:	e3500003 	cmp	r0, #3
400193c0:	1a00001a 	bne	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400193c4:	e3a00001 	mov	r0, #1
400193c8:	e5890000 	str	r0, [r9]
400193cc:	e59f0284 	ldr	r0, [pc, #644]	; 40019658 <CyU3PDmaIntHandler_TypeAuto+0x364>
400193d0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400193d4:	e0800386 	add	r0, r0, r6, lsl #7
400193d8:	e5900014 	ldr	r0, [r0, #20]
400193dc:	e3c00002 	bic	r0, r0, #2
400193e0:	e59f1270 	ldr	r1, [pc, #624]	; 40019658 <CyU3PDmaIntHandler_TypeAuto+0x364>
400193e4:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400193e8:	e0811386 	add	r1, r1, r6, lsl #7
400193ec:	e5810014 	str	r0, [r1, #20]
400193f0:	e3a02000 	mov	r2, #0
400193f4:	e3a01002 	mov	r1, #2
400193f8:	e2890074 	add	r0, r9, #116	; 0x74
400193fc:	ebffc295 	bl	40009e58 <_txe_event_flags_set>
40019400:	ebffe578 	bl	400129e8 <CyU3PSysBarrierSync>
40019404:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019408:	e3500000 	cmp	r0, #0
4001940c:	0a000007 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019410:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019414:	e3100002 	tst	r0, #2
40019418:	0a000004 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001941c:	e3a02000 	mov	r2, #0
40019420:	e3a01002 	mov	r1, #2
40019424:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019428:	e1a00009 	mov	r0, r9
4001942c:	e12fff33 	blx	r3
40019430:	e3180e12 	tst	r8, #288	; 0x120
40019434:	0a000084 	beq	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019438:	ebffe56a 	bl	400129e8 <CyU3PSysBarrierSync>
4001943c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019440:	e3500000 	cmp	r0, #0
40019444:	0a000080 	beq	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019448:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001944c:	e3100c01 	tst	r0, #256	; 0x100
40019450:	0a00007d 	beq	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019454:	e3a02000 	mov	r2, #0
40019458:	e3a01c01 	mov	r1, #256	; 0x100
4001945c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019460:	e1a00009 	mov	r0, r9
40019464:	e12fff33 	blx	r3
40019468:	ea000077 	b	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001946c:	e1d901b0 	ldrh	r0, [r9, #16]
40019470:	e3a0103f 	mov	r1, #63	; 0x3f
40019474:	e0015440 	and	r5, r1, r0, asr #8
40019478:	e1d901b0 	ldrh	r0, [r9, #16]
4001947c:	e20060ff 	and	r6, r0, #255	; 0xff
40019480:	e594000c 	ldr	r0, [r4, #12]
40019484:	e1a07800 	lsl	r7, r0, #16
40019488:	e1a07827 	lsr	r7, r7, #16
4001948c:	e3180001 	tst	r8, #1
40019490:	0a00005f 	beq	40019614 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019494:	e5990000 	ldr	r0, [r9]
40019498:	e3500004 	cmp	r0, #4
4001949c:	0a00002b 	beq	40019550 <CyU3PDmaIntHandler_TypeAuto+0x25c>
400194a0:	e1a00000 	nop			; (mov r0, r0)
400194a4:	e1d901b6 	ldrh	r0, [r9, #22]
400194a8:	e28d100c 	add	r1, sp, #12
400194ac:	eb002421 	bl	40022538 <CyU3PDmaDscrGetConfig>
400194b0:	e59d000c 	ldr	r0, [sp, #12]
400194b4:	e58d0000 	str	r0, [sp]
400194b8:	e59d0018 	ldr	r0, [sp, #24]
400194bc:	e59f1198 	ldr	r1, [pc, #408]	; 4001965c <CyU3PDmaIntHandler_TypeAuto+0x368>
400194c0:	e0010820 	and	r0, r1, r0, lsr #16
400194c4:	e1cd00b4 	strh	r0, [sp, #4]
400194c8:	e241100f 	sub	r1, r1, #15
400194cc:	e59d0018 	ldr	r0, [sp, #24]
400194d0:	e0000001 	and	r0, r0, r1
400194d4:	e1cd00b6 	strh	r0, [sp, #6]
400194d8:	e59d0018 	ldr	r0, [sp, #24]
400194dc:	e200000f 	and	r0, r0, #15
400194e0:	e1cd00b8 	strh	r0, [sp, #8]
400194e4:	e1811241 	orr	r1, r1, r1, asr #4
400194e8:	e59d0014 	ldr	r0, [sp, #20]
400194ec:	e0010820 	and	r0, r1, r0, lsr #16
400194f0:	e1c901b6 	strh	r0, [r9, #22]
400194f4:	ebffe53b 	bl	400129e8 <CyU3PSysBarrierSync>
400194f8:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400194fc:	e3500000 	cmp	r0, #0
40019500:	0a000002 	beq	40019510 <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019504:	e1dd10b6 	ldrh	r1, [sp, #6]
40019508:	e59d0000 	ldr	r0, [sp]
4001950c:	ebffe2dc 	bl	40012084 <CyU3PSysFlushDRegion>
40019510:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019514:	e3500000 	cmp	r0, #0
40019518:	0a000007 	beq	4001953c <CyU3PDmaIntHandler_TypeAuto+0x248>
4001951c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019520:	e3100008 	tst	r0, #8
40019524:	0a000004 	beq	4001953c <CyU3PDmaIntHandler_TypeAuto+0x248>
40019528:	e1a0200d 	mov	r2, sp
4001952c:	e3a01008 	mov	r1, #8
40019530:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019534:	e1a00009 	mov	r0, r9
40019538:	e12fff33 	blx	r3
4001953c:	e1d901b6 	ldrh	r0, [r9, #22]
40019540:	e1500007 	cmp	r0, r7
40019544:	1affffd6 	bne	400194a4 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
40019548:	e1c971be 	strh	r7, [r9, #30]
4001954c:	ea000030 	b	40019614 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019550:	e1d901b4 	ldrh	r0, [r9, #20]
40019554:	e28d100c 	add	r1, sp, #12
40019558:	eb0023f6 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001955c:	e59d000c 	ldr	r0, [sp, #12]
40019560:	e58d0000 	str	r0, [sp]
40019564:	e59d0018 	ldr	r0, [sp, #24]
40019568:	e59f10ec 	ldr	r1, [pc, #236]	; 4001965c <CyU3PDmaIntHandler_TypeAuto+0x368>
4001956c:	e0010820 	and	r0, r1, r0, lsr #16
40019570:	e1cd00b4 	strh	r0, [sp, #4]
40019574:	e241100f 	sub	r1, r1, #15
40019578:	e59d0018 	ldr	r0, [sp, #24]
4001957c:	e0000001 	and	r0, r0, r1
40019580:	e1cd00b6 	strh	r0, [sp, #6]
40019584:	e59d0018 	ldr	r0, [sp, #24]
40019588:	e200000f 	and	r0, r0, #15
4001958c:	e1cd00b8 	strh	r0, [sp, #8]
40019590:	e3a00001 	mov	r0, #1
40019594:	e5890000 	str	r0, [r9]
40019598:	e59f00b8 	ldr	r0, [pc, #184]	; 40019658 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001959c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400195a0:	e0800386 	add	r0, r0, r6, lsl #7
400195a4:	e5900014 	ldr	r0, [r0, #20]
400195a8:	e3c00001 	bic	r0, r0, #1
400195ac:	e59f10a4 	ldr	r1, [pc, #164]	; 40019658 <CyU3PDmaIntHandler_TypeAuto+0x364>
400195b0:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400195b4:	e0811386 	add	r1, r1, r6, lsl #7
400195b8:	e5810014 	str	r0, [r1, #20]
400195bc:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400195c0:	e3500000 	cmp	r0, #0
400195c4:	0a000002 	beq	400195d4 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
400195c8:	e1dd10b6 	ldrh	r1, [sp, #6]
400195cc:	e59d0000 	ldr	r0, [sp]
400195d0:	ebffe2ab 	bl	40012084 <CyU3PSysFlushDRegion>
400195d4:	e3a02000 	mov	r2, #0
400195d8:	e3a01004 	mov	r1, #4
400195dc:	e2890074 	add	r0, r9, #116	; 0x74
400195e0:	ebffc21c 	bl	40009e58 <_txe_event_flags_set>
400195e4:	ebffe4ff 	bl	400129e8 <CyU3PSysBarrierSync>
400195e8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400195ec:	e3500000 	cmp	r0, #0
400195f0:	0a000007 	beq	40019614 <CyU3PDmaIntHandler_TypeAuto+0x320>
400195f4:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400195f8:	e3100004 	tst	r0, #4
400195fc:	0a000004 	beq	40019614 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019600:	e1a0200d 	mov	r2, sp
40019604:	e3a01004 	mov	r1, #4
40019608:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001960c:	e1a00009 	mov	r0, r9
40019610:	e12fff33 	blx	r3
40019614:	e3180020 	tst	r8, #32
40019618:	0a00000b 	beq	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001961c:	ebffe4f1 	bl	400129e8 <CyU3PSysBarrierSync>
40019620:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019624:	e3500000 	cmp	r0, #0
40019628:	0a000007 	beq	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001962c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019630:	e3100080 	tst	r0, #128	; 0x80
40019634:	0a000004 	beq	4001964c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019638:	e3a02000 	mov	r2, #0
4001963c:	e3a01080 	mov	r1, #128	; 0x80
40019640:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019644:	e1a00009 	mov	r0, r9
40019648:	e12fff33 	blx	r3
4001964c:	e289003c 	add	r0, r9, #60	; 0x3c
40019650:	ebffc2cd 	bl	4000a18c <_txe_mutex_put>
40019654:	eaffff2f 	b	40019318 <CyU3PDmaIntHandler_TypeAuto+0x24>
40019658:	40030cf4 	.word	0x40030cf4
4001965c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

40019660 <CyU3PDmaIntHandler_TypeManual>:
40019660:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019664:	e24dd034 	sub	sp, sp, #52	; 0x34
40019668:	e1a04000 	mov	r4, r0
4001966c:	e5945004 	ldr	r5, [r4, #4]
40019670:	e5946008 	ldr	r6, [r4, #8]
40019674:	e3160040 	tst	r6, #64	; 0x40
40019678:	0a000003 	beq	4001968c <CyU3PDmaIntHandler_TypeManual+0x2c>
4001967c:	e1a00005 	mov	r0, r5
40019680:	ebfffecc 	bl	400191b8 <CyU3PDmaChannelHandleError>
40019684:	e28dd034 	add	sp, sp, #52	; 0x34
40019688:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001968c:	e3e01000 	mvn	r1, #0
40019690:	e285003c 	add	r0, r5, #60	; 0x3c
40019694:	ebffc287 	bl	4000a0b8 <_txe_mutex_get>
40019698:	e1d501b2 	ldrh	r0, [r5, #18]
4001969c:	e5941000 	ldr	r1, [r4]
400196a0:	e1500821 	cmp	r0, r1, lsr #16
400196a4:	1a0000d6 	bne	40019a04 <CyU3PDmaIntHandler_TypeManual+0x3a4>
400196a8:	e594000c 	ldr	r0, [r4, #12]
400196ac:	e1a07800 	lsl	r7, r0, #16
400196b0:	e1a07827 	lsr	r7, r7, #16
400196b4:	e3160002 	tst	r6, #2
400196b8:	0a000060 	beq	40019840 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400196bc:	e5950000 	ldr	r0, [r5]
400196c0:	e3500003 	cmp	r0, #3
400196c4:	1a000013 	bne	40019718 <CyU3PDmaIntHandler_TypeManual+0xb8>
400196c8:	e3a00001 	mov	r0, #1
400196cc:	e5850000 	str	r0, [r5]
400196d0:	e3a02000 	mov	r2, #0
400196d4:	e3a01002 	mov	r1, #2
400196d8:	e2850074 	add	r0, r5, #116	; 0x74
400196dc:	ebffc1dd 	bl	40009e58 <_txe_event_flags_set>
400196e0:	e3c66080 	bic	r6, r6, #128	; 0x80
400196e4:	ebffe4bf 	bl	400129e8 <CyU3PSysBarrierSync>
400196e8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400196ec:	e3500000 	cmp	r0, #0
400196f0:	0a000052 	beq	40019840 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400196f4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400196f8:	e3100002 	tst	r0, #2
400196fc:	0a00004f 	beq	40019840 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019700:	e3a02000 	mov	r2, #0
40019704:	e3a01002 	mov	r1, #2
40019708:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001970c:	e1a00005 	mov	r0, r5
40019710:	e12fff33 	blx	r3
40019714:	ea000049 	b	40019840 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019718:	e1d500b4 	ldrh	r0, [r5, #4]
4001971c:	e3500002 	cmp	r0, #2
40019720:	1a000027 	bne	400197c4 <CyU3PDmaIntHandler_TypeManual+0x164>
40019724:	e1a00000 	nop			; (mov r0, r0)
40019728:	e1d501ba 	ldrh	r0, [r5, #26]
4001972c:	e28d1024 	add	r1, sp, #36	; 0x24
40019730:	eb002380 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019734:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019738:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019be8 <CyU3PDmaIntHandler_TypeManual+0x588>
4001973c:	e0000001 	and	r0, r0, r1
40019740:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019744:	e1d501ba 	ldrh	r0, [r5, #26]
40019748:	e28d1024 	add	r1, sp, #36	; 0x24
4001974c:	eb002394 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40019750:	e1d511ba 	ldrh	r1, [r5, #26]
40019754:	e1d501b0 	ldrh	r0, [r5, #16]
40019758:	e3a02000 	mov	r2, #0
4001975c:	ebffedaf 	bl	40014e20 <CyU3PDmaSocketSendEvent>
40019760:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019764:	e59f1480 	ldr	r1, [pc, #1152]	; 40019bec <CyU3PDmaIntHandler_TypeManual+0x58c>
40019768:	e0010820 	and	r0, r1, r0, lsr #16
4001976c:	e1c501ba 	strh	r0, [r5, #26]
40019770:	e1d502b0 	ldrh	r0, [r5, #32]
40019774:	e28d1024 	add	r1, sp, #36	; 0x24
40019778:	eb00236e 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001977c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019780:	e1c502b0 	strh	r0, [r5, #32]
40019784:	ebffe497 	bl	400129e8 <CyU3PSysBarrierSync>
40019788:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
4001978c:	e3500000 	cmp	r0, #0
40019790:	0a000007 	beq	400197b4 <CyU3PDmaIntHandler_TypeManual+0x154>
40019794:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019798:	e3100010 	tst	r0, #16
4001979c:	0a000004 	beq	400197b4 <CyU3PDmaIntHandler_TypeManual+0x154>
400197a0:	e3a02000 	mov	r2, #0
400197a4:	e3a01010 	mov	r1, #16
400197a8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400197ac:	e1a00005 	mov	r0, r5
400197b0:	e12fff33 	blx	r3
400197b4:	e1d502b0 	ldrh	r0, [r5, #32]
400197b8:	e1500007 	cmp	r0, r7
400197bc:	1affffd9 	bne	40019728 <CyU3PDmaIntHandler_TypeManual+0xc8>
400197c0:	ea00001e 	b	40019840 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400197c4:	e1a00000 	nop			; (mov r0, r0)
400197c8:	e1d501b8 	ldrh	r0, [r5, #24]
400197cc:	e28d1024 	add	r1, sp, #36	; 0x24
400197d0:	eb002358 	bl	40022538 <CyU3PDmaDscrGetConfig>
400197d4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400197d8:	e3100008 	tst	r0, #8
400197dc:	1a000003 	bne	400197f0 <CyU3PDmaIntHandler_TypeManual+0x190>
400197e0:	e3a02000 	mov	r2, #0
400197e4:	e3a01010 	mov	r1, #16
400197e8:	e2850074 	add	r0, r5, #116	; 0x74
400197ec:	ebffc199 	bl	40009e58 <_txe_event_flags_set>
400197f0:	e1d502b0 	ldrh	r0, [r5, #32]
400197f4:	e28d1024 	add	r1, sp, #36	; 0x24
400197f8:	eb00234e 	bl	40022538 <CyU3PDmaDscrGetConfig>
400197fc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019800:	e1c502b0 	strh	r0, [r5, #32]
40019804:	ebffe477 	bl	400129e8 <CyU3PSysBarrierSync>
40019808:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
4001980c:	e3500000 	cmp	r0, #0
40019810:	0a000007 	beq	40019834 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019814:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019818:	e3100010 	tst	r0, #16
4001981c:	0a000004 	beq	40019834 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019820:	e3a02000 	mov	r2, #0
40019824:	e3a01010 	mov	r1, #16
40019828:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001982c:	e1a00005 	mov	r0, r5
40019830:	e12fff33 	blx	r3
40019834:	e1d502b0 	ldrh	r0, [r5, #32]
40019838:	e1500007 	cmp	r0, r7
4001983c:	1affffe1 	bne	400197c8 <CyU3PDmaIntHandler_TypeManual+0x168>
40019840:	e3160010 	tst	r6, #16
40019844:	0a000046 	beq	40019964 <CyU3PDmaIntHandler_TypeManual+0x304>
40019848:	e1d502b0 	ldrh	r0, [r5, #32]
4001984c:	e28d1024 	add	r1, sp, #36	; 0x24
40019850:	eb002338 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019854:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019858:	e3100001 	tst	r0, #1
4001985c:	0a000040 	beq	40019964 <CyU3PDmaIntHandler_TypeManual+0x304>
40019860:	e1d501b2 	ldrh	r0, [r5, #18]
40019864:	ebffecbd 	bl	40014b60 <CyU3PDmaSocketDisable>
40019868:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001986c:	e59f1374 	ldr	r1, [pc, #884]	; 40019be8 <CyU3PDmaIntHandler_TypeManual+0x588>
40019870:	e0000001 	and	r0, r0, r1
40019874:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019878:	e1d502b0 	ldrh	r0, [r5, #32]
4001987c:	e28d1024 	add	r1, sp, #36	; 0x24
40019880:	eb002347 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40019884:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019888:	e1c502b0 	strh	r0, [r5, #32]
4001988c:	e1d501b2 	ldrh	r0, [r5, #18]
40019890:	e28d100c 	add	r1, sp, #12
40019894:	ebffecc9 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40019898:	e59d0018 	ldr	r0, [sp, #24]
4001989c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
400198a0:	e58d0018 	str	r0, [sp, #24]
400198a4:	e59d0018 	ldr	r0, [sp, #24]
400198a8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400198ac:	e58d0018 	str	r0, [sp, #24]
400198b0:	e3a00000 	mov	r0, #0
400198b4:	e58d001c 	str	r0, [sp, #28]
400198b8:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400198bc:	e2400001 	sub	r0, r0, #1
400198c0:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
400198c4:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400198c8:	e3500000 	cmp	r0, #0
400198cc:	1a000004 	bne	400198e4 <CyU3PDmaIntHandler_TypeManual+0x284>
400198d0:	e3a00010 	mov	r0, #16
400198d4:	e58d001c 	str	r0, [sp, #28]
400198d8:	e59d0020 	ldr	r0, [sp, #32]
400198dc:	e3c00010 	bic	r0, r0, #16
400198e0:	e58d0020 	str	r0, [sp, #32]
400198e4:	e1d502b0 	ldrh	r0, [r5, #32]
400198e8:	e58d000c 	str	r0, [sp, #12]
400198ec:	e1d501b2 	ldrh	r0, [r5, #18]
400198f0:	e28d100c 	add	r1, sp, #12
400198f4:	ebffed5b 	bl	40014e68 <CyU3PDmaSocketSetConfig>
400198f8:	e1d501ba 	ldrh	r0, [r5, #26]
400198fc:	e28d1024 	add	r1, sp, #36	; 0x24
40019900:	eb00230c 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019904:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019908:	e59f12d8 	ldr	r1, [pc, #728]	; 40019be8 <CyU3PDmaIntHandler_TypeManual+0x588>
4001990c:	e0000001 	and	r0, r0, r1
40019910:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019914:	e1d501ba 	ldrh	r0, [r5, #26]
40019918:	e28d1024 	add	r1, sp, #36	; 0x24
4001991c:	eb002320 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40019920:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019924:	e3500000 	cmp	r0, #0
40019928:	0a000004 	beq	40019940 <CyU3PDmaIntHandler_TypeManual+0x2e0>
4001992c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019930:	e59f32b0 	ldr	r3, [pc, #688]	; 40019be8 <CyU3PDmaIntHandler_TypeManual+0x588>
40019934:	e0021003 	and	r1, r2, r3
40019938:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001993c:	ebffe1d0 	bl	40012084 <CyU3PSysFlushDRegion>
40019940:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019944:	e59f12a0 	ldr	r1, [pc, #672]	; 40019bec <CyU3PDmaIntHandler_TypeManual+0x58c>
40019948:	e0010820 	and	r0, r1, r0, lsr #16
4001994c:	e1c501ba 	strh	r0, [r5, #26]
40019950:	e1d511ba 	ldrh	r1, [r5, #26]
40019954:	e1d501b0 	ldrh	r0, [r5, #16]
40019958:	e3a02000 	mov	r2, #0
4001995c:	ebffed2f 	bl	40014e20 <CyU3PDmaSocketSendEvent>
40019960:	ebffe420 	bl	400129e8 <CyU3PSysBarrierSync>
40019964:	e3160080 	tst	r6, #128	; 0x80
40019968:	0a000016 	beq	400199c8 <CyU3PDmaIntHandler_TypeManual+0x368>
4001996c:	e1d500b4 	ldrh	r0, [r5, #4]
40019970:	e3500002 	cmp	r0, #2
40019974:	1a000001 	bne	40019980 <CyU3PDmaIntHandler_TypeManual+0x320>
40019978:	e1d501b0 	ldrh	r0, [r5, #16]
4001997c:	ebffec77 	bl	40014b60 <CyU3PDmaSocketDisable>
40019980:	e3a00001 	mov	r0, #1
40019984:	e5850000 	str	r0, [r5]
40019988:	e3a02000 	mov	r2, #0
4001998c:	e3a01001 	mov	r1, #1
40019990:	e2850074 	add	r0, r5, #116	; 0x74
40019994:	ebffc12f 	bl	40009e58 <_txe_event_flags_set>
40019998:	ebffe412 	bl	400129e8 <CyU3PSysBarrierSync>
4001999c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400199a0:	e3500000 	cmp	r0, #0
400199a4:	0a000007 	beq	400199c8 <CyU3PDmaIntHandler_TypeManual+0x368>
400199a8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400199ac:	e3100001 	tst	r0, #1
400199b0:	0a000004 	beq	400199c8 <CyU3PDmaIntHandler_TypeManual+0x368>
400199b4:	e3a02000 	mov	r2, #0
400199b8:	e3a01001 	mov	r1, #1
400199bc:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400199c0:	e1a00005 	mov	r0, r5
400199c4:	e12fff33 	blx	r3
400199c8:	e3160e12 	tst	r6, #288	; 0x120
400199cc:	0a000082 	beq	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
400199d0:	ebffe404 	bl	400129e8 <CyU3PSysBarrierSync>
400199d4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400199d8:	e3500000 	cmp	r0, #0
400199dc:	0a00007e 	beq	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
400199e0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400199e4:	e3100c01 	tst	r0, #256	; 0x100
400199e8:	0a00007b 	beq	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
400199ec:	e3a02000 	mov	r2, #0
400199f0:	e3a01c01 	mov	r1, #256	; 0x100
400199f4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400199f8:	e1a00005 	mov	r0, r5
400199fc:	e12fff33 	blx	r3
40019a00:	ea000075 	b	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019a04:	e594000c 	ldr	r0, [r4, #12]
40019a08:	e1a07800 	lsl	r7, r0, #16
40019a0c:	e1a07827 	lsr	r7, r7, #16
40019a10:	e3160001 	tst	r6, #1
40019a14:	0a00005d 	beq	40019b90 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a18:	e5950000 	ldr	r0, [r5]
40019a1c:	e3500004 	cmp	r0, #4
40019a20:	0a000031 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x48c>
40019a24:	e1a00000 	nop			; (mov r0, r0)
40019a28:	e1d501be 	ldrh	r0, [r5, #30]
40019a2c:	e28d1024 	add	r1, sp, #36	; 0x24
40019a30:	eb0022c0 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019a34:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019a38:	e58d0000 	str	r0, [sp]
40019a3c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a40:	e59f11a4 	ldr	r1, [pc, #420]	; 40019bec <CyU3PDmaIntHandler_TypeManual+0x58c>
40019a44:	e0010820 	and	r0, r1, r0, lsr #16
40019a48:	e1cd00b4 	strh	r0, [sp, #4]
40019a4c:	e241100f 	sub	r1, r1, #15
40019a50:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a54:	e0000001 	and	r0, r0, r1
40019a58:	e1cd00b6 	strh	r0, [sp, #6]
40019a5c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a60:	e200000f 	and	r0, r0, #15
40019a64:	e1cd00b8 	strh	r0, [sp, #8]
40019a68:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019a6c:	e3500000 	cmp	r0, #0
40019a70:	0a000002 	beq	40019a80 <CyU3PDmaIntHandler_TypeManual+0x420>
40019a74:	e1dd10b6 	ldrh	r1, [sp, #6]
40019a78:	e59d0000 	ldr	r0, [sp]
40019a7c:	ebffe180 	bl	40012084 <CyU3PSysFlushDRegion>
40019a80:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a84:	e3100008 	tst	r0, #8
40019a88:	0a000003 	beq	40019a9c <CyU3PDmaIntHandler_TypeManual+0x43c>
40019a8c:	e3a02000 	mov	r2, #0
40019a90:	e3a01008 	mov	r1, #8
40019a94:	e2850074 	add	r0, r5, #116	; 0x74
40019a98:	ebffc0ee 	bl	40009e58 <_txe_event_flags_set>
40019a9c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019aa0:	e59f1144 	ldr	r1, [pc, #324]	; 40019bec <CyU3PDmaIntHandler_TypeManual+0x58c>
40019aa4:	e0010820 	and	r0, r1, r0, lsr #16
40019aa8:	e1c501be 	strh	r0, [r5, #30]
40019aac:	ebffe3cd 	bl	400129e8 <CyU3PSysBarrierSync>
40019ab0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ab4:	e3500000 	cmp	r0, #0
40019ab8:	0a000007 	beq	40019adc <CyU3PDmaIntHandler_TypeManual+0x47c>
40019abc:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ac0:	e3100008 	tst	r0, #8
40019ac4:	0a000004 	beq	40019adc <CyU3PDmaIntHandler_TypeManual+0x47c>
40019ac8:	e1a0200d 	mov	r2, sp
40019acc:	e3a01008 	mov	r1, #8
40019ad0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ad4:	e1a00005 	mov	r0, r5
40019ad8:	e12fff33 	blx	r3
40019adc:	e1d501be 	ldrh	r0, [r5, #30]
40019ae0:	e1500007 	cmp	r0, r7
40019ae4:	1affffcf 	bne	40019a28 <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019ae8:	ea000028 	b	40019b90 <CyU3PDmaIntHandler_TypeManual+0x530>
40019aec:	e1d501b4 	ldrh	r0, [r5, #20]
40019af0:	e28d1024 	add	r1, sp, #36	; 0x24
40019af4:	eb00228f 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019af8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019afc:	e58d0000 	str	r0, [sp]
40019b00:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b04:	e59f10e0 	ldr	r1, [pc, #224]	; 40019bec <CyU3PDmaIntHandler_TypeManual+0x58c>
40019b08:	e0010820 	and	r0, r1, r0, lsr #16
40019b0c:	e1cd00b4 	strh	r0, [sp, #4]
40019b10:	e241100f 	sub	r1, r1, #15
40019b14:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b18:	e0000001 	and	r0, r0, r1
40019b1c:	e1cd00b6 	strh	r0, [sp, #6]
40019b20:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b24:	e200000f 	and	r0, r0, #15
40019b28:	e1cd00b8 	strh	r0, [sp, #8]
40019b2c:	e3a00001 	mov	r0, #1
40019b30:	e5850000 	str	r0, [r5]
40019b34:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019b38:	e3500000 	cmp	r0, #0
40019b3c:	0a000002 	beq	40019b4c <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019b40:	e1dd10b6 	ldrh	r1, [sp, #6]
40019b44:	e59d0000 	ldr	r0, [sp]
40019b48:	ebffe14d 	bl	40012084 <CyU3PSysFlushDRegion>
40019b4c:	e3a02000 	mov	r2, #0
40019b50:	e3a01004 	mov	r1, #4
40019b54:	e2850074 	add	r0, r5, #116	; 0x74
40019b58:	ebffc0be 	bl	40009e58 <_txe_event_flags_set>
40019b5c:	e3c66080 	bic	r6, r6, #128	; 0x80
40019b60:	ebffe3a0 	bl	400129e8 <CyU3PSysBarrierSync>
40019b64:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b68:	e3500000 	cmp	r0, #0
40019b6c:	0a000007 	beq	40019b90 <CyU3PDmaIntHandler_TypeManual+0x530>
40019b70:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b74:	e3100004 	tst	r0, #4
40019b78:	0a000004 	beq	40019b90 <CyU3PDmaIntHandler_TypeManual+0x530>
40019b7c:	e1a0200d 	mov	r2, sp
40019b80:	e3a01004 	mov	r1, #4
40019b84:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b88:	e1a00005 	mov	r0, r5
40019b8c:	e12fff33 	blx	r3
40019b90:	e3160080 	tst	r6, #128	; 0x80
40019b94:	0a000002 	beq	40019ba4 <CyU3PDmaIntHandler_TypeManual+0x544>
40019b98:	e3a00006 	mov	r0, #6
40019b9c:	e5850000 	str	r0, [r5]
40019ba0:	ebffe390 	bl	400129e8 <CyU3PSysBarrierSync>
40019ba4:	e3160020 	tst	r6, #32
40019ba8:	0a00000b 	beq	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019bac:	ebffe38d 	bl	400129e8 <CyU3PSysBarrierSync>
40019bb0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019bb4:	e3500000 	cmp	r0, #0
40019bb8:	0a000007 	beq	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019bbc:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019bc0:	e3100080 	tst	r0, #128	; 0x80
40019bc4:	0a000004 	beq	40019bdc <CyU3PDmaIntHandler_TypeManual+0x57c>
40019bc8:	e3a02000 	mov	r2, #0
40019bcc:	e3a01080 	mov	r1, #128	; 0x80
40019bd0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019bd4:	e1a00005 	mov	r0, r5
40019bd8:	e12fff33 	blx	r3
40019bdc:	e285003c 	add	r0, r5, #60	; 0x3c
40019be0:	ebffc169 	bl	4000a18c <_txe_mutex_put>
40019be4:	eafffea6 	b	40019684 <CyU3PDmaIntHandler_TypeManual+0x24>
40019be8:	0000fff0 	.word	0x0000fff0
40019bec:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019bf0 <CyU3PDmaIntHandler_TypeManyToOne>:
40019bf0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019bf4:	e24dd034 	sub	sp, sp, #52	; 0x34
40019bf8:	e1a04000 	mov	r4, r0
40019bfc:	e5945004 	ldr	r5, [r4, #4]
40019c00:	e5946008 	ldr	r6, [r4, #8]
40019c04:	e3160040 	tst	r6, #64	; 0x40
40019c08:	0a000003 	beq	40019c1c <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019c0c:	e1a00005 	mov	r0, r5
40019c10:	eb00033d 	bl	4001a90c <CyU3PDmaMultiChannelHandleError>
40019c14:	e28dd034 	add	sp, sp, #52	; 0x34
40019c18:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019c1c:	e3e01000 	mvn	r1, #0
40019c20:	e2850078 	add	r0, r5, #120	; 0x78
40019c24:	ebffc123 	bl	4000a0b8 <_txe_mutex_get>
40019c28:	e5940000 	ldr	r0, [r4]
40019c2c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a1c4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019c30:	e0019820 	and	r9, r1, r0, lsr #16
40019c34:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c38:	e1500009 	cmp	r0, r9
40019c3c:	1a0000d8 	bne	40019fa4 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019c40:	e594000c 	ldr	r0, [r4, #12]
40019c44:	e0007001 	and	r7, r0, r1
40019c48:	e3160002 	tst	r6, #2
40019c4c:	0a000054 	beq	40019da4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c50:	e5950000 	ldr	r0, [r5]
40019c54:	e3500003 	cmp	r0, #3
40019c58:	0a000030 	beq	40019d20 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019c5c:	e1a00000 	nop			; (mov r0, r0)
40019c60:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019c64:	e28d1024 	add	r1, sp, #36	; 0x24
40019c68:	eb002232 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019c6c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c70:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a1c4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019c74:	e0010820 	and	r0, r1, r0, lsr #16
40019c78:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019c7c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c80:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019c84:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019c88:	e28d1024 	add	r1, sp, #36	; 0x24
40019c8c:	eb002229 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019c90:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c94:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a1c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019c98:	e0000001 	and	r0, r0, r1
40019c9c:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ca0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019ca4:	e28d1024 	add	r1, sp, #36	; 0x24
40019ca8:	eb00223d 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40019cac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019cb0:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a1cc <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019cb4:	e0000001 	and	r0, r0, r1
40019cb8:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019cbc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019cc0:	e1a00820 	lsr	r0, r0, #16
40019cc4:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019cc8:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019ccc:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019cd0:	e1a00802 	lsl	r0, r2, #16
40019cd4:	e1a00820 	lsr	r0, r0, #16
40019cd8:	e3a02000 	mov	r2, #0
40019cdc:	ebffec4f 	bl	40014e20 <CyU3PDmaSocketSendEvent>
40019ce0:	ebffe340 	bl	400129e8 <CyU3PSysBarrierSync>
40019ce4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019ce8:	e3500000 	cmp	r0, #0
40019cec:	0a000007 	beq	40019d10 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019cf0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019cf4:	e3100010 	tst	r0, #16
40019cf8:	0a000004 	beq	40019d10 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019cfc:	e3a02000 	mov	r2, #0
40019d00:	e3a01010 	mov	r1, #16
40019d04:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019d08:	e1a00005 	mov	r0, r5
40019d0c:	e12fff33 	blx	r3
40019d10:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d14:	e1500007 	cmp	r0, r7
40019d18:	1affffd0 	bne	40019c60 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019d1c:	ea000020 	b	40019da4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019d20:	e3a00001 	mov	r0, #1
40019d24:	e5850000 	str	r0, [r5]
40019d28:	e1d500b4 	ldrh	r0, [r5, #4]
40019d2c:	e3500005 	cmp	r0, #5
40019d30:	1a00000a 	bne	40019d60 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019d34:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019d38:	e1a0100d 	mov	r1, sp
40019d3c:	ebffeb9f 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40019d40:	e3a00000 	mov	r0, #0
40019d44:	e58d0010 	str	r0, [sp, #16]
40019d48:	e59d0014 	ldr	r0, [sp, #20]
40019d4c:	e3c00002 	bic	r0, r0, #2
40019d50:	e58d0014 	str	r0, [sp, #20]
40019d54:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019d58:	e1a0100d 	mov	r1, sp
40019d5c:	ebffec41 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40019d60:	e3a02000 	mov	r2, #0
40019d64:	e3a01002 	mov	r1, #2
40019d68:	e28500b0 	add	r0, r5, #176	; 0xb0
40019d6c:	ebffc039 	bl	40009e58 <_txe_event_flags_set>
40019d70:	e3c66080 	bic	r6, r6, #128	; 0x80
40019d74:	ebffe31b 	bl	400129e8 <CyU3PSysBarrierSync>
40019d78:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019d7c:	e3500000 	cmp	r0, #0
40019d80:	0a000007 	beq	40019da4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019d84:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019d88:	e3100002 	tst	r0, #2
40019d8c:	0a000004 	beq	40019da4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019d90:	e3a02000 	mov	r2, #0
40019d94:	e3a01002 	mov	r1, #2
40019d98:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019d9c:	e1a00005 	mov	r0, r5
40019da0:	e12fff33 	blx	r3
40019da4:	e3160010 	tst	r6, #16
40019da8:	0a00004f 	beq	40019eec <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019dac:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019db0:	e28d1024 	add	r1, sp, #36	; 0x24
40019db4:	eb0021df 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019db8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019dbc:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a1c4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019dc0:	e0010820 	and	r0, r1, r0, lsr #16
40019dc4:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019dc8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019dcc:	e3100001 	tst	r0, #1
40019dd0:	0a000045 	beq	40019eec <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019dd4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019dd8:	ebffeb60 	bl	40014b60 <CyU3PDmaSocketDisable>
40019ddc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019de0:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a1c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019de4:	e0000001 	and	r0, r0, r1
40019de8:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019dec:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019df0:	e28d1024 	add	r1, sp, #36	; 0x24
40019df4:	eb0021ea 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40019df8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019dfc:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019e00:	e1a0100d 	mov	r1, sp
40019e04:	e1a00009 	mov	r0, r9
40019e08:	ebffeb6c 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
40019e0c:	e59d000c 	ldr	r0, [sp, #12]
40019e10:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019e14:	e58d000c 	str	r0, [sp, #12]
40019e18:	e59d000c 	ldr	r0, [sp, #12]
40019e1c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019e20:	e58d000c 	str	r0, [sp, #12]
40019e24:	e3a00000 	mov	r0, #0
40019e28:	e58d0010 	str	r0, [sp, #16]
40019e2c:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019e30:	e2400001 	sub	r0, r0, #1
40019e34:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
40019e38:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019e3c:	e3500000 	cmp	r0, #0
40019e40:	1a000004 	bne	40019e58 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
40019e44:	e3a00010 	mov	r0, #16
40019e48:	e58d0010 	str	r0, [sp, #16]
40019e4c:	e59d0014 	ldr	r0, [sp, #20]
40019e50:	e3c00010 	bic	r0, r0, #16
40019e54:	e58d0014 	str	r0, [sp, #20]
40019e58:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019e5c:	e58d0000 	str	r0, [sp]
40019e60:	e1a0100d 	mov	r1, sp
40019e64:	e1a00009 	mov	r0, r9
40019e68:	ebffebfe 	bl	40014e68 <CyU3PDmaSocketSetConfig>
40019e6c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019e70:	e28d1024 	add	r1, sp, #36	; 0x24
40019e74:	eb0021af 	bl	40022538 <CyU3PDmaDscrGetConfig>
40019e78:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e7c:	e59f1344 	ldr	r1, [pc, #836]	; 4001a1c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019e80:	e0000001 	and	r0, r0, r1
40019e84:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019e88:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019e8c:	e28d1024 	add	r1, sp, #36	; 0x24
40019e90:	eb0021c3 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40019e94:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019e98:	e3500000 	cmp	r0, #0
40019e9c:	0a000004 	beq	40019eb4 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
40019ea0:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019ea4:	e59f331c 	ldr	r3, [pc, #796]	; 4001a1c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019ea8:	e0021003 	and	r1, r2, r3
40019eac:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019eb0:	ebffe073 	bl	40012084 <CyU3PSysFlushDRegion>
40019eb4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019eb8:	e59f130c 	ldr	r1, [pc, #780]	; 4001a1cc <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019ebc:	e0000001 	and	r0, r0, r1
40019ec0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019ec4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019ec8:	e1a00820 	lsr	r0, r0, #16
40019ecc:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019ed0:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019ed4:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019ed8:	e1a00802 	lsl	r0, r2, #16
40019edc:	e1a00820 	lsr	r0, r0, #16
40019ee0:	e3a02000 	mov	r2, #0
40019ee4:	ebffebcd 	bl	40014e20 <CyU3PDmaSocketSendEvent>
40019ee8:	ebffe2be 	bl	400129e8 <CyU3PSysBarrierSync>
40019eec:	e3160080 	tst	r6, #128	; 0x80
40019ef0:	0a00001c 	beq	40019f68 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019ef4:	e3a08000 	mov	r8, #0
40019ef8:	ea000005 	b	40019f14 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
40019efc:	e2851024 	add	r1, r5, #36	; 0x24
40019f00:	e0811088 	add	r1, r1, r8, lsl #1
40019f04:	e1d100b0 	ldrh	r0, [r1]
40019f08:	ebffeb14 	bl	40014b60 <CyU3PDmaSocketDisable>
40019f0c:	e2880001 	add	r0, r8, #1
40019f10:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019f14:	e1d500ba 	ldrh	r0, [r5, #10]
40019f18:	e1500008 	cmp	r0, r8
40019f1c:	cafffff6 	bgt	40019efc <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
40019f20:	e3a00001 	mov	r0, #1
40019f24:	e5850000 	str	r0, [r5]
40019f28:	e3a02000 	mov	r2, #0
40019f2c:	e3a01001 	mov	r1, #1
40019f30:	e28500b0 	add	r0, r5, #176	; 0xb0
40019f34:	ebffbfc7 	bl	40009e58 <_txe_event_flags_set>
40019f38:	ebffe2aa 	bl	400129e8 <CyU3PSysBarrierSync>
40019f3c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019f40:	e3500000 	cmp	r0, #0
40019f44:	0a000007 	beq	40019f68 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019f48:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019f4c:	e3100001 	tst	r0, #1
40019f50:	0a000004 	beq	40019f68 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019f54:	e3a02000 	mov	r2, #0
40019f58:	e3a01001 	mov	r1, #1
40019f5c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019f60:	e1a00005 	mov	r0, r5
40019f64:	e12fff33 	blx	r3
40019f68:	e3160e12 	tst	r6, #288	; 0x120
40019f6c:	0a000091 	beq	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019f70:	ebffe29c 	bl	400129e8 <CyU3PSysBarrierSync>
40019f74:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019f78:	e3500000 	cmp	r0, #0
40019f7c:	0a00008d 	beq	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019f80:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019f84:	e3100c01 	tst	r0, #256	; 0x100
40019f88:	0a00008a 	beq	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019f8c:	e3a02000 	mov	r2, #0
40019f90:	e3a01c01 	mov	r1, #256	; 0x100
40019f94:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019f98:	e1a00005 	mov	r0, r5
40019f9c:	e12fff33 	blx	r3
40019fa0:	ea000084 	b	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fa4:	e594000c 	ldr	r0, [r4, #12]
40019fa8:	e1a07800 	lsl	r7, r0, #16
40019fac:	e1a07827 	lsr	r7, r7, #16
40019fb0:	e3160001 	tst	r6, #1
40019fb4:	0a000048 	beq	4001a0dc <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
40019fb8:	e5950000 	ldr	r0, [r5]
40019fbc:	e3500004 	cmp	r0, #4
40019fc0:	0a00007c 	beq	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fc4:	e3a08000 	mov	r8, #0
40019fc8:	ea000007 	b	40019fec <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
40019fcc:	e2850024 	add	r0, r5, #36	; 0x24
40019fd0:	e0800088 	add	r0, r0, r8, lsl #1
40019fd4:	e1d000b0 	ldrh	r0, [r0]
40019fd8:	e1500009 	cmp	r0, r9
40019fdc:	1a000000 	bne	40019fe4 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
40019fe0:	ea000004 	b	40019ff8 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
40019fe4:	e2880001 	add	r0, r8, #1
40019fe8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019fec:	e1d500ba 	ldrh	r0, [r5, #10]
40019ff0:	e1500008 	cmp	r0, r8
40019ff4:	cafffff4 	bgt	40019fcc <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
40019ff8:	e1a00000 	nop			; (mov r0, r0)
40019ffc:	e1a00000 	nop			; (mov r0, r0)
4001a000:	e285103e 	add	r1, r5, #62	; 0x3e
4001a004:	e0811088 	add	r1, r1, r8, lsl #1
4001a008:	e1d100b0 	ldrh	r0, [r1]
4001a00c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a010:	eb002148 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a014:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a018:	e58d0018 	str	r0, [sp, #24]
4001a01c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a020:	e59f119c 	ldr	r1, [pc, #412]	; 4001a1c4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a024:	e0010820 	and	r0, r1, r0, lsr #16
4001a028:	e1cd01bc 	strh	r0, [sp, #28]
4001a02c:	e241100f 	sub	r1, r1, #15
4001a030:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a034:	e0000001 	and	r0, r0, r1
4001a038:	e1cd01be 	strh	r0, [sp, #30]
4001a03c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a040:	e200000f 	and	r0, r0, #15
4001a044:	e1cd02b0 	strh	r0, [sp, #32]
4001a048:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a04c:	e3500000 	cmp	r0, #0
4001a050:	0a000002 	beq	4001a060 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a054:	e1dd11be 	ldrh	r1, [sp, #30]
4001a058:	e59d0018 	ldr	r0, [sp, #24]
4001a05c:	ebffe008 	bl	40012084 <CyU3PSysFlushDRegion>
4001a060:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a064:	e3100008 	tst	r0, #8
4001a068:	0a000003 	beq	4001a07c <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a06c:	e3a02000 	mov	r2, #0
4001a070:	e3a01008 	mov	r1, #8
4001a074:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a078:	ebffbf76 	bl	40009e58 <_txe_event_flags_set>
4001a07c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a080:	e59f113c 	ldr	r1, [pc, #316]	; 4001a1c4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a084:	e0010820 	and	r0, r1, r0, lsr #16
4001a088:	e285103e 	add	r1, r5, #62	; 0x3e
4001a08c:	e0811088 	add	r1, r1, r8, lsl #1
4001a090:	e1c100b0 	strh	r0, [r1]
4001a094:	ebffe253 	bl	400129e8 <CyU3PSysBarrierSync>
4001a098:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a09c:	e3500000 	cmp	r0, #0
4001a0a0:	0a000007 	beq	4001a0c4 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a0a4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a0a8:	e3100008 	tst	r0, #8
4001a0ac:	0a000004 	beq	4001a0c4 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a0b0:	e28d2018 	add	r2, sp, #24
4001a0b4:	e3a01008 	mov	r1, #8
4001a0b8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a0bc:	e1a00005 	mov	r0, r5
4001a0c0:	e12fff33 	blx	r3
4001a0c4:	e285003e 	add	r0, r5, #62	; 0x3e
4001a0c8:	e0800088 	add	r0, r0, r8, lsl #1
4001a0cc:	e1d000b0 	ldrh	r0, [r0]
4001a0d0:	e1500007 	cmp	r0, r7
4001a0d4:	1affffc9 	bne	4001a000 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a0d8:	ea000036 	b	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a0dc:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a0e0:	e28d1024 	add	r1, sp, #36	; 0x24
4001a0e4:	eb002113 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a0e8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a0ec:	e58d0018 	str	r0, [sp, #24]
4001a0f0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a0f4:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a1c4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a0f8:	e0010820 	and	r0, r1, r0, lsr #16
4001a0fc:	e1cd01bc 	strh	r0, [sp, #28]
4001a100:	e241100f 	sub	r1, r1, #15
4001a104:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a108:	e0000001 	and	r0, r0, r1
4001a10c:	e1cd01be 	strh	r0, [sp, #30]
4001a110:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a114:	e200000f 	and	r0, r0, #15
4001a118:	e1cd02b0 	strh	r0, [sp, #32]
4001a11c:	e3a00001 	mov	r0, #1
4001a120:	e5850000 	str	r0, [r5]
4001a124:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a128:	e3500000 	cmp	r0, #0
4001a12c:	0a000002 	beq	4001a13c <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a130:	e1dd11be 	ldrh	r1, [sp, #30]
4001a134:	e59d0018 	ldr	r0, [sp, #24]
4001a138:	ebffdfd1 	bl	40012084 <CyU3PSysFlushDRegion>
4001a13c:	e1d500b4 	ldrh	r0, [r5, #4]
4001a140:	e3500005 	cmp	r0, #5
4001a144:	1a00000a 	bne	4001a174 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a148:	e1a0100d 	mov	r1, sp
4001a14c:	e1a00009 	mov	r0, r9
4001a150:	ebffea9a 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001a154:	e3a00000 	mov	r0, #0
4001a158:	e58d0010 	str	r0, [sp, #16]
4001a15c:	e59d0014 	ldr	r0, [sp, #20]
4001a160:	e3c00001 	bic	r0, r0, #1
4001a164:	e58d0014 	str	r0, [sp, #20]
4001a168:	e1a0100d 	mov	r1, sp
4001a16c:	e1a00009 	mov	r0, r9
4001a170:	ebffeb3c 	bl	40014e68 <CyU3PDmaSocketSetConfig>
4001a174:	e3a02000 	mov	r2, #0
4001a178:	e3a01004 	mov	r1, #4
4001a17c:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a180:	ebffbf34 	bl	40009e58 <_txe_event_flags_set>
4001a184:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a188:	ebffe216 	bl	400129e8 <CyU3PSysBarrierSync>
4001a18c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a190:	e3500000 	cmp	r0, #0
4001a194:	0a000007 	beq	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a198:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a19c:	e3100004 	tst	r0, #4
4001a1a0:	0a000004 	beq	4001a1b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a1a4:	e28d2018 	add	r2, sp, #24
4001a1a8:	e3a01004 	mov	r1, #4
4001a1ac:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a1b0:	e1a00005 	mov	r0, r5
4001a1b4:	e12fff33 	blx	r3
4001a1b8:	e2850078 	add	r0, r5, #120	; 0x78
4001a1bc:	ebffbff2 	bl	4000a18c <_txe_mutex_put>
4001a1c0:	eafffe93 	b	40019c14 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a1c4:	0000ffff 	.word	0x0000ffff
4001a1c8:	0000fff0 	.word	0x0000fff0
4001a1cc:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a1d0 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a1d0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a1d4:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a1d8:	e1a04000 	mov	r4, r0
4001a1dc:	e594a004 	ldr	sl, [r4, #4]
4001a1e0:	e5940000 	ldr	r0, [r4]
4001a1e4:	e59f1664 	ldr	r1, [pc, #1636]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a1e8:	e0016820 	and	r6, r1, r0, lsr #16
4001a1ec:	e5945008 	ldr	r5, [r4, #8]
4001a1f0:	e3150040 	tst	r5, #64	; 0x40
4001a1f4:	0a000003 	beq	4001a208 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a1f8:	e1a0000a 	mov	r0, sl
4001a1fc:	eb0001c2 	bl	4001a90c <CyU3PDmaMultiChannelHandleError>
4001a200:	e28dd038 	add	sp, sp, #56	; 0x38
4001a204:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a208:	e3e01000 	mvn	r1, #0
4001a20c:	e28a0078 	add	r0, sl, #120	; 0x78
4001a210:	ebffbfa8 	bl	4000a0b8 <_txe_mutex_get>
4001a214:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a218:	e1500006 	cmp	r0, r6
4001a21c:	0a0000fc 	beq	4001a614 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a220:	e594000c 	ldr	r0, [r4, #12]
4001a224:	e1a09800 	lsl	r9, r0, #16
4001a228:	e1a09829 	lsr	r9, r9, #16
4001a22c:	e3a08000 	mov	r8, #0
4001a230:	ea000007 	b	4001a254 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a234:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a238:	e0800088 	add	r0, r0, r8, lsl #1
4001a23c:	e1d000b0 	ldrh	r0, [r0]
4001a240:	e1500006 	cmp	r0, r6
4001a244:	1a000000 	bne	4001a24c <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a248:	ea000004 	b	4001a260 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a24c:	e2880001 	add	r0, r8, #1
4001a250:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a254:	e1da00ba 	ldrh	r0, [sl, #10]
4001a258:	e1500008 	cmp	r0, r8
4001a25c:	cafffff4 	bgt	4001a234 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a260:	e1a00000 	nop			; (mov r0, r0)
4001a264:	e3150002 	tst	r5, #2
4001a268:	0a00007e 	beq	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a26c:	e59a0000 	ldr	r0, [sl]
4001a270:	e3500003 	cmp	r0, #3
4001a274:	0a00005a 	beq	4001a3e4 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a278:	e1a00000 	nop			; (mov r0, r0)
4001a27c:	e28a1046 	add	r1, sl, #70	; 0x46
4001a280:	e0811088 	add	r1, r1, r8, lsl #1
4001a284:	e1d100b0 	ldrh	r0, [r1]
4001a288:	e28d1028 	add	r1, sp, #40	; 0x28
4001a28c:	eb0020a9 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a290:	e28a1046 	add	r1, sl, #70	; 0x46
4001a294:	e0811088 	add	r1, r1, r8, lsl #1
4001a298:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a29c:	e1c100b0 	strh	r0, [r1]
4001a2a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a2a4:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a2a8:	e0017820 	and	r7, r1, r0, lsr #16
4001a2ac:	e28d1028 	add	r1, sp, #40	; 0x28
4001a2b0:	e1a00007 	mov	r0, r7
4001a2b4:	eb00209f 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a2b8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a2bc:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a854 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a2c0:	e0000001 	and	r0, r0, r1
4001a2c4:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a2c8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a2cc:	e1a00007 	mov	r0, r7
4001a2d0:	eb0020b3 	bl	400225a4 <CyU3PDmaDscrSetConfig>
4001a2d4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a2d8:	e3a02000 	mov	r2, #0
4001a2dc:	e1a01007 	mov	r1, r7
4001a2e0:	ebffeace 	bl	40014e20 <CyU3PDmaSocketSendEvent>
4001a2e4:	ebffe1bf 	bl	400129e8 <CyU3PSysBarrierSync>
4001a2e8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a2ec:	e3500000 	cmp	r0, #0
4001a2f0:	0a000007 	beq	4001a314 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a2f4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a2f8:	e3100010 	tst	r0, #16
4001a2fc:	0a000004 	beq	4001a314 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a300:	e3a02000 	mov	r2, #0
4001a304:	e3a01010 	mov	r1, #16
4001a308:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a30c:	e1a0000a 	mov	r0, sl
4001a310:	e12fff33 	blx	r3
4001a314:	e28a0046 	add	r0, sl, #70	; 0x46
4001a318:	e0800088 	add	r0, r0, r8, lsl #1
4001a31c:	e1d000b0 	ldrh	r0, [r0]
4001a320:	e1500009 	cmp	r0, r9
4001a324:	1affffd4 	bne	4001a27c <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a328:	e59a0000 	ldr	r0, [sl]
4001a32c:	e3500006 	cmp	r0, #6
4001a330:	1a00004c 	bne	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a334:	e1da00b8 	ldrh	r0, [sl, #8]
4001a338:	e1da10ba 	ldrh	r1, [sl, #10]
4001a33c:	e0000091 	mul	r0, r1, r0
4001a340:	e1a08800 	lsl	r8, r0, #16
4001a344:	e1a08828 	lsr	r8, r8, #16
4001a348:	e1da71b4 	ldrh	r7, [sl, #20]
4001a34c:	ea00000c 	b	4001a384 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a350:	e28d1028 	add	r1, sp, #40	; 0x28
4001a354:	e1a00007 	mov	r0, r7
4001a358:	eb002076 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a35c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a360:	e3100008 	tst	r0, #8
4001a364:	0a000000 	beq	4001a36c <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a368:	ea000007 	b	4001a38c <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a36c:	e2480001 	sub	r0, r8, #1
4001a370:	e1a08800 	lsl	r8, r0, #16
4001a374:	e1a08828 	lsr	r8, r8, #16
4001a378:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a37c:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a380:	e0017820 	and	r7, r1, r0, lsr #16
4001a384:	e3580000 	cmp	r8, #0
4001a388:	1afffff0 	bne	4001a350 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a38c:	e1a00000 	nop			; (mov r0, r0)
4001a390:	e3580000 	cmp	r8, #0
4001a394:	1a000033 	bne	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a398:	e3a00001 	mov	r0, #1
4001a39c:	e58a0000 	str	r0, [sl]
4001a3a0:	e3a02000 	mov	r2, #0
4001a3a4:	e3a01001 	mov	r1, #1
4001a3a8:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a3ac:	ebffbea9 	bl	40009e58 <_txe_event_flags_set>
4001a3b0:	ebffe18c 	bl	400129e8 <CyU3PSysBarrierSync>
4001a3b4:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a3b8:	e3500000 	cmp	r0, #0
4001a3bc:	0a000029 	beq	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a3c0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a3c4:	e3100001 	tst	r0, #1
4001a3c8:	0a000026 	beq	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a3cc:	e3a02000 	mov	r2, #0
4001a3d0:	e3a01001 	mov	r1, #1
4001a3d4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a3d8:	e1a0000a 	mov	r0, sl
4001a3dc:	e12fff33 	blx	r3
4001a3e0:	ea000020 	b	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a3e4:	e3a00001 	mov	r0, #1
4001a3e8:	e58a0000 	str	r0, [sl]
4001a3ec:	e1da00b4 	ldrh	r0, [sl, #4]
4001a3f0:	e3500006 	cmp	r0, #6
4001a3f4:	1a00000a 	bne	4001a424 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a3f8:	e28d1004 	add	r1, sp, #4
4001a3fc:	e1a00006 	mov	r0, r6
4001a400:	ebffe9ee 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001a404:	e3a00000 	mov	r0, #0
4001a408:	e58d0014 	str	r0, [sp, #20]
4001a40c:	e59d0018 	ldr	r0, [sp, #24]
4001a410:	e3c00002 	bic	r0, r0, #2
4001a414:	e58d0018 	str	r0, [sp, #24]
4001a418:	e28d1004 	add	r1, sp, #4
4001a41c:	e1a00006 	mov	r0, r6
4001a420:	ebffea90 	bl	40014e68 <CyU3PDmaSocketSetConfig>
4001a424:	e3a02000 	mov	r2, #0
4001a428:	e3a01002 	mov	r1, #2
4001a42c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a430:	ebffbe88 	bl	40009e58 <_txe_event_flags_set>
4001a434:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a438:	ebffe16a 	bl	400129e8 <CyU3PSysBarrierSync>
4001a43c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a440:	e3500000 	cmp	r0, #0
4001a444:	0a000007 	beq	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a448:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a44c:	e3100002 	tst	r0, #2
4001a450:	0a000004 	beq	4001a468 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a454:	e3a02000 	mov	r2, #0
4001a458:	e3a01002 	mov	r1, #2
4001a45c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a460:	e1a0000a 	mov	r0, sl
4001a464:	e12fff33 	blx	r3
4001a468:	e3150010 	tst	r5, #16
4001a46c:	0a000059 	beq	4001a5d8 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a470:	e28a1046 	add	r1, sl, #70	; 0x46
4001a474:	e0811088 	add	r1, r1, r8, lsl #1
4001a478:	e1d100b0 	ldrh	r0, [r1]
4001a47c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a480:	eb00202c 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a484:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a488:	e3100001 	tst	r0, #1
4001a48c:	0a000051 	beq	4001a5d8 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a490:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a494:	e0811088 	add	r1, r1, r8, lsl #1
4001a498:	e1d100b0 	ldrh	r0, [r1]
4001a49c:	ebffe9af 	bl	40014b60 <CyU3PDmaSocketDisable>
4001a4a0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a4a4:	e59f13a8 	ldr	r1, [pc, #936]	; 4001a854 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a4a8:	e0000001 	and	r0, r0, r1
4001a4ac:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a4b0:	e28a1046 	add	r1, sl, #70	; 0x46
4001a4b4:	e0811088 	add	r1, r1, r8, lsl #1
4001a4b8:	e1d100b0 	ldrh	r0, [r1]
4001a4bc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a4c0:	eb002037 	bl	400225a4 <CyU3PDmaDscrSetConfig>
4001a4c4:	e28a1046 	add	r1, sl, #70	; 0x46
4001a4c8:	e0811088 	add	r1, r1, r8, lsl #1
4001a4cc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a4d0:	e1c100b0 	strh	r0, [r1]
4001a4d4:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a4d8:	e0811088 	add	r1, r1, r8, lsl #1
4001a4dc:	e1d100b0 	ldrh	r0, [r1]
4001a4e0:	e28d1004 	add	r1, sp, #4
4001a4e4:	ebffe9b5 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001a4e8:	e59d0010 	ldr	r0, [sp, #16]
4001a4ec:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a4f0:	e58d0010 	str	r0, [sp, #16]
4001a4f4:	e59d0010 	ldr	r0, [sp, #16]
4001a4f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a4fc:	e58d0010 	str	r0, [sp, #16]
4001a500:	e3a00000 	mov	r0, #0
4001a504:	e58d0014 	str	r0, [sp, #20]
4001a508:	e28a0064 	add	r0, sl, #100	; 0x64
4001a50c:	e0800088 	add	r0, r0, r8, lsl #1
4001a510:	e1d000b0 	ldrh	r0, [r0]
4001a514:	e2400001 	sub	r0, r0, #1
4001a518:	e28a1064 	add	r1, sl, #100	; 0x64
4001a51c:	e0811088 	add	r1, r1, r8, lsl #1
4001a520:	e1c100b0 	strh	r0, [r1]
4001a524:	e28a0064 	add	r0, sl, #100	; 0x64
4001a528:	e0800088 	add	r0, r0, r8, lsl #1
4001a52c:	e1d000b0 	ldrh	r0, [r0]
4001a530:	e3500000 	cmp	r0, #0
4001a534:	1a000004 	bne	4001a54c <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a538:	e3a00010 	mov	r0, #16
4001a53c:	e58d0014 	str	r0, [sp, #20]
4001a540:	e59d0018 	ldr	r0, [sp, #24]
4001a544:	e3c00010 	bic	r0, r0, #16
4001a548:	e58d0018 	str	r0, [sp, #24]
4001a54c:	e28a0046 	add	r0, sl, #70	; 0x46
4001a550:	e0800088 	add	r0, r0, r8, lsl #1
4001a554:	e1d000b0 	ldrh	r0, [r0]
4001a558:	e58d0004 	str	r0, [sp, #4]
4001a55c:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a560:	e0811088 	add	r1, r1, r8, lsl #1
4001a564:	e1d100b0 	ldrh	r0, [r1]
4001a568:	e28d1004 	add	r1, sp, #4
4001a56c:	ebffea3d 	bl	40014e68 <CyU3PDmaSocketSetConfig>
4001a570:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a574:	e59f12d4 	ldr	r1, [pc, #724]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a578:	e0017820 	and	r7, r1, r0, lsr #16
4001a57c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a580:	e1a00007 	mov	r0, r7
4001a584:	eb001feb 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a588:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a58c:	e59f12c0 	ldr	r1, [pc, #704]	; 4001a854 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a590:	e0000001 	and	r0, r0, r1
4001a594:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a598:	e28d1028 	add	r1, sp, #40	; 0x28
4001a59c:	e1a00007 	mov	r0, r7
4001a5a0:	eb001fff 	bl	400225a4 <CyU3PDmaDscrSetConfig>
4001a5a4:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a5a8:	e3500000 	cmp	r0, #0
4001a5ac:	0a000004 	beq	4001a5c4 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a5b0:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a5b4:	e59f3298 	ldr	r3, [pc, #664]	; 4001a854 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a5b8:	e0021003 	and	r1, r2, r3
4001a5bc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a5c0:	ebffdeaf 	bl	40012084 <CyU3PSysFlushDRegion>
4001a5c4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a5c8:	e3a02000 	mov	r2, #0
4001a5cc:	e1a01007 	mov	r1, r7
4001a5d0:	ebffea12 	bl	40014e20 <CyU3PDmaSocketSendEvent>
4001a5d4:	ebffe103 	bl	400129e8 <CyU3PSysBarrierSync>
4001a5d8:	e3150020 	tst	r5, #32
4001a5dc:	0a000098 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a5e0:	ebffe100 	bl	400129e8 <CyU3PSysBarrierSync>
4001a5e4:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a5e8:	e3500000 	cmp	r0, #0
4001a5ec:	0a000094 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a5f0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a5f4:	e3100080 	tst	r0, #128	; 0x80
4001a5f8:	0a000091 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a5fc:	e3a02000 	mov	r2, #0
4001a600:	e3a01080 	mov	r1, #128	; 0x80
4001a604:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a608:	e1a0000a 	mov	r0, sl
4001a60c:	e12fff33 	blx	r3
4001a610:	ea00008b 	b	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a614:	e594000c 	ldr	r0, [r4, #12]
4001a618:	e1a09800 	lsl	r9, r0, #16
4001a61c:	e1a09829 	lsr	r9, r9, #16
4001a620:	e3150001 	tst	r5, #1
4001a624:	0a00006b 	beq	4001a7d8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a628:	e59a0000 	ldr	r0, [sl]
4001a62c:	e3500004 	cmp	r0, #4
4001a630:	0a000031 	beq	4001a6fc <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a634:	e1a00000 	nop			; (mov r0, r0)
4001a638:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a63c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a640:	eb001fbc 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a644:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a648:	e58d001c 	str	r0, [sp, #28]
4001a64c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a650:	e59f11f8 	ldr	r1, [pc, #504]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a654:	e0010820 	and	r0, r1, r0, lsr #16
4001a658:	e1cd02b0 	strh	r0, [sp, #32]
4001a65c:	e241100f 	sub	r1, r1, #15
4001a660:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a664:	e0000001 	and	r0, r0, r1
4001a668:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a66c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a670:	e200000f 	and	r0, r0, #15
4001a674:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a678:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a67c:	e3500000 	cmp	r0, #0
4001a680:	0a000002 	beq	4001a690 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a684:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a688:	e59d001c 	ldr	r0, [sp, #28]
4001a68c:	ebffde7c 	bl	40012084 <CyU3PSysFlushDRegion>
4001a690:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a694:	e3100008 	tst	r0, #8
4001a698:	0a000003 	beq	4001a6ac <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a69c:	e3a02000 	mov	r2, #0
4001a6a0:	e3a01008 	mov	r1, #8
4001a6a4:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a6a8:	ebffbdea 	bl	40009e58 <_txe_event_flags_set>
4001a6ac:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a6b0:	e59f1198 	ldr	r1, [pc, #408]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a6b4:	e0010820 	and	r0, r1, r0, lsr #16
4001a6b8:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a6bc:	ebffe0c9 	bl	400129e8 <CyU3PSysBarrierSync>
4001a6c0:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a6c4:	e3500000 	cmp	r0, #0
4001a6c8:	0a000007 	beq	4001a6ec <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a6cc:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a6d0:	e3100008 	tst	r0, #8
4001a6d4:	0a000004 	beq	4001a6ec <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a6d8:	e28d201c 	add	r2, sp, #28
4001a6dc:	e3a01008 	mov	r1, #8
4001a6e0:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a6e4:	e1a0000a 	mov	r0, sl
4001a6e8:	e12fff33 	blx	r3
4001a6ec:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a6f0:	e1500009 	cmp	r0, r9
4001a6f4:	1affffcf 	bne	4001a638 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a6f8:	ea000036 	b	4001a7d8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a6fc:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a700:	e28d1028 	add	r1, sp, #40	; 0x28
4001a704:	eb001f8b 	bl	40022538 <CyU3PDmaDscrGetConfig>
4001a708:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a70c:	e58d001c 	str	r0, [sp, #28]
4001a710:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a714:	e59f1134 	ldr	r1, [pc, #308]	; 4001a850 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a718:	e0010820 	and	r0, r1, r0, lsr #16
4001a71c:	e1cd02b0 	strh	r0, [sp, #32]
4001a720:	e241100f 	sub	r1, r1, #15
4001a724:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a728:	e0000001 	and	r0, r0, r1
4001a72c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a730:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a734:	e200000f 	and	r0, r0, #15
4001a738:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a73c:	e3a00001 	mov	r0, #1
4001a740:	e58a0000 	str	r0, [sl]
4001a744:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a748:	e3500000 	cmp	r0, #0
4001a74c:	0a000002 	beq	4001a75c <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a750:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a754:	e59d001c 	ldr	r0, [sp, #28]
4001a758:	ebffde49 	bl	40012084 <CyU3PSysFlushDRegion>
4001a75c:	e1da00b4 	ldrh	r0, [sl, #4]
4001a760:	e3500006 	cmp	r0, #6
4001a764:	1a00000a 	bne	4001a794 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a768:	e28d1004 	add	r1, sp, #4
4001a76c:	e1a00006 	mov	r0, r6
4001a770:	ebffe912 	bl	40014bc0 <CyU3PDmaSocketGetConfig>
4001a774:	e3a00000 	mov	r0, #0
4001a778:	e58d0014 	str	r0, [sp, #20]
4001a77c:	e59d0018 	ldr	r0, [sp, #24]
4001a780:	e3c00001 	bic	r0, r0, #1
4001a784:	e58d0018 	str	r0, [sp, #24]
4001a788:	e28d1004 	add	r1, sp, #4
4001a78c:	e1a00006 	mov	r0, r6
4001a790:	ebffe9b4 	bl	40014e68 <CyU3PDmaSocketSetConfig>
4001a794:	e3a02000 	mov	r2, #0
4001a798:	e3a01004 	mov	r1, #4
4001a79c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a7a0:	ebffbdac 	bl	40009e58 <_txe_event_flags_set>
4001a7a4:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a7a8:	ebffe08e 	bl	400129e8 <CyU3PSysBarrierSync>
4001a7ac:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a7b0:	e3500000 	cmp	r0, #0
4001a7b4:	0a000007 	beq	4001a7d8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a7b8:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a7bc:	e3100004 	tst	r0, #4
4001a7c0:	0a000004 	beq	4001a7d8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a7c4:	e28d201c 	add	r2, sp, #28
4001a7c8:	e3a01004 	mov	r1, #4
4001a7cc:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a7d0:	e1a0000a 	mov	r0, sl
4001a7d4:	e12fff33 	blx	r3
4001a7d8:	e3150080 	tst	r5, #128	; 0x80
4001a7dc:	0a000018 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a7e0:	e1da00b4 	ldrh	r0, [sl, #4]
4001a7e4:	e3500006 	cmp	r0, #6
4001a7e8:	1a000012 	bne	4001a838 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a7ec:	e3a00001 	mov	r0, #1
4001a7f0:	e58a0000 	str	r0, [sl]
4001a7f4:	e3a02000 	mov	r2, #0
4001a7f8:	e3a01001 	mov	r1, #1
4001a7fc:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a800:	ebffbd94 	bl	40009e58 <_txe_event_flags_set>
4001a804:	ebffe077 	bl	400129e8 <CyU3PSysBarrierSync>
4001a808:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a80c:	e3500000 	cmp	r0, #0
4001a810:	0a00000b 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a814:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a818:	e3100001 	tst	r0, #1
4001a81c:	0a000008 	beq	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a820:	e3a02000 	mov	r2, #0
4001a824:	e3a01001 	mov	r1, #1
4001a828:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a82c:	e1a0000a 	mov	r0, sl
4001a830:	e12fff33 	blx	r3
4001a834:	ea000002 	b	4001a844 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a838:	e3a00006 	mov	r0, #6
4001a83c:	e58a0000 	str	r0, [sl]
4001a840:	ebffe068 	bl	400129e8 <CyU3PSysBarrierSync>
4001a844:	e28a0078 	add	r0, sl, #120	; 0x78
4001a848:	ebffbe4f 	bl	4000a18c <_txe_mutex_put>
4001a84c:	eafffe6b 	b	4001a200 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001a850:	0000ffff 	.word	0x0000ffff
4001a854:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001a858 <CyU3PDmaIsSockAvlEnReqd>:
4001a858:	e1a01000 	mov	r1, r0
4001a85c:	e3a0003f 	mov	r0, #63	; 0x3f
4001a860:	e0000441 	and	r0, r0, r1, asr #8
4001a864:	e3500003 	cmp	r0, #3
4001a868:	1a000004 	bne	4001a880 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001a86c:	e3a00001 	mov	r0, #1
4001a870:	e59f203c 	ldr	r2, [pc, #60]	; 4001a8b4 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001a874:	e1d220b0 	ldrh	r2, [r2]
4001a878:	e1120110 	tst	r2, r0, lsl r1
4001a87c:	1a000008 	bne	4001a8a4 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001a880:	e3a0003f 	mov	r0, #63	; 0x3f
4001a884:	e0000441 	and	r0, r0, r1, asr #8
4001a888:	e3500004 	cmp	r0, #4
4001a88c:	1a000006 	bne	4001a8ac <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a890:	e3a00001 	mov	r0, #1
4001a894:	e59f201c 	ldr	r2, [pc, #28]	; 4001a8b8 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001a898:	e1d220b0 	ldrh	r2, [r2]
4001a89c:	e1120110 	tst	r2, r0, lsl r1
4001a8a0:	0a000001 	beq	4001a8ac <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a8a4:	e3a00001 	mov	r0, #1
4001a8a8:	e12fff1e 	bx	lr
4001a8ac:	e3a00000 	mov	r0, #0
4001a8b0:	eafffffc 	b	4001a8a8 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001a8b4:	40030d18 	.word	0x40030d18
4001a8b8:	40030d1a 	.word	0x40030d1a

Disassembly of section i.CyU3PDmaMsgSend:

4001a8bc <CyU3PDmaMsgSend>:
4001a8bc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a8c0:	e1a04000 	mov	r4, r0
4001a8c4:	e1a05001 	mov	r5, r1
4001a8c8:	e1a07002 	mov	r7, r2
4001a8cc:	e3570001 	cmp	r7, #1
4001a8d0:	1a000005 	bne	4001a8ec <CyU3PDmaMsgSend+0x30>
4001a8d4:	e1a02005 	mov	r2, r5
4001a8d8:	e1a01004 	mov	r1, r4
4001a8dc:	e59f0024 	ldr	r0, [pc, #36]	; 4001a908 <CyU3PDmaMsgSend+0x4c>
4001a8e0:	ebffbebf 	bl	4000a3e4 <_txe_queue_front_send>
4001a8e4:	e1a06000 	mov	r6, r0
4001a8e8:	ea000004 	b	4001a900 <CyU3PDmaMsgSend+0x44>
4001a8ec:	e1a02005 	mov	r2, r5
4001a8f0:	e1a01004 	mov	r1, r4
4001a8f4:	e59f000c 	ldr	r0, [pc, #12]	; 4001a908 <CyU3PDmaMsgSend+0x4c>
4001a8f8:	ebffbf09 	bl	4000a524 <_txe_queue_send>
4001a8fc:	e1a06000 	mov	r6, r0
4001a900:	e1a00006 	mov	r0, r6
4001a904:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a908:	40031930 	.word	0x40031930

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001a90c <CyU3PDmaMultiChannelHandleError>:
4001a90c:	e92d4070 	push	{r4, r5, r6, lr}
4001a910:	e1a04000 	mov	r4, r0
4001a914:	e3e01000 	mvn	r1, #0
4001a918:	e2840078 	add	r0, r4, #120	; 0x78
4001a91c:	ebffbde5 	bl	4000a0b8 <_txe_mutex_get>
4001a920:	e1d400b4 	ldrh	r0, [r4, #4]
4001a924:	e3500005 	cmp	r0, #5
4001a928:	0a000002 	beq	4001a938 <CyU3PDmaMultiChannelHandleError+0x2c>
4001a92c:	e1d400b4 	ldrh	r0, [r4, #4]
4001a930:	e3500007 	cmp	r0, #7
4001a934:	1a00000d 	bne	4001a970 <CyU3PDmaMultiChannelHandleError+0x64>
4001a938:	e3a05000 	mov	r5, #0
4001a93c:	ea000005 	b	4001a958 <CyU3PDmaMultiChannelHandleError+0x4c>
4001a940:	e2841024 	add	r1, r4, #36	; 0x24
4001a944:	e0811085 	add	r1, r1, r5, lsl #1
4001a948:	e1d100b0 	ldrh	r0, [r1]
4001a94c:	ebffe883 	bl	40014b60 <CyU3PDmaSocketDisable>
4001a950:	e2850001 	add	r0, r5, #1
4001a954:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a958:	e1d400ba 	ldrh	r0, [r4, #10]
4001a95c:	e1500005 	cmp	r0, r5
4001a960:	cafffff6 	bgt	4001a940 <CyU3PDmaMultiChannelHandleError+0x34>
4001a964:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001a968:	ebffe87c 	bl	40014b60 <CyU3PDmaSocketDisable>
4001a96c:	ea00000c 	b	4001a9a4 <CyU3PDmaMultiChannelHandleError+0x98>
4001a970:	e3a05000 	mov	r5, #0
4001a974:	ea000005 	b	4001a990 <CyU3PDmaMultiChannelHandleError+0x84>
4001a978:	e284102c 	add	r1, r4, #44	; 0x2c
4001a97c:	e0811085 	add	r1, r1, r5, lsl #1
4001a980:	e1d100b0 	ldrh	r0, [r1]
4001a984:	ebffe875 	bl	40014b60 <CyU3PDmaSocketDisable>
4001a988:	e2850001 	add	r0, r5, #1
4001a98c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a990:	e1d400ba 	ldrh	r0, [r4, #10]
4001a994:	e1500005 	cmp	r0, r5
4001a998:	cafffff6 	bgt	4001a978 <CyU3PDmaMultiChannelHandleError+0x6c>
4001a99c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001a9a0:	ebffe86e 	bl	40014b60 <CyU3PDmaSocketDisable>
4001a9a4:	e3a02002 	mov	r2, #2
4001a9a8:	e3e01007 	mvn	r1, #7
4001a9ac:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a9b0:	ebffbd28 	bl	40009e58 <_txe_event_flags_set>
4001a9b4:	e3a02000 	mov	r2, #0
4001a9b8:	e3a01040 	mov	r1, #64	; 0x40
4001a9bc:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a9c0:	ebffbd24 	bl	40009e58 <_txe_event_flags_set>
4001a9c4:	e3a00005 	mov	r0, #5
4001a9c8:	e5840000 	str	r0, [r4]
4001a9cc:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001a9d0:	e3500000 	cmp	r0, #0
4001a9d4:	0a000007 	beq	4001a9f8 <CyU3PDmaMultiChannelHandleError+0xec>
4001a9d8:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001a9dc:	e3100040 	tst	r0, #64	; 0x40
4001a9e0:	0a000004 	beq	4001a9f8 <CyU3PDmaMultiChannelHandleError+0xec>
4001a9e4:	e3a02000 	mov	r2, #0
4001a9e8:	e3a01040 	mov	r1, #64	; 0x40
4001a9ec:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001a9f0:	e1a00004 	mov	r0, r4
4001a9f4:	e12fff33 	blx	r3
4001a9f8:	e2840078 	add	r0, r4, #120	; 0x78
4001a9fc:	ebffbde2 	bl	4000a18c <_txe_mutex_put>
4001aa00:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001aa04 <CyU3PDmaThreadEntry>:
4001aa04:	e92d4070 	push	{r4, r5, r6, lr}
4001aa08:	e24dd040 	sub	sp, sp, #64	; 0x40
4001aa0c:	ea00003f 	b	4001ab10 <CyU3PDmaThreadEntry+0x10c>
4001aa10:	e3e02000 	mvn	r2, #0
4001aa14:	e1a0100d 	mov	r1, sp
4001aa18:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ab14 <CyU3PDmaThreadEntry+0x110>
4001aa1c:	ebffbe98 	bl	4000a484 <_txe_queue_receive>
4001aa20:	e1a05000 	mov	r5, r0
4001aa24:	e3550000 	cmp	r5, #0
4001aa28:	0a000000 	beq	4001aa30 <CyU3PDmaThreadEntry+0x2c>
4001aa2c:	ea000037 	b	4001ab10 <CyU3PDmaThreadEntry+0x10c>
4001aa30:	e59d0000 	ldr	r0, [sp]
4001aa34:	e20040ff 	and	r4, r0, #255	; 0xff
4001aa38:	e3540000 	cmp	r4, #0
4001aa3c:	0a000000 	beq	4001aa44 <CyU3PDmaThreadEntry+0x40>
4001aa40:	ea000032 	b	4001ab10 <CyU3PDmaThreadEntry+0x10c>
4001aa44:	e59d6004 	ldr	r6, [sp, #4]
4001aa48:	e1d600b4 	ldrh	r0, [r6, #4]
4001aa4c:	e350000a 	cmp	r0, #10
4001aa50:	308ff100 	addcc	pc, pc, r0, lsl #2
4001aa54:	ea000028 	b	4001aafc <CyU3PDmaThreadEntry+0xf8>
4001aa58:	ea000008 	b	4001aa80 <CyU3PDmaThreadEntry+0x7c>
4001aa5c:	ea000009 	b	4001aa88 <CyU3PDmaThreadEntry+0x84>
4001aa60:	ea00000e 	b	4001aaa0 <CyU3PDmaThreadEntry+0x9c>
4001aa64:	ea00000a 	b	4001aa94 <CyU3PDmaThreadEntry+0x90>
4001aa68:	ea00000b 	b	4001aa9c <CyU3PDmaThreadEntry+0x98>
4001aa6c:	ea00000e 	b	4001aaac <CyU3PDmaThreadEntry+0xa8>
4001aa70:	ea000012 	b	4001aac0 <CyU3PDmaThreadEntry+0xbc>
4001aa74:	ea00000e 	b	4001aab4 <CyU3PDmaThreadEntry+0xb0>
4001aa78:	ea000012 	b	4001aac8 <CyU3PDmaThreadEntry+0xc4>
4001aa7c:	ea000014 	b	4001aad4 <CyU3PDmaThreadEntry+0xd0>
4001aa80:	e1a00000 	nop			; (mov r0, r0)
4001aa84:	e1a00000 	nop			; (mov r0, r0)
4001aa88:	e1a0000d 	mov	r0, sp
4001aa8c:	ebfffa18 	bl	400192f4 <CyU3PDmaIntHandler_TypeAuto>
4001aa90:	ea00001b 	b	4001ab04 <CyU3PDmaThreadEntry+0x100>
4001aa94:	e1a00000 	nop			; (mov r0, r0)
4001aa98:	e1a00000 	nop			; (mov r0, r0)
4001aa9c:	e1a00000 	nop			; (mov r0, r0)
4001aaa0:	e1a0000d 	mov	r0, sp
4001aaa4:	ebfffaed 	bl	40019660 <CyU3PDmaIntHandler_TypeManual>
4001aaa8:	ea000015 	b	4001ab04 <CyU3PDmaThreadEntry+0x100>
4001aaac:	e1a00000 	nop			; (mov r0, r0)
4001aab0:	e1a00000 	nop			; (mov r0, r0)
4001aab4:	e1a0000d 	mov	r0, sp
4001aab8:	ebfffc4c 	bl	40019bf0 <CyU3PDmaIntHandler_TypeManyToOne>
4001aabc:	ea000010 	b	4001ab04 <CyU3PDmaThreadEntry+0x100>
4001aac0:	e1a00000 	nop			; (mov r0, r0)
4001aac4:	e1a00000 	nop			; (mov r0, r0)
4001aac8:	e1a0000d 	mov	r0, sp
4001aacc:	ebfffdbf 	bl	4001a1d0 <CyU3PDmaIntHandler_TypeOneToMany>
4001aad0:	ea00000b 	b	4001ab04 <CyU3PDmaThreadEntry+0x100>
4001aad4:	e1a00000 	nop			; (mov r0, r0)
4001aad8:	e59f0038 	ldr	r0, [pc, #56]	; 4001ab18 <CyU3PDmaThreadEntry+0x114>
4001aadc:	e5900000 	ldr	r0, [r0]
4001aae0:	e3500000 	cmp	r0, #0
4001aae4:	0a000003 	beq	4001aaf8 <CyU3PDmaThreadEntry+0xf4>
4001aae8:	e1a0000d 	mov	r0, sp
4001aaec:	e59f1024 	ldr	r1, [pc, #36]	; 4001ab18 <CyU3PDmaThreadEntry+0x114>
4001aaf0:	e5911000 	ldr	r1, [r1]
4001aaf4:	e12fff31 	blx	r1
4001aaf8:	ea000001 	b	4001ab04 <CyU3PDmaThreadEntry+0x100>
4001aafc:	e1a00000 	nop			; (mov r0, r0)
4001ab00:	e1a00000 	nop			; (mov r0, r0)
4001ab04:	e1a00000 	nop			; (mov r0, r0)
4001ab08:	ebffbf8b 	bl	4000a93c <_txe_thread_relinquish>
4001ab0c:	e1a00000 	nop			; (mov r0, r0)
4001ab10:	eaffffbe 	b	4001aa10 <CyU3PDmaThreadEntry+0xc>
4001ab14:	40031930 	.word	0x40031930
4001ab18:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PGpifInit:

4001ab1c <CyU3PGpifInit>:
4001ab1c:	e92d4010 	push	{r4, lr}
4001ab20:	e1a04000 	mov	r4, r0
4001ab24:	e3540000 	cmp	r4, #0
4001ab28:	0a000006 	beq	4001ab48 <CyU3PGpifInit+0x2c>
4001ab2c:	e59f005c 	ldr	r0, [pc, #92]	; 4001ab90 <CyU3PGpifInit+0x74>
4001ab30:	e5900000 	ldr	r0, [r0]
4001ab34:	e1a00800 	lsl	r0, r0, #16
4001ab38:	e1a00820 	lsr	r0, r0, #16
4001ab3c:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001ab40:	e59f1048 	ldr	r1, [pc, #72]	; 4001ab90 <CyU3PGpifInit+0x74>
4001ab44:	e5810000 	str	r0, [r1]
4001ab48:	e3e00000 	mvn	r0, #0
4001ab4c:	e59f1040 	ldr	r1, [pc, #64]	; 4001ab94 <CyU3PGpifInit+0x78>
4001ab50:	e5810014 	str	r0, [r1, #20]
4001ab54:	e3a00000 	mov	r0, #0
4001ab58:	e5810018 	str	r0, [r1, #24]
4001ab5c:	e3a00e11 	mov	r0, #272	; 0x110
4001ab60:	e1c11300 	bic	r1, r1, r0, lsl #6
4001ab64:	e5810008 	str	r0, [r1, #8]
4001ab68:	ebffdf9e 	bl	400129e8 <CyU3PSysBarrierSync>
4001ab6c:	e59f001c 	ldr	r0, [pc, #28]	; 4001ab90 <CyU3PGpifInit+0x74>
4001ab70:	e5900000 	ldr	r0, [r0]
4001ab74:	e1a00800 	lsl	r0, r0, #16
4001ab78:	e1a00820 	lsr	r0, r0, #16
4001ab7c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001ab80:	e59f1008 	ldr	r1, [pc, #8]	; 4001ab90 <CyU3PGpifInit+0x74>
4001ab84:	e5810000 	str	r0, [r1]
4001ab88:	e3a00000 	mov	r0, #0
4001ab8c:	e8bd8010 	pop	{r4, pc}
4001ab90:	e0010000 	.word	0xe0010000
4001ab94:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001ab98 <CyU3PPibApplicationDefine>:
4001ab98:	e92d4010 	push	{r4, lr}
4001ab9c:	e24dd020 	sub	sp, sp, #32
4001aba0:	e3a00000 	mov	r0, #0
4001aba4:	e59f10dc 	ldr	r1, [pc, #220]	; 4001ac88 <CyU3PPibApplicationDefine+0xf0>
4001aba8:	e5810000 	str	r0, [r1]
4001abac:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ac8c <CyU3PPibApplicationDefine+0xf4>
4001abb0:	e5810000 	str	r0, [r1]
4001abb4:	e59f10d4 	ldr	r1, [pc, #212]	; 4001ac90 <CyU3PPibApplicationDefine+0xf8>
4001abb8:	e5810000 	str	r0, [r1]
4001abbc:	e59f10d0 	ldr	r1, [pc, #208]	; 4001ac94 <CyU3PPibApplicationDefine+0xfc>
4001abc0:	e5810000 	str	r0, [r1]
4001abc4:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ac98 <CyU3PPibApplicationDefine+0x100>
4001abc8:	e5810000 	str	r0, [r1]
4001abcc:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ac9c <CyU3PPibApplicationDefine+0x104>
4001abd0:	e5810000 	str	r0, [r1]
4001abd4:	e59f10c4 	ldr	r1, [pc, #196]	; 4001aca0 <CyU3PPibApplicationDefine+0x108>
4001abd8:	e5810000 	str	r0, [r1]
4001abdc:	e59f10c0 	ldr	r1, [pc, #192]	; 4001aca4 <CyU3PPibApplicationDefine+0x10c>
4001abe0:	e5810000 	str	r0, [r1]
4001abe4:	e59f10bc 	ldr	r1, [pc, #188]	; 4001aca8 <CyU3PPibApplicationDefine+0x110>
4001abe8:	e5810000 	str	r0, [r1]
4001abec:	e3a00b01 	mov	r0, #1024	; 0x400
4001abf0:	ebffa29f 	bl	40003674 <CyU3PMemAlloc>
4001abf4:	e1a04000 	mov	r4, r0
4001abf8:	e3a030a8 	mov	r3, #168	; 0xa8
4001abfc:	e3a02001 	mov	r2, #1
4001ac00:	e3a01000 	mov	r1, #0
4001ac04:	e3a00004 	mov	r0, #4
4001ac08:	e28dc00c 	add	ip, sp, #12
4001ac0c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001ac10:	e3a02b01 	mov	r2, #1024	; 0x400
4001ac14:	e1a03001 	mov	r3, r1
4001ac18:	e58d2004 	str	r2, [sp, #4]
4001ac1c:	e59f2088 	ldr	r2, [pc, #136]	; 4001acac <CyU3PPibApplicationDefine+0x114>
4001ac20:	e28f1088 	add	r1, pc, #136	; 0x88
4001ac24:	e58d0008 	str	r0, [sp, #8]
4001ac28:	e59f0090 	ldr	r0, [pc, #144]	; 4001acc0 <CyU3PPibApplicationDefine+0x128>
4001ac2c:	e58d4000 	str	r4, [sp]
4001ac30:	ebffbe63 	bl	4000a5c4 <_txe_thread_create>
4001ac34:	e3a02028 	mov	r2, #40	; 0x28
4001ac38:	e3a01000 	mov	r1, #0
4001ac3c:	e59f0080 	ldr	r0, [pc, #128]	; 4001acc4 <CyU3PPibApplicationDefine+0x12c>
4001ac40:	ebffbbe4 	bl	40009bd8 <_txe_event_flags_create>
4001ac44:	e3a02000 	mov	r2, #0
4001ac48:	e3a01010 	mov	r1, #16
4001ac4c:	e59f0070 	ldr	r0, [pc, #112]	; 4001acc4 <CyU3PPibApplicationDefine+0x12c>
4001ac50:	ebffbc80 	bl	40009e58 <_txe_event_flags_set>
4001ac54:	e3a00040 	mov	r0, #64	; 0x40
4001ac58:	ebffa285 	bl	40003674 <CyU3PMemAlloc>
4001ac5c:	e1a04000 	mov	r4, r0
4001ac60:	e3a0303c 	mov	r3, #60	; 0x3c
4001ac64:	e3a02040 	mov	r2, #64	; 0x40
4001ac68:	e1cd20f0 	strd	r2, [sp]
4001ac6c:	e1a03004 	mov	r3, r4
4001ac70:	e3a02001 	mov	r2, #1
4001ac74:	e3a01000 	mov	r1, #0
4001ac78:	e59f0048 	ldr	r0, [pc, #72]	; 4001acc8 <CyU3PPibApplicationDefine+0x130>
4001ac7c:	ebffbd6a 	bl	4000a22c <_txe_queue_create>
4001ac80:	e28dd020 	add	sp, sp, #32
4001ac84:	e8bd8010 	pop	{r4, pc}
4001ac88:	40030d34 	.word	0x40030d34
4001ac8c:	40030d38 	.word	0x40030d38
4001ac90:	40030d40 	.word	0x40030d40
4001ac94:	40030d58 	.word	0x40030d58
4001ac98:	40030d4c 	.word	0x40030d4c
4001ac9c:	40030d50 	.word	0x40030d50
4001aca0:	40030d44 	.word	0x40030d44
4001aca4:	40030d48 	.word	0x40030d48
4001aca8:	40030d3c 	.word	0x40030d3c
4001acac:	4001ae80 	.word	0x4001ae80
4001acb0:	505f3330 	.word	0x505f3330
4001acb4:	545f4249 	.word	0x545f4249
4001acb8:	41455248 	.word	0x41455248
4001acbc:	00000044 	.word	0x00000044
4001acc0:	40031994 	.word	0x40031994
4001acc4:	4003196c 	.word	0x4003196c
4001acc8:	40031a3c 	.word	0x40031a3c

Disassembly of section i.CyU3PPibInit:

4001accc <CyU3PPibInit>:
4001accc:	e92d4070 	push	{r4, r5, r6, lr}
4001acd0:	e1a04000 	mov	r4, r0
4001acd4:	e1a05001 	mov	r5, r1
4001acd8:	e3a06000 	mov	r6, #0
4001acdc:	ebffe724 	bl	40014974 <CyFx3DevIsGpifSupported>
4001ace0:	e3500000 	cmp	r0, #0
4001ace4:	1a000001 	bne	4001acf0 <CyU3PPibInit+0x24>
4001ace8:	e3a00046 	mov	r0, #70	; 0x46
4001acec:	e8bd8070 	pop	{r4, r5, r6, pc}
4001acf0:	e59f0128 	ldr	r0, [pc, #296]	; 4001ae20 <CyU3PPibInit+0x154>
4001acf4:	e5900000 	ldr	r0, [r0]
4001acf8:	e3500000 	cmp	r0, #0
4001acfc:	0a000001 	beq	4001ad08 <CyU3PPibInit+0x3c>
4001ad00:	e3a00043 	mov	r0, #67	; 0x43
4001ad04:	eafffff8 	b	4001acec <CyU3PPibInit+0x20>
4001ad08:	e3550000 	cmp	r5, #0
4001ad0c:	1a000001 	bne	4001ad18 <CyU3PPibInit+0x4c>
4001ad10:	e3a00041 	mov	r0, #65	; 0x41
4001ad14:	eafffff4 	b	4001acec <CyU3PPibInit+0x20>
4001ad18:	e5d5000c 	ldrb	r0, [r5, #12]
4001ad1c:	e3500004 	cmp	r0, #4
4001ad20:	ba000001 	blt	4001ad2c <CyU3PPibInit+0x60>
4001ad24:	e3a00040 	mov	r0, #64	; 0x40
4001ad28:	eaffffef 	b	4001acec <CyU3PPibInit+0x20>
4001ad2c:	e1d500b0 	ldrh	r0, [r5]
4001ad30:	e3500002 	cmp	r0, #2
4001ad34:	ba000002 	blt	4001ad44 <CyU3PPibInit+0x78>
4001ad38:	e1d500b0 	ldrh	r0, [r5]
4001ad3c:	e3500b01 	cmp	r0, #1024	; 0x400
4001ad40:	da000001 	ble	4001ad4c <CyU3PPibInit+0x80>
4001ad44:	e3a00040 	mov	r0, #64	; 0x40
4001ad48:	eaffffe7 	b	4001acec <CyU3PPibInit+0x20>
4001ad4c:	e3a00001 	mov	r0, #1
4001ad50:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ae20 <CyU3PPibInit+0x154>
4001ad54:	e5810000 	str	r0, [r1]
4001ad58:	e5d5000c 	ldrb	r0, [r5, #12]
4001ad5c:	e3a01b06 	mov	r1, #6144	; 0x1800
4001ad60:	e0010580 	and	r0, r1, r0, lsl #11
4001ad64:	e1d510b0 	ldrh	r1, [r5]
4001ad68:	e2411001 	sub	r1, r1, #1
4001ad6c:	e1a01b01 	lsl	r1, r1, #22
4001ad70:	e1a01b21 	lsr	r1, r1, #22
4001ad74:	e1800001 	orr	r0, r0, r1
4001ad78:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ae24 <CyU3PPibInit+0x158>
4001ad7c:	e581000c 	str	r0, [r1, #12]
4001ad80:	e5950004 	ldr	r0, [r5, #4]
4001ad84:	e3500000 	cmp	r0, #0
4001ad88:	0a000003 	beq	4001ad9c <CyU3PPibInit+0xd0>
4001ad8c:	e1a00001 	mov	r0, r1
4001ad90:	e590000c 	ldr	r0, [r0, #12]
4001ad94:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ad98:	e581000c 	str	r0, [r1, #12]
4001ad9c:	e59f0080 	ldr	r0, [pc, #128]	; 4001ae24 <CyU3PPibInit+0x158>
4001ada0:	e590000c 	ldr	r0, [r0, #12]
4001ada4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ada8:	e59f1074 	ldr	r1, [pc, #116]	; 4001ae24 <CyU3PPibInit+0x158>
4001adac:	e581000c 	str	r0, [r1, #12]
4001adb0:	ebffe755 	bl	40014b0c <CyFx3PibPowerOn>
4001adb4:	e5950008 	ldr	r0, [r5, #8]
4001adb8:	e3500000 	cmp	r0, #0
4001adbc:	0a000000 	beq	4001adc4 <CyU3PPibInit+0xf8>
4001adc0:	ebffe732 	bl	40014a90 <CyFx3PibDllEnable>
4001adc4:	e59f005c 	ldr	r0, [pc, #92]	; 4001ae28 <CyU3PPibInit+0x15c>
4001adc8:	e5900000 	ldr	r0, [r0]
4001adcc:	e3500000 	cmp	r0, #0
4001add0:	0a000003 	beq	4001ade4 <CyU3PPibInit+0x118>
4001add4:	e1a00004 	mov	r0, r4
4001add8:	eb0000d4 	bl	4001b130 <CyU3PPmmcInit>
4001addc:	e1a06000 	mov	r6, r0
4001ade0:	ea000002 	b	4001adf0 <CyU3PPibInit+0x124>
4001ade4:	e1a00004 	mov	r0, r4
4001ade8:	ebffff4b 	bl	4001ab1c <CyU3PGpifInit>
4001adec:	e1a06000 	mov	r6, r0
4001adf0:	e3e00000 	mvn	r0, #0
4001adf4:	e59f1030 	ldr	r1, [pc, #48]	; 4001ae2c <CyU3PPibInit+0x160>
4001adf8:	e5810024 	str	r0, [r1, #36]	; 0x24
4001adfc:	e3560000 	cmp	r6, #0
4001ae00:	1a000004 	bne	4001ae18 <CyU3PPibInit+0x14c>
4001ae04:	eb000009 	bl	4001ae30 <CyU3PPibSocketInit>
4001ae08:	e3a00007 	mov	r0, #7
4001ae0c:	eb001c4a 	bl	40021f3c <CyU3PVicEnableInt>
4001ae10:	e3a00006 	mov	r0, #6
4001ae14:	eb001c48 	bl	40021f3c <CyU3PVicEnableInt>
4001ae18:	e1a00006 	mov	r0, r6
4001ae1c:	eaffffb2 	b	4001acec <CyU3PPibInit+0x20>
4001ae20:	40030d34 	.word	0x40030d34
4001ae24:	e0052000 	.word	0xe0052000
4001ae28:	40030d38 	.word	0x40030d38
4001ae2c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001ae30 <CyU3PPibSocketInit>:
4001ae30:	e3a00000 	mov	r0, #0
4001ae34:	ea00000d 	b	4001ae70 <CyU3PPibSocketInit+0x40>
4001ae38:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001ae3c:	e59f2038 	ldr	r2, [pc, #56]	; 4001ae7c <CyU3PPibSocketInit+0x4c>
4001ae40:	e0822380 	add	r2, r2, r0, lsl #7
4001ae44:	e582100c 	str	r1, [r2, #12]
4001ae48:	e3e01000 	mvn	r1, #0
4001ae4c:	e59f2028 	ldr	r2, [pc, #40]	; 4001ae7c <CyU3PPibSocketInit+0x4c>
4001ae50:	e0822380 	add	r2, r2, r0, lsl #7
4001ae54:	e5821010 	str	r1, [r2, #16]
4001ae58:	e3a01000 	mov	r1, #0
4001ae5c:	e59f2018 	ldr	r2, [pc, #24]	; 4001ae7c <CyU3PPibSocketInit+0x4c>
4001ae60:	e0822380 	add	r2, r2, r0, lsl #7
4001ae64:	e5821014 	str	r1, [r2, #20]
4001ae68:	e2801001 	add	r1, r0, #1
4001ae6c:	e20100ff 	and	r0, r1, #255	; 0xff
4001ae70:	e3500020 	cmp	r0, #32
4001ae74:	baffffef 	blt	4001ae38 <CyU3PPibSocketInit+0x8>
4001ae78:	e12fff1e 	bx	lr
4001ae7c:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001ae80 <CyU3PPibThreadEntry>:
4001ae80:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001ae84:	e3a00005 	mov	r0, #5
4001ae88:	ebffe25e 	bl	40013808 <CyU3PSysModuleInitCompleteEvt>
4001ae8c:	e59f0278 	ldr	r0, [pc, #632]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001ae90:	e5900000 	ldr	r0, [r0]
4001ae94:	e1a00800 	lsl	r0, r0, #16
4001ae98:	e1a00820 	lsr	r0, r0, #16
4001ae9c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001aea0:	e59f1264 	ldr	r1, [pc, #612]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001aea4:	e5810000 	str	r0, [r1]
4001aea8:	e3a000e1 	mov	r0, #225	; 0xe1
4001aeac:	e59f125c 	ldr	r1, [pc, #604]	; 4001b110 <CyU3PPibThreadEntry+0x290>
4001aeb0:	e5810000 	str	r0, [r1]
4001aeb4:	ea000093 	b	4001b108 <CyU3PPibThreadEntry+0x288>
4001aeb8:	e3e03000 	mvn	r3, #0
4001aebc:	e58d3000 	str	r3, [sp]
4001aec0:	e28d3008 	add	r3, sp, #8
4001aec4:	e3a02001 	mov	r2, #1
4001aec8:	e59f0240 	ldr	r0, [pc, #576]	; 4001b110 <CyU3PPibThreadEntry+0x290>
4001aecc:	e5901000 	ldr	r1, [r0]
4001aed0:	e59f023c 	ldr	r0, [pc, #572]	; 4001b114 <CyU3PPibThreadEntry+0x294>
4001aed4:	ebffbbaf 	bl	40009d98 <_txe_event_flags_get>
4001aed8:	e1a04000 	mov	r4, r0
4001aedc:	e59f122c 	ldr	r1, [pc, #556]	; 4001b110 <CyU3PPibThreadEntry+0x290>
4001aee0:	e59d0008 	ldr	r0, [sp, #8]
4001aee4:	e5911000 	ldr	r1, [r1]
4001aee8:	e0000001 	and	r0, r0, r1
4001aeec:	e58d0008 	str	r0, [sp, #8]
4001aef0:	e3540000 	cmp	r4, #0
4001aef4:	0a000000 	beq	4001aefc <CyU3PPibThreadEntry+0x7c>
4001aef8:	ea000082 	b	4001b108 <CyU3PPibThreadEntry+0x288>
4001aefc:	ea00007d 	b	4001b0f8 <CyU3PPibThreadEntry+0x278>
4001af00:	e59d0008 	ldr	r0, [sp, #8]
4001af04:	e3100020 	tst	r0, #32
4001af08:	0a000017 	beq	4001af6c <CyU3PPibThreadEntry+0xec>
4001af0c:	e59f0204 	ldr	r0, [pc, #516]	; 4001b118 <CyU3PPibThreadEntry+0x298>
4001af10:	e5900000 	ldr	r0, [r0]
4001af14:	e3500000 	cmp	r0, #0
4001af18:	0a00000b 	beq	4001af4c <CyU3PPibThreadEntry+0xcc>
4001af1c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b11c <CyU3PPibThreadEntry+0x29c>
4001af20:	e5900000 	ldr	r0, [r0]
4001af24:	e3100002 	tst	r0, #2
4001af28:	0a000007 	beq	4001af4c <CyU3PPibThreadEntry+0xcc>
4001af2c:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b120 <CyU3PPibThreadEntry+0x2a0>
4001af30:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001af34:	e1a01800 	lsl	r1, r0, #16
4001af38:	e1a01821 	lsr	r1, r1, #16
4001af3c:	e3a00002 	mov	r0, #2
4001af40:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b118 <CyU3PPibThreadEntry+0x298>
4001af44:	e5922000 	ldr	r2, [r2]
4001af48:	e12fff32 	blx	r2
4001af4c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001af50:	e5900000 	ldr	r0, [r0]
4001af54:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001af58:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001af5c:	e5810000 	str	r0, [r1]
4001af60:	e59d0008 	ldr	r0, [sp, #8]
4001af64:	e3c00020 	bic	r0, r0, #32
4001af68:	e58d0008 	str	r0, [sp, #8]
4001af6c:	e59d0008 	ldr	r0, [sp, #8]
4001af70:	e3100040 	tst	r0, #64	; 0x40
4001af74:	0a000027 	beq	4001b018 <CyU3PPibThreadEntry+0x198>
4001af78:	e59f0198 	ldr	r0, [pc, #408]	; 4001b118 <CyU3PPibThreadEntry+0x298>
4001af7c:	e5900000 	ldr	r0, [r0]
4001af80:	e3500000 	cmp	r0, #0
4001af84:	0a000017 	beq	4001afe8 <CyU3PPibThreadEntry+0x168>
4001af88:	e59f018c 	ldr	r0, [pc, #396]	; 4001b11c <CyU3PPibThreadEntry+0x29c>
4001af8c:	e5900000 	ldr	r0, [r0]
4001af90:	e3100004 	tst	r0, #4
4001af94:	0a000013 	beq	4001afe8 <CyU3PPibThreadEntry+0x168>
4001af98:	e59f016c 	ldr	r0, [pc, #364]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001af9c:	e5900020 	ldr	r0, [r0, #32]
4001afa0:	e1a05800 	lsl	r5, r0, #16
4001afa4:	e1a05825 	lsr	r5, r5, #16
4001afa8:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001afac:	e3500a02 	cmp	r0, #8192	; 0x2000
4001afb0:	1a000000 	bne	4001afb8 <CyU3PPibThreadEntry+0x138>
4001afb4:	e3a05a02 	mov	r5, #8192	; 0x2000
4001afb8:	e59f0164 	ldr	r0, [pc, #356]	; 4001b124 <CyU3PPibThreadEntry+0x2a4>
4001afbc:	e5900000 	ldr	r0, [r0]
4001afc0:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001afc4:	1a000001 	bne	4001afd0 <CyU3PPibThreadEntry+0x150>
4001afc8:	e3550004 	cmp	r5, #4
4001afcc:	da000004 	ble	4001afe4 <CyU3PPibThreadEntry+0x164>
4001afd0:	e1a01005 	mov	r1, r5
4001afd4:	e3a00004 	mov	r0, #4
4001afd8:	e59f2138 	ldr	r2, [pc, #312]	; 4001b118 <CyU3PPibThreadEntry+0x298>
4001afdc:	e5922000 	ldr	r2, [r2]
4001afe0:	e12fff32 	blx	r2
4001afe4:	e1a00000 	nop			; (mov r0, r0)
4001afe8:	e59f012c 	ldr	r0, [pc, #300]	; 4001b11c <CyU3PPibThreadEntry+0x29c>
4001afec:	e5900000 	ldr	r0, [r0]
4001aff0:	e3100004 	tst	r0, #4
4001aff4:	0a000004 	beq	4001b00c <CyU3PPibThreadEntry+0x18c>
4001aff8:	e59f010c 	ldr	r0, [pc, #268]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001affc:	e5900008 	ldr	r0, [r0, #8]
4001b000:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b004:	e59f1100 	ldr	r1, [pc, #256]	; 4001b10c <CyU3PPibThreadEntry+0x28c>
4001b008:	e5810008 	str	r0, [r1, #8]
4001b00c:	e59d0008 	ldr	r0, [sp, #8]
4001b010:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b014:	e58d0008 	str	r0, [sp, #8]
4001b018:	e59d0008 	ldr	r0, [sp, #8]
4001b01c:	e3100080 	tst	r0, #128	; 0x80
4001b020:	0a000011 	beq	4001b06c <CyU3PPibThreadEntry+0x1ec>
4001b024:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b118 <CyU3PPibThreadEntry+0x298>
4001b028:	e5900000 	ldr	r0, [r0]
4001b02c:	e3500000 	cmp	r0, #0
4001b030:	0a00000a 	beq	4001b060 <CyU3PPibThreadEntry+0x1e0>
4001b034:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b11c <CyU3PPibThreadEntry+0x29c>
4001b038:	e5900000 	ldr	r0, [r0]
4001b03c:	e3100001 	tst	r0, #1
4001b040:	0a000006 	beq	4001b060 <CyU3PPibThreadEntry+0x1e0>
4001b044:	ebffe6ab 	bl	40014af8 <CyFx3PibGetDllStatus>
4001b048:	e1a05000 	mov	r5, r0
4001b04c:	e1a01000 	mov	r1, r0
4001b050:	e3a00001 	mov	r0, #1
4001b054:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b118 <CyU3PPibThreadEntry+0x298>
4001b058:	e5922000 	ldr	r2, [r2]
4001b05c:	e12fff32 	blx	r2
4001b060:	e59d0008 	ldr	r0, [sp, #8]
4001b064:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b068:	e58d0008 	str	r0, [sp, #8]
4001b06c:	e59d0008 	ldr	r0, [sp, #8]
4001b070:	e3100001 	tst	r0, #1
4001b074:	0a00001f 	beq	4001b0f8 <CyU3PPibThreadEntry+0x278>
4001b078:	e3a02000 	mov	r2, #0
4001b07c:	e28d1004 	add	r1, sp, #4
4001b080:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b128 <CyU3PPibThreadEntry+0x2a8>
4001b084:	ebffbcfe 	bl	4000a484 <_txe_queue_receive>
4001b088:	e1a04000 	mov	r4, r0
4001b08c:	e3540000 	cmp	r4, #0
4001b090:	1a000015 	bne	4001b0ec <CyU3PPibThreadEntry+0x26c>
4001b094:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b098:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b09c:	e1b00720 	lsrs	r0, r0, #14
4001b0a0:	0a000014 	beq	4001b0f8 <CyU3PPibThreadEntry+0x278>
4001b0a4:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b0a8:	e20000ff 	and	r0, r0, #255	; 0xff
4001b0ac:	e3500004 	cmp	r0, #4
4001b0b0:	1a00000a 	bne	4001b0e0 <CyU3PPibThreadEntry+0x260>
4001b0b4:	e59f0070 	ldr	r0, [pc, #112]	; 4001b12c <CyU3PPibThreadEntry+0x2ac>
4001b0b8:	e5900000 	ldr	r0, [r0]
4001b0bc:	e3500000 	cmp	r0, #0
4001b0c0:	0a000005 	beq	4001b0dc <CyU3PPibThreadEntry+0x25c>
4001b0c4:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b0c8:	e1a01442 	asr	r1, r2, #8
4001b0cc:	e20200ff 	and	r0, r2, #255	; 0xff
4001b0d0:	e59f2054 	ldr	r2, [pc, #84]	; 4001b12c <CyU3PPibThreadEntry+0x2ac>
4001b0d4:	e5922000 	ldr	r2, [r2]
4001b0d8:	e12fff32 	blx	r2
4001b0dc:	ea000001 	b	4001b0e8 <CyU3PPibThreadEntry+0x268>
4001b0e0:	e1a00000 	nop			; (mov r0, r0)
4001b0e4:	e1a00000 	nop			; (mov r0, r0)
4001b0e8:	ea000002 	b	4001b0f8 <CyU3PPibThreadEntry+0x278>
4001b0ec:	e59d0008 	ldr	r0, [sp, #8]
4001b0f0:	e3c00001 	bic	r0, r0, #1
4001b0f4:	e58d0008 	str	r0, [sp, #8]
4001b0f8:	e59d0008 	ldr	r0, [sp, #8]
4001b0fc:	e3500000 	cmp	r0, #0
4001b100:	1affff7e 	bne	4001af00 <CyU3PPibThreadEntry+0x80>
4001b104:	e1a00000 	nop			; (mov r0, r0)
4001b108:	eaffff6a 	b	4001aeb8 <CyU3PPibThreadEntry+0x38>
4001b10c:	e0010000 	.word	0xe0010000
4001b110:	40030d40 	.word	0x40030d40
4001b114:	4003196c 	.word	0x4003196c
4001b118:	40030d44 	.word	0x40030d44
4001b11c:	40030d48 	.word	0x40030d48
4001b120:	e0017000 	.word	0xe0017000
4001b124:	e0014000 	.word	0xe0014000
4001b128:	40031a3c 	.word	0x40031a3c
4001b12c:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3PPmmcInit:

4001b130 <CyU3PPmmcInit>:
4001b130:	e92d4010 	push	{r4, lr}
4001b134:	e1a04000 	mov	r4, r0
4001b138:	e3540000 	cmp	r4, #0
4001b13c:	0a000042 	beq	4001b24c <CyU3PPmmcInit+0x11c>
4001b140:	e3e00000 	mvn	r0, #0
4001b144:	e59f1148 	ldr	r1, [pc, #328]	; 4001b294 <CyU3PPmmcInit+0x164>
4001b148:	e581000c 	str	r0, [r1, #12]
4001b14c:	e3a00000 	mov	r0, #0
4001b150:	e5810010 	str	r0, [r1, #16]
4001b154:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b158:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b15c:	e3a00000 	mov	r0, #0
4001b160:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b164:	e5810008 	str	r0, [r1, #8]
4001b168:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b16c:	e5900000 	ldr	r0, [r0]
4001b170:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b174:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b178:	e5810000 	str	r0, [r1]
4001b17c:	e59f0114 	ldr	r0, [pc, #276]	; 4001b298 <CyU3PPmmcInit+0x168>
4001b180:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b184:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b188:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b18c:	e3a00001 	mov	r0, #1
4001b190:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b194:	e59f0100 	ldr	r0, [pc, #256]	; 4001b29c <CyU3PPmmcInit+0x16c>
4001b198:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b19c:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b2a0 <CyU3PPmmcInit+0x170>
4001b1a0:	e5900000 	ldr	r0, [r0]
4001b1a4:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b1a8:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b2a0 <CyU3PPmmcInit+0x170>
4001b1ac:	e5900004 	ldr	r0, [r0, #4]
4001b1b0:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b1b4:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b2a0 <CyU3PPmmcInit+0x170>
4001b1b8:	e5900008 	ldr	r0, [r0, #8]
4001b1bc:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b1c0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b2a0 <CyU3PPmmcInit+0x170>
4001b1c4:	e590000c 	ldr	r0, [r0, #12]
4001b1c8:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b1cc:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b2a4 <CyU3PPmmcInit+0x174>
4001b1d0:	e5900000 	ldr	r0, [r0]
4001b1d4:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b1d8:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b2a4 <CyU3PPmmcInit+0x174>
4001b1dc:	e5900004 	ldr	r0, [r0, #4]
4001b1e0:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b1e4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b2a4 <CyU3PPmmcInit+0x174>
4001b1e8:	e5900008 	ldr	r0, [r0, #8]
4001b1ec:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b1f0:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b2a4 <CyU3PPmmcInit+0x174>
4001b1f4:	e590000c 	ldr	r0, [r0, #12]
4001b1f8:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b1fc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b2a4 <CyU3PPmmcInit+0x174>
4001b200:	e5900010 	ldr	r0, [r0, #16]
4001b204:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b208:	e59f0094 	ldr	r0, [pc, #148]	; 4001b2a4 <CyU3PPmmcInit+0x174>
4001b20c:	e5900014 	ldr	r0, [r0, #20]
4001b210:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b214:	e59f008c 	ldr	r0, [pc, #140]	; 4001b2a8 <CyU3PPmmcInit+0x178>
4001b218:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b21c:	e3a00000 	mov	r0, #0
4001b220:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b224:	e3a00c02 	mov	r0, #512	; 0x200
4001b228:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b22c:	e3a00000 	mov	r0, #0
4001b230:	e5810004 	str	r0, [r1, #4]
4001b234:	e59f0070 	ldr	r0, [pc, #112]	; 4001b2ac <CyU3PPmmcInit+0x17c>
4001b238:	e5810010 	str	r0, [r1, #16]
4001b23c:	e3a00008 	mov	r0, #8
4001b240:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b244:	e5810008 	str	r0, [r1, #8]
4001b248:	ea000002 	b	4001b258 <CyU3PPmmcInit+0x128>
4001b24c:	e3a00000 	mov	r0, #0
4001b250:	e59f103c 	ldr	r1, [pc, #60]	; 4001b294 <CyU3PPmmcInit+0x164>
4001b254:	e5810010 	str	r0, [r1, #16]
4001b258:	e59f0034 	ldr	r0, [pc, #52]	; 4001b294 <CyU3PPmmcInit+0x164>
4001b25c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b260:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b264:	e59f1028 	ldr	r1, [pc, #40]	; 4001b294 <CyU3PPmmcInit+0x164>
4001b268:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b26c:	ebffdddd 	bl	400129e8 <CyU3PSysBarrierSync>
4001b270:	e59f0038 	ldr	r0, [pc, #56]	; 4001b2b0 <CyU3PPmmcInit+0x180>
4001b274:	e5900000 	ldr	r0, [r0]
4001b278:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b27c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b280:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b284:	e59f1024 	ldr	r1, [pc, #36]	; 4001b2b0 <CyU3PPmmcInit+0x180>
4001b288:	e5810000 	str	r0, [r1]
4001b28c:	e3a00000 	mov	r0, #0
4001b290:	e8bd8010 	pop	{r4, pc}
4001b294:	e0011000 	.word	0xe0011000
4001b298:	00019201 	.word	0x00019201
4001b29c:	04010302 	.word	0x04010302
4001b2a0:	40011d18 	.word	0x40011d18
4001b2a4:	40011d28 	.word	0x40011d28
4001b2a8:	00ff8080 	.word	0x00ff8080
4001b2ac:	400a00fb 	.word	0x400a00fb
4001b2b0:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b2b4 <CyU3PMboxReset>:
4001b2b4:	e92d4010 	push	{r4, lr}
4001b2b8:	e3a00002 	mov	r0, #2
4001b2bc:	e59f1028 	ldr	r1, [pc, #40]	; 4001b2ec <CyU3PMboxReset+0x38>
4001b2c0:	e5810004 	str	r0, [r1, #4]
4001b2c4:	e3a02002 	mov	r2, #2
4001b2c8:	e3a01010 	mov	r1, #16
4001b2cc:	e59f001c 	ldr	r0, [pc, #28]	; 4001b2f0 <CyU3PMboxReset+0x3c>
4001b2d0:	ebffbae0 	bl	40009e58 <_txe_event_flags_set>
4001b2d4:	e59f0010 	ldr	r0, [pc, #16]	; 4001b2ec <CyU3PMboxReset+0x38>
4001b2d8:	e5900008 	ldr	r0, [r0, #8]
4001b2dc:	e3800003 	orr	r0, r0, #3
4001b2e0:	e59f1004 	ldr	r1, [pc, #4]	; 4001b2ec <CyU3PMboxReset+0x38>
4001b2e4:	e5810008 	str	r0, [r1, #8]
4001b2e8:	e8bd8010 	pop	{r4, pc}
4001b2ec:	e0010000 	.word	0xe0010000
4001b2f0:	4003196c 	.word	0x4003196c

Disassembly of section i.CyU3PGpifConfigure:

4001b2f4 <CyU3PGpifConfigure>:
4001b2f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b2f8:	e1a04000 	mov	r4, r0
4001b2fc:	e1a05001 	mov	r5, r1
4001b300:	e59f609c 	ldr	r6, [pc, #156]	; 4001b3a4 <CyU3PGpifConfigure+0xb0>
4001b304:	e3540000 	cmp	r4, #0
4001b308:	0a000001 	beq	4001b314 <CyU3PGpifConfigure+0x20>
4001b30c:	e3550000 	cmp	r5, #0
4001b310:	1a000001 	bne	4001b31c <CyU3PGpifConfigure+0x28>
4001b314:	e3a00040 	mov	r0, #64	; 0x40
4001b318:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b31c:	ebffe585 	bl	40014938 <CyFx3DevIsGpifConfigurable>
4001b320:	e3500000 	cmp	r0, #0
4001b324:	1a000001 	bne	4001b330 <CyU3PGpifConfigure+0x3c>
4001b328:	e3a00046 	mov	r0, #70	; 0x46
4001b32c:	eafffff9 	b	4001b318 <CyU3PGpifConfigure+0x24>
4001b330:	ebffe576 	bl	40014910 <CyFx3DevIsGpif32Supported>
4001b334:	e3500000 	cmp	r0, #0
4001b338:	1a000007 	bne	4001b35c <CyU3PGpifConfigure+0x68>
4001b33c:	e3540001 	cmp	r4, #1
4001b340:	da000005 	ble	4001b35c <CyU3PGpifConfigure+0x68>
4001b344:	e5950004 	ldr	r0, [r5, #4]
4001b348:	e200000c 	and	r0, r0, #12
4001b34c:	e3500004 	cmp	r0, #4
4001b350:	9a000001 	bls	4001b35c <CyU3PGpifConfigure+0x68>
4001b354:	e3a00046 	mov	r0, #70	; 0x46
4001b358:	eaffffee 	b	4001b318 <CyU3PGpifConfigure+0x24>
4001b35c:	e59f0044 	ldr	r0, [pc, #68]	; 4001b3a8 <CyU3PGpifConfigure+0xb4>
4001b360:	e5900000 	ldr	r0, [r0]
4001b364:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b368:	0a000001 	beq	4001b374 <CyU3PGpifConfigure+0x80>
4001b36c:	e3a00043 	mov	r0, #67	; 0x43
4001b370:	eaffffe8 	b	4001b318 <CyU3PGpifConfigure+0x24>
4001b374:	e3a07001 	mov	r7, #1
4001b378:	ea000002 	b	4001b388 <CyU3PGpifConfigure+0x94>
4001b37c:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b380:	e4860004 	str	r0, [r6], #4
4001b384:	e2877001 	add	r7, r7, #1
4001b388:	e1570004 	cmp	r7, r4
4001b38c:	bafffffa 	blt	4001b37c <CyU3PGpifConfigure+0x88>
4001b390:	e5950000 	ldr	r0, [r5]
4001b394:	e59f100c 	ldr	r1, [pc, #12]	; 4001b3a8 <CyU3PGpifConfigure+0xb4>
4001b398:	e5810000 	str	r0, [r1]
4001b39c:	e3a00000 	mov	r0, #0
4001b3a0:	eaffffdc 	b	4001b318 <CyU3PGpifConfigure+0x24>
4001b3a4:	e0014004 	.word	0xe0014004
4001b3a8:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b3ac <CyU3PGpifDisable>:
4001b3ac:	e92d4070 	push	{r4, r5, r6, lr}
4001b3b0:	e1a04000 	mov	r4, r0
4001b3b4:	e59f0070 	ldr	r0, [pc, #112]	; 4001b42c <CyU3PGpifDisable+0x80>
4001b3b8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b3bc:	e3800002 	orr	r0, r0, #2
4001b3c0:	e59f1064 	ldr	r1, [pc, #100]	; 4001b42c <CyU3PGpifDisable+0x80>
4001b3c4:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b3c8:	e3a0000a 	mov	r0, #10
4001b3cc:	ebffe057 	bl	40013530 <CyU3PBusyWait>
4001b3d0:	e3a00000 	mov	r0, #0
4001b3d4:	e59f1050 	ldr	r1, [pc, #80]	; 4001b42c <CyU3PGpifDisable+0x80>
4001b3d8:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b3dc:	e3540000 	cmp	r4, #0
4001b3e0:	0a000010 	beq	4001b428 <CyU3PGpifDisable+0x7c>
4001b3e4:	e3a00e22 	mov	r0, #544	; 0x220
4001b3e8:	e5810000 	str	r0, [r1]
4001b3ec:	e3a05000 	mov	r5, #0
4001b3f0:	ea000007 	b	4001b414 <CyU3PGpifDisable+0x68>
4001b3f4:	e3a00000 	mov	r0, #0
4001b3f8:	e59f1030 	ldr	r1, [pc, #48]	; 4001b430 <CyU3PGpifDisable+0x84>
4001b3fc:	e0811205 	add	r1, r1, r5, lsl #4
4001b400:	e5810008 	str	r0, [r1, #8]
4001b404:	e59f1028 	ldr	r1, [pc, #40]	; 4001b434 <CyU3PGpifDisable+0x88>
4001b408:	e0811205 	add	r1, r1, r5, lsl #4
4001b40c:	e5810008 	str	r0, [r1, #8]
4001b410:	e2855001 	add	r5, r5, #1
4001b414:	e3550c01 	cmp	r5, #256	; 0x100
4001b418:	3afffff5 	bcc	4001b3f4 <CyU3PGpifDisable+0x48>
4001b41c:	e59f1014 	ldr	r1, [pc, #20]	; 4001b438 <CyU3PGpifDisable+0x8c>
4001b420:	e3a0004c 	mov	r0, #76	; 0x4c
4001b424:	ebffffb2 	bl	4001b2f4 <CyU3PGpifConfigure>
4001b428:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b42c:	e0014000 	.word	0xe0014000
4001b430:	e0015000 	.word	0xe0015000
4001b434:	e0016000 	.word	0xe0016000
4001b438:	40011d40 	.word	0x40011d40

Disassembly of section i.CyU3PGpifLoad:

4001b43c <CyU3PGpifLoad>:
4001b43c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b440:	e1a04000 	mov	r4, r0
4001b444:	e59f7264 	ldr	r7, [pc, #612]	; 4001b6b0 <CyU3PGpifLoad+0x274>
4001b448:	e3540000 	cmp	r4, #0
4001b44c:	0a000008 	beq	4001b474 <CyU3PGpifLoad+0x38>
4001b450:	e1d400b0 	ldrh	r0, [r4]
4001b454:	e3500000 	cmp	r0, #0
4001b458:	1a000007 	bne	4001b47c <CyU3PGpifLoad+0x40>
4001b45c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b460:	e3500000 	cmp	r0, #0
4001b464:	1a000004 	bne	4001b47c <CyU3PGpifLoad+0x40>
4001b468:	e1d401b4 	ldrh	r0, [r4, #20]
4001b46c:	e3500000 	cmp	r0, #0
4001b470:	1a000001 	bne	4001b47c <CyU3PGpifLoad+0x40>
4001b474:	e3a00040 	mov	r0, #64	; 0x40
4001b478:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b47c:	e59f0230 	ldr	r0, [pc, #560]	; 4001b6b4 <CyU3PGpifLoad+0x278>
4001b480:	e5900000 	ldr	r0, [r0]
4001b484:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b488:	1a000003 	bne	4001b49c <CyU3PGpifLoad+0x60>
4001b48c:	e59f0220 	ldr	r0, [pc, #544]	; 4001b6b4 <CyU3PGpifLoad+0x278>
4001b490:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b494:	e3100001 	tst	r0, #1
4001b498:	0a000001 	beq	4001b4a4 <CyU3PGpifLoad+0x68>
4001b49c:	e3a00043 	mov	r0, #67	; 0x43
4001b4a0:	eafffff4 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b4a4:	ebffe523 	bl	40014938 <CyFx3DevIsGpifConfigurable>
4001b4a8:	e3500000 	cmp	r0, #0
4001b4ac:	1a000001 	bne	4001b4b8 <CyU3PGpifLoad+0x7c>
4001b4b0:	e3a00046 	mov	r0, #70	; 0x46
4001b4b4:	eaffffef 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b4b8:	ebffe514 	bl	40014910 <CyFx3DevIsGpif32Supported>
4001b4bc:	e3500000 	cmp	r0, #0
4001b4c0:	1a00000c 	bne	4001b4f8 <CyU3PGpifLoad+0xbc>
4001b4c4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b4c8:	e3500002 	cmp	r0, #2
4001b4cc:	ba000009 	blt	4001b4f8 <CyU3PGpifLoad+0xbc>
4001b4d0:	e5940018 	ldr	r0, [r4, #24]
4001b4d4:	e3500000 	cmp	r0, #0
4001b4d8:	0a000006 	beq	4001b4f8 <CyU3PGpifLoad+0xbc>
4001b4dc:	e5940018 	ldr	r0, [r4, #24]
4001b4e0:	e5900004 	ldr	r0, [r0, #4]
4001b4e4:	e200000c 	and	r0, r0, #12
4001b4e8:	e3500004 	cmp	r0, #4
4001b4ec:	9a000001 	bls	4001b4f8 <CyU3PGpifLoad+0xbc>
4001b4f0:	e3a00046 	mov	r0, #70	; 0x46
4001b4f4:	eaffffdf 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b4f8:	e1d400b0 	ldrh	r0, [r4]
4001b4fc:	e3500000 	cmp	r0, #0
4001b500:	0a00003b 	beq	4001b5f4 <CyU3PGpifLoad+0x1b8>
4001b504:	e5940004 	ldr	r0, [r4, #4]
4001b508:	e3500000 	cmp	r0, #0
4001b50c:	1a000001 	bne	4001b518 <CyU3PGpifLoad+0xdc>
4001b510:	e3a00040 	mov	r0, #64	; 0x40
4001b514:	eaffffd7 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b518:	e3a05000 	mov	r5, #0
4001b51c:	ea000031 	b	4001b5e8 <CyU3PGpifLoad+0x1ac>
4001b520:	e5940008 	ldr	r0, [r4, #8]
4001b524:	e3500000 	cmp	r0, #0
4001b528:	0a000002 	beq	4001b538 <CyU3PGpifLoad+0xfc>
4001b52c:	e5940008 	ldr	r0, [r4, #8]
4001b530:	e7d00005 	ldrb	r0, [r0, r5]
4001b534:	ea000000 	b	4001b53c <CyU3PGpifLoad+0x100>
4001b538:	e1a00005 	mov	r0, r5
4001b53c:	e1a06800 	lsl	r6, r0, #16
4001b540:	e1a06826 	lsr	r6, r6, #16
4001b544:	e0861086 	add	r1, r6, r6, lsl #1
4001b548:	e5940004 	ldr	r0, [r4, #4]
4001b54c:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b550:	e59f1160 	ldr	r1, [pc, #352]	; 4001b6b8 <CyU3PGpifLoad+0x27c>
4001b554:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b558:	e0861086 	add	r1, r6, r6, lsl #1
4001b55c:	e5940004 	ldr	r0, [r4, #4]
4001b560:	e0800181 	add	r0, r0, r1, lsl #3
4001b564:	e5900004 	ldr	r0, [r0, #4]
4001b568:	e59f1148 	ldr	r1, [pc, #328]	; 4001b6b8 <CyU3PGpifLoad+0x27c>
4001b56c:	e0811205 	add	r1, r1, r5, lsl #4
4001b570:	e5810004 	str	r0, [r1, #4]
4001b574:	e0861086 	add	r1, r6, r6, lsl #1
4001b578:	e5940004 	ldr	r0, [r4, #4]
4001b57c:	e0800181 	add	r0, r0, r1, lsl #3
4001b580:	e5900008 	ldr	r0, [r0, #8]
4001b584:	e59f112c 	ldr	r1, [pc, #300]	; 4001b6b8 <CyU3PGpifLoad+0x27c>
4001b588:	e0811205 	add	r1, r1, r5, lsl #4
4001b58c:	e5810008 	str	r0, [r1, #8]
4001b590:	e0861086 	add	r1, r6, r6, lsl #1
4001b594:	e5940004 	ldr	r0, [r4, #4]
4001b598:	e0800181 	add	r0, r0, r1, lsl #3
4001b59c:	e590000c 	ldr	r0, [r0, #12]
4001b5a0:	e59f1114 	ldr	r1, [pc, #276]	; 4001b6bc <CyU3PGpifLoad+0x280>
4001b5a4:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b5a8:	e0861086 	add	r1, r6, r6, lsl #1
4001b5ac:	e5940004 	ldr	r0, [r4, #4]
4001b5b0:	e0800181 	add	r0, r0, r1, lsl #3
4001b5b4:	e5900010 	ldr	r0, [r0, #16]
4001b5b8:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b6bc <CyU3PGpifLoad+0x280>
4001b5bc:	e0811205 	add	r1, r1, r5, lsl #4
4001b5c0:	e5810004 	str	r0, [r1, #4]
4001b5c4:	e0861086 	add	r1, r6, r6, lsl #1
4001b5c8:	e5940004 	ldr	r0, [r4, #4]
4001b5cc:	e0800181 	add	r0, r0, r1, lsl #3
4001b5d0:	e5900014 	ldr	r0, [r0, #20]
4001b5d4:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b6bc <CyU3PGpifLoad+0x280>
4001b5d8:	e0811205 	add	r1, r1, r5, lsl #4
4001b5dc:	e5810008 	str	r0, [r1, #8]
4001b5e0:	e2850001 	add	r0, r5, #1
4001b5e4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b5e8:	e1d400b0 	ldrh	r0, [r4]
4001b5ec:	e1500005 	cmp	r0, r5
4001b5f0:	caffffca 	bgt	4001b520 <CyU3PGpifLoad+0xe4>
4001b5f4:	e1d400bc 	ldrh	r0, [r4, #12]
4001b5f8:	e3500000 	cmp	r0, #0
4001b5fc:	0a000013 	beq	4001b650 <CyU3PGpifLoad+0x214>
4001b600:	e5940010 	ldr	r0, [r4, #16]
4001b604:	e3500000 	cmp	r0, #0
4001b608:	0a000002 	beq	4001b618 <CyU3PGpifLoad+0x1dc>
4001b60c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b610:	e3500020 	cmp	r0, #32
4001b614:	da000001 	ble	4001b620 <CyU3PGpifLoad+0x1e4>
4001b618:	e3a00040 	mov	r0, #64	; 0x40
4001b61c:	eaffff95 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b620:	e3a05000 	mov	r5, #0
4001b624:	ea000006 	b	4001b644 <CyU3PGpifLoad+0x208>
4001b628:	e5940010 	ldr	r0, [r4, #16]
4001b62c:	e0800085 	add	r0, r0, r5, lsl #1
4001b630:	e1d000b0 	ldrh	r0, [r0]
4001b634:	e59f1084 	ldr	r1, [pc, #132]	; 4001b6c0 <CyU3PGpifLoad+0x284>
4001b638:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b63c:	e2850001 	add	r0, r5, #1
4001b640:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b644:	e1d400bc 	ldrh	r0, [r4, #12]
4001b648:	e1500005 	cmp	r0, r5
4001b64c:	cafffff5 	bgt	4001b628 <CyU3PGpifLoad+0x1ec>
4001b650:	e1d401b4 	ldrh	r0, [r4, #20]
4001b654:	e3500000 	cmp	r0, #0
4001b658:	0a000012 	beq	4001b6a8 <CyU3PGpifLoad+0x26c>
4001b65c:	e5940018 	ldr	r0, [r4, #24]
4001b660:	e3500000 	cmp	r0, #0
4001b664:	1a000001 	bne	4001b670 <CyU3PGpifLoad+0x234>
4001b668:	e3a00040 	mov	r0, #64	; 0x40
4001b66c:	eaffff81 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b670:	e3a05001 	mov	r5, #1
4001b674:	ea000004 	b	4001b68c <CyU3PGpifLoad+0x250>
4001b678:	e5940018 	ldr	r0, [r4, #24]
4001b67c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b680:	e4870004 	str	r0, [r7], #4
4001b684:	e2850001 	add	r0, r5, #1
4001b688:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b68c:	e1d401b4 	ldrh	r0, [r4, #20]
4001b690:	e1500005 	cmp	r0, r5
4001b694:	cafffff7 	bgt	4001b678 <CyU3PGpifLoad+0x23c>
4001b698:	e5940018 	ldr	r0, [r4, #24]
4001b69c:	e5900000 	ldr	r0, [r0]
4001b6a0:	e59f100c 	ldr	r1, [pc, #12]	; 4001b6b4 <CyU3PGpifLoad+0x278>
4001b6a4:	e5810000 	str	r0, [r1]
4001b6a8:	e3a00000 	mov	r0, #0
4001b6ac:	eaffff71 	b	4001b478 <CyU3PGpifLoad+0x3c>
4001b6b0:	e0014004 	.word	0xe0014004
4001b6b4:	e0014000 	.word	0xe0014000
4001b6b8:	e0015000 	.word	0xe0015000
4001b6bc:	e0016000 	.word	0xe0016000
4001b6c0:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b6c4 <CyU3PGpifRegisterCallback>:
4001b6c4:	e59f1004 	ldr	r1, [pc, #4]	; 4001b6d0 <CyU3PGpifRegisterCallback+0xc>
4001b6c8:	e5810000 	str	r0, [r1]
4001b6cc:	e12fff1e 	bx	lr
4001b6d0:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3PGpifSMStart:

4001b6d4 <CyU3PGpifSMStart>:
4001b6d4:	e92d4010 	push	{r4, lr}
4001b6d8:	e1a02000 	mov	r2, r0
4001b6dc:	e59f012c 	ldr	r0, [pc, #300]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b6e0:	e5900000 	ldr	r0, [r0]
4001b6e4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b6e8:	0a000004 	beq	4001b700 <CyU3PGpifSMStart+0x2c>
4001b6ec:	e59f0120 	ldr	r0, [pc, #288]	; 4001b814 <CyU3PGpifSMStart+0x140>
4001b6f0:	e0800202 	add	r0, r0, r2, lsl #4
4001b6f4:	e5900008 	ldr	r0, [r0, #8]
4001b6f8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b6fc:	1a000001 	bne	4001b708 <CyU3PGpifSMStart+0x34>
4001b700:	e3a00044 	mov	r0, #68	; 0x44
4001b704:	e8bd8010 	pop	{r4, pc}
4001b708:	e59f0100 	ldr	r0, [pc, #256]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b70c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b710:	e3100001 	tst	r0, #1
4001b714:	0a000001 	beq	4001b720 <CyU3PGpifSMStart+0x4c>
4001b718:	e3a00043 	mov	r0, #67	; 0x43
4001b71c:	eafffff8 	b	4001b704 <CyU3PGpifSMStart+0x30>
4001b720:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b724:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b728:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b72c:	e1800801 	orr	r0, r0, r1, lsl #16
4001b730:	e3800001 	orr	r0, r0, #1
4001b734:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b738:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b73c:	e1a00004 	mov	r0, r4
4001b740:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b744:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b818 <CyU3PGpifSMStart+0x144>
4001b748:	e000000e 	and	r0, r0, lr
4001b74c:	e180e802 	orr	lr, r0, r2, lsl #16
4001b750:	e1a00004 	mov	r0, r4
4001b754:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b758:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b75c:	e3800005 	orr	r0, r0, #5
4001b760:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b764:	e1a00004 	mov	r0, r4
4001b768:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b76c:	e5900008 	ldr	r0, [r0, #8]
4001b770:	e2003007 	and	r3, r0, #7
4001b774:	e3530001 	cmp	r3, #1
4001b778:	0a000004 	beq	4001b790 <CyU3PGpifSMStart+0xbc>
4001b77c:	e3530002 	cmp	r3, #2
4001b780:	0a00000b 	beq	4001b7b4 <CyU3PGpifSMStart+0xe0>
4001b784:	e3530003 	cmp	r3, #3
4001b788:	1a00001b 	bne	4001b7fc <CyU3PGpifSMStart+0x128>
4001b78c:	ea000011 	b	4001b7d8 <CyU3PGpifSMStart+0x104>
4001b790:	e1a00000 	nop			; (mov r0, r0)
4001b794:	e59f0080 	ldr	r0, [pc, #128]	; 4001b81c <CyU3PGpifSMStart+0x148>
4001b798:	e1ce0000 	bic	r0, lr, r0
4001b79c:	e3800005 	orr	r0, r0, #5
4001b7a0:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b7a4:	e1800424 	orr	r0, r0, r4, lsr #8
4001b7a8:	e59f4060 	ldr	r4, [pc, #96]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b7ac:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b7b0:	ea000013 	b	4001b804 <CyU3PGpifSMStart+0x130>
4001b7b4:	e1a00000 	nop			; (mov r0, r0)
4001b7b8:	e59f0060 	ldr	r0, [pc, #96]	; 4001b820 <CyU3PGpifSMStart+0x14c>
4001b7bc:	e1ce0000 	bic	r0, lr, r0
4001b7c0:	e3800005 	orr	r0, r0, #5
4001b7c4:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b7c8:	e1800424 	orr	r0, r0, r4, lsr #8
4001b7cc:	e59f403c 	ldr	r4, [pc, #60]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b7d0:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b7d4:	ea00000a 	b	4001b804 <CyU3PGpifSMStart+0x130>
4001b7d8:	e1a00000 	nop			; (mov r0, r0)
4001b7dc:	e59f0040 	ldr	r0, [pc, #64]	; 4001b824 <CyU3PGpifSMStart+0x150>
4001b7e0:	e1ce0000 	bic	r0, lr, r0
4001b7e4:	e3800005 	orr	r0, r0, #5
4001b7e8:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b7ec:	e1800424 	orr	r0, r0, r4, lsr #8
4001b7f0:	e59f4018 	ldr	r4, [pc, #24]	; 4001b810 <CyU3PGpifSMStart+0x13c>
4001b7f4:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b7f8:	ea000001 	b	4001b804 <CyU3PGpifSMStart+0x130>
4001b7fc:	e1a00000 	nop			; (mov r0, r0)
4001b800:	e1a00000 	nop			; (mov r0, r0)
4001b804:	e1a00000 	nop			; (mov r0, r0)
4001b808:	e3a00000 	mov	r0, #0
4001b80c:	eaffffbc 	b	4001b704 <CyU3PGpifSMStart+0x30>
4001b810:	e0014000 	.word	0xe0014000
4001b814:	e0015000 	.word	0xe0015000
4001b818:	ff00003a 	.word	0xff00003a
4001b81c:	0080ffc5 	.word	0x0080ffc5
4001b820:	00c0ffc5 	.word	0x00c0ffc5
4001b824:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b828 <CyU3PGpifSMSwitch>:
4001b828:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b82c:	e1a0c000 	mov	ip, r0
4001b830:	e59de018 	ldr	lr, [sp, #24]
4001b834:	e3a04000 	mov	r4, #0
4001b838:	e3510c01 	cmp	r1, #256	; 0x100
4001b83c:	ba000001 	blt	4001b848 <CyU3PGpifSMSwitch+0x20>
4001b840:	e3a00040 	mov	r0, #64	; 0x40
4001b844:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b848:	e59f0150 	ldr	r0, [pc, #336]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b84c:	e5900000 	ldr	r0, [r0]
4001b850:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b854:	1a000001 	bne	4001b860 <CyU3PGpifSMSwitch+0x38>
4001b858:	e3a00044 	mov	r0, #68	; 0x44
4001b85c:	eafffff8 	b	4001b844 <CyU3PGpifSMSwitch+0x1c>
4001b860:	e59f0138 	ldr	r0, [pc, #312]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b864:	e5900008 	ldr	r0, [r0, #8]
4001b868:	e2006007 	and	r6, r0, #7
4001b86c:	e59f012c 	ldr	r0, [pc, #300]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b870:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b874:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b878:	e1800803 	orr	r0, r0, r3, lsl #16
4001b87c:	e3800001 	orr	r0, r0, #1
4001b880:	e59f8118 	ldr	r8, [pc, #280]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b884:	e5880118 	str	r0, [r8, #280]	; 0x118
4001b888:	e3a00001 	mov	r0, #1
4001b88c:	e1804801 	orr	r4, r0, r1, lsl #16
4001b890:	e35c0c01 	cmp	ip, #256	; 0x100
4001b894:	aa000012 	bge	4001b8e4 <CyU3PGpifSMSwitch+0xbc>
4001b898:	e1c80000 	bic	r0, r8, r0
4001b89c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b8a0:	e1a05c20 	lsr	r5, r0, #24
4001b8a4:	e59f00f8 	ldr	r0, [pc, #248]	; 4001b9a4 <CyU3PGpifSMSwitch+0x17c>
4001b8a8:	e7d00006 	ldrb	r0, [r0, r6]
4001b8ac:	e0000005 	and	r0, r0, r5
4001b8b0:	e59f80ec 	ldr	r8, [pc, #236]	; 4001b9a4 <CyU3PGpifSMSwitch+0x17c>
4001b8b4:	e7d88006 	ldrb	r8, [r8, r6]
4001b8b8:	e008800c 	and	r8, r8, ip
4001b8bc:	e1500008 	cmp	r0, r8
4001b8c0:	1a000001 	bne	4001b8cc <CyU3PGpifSMSwitch+0xa4>
4001b8c4:	e3844004 	orr	r4, r4, #4
4001b8c8:	ea000006 	b	4001b8e8 <CyU3PGpifSMSwitch+0xc0>
4001b8cc:	e3a00008 	mov	r0, #8
4001b8d0:	e180040c 	orr	r0, r0, ip, lsl #8
4001b8d4:	e1844000 	orr	r4, r4, r0
4001b8d8:	e59f00c0 	ldr	r0, [pc, #192]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b8dc:	e580e120 	str	lr, [r0, #288]	; 0x120
4001b8e0:	ea000000 	b	4001b8e8 <CyU3PGpifSMSwitch+0xc0>
4001b8e4:	e3844004 	orr	r4, r4, #4
4001b8e8:	e3520c01 	cmp	r2, #256	; 0x100
4001b8ec:	aa000007 	bge	4001b910 <CyU3PGpifSMSwitch+0xe8>
4001b8f0:	e3a00002 	mov	r0, #2
4001b8f4:	e1800c02 	orr	r0, r0, r2, lsl #24
4001b8f8:	e1844000 	orr	r4, r4, r0
4001b8fc:	e59f009c 	ldr	r0, [pc, #156]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b900:	e5900018 	ldr	r0, [r0, #24]
4001b904:	e3800001 	orr	r0, r0, #1
4001b908:	e59f8090 	ldr	r8, [pc, #144]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b90c:	e5880018 	str	r0, [r8, #24]
4001b910:	e59f0088 	ldr	r0, [pc, #136]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b914:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001b918:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001b91c:	e3560001 	cmp	r6, #1
4001b920:	0a000004 	beq	4001b938 <CyU3PGpifSMSwitch+0x110>
4001b924:	e3560002 	cmp	r6, #2
4001b928:	0a000009 	beq	4001b954 <CyU3PGpifSMSwitch+0x12c>
4001b92c:	e3560003 	cmp	r6, #3
4001b930:	1a000015 	bne	4001b98c <CyU3PGpifSMSwitch+0x164>
4001b934:	ea00000d 	b	4001b970 <CyU3PGpifSMSwitch+0x148>
4001b938:	e1a00000 	nop			; (mov r0, r0)
4001b93c:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001b940:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001b944:	e1800428 	orr	r0, r0, r8, lsr #8
4001b948:	e59f8050 	ldr	r8, [pc, #80]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b94c:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b950:	ea00000f 	b	4001b994 <CyU3PGpifSMSwitch+0x16c>
4001b954:	e1a00000 	nop			; (mov r0, r0)
4001b958:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001b95c:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001b960:	e1800428 	orr	r0, r0, r8, lsr #8
4001b964:	e59f8034 	ldr	r8, [pc, #52]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b968:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b96c:	ea000008 	b	4001b994 <CyU3PGpifSMSwitch+0x16c>
4001b970:	e1a00000 	nop			; (mov r0, r0)
4001b974:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001b978:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001b97c:	e1800428 	orr	r0, r0, r8, lsr #8
4001b980:	e59f8018 	ldr	r8, [pc, #24]	; 4001b9a0 <CyU3PGpifSMSwitch+0x178>
4001b984:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b988:	ea000001 	b	4001b994 <CyU3PGpifSMSwitch+0x16c>
4001b98c:	e1a00000 	nop			; (mov r0, r0)
4001b990:	e1a00000 	nop			; (mov r0, r0)
4001b994:	e1a00000 	nop			; (mov r0, r0)
4001b998:	e3a00000 	mov	r0, #0
4001b99c:	eaffffa8 	b	4001b844 <CyU3PGpifSMSwitch+0x1c>
4001b9a0:	e0014000 	.word	0xe0014000
4001b9a4:	40011e70 	.word	0x40011e70

Disassembly of section i.CyU3PConnectState:

4001b9a8 <CyU3PConnectState>:
4001b9a8:	e92d4070 	push	{r4, r5, r6, lr}
4001b9ac:	e1a04000 	mov	r4, r0
4001b9b0:	e1a06001 	mov	r6, r1
4001b9b4:	e59f0234 	ldr	r0, [pc, #564]	; 4001bbf0 <CyU3PConnectState+0x248>
4001b9b8:	e5d00008 	ldrb	r0, [r0, #8]
4001b9bc:	e3500000 	cmp	r0, #0
4001b9c0:	1a000001 	bne	4001b9cc <CyU3PConnectState+0x24>
4001b9c4:	e3a00042 	mov	r0, #66	; 0x42
4001b9c8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b9cc:	ebffe41a 	bl	40014a3c <CyFx3DevIsUsb3Supported>
4001b9d0:	e3500000 	cmp	r0, #0
4001b9d4:	1a000000 	bne	4001b9dc <CyU3PConnectState+0x34>
4001b9d8:	e3a06000 	mov	r6, #0
4001b9dc:	e3a05000 	mov	r5, #0
4001b9e0:	e3e01000 	mvn	r1, #0
4001b9e4:	e59f0208 	ldr	r0, [pc, #520]	; 4001bbf4 <CyU3PConnectState+0x24c>
4001b9e8:	ebffb9b2 	bl	4000a0b8 <_txe_mutex_get>
4001b9ec:	e3540000 	cmp	r4, #0
4001b9f0:	1a00001a 	bne	4001ba60 <CyU3PConnectState+0xb8>
4001b9f4:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bbf0 <CyU3PConnectState+0x248>
4001b9f8:	e5d00008 	ldrb	r0, [r0, #8]
4001b9fc:	e3500004 	cmp	r0, #4
4001ba00:	ba000012 	blt	4001ba50 <CyU3PConnectState+0xa8>
4001ba04:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bbf0 <CyU3PConnectState+0x248>
4001ba08:	e5d00008 	ldrb	r0, [r0, #8]
4001ba0c:	e3500005 	cmp	r0, #5
4001ba10:	ba000008 	blt	4001ba38 <CyU3PConnectState+0x90>
4001ba14:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bbf0 <CyU3PConnectState+0x248>
4001ba18:	e5d11009 	ldrb	r1, [r1, #9]
4001ba1c:	e3510003 	cmp	r1, #3
4001ba20:	1a000001 	bne	4001ba2c <CyU3PConnectState+0x84>
4001ba24:	e3a01001 	mov	r1, #1
4001ba28:	ea000000 	b	4001ba30 <CyU3PConnectState+0x88>
4001ba2c:	e3a01000 	mov	r1, #0
4001ba30:	e1a00001 	mov	r0, r1
4001ba34:	eb00050f 	bl	4001ce78 <CyU3PUsbPhyDisable>
4001ba38:	e3a00003 	mov	r0, #3
4001ba3c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bbf0 <CyU3PConnectState+0x248>
4001ba40:	e5c10008 	strb	r0, [r1, #8]
4001ba44:	e3a00000 	mov	r0, #0
4001ba48:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ba4c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001ba50:	e3a00000 	mov	r0, #0
4001ba54:	e59f1194 	ldr	r1, [pc, #404]	; 4001bbf0 <CyU3PConnectState+0x248>
4001ba58:	e5810044 	str	r0, [r1, #68]	; 0x44
4001ba5c:	ea00005f 	b	4001bbe0 <CyU3PConnectState+0x238>
4001ba60:	e59f0188 	ldr	r0, [pc, #392]	; 4001bbf0 <CyU3PConnectState+0x248>
4001ba64:	e5d00008 	ldrb	r0, [r0, #8]
4001ba68:	e3500003 	cmp	r0, #3
4001ba6c:	0a00000b 	beq	4001baa0 <CyU3PConnectState+0xf8>
4001ba70:	e3500004 	cmp	r0, #4
4001ba74:	0a000004 	beq	4001ba8c <CyU3PConnectState+0xe4>
4001ba78:	e3500005 	cmp	r0, #5
4001ba7c:	0a000004 	beq	4001ba94 <CyU3PConnectState+0xec>
4001ba80:	e3500006 	cmp	r0, #6
4001ba84:	1a000051 	bne	4001bbd0 <CyU3PConnectState+0x228>
4001ba88:	ea000002 	b	4001ba98 <CyU3PConnectState+0xf0>
4001ba8c:	e1a00000 	nop			; (mov r0, r0)
4001ba90:	e1a00000 	nop			; (mov r0, r0)
4001ba94:	e1a00000 	nop			; (mov r0, r0)
4001ba98:	e3a05043 	mov	r5, #67	; 0x43
4001ba9c:	ea00004e 	b	4001bbdc <CyU3PConnectState+0x234>
4001baa0:	e1a00000 	nop			; (mov r0, r0)
4001baa4:	e59f0144 	ldr	r0, [pc, #324]	; 4001bbf0 <CyU3PConnectState+0x248>
4001baa8:	e5d00007 	ldrb	r0, [r0, #7]
4001baac:	e3500001 	cmp	r0, #1
4001bab0:	0a00000f 	beq	4001baf4 <CyU3PConnectState+0x14c>
4001bab4:	e59f013c 	ldr	r0, [pc, #316]	; 4001bbf8 <CyU3PConnectState+0x250>
4001bab8:	e590001c 	ldr	r0, [r0, #28]
4001babc:	e3500000 	cmp	r0, #0
4001bac0:	0a000007 	beq	4001bae4 <CyU3PConnectState+0x13c>
4001bac4:	e59f012c 	ldr	r0, [pc, #300]	; 4001bbf8 <CyU3PConnectState+0x250>
4001bac8:	e5900014 	ldr	r0, [r0, #20]
4001bacc:	e3500000 	cmp	r0, #0
4001bad0:	0a000003 	beq	4001bae4 <CyU3PConnectState+0x13c>
4001bad4:	e59f011c 	ldr	r0, [pc, #284]	; 4001bbf8 <CyU3PConnectState+0x250>
4001bad8:	e5900018 	ldr	r0, [r0, #24]
4001badc:	e3500000 	cmp	r0, #0
4001bae0:	1a000003 	bne	4001baf4 <CyU3PConnectState+0x14c>
4001bae4:	e59f0108 	ldr	r0, [pc, #264]	; 4001bbf4 <CyU3PConnectState+0x24c>
4001bae8:	ebffb9a7 	bl	4000a18c <_txe_mutex_put>
4001baec:	e3a00044 	mov	r0, #68	; 0x44
4001baf0:	eaffffb4 	b	4001b9c8 <CyU3PConnectState+0x20>
4001baf4:	e3560000 	cmp	r6, #0
4001baf8:	0a000007 	beq	4001bb1c <CyU3PConnectState+0x174>
4001bafc:	e3a00000 	mov	r0, #0
4001bb00:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bbfc <CyU3PConnectState+0x254>
4001bb04:	e5810014 	str	r0, [r1, #20]
4001bb08:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bc00 <CyU3PConnectState+0x258>
4001bb0c:	e5810000 	str	r0, [r1]
4001bb10:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bc04 <CyU3PConnectState+0x25c>
4001bb14:	e5810000 	str	r0, [r1]
4001bb18:	ea000007 	b	4001bb3c <CyU3PConnectState+0x194>
4001bb1c:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bb20:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001bb24:	e3500000 	cmp	r0, #0
4001bb28:	0a000003 	beq	4001bb3c <CyU3PConnectState+0x194>
4001bb2c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bbf4 <CyU3PConnectState+0x24c>
4001bb30:	ebffb995 	bl	4000a18c <_txe_mutex_put>
4001bb34:	e3a000ff 	mov	r0, #255	; 0xff
4001bb38:	eaffffa2 	b	4001b9c8 <CyU3PConnectState+0x20>
4001bb3c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bb40:	e5806024 	str	r6, [r0, #36]	; 0x24
4001bb44:	e3a00000 	mov	r0, #0
4001bb48:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bb4c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bb50:	e2810000 	add	r0, r1, #0
4001bb54:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bb58:	e3500000 	cmp	r0, #0
4001bb5c:	0a000004 	beq	4001bb74 <CyU3PConnectState+0x1cc>
4001bb60:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bc08 <CyU3PConnectState+0x260>
4001bb64:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001bb68:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bb6c:	e1100001 	tst	r0, r1
4001bb70:	0a000012 	beq	4001bbc0 <CyU3PConnectState+0x218>
4001bb74:	e3560000 	cmp	r6, #0
4001bb78:	0a000007 	beq	4001bb9c <CyU3PConnectState+0x1f4>
4001bb7c:	e3a00000 	mov	r0, #0
4001bb80:	e59f1068 	ldr	r1, [pc, #104]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bb84:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bb88:	e3a00001 	mov	r0, #1
4001bb8c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bb90:	e3a00000 	mov	r0, #0
4001bb94:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bb98:	ea000002 	b	4001bba8 <CyU3PConnectState+0x200>
4001bb9c:	e3a00000 	mov	r0, #0
4001bba0:	e59f1048 	ldr	r1, [pc, #72]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bba4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bba8:	e1a00006 	mov	r0, r6
4001bbac:	eb000527 	bl	4001d050 <CyU3PUsbPhyEnable>
4001bbb0:	e3a00005 	mov	r0, #5
4001bbb4:	e59f1034 	ldr	r1, [pc, #52]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bbb8:	e5c10008 	strb	r0, [r1, #8]
4001bbbc:	ea000002 	b	4001bbcc <CyU3PConnectState+0x224>
4001bbc0:	e3a00004 	mov	r0, #4
4001bbc4:	e59f1024 	ldr	r1, [pc, #36]	; 4001bbf0 <CyU3PConnectState+0x248>
4001bbc8:	e5c10008 	strb	r0, [r1, #8]
4001bbcc:	ea000002 	b	4001bbdc <CyU3PConnectState+0x234>
4001bbd0:	e1a00000 	nop			; (mov r0, r0)
4001bbd4:	e3a05044 	mov	r5, #68	; 0x44
4001bbd8:	e1a00000 	nop			; (mov r0, r0)
4001bbdc:	e1a00000 	nop			; (mov r0, r0)
4001bbe0:	e59f000c 	ldr	r0, [pc, #12]	; 4001bbf4 <CyU3PConnectState+0x24c>
4001bbe4:	ebffb968 	bl	4000a18c <_txe_mutex_put>
4001bbe8:	e1a00005 	mov	r0, r5
4001bbec:	eaffff75 	b	4001b9c8 <CyU3PConnectState+0x20>
4001bbf0:	40031d40 	.word	0x40031d40
4001bbf4:	40031ee0 	.word	0x40031ee0
4001bbf8:	40031f98 	.word	0x40031f98
4001bbfc:	e0033000 	.word	0xe0033000
4001bc00:	40030da0 	.word	0x40030da0
4001bc04:	40030da4 	.word	0x40030da4
4001bc08:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bc0c <CyU3POtgGetMode>:
4001bc0c:	e59f0004 	ldr	r0, [pc, #4]	; 4001bc18 <CyU3POtgGetMode+0xc>
4001bc10:	e5d00000 	ldrb	r0, [r0]
4001bc14:	e12fff1e 	bx	lr
4001bc18:	40030d70 	.word	0x40030d70

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bc1c <CyU3POtgIsDeviceMode>:
4001bc1c:	e3a01000 	mov	r1, #0
4001bc20:	e59f00b4 	ldr	r0, [pc, #180]	; 4001bcdc <CyU3POtgIsDeviceMode+0xc0>
4001bc24:	e5d00000 	ldrb	r0, [r0]
4001bc28:	e3500000 	cmp	r0, #0
4001bc2c:	0a000003 	beq	4001bc40 <CyU3POtgIsDeviceMode+0x24>
4001bc30:	e59f00a4 	ldr	r0, [pc, #164]	; 4001bcdc <CyU3POtgIsDeviceMode+0xc0>
4001bc34:	e5d00000 	ldrb	r0, [r0]
4001bc38:	e3500002 	cmp	r0, #2
4001bc3c:	1a000024 	bne	4001bcd4 <CyU3POtgIsDeviceMode+0xb8>
4001bc40:	e59f0098 	ldr	r0, [pc, #152]	; 4001bce0 <CyU3POtgIsDeviceMode+0xc4>
4001bc44:	e5d00000 	ldrb	r0, [r0]
4001bc48:	e3500000 	cmp	r0, #0
4001bc4c:	0a000006 	beq	4001bc6c <CyU3POtgIsDeviceMode+0x50>
4001bc50:	e3500002 	cmp	r0, #2
4001bc54:	0a00000c 	beq	4001bc8c <CyU3POtgIsDeviceMode+0x70>
4001bc58:	e3500004 	cmp	r0, #4
4001bc5c:	0a00000b 	beq	4001bc90 <CyU3POtgIsDeviceMode+0x74>
4001bc60:	e3500005 	cmp	r0, #5
4001bc64:	1a00000c 	bne	4001bc9c <CyU3POtgIsDeviceMode+0x80>
4001bc68:	ea000009 	b	4001bc94 <CyU3POtgIsDeviceMode+0x78>
4001bc6c:	e1a00000 	nop			; (mov r0, r0)
4001bc70:	e59f0064 	ldr	r0, [pc, #100]	; 4001bcdc <CyU3POtgIsDeviceMode+0xc0>
4001bc74:	e5d00000 	ldrb	r0, [r0]
4001bc78:	e3500002 	cmp	r0, #2
4001bc7c:	1a000001 	bne	4001bc88 <CyU3POtgIsDeviceMode+0x6c>
4001bc80:	e3a00000 	mov	r0, #0
4001bc84:	e12fff1e 	bx	lr
4001bc88:	e1a00000 	nop			; (mov r0, r0)
4001bc8c:	e1a00000 	nop			; (mov r0, r0)
4001bc90:	e1a00000 	nop			; (mov r0, r0)
4001bc94:	e3a01001 	mov	r1, #1
4001bc98:	ea000002 	b	4001bca8 <CyU3POtgIsDeviceMode+0x8c>
4001bc9c:	e1a00000 	nop			; (mov r0, r0)
4001bca0:	e3a01000 	mov	r1, #0
4001bca4:	e1a00000 	nop			; (mov r0, r0)
4001bca8:	e1a00000 	nop			; (mov r0, r0)
4001bcac:	e59f0030 	ldr	r0, [pc, #48]	; 4001bce4 <CyU3POtgIsDeviceMode+0xc8>
4001bcb0:	e5900000 	ldr	r0, [r0]
4001bcb4:	e3500000 	cmp	r0, #0
4001bcb8:	0a000005 	beq	4001bcd4 <CyU3POtgIsDeviceMode+0xb8>
4001bcbc:	e3510000 	cmp	r1, #0
4001bcc0:	1a000001 	bne	4001bccc <CyU3POtgIsDeviceMode+0xb0>
4001bcc4:	e3a00001 	mov	r0, #1
4001bcc8:	ea000000 	b	4001bcd0 <CyU3POtgIsDeviceMode+0xb4>
4001bccc:	e3a00000 	mov	r0, #0
4001bcd0:	e1a01000 	mov	r1, r0
4001bcd4:	e1a00001 	mov	r0, r1
4001bcd8:	eaffffe9 	b	4001bc84 <CyU3POtgIsDeviceMode+0x68>
4001bcdc:	40030d70 	.word	0x40030d70
4001bce0:	40030d6c 	.word	0x40030d6c
4001bce4:	40030d68 	.word	0x40030d68

Disassembly of section i.CyU3POtgIsHostMode:

4001bce8 <CyU3POtgIsHostMode>:
4001bce8:	e3a01000 	mov	r1, #0
4001bcec:	e59f00a8 	ldr	r0, [pc, #168]	; 4001bd9c <CyU3POtgIsHostMode+0xb4>
4001bcf0:	e5d00000 	ldrb	r0, [r0]
4001bcf4:	e3500001 	cmp	r0, #1
4001bcf8:	0a000003 	beq	4001bd0c <CyU3POtgIsHostMode+0x24>
4001bcfc:	e59f0098 	ldr	r0, [pc, #152]	; 4001bd9c <CyU3POtgIsHostMode+0xb4>
4001bd00:	e5d00000 	ldrb	r0, [r0]
4001bd04:	e3500002 	cmp	r0, #2
4001bd08:	1a000021 	bne	4001bd94 <CyU3POtgIsHostMode+0xac>
4001bd0c:	e59f008c 	ldr	r0, [pc, #140]	; 4001bda0 <CyU3POtgIsHostMode+0xb8>
4001bd10:	e5d00000 	ldrb	r0, [r0]
4001bd14:	e3500000 	cmp	r0, #0
4001bd18:	0a000004 	beq	4001bd30 <CyU3POtgIsHostMode+0x48>
4001bd1c:	e3500001 	cmp	r0, #1
4001bd20:	0a00000a 	beq	4001bd50 <CyU3POtgIsHostMode+0x68>
4001bd24:	e3500003 	cmp	r0, #3
4001bd28:	1a00000b 	bne	4001bd5c <CyU3POtgIsHostMode+0x74>
4001bd2c:	ea000008 	b	4001bd54 <CyU3POtgIsHostMode+0x6c>
4001bd30:	e1a00000 	nop			; (mov r0, r0)
4001bd34:	e59f0060 	ldr	r0, [pc, #96]	; 4001bd9c <CyU3POtgIsHostMode+0xb4>
4001bd38:	e5d00000 	ldrb	r0, [r0]
4001bd3c:	e3500002 	cmp	r0, #2
4001bd40:	1a000001 	bne	4001bd4c <CyU3POtgIsHostMode+0x64>
4001bd44:	e3a00000 	mov	r0, #0
4001bd48:	e12fff1e 	bx	lr
4001bd4c:	e1a00000 	nop			; (mov r0, r0)
4001bd50:	e1a00000 	nop			; (mov r0, r0)
4001bd54:	e3a01001 	mov	r1, #1
4001bd58:	ea000002 	b	4001bd68 <CyU3POtgIsHostMode+0x80>
4001bd5c:	e1a00000 	nop			; (mov r0, r0)
4001bd60:	e3a01000 	mov	r1, #0
4001bd64:	e1a00000 	nop			; (mov r0, r0)
4001bd68:	e1a00000 	nop			; (mov r0, r0)
4001bd6c:	e59f0030 	ldr	r0, [pc, #48]	; 4001bda4 <CyU3POtgIsHostMode+0xbc>
4001bd70:	e5900000 	ldr	r0, [r0]
4001bd74:	e3500000 	cmp	r0, #0
4001bd78:	0a000005 	beq	4001bd94 <CyU3POtgIsHostMode+0xac>
4001bd7c:	e3510000 	cmp	r1, #0
4001bd80:	1a000001 	bne	4001bd8c <CyU3POtgIsHostMode+0xa4>
4001bd84:	e3a00001 	mov	r0, #1
4001bd88:	ea000000 	b	4001bd90 <CyU3POtgIsHostMode+0xa8>
4001bd8c:	e3a00000 	mov	r0, #0
4001bd90:	e1a01000 	mov	r1, r0
4001bd94:	e1a00001 	mov	r0, r1
4001bd98:	eaffffea 	b	4001bd48 <CyU3POtgIsHostMode+0x60>
4001bd9c:	40030d70 	.word	0x40030d70
4001bda0:	40030d6c 	.word	0x40030d6c
4001bda4:	40030d68 	.word	0x40030d68

Disassembly of section i.CyU3POtgIsStarted:

4001bda8 <CyU3POtgIsStarted>:
4001bda8:	e59f0004 	ldr	r0, [pc, #4]	; 4001bdb4 <CyU3POtgIsStarted+0xc>
4001bdac:	e5900000 	ldr	r0, [r0]
4001bdb0:	e12fff1e 	bx	lr
4001bdb4:	40030d64 	.word	0x40030d64

Disassembly of section i.CyU3PSetEpConfig:

4001bdb8 <CyU3PSetEpConfig>:
4001bdb8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001bdbc:	e1a04000 	mov	r4, r0
4001bdc0:	e1a05001 	mov	r5, r1
4001bdc4:	e204607f 	and	r6, r4, #127	; 0x7f
4001bdc8:	e3a07000 	mov	r7, #0
4001bdcc:	e3a08000 	mov	r8, #0
4001bdd0:	e3a09000 	mov	r9, #0
4001bdd4:	e3a0a000 	mov	sl, #0
4001bdd8:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c368 <CyU3PSetEpConfig+0x5b0>
4001bddc:	e5d00008 	ldrb	r0, [r0, #8]
4001bde0:	e3500000 	cmp	r0, #0
4001bde4:	1a000001 	bne	4001bdf0 <CyU3PSetEpConfig+0x38>
4001bde8:	e3a00042 	mov	r0, #66	; 0x42
4001bdec:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001bdf0:	e3550000 	cmp	r5, #0
4001bdf4:	1a000001 	bne	4001be00 <CyU3PSetEpConfig+0x48>
4001bdf8:	e3a00041 	mov	r0, #65	; 0x41
4001bdfc:	eafffffa 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001be00:	e5950000 	ldr	r0, [r5]
4001be04:	e3500000 	cmp	r0, #0
4001be08:	0a000074 	beq	4001bfe0 <CyU3PSetEpConfig+0x228>
4001be0c:	e1d500b8 	ldrh	r0, [r5, #8]
4001be10:	e3500b01 	cmp	r0, #1024	; 0x400
4001be14:	ca000001 	bgt	4001be20 <CyU3PSetEpConfig+0x68>
4001be18:	e356000f 	cmp	r6, #15
4001be1c:	da000001 	ble	4001be28 <CyU3PSetEpConfig+0x70>
4001be20:	e3a00040 	mov	r0, #64	; 0x40
4001be24:	eafffff0 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001be28:	e5d50004 	ldrb	r0, [r5, #4]
4001be2c:	e3500000 	cmp	r0, #0
4001be30:	0a000002 	beq	4001be40 <CyU3PSetEpConfig+0x88>
4001be34:	e5d50004 	ldrb	r0, [r5, #4]
4001be38:	e3500003 	cmp	r0, #3
4001be3c:	da000001 	ble	4001be48 <CyU3PSetEpConfig+0x90>
4001be40:	e3a00040 	mov	r0, #64	; 0x40
4001be44:	eaffffe8 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001be48:	e5d5000a 	ldrb	r0, [r5, #10]
4001be4c:	e3500010 	cmp	r0, #16
4001be50:	ca000008 	bgt	4001be78 <CyU3PSetEpConfig+0xc0>
4001be54:	e5d5000a 	ldrb	r0, [r5, #10]
4001be58:	e3500001 	cmp	r0, #1
4001be5c:	da000007 	ble	4001be80 <CyU3PSetEpConfig+0xc8>
4001be60:	e1d500b8 	ldrh	r0, [r5, #8]
4001be64:	e3500b01 	cmp	r0, #1024	; 0x400
4001be68:	aa000004 	bge	4001be80 <CyU3PSetEpConfig+0xc8>
4001be6c:	e1d500b8 	ldrh	r0, [r5, #8]
4001be70:	e3500000 	cmp	r0, #0
4001be74:	0a000001 	beq	4001be80 <CyU3PSetEpConfig+0xc8>
4001be78:	e3a00040 	mov	r0, #64	; 0x40
4001be7c:	eaffffda 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001be80:	e5d50004 	ldrb	r0, [r5, #4]
4001be84:	e1a00f00 	lsl	r0, r0, #30
4001be88:	e1a08a20 	lsr	r8, r0, #20
4001be8c:	e5d50004 	ldrb	r0, [r5, #4]
4001be90:	e2000003 	and	r0, r0, #3
4001be94:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c36c <CyU3PSetEpConfig+0x5b4>
4001be98:	e7d1a000 	ldrb	sl, [r1, r0]
4001be9c:	e5d5000a 	ldrb	r0, [r5, #10]
4001bea0:	e3500000 	cmp	r0, #0
4001bea4:	0a000004 	beq	4001bebc <CyU3PSetEpConfig+0x104>
4001bea8:	e5d5000a 	ldrb	r0, [r5, #10]
4001beac:	e2400001 	sub	r0, r0, #1
4001beb0:	e200000f 	and	r0, r0, #15
4001beb4:	e18aa400 	orr	sl, sl, r0, lsl #8
4001beb8:	ea000001 	b	4001bec4 <CyU3PSetEpConfig+0x10c>
4001bebc:	e3a00001 	mov	r0, #1
4001bec0:	e5c5000a 	strb	r0, [r5, #10]
4001bec4:	e5d50004 	ldrb	r0, [r5, #4]
4001bec8:	e3500001 	cmp	r0, #1
4001becc:	1a000013 	bne	4001bf20 <CyU3PSetEpConfig+0x168>
4001bed0:	e5950000 	ldr	r0, [r5]
4001bed4:	e3500000 	cmp	r0, #0
4001bed8:	0a000010 	beq	4001bf20 <CyU3PSetEpConfig+0x168>
4001bedc:	e5d5000b 	ldrb	r0, [r5, #11]
4001bee0:	e2000003 	and	r0, r0, #3
4001bee4:	e1888600 	orr	r8, r8, r0, lsl #12
4001bee8:	e5d5000a 	ldrb	r0, [r5, #10]
4001beec:	e5d5100b 	ldrb	r1, [r5, #11]
4001bef0:	e1600180 	smulbb	r0, r0, r1
4001bef4:	e200003f 	and	r0, r0, #63	; 0x3f
4001bef8:	e18aa100 	orr	sl, sl, r0, lsl #2
4001befc:	e5d5000b 	ldrb	r0, [r5, #11]
4001bf00:	e3500001 	cmp	r0, #1
4001bf04:	da000005 	ble	4001bf20 <CyU3PSetEpConfig+0x168>
4001bf08:	e3560003 	cmp	r6, #3
4001bf0c:	0a000003 	beq	4001bf20 <CyU3PSetEpConfig+0x168>
4001bf10:	e3560007 	cmp	r6, #7
4001bf14:	0a000001 	beq	4001bf20 <CyU3PSetEpConfig+0x168>
4001bf18:	e3a0004d 	mov	r0, #77	; 0x4d
4001bf1c:	eaffffb2 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001bf20:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf24:	e3500000 	cmp	r0, #0
4001bf28:	0a000004 	beq	4001bf40 <CyU3PSetEpConfig+0x188>
4001bf2c:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf30:	e3500b01 	cmp	r0, #1024	; 0x400
4001bf34:	ca000001 	bgt	4001bf40 <CyU3PSetEpConfig+0x188>
4001bf38:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf3c:	ea000000 	b	4001bf44 <CyU3PSetEpConfig+0x18c>
4001bf40:	e3a00b01 	mov	r0, #1024	; 0x400
4001bf44:	e1a07800 	lsl	r7, r0, #16
4001bf48:	e1a07827 	lsr	r7, r7, #16
4001bf4c:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c368 <CyU3PSetEpConfig+0x5b0>
4001bf50:	e5d00008 	ldrb	r0, [r0, #8]
4001bf54:	e3500005 	cmp	r0, #5
4001bf58:	da00001e 	ble	4001bfd8 <CyU3PSetEpConfig+0x220>
4001bf5c:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c368 <CyU3PSetEpConfig+0x5b0>
4001bf60:	e5d00009 	ldrb	r0, [r0, #9]
4001bf64:	e3500001 	cmp	r0, #1
4001bf68:	0a000008 	beq	4001bf90 <CyU3PSetEpConfig+0x1d8>
4001bf6c:	e3500002 	cmp	r0, #2
4001bf70:	1a000015 	bne	4001bfcc <CyU3PSetEpConfig+0x214>
4001bf74:	e5d50004 	ldrb	r0, [r5, #4]
4001bf78:	e3500002 	cmp	r0, #2
4001bf7c:	1a000002 	bne	4001bf8c <CyU3PSetEpConfig+0x1d4>
4001bf80:	e3570c02 	cmp	r7, #512	; 0x200
4001bf84:	da000000 	ble	4001bf8c <CyU3PSetEpConfig+0x1d4>
4001bf88:	e3a07c02 	mov	r7, #512	; 0x200
4001bf8c:	ea000010 	b	4001bfd4 <CyU3PSetEpConfig+0x21c>
4001bf90:	e1a00000 	nop			; (mov r0, r0)
4001bf94:	e5d50004 	ldrb	r0, [r5, #4]
4001bf98:	e3500001 	cmp	r0, #1
4001bf9c:	1a000003 	bne	4001bfb0 <CyU3PSetEpConfig+0x1f8>
4001bfa0:	e3570b01 	cmp	r7, #1024	; 0x400
4001bfa4:	ba000001 	blt	4001bfb0 <CyU3PSetEpConfig+0x1f8>
4001bfa8:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c370 <CyU3PSetEpConfig+0x5b8>
4001bfac:	ea000005 	b	4001bfc8 <CyU3PSetEpConfig+0x210>
4001bfb0:	e5d50004 	ldrb	r0, [r5, #4]
4001bfb4:	e3500001 	cmp	r0, #1
4001bfb8:	0a000002 	beq	4001bfc8 <CyU3PSetEpConfig+0x210>
4001bfbc:	e3570040 	cmp	r7, #64	; 0x40
4001bfc0:	da000000 	ble	4001bfc8 <CyU3PSetEpConfig+0x210>
4001bfc4:	e3a07040 	mov	r7, #64	; 0x40
4001bfc8:	ea000001 	b	4001bfd4 <CyU3PSetEpConfig+0x21c>
4001bfcc:	e1a00000 	nop			; (mov r0, r0)
4001bfd0:	e1a00000 	nop			; (mov r0, r0)
4001bfd4:	e1a00000 	nop			; (mov r0, r0)
4001bfd8:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001bfdc:	e1888000 	orr	r8, r8, r0
4001bfe0:	e3e01000 	mvn	r1, #0
4001bfe4:	e59f0388 	ldr	r0, [pc, #904]	; 4001c374 <CyU3PSetEpConfig+0x5bc>
4001bfe8:	ebffb832 	bl	4000a0b8 <_txe_mutex_get>
4001bfec:	e3140080 	tst	r4, #128	; 0x80
4001bff0:	0a000062 	beq	4001c180 <CyU3PSetEpConfig+0x3c8>
4001bff4:	e5950000 	ldr	r0, [r5]
4001bff8:	e3500000 	cmp	r0, #0
4001bffc:	1a00001d 	bne	4001c078 <CyU3PSetEpConfig+0x2c0>
4001c000:	e59f0370 	ldr	r0, [pc, #880]	; 4001c378 <CyU3PSetEpConfig+0x5c0>
4001c004:	e59f1370 	ldr	r1, [pc, #880]	; 4001c37c <CyU3PSetEpConfig+0x5c4>
4001c008:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c00c:	e3a00020 	mov	r0, #32
4001c010:	e59f1368 	ldr	r1, [pc, #872]	; 4001c380 <CyU3PSetEpConfig+0x5c8>
4001c014:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c018:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c01c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c020:	e3a01001 	mov	r1, #1
4001c024:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c028:	e59f1354 	ldr	r1, [pc, #852]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c02c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c030:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c034:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c038:	e3a01001 	mov	r1, #1
4001c03c:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c040:	e59f1340 	ldr	r1, [pc, #832]	; 4001c388 <CyU3PSetEpConfig+0x5d0>
4001c044:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c048:	e3a00000 	mov	r0, #0
4001c04c:	e0861086 	add	r1, r6, r6, lsl #1
4001c050:	e59f2334 	ldr	r2, [pc, #820]	; 4001c38c <CyU3PSetEpConfig+0x5d4>
4001c054:	e0821101 	add	r1, r2, r1, lsl #2
4001c058:	e5810004 	str	r0, [r1, #4]
4001c05c:	e0861086 	add	r1, r6, r6, lsl #1
4001c060:	e0821101 	add	r1, r2, r1, lsl #2
4001c064:	e5810008 	str	r0, [r1, #8]
4001c068:	e59f0304 	ldr	r0, [pc, #772]	; 4001c374 <CyU3PSetEpConfig+0x5bc>
4001c06c:	ebffb846 	bl	4000a18c <_txe_mutex_put>
4001c070:	e3a00000 	mov	r0, #0
4001c074:	eaffff5c 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001c078:	e3a00001 	mov	r0, #1
4001c07c:	e0861086 	add	r1, r6, r6, lsl #1
4001c080:	e59f2304 	ldr	r2, [pc, #772]	; 4001c38c <CyU3PSetEpConfig+0x5d4>
4001c084:	e0821101 	add	r1, r2, r1, lsl #2
4001c088:	e5810004 	str	r0, [r1, #4]
4001c08c:	e0861086 	add	r1, r6, r6, lsl #1
4001c090:	e0821101 	add	r1, r2, r1, lsl #2
4001c094:	e5810008 	str	r0, [r1, #8]
4001c098:	e1d500b8 	ldrh	r0, [r5, #8]
4001c09c:	e0861086 	add	r1, r6, r6, lsl #1
4001c0a0:	e0821101 	add	r1, r2, r1, lsl #2
4001c0a4:	e1c100b0 	strh	r0, [r1]
4001c0a8:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c390 <CyU3PSetEpConfig+0x5d8>
4001c0ac:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c0b0:	e5d50004 	ldrb	r0, [r5, #4]
4001c0b4:	e3500002 	cmp	r0, #2
4001c0b8:	1a000007 	bne	4001c0dc <CyU3PSetEpConfig+0x324>
4001c0bc:	e1d500b6 	ldrh	r0, [r5, #6]
4001c0c0:	e3500000 	cmp	r0, #0
4001c0c4:	da000004 	ble	4001c0dc <CyU3PSetEpConfig+0x324>
4001c0c8:	e3a02001 	mov	r2, #1
4001c0cc:	e1a01006 	mov	r1, r6
4001c0d0:	e1a00004 	mov	r0, r4
4001c0d4:	eb00031b 	bl	4001cd48 <CyU3PUsbMapStream>
4001c0d8:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c394 <CyU3PSetEpConfig+0x5dc>
4001c0dc:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c0e0:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c0e4:	e3a01001 	mov	r1, #1
4001c0e8:	e1800611 	orr	r0, r0, r1, lsl r6
4001c0ec:	e59f1290 	ldr	r1, [pc, #656]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c0f0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c0f4:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c0f8:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c0fc:	e59f1278 	ldr	r1, [pc, #632]	; 4001c37c <CyU3PSetEpConfig+0x5c4>
4001c100:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c104:	e3890001 	orr	r0, r9, #1
4001c108:	e59f1270 	ldr	r1, [pc, #624]	; 4001c380 <CyU3PSetEpConfig+0x5c8>
4001c10c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c110:	e2810040 	add	r0, r1, #64	; 0x40
4001c114:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c118:	e59f0278 	ldr	r0, [pc, #632]	; 4001c398 <CyU3PSetEpConfig+0x5e0>
4001c11c:	e5900000 	ldr	r0, [r0]
4001c120:	e3500000 	cmp	r0, #0
4001c124:	0a00007f 	beq	4001c328 <CyU3PSetEpConfig+0x570>
4001c128:	e3a00001 	mov	r0, #1
4001c12c:	e59f1268 	ldr	r1, [pc, #616]	; 4001c39c <CyU3PSetEpConfig+0x5e4>
4001c130:	e5911000 	ldr	r1, [r1]
4001c134:	e1110610 	tst	r1, r0, lsl r6
4001c138:	0a00007a 	beq	4001c328 <CyU3PSetEpConfig+0x570>
4001c13c:	e59f0244 	ldr	r0, [pc, #580]	; 4001c388 <CyU3PSetEpConfig+0x5d0>
4001c140:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c144:	e3a01001 	mov	r1, #1
4001c148:	e1800611 	orr	r0, r0, r1, lsl r6
4001c14c:	e59f1234 	ldr	r1, [pc, #564]	; 4001c388 <CyU3PSetEpConfig+0x5d0>
4001c150:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c154:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c158:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c15c:	e3a01001 	mov	r1, #1
4001c160:	e1800611 	orr	r0, r0, r1, lsl r6
4001c164:	e59f1218 	ldr	r1, [pc, #536]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c168:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c16c:	e59f0224 	ldr	r0, [pc, #548]	; 4001c398 <CyU3PSetEpConfig+0x5e0>
4001c170:	e5901000 	ldr	r1, [r0]
4001c174:	e1a00004 	mov	r0, r4
4001c178:	eb0001ba 	bl	4001c868 <CyU3PUsbEnableEpInterrupts>
4001c17c:	ea000069 	b	4001c328 <CyU3PSetEpConfig+0x570>
4001c180:	e5950000 	ldr	r0, [r5]
4001c184:	e3500000 	cmp	r0, #0
4001c188:	1a00001e 	bne	4001c208 <CyU3PSetEpConfig+0x450>
4001c18c:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c378 <CyU3PSetEpConfig+0x5c0>
4001c190:	e59f1208 	ldr	r1, [pc, #520]	; 4001c3a0 <CyU3PSetEpConfig+0x5e8>
4001c194:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c198:	e3a00020 	mov	r0, #32
4001c19c:	e59f1200 	ldr	r1, [pc, #512]	; 4001c3a4 <CyU3PSetEpConfig+0x5ec>
4001c1a0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1a4:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c1a8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c1ac:	e2861010 	add	r1, r6, #16
4001c1b0:	e3a02001 	mov	r2, #1
4001c1b4:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c1b8:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c388 <CyU3PSetEpConfig+0x5d0>
4001c1bc:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c1c0:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c1c4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c1c8:	e2861010 	add	r1, r6, #16
4001c1cc:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c1d0:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c1d4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c1d8:	e3a00000 	mov	r0, #0
4001c1dc:	e0861086 	add	r1, r6, r6, lsl #1
4001c1e0:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c3a8 <CyU3PSetEpConfig+0x5f0>
4001c1e4:	e0821101 	add	r1, r2, r1, lsl #2
4001c1e8:	e5810004 	str	r0, [r1, #4]
4001c1ec:	e0861086 	add	r1, r6, r6, lsl #1
4001c1f0:	e0821101 	add	r1, r2, r1, lsl #2
4001c1f4:	e5810008 	str	r0, [r1, #8]
4001c1f8:	e59f0174 	ldr	r0, [pc, #372]	; 4001c374 <CyU3PSetEpConfig+0x5bc>
4001c1fc:	ebffb7e2 	bl	4000a18c <_txe_mutex_put>
4001c200:	e3a00000 	mov	r0, #0
4001c204:	eafffef8 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001c208:	e3a00001 	mov	r0, #1
4001c20c:	e0861086 	add	r1, r6, r6, lsl #1
4001c210:	e59f2190 	ldr	r2, [pc, #400]	; 4001c3a8 <CyU3PSetEpConfig+0x5f0>
4001c214:	e0821101 	add	r1, r2, r1, lsl #2
4001c218:	e5810004 	str	r0, [r1, #4]
4001c21c:	e0861086 	add	r1, r6, r6, lsl #1
4001c220:	e0821101 	add	r1, r2, r1, lsl #2
4001c224:	e5810008 	str	r0, [r1, #8]
4001c228:	e1d500b8 	ldrh	r0, [r5, #8]
4001c22c:	e0861086 	add	r1, r6, r6, lsl #1
4001c230:	e0821101 	add	r1, r2, r1, lsl #2
4001c234:	e1c100b0 	strh	r0, [r1]
4001c238:	e59f016c 	ldr	r0, [pc, #364]	; 4001c3ac <CyU3PSetEpConfig+0x5f4>
4001c23c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c240:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c244:	e1800007 	orr	r0, r0, r7
4001c248:	e59f115c 	ldr	r1, [pc, #348]	; 4001c3ac <CyU3PSetEpConfig+0x5f4>
4001c24c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c250:	e5d50004 	ldrb	r0, [r5, #4]
4001c254:	e3500002 	cmp	r0, #2
4001c258:	1a00000e 	bne	4001c298 <CyU3PSetEpConfig+0x4e0>
4001c25c:	e1d500b6 	ldrh	r0, [r5, #6]
4001c260:	e3500000 	cmp	r0, #0
4001c264:	da00000b 	ble	4001c298 <CyU3PSetEpConfig+0x4e0>
4001c268:	e3a02001 	mov	r2, #1
4001c26c:	e1a01006 	mov	r1, r6
4001c270:	e1a00004 	mov	r0, r4
4001c274:	eb0002b3 	bl	4001cd48 <CyU3PUsbMapStream>
4001c278:	e59f0104 	ldr	r0, [pc, #260]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c27c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c280:	e2861010 	add	r1, r6, #16
4001c284:	e3a02001 	mov	r2, #1
4001c288:	e1800112 	orr	r0, r0, r2, lsl r1
4001c28c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c290:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c294:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c394 <CyU3PSetEpConfig+0x5dc>
4001c298:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c29c:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c3a0 <CyU3PSetEpConfig+0x5e8>
4001c2a0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c2a4:	e3890001 	orr	r0, r9, #1
4001c2a8:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c3a4 <CyU3PSetEpConfig+0x5ec>
4001c2ac:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c2b0:	e2810040 	add	r0, r1, #64	; 0x40
4001c2b4:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c2b8:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c398 <CyU3PSetEpConfig+0x5e0>
4001c2bc:	e5900000 	ldr	r0, [r0]
4001c2c0:	e3500000 	cmp	r0, #0
4001c2c4:	0a000017 	beq	4001c328 <CyU3PSetEpConfig+0x570>
4001c2c8:	e2860010 	add	r0, r6, #16
4001c2cc:	e3a01001 	mov	r1, #1
4001c2d0:	e1a00011 	lsl	r0, r1, r0
4001c2d4:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c39c <CyU3PSetEpConfig+0x5e4>
4001c2d8:	e5911000 	ldr	r1, [r1]
4001c2dc:	e1100001 	tst	r0, r1
4001c2e0:	0a000010 	beq	4001c328 <CyU3PSetEpConfig+0x570>
4001c2e4:	e59f009c 	ldr	r0, [pc, #156]	; 4001c388 <CyU3PSetEpConfig+0x5d0>
4001c2e8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c2ec:	e2861010 	add	r1, r6, #16
4001c2f0:	e3a02001 	mov	r2, #1
4001c2f4:	e1800112 	orr	r0, r0, r2, lsl r1
4001c2f8:	e59f1088 	ldr	r1, [pc, #136]	; 4001c388 <CyU3PSetEpConfig+0x5d0>
4001c2fc:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c300:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c304:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c308:	e2861010 	add	r1, r6, #16
4001c30c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c310:	e59f106c 	ldr	r1, [pc, #108]	; 4001c384 <CyU3PSetEpConfig+0x5cc>
4001c314:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c318:	e59f0078 	ldr	r0, [pc, #120]	; 4001c398 <CyU3PSetEpConfig+0x5e0>
4001c31c:	e5901000 	ldr	r1, [r0]
4001c320:	e1a00004 	mov	r0, r4
4001c324:	eb00014f 	bl	4001c868 <CyU3PUsbEnableEpInterrupts>
4001c328:	e59f0038 	ldr	r0, [pc, #56]	; 4001c368 <CyU3PSetEpConfig+0x5b0>
4001c32c:	e5d00008 	ldrb	r0, [r0, #8]
4001c330:	e3500005 	cmp	r0, #5
4001c334:	ba000007 	blt	4001c358 <CyU3PSetEpConfig+0x5a0>
4001c338:	e1a00004 	mov	r0, r4
4001c33c:	eb00040e 	bl	4001d37c <CyU3PUsbResetEp>
4001c340:	e1a00004 	mov	r0, r4
4001c344:	eb0001a4 	bl	4001c9dc <CyU3PUsbFlushEp>
4001c348:	e3a02001 	mov	r2, #1
4001c34c:	e3a01000 	mov	r1, #0
4001c350:	e1a00004 	mov	r0, r4
4001c354:	eb00066c 	bl	4001dd0c <CyU3PUsbStall>
4001c358:	e59f0014 	ldr	r0, [pc, #20]	; 4001c374 <CyU3PSetEpConfig+0x5bc>
4001c35c:	ebffb78a 	bl	4000a18c <_txe_mutex_put>
4001c360:	e3a00000 	mov	r0, #0
4001c364:	eafffea0 	b	4001bdec <CyU3PSetEpConfig+0x34>
4001c368:	40031d40 	.word	0x40031d40
4001c36c:	40011e74 	.word	0x40011e74
4001c370:	000003ff 	.word	0x000003ff
4001c374:	40031ee0 	.word	0x40031ee0
4001c378:	00004040 	.word	0x00004040
4001c37c:	e0031418 	.word	0xe0031418
4001c380:	e0033500 	.word	0xe0033500
4001c384:	e0033000 	.word	0xe0033000
4001c388:	e0031000 	.word	0xe0031000
4001c38c:	40031bb8 	.word	0x40031bb8
4001c390:	e0031c40 	.word	0xe0031c40
4001c394:	00400028 	.word	0x00400028
4001c398:	40030d98 	.word	0x40030d98
4001c39c:	40030d9c 	.word	0x40030d9c
4001c3a0:	e0031498 	.word	0xe0031498
4001c3a4:	e0033600 	.word	0xe0033600
4001c3a8:	40031c78 	.word	0x40031c78
4001c3ac:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c3b0 <CyU3PSetUsbCoreClock>:
4001c3b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c3b4:	e1a04000 	mov	r4, r0
4001c3b8:	e1a05001 	mov	r5, r1
4001c3bc:	eb0016d5 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
4001c3c0:	e1a06000 	mov	r6, r0
4001c3c4:	e59f0064 	ldr	r0, [pc, #100]	; 4001c430 <CyU3PSetUsbCoreClock+0x80>
4001c3c8:	e5900008 	ldr	r0, [r0, #8]
4001c3cc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c3d0:	e59f1058 	ldr	r1, [pc, #88]	; 4001c430 <CyU3PSetUsbCoreClock+0x80>
4001c3d4:	e5810008 	str	r0, [r1, #8]
4001c3d8:	e3a07014 	mov	r7, #20
4001c3dc:	ea000001 	b	4001c3e8 <CyU3PSetUsbCoreClock+0x38>
4001c3e0:	e1a00000 	nop			; (mov r0, r0)
4001c3e4:	e2477001 	sub	r7, r7, #1
4001c3e8:	e3570000 	cmp	r7, #0
4001c3ec:	1afffffb 	bne	4001c3e0 <CyU3PSetUsbCoreClock+0x30>
4001c3f0:	e1850104 	orr	r0, r5, r4, lsl #2
4001c3f4:	e59f1034 	ldr	r1, [pc, #52]	; 4001c430 <CyU3PSetUsbCoreClock+0x80>
4001c3f8:	e5810008 	str	r0, [r1, #8]
4001c3fc:	e1a00001 	mov	r0, r1
4001c400:	e5900008 	ldr	r0, [r0, #8]
4001c404:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c408:	e5810008 	str	r0, [r1, #8]
4001c40c:	e3a07050 	mov	r7, #80	; 0x50
4001c410:	ea000001 	b	4001c41c <CyU3PSetUsbCoreClock+0x6c>
4001c414:	e1a00000 	nop			; (mov r0, r0)
4001c418:	e2477001 	sub	r7, r7, #1
4001c41c:	e3570000 	cmp	r7, #0
4001c420:	1afffffb 	bne	4001c414 <CyU3PSetUsbCoreClock+0x64>
4001c424:	e1a00006 	mov	r0, r6
4001c428:	eb0016c8 	bl	40021f50 <CyU3PVicEnableInterrupts>
4001c42c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c430:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c434 <CyU3PUibInit>:
4001c434:	e92d4010 	push	{r4, lr}
4001c438:	e3a04000 	mov	r4, #0
4001c43c:	e3a00000 	mov	r0, #0
4001c440:	e59f117c 	ldr	r1, [pc, #380]	; 4001c5c4 <CyU3PUibInit+0x190>
4001c444:	e5810004 	str	r0, [r1, #4]
4001c448:	e5810008 	str	r0, [r1, #8]
4001c44c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c450:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c454:	e581001c 	str	r0, [r1, #28]
4001c458:	e3e00000 	mvn	r0, #0
4001c45c:	e581000c 	str	r0, [r1, #12]
4001c460:	e5810004 	str	r0, [r1, #4]
4001c464:	e59f015c 	ldr	r0, [pc, #348]	; 4001c5c8 <CyU3PUibInit+0x194>
4001c468:	e5810008 	str	r0, [r1, #8]
4001c46c:	e3a00000 	mov	r0, #0
4001c470:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c474:	e3e00000 	mvn	r0, #0
4001c478:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c47c:	e59f0148 	ldr	r0, [pc, #328]	; 4001c5cc <CyU3PUibInit+0x198>
4001c480:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c484:	eb0016c5 	bl	40021fa0 <CyFx3Usb2PhySetup>
4001c488:	e3e00000 	mvn	r0, #0
4001c48c:	e59f113c 	ldr	r1, [pc, #316]	; 4001c5d0 <CyU3PUibInit+0x19c>
4001c490:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c494:	e59f0138 	ldr	r0, [pc, #312]	; 4001c5d4 <CyU3PUibInit+0x1a0>
4001c498:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c49c:	e3e00000 	mvn	r0, #0
4001c4a0:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c4a4:	e3a00000 	mov	r0, #0
4001c4a8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c4ac:	e3a00001 	mov	r0, #1
4001c4b0:	e1811680 	orr	r1, r1, r0, lsl #13
4001c4b4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c4b8:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c4bc:	e3a00043 	mov	r0, #67	; 0x43
4001c4c0:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c4c4:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c4c8:	e59f0108 	ldr	r0, [pc, #264]	; 4001c5d8 <CyU3PUibInit+0x1a4>
4001c4cc:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c4d0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c4d4:	e3a00040 	mov	r0, #64	; 0x40
4001c4d8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c4dc:	e1800400 	orr	r0, r0, r0, lsl #8
4001c4e0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c4e4:	e3a00040 	mov	r0, #64	; 0x40
4001c4e8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c4ec:	e3a04001 	mov	r4, #1
4001c4f0:	ea000015 	b	4001c54c <CyU3PUibInit+0x118>
4001c4f4:	e1a00004 	mov	r0, r4
4001c4f8:	eb000137 	bl	4001c9dc <CyU3PUsbFlushEp>
4001c4fc:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c5dc <CyU3PUibInit+0x1a8>
4001c500:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c504:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c508:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c5dc <CyU3PUibInit+0x1a8>
4001c50c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c510:	e3a00000 	mov	r0, #0
4001c514:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c5e0 <CyU3PUibInit+0x1ac>
4001c518:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c51c:	e3840080 	orr	r0, r4, #128	; 0x80
4001c520:	eb00012d 	bl	4001c9dc <CyU3PUsbFlushEp>
4001c524:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c5e4 <CyU3PUibInit+0x1b0>
4001c528:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c52c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c530:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c5e4 <CyU3PUibInit+0x1b0>
4001c534:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c538:	e3a00000 	mov	r0, #0
4001c53c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c5e8 <CyU3PUibInit+0x1b4>
4001c540:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c544:	e2840001 	add	r0, r4, #1
4001c548:	e20040ff 	and	r4, r0, #255	; 0xff
4001c54c:	e3540010 	cmp	r4, #16
4001c550:	baffffe7 	blt	4001c4f4 <CyU3PUibInit+0xc0>
4001c554:	e59f0090 	ldr	r0, [pc, #144]	; 4001c5ec <CyU3PUibInit+0x1b8>
4001c558:	e5900004 	ldr	r0, [r0, #4]
4001c55c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c560:	e59f1084 	ldr	r1, [pc, #132]	; 4001c5ec <CyU3PUibInit+0x1b8>
4001c564:	e5810004 	str	r0, [r1, #4]
4001c568:	e3e00000 	mvn	r0, #0
4001c56c:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c570:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c574:	e3a00b01 	mov	r0, #1024	; 0x400
4001c578:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c57c:	e59f106c 	ldr	r1, [pc, #108]	; 4001c5f0 <CyU3PUibInit+0x1bc>
4001c580:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c584:	e3a00015 	mov	r0, #21
4001c588:	eb00166b 	bl	40021f3c <CyU3PVicEnableInt>
4001c58c:	e59f0060 	ldr	r0, [pc, #96]	; 4001c5f4 <CyU3PUibInit+0x1c0>
4001c590:	e5900000 	ldr	r0, [r0]
4001c594:	e3500000 	cmp	r0, #0
4001c598:	0a000008 	beq	4001c5c0 <CyU3PUibInit+0x18c>
4001c59c:	e59f0054 	ldr	r0, [pc, #84]	; 4001c5f8 <CyU3PUibInit+0x1c4>
4001c5a0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c5a4:	e3100b01 	tst	r0, #1024	; 0x400
4001c5a8:	0a000004 	beq	4001c5c0 <CyU3PUibInit+0x18c>
4001c5ac:	e3a01000 	mov	r1, #0
4001c5b0:	e3a0000b 	mov	r0, #11
4001c5b4:	e59f2038 	ldr	r2, [pc, #56]	; 4001c5f4 <CyU3PUibInit+0x1c0>
4001c5b8:	e5922000 	ldr	r2, [r2]
4001c5bc:	e12fff32 	blx	r2
4001c5c0:	e8bd8010 	pop	{r4, pc}
4001c5c4:	e0050000 	.word	0xe0050000
4001c5c8:	00038081 	.word	0x00038081
4001c5cc:	00004a3d 	.word	0x00004a3d
4001c5d0:	e0031000 	.word	0xe0031000
4001c5d4:	0000095c 	.word	0x0000095c
4001c5d8:	00004040 	.word	0x00004040
4001c5dc:	e0031498 	.word	0xe0031498
4001c5e0:	e0033600 	.word	0xe0033600
4001c5e4:	e0031418 	.word	0xe0031418
4001c5e8:	e0033500 	.word	0xe0033500
4001c5ec:	e0030000 	.word	0xe0030000
4001c5f0:	40031d40 	.word	0x40031d40
4001c5f4:	40030db8 	.word	0x40030db8
4001c5f8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c5fc <CyU3PUsbAckSetup>:
4001c5fc:	e92d4010 	push	{r4, lr}
4001c600:	e3e01000 	mvn	r1, #0
4001c604:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c708 <CyU3PUsbAckSetup+0x10c>
4001c608:	ebffb6aa 	bl	4000a0b8 <_txe_mutex_get>
4001c60c:	eb000780 	bl	4001e414 <GetUsbLinkActive>
4001c610:	eb00019e 	bl	4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c614:	e3500000 	cmp	r0, #0
4001c618:	0a000002 	beq	4001c628 <CyU3PUsbAckSetup+0x2c>
4001c61c:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c708 <CyU3PUsbAckSetup+0x10c>
4001c620:	ebffb6d9 	bl	4000a18c <_txe_mutex_put>
4001c624:	e8bd8010 	pop	{r4, pc}
4001c628:	e3a00000 	mov	r0, #0
4001c62c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c70c <CyU3PUsbAckSetup+0x110>
4001c630:	e5810014 	str	r0, [r1, #20]
4001c634:	e2810000 	add	r0, r1, #0
4001c638:	e5d00009 	ldrb	r0, [r0, #9]
4001c63c:	e3500003 	cmp	r0, #3
4001c640:	1a000026 	bne	4001c6e0 <CyU3PUsbAckSetup+0xe4>
4001c644:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c710 <CyU3PUsbAckSetup+0x114>
4001c648:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c64c:	e3c00004 	bic	r0, r0, #4
4001c650:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c710 <CyU3PUsbAckSetup+0x114>
4001c654:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c658:	e1a00001 	mov	r0, r1
4001c65c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c660:	e3c00004 	bic	r0, r0, #4
4001c664:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c668:	eb00162a 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
4001c66c:	e1a04000 	mov	r4, r0
4001c670:	e3a00001 	mov	r0, #1
4001c674:	ebffdbad 	bl	40013530 <CyU3PBusyWait>
4001c678:	e59f0090 	ldr	r0, [pc, #144]	; 4001c710 <CyU3PUsbAckSetup+0x114>
4001c67c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c680:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c684:	e59f1084 	ldr	r1, [pc, #132]	; 4001c710 <CyU3PUsbAckSetup+0x114>
4001c688:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c68c:	e1a00004 	mov	r0, r4
4001c690:	eb00162e 	bl	40021f50 <CyU3PVicEnableInterrupts>
4001c694:	e3a00c02 	mov	r0, #512	; 0x200
4001c698:	e59f1074 	ldr	r1, [pc, #116]	; 4001c714 <CyU3PUsbAckSetup+0x118>
4001c69c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c6a0:	e3a00016 	mov	r0, #22
4001c6a4:	eb000ced 	bl	4001fa60 <CyU3PUsbAddToEventLog>
4001c6a8:	e59f005c 	ldr	r0, [pc, #92]	; 4001c70c <CyU3PUsbAckSetup+0x110>
4001c6ac:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c6b0:	e3500000 	cmp	r0, #0
4001c6b4:	1a000010 	bne	4001c6fc <CyU3PUsbAckSetup+0x100>
4001c6b8:	e3a00001 	mov	r0, #1
4001c6bc:	e59f1054 	ldr	r1, [pc, #84]	; 4001c718 <CyU3PUsbAckSetup+0x11c>
4001c6c0:	e5810000 	str	r0, [r1]
4001c6c4:	e3a02000 	mov	r2, #0
4001c6c8:	e3a01064 	mov	r1, #100	; 0x64
4001c6cc:	e59f0048 	ldr	r0, [pc, #72]	; 4001c71c <CyU3PUsbAckSetup+0x120>
4001c6d0:	ebffb8c6 	bl	4000a9f0 <_txe_timer_change>
4001c6d4:	e59f0040 	ldr	r0, [pc, #64]	; 4001c71c <CyU3PUsbAckSetup+0x120>
4001c6d8:	ebffb8b4 	bl	4000a9b0 <_txe_timer_activate>
4001c6dc:	ea000006 	b	4001c6fc <CyU3PUsbAckSetup+0x100>
4001c6e0:	e59f002c 	ldr	r0, [pc, #44]	; 4001c714 <CyU3PUsbAckSetup+0x118>
4001c6e4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c6e8:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c6ec:	e59f1020 	ldr	r1, [pc, #32]	; 4001c714 <CyU3PUsbAckSetup+0x118>
4001c6f0:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c6f4:	e3a00040 	mov	r0, #64	; 0x40
4001c6f8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c6fc:	e59f0004 	ldr	r0, [pc, #4]	; 4001c708 <CyU3PUsbAckSetup+0x10c>
4001c700:	ebffb6a1 	bl	4000a18c <_txe_mutex_put>
4001c704:	eaffffc6 	b	4001c624 <CyU3PUsbAckSetup+0x28>
4001c708:	40031ee0 	.word	0x40031ee0
4001c70c:	40031d40 	.word	0x40031d40
4001c710:	e0033000 	.word	0xe0033000
4001c714:	e0031000 	.word	0xe0031000
4001c718:	40030dcc 	.word	0x40030dcc
4001c71c:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c720 <CyU3PUsbCreateDmaChannels>:
4001c720:	e92d4010 	push	{r4, lr}
4001c724:	e24dd020 	sub	sp, sp, #32
4001c728:	e3a00c02 	mov	r0, #512	; 0x200
4001c72c:	e1cd00b4 	strh	r0, [sp, #4]
4001c730:	e3a00001 	mov	r0, #1
4001c734:	e1cd00b6 	strh	r0, [sp, #6]
4001c738:	e3a00000 	mov	r0, #0
4001c73c:	e1cd00bc 	strh	r0, [sp, #12]
4001c740:	e3a00c03 	mov	r0, #768	; 0x300
4001c744:	e1cd00ba 	strh	r0, [sp, #10]
4001c748:	e3a00000 	mov	r0, #0
4001c74c:	e5cd0014 	strb	r0, [sp, #20]
4001c750:	e1cd00be 	strh	r0, [sp, #14]
4001c754:	e1cd01b0 	strh	r0, [sp, #16]
4001c758:	e1cd01b2 	strh	r0, [sp, #18]
4001c75c:	e58d0018 	str	r0, [sp, #24]
4001c760:	e58d001c 	str	r0, [sp, #28]
4001c764:	e59f00ec 	ldr	r0, [pc, #236]	; 4001c858 <CyU3PUsbCreateDmaChannels+0x138>
4001c768:	e1cd00b8 	strh	r0, [sp, #8]
4001c76c:	e28d2004 	add	r2, sp, #4
4001c770:	e3a01004 	mov	r1, #4
4001c774:	e59f00e0 	ldr	r0, [pc, #224]	; 4001c85c <CyU3PUsbCreateDmaChannels+0x13c>
4001c778:	ebffe411 	bl	400157c4 <CyU3PDmaChannelCreate>
4001c77c:	e1a04000 	mov	r4, r0
4001c780:	e3540000 	cmp	r4, #0
4001c784:	0a000002 	beq	4001c794 <CyU3PUsbCreateDmaChannels+0x74>
4001c788:	e3a0004e 	mov	r0, #78	; 0x4e
4001c78c:	e28dd020 	add	sp, sp, #32
4001c790:	e8bd8010 	pop	{r4, pc}
4001c794:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c860 <CyU3PUsbCreateDmaChannels+0x140>
4001c798:	e5900000 	ldr	r0, [r0]
4001c79c:	e3500000 	cmp	r0, #0
4001c7a0:	0a000009 	beq	4001c7cc <CyU3PUsbCreateDmaChannels+0xac>
4001c7a4:	e3a01001 	mov	r1, #1
4001c7a8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c85c <CyU3PUsbCreateDmaChannels+0x13c>
4001c7ac:	ebffe274 	bl	40015184 <CyU3PDmaChannelCacheControl>
4001c7b0:	e1a04000 	mov	r4, r0
4001c7b4:	e3540000 	cmp	r4, #0
4001c7b8:	0a000003 	beq	4001c7cc <CyU3PUsbCreateDmaChannels+0xac>
4001c7bc:	e59f0098 	ldr	r0, [pc, #152]	; 4001c85c <CyU3PUsbCreateDmaChannels+0x13c>
4001c7c0:	ebffe4f9 	bl	40015bac <CyU3PDmaChannelDestroy>
4001c7c4:	e3a0004e 	mov	r0, #78	; 0x4e
4001c7c8:	eaffffef 	b	4001c78c <CyU3PUsbCreateDmaChannels+0x6c>
4001c7cc:	e3a00b01 	mov	r0, #1024	; 0x400
4001c7d0:	e1cd00b8 	strh	r0, [sp, #8]
4001c7d4:	e3a00000 	mov	r0, #0
4001c7d8:	e58d001c 	str	r0, [sp, #28]
4001c7dc:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c7e0:	e1cd00ba 	strh	r0, [sp, #10]
4001c7e4:	e28d2004 	add	r2, sp, #4
4001c7e8:	e3a01003 	mov	r1, #3
4001c7ec:	e59f0070 	ldr	r0, [pc, #112]	; 4001c864 <CyU3PUsbCreateDmaChannels+0x144>
4001c7f0:	ebffe3f3 	bl	400157c4 <CyU3PDmaChannelCreate>
4001c7f4:	e1a04000 	mov	r4, r0
4001c7f8:	e3540000 	cmp	r4, #0
4001c7fc:	0a000003 	beq	4001c810 <CyU3PUsbCreateDmaChannels+0xf0>
4001c800:	e59f0054 	ldr	r0, [pc, #84]	; 4001c85c <CyU3PUsbCreateDmaChannels+0x13c>
4001c804:	ebffe4e8 	bl	40015bac <CyU3PDmaChannelDestroy>
4001c808:	e3a0004e 	mov	r0, #78	; 0x4e
4001c80c:	eaffffde 	b	4001c78c <CyU3PUsbCreateDmaChannels+0x6c>
4001c810:	e59f0048 	ldr	r0, [pc, #72]	; 4001c860 <CyU3PUsbCreateDmaChannels+0x140>
4001c814:	e5900000 	ldr	r0, [r0]
4001c818:	e3500000 	cmp	r0, #0
4001c81c:	0a00000b 	beq	4001c850 <CyU3PUsbCreateDmaChannels+0x130>
4001c820:	e3a01001 	mov	r1, #1
4001c824:	e59f0038 	ldr	r0, [pc, #56]	; 4001c864 <CyU3PUsbCreateDmaChannels+0x144>
4001c828:	ebffe255 	bl	40015184 <CyU3PDmaChannelCacheControl>
4001c82c:	e1a04000 	mov	r4, r0
4001c830:	e3540000 	cmp	r4, #0
4001c834:	0a000005 	beq	4001c850 <CyU3PUsbCreateDmaChannels+0x130>
4001c838:	e59f001c 	ldr	r0, [pc, #28]	; 4001c85c <CyU3PUsbCreateDmaChannels+0x13c>
4001c83c:	ebffe4da 	bl	40015bac <CyU3PDmaChannelDestroy>
4001c840:	e59f001c 	ldr	r0, [pc, #28]	; 4001c864 <CyU3PUsbCreateDmaChannels+0x144>
4001c844:	ebffe4d8 	bl	40015bac <CyU3PDmaChannelDestroy>
4001c848:	e3a0004e 	mov	r0, #78	; 0x4e
4001c84c:	eaffffce 	b	4001c78c <CyU3PUsbCreateDmaChannels+0x6c>
4001c850:	e1a00004 	mov	r0, r4
4001c854:	eaffffcc 	b	4001c78c <CyU3PUsbCreateDmaChannels+0x6c>
4001c858:	00003f01 	.word	0x00003f01
4001c85c:	40031a78 	.word	0x40031a78
4001c860:	40030c7c 	.word	0x40030c7c
4001c864:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001c868 <CyU3PUsbEnableEpInterrupts>:
4001c868:	e200300f 	and	r3, r0, #15
4001c86c:	e3100080 	tst	r0, #128	; 0x80
4001c870:	0a00002a 	beq	4001c920 <CyU3PUsbEnableEpInterrupts+0xb8>
4001c874:	e59fc150 	ldr	ip, [pc, #336]	; 4001c9cc <CyU3PUsbEnableEpInterrupts+0x164>
4001c878:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c87c:	e3120901 	tst	r2, #16384	; 0x4000
4001c880:	0a00000d 	beq	4001c8bc <CyU3PUsbEnableEpInterrupts+0x54>
4001c884:	e3110001 	tst	r1, #1
4001c888:	0a000000 	beq	4001c890 <CyU3PUsbEnableEpInterrupts+0x28>
4001c88c:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c890:	e3110002 	tst	r1, #2
4001c894:	0a000000 	beq	4001c89c <CyU3PUsbEnableEpInterrupts+0x34>
4001c898:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c89c:	e3110004 	tst	r1, #4
4001c8a0:	0a000000 	beq	4001c8a8 <CyU3PUsbEnableEpInterrupts+0x40>
4001c8a4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c8a8:	e3110008 	tst	r1, #8
4001c8ac:	0a000000 	beq	4001c8b4 <CyU3PUsbEnableEpInterrupts+0x4c>
4001c8b0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c8b4:	e59fc110 	ldr	ip, [pc, #272]	; 4001c9cc <CyU3PUsbEnableEpInterrupts+0x164>
4001c8b8:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c8bc:	e59fc10c 	ldr	ip, [pc, #268]	; 4001c9d0 <CyU3PUsbEnableEpInterrupts+0x168>
4001c8c0:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c8c4:	e3120001 	tst	r2, #1
4001c8c8:	0a00003e 	beq	4001c9c8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c8cc:	e3110001 	tst	r1, #1
4001c8d0:	0a000000 	beq	4001c8d8 <CyU3PUsbEnableEpInterrupts+0x70>
4001c8d4:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c8d8:	e3110002 	tst	r1, #2
4001c8dc:	0a000000 	beq	4001c8e4 <CyU3PUsbEnableEpInterrupts+0x7c>
4001c8e0:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c8e4:	e3110004 	tst	r1, #4
4001c8e8:	0a000000 	beq	4001c8f0 <CyU3PUsbEnableEpInterrupts+0x88>
4001c8ec:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c8f0:	e3110010 	tst	r1, #16
4001c8f4:	0a000000 	beq	4001c8fc <CyU3PUsbEnableEpInterrupts+0x94>
4001c8f8:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c8fc:	e3110020 	tst	r1, #32
4001c900:	0a000000 	beq	4001c908 <CyU3PUsbEnableEpInterrupts+0xa0>
4001c904:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c908:	e3110040 	tst	r1, #64	; 0x40
4001c90c:	0a000000 	beq	4001c914 <CyU3PUsbEnableEpInterrupts+0xac>
4001c910:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c914:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001c9d0 <CyU3PUsbEnableEpInterrupts+0x168>
4001c918:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c91c:	ea000029 	b	4001c9c8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c920:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001c9d4 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c924:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c928:	e3120901 	tst	r2, #16384	; 0x4000
4001c92c:	0a00000d 	beq	4001c968 <CyU3PUsbEnableEpInterrupts+0x100>
4001c930:	e3110001 	tst	r1, #1
4001c934:	0a000000 	beq	4001c93c <CyU3PUsbEnableEpInterrupts+0xd4>
4001c938:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c93c:	e3110002 	tst	r1, #2
4001c940:	0a000000 	beq	4001c948 <CyU3PUsbEnableEpInterrupts+0xe0>
4001c944:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c948:	e3110004 	tst	r1, #4
4001c94c:	0a000000 	beq	4001c954 <CyU3PUsbEnableEpInterrupts+0xec>
4001c950:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c954:	e3110008 	tst	r1, #8
4001c958:	0a000000 	beq	4001c960 <CyU3PUsbEnableEpInterrupts+0xf8>
4001c95c:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c960:	e59fc06c 	ldr	ip, [pc, #108]	; 4001c9d4 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c964:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c968:	e59fc068 	ldr	ip, [pc, #104]	; 4001c9d8 <CyU3PUsbEnableEpInterrupts+0x170>
4001c96c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c970:	e3120001 	tst	r2, #1
4001c974:	0a000013 	beq	4001c9c8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c978:	e3110001 	tst	r1, #1
4001c97c:	0a000000 	beq	4001c984 <CyU3PUsbEnableEpInterrupts+0x11c>
4001c980:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c984:	e3110002 	tst	r1, #2
4001c988:	0a000000 	beq	4001c990 <CyU3PUsbEnableEpInterrupts+0x128>
4001c98c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c990:	e3110004 	tst	r1, #4
4001c994:	0a000000 	beq	4001c99c <CyU3PUsbEnableEpInterrupts+0x134>
4001c998:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c99c:	e3110010 	tst	r1, #16
4001c9a0:	0a000000 	beq	4001c9a8 <CyU3PUsbEnableEpInterrupts+0x140>
4001c9a4:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c9a8:	e3110020 	tst	r1, #32
4001c9ac:	0a000000 	beq	4001c9b4 <CyU3PUsbEnableEpInterrupts+0x14c>
4001c9b0:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c9b4:	e3110040 	tst	r1, #64	; 0x40
4001c9b8:	0a000000 	beq	4001c9c0 <CyU3PUsbEnableEpInterrupts+0x158>
4001c9bc:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c9c0:	e59fc010 	ldr	ip, [pc, #16]	; 4001c9d8 <CyU3PUsbEnableEpInterrupts+0x170>
4001c9c4:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c9c8:	e12fff1e 	bx	lr
4001c9cc:	e0031418 	.word	0xe0031418
4001c9d0:	e0033500 	.word	0xe0033500
4001c9d4:	e0031498 	.word	0xe0031498
4001c9d8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001c9dc <CyU3PUsbFlushEp>:
4001c9dc:	e92d4070 	push	{r4, r5, r6, lr}
4001c9e0:	e1a04000 	mov	r4, r0
4001c9e4:	e204507f 	and	r5, r4, #127	; 0x7f
4001c9e8:	e59f00a8 	ldr	r0, [pc, #168]	; 4001ca98 <CyU3PUsbFlushEp+0xbc>
4001c9ec:	e5d00008 	ldrb	r0, [r0, #8]
4001c9f0:	e3500000 	cmp	r0, #0
4001c9f4:	1a000001 	bne	4001ca00 <CyU3PUsbFlushEp+0x24>
4001c9f8:	e3a00042 	mov	r0, #66	; 0x42
4001c9fc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ca00:	e355000f 	cmp	r5, #15
4001ca04:	da000001 	ble	4001ca10 <CyU3PUsbFlushEp+0x34>
4001ca08:	e3a00040 	mov	r0, #64	; 0x40
4001ca0c:	eafffffa 	b	4001c9fc <CyU3PUsbFlushEp+0x20>
4001ca10:	e3e01000 	mvn	r1, #0
4001ca14:	e59f0080 	ldr	r0, [pc, #128]	; 4001ca9c <CyU3PUsbFlushEp+0xc0>
4001ca18:	ebffb5a6 	bl	4000a0b8 <_txe_mutex_get>
4001ca1c:	e3140080 	tst	r4, #128	; 0x80
4001ca20:	0a00000c 	beq	4001ca58 <CyU3PUsbFlushEp+0x7c>
4001ca24:	e59f0074 	ldr	r0, [pc, #116]	; 4001caa0 <CyU3PUsbFlushEp+0xc4>
4001ca28:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ca2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ca30:	e59f1068 	ldr	r1, [pc, #104]	; 4001caa0 <CyU3PUsbFlushEp+0xc4>
4001ca34:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ca38:	e3a0000a 	mov	r0, #10
4001ca3c:	ebffdabb 	bl	40013530 <CyU3PBusyWait>
4001ca40:	e59f0058 	ldr	r0, [pc, #88]	; 4001caa0 <CyU3PUsbFlushEp+0xc4>
4001ca44:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ca48:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001ca4c:	e59f104c 	ldr	r1, [pc, #76]	; 4001caa0 <CyU3PUsbFlushEp+0xc4>
4001ca50:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ca54:	ea00000b 	b	4001ca88 <CyU3PUsbFlushEp+0xac>
4001ca58:	e59f0044 	ldr	r0, [pc, #68]	; 4001caa4 <CyU3PUsbFlushEp+0xc8>
4001ca5c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ca60:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ca64:	e59f1038 	ldr	r1, [pc, #56]	; 4001caa4 <CyU3PUsbFlushEp+0xc8>
4001ca68:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ca6c:	e3a0000a 	mov	r0, #10
4001ca70:	ebffdaae 	bl	40013530 <CyU3PBusyWait>
4001ca74:	e59f0028 	ldr	r0, [pc, #40]	; 4001caa4 <CyU3PUsbFlushEp+0xc8>
4001ca78:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ca7c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001ca80:	e59f101c 	ldr	r1, [pc, #28]	; 4001caa4 <CyU3PUsbFlushEp+0xc8>
4001ca84:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ca88:	e59f000c 	ldr	r0, [pc, #12]	; 4001ca9c <CyU3PUsbFlushEp+0xc0>
4001ca8c:	ebffb5be 	bl	4000a18c <_txe_mutex_put>
4001ca90:	e3a00000 	mov	r0, #0
4001ca94:	eaffffd8 	b	4001c9fc <CyU3PUsbFlushEp+0x20>
4001ca98:	40031d40 	.word	0x40031d40
4001ca9c:	40031ee0 	.word	0x40031ee0
4001caa0:	e0031c40 	.word	0xe0031c40
4001caa4:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001caa8 <CyU3PUsbGetEP0Data>:
4001caa8:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001caac:	e1a04000 	mov	r4, r0
4001cab0:	e1a05001 	mov	r5, r1
4001cab4:	e1a06002 	mov	r6, r2
4001cab8:	e59f8198 	ldr	r8, [pc, #408]	; 4001cc58 <CyU3PUsbGetEP0Data+0x1b0>
4001cabc:	e59f0198 	ldr	r0, [pc, #408]	; 4001cc5c <CyU3PUsbGetEP0Data+0x1b4>
4001cac0:	e5d00008 	ldrb	r0, [r0, #8]
4001cac4:	e3500000 	cmp	r0, #0
4001cac8:	1a000001 	bne	4001cad4 <CyU3PUsbGetEP0Data+0x2c>
4001cacc:	e3a00042 	mov	r0, #66	; 0x42
4001cad0:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001cad4:	e3550000 	cmp	r5, #0
4001cad8:	1a000001 	bne	4001cae4 <CyU3PUsbGetEP0Data+0x3c>
4001cadc:	e3a00040 	mov	r0, #64	; 0x40
4001cae0:	eafffffa 	b	4001cad0 <CyU3PUsbGetEP0Data+0x28>
4001cae4:	e3e01000 	mvn	r1, #0
4001cae8:	e59f0170 	ldr	r0, [pc, #368]	; 4001cc60 <CyU3PUsbGetEP0Data+0x1b8>
4001caec:	ebffb571 	bl	4000a0b8 <_txe_mutex_get>
4001caf0:	e284000f 	add	r0, r4, #15
4001caf4:	e59f1168 	ldr	r1, [pc, #360]	; 4001cc64 <CyU3PUsbGetEP0Data+0x1bc>
4001caf8:	e0004001 	and	r4, r0, r1
4001cafc:	e59f0164 	ldr	r0, [pc, #356]	; 4001cc68 <CyU3PUsbGetEP0Data+0x1c0>
4001cb00:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cb04:	e3c00008 	bic	r0, r0, #8
4001cb08:	e59f1158 	ldr	r1, [pc, #344]	; 4001cc68 <CyU3PUsbGetEP0Data+0x1c0>
4001cb0c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cb10:	e59f0144 	ldr	r0, [pc, #324]	; 4001cc5c <CyU3PUsbGetEP0Data+0x1b4>
4001cb14:	e5900018 	ldr	r0, [r0, #24]
4001cb18:	e3500000 	cmp	r0, #0
4001cb1c:	1a000002 	bne	4001cb2c <CyU3PUsbGetEP0Data+0x84>
4001cb20:	eb00005a 	bl	4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cb24:	e3500000 	cmp	r0, #0
4001cb28:	0a000008 	beq	4001cb50 <CyU3PUsbGetEP0Data+0xa8>
4001cb2c:	e59f0134 	ldr	r0, [pc, #308]	; 4001cc68 <CyU3PUsbGetEP0Data+0x1c0>
4001cb30:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cb34:	e3800008 	orr	r0, r0, #8
4001cb38:	e59f1128 	ldr	r1, [pc, #296]	; 4001cc68 <CyU3PUsbGetEP0Data+0x1c0>
4001cb3c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cb40:	e59f0118 	ldr	r0, [pc, #280]	; 4001cc60 <CyU3PUsbGetEP0Data+0x1b8>
4001cb44:	ebffb590 	bl	4000a18c <_txe_mutex_put>
4001cb48:	e3a00051 	mov	r0, #81	; 0x51
4001cb4c:	eaffffdf 	b	4001cad0 <CyU3PUsbGetEP0Data+0x28>
4001cb50:	e59f0110 	ldr	r0, [pc, #272]	; 4001cc68 <CyU3PUsbGetEP0Data+0x1c0>
4001cb54:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cb58:	e3800008 	orr	r0, r0, #8
4001cb5c:	e59f1104 	ldr	r1, [pc, #260]	; 4001cc68 <CyU3PUsbGetEP0Data+0x1c0>
4001cb60:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cb64:	eb00062a 	bl	4001e414 <GetUsbLinkActive>
4001cb68:	e1cd40b6 	strh	r4, [sp, #6]
4001cb6c:	e58d5000 	str	r5, [sp]
4001cb70:	e3a00000 	mov	r0, #0
4001cb74:	e1cd00b8 	strh	r0, [sp, #8]
4001cb78:	e1a0100d 	mov	r1, sp
4001cb7c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cc6c <CyU3PUsbGetEP0Data+0x1c4>
4001cb80:	ebffe75f 	bl	40016904 <CyU3PDmaChannelSetupRecvBuffer>
4001cb84:	e20070ff 	and	r7, r0, #255	; 0xff
4001cb88:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cc60 <CyU3PUsbGetEP0Data+0x1b8>
4001cb8c:	ebffb57e 	bl	4000a18c <_txe_mutex_put>
4001cb90:	e3570000 	cmp	r7, #0
4001cb94:	1a00002d 	bne	4001cc50 <CyU3PUsbGetEP0Data+0x1a8>
4001cb98:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cc5c <CyU3PUsbGetEP0Data+0x1b4>
4001cb9c:	e5900014 	ldr	r0, [r0, #20]
4001cba0:	e3500000 	cmp	r0, #0
4001cba4:	0a000000 	beq	4001cbac <CyU3PUsbGetEP0Data+0x104>
4001cba8:	ebfffe93 	bl	4001c5fc <CyU3PUsbAckSetup>
4001cbac:	ea00000e 	b	4001cbec <CyU3PUsbGetEP0Data+0x144>
4001cbb0:	e3a02064 	mov	r2, #100	; 0x64
4001cbb4:	e1a0100d 	mov	r1, sp
4001cbb8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cc6c <CyU3PUsbGetEP0Data+0x1c4>
4001cbbc:	ebffe8b2 	bl	40016e8c <CyU3PDmaChannelWaitForRecvBuffer>
4001cbc0:	e20070ff 	and	r7, r0, #255	; 0xff
4001cbc4:	e3570045 	cmp	r7, #69	; 0x45
4001cbc8:	1a000006 	bne	4001cbe8 <CyU3PUsbGetEP0Data+0x140>
4001cbcc:	eb00002f 	bl	4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cbd0:	e3500000 	cmp	r0, #0
4001cbd4:	0a000001 	beq	4001cbe0 <CyU3PUsbGetEP0Data+0x138>
4001cbd8:	e3a00051 	mov	r0, #81	; 0x51
4001cbdc:	eaffffbb 	b	4001cad0 <CyU3PUsbGetEP0Data+0x28>
4001cbe0:	e2488064 	sub	r8, r8, #100	; 0x64
4001cbe4:	ea000000 	b	4001cbec <CyU3PUsbGetEP0Data+0x144>
4001cbe8:	ea000001 	b	4001cbf4 <CyU3PUsbGetEP0Data+0x14c>
4001cbec:	e3580000 	cmp	r8, #0
4001cbf0:	1affffee 	bne	4001cbb0 <CyU3PUsbGetEP0Data+0x108>
4001cbf4:	e1a00000 	nop			; (mov r0, r0)
4001cbf8:	e3570000 	cmp	r7, #0
4001cbfc:	0a00000f 	beq	4001cc40 <CyU3PUsbGetEP0Data+0x198>
4001cc00:	e3e01000 	mvn	r1, #0
4001cc04:	e59f0054 	ldr	r0, [pc, #84]	; 4001cc60 <CyU3PUsbGetEP0Data+0x1b8>
4001cc08:	ebffb52a 	bl	4000a0b8 <_txe_mutex_get>
4001cc0c:	e3a01001 	mov	r1, #1
4001cc10:	e3a00000 	mov	r0, #0
4001cc14:	eb000376 	bl	4001d9f4 <CyU3PUsbSetEpNak>
4001cc18:	e3a00064 	mov	r0, #100	; 0x64
4001cc1c:	ebffda43 	bl	40013530 <CyU3PBusyWait>
4001cc20:	e59f0044 	ldr	r0, [pc, #68]	; 4001cc6c <CyU3PUsbGetEP0Data+0x1c4>
4001cc24:	ebffe57b 	bl	40016218 <CyU3PDmaChannelReset>
4001cc28:	e3a01000 	mov	r1, #0
4001cc2c:	e1a00001 	mov	r0, r1
4001cc30:	eb00036f 	bl	4001d9f4 <CyU3PUsbSetEpNak>
4001cc34:	e59f0024 	ldr	r0, [pc, #36]	; 4001cc60 <CyU3PUsbGetEP0Data+0x1b8>
4001cc38:	ebffb553 	bl	4000a18c <_txe_mutex_put>
4001cc3c:	ea000003 	b	4001cc50 <CyU3PUsbGetEP0Data+0x1a8>
4001cc40:	e3560000 	cmp	r6, #0
4001cc44:	0a000001 	beq	4001cc50 <CyU3PUsbGetEP0Data+0x1a8>
4001cc48:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cc4c:	e1c600b0 	strh	r0, [r6]
4001cc50:	e1a00007 	mov	r0, r7
4001cc54:	eaffff9d 	b	4001cad0 <CyU3PUsbGetEP0Data+0x28>
4001cc58:	00001388 	.word	0x00001388
4001cc5c:	40031d40 	.word	0x40031d40
4001cc60:	40031ee0 	.word	0x40031ee0
4001cc64:	0000fff0 	.word	0x0000fff0
4001cc68:	e0031000 	.word	0xe0031000
4001cc6c:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbGetSpeed:

4001cc70 <CyU3PUsbGetSpeed>:
4001cc70:	e59f0004 	ldr	r0, [pc, #4]	; 4001cc7c <CyU3PUsbGetSpeed+0xc>
4001cc74:	e5d00009 	ldrb	r0, [r0, #9]
4001cc78:	e12fff1e 	bx	lr
4001cc7c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001cc80 <CyU3PUsbHostIsStarted>:
4001cc80:	e59f0004 	ldr	r0, [pc, #4]	; 4001cc8c <CyU3PUsbHostIsStarted+0xc>
4001cc84:	e5900000 	ldr	r0, [r0]
4001cc88:	e12fff1e 	bx	lr
4001cc8c:	40030d78 	.word	0x40030d78

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001cc90:	e59f0038 	ldr	r0, [pc, #56]	; 4001ccd0 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cc94:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cc98:	e3500000 	cmp	r0, #0
4001cc9c:	1a000007 	bne	4001ccc0 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cca0:	e59f002c 	ldr	r0, [pc, #44]	; 4001ccd4 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cca4:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cca8:	e3100040 	tst	r0, #64	; 0x40
4001ccac:	1a000003 	bne	4001ccc0 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001ccb0:	e59f0020 	ldr	r0, [pc, #32]	; 4001ccd8 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001ccb4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001ccb8:	e3100c02 	tst	r0, #512	; 0x200
4001ccbc:	0a000001 	beq	4001ccc8 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001ccc0:	e3a00001 	mov	r0, #1
4001ccc4:	e12fff1e 	bx	lr
4001ccc8:	e3a00000 	mov	r0, #0
4001cccc:	eafffffc 	b	4001ccc4 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001ccd0:	40031d40 	.word	0x40031d40
4001ccd4:	e0031000 	.word	0xe0031000
4001ccd8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001ccdc <CyU3PUsbLoadBootloaderDescs>:
4001ccdc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001cce0:	e1a04000 	mov	r4, r0
4001cce4:	e3a06000 	mov	r6, #0
4001cce8:	e5940008 	ldr	r0, [r4, #8]
4001ccec:	e20070ff 	and	r7, r0, #255	; 0xff
4001ccf0:	e1a00000 	nop			; (mov r0, r0)
4001ccf4:	ea00000f 	b	4001cd38 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001ccf8:	e2843010 	add	r3, r4, #16
4001ccfc:	e0833186 	add	r3, r3, r6, lsl #3
4001cd00:	e5932004 	ldr	r2, [r3, #4]
4001cd04:	e2843010 	add	r3, r4, #16
4001cd08:	e0833186 	add	r3, r3, r6, lsl #3
4001cd0c:	e5d31001 	ldrb	r1, [r3, #1]
4001cd10:	e2843010 	add	r3, r4, #16
4001cd14:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001cd18:	eb0002bf 	bl	4001d81c <CyU3PUsbSetDesc>
4001cd1c:	e1a05000 	mov	r5, r0
4001cd20:	e3550000 	cmp	r5, #0
4001cd24:	0a000001 	beq	4001cd30 <CyU3PUsbLoadBootloaderDescs+0x54>
4001cd28:	e1a00005 	mov	r0, r5
4001cd2c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cd30:	e2860001 	add	r0, r6, #1
4001cd34:	e20060ff 	and	r6, r0, #255	; 0xff
4001cd38:	e1560007 	cmp	r6, r7
4001cd3c:	baffffed 	blt	4001ccf8 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cd40:	e3a00000 	mov	r0, #0
4001cd44:	eafffff8 	b	4001cd2c <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cd48 <CyU3PUsbMapStream>:
4001cd48:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cd4c:	e1a03000 	mov	r3, r0
4001cd50:	e203c07f 	and	ip, r3, #127	; 0x7f
4001cd54:	e59f005c 	ldr	r0, [pc, #92]	; 4001cdb8 <CyU3PUsbMapStream+0x70>
4001cd58:	e5d00008 	ldrb	r0, [r0, #8]
4001cd5c:	e3500000 	cmp	r0, #0
4001cd60:	1a000001 	bne	4001cd6c <CyU3PUsbMapStream+0x24>
4001cd64:	e3a00042 	mov	r0, #66	; 0x42
4001cd68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cd6c:	e35c000f 	cmp	ip, #15
4001cd70:	da000001 	ble	4001cd7c <CyU3PUsbMapStream+0x34>
4001cd74:	e3a00040 	mov	r0, #64	; 0x40
4001cd78:	eafffffa 	b	4001cd68 <CyU3PUsbMapStream+0x20>
4001cd7c:	e3130080 	tst	r3, #128	; 0x80
4001cd80:	0a000005 	beq	4001cd9c <CyU3PUsbMapStream+0x54>
4001cd84:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cd88:	e180080c 	orr	r0, r0, ip, lsl #16
4001cd8c:	e1800002 	orr	r0, r0, r2
4001cd90:	e59fe024 	ldr	lr, [pc, #36]	; 4001cdbc <CyU3PUsbMapStream+0x74>
4001cd94:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cd98:	ea000004 	b	4001cdb0 <CyU3PUsbMapStream+0x68>
4001cd9c:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cda0:	e180080c 	orr	r0, r0, ip, lsl #16
4001cda4:	e1800002 	orr	r0, r0, r2
4001cda8:	e59fe010 	ldr	lr, [pc, #16]	; 4001cdc0 <CyU3PUsbMapStream+0x78>
4001cdac:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cdb0:	e3a00000 	mov	r0, #0
4001cdb4:	eaffffeb 	b	4001cd68 <CyU3PUsbMapStream+0x20>
4001cdb8:	40031d40 	.word	0x40031d40
4001cdbc:	e00335c0 	.word	0xe00335c0
4001cdc0:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001cdc4 <CyU3PUsbOtgVbusChangeHandler>:
4001cdc4:	e92d4010 	push	{r4, lr}
4001cdc8:	e3a04000 	mov	r4, #0
4001cdcc:	e59f0094 	ldr	r0, [pc, #148]	; 4001ce68 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cdd0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001cdd4:	e3500000 	cmp	r0, #0
4001cdd8:	0a000005 	beq	4001cdf4 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001cddc:	e59f0088 	ldr	r0, [pc, #136]	; 4001ce6c <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001cde0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001cde4:	e59f107c 	ldr	r1, [pc, #124]	; 4001ce68 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cde8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001cdec:	e1100001 	tst	r0, r1
4001cdf0:	0a000008 	beq	4001ce18 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001cdf4:	e3a04001 	mov	r4, #1
4001cdf8:	e3a00018 	mov	r0, #24
4001cdfc:	e59f106c 	ldr	r1, [pc, #108]	; 4001ce70 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001ce00:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ce04:	e1c10000 	bic	r0, r1, r0
4001ce08:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001ce0c:	e3c00018 	bic	r0, r0, #24
4001ce10:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001ce14:	ea000009 	b	4001ce40 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001ce18:	ebfffbb2 	bl	4001bce8 <CyU3POtgIsHostMode>
4001ce1c:	e3500000 	cmp	r0, #0
4001ce20:	0a000006 	beq	4001ce40 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001ce24:	e3a00018 	mov	r0, #24
4001ce28:	e59f1040 	ldr	r1, [pc, #64]	; 4001ce70 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001ce2c:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ce30:	e1c10000 	bic	r0, r1, r0
4001ce34:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001ce38:	e3800018 	orr	r0, r0, #24
4001ce3c:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001ce40:	e59f002c 	ldr	r0, [pc, #44]	; 4001ce74 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001ce44:	e5900004 	ldr	r0, [r0, #4]
4001ce48:	e3500000 	cmp	r0, #0
4001ce4c:	0a000004 	beq	4001ce64 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001ce50:	e59f001c 	ldr	r0, [pc, #28]	; 4001ce74 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001ce54:	e1a01004 	mov	r1, r4
4001ce58:	e5902004 	ldr	r2, [r0, #4]
4001ce5c:	e3a00002 	mov	r0, #2
4001ce60:	e12fff32 	blx	r2
4001ce64:	e8bd8010 	pop	{r4, pc}
4001ce68:	40031d40 	.word	0x40031d40
4001ce6c:	e0051000 	.word	0xe0051000
4001ce70:	e0031000 	.word	0xe0031000
4001ce74:	40030d70 	.word	0x40030d70

Disassembly of section i.CyU3PUsbPhyDisable:

4001ce78 <CyU3PUsbPhyDisable>:
4001ce78:	e92d4010 	push	{r4, lr}
4001ce7c:	e1a04000 	mov	r4, r0
4001ce80:	e2841003 	add	r1, r4, #3
4001ce84:	e20100ff 	and	r0, r1, #255	; 0xff
4001ce88:	eb000af4 	bl	4001fa60 <CyU3PUsbAddToEventLog>
4001ce8c:	e3a00000 	mov	r0, #0
4001ce90:	e59f1184 	ldr	r1, [pc, #388]	; 4001d01c <CyU3PUsbPhyDisable+0x1a4>
4001ce94:	e5810000 	str	r0, [r1]
4001ce98:	e59f0180 	ldr	r0, [pc, #384]	; 4001d020 <CyU3PUsbPhyDisable+0x1a8>
4001ce9c:	ebffb767 	bl	4000ac40 <_txe_timer_deactivate>
4001cea0:	e3a00008 	mov	r0, #8
4001cea4:	eb00141f 	bl	40021f28 <CyU3PVicDisableInt>
4001cea8:	e59f0174 	ldr	r0, [pc, #372]	; 4001d024 <CyU3PUsbPhyDisable+0x1ac>
4001ceac:	e5900004 	ldr	r0, [r0, #4]
4001ceb0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ceb4:	e59f1168 	ldr	r1, [pc, #360]	; 4001d024 <CyU3PUsbPhyDisable+0x1ac>
4001ceb8:	e5810004 	str	r0, [r1, #4]
4001cebc:	e3e00000 	mvn	r0, #0
4001cec0:	e0411600 	sub	r1, r1, r0, lsl #12
4001cec4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cec8:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cecc:	e59f0154 	ldr	r0, [pc, #340]	; 4001d028 <CyU3PUsbPhyDisable+0x1b0>
4001ced0:	ebffe4d0 	bl	40016218 <CyU3PDmaChannelReset>
4001ced4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d02c <CyU3PUsbPhyDisable+0x1b4>
4001ced8:	ebffe4ce 	bl	40016218 <CyU3PDmaChannelReset>
4001cedc:	e3540000 	cmp	r4, #0
4001cee0:	0a00002b 	beq	4001cf94 <CyU3PUsbPhyDisable+0x11c>
4001cee4:	e3a00001 	mov	r0, #1
4001cee8:	e59f1140 	ldr	r1, [pc, #320]	; 4001d030 <CyU3PUsbPhyDisable+0x1b8>
4001ceec:	e5810060 	str	r0, [r1, #96]	; 0x60
4001cef0:	ebffb691 	bl	4000a93c <_txe_thread_relinquish>
4001cef4:	e3e00000 	mvn	r0, #0
4001cef8:	e59f1134 	ldr	r1, [pc, #308]	; 4001d034 <CyU3PUsbPhyDisable+0x1bc>
4001cefc:	e5810004 	str	r0, [r1, #4]
4001cf00:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cf04:	e0010000 	and	r0, r1, r0
4001cf08:	e5900014 	ldr	r0, [r0, #20]
4001cf0c:	e59f1124 	ldr	r1, [pc, #292]	; 4001d038 <CyU3PUsbPhyDisable+0x1c0>
4001cf10:	e5810000 	str	r0, [r1]
4001cf14:	e3a00000 	mov	r0, #0
4001cf18:	e59f111c 	ldr	r1, [pc, #284]	; 4001d03c <CyU3PUsbPhyDisable+0x1c4>
4001cf1c:	e5810000 	str	r0, [r1]
4001cf20:	e3a01000 	mov	r1, #0
4001cf24:	e59f0114 	ldr	r0, [pc, #276]	; 4001d040 <CyU3PUsbPhyDisable+0x1c8>
4001cf28:	eb00146e 	bl	400220e8 <CyFx3UsbWritePhyReg>
4001cf2c:	e3a01002 	mov	r1, #2
4001cf30:	e1a00001 	mov	r0, r1
4001cf34:	ebfffd1d 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001cf38:	e3a00002 	mov	r0, #2
4001cf3c:	ebffd97b 	bl	40013530 <CyU3PBusyWait>
4001cf40:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cf44:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cf48:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001cf4c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cf50:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cf54:	e3a00002 	mov	r0, #2
4001cf58:	ebffd974 	bl	40013530 <CyU3PBusyWait>
4001cf5c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cf60:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cf64:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001cf68:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cf6c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cf70:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001cf74:	e590001c 	ldr	r0, [r0, #28]
4001cf78:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001cf7c:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001cf80:	e581001c 	str	r0, [r1, #28]
4001cf84:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d048 <CyU3PUsbPhyDisable+0x1d0>
4001cf88:	e5900000 	ldr	r0, [r0]
4001cf8c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001cf90:	ea00000e 	b	4001cfd0 <CyU3PUsbPhyDisable+0x158>
4001cf94:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cf98:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001cf9c:	e3800008 	orr	r0, r0, #8
4001cfa0:	e59f109c 	ldr	r1, [pc, #156]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cfa4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001cfa8:	e3a01002 	mov	r1, #2
4001cfac:	e1a00001 	mov	r0, r1
4001cfb0:	ebfffcfe 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001cfb4:	e3a00002 	mov	r0, #2
4001cfb8:	ebffd95c 	bl	40013530 <CyU3PBusyWait>
4001cfbc:	e59f0080 	ldr	r0, [pc, #128]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cfc0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cfc4:	e2000001 	and	r0, r0, #1
4001cfc8:	e59f1074 	ldr	r1, [pc, #116]	; 4001d044 <CyU3PUsbPhyDisable+0x1cc>
4001cfcc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cfd0:	e59f0074 	ldr	r0, [pc, #116]	; 4001d04c <CyU3PUsbPhyDisable+0x1d4>
4001cfd4:	e5900000 	ldr	r0, [r0]
4001cfd8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001cfdc:	e59f1068 	ldr	r1, [pc, #104]	; 4001d04c <CyU3PUsbPhyDisable+0x1d4>
4001cfe0:	e5810000 	str	r0, [r1]
4001cfe4:	e3a00000 	mov	r0, #0
4001cfe8:	e59f1040 	ldr	r1, [pc, #64]	; 4001d030 <CyU3PUsbPhyDisable+0x1b8>
4001cfec:	e5c10009 	strb	r0, [r1, #9]
4001cff0:	ebfffb6c 	bl	4001bda8 <CyU3POtgIsStarted>
4001cff4:	e3500000 	cmp	r0, #0
4001cff8:	0a000006 	beq	4001d018 <CyU3PUsbPhyDisable+0x1a0>
4001cffc:	e3a00064 	mov	r0, #100	; 0x64
4001d000:	ebffd94a 	bl	40013530 <CyU3PBusyWait>
4001d004:	e59f0040 	ldr	r0, [pc, #64]	; 4001d04c <CyU3PUsbPhyDisable+0x1d4>
4001d008:	e5900000 	ldr	r0, [r0]
4001d00c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d010:	e59f1034 	ldr	r1, [pc, #52]	; 4001d04c <CyU3PUsbPhyDisable+0x1d4>
4001d014:	e5810000 	str	r0, [r1]
4001d018:	e8bd8010 	pop	{r4, pc}
4001d01c:	40030dcc 	.word	0x40030dcc
4001d020:	400326a0 	.word	0x400326a0
4001d024:	e0030000 	.word	0xe0030000
4001d028:	40031a78 	.word	0x40031a78
4001d02c:	40031b18 	.word	0x40031b18
4001d030:	40031d40 	.word	0x40031d40
4001d034:	e0033000 	.word	0xe0033000
4001d038:	40030da0 	.word	0x40030da0
4001d03c:	40030dd0 	.word	0x40030dd0
4001d040:	00001005 	.word	0x00001005
4001d044:	e0031000 	.word	0xe0031000
4001d048:	40030c74 	.word	0x40030c74
4001d04c:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d050 <CyU3PUsbPhyEnable>:
4001d050:	e92d4070 	push	{r4, r5, r6, lr}
4001d054:	e1a04000 	mov	r4, r0
4001d058:	e2841005 	add	r1, r4, #5
4001d05c:	e20100ff 	and	r0, r1, #255	; 0xff
4001d060:	eb000a7e 	bl	4001fa60 <CyU3PUsbAddToEventLog>
4001d064:	e3e00000 	mvn	r0, #0
4001d068:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d06c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d070:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d074:	e3a00008 	mov	r0, #8
4001d078:	eb0013af 	bl	40021f3c <CyU3PVicEnableInt>
4001d07c:	e3a00009 	mov	r0, #9
4001d080:	eb0013ad 	bl	40021f3c <CyU3PVicEnableInt>
4001d084:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d32c <CyU3PUsbPhyEnable+0x2dc>
4001d088:	e5900004 	ldr	r0, [r0, #4]
4001d08c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d090:	e59f1294 	ldr	r1, [pc, #660]	; 4001d32c <CyU3PUsbPhyEnable+0x2dc>
4001d094:	e5810004 	str	r0, [r1, #4]
4001d098:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d09c:	e5900000 	ldr	r0, [r0]
4001d0a0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d0a4:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d0a8:	e5810000 	str	r0, [r1]
4001d0ac:	e3540000 	cmp	r4, #0
4001d0b0:	0a000069 	beq	4001d25c <CyU3PUsbPhyEnable+0x20c>
4001d0b4:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d0b8:	e5900014 	ldr	r0, [r0, #20]
4001d0bc:	e59f126c 	ldr	r1, [pc, #620]	; 4001d330 <CyU3PUsbPhyEnable+0x2e0>
4001d0c0:	e5810000 	str	r0, [r1]
4001d0c4:	e3a00000 	mov	r0, #0
4001d0c8:	e59f1264 	ldr	r1, [pc, #612]	; 4001d334 <CyU3PUsbPhyEnable+0x2e4>
4001d0cc:	e5810000 	str	r0, [r1]
4001d0d0:	e3e00000 	mvn	r0, #0
4001d0d4:	e59f125c 	ldr	r1, [pc, #604]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d0d8:	e5810004 	str	r0, [r1, #4]
4001d0dc:	e59f0258 	ldr	r0, [pc, #600]	; 4001d33c <CyU3PUsbPhyEnable+0x2ec>
4001d0e0:	e5810008 	str	r0, [r1, #8]
4001d0e4:	e3e00000 	mvn	r0, #0
4001d0e8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d0ec:	e59f024c 	ldr	r0, [pc, #588]	; 4001d340 <CyU3PUsbPhyEnable+0x2f0>
4001d0f0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d0f4:	e59f0248 	ldr	r0, [pc, #584]	; 4001d344 <CyU3PUsbPhyEnable+0x2f4>
4001d0f8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d0fc:	e3500000 	cmp	r0, #0
4001d100:	0a000003 	beq	4001d114 <CyU3PUsbPhyEnable+0xc4>
4001d104:	e1a00001 	mov	r0, r1
4001d108:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d10c:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d110:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d114:	e3a00000 	mov	r0, #0
4001d118:	e59f1224 	ldr	r1, [pc, #548]	; 4001d344 <CyU3PUsbPhyEnable+0x2f4>
4001d11c:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d120:	e59f0220 	ldr	r0, [pc, #544]	; 4001d348 <CyU3PUsbPhyEnable+0x2f8>
4001d124:	e5900000 	ldr	r0, [r0]
4001d128:	e3500000 	cmp	r0, #0
4001d12c:	0a000003 	beq	4001d140 <CyU3PUsbPhyEnable+0xf0>
4001d130:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d134:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d138:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d13c:	ea000002 	b	4001d14c <CyU3PUsbPhyEnable+0xfc>
4001d140:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d144:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d148:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d14c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d34c <CyU3PUsbPhyEnable+0x2fc>
4001d150:	e5900000 	ldr	r0, [r0]
4001d154:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d158:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d15c:	eb00139b 	bl	40021fd0 <CyFx3Usb3LnkSetup>
4001d160:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d350 <CyU3PUsbPhyEnable+0x300>
4001d164:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d168:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d16c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d170:	e1c10000 	bic	r0, r1, r0
4001d174:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d178:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d17c:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d180:	e3a00000 	mov	r0, #0
4001d184:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d344 <CyU3PUsbPhyEnable+0x2f4>
4001d188:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d18c:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d190:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d194:	e581001c 	str	r0, [r1, #28]
4001d198:	e3a01002 	mov	r1, #2
4001d19c:	e1a00001 	mov	r0, r1
4001d1a0:	ebfffc82 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001d1a4:	eb00135b 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
4001d1a8:	e1a05000 	mov	r5, r0
4001d1ac:	e3a00000 	mov	r0, #0
4001d1b0:	e59f119c 	ldr	r1, [pc, #412]	; 4001d354 <CyU3PUsbPhyEnable+0x304>
4001d1b4:	e5810000 	str	r0, [r1]
4001d1b8:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d1bc:	e59f1174 	ldr	r1, [pc, #372]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d1c0:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d1c4:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d1c8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1cc:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d1d0:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d1d4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1d8:	e3a00064 	mov	r0, #100	; 0x64
4001d1dc:	ebffd8d3 	bl	40013530 <CyU3PBusyWait>
4001d1e0:	e59f0150 	ldr	r0, [pc, #336]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d1e4:	e5900000 	ldr	r0, [r0]
4001d1e8:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d1ec:	e59f1144 	ldr	r1, [pc, #324]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d1f0:	e5810000 	str	r0, [r1]
4001d1f4:	e59f015c 	ldr	r0, [pc, #348]	; 4001d358 <CyU3PUsbPhyEnable+0x308>
4001d1f8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d1fc:	e3a01080 	mov	r1, #128	; 0x80
4001d200:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d204:	eb0013b7 	bl	400220e8 <CyFx3UsbWritePhyReg>
4001d208:	e3a01d06 	mov	r1, #384	; 0x180
4001d20c:	e59f0148 	ldr	r0, [pc, #328]	; 4001d35c <CyU3PUsbPhyEnable+0x30c>
4001d210:	eb0013b4 	bl	400220e8 <CyFx3UsbWritePhyReg>
4001d214:	e3a01080 	mov	r1, #128	; 0x80
4001d218:	e59f0140 	ldr	r0, [pc, #320]	; 4001d360 <CyU3PUsbPhyEnable+0x310>
4001d21c:	eb0013b1 	bl	400220e8 <CyFx3UsbWritePhyReg>
4001d220:	e1a00005 	mov	r0, r5
4001d224:	eb001349 	bl	40021f50 <CyU3PVicEnableInterrupts>
4001d228:	e59f0108 	ldr	r0, [pc, #264]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d22c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d230:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d234:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d338 <CyU3PUsbPhyEnable+0x2e8>
4001d238:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d23c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d240:	e581001c 	str	r0, [r1, #28]
4001d244:	e3a00064 	mov	r0, #100	; 0x64
4001d248:	ebffd8b8 	bl	40013530 <CyU3PBusyWait>
4001d24c:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d250:	e59f110c 	ldr	r1, [pc, #268]	; 4001d364 <CyU3PUsbPhyEnable+0x314>
4001d254:	e5810008 	str	r0, [r1, #8]
4001d258:	ea000031 	b	4001d324 <CyU3PUsbPhyEnable+0x2d4>
4001d25c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d344 <CyU3PUsbPhyEnable+0x2f4>
4001d260:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d264:	e3500000 	cmp	r0, #0
4001d268:	0a000000 	beq	4001d270 <CyU3PUsbPhyEnable+0x220>
4001d26c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d270:	e3a00001 	mov	r0, #1
4001d274:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d344 <CyU3PUsbPhyEnable+0x2f4>
4001d278:	e5c10009 	strb	r0, [r1, #9]
4001d27c:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d280:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d368 <CyU3PUsbPhyEnable+0x318>
4001d284:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d288:	e3a00000 	mov	r0, #0
4001d28c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d344 <CyU3PUsbPhyEnable+0x2f4>
4001d290:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d294:	e59f008c 	ldr	r0, [pc, #140]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d298:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d29c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d2a0:	e59f1080 	ldr	r1, [pc, #128]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d2a4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d2a8:	e1a00001 	mov	r0, r1
4001d2ac:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d2b0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d2b4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d2b8:	e3a00002 	mov	r0, #2
4001d2bc:	ebffd89b 	bl	40013530 <CyU3PBusyWait>
4001d2c0:	e59f0060 	ldr	r0, [pc, #96]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d2c4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2c8:	e2000001 	and	r0, r0, #1
4001d2cc:	e59f1054 	ldr	r1, [pc, #84]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d2d0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2d4:	e1a00001 	mov	r0, r1
4001d2d8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2dc:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d2e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2e4:	e3a00064 	mov	r0, #100	; 0x64
4001d2e8:	ebffd890 	bl	40013530 <CyU3PBusyWait>
4001d2ec:	eb00132b 	bl	40021fa0 <CyFx3Usb2PhySetup>
4001d2f0:	e59f0074 	ldr	r0, [pc, #116]	; 4001d36c <CyU3PUsbPhyEnable+0x31c>
4001d2f4:	e59f102c 	ldr	r1, [pc, #44]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d2f8:	e5810008 	str	r0, [r1, #8]
4001d2fc:	e3a00050 	mov	r0, #80	; 0x50
4001d300:	ebffd88a 	bl	40013530 <CyU3PBusyWait>
4001d304:	e3a01000 	mov	r1, #0
4001d308:	e3a00002 	mov	r0, #2
4001d30c:	ebfffc27 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001d310:	e59f0010 	ldr	r0, [pc, #16]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d314:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d318:	e3c00008 	bic	r0, r0, #8
4001d31c:	e59f1004 	ldr	r1, [pc, #4]	; 4001d328 <CyU3PUsbPhyEnable+0x2d8>
4001d320:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d324:	eaffffd0 	b	4001d26c <CyU3PUsbPhyEnable+0x21c>
4001d328:	e0031000 	.word	0xe0031000
4001d32c:	e0030000 	.word	0xe0030000
4001d330:	40030da0 	.word	0x40030da0
4001d334:	40030dd0 	.word	0x40030dd0
4001d338:	e0033000 	.word	0xe0033000
4001d33c:	00038081 	.word	0x00038081
4001d340:	00004a3d 	.word	0x00004a3d
4001d344:	40031d40 	.word	0x40031d40
4001d348:	40030d5c 	.word	0x40030d5c
4001d34c:	40030da8 	.word	0x40030da8
4001d350:	00000908 	.word	0x00000908
4001d354:	40030d90 	.word	0x40030d90
4001d358:	00310418 	.word	0x00310418
4001d35c:	00001006 	.word	0x00001006
4001d360:	00001024 	.word	0x00001024
4001d364:	e0052000 	.word	0xe0052000
4001d368:	e0032000 	.word	0xe0032000
4001d36c:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d370 <CyU3PUsbPowerOn>:
4001d370:	e92d4010 	push	{r4, lr}
4001d374:	eb00133b 	bl	40022068 <CyFx3UsbPowerOn>
4001d378:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d37c <CyU3PUsbResetEp>:
4001d37c:	e92d4070 	push	{r4, r5, r6, lr}
4001d380:	e1a04000 	mov	r4, r0
4001d384:	e204507f 	and	r5, r4, #127	; 0x7f
4001d388:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d44c <CyU3PUsbResetEp+0xd0>
4001d38c:	e5d00008 	ldrb	r0, [r0, #8]
4001d390:	e3500000 	cmp	r0, #0
4001d394:	1a000001 	bne	4001d3a0 <CyU3PUsbResetEp+0x24>
4001d398:	e3a00042 	mov	r0, #66	; 0x42
4001d39c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d3a0:	e355000f 	cmp	r5, #15
4001d3a4:	da000001 	ble	4001d3b0 <CyU3PUsbResetEp+0x34>
4001d3a8:	e3a00040 	mov	r0, #64	; 0x40
4001d3ac:	eafffffa 	b	4001d39c <CyU3PUsbResetEp+0x20>
4001d3b0:	e3e01000 	mvn	r1, #0
4001d3b4:	e59f0094 	ldr	r0, [pc, #148]	; 4001d450 <CyU3PUsbResetEp+0xd4>
4001d3b8:	ebffb33e 	bl	4000a0b8 <_txe_mutex_get>
4001d3bc:	ebfffe2b 	bl	4001cc70 <CyU3PUsbGetSpeed>
4001d3c0:	e3500003 	cmp	r0, #3
4001d3c4:	1a00001c 	bne	4001d43c <CyU3PUsbResetEp+0xc0>
4001d3c8:	e59f0084 	ldr	r0, [pc, #132]	; 4001d454 <CyU3PUsbResetEp+0xd8>
4001d3cc:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d3d0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d3d4:	e59f1078 	ldr	r1, [pc, #120]	; 4001d454 <CyU3PUsbResetEp+0xd8>
4001d3d8:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d3dc:	e3140080 	tst	r4, #128	; 0x80
4001d3e0:	0a00000a 	beq	4001d410 <CyU3PUsbResetEp+0x94>
4001d3e4:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d3e8:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d3ec:	e3866011 	orr	r6, r6, #17
4001d3f0:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d3f4:	e3a00002 	mov	r0, #2
4001d3f8:	ebffd84c 	bl	40013530 <CyU3PBusyWait>
4001d3fc:	e3c60010 	bic	r0, r6, #16
4001d400:	e3806001 	orr	r6, r0, #1
4001d404:	e59f004c 	ldr	r0, [pc, #76]	; 4001d458 <CyU3PUsbResetEp+0xdc>
4001d408:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d40c:	ea00000a 	b	4001d43c <CyU3PUsbResetEp+0xc0>
4001d410:	e59f0044 	ldr	r0, [pc, #68]	; 4001d45c <CyU3PUsbResetEp+0xe0>
4001d414:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d418:	e3806011 	orr	r6, r0, #17
4001d41c:	e59f0038 	ldr	r0, [pc, #56]	; 4001d45c <CyU3PUsbResetEp+0xe0>
4001d420:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d424:	e3a00002 	mov	r0, #2
4001d428:	ebffd840 	bl	40013530 <CyU3PBusyWait>
4001d42c:	e3c60010 	bic	r0, r6, #16
4001d430:	e3806001 	orr	r6, r0, #1
4001d434:	e59f0020 	ldr	r0, [pc, #32]	; 4001d45c <CyU3PUsbResetEp+0xe0>
4001d438:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d43c:	e59f000c 	ldr	r0, [pc, #12]	; 4001d450 <CyU3PUsbResetEp+0xd4>
4001d440:	ebffb351 	bl	4000a18c <_txe_mutex_put>
4001d444:	e3a00000 	mov	r0, #0
4001d448:	eaffffd3 	b	4001d39c <CyU3PUsbResetEp+0x20>
4001d44c:	40031d40 	.word	0x40031d40
4001d450:	40031ee0 	.word	0x40031ee0
4001d454:	e0033000 	.word	0xe0033000
4001d458:	e0033500 	.word	0xe0033500
4001d45c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d460 <CyU3PUsbSendEP0Data>:
4001d460:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d464:	e1a04000 	mov	r4, r0
4001d468:	e1a05001 	mov	r5, r1
4001d46c:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d620 <CyU3PUsbSendEP0Data+0x1c0>
4001d470:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d624 <CyU3PUsbSendEP0Data+0x1c4>
4001d474:	e5d00008 	ldrb	r0, [r0, #8]
4001d478:	e3500000 	cmp	r0, #0
4001d47c:	1a000001 	bne	4001d488 <CyU3PUsbSendEP0Data+0x28>
4001d480:	e3a00042 	mov	r0, #66	; 0x42
4001d484:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d488:	e3550000 	cmp	r5, #0
4001d48c:	1a000001 	bne	4001d498 <CyU3PUsbSendEP0Data+0x38>
4001d490:	e3a00040 	mov	r0, #64	; 0x40
4001d494:	eafffffa 	b	4001d484 <CyU3PUsbSendEP0Data+0x24>
4001d498:	e3e01000 	mvn	r1, #0
4001d49c:	e59f0184 	ldr	r0, [pc, #388]	; 4001d628 <CyU3PUsbSendEP0Data+0x1c8>
4001d4a0:	ebffb304 	bl	4000a0b8 <_txe_mutex_get>
4001d4a4:	e59f0180 	ldr	r0, [pc, #384]	; 4001d62c <CyU3PUsbSendEP0Data+0x1cc>
4001d4a8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d4ac:	e3c00008 	bic	r0, r0, #8
4001d4b0:	e59f1174 	ldr	r1, [pc, #372]	; 4001d62c <CyU3PUsbSendEP0Data+0x1cc>
4001d4b4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d4b8:	e59f0164 	ldr	r0, [pc, #356]	; 4001d624 <CyU3PUsbSendEP0Data+0x1c4>
4001d4bc:	e5900018 	ldr	r0, [r0, #24]
4001d4c0:	e3500000 	cmp	r0, #0
4001d4c4:	1a000002 	bne	4001d4d4 <CyU3PUsbSendEP0Data+0x74>
4001d4c8:	ebfffdf0 	bl	4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d4cc:	e3500000 	cmp	r0, #0
4001d4d0:	0a000008 	beq	4001d4f8 <CyU3PUsbSendEP0Data+0x98>
4001d4d4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d62c <CyU3PUsbSendEP0Data+0x1cc>
4001d4d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d4dc:	e3800008 	orr	r0, r0, #8
4001d4e0:	e59f1144 	ldr	r1, [pc, #324]	; 4001d62c <CyU3PUsbSendEP0Data+0x1cc>
4001d4e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d4e8:	e59f0138 	ldr	r0, [pc, #312]	; 4001d628 <CyU3PUsbSendEP0Data+0x1c8>
4001d4ec:	ebffb326 	bl	4000a18c <_txe_mutex_put>
4001d4f0:	e3a00000 	mov	r0, #0
4001d4f4:	eaffffe2 	b	4001d484 <CyU3PUsbSendEP0Data+0x24>
4001d4f8:	e59f012c 	ldr	r0, [pc, #300]	; 4001d62c <CyU3PUsbSendEP0Data+0x1cc>
4001d4fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d500:	e3800008 	orr	r0, r0, #8
4001d504:	e59f1120 	ldr	r1, [pc, #288]	; 4001d62c <CyU3PUsbSendEP0Data+0x1cc>
4001d508:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d50c:	e1a00001 	mov	r0, r1
4001d510:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d514:	e1500004 	cmp	r0, r4
4001d518:	2a000003 	bcs	4001d52c <CyU3PUsbSendEP0Data+0xcc>
4001d51c:	e1a00001 	mov	r0, r1
4001d520:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d524:	e1a04800 	lsl	r4, r0, #16
4001d528:	e1a04824 	lsr	r4, r4, #16
4001d52c:	eb0003b8 	bl	4001e414 <GetUsbLinkActive>
4001d530:	e1cd40b4 	strh	r4, [sp, #4]
4001d534:	e284000f 	add	r0, r4, #15
4001d538:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d630 <CyU3PUsbSendEP0Data+0x1d0>
4001d53c:	e0000001 	and	r0, r0, r1
4001d540:	e1cd00b6 	strh	r0, [sp, #6]
4001d544:	e58d5000 	str	r5, [sp]
4001d548:	e3a00000 	mov	r0, #0
4001d54c:	e1cd00b8 	strh	r0, [sp, #8]
4001d550:	e1a0100d 	mov	r1, sp
4001d554:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d634 <CyU3PUsbSendEP0Data+0x1d4>
4001d558:	ebffe571 	bl	40016b24 <CyU3PDmaChannelSetupSendBuffer>
4001d55c:	e20060ff 	and	r6, r0, #255	; 0xff
4001d560:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d628 <CyU3PUsbSendEP0Data+0x1c8>
4001d564:	ebffb308 	bl	4000a18c <_txe_mutex_put>
4001d568:	e3560000 	cmp	r6, #0
4001d56c:	1a000029 	bne	4001d618 <CyU3PUsbSendEP0Data+0x1b8>
4001d570:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d624 <CyU3PUsbSendEP0Data+0x1c4>
4001d574:	e5900014 	ldr	r0, [r0, #20]
4001d578:	e3500000 	cmp	r0, #0
4001d57c:	0a000000 	beq	4001d584 <CyU3PUsbSendEP0Data+0x124>
4001d580:	ebfffc1d 	bl	4001c5fc <CyU3PUsbAckSetup>
4001d584:	ea00000d 	b	4001d5c0 <CyU3PUsbSendEP0Data+0x160>
4001d588:	e3a01064 	mov	r1, #100	; 0x64
4001d58c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d634 <CyU3PUsbSendEP0Data+0x1d4>
4001d590:	ebffe5f1 	bl	40016d5c <CyU3PDmaChannelWaitForCompletion>
4001d594:	e20060ff 	and	r6, r0, #255	; 0xff
4001d598:	e3560045 	cmp	r6, #69	; 0x45
4001d59c:	1a000006 	bne	4001d5bc <CyU3PUsbSendEP0Data+0x15c>
4001d5a0:	ebfffdba 	bl	4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d5a4:	e3500000 	cmp	r0, #0
4001d5a8:	0a000001 	beq	4001d5b4 <CyU3PUsbSendEP0Data+0x154>
4001d5ac:	e3a00000 	mov	r0, #0
4001d5b0:	eaffffb3 	b	4001d484 <CyU3PUsbSendEP0Data+0x24>
4001d5b4:	e2477064 	sub	r7, r7, #100	; 0x64
4001d5b8:	ea000000 	b	4001d5c0 <CyU3PUsbSendEP0Data+0x160>
4001d5bc:	ea000001 	b	4001d5c8 <CyU3PUsbSendEP0Data+0x168>
4001d5c0:	e3570000 	cmp	r7, #0
4001d5c4:	1affffef 	bne	4001d588 <CyU3PUsbSendEP0Data+0x128>
4001d5c8:	e1a00000 	nop			; (mov r0, r0)
4001d5cc:	e3560000 	cmp	r6, #0
4001d5d0:	0a000010 	beq	4001d618 <CyU3PUsbSendEP0Data+0x1b8>
4001d5d4:	e3e01000 	mvn	r1, #0
4001d5d8:	e59f0048 	ldr	r0, [pc, #72]	; 4001d628 <CyU3PUsbSendEP0Data+0x1c8>
4001d5dc:	ebffb2b5 	bl	4000a0b8 <_txe_mutex_get>
4001d5e0:	e3a01001 	mov	r1, #1
4001d5e4:	e3a00080 	mov	r0, #128	; 0x80
4001d5e8:	eb000101 	bl	4001d9f4 <CyU3PUsbSetEpNak>
4001d5ec:	e3a00064 	mov	r0, #100	; 0x64
4001d5f0:	ebffd7ce 	bl	40013530 <CyU3PBusyWait>
4001d5f4:	e59f0038 	ldr	r0, [pc, #56]	; 4001d634 <CyU3PUsbSendEP0Data+0x1d4>
4001d5f8:	ebffe306 	bl	40016218 <CyU3PDmaChannelReset>
4001d5fc:	e3a00080 	mov	r0, #128	; 0x80
4001d600:	ebfffcf5 	bl	4001c9dc <CyU3PUsbFlushEp>
4001d604:	e3a01000 	mov	r1, #0
4001d608:	e3a00080 	mov	r0, #128	; 0x80
4001d60c:	eb0000f8 	bl	4001d9f4 <CyU3PUsbSetEpNak>
4001d610:	e59f0010 	ldr	r0, [pc, #16]	; 4001d628 <CyU3PUsbSendEP0Data+0x1c8>
4001d614:	ebffb2dc 	bl	4000a18c <_txe_mutex_put>
4001d618:	e1a00006 	mov	r0, r6
4001d61c:	eaffff98 	b	4001d484 <CyU3PUsbSendEP0Data+0x24>
4001d620:	00001388 	.word	0x00001388
4001d624:	40031d40 	.word	0x40031d40
4001d628:	40031ee0 	.word	0x40031ee0
4001d62c:	e0031000 	.word	0xe0031000
4001d630:	0000fff0 	.word	0x0000fff0
4001d634:	40031a78 	.word	0x40031a78

Disassembly of section i.CyU3PUsbSendErdy:

4001d638 <CyU3PUsbSendErdy>:
4001d638:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d63c:	e1a04000 	mov	r4, r0
4001d640:	e1a05001 	mov	r5, r1
4001d644:	e1a0000d 	mov	r0, sp
4001d648:	e3a02000 	mov	r2, #0
4001d64c:	e1a03002 	mov	r3, r2
4001d650:	e1a06002 	mov	r6, r2
4001d654:	e880004c 	stm	r0, {r2, r3, r6}
4001d658:	e204600f 	and	r6, r4, #15
4001d65c:	e2047080 	and	r7, r4, #128	; 0x80
4001d660:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d71c <CyU3PUsbSendErdy+0xe4>
4001d664:	e5d00008 	ldrb	r0, [r0, #8]
4001d668:	e3500000 	cmp	r0, #0
4001d66c:	1a000001 	bne	4001d678 <CyU3PUsbSendErdy+0x40>
4001d670:	e3a00042 	mov	r0, #66	; 0x42
4001d674:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d678:	ebfffd7c 	bl	4001cc70 <CyU3PUsbGetSpeed>
4001d67c:	e3500003 	cmp	r0, #3
4001d680:	1a000004 	bne	4001d698 <CyU3PUsbSendErdy+0x60>
4001d684:	e59f0094 	ldr	r0, [pc, #148]	; 4001d720 <CyU3PUsbSendErdy+0xe8>
4001d688:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d68c:	e200003f 	and	r0, r0, #63	; 0x3f
4001d690:	e3500010 	cmp	r0, #16
4001d694:	0a000001 	beq	4001d6a0 <CyU3PUsbSendErdy+0x68>
4001d698:	e3a000ff 	mov	r0, #255	; 0xff
4001d69c:	eafffff4 	b	4001d674 <CyU3PUsbSendErdy+0x3c>
4001d6a0:	e204007f 	and	r0, r4, #127	; 0x7f
4001d6a4:	e350000f 	cmp	r0, #15
4001d6a8:	da000001 	ble	4001d6b4 <CyU3PUsbSendErdy+0x7c>
4001d6ac:	e3a00040 	mov	r0, #64	; 0x40
4001d6b0:	eaffffef 	b	4001d674 <CyU3PUsbSendErdy+0x3c>
4001d6b4:	e59f0064 	ldr	r0, [pc, #100]	; 4001d720 <CyU3PUsbSendErdy+0xe8>
4001d6b8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d6bc:	e3a01004 	mov	r1, #4
4001d6c0:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d6c4:	e58d0000 	str	r0, [sp]
4001d6c8:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d6cc:	e3800003 	orr	r0, r0, #3
4001d6d0:	e1800406 	orr	r0, r0, r6, lsl #8
4001d6d4:	e58d0004 	str	r0, [sp, #4]
4001d6d8:	e3570000 	cmp	r7, #0
4001d6dc:	0a000005 	beq	4001d6f8 <CyU3PUsbSendErdy+0xc0>
4001d6e0:	e59f003c 	ldr	r0, [pc, #60]	; 4001d724 <CyU3PUsbSendErdy+0xec>
4001d6e4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d6e8:	e3100008 	tst	r0, #8
4001d6ec:	0a000006 	beq	4001d70c <CyU3PUsbSendErdy+0xd4>
4001d6f0:	e58d5008 	str	r5, [sp, #8]
4001d6f4:	ea000004 	b	4001d70c <CyU3PUsbSendErdy+0xd4>
4001d6f8:	e59f0028 	ldr	r0, [pc, #40]	; 4001d728 <CyU3PUsbSendErdy+0xf0>
4001d6fc:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d700:	e3100008 	tst	r0, #8
4001d704:	0a000000 	beq	4001d70c <CyU3PUsbSendErdy+0xd4>
4001d708:	e58d5008 	str	r5, [sp, #8]
4001d70c:	e1a0000d 	mov	r0, sp
4001d710:	eb00123d 	bl	4002200c <CyFx3Usb3SendTP>
4001d714:	e3a00000 	mov	r0, #0
4001d718:	eaffffd5 	b	4001d674 <CyU3PUsbSendErdy+0x3c>
4001d71c:	40031d40 	.word	0x40031d40
4001d720:	e0033000 	.word	0xe0033000
4001d724:	e0033500 	.word	0xe0033500
4001d728:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d72c <CyU3PUsbSendNrdy>:
4001d72c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d730:	e1a04000 	mov	r4, r0
4001d734:	e1a05001 	mov	r5, r1
4001d738:	e1a0000d 	mov	r0, sp
4001d73c:	e3a02000 	mov	r2, #0
4001d740:	e1a03002 	mov	r3, r2
4001d744:	e1a06002 	mov	r6, r2
4001d748:	e880004c 	stm	r0, {r2, r3, r6}
4001d74c:	e204600f 	and	r6, r4, #15
4001d750:	e2047080 	and	r7, r4, #128	; 0x80
4001d754:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d80c <CyU3PUsbSendNrdy+0xe0>
4001d758:	e5d00008 	ldrb	r0, [r0, #8]
4001d75c:	e3500000 	cmp	r0, #0
4001d760:	1a000001 	bne	4001d76c <CyU3PUsbSendNrdy+0x40>
4001d764:	e3a00042 	mov	r0, #66	; 0x42
4001d768:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d76c:	ebfffd3f 	bl	4001cc70 <CyU3PUsbGetSpeed>
4001d770:	e3500003 	cmp	r0, #3
4001d774:	1a000004 	bne	4001d78c <CyU3PUsbSendNrdy+0x60>
4001d778:	e59f0090 	ldr	r0, [pc, #144]	; 4001d810 <CyU3PUsbSendNrdy+0xe4>
4001d77c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d780:	e200003f 	and	r0, r0, #63	; 0x3f
4001d784:	e3500010 	cmp	r0, #16
4001d788:	0a000001 	beq	4001d794 <CyU3PUsbSendNrdy+0x68>
4001d78c:	e3a000ff 	mov	r0, #255	; 0xff
4001d790:	eafffff4 	b	4001d768 <CyU3PUsbSendNrdy+0x3c>
4001d794:	e204007f 	and	r0, r4, #127	; 0x7f
4001d798:	e350000f 	cmp	r0, #15
4001d79c:	da000001 	ble	4001d7a8 <CyU3PUsbSendNrdy+0x7c>
4001d7a0:	e3a00040 	mov	r0, #64	; 0x40
4001d7a4:	eaffffef 	b	4001d768 <CyU3PUsbSendNrdy+0x3c>
4001d7a8:	e59f0060 	ldr	r0, [pc, #96]	; 4001d810 <CyU3PUsbSendNrdy+0xe4>
4001d7ac:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d7b0:	e3a01004 	mov	r1, #4
4001d7b4:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d7b8:	e58d0000 	str	r0, [sp]
4001d7bc:	e3870002 	orr	r0, r7, #2
4001d7c0:	e1800406 	orr	r0, r0, r6, lsl #8
4001d7c4:	e58d0004 	str	r0, [sp, #4]
4001d7c8:	e3570000 	cmp	r7, #0
4001d7cc:	0a000005 	beq	4001d7e8 <CyU3PUsbSendNrdy+0xbc>
4001d7d0:	e59f003c 	ldr	r0, [pc, #60]	; 4001d814 <CyU3PUsbSendNrdy+0xe8>
4001d7d4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d7d8:	e3100008 	tst	r0, #8
4001d7dc:	0a000006 	beq	4001d7fc <CyU3PUsbSendNrdy+0xd0>
4001d7e0:	e58d5008 	str	r5, [sp, #8]
4001d7e4:	ea000004 	b	4001d7fc <CyU3PUsbSendNrdy+0xd0>
4001d7e8:	e59f0028 	ldr	r0, [pc, #40]	; 4001d818 <CyU3PUsbSendNrdy+0xec>
4001d7ec:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d7f0:	e3100008 	tst	r0, #8
4001d7f4:	0a000000 	beq	4001d7fc <CyU3PUsbSendNrdy+0xd0>
4001d7f8:	e58d5008 	str	r5, [sp, #8]
4001d7fc:	e1a0000d 	mov	r0, sp
4001d800:	eb001201 	bl	4002200c <CyFx3Usb3SendTP>
4001d804:	e3a00000 	mov	r0, #0
4001d808:	eaffffd6 	b	4001d768 <CyU3PUsbSendNrdy+0x3c>
4001d80c:	40031d40 	.word	0x40031d40
4001d810:	e0033000 	.word	0xe0033000
4001d814:	e0033500 	.word	0xe0033500
4001d818:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d81c <CyU3PUsbSetDesc>:
4001d81c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d820:	e1a03000 	mov	r3, r0
4001d824:	e3a0c000 	mov	ip, #0
4001d828:	e59f01b8 	ldr	r0, [pc, #440]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d82c:	e5d00008 	ldrb	r0, [r0, #8]
4001d830:	e3500000 	cmp	r0, #0
4001d834:	1a000001 	bne	4001d840 <CyU3PUsbSetDesc+0x24>
4001d838:	e3a00042 	mov	r0, #66	; 0x42
4001d83c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d840:	e3520000 	cmp	r2, #0
4001d844:	1a000001 	bne	4001d850 <CyU3PUsbSetDesc+0x34>
4001d848:	e3a00040 	mov	r0, #64	; 0x40
4001d84c:	eafffffa 	b	4001d83c <CyU3PUsbSetDesc+0x20>
4001d850:	e3530009 	cmp	r3, #9
4001d854:	308ff103 	addcc	pc, pc, r3, lsl #2
4001d858:	ea00004d 	b	4001d994 <CyU3PUsbSetDesc+0x178>
4001d85c:	ea000007 	b	4001d880 <CyU3PUsbSetDesc+0x64>
4001d860:	ea00000a 	b	4001d890 <CyU3PUsbSetDesc+0x74>
4001d864:	ea000011 	b	4001d8b0 <CyU3PUsbSetDesc+0x94>
4001d868:	ea000022 	b	4001d8f8 <CyU3PUsbSetDesc+0xdc>
4001d86c:	ea00002f 	b	4001d930 <CyU3PUsbSetDesc+0x114>
4001d870:	ea00003c 	b	4001d968 <CyU3PUsbSetDesc+0x14c>
4001d874:	ea000011 	b	4001d8c0 <CyU3PUsbSetDesc+0xa4>
4001d878:	ea000008 	b	4001d8a0 <CyU3PUsbSetDesc+0x84>
4001d87c:	ea000040 	b	4001d984 <CyU3PUsbSetDesc+0x168>
4001d880:	e1a00000 	nop			; (mov r0, r0)
4001d884:	e59f0160 	ldr	r0, [pc, #352]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d888:	e5802004 	str	r2, [r0, #4]
4001d88c:	ea000043 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d890:	e1a00000 	nop			; (mov r0, r0)
4001d894:	e59f0150 	ldr	r0, [pc, #336]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d898:	e5802000 	str	r2, [r0]
4001d89c:	ea00003f 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d8a0:	e1a00000 	nop			; (mov r0, r0)
4001d8a4:	e59f0140 	ldr	r0, [pc, #320]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d8a8:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001d8ac:	ea00003b 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d8b0:	e1a00000 	nop			; (mov r0, r0)
4001d8b4:	e59f0130 	ldr	r0, [pc, #304]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d8b8:	e5802008 	str	r2, [r0, #8]
4001d8bc:	ea000037 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d8c0:	e1a00000 	nop			; (mov r0, r0)
4001d8c4:	e59f0120 	ldr	r0, [pc, #288]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d8c8:	e580201c 	str	r2, [r0, #28]
4001d8cc:	e5d20007 	ldrb	r0, [r2, #7]
4001d8d0:	e3100040 	tst	r0, #64	; 0x40
4001d8d4:	0a000003 	beq	4001d8e8 <CyU3PUsbSetDesc+0xcc>
4001d8d8:	e3a00001 	mov	r0, #1
4001d8dc:	e59fe104 	ldr	lr, [pc, #260]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d8e0:	e5ce0006 	strb	r0, [lr, #6]
4001d8e4:	ea000002 	b	4001d8f4 <CyU3PUsbSetDesc+0xd8>
4001d8e8:	e3a00000 	mov	r0, #0
4001d8ec:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d8f0:	e5ce0006 	strb	r0, [lr, #6]
4001d8f4:	ea000029 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d8f8:	e1a00000 	nop			; (mov r0, r0)
4001d8fc:	e59f00e8 	ldr	r0, [pc, #232]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d900:	e5802018 	str	r2, [r0, #24]
4001d904:	e5d20007 	ldrb	r0, [r2, #7]
4001d908:	e3100040 	tst	r0, #64	; 0x40
4001d90c:	0a000003 	beq	4001d920 <CyU3PUsbSetDesc+0x104>
4001d910:	e3a00001 	mov	r0, #1
4001d914:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d918:	e5ce0006 	strb	r0, [lr, #6]
4001d91c:	ea000002 	b	4001d92c <CyU3PUsbSetDesc+0x110>
4001d920:	e3a00000 	mov	r0, #0
4001d924:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d928:	e5ce0006 	strb	r0, [lr, #6]
4001d92c:	ea00001b 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d930:	e1a00000 	nop			; (mov r0, r0)
4001d934:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d938:	e5802014 	str	r2, [r0, #20]
4001d93c:	e5d20007 	ldrb	r0, [r2, #7]
4001d940:	e3100040 	tst	r0, #64	; 0x40
4001d944:	0a000003 	beq	4001d958 <CyU3PUsbSetDesc+0x13c>
4001d948:	e3a00001 	mov	r0, #1
4001d94c:	e59fe094 	ldr	lr, [pc, #148]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d950:	e5ce0006 	strb	r0, [lr, #6]
4001d954:	ea000002 	b	4001d964 <CyU3PUsbSetDesc+0x148>
4001d958:	e3a00000 	mov	r0, #0
4001d95c:	e59fe084 	ldr	lr, [pc, #132]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d960:	e5ce0006 	strb	r0, [lr, #6]
4001d964:	ea00000d 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d968:	e1a00000 	nop			; (mov r0, r0)
4001d96c:	e3510010 	cmp	r1, #16
4001d970:	da000000 	ble	4001d978 <CyU3PUsbSetDesc+0x15c>
4001d974:	e3a0c04b 	mov	ip, #75	; 0x4b
4001d978:	e59f0070 	ldr	r0, [pc, #112]	; 4001d9f0 <CyU3PUsbSetDesc+0x1d4>
4001d97c:	e7802101 	str	r2, [r0, r1, lsl #2]
4001d980:	ea000006 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d984:	e1a00000 	nop			; (mov r0, r0)
4001d988:	e59f005c 	ldr	r0, [pc, #92]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d98c:	e5802070 	str	r2, [r0, #112]	; 0x70
4001d990:	ea000002 	b	4001d9a0 <CyU3PUsbSetDesc+0x184>
4001d994:	e1a00000 	nop			; (mov r0, r0)
4001d998:	e3a00050 	mov	r0, #80	; 0x50
4001d99c:	eaffffa6 	b	4001d83c <CyU3PUsbSetDesc+0x20>
4001d9a0:	e1a00000 	nop			; (mov r0, r0)
4001d9a4:	e59f0040 	ldr	r0, [pc, #64]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d9a8:	e5900000 	ldr	r0, [r0]
4001d9ac:	e3500000 	cmp	r0, #0
4001d9b0:	0a00000a 	beq	4001d9e0 <CyU3PUsbSetDesc+0x1c4>
4001d9b4:	e59f0030 	ldr	r0, [pc, #48]	; 4001d9ec <CyU3PUsbSetDesc+0x1d0>
4001d9b8:	e5900020 	ldr	r0, [r0, #32]
4001d9bc:	e3500000 	cmp	r0, #0
4001d9c0:	0a000006 	beq	4001d9e0 <CyU3PUsbSetDesc+0x1c4>
4001d9c4:	e59f001c 	ldr	r0, [pc, #28]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d9c8:	e5d00008 	ldrb	r0, [r0, #8]
4001d9cc:	e3500003 	cmp	r0, #3
4001d9d0:	aa000002 	bge	4001d9e0 <CyU3PUsbSetDesc+0x1c4>
4001d9d4:	e3a00003 	mov	r0, #3
4001d9d8:	e59fe008 	ldr	lr, [pc, #8]	; 4001d9e8 <CyU3PUsbSetDesc+0x1cc>
4001d9dc:	e5ce0008 	strb	r0, [lr, #8]
4001d9e0:	e1a0000c 	mov	r0, ip
4001d9e4:	eaffff94 	b	4001d83c <CyU3PUsbSetDesc+0x20>
4001d9e8:	40031d40 	.word	0x40031d40
4001d9ec:	40031f98 	.word	0x40031f98
4001d9f0:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001d9f4 <CyU3PUsbSetEpNak>:
4001d9f4:	e92d4070 	push	{r4, r5, r6, lr}
4001d9f8:	e1a04000 	mov	r4, r0
4001d9fc:	e1a06001 	mov	r6, r1
4001da00:	e59f0198 	ldr	r0, [pc, #408]	; 4001dba0 <CyU3PUsbSetEpNak+0x1ac>
4001da04:	e5d00008 	ldrb	r0, [r0, #8]
4001da08:	e3500000 	cmp	r0, #0
4001da0c:	1a000001 	bne	4001da18 <CyU3PUsbSetEpNak+0x24>
4001da10:	e3a00042 	mov	r0, #66	; 0x42
4001da14:	e8bd8070 	pop	{r4, r5, r6, pc}
4001da18:	e204007f 	and	r0, r4, #127	; 0x7f
4001da1c:	e350000f 	cmp	r0, #15
4001da20:	da000001 	ble	4001da2c <CyU3PUsbSetEpNak+0x38>
4001da24:	e3a00040 	mov	r0, #64	; 0x40
4001da28:	eafffff9 	b	4001da14 <CyU3PUsbSetEpNak+0x20>
4001da2c:	e3e01000 	mvn	r1, #0
4001da30:	e59f016c 	ldr	r0, [pc, #364]	; 4001dba4 <CyU3PUsbSetEpNak+0x1b0>
4001da34:	ebffb19f 	bl	4000a0b8 <_txe_mutex_get>
4001da38:	e3560000 	cmp	r6, #0
4001da3c:	0a000028 	beq	4001dae4 <CyU3PUsbSetEpNak+0xf0>
4001da40:	e3140080 	tst	r4, #128	; 0x80
4001da44:	0a000012 	beq	4001da94 <CyU3PUsbSetEpNak+0xa0>
4001da48:	e59f0150 	ldr	r0, [pc, #336]	; 4001dba0 <CyU3PUsbSetEpNak+0x1ac>
4001da4c:	e5d00009 	ldrb	r0, [r0, #9]
4001da50:	e3500003 	cmp	r0, #3
4001da54:	1a000006 	bne	4001da74 <CyU3PUsbSetEpNak+0x80>
4001da58:	e59f0148 	ldr	r0, [pc, #328]	; 4001dba8 <CyU3PUsbSetEpNak+0x1b4>
4001da5c:	e204100f 	and	r1, r4, #15
4001da60:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001da64:	e3855003 	orr	r5, r5, #3
4001da68:	e204100f 	and	r1, r4, #15
4001da6c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da70:	ea000046 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001da74:	e59f0130 	ldr	r0, [pc, #304]	; 4001dbac <CyU3PUsbSetEpNak+0x1b8>
4001da78:	e204100f 	and	r1, r4, #15
4001da7c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da80:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001da84:	e59f1120 	ldr	r1, [pc, #288]	; 4001dbac <CyU3PUsbSetEpNak+0x1b8>
4001da88:	e204200f 	and	r2, r4, #15
4001da8c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da90:	ea00003e 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001da94:	e59f0104 	ldr	r0, [pc, #260]	; 4001dba0 <CyU3PUsbSetEpNak+0x1ac>
4001da98:	e5d00009 	ldrb	r0, [r0, #9]
4001da9c:	e3500003 	cmp	r0, #3
4001daa0:	1a000007 	bne	4001dac4 <CyU3PUsbSetEpNak+0xd0>
4001daa4:	e59f0104 	ldr	r0, [pc, #260]	; 4001dbb0 <CyU3PUsbSetEpNak+0x1bc>
4001daa8:	e204100f 	and	r1, r4, #15
4001daac:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dab0:	e3805003 	orr	r5, r0, #3
4001dab4:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dbb0 <CyU3PUsbSetEpNak+0x1bc>
4001dab8:	e204100f 	and	r1, r4, #15
4001dabc:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dac0:	ea000032 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001dac4:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dbb4 <CyU3PUsbSetEpNak+0x1c0>
4001dac8:	e204100f 	and	r1, r4, #15
4001dacc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dad0:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001dad4:	e59f10d8 	ldr	r1, [pc, #216]	; 4001dbb4 <CyU3PUsbSetEpNak+0x1c0>
4001dad8:	e204200f 	and	r2, r4, #15
4001dadc:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dae0:	ea00002a 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001dae4:	e3140080 	tst	r4, #128	; 0x80
4001dae8:	0a000014 	beq	4001db40 <CyU3PUsbSetEpNak+0x14c>
4001daec:	e59f00ac 	ldr	r0, [pc, #172]	; 4001dba0 <CyU3PUsbSetEpNak+0x1ac>
4001daf0:	e5d00009 	ldrb	r0, [r0, #9]
4001daf4:	e3500003 	cmp	r0, #3
4001daf8:	1a000008 	bne	4001db20 <CyU3PUsbSetEpNak+0x12c>
4001dafc:	e59f00a4 	ldr	r0, [pc, #164]	; 4001dba8 <CyU3PUsbSetEpNak+0x1b4>
4001db00:	e204100f 	and	r1, r4, #15
4001db04:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001db08:	e3c50002 	bic	r0, r5, #2
4001db0c:	e3805001 	orr	r5, r0, #1
4001db10:	e59f0090 	ldr	r0, [pc, #144]	; 4001dba8 <CyU3PUsbSetEpNak+0x1b4>
4001db14:	e204100f 	and	r1, r4, #15
4001db18:	e7805101 	str	r5, [r0, r1, lsl #2]
4001db1c:	ea00001b 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001db20:	e59f0084 	ldr	r0, [pc, #132]	; 4001dbac <CyU3PUsbSetEpNak+0x1b8>
4001db24:	e204100f 	and	r1, r4, #15
4001db28:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001db2c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001db30:	e59f1074 	ldr	r1, [pc, #116]	; 4001dbac <CyU3PUsbSetEpNak+0x1b8>
4001db34:	e204200f 	and	r2, r4, #15
4001db38:	e7810102 	str	r0, [r1, r2, lsl #2]
4001db3c:	ea000013 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001db40:	e59f0058 	ldr	r0, [pc, #88]	; 4001dba0 <CyU3PUsbSetEpNak+0x1ac>
4001db44:	e5d00009 	ldrb	r0, [r0, #9]
4001db48:	e3500003 	cmp	r0, #3
4001db4c:	1a000008 	bne	4001db74 <CyU3PUsbSetEpNak+0x180>
4001db50:	e59f0058 	ldr	r0, [pc, #88]	; 4001dbb0 <CyU3PUsbSetEpNak+0x1bc>
4001db54:	e204100f 	and	r1, r4, #15
4001db58:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001db5c:	e3c00002 	bic	r0, r0, #2
4001db60:	e3805001 	orr	r5, r0, #1
4001db64:	e59f0044 	ldr	r0, [pc, #68]	; 4001dbb0 <CyU3PUsbSetEpNak+0x1bc>
4001db68:	e204100f 	and	r1, r4, #15
4001db6c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001db70:	ea000006 	b	4001db90 <CyU3PUsbSetEpNak+0x19c>
4001db74:	e59f0038 	ldr	r0, [pc, #56]	; 4001dbb4 <CyU3PUsbSetEpNak+0x1c0>
4001db78:	e204100f 	and	r1, r4, #15
4001db7c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001db80:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001db84:	e59f1028 	ldr	r1, [pc, #40]	; 4001dbb4 <CyU3PUsbSetEpNak+0x1c0>
4001db88:	e204200f 	and	r2, r4, #15
4001db8c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001db90:	e59f000c 	ldr	r0, [pc, #12]	; 4001dba4 <CyU3PUsbSetEpNak+0x1b0>
4001db94:	ebffb17c 	bl	4000a18c <_txe_mutex_put>
4001db98:	e3a00000 	mov	r0, #0
4001db9c:	eaffff9c 	b	4001da14 <CyU3PUsbSetEpNak+0x20>
4001dba0:	40031d40 	.word	0x40031d40
4001dba4:	40031ee0 	.word	0x40031ee0
4001dba8:	e0033500 	.word	0xe0033500
4001dbac:	e0031418 	.word	0xe0031418
4001dbb0:	e0033600 	.word	0xe0033600
4001dbb4:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001dbb8 <CyU3PUsbSetLinkPowerState>:
4001dbb8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dbbc:	e1a01000 	mov	r1, r0
4001dbc0:	e3a030ff 	mov	r3, #255	; 0xff
4001dbc4:	e59f0138 	ldr	r0, [pc, #312]	; 4001dd04 <CyU3PUsbSetLinkPowerState+0x14c>
4001dbc8:	e5d00008 	ldrb	r0, [r0, #8]
4001dbcc:	e3500000 	cmp	r0, #0
4001dbd0:	1a000001 	bne	4001dbdc <CyU3PUsbSetLinkPowerState+0x24>
4001dbd4:	e3a00042 	mov	r0, #66	; 0x42
4001dbd8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dbdc:	e59f0120 	ldr	r0, [pc, #288]	; 4001dd04 <CyU3PUsbSetLinkPowerState+0x14c>
4001dbe0:	e5d00008 	ldrb	r0, [r0, #8]
4001dbe4:	e3500005 	cmp	r0, #5
4001dbe8:	aa000001 	bge	4001dbf4 <CyU3PUsbSetLinkPowerState+0x3c>
4001dbec:	e3a00044 	mov	r0, #68	; 0x44
4001dbf0:	eafffff8 	b	4001dbd8 <CyU3PUsbSetLinkPowerState+0x20>
4001dbf4:	ebfffc1d 	bl	4001cc70 <CyU3PUsbGetSpeed>
4001dbf8:	e3500003 	cmp	r0, #3
4001dbfc:	0a000001 	beq	4001dc08 <CyU3PUsbSetLinkPowerState+0x50>
4001dc00:	e3a000ff 	mov	r0, #255	; 0xff
4001dc04:	eafffff3 	b	4001dbd8 <CyU3PUsbSetLinkPowerState+0x20>
4001dc08:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dc0c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dc10:	e200203f 	and	r2, r0, #63	; 0x3f
4001dc14:	e3510000 	cmp	r1, #0
4001dc18:	0a000004 	beq	4001dc30 <CyU3PUsbSetLinkPowerState+0x78>
4001dc1c:	e3510001 	cmp	r1, #1
4001dc20:	0a000015 	beq	4001dc7c <CyU3PUsbSetLinkPowerState+0xc4>
4001dc24:	e3510002 	cmp	r1, #2
4001dc28:	1a00002f 	bne	4001dcec <CyU3PUsbSetLinkPowerState+0x134>
4001dc2c:	ea000020 	b	4001dcb4 <CyU3PUsbSetLinkPowerState+0xfc>
4001dc30:	e1a00000 	nop			; (mov r0, r0)
4001dc34:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dc38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dc3c:	e3100c02 	tst	r0, #512	; 0x200
4001dc40:	1a00000b 	bne	4001dc74 <CyU3PUsbSetLinkPowerState+0xbc>
4001dc44:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dc48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dc4c:	e200203f 	and	r2, r0, #63	; 0x3f
4001dc50:	e3520011 	cmp	r2, #17
4001dc54:	ba000006 	blt	4001dc74 <CyU3PUsbSetLinkPowerState+0xbc>
4001dc58:	e3520013 	cmp	r2, #19
4001dc5c:	ca000004 	bgt	4001dc74 <CyU3PUsbSetLinkPowerState+0xbc>
4001dc60:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dc64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dc68:	e3800c02 	orr	r0, r0, #512	; 0x200
4001dc6c:	e59fc094 	ldr	ip, [pc, #148]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dc70:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dc74:	e3a03000 	mov	r3, #0
4001dc78:	ea00001e 	b	4001dcf8 <CyU3PUsbSetLinkPowerState+0x140>
4001dc7c:	e1a00000 	nop			; (mov r0, r0)
4001dc80:	e3520010 	cmp	r2, #16
4001dc84:	1a000009 	bne	4001dcb0 <CyU3PUsbSetLinkPowerState+0xf8>
4001dc88:	e59f0074 	ldr	r0, [pc, #116]	; 4001dd04 <CyU3PUsbSetLinkPowerState+0x14c>
4001dc8c:	e5d00006 	ldrb	r0, [r0, #6]
4001dc90:	e3100004 	tst	r0, #4
4001dc94:	0a000005 	beq	4001dcb0 <CyU3PUsbSetLinkPowerState+0xf8>
4001dc98:	e59f0068 	ldr	r0, [pc, #104]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dc9c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dca0:	e3800001 	orr	r0, r0, #1
4001dca4:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dca8:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dcac:	e3a03000 	mov	r3, #0
4001dcb0:	ea000010 	b	4001dcf8 <CyU3PUsbSetLinkPowerState+0x140>
4001dcb4:	e1a00000 	nop			; (mov r0, r0)
4001dcb8:	e3520010 	cmp	r2, #16
4001dcbc:	1a000009 	bne	4001dce8 <CyU3PUsbSetLinkPowerState+0x130>
4001dcc0:	e59f003c 	ldr	r0, [pc, #60]	; 4001dd04 <CyU3PUsbSetLinkPowerState+0x14c>
4001dcc4:	e5d00006 	ldrb	r0, [r0, #6]
4001dcc8:	e3100008 	tst	r0, #8
4001dccc:	0a000005 	beq	4001dce8 <CyU3PUsbSetLinkPowerState+0x130>
4001dcd0:	e59f0030 	ldr	r0, [pc, #48]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dcd4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dcd8:	e3800002 	orr	r0, r0, #2
4001dcdc:	e59fc024 	ldr	ip, [pc, #36]	; 4001dd08 <CyU3PUsbSetLinkPowerState+0x150>
4001dce0:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dce4:	e3a03000 	mov	r3, #0
4001dce8:	ea000002 	b	4001dcf8 <CyU3PUsbSetLinkPowerState+0x140>
4001dcec:	e1a00000 	nop			; (mov r0, r0)
4001dcf0:	e3a03040 	mov	r3, #64	; 0x40
4001dcf4:	e1a00000 	nop			; (mov r0, r0)
4001dcf8:	e1a00000 	nop			; (mov r0, r0)
4001dcfc:	e1a00003 	mov	r0, r3
4001dd00:	eaffffb4 	b	4001dbd8 <CyU3PUsbSetLinkPowerState+0x20>
4001dd04:	40031d40 	.word	0x40031d40
4001dd08:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dd0c <CyU3PUsbStall>:
4001dd0c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dd10:	e1a04000 	mov	r4, r0
4001dd14:	e1a05001 	mov	r5, r1
4001dd18:	e1a06002 	mov	r6, r2
4001dd1c:	e204700f 	and	r7, r4, #15
4001dd20:	e3a08000 	mov	r8, #0
4001dd24:	e59f0344 	ldr	r0, [pc, #836]	; 4001e070 <CyU3PUsbStall+0x364>
4001dd28:	e5d00008 	ldrb	r0, [r0, #8]
4001dd2c:	e3500000 	cmp	r0, #0
4001dd30:	1a000001 	bne	4001dd3c <CyU3PUsbStall+0x30>
4001dd34:	e3a00042 	mov	r0, #66	; 0x42
4001dd38:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001dd3c:	e204007f 	and	r0, r4, #127	; 0x7f
4001dd40:	e350000f 	cmp	r0, #15
4001dd44:	da000001 	ble	4001dd50 <CyU3PUsbStall+0x44>
4001dd48:	e3a00040 	mov	r0, #64	; 0x40
4001dd4c:	eafffff9 	b	4001dd38 <CyU3PUsbStall+0x2c>
4001dd50:	e3570000 	cmp	r7, #0
4001dd54:	1a000003 	bne	4001dd68 <CyU3PUsbStall+0x5c>
4001dd58:	e3550000 	cmp	r5, #0
4001dd5c:	1a000001 	bne	4001dd68 <CyU3PUsbStall+0x5c>
4001dd60:	e3a00040 	mov	r0, #64	; 0x40
4001dd64:	eafffff3 	b	4001dd38 <CyU3PUsbStall+0x2c>
4001dd68:	e59f0300 	ldr	r0, [pc, #768]	; 4001e070 <CyU3PUsbStall+0x364>
4001dd6c:	e5d00009 	ldrb	r0, [r0, #9]
4001dd70:	e3500000 	cmp	r0, #0
4001dd74:	1a000001 	bne	4001dd80 <CyU3PUsbStall+0x74>
4001dd78:	e3a00000 	mov	r0, #0
4001dd7c:	eaffffed 	b	4001dd38 <CyU3PUsbStall+0x2c>
4001dd80:	e3e01000 	mvn	r1, #0
4001dd84:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e074 <CyU3PUsbStall+0x368>
4001dd88:	ebffb0ca 	bl	4000a0b8 <_txe_mutex_get>
4001dd8c:	e3570000 	cmp	r7, #0
4001dd90:	1a000037 	bne	4001de74 <CyU3PUsbStall+0x168>
4001dd94:	ebfffbbd 	bl	4001cc90 <CyU3PUsbIsNewCtrlRqtRecvd>
4001dd98:	e3500000 	cmp	r0, #0
4001dd9c:	0a000003 	beq	4001ddb0 <CyU3PUsbStall+0xa4>
4001dda0:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e074 <CyU3PUsbStall+0x368>
4001dda4:	ebffb0f8 	bl	4000a18c <_txe_mutex_put>
4001dda8:	e3a00000 	mov	r0, #0
4001ddac:	eaffffe1 	b	4001dd38 <CyU3PUsbStall+0x2c>
4001ddb0:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e070 <CyU3PUsbStall+0x364>
4001ddb4:	e5d00009 	ldrb	r0, [r0, #9]
4001ddb8:	e3500003 	cmp	r0, #3
4001ddbc:	1a00001b 	bne	4001de30 <CyU3PUsbStall+0x124>
4001ddc0:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e078 <CyU3PUsbStall+0x36c>
4001ddc4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001ddc8:	e3800004 	orr	r0, r0, #4
4001ddcc:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e078 <CyU3PUsbStall+0x36c>
4001ddd0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001ddd4:	e1a00001 	mov	r0, r1
4001ddd8:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001dddc:	e3800004 	orr	r0, r0, #4
4001dde0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001dde4:	eb00104b 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
4001dde8:	e1a0a000 	mov	sl, r0
4001ddec:	e3a00001 	mov	r0, #1
4001ddf0:	ebffd5ce 	bl	40013530 <CyU3PBusyWait>
4001ddf4:	e59f027c 	ldr	r0, [pc, #636]	; 4001e078 <CyU3PUsbStall+0x36c>
4001ddf8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ddfc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de00:	e59f1270 	ldr	r1, [pc, #624]	; 4001e078 <CyU3PUsbStall+0x36c>
4001de04:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001de08:	e1a0000a 	mov	r0, sl
4001de0c:	eb00104f 	bl	40021f50 <CyU3PVicEnableInterrupts>
4001de10:	e3a00000 	mov	r0, #0
4001de14:	e59f1260 	ldr	r1, [pc, #608]	; 4001e07c <CyU3PUsbStall+0x370>
4001de18:	e5810000 	str	r0, [r1]
4001de1c:	e59f125c 	ldr	r1, [pc, #604]	; 4001e080 <CyU3PUsbStall+0x374>
4001de20:	e5810000 	str	r0, [r1]
4001de24:	e59f0258 	ldr	r0, [pc, #600]	; 4001e084 <CyU3PUsbStall+0x378>
4001de28:	ebffb384 	bl	4000ac40 <_txe_timer_deactivate>
4001de2c:	ea00000c 	b	4001de64 <CyU3PUsbStall+0x158>
4001de30:	e59f0250 	ldr	r0, [pc, #592]	; 4001e088 <CyU3PUsbStall+0x37c>
4001de34:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001de38:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de3c:	e59f1244 	ldr	r1, [pc, #580]	; 4001e088 <CyU3PUsbStall+0x37c>
4001de40:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001de44:	e1a00001 	mov	r0, r1
4001de48:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001de4c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de50:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001de54:	e1a00001 	mov	r0, r1
4001de58:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001de5c:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001de60:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001de64:	e59f0208 	ldr	r0, [pc, #520]	; 4001e074 <CyU3PUsbStall+0x368>
4001de68:	ebffb0c7 	bl	4000a18c <_txe_mutex_put>
4001de6c:	e3a00000 	mov	r0, #0
4001de70:	eaffffb0 	b	4001dd38 <CyU3PUsbStall+0x2c>
4001de74:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e070 <CyU3PUsbStall+0x364>
4001de78:	e5d00009 	ldrb	r0, [r0, #9]
4001de7c:	e3500003 	cmp	r0, #3
4001de80:	1a000033 	bne	4001df54 <CyU3PUsbStall+0x248>
4001de84:	e3140080 	tst	r4, #128	; 0x80
4001de88:	0a000017 	beq	4001deec <CyU3PUsbStall+0x1e0>
4001de8c:	e3550000 	cmp	r5, #0
4001de90:	0a00000a 	beq	4001dec0 <CyU3PUsbStall+0x1b4>
4001de94:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e08c <CyU3PUsbStall+0x380>
4001de98:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001de9c:	e3899005 	orr	r9, r9, #5
4001dea0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dea4:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001dea8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001deac:	e1a01800 	lsl	r1, r0, #16
4001deb0:	e1a01821 	lsr	r1, r1, #16
4001deb4:	e1a00004 	mov	r0, r4
4001deb8:	ebfffdde 	bl	4001d638 <CyU3PUsbSendErdy>
4001debc:	ea000041 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001dec0:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e08c <CyU3PUsbStall+0x380>
4001dec4:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001dec8:	e3899011 	orr	r9, r9, #17
4001decc:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ded0:	e3a00001 	mov	r0, #1
4001ded4:	ebffd595 	bl	40013530 <CyU3PBusyWait>
4001ded8:	e3c90014 	bic	r0, r9, #20
4001dedc:	e3809001 	orr	r9, r0, #1
4001dee0:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e08c <CyU3PUsbStall+0x380>
4001dee4:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dee8:	ea000036 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001deec:	e3550000 	cmp	r5, #0
4001def0:	0a00000b 	beq	4001df24 <CyU3PUsbStall+0x218>
4001def4:	e59f0194 	ldr	r0, [pc, #404]	; 4001e090 <CyU3PUsbStall+0x384>
4001def8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001defc:	e3809005 	orr	r9, r0, #5
4001df00:	e59f0188 	ldr	r0, [pc, #392]	; 4001e090 <CyU3PUsbStall+0x384>
4001df04:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df08:	e28000c0 	add	r0, r0, #192	; 0xc0
4001df0c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df10:	e1a01800 	lsl	r1, r0, #16
4001df14:	e1a01821 	lsr	r1, r1, #16
4001df18:	e1a00004 	mov	r0, r4
4001df1c:	ebfffdc5 	bl	4001d638 <CyU3PUsbSendErdy>
4001df20:	ea000028 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001df24:	e59f0164 	ldr	r0, [pc, #356]	; 4001e090 <CyU3PUsbStall+0x384>
4001df28:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df2c:	e3809011 	orr	r9, r0, #17
4001df30:	e59f0158 	ldr	r0, [pc, #344]	; 4001e090 <CyU3PUsbStall+0x384>
4001df34:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df38:	e3a00001 	mov	r0, #1
4001df3c:	ebffd57b 	bl	40013530 <CyU3PBusyWait>
4001df40:	e3c90014 	bic	r0, r9, #20
4001df44:	e3809001 	orr	r9, r0, #1
4001df48:	e59f0140 	ldr	r0, [pc, #320]	; 4001e090 <CyU3PUsbStall+0x384>
4001df4c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001df50:	ea00001c 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001df54:	e3140080 	tst	r4, #128	; 0x80
4001df58:	0a00000d 	beq	4001df94 <CyU3PUsbStall+0x288>
4001df5c:	e3550000 	cmp	r5, #0
4001df60:	0a000005 	beq	4001df7c <CyU3PUsbStall+0x270>
4001df64:	e59f0128 	ldr	r0, [pc, #296]	; 4001e094 <CyU3PUsbStall+0x388>
4001df68:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df6c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001df70:	e59f111c 	ldr	r1, [pc, #284]	; 4001e094 <CyU3PUsbStall+0x388>
4001df74:	e7810107 	str	r0, [r1, r7, lsl #2]
4001df78:	ea000012 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001df7c:	e59f0110 	ldr	r0, [pc, #272]	; 4001e094 <CyU3PUsbStall+0x388>
4001df80:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df84:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001df88:	e59f1104 	ldr	r1, [pc, #260]	; 4001e094 <CyU3PUsbStall+0x388>
4001df8c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001df90:	ea00000c 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001df94:	e3550000 	cmp	r5, #0
4001df98:	0a000005 	beq	4001dfb4 <CyU3PUsbStall+0x2a8>
4001df9c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e098 <CyU3PUsbStall+0x38c>
4001dfa0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dfa4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dfa8:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e098 <CyU3PUsbStall+0x38c>
4001dfac:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dfb0:	ea000004 	b	4001dfc8 <CyU3PUsbStall+0x2bc>
4001dfb4:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e098 <CyU3PUsbStall+0x38c>
4001dfb8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dfbc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001dfc0:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e098 <CyU3PUsbStall+0x38c>
4001dfc4:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dfc8:	e3560000 	cmp	r6, #0
4001dfcc:	0a000023 	beq	4001e060 <CyU3PUsbStall+0x354>
4001dfd0:	e3550000 	cmp	r5, #0
4001dfd4:	1a000021 	bne	4001e060 <CyU3PUsbStall+0x354>
4001dfd8:	e59f0090 	ldr	r0, [pc, #144]	; 4001e070 <CyU3PUsbStall+0x364>
4001dfdc:	e5d00009 	ldrb	r0, [r0, #9]
4001dfe0:	e3500003 	cmp	r0, #3
4001dfe4:	1a00000b 	bne	4001e018 <CyU3PUsbStall+0x30c>
4001dfe8:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001dfec:	e3140080 	tst	r4, #128	; 0x80
4001dff0:	0a000000 	beq	4001dff8 <CyU3PUsbStall+0x2ec>
4001dff4:	e3888010 	orr	r8, r8, #16
4001dff8:	e59f0078 	ldr	r0, [pc, #120]	; 4001e078 <CyU3PUsbStall+0x36c>
4001dffc:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e000:	e1a00000 	nop			; (mov r0, r0)
4001e004:	e59f006c 	ldr	r0, [pc, #108]	; 4001e078 <CyU3PUsbStall+0x36c>
4001e008:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e00c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e010:	0afffffb 	beq	4001e004 <CyU3PUsbStall+0x2f8>
4001e014:	ea000011 	b	4001e060 <CyU3PUsbStall+0x354>
4001e018:	e3140080 	tst	r4, #128	; 0x80
4001e01c:	0a000000 	beq	4001e024 <CyU3PUsbStall+0x318>
4001e020:	e3877010 	orr	r7, r7, #16
4001e024:	e59f005c 	ldr	r0, [pc, #92]	; 4001e088 <CyU3PUsbStall+0x37c>
4001e028:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e02c:	e1a00000 	nop			; (mov r0, r0)
4001e030:	e59f0050 	ldr	r0, [pc, #80]	; 4001e088 <CyU3PUsbStall+0x37c>
4001e034:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e038:	e3100c01 	tst	r0, #256	; 0x100
4001e03c:	0afffffb 	beq	4001e030 <CyU3PUsbStall+0x324>
4001e040:	e3877020 	orr	r7, r7, #32
4001e044:	e59f003c 	ldr	r0, [pc, #60]	; 4001e088 <CyU3PUsbStall+0x37c>
4001e048:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e04c:	e1a00000 	nop			; (mov r0, r0)
4001e050:	e59f0030 	ldr	r0, [pc, #48]	; 4001e088 <CyU3PUsbStall+0x37c>
4001e054:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e058:	e3100c01 	tst	r0, #256	; 0x100
4001e05c:	0afffffb 	beq	4001e050 <CyU3PUsbStall+0x344>
4001e060:	e59f000c 	ldr	r0, [pc, #12]	; 4001e074 <CyU3PUsbStall+0x368>
4001e064:	ebffb048 	bl	4000a18c <_txe_mutex_put>
4001e068:	e3a00000 	mov	r0, #0
4001e06c:	eaffff31 	b	4001dd38 <CyU3PUsbStall+0x2c>
4001e070:	40031d40 	.word	0x40031d40
4001e074:	40031ee0 	.word	0x40031ee0
4001e078:	e0033000 	.word	0xe0033000
4001e07c:	40030dcc 	.word	0x40030dcc
4001e080:	40030dd0 	.word	0x40030dd0
4001e084:	400326a0 	.word	0x400326a0
4001e088:	e0031000 	.word	0xe0031000
4001e08c:	e0033500 	.word	0xe0033500
4001e090:	e0033600 	.word	0xe0033600
4001e094:	e0031418 	.word	0xe0031418
4001e098:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e09c <CyU3PUsbStart>:
4001e09c:	e92d4070 	push	{r4, r5, r6, lr}
4001e0a0:	e59f0324 	ldr	r0, [pc, #804]	; 4001e3cc <CyU3PUsbStart+0x330>
4001e0a4:	e5900000 	ldr	r0, [r0]
4001e0a8:	e3500000 	cmp	r0, #0
4001e0ac:	1a000001 	bne	4001e0b8 <CyU3PUsbStart+0x1c>
4001e0b0:	e3a00010 	mov	r0, #16
4001e0b4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e0b8:	e59f0310 	ldr	r0, [pc, #784]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e0bc:	e5d00008 	ldrb	r0, [r0, #8]
4001e0c0:	e3500000 	cmp	r0, #0
4001e0c4:	0a000001 	beq	4001e0d0 <CyU3PUsbStart+0x34>
4001e0c8:	e3a00043 	mov	r0, #67	; 0x43
4001e0cc:	eafffff8 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e0d0:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e3d4 <CyU3PUsbStart+0x338>
4001e0d4:	e5900000 	ldr	r0, [r0]
4001e0d8:	e3500000 	cmp	r0, #0
4001e0dc:	0a00006b 	beq	4001e290 <CyU3PUsbStart+0x1f4>
4001e0e0:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e3d8 <CyU3PUsbStart+0x33c>
4001e0e4:	eb00059e 	bl	4001f764 <CyU3PUibSocketInit>
4001e0e8:	ebfff98c 	bl	4001c720 <CyU3PUsbCreateDmaChannels>
4001e0ec:	e1a04000 	mov	r4, r0
4001e0f0:	e3540000 	cmp	r4, #0
4001e0f4:	0a000001 	beq	4001e100 <CyU3PUsbStart+0x64>
4001e0f8:	e1a00004 	mov	r0, r4
4001e0fc:	eaffffec 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e100:	e3a00001 	mov	r0, #1
4001e104:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e108:	e5c10008 	strb	r0, [r1, #8]
4001e10c:	e5950004 	ldr	r0, [r5, #4]
4001e110:	e5c10009 	strb	r0, [r1, #9]
4001e114:	e1a00005 	mov	r0, r5
4001e118:	ebfffaef 	bl	4001ccdc <CyU3PUsbLoadBootloaderDescs>
4001e11c:	e1a04000 	mov	r4, r0
4001e120:	e3540000 	cmp	r4, #0
4001e124:	0a000001 	beq	4001e130 <CyU3PUsbStart+0x94>
4001e128:	e1a00004 	mov	r0, r4
4001e12c:	eaffffe0 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e130:	e3a00006 	mov	r0, #6
4001e134:	e59f1294 	ldr	r1, [pc, #660]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e138:	e5c10008 	strb	r0, [r1, #8]
4001e13c:	e2810000 	add	r0, r1, #0
4001e140:	e5d00009 	ldrb	r0, [r0, #9]
4001e144:	e3500003 	cmp	r0, #3
4001e148:	1a000002 	bne	4001e158 <CyU3PUsbStart+0xbc>
4001e14c:	e3a00001 	mov	r0, #1
4001e150:	e59f1284 	ldr	r1, [pc, #644]	; 4001e3dc <CyU3PUsbStart+0x340>
4001e154:	e5810000 	str	r0, [r1]
4001e158:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e15c:	e59f127c 	ldr	r1, [pc, #636]	; 4001e3e0 <CyU3PUsbStart+0x344>
4001e160:	e1500001 	cmp	r0, r1
4001e164:	1a000015 	bne	4001e1c0 <CyU3PUsbStart+0x124>
4001e168:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e16c:	e59f1270 	ldr	r1, [pc, #624]	; 4001e3e4 <CyU3PUsbStart+0x348>
4001e170:	e1500001 	cmp	r0, r1
4001e174:	3a000007 	bcc	4001e198 <CyU3PUsbStart+0xfc>
4001e178:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e17c:	e3500000 	cmp	r0, #0
4001e180:	0a000001 	beq	4001e18c <CyU3PUsbStart+0xf0>
4001e184:	e3a00001 	mov	r0, #1
4001e188:	ea000000 	b	4001e190 <CyU3PUsbStart+0xf4>
4001e18c:	e3a00000 	mov	r0, #0
4001e190:	e59f1238 	ldr	r1, [pc, #568]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e194:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e198:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e19c:	e59f1244 	ldr	r1, [pc, #580]	; 4001e3e8 <CyU3PUsbStart+0x34c>
4001e1a0:	e1500001 	cmp	r0, r1
4001e1a4:	3a000008 	bcc	4001e1cc <CyU3PUsbStart+0x130>
4001e1a8:	e59f023c 	ldr	r0, [pc, #572]	; 4001e3ec <CyU3PUsbStart+0x350>
4001e1ac:	e5900000 	ldr	r0, [r0]
4001e1b0:	e3800002 	orr	r0, r0, #2
4001e1b4:	e59f1230 	ldr	r1, [pc, #560]	; 4001e3ec <CyU3PUsbStart+0x350>
4001e1b8:	e5810000 	str	r0, [r1]
4001e1bc:	ea000002 	b	4001e1cc <CyU3PUsbStart+0x130>
4001e1c0:	e3a00001 	mov	r0, #1
4001e1c4:	e59f1204 	ldr	r1, [pc, #516]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e1c8:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e1cc:	e3e00000 	mvn	r0, #0
4001e1d0:	e59f1218 	ldr	r1, [pc, #536]	; 4001e3f0 <CyU3PUsbStart+0x354>
4001e1d4:	e5810004 	str	r0, [r1, #4]
4001e1d8:	e59f0214 	ldr	r0, [pc, #532]	; 4001e3f4 <CyU3PUsbStart+0x358>
4001e1dc:	e5810008 	str	r0, [r1, #8]
4001e1e0:	e3e00000 	mvn	r0, #0
4001e1e4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e1e8:	e59f0208 	ldr	r0, [pc, #520]	; 4001e3f8 <CyU3PUsbStart+0x35c>
4001e1ec:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e1f0:	e3a00000 	mov	r0, #0
4001e1f4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e1f8:	e3e00000 	mvn	r0, #0
4001e1fc:	e0811680 	add	r1, r1, r0, lsl #13
4001e200:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e204:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e3fc <CyU3PUsbStart+0x360>
4001e208:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e20c:	e3e00000 	mvn	r0, #0
4001e210:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e214:	e3a00000 	mov	r0, #0
4001e218:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e21c:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e220:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e224:	e5810004 	str	r0, [r1, #4]
4001e228:	e3a00008 	mov	r0, #8
4001e22c:	eb000f42 	bl	40021f3c <CyU3PVicEnableInt>
4001e230:	e3a00009 	mov	r0, #9
4001e234:	eb000f40 	bl	40021f3c <CyU3PVicEnableInt>
4001e238:	ebfffa8c 	bl	4001cc70 <CyU3PUsbGetSpeed>
4001e23c:	e1a06000 	mov	r6, r0
4001e240:	eb0006b5 	bl	4001fd1c <CyU3PUsbEpPrepare>
4001e244:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e3ec <CyU3PUsbStart+0x350>
4001e248:	e5900000 	ldr	r0, [r0]
4001e24c:	e3100002 	tst	r0, #2
4001e250:	1a000003 	bne	4001e264 <CyU3PUsbStart+0x1c8>
4001e254:	e3e00000 	mvn	r0, #0
4001e258:	e5850000 	str	r0, [r5]
4001e25c:	e3a00000 	mov	r0, #0
4001e260:	e585000c 	str	r0, [r5, #12]
4001e264:	e3e00000 	mvn	r0, #0
4001e268:	e59f1190 	ldr	r1, [pc, #400]	; 4001e400 <CyU3PUsbStart+0x364>
4001e26c:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e270:	e3a00b01 	mov	r0, #1024	; 0x400
4001e274:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e278:	e59f1150 	ldr	r1, [pc, #336]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e27c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e280:	e3a00015 	mov	r0, #21
4001e284:	eb000f2c 	bl	40021f3c <CyU3PVicEnableInt>
4001e288:	e3a000fe 	mov	r0, #254	; 0xfe
4001e28c:	eaffff88 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e290:	e1a00000 	nop			; (mov r0, r0)
4001e294:	e59f0168 	ldr	r0, [pc, #360]	; 4001e404 <CyU3PUsbStart+0x368>
4001e298:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e29c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e2a0:	e59f115c 	ldr	r1, [pc, #348]	; 4001e404 <CyU3PUsbStart+0x368>
4001e2a4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e2a8:	e3a00002 	mov	r0, #2
4001e2ac:	ebffd49f 	bl	40013530 <CyU3PBusyWait>
4001e2b0:	e59f014c 	ldr	r0, [pc, #332]	; 4001e404 <CyU3PUsbStart+0x368>
4001e2b4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e2b8:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e2bc:	e59f1140 	ldr	r1, [pc, #320]	; 4001e404 <CyU3PUsbStart+0x368>
4001e2c0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e2c4:	e1a00001 	mov	r0, r1
4001e2c8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e2cc:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e2d0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e2d4:	e1a00001 	mov	r0, r1
4001e2d8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e2dc:	e3800008 	orr	r0, r0, #8
4001e2e0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e2e4:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e2e8:	e5900008 	ldr	r0, [r0, #8]
4001e2ec:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e2f0:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e2f4:	e5810008 	str	r0, [r1, #8]
4001e2f8:	e3a00002 	mov	r0, #2
4001e2fc:	ebffd48b 	bl	40013530 <CyU3PBusyWait>
4001e300:	ebfff645 	bl	4001bc1c <CyU3POtgIsDeviceMode>
4001e304:	e3500000 	cmp	r0, #0
4001e308:	0a000002 	beq	4001e318 <CyU3PUsbStart+0x27c>
4001e30c:	ebfffa5b 	bl	4001cc80 <CyU3PUsbHostIsStarted>
4001e310:	e3500000 	cmp	r0, #0
4001e314:	0a000001 	beq	4001e320 <CyU3PUsbStart+0x284>
4001e318:	e3a00047 	mov	r0, #71	; 0x47
4001e31c:	eaffff64 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e320:	e3a01002 	mov	r1, #2
4001e324:	e1a00001 	mov	r0, r1
4001e328:	ebfff820 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001e32c:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e408 <CyU3PUsbStart+0x36c>
4001e330:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e40c <CyU3PUsbStart+0x370>
4001e334:	e5810000 	str	r0, [r1]
4001e338:	ebfff633 	bl	4001bc0c <CyU3POtgGetMode>
4001e33c:	e3500000 	cmp	r0, #0
4001e340:	1a000003 	bne	4001e354 <CyU3PUsbStart+0x2b8>
4001e344:	ebfffc09 	bl	4001d370 <CyU3PUsbPowerOn>
4001e348:	e3a00000 	mov	r0, #0
4001e34c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e404 <CyU3PUsbStart+0x368>
4001e350:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e354:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e410 <CyU3PUsbStart+0x374>
4001e358:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e404 <CyU3PUsbStart+0x368>
4001e35c:	e5810008 	str	r0, [r1, #8]
4001e360:	e00108c0 	and	r0, r1, r0, asr #17
4001e364:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e368:	e3800008 	orr	r0, r0, #8
4001e36c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e370:	eb000662 	bl	4001fd00 <CyU3PUsbDescInit>
4001e374:	ebfff8e9 	bl	4001c720 <CyU3PUsbCreateDmaChannels>
4001e378:	e1a04000 	mov	r4, r0
4001e37c:	e3540000 	cmp	r4, #0
4001e380:	0a000001 	beq	4001e38c <CyU3PUsbStart+0x2f0>
4001e384:	e1a00004 	mov	r0, r4
4001e388:	eaffff49 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e38c:	e3a00001 	mov	r0, #1
4001e390:	e59f1038 	ldr	r1, [pc, #56]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e394:	e5c10008 	strb	r0, [r1, #8]
4001e398:	e2810000 	add	r0, r1, #0
4001e39c:	e5d00007 	ldrb	r0, [r0, #7]
4001e3a0:	e3500001 	cmp	r0, #1
4001e3a4:	1a000002 	bne	4001e3b4 <CyU3PUsbStart+0x318>
4001e3a8:	e3a00003 	mov	r0, #3
4001e3ac:	e5c10008 	strb	r0, [r1, #8]
4001e3b0:	ea000002 	b	4001e3c0 <CyU3PUsbStart+0x324>
4001e3b4:	e3a00002 	mov	r0, #2
4001e3b8:	e59f1010 	ldr	r1, [pc, #16]	; 4001e3d0 <CyU3PUsbStart+0x334>
4001e3bc:	e5c10008 	strb	r0, [r1, #8]
4001e3c0:	ebfff81b 	bl	4001c434 <CyU3PUibInit>
4001e3c4:	e1a00004 	mov	r0, r4
4001e3c8:	eaffff39 	b	4001e0b4 <CyU3PUsbStart+0x18>
4001e3cc:	40030d7c 	.word	0x40030d7c
4001e3d0:	40031d40 	.word	0x40031d40
4001e3d4:	40030c84 	.word	0x40030c84
4001e3d8:	40002000 	.word	0x40002000
4001e3dc:	40030d8c 	.word	0x40030d8c
4001e3e0:	42335846 	.word	0x42335846
4001e3e4:	00010101 	.word	0x00010101
4001e3e8:	00010200 	.word	0x00010200
4001e3ec:	40030d60 	.word	0x40030d60
4001e3f0:	e0033000 	.word	0xe0033000
4001e3f4:	00038081 	.word	0x00038081
4001e3f8:	00004a3d 	.word	0x00004a3d
4001e3fc:	0000095c 	.word	0x0000095c
4001e400:	e0051000 	.word	0xe0051000
4001e404:	e0031000 	.word	0xe0031000
4001e408:	de001011 	.word	0xde001011
4001e40c:	e0050000 	.word	0xe0050000
4001e410:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e414 <GetUsbLinkActive>:
4001e414:	e92d4010 	push	{r4, lr}
4001e418:	e59f0064 	ldr	r0, [pc, #100]	; 4001e484 <GetUsbLinkActive+0x70>
4001e41c:	e5d00009 	ldrb	r0, [r0, #9]
4001e420:	e3500003 	cmp	r0, #3
4001e424:	1a000015 	bne	4001e480 <GetUsbLinkActive+0x6c>
4001e428:	e59f0058 	ldr	r0, [pc, #88]	; 4001e488 <GetUsbLinkActive+0x74>
4001e42c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e430:	e3c00004 	bic	r0, r0, #4
4001e434:	e59f104c 	ldr	r1, [pc, #76]	; 4001e488 <GetUsbLinkActive+0x74>
4001e438:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e43c:	e1a00001 	mov	r0, r1
4001e440:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e444:	e3c00004 	bic	r0, r0, #4
4001e448:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e44c:	e59f0030 	ldr	r0, [pc, #48]	; 4001e484 <GetUsbLinkActive+0x70>
4001e450:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e454:	e3500000 	cmp	r0, #0
4001e458:	1a000008 	bne	4001e480 <GetUsbLinkActive+0x6c>
4001e45c:	e1a00001 	mov	r0, r1
4001e460:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e464:	e200403f 	and	r4, r0, #63	; 0x3f
4001e468:	e3540011 	cmp	r4, #17
4001e46c:	0a000001 	beq	4001e478 <GetUsbLinkActive+0x64>
4001e470:	e3540012 	cmp	r4, #18
4001e474:	1a000001 	bne	4001e480 <GetUsbLinkActive+0x6c>
4001e478:	e3a00000 	mov	r0, #0
4001e47c:	ebfffdcd 	bl	4001dbb8 <CyU3PUsbSetLinkPowerState>
4001e480:	e8bd8010 	pop	{r4, pc}
4001e484:	40031d40 	.word	0x40031d40
4001e488:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e48c <CyU3PHsGrantIntrHandler>:
4001e48c:	e92d4010 	push	{r4, lr}
4001e490:	e59f005c 	ldr	r0, [pc, #92]	; 4001e4f4 <CyU3PHsGrantIntrHandler+0x68>
4001e494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e498:	e3100080 	tst	r0, #128	; 0x80
4001e49c:	0a000013 	beq	4001e4f0 <CyU3PHsGrantIntrHandler+0x64>
4001e4a0:	e59f0050 	ldr	r0, [pc, #80]	; 4001e4f8 <CyU3PHsGrantIntrHandler+0x6c>
4001e4a4:	e5900014 	ldr	r0, [r0, #20]
4001e4a8:	e59f1048 	ldr	r1, [pc, #72]	; 4001e4f8 <CyU3PHsGrantIntrHandler+0x6c>
4001e4ac:	e581000c 	str	r0, [r1, #12]
4001e4b0:	e2810000 	add	r0, r1, #0
4001e4b4:	e5900018 	ldr	r0, [r0, #24]
4001e4b8:	e5810010 	str	r0, [r1, #16]
4001e4bc:	e59f0038 	ldr	r0, [pc, #56]	; 4001e4fc <CyU3PHsGrantIntrHandler+0x70>
4001e4c0:	e5900000 	ldr	r0, [r0]
4001e4c4:	e3500000 	cmp	r0, #0
4001e4c8:	0a000004 	beq	4001e4e0 <CyU3PHsGrantIntrHandler+0x54>
4001e4cc:	e3a01001 	mov	r1, #1
4001e4d0:	e3a00006 	mov	r0, #6
4001e4d4:	e59f2020 	ldr	r2, [pc, #32]	; 4001e4fc <CyU3PHsGrantIntrHandler+0x70>
4001e4d8:	e5922000 	ldr	r2, [r2]
4001e4dc:	e12fff32 	blx	r2
4001e4e0:	e3a00002 	mov	r0, #2
4001e4e4:	e59f1014 	ldr	r1, [pc, #20]	; 4001e500 <CyU3PHsGrantIntrHandler+0x74>
4001e4e8:	e5c10009 	strb	r0, [r1, #9]
4001e4ec:	eb00060a 	bl	4001fd1c <CyU3PUsbEpPrepare>
4001e4f0:	e8bd8010 	pop	{r4, pc}
4001e4f4:	e0031000 	.word	0xe0031000
4001e4f8:	40031f98 	.word	0x40031f98
4001e4fc:	40030db8 	.word	0x40030db8
4001e500:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e504 <CyU3PUibApplicationDefine>:
4001e504:	e92d4030 	push	{r4, r5, lr}
4001e508:	e24dd01c 	sub	sp, sp, #28
4001e50c:	eb000178 	bl	4001eaf4 <CyU3PUibInitVars>
4001e510:	e3a00b01 	mov	r0, #1024	; 0x400
4001e514:	ebff9456 	bl	40003674 <CyU3PMemAlloc>
4001e518:	e1a05000 	mov	r5, r0
4001e51c:	e3550000 	cmp	r5, #0
4001e520:	0a00004f 	beq	4001e664 <CyU3PUibApplicationDefine+0x160>
4001e524:	e3a030a8 	mov	r3, #168	; 0xa8
4001e528:	e3a02000 	mov	r2, #0
4001e52c:	e3a00004 	mov	r0, #4
4001e530:	e58d000c 	str	r0, [sp, #12]
4001e534:	e58d2010 	str	r2, [sp, #16]
4001e538:	e58d2014 	str	r2, [sp, #20]
4001e53c:	e58d3018 	str	r3, [sp, #24]
4001e540:	e3a02b01 	mov	r2, #1024	; 0x400
4001e544:	e3a03000 	mov	r3, #0
4001e548:	e58d2004 	str	r2, [sp, #4]
4001e54c:	e59f2118 	ldr	r2, [pc, #280]	; 4001e66c <CyU3PUibApplicationDefine+0x168>
4001e550:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e554:	e58d0008 	str	r0, [sp, #8]
4001e558:	e59f0120 	ldr	r0, [pc, #288]	; 4001e680 <CyU3PUibApplicationDefine+0x17c>
4001e55c:	e58d5000 	str	r5, [sp]
4001e560:	ebffb017 	bl	4000a5c4 <_txe_thread_create>
4001e564:	e1a04000 	mov	r4, r0
4001e568:	e3540000 	cmp	r4, #0
4001e56c:	1a00003c 	bne	4001e664 <CyU3PUibApplicationDefine+0x160>
4001e570:	e3a00080 	mov	r0, #128	; 0x80
4001e574:	ebff943e 	bl	40003674 <CyU3PMemAlloc>
4001e578:	e1a05000 	mov	r5, r0
4001e57c:	e3550000 	cmp	r5, #0
4001e580:	0a000009 	beq	4001e5ac <CyU3PUibApplicationDefine+0xa8>
4001e584:	e3a0303c 	mov	r3, #60	; 0x3c
4001e588:	e3a02080 	mov	r2, #128	; 0x80
4001e58c:	e1cd20f0 	strd	r2, [sp]
4001e590:	e1a03005 	mov	r3, r5
4001e594:	e3a02004 	mov	r2, #4
4001e598:	e3a01000 	mov	r1, #0
4001e59c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e684 <CyU3PUibApplicationDefine+0x180>
4001e5a0:	ebffaf21 	bl	4000a22c <_txe_queue_create>
4001e5a4:	e1a04000 	mov	r4, r0
4001e5a8:	ea000000 	b	4001e5b0 <CyU3PUibApplicationDefine+0xac>
4001e5ac:	e3a04010 	mov	r4, #16
4001e5b0:	e3540000 	cmp	r4, #0
4001e5b4:	1a000004 	bne	4001e5cc <CyU3PUibApplicationDefine+0xc8>
4001e5b8:	e3a02028 	mov	r2, #40	; 0x28
4001e5bc:	e3a01000 	mov	r1, #0
4001e5c0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e688 <CyU3PUibApplicationDefine+0x184>
4001e5c4:	ebffad83 	bl	40009bd8 <_txe_event_flags_create>
4001e5c8:	e1a04000 	mov	r4, r0
4001e5cc:	e3540000 	cmp	r4, #0
4001e5d0:	1a000005 	bne	4001e5ec <CyU3PUibApplicationDefine+0xe8>
4001e5d4:	e3a03038 	mov	r3, #56	; 0x38
4001e5d8:	e3a02000 	mov	r2, #0
4001e5dc:	e1a01002 	mov	r1, r2
4001e5e0:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e68c <CyU3PUibApplicationDefine+0x188>
4001e5e4:	ebffae35 	bl	40009ec0 <_txe_mutex_create>
4001e5e8:	e1a04000 	mov	r4, r0
4001e5ec:	e3540000 	cmp	r4, #0
4001e5f0:	1a00000a 	bne	4001e620 <CyU3PUibApplicationDefine+0x11c>
4001e5f4:	e3a0302c 	mov	r3, #44	; 0x2c
4001e5f8:	e3a02000 	mov	r2, #0
4001e5fc:	e3a00064 	mov	r0, #100	; 0x64
4001e600:	e88d0005 	stm	sp, {r0, r2}
4001e604:	e1cd20f8 	strd	r2, [sp, #8]
4001e608:	e1a03002 	mov	r3, r2
4001e60c:	e59f207c 	ldr	r2, [pc, #124]	; 4001e690 <CyU3PUibApplicationDefine+0x18c>
4001e610:	e3a01000 	mov	r1, #0
4001e614:	e59f0078 	ldr	r0, [pc, #120]	; 4001e694 <CyU3PUibApplicationDefine+0x190>
4001e618:	ebffb116 	bl	4000aa78 <_txe_timer_create>
4001e61c:	e1a04000 	mov	r4, r0
4001e620:	e3540000 	cmp	r4, #0
4001e624:	1a00000a 	bne	4001e654 <CyU3PUibApplicationDefine+0x150>
4001e628:	e3a0302c 	mov	r3, #44	; 0x2c
4001e62c:	e3a02001 	mov	r2, #1
4001e630:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e634:	e58d1000 	str	r1, [sp]
4001e638:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e63c:	e3a03000 	mov	r3, #0
4001e640:	e59f2050 	ldr	r2, [pc, #80]	; 4001e698 <CyU3PUibApplicationDefine+0x194>
4001e644:	e1a01003 	mov	r1, r3
4001e648:	e59f004c 	ldr	r0, [pc, #76]	; 4001e69c <CyU3PUibApplicationDefine+0x198>
4001e64c:	ebffb109 	bl	4000aa78 <_txe_timer_create>
4001e650:	e1a04000 	mov	r4, r0
4001e654:	e3540000 	cmp	r4, #0
4001e658:	1a000001 	bne	4001e664 <CyU3PUibApplicationDefine+0x160>
4001e65c:	e59f001c 	ldr	r0, [pc, #28]	; 4001e680 <CyU3PUibApplicationDefine+0x17c>
4001e660:	ebffb0c2 	bl	4000a970 <_txe_thread_resume>
4001e664:	e28dd01c 	add	sp, sp, #28
4001e668:	e8bd8030 	pop	{r4, r5, pc}
4001e66c:	4001f870 	.word	0x4001f870
4001e670:	555f3430 	.word	0x555f3430
4001e674:	545f4249 	.word	0x545f4249
4001e678:	41455248 	.word	0x41455248
4001e67c:	00000044 	.word	0x00000044
4001e680:	40031dd4 	.word	0x40031dd4
4001e684:	40031e7c 	.word	0x40031e7c
4001e688:	40031eb8 	.word	0x40031eb8
4001e68c:	40031ee0 	.word	0x40031ee0
4001e690:	4001f800 	.word	0x4001f800
4001e694:	400326a0 	.word	0x400326a0
4001e698:	4001ebac 	.word	0x4001ebac
4001e69c:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e6a0 <CyU3PUibDevCtrlEvtHandler>:
4001e6a0:	e92d4010 	push	{r4, lr}
4001e6a4:	e59f01c8 	ldr	r0, [pc, #456]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6a8:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e6ac:	e3140c01 	tst	r4, #256	; 0x100
4001e6b0:	0a000008 	beq	4001e6d8 <CyU3PUibDevCtrlEvtHandler+0x38>
4001e6b4:	e3a00c01 	mov	r0, #256	; 0x100
4001e6b8:	e59f11b4 	ldr	r1, [pc, #436]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6bc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6c0:	eb000995 	bl	40020d1c <CyU3PUsbResumeHandler>
4001e6c4:	e59f01a8 	ldr	r0, [pc, #424]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6c8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6cc:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e6d0:	e59f119c 	ldr	r1, [pc, #412]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6d4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6d8:	e3140004 	tst	r4, #4
4001e6dc:	0a000008 	beq	4001e704 <CyU3PUibDevCtrlEvtHandler+0x64>
4001e6e0:	e3a00004 	mov	r0, #4
4001e6e4:	e59f1188 	ldr	r1, [pc, #392]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6e8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6ec:	eb000d6c 	bl	40021ca4 <CyU3PUsbSuspendHandler>
4001e6f0:	e59f017c 	ldr	r0, [pc, #380]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6f4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6f8:	e3800004 	orr	r0, r0, #4
4001e6fc:	e59f1170 	ldr	r1, [pc, #368]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e700:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e704:	e3140008 	tst	r4, #8
4001e708:	0a000008 	beq	4001e730 <CyU3PUibDevCtrlEvtHandler+0x90>
4001e70c:	e3a00008 	mov	r0, #8
4001e710:	e59f115c 	ldr	r1, [pc, #348]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e714:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e718:	eb00092e 	bl	40020bd8 <CyU3PUsbResetHandler>
4001e71c:	e59f0150 	ldr	r0, [pc, #336]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e720:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e724:	e3800008 	orr	r0, r0, #8
4001e728:	e59f1144 	ldr	r1, [pc, #324]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e72c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e730:	e3140010 	tst	r4, #16
4001e734:	0a000008 	beq	4001e75c <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e738:	e3a00010 	mov	r0, #16
4001e73c:	e59f1130 	ldr	r1, [pc, #304]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e740:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e744:	ebffff50 	bl	4001e48c <CyU3PHsGrantIntrHandler>
4001e748:	e59f0124 	ldr	r0, [pc, #292]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e74c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e750:	e3800010 	orr	r0, r0, #16
4001e754:	e59f1118 	ldr	r1, [pc, #280]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e758:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e75c:	e3140040 	tst	r4, #64	; 0x40
4001e760:	0a000018 	beq	4001e7c8 <CyU3PUibDevCtrlEvtHandler+0x128>
4001e764:	e59f010c 	ldr	r0, [pc, #268]	; 4001e878 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e768:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e76c:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e770:	e59f1100 	ldr	r1, [pc, #256]	; 4001e878 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e774:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e778:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e77c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e780:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e784:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e788:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e78c:	e1a00001 	mov	r0, r1
4001e790:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e794:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e798:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e79c:	e3a00040 	mov	r0, #64	; 0x40
4001e7a0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e7a4:	e3a00001 	mov	r0, #1
4001e7a8:	e59f10cc 	ldr	r1, [pc, #204]	; 4001e87c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e7ac:	e5810014 	str	r0, [r1, #20]
4001e7b0:	eb000b38 	bl	40021498 <CyU3PUsbSetupCommand>
4001e7b4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7b8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e7bc:	e3800040 	orr	r0, r0, #64	; 0x40
4001e7c0:	e59f10ac 	ldr	r1, [pc, #172]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7c4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e7c8:	e3140080 	tst	r4, #128	; 0x80
4001e7cc:	0a000006 	beq	4001e7ec <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e7d0:	e3a00080 	mov	r0, #128	; 0x80
4001e7d4:	e59f1098 	ldr	r1, [pc, #152]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7d8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e7dc:	e1c10000 	bic	r0, r1, r0
4001e7e0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e7e4:	e3800080 	orr	r0, r0, #128	; 0x80
4001e7e8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e7ec:	e3140b02 	tst	r4, #2048	; 0x800
4001e7f0:	0a00001e 	beq	4001e870 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e7f4:	e59f0080 	ldr	r0, [pc, #128]	; 4001e87c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e7f8:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e7fc:	e3500000 	cmp	r0, #0
4001e800:	1a000002 	bne	4001e810 <CyU3PUibDevCtrlEvtHandler+0x170>
4001e804:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e808:	e59f1068 	ldr	r1, [pc, #104]	; 4001e878 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e80c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e810:	e3a00b02 	mov	r0, #2048	; 0x800
4001e814:	e59f1058 	ldr	r1, [pc, #88]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e818:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e81c:	e59f0058 	ldr	r0, [pc, #88]	; 4001e87c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e820:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e824:	e3500000 	cmp	r0, #0
4001e828:	0a00000b 	beq	4001e85c <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001e82c:	e59f004c 	ldr	r0, [pc, #76]	; 4001e880 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e830:	e5900000 	ldr	r0, [r0]
4001e834:	e3500000 	cmp	r0, #0
4001e838:	0a000004 	beq	4001e850 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001e83c:	e3a01000 	mov	r1, #0
4001e840:	e3a0000a 	mov	r0, #10
4001e844:	e59f2034 	ldr	r2, [pc, #52]	; 4001e880 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e848:	e5922000 	ldr	r2, [r2]
4001e84c:	e12fff32 	blx	r2
4001e850:	e3a00000 	mov	r0, #0
4001e854:	e59f1020 	ldr	r1, [pc, #32]	; 4001e87c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e858:	e5810040 	str	r0, [r1, #64]	; 0x40
4001e85c:	e59f0010 	ldr	r0, [pc, #16]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e860:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e864:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001e868:	e59f1004 	ldr	r1, [pc, #4]	; 4001e874 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e86c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e870:	e8bd8010 	pop	{r4, pc}
4001e874:	e0031000 	.word	0xe0031000
4001e878:	e0032000 	.word	0xe0032000
4001e87c:	40031d40 	.word	0x40031d40
4001e880:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUibEPEvtHandler:

4001e884 <CyU3PUibEPEvtHandler>:
4001e884:	e92d4070 	push	{r4, r5, r6, lr}
4001e888:	e59f0244 	ldr	r0, [pc, #580]	; 4001ead4 <CyU3PUibEPEvtHandler+0x250>
4001e88c:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001e890:	e59f123c 	ldr	r1, [pc, #572]	; 4001ead4 <CyU3PUibEPEvtHandler+0x250>
4001e894:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001e898:	e0004001 	and	r4, r0, r1
4001e89c:	e59f0234 	ldr	r0, [pc, #564]	; 4001ead8 <CyU3PUibEPEvtHandler+0x254>
4001e8a0:	e5900000 	ldr	r0, [r0]
4001e8a4:	e0044000 	and	r4, r4, r0
4001e8a8:	e3a05001 	mov	r5, #1
4001e8ac:	ea000080 	b	4001eab4 <CyU3PUibEPEvtHandler+0x230>
4001e8b0:	e3a00001 	mov	r0, #1
4001e8b4:	e1140510 	tst	r4, r0, lsl r5
4001e8b8:	0a00003b 	beq	4001e9ac <CyU3PUibEPEvtHandler+0x128>
4001e8bc:	e59f0218 	ldr	r0, [pc, #536]	; 4001eadc <CyU3PUibEPEvtHandler+0x258>
4001e8c0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e8c4:	e59f0214 	ldr	r0, [pc, #532]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001e8c8:	e5900000 	ldr	r0, [r0]
4001e8cc:	e3500000 	cmp	r0, #0
4001e8d0:	0a000033 	beq	4001e9a4 <CyU3PUibEPEvtHandler+0x120>
4001e8d4:	e59f0208 	ldr	r0, [pc, #520]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001e8d8:	e5900000 	ldr	r0, [r0]
4001e8dc:	e3100001 	tst	r0, #1
4001e8e0:	0a000008 	beq	4001e908 <CyU3PUibEPEvtHandler+0x84>
4001e8e4:	e3160702 	tst	r6, #524288	; 0x80000
4001e8e8:	0a000006 	beq	4001e908 <CyU3PUibEPEvtHandler+0x84>
4001e8ec:	e3852080 	orr	r2, r5, #128	; 0x80
4001e8f0:	e59f01f0 	ldr	r0, [pc, #496]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001e8f4:	e5d01009 	ldrb	r1, [r0, #9]
4001e8f8:	e3a00001 	mov	r0, #1
4001e8fc:	e59f31dc 	ldr	r3, [pc, #476]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001e900:	e5933000 	ldr	r3, [r3]
4001e904:	e12fff33 	blx	r3
4001e908:	e59f01d4 	ldr	r0, [pc, #468]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001e90c:	e5900000 	ldr	r0, [r0]
4001e910:	e3100002 	tst	r0, #2
4001e914:	0a000008 	beq	4001e93c <CyU3PUibEPEvtHandler+0xb8>
4001e918:	e3160602 	tst	r6, #2097152	; 0x200000
4001e91c:	0a000006 	beq	4001e93c <CyU3PUibEPEvtHandler+0xb8>
4001e920:	e3852080 	orr	r2, r5, #128	; 0x80
4001e924:	e59f01bc 	ldr	r0, [pc, #444]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001e928:	e5d01009 	ldrb	r1, [r0, #9]
4001e92c:	e3a00002 	mov	r0, #2
4001e930:	e59f31a8 	ldr	r3, [pc, #424]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001e934:	e5933000 	ldr	r3, [r3]
4001e938:	e12fff33 	blx	r3
4001e93c:	e59f01a0 	ldr	r0, [pc, #416]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001e940:	e5900000 	ldr	r0, [r0]
4001e944:	e3100004 	tst	r0, #4
4001e948:	0a000008 	beq	4001e970 <CyU3PUibEPEvtHandler+0xec>
4001e94c:	e3160501 	tst	r6, #4194304	; 0x400000
4001e950:	0a000006 	beq	4001e970 <CyU3PUibEPEvtHandler+0xec>
4001e954:	e3852080 	orr	r2, r5, #128	; 0x80
4001e958:	e59f0188 	ldr	r0, [pc, #392]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001e95c:	e5d01009 	ldrb	r1, [r0, #9]
4001e960:	e3a00004 	mov	r0, #4
4001e964:	e59f3174 	ldr	r3, [pc, #372]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001e968:	e5933000 	ldr	r3, [r3]
4001e96c:	e12fff33 	blx	r3
4001e970:	e59f016c 	ldr	r0, [pc, #364]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001e974:	e5900000 	ldr	r0, [r0]
4001e978:	e3100008 	tst	r0, #8
4001e97c:	0a000008 	beq	4001e9a4 <CyU3PUibEPEvtHandler+0x120>
4001e980:	e3160502 	tst	r6, #8388608	; 0x800000
4001e984:	0a000006 	beq	4001e9a4 <CyU3PUibEPEvtHandler+0x120>
4001e988:	e3852080 	orr	r2, r5, #128	; 0x80
4001e98c:	e59f0154 	ldr	r0, [pc, #340]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001e990:	e5d01009 	ldrb	r1, [r0, #9]
4001e994:	e3a00008 	mov	r0, #8
4001e998:	e59f3140 	ldr	r3, [pc, #320]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001e99c:	e5933000 	ldr	r3, [r3]
4001e9a0:	e12fff33 	blx	r3
4001e9a4:	e59f0130 	ldr	r0, [pc, #304]	; 4001eadc <CyU3PUibEPEvtHandler+0x258>
4001e9a8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e9ac:	e2850010 	add	r0, r5, #16
4001e9b0:	e3a01001 	mov	r1, #1
4001e9b4:	e1140011 	tst	r4, r1, lsl r0
4001e9b8:	0a00003b 	beq	4001eaac <CyU3PUibEPEvtHandler+0x228>
4001e9bc:	e59f0128 	ldr	r0, [pc, #296]	; 4001eaec <CyU3PUibEPEvtHandler+0x268>
4001e9c0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e9c4:	e59f0114 	ldr	r0, [pc, #276]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001e9c8:	e5900000 	ldr	r0, [r0]
4001e9cc:	e3500000 	cmp	r0, #0
4001e9d0:	0a000033 	beq	4001eaa4 <CyU3PUibEPEvtHandler+0x220>
4001e9d4:	e59f0108 	ldr	r0, [pc, #264]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001e9d8:	e5900000 	ldr	r0, [r0]
4001e9dc:	e3100001 	tst	r0, #1
4001e9e0:	0a000008 	beq	4001ea08 <CyU3PUibEPEvtHandler+0x184>
4001e9e4:	e3160702 	tst	r6, #524288	; 0x80000
4001e9e8:	0a000006 	beq	4001ea08 <CyU3PUibEPEvtHandler+0x184>
4001e9ec:	e59f00f4 	ldr	r0, [pc, #244]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001e9f0:	e5d01009 	ldrb	r1, [r0, #9]
4001e9f4:	e1a02005 	mov	r2, r5
4001e9f8:	e3a00001 	mov	r0, #1
4001e9fc:	e59f30dc 	ldr	r3, [pc, #220]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001ea00:	e5933000 	ldr	r3, [r3]
4001ea04:	e12fff33 	blx	r3
4001ea08:	e59f00d4 	ldr	r0, [pc, #212]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001ea0c:	e5900000 	ldr	r0, [r0]
4001ea10:	e3100002 	tst	r0, #2
4001ea14:	0a000008 	beq	4001ea3c <CyU3PUibEPEvtHandler+0x1b8>
4001ea18:	e3160602 	tst	r6, #2097152	; 0x200000
4001ea1c:	0a000006 	beq	4001ea3c <CyU3PUibEPEvtHandler+0x1b8>
4001ea20:	e59f00c0 	ldr	r0, [pc, #192]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001ea24:	e5d01009 	ldrb	r1, [r0, #9]
4001ea28:	e1a02005 	mov	r2, r5
4001ea2c:	e3a00002 	mov	r0, #2
4001ea30:	e59f30a8 	ldr	r3, [pc, #168]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001ea34:	e5933000 	ldr	r3, [r3]
4001ea38:	e12fff33 	blx	r3
4001ea3c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001ea40:	e5900000 	ldr	r0, [r0]
4001ea44:	e3100004 	tst	r0, #4
4001ea48:	0a000008 	beq	4001ea70 <CyU3PUibEPEvtHandler+0x1ec>
4001ea4c:	e3160501 	tst	r6, #4194304	; 0x400000
4001ea50:	0a000006 	beq	4001ea70 <CyU3PUibEPEvtHandler+0x1ec>
4001ea54:	e59f008c 	ldr	r0, [pc, #140]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001ea58:	e5d01009 	ldrb	r1, [r0, #9]
4001ea5c:	e1a02005 	mov	r2, r5
4001ea60:	e3a00004 	mov	r0, #4
4001ea64:	e59f3074 	ldr	r3, [pc, #116]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001ea68:	e5933000 	ldr	r3, [r3]
4001ea6c:	e12fff33 	blx	r3
4001ea70:	e59f006c 	ldr	r0, [pc, #108]	; 4001eae4 <CyU3PUibEPEvtHandler+0x260>
4001ea74:	e5900000 	ldr	r0, [r0]
4001ea78:	e3100008 	tst	r0, #8
4001ea7c:	0a000008 	beq	4001eaa4 <CyU3PUibEPEvtHandler+0x220>
4001ea80:	e3160502 	tst	r6, #8388608	; 0x800000
4001ea84:	0a000006 	beq	4001eaa4 <CyU3PUibEPEvtHandler+0x220>
4001ea88:	e59f0058 	ldr	r0, [pc, #88]	; 4001eae8 <CyU3PUibEPEvtHandler+0x264>
4001ea8c:	e5d01009 	ldrb	r1, [r0, #9]
4001ea90:	e1a02005 	mov	r2, r5
4001ea94:	e3a00008 	mov	r0, #8
4001ea98:	e59f3040 	ldr	r3, [pc, #64]	; 4001eae0 <CyU3PUibEPEvtHandler+0x25c>
4001ea9c:	e5933000 	ldr	r3, [r3]
4001eaa0:	e12fff33 	blx	r3
4001eaa4:	e59f0040 	ldr	r0, [pc, #64]	; 4001eaec <CyU3PUibEPEvtHandler+0x268>
4001eaa8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001eaac:	e2850001 	add	r0, r5, #1
4001eab0:	e20050ff 	and	r5, r0, #255	; 0xff
4001eab4:	e3550010 	cmp	r5, #16
4001eab8:	baffff7c 	blt	4001e8b0 <CyU3PUibEPEvtHandler+0x2c>
4001eabc:	e59f002c 	ldr	r0, [pc, #44]	; 4001eaf0 <CyU3PUibEPEvtHandler+0x26c>
4001eac0:	e5900004 	ldr	r0, [r0, #4]
4001eac4:	e3800010 	orr	r0, r0, #16
4001eac8:	e59f1020 	ldr	r1, [pc, #32]	; 4001eaf0 <CyU3PUibEPEvtHandler+0x26c>
4001eacc:	e5810004 	str	r0, [r1, #4]
4001ead0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ead4:	e0031000 	.word	0xe0031000
4001ead8:	40030d9c 	.word	0x40030d9c
4001eadc:	e0031418 	.word	0xe0031418
4001eae0:	40030d94 	.word	0x40030d94
4001eae4:	40030d98 	.word	0x40030d98
4001eae8:	40031d40 	.word	0x40031d40
4001eaec:	e0031498 	.word	0xe0031498
4001eaf0:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001eaf4 <CyU3PUibInitVars>:
4001eaf4:	e92d4010 	push	{r4, lr}
4001eaf8:	e3a0207c 	mov	r2, #124	; 0x7c
4001eafc:	e3a01000 	mov	r1, #0
4001eb00:	e59f0070 	ldr	r0, [pc, #112]	; 4001eb78 <CyU3PUibInitVars+0x84>
4001eb04:	ebff92eb 	bl	400036b8 <CyU3PMemSet>
4001eb08:	e3a02074 	mov	r2, #116	; 0x74
4001eb0c:	e3a01000 	mov	r1, #0
4001eb10:	e59f0064 	ldr	r0, [pc, #100]	; 4001eb7c <CyU3PUibInitVars+0x88>
4001eb14:	ebff92e7 	bl	400036b8 <CyU3PMemSet>
4001eb18:	e3a00000 	mov	r0, #0
4001eb1c:	e59f105c 	ldr	r1, [pc, #92]	; 4001eb80 <CyU3PUibInitVars+0x8c>
4001eb20:	e5810000 	str	r0, [r1]
4001eb24:	e59f1058 	ldr	r1, [pc, #88]	; 4001eb84 <CyU3PUibInitVars+0x90>
4001eb28:	e5810000 	str	r0, [r1]
4001eb2c:	e59f1054 	ldr	r1, [pc, #84]	; 4001eb88 <CyU3PUibInitVars+0x94>
4001eb30:	e5810000 	str	r0, [r1]
4001eb34:	e59f1050 	ldr	r1, [pc, #80]	; 4001eb8c <CyU3PUibInitVars+0x98>
4001eb38:	e5810000 	str	r0, [r1]
4001eb3c:	e59f104c 	ldr	r1, [pc, #76]	; 4001eb90 <CyU3PUibInitVars+0x9c>
4001eb40:	e5810000 	str	r0, [r1]
4001eb44:	e59f1048 	ldr	r1, [pc, #72]	; 4001eb94 <CyU3PUibInitVars+0xa0>
4001eb48:	e5810000 	str	r0, [r1]
4001eb4c:	e59f1044 	ldr	r1, [pc, #68]	; 4001eb98 <CyU3PUibInitVars+0xa4>
4001eb50:	e5810000 	str	r0, [r1]
4001eb54:	e59f1040 	ldr	r1, [pc, #64]	; 4001eb9c <CyU3PUibInitVars+0xa8>
4001eb58:	e5810000 	str	r0, [r1]
4001eb5c:	e59f103c 	ldr	r1, [pc, #60]	; 4001eba0 <CyU3PUibInitVars+0xac>
4001eb60:	e5810000 	str	r0, [r1]
4001eb64:	e59f1038 	ldr	r1, [pc, #56]	; 4001eba4 <CyU3PUibInitVars+0xb0>
4001eb68:	e5810000 	str	r0, [r1]
4001eb6c:	e59f1034 	ldr	r1, [pc, #52]	; 4001eba8 <CyU3PUibInitVars+0xb4>
4001eb70:	e5810000 	str	r0, [r1]
4001eb74:	e8bd8010 	pop	{r4, pc}
4001eb78:	40031d40 	.word	0x40031d40
4001eb7c:	40031f98 	.word	0x40031f98
4001eb80:	40030d7c 	.word	0x40030d7c
4001eb84:	40030d80 	.word	0x40030d80
4001eb88:	40030d84 	.word	0x40030d84
4001eb8c:	40030dd0 	.word	0x40030dd0
4001eb90:	40030db8 	.word	0x40030db8
4001eb94:	40030dbc 	.word	0x40030dbc
4001eb98:	40030dc0 	.word	0x40030dc0
4001eb9c:	40030d94 	.word	0x40030d94
4001eba0:	40030d98 	.word	0x40030d98
4001eba4:	40030d9c 	.word	0x40030d9c
4001eba8:	40030d5c 	.word	0x40030d5c

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001ebac <CyU3PUibLnkErrClrTimerCb>:
4001ebac:	e92d4010 	push	{r4, lr}
4001ebb0:	e1a04000 	mov	r4, r0
4001ebb4:	ebfff82d 	bl	4001cc70 <CyU3PUsbGetSpeed>
4001ebb8:	e3500003 	cmp	r0, #3
4001ebbc:	1a000003 	bne	4001ebd0 <CyU3PUibLnkErrClrTimerCb+0x24>
4001ebc0:	e59f000c 	ldr	r0, [pc, #12]	; 4001ebd4 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ebc4:	e5900014 	ldr	r0, [r0, #20]
4001ebc8:	e59f1008 	ldr	r1, [pc, #8]	; 4001ebd8 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001ebcc:	e5810000 	str	r0, [r1]
4001ebd0:	e8bd8010 	pop	{r4, pc}
4001ebd4:	e0033000 	.word	0xe0033000
4001ebd8:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001ebdc <CyU3PUibLnkIntrEvtHandler>:
4001ebdc:	e92d4010 	push	{r4, lr}
4001ebe0:	e59f008c 	ldr	r0, [pc, #140]	; 4001ec74 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ebe4:	e5904004 	ldr	r4, [r0, #4]
4001ebe8:	e3140902 	tst	r4, #32768	; 0x8000
4001ebec:	0a00000b 	beq	4001ec20 <CyU3PUibLnkIntrEvtHandler+0x44>
4001ebf0:	e59f0080 	ldr	r0, [pc, #128]	; 4001ec78 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001ebf4:	e5900000 	ldr	r0, [r0]
4001ebf8:	e59f1074 	ldr	r1, [pc, #116]	; 4001ec74 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ebfc:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001ec00:	eb000859 	bl	40020d6c <CyU3PUsbSSConnecthandler>
4001ec04:	e3a00902 	mov	r0, #32768	; 0x8000
4001ec08:	e59f1064 	ldr	r1, [pc, #100]	; 4001ec74 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ec0c:	e5810004 	str	r0, [r1, #4]
4001ec10:	e1c10000 	bic	r0, r1, r0
4001ec14:	e5900008 	ldr	r0, [r0, #8]
4001ec18:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001ec1c:	e5810008 	str	r0, [r1, #8]
4001ec20:	e3140801 	tst	r4, #65536	; 0x10000
4001ec24:	0a000007 	beq	4001ec48 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001ec28:	eb0008cc 	bl	40020f60 <CyU3PUsbSSDisConnecthandler>
4001ec2c:	e3a00801 	mov	r0, #65536	; 0x10000
4001ec30:	e59f103c 	ldr	r1, [pc, #60]	; 4001ec74 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ec34:	e5810004 	str	r0, [r1, #4]
4001ec38:	e1810000 	orr	r0, r1, r0
4001ec3c:	e5900008 	ldr	r0, [r0, #8]
4001ec40:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ec44:	e5810008 	str	r0, [r1, #8]
4001ec48:	e3140802 	tst	r4, #131072	; 0x20000
4001ec4c:	0a000007 	beq	4001ec70 <CyU3PUibLnkIntrEvtHandler+0x94>
4001ec50:	eb000926 	bl	400210f0 <CyU3PUsbSSReset>
4001ec54:	e3a00802 	mov	r0, #131072	; 0x20000
4001ec58:	e59f1014 	ldr	r1, [pc, #20]	; 4001ec74 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ec5c:	e5810004 	str	r0, [r1, #4]
4001ec60:	e1810000 	orr	r0, r1, r0
4001ec64:	e5900008 	ldr	r0, [r0, #8]
4001ec68:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001ec6c:	e5810008 	str	r0, [r1, #8]
4001ec70:	e8bd8010 	pop	{r4, pc}
4001ec74:	e0033000 	.word	0xe0033000
4001ec78:	40030da8 	.word	0x40030da8

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001ec7c <CyU3PUibProtEpIntrEvtHandler>:
4001ec7c:	e92d4070 	push	{r4, r5, r6, lr}
4001ec80:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f03c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ec84:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001ec88:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f03c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ec8c:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001ec90:	e0005001 	and	r5, r0, r1
4001ec94:	e3a04001 	mov	r4, #1
4001ec98:	ea0000df 	b	4001f01c <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001ec9c:	e3a00001 	mov	r0, #1
4001eca0:	e1150410 	tst	r5, r0, lsl r4
4001eca4:	0a000081 	beq	4001eeb0 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001eca8:	e59f0390 	ldr	r0, [pc, #912]	; 4001f040 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ecac:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ecb0:	e3160901 	tst	r6, #16384	; 0x4000
4001ecb4:	0a00002a 	beq	4001ed64 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ecb8:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ecbc:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ecc0:	e3800002 	orr	r0, r0, #2
4001ecc4:	e59f1374 	ldr	r1, [pc, #884]	; 4001f040 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ecc8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001eccc:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001ecd0:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ecd4:	e1a01802 	lsl	r1, r2, #16
4001ecd8:	e1a01821 	lsr	r1, r1, #16
4001ecdc:	e20420ff 	and	r2, r4, #255	; 0xff
4001ece0:	e3820080 	orr	r0, r2, #128	; 0x80
4001ece4:	ebfffa90 	bl	4001d72c <CyU3PUsbSendNrdy>
4001ece8:	e20410ff 	and	r1, r4, #255	; 0xff
4001ecec:	e3810080 	orr	r0, r1, #128	; 0x80
4001ecf0:	ebfff9a1 	bl	4001d37c <CyU3PUsbResetEp>
4001ecf4:	e3a0000a 	mov	r0, #10
4001ecf8:	ebffd20c 	bl	40013530 <CyU3PBusyWait>
4001ecfc:	e59f2340 	ldr	r2, [pc, #832]	; 4001f044 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001ed00:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ed04:	e1a01802 	lsl	r1, r2, #16
4001ed08:	e1a01821 	lsr	r1, r1, #16
4001ed0c:	e20420ff 	and	r2, r4, #255	; 0xff
4001ed10:	e3820080 	orr	r0, r2, #128	; 0x80
4001ed14:	ebfffa47 	bl	4001d638 <CyU3PUsbSendErdy>
4001ed18:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001ed1c:	e59f131c 	ldr	r1, [pc, #796]	; 4001f040 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ed20:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ed24:	e59f031c 	ldr	r0, [pc, #796]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed28:	e5900000 	ldr	r0, [r0]
4001ed2c:	e3100020 	tst	r0, #32
4001ed30:	0a00000b 	beq	4001ed64 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ed34:	e3a00001 	mov	r0, #1
4001ed38:	e59f130c 	ldr	r1, [pc, #780]	; 4001f04c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ed3c:	e5911000 	ldr	r1, [r1]
4001ed40:	e1110410 	tst	r1, r0, lsl r4
4001ed44:	0a000006 	beq	4001ed64 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ed48:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed4c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed50:	e3a01003 	mov	r1, #3
4001ed54:	e3a00020 	mov	r0, #32
4001ed58:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed5c:	e5933000 	ldr	r3, [r3]
4001ed60:	e12fff33 	blx	r3
4001ed64:	e3160801 	tst	r6, #65536	; 0x10000
4001ed68:	0a000004 	beq	4001ed80 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001ed6c:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ed70:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ed74:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ed78:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f040 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ed7c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ed80:	e3a00001 	mov	r0, #1
4001ed84:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f04c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ed88:	e5911000 	ldr	r1, [r1]
4001ed8c:	e1110410 	tst	r1, r0, lsl r4
4001ed90:	0a000044 	beq	4001eea8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed94:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed98:	e5900000 	ldr	r0, [r0]
4001ed9c:	e3500000 	cmp	r0, #0
4001eda0:	0a000040 	beq	4001eea8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001eda4:	e59f029c 	ldr	r0, [pc, #668]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eda8:	e5900000 	ldr	r0, [r0]
4001edac:	e3100001 	tst	r0, #1
4001edb0:	0a000008 	beq	4001edd8 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001edb4:	e3160b01 	tst	r6, #1024	; 0x400
4001edb8:	0a000006 	beq	4001edd8 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001edbc:	e20400ff 	and	r0, r4, #255	; 0xff
4001edc0:	e3802080 	orr	r2, r0, #128	; 0x80
4001edc4:	e3a01003 	mov	r1, #3
4001edc8:	e3a00001 	mov	r0, #1
4001edcc:	e59f327c 	ldr	r3, [pc, #636]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edd0:	e5933000 	ldr	r3, [r3]
4001edd4:	e12fff33 	blx	r3
4001edd8:	e59f0268 	ldr	r0, [pc, #616]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eddc:	e5900000 	ldr	r0, [r0]
4001ede0:	e3100002 	tst	r0, #2
4001ede4:	0a000008 	beq	4001ee0c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ede8:	e3160a01 	tst	r6, #4096	; 0x1000
4001edec:	0a000006 	beq	4001ee0c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001edf0:	e20400ff 	and	r0, r4, #255	; 0xff
4001edf4:	e3802080 	orr	r2, r0, #128	; 0x80
4001edf8:	e3a01003 	mov	r1, #3
4001edfc:	e3a00002 	mov	r0, #2
4001ee00:	e59f3248 	ldr	r3, [pc, #584]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee04:	e5933000 	ldr	r3, [r3]
4001ee08:	e12fff33 	blx	r3
4001ee0c:	e59f0234 	ldr	r0, [pc, #564]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee10:	e5900000 	ldr	r0, [r0]
4001ee14:	e3100004 	tst	r0, #4
4001ee18:	0a000008 	beq	4001ee40 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ee1c:	e3160a02 	tst	r6, #8192	; 0x2000
4001ee20:	0a000006 	beq	4001ee40 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ee24:	e20400ff 	and	r0, r4, #255	; 0xff
4001ee28:	e3802080 	orr	r2, r0, #128	; 0x80
4001ee2c:	e3a01003 	mov	r1, #3
4001ee30:	e3a00004 	mov	r0, #4
4001ee34:	e59f3214 	ldr	r3, [pc, #532]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee38:	e5933000 	ldr	r3, [r3]
4001ee3c:	e12fff33 	blx	r3
4001ee40:	e59f0200 	ldr	r0, [pc, #512]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee44:	e5900000 	ldr	r0, [r0]
4001ee48:	e3100010 	tst	r0, #16
4001ee4c:	0a000008 	beq	4001ee74 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ee50:	e3160c02 	tst	r6, #512	; 0x200
4001ee54:	0a000006 	beq	4001ee74 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ee58:	e20400ff 	and	r0, r4, #255	; 0xff
4001ee5c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ee60:	e3a01003 	mov	r1, #3
4001ee64:	e3a00010 	mov	r0, #16
4001ee68:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee6c:	e5933000 	ldr	r3, [r3]
4001ee70:	e12fff33 	blx	r3
4001ee74:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee78:	e5900000 	ldr	r0, [r0]
4001ee7c:	e3100040 	tst	r0, #64	; 0x40
4001ee80:	0a000008 	beq	4001eea8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ee84:	e3160802 	tst	r6, #131072	; 0x20000
4001ee88:	0a000006 	beq	4001eea8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ee8c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ee90:	e3802080 	orr	r2, r0, #128	; 0x80
4001ee94:	e3a01003 	mov	r1, #3
4001ee98:	e3a00040 	mov	r0, #64	; 0x40
4001ee9c:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eea0:	e5933000 	ldr	r3, [r3]
4001eea4:	e12fff33 	blx	r3
4001eea8:	e59f0190 	ldr	r0, [pc, #400]	; 4001f040 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001eeac:	e7806104 	str	r6, [r0, r4, lsl #2]
4001eeb0:	e2840010 	add	r0, r4, #16
4001eeb4:	e3a01001 	mov	r1, #1
4001eeb8:	e1150011 	tst	r5, r1, lsl r0
4001eebc:	0a000055 	beq	4001f018 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001eec0:	e59f018c 	ldr	r0, [pc, #396]	; 4001f054 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001eec4:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001eec8:	e2840010 	add	r0, r4, #16
4001eecc:	e1a00011 	lsl	r0, r1, r0
4001eed0:	e59f1174 	ldr	r1, [pc, #372]	; 4001f04c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001eed4:	e5911000 	ldr	r1, [r1]
4001eed8:	e1100001 	tst	r0, r1
4001eedc:	0a00004b 	beq	4001f010 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eee0:	e59f0168 	ldr	r0, [pc, #360]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eee4:	e5900000 	ldr	r0, [r0]
4001eee8:	e3500000 	cmp	r0, #0
4001eeec:	0a000047 	beq	4001f010 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eef0:	e59f0150 	ldr	r0, [pc, #336]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eef4:	e5900000 	ldr	r0, [r0]
4001eef8:	e3100001 	tst	r0, #1
4001eefc:	0a000007 	beq	4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ef00:	e3160b01 	tst	r6, #1024	; 0x400
4001ef04:	0a000005 	beq	4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ef08:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef0c:	e3a01003 	mov	r1, #3
4001ef10:	e3a00001 	mov	r0, #1
4001ef14:	e59f3134 	ldr	r3, [pc, #308]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef18:	e5933000 	ldr	r3, [r3]
4001ef1c:	e12fff33 	blx	r3
4001ef20:	e59f0120 	ldr	r0, [pc, #288]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef24:	e5900000 	ldr	r0, [r0]
4001ef28:	e3100002 	tst	r0, #2
4001ef2c:	0a000007 	beq	4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ef30:	e3160a01 	tst	r6, #4096	; 0x1000
4001ef34:	0a000005 	beq	4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ef38:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef3c:	e3a01003 	mov	r1, #3
4001ef40:	e3a00002 	mov	r0, #2
4001ef44:	e59f3104 	ldr	r3, [pc, #260]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef48:	e5933000 	ldr	r3, [r3]
4001ef4c:	e12fff33 	blx	r3
4001ef50:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef54:	e5900000 	ldr	r0, [r0]
4001ef58:	e3100004 	tst	r0, #4
4001ef5c:	0a000007 	beq	4001ef80 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ef60:	e3160a02 	tst	r6, #8192	; 0x2000
4001ef64:	0a000005 	beq	4001ef80 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ef68:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef6c:	e3a01003 	mov	r1, #3
4001ef70:	e3a00004 	mov	r0, #4
4001ef74:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef78:	e5933000 	ldr	r3, [r3]
4001ef7c:	e12fff33 	blx	r3
4001ef80:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef84:	e5900000 	ldr	r0, [r0]
4001ef88:	e3100010 	tst	r0, #16
4001ef8c:	0a000007 	beq	4001efb0 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001ef90:	e3160c02 	tst	r6, #512	; 0x200
4001ef94:	0a000005 	beq	4001efb0 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001ef98:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef9c:	e3a01003 	mov	r1, #3
4001efa0:	e3a00010 	mov	r0, #16
4001efa4:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001efa8:	e5933000 	ldr	r3, [r3]
4001efac:	e12fff33 	blx	r3
4001efb0:	e59f0090 	ldr	r0, [pc, #144]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001efb4:	e5900000 	ldr	r0, [r0]
4001efb8:	e3100040 	tst	r0, #64	; 0x40
4001efbc:	0a000007 	beq	4001efe0 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001efc0:	e3160802 	tst	r6, #131072	; 0x20000
4001efc4:	0a000005 	beq	4001efe0 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001efc8:	e20420ff 	and	r2, r4, #255	; 0xff
4001efcc:	e3a01003 	mov	r1, #3
4001efd0:	e3a00040 	mov	r0, #64	; 0x40
4001efd4:	e59f3074 	ldr	r3, [pc, #116]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001efd8:	e5933000 	ldr	r3, [r3]
4001efdc:	e12fff33 	blx	r3
4001efe0:	e59f0060 	ldr	r0, [pc, #96]	; 4001f048 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001efe4:	e5900000 	ldr	r0, [r0]
4001efe8:	e3100020 	tst	r0, #32
4001efec:	0a000007 	beq	4001f010 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eff0:	e3160901 	tst	r6, #16384	; 0x4000
4001eff4:	0a000005 	beq	4001f010 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eff8:	e20420ff 	and	r2, r4, #255	; 0xff
4001effc:	e3a01003 	mov	r1, #3
4001f000:	e3a00020 	mov	r0, #32
4001f004:	e59f3044 	ldr	r3, [pc, #68]	; 4001f050 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f008:	e5933000 	ldr	r3, [r3]
4001f00c:	e12fff33 	blx	r3
4001f010:	e59f003c 	ldr	r0, [pc, #60]	; 4001f054 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f014:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f018:	e2844001 	add	r4, r4, #1
4001f01c:	e3540010 	cmp	r4, #16
4001f020:	baffff1d 	blt	4001ec9c <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f024:	e59f002c 	ldr	r0, [pc, #44]	; 4001f058 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f028:	e5900004 	ldr	r0, [r0, #4]
4001f02c:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f030:	e59f1020 	ldr	r1, [pc, #32]	; 4001f058 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f034:	e5810004 	str	r0, [r1, #4]
4001f038:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f03c:	e0033000 	.word	0xe0033000
4001f040:	e0033500 	.word	0xe0033500
4001f044:	e00335c0 	.word	0xe00335c0
4001f048:	40030d98 	.word	0x40030d98
4001f04c:	40030d9c 	.word	0x40030d9c
4001f050:	40030d94 	.word	0x40030d94
4001f054:	e0033600 	.word	0xe0033600
4001f058:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f05c <CyU3PUibProtIntrEvtHandler>:
4001f05c:	e92d4010 	push	{r4, lr}
4001f060:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f138 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f064:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f068:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f138 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f06c:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f070:	e0004001 	and	r4, r0, r1
4001f074:	e3140c02 	tst	r4, #512	; 0x200
4001f078:	0a000006 	beq	4001f098 <CyU3PUibProtIntrEvtHandler+0x3c>
4001f07c:	e3a00c02 	mov	r0, #512	; 0x200
4001f080:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f138 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f084:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f088:	e3a00001 	mov	r0, #1
4001f08c:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f13c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f090:	e5810014 	str	r0, [r1, #20]
4001f094:	eb0008ff 	bl	40021498 <CyU3PUsbSetupCommand>
4001f098:	e3140901 	tst	r4, #16384	; 0x4000
4001f09c:	0a00000a 	beq	4001f0cc <CyU3PUibProtIntrEvtHandler+0x70>
4001f0a0:	e59f0090 	ldr	r0, [pc, #144]	; 4001f138 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f0a4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f0a8:	e3c00004 	bic	r0, r0, #4
4001f0ac:	e59f1084 	ldr	r1, [pc, #132]	; 4001f138 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f0b0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f0b4:	e1a00001 	mov	r0, r1
4001f0b8:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f0bc:	e3c00004 	bic	r0, r0, #4
4001f0c0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f0c4:	e3a00901 	mov	r0, #16384	; 0x4000
4001f0c8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f0cc:	e3140b02 	tst	r4, #2048	; 0x800
4001f0d0:	0a000012 	beq	4001f120 <CyU3PUibProtIntrEvtHandler+0xc4>
4001f0d4:	e59f0060 	ldr	r0, [pc, #96]	; 4001f13c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f0d8:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f0dc:	e3500000 	cmp	r0, #0
4001f0e0:	0a00000b 	beq	4001f114 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f0e4:	e59f0054 	ldr	r0, [pc, #84]	; 4001f140 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f0e8:	e5900000 	ldr	r0, [r0]
4001f0ec:	e3500000 	cmp	r0, #0
4001f0f0:	0a000004 	beq	4001f108 <CyU3PUibProtIntrEvtHandler+0xac>
4001f0f4:	e3a01000 	mov	r1, #0
4001f0f8:	e3a0000a 	mov	r0, #10
4001f0fc:	e59f203c 	ldr	r2, [pc, #60]	; 4001f140 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f100:	e5922000 	ldr	r2, [r2]
4001f104:	e12fff32 	blx	r2
4001f108:	e3a00000 	mov	r0, #0
4001f10c:	e59f1028 	ldr	r1, [pc, #40]	; 4001f13c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f110:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f114:	e3a00b02 	mov	r0, #2048	; 0x800
4001f118:	e59f1018 	ldr	r1, [pc, #24]	; 4001f138 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f11c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f120:	e59f001c 	ldr	r0, [pc, #28]	; 4001f144 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f124:	e5900004 	ldr	r0, [r0, #4]
4001f128:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f12c:	e59f1010 	ldr	r1, [pc, #16]	; 4001f144 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f130:	e5810004 	str	r0, [r1, #4]
4001f134:	e8bd8010 	pop	{r4, pc}
4001f138:	e0033000 	.word	0xe0033000
4001f13c:	40031d40 	.word	0x40031d40
4001f140:	40030db8 	.word	0x40030db8
4001f144:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f148 <CyU3PUibSendDescr>:
4001f148:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f14c:	e1a04000 	mov	r4, r0
4001f150:	e1a05001 	mov	r5, r1
4001f154:	e3a06000 	mov	r6, #0
4001f158:	e3a07000 	mov	r7, #0
4001f15c:	e3a08000 	mov	r8, #0
4001f160:	e3a09000 	mov	r9, #0
4001f164:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f750 <CyU3PUibSendDescr+0x608>
4001f168:	e0000825 	and	r0, r0, r5, lsr #16
4001f16c:	e58d0000 	str	r0, [sp]
4001f170:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f174:	e5d00009 	ldrb	r0, [r0, #9]
4001f178:	e3500003 	cmp	r0, #3
4001f17c:	1a000001 	bne	4001f188 <CyU3PUibSendDescr+0x40>
4001f180:	e3a00c02 	mov	r0, #512	; 0x200
4001f184:	ea000000 	b	4001f18c <CyU3PUibSendDescr+0x44>
4001f188:	e3a00040 	mov	r0, #64	; 0x40
4001f18c:	e1a0a800 	lsl	sl, r0, #16
4001f190:	e1a0a82a 	lsr	sl, sl, #16
4001f194:	e1a00c24 	lsr	r0, r4, #24
4001f198:	e3500006 	cmp	r0, #6
4001f19c:	0a0000b4 	beq	4001f474 <CyU3PUibSendDescr+0x32c>
4001f1a0:	ca000006 	bgt	4001f1c0 <CyU3PUibSendDescr+0x78>
4001f1a4:	e3500001 	cmp	r0, #1
4001f1a8:	0a00000b 	beq	4001f1dc <CyU3PUibSendDescr+0x94>
4001f1ac:	e3500002 	cmp	r0, #2
4001f1b0:	0a000020 	beq	4001f238 <CyU3PUibSendDescr+0xf0>
4001f1b4:	e3500003 	cmp	r0, #3
4001f1b8:	1a00013b 	bne	4001f6ac <CyU3PUibSendDescr+0x564>
4001f1bc:	ea00007b 	b	4001f3b0 <CyU3PUibSendDescr+0x268>
4001f1c0:	e3500007 	cmp	r0, #7
4001f1c4:	0a0000b8 	beq	4001f4ac <CyU3PUibSendDescr+0x364>
4001f1c8:	e3500009 	cmp	r0, #9
4001f1cc:	0a000122 	beq	4001f65c <CyU3PUibSendDescr+0x514>
4001f1d0:	e350000f 	cmp	r0, #15
4001f1d4:	1a000134 	bne	4001f6ac <CyU3PUibSendDescr+0x564>
4001f1d8:	ea0000f6 	b	4001f5b8 <CyU3PUibSendDescr+0x470>
4001f1dc:	e1a00000 	nop			; (mov r0, r0)
4001f1e0:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f1e4:	e5d00009 	ldrb	r0, [r0, #9]
4001f1e8:	e3500003 	cmp	r0, #3
4001f1ec:	1a000008 	bne	4001f214 <CyU3PUibSendDescr+0xcc>
4001f1f0:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f1f4:	e5900004 	ldr	r0, [r0, #4]
4001f1f8:	e3500000 	cmp	r0, #0
4001f1fc:	0a00000c 	beq	4001f234 <CyU3PUibSendDescr+0xec>
4001f200:	e3a09001 	mov	r9, #1
4001f204:	e3a06012 	mov	r6, #18
4001f208:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f20c:	e5908004 	ldr	r8, [r0, #4]
4001f210:	ea000007 	b	4001f234 <CyU3PUibSendDescr+0xec>
4001f214:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f218:	e5900000 	ldr	r0, [r0]
4001f21c:	e3500000 	cmp	r0, #0
4001f220:	0a000003 	beq	4001f234 <CyU3PUibSendDescr+0xec>
4001f224:	e3a09001 	mov	r9, #1
4001f228:	e3a06012 	mov	r6, #18
4001f22c:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f230:	e5908000 	ldr	r8, [r0]
4001f234:	ea000128 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f238:	e1a00000 	nop			; (mov r0, r0)
4001f23c:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f240:	e5d00009 	ldrb	r0, [r0, #9]
4001f244:	e3500002 	cmp	r0, #2
4001f248:	1a00001a 	bne	4001f2b8 <CyU3PUibSendDescr+0x170>
4001f24c:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f250:	e5900014 	ldr	r0, [r0, #20]
4001f254:	e3500000 	cmp	r0, #0
4001f258:	0a00004f 	beq	4001f39c <CyU3PUibSendDescr+0x254>
4001f25c:	e3a09001 	mov	r9, #1
4001f260:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f264:	e5908014 	ldr	r8, [r0, #20]
4001f268:	e5900014 	ldr	r0, [r0, #20]
4001f26c:	e5d00002 	ldrb	r0, [r0, #2]
4001f270:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f274:	e5911014 	ldr	r1, [r1, #20]
4001f278:	e5d11003 	ldrb	r1, [r1, #3]
4001f27c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f280:	e1500825 	cmp	r0, r5, lsr #16
4001f284:	2a000007 	bcs	4001f2a8 <CyU3PUibSendDescr+0x160>
4001f288:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f28c:	e5900014 	ldr	r0, [r0, #20]
4001f290:	e5d00002 	ldrb	r0, [r0, #2]
4001f294:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f298:	e5911014 	ldr	r1, [r1, #20]
4001f29c:	e5d11003 	ldrb	r1, [r1, #3]
4001f2a0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f2a4:	ea000000 	b	4001f2ac <CyU3PUibSendDescr+0x164>
4001f2a8:	e1a00825 	lsr	r0, r5, #16
4001f2ac:	e1a06800 	lsl	r6, r0, #16
4001f2b0:	e1a06826 	lsr	r6, r6, #16
4001f2b4:	ea000038 	b	4001f39c <CyU3PUibSendDescr+0x254>
4001f2b8:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f2bc:	e5d00009 	ldrb	r0, [r0, #9]
4001f2c0:	e3500001 	cmp	r0, #1
4001f2c4:	1a00001a 	bne	4001f334 <CyU3PUibSendDescr+0x1ec>
4001f2c8:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f2cc:	e5900018 	ldr	r0, [r0, #24]
4001f2d0:	e3500000 	cmp	r0, #0
4001f2d4:	0a000030 	beq	4001f39c <CyU3PUibSendDescr+0x254>
4001f2d8:	e3a09001 	mov	r9, #1
4001f2dc:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f2e0:	e5908018 	ldr	r8, [r0, #24]
4001f2e4:	e5900018 	ldr	r0, [r0, #24]
4001f2e8:	e5d00002 	ldrb	r0, [r0, #2]
4001f2ec:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f2f0:	e5911018 	ldr	r1, [r1, #24]
4001f2f4:	e5d11003 	ldrb	r1, [r1, #3]
4001f2f8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f2fc:	e1500825 	cmp	r0, r5, lsr #16
4001f300:	2a000007 	bcs	4001f324 <CyU3PUibSendDescr+0x1dc>
4001f304:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f308:	e5900018 	ldr	r0, [r0, #24]
4001f30c:	e5d00002 	ldrb	r0, [r0, #2]
4001f310:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f314:	e5911018 	ldr	r1, [r1, #24]
4001f318:	e5d11003 	ldrb	r1, [r1, #3]
4001f31c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f320:	ea000000 	b	4001f328 <CyU3PUibSendDescr+0x1e0>
4001f324:	e1a00825 	lsr	r0, r5, #16
4001f328:	e1a06800 	lsl	r6, r0, #16
4001f32c:	e1a06826 	lsr	r6, r6, #16
4001f330:	ea000019 	b	4001f39c <CyU3PUibSendDescr+0x254>
4001f334:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f338:	e590001c 	ldr	r0, [r0, #28]
4001f33c:	e3500000 	cmp	r0, #0
4001f340:	0a000015 	beq	4001f39c <CyU3PUibSendDescr+0x254>
4001f344:	e3a09001 	mov	r9, #1
4001f348:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f34c:	e590801c 	ldr	r8, [r0, #28]
4001f350:	e590001c 	ldr	r0, [r0, #28]
4001f354:	e5d00002 	ldrb	r0, [r0, #2]
4001f358:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f35c:	e591101c 	ldr	r1, [r1, #28]
4001f360:	e5d11003 	ldrb	r1, [r1, #3]
4001f364:	e1800401 	orr	r0, r0, r1, lsl #8
4001f368:	e1500825 	cmp	r0, r5, lsr #16
4001f36c:	2a000007 	bcs	4001f390 <CyU3PUibSendDescr+0x248>
4001f370:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f374:	e590001c 	ldr	r0, [r0, #28]
4001f378:	e5d00002 	ldrb	r0, [r0, #2]
4001f37c:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f380:	e591101c 	ldr	r1, [r1, #28]
4001f384:	e5d11003 	ldrb	r1, [r1, #3]
4001f388:	e1800401 	orr	r0, r0, r1, lsl #8
4001f38c:	ea000000 	b	4001f394 <CyU3PUibSendDescr+0x24c>
4001f390:	e1a00825 	lsr	r0, r5, #16
4001f394:	e1a06800 	lsl	r6, r0, #16
4001f398:	e1a06826 	lsr	r6, r6, #16
4001f39c:	e3580000 	cmp	r8, #0
4001f3a0:	0a000001 	beq	4001f3ac <CyU3PUibSendDescr+0x264>
4001f3a4:	e3a00002 	mov	r0, #2
4001f3a8:	e5c80001 	strb	r0, [r8, #1]
4001f3ac:	ea0000ca 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f3b0:	e1a00000 	nop			; (mov r0, r0)
4001f3b4:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f3b8:	e1a0b820 	lsr	fp, r0, #16
4001f3bc:	e35b0010 	cmp	fp, #16
4001f3c0:	ca000003 	bgt	4001f3d4 <CyU3PUibSendDescr+0x28c>
4001f3c4:	e59f0390 	ldr	r0, [pc, #912]	; 4001f75c <CyU3PUibSendDescr+0x614>
4001f3c8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f3cc:	e3500000 	cmp	r0, #0
4001f3d0:	1a000013 	bne	4001f424 <CyU3PUibSendDescr+0x2dc>
4001f3d4:	e59f0378 	ldr	r0, [pc, #888]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f3d8:	e5d00007 	ldrb	r0, [r0, #7]
4001f3dc:	e3500001 	cmp	r0, #1
4001f3e0:	0a000022 	beq	4001f470 <CyU3PUibSendDescr+0x328>
4001f3e4:	e59f0374 	ldr	r0, [pc, #884]	; 4001f760 <CyU3PUibSendDescr+0x618>
4001f3e8:	e5900000 	ldr	r0, [r0]
4001f3ec:	e3500000 	cmp	r0, #0
4001f3f0:	0a00001e 	beq	4001f470 <CyU3PUibSendDescr+0x328>
4001f3f4:	e1a01005 	mov	r1, r5
4001f3f8:	e1a00004 	mov	r0, r4
4001f3fc:	e59f235c 	ldr	r2, [pc, #860]	; 4001f760 <CyU3PUibSendDescr+0x618>
4001f400:	e5922000 	ldr	r2, [r2]
4001f404:	e12fff32 	blx	r2
4001f408:	e1a09000 	mov	r9, r0
4001f40c:	e3590000 	cmp	r9, #0
4001f410:	0a000016 	beq	4001f470 <CyU3PUibSendDescr+0x328>
4001f414:	e3a00001 	mov	r0, #1
4001f418:	e59f1334 	ldr	r1, [pc, #820]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f41c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f420:	ea000012 	b	4001f470 <CyU3PUibSendDescr+0x328>
4001f424:	e59f0330 	ldr	r0, [pc, #816]	; 4001f75c <CyU3PUibSendDescr+0x614>
4001f428:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f42c:	e5d00000 	ldrb	r0, [r0]
4001f430:	e1500825 	cmp	r0, r5, lsr #16
4001f434:	2a000003 	bcs	4001f448 <CyU3PUibSendDescr+0x300>
4001f438:	e59f031c 	ldr	r0, [pc, #796]	; 4001f75c <CyU3PUibSendDescr+0x614>
4001f43c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f440:	e5d00000 	ldrb	r0, [r0]
4001f444:	ea000000 	b	4001f44c <CyU3PUibSendDescr+0x304>
4001f448:	e1a00825 	lsr	r0, r5, #16
4001f44c:	e1a06800 	lsl	r6, r0, #16
4001f450:	e1a06826 	lsr	r6, r6, #16
4001f454:	e59f0300 	ldr	r0, [pc, #768]	; 4001f75c <CyU3PUibSendDescr+0x614>
4001f458:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f45c:	e3500000 	cmp	r0, #0
4001f460:	0a000002 	beq	4001f470 <CyU3PUibSendDescr+0x328>
4001f464:	e3a09001 	mov	r9, #1
4001f468:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f75c <CyU3PUibSendDescr+0x614>
4001f46c:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f470:	ea000099 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f474:	e1a00000 	nop			; (mov r0, r0)
4001f478:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f47c:	e5900008 	ldr	r0, [r0, #8]
4001f480:	e3500000 	cmp	r0, #0
4001f484:	0a000007 	beq	4001f4a8 <CyU3PUibSendDescr+0x360>
4001f488:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f48c:	e5d00009 	ldrb	r0, [r0, #9]
4001f490:	e3500003 	cmp	r0, #3
4001f494:	0a000003 	beq	4001f4a8 <CyU3PUibSendDescr+0x360>
4001f498:	e3a09001 	mov	r9, #1
4001f49c:	e3a0600a 	mov	r6, #10
4001f4a0:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f4a4:	e5908008 	ldr	r8, [r0, #8]
4001f4a8:	ea00008b 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f4ac:	e1a00000 	nop			; (mov r0, r0)
4001f4b0:	e59f029c 	ldr	r0, [pc, #668]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f4b4:	e5d00009 	ldrb	r0, [r0, #9]
4001f4b8:	e3500002 	cmp	r0, #2
4001f4bc:	1a00001a 	bne	4001f52c <CyU3PUibSendDescr+0x3e4>
4001f4c0:	e59f0290 	ldr	r0, [pc, #656]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f4c4:	e5900018 	ldr	r0, [r0, #24]
4001f4c8:	e3500000 	cmp	r0, #0
4001f4cc:	0a000034 	beq	4001f5a4 <CyU3PUibSendDescr+0x45c>
4001f4d0:	e3a09001 	mov	r9, #1
4001f4d4:	e59f027c 	ldr	r0, [pc, #636]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f4d8:	e5908018 	ldr	r8, [r0, #24]
4001f4dc:	e5900018 	ldr	r0, [r0, #24]
4001f4e0:	e5d00002 	ldrb	r0, [r0, #2]
4001f4e4:	e59f126c 	ldr	r1, [pc, #620]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f4e8:	e5911018 	ldr	r1, [r1, #24]
4001f4ec:	e5d11003 	ldrb	r1, [r1, #3]
4001f4f0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f4f4:	e1500825 	cmp	r0, r5, lsr #16
4001f4f8:	2a000007 	bcs	4001f51c <CyU3PUibSendDescr+0x3d4>
4001f4fc:	e59f0254 	ldr	r0, [pc, #596]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f500:	e5900018 	ldr	r0, [r0, #24]
4001f504:	e5d00002 	ldrb	r0, [r0, #2]
4001f508:	e59f1248 	ldr	r1, [pc, #584]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f50c:	e5911018 	ldr	r1, [r1, #24]
4001f510:	e5d11003 	ldrb	r1, [r1, #3]
4001f514:	e1800401 	orr	r0, r0, r1, lsl #8
4001f518:	ea000000 	b	4001f520 <CyU3PUibSendDescr+0x3d8>
4001f51c:	e1a00825 	lsr	r0, r5, #16
4001f520:	e1a06800 	lsl	r6, r0, #16
4001f524:	e1a06826 	lsr	r6, r6, #16
4001f528:	ea00001d 	b	4001f5a4 <CyU3PUibSendDescr+0x45c>
4001f52c:	e59f0220 	ldr	r0, [pc, #544]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f530:	e5d00009 	ldrb	r0, [r0, #9]
4001f534:	e3500001 	cmp	r0, #1
4001f538:	1a000019 	bne	4001f5a4 <CyU3PUibSendDescr+0x45c>
4001f53c:	e59f0214 	ldr	r0, [pc, #532]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f540:	e5900014 	ldr	r0, [r0, #20]
4001f544:	e3500000 	cmp	r0, #0
4001f548:	0a000015 	beq	4001f5a4 <CyU3PUibSendDescr+0x45c>
4001f54c:	e3a09001 	mov	r9, #1
4001f550:	e59f0200 	ldr	r0, [pc, #512]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f554:	e5908014 	ldr	r8, [r0, #20]
4001f558:	e5900014 	ldr	r0, [r0, #20]
4001f55c:	e5d00002 	ldrb	r0, [r0, #2]
4001f560:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f564:	e5911014 	ldr	r1, [r1, #20]
4001f568:	e5d11003 	ldrb	r1, [r1, #3]
4001f56c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f570:	e1500825 	cmp	r0, r5, lsr #16
4001f574:	2a000007 	bcs	4001f598 <CyU3PUibSendDescr+0x450>
4001f578:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f57c:	e5900014 	ldr	r0, [r0, #20]
4001f580:	e5d00002 	ldrb	r0, [r0, #2]
4001f584:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f588:	e5911014 	ldr	r1, [r1, #20]
4001f58c:	e5d11003 	ldrb	r1, [r1, #3]
4001f590:	e1800401 	orr	r0, r0, r1, lsl #8
4001f594:	ea000000 	b	4001f59c <CyU3PUibSendDescr+0x454>
4001f598:	e1a00825 	lsr	r0, r5, #16
4001f59c:	e1a06800 	lsl	r6, r0, #16
4001f5a0:	e1a06826 	lsr	r6, r6, #16
4001f5a4:	e3580000 	cmp	r8, #0
4001f5a8:	0a000001 	beq	4001f5b4 <CyU3PUibSendDescr+0x46c>
4001f5ac:	e3a00007 	mov	r0, #7
4001f5b0:	e5c80001 	strb	r0, [r8, #1]
4001f5b4:	ea000048 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f5b8:	e1a00000 	nop			; (mov r0, r0)
4001f5bc:	e59f0194 	ldr	r0, [pc, #404]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f5c0:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f5c4:	e3500000 	cmp	r0, #0
4001f5c8:	0a000022 	beq	4001f658 <CyU3PUibSendDescr+0x510>
4001f5cc:	e59f0180 	ldr	r0, [pc, #384]	; 4001f754 <CyU3PUibSendDescr+0x60c>
4001f5d0:	e5d00009 	ldrb	r0, [r0, #9]
4001f5d4:	e3500003 	cmp	r0, #3
4001f5d8:	0a000008 	beq	4001f600 <CyU3PUibSendDescr+0x4b8>
4001f5dc:	e59f0174 	ldr	r0, [pc, #372]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f5e0:	e5900000 	ldr	r0, [r0]
4001f5e4:	e3500000 	cmp	r0, #0
4001f5e8:	0a00001a 	beq	4001f658 <CyU3PUibSendDescr+0x510>
4001f5ec:	e59f0164 	ldr	r0, [pc, #356]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f5f0:	e5900000 	ldr	r0, [r0]
4001f5f4:	e5d00002 	ldrb	r0, [r0, #2]
4001f5f8:	e3500010 	cmp	r0, #16
4001f5fc:	1a000015 	bne	4001f658 <CyU3PUibSendDescr+0x510>
4001f600:	e3a09001 	mov	r9, #1
4001f604:	e59f014c 	ldr	r0, [pc, #332]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f608:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f60c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f610:	e5d00002 	ldrb	r0, [r0, #2]
4001f614:	e59f113c 	ldr	r1, [pc, #316]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f618:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f61c:	e5d11003 	ldrb	r1, [r1, #3]
4001f620:	e1800401 	orr	r0, r0, r1, lsl #8
4001f624:	e1500825 	cmp	r0, r5, lsr #16
4001f628:	2a000007 	bcs	4001f64c <CyU3PUibSendDescr+0x504>
4001f62c:	e59f0124 	ldr	r0, [pc, #292]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f630:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f634:	e5d00002 	ldrb	r0, [r0, #2]
4001f638:	e59f1118 	ldr	r1, [pc, #280]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f63c:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f640:	e5d11003 	ldrb	r1, [r1, #3]
4001f644:	e1800401 	orr	r0, r0, r1, lsl #8
4001f648:	ea000000 	b	4001f650 <CyU3PUibSendDescr+0x508>
4001f64c:	e1a00825 	lsr	r0, r5, #16
4001f650:	e1a06800 	lsl	r6, r0, #16
4001f654:	e1a06826 	lsr	r6, r6, #16
4001f658:	ea00001f 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f65c:	e1a00000 	nop			; (mov r0, r0)
4001f660:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f664:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f668:	e3500000 	cmp	r0, #0
4001f66c:	0a00000d 	beq	4001f6a8 <CyU3PUibSendDescr+0x560>
4001f670:	e3a09001 	mov	r9, #1
4001f674:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f678:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f67c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f680:	e5d00000 	ldrb	r0, [r0]
4001f684:	e1500825 	cmp	r0, r5, lsr #16
4001f688:	2a000003 	bcs	4001f69c <CyU3PUibSendDescr+0x554>
4001f68c:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f758 <CyU3PUibSendDescr+0x610>
4001f690:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f694:	e5d00000 	ldrb	r0, [r0]
4001f698:	ea000000 	b	4001f6a0 <CyU3PUibSendDescr+0x558>
4001f69c:	e1a00825 	lsr	r0, r5, #16
4001f6a0:	e1a06800 	lsl	r6, r0, #16
4001f6a4:	e1a06826 	lsr	r6, r6, #16
4001f6a8:	ea00000b 	b	4001f6dc <CyU3PUibSendDescr+0x594>
4001f6ac:	e1a00000 	nop			; (mov r0, r0)
4001f6b0:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f760 <CyU3PUibSendDescr+0x618>
4001f6b4:	e5900000 	ldr	r0, [r0]
4001f6b8:	e3500000 	cmp	r0, #0
4001f6bc:	0a000005 	beq	4001f6d8 <CyU3PUibSendDescr+0x590>
4001f6c0:	e1a01005 	mov	r1, r5
4001f6c4:	e1a00004 	mov	r0, r4
4001f6c8:	e59f2090 	ldr	r2, [pc, #144]	; 4001f760 <CyU3PUibSendDescr+0x618>
4001f6cc:	e5922000 	ldr	r2, [r2]
4001f6d0:	e12fff32 	blx	r2
4001f6d4:	e1a09000 	mov	r9, r0
4001f6d8:	e1a00000 	nop			; (mov r0, r0)
4001f6dc:	e1a00000 	nop			; (mov r0, r0)
4001f6e0:	e3590001 	cmp	r9, #1
4001f6e4:	1a000017 	bne	4001f748 <CyU3PUibSendDescr+0x600>
4001f6e8:	e3580000 	cmp	r8, #0
4001f6ec:	0a000015 	beq	4001f748 <CyU3PUibSendDescr+0x600>
4001f6f0:	e1a01008 	mov	r1, r8
4001f6f4:	e1a00006 	mov	r0, r6
4001f6f8:	ebfff758 	bl	4001d460 <CyU3PUsbSendEP0Data>
4001f6fc:	e1a07000 	mov	r7, r0
4001f700:	e3570000 	cmp	r7, #0
4001f704:	1a000009 	bne	4001f730 <CyU3PUibSendDescr+0x5e8>
4001f708:	e59d0000 	ldr	r0, [sp]
4001f70c:	e1560000 	cmp	r6, r0
4001f710:	aa000006 	bge	4001f730 <CyU3PUibSendDescr+0x5e8>
4001f714:	e24a0001 	sub	r0, sl, #1
4001f718:	e1100006 	tst	r0, r6
4001f71c:	1a000003 	bne	4001f730 <CyU3PUibSendDescr+0x5e8>
4001f720:	e1a01008 	mov	r1, r8
4001f724:	e3a00000 	mov	r0, #0
4001f728:	ebfff74c 	bl	4001d460 <CyU3PUsbSendEP0Data>
4001f72c:	e1a07000 	mov	r7, r0
4001f730:	e3570000 	cmp	r7, #0
4001f734:	0a000003 	beq	4001f748 <CyU3PUibSendDescr+0x600>
4001f738:	e3a02000 	mov	r2, #0
4001f73c:	e3a01001 	mov	r1, #1
4001f740:	e1a00002 	mov	r0, r2
4001f744:	ebfff970 	bl	4001dd0c <CyU3PUsbStall>
4001f748:	e1a00009 	mov	r0, r9
4001f74c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f750:	0000ffff 	.word	0x0000ffff
4001f754:	40031d40 	.word	0x40031d40
4001f758:	40031f98 	.word	0x40031f98
4001f75c:	40031fb8 	.word	0x40031fb8
4001f760:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUibSocketInit:

4001f764 <CyU3PUibSocketInit>:
4001f764:	e3a00000 	mov	r0, #0
4001f768:	ea00000d 	b	4001f7a4 <CyU3PUibSocketInit+0x40>
4001f76c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f770:	e59f2080 	ldr	r2, [pc, #128]	; 4001f7f8 <CyU3PUibSocketInit+0x94>
4001f774:	e0822380 	add	r2, r2, r0, lsl #7
4001f778:	e582100c 	str	r1, [r2, #12]
4001f77c:	e3e01000 	mvn	r1, #0
4001f780:	e59f2070 	ldr	r2, [pc, #112]	; 4001f7f8 <CyU3PUibSocketInit+0x94>
4001f784:	e0822380 	add	r2, r2, r0, lsl #7
4001f788:	e5821010 	str	r1, [r2, #16]
4001f78c:	e3a01000 	mov	r1, #0
4001f790:	e59f2060 	ldr	r2, [pc, #96]	; 4001f7f8 <CyU3PUibSocketInit+0x94>
4001f794:	e0822380 	add	r2, r2, r0, lsl #7
4001f798:	e5821014 	str	r1, [r2, #20]
4001f79c:	e2801001 	add	r1, r0, #1
4001f7a0:	e20100ff 	and	r0, r1, #255	; 0xff
4001f7a4:	e3500010 	cmp	r0, #16
4001f7a8:	baffffef 	blt	4001f76c <CyU3PUibSocketInit+0x8>
4001f7ac:	e3a00000 	mov	r0, #0
4001f7b0:	ea00000d 	b	4001f7ec <CyU3PUibSocketInit+0x88>
4001f7b4:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f7b8:	e59f203c 	ldr	r2, [pc, #60]	; 4001f7fc <CyU3PUibSocketInit+0x98>
4001f7bc:	e0822380 	add	r2, r2, r0, lsl #7
4001f7c0:	e582100c 	str	r1, [r2, #12]
4001f7c4:	e3e01000 	mvn	r1, #0
4001f7c8:	e59f202c 	ldr	r2, [pc, #44]	; 4001f7fc <CyU3PUibSocketInit+0x98>
4001f7cc:	e0822380 	add	r2, r2, r0, lsl #7
4001f7d0:	e5821010 	str	r1, [r2, #16]
4001f7d4:	e3a01000 	mov	r1, #0
4001f7d8:	e59f201c 	ldr	r2, [pc, #28]	; 4001f7fc <CyU3PUibSocketInit+0x98>
4001f7dc:	e0822380 	add	r2, r2, r0, lsl #7
4001f7e0:	e5821014 	str	r1, [r2, #20]
4001f7e4:	e2801001 	add	r1, r0, #1
4001f7e8:	e20100ff 	and	r0, r1, #255	; 0xff
4001f7ec:	e3500010 	cmp	r0, #16
4001f7f0:	baffffef 	blt	4001f7b4 <CyU3PUibSocketInit+0x50>
4001f7f4:	e12fff1e 	bx	lr
4001f7f8:	e0038000 	.word	0xe0038000
4001f7fc:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f800 <CyU3PUibStatusTimerCb>:
4001f800:	e92d4010 	push	{r4, lr}
4001f804:	e1a04000 	mov	r4, r0
4001f808:	e59f0050 	ldr	r0, [pc, #80]	; 4001f860 <CyU3PUibStatusTimerCb+0x60>
4001f80c:	e5900000 	ldr	r0, [r0]
4001f810:	e3500000 	cmp	r0, #0
4001f814:	0a000010 	beq	4001f85c <CyU3PUibStatusTimerCb+0x5c>
4001f818:	e59f0044 	ldr	r0, [pc, #68]	; 4001f864 <CyU3PUibStatusTimerCb+0x64>
4001f81c:	e5d00009 	ldrb	r0, [r0, #9]
4001f820:	e3500003 	cmp	r0, #3
4001f824:	1a00000c 	bne	4001f85c <CyU3PUibStatusTimerCb+0x5c>
4001f828:	e59f0038 	ldr	r0, [pc, #56]	; 4001f868 <CyU3PUibStatusTimerCb+0x68>
4001f82c:	e5900000 	ldr	r0, [r0]
4001f830:	e3500000 	cmp	r0, #0
4001f834:	0a000008 	beq	4001f85c <CyU3PUibStatusTimerCb+0x5c>
4001f838:	e3a01000 	mov	r1, #0
4001f83c:	e1a00001 	mov	r0, r1
4001f840:	ebfff77c 	bl	4001d638 <CyU3PUsbSendErdy>
4001f844:	e3a02000 	mov	r2, #0
4001f848:	e3a01064 	mov	r1, #100	; 0x64
4001f84c:	e59f0018 	ldr	r0, [pc, #24]	; 4001f86c <CyU3PUibStatusTimerCb+0x6c>
4001f850:	ebffac66 	bl	4000a9f0 <_txe_timer_change>
4001f854:	e59f0010 	ldr	r0, [pc, #16]	; 4001f86c <CyU3PUibStatusTimerCb+0x6c>
4001f858:	ebffac54 	bl	4000a9b0 <_txe_timer_activate>
4001f85c:	e8bd8010 	pop	{r4, pc}
4001f860:	40030dcc 	.word	0x40030dcc
4001f864:	40031d40 	.word	0x40031d40
4001f868:	40030dd0 	.word	0x40030dd0
4001f86c:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001f870 <CyU3PUibThreadEntry>:
4001f870:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001f874:	e3a05000 	mov	r5, #0
4001f878:	e59f505c 	ldr	r5, [pc, #92]	; 4001f8dc <CyU3PUibThreadEntry+0x6c>
4001f87c:	e3a00001 	mov	r0, #1
4001f880:	e59f1058 	ldr	r1, [pc, #88]	; 4001f8e0 <CyU3PUibThreadEntry+0x70>
4001f884:	e5810000 	str	r0, [r1]
4001f888:	e3a02020 	mov	r2, #32
4001f88c:	e3a01000 	mov	r1, #0
4001f890:	e59f004c 	ldr	r0, [pc, #76]	; 4001f8e4 <CyU3PUibThreadEntry+0x74>
4001f894:	ebff8f87 	bl	400036b8 <CyU3PMemSet>
4001f898:	ea00000e 	b	4001f8d8 <CyU3PUibThreadEntry+0x68>
4001f89c:	e3e03000 	mvn	r3, #0
4001f8a0:	e58d3000 	str	r3, [sp]
4001f8a4:	e28d3004 	add	r3, sp, #4
4001f8a8:	e3a02001 	mov	r2, #1
4001f8ac:	e1a01005 	mov	r1, r5
4001f8b0:	e59f0030 	ldr	r0, [pc, #48]	; 4001f8e8 <CyU3PUibThreadEntry+0x78>
4001f8b4:	ebffa937 	bl	40009d98 <_txe_event_flags_get>
4001f8b8:	e1a04000 	mov	r4, r0
4001f8bc:	e3540000 	cmp	r4, #0
4001f8c0:	0a000000 	beq	4001f8c8 <CyU3PUibThreadEntry+0x58>
4001f8c4:	ea000003 	b	4001f8d8 <CyU3PUibThreadEntry+0x68>
4001f8c8:	e59d0004 	ldr	r0, [sp, #4]
4001f8cc:	eb0002a1 	bl	40020358 <CyU3PUsbHandleEvents>
4001f8d0:	ebffac19 	bl	4000a93c <_txe_thread_relinquish>
4001f8d4:	e1a00000 	nop			; (mov r0, r0)
4001f8d8:	eaffffef 	b	4001f89c <CyU3PUibThreadEntry+0x2c>
4001f8dc:	073fbfe1 	.word	0x073fbfe1
4001f8e0:	40030d7c 	.word	0x40030d7c
4001f8e4:	40032680 	.word	0x40032680
4001f8e8:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001f8ec <CyU3PUibVbusChangeHandler>:
4001f8ec:	e92d4010 	push	{r4, lr}
4001f8f0:	e3a00000 	mov	r0, #0
4001f8f4:	e59f114c 	ldr	r1, [pc, #332]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f8f8:	e5810060 	str	r0, [r1, #96]	; 0x60
4001f8fc:	e59f0148 	ldr	r0, [pc, #328]	; 4001fa4c <CyU3PUibVbusChangeHandler+0x160>
4001f900:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f904:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f908:	e1100001 	tst	r0, r1
4001f90c:	0a00000b 	beq	4001f940 <CyU3PUibVbusChangeHandler+0x54>
4001f910:	e3a00002 	mov	r0, #2
4001f914:	eb000051 	bl	4001fa60 <CyU3PUsbAddToEventLog>
4001f918:	e59f0130 	ldr	r0, [pc, #304]	; 4001fa50 <CyU3PUibVbusChangeHandler+0x164>
4001f91c:	e5900000 	ldr	r0, [r0]
4001f920:	e3500000 	cmp	r0, #0
4001f924:	0a000010 	beq	4001f96c <CyU3PUibVbusChangeHandler+0x80>
4001f928:	e3a01000 	mov	r1, #0
4001f92c:	e3a0000b 	mov	r0, #11
4001f930:	e59f2118 	ldr	r2, [pc, #280]	; 4001fa50 <CyU3PUibVbusChangeHandler+0x164>
4001f934:	e5922000 	ldr	r2, [r2]
4001f938:	e12fff32 	blx	r2
4001f93c:	ea00000a 	b	4001f96c <CyU3PUibVbusChangeHandler+0x80>
4001f940:	e3a00001 	mov	r0, #1
4001f944:	eb000045 	bl	4001fa60 <CyU3PUsbAddToEventLog>
4001f948:	e59f0100 	ldr	r0, [pc, #256]	; 4001fa50 <CyU3PUibVbusChangeHandler+0x164>
4001f94c:	e5900000 	ldr	r0, [r0]
4001f950:	e3500000 	cmp	r0, #0
4001f954:	0a000004 	beq	4001f96c <CyU3PUibVbusChangeHandler+0x80>
4001f958:	e3a01000 	mov	r1, #0
4001f95c:	e3a0000c 	mov	r0, #12
4001f960:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fa50 <CyU3PUibVbusChangeHandler+0x164>
4001f964:	e5922000 	ldr	r2, [r2]
4001f968:	e12fff32 	blx	r2
4001f96c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fa4c <CyU3PUibVbusChangeHandler+0x160>
4001f970:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f974:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f978:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f97c:	e1100001 	tst	r0, r1
4001f980:	0a000022 	beq	4001fa10 <CyU3PUibVbusChangeHandler+0x124>
4001f984:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f988:	e5d00008 	ldrb	r0, [r0, #8]
4001f98c:	e3500005 	cmp	r0, #5
4001f990:	ba000000 	blt	4001f998 <CyU3PUibVbusChangeHandler+0xac>
4001f994:	eb0008d6 	bl	40021cf4 <HandleVbusOffEvent>
4001f998:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f99c:	e5d00008 	ldrb	r0, [r0, #8]
4001f9a0:	e3500004 	cmp	r0, #4
4001f9a4:	1a00001e 	bne	4001fa24 <CyU3PUibVbusChangeHandler+0x138>
4001f9a8:	e59f0098 	ldr	r0, [pc, #152]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f9ac:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f9b0:	e59f1090 	ldr	r1, [pc, #144]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f9b4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001f9b8:	e2810000 	add	r0, r1, #0
4001f9bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f9c0:	e3500000 	cmp	r0, #0
4001f9c4:	0a00000a 	beq	4001f9f4 <CyU3PUibVbusChangeHandler+0x108>
4001f9c8:	e3a00000 	mov	r0, #0
4001f9cc:	e59f1080 	ldr	r1, [pc, #128]	; 4001fa54 <CyU3PUibVbusChangeHandler+0x168>
4001f9d0:	e5810014 	str	r0, [r1, #20]
4001f9d4:	e59f107c 	ldr	r1, [pc, #124]	; 4001fa58 <CyU3PUibVbusChangeHandler+0x16c>
4001f9d8:	e5810000 	str	r0, [r1]
4001f9dc:	e59f1078 	ldr	r1, [pc, #120]	; 4001fa5c <CyU3PUibVbusChangeHandler+0x170>
4001f9e0:	e5810000 	str	r0, [r1]
4001f9e4:	e59f105c 	ldr	r1, [pc, #92]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f9e8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001f9ec:	e5810050 	str	r0, [r1, #80]	; 0x50
4001f9f0:	e5810058 	str	r0, [r1, #88]	; 0x58
4001f9f4:	e59f104c 	ldr	r1, [pc, #76]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001f9f8:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001f9fc:	ebfff593 	bl	4001d050 <CyU3PUsbPhyEnable>
4001fa00:	e3a00005 	mov	r0, #5
4001fa04:	e59f103c 	ldr	r1, [pc, #60]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001fa08:	e5c10008 	strb	r0, [r1, #8]
4001fa0c:	ea000004 	b	4001fa24 <CyU3PUibVbusChangeHandler+0x138>
4001fa10:	e59f0030 	ldr	r0, [pc, #48]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001fa14:	e5d00008 	ldrb	r0, [r0, #8]
4001fa18:	e3500005 	cmp	r0, #5
4001fa1c:	ba000000 	blt	4001fa24 <CyU3PUibVbusChangeHandler+0x138>
4001fa20:	eb0008b3 	bl	40021cf4 <HandleVbusOffEvent>
4001fa24:	ebfff0df 	bl	4001bda8 <CyU3POtgIsStarted>
4001fa28:	e3500000 	cmp	r0, #0
4001fa2c:	0a000000 	beq	4001fa34 <CyU3PUibVbusChangeHandler+0x148>
4001fa30:	ebfff4e3 	bl	4001cdc4 <CyU3PUsbOtgVbusChangeHandler>
4001fa34:	e59f000c 	ldr	r0, [pc, #12]	; 4001fa48 <CyU3PUibVbusChangeHandler+0x15c>
4001fa38:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fa3c:	e59f1008 	ldr	r1, [pc, #8]	; 4001fa4c <CyU3PUibVbusChangeHandler+0x160>
4001fa40:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fa44:	e8bd8010 	pop	{r4, pc}
4001fa48:	40031d40 	.word	0x40031d40
4001fa4c:	e0051000 	.word	0xe0051000
4001fa50:	40030db8 	.word	0x40030db8
4001fa54:	e0033000 	.word	0xe0033000
4001fa58:	40030da0 	.word	0x40030da0
4001fa5c:	40030da4 	.word	0x40030da4

Disassembly of section i.CyU3PUsbAddToEventLog:

4001fa60 <CyU3PUsbAddToEventLog>:
4001fa60:	e59f1058 	ldr	r1, [pc, #88]	; 4001fac0 <CyU3PUsbAddToEventLog+0x60>
4001fa64:	e5911000 	ldr	r1, [r1]
4001fa68:	e3510000 	cmp	r1, #0
4001fa6c:	0a000012 	beq	4001fabc <CyU3PUsbAddToEventLog+0x5c>
4001fa70:	e59f104c 	ldr	r1, [pc, #76]	; 4001fac4 <CyU3PUsbAddToEventLog+0x64>
4001fa74:	e5911000 	ldr	r1, [r1]
4001fa78:	e59f2044 	ldr	r2, [pc, #68]	; 4001fac4 <CyU3PUsbAddToEventLog+0x64>
4001fa7c:	e5922000 	ldr	r2, [r2]
4001fa80:	e2822001 	add	r2, r2, #1
4001fa84:	e59f3038 	ldr	r3, [pc, #56]	; 4001fac4 <CyU3PUsbAddToEventLog+0x64>
4001fa88:	e5832000 	str	r2, [r3]
4001fa8c:	e59f202c 	ldr	r2, [pc, #44]	; 4001fac0 <CyU3PUsbAddToEventLog+0x60>
4001fa90:	e5922000 	ldr	r2, [r2]
4001fa94:	e7c20001 	strb	r0, [r2, r1]
4001fa98:	e2831000 	add	r1, r3, #0
4001fa9c:	e5911000 	ldr	r1, [r1]
4001faa0:	e59f2020 	ldr	r2, [pc, #32]	; 4001fac8 <CyU3PUsbAddToEventLog+0x68>
4001faa4:	e5922000 	ldr	r2, [r2]
4001faa8:	e1510002 	cmp	r1, r2
4001faac:	3a000002 	bcc	4001fabc <CyU3PUsbAddToEventLog+0x5c>
4001fab0:	e3a01000 	mov	r1, #0
4001fab4:	e2832000 	add	r2, r3, #0
4001fab8:	e5821000 	str	r1, [r2]
4001fabc:	e12fff1e 	bx	lr
4001fac0:	40030dac 	.word	0x40030dac
4001fac4:	40030db0 	.word	0x40030db0
4001fac8:	40030db4 	.word	0x40030db4

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001facc <CyU3PUsbCheckUsb3Disconnect>:
4001facc:	e92d4070 	push	{r4, r5, r6, lr}
4001fad0:	e3a04e19 	mov	r4, #400	; 0x190
4001fad4:	e3a06002 	mov	r6, #2
4001fad8:	e59f01fc 	ldr	r0, [pc, #508]	; 4001fcdc <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fadc:	e1d000b0 	ldrh	r0, [r0]
4001fae0:	e3500001 	cmp	r0, #1
4001fae4:	da000008 	ble	4001fb0c <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fae8:	e59f01ec 	ldr	r0, [pc, #492]	; 4001fcdc <CyU3PUsbCheckUsb3Disconnect+0x210>
4001faec:	e1d010b0 	ldrh	r1, [r0]
4001faf0:	e1a00004 	mov	r0, r4
4001faf4:	ebffc41d 	bl	40010b70 <__aeabi_idivmod>
4001faf8:	e1a04800 	lsl	r4, r0, #16
4001fafc:	e1a04824 	lsr	r4, r4, #16
4001fb00:	e2840001 	add	r0, r4, #1
4001fb04:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fb08:	e3a06001 	mov	r6, #1
4001fb0c:	e59f01cc 	ldr	r0, [pc, #460]	; 4001fce0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb10:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fb14:	e200503f 	and	r5, r0, #63	; 0x3f
4001fb18:	e3550010 	cmp	r5, #16
4001fb1c:	ba000004 	blt	4001fb34 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fb20:	e3550017 	cmp	r5, #23
4001fb24:	ca000002 	bgt	4001fb34 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fb28:	e3a00000 	mov	r0, #0
4001fb2c:	e59f11b0 	ldr	r1, [pc, #432]	; 4001fce4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fb30:	e5810000 	str	r0, [r1]
4001fb34:	e59f01a8 	ldr	r0, [pc, #424]	; 4001fce4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fb38:	e5900000 	ldr	r0, [r0]
4001fb3c:	e3500000 	cmp	r0, #0
4001fb40:	1a000000 	bne	4001fb48 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fb44:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fb48:	ea000010 	b	4001fb90 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fb4c:	e1a00006 	mov	r0, r6
4001fb50:	ebffa3c8 	bl	40008a78 <_tx_thread_sleep>
4001fb54:	e59f0184 	ldr	r0, [pc, #388]	; 4001fce0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb58:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fb5c:	e200503f 	and	r5, r0, #63	; 0x3f
4001fb60:	e59f017c 	ldr	r0, [pc, #380]	; 4001fce4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fb64:	e5900000 	ldr	r0, [r0]
4001fb68:	e3500000 	cmp	r0, #0
4001fb6c:	0a000003 	beq	4001fb80 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fb70:	e3550010 	cmp	r5, #16
4001fb74:	ba000005 	blt	4001fb90 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fb78:	e3550017 	cmp	r5, #23
4001fb7c:	ca000003 	bgt	4001fb90 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fb80:	e3a00000 	mov	r0, #0
4001fb84:	e59f1158 	ldr	r1, [pc, #344]	; 4001fce4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fb88:	e5810000 	str	r0, [r1]
4001fb8c:	ea000004 	b	4001fba4 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fb90:	e1b00004 	movs	r0, r4
4001fb94:	e2441001 	sub	r1, r4, #1
4001fb98:	e1a04801 	lsl	r4, r1, #16
4001fb9c:	e1a04824 	lsr	r4, r4, #16
4001fba0:	1affffe9 	bne	4001fb4c <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fba4:	e1a00000 	nop			; (mov r0, r0)
4001fba8:	e59f0134 	ldr	r0, [pc, #308]	; 4001fce4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fbac:	e5900000 	ldr	r0, [r0]
4001fbb0:	e3500000 	cmp	r0, #0
4001fbb4:	0a000047 	beq	4001fcd8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fbb8:	e59f0128 	ldr	r0, [pc, #296]	; 4001fce8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fbbc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fbc0:	e3100a02 	tst	r0, #8192	; 0x2000
4001fbc4:	0a000020 	beq	4001fc4c <CyU3PUsbCheckUsb3Disconnect+0x180>
4001fbc8:	e59f0118 	ldr	r0, [pc, #280]	; 4001fce8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fbcc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fbd0:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fbd4:	e59f110c 	ldr	r1, [pc, #268]	; 4001fce8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fbd8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fbdc:	e3a00002 	mov	r0, #2
4001fbe0:	ebffce52 	bl	40013530 <CyU3PBusyWait>
4001fbe4:	e59f0100 	ldr	r0, [pc, #256]	; 4001fcec <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fbe8:	e5900004 	ldr	r0, [r0, #4]
4001fbec:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fbf0:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fcec <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fbf4:	e5810004 	str	r0, [r1, #4]
4001fbf8:	e3a00001 	mov	r0, #1
4001fbfc:	ebffce4b 	bl	40013530 <CyU3PBusyWait>
4001fc00:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fce0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fc04:	e590001c 	ldr	r0, [r0, #28]
4001fc08:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fc0c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fce0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fc10:	e581001c 	str	r0, [r1, #28]
4001fc14:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fcf0 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001fc18:	e5900000 	ldr	r0, [r0]
4001fc1c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fc20:	e3a00001 	mov	r0, #1
4001fc24:	ebffce41 	bl	40013530 <CyU3PBusyWait>
4001fc28:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fcec <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fc2c:	e5900004 	ldr	r0, [r0, #4]
4001fc30:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fc34:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fcec <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fc38:	e5810004 	str	r0, [r1, #4]
4001fc3c:	e3a01000 	mov	r1, #0
4001fc40:	e3a00002 	mov	r0, #2
4001fc44:	ebfff1d9 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001fc48:	ea000022 	b	4001fcd8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fc4c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fcf4 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fc50:	e5900000 	ldr	r0, [r0]
4001fc54:	e3500000 	cmp	r0, #0
4001fc58:	0a000007 	beq	4001fc7c <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fc5c:	e3a00000 	mov	r0, #0
4001fc60:	e59f108c 	ldr	r1, [pc, #140]	; 4001fcf4 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fc64:	e5810000 	str	r0, [r1]
4001fc68:	e3a00001 	mov	r0, #1
4001fc6c:	ebfff481 	bl	4001ce78 <CyU3PUsbPhyDisable>
4001fc70:	e3a00001 	mov	r0, #1
4001fc74:	ebfff4f5 	bl	4001d050 <CyU3PUsbPhyEnable>
4001fc78:	eaffffb1 	b	4001fb44 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fc7c:	e59f0074 	ldr	r0, [pc, #116]	; 4001fcf8 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fc80:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fc84:	e3500000 	cmp	r0, #0
4001fc88:	0a000011 	beq	4001fcd4 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fc8c:	e3a00001 	mov	r0, #1
4001fc90:	ebfff478 	bl	4001ce78 <CyU3PUsbPhyDisable>
4001fc94:	e3a00003 	mov	r0, #3
4001fc98:	e59f1058 	ldr	r1, [pc, #88]	; 4001fcf8 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fc9c:	e5c10008 	strb	r0, [r1, #8]
4001fca0:	e3a00000 	mov	r0, #0
4001fca4:	e5c10009 	strb	r0, [r1, #9]
4001fca8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fcac:	e59f0048 	ldr	r0, [pc, #72]	; 4001fcfc <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fcb0:	e5900000 	ldr	r0, [r0]
4001fcb4:	e3500000 	cmp	r0, #0
4001fcb8:	0a000006 	beq	4001fcd8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fcbc:	e3a01000 	mov	r1, #0
4001fcc0:	e3a00014 	mov	r0, #20
4001fcc4:	e59f2030 	ldr	r2, [pc, #48]	; 4001fcfc <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fcc8:	e5922000 	ldr	r2, [r2]
4001fccc:	e12fff32 	blx	r2
4001fcd0:	ea000000 	b	4001fcd8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fcd4:	eb00008e 	bl	4001ff14 <CyU3PUsbFallBackToUsb2>
4001fcd8:	eaffff99 	b	4001fb44 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fcdc:	40030dd4 	.word	0x40030dd4
4001fce0:	e0033000 	.word	0xe0033000
4001fce4:	40030d80 	.word	0x40030d80
4001fce8:	e0031000 	.word	0xe0031000
4001fcec:	e0030000 	.word	0xe0030000
4001fcf0:	40030c74 	.word	0x40030c74
4001fcf4:	40030d90 	.word	0x40030d90
4001fcf8:	40031d40 	.word	0x40031d40
4001fcfc:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbDescInit:

4001fd00 <CyU3PUsbDescInit>:
4001fd00:	e92d4010 	push	{r4, lr}
4001fd04:	e3a02074 	mov	r2, #116	; 0x74
4001fd08:	e3a01000 	mov	r1, #0
4001fd0c:	e59f0004 	ldr	r0, [pc, #4]	; 4001fd18 <CyU3PUsbDescInit+0x18>
4001fd10:	ebff8e68 	bl	400036b8 <CyU3PMemSet>
4001fd14:	e8bd8010 	pop	{r4, pc}
4001fd18:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

4001fd1c <CyU3PUsbEpPrepare>:
4001fd1c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fd20:	e1a04000 	mov	r4, r0
4001fd24:	e3a05001 	mov	r5, #1
4001fd28:	ea000061 	b	4001feb4 <CyU3PUsbEpPrepare+0x198>
4001fd2c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001feec <CyU3PUsbEpPrepare+0x1d0>
4001fd30:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd34:	e3100901 	tst	r0, #16384	; 0x4000
4001fd38:	0a000029 	beq	4001fde4 <CyU3PUsbEpPrepare+0xc8>
4001fd3c:	e0850085 	add	r0, r5, r5, lsl #1
4001fd40:	e59f11a8 	ldr	r1, [pc, #424]	; 4001fef0 <CyU3PUsbEpPrepare+0x1d4>
4001fd44:	e0810100 	add	r0, r1, r0, lsl #2
4001fd48:	e1d070b0 	ldrh	r7, [r0]
4001fd4c:	e59f0198 	ldr	r0, [pc, #408]	; 4001feec <CyU3PUsbEpPrepare+0x1d0>
4001fd50:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd54:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fd58:	e1a06520 	lsr	r6, r0, #10
4001fd5c:	e2440001 	sub	r0, r4, #1
4001fd60:	e0800080 	add	r0, r0, r0, lsl #1
4001fd64:	e59f1188 	ldr	r1, [pc, #392]	; 4001fef4 <CyU3PUsbEpPrepare+0x1d8>
4001fd68:	e0810100 	add	r0, r1, r0, lsl #2
4001fd6c:	e2461001 	sub	r1, r6, #1
4001fd70:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fd74:	e1570008 	cmp	r7, r8
4001fd78:	8a000001 	bhi	4001fd84 <CyU3PUsbEpPrepare+0x68>
4001fd7c:	e3570000 	cmp	r7, #0
4001fd80:	1a000000 	bne	4001fd88 <CyU3PUsbEpPrepare+0x6c>
4001fd84:	e1a07008 	mov	r7, r8
4001fd88:	e3540003 	cmp	r4, #3
4001fd8c:	1a000005 	bne	4001fda8 <CyU3PUsbEpPrepare+0x8c>
4001fd90:	e59f0160 	ldr	r0, [pc, #352]	; 4001fef8 <CyU3PUsbEpPrepare+0x1dc>
4001fd94:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd98:	e3800001 	orr	r0, r0, #1
4001fd9c:	e59f1154 	ldr	r1, [pc, #340]	; 4001fef8 <CyU3PUsbEpPrepare+0x1dc>
4001fda0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fda4:	ea000008 	b	4001fdcc <CyU3PUsbEpPrepare+0xb0>
4001fda8:	e59f013c 	ldr	r0, [pc, #316]	; 4001feec <CyU3PUsbEpPrepare+0x1d0>
4001fdac:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fdb0:	e1a00520 	lsr	r0, r0, #10
4001fdb4:	e1a00500 	lsl	r0, r0, #10
4001fdb8:	e1a01b07 	lsl	r1, r7, #22
4001fdbc:	e1a01b21 	lsr	r1, r1, #22
4001fdc0:	e1800001 	orr	r0, r0, r1
4001fdc4:	e59f1120 	ldr	r1, [pc, #288]	; 4001feec <CyU3PUsbEpPrepare+0x1d0>
4001fdc8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fdcc:	e59f0128 	ldr	r0, [pc, #296]	; 4001fefc <CyU3PUsbEpPrepare+0x1e0>
4001fdd0:	e7807105 	str	r7, [r0, r5, lsl #2]
4001fdd4:	e3850080 	orr	r0, r5, #128	; 0x80
4001fdd8:	e3a02001 	mov	r2, #1
4001fddc:	e3a01000 	mov	r1, #0
4001fde0:	ebfff7c9 	bl	4001dd0c <CyU3PUsbStall>
4001fde4:	e59f0114 	ldr	r0, [pc, #276]	; 4001ff00 <CyU3PUsbEpPrepare+0x1e4>
4001fde8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fdec:	e3100901 	tst	r0, #16384	; 0x4000
4001fdf0:	0a00002d 	beq	4001feac <CyU3PUsbEpPrepare+0x190>
4001fdf4:	e0850085 	add	r0, r5, r5, lsl #1
4001fdf8:	e59f1104 	ldr	r1, [pc, #260]	; 4001ff04 <CyU3PUsbEpPrepare+0x1e8>
4001fdfc:	e0810100 	add	r0, r1, r0, lsl #2
4001fe00:	e1d070b0 	ldrh	r7, [r0]
4001fe04:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ff00 <CyU3PUsbEpPrepare+0x1e4>
4001fe08:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe0c:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fe10:	e1a06520 	lsr	r6, r0, #10
4001fe14:	e2440001 	sub	r0, r4, #1
4001fe18:	e0800080 	add	r0, r0, r0, lsl #1
4001fe1c:	e59f10d0 	ldr	r1, [pc, #208]	; 4001fef4 <CyU3PUsbEpPrepare+0x1d8>
4001fe20:	e0810100 	add	r0, r1, r0, lsl #2
4001fe24:	e2461001 	sub	r1, r6, #1
4001fe28:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fe2c:	e1570008 	cmp	r7, r8
4001fe30:	8a000001 	bhi	4001fe3c <CyU3PUsbEpPrepare+0x120>
4001fe34:	e3570000 	cmp	r7, #0
4001fe38:	1a000000 	bne	4001fe40 <CyU3PUsbEpPrepare+0x124>
4001fe3c:	e1a07008 	mov	r7, r8
4001fe40:	e3540003 	cmp	r4, #3
4001fe44:	1a000005 	bne	4001fe60 <CyU3PUsbEpPrepare+0x144>
4001fe48:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ff08 <CyU3PUsbEpPrepare+0x1ec>
4001fe4c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe50:	e3800001 	orr	r0, r0, #1
4001fe54:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ff08 <CyU3PUsbEpPrepare+0x1ec>
4001fe58:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fe5c:	ea000008 	b	4001fe84 <CyU3PUsbEpPrepare+0x168>
4001fe60:	e59f0098 	ldr	r0, [pc, #152]	; 4001ff00 <CyU3PUsbEpPrepare+0x1e4>
4001fe64:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe68:	e1a00520 	lsr	r0, r0, #10
4001fe6c:	e1a00500 	lsl	r0, r0, #10
4001fe70:	e1a01b07 	lsl	r1, r7, #22
4001fe74:	e1a01b21 	lsr	r1, r1, #22
4001fe78:	e1800001 	orr	r0, r0, r1
4001fe7c:	e59f107c 	ldr	r1, [pc, #124]	; 4001ff00 <CyU3PUsbEpPrepare+0x1e4>
4001fe80:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fe84:	e59f0080 	ldr	r0, [pc, #128]	; 4001ff0c <CyU3PUsbEpPrepare+0x1f0>
4001fe88:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fe8c:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001fe90:	e1800007 	orr	r0, r0, r7
4001fe94:	e59f1070 	ldr	r1, [pc, #112]	; 4001ff0c <CyU3PUsbEpPrepare+0x1f0>
4001fe98:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fe9c:	e3a02001 	mov	r2, #1
4001fea0:	e3a01000 	mov	r1, #0
4001fea4:	e1a00005 	mov	r0, r5
4001fea8:	ebfff797 	bl	4001dd0c <CyU3PUsbStall>
4001feac:	e2850001 	add	r0, r5, #1
4001feb0:	e20050ff 	and	r5, r0, #255	; 0xff
4001feb4:	e3550010 	cmp	r5, #16
4001feb8:	baffff9b 	blt	4001fd2c <CyU3PUsbEpPrepare+0x10>
4001febc:	e3540003 	cmp	r4, #3
4001fec0:	1a000005 	bne	4001fedc <CyU3PUsbEpPrepare+0x1c0>
4001fec4:	e59f1044 	ldr	r1, [pc, #68]	; 4001ff10 <CyU3PUsbEpPrepare+0x1f4>
4001fec8:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4001fecc:	e3510000 	cmp	r1, #0
4001fed0:	0a000001 	beq	4001fedc <CyU3PUsbEpPrepare+0x1c0>
4001fed4:	e3a01001 	mov	r1, #1
4001fed8:	ea000000 	b	4001fee0 <CyU3PUsbEpPrepare+0x1c4>
4001fedc:	e3a01000 	mov	r1, #0
4001fee0:	e1a00001 	mov	r0, r1
4001fee4:	eb000854 	bl	4002203c <CyFx3UsbDmaPrefetchEnable>
4001fee8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001feec:	e0031418 	.word	0xe0031418
4001fef0:	40031bb8 	.word	0x40031bb8
4001fef4:	40011e78 	.word	0x40011e78
4001fef8:	e0033500 	.word	0xe0033500
4001fefc:	e0031c40 	.word	0xe0031c40
4001ff00:	e0031498 	.word	0xe0031498
4001ff04:	40031c78 	.word	0x40031c78
4001ff08:	e0033600 	.word	0xe0033600
4001ff0c:	e0031c80 	.word	0xe0031c80
4001ff10:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

4001ff14 <CyU3PUsbFallBackToUsb2>:
4001ff14:	e92d4010 	push	{r4, lr}
4001ff18:	e59f0234 	ldr	r0, [pc, #564]	; 40020154 <CyU3PUsbFallBackToUsb2+0x240>
4001ff1c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ff20:	e3500000 	cmp	r0, #0
4001ff24:	0a000006 	beq	4001ff44 <CyU3PUsbFallBackToUsb2+0x30>
4001ff28:	e59f0228 	ldr	r0, [pc, #552]	; 40020158 <CyU3PUsbFallBackToUsb2+0x244>
4001ff2c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ff30:	e59f121c 	ldr	r1, [pc, #540]	; 40020154 <CyU3PUsbFallBackToUsb2+0x240>
4001ff34:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ff38:	e1100001 	tst	r0, r1
4001ff3c:	1a000000 	bne	4001ff44 <CyU3PUsbFallBackToUsb2+0x30>
4001ff40:	e8bd8010 	pop	{r4, pc}
4001ff44:	e3a00050 	mov	r0, #80	; 0x50
4001ff48:	ebfffec4 	bl	4001fa60 <CyU3PUsbAddToEventLog>
4001ff4c:	eb0007f1 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
4001ff50:	e1a04000 	mov	r4, r0
4001ff54:	e3a01000 	mov	r1, #0
4001ff58:	e59f01fc 	ldr	r0, [pc, #508]	; 4002015c <CyU3PUsbFallBackToUsb2+0x248>
4001ff5c:	eb000861 	bl	400220e8 <CyFx3UsbWritePhyReg>
4001ff60:	e1a00004 	mov	r0, r4
4001ff64:	eb0007f9 	bl	40021f50 <CyU3PVicEnableInterrupts>
4001ff68:	e3a00a01 	mov	r0, #4096	; 0x1000
4001ff6c:	e59f11ec 	ldr	r1, [pc, #492]	; 40020160 <CyU3PUsbFallBackToUsb2+0x24c>
4001ff70:	e5810054 	str	r0, [r1, #84]	; 0x54
4001ff74:	e59f01d8 	ldr	r0, [pc, #472]	; 40020154 <CyU3PUsbFallBackToUsb2+0x240>
4001ff78:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4001ff7c:	e2800001 	add	r0, r0, #1
4001ff80:	e59f11cc 	ldr	r1, [pc, #460]	; 40020154 <CyU3PUsbFallBackToUsb2+0x240>
4001ff84:	e5810058 	str	r0, [r1, #88]	; 0x58
4001ff88:	e3a00000 	mov	r0, #0
4001ff8c:	e59f11d0 	ldr	r1, [pc, #464]	; 40020164 <CyU3PUsbFallBackToUsb2+0x250>
4001ff90:	e5810000 	str	r0, [r1]
4001ff94:	e59f01cc 	ldr	r0, [pc, #460]	; 40020168 <CyU3PUsbFallBackToUsb2+0x254>
4001ff98:	ebffab28 	bl	4000ac40 <_txe_timer_deactivate>
4001ff9c:	e3a00002 	mov	r0, #2
4001ffa0:	ebffcd62 	bl	40013530 <CyU3PBusyWait>
4001ffa4:	e3a01002 	mov	r1, #2
4001ffa8:	e1a00001 	mov	r0, r1
4001ffac:	ebfff0ff 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4001ffb0:	e3a00002 	mov	r0, #2
4001ffb4:	ebffcd5d 	bl	40013530 <CyU3PBusyWait>
4001ffb8:	e59f01ac 	ldr	r0, [pc, #428]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4001ffbc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ffc0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ffc4:	e59f11a0 	ldr	r1, [pc, #416]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4001ffc8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ffcc:	e3a00002 	mov	r0, #2
4001ffd0:	ebffcd56 	bl	40013530 <CyU3PBusyWait>
4001ffd4:	e59f0190 	ldr	r0, [pc, #400]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4001ffd8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ffdc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001ffe0:	e59f1184 	ldr	r1, [pc, #388]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4001ffe4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ffe8:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001ffec:	e5900004 	ldr	r0, [r0, #4]
4001fff0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fff4:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001fff8:	e5810004 	str	r0, [r1, #4]
4001fffc:	e2810a03 	add	r0, r1, #12288	; 0x3000
40020000:	e590001c 	ldr	r0, [r0, #28]
40020004:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020008:	e2811a03 	add	r1, r1, #12288	; 0x3000
4002000c:	e581001c 	str	r0, [r1, #28]
40020010:	e59f0158 	ldr	r0, [pc, #344]	; 40020170 <CyU3PUsbFallBackToUsb2+0x25c>
40020014:	e5900000 	ldr	r0, [r0]
40020018:	e581002c 	str	r0, [r1, #44]	; 0x2c
4002001c:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
40020020:	e5900000 	ldr	r0, [r0]
40020024:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40020028:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
4002002c:	e5810000 	str	r0, [r1]
40020030:	e3a00005 	mov	r0, #5
40020034:	ebffcd3d 	bl	40013530 <CyU3PBusyWait>
40020038:	e59f0134 	ldr	r0, [pc, #308]	; 40020174 <CyU3PUsbFallBackToUsb2+0x260>
4002003c:	e5900000 	ldr	r0, [r0]
40020040:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40020044:	e59f1128 	ldr	r1, [pc, #296]	; 40020174 <CyU3PUsbFallBackToUsb2+0x260>
40020048:	e5810000 	str	r0, [r1]
4002004c:	e3a0000a 	mov	r0, #10
40020050:	ebffcd36 	bl	40013530 <CyU3PBusyWait>
40020054:	e3e00000 	mvn	r0, #0
40020058:	e59f110c 	ldr	r1, [pc, #268]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4002005c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020060:	e5810524 	str	r0, [r1, #1316]	; 0x524
40020064:	e5810810 	str	r0, [r1, #2064]	; 0x810
40020068:	e59f0108 	ldr	r0, [pc, #264]	; 40020178 <CyU3PUsbFallBackToUsb2+0x264>
4002006c:	ebffd869 	bl	40016218 <CyU3PDmaChannelReset>
40020070:	e59f0104 	ldr	r0, [pc, #260]	; 4002017c <CyU3PUsbFallBackToUsb2+0x268>
40020074:	ebffd867 	bl	40016218 <CyU3PDmaChannelReset>
40020078:	e3a00000 	mov	r0, #0
4002007c:	e59f10dc 	ldr	r1, [pc, #220]	; 40020160 <CyU3PUsbFallBackToUsb2+0x24c>
40020080:	e5810008 	str	r0, [r1, #8]
40020084:	e3e00000 	mvn	r0, #0
40020088:	e5810004 	str	r0, [r1, #4]
4002008c:	e3a00000 	mov	r0, #0
40020090:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020094:	e3e00000 	mvn	r0, #0
40020098:	e5810404 	str	r0, [r1, #1028]	; 0x404
4002009c:	e1c10820 	bic	r0, r1, r0, lsr #16
400200a0:	e5900004 	ldr	r0, [r0, #4]
400200a4:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400200a8:	e2411a03 	sub	r1, r1, #12288	; 0x3000
400200ac:	e5810004 	str	r0, [r1, #4]
400200b0:	e2810a01 	add	r0, r1, #4096	; 0x1000
400200b4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
400200b8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
400200bc:	e2811a01 	add	r1, r1, #4096	; 0x1000
400200c0:	e5810418 	str	r0, [r1, #1048]	; 0x418
400200c4:	e1a00001 	mov	r0, r1
400200c8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
400200cc:	e3c00901 	bic	r0, r0, #16384	; 0x4000
400200d0:	e5810498 	str	r0, [r1, #1176]	; 0x498
400200d4:	e3a00001 	mov	r0, #1
400200d8:	e59f1074 	ldr	r1, [pc, #116]	; 40020154 <CyU3PUsbFallBackToUsb2+0x240>
400200dc:	e5c10009 	strb	r0, [r1, #9]
400200e0:	e3a00000 	mov	r0, #0
400200e4:	e5810044 	str	r0, [r1, #68]	; 0x44
400200e8:	e3a00501 	mov	r0, #4194304	; 0x400000
400200ec:	e59f108c 	ldr	r1, [pc, #140]	; 40020180 <CyU3PUsbFallBackToUsb2+0x26c>
400200f0:	e5810074 	str	r0, [r1, #116]	; 0x74
400200f4:	e3a00002 	mov	r0, #2
400200f8:	ebffcd0c 	bl	40013530 <CyU3PBusyWait>
400200fc:	e59f0068 	ldr	r0, [pc, #104]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
40020100:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020104:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020108:	e59f105c 	ldr	r1, [pc, #92]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4002010c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020110:	e3a00064 	mov	r0, #100	; 0x64
40020114:	ebffcd05 	bl	40013530 <CyU3PBusyWait>
40020118:	eb0007a0 	bl	40021fa0 <CyFx3Usb2PhySetup>
4002011c:	e59f0060 	ldr	r0, [pc, #96]	; 40020184 <CyU3PUsbFallBackToUsb2+0x270>
40020120:	e59f1044 	ldr	r1, [pc, #68]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
40020124:	e5810008 	str	r0, [r1, #8]
40020128:	e3a00050 	mov	r0, #80	; 0x50
4002012c:	ebffccff 	bl	40013530 <CyU3PBusyWait>
40020130:	e3a01000 	mov	r1, #0
40020134:	e3a00002 	mov	r0, #2
40020138:	ebfff09c 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
4002013c:	e59f0028 	ldr	r0, [pc, #40]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
40020140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020144:	e3c00008 	bic	r0, r0, #8
40020148:	e59f101c 	ldr	r1, [pc, #28]	; 4002016c <CyU3PUsbFallBackToUsb2+0x258>
4002014c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020150:	eaffff7a 	b	4001ff40 <CyU3PUsbFallBackToUsb2+0x2c>
40020154:	40031d40 	.word	0x40031d40
40020158:	e0051000 	.word	0xe0051000
4002015c:	00001005 	.word	0x00001005
40020160:	e0033000 	.word	0xe0033000
40020164:	40030dcc 	.word	0x40030dcc
40020168:	400326a0 	.word	0x400326a0
4002016c:	e0031000 	.word	0xe0031000
40020170:	40030c74 	.word	0x40030c74
40020174:	e0050000 	.word	0xe0050000
40020178:	40031a78 	.word	0x40031a78
4002017c:	40031b18 	.word	0x40031b18
40020180:	e0032000 	.word	0xe0032000
40020184:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

40020188 <CyU3PUsbGetEpStatus>:
40020188:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4002018c:	e1a04000 	mov	r4, r0
40020190:	e204600f 	and	r6, r4, #15
40020194:	e59f0090 	ldr	r0, [pc, #144]	; 4002022c <CyU3PUsbGetEpStatus+0xa4>
40020198:	e5d00009 	ldrb	r0, [r0, #9]
4002019c:	e3500003 	cmp	r0, #3
400201a0:	1a00000b 	bne	400201d4 <CyU3PUsbGetEpStatus+0x4c>
400201a4:	e3140080 	tst	r4, #128	; 0x80
400201a8:	0a000004 	beq	400201c0 <CyU3PUsbGetEpStatus+0x38>
400201ac:	e59f007c 	ldr	r0, [pc, #124]	; 40020230 <CyU3PUsbGetEpStatus+0xa8>
400201b0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400201b4:	e2000004 	and	r0, r0, #4
400201b8:	e58d0000 	str	r0, [sp]
400201bc:	ea00000f 	b	40020200 <CyU3PUsbGetEpStatus+0x78>
400201c0:	e59f006c 	ldr	r0, [pc, #108]	; 40020234 <CyU3PUsbGetEpStatus+0xac>
400201c4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400201c8:	e2000004 	and	r0, r0, #4
400201cc:	e58d0000 	str	r0, [sp]
400201d0:	ea00000a 	b	40020200 <CyU3PUsbGetEpStatus+0x78>
400201d4:	e3140080 	tst	r4, #128	; 0x80
400201d8:	0a000004 	beq	400201f0 <CyU3PUsbGetEpStatus+0x68>
400201dc:	e59f0054 	ldr	r0, [pc, #84]	; 40020238 <CyU3PUsbGetEpStatus+0xb0>
400201e0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400201e4:	e2000801 	and	r0, r0, #65536	; 0x10000
400201e8:	e58d0000 	str	r0, [sp]
400201ec:	ea000003 	b	40020200 <CyU3PUsbGetEpStatus+0x78>
400201f0:	e59f0044 	ldr	r0, [pc, #68]	; 4002023c <CyU3PUsbGetEpStatus+0xb4>
400201f4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400201f8:	e2000801 	and	r0, r0, #65536	; 0x10000
400201fc:	e58d0000 	str	r0, [sp]
40020200:	e59d0000 	ldr	r0, [sp]
40020204:	e3500000 	cmp	r0, #0
40020208:	0a000001 	beq	40020214 <CyU3PUsbGetEpStatus+0x8c>
4002020c:	e3a00001 	mov	r0, #1
40020210:	e58d0000 	str	r0, [sp]
40020214:	e1a0100d 	mov	r1, sp
40020218:	e3a00002 	mov	r0, #2
4002021c:	ebfff48f 	bl	4001d460 <CyU3PUsbSendEP0Data>
40020220:	e1a05000 	mov	r5, r0
40020224:	e1a00005 	mov	r0, r5
40020228:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4002022c:	40031d40 	.word	0x40031d40
40020230:	e0033500 	.word	0xe0033500
40020234:	e0033600 	.word	0xe0033600
40020238:	e0031418 	.word	0xe0031418
4002023c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020240 <CyU3PUsbHandleClearFeature>:
40020240:	e92d4070 	push	{r4, r5, r6, lr}
40020244:	e1a04000 	mov	r4, r0
40020248:	e3a05000 	mov	r5, #0
4002024c:	e3540001 	cmp	r4, #1
40020250:	0a000006 	beq	40020270 <CyU3PUsbHandleClearFeature+0x30>
40020254:	e3540002 	cmp	r4, #2
40020258:	0a00000b 	beq	4002028c <CyU3PUsbHandleClearFeature+0x4c>
4002025c:	e3540030 	cmp	r4, #48	; 0x30
40020260:	0a00000f 	beq	400202a4 <CyU3PUsbHandleClearFeature+0x64>
40020264:	e3540031 	cmp	r4, #49	; 0x31
40020268:	1a00002d 	bne	40020324 <CyU3PUsbHandleClearFeature+0xe4>
4002026c:	ea00001c 	b	400202e4 <CyU3PUsbHandleClearFeature+0xa4>
40020270:	e1a00000 	nop			; (mov r0, r0)
40020274:	e59f00d8 	ldr	r0, [pc, #216]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
40020278:	e5d00006 	ldrb	r0, [r0, #6]
4002027c:	e3c00002 	bic	r0, r0, #2
40020280:	e59f10cc 	ldr	r1, [pc, #204]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
40020284:	e5c10006 	strb	r0, [r1, #6]
40020288:	e1a00000 	nop			; (mov r0, r0)
4002028c:	e59f00c0 	ldr	r0, [pc, #192]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
40020290:	e5d00009 	ldrb	r0, [r0, #9]
40020294:	e3500003 	cmp	r0, #3
40020298:	0a000000 	beq	400202a0 <CyU3PUsbHandleClearFeature+0x60>
4002029c:	e3a05001 	mov	r5, #1
400202a0:	ea000021 	b	4002032c <CyU3PUsbHandleClearFeature+0xec>
400202a4:	e1a00000 	nop			; (mov r0, r0)
400202a8:	e59f00a4 	ldr	r0, [pc, #164]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
400202ac:	e5d00009 	ldrb	r0, [r0, #9]
400202b0:	e3500003 	cmp	r0, #3
400202b4:	1a000009 	bne	400202e0 <CyU3PUsbHandleClearFeature+0xa0>
400202b8:	e59f0094 	ldr	r0, [pc, #148]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
400202bc:	e5d00008 	ldrb	r0, [r0, #8]
400202c0:	e3500006 	cmp	r0, #6
400202c4:	1a000005 	bne	400202e0 <CyU3PUsbHandleClearFeature+0xa0>
400202c8:	e59f0084 	ldr	r0, [pc, #132]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
400202cc:	e5d00006 	ldrb	r0, [r0, #6]
400202d0:	e3c00004 	bic	r0, r0, #4
400202d4:	e59f1078 	ldr	r1, [pc, #120]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
400202d8:	e5c10006 	strb	r0, [r1, #6]
400202dc:	e3a05001 	mov	r5, #1
400202e0:	ea000011 	b	4002032c <CyU3PUsbHandleClearFeature+0xec>
400202e4:	e1a00000 	nop			; (mov r0, r0)
400202e8:	e59f0064 	ldr	r0, [pc, #100]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
400202ec:	e5d00009 	ldrb	r0, [r0, #9]
400202f0:	e3500003 	cmp	r0, #3
400202f4:	1a000009 	bne	40020320 <CyU3PUsbHandleClearFeature+0xe0>
400202f8:	e59f0054 	ldr	r0, [pc, #84]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
400202fc:	e5d00008 	ldrb	r0, [r0, #8]
40020300:	e3500006 	cmp	r0, #6
40020304:	1a000005 	bne	40020320 <CyU3PUsbHandleClearFeature+0xe0>
40020308:	e59f0044 	ldr	r0, [pc, #68]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
4002030c:	e5d00006 	ldrb	r0, [r0, #6]
40020310:	e3c00008 	bic	r0, r0, #8
40020314:	e59f1038 	ldr	r1, [pc, #56]	; 40020354 <CyU3PUsbHandleClearFeature+0x114>
40020318:	e5c10006 	strb	r0, [r1, #6]
4002031c:	e3a05001 	mov	r5, #1
40020320:	ea000001 	b	4002032c <CyU3PUsbHandleClearFeature+0xec>
40020324:	e1a00000 	nop			; (mov r0, r0)
40020328:	e1a00000 	nop			; (mov r0, r0)
4002032c:	e1a00000 	nop			; (mov r0, r0)
40020330:	e3550000 	cmp	r5, #0
40020334:	0a000001 	beq	40020340 <CyU3PUsbHandleClearFeature+0x100>
40020338:	ebfff0af 	bl	4001c5fc <CyU3PUsbAckSetup>
4002033c:	ea000003 	b	40020350 <CyU3PUsbHandleClearFeature+0x110>
40020340:	e3a02000 	mov	r2, #0
40020344:	e3a01001 	mov	r1, #1
40020348:	e1a00002 	mov	r0, r2
4002034c:	ebfff66e 	bl	4001dd0c <CyU3PUsbStall>
40020350:	e8bd8070 	pop	{r4, r5, r6, pc}
40020354:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

40020358 <CyU3PUsbHandleEvents>:
40020358:	e92d4070 	push	{r4, r5, r6, lr}
4002035c:	e1a04000 	mov	r4, r0
40020360:	e3140040 	tst	r4, #64	; 0x40
40020364:	0a000000 	beq	4002036c <CyU3PUsbHandleEvents+0x14>
40020368:	ebfff8cc 	bl	4001e6a0 <CyU3PUibDevCtrlEvtHandler>
4002036c:	e3140020 	tst	r4, #32
40020370:	0a000000 	beq	40020378 <CyU3PUsbHandleEvents+0x20>
40020374:	ebfff942 	bl	4001e884 <CyU3PUibEPEvtHandler>
40020378:	e3140080 	tst	r4, #128	; 0x80
4002037c:	0a000000 	beq	40020384 <CyU3PUsbHandleEvents+0x2c>
40020380:	ebfffa15 	bl	4001ebdc <CyU3PUibLnkIntrEvtHandler>
40020384:	e3140c01 	tst	r4, #256	; 0x100
40020388:	0a000000 	beq	40020390 <CyU3PUsbHandleEvents+0x38>
4002038c:	ebfffb32 	bl	4001f05c <CyU3PUibProtIntrEvtHandler>
40020390:	e3140c02 	tst	r4, #512	; 0x200
40020394:	0a000000 	beq	4002039c <CyU3PUsbHandleEvents+0x44>
40020398:	ebfffa37 	bl	4001ec7c <CyU3PUibProtEpIntrEvtHandler>
4002039c:	e3140b01 	tst	r4, #1024	; 0x400
400203a0:	0a000006 	beq	400203c0 <CyU3PUsbHandleEvents+0x68>
400203a4:	e59f0378 	ldr	r0, [pc, #888]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
400203a8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400203ac:	e3500b02 	cmp	r0, #2048	; 0x800
400203b0:	1a000001 	bne	400203bc <CyU3PUsbHandleEvents+0x64>
400203b4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400203b8:	ebffa1ae 	bl	40008a78 <_tx_thread_sleep>
400203bc:	ebfffd4a 	bl	4001f8ec <CyU3PUibVbusChangeHandler>
400203c0:	e3140b02 	tst	r4, #2048	; 0x800
400203c4:	0a000000 	beq	400203cc <CyU3PUsbHandleEvents+0x74>
400203c8:	eb0003ae 	bl	40021288 <CyU3PUsbSendCompliancePatterns>
400203cc:	e3140a01 	tst	r4, #4096	; 0x1000
400203d0:	0a00000c 	beq	40020408 <CyU3PUsbHandleEvents+0xb0>
400203d4:	e59f034c 	ldr	r0, [pc, #844]	; 40020728 <CyU3PUsbHandleEvents+0x3d0>
400203d8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400203dc:	e3100902 	tst	r0, #32768	; 0x8000
400203e0:	0a000008 	beq	40020408 <CyU3PUsbHandleEvents+0xb0>
400203e4:	e3a00001 	mov	r0, #1
400203e8:	e59f133c 	ldr	r1, [pc, #828]	; 4002072c <CyU3PUsbHandleEvents+0x3d4>
400203ec:	e5810000 	str	r0, [r1]
400203f0:	e59f1338 	ldr	r1, [pc, #824]	; 40020730 <CyU3PUsbHandleEvents+0x3d8>
400203f4:	e5810000 	str	r0, [r1]
400203f8:	ebfffdb3 	bl	4001facc <CyU3PUsbCheckUsb3Disconnect>
400203fc:	e3a00000 	mov	r0, #0
40020400:	e59f1328 	ldr	r1, [pc, #808]	; 40020730 <CyU3PUsbHandleEvents+0x3d8>
40020404:	e5810000 	str	r0, [r1]
40020408:	e3140301 	tst	r4, #67108864	; 0x4000000
4002040c:	0a000013 	beq	40020460 <CyU3PUsbHandleEvents+0x108>
40020410:	e59f031c 	ldr	r0, [pc, #796]	; 40020734 <CyU3PUsbHandleEvents+0x3dc>
40020414:	e5900000 	ldr	r0, [r0]
40020418:	e3500000 	cmp	r0, #0
4002041c:	0a000008 	beq	40020444 <CyU3PUsbHandleEvents+0xec>
40020420:	e59f0300 	ldr	r0, [pc, #768]	; 40020728 <CyU3PUsbHandleEvents+0x3d0>
40020424:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020428:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
4002042c:	e3a02080 	mov	r2, #128	; 0x80
40020430:	e1821920 	orr	r1, r2, r0, lsr #18
40020434:	e3a00012 	mov	r0, #18
40020438:	e59f22f4 	ldr	r2, [pc, #756]	; 40020734 <CyU3PUsbHandleEvents+0x3dc>
4002043c:	e5922000 	ldr	r2, [r2]
40020440:	e12fff32 	blx	r2
40020444:	e3a00b02 	mov	r0, #2048	; 0x800
40020448:	e59f12e8 	ldr	r1, [pc, #744]	; 40020738 <CyU3PUsbHandleEvents+0x3e0>
4002044c:	e5810000 	str	r0, [r1]
40020450:	e1c10000 	bic	r0, r1, r0
40020454:	e5900004 	ldr	r0, [r0, #4]
40020458:	e3800b02 	orr	r0, r0, #2048	; 0x800
4002045c:	e5810004 	str	r0, [r1, #4]
40020460:	e3140901 	tst	r4, #16384	; 0x4000
40020464:	0a000008 	beq	4002048c <CyU3PUsbHandleEvents+0x134>
40020468:	e59f02c4 	ldr	r0, [pc, #708]	; 40020734 <CyU3PUsbHandleEvents+0x3dc>
4002046c:	e5900000 	ldr	r0, [r0]
40020470:	e3500000 	cmp	r0, #0
40020474:	0a000004 	beq	4002048c <CyU3PUsbHandleEvents+0x134>
40020478:	e3a01000 	mov	r1, #0
4002047c:	e3a00003 	mov	r0, #3
40020480:	e59f22ac 	ldr	r2, [pc, #684]	; 40020734 <CyU3PUsbHandleEvents+0x3dc>
40020484:	e5922000 	ldr	r2, [r2]
40020488:	e12fff32 	blx	r2
4002048c:	e3140a02 	tst	r4, #8192	; 0x2000
40020490:	0a000008 	beq	400204b8 <CyU3PUsbHandleEvents+0x160>
40020494:	e59f0298 	ldr	r0, [pc, #664]	; 40020734 <CyU3PUsbHandleEvents+0x3dc>
40020498:	e5900000 	ldr	r0, [r0]
4002049c:	e3500000 	cmp	r0, #0
400204a0:	0a000004 	beq	400204b8 <CyU3PUsbHandleEvents+0x160>
400204a4:	e3a01000 	mov	r1, #0
400204a8:	e3a00002 	mov	r0, #2
400204ac:	e59f2280 	ldr	r2, [pc, #640]	; 40020734 <CyU3PUsbHandleEvents+0x3dc>
400204b0:	e5922000 	ldr	r2, [r2]
400204b4:	e12fff32 	blx	r2
400204b8:	e3140902 	tst	r4, #32768	; 0x8000
400204bc:	0a000022 	beq	4002054c <CyU3PUsbHandleEvents+0x1f4>
400204c0:	e59f0274 	ldr	r0, [pc, #628]	; 4002073c <CyU3PUsbHandleEvents+0x3e4>
400204c4:	e5900000 	ldr	r0, [r0]
400204c8:	e3500000 	cmp	r0, #0
400204cc:	0a00001e 	beq	4002054c <CyU3PUsbHandleEvents+0x1f4>
400204d0:	eb000690 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
400204d4:	e1a06000 	mov	r6, r0
400204d8:	e3a00001 	mov	r0, #1
400204dc:	ebffcc13 	bl	40013530 <CyU3PBusyWait>
400204e0:	e59f0258 	ldr	r0, [pc, #600]	; 40020740 <CyU3PUsbHandleEvents+0x3e8>
400204e4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400204e8:	e3c00803 	bic	r0, r0, #196608	; 0x30000
400204ec:	e59f124c 	ldr	r1, [pc, #588]	; 40020740 <CyU3PUsbHandleEvents+0x3e8>
400204f0:	e5810400 	str	r0, [r1, #1024]	; 0x400
400204f4:	e1a00006 	mov	r0, r6
400204f8:	eb000694 	bl	40021f50 <CyU3PVicEnableInterrupts>
400204fc:	e3a00001 	mov	r0, #1
40020500:	ebffa15c 	bl	40008a78 <_tx_thread_sleep>
40020504:	e3a00000 	mov	r0, #0
40020508:	e59f122c 	ldr	r1, [pc, #556]	; 4002073c <CyU3PUsbHandleEvents+0x3e4>
4002050c:	e5810000 	str	r0, [r1]
40020510:	e59f0228 	ldr	r0, [pc, #552]	; 40020740 <CyU3PUsbHandleEvents+0x3e8>
40020514:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40020518:	e3100c02 	tst	r0, #512	; 0x200
4002051c:	1a00000a 	bne	4002054c <CyU3PUsbHandleEvents+0x1f4>
40020520:	e59f01fc 	ldr	r0, [pc, #508]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
40020524:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020528:	e3500000 	cmp	r0, #0
4002052c:	1a000006 	bne	4002054c <CyU3PUsbHandleEvents+0x1f4>
40020530:	e59f01ec 	ldr	r0, [pc, #492]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
40020534:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
40020538:	e3500000 	cmp	r0, #0
4002053c:	1a000002 	bne	4002054c <CyU3PUsbHandleEvents+0x1f4>
40020540:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020544:	e59f11f4 	ldr	r1, [pc, #500]	; 40020740 <CyU3PUsbHandleEvents+0x3e8>
40020548:	e5810050 	str	r0, [r1, #80]	; 0x50
4002054c:	e3140401 	tst	r4, #16777216	; 0x1000000
40020550:	0a000020 	beq	400205d8 <CyU3PUsbHandleEvents+0x280>
40020554:	e59f01e4 	ldr	r0, [pc, #484]	; 40020740 <CyU3PUsbHandleEvents+0x3e8>
40020558:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002055c:	e200503f 	and	r5, r0, #63	; 0x3f
40020560:	e3550011 	cmp	r5, #17
40020564:	0a000001 	beq	40020570 <CyU3PUsbHandleEvents+0x218>
40020568:	e3550012 	cmp	r5, #18
4002056c:	1a000018 	bne	400205d4 <CyU3PUsbHandleEvents+0x27c>
40020570:	e59f01cc 	ldr	r0, [pc, #460]	; 40020744 <CyU3PUsbHandleEvents+0x3ec>
40020574:	e5900000 	ldr	r0, [r0]
40020578:	e3500000 	cmp	r0, #0
4002057c:	0a000014 	beq	400205d4 <CyU3PUsbHandleEvents+0x27c>
40020580:	e3a00005 	mov	r0, #5
40020584:	ebffcbe9 	bl	40013530 <CyU3PBusyWait>
40020588:	e59f01b0 	ldr	r0, [pc, #432]	; 40020740 <CyU3PUsbHandleEvents+0x3e8>
4002058c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020590:	e200503f 	and	r5, r0, #63	; 0x3f
40020594:	e3550011 	cmp	r5, #17
40020598:	0a000001 	beq	400205a4 <CyU3PUsbHandleEvents+0x24c>
4002059c:	e3550012 	cmp	r5, #18
400205a0:	1a000001 	bne	400205ac <CyU3PUsbHandleEvents+0x254>
400205a4:	e3a00000 	mov	r0, #0
400205a8:	ebfff582 	bl	4001dbb8 <CyU3PUsbSetLinkPowerState>
400205ac:	e3a00001 	mov	r0, #1
400205b0:	ebffa130 	bl	40008a78 <_tx_thread_sleep>
400205b4:	e59f0188 	ldr	r0, [pc, #392]	; 40020744 <CyU3PUsbHandleEvents+0x3ec>
400205b8:	e5900000 	ldr	r0, [r0]
400205bc:	e3500000 	cmp	r0, #0
400205c0:	0a000003 	beq	400205d4 <CyU3PUsbHandleEvents+0x27c>
400205c4:	e3a02000 	mov	r2, #0
400205c8:	e3a01401 	mov	r1, #16777216	; 0x1000000
400205cc:	e59f0174 	ldr	r0, [pc, #372]	; 40020748 <CyU3PUsbHandleEvents+0x3f0>
400205d0:	ebffa620 	bl	40009e58 <_txe_event_flags_set>
400205d4:	e1a00000 	nop			; (mov r0, r0)
400205d8:	e3140402 	tst	r4, #33554432	; 0x2000000
400205dc:	0a000019 	beq	40020648 <CyU3PUsbHandleEvents+0x2f0>
400205e0:	e3a00052 	mov	r0, #82	; 0x52
400205e4:	ebfffd1d 	bl	4001fa60 <CyU3PUsbAddToEventLog>
400205e8:	e59f1134 	ldr	r1, [pc, #308]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
400205ec:	e5d11009 	ldrb	r1, [r1, #9]
400205f0:	e3510003 	cmp	r1, #3
400205f4:	1a000001 	bne	40020600 <CyU3PUsbHandleEvents+0x2a8>
400205f8:	e3a01001 	mov	r1, #1
400205fc:	ea000000 	b	40020604 <CyU3PUsbHandleEvents+0x2ac>
40020600:	e3a01000 	mov	r1, #0
40020604:	e1a00001 	mov	r0, r1
40020608:	ebfff21a 	bl	4001ce78 <CyU3PUsbPhyDisable>
4002060c:	e3a00001 	mov	r0, #1
40020610:	ebffa118 	bl	40008a78 <_tx_thread_sleep>
40020614:	e59f0108 	ldr	r0, [pc, #264]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
40020618:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002061c:	e3500000 	cmp	r0, #0
40020620:	0a000005 	beq	4002063c <CyU3PUsbHandleEvents+0x2e4>
40020624:	e59f0120 	ldr	r0, [pc, #288]	; 4002074c <CyU3PUsbHandleEvents+0x3f4>
40020628:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002062c:	e59f10f0 	ldr	r1, [pc, #240]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
40020630:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020634:	e1100001 	tst	r0, r1
40020638:	0a000002 	beq	40020648 <CyU3PUsbHandleEvents+0x2f0>
4002063c:	e59f10e0 	ldr	r1, [pc, #224]	; 40020724 <CyU3PUsbHandleEvents+0x3cc>
40020640:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020644:	ebfff281 	bl	4001d050 <CyU3PUsbPhyEnable>
40020648:	e3140801 	tst	r4, #65536	; 0x10000
4002064c:	0a000006 	beq	4002066c <CyU3PUsbHandleEvents+0x314>
40020650:	e59f00f8 	ldr	r0, [pc, #248]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
40020654:	e5900000 	ldr	r0, [r0]
40020658:	e3500000 	cmp	r0, #0
4002065c:	0a000002 	beq	4002066c <CyU3PUsbHandleEvents+0x314>
40020660:	e59f10e8 	ldr	r1, [pc, #232]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
40020664:	e5910000 	ldr	r0, [r1]
40020668:	e12fff30 	blx	r0
4002066c:	e3140802 	tst	r4, #131072	; 0x20000
40020670:	0a000006 	beq	40020690 <CyU3PUsbHandleEvents+0x338>
40020674:	e59f00d4 	ldr	r0, [pc, #212]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
40020678:	e5900004 	ldr	r0, [r0, #4]
4002067c:	e3500000 	cmp	r0, #0
40020680:	0a000002 	beq	40020690 <CyU3PUsbHandleEvents+0x338>
40020684:	e59f10c4 	ldr	r1, [pc, #196]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
40020688:	e5910004 	ldr	r0, [r1, #4]
4002068c:	e12fff30 	blx	r0
40020690:	e3140701 	tst	r4, #262144	; 0x40000
40020694:	0a000006 	beq	400206b4 <CyU3PUsbHandleEvents+0x35c>
40020698:	e59f00b0 	ldr	r0, [pc, #176]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
4002069c:	e5900008 	ldr	r0, [r0, #8]
400206a0:	e3500000 	cmp	r0, #0
400206a4:	0a000002 	beq	400206b4 <CyU3PUsbHandleEvents+0x35c>
400206a8:	e59f10a0 	ldr	r1, [pc, #160]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
400206ac:	e5910008 	ldr	r0, [r1, #8]
400206b0:	e12fff30 	blx	r0
400206b4:	e3140702 	tst	r4, #524288	; 0x80000
400206b8:	0a000006 	beq	400206d8 <CyU3PUsbHandleEvents+0x380>
400206bc:	e59f008c 	ldr	r0, [pc, #140]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
400206c0:	e590000c 	ldr	r0, [r0, #12]
400206c4:	e3500000 	cmp	r0, #0
400206c8:	0a000002 	beq	400206d8 <CyU3PUsbHandleEvents+0x380>
400206cc:	e59f107c 	ldr	r1, [pc, #124]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
400206d0:	e591000c 	ldr	r0, [r1, #12]
400206d4:	e12fff30 	blx	r0
400206d8:	e3140601 	tst	r4, #1048576	; 0x100000
400206dc:	0a000006 	beq	400206fc <CyU3PUsbHandleEvents+0x3a4>
400206e0:	e59f0068 	ldr	r0, [pc, #104]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
400206e4:	e5900010 	ldr	r0, [r0, #16]
400206e8:	e3500000 	cmp	r0, #0
400206ec:	0a000002 	beq	400206fc <CyU3PUsbHandleEvents+0x3a4>
400206f0:	e59f1058 	ldr	r1, [pc, #88]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
400206f4:	e5910010 	ldr	r0, [r1, #16]
400206f8:	e12fff30 	blx	r0
400206fc:	e3140602 	tst	r4, #2097152	; 0x200000
40020700:	0a000006 	beq	40020720 <CyU3PUsbHandleEvents+0x3c8>
40020704:	e59f0044 	ldr	r0, [pc, #68]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
40020708:	e5900014 	ldr	r0, [r0, #20]
4002070c:	e3500000 	cmp	r0, #0
40020710:	0a000002 	beq	40020720 <CyU3PUsbHandleEvents+0x3c8>
40020714:	e59f1034 	ldr	r1, [pc, #52]	; 40020750 <CyU3PUsbHandleEvents+0x3f8>
40020718:	e5910014 	ldr	r0, [r1, #20]
4002071c:	e12fff30 	blx	r0
40020720:	e8bd8070 	pop	{r4, r5, r6, pc}
40020724:	40031d40 	.word	0x40031d40
40020728:	e0031000 	.word	0xe0031000
4002072c:	40030d80 	.word	0x40030d80
40020730:	40030d84 	.word	0x40030d84
40020734:	40030db8 	.word	0x40030db8
40020738:	e0030000 	.word	0xe0030000
4002073c:	40030d88 	.word	0x40030d88
40020740:	e0033000 	.word	0xe0033000
40020744:	40030dd0 	.word	0x40030dd0
40020748:	40031eb8 	.word	0x40031eb8
4002074c:	e0051000 	.word	0xe0051000
40020750:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020754 <CyU3PUsbHandleGetStatus>:
40020754:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020758:	e1a04000 	mov	r4, r0
4002075c:	e1a05001 	mov	r5, r1
40020760:	e3a07000 	mov	r7, #0
40020764:	e3a00000 	mov	r0, #0
40020768:	e58d0000 	str	r0, [sp]
4002076c:	e3540000 	cmp	r4, #0
40020770:	0a000004 	beq	40020788 <CyU3PUsbHandleGetStatus+0x34>
40020774:	e3540001 	cmp	r4, #1
40020778:	0a00001e 	beq	400207f8 <CyU3PUsbHandleGetStatus+0xa4>
4002077c:	e3540002 	cmp	r4, #2
40020780:	1a00002b 	bne	40020834 <CyU3PUsbHandleGetStatus+0xe0>
40020784:	ea000023 	b	40020818 <CyU3PUsbHandleGetStatus+0xc4>
40020788:	e1a00000 	nop			; (mov r0, r0)
4002078c:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020790:	1a00000d 	bne	400207cc <CyU3PUsbHandleGetStatus+0x78>
40020794:	ebffed1c 	bl	4001bc0c <CyU3POtgGetMode>
40020798:	e3500002 	cmp	r0, #2
4002079c:	1a000008 	bne	400207c4 <CyU3PUsbHandleGetStatus+0x70>
400207a0:	e59f00a0 	ldr	r0, [pc, #160]	; 40020848 <CyU3PUsbHandleGetStatus+0xf4>
400207a4:	e5900034 	ldr	r0, [r0, #52]	; 0x34
400207a8:	e3500000 	cmp	r0, #0
400207ac:	0a000001 	beq	400207b8 <CyU3PUsbHandleGetStatus+0x64>
400207b0:	e3a00001 	mov	r0, #1
400207b4:	ea000000 	b	400207bc <CyU3PUsbHandleGetStatus+0x68>
400207b8:	e3a00000 	mov	r0, #0
400207bc:	e5cd0000 	strb	r0, [sp]
400207c0:	ea00000b 	b	400207f4 <CyU3PUsbHandleGetStatus+0xa0>
400207c4:	e3a00000 	mov	r0, #0
400207c8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400207cc:	e59f0074 	ldr	r0, [pc, #116]	; 40020848 <CyU3PUsbHandleGetStatus+0xf4>
400207d0:	e5d00006 	ldrb	r0, [r0, #6]
400207d4:	e5cd0000 	strb	r0, [sp]
400207d8:	e59f0068 	ldr	r0, [pc, #104]	; 40020848 <CyU3PUsbHandleGetStatus+0xf4>
400207dc:	e5d00009 	ldrb	r0, [r0, #9]
400207e0:	e3500003 	cmp	r0, #3
400207e4:	1a000002 	bne	400207f4 <CyU3PUsbHandleGetStatus+0xa0>
400207e8:	e5dd0000 	ldrb	r0, [sp]
400207ec:	e3c00002 	bic	r0, r0, #2
400207f0:	e5cd0000 	strb	r0, [sp]
400207f4:	e1a00000 	nop			; (mov r0, r0)
400207f8:	e1a0100d 	mov	r1, sp
400207fc:	e3a00002 	mov	r0, #2
40020800:	ebfff316 	bl	4001d460 <CyU3PUsbSendEP0Data>
40020804:	e1a06000 	mov	r6, r0
40020808:	e3560000 	cmp	r6, #0
4002080c:	1a000000 	bne	40020814 <CyU3PUsbHandleGetStatus+0xc0>
40020810:	e3a07001 	mov	r7, #1
40020814:	ea000008 	b	4002083c <CyU3PUsbHandleGetStatus+0xe8>
40020818:	e1a00000 	nop			; (mov r0, r0)
4002081c:	e20500ff 	and	r0, r5, #255	; 0xff
40020820:	ebfffe58 	bl	40020188 <CyU3PUsbGetEpStatus>
40020824:	e3500000 	cmp	r0, #0
40020828:	1a000000 	bne	40020830 <CyU3PUsbHandleGetStatus+0xdc>
4002082c:	e3a07001 	mov	r7, #1
40020830:	ea000001 	b	4002083c <CyU3PUsbHandleGetStatus+0xe8>
40020834:	e1a00000 	nop			; (mov r0, r0)
40020838:	e1a00000 	nop			; (mov r0, r0)
4002083c:	e1a00000 	nop			; (mov r0, r0)
40020840:	e1a00007 	mov	r0, r7
40020844:	eaffffdf 	b	400207c8 <CyU3PUsbHandleGetStatus+0x74>
40020848:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

4002084c <CyU3PUsbHandleSetFeature>:
4002084c:	e92d4070 	push	{r4, r5, r6, lr}
40020850:	e1a04000 	mov	r4, r0
40020854:	e3a05000 	mov	r5, #0
40020858:	e3540001 	cmp	r4, #1
4002085c:	0a000006 	beq	4002087c <CyU3PUsbHandleSetFeature+0x30>
40020860:	e3540002 	cmp	r4, #2
40020864:	0a00000b 	beq	40020898 <CyU3PUsbHandleSetFeature+0x4c>
40020868:	e3540030 	cmp	r4, #48	; 0x30
4002086c:	0a00000e 	beq	400208ac <CyU3PUsbHandleSetFeature+0x60>
40020870:	e3540031 	cmp	r4, #49	; 0x31
40020874:	1a00002a 	bne	40020924 <CyU3PUsbHandleSetFeature+0xd8>
40020878:	ea00001a 	b	400208e8 <CyU3PUsbHandleSetFeature+0x9c>
4002087c:	e1a00000 	nop			; (mov r0, r0)
40020880:	e59f00cc 	ldr	r0, [pc, #204]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
40020884:	e5d00006 	ldrb	r0, [r0, #6]
40020888:	e3800002 	orr	r0, r0, #2
4002088c:	e59f10c0 	ldr	r1, [pc, #192]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
40020890:	e5c10006 	strb	r0, [r1, #6]
40020894:	e1a00000 	nop			; (mov r0, r0)
40020898:	ebfff0f4 	bl	4001cc70 <CyU3PUsbGetSpeed>
4002089c:	e3500003 	cmp	r0, #3
400208a0:	0a000000 	beq	400208a8 <CyU3PUsbHandleSetFeature+0x5c>
400208a4:	e3a05001 	mov	r5, #1
400208a8:	ea00001f 	b	4002092c <CyU3PUsbHandleSetFeature+0xe0>
400208ac:	e1a00000 	nop			; (mov r0, r0)
400208b0:	ebfff0ee 	bl	4001cc70 <CyU3PUsbGetSpeed>
400208b4:	e3500003 	cmp	r0, #3
400208b8:	1a000009 	bne	400208e4 <CyU3PUsbHandleSetFeature+0x98>
400208bc:	e59f0090 	ldr	r0, [pc, #144]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
400208c0:	e5d00008 	ldrb	r0, [r0, #8]
400208c4:	e3500006 	cmp	r0, #6
400208c8:	1a000005 	bne	400208e4 <CyU3PUsbHandleSetFeature+0x98>
400208cc:	e59f0080 	ldr	r0, [pc, #128]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
400208d0:	e5d00006 	ldrb	r0, [r0, #6]
400208d4:	e3800004 	orr	r0, r0, #4
400208d8:	e59f1074 	ldr	r1, [pc, #116]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
400208dc:	e5c10006 	strb	r0, [r1, #6]
400208e0:	e3a05001 	mov	r5, #1
400208e4:	ea000010 	b	4002092c <CyU3PUsbHandleSetFeature+0xe0>
400208e8:	e1a00000 	nop			; (mov r0, r0)
400208ec:	ebfff0df 	bl	4001cc70 <CyU3PUsbGetSpeed>
400208f0:	e3500003 	cmp	r0, #3
400208f4:	1a000009 	bne	40020920 <CyU3PUsbHandleSetFeature+0xd4>
400208f8:	e59f0054 	ldr	r0, [pc, #84]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
400208fc:	e5d00008 	ldrb	r0, [r0, #8]
40020900:	e3500006 	cmp	r0, #6
40020904:	1a000005 	bne	40020920 <CyU3PUsbHandleSetFeature+0xd4>
40020908:	e59f0044 	ldr	r0, [pc, #68]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
4002090c:	e5d00006 	ldrb	r0, [r0, #6]
40020910:	e3800008 	orr	r0, r0, #8
40020914:	e59f1038 	ldr	r1, [pc, #56]	; 40020954 <CyU3PUsbHandleSetFeature+0x108>
40020918:	e5c10006 	strb	r0, [r1, #6]
4002091c:	e3a05001 	mov	r5, #1
40020920:	ea000001 	b	4002092c <CyU3PUsbHandleSetFeature+0xe0>
40020924:	e1a00000 	nop			; (mov r0, r0)
40020928:	e1a00000 	nop			; (mov r0, r0)
4002092c:	e1a00000 	nop			; (mov r0, r0)
40020930:	e3550000 	cmp	r5, #0
40020934:	0a000001 	beq	40020940 <CyU3PUsbHandleSetFeature+0xf4>
40020938:	ebffef2f 	bl	4001c5fc <CyU3PUsbAckSetup>
4002093c:	ea000003 	b	40020950 <CyU3PUsbHandleSetFeature+0x104>
40020940:	e3a02000 	mov	r2, #0
40020944:	e3a01001 	mov	r1, #1
40020948:	e1a00002 	mov	r0, r2
4002094c:	ebfff4ee 	bl	4001dd0c <CyU3PUsbStall>
40020950:	e8bd8070 	pop	{r4, r5, r6, pc}
40020954:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020958 <CyU3PUsbReEnableUsb3>:
40020958:	e92d4010 	push	{r4, lr}
4002095c:	e3a00051 	mov	r0, #81	; 0x51
40020960:	ebfffc3e 	bl	4001fa60 <CyU3PUsbAddToEventLog>
40020964:	e59f018c 	ldr	r0, [pc, #396]	; 40020af8 <CyU3PUsbReEnableUsb3+0x1a0>
40020968:	e5900004 	ldr	r0, [r0, #4]
4002096c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020970:	e59f1180 	ldr	r1, [pc, #384]	; 40020af8 <CyU3PUsbReEnableUsb3+0x1a0>
40020974:	e5810004 	str	r0, [r1, #4]
40020978:	e3e00000 	mvn	r0, #0
4002097c:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020980:	e5810004 	str	r0, [r1, #4]
40020984:	e59f0170 	ldr	r0, [pc, #368]	; 40020afc <CyU3PUsbReEnableUsb3+0x1a4>
40020988:	e5810008 	str	r0, [r1, #8]
4002098c:	e3e00000 	mvn	r0, #0
40020990:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020994:	e59f0164 	ldr	r0, [pc, #356]	; 40020b00 <CyU3PUsbReEnableUsb3+0x1a8>
40020998:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002099c:	e59f0160 	ldr	r0, [pc, #352]	; 40020b04 <CyU3PUsbReEnableUsb3+0x1ac>
400209a0:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
400209a4:	e3500000 	cmp	r0, #0
400209a8:	0a000003 	beq	400209bc <CyU3PUsbReEnableUsb3+0x64>
400209ac:	e1a00001 	mov	r0, r1
400209b0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400209b4:	e3800c01 	orr	r0, r0, #256	; 0x100
400209b8:	e5810408 	str	r0, [r1, #1032]	; 0x408
400209bc:	e3a00000 	mov	r0, #0
400209c0:	e59f113c 	ldr	r1, [pc, #316]	; 40020b04 <CyU3PUsbReEnableUsb3+0x1ac>
400209c4:	e5810044 	str	r0, [r1, #68]	; 0x44
400209c8:	e59f0138 	ldr	r0, [pc, #312]	; 40020b08 <CyU3PUsbReEnableUsb3+0x1b0>
400209cc:	e5900000 	ldr	r0, [r0]
400209d0:	e3500000 	cmp	r0, #0
400209d4:	0a000003 	beq	400209e8 <CyU3PUsbReEnableUsb3+0x90>
400209d8:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
400209dc:	e59f1128 	ldr	r1, [pc, #296]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
400209e0:	e5810050 	str	r0, [r1, #80]	; 0x50
400209e4:	ea000002 	b	400209f4 <CyU3PUsbReEnableUsb3+0x9c>
400209e8:	e3a00303 	mov	r0, #201326592	; 0xc000000
400209ec:	e59f1118 	ldr	r1, [pc, #280]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
400209f0:	e5810050 	str	r0, [r1, #80]	; 0x50
400209f4:	eb000575 	bl	40021fd0 <CyFx3Usb3LnkSetup>
400209f8:	e59f0110 	ldr	r0, [pc, #272]	; 40020b10 <CyU3PUsbReEnableUsb3+0x1b8>
400209fc:	e59f1108 	ldr	r1, [pc, #264]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
40020a00:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020a04:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020a08:	e1c10000 	bic	r0, r1, r0
40020a0c:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020a10:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020a14:	e5810158 	str	r0, [r1, #344]	; 0x158
40020a18:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020a1c:	e581001c 	str	r0, [r1, #28]
40020a20:	e3a01000 	mov	r1, #0
40020a24:	e3a00001 	mov	r0, #1
40020a28:	ebffee60 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
40020a2c:	e3a0000a 	mov	r0, #10
40020a30:	ebffcabe 	bl	40013530 <CyU3PBusyWait>
40020a34:	eb000537 	bl	40021f18 <CyU3PVicDisableAllInterrupts>
40020a38:	e1a04000 	mov	r4, r0
40020a3c:	e3a00000 	mov	r0, #0
40020a40:	e59f10cc 	ldr	r1, [pc, #204]	; 40020b14 <CyU3PUsbReEnableUsb3+0x1bc>
40020a44:	e5810000 	str	r0, [r1]
40020a48:	e3a00a01 	mov	r0, #4096	; 0x1000
40020a4c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
40020a50:	e5810054 	str	r0, [r1, #84]	; 0x54
40020a54:	e1c10080 	bic	r0, r1, r0, lsl #1
40020a58:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020a5c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020a60:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020a64:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020a68:	e3a00064 	mov	r0, #100	; 0x64
40020a6c:	ebffcaaf 	bl	40013530 <CyU3PBusyWait>
40020a70:	e59f0094 	ldr	r0, [pc, #148]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
40020a74:	e5900000 	ldr	r0, [r0]
40020a78:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020a7c:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020a80:	e59f1084 	ldr	r1, [pc, #132]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
40020a84:	e5810000 	str	r0, [r1]
40020a88:	e59f0088 	ldr	r0, [pc, #136]	; 40020b18 <CyU3PUsbReEnableUsb3+0x1c0>
40020a8c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020a90:	e3a01080 	mov	r1, #128	; 0x80
40020a94:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020a98:	eb000592 	bl	400220e8 <CyFx3UsbWritePhyReg>
40020a9c:	e3a01d06 	mov	r1, #384	; 0x180
40020aa0:	e59f0074 	ldr	r0, [pc, #116]	; 40020b1c <CyU3PUsbReEnableUsb3+0x1c4>
40020aa4:	eb00058f 	bl	400220e8 <CyFx3UsbWritePhyReg>
40020aa8:	e3a01080 	mov	r1, #128	; 0x80
40020aac:	e59f006c 	ldr	r0, [pc, #108]	; 40020b20 <CyU3PUsbReEnableUsb3+0x1c8>
40020ab0:	eb00058c 	bl	400220e8 <CyFx3UsbWritePhyReg>
40020ab4:	e59f003c 	ldr	r0, [pc, #60]	; 40020af8 <CyU3PUsbReEnableUsb3+0x1a0>
40020ab8:	e5900004 	ldr	r0, [r0, #4]
40020abc:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020ac0:	e59f1030 	ldr	r1, [pc, #48]	; 40020af8 <CyU3PUsbReEnableUsb3+0x1a0>
40020ac4:	e5810004 	str	r0, [r1, #4]
40020ac8:	e1a00004 	mov	r0, r4
40020acc:	eb00051f 	bl	40021f50 <CyU3PVicEnableInterrupts>
40020ad0:	e59f0034 	ldr	r0, [pc, #52]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
40020ad4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020ad8:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020adc:	e59f1028 	ldr	r1, [pc, #40]	; 40020b0c <CyU3PUsbReEnableUsb3+0x1b4>
40020ae0:	e5810054 	str	r0, [r1, #84]	; 0x54
40020ae4:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020ae8:	e581001c 	str	r0, [r1, #28]
40020aec:	e3a00064 	mov	r0, #100	; 0x64
40020af0:	ebffca8e 	bl	40013530 <CyU3PBusyWait>
40020af4:	e8bd8010 	pop	{r4, pc}
40020af8:	e0030000 	.word	0xe0030000
40020afc:	00038081 	.word	0x00038081
40020b00:	00004a3d 	.word	0x00004a3d
40020b04:	40031d40 	.word	0x40031d40
40020b08:	40030d5c 	.word	0x40030d5c
40020b0c:	e0033000 	.word	0xe0033000
40020b10:	00000908 	.word	0x00000908
40020b14:	40030d90 	.word	0x40030d90
40020b18:	00310418 	.word	0x00310418
40020b1c:	00001006 	.word	0x00001006
40020b20:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020b24 <CyU3PUsbRegisterEventCallback>:
40020b24:	e92d4010 	push	{r4, lr}
40020b28:	e1a04000 	mov	r4, r0
40020b2c:	e59f0038 	ldr	r0, [pc, #56]	; 40020b6c <CyU3PUsbRegisterEventCallback+0x48>
40020b30:	e5804000 	str	r4, [r0]
40020b34:	e59f0034 	ldr	r0, [pc, #52]	; 40020b70 <CyU3PUsbRegisterEventCallback+0x4c>
40020b38:	e5d00008 	ldrb	r0, [r0, #8]
40020b3c:	e3500000 	cmp	r0, #0
40020b40:	0a000008 	beq	40020b68 <CyU3PUsbRegisterEventCallback+0x44>
40020b44:	e59f0028 	ldr	r0, [pc, #40]	; 40020b74 <CyU3PUsbRegisterEventCallback+0x50>
40020b48:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020b4c:	e59f101c 	ldr	r1, [pc, #28]	; 40020b70 <CyU3PUsbRegisterEventCallback+0x4c>
40020b50:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020b54:	e1100001 	tst	r0, r1
40020b58:	0a000002 	beq	40020b68 <CyU3PUsbRegisterEventCallback+0x44>
40020b5c:	e3a01000 	mov	r1, #0
40020b60:	e3a0000b 	mov	r0, #11
40020b64:	e12fff34 	blx	r4
40020b68:	e8bd8010 	pop	{r4, pc}
40020b6c:	40030db8 	.word	0x40030db8
40020b70:	40031d40 	.word	0x40031d40
40020b74:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020b78 <CyU3PUsbRegisterSetupCallback>:
40020b78:	e59f2050 	ldr	r2, [pc, #80]	; 40020bd0 <CyU3PUsbRegisterSetupCallback+0x58>
40020b7c:	e5820000 	str	r0, [r2]
40020b80:	e3510001 	cmp	r1, #1
40020b84:	1a000003 	bne	40020b98 <CyU3PUsbRegisterSetupCallback+0x20>
40020b88:	e3a02000 	mov	r2, #0
40020b8c:	e59f3040 	ldr	r3, [pc, #64]	; 40020bd4 <CyU3PUsbRegisterSetupCallback+0x5c>
40020b90:	e5c32007 	strb	r2, [r3, #7]
40020b94:	ea00000c 	b	40020bcc <CyU3PUsbRegisterSetupCallback+0x54>
40020b98:	e3a02001 	mov	r2, #1
40020b9c:	e59f3030 	ldr	r3, [pc, #48]	; 40020bd4 <CyU3PUsbRegisterSetupCallback+0x5c>
40020ba0:	e5c32007 	strb	r2, [r3, #7]
40020ba4:	e2832000 	add	r2, r3, #0
40020ba8:	e5d22008 	ldrb	r2, [r2, #8]
40020bac:	e3520000 	cmp	r2, #0
40020bb0:	da000005 	ble	40020bcc <CyU3PUsbRegisterSetupCallback+0x54>
40020bb4:	e2832000 	add	r2, r3, #0
40020bb8:	e5d22008 	ldrb	r2, [r2, #8]
40020bbc:	e3520003 	cmp	r2, #3
40020bc0:	aa000001 	bge	40020bcc <CyU3PUsbRegisterSetupCallback+0x54>
40020bc4:	e3a02003 	mov	r2, #3
40020bc8:	e5c32008 	strb	r2, [r3, #8]
40020bcc:	e12fff1e 	bx	lr
40020bd0:	40030dbc 	.word	0x40030dbc
40020bd4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020bd8 <CyU3PUsbResetHandler>:
40020bd8:	e92d4010 	push	{r4, lr}
40020bdc:	e3a00001 	mov	r0, #1
40020be0:	e59f1124 	ldr	r1, [pc, #292]	; 40020d0c <CyU3PUsbResetHandler+0x134>
40020be4:	e5c10009 	strb	r0, [r1, #9]
40020be8:	e59f0120 	ldr	r0, [pc, #288]	; 40020d10 <CyU3PUsbResetHandler+0x138>
40020bec:	e5900018 	ldr	r0, [r0, #24]
40020bf0:	e59f1118 	ldr	r1, [pc, #280]	; 40020d10 <CyU3PUsbResetHandler+0x138>
40020bf4:	e581000c 	str	r0, [r1, #12]
40020bf8:	e2810000 	add	r0, r1, #0
40020bfc:	e5900014 	ldr	r0, [r0, #20]
40020c00:	e5810010 	str	r0, [r1, #16]
40020c04:	e59f0108 	ldr	r0, [pc, #264]	; 40020d14 <CyU3PUsbResetHandler+0x13c>
40020c08:	e5900000 	ldr	r0, [r0]
40020c0c:	e3500000 	cmp	r0, #0
40020c10:	0a000010 	beq	40020c58 <CyU3PUsbResetHandler+0x80>
40020c14:	e59f00f0 	ldr	r0, [pc, #240]	; 40020d0c <CyU3PUsbResetHandler+0x134>
40020c18:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020c1c:	e3500000 	cmp	r0, #0
40020c20:	1a000007 	bne	40020c44 <CyU3PUsbResetHandler+0x6c>
40020c24:	e3a01000 	mov	r1, #0
40020c28:	e1a00001 	mov	r0, r1
40020c2c:	e59f20e0 	ldr	r2, [pc, #224]	; 40020d14 <CyU3PUsbResetHandler+0x13c>
40020c30:	e5922000 	ldr	r2, [r2]
40020c34:	e12fff32 	blx	r2
40020c38:	e3a00001 	mov	r0, #1
40020c3c:	e59f10c8 	ldr	r1, [pc, #200]	; 40020d0c <CyU3PUsbResetHandler+0x134>
40020c40:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020c44:	e3a01000 	mov	r1, #0
40020c48:	e3a00004 	mov	r0, #4
40020c4c:	e59f20c0 	ldr	r2, [pc, #192]	; 40020d14 <CyU3PUsbResetHandler+0x13c>
40020c50:	e5922000 	ldr	r2, [r2]
40020c54:	e12fff32 	blx	r2
40020c58:	e59f00b8 	ldr	r0, [pc, #184]	; 40020d18 <CyU3PUsbResetHandler+0x140>
40020c5c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020c60:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020c64:	e59f10ac 	ldr	r1, [pc, #172]	; 40020d18 <CyU3PUsbResetHandler+0x140>
40020c68:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020c6c:	e3a00001 	mov	r0, #1
40020c70:	ebffca2e 	bl	40013530 <CyU3PBusyWait>
40020c74:	e59f009c 	ldr	r0, [pc, #156]	; 40020d18 <CyU3PUsbResetHandler+0x140>
40020c78:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020c7c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020c80:	e59f1090 	ldr	r1, [pc, #144]	; 40020d18 <CyU3PUsbResetHandler+0x140>
40020c84:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020c88:	e3a00001 	mov	r0, #1
40020c8c:	ebffca27 	bl	40013530 <CyU3PBusyWait>
40020c90:	e3a00040 	mov	r0, #64	; 0x40
40020c94:	e59f107c 	ldr	r1, [pc, #124]	; 40020d18 <CyU3PUsbResetHandler+0x140>
40020c98:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020c9c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020ca0:	e1c10000 	bic	r0, r1, r0
40020ca4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020ca8:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020cac:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020cb0:	e1a00001 	mov	r0, r1
40020cb4:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020cb8:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020cbc:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020cc0:	e3a00001 	mov	r0, #1
40020cc4:	ebfffc14 	bl	4001fd1c <CyU3PUsbEpPrepare>
40020cc8:	e59f003c 	ldr	r0, [pc, #60]	; 40020d0c <CyU3PUsbResetHandler+0x134>
40020ccc:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020cd0:	e3500000 	cmp	r0, #0
40020cd4:	0a00000b 	beq	40020d08 <CyU3PUsbResetHandler+0x130>
40020cd8:	e59f002c 	ldr	r0, [pc, #44]	; 40020d0c <CyU3PUsbResetHandler+0x134>
40020cdc:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020ce0:	e3500003 	cmp	r0, #3
40020ce4:	3a000002 	bcc	40020cf4 <CyU3PUsbResetHandler+0x11c>
40020ce8:	e3a00000 	mov	r0, #0
40020cec:	e59f1018 	ldr	r1, [pc, #24]	; 40020d0c <CyU3PUsbResetHandler+0x134>
40020cf0:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020cf4:	e59f001c 	ldr	r0, [pc, #28]	; 40020d18 <CyU3PUsbResetHandler+0x140>
40020cf8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020cfc:	e3100901 	tst	r0, #16384	; 0x4000
40020d00:	1a000000 	bne	40020d08 <CyU3PUsbResetHandler+0x130>
40020d04:	ebffff13 	bl	40020958 <CyU3PUsbReEnableUsb3>
40020d08:	e8bd8010 	pop	{r4, pc}
40020d0c:	40031d40 	.word	0x40031d40
40020d10:	40031f98 	.word	0x40031f98
40020d14:	40030db8 	.word	0x40030db8
40020d18:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020d1c <CyU3PUsbResumeHandler>:
40020d1c:	e92d4010 	push	{r4, lr}
40020d20:	e59f003c 	ldr	r0, [pc, #60]	; 40020d64 <CyU3PUsbResumeHandler+0x48>
40020d24:	e5d00008 	ldrb	r0, [r0, #8]
40020d28:	e3500005 	cmp	r0, #5
40020d2c:	ba00000b 	blt	40020d60 <CyU3PUsbResumeHandler+0x44>
40020d30:	e59f0030 	ldr	r0, [pc, #48]	; 40020d68 <CyU3PUsbResumeHandler+0x4c>
40020d34:	e5900000 	ldr	r0, [r0]
40020d38:	e3500000 	cmp	r0, #0
40020d3c:	0a000004 	beq	40020d54 <CyU3PUsbResumeHandler+0x38>
40020d40:	e3a01000 	mov	r1, #0
40020d44:	e3a00003 	mov	r0, #3
40020d48:	e59f2018 	ldr	r2, [pc, #24]	; 40020d68 <CyU3PUsbResumeHandler+0x4c>
40020d4c:	e5922000 	ldr	r2, [r2]
40020d50:	e12fff32 	blx	r2
40020d54:	e3a00006 	mov	r0, #6
40020d58:	e59f1004 	ldr	r1, [pc, #4]	; 40020d64 <CyU3PUsbResumeHandler+0x48>
40020d5c:	e5c10008 	strb	r0, [r1, #8]
40020d60:	e8bd8010 	pop	{r4, pc}
40020d64:	40031d40 	.word	0x40031d40
40020d68:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020d6c <CyU3PUsbSSConnecthandler>:
40020d6c:	e92d4010 	push	{r4, lr}
40020d70:	e59f01d4 	ldr	r0, [pc, #468]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020d74:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d78:	e3100a02 	tst	r0, #8192	; 0x2000
40020d7c:	0a00002b 	beq	40020e30 <CyU3PUsbSSConnecthandler+0xc4>
40020d80:	e59f01c8 	ldr	r0, [pc, #456]	; 40020f50 <CyU3PUsbSSConnecthandler+0x1e4>
40020d84:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020d88:	e200403f 	and	r4, r0, #63	; 0x3f
40020d8c:	ea000003 	b	40020da0 <CyU3PUsbSSConnecthandler+0x34>
40020d90:	ebffa6e9 	bl	4000a93c <_txe_thread_relinquish>
40020d94:	e59f01b4 	ldr	r0, [pc, #436]	; 40020f50 <CyU3PUsbSSConnecthandler+0x1e4>
40020d98:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020d9c:	e200403f 	and	r4, r0, #63	; 0x3f
40020da0:	e59f01a4 	ldr	r0, [pc, #420]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020da4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020da8:	e3100901 	tst	r0, #16384	; 0x4000
40020dac:	0a000001 	beq	40020db8 <CyU3PUsbSSConnecthandler+0x4c>
40020db0:	e3540008 	cmp	r4, #8
40020db4:	0afffff5 	beq	40020d90 <CyU3PUsbSSConnecthandler+0x24>
40020db8:	e3540017 	cmp	r4, #23
40020dbc:	1a00000a 	bne	40020dec <CyU3PUsbSSConnecthandler+0x80>
40020dc0:	e59f018c 	ldr	r0, [pc, #396]	; 40020f54 <CyU3PUsbSSConnecthandler+0x1e8>
40020dc4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020dc8:	e3500000 	cmp	r0, #0
40020dcc:	1a000002 	bne	40020ddc <CyU3PUsbSSConnecthandler+0x70>
40020dd0:	e3a00010 	mov	r0, #16
40020dd4:	ebfffb21 	bl	4001fa60 <CyU3PUsbAddToEventLog>
40020dd8:	eb000060 	bl	40020f60 <CyU3PUsbSSDisConnecthandler>
40020ddc:	e3a00003 	mov	r0, #3
40020de0:	e59f116c 	ldr	r1, [pc, #364]	; 40020f54 <CyU3PUsbSSConnecthandler+0x1e8>
40020de4:	e5c10009 	strb	r0, [r1, #9]
40020de8:	e8bd8010 	pop	{r4, pc}
40020dec:	e59f0158 	ldr	r0, [pc, #344]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020df0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020df4:	e3100901 	tst	r0, #16384	; 0x4000
40020df8:	1a000000 	bne	40020e00 <CyU3PUsbSSConnecthandler+0x94>
40020dfc:	eafffff9 	b	40020de8 <CyU3PUsbSSConnecthandler+0x7c>
40020e00:	e59f0144 	ldr	r0, [pc, #324]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020e04:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020e08:	e3800008 	orr	r0, r0, #8
40020e0c:	e59f1138 	ldr	r1, [pc, #312]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020e10:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020e14:	e1a00001 	mov	r0, r1
40020e18:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e1c:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020e20:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020e24:	e1a00001 	mov	r0, r1
40020e28:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40020e2c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020e30:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40020e34:	e59f111c 	ldr	r1, [pc, #284]	; 40020f58 <CyU3PUsbSSConnecthandler+0x1ec>
40020e38:	e5810008 	str	r0, [r1, #8]
40020e3c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020e40:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40020e44:	e581001c 	str	r0, [r1, #28]
40020e48:	e3a00003 	mov	r0, #3
40020e4c:	e59f1100 	ldr	r1, [pc, #256]	; 40020f54 <CyU3PUsbSSConnecthandler+0x1e8>
40020e50:	e5c10009 	strb	r0, [r1, #9]
40020e54:	e59f00f0 	ldr	r0, [pc, #240]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020e58:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e5c:	e3800902 	orr	r0, r0, #32768	; 0x8000
40020e60:	e59f10e4 	ldr	r1, [pc, #228]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020e64:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020e68:	e1a00001 	mov	r0, r1
40020e6c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020e70:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020e74:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020e78:	e3a00001 	mov	r0, #1
40020e7c:	ebffc9ab 	bl	40013530 <CyU3PBusyWait>
40020e80:	e59f00c4 	ldr	r0, [pc, #196]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020e84:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020e88:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020e8c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020e90:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020e94:	e3a00001 	mov	r0, #1
40020e98:	ebffc9a4 	bl	40013530 <CyU3PBusyWait>
40020e9c:	e3a00000 	mov	r0, #0
40020ea0:	ebffeecd 	bl	4001c9dc <CyU3PUsbFlushEp>
40020ea4:	e3a00080 	mov	r0, #128	; 0x80
40020ea8:	ebffeecb 	bl	4001c9dc <CyU3PUsbFlushEp>
40020eac:	e59f009c 	ldr	r0, [pc, #156]	; 40020f50 <CyU3PUsbSSConnecthandler+0x1e4>
40020eb0:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40020eb4:	e3800001 	orr	r0, r0, #1
40020eb8:	e59f1090 	ldr	r1, [pc, #144]	; 40020f50 <CyU3PUsbSSConnecthandler+0x1e4>
40020ebc:	e5810500 	str	r0, [r1, #1280]	; 0x500
40020ec0:	e3a00c02 	mov	r0, #512	; 0x200
40020ec4:	e1c11200 	bic	r1, r1, r0, lsl #4
40020ec8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020ecc:	e1810200 	orr	r0, r1, r0, lsl #4
40020ed0:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40020ed4:	e3800001 	orr	r0, r0, #1
40020ed8:	e2811a02 	add	r1, r1, #8192	; 0x2000
40020edc:	e5810600 	str	r0, [r1, #1536]	; 0x600
40020ee0:	e3a00c02 	mov	r0, #512	; 0x200
40020ee4:	e1c11200 	bic	r1, r1, r0, lsl #4
40020ee8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020eec:	e3a00000 	mov	r0, #0
40020ef0:	ebfff121 	bl	4001d37c <CyU3PUsbResetEp>
40020ef4:	e3a00000 	mov	r0, #0
40020ef8:	ebffeeb7 	bl	4001c9dc <CyU3PUsbFlushEp>
40020efc:	e3a00080 	mov	r0, #128	; 0x80
40020f00:	ebfff11d 	bl	4001d37c <CyU3PUsbResetEp>
40020f04:	e3a00080 	mov	r0, #128	; 0x80
40020f08:	ebffeeb3 	bl	4001c9dc <CyU3PUsbFlushEp>
40020f0c:	e3a00c02 	mov	r0, #512	; 0x200
40020f10:	e59f1034 	ldr	r1, [pc, #52]	; 40020f4c <CyU3PUsbSSConnecthandler+0x1e0>
40020f14:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020f18:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020f1c:	e59f0038 	ldr	r0, [pc, #56]	; 40020f5c <CyU3PUsbSSConnecthandler+0x1f0>
40020f20:	e5900000 	ldr	r0, [r0]
40020f24:	e3500000 	cmp	r0, #0
40020f28:	0a000004 	beq	40020f40 <CyU3PUsbSSConnecthandler+0x1d4>
40020f2c:	e3a01001 	mov	r1, #1
40020f30:	e3a00000 	mov	r0, #0
40020f34:	e59f2020 	ldr	r2, [pc, #32]	; 40020f5c <CyU3PUsbSSConnecthandler+0x1f0>
40020f38:	e5922000 	ldr	r2, [r2]
40020f3c:	e12fff32 	blx	r2
40020f40:	e3a00003 	mov	r0, #3
40020f44:	ebfffb74 	bl	4001fd1c <CyU3PUsbEpPrepare>
40020f48:	eaffffa6 	b	40020de8 <CyU3PUsbSSConnecthandler+0x7c>
40020f4c:	e0031000 	.word	0xe0031000
40020f50:	e0033000 	.word	0xe0033000
40020f54:	40031d40 	.word	0x40031d40
40020f58:	e0052000 	.word	0xe0052000
40020f5c:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40020f60 <CyU3PUsbSSDisConnecthandler>:
40020f60:	e92d4010 	push	{r4, lr}
40020f64:	e59f0164 	ldr	r0, [pc, #356]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f68:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020f6c:	e3500000 	cmp	r0, #0
40020f70:	0a000005 	beq	40020f8c <CyU3PUsbSSDisConnecthandler+0x2c>
40020f74:	e59f0158 	ldr	r0, [pc, #344]	; 400210d4 <CyU3PUsbSSDisConnecthandler+0x174>
40020f78:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020f7c:	e59f114c 	ldr	r1, [pc, #332]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f80:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020f84:	e1100001 	tst	r0, r1
40020f88:	0a00004e 	beq	400210c8 <CyU3PUsbSSDisConnecthandler+0x168>
40020f8c:	e59f013c 	ldr	r0, [pc, #316]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f90:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020f94:	e2800001 	add	r0, r0, #1
40020f98:	e59f1130 	ldr	r1, [pc, #304]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f9c:	e5810058 	str	r0, [r1, #88]	; 0x58
40020fa0:	e59f0130 	ldr	r0, [pc, #304]	; 400210d8 <CyU3PUsbSSDisConnecthandler+0x178>
40020fa4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020fa8:	e3100a02 	tst	r0, #8192	; 0x2000
40020fac:	0a000020 	beq	40021034 <CyU3PUsbSSDisConnecthandler+0xd4>
40020fb0:	e59f0120 	ldr	r0, [pc, #288]	; 400210d8 <CyU3PUsbSSDisConnecthandler+0x178>
40020fb4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020fb8:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40020fbc:	e59f1114 	ldr	r1, [pc, #276]	; 400210d8 <CyU3PUsbSSDisConnecthandler+0x178>
40020fc0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020fc4:	e3a00002 	mov	r0, #2
40020fc8:	ebffc958 	bl	40013530 <CyU3PBusyWait>
40020fcc:	e59f0108 	ldr	r0, [pc, #264]	; 400210dc <CyU3PUsbSSDisConnecthandler+0x17c>
40020fd0:	e5900004 	ldr	r0, [r0, #4]
40020fd4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020fd8:	e59f10fc 	ldr	r1, [pc, #252]	; 400210dc <CyU3PUsbSSDisConnecthandler+0x17c>
40020fdc:	e5810004 	str	r0, [r1, #4]
40020fe0:	e3a00001 	mov	r0, #1
40020fe4:	ebffc951 	bl	40013530 <CyU3PBusyWait>
40020fe8:	e59f00f0 	ldr	r0, [pc, #240]	; 400210e0 <CyU3PUsbSSDisConnecthandler+0x180>
40020fec:	e590001c 	ldr	r0, [r0, #28]
40020ff0:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020ff4:	e59f10e4 	ldr	r1, [pc, #228]	; 400210e0 <CyU3PUsbSSDisConnecthandler+0x180>
40020ff8:	e581001c 	str	r0, [r1, #28]
40020ffc:	e59f00e0 	ldr	r0, [pc, #224]	; 400210e4 <CyU3PUsbSSDisConnecthandler+0x184>
40021000:	e5900000 	ldr	r0, [r0]
40021004:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021008:	e3a00001 	mov	r0, #1
4002100c:	ebffc947 	bl	40013530 <CyU3PBusyWait>
40021010:	e59f00c4 	ldr	r0, [pc, #196]	; 400210dc <CyU3PUsbSSDisConnecthandler+0x17c>
40021014:	e5900004 	ldr	r0, [r0, #4]
40021018:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4002101c:	e59f10b8 	ldr	r1, [pc, #184]	; 400210dc <CyU3PUsbSSDisConnecthandler+0x17c>
40021020:	e5810004 	str	r0, [r1, #4]
40021024:	e3a01000 	mov	r1, #0
40021028:	e3a00002 	mov	r0, #2
4002102c:	ebffecdf 	bl	4001c3b0 <CyU3PSetUsbCoreClock>
40021030:	ea000025 	b	400210cc <CyU3PUsbSSDisConnecthandler+0x16c>
40021034:	e3a00001 	mov	r0, #1
40021038:	e59f1090 	ldr	r1, [pc, #144]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
4002103c:	e5c10009 	strb	r0, [r1, #9]
40021040:	ebffef8c 	bl	4001ce78 <CyU3PUsbPhyDisable>
40021044:	e59f0084 	ldr	r0, [pc, #132]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
40021048:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4002104c:	e3500000 	cmp	r0, #0
40021050:	0a000019 	beq	400210bc <CyU3PUsbSSDisConnecthandler+0x15c>
40021054:	e59f008c 	ldr	r0, [pc, #140]	; 400210e8 <CyU3PUsbSSDisConnecthandler+0x188>
40021058:	e5900000 	ldr	r0, [r0]
4002105c:	e3500000 	cmp	r0, #0
40021060:	0a000005 	beq	4002107c <CyU3PUsbSSDisConnecthandler+0x11c>
40021064:	e3a00000 	mov	r0, #0
40021068:	e59f1078 	ldr	r1, [pc, #120]	; 400210e8 <CyU3PUsbSSDisConnecthandler+0x188>
4002106c:	e5810000 	str	r0, [r1]
40021070:	e3a00001 	mov	r0, #1
40021074:	ebffeff5 	bl	4001d050 <CyU3PUsbPhyEnable>
40021078:	ea000013 	b	400210cc <CyU3PUsbSSDisConnecthandler+0x16c>
4002107c:	e3a00003 	mov	r0, #3
40021080:	e59f1048 	ldr	r1, [pc, #72]	; 400210d0 <CyU3PUsbSSDisConnecthandler+0x170>
40021084:	e5c10008 	strb	r0, [r1, #8]
40021088:	e3a00000 	mov	r0, #0
4002108c:	e5c10009 	strb	r0, [r1, #9]
40021090:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021094:	e59f0050 	ldr	r0, [pc, #80]	; 400210ec <CyU3PUsbSSDisConnecthandler+0x18c>
40021098:	e5900000 	ldr	r0, [r0]
4002109c:	e3500000 	cmp	r0, #0
400210a0:	0a000009 	beq	400210cc <CyU3PUsbSSDisConnecthandler+0x16c>
400210a4:	e3a01000 	mov	r1, #0
400210a8:	e3a00014 	mov	r0, #20
400210ac:	e59f2038 	ldr	r2, [pc, #56]	; 400210ec <CyU3PUsbSSDisConnecthandler+0x18c>
400210b0:	e5922000 	ldr	r2, [r2]
400210b4:	e12fff32 	blx	r2
400210b8:	ea000003 	b	400210cc <CyU3PUsbSSDisConnecthandler+0x16c>
400210bc:	e3a00000 	mov	r0, #0
400210c0:	ebffefe2 	bl	4001d050 <CyU3PUsbPhyEnable>
400210c4:	ea000000 	b	400210cc <CyU3PUsbSSDisConnecthandler+0x16c>
400210c8:	ebfffa07 	bl	4001f8ec <CyU3PUibVbusChangeHandler>
400210cc:	e8bd8010 	pop	{r4, pc}
400210d0:	40031d40 	.word	0x40031d40
400210d4:	e0051000 	.word	0xe0051000
400210d8:	e0031000 	.word	0xe0031000
400210dc:	e0030000 	.word	0xe0030000
400210e0:	e0033000 	.word	0xe0033000
400210e4:	40030c74 	.word	0x40030c74
400210e8:	40030d90 	.word	0x40030d90
400210ec:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbSSReset:

400210f0 <CyU3PUsbSSReset>:
400210f0:	e92d4010 	push	{r4, lr}
400210f4:	e3a04000 	mov	r4, #0
400210f8:	e59f0170 	ldr	r0, [pc, #368]	; 40021270 <CyU3PUsbSSReset+0x180>
400210fc:	e5d00009 	ldrb	r0, [r0, #9]
40021100:	e3500003 	cmp	r0, #3
40021104:	0a000000 	beq	4002110c <CyU3PUsbSSReset+0x1c>
40021108:	e8bd8010 	pop	{r4, pc}
4002110c:	e59f0160 	ldr	r0, [pc, #352]	; 40021274 <CyU3PUsbSSReset+0x184>
40021110:	e5900000 	ldr	r0, [r0]
40021114:	e3500000 	cmp	r0, #0
40021118:	0a000004 	beq	40021130 <CyU3PUsbSSReset+0x40>
4002111c:	e3a01001 	mov	r1, #1
40021120:	e3a00004 	mov	r0, #4
40021124:	e59f2148 	ldr	r2, [pc, #328]	; 40021274 <CyU3PUsbSSReset+0x184>
40021128:	e5922000 	ldr	r2, [r2]
4002112c:	e12fff32 	blx	r2
40021130:	e59f0140 	ldr	r0, [pc, #320]	; 40021278 <CyU3PUsbSSReset+0x188>
40021134:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021138:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
4002113c:	e59f1134 	ldr	r1, [pc, #308]	; 40021278 <CyU3PUsbSSReset+0x188>
40021140:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021144:	e3a00001 	mov	r0, #1
40021148:	ebffc8f8 	bl	40013530 <CyU3PBusyWait>
4002114c:	e59f0124 	ldr	r0, [pc, #292]	; 40021278 <CyU3PUsbSSReset+0x188>
40021150:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021154:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021158:	e59f1118 	ldr	r1, [pc, #280]	; 40021278 <CyU3PUsbSSReset+0x188>
4002115c:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021160:	e3a00001 	mov	r0, #1
40021164:	ebffc8f1 	bl	40013530 <CyU3PBusyWait>
40021168:	e3a00000 	mov	r0, #0
4002116c:	ebffee1a 	bl	4001c9dc <CyU3PUsbFlushEp>
40021170:	e3a00080 	mov	r0, #128	; 0x80
40021174:	ebffee18 	bl	4001c9dc <CyU3PUsbFlushEp>
40021178:	e59f00fc 	ldr	r0, [pc, #252]	; 4002127c <CyU3PUsbSSReset+0x18c>
4002117c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021180:	e3800001 	orr	r0, r0, #1
40021184:	e59f10f0 	ldr	r1, [pc, #240]	; 4002127c <CyU3PUsbSSReset+0x18c>
40021188:	e5810500 	str	r0, [r1, #1280]	; 0x500
4002118c:	e3a00c02 	mov	r0, #512	; 0x200
40021190:	e1c11200 	bic	r1, r1, r0, lsl #4
40021194:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021198:	e1810200 	orr	r0, r1, r0, lsl #4
4002119c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
400211a0:	e3800001 	orr	r0, r0, #1
400211a4:	e2811a02 	add	r1, r1, #8192	; 0x2000
400211a8:	e5810600 	str	r0, [r1, #1536]	; 0x600
400211ac:	e3a00c02 	mov	r0, #512	; 0x200
400211b0:	e1c11200 	bic	r1, r1, r0, lsl #4
400211b4:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400211b8:	e3a00000 	mov	r0, #0
400211bc:	ebfff06e 	bl	4001d37c <CyU3PUsbResetEp>
400211c0:	e3a00000 	mov	r0, #0
400211c4:	ebffee04 	bl	4001c9dc <CyU3PUsbFlushEp>
400211c8:	e3a00080 	mov	r0, #128	; 0x80
400211cc:	ebfff06a 	bl	4001d37c <CyU3PUsbResetEp>
400211d0:	e3a00080 	mov	r0, #128	; 0x80
400211d4:	ebffee00 	bl	4001c9dc <CyU3PUsbFlushEp>
400211d8:	e3a00c02 	mov	r0, #512	; 0x200
400211dc:	e59f1094 	ldr	r1, [pc, #148]	; 40021278 <CyU3PUsbSSReset+0x188>
400211e0:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400211e4:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400211e8:	e3a04001 	mov	r4, #1
400211ec:	ea000019 	b	40021258 <CyU3PUsbSSReset+0x168>
400211f0:	e0840084 	add	r0, r4, r4, lsl #1
400211f4:	e59f1084 	ldr	r1, [pc, #132]	; 40021280 <CyU3PUsbSSReset+0x190>
400211f8:	e0810100 	add	r0, r1, r0, lsl #2
400211fc:	e5900004 	ldr	r0, [r0, #4]
40021200:	e3500001 	cmp	r0, #1
40021204:	1a000005 	bne	40021220 <CyU3PUsbSSReset+0x130>
40021208:	e3840080 	orr	r0, r4, #128	; 0x80
4002120c:	ebffedf2 	bl	4001c9dc <CyU3PUsbFlushEp>
40021210:	e3840080 	orr	r0, r4, #128	; 0x80
40021214:	e3a02001 	mov	r2, #1
40021218:	e3a01000 	mov	r1, #0
4002121c:	ebfff2ba 	bl	4001dd0c <CyU3PUsbStall>
40021220:	e0840084 	add	r0, r4, r4, lsl #1
40021224:	e59f1058 	ldr	r1, [pc, #88]	; 40021284 <CyU3PUsbSSReset+0x194>
40021228:	e0810100 	add	r0, r1, r0, lsl #2
4002122c:	e5900004 	ldr	r0, [r0, #4]
40021230:	e3500001 	cmp	r0, #1
40021234:	1a000005 	bne	40021250 <CyU3PUsbSSReset+0x160>
40021238:	e1a00004 	mov	r0, r4
4002123c:	ebffede6 	bl	4001c9dc <CyU3PUsbFlushEp>
40021240:	e3a02001 	mov	r2, #1
40021244:	e3a01000 	mov	r1, #0
40021248:	e1a00004 	mov	r0, r4
4002124c:	ebfff2ae 	bl	4001dd0c <CyU3PUsbStall>
40021250:	e2840001 	add	r0, r4, #1
40021254:	e20040ff 	and	r4, r0, #255	; 0xff
40021258:	e3540010 	cmp	r4, #16
4002125c:	baffffe3 	blt	400211f0 <CyU3PUsbSSReset+0x100>
40021260:	e3a00005 	mov	r0, #5
40021264:	e59f1004 	ldr	r1, [pc, #4]	; 40021270 <CyU3PUsbSSReset+0x180>
40021268:	e5c10008 	strb	r0, [r1, #8]
4002126c:	eaffffa5 	b	40021108 <CyU3PUsbSSReset+0x18>
40021270:	40031d40 	.word	0x40031d40
40021274:	40030db8 	.word	0x40030db8
40021278:	e0031000 	.word	0xe0031000
4002127c:	e0033000 	.word	0xe0033000
40021280:	40031bb8 	.word	0x40031bb8
40021284:	40031c78 	.word	0x40031c78

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

40021288 <CyU3PUsbSendCompliancePatterns>:
40021288:	e92d4070 	push	{r4, r5, r6, lr}
4002128c:	e3a04001 	mov	r4, #1
40021290:	e59f01ec 	ldr	r0, [pc, #492]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021294:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021298:	e200503f 	and	r5, r0, #63	; 0x3f
4002129c:	e3550017 	cmp	r5, #23
400212a0:	0a000000 	beq	400212a8 <CyU3PUsbSendCompliancePatterns+0x20>
400212a4:	e8bd8070 	pop	{r4, r5, r6, pc}
400212a8:	e3a00003 	mov	r0, #3
400212ac:	e59f11d4 	ldr	r1, [pc, #468]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
400212b0:	e5c10009 	strb	r0, [r1, #9]
400212b4:	e3a00001 	mov	r0, #1
400212b8:	e5810064 	str	r0, [r1, #100]	; 0x64
400212bc:	e3a00000 	mov	r0, #0
400212c0:	e5810060 	str	r0, [r1, #96]	; 0x60
400212c4:	e3a00d57 	mov	r0, #5568	; 0x15c0
400212c8:	e59f11b4 	ldr	r1, [pc, #436]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
400212cc:	e5810054 	str	r0, [r1, #84]	; 0x54
400212d0:	e59f01b4 	ldr	r0, [pc, #436]	; 4002148c <CyU3PUsbSendCompliancePatterns+0x204>
400212d4:	e5900000 	ldr	r0, [r0]
400212d8:	e3500000 	cmp	r0, #0
400212dc:	0a000004 	beq	400212f4 <CyU3PUsbSendCompliancePatterns+0x6c>
400212e0:	e3a01000 	mov	r1, #0
400212e4:	e3a00015 	mov	r0, #21
400212e8:	e59f219c 	ldr	r2, [pc, #412]	; 4002148c <CyU3PUsbSendCompliancePatterns+0x204>
400212ec:	e5922000 	ldr	r2, [r2]
400212f0:	e12fff32 	blx	r2
400212f4:	e1a00000 	nop			; (mov r0, r0)
400212f8:	e59f0184 	ldr	r0, [pc, #388]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
400212fc:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021300:	e3100002 	tst	r0, #2
40021304:	0a000031 	beq	400213d0 <CyU3PUsbSendCompliancePatterns+0x148>
40021308:	e59f0180 	ldr	r0, [pc, #384]	; 40021490 <CyU3PUsbSendCompliancePatterns+0x208>
4002130c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40021310:	e59f116c 	ldr	r1, [pc, #364]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021314:	e5810138 	str	r0, [r1, #312]	; 0x138
40021318:	e3a00001 	mov	r0, #1
4002131c:	ebff9dd5 	bl	40008a78 <_tx_thread_sleep>
40021320:	e59f015c 	ldr	r0, [pc, #348]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021324:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021328:	e3c00002 	bic	r0, r0, #2
4002132c:	e59f1150 	ldr	r1, [pc, #336]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021330:	e5810064 	str	r0, [r1, #100]	; 0x64
40021334:	e3540004 	cmp	r4, #4
40021338:	1a000020 	bne	400213c0 <CyU3PUsbSendCompliancePatterns+0x138>
4002133c:	ea00000d 	b	40021378 <CyU3PUsbSendCompliancePatterns+0xf0>
40021340:	e59f013c 	ldr	r0, [pc, #316]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021344:	e590001c 	ldr	r0, [r0, #28]
40021348:	e3800008 	orr	r0, r0, #8
4002134c:	e59f1130 	ldr	r1, [pc, #304]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021350:	e581001c 	str	r0, [r1, #28]
40021354:	e3a0000a 	mov	r0, #10
40021358:	ebffc874 	bl	40013530 <CyU3PBusyWait>
4002135c:	e59f0120 	ldr	r0, [pc, #288]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021360:	e590001c 	ldr	r0, [r0, #28]
40021364:	e3c00008 	bic	r0, r0, #8
40021368:	e59f1114 	ldr	r1, [pc, #276]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002136c:	e581001c 	str	r0, [r1, #28]
40021370:	e3a0001e 	mov	r0, #30
40021374:	ebffc86d 	bl	40013530 <CyU3PBusyWait>
40021378:	e59f0104 	ldr	r0, [pc, #260]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002137c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021380:	e3100006 	tst	r0, #6
40021384:	1a00000d 	bne	400213c0 <CyU3PUsbSendCompliancePatterns+0x138>
40021388:	e59f00f8 	ldr	r0, [pc, #248]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
4002138c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021390:	e3500000 	cmp	r0, #0
40021394:	0a000005 	beq	400213b0 <CyU3PUsbSendCompliancePatterns+0x128>
40021398:	e59f00f4 	ldr	r0, [pc, #244]	; 40021494 <CyU3PUsbSendCompliancePatterns+0x20c>
4002139c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400213a0:	e59f10e0 	ldr	r1, [pc, #224]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
400213a4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400213a8:	e1100001 	tst	r0, r1
400213ac:	0a000003 	beq	400213c0 <CyU3PUsbSendCompliancePatterns+0x138>
400213b0:	e59f00d0 	ldr	r0, [pc, #208]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
400213b4:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400213b8:	e3500000 	cmp	r0, #0
400213bc:	0affffdf 	beq	40021340 <CyU3PUsbSendCompliancePatterns+0xb8>
400213c0:	e3a01009 	mov	r1, #9
400213c4:	e2840001 	add	r0, r4, #1
400213c8:	ebffbde8 	bl	40010b70 <__aeabi_idivmod>
400213cc:	e20140ff 	and	r4, r1, #255	; 0xff
400213d0:	e59f00ac 	ldr	r0, [pc, #172]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
400213d4:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400213d8:	e3100004 	tst	r0, #4
400213dc:	1a00000d 	bne	40021418 <CyU3PUsbSendCompliancePatterns+0x190>
400213e0:	e59f00a0 	ldr	r0, [pc, #160]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
400213e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400213e8:	e3500000 	cmp	r0, #0
400213ec:	0a000005 	beq	40021408 <CyU3PUsbSendCompliancePatterns+0x180>
400213f0:	e59f009c 	ldr	r0, [pc, #156]	; 40021494 <CyU3PUsbSendCompliancePatterns+0x20c>
400213f4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400213f8:	e59f1088 	ldr	r1, [pc, #136]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
400213fc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021400:	e1100001 	tst	r0, r1
40021404:	0a000003 	beq	40021418 <CyU3PUsbSendCompliancePatterns+0x190>
40021408:	e59f0078 	ldr	r0, [pc, #120]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
4002140c:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021410:	e3500001 	cmp	r0, #1
40021414:	1a000009 	bne	40021440 <CyU3PUsbSendCompliancePatterns+0x1b8>
40021418:	e59f0064 	ldr	r0, [pc, #100]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002141c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021420:	e3c00004 	bic	r0, r0, #4
40021424:	e59f1058 	ldr	r1, [pc, #88]	; 40021484 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021428:	e5810064 	str	r0, [r1, #100]	; 0x64
4002142c:	e3a00c06 	mov	r0, #1536	; 0x600
40021430:	e5810138 	str	r0, [r1, #312]	; 0x138
40021434:	e3a00000 	mov	r0, #0
40021438:	e5810054 	str	r0, [r1, #84]	; 0x54
4002143c:	ea000002 	b	4002144c <CyU3PUsbSendCompliancePatterns+0x1c4>
40021440:	e3a00001 	mov	r0, #1
40021444:	ebff9d8b 	bl	40008a78 <_tx_thread_sleep>
40021448:	eaffffaa 	b	400212f8 <CyU3PUsbSendCompliancePatterns+0x70>
4002144c:	e1a00000 	nop			; (mov r0, r0)
40021450:	e59f0034 	ldr	r0, [pc, #52]	; 4002148c <CyU3PUsbSendCompliancePatterns+0x204>
40021454:	e5900000 	ldr	r0, [r0]
40021458:	e3500000 	cmp	r0, #0
4002145c:	0a000004 	beq	40021474 <CyU3PUsbSendCompliancePatterns+0x1ec>
40021460:	e3a01000 	mov	r1, #0
40021464:	e3a00016 	mov	r0, #22
40021468:	e59f201c 	ldr	r2, [pc, #28]	; 4002148c <CyU3PUsbSendCompliancePatterns+0x204>
4002146c:	e5922000 	ldr	r2, [r2]
40021470:	e12fff32 	blx	r2
40021474:	e3a00000 	mov	r0, #0
40021478:	e59f1008 	ldr	r1, [pc, #8]	; 40021488 <CyU3PUsbSendCompliancePatterns+0x200>
4002147c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021480:	eaffff87 	b	400212a4 <CyU3PUsbSendCompliancePatterns+0x1c>
40021484:	e0033000 	.word	0xe0033000
40021488:	40031d40 	.word	0x40031d40
4002148c:	40030db8 	.word	0x40030db8
40021490:	40011e9c 	.word	0x40011e9c
40021494:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

40021498 <CyU3PUsbSetupCommand>:
40021498:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4002149c:	e3a06000 	mov	r6, #0
400214a0:	e3a07000 	mov	r7, #0
400214a4:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
400214a8:	e5d00009 	ldrb	r0, [r0, #9]
400214ac:	e3500003 	cmp	r0, #3
400214b0:	1a00001a 	bne	40021520 <CyU3PUsbSetupCommand+0x88>
400214b4:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021c70 <CyU3PUsbSetupCommand+0x7d8>
400214b8:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
400214bc:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
400214c0:	e3a00001 	mov	r0, #1
400214c4:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
400214c8:	e5810050 	str	r0, [r1, #80]	; 0x50
400214cc:	e3a00000 	mov	r0, #0
400214d0:	e59f179c 	ldr	r1, [pc, #1948]	; 40021c74 <CyU3PUsbSetupCommand+0x7dc>
400214d4:	e5810000 	str	r0, [r1]
400214d8:	e59f0798 	ldr	r0, [pc, #1944]	; 40021c78 <CyU3PUsbSetupCommand+0x7e0>
400214dc:	ebffa5d7 	bl	4000ac40 <_txe_timer_deactivate>
400214e0:	e3a00b02 	mov	r0, #2048	; 0x800
400214e4:	e59f1784 	ldr	r1, [pc, #1924]	; 40021c70 <CyU3PUsbSetupCommand+0x7d8>
400214e8:	e5810404 	str	r0, [r1, #1028]	; 0x404
400214ec:	e1c10000 	bic	r0, r1, r0
400214f0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400214f4:	e200603f 	and	r6, r0, #63	; 0x3f
400214f8:	e3560011 	cmp	r6, #17
400214fc:	0a000001 	beq	40021508 <CyU3PUsbSetupCommand+0x70>
40021500:	e3560012 	cmp	r6, #18
40021504:	1a000003 	bne	40021518 <CyU3PUsbSetupCommand+0x80>
40021508:	e3a02000 	mov	r2, #0
4002150c:	e3a01401 	mov	r1, #16777216	; 0x1000000
40021510:	e59f0764 	ldr	r0, [pc, #1892]	; 40021c7c <CyU3PUsbSetupCommand+0x7e4>
40021514:	ebffa24f 	bl	40009e58 <_txe_event_flags_set>
40021518:	e3a06000 	mov	r6, #0
4002151c:	ea00000d 	b	40021558 <CyU3PUsbSetupCommand+0xc0>
40021520:	e59f0744 	ldr	r0, [pc, #1860]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021524:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021528:	e3500000 	cmp	r0, #0
4002152c:	0a000006 	beq	4002154c <CyU3PUsbSetupCommand+0xb4>
40021530:	e59f0734 	ldr	r0, [pc, #1844]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021534:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021538:	e3500003 	cmp	r0, #3
4002153c:	2a000002 	bcs	4002154c <CyU3PUsbSetupCommand+0xb4>
40021540:	e3a00001 	mov	r0, #1
40021544:	e59f1720 	ldr	r1, [pc, #1824]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021548:	e581004c 	str	r0, [r1, #76]	; 0x4c
4002154c:	e59f072c 	ldr	r0, [pc, #1836]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
40021550:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
40021554:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
40021558:	e3a01064 	mov	r1, #100	; 0x64
4002155c:	e59f0720 	ldr	r0, [pc, #1824]	; 40021c84 <CyU3PUsbSetupCommand+0x7ec>
40021560:	ebffd5fd 	bl	40016d5c <CyU3PDmaChannelWaitForCompletion>
40021564:	e1a06000 	mov	r6, r0
40021568:	e3560000 	cmp	r6, #0
4002156c:	0a00000b 	beq	400215a0 <CyU3PUsbSetupCommand+0x108>
40021570:	e3560042 	cmp	r6, #66	; 0x42
40021574:	0a000009 	beq	400215a0 <CyU3PUsbSetupCommand+0x108>
40021578:	e3a01001 	mov	r1, #1
4002157c:	e3a00000 	mov	r0, #0
40021580:	ebfff11b 	bl	4001d9f4 <CyU3PUsbSetEpNak>
40021584:	e3a00064 	mov	r0, #100	; 0x64
40021588:	ebffc7e8 	bl	40013530 <CyU3PBusyWait>
4002158c:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021c84 <CyU3PUsbSetupCommand+0x7ec>
40021590:	ebffd320 	bl	40016218 <CyU3PDmaChannelReset>
40021594:	e3a01000 	mov	r1, #0
40021598:	e1a00001 	mov	r0, r1
4002159c:	ebfff114 	bl	4001d9f4 <CyU3PUsbSetEpNak>
400215a0:	e3a01064 	mov	r1, #100	; 0x64
400215a4:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021c88 <CyU3PUsbSetupCommand+0x7f0>
400215a8:	ebffd5eb 	bl	40016d5c <CyU3PDmaChannelWaitForCompletion>
400215ac:	e1a06000 	mov	r6, r0
400215b0:	e3560000 	cmp	r6, #0
400215b4:	0a00000d 	beq	400215f0 <CyU3PUsbSetupCommand+0x158>
400215b8:	e3560042 	cmp	r6, #66	; 0x42
400215bc:	0a00000b 	beq	400215f0 <CyU3PUsbSetupCommand+0x158>
400215c0:	e3a01001 	mov	r1, #1
400215c4:	e3a00080 	mov	r0, #128	; 0x80
400215c8:	ebfff109 	bl	4001d9f4 <CyU3PUsbSetEpNak>
400215cc:	e3a00064 	mov	r0, #100	; 0x64
400215d0:	ebffc7d6 	bl	40013530 <CyU3PBusyWait>
400215d4:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021c88 <CyU3PUsbSetupCommand+0x7f0>
400215d8:	ebffd30e 	bl	40016218 <CyU3PDmaChannelReset>
400215dc:	e3a00080 	mov	r0, #128	; 0x80
400215e0:	ebffecfd 	bl	4001c9dc <CyU3PUsbFlushEp>
400215e4:	e3a01000 	mov	r1, #0
400215e8:	e3a00080 	mov	r0, #128	; 0x80
400215ec:	ebfff100 	bl	4001d9f4 <CyU3PUsbSetEpNak>
400215f0:	e3a06000 	mov	r6, #0
400215f4:	e20490ff 	and	r9, r4, #255	; 0xff
400215f8:	e209a060 	and	sl, r9, #96	; 0x60
400215fc:	e2090003 	and	r0, r9, #3
40021600:	e58d0008 	str	r0, [sp, #8]
40021604:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021608:	e1a08420 	lsr	r8, r0, #8
4002160c:	e59f0678 	ldr	r0, [pc, #1656]	; 40021c8c <CyU3PUsbSetupCommand+0x7f4>
40021610:	e000b824 	and	fp, r0, r4, lsr #16
40021614:	e0050000 	and	r0, r5, r0
40021618:	e58d0004 	str	r0, [sp, #4]
4002161c:	e59f0668 	ldr	r0, [pc, #1640]	; 40021c8c <CyU3PUsbSetupCommand+0x7f4>
40021620:	e0000825 	and	r0, r0, r5, lsr #16
40021624:	e58d0000 	str	r0, [sp]
40021628:	e3140080 	tst	r4, #128	; 0x80
4002162c:	0a000003 	beq	40021640 <CyU3PUsbSetupCommand+0x1a8>
40021630:	e59d0000 	ldr	r0, [sp]
40021634:	e59f1644 	ldr	r1, [pc, #1604]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
40021638:	e5810458 	str	r0, [r1, #1112]	; 0x458
4002163c:	ea000002 	b	4002164c <CyU3PUsbSetupCommand+0x1b4>
40021640:	e59d0000 	ldr	r0, [sp]
40021644:	e59f1634 	ldr	r1, [pc, #1588]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
40021648:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
4002164c:	e3a00000 	mov	r0, #0
40021650:	e59f1614 	ldr	r1, [pc, #1556]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021654:	e5810040 	str	r0, [r1, #64]	; 0x40
40021658:	e59f0620 	ldr	r0, [pc, #1568]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
4002165c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021660:	e3c00008 	bic	r0, r0, #8
40021664:	e59f1614 	ldr	r1, [pc, #1556]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
40021668:	e5810518 	str	r0, [r1, #1304]	; 0x518
4002166c:	e3a00000 	mov	r0, #0
40021670:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021674:	e5810018 	str	r0, [r1, #24]
40021678:	e5810070 	str	r0, [r1, #112]	; 0x70
4002167c:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
40021680:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021684:	e3800008 	orr	r0, r0, #8
40021688:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021c80 <CyU3PUsbSetupCommand+0x7e8>
4002168c:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021690:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021694:	e5d00007 	ldrb	r0, [r0, #7]
40021698:	e3500001 	cmp	r0, #1
4002169c:	0a000001 	beq	400216a8 <CyU3PUsbSetupCommand+0x210>
400216a0:	e35a0000 	cmp	sl, #0
400216a4:	0a000024 	beq	4002173c <CyU3PUsbSetupCommand+0x2a4>
400216a8:	e35a0000 	cmp	sl, #0
400216ac:	1a000012 	bne	400216fc <CyU3PUsbSetupCommand+0x264>
400216b0:	e3580009 	cmp	r8, #9
400216b4:	1a000010 	bne	400216fc <CyU3PUsbSetupCommand+0x264>
400216b8:	e35b0001 	cmp	fp, #1
400216bc:	1a00000b 	bne	400216f0 <CyU3PUsbSetupCommand+0x258>
400216c0:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
400216c4:	e5d10009 	ldrb	r0, [r1, #9]
400216c8:	ebfff993 	bl	4001fd1c <CyU3PUsbEpPrepare>
400216cc:	e3a00006 	mov	r0, #6
400216d0:	e59f1594 	ldr	r1, [pc, #1428]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
400216d4:	e5c10008 	strb	r0, [r1, #8]
400216d8:	e5c1b00c 	strb	fp, [r1, #12]
400216dc:	e2810000 	add	r0, r1, #0
400216e0:	e5d00006 	ldrb	r0, [r0, #6]
400216e4:	e2000001 	and	r0, r0, #1
400216e8:	e5c10006 	strb	r0, [r1, #6]
400216ec:	ea000002 	b	400216fc <CyU3PUsbSetupCommand+0x264>
400216f0:	e3a00005 	mov	r0, #5
400216f4:	e59f1570 	ldr	r1, [pc, #1392]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
400216f8:	e5c10008 	strb	r0, [r1, #8]
400216fc:	e59f058c 	ldr	r0, [pc, #1420]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021700:	e5900000 	ldr	r0, [r0]
40021704:	e3500000 	cmp	r0, #0
40021708:	0a000005 	beq	40021724 <CyU3PUsbSetupCommand+0x28c>
4002170c:	e1a01005 	mov	r1, r5
40021710:	e1a00004 	mov	r0, r4
40021714:	e59f2574 	ldr	r2, [pc, #1396]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021718:	e5922000 	ldr	r2, [r2]
4002171c:	e12fff32 	blx	r2
40021720:	e1a07000 	mov	r7, r0
40021724:	e3570001 	cmp	r7, #1
40021728:	1a000003 	bne	4002173c <CyU3PUsbSetupCommand+0x2a4>
4002172c:	e3a00001 	mov	r0, #1
40021730:	e59f1534 	ldr	r1, [pc, #1332]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021734:	e5810040 	str	r0, [r1, #64]	; 0x40
40021738:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4002173c:	e35a0000 	cmp	sl, #0
40021740:	1a000140 	bne	40021c48 <CyU3PUsbSetupCommand+0x7b0>
40021744:	e3580009 	cmp	r8, #9
40021748:	0a0000b1 	beq	40021a14 <CyU3PUsbSetupCommand+0x57c>
4002174c:	ca00000b 	bgt	40021780 <CyU3PUsbSetupCommand+0x2e8>
40021750:	e3580009 	cmp	r8, #9
40021754:	308ff108 	addcc	pc, pc, r8, lsl #2
40021758:	ea000137 	b	40021c3c <CyU3PUsbSetupCommand+0x7a4>
4002175c:	ea000014 	b	400217b4 <CyU3PUsbSetupCommand+0x31c>
40021760:	ea000029 	b	4002180c <CyU3PUsbSetupCommand+0x374>
40021764:	ea000134 	b	40021c3c <CyU3PUsbSetupCommand+0x7a4>
40021768:	ea000057 	b	400218cc <CyU3PUsbSetupCommand+0x434>
4002176c:	ea000132 	b	40021c3c <CyU3PUsbSetupCommand+0x7a4>
40021770:	ea000131 	b	40021c3c <CyU3PUsbSetupCommand+0x7a4>
40021774:	ea000099 	b	400219e0 <CyU3PUsbSetupCommand+0x548>
40021778:	ea00012f 	b	40021c3c <CyU3PUsbSetupCommand+0x7a4>
4002177c:	ea00009d 	b	400219f8 <CyU3PUsbSetupCommand+0x560>
40021780:	e358000c 	cmp	r8, #12
40021784:	0a0000fb 	beq	40021b78 <CyU3PUsbSetupCommand+0x6e0>
40021788:	ca000004 	bgt	400217a0 <CyU3PUsbSetupCommand+0x308>
4002178c:	e358000a 	cmp	r8, #10
40021790:	0a0000c5 	beq	40021aac <CyU3PUsbSetupCommand+0x614>
40021794:	e358000b 	cmp	r8, #11
40021798:	1a000127 	bne	40021c3c <CyU3PUsbSetupCommand+0x7a4>
4002179c:	ea0000d6 	b	40021afc <CyU3PUsbSetupCommand+0x664>
400217a0:	e3580030 	cmp	r8, #48	; 0x30
400217a4:	0a0000f7 	beq	40021b88 <CyU3PUsbSetupCommand+0x6f0>
400217a8:	e3580031 	cmp	r8, #49	; 0x31
400217ac:	1a000122 	bne	40021c3c <CyU3PUsbSetupCommand+0x7a4>
400217b0:	ea000114 	b	40021c08 <CyU3PUsbSetupCommand+0x770>
400217b4:	e1a00000 	nop			; (mov r0, r0)
400217b8:	e59d0008 	ldr	r0, [sp, #8]
400217bc:	e3500001 	cmp	r0, #1
400217c0:	1a00000c 	bne	400217f8 <CyU3PUsbSetupCommand+0x360>
400217c4:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
400217c8:	e5900000 	ldr	r0, [r0]
400217cc:	e3500000 	cmp	r0, #0
400217d0:	0a000008 	beq	400217f8 <CyU3PUsbSetupCommand+0x360>
400217d4:	e1a01005 	mov	r1, r5
400217d8:	e1a00004 	mov	r0, r4
400217dc:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
400217e0:	e5922000 	ldr	r2, [r2]
400217e4:	e12fff32 	blx	r2
400217e8:	e1a07000 	mov	r7, r0
400217ec:	e3570000 	cmp	r7, #0
400217f0:	0a000000 	beq	400217f8 <CyU3PUsbSetupCommand+0x360>
400217f4:	ea000112 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
400217f8:	e59d0008 	ldr	r0, [sp, #8]
400217fc:	e59d1004 	ldr	r1, [sp, #4]
40021800:	ebfffbd3 	bl	40020754 <CyU3PUsbHandleGetStatus>
40021804:	e1a07000 	mov	r7, r0
40021808:	ea00010d 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
4002180c:	e1a00000 	nop			; (mov r0, r0)
40021810:	e59d0008 	ldr	r0, [sp, #8]
40021814:	e3500000 	cmp	r0, #0
40021818:	1a000002 	bne	40021828 <CyU3PUsbSetupCommand+0x390>
4002181c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021820:	ebfffa86 	bl	40020240 <CyU3PUsbHandleClearFeature>
40021824:	eaffffc3 	b	40021738 <CyU3PUsbSetupCommand+0x2a0>
40021828:	e3a07000 	mov	r7, #0
4002182c:	e59f0438 	ldr	r0, [pc, #1080]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021830:	e5d00007 	ldrb	r0, [r0, #7]
40021834:	e3500000 	cmp	r0, #0
40021838:	1a00000e 	bne	40021878 <CyU3PUsbSetupCommand+0x3e0>
4002183c:	e59f044c 	ldr	r0, [pc, #1100]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021840:	e5900000 	ldr	r0, [r0]
40021844:	e3500000 	cmp	r0, #0
40021848:	0a00000a 	beq	40021878 <CyU3PUsbSetupCommand+0x3e0>
4002184c:	e1a01005 	mov	r1, r5
40021850:	e1a00004 	mov	r0, r4
40021854:	e59f2434 	ldr	r2, [pc, #1076]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021858:	e5922000 	ldr	r2, [r2]
4002185c:	e12fff32 	blx	r2
40021860:	e1a07000 	mov	r7, r0
40021864:	e3570000 	cmp	r7, #0
40021868:	0a000002 	beq	40021878 <CyU3PUsbSetupCommand+0x3e0>
4002186c:	e3a00001 	mov	r0, #1
40021870:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021874:	e5810040 	str	r0, [r1, #64]	; 0x40
40021878:	e3570000 	cmp	r7, #0
4002187c:	1a000011 	bne	400218c8 <CyU3PUsbSetupCommand+0x430>
40021880:	e59d0008 	ldr	r0, [sp, #8]
40021884:	e3500002 	cmp	r0, #2
40021888:	1a00000e 	bne	400218c8 <CyU3PUsbSetupCommand+0x430>
4002188c:	e35b0000 	cmp	fp, #0
40021890:	1a00000c 	bne	400218c8 <CyU3PUsbSetupCommand+0x430>
40021894:	e59d1004 	ldr	r1, [sp, #4]
40021898:	e20100ff 	and	r0, r1, #255	; 0xff
4002189c:	e3a02001 	mov	r2, #1
400218a0:	e3a01000 	mov	r1, #0
400218a4:	ebfff118 	bl	4001dd0c <CyU3PUsbStall>
400218a8:	e3500000 	cmp	r0, #0
400218ac:	1a000005 	bne	400218c8 <CyU3PUsbSetupCommand+0x430>
400218b0:	e59d1004 	ldr	r1, [sp, #4]
400218b4:	e20100ff 	and	r0, r1, #255	; 0xff
400218b8:	ebffeeaf 	bl	4001d37c <CyU3PUsbResetEp>
400218bc:	ebffeb4e 	bl	4001c5fc <CyU3PUsbAckSetup>
400218c0:	e3a07001 	mov	r7, #1
400218c4:	ea0000de 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
400218c8:	ea0000dd 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
400218cc:	e1a00000 	nop			; (mov r0, r0)
400218d0:	e59d0008 	ldr	r0, [sp, #8]
400218d4:	e3500000 	cmp	r0, #0
400218d8:	1a00001b 	bne	4002194c <CyU3PUsbSetupCommand+0x4b4>
400218dc:	e35b0003 	cmp	fp, #3
400218e0:	0a000004 	beq	400218f8 <CyU3PUsbSetupCommand+0x460>
400218e4:	e35b0004 	cmp	fp, #4
400218e8:	0a000002 	beq	400218f8 <CyU3PUsbSetupCommand+0x460>
400218ec:	e20b00ff 	and	r0, fp, #255	; 0xff
400218f0:	ebfffbd5 	bl	4002084c <CyU3PUsbHandleSetFeature>
400218f4:	eaffff8f 	b	40021738 <CyU3PUsbSetupCommand+0x2a0>
400218f8:	e59f036c 	ldr	r0, [pc, #876]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
400218fc:	e5d00007 	ldrb	r0, [r0, #7]
40021900:	e3500000 	cmp	r0, #0
40021904:	1a00000f 	bne	40021948 <CyU3PUsbSetupCommand+0x4b0>
40021908:	e59f0380 	ldr	r0, [pc, #896]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
4002190c:	e5900000 	ldr	r0, [r0]
40021910:	e3500000 	cmp	r0, #0
40021914:	0a00000b 	beq	40021948 <CyU3PUsbSetupCommand+0x4b0>
40021918:	e1a01005 	mov	r1, r5
4002191c:	e1a00004 	mov	r0, r4
40021920:	e59f2368 	ldr	r2, [pc, #872]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021924:	e5922000 	ldr	r2, [r2]
40021928:	e12fff32 	blx	r2
4002192c:	e1a07000 	mov	r7, r0
40021930:	e3570000 	cmp	r7, #0
40021934:	0a000003 	beq	40021948 <CyU3PUsbSetupCommand+0x4b0>
40021938:	e3a00001 	mov	r0, #1
4002193c:	e59f1328 	ldr	r1, [pc, #808]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021940:	e5810040 	str	r0, [r1, #64]	; 0x40
40021944:	eaffff7b 	b	40021738 <CyU3PUsbSetupCommand+0x2a0>
40021948:	ea0000bd 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
4002194c:	e3a07000 	mov	r7, #0
40021950:	e59f0314 	ldr	r0, [pc, #788]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021954:	e5d00007 	ldrb	r0, [r0, #7]
40021958:	e3500000 	cmp	r0, #0
4002195c:	1a00000e 	bne	4002199c <CyU3PUsbSetupCommand+0x504>
40021960:	e59f0328 	ldr	r0, [pc, #808]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021964:	e5900000 	ldr	r0, [r0]
40021968:	e3500000 	cmp	r0, #0
4002196c:	0a00000a 	beq	4002199c <CyU3PUsbSetupCommand+0x504>
40021970:	e1a01005 	mov	r1, r5
40021974:	e1a00004 	mov	r0, r4
40021978:	e59f2310 	ldr	r2, [pc, #784]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
4002197c:	e5922000 	ldr	r2, [r2]
40021980:	e12fff32 	blx	r2
40021984:	e1a07000 	mov	r7, r0
40021988:	e3570000 	cmp	r7, #0
4002198c:	0a000002 	beq	4002199c <CyU3PUsbSetupCommand+0x504>
40021990:	e3a00001 	mov	r0, #1
40021994:	e59f12d0 	ldr	r1, [pc, #720]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021998:	e5810040 	str	r0, [r1, #64]	; 0x40
4002199c:	e3570000 	cmp	r7, #0
400219a0:	1a00000d 	bne	400219dc <CyU3PUsbSetupCommand+0x544>
400219a4:	e59d0008 	ldr	r0, [sp, #8]
400219a8:	e3500002 	cmp	r0, #2
400219ac:	1a00000a 	bne	400219dc <CyU3PUsbSetupCommand+0x544>
400219b0:	e35b0000 	cmp	fp, #0
400219b4:	1a000008 	bne	400219dc <CyU3PUsbSetupCommand+0x544>
400219b8:	e59d1004 	ldr	r1, [sp, #4]
400219bc:	e20100ff 	and	r0, r1, #255	; 0xff
400219c0:	e3a02000 	mov	r2, #0
400219c4:	e3a01001 	mov	r1, #1
400219c8:	ebfff0cf 	bl	4001dd0c <CyU3PUsbStall>
400219cc:	e3500000 	cmp	r0, #0
400219d0:	1a000001 	bne	400219dc <CyU3PUsbSetupCommand+0x544>
400219d4:	ebffeb08 	bl	4001c5fc <CyU3PUsbAckSetup>
400219d8:	e3a07001 	mov	r7, #1
400219dc:	ea000098 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
400219e0:	e1a00000 	nop			; (mov r0, r0)
400219e4:	e1a01005 	mov	r1, r5
400219e8:	e1a00004 	mov	r0, r4
400219ec:	ebfff5d5 	bl	4001f148 <CyU3PUibSendDescr>
400219f0:	e1a07000 	mov	r7, r0
400219f4:	ea000092 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
400219f8:	e1a00000 	nop			; (mov r0, r0)
400219fc:	e3a07001 	mov	r7, #1
40021a00:	e59f128c 	ldr	r1, [pc, #652]	; 40021c94 <CyU3PUsbSetupCommand+0x7fc>
40021a04:	e3a00001 	mov	r0, #1
40021a08:	ebffee94 	bl	4001d460 <CyU3PUsbSendEP0Data>
40021a0c:	e1a06000 	mov	r6, r0
40021a10:	ea00008b 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021a14:	e1a00000 	nop			; (mov r0, r0)
40021a18:	e3a07001 	mov	r7, #1
40021a1c:	e35b0000 	cmp	fp, #0
40021a20:	0a000005 	beq	40021a3c <CyU3PUsbSetupCommand+0x5a4>
40021a24:	e35b0001 	cmp	fp, #1
40021a28:	1a00001a 	bne	40021a98 <CyU3PUsbSetupCommand+0x600>
40021a2c:	e59f1238 	ldr	r1, [pc, #568]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021a30:	e5d10009 	ldrb	r0, [r1, #9]
40021a34:	ebfff8b8 	bl	4001fd1c <CyU3PUsbEpPrepare>
40021a38:	e1a00000 	nop			; (mov r0, r0)
40021a3c:	e35b0000 	cmp	fp, #0
40021a40:	1a000001 	bne	40021a4c <CyU3PUsbSetupCommand+0x5b4>
40021a44:	e3a00005 	mov	r0, #5
40021a48:	ea000000 	b	40021a50 <CyU3PUsbSetupCommand+0x5b8>
40021a4c:	e3a00006 	mov	r0, #6
40021a50:	e59f1214 	ldr	r1, [pc, #532]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021a54:	e5c10008 	strb	r0, [r1, #8]
40021a58:	e5c1b00c 	strb	fp, [r1, #12]
40021a5c:	e2810000 	add	r0, r1, #0
40021a60:	e5d00006 	ldrb	r0, [r0, #6]
40021a64:	e2000001 	and	r0, r0, #1
40021a68:	e5c10006 	strb	r0, [r1, #6]
40021a6c:	e59f0224 	ldr	r0, [pc, #548]	; 40021c98 <CyU3PUsbSetupCommand+0x800>
40021a70:	e5900000 	ldr	r0, [r0]
40021a74:	e3500000 	cmp	r0, #0
40021a78:	0a000004 	beq	40021a90 <CyU3PUsbSetupCommand+0x5f8>
40021a7c:	e1a0100b 	mov	r1, fp
40021a80:	e3a00005 	mov	r0, #5
40021a84:	e59f220c 	ldr	r2, [pc, #524]	; 40021c98 <CyU3PUsbSetupCommand+0x800>
40021a88:	e5922000 	ldr	r2, [r2]
40021a8c:	e12fff32 	blx	r2
40021a90:	ebffead9 	bl	4001c5fc <CyU3PUsbAckSetup>
40021a94:	ea000002 	b	40021aa4 <CyU3PUsbSetupCommand+0x60c>
40021a98:	e1a00000 	nop			; (mov r0, r0)
40021a9c:	e3a06040 	mov	r6, #64	; 0x40
40021aa0:	e1a00000 	nop			; (mov r0, r0)
40021aa4:	e1a00000 	nop			; (mov r0, r0)
40021aa8:	ea000065 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021aac:	e1a00000 	nop			; (mov r0, r0)
40021ab0:	e59f01d8 	ldr	r0, [pc, #472]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021ab4:	e5900000 	ldr	r0, [r0]
40021ab8:	e3500000 	cmp	r0, #0
40021abc:	0a000008 	beq	40021ae4 <CyU3PUsbSetupCommand+0x64c>
40021ac0:	e1a01005 	mov	r1, r5
40021ac4:	e1a00004 	mov	r0, r4
40021ac8:	e59f21c0 	ldr	r2, [pc, #448]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021acc:	e5922000 	ldr	r2, [r2]
40021ad0:	e12fff32 	blx	r2
40021ad4:	e1a07000 	mov	r7, r0
40021ad8:	e3570000 	cmp	r7, #0
40021adc:	0a000000 	beq	40021ae4 <CyU3PUsbSetupCommand+0x64c>
40021ae0:	ea000057 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021ae4:	e3a07001 	mov	r7, #1
40021ae8:	e59f11ac 	ldr	r1, [pc, #428]	; 40021c9c <CyU3PUsbSetupCommand+0x804>
40021aec:	e3a00001 	mov	r0, #1
40021af0:	ebffee5a 	bl	4001d460 <CyU3PUsbSendEP0Data>
40021af4:	e1a06000 	mov	r6, r0
40021af8:	ea000051 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021afc:	e1a00000 	nop			; (mov r0, r0)
40021b00:	e59f0188 	ldr	r0, [pc, #392]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021b04:	e5900000 	ldr	r0, [r0]
40021b08:	e3500000 	cmp	r0, #0
40021b0c:	0a000008 	beq	40021b34 <CyU3PUsbSetupCommand+0x69c>
40021b10:	e1a01005 	mov	r1, r5
40021b14:	e1a00004 	mov	r0, r4
40021b18:	e59f2170 	ldr	r2, [pc, #368]	; 40021c90 <CyU3PUsbSetupCommand+0x7f8>
40021b1c:	e5922000 	ldr	r2, [r2]
40021b20:	e12fff32 	blx	r2
40021b24:	e1a07000 	mov	r7, r0
40021b28:	e3570000 	cmp	r7, #0
40021b2c:	0a000000 	beq	40021b34 <CyU3PUsbSetupCommand+0x69c>
40021b30:	ea000043 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021b34:	e59f1130 	ldr	r1, [pc, #304]	; 40021c6c <CyU3PUsbSetupCommand+0x7d4>
40021b38:	e5c1b00d 	strb	fp, [r1, #13]
40021b3c:	e59f0154 	ldr	r0, [pc, #340]	; 40021c98 <CyU3PUsbSetupCommand+0x800>
40021b40:	e5900000 	ldr	r0, [r0]
40021b44:	e3500000 	cmp	r0, #0
40021b48:	0a000007 	beq	40021b6c <CyU3PUsbSetupCommand+0x6d4>
40021b4c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021b50:	e59d2004 	ldr	r2, [sp, #4]
40021b54:	e1800402 	orr	r0, r0, r2, lsl #8
40021b58:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021b5c:	e3a00007 	mov	r0, #7
40021b60:	e59f2130 	ldr	r2, [pc, #304]	; 40021c98 <CyU3PUsbSetupCommand+0x800>
40021b64:	e5922000 	ldr	r2, [r2]
40021b68:	e12fff32 	blx	r2
40021b6c:	e3a07001 	mov	r7, #1
40021b70:	ebffeaa1 	bl	4001c5fc <CyU3PUsbAckSetup>
40021b74:	ea000032 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021b78:	e1a00000 	nop			; (mov r0, r0)
40021b7c:	e3a07001 	mov	r7, #1
40021b80:	ebffea9d 	bl	4001c5fc <CyU3PUsbAckSetup>
40021b84:	ea00002e 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021b88:	e1a00000 	nop			; (mov r0, r0)
40021b8c:	ebffec37 	bl	4001cc70 <CyU3PUsbGetSpeed>
40021b90:	e3500003 	cmp	r0, #3
40021b94:	1a000019 	bne	40021c00 <CyU3PUsbSetupCommand+0x768>
40021b98:	e35b0000 	cmp	fp, #0
40021b9c:	1a000017 	bne	40021c00 <CyU3PUsbSetupCommand+0x768>
40021ba0:	e59d0004 	ldr	r0, [sp, #4]
40021ba4:	e3500000 	cmp	r0, #0
40021ba8:	1a000014 	bne	40021c00 <CyU3PUsbSetupCommand+0x768>
40021bac:	e59d0000 	ldr	r0, [sp]
40021bb0:	e3500006 	cmp	r0, #6
40021bb4:	1a000011 	bne	40021c00 <CyU3PUsbSetupCommand+0x768>
40021bb8:	e3a07001 	mov	r7, #1
40021bbc:	e3a02000 	mov	r2, #0
40021bc0:	e59f10d8 	ldr	r1, [pc, #216]	; 40021ca0 <CyU3PUsbSetupCommand+0x808>
40021bc4:	e3a00020 	mov	r0, #32
40021bc8:	ebffebb6 	bl	4001caa8 <CyU3PUsbGetEP0Data>
40021bcc:	e1a06000 	mov	r6, r0
40021bd0:	e59f00c0 	ldr	r0, [pc, #192]	; 40021c98 <CyU3PUsbSetupCommand+0x800>
40021bd4:	e5900000 	ldr	r0, [r0]
40021bd8:	e3500000 	cmp	r0, #0
40021bdc:	0a000008 	beq	40021c04 <CyU3PUsbSetupCommand+0x76c>
40021be0:	e3560000 	cmp	r6, #0
40021be4:	1a000006 	bne	40021c04 <CyU3PUsbSetupCommand+0x76c>
40021be8:	e3a01000 	mov	r1, #0
40021bec:	e3a00008 	mov	r0, #8
40021bf0:	e59f20a0 	ldr	r2, [pc, #160]	; 40021c98 <CyU3PUsbSetupCommand+0x800>
40021bf4:	e5922000 	ldr	r2, [r2]
40021bf8:	e12fff32 	blx	r2
40021bfc:	ea000000 	b	40021c04 <CyU3PUsbSetupCommand+0x76c>
40021c00:	e3a07000 	mov	r7, #0
40021c04:	ea00000e 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021c08:	e1a00000 	nop			; (mov r0, r0)
40021c0c:	ebffec17 	bl	4001cc70 <CyU3PUsbGetSpeed>
40021c10:	e3500003 	cmp	r0, #3
40021c14:	1a000007 	bne	40021c38 <CyU3PUsbSetupCommand+0x7a0>
40021c18:	e59d0004 	ldr	r0, [sp, #4]
40021c1c:	e3500000 	cmp	r0, #0
40021c20:	1a000004 	bne	40021c38 <CyU3PUsbSetupCommand+0x7a0>
40021c24:	e59d0000 	ldr	r0, [sp]
40021c28:	e3500000 	cmp	r0, #0
40021c2c:	1a000001 	bne	40021c38 <CyU3PUsbSetupCommand+0x7a0>
40021c30:	e3a07001 	mov	r7, #1
40021c34:	ebffea70 	bl	4001c5fc <CyU3PUsbAckSetup>
40021c38:	ea000001 	b	40021c44 <CyU3PUsbSetupCommand+0x7ac>
40021c3c:	e1a00000 	nop			; (mov r0, r0)
40021c40:	e1a00000 	nop			; (mov r0, r0)
40021c44:	e1a00000 	nop			; (mov r0, r0)
40021c48:	e3570001 	cmp	r7, #1
40021c4c:	1a000001 	bne	40021c58 <CyU3PUsbSetupCommand+0x7c0>
40021c50:	e3560000 	cmp	r6, #0
40021c54:	0a000003 	beq	40021c68 <CyU3PUsbSetupCommand+0x7d0>
40021c58:	e3a02000 	mov	r2, #0
40021c5c:	e3a01001 	mov	r1, #1
40021c60:	e1a00002 	mov	r0, r2
40021c64:	ebfff028 	bl	4001dd0c <CyU3PUsbStall>
40021c68:	eafffeb2 	b	40021738 <CyU3PUsbSetupCommand+0x2a0>
40021c6c:	40031d40 	.word	0x40031d40
40021c70:	e0033000 	.word	0xe0033000
40021c74:	40030dcc 	.word	0x40030dcc
40021c78:	400326a0 	.word	0x400326a0
40021c7c:	40031eb8 	.word	0x40031eb8
40021c80:	e0031000 	.word	0xe0031000
40021c84:	40031b18 	.word	0x40031b18
40021c88:	40031a78 	.word	0x40031a78
40021c8c:	0000ffff 	.word	0x0000ffff
40021c90:	40030dbc 	.word	0x40030dbc
40021c94:	40031d4c 	.word	0x40031d4c
40021c98:	40030db8 	.word	0x40030db8
40021c9c:	40031d4d 	.word	0x40031d4d
40021ca0:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40021ca4 <CyU3PUsbSuspendHandler>:
40021ca4:	e92d4010 	push	{r4, lr}
40021ca8:	e59f003c 	ldr	r0, [pc, #60]	; 40021cec <CyU3PUsbSuspendHandler+0x48>
40021cac:	e5d00008 	ldrb	r0, [r0, #8]
40021cb0:	e3500005 	cmp	r0, #5
40021cb4:	ba00000b 	blt	40021ce8 <CyU3PUsbSuspendHandler+0x44>
40021cb8:	e59f0030 	ldr	r0, [pc, #48]	; 40021cf0 <CyU3PUsbSuspendHandler+0x4c>
40021cbc:	e5900000 	ldr	r0, [r0]
40021cc0:	e3500000 	cmp	r0, #0
40021cc4:	0a000004 	beq	40021cdc <CyU3PUsbSuspendHandler+0x38>
40021cc8:	e3a01000 	mov	r1, #0
40021ccc:	e3a00002 	mov	r0, #2
40021cd0:	e59f2018 	ldr	r2, [pc, #24]	; 40021cf0 <CyU3PUsbSuspendHandler+0x4c>
40021cd4:	e5922000 	ldr	r2, [r2]
40021cd8:	e12fff32 	blx	r2
40021cdc:	e3a00005 	mov	r0, #5
40021ce0:	e59f1004 	ldr	r1, [pc, #4]	; 40021cec <CyU3PUsbSuspendHandler+0x48>
40021ce4:	e5c10008 	strb	r0, [r1, #8]
40021ce8:	e8bd8010 	pop	{r4, pc}
40021cec:	40031d40 	.word	0x40031d40
40021cf0:	40030db8 	.word	0x40030db8

Disassembly of section i.HandleVbusOffEvent:

40021cf4 <HandleVbusOffEvent>:
40021cf4:	e92d4010 	push	{r4, lr}
40021cf8:	e59f00e0 	ldr	r0, [pc, #224]	; 40021de0 <HandleVbusOffEvent+0xec>
40021cfc:	e5d00009 	ldrb	r0, [r0, #9]
40021d00:	e3500003 	cmp	r0, #3
40021d04:	1a000002 	bne	40021d14 <HandleVbusOffEvent+0x20>
40021d08:	e3a00001 	mov	r0, #1
40021d0c:	ebffec59 	bl	4001ce78 <CyU3PUsbPhyDisable>
40021d10:	ea000022 	b	40021da0 <HandleVbusOffEvent+0xac>
40021d14:	e59f00c8 	ldr	r0, [pc, #200]	; 40021de4 <HandleVbusOffEvent+0xf0>
40021d18:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021d1c:	e3100901 	tst	r0, #16384	; 0x4000
40021d20:	0a00001c 	beq	40021d98 <HandleVbusOffEvent+0xa4>
40021d24:	e59f00b8 	ldr	r0, [pc, #184]	; 40021de4 <HandleVbusOffEvent+0xf0>
40021d28:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021d2c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021d30:	e59f10ac 	ldr	r1, [pc, #172]	; 40021de4 <HandleVbusOffEvent+0xf0>
40021d34:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021d38:	e3a00002 	mov	r0, #2
40021d3c:	ebffc5fb 	bl	40013530 <CyU3PBusyWait>
40021d40:	e59f00a0 	ldr	r0, [pc, #160]	; 40021de8 <HandleVbusOffEvent+0xf4>
40021d44:	e5900004 	ldr	r0, [r0, #4]
40021d48:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021d4c:	e59f1094 	ldr	r1, [pc, #148]	; 40021de8 <HandleVbusOffEvent+0xf4>
40021d50:	e5810004 	str	r0, [r1, #4]
40021d54:	e3a00001 	mov	r0, #1
40021d58:	ebffc5f4 	bl	40013530 <CyU3PBusyWait>
40021d5c:	e59f0088 	ldr	r0, [pc, #136]	; 40021dec <HandleVbusOffEvent+0xf8>
40021d60:	e590001c 	ldr	r0, [r0, #28]
40021d64:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021d68:	e59f107c 	ldr	r1, [pc, #124]	; 40021dec <HandleVbusOffEvent+0xf8>
40021d6c:	e581001c 	str	r0, [r1, #28]
40021d70:	e59f0078 	ldr	r0, [pc, #120]	; 40021df0 <HandleVbusOffEvent+0xfc>
40021d74:	e5900000 	ldr	r0, [r0]
40021d78:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021d7c:	e3a00001 	mov	r0, #1
40021d80:	ebffc5ea 	bl	40013530 <CyU3PBusyWait>
40021d84:	e59f005c 	ldr	r0, [pc, #92]	; 40021de8 <HandleVbusOffEvent+0xf4>
40021d88:	e5900004 	ldr	r0, [r0, #4]
40021d8c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021d90:	e59f1050 	ldr	r1, [pc, #80]	; 40021de8 <HandleVbusOffEvent+0xf4>
40021d94:	e5810004 	str	r0, [r1, #4]
40021d98:	e3a00000 	mov	r0, #0
40021d9c:	ebffec35 	bl	4001ce78 <CyU3PUsbPhyDisable>
40021da0:	e3a01000 	mov	r1, #0
40021da4:	e3a00001 	mov	r0, #1
40021da8:	e59f2044 	ldr	r2, [pc, #68]	; 40021df4 <HandleVbusOffEvent+0x100>
40021dac:	e5922000 	ldr	r2, [r2]
40021db0:	e12fff32 	blx	r2
40021db4:	e3a00000 	mov	r0, #0
40021db8:	e59f1020 	ldr	r1, [pc, #32]	; 40021de0 <HandleVbusOffEvent+0xec>
40021dbc:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021dc0:	e3a00004 	mov	r0, #4
40021dc4:	e5c10008 	strb	r0, [r1, #8]
40021dc8:	e3a00000 	mov	r0, #0
40021dcc:	e5c10009 	strb	r0, [r1, #9]
40021dd0:	e5810054 	str	r0, [r1, #84]	; 0x54
40021dd4:	e5810058 	str	r0, [r1, #88]	; 0x58
40021dd8:	e5810048 	str	r0, [r1, #72]	; 0x48
40021ddc:	e8bd8010 	pop	{r4, pc}
40021de0:	40031d40 	.word	0x40031d40
40021de4:	e0031000 	.word	0xe0031000
40021de8:	e0030000 	.word	0xe0030000
40021dec:	e0033000 	.word	0xe0033000
40021df0:	40030c74 	.word	0x40030c74
40021df4:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3POsTimerInit:

40021df8 <CyU3POsTimerInit>:
40021df8:	e92d4070 	push	{r4, r5, r6, lr}
40021dfc:	e1a04000 	mov	r4, r0
40021e00:	e3a00004 	mov	r0, #4
40021e04:	eb000047 	bl	40021f28 <CyU3PVicDisableInt>
40021e08:	e59f00f0 	ldr	r0, [pc, #240]	; 40021f00 <CyU3POsTimerInit+0x108>
40021e0c:	e5905014 	ldr	r5, [r0, #20]
40021e10:	e3a00064 	mov	r0, #100	; 0x64
40021e14:	ebffc5c5 	bl	40013530 <CyU3PBusyWait>
40021e18:	e3850c03 	orr	r0, r5, #768	; 0x300
40021e1c:	e59f10dc 	ldr	r1, [pc, #220]	; 40021f00 <CyU3POsTimerInit+0x108>
40021e20:	e5810014 	str	r0, [r1, #20]
40021e24:	e3a00064 	mov	r0, #100	; 0x64
40021e28:	ebffc5c0 	bl	40013530 <CyU3PBusyWait>
40021e2c:	e59f00cc 	ldr	r0, [pc, #204]	; 40021f00 <CyU3POsTimerInit+0x108>
40021e30:	e5905014 	ldr	r5, [r0, #20]
40021e34:	e3540000 	cmp	r4, #0
40021e38:	0a000001 	beq	40021e44 <CyU3POsTimerInit+0x4c>
40021e3c:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40021e40:	da000006 	ble	40021e60 <CyU3POsTimerInit+0x68>
40021e44:	e3a00001 	mov	r0, #1
40021e48:	e59f10b4 	ldr	r1, [pc, #180]	; 40021f04 <CyU3POsTimerInit+0x10c>
40021e4c:	e1c100b0 	strh	r0, [r1]
40021e50:	e3a00020 	mov	r0, #32
40021e54:	e59f10ac 	ldr	r1, [pc, #172]	; 40021f08 <CyU3POsTimerInit+0x110>
40021e58:	e5810000 	str	r0, [r1]
40021e5c:	ea000004 	b	40021e74 <CyU3POsTimerInit+0x7c>
40021e60:	e59f009c 	ldr	r0, [pc, #156]	; 40021f04 <CyU3POsTimerInit+0x10c>
40021e64:	e1c040b0 	strh	r4, [r0]
40021e68:	e1a00284 	lsl	r0, r4, #5
40021e6c:	e59f1094 	ldr	r1, [pc, #148]	; 40021f08 <CyU3POsTimerInit+0x110>
40021e70:	e5810000 	str	r0, [r1]
40021e74:	e59f008c 	ldr	r0, [pc, #140]	; 40021f08 <CyU3POsTimerInit+0x110>
40021e78:	e5900000 	ldr	r0, [r0]
40021e7c:	e2400007 	sub	r0, r0, #7
40021e80:	e59f1080 	ldr	r1, [pc, #128]	; 40021f08 <CyU3POsTimerInit+0x110>
40021e84:	e5810000 	str	r0, [r1]
40021e88:	e3a06000 	mov	r6, #0
40021e8c:	ea000001 	b	40021e98 <CyU3POsTimerInit+0xa0>
40021e90:	e2860001 	add	r0, r6, #1
40021e94:	e20060ff 	and	r6, r0, #255	; 0xff
40021e98:	e3a00001 	mov	r0, #1
40021e9c:	e1a00610 	lsl	r0, r0, r6
40021ea0:	e59f1060 	ldr	r1, [pc, #96]	; 40021f08 <CyU3POsTimerInit+0x110>
40021ea4:	e5911000 	ldr	r1, [r1]
40021ea8:	e1500001 	cmp	r0, r1
40021eac:	9afffff7 	bls	40021e90 <CyU3POsTimerInit+0x98>
40021eb0:	e59f0050 	ldr	r0, [pc, #80]	; 40021f08 <CyU3POsTimerInit+0x110>
40021eb4:	e5900000 	ldr	r0, [r0]
40021eb8:	e59f1040 	ldr	r1, [pc, #64]	; 40021f00 <CyU3POsTimerInit+0x108>
40021ebc:	e581001c 	str	r0, [r1, #28]
40021ec0:	e3a00064 	mov	r0, #100	; 0x64
40021ec4:	ebffc599 	bl	40013530 <CyU3PBusyWait>
40021ec8:	e3a00004 	mov	r0, #4
40021ecc:	eb00001a 	bl	40021f3c <CyU3PVicEnableInt>
40021ed0:	e59f0028 	ldr	r0, [pc, #40]	; 40021f00 <CyU3POsTimerInit+0x108>
40021ed4:	e5900014 	ldr	r0, [r0, #20]
40021ed8:	e3c05c03 	bic	r5, r0, #768	; 0x300
40021edc:	e3a00b01 	mov	r0, #1024	; 0x400
40021ee0:	e1800586 	orr	r0, r0, r6, lsl #11
40021ee4:	e1855000 	orr	r5, r5, r0
40021ee8:	e3855c01 	orr	r5, r5, #256	; 0x100
40021eec:	e3a00064 	mov	r0, #100	; 0x64
40021ef0:	ebffc58e 	bl	40013530 <CyU3PBusyWait>
40021ef4:	e59f0004 	ldr	r0, [pc, #4]	; 40021f00 <CyU3POsTimerInit+0x108>
40021ef8:	e5805014 	str	r5, [r0, #20]
40021efc:	e8bd8070 	pop	{r4, r5, r6, pc}
40021f00:	e0050000 	.word	0xe0050000
40021f04:	40030dd4 	.word	0x40030dd4
40021f08:	40030dd8 	.word	0x40030dd8

Disassembly of section i.CyU3PVicClearInt:

40021f0c <CyU3PVicClearInt>:
40021f0c:	e3a00000 	mov	r0, #0
40021f10:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40021f14:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40021f18 <CyU3PVicDisableAllInterrupts>:
40021f18:	e3a01000 	mov	r1, #0
40021f1c:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40021f20:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021f24:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40021f28 <CyU3PVicDisableInt>:
40021f28:	e3a01001 	mov	r1, #1
40021f2c:	e1a01011 	lsl	r1, r1, r0
40021f30:	e3a02000 	mov	r2, #0
40021f34:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40021f38:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40021f3c <CyU3PVicEnableInt>:
40021f3c:	e3a01001 	mov	r1, #1
40021f40:	e1a01011 	lsl	r1, r1, r0
40021f44:	e3a02000 	mov	r2, #0
40021f48:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40021f4c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40021f50 <CyU3PVicEnableInterrupts>:
40021f50:	e3a01000 	mov	r1, #0
40021f54:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40021f58:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40021f60 <CyU3PVicInit>:
40021f60:	e92d4010 	push	{r4, lr}
40021f64:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40021f68:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
40021f6c:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40021f70:	e3e00000 	mvn	r0, #0
40021f74:	e3a01000 	mov	r1, #0
40021f78:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021f7c:	e3a00000 	mov	r0, #0
40021f80:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40021f84:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40021f88:	ebffffdf 	bl	40021f0c <CyU3PVicClearInt>
40021f8c:	eb000001 	bl	40021f98 <__CyU3PVicSetupIntVectors_veneer>
40021f90:	e8bd8010 	pop	{r4, pc}
40021f94:	00000000 	andeq	r0, r0, r0

40021f98 <__CyU3PVicSetupIntVectors_veneer>:
40021f98:	e51ff004 	ldr	pc, [pc, #-4]	; 40021f9c <__CyU3PVicSetupIntVectors_veneer+0x4>
40021f9c:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40021fa0 <CyFx3Usb2PhySetup>:
40021fa0:	e59f0008 	ldr	r0, [pc, #8]	; 40021fb0 <CyFx3Usb2PhySetup+0x10>
40021fa4:	e59f1008 	ldr	r1, [pc, #8]	; 40021fb4 <CyFx3Usb2PhySetup+0x14>
40021fa8:	e581000c 	str	r0, [r1, #12]
40021fac:	e12fff1e 	bx	lr
40021fb0:	00d4a480 	.word	0x00d4a480
40021fb4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40021fb8 <CyFx3Usb3LnkRelaxHpTimeout>:
40021fb8:	e59f0008 	ldr	r0, [pc, #8]	; 40021fc8 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
40021fbc:	e59f1008 	ldr	r1, [pc, #8]	; 40021fcc <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40021fc0:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40021fc4:	e12fff1e 	bx	lr
40021fc8:	000009c4 	.word	0x000009c4
40021fcc:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40021fd0 <CyFx3Usb3LnkSetup>:
40021fd0:	e59f1024 	ldr	r1, [pc, #36]	; 40021ffc <CyFx3Usb3LnkSetup+0x2c>
40021fd4:	e59f0024 	ldr	r0, [pc, #36]	; 40022000 <CyFx3Usb3LnkSetup+0x30>
40021fd8:	e580109c 	str	r1, [r0, #156]	; 0x9c
40021fdc:	e5801080 	str	r1, [r0, #128]	; 0x80
40021fe0:	e59f101c 	ldr	r1, [pc, #28]	; 40022004 <CyFx3Usb3LnkSetup+0x34>
40021fe4:	e5801084 	str	r1, [r0, #132]	; 0x84
40021fe8:	e59f1018 	ldr	r1, [pc, #24]	; 40022008 <CyFx3Usb3LnkSetup+0x38>
40021fec:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40021ff0:	e3a0107d 	mov	r1, #125	; 0x7d
40021ff4:	e5801078 	str	r1, [r0, #120]	; 0x78
40021ff8:	e12fff1e 	bx	lr
40021ffc:	00002710 	.word	0x00002710
40022000:	e0033000 	.word	0xe0033000
40022004:	00fa004b 	.word	0x00fa004b
40022008:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

4002200c <CyFx3Usb3SendTP>:
4002200c:	e5902000 	ldr	r2, [r0]
40022010:	e59f1020 	ldr	r1, [pc, #32]	; 40022038 <CyFx3Usb3SendTP+0x2c>
40022014:	e5812450 	str	r2, [r1, #1104]	; 0x450
40022018:	e5902004 	ldr	r2, [r0, #4]
4002201c:	e5812454 	str	r2, [r1, #1108]	; 0x454
40022020:	e5900008 	ldr	r0, [r0, #8]
40022024:	e5810458 	str	r0, [r1, #1112]	; 0x458
40022028:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
4002202c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022030:	e5810460 	str	r0, [r1, #1120]	; 0x460
40022034:	e12fff1e 	bx	lr
40022038:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

4002203c <CyFx3UsbDmaPrefetchEnable>:
4002203c:	e3500000 	cmp	r0, #0
40022040:	e59f001c 	ldr	r0, [pc, #28]	; 40022064 <CyFx3UsbDmaPrefetchEnable+0x28>
40022044:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40022048:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
4002204c:	12811a09 	addne	r1, r1, #36864	; 0x9000
40022050:	e3c22903 	bic	r2, r2, #49152	; 0xc000
40022054:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40022058:	e1811002 	orr	r1, r1, r2
4002205c:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40022060:	e12fff1e 	bx	lr
40022064:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

40022068 <CyFx3UsbPowerOn>:
40022068:	e92d4010 	push	{r4, lr}
4002206c:	e59f406c 	ldr	r4, [pc, #108]	; 400220e0 <CyFx3UsbPowerOn+0x78>
40022070:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022074:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022078:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
4002207c:	e3a0000a 	mov	r0, #10
40022080:	ebffca77 	bl	40014a64 <CyFx3BusyWait>
40022084:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022088:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002208c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40022090:	e3a00064 	mov	r0, #100	; 0x64
40022094:	ebffca72 	bl	40014a64 <CyFx3BusyWait>
40022098:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
4002209c:	e3100001 	tst	r0, #1
400220a0:	0afffffc 	beq	40022098 <CyFx3UsbPowerOn+0x30>
400220a4:	ebffca64 	bl	40014a3c <CyFx3DevIsUsb3Supported>
400220a8:	e59f4034 	ldr	r4, [pc, #52]	; 400220e4 <CyFx3UsbPowerOn+0x7c>
400220ac:	e3500000 	cmp	r0, #0
400220b0:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
400220b4:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
400220b8:	03a0000a 	moveq	r0, #10
400220bc:	0bffca68 	bleq	40014a64 <CyFx3BusyWait>
400220c0:	ebffca3f 	bl	400149c4 <CyFx3DevIsOtgSupported>
400220c4:	e3500000 	cmp	r0, #0
400220c8:	18bd8010 	popne	{r4, pc}
400220cc:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400220d0:	e584080c 	str	r0, [r4, #2060]	; 0x80c
400220d4:	e8bd4010 	pop	{r4, lr}
400220d8:	e3a0000a 	mov	r0, #10
400220dc:	eaffca60 	b	40014a64 <CyFx3BusyWait>
400220e0:	e0037000 	.word	0xe0037000
400220e4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

400220e8 <CyFx3UsbWritePhyReg>:
400220e8:	e59f2084 	ldr	r2, [pc, #132]	; 40022174 <CyFx3UsbWritePhyReg+0x8c>
400220ec:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
400220f0:	e3120901 	tst	r2, #16384	; 0x4000
400220f4:	012fff1e 	bxeq	lr
400220f8:	e59f2078 	ldr	r2, [pc, #120]	; 40022178 <CyFx3UsbWritePhyReg+0x90>
400220fc:	e5820024 	str	r0, [r2, #36]	; 0x24
40022100:	e3803801 	orr	r3, r0, #65536	; 0x10000
40022104:	e5823024 	str	r3, [r2, #36]	; 0x24
40022108:	e5923028 	ldr	r3, [r2, #40]	; 0x28
4002210c:	e3130801 	tst	r3, #65536	; 0x10000
40022110:	0afffffc 	beq	40022108 <CyFx3UsbWritePhyReg+0x20>
40022114:	e5820024 	str	r0, [r2, #36]	; 0x24
40022118:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002211c:	e3100801 	tst	r0, #65536	; 0x10000
40022120:	1afffffc 	bne	40022118 <CyFx3UsbWritePhyReg+0x30>
40022124:	e5821024 	str	r1, [r2, #36]	; 0x24
40022128:	e3810802 	orr	r0, r1, #131072	; 0x20000
4002212c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022130:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022134:	e3100801 	tst	r0, #65536	; 0x10000
40022138:	0afffffc 	beq	40022130 <CyFx3UsbWritePhyReg+0x48>
4002213c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022140:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022144:	e3100801 	tst	r0, #65536	; 0x10000
40022148:	1afffffc 	bne	40022140 <CyFx3UsbWritePhyReg+0x58>
4002214c:	e3810702 	orr	r0, r1, #524288	; 0x80000
40022150:	e5820024 	str	r0, [r2, #36]	; 0x24
40022154:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022158:	e3100801 	tst	r0, #65536	; 0x10000
4002215c:	0afffffc 	beq	40022154 <CyFx3UsbWritePhyReg+0x6c>
40022160:	e5821024 	str	r1, [r2, #36]	; 0x24
40022164:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022168:	e3100801 	tst	r0, #65536	; 0x10000
4002216c:	1afffffc 	bne	40022164 <CyFx3UsbWritePhyReg+0x7c>
40022170:	e12fff1e 	bx	lr
40022174:	e0031000 	.word	0xe0031000
40022178:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

4002217c <CyU3PDmaDscrChainCreate>:
4002217c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022180:	e24dd018 	sub	sp, sp, #24
40022184:	e1a04000 	mov	r4, r0
40022188:	e1a05001 	mov	r5, r1
4002218c:	e1a06002 	mov	r6, r2
40022190:	e1a07003 	mov	r7, r3
40022194:	e3a0a000 	mov	sl, #0
40022198:	eb0000a6 	bl	40022438 <CyU3PDmaDscrGetFreeCount>
4002219c:	e1500005 	cmp	r0, r5
400221a0:	aa000002 	bge	400221b0 <CyU3PDmaDscrChainCreate+0x34>
400221a4:	e3a00010 	mov	r0, #16
400221a8:	e28dd018 	add	sp, sp, #24
400221ac:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400221b0:	e3540000 	cmp	r4, #0
400221b4:	1a000001 	bne	400221c0 <CyU3PDmaDscrChainCreate+0x44>
400221b8:	e3a00040 	mov	r0, #64	; 0x40
400221bc:	eafffff9 	b	400221a8 <CyU3PDmaDscrChainCreate+0x2c>
400221c0:	e3550000 	cmp	r5, #0
400221c4:	1a000001 	bne	400221d0 <CyU3PDmaDscrChainCreate+0x54>
400221c8:	e3a00040 	mov	r0, #64	; 0x40
400221cc:	eafffff5 	b	400221a8 <CyU3PDmaDscrChainCreate+0x2c>
400221d0:	e1a09005 	mov	r9, r5
400221d4:	e1a00004 	mov	r0, r4
400221d8:	eb00005e 	bl	40022358 <CyU3PDmaDscrGet>
400221dc:	e1d480b0 	ldrh	r8, [r4]
400221e0:	ea000029 	b	4002228c <CyU3PDmaDscrChainCreate+0x110>
400221e4:	e3590000 	cmp	r9, #0
400221e8:	0a000002 	beq	400221f8 <CyU3PDmaDscrChainCreate+0x7c>
400221ec:	e28d0014 	add	r0, sp, #20
400221f0:	eb000058 	bl	40022358 <CyU3PDmaDscrGet>
400221f4:	ea000001 	b	40022200 <CyU3PDmaDscrChainCreate+0x84>
400221f8:	e1d400b0 	ldrh	r0, [r4]
400221fc:	e58d0014 	str	r0, [sp, #20]
40022200:	e3560000 	cmp	r6, #0
40022204:	0a000015 	beq	40022260 <CyU3PDmaDscrChainCreate+0xe4>
40022208:	e35a0000 	cmp	sl, #0
4002220c:	1a000013 	bne	40022260 <CyU3PDmaDscrChainCreate+0xe4>
40022210:	e1a00006 	mov	r0, r6
40022214:	ebff86d3 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022218:	e58d0004 	str	r0, [sp, #4]
4002221c:	e59f00a0 	ldr	r0, [pc, #160]	; 400222c4 <CyU3PDmaDscrChainCreate+0x148>
40022220:	e0000006 	and	r0, r0, r6
40022224:	e58d0010 	str	r0, [sp, #16]
40022228:	e59d0004 	ldr	r0, [sp, #4]
4002222c:	e3500000 	cmp	r0, #0
40022230:	1a000000 	bne	40022238 <CyU3PDmaDscrChainCreate+0xbc>
40022234:	e3a0a010 	mov	sl, #16
40022238:	e59d0004 	ldr	r0, [sp, #4]
4002223c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022240:	3a000004 	bcc	40022258 <CyU3PDmaDscrChainCreate+0xdc>
40022244:	e59d0004 	ldr	r0, [sp, #4]
40022248:	e0800006 	add	r0, r0, r6
4002224c:	e59f1074 	ldr	r1, [pc, #116]	; 400222c8 <CyU3PDmaDscrChainCreate+0x14c>
40022250:	e1500001 	cmp	r0, r1
40022254:	3a000004 	bcc	4002226c <CyU3PDmaDscrChainCreate+0xf0>
40022258:	e3a0a010 	mov	sl, #16
4002225c:	ea000002 	b	4002226c <CyU3PDmaDscrChainCreate+0xf0>
40022260:	e3a00000 	mov	r0, #0
40022264:	e58d0004 	str	r0, [sp, #4]
40022268:	e58d0010 	str	r0, [sp, #16]
4002226c:	e58d7008 	str	r7, [sp, #8]
40022270:	e1dd01b4 	ldrh	r0, [sp, #20]
40022274:	e1800800 	orr	r0, r0, r0, lsl #16
40022278:	e58d000c 	str	r0, [sp, #12]
4002227c:	e28d1004 	add	r1, sp, #4
40022280:	e1a00008 	mov	r0, r8
40022284:	eb0000c6 	bl	400225a4 <CyU3PDmaDscrSetConfig>
40022288:	e1dd81b4 	ldrh	r8, [sp, #20]
4002228c:	e1b00009 	movs	r0, r9
40022290:	e2491001 	sub	r1, r9, #1
40022294:	e1a09801 	lsl	r9, r1, #16
40022298:	e1a09829 	lsr	r9, r9, #16
4002229c:	1affffd0 	bne	400221e4 <CyU3PDmaDscrChainCreate+0x68>
400222a0:	e35a0000 	cmp	sl, #0
400222a4:	0a000004 	beq	400222bc <CyU3PDmaDscrChainCreate+0x140>
400222a8:	e1d400b0 	ldrh	r0, [r4]
400222ac:	e3a03001 	mov	r3, #1
400222b0:	e1a02003 	mov	r2, r3
400222b4:	e1a01005 	mov	r1, r5
400222b8:	eb000003 	bl	400222cc <CyU3PDmaDscrChainDestroy>
400222bc:	e1a0000a 	mov	r0, sl
400222c0:	eaffffb8 	b	400221a8 <CyU3PDmaDscrChainCreate+0x2c>
400222c4:	0000fff0 	.word	0x0000fff0
400222c8:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

400222cc <CyU3PDmaDscrChainDestroy>:
400222cc:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400222d0:	e1a04000 	mov	r4, r0
400222d4:	e1a05001 	mov	r5, r1
400222d8:	e1a06002 	mov	r6, r2
400222dc:	e1a07003 	mov	r7, r3
400222e0:	ea000015 	b	4002233c <CyU3PDmaDscrChainDestroy+0x70>
400222e4:	e1a0100d 	mov	r1, sp
400222e8:	e1a00004 	mov	r0, r4
400222ec:	eb000091 	bl	40022538 <CyU3PDmaDscrGetConfig>
400222f0:	e3570000 	cmp	r7, #0
400222f4:	0a000004 	beq	4002230c <CyU3PDmaDscrChainDestroy+0x40>
400222f8:	e59d0000 	ldr	r0, [sp]
400222fc:	e3500000 	cmp	r0, #0
40022300:	0a000001 	beq	4002230c <CyU3PDmaDscrChainDestroy+0x40>
40022304:	e59d0000 	ldr	r0, [sp]
40022308:	ebff86f9 	bl	40003ef4 <CyU3PDmaBufferFree>
4002230c:	e3560000 	cmp	r6, #0
40022310:	0a000003 	beq	40022324 <CyU3PDmaDscrChainDestroy+0x58>
40022314:	e59d0008 	ldr	r0, [sp, #8]
40022318:	e59f1034 	ldr	r1, [pc, #52]	; 40022354 <CyU3PDmaDscrChainDestroy+0x88>
4002231c:	e0018820 	and	r8, r1, r0, lsr #16
40022320:	ea000002 	b	40022330 <CyU3PDmaDscrChainDestroy+0x64>
40022324:	e59d0008 	ldr	r0, [sp, #8]
40022328:	e1a08800 	lsl	r8, r0, #16
4002232c:	e1a08828 	lsr	r8, r8, #16
40022330:	e1a00004 	mov	r0, r4
40022334:	eb000058 	bl	4002249c <CyU3PDmaDscrPut>
40022338:	e1a04008 	mov	r4, r8
4002233c:	e1b00005 	movs	r0, r5
40022340:	e2451001 	sub	r1, r5, #1
40022344:	e1a05801 	lsl	r5, r1, #16
40022348:	e1a05825 	lsr	r5, r5, #16
4002234c:	1affffe4 	bne	400222e4 <CyU3PDmaDscrChainDestroy+0x18>
40022350:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40022354:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

40022358 <CyU3PDmaDscrGet>:
40022358:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002235c:	e1a04000 	mov	r4, r0
40022360:	e3a08000 	mov	r8, #0
40022364:	e3540000 	cmp	r4, #0
40022368:	1a000001 	bne	40022374 <CyU3PDmaDscrGet+0x1c>
4002236c:	e3a00040 	mov	r0, #64	; 0x40
40022370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022374:	e3e01000 	mvn	r1, #0
40022378:	e59f00ac 	ldr	r0, [pc, #172]	; 4002242c <CyU3PDmaDscrGet+0xd4>
4002237c:	ebff9f4d 	bl	4000a0b8 <_txe_mutex_get>
40022380:	e59f00a8 	ldr	r0, [pc, #168]	; 40022430 <CyU3PDmaDscrGet+0xd8>
40022384:	e1d000b0 	ldrh	r0, [r0]
40022388:	e3500000 	cmp	r0, #0
4002238c:	0a000022 	beq	4002241c <CyU3PDmaDscrGet+0xc4>
40022390:	e3a06000 	mov	r6, #0
40022394:	ea00001e 	b	40022414 <CyU3PDmaDscrGet+0xbc>
40022398:	e59f0094 	ldr	r0, [pc, #148]	; 40022434 <CyU3PDmaDscrGet+0xdc>
4002239c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400223a0:	e3750001 	cmn	r5, #1
400223a4:	0a000017 	beq	40022408 <CyU3PDmaDscrGet+0xb0>
400223a8:	e3a07001 	mov	r7, #1
400223ac:	ea000012 	b	400223fc <CyU3PDmaDscrGet+0xa4>
400223b0:	e1150007 	tst	r5, r7
400223b4:	1a00000d 	bne	400223f0 <CyU3PDmaDscrGet+0x98>
400223b8:	e1850007 	orr	r0, r5, r7
400223bc:	e59f1070 	ldr	r1, [pc, #112]	; 40022434 <CyU3PDmaDscrGet+0xdc>
400223c0:	e7810106 	str	r0, [r1, r6, lsl #2]
400223c4:	e2410004 	sub	r0, r1, #4
400223c8:	e1c080b2 	strh	r8, [r0, #2]
400223cc:	e1d000b0 	ldrh	r0, [r0]
400223d0:	e2400001 	sub	r0, r0, #1
400223d4:	e2411004 	sub	r1, r1, #4
400223d8:	e1c100b0 	strh	r0, [r1]
400223dc:	e1c480b0 	strh	r8, [r4]
400223e0:	e2810044 	add	r0, r1, #68	; 0x44
400223e4:	ebff9f68 	bl	4000a18c <_txe_mutex_put>
400223e8:	e3a00000 	mov	r0, #0
400223ec:	eaffffdf 	b	40022370 <CyU3PDmaDscrGet+0x18>
400223f0:	e1a07087 	lsl	r7, r7, #1
400223f4:	e2880001 	add	r0, r8, #1
400223f8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400223fc:	e3570000 	cmp	r7, #0
40022400:	1affffea 	bne	400223b0 <CyU3PDmaDscrGet+0x58>
40022404:	ea000001 	b	40022410 <CyU3PDmaDscrGet+0xb8>
40022408:	e2880020 	add	r0, r8, #32
4002240c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022410:	e2866001 	add	r6, r6, #1
40022414:	e3560010 	cmp	r6, #16
40022418:	3affffde 	bcc	40022398 <CyU3PDmaDscrGet+0x40>
4002241c:	e59f0008 	ldr	r0, [pc, #8]	; 4002242c <CyU3PDmaDscrGet+0xd4>
40022420:	ebff9f59 	bl	4000a18c <_txe_mutex_put>
40022424:	e3a0004a 	mov	r0, #74	; 0x4a
40022428:	eaffffd0 	b	40022370 <CyU3PDmaDscrGet+0x18>
4002242c:	4003273c 	.word	0x4003273c
40022430:	400326f8 	.word	0x400326f8
40022434:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022438 <CyU3PDmaDscrGetFreeCount>:
40022438:	e59f0004 	ldr	r0, [pc, #4]	; 40022444 <CyU3PDmaDscrGetFreeCount+0xc>
4002243c:	e1d000b0 	ldrh	r0, [r0]
40022440:	e12fff1e 	bx	lr
40022444:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

40022448 <CyU3PDmaDscrListCreate>:
40022448:	e92d4010 	push	{r4, lr}
4002244c:	e3a02040 	mov	r2, #64	; 0x40
40022450:	e3a01000 	mov	r1, #0
40022454:	e59f0034 	ldr	r0, [pc, #52]	; 40022490 <CyU3PDmaDscrListCreate+0x48>
40022458:	ebff8496 	bl	400036b8 <CyU3PMemSet>
4002245c:	e3a00001 	mov	r0, #1
40022460:	e59f102c 	ldr	r1, [pc, #44]	; 40022494 <CyU3PDmaDscrListCreate+0x4c>
40022464:	e5810004 	str	r0, [r1, #4]
40022468:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
4002246c:	e1c100b0 	strh	r0, [r1]
40022470:	e3a00001 	mov	r0, #1
40022474:	e1c100b2 	strh	r0, [r1, #2]
40022478:	e3a03038 	mov	r3, #56	; 0x38
4002247c:	e3a02000 	mov	r2, #0
40022480:	e1a01002 	mov	r1, r2
40022484:	e59f000c 	ldr	r0, [pc, #12]	; 40022498 <CyU3PDmaDscrListCreate+0x50>
40022488:	ebff9e8c 	bl	40009ec0 <_txe_mutex_create>
4002248c:	e8bd8010 	pop	{r4, pc}
40022490:	400326fc 	.word	0x400326fc
40022494:	400326f8 	.word	0x400326f8
40022498:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

4002249c <CyU3PDmaDscrPut>:
4002249c:	e92d4070 	push	{r4, r5, r6, lr}
400224a0:	e1a04000 	mov	r4, r0
400224a4:	e3540c02 	cmp	r4, #512	; 0x200
400224a8:	aa000001 	bge	400224b4 <CyU3PDmaDscrPut+0x18>
400224ac:	e3540000 	cmp	r4, #0
400224b0:	1a000001 	bne	400224bc <CyU3PDmaDscrPut+0x20>
400224b4:	e3a00040 	mov	r0, #64	; 0x40
400224b8:	e8bd8070 	pop	{r4, r5, r6, pc}
400224bc:	e3e01000 	mvn	r1, #0
400224c0:	e59f0064 	ldr	r0, [pc, #100]	; 4002252c <CyU3PDmaDscrPut+0x90>
400224c4:	ebff9efb 	bl	4000a0b8 <_txe_mutex_get>
400224c8:	e1a00004 	mov	r0, r4
400224cc:	e1a01fc4 	asr	r1, r4, #31
400224d0:	e0841da1 	add	r1, r4, r1, lsr #27
400224d4:	e1a062c1 	asr	r6, r1, #5
400224d8:	e59f0050 	ldr	r0, [pc, #80]	; 40022530 <CyU3PDmaDscrPut+0x94>
400224dc:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400224e0:	e1a00004 	mov	r0, r4
400224e4:	e1a01fc4 	asr	r1, r4, #31
400224e8:	e0841da1 	add	r1, r4, r1, lsr #27
400224ec:	e1a012c1 	asr	r1, r1, #5
400224f0:	e0441281 	sub	r1, r4, r1, lsl #5
400224f4:	e3a02001 	mov	r2, #1
400224f8:	e1c55112 	bic	r5, r5, r2, lsl r1
400224fc:	e59f002c 	ldr	r0, [pc, #44]	; 40022530 <CyU3PDmaDscrPut+0x94>
40022500:	e7805106 	str	r5, [r0, r6, lsl #2]
40022504:	e2400004 	sub	r0, r0, #4
40022508:	e1d000b0 	ldrh	r0, [r0]
4002250c:	e2800001 	add	r0, r0, #1
40022510:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40022514:	e59f1018 	ldr	r1, [pc, #24]	; 40022534 <CyU3PDmaDscrPut+0x98>
40022518:	e1c100b0 	strh	r0, [r1]
4002251c:	e2810044 	add	r0, r1, #68	; 0x44
40022520:	ebff9f19 	bl	4000a18c <_txe_mutex_put>
40022524:	e3a00000 	mov	r0, #0
40022528:	eaffffe2 	b	400224b8 <CyU3PDmaDscrPut+0x1c>
4002252c:	4003273c 	.word	0x4003273c
40022530:	400326fc 	.word	0x400326fc
40022534:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022538 <CyU3PDmaDscrGetConfig>:
40022538:	e92d4070 	push	{r4, r5, r6, lr}
4002253c:	e1a05000 	mov	r5, r0
40022540:	e1a04001 	mov	r4, r1
40022544:	e3550c02 	cmp	r5, #512	; 0x200
40022548:	aa000001 	bge	40022554 <CyU3PDmaDscrGetConfig+0x1c>
4002254c:	e3550000 	cmp	r5, #0
40022550:	1a000001 	bne	4002255c <CyU3PDmaDscrGetConfig+0x24>
40022554:	e3a00040 	mov	r0, #64	; 0x40
40022558:	e8bd8070 	pop	{r4, r5, r6, pc}
4002255c:	e3540000 	cmp	r4, #0
40022560:	1a000001 	bne	4002256c <CyU3PDmaDscrGetConfig+0x34>
40022564:	e3a00040 	mov	r0, #64	; 0x40
40022568:	eafffffa 	b	40022558 <CyU3PDmaDscrGetConfig+0x20>
4002256c:	e59f102c 	ldr	r1, [pc, #44]	; 400225a0 <CyU3PDmaDscrGetConfig+0x68>
40022570:	e5911000 	ldr	r1, [r1]
40022574:	e0810205 	add	r0, r1, r5, lsl #4
40022578:	e3a01010 	mov	r1, #16
4002257c:	ebffbea4 	bl	40012014 <CyU3PSysClearDRegion>
40022580:	ebffc118 	bl	400129e8 <CyU3PSysBarrierSync>
40022584:	e59f0014 	ldr	r0, [pc, #20]	; 400225a0 <CyU3PDmaDscrGetConfig+0x68>
40022588:	e5900000 	ldr	r0, [r0]
4002258c:	e0800205 	add	r0, r0, r5, lsl #4
40022590:	e890004e 	ldm	r0, {r1, r2, r3, r6}
40022594:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022598:	e3a00000 	mov	r0, #0
4002259c:	eaffffed 	b	40022558 <CyU3PDmaDscrGetConfig+0x20>
400225a0:	40030ddc 	.word	0x40030ddc

Disassembly of section i.CyU3PDmaDscrSetConfig:

400225a4 <CyU3PDmaDscrSetConfig>:
400225a4:	e92d4070 	push	{r4, r5, r6, lr}
400225a8:	e1a04000 	mov	r4, r0
400225ac:	e1a05001 	mov	r5, r1
400225b0:	e3540c02 	cmp	r4, #512	; 0x200
400225b4:	aa000001 	bge	400225c0 <CyU3PDmaDscrSetConfig+0x1c>
400225b8:	e3540000 	cmp	r4, #0
400225bc:	1a000001 	bne	400225c8 <CyU3PDmaDscrSetConfig+0x24>
400225c0:	e3a00040 	mov	r0, #64	; 0x40
400225c4:	e8bd8070 	pop	{r4, r5, r6, pc}
400225c8:	e3550000 	cmp	r5, #0
400225cc:	1a000001 	bne	400225d8 <CyU3PDmaDscrSetConfig+0x34>
400225d0:	e3a00040 	mov	r0, #64	; 0x40
400225d4:	eafffffa 	b	400225c4 <CyU3PDmaDscrSetConfig+0x20>
400225d8:	e59f002c 	ldr	r0, [pc, #44]	; 4002260c <CyU3PDmaDscrSetConfig+0x68>
400225dc:	e5900000 	ldr	r0, [r0]
400225e0:	e0800204 	add	r0, r0, r4, lsl #4
400225e4:	e895004e 	ldm	r5, {r1, r2, r3, r6}
400225e8:	e880004e 	stm	r0, {r1, r2, r3, r6}
400225ec:	e59f1018 	ldr	r1, [pc, #24]	; 4002260c <CyU3PDmaDscrSetConfig+0x68>
400225f0:	e5911000 	ldr	r1, [r1]
400225f4:	e0810204 	add	r0, r1, r4, lsl #4
400225f8:	e3a01010 	mov	r1, #16
400225fc:	ebffbe84 	bl	40012014 <CyU3PSysClearDRegion>
40022600:	ebffc0f8 	bl	400129e8 <CyU3PSysBarrierSync>
40022604:	e3a00000 	mov	r0, #0
40022608:	eaffffed 	b	400225c4 <CyU3PDmaDscrSetConfig+0x20>
4002260c:	40030ddc 	.word	0x40030ddc

Disassembly of section i.CyU3PDmaIntHandler:

40022610 <CyU3PDmaIntHandler>:
40022610:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40022614:	e1a04000 	mov	r4, r0
40022618:	e1a05001 	mov	r5, r1
4002261c:	e204003f 	and	r0, r4, #63	; 0x3f
40022620:	e1857400 	orr	r7, r5, r0, lsl #8
40022624:	e59f0150 	ldr	r0, [pc, #336]	; 4002277c <CyU3PDmaIntHandler+0x16c>
40022628:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002262c:	e0800385 	add	r0, r0, r5, lsl #7
40022630:	e5900010 	ldr	r0, [r0, #16]
40022634:	e59f1140 	ldr	r1, [pc, #320]	; 4002277c <CyU3PDmaIntHandler+0x16c>
40022638:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002263c:	e0811385 	add	r1, r1, r5, lsl #7
40022640:	e5911014 	ldr	r1, [r1, #20]
40022644:	e0009001 	and	r9, r0, r1
40022648:	e59f0130 	ldr	r0, [pc, #304]	; 40022780 <CyU3PDmaIntHandler+0x170>
4002264c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022650:	e7906105 	ldr	r6, [r0, r5, lsl #2]
40022654:	e3560000 	cmp	r6, #0
40022658:	0a000038 	beq	40022740 <CyU3PDmaIntHandler+0x130>
4002265c:	e1a00000 	nop			; (mov r0, r0)
40022660:	e59f0114 	ldr	r0, [pc, #276]	; 4002277c <CyU3PDmaIntHandler+0x16c>
40022664:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022668:	e0800385 	add	r0, r0, r5, lsl #7
4002266c:	e5900010 	ldr	r0, [r0, #16]
40022670:	e59f1104 	ldr	r1, [pc, #260]	; 4002277c <CyU3PDmaIntHandler+0x16c>
40022674:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022678:	e0811385 	add	r1, r1, r5, lsl #7
4002267c:	e5911014 	ldr	r1, [r1, #20]
40022680:	e0000001 	and	r0, r0, r1
40022684:	e1899000 	orr	r9, r9, r0
40022688:	e2098e12 	and	r8, r9, #288	; 0x120
4002268c:	e59f00e8 	ldr	r0, [pc, #232]	; 4002277c <CyU3PDmaIntHandler+0x16c>
40022690:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022694:	e0800385 	add	r0, r0, r5, lsl #7
40022698:	e5900014 	ldr	r0, [r0, #20]
4002269c:	e1c00008 	bic	r0, r0, r8
400226a0:	e59f10d4 	ldr	r1, [pc, #212]	; 4002277c <CyU3PDmaIntHandler+0x16c>
400226a4:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400226a8:	e0811385 	add	r1, r1, r5, lsl #7
400226ac:	e5810014 	str	r0, [r1, #20]
400226b0:	e1c90008 	bic	r0, r9, r8
400226b4:	e59f10c0 	ldr	r1, [pc, #192]	; 4002277c <CyU3PDmaIntHandler+0x16c>
400226b8:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400226bc:	e0811385 	add	r1, r1, r5, lsl #7
400226c0:	e5810010 	str	r0, [r1, #16]
400226c4:	e59f00b0 	ldr	r0, [pc, #176]	; 4002277c <CyU3PDmaIntHandler+0x16c>
400226c8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400226cc:	e7900385 	ldr	r0, [r0, r5, lsl #7]
400226d0:	e1a00800 	lsl	r0, r0, #16
400226d4:	e1a00820 	lsr	r0, r0, #16
400226d8:	e58d000c 	str	r0, [sp, #12]
400226dc:	e59f0098 	ldr	r0, [pc, #152]	; 4002277c <CyU3PDmaIntHandler+0x16c>
400226e0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400226e4:	e0800385 	add	r0, r0, r5, lsl #7
400226e8:	e5900010 	ldr	r0, [r0, #16]
400226ec:	e59f1088 	ldr	r1, [pc, #136]	; 4002277c <CyU3PDmaIntHandler+0x16c>
400226f0:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400226f4:	e0811385 	add	r1, r1, r5, lsl #7
400226f8:	e5911014 	ldr	r1, [r1, #20]
400226fc:	e0008001 	and	r8, r0, r1
40022700:	e3580000 	cmp	r8, #0
40022704:	1affffd5 	bne	40022660 <CyU3PDmaIntHandler+0x50>
40022708:	e3a00901 	mov	r0, #16384	; 0x4000
4002270c:	e58d0000 	str	r0, [sp]
40022710:	e59d0000 	ldr	r0, [sp]
40022714:	e58d0000 	str	r0, [sp]
40022718:	e59d0000 	ldr	r0, [sp]
4002271c:	e1800807 	orr	r0, r0, r7, lsl #16
40022720:	e58d0000 	str	r0, [sp]
40022724:	e58d6004 	str	r6, [sp, #4]
40022728:	e58d9008 	str	r9, [sp, #8]
4002272c:	e3a02000 	mov	r2, #0
40022730:	e1a01002 	mov	r1, r2
40022734:	e1a0000d 	mov	r0, sp
40022738:	ebffe05f 	bl	4001a8bc <CyU3PDmaMsgSend>
4002273c:	ea00000d 	b	40022778 <CyU3PDmaIntHandler+0x168>
40022740:	e59f003c 	ldr	r0, [pc, #60]	; 40022784 <CyU3PDmaIntHandler+0x174>
40022744:	e5900000 	ldr	r0, [r0]
40022748:	e3500000 	cmp	r0, #0
4002274c:	0a000005 	beq	40022768 <CyU3PDmaIntHandler+0x158>
40022750:	e1a01009 	mov	r1, r9
40022754:	e1a00007 	mov	r0, r7
40022758:	e59f2024 	ldr	r2, [pc, #36]	; 40022784 <CyU3PDmaIntHandler+0x174>
4002275c:	e5922000 	ldr	r2, [r2]
40022760:	e12fff32 	blx	r2
40022764:	ea000003 	b	40022778 <CyU3PDmaIntHandler+0x168>
40022768:	e59f000c 	ldr	r0, [pc, #12]	; 4002277c <CyU3PDmaIntHandler+0x16c>
4002276c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022770:	e0800385 	add	r0, r0, r5, lsl #7
40022774:	e5809010 	str	r9, [r0, #16]
40022778:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4002277c:	40030cf4 	.word	0x40030cf4
40022780:	40030d1c 	.word	0x40030d1c
40022784:	40030cf0 	.word	0x40030cf0

Disassembly of section i.CyU3PGpioInit:

40022788 <CyU3PGpioInit>:
40022788:	e92d4070 	push	{r4, r5, r6, lr}
4002278c:	e1a04000 	mov	r4, r0
40022790:	e1a06001 	mov	r6, r1
40022794:	e59f00fc 	ldr	r0, [pc, #252]	; 40022898 <CyU3PGpioInit+0x110>
40022798:	e5900000 	ldr	r0, [r0]
4002279c:	e3500000 	cmp	r0, #0
400227a0:	0a000001 	beq	400227ac <CyU3PGpioInit+0x24>
400227a4:	e3a00043 	mov	r0, #67	; 0x43
400227a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400227ac:	e3540000 	cmp	r4, #0
400227b0:	1a000001 	bne	400227bc <CyU3PGpioInit+0x34>
400227b4:	e3a00041 	mov	r0, #65	; 0x41
400227b8:	eafffffa 	b	400227a8 <CyU3PGpioInit+0x20>
400227bc:	e1a00006 	mov	r0, r6
400227c0:	eb00013b 	bl	40022cb4 <CyU3PRegisterGpioCallBack>
400227c4:	ebffc551 	bl	40013d10 <CyU3PLppGpioBlockIsOn>
400227c8:	e3500000 	cmp	r0, #0
400227cc:	0a000003 	beq	400227e0 <CyU3PGpioInit+0x58>
400227d0:	e59f00c4 	ldr	r0, [pc, #196]	; 4002289c <CyU3PGpioInit+0x114>
400227d4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400227d8:	e3100001 	tst	r0, #1
400227dc:	1a000020 	bne	40022864 <CyU3PGpioInit+0xdc>
400227e0:	e1a00004 	mov	r0, r4
400227e4:	ebffc4a7 	bl	40013a88 <CyU3PGpioSetClock>
400227e8:	e1a05000 	mov	r5, r0
400227ec:	e3550000 	cmp	r5, #0
400227f0:	0a000001 	beq	400227fc <CyU3PGpioInit+0x74>
400227f4:	e1a00005 	mov	r0, r5
400227f8:	eaffffea 	b	400227a8 <CyU3PGpioInit+0x20>
400227fc:	e59f109c 	ldr	r1, [pc, #156]	; 400228a0 <CyU3PGpioInit+0x118>
40022800:	e3a00004 	mov	r0, #4
40022804:	ebffc545 	bl	40013d20 <CyU3PLppInit>
40022808:	e1a05000 	mov	r5, r0
4002280c:	e3550000 	cmp	r5, #0
40022810:	0a000001 	beq	4002281c <CyU3PGpioInit+0x94>
40022814:	e1a00005 	mov	r0, r5
40022818:	eaffffe2 	b	400227a8 <CyU3PGpioInit+0x20>
4002281c:	e59f0078 	ldr	r0, [pc, #120]	; 4002289c <CyU3PGpioInit+0x114>
40022820:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022824:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022828:	e59f106c 	ldr	r1, [pc, #108]	; 4002289c <CyU3PGpioInit+0x114>
4002282c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022830:	e3a0000a 	mov	r0, #10
40022834:	ebffc33d 	bl	40013530 <CyU3PBusyWait>
40022838:	e59f005c 	ldr	r0, [pc, #92]	; 4002289c <CyU3PGpioInit+0x114>
4002283c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022840:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022844:	e59f1050 	ldr	r1, [pc, #80]	; 4002289c <CyU3PGpioInit+0x114>
40022848:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
4002284c:	e1a00000 	nop			; (mov r0, r0)
40022850:	e59f0044 	ldr	r0, [pc, #68]	; 4002289c <CyU3PGpioInit+0x114>
40022854:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022858:	e3100001 	tst	r0, #1
4002285c:	0afffffb 	beq	40022850 <CyU3PGpioInit+0xc8>
40022860:	ea000007 	b	40022884 <CyU3PGpioInit+0xfc>
40022864:	e59f1034 	ldr	r1, [pc, #52]	; 400228a0 <CyU3PGpioInit+0x118>
40022868:	e3a00004 	mov	r0, #4
4002286c:	ebffc52b 	bl	40013d20 <CyU3PLppInit>
40022870:	e1a05000 	mov	r5, r0
40022874:	e3550000 	cmp	r5, #0
40022878:	0a000001 	beq	40022884 <CyU3PGpioInit+0xfc>
4002287c:	e1a00005 	mov	r0, r5
40022880:	eaffffc8 	b	400227a8 <CyU3PGpioInit+0x20>
40022884:	e3a00001 	mov	r0, #1
40022888:	e59f1008 	ldr	r1, [pc, #8]	; 40022898 <CyU3PGpioInit+0x110>
4002288c:	e5810000 	str	r0, [r1]
40022890:	e3a00000 	mov	r0, #0
40022894:	eaffffc3 	b	400227a8 <CyU3PGpioInit+0x20>
40022898:	40030ef4 	.word	0x40030ef4
4002289c:	e0001000 	.word	0xe0001000
400228a0:	400228a4 	.word	0x400228a4

Disassembly of section i.CyU3PGpioInt_Handler:

400228a4 <CyU3PGpioInt_Handler>:
400228a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400228a8:	e3a06000 	mov	r6, #0
400228ac:	e3a05000 	mov	r5, #0
400228b0:	e3a04001 	mov	r4, #1
400228b4:	ea000029 	b	40022960 <CyU3PGpioInt_Handler+0xbc>
400228b8:	e59f0198 	ldr	r0, [pc, #408]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
400228bc:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
400228c0:	e1100004 	tst	r0, r4
400228c4:	0a000021 	beq	40022950 <CyU3PGpioInt_Handler+0xac>
400228c8:	e59f0188 	ldr	r0, [pc, #392]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
400228cc:	e7900205 	ldr	r0, [r0, r5, lsl #4]
400228d0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400228d4:	e59f117c 	ldr	r1, [pc, #380]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
400228d8:	e7810205 	str	r0, [r1, r5, lsl #4]
400228dc:	e59f0178 	ldr	r0, [pc, #376]	; 40022a5c <CyU3PGpioInt_Handler+0x1b8>
400228e0:	e5900000 	ldr	r0, [r0]
400228e4:	e3500000 	cmp	r0, #0
400228e8:	0a000018 	beq	40022950 <CyU3PGpioInt_Handler+0xac>
400228ec:	e1a06005 	mov	r6, r5
400228f0:	e1a07005 	mov	r7, r5
400228f4:	ea00000e 	b	40022934 <CyU3PGpioInt_Handler+0x90>
400228f8:	e1a00007 	mov	r0, r7
400228fc:	ebffc097 	bl	40012b60 <CyU3PIsGpioComplexIOConfigured>
40022900:	e3500000 	cmp	r0, #0
40022904:	0a000001 	beq	40022910 <CyU3PGpioInt_Handler+0x6c>
40022908:	e1a06007 	mov	r6, r7
4002290c:	ea00000a 	b	4002293c <CyU3PGpioInt_Handler+0x98>
40022910:	e2870020 	add	r0, r7, #32
40022914:	ebffc091 	bl	40012b60 <CyU3PIsGpioComplexIOConfigured>
40022918:	e3500000 	cmp	r0, #0
4002291c:	0a000002 	beq	4002292c <CyU3PGpioInt_Handler+0x88>
40022920:	e2870020 	add	r0, r7, #32
40022924:	e20060ff 	and	r6, r0, #255	; 0xff
40022928:	ea000003 	b	4002293c <CyU3PGpioInt_Handler+0x98>
4002292c:	e2870008 	add	r0, r7, #8
40022930:	e20070ff 	and	r7, r0, #255	; 0xff
40022934:	e3570020 	cmp	r7, #32
40022938:	baffffee 	blt	400228f8 <CyU3PGpioInt_Handler+0x54>
4002293c:	e1a00000 	nop			; (mov r0, r0)
40022940:	e1a00006 	mov	r0, r6
40022944:	e59f1110 	ldr	r1, [pc, #272]	; 40022a5c <CyU3PGpioInt_Handler+0x1b8>
40022948:	e5911000 	ldr	r1, [r1]
4002294c:	e12fff31 	blx	r1
40022950:	e59f0108 	ldr	r0, [pc, #264]	; 40022a60 <CyU3PGpioInt_Handler+0x1bc>
40022954:	e0004084 	and	r4, r0, r4, lsl #1
40022958:	e2850001 	add	r0, r5, #1
4002295c:	e20050ff 	and	r5, r0, #255	; 0xff
40022960:	e3540080 	cmp	r4, #128	; 0x80
40022964:	9affffd3 	bls	400228b8 <CyU3PGpioInt_Handler+0x14>
40022968:	e59f00e8 	ldr	r0, [pc, #232]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
4002296c:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022970:	e3500000 	cmp	r0, #0
40022974:	0a000017 	beq	400229d8 <CyU3PGpioInt_Handler+0x134>
40022978:	e3a05000 	mov	r5, #0
4002297c:	ea000013 	b	400229d0 <CyU3PGpioInt_Handler+0x12c>
40022980:	e59f00d0 	ldr	r0, [pc, #208]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
40022984:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022988:	e3a01001 	mov	r1, #1
4002298c:	e1100511 	tst	r0, r1, lsl r5
40022990:	0a00000c 	beq	400229c8 <CyU3PGpioInt_Handler+0x124>
40022994:	e59f00c8 	ldr	r0, [pc, #200]	; 40022a64 <CyU3PGpioInt_Handler+0x1c0>
40022998:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002299c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400229a0:	e59f10bc 	ldr	r1, [pc, #188]	; 40022a64 <CyU3PGpioInt_Handler+0x1c0>
400229a4:	e7810105 	str	r0, [r1, r5, lsl #2]
400229a8:	e59f00ac 	ldr	r0, [pc, #172]	; 40022a5c <CyU3PGpioInt_Handler+0x1b8>
400229ac:	e5900000 	ldr	r0, [r0]
400229b0:	e3500000 	cmp	r0, #0
400229b4:	0a000003 	beq	400229c8 <CyU3PGpioInt_Handler+0x124>
400229b8:	e1a00005 	mov	r0, r5
400229bc:	e59f1098 	ldr	r1, [pc, #152]	; 40022a5c <CyU3PGpioInt_Handler+0x1b8>
400229c0:	e5911000 	ldr	r1, [r1]
400229c4:	e12fff31 	blx	r1
400229c8:	e2850001 	add	r0, r5, #1
400229cc:	e20050ff 	and	r5, r0, #255	; 0xff
400229d0:	e3550020 	cmp	r5, #32
400229d4:	baffffe9 	blt	40022980 <CyU3PGpioInt_Handler+0xdc>
400229d8:	e59f0078 	ldr	r0, [pc, #120]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
400229dc:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400229e0:	e3500000 	cmp	r0, #0
400229e4:	0a00001a 	beq	40022a54 <CyU3PGpioInt_Handler+0x1b0>
400229e8:	e3a05000 	mov	r5, #0
400229ec:	ea000016 	b	40022a4c <CyU3PGpioInt_Handler+0x1a8>
400229f0:	e59f0060 	ldr	r0, [pc, #96]	; 40022a58 <CyU3PGpioInt_Handler+0x1b4>
400229f4:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400229f8:	e3a01001 	mov	r1, #1
400229fc:	e1100511 	tst	r0, r1, lsl r5
40022a00:	0a00000f 	beq	40022a44 <CyU3PGpioInt_Handler+0x1a0>
40022a04:	e59f0058 	ldr	r0, [pc, #88]	; 40022a64 <CyU3PGpioInt_Handler+0x1c0>
40022a08:	e2851020 	add	r1, r5, #32
40022a0c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022a10:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022a14:	e59f0048 	ldr	r0, [pc, #72]	; 40022a64 <CyU3PGpioInt_Handler+0x1c0>
40022a18:	e2852020 	add	r2, r5, #32
40022a1c:	e7801102 	str	r1, [r0, r2, lsl #2]
40022a20:	e59f0034 	ldr	r0, [pc, #52]	; 40022a5c <CyU3PGpioInt_Handler+0x1b8>
40022a24:	e5900000 	ldr	r0, [r0]
40022a28:	e3500000 	cmp	r0, #0
40022a2c:	0a000004 	beq	40022a44 <CyU3PGpioInt_Handler+0x1a0>
40022a30:	e2851020 	add	r1, r5, #32
40022a34:	e20100ff 	and	r0, r1, #255	; 0xff
40022a38:	e59f101c 	ldr	r1, [pc, #28]	; 40022a5c <CyU3PGpioInt_Handler+0x1b8>
40022a3c:	e5911000 	ldr	r1, [r1]
40022a40:	e12fff31 	blx	r1
40022a44:	e2850001 	add	r0, r5, #1
40022a48:	e20050ff 	and	r5, r0, #255	; 0xff
40022a4c:	e3550020 	cmp	r5, #32
40022a50:	baffffe6 	blt	400229f0 <CyU3PGpioInt_Handler+0x14c>
40022a54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022a58:	e0001000 	.word	0xe0001000
40022a5c:	40030ef8 	.word	0x40030ef8
40022a60:	0000ffff 	.word	0x0000ffff
40022a64:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022a68 <CyU3PGpioSetSimpleConfig>:
40022a68:	e92d4070 	push	{r4, r5, r6, lr}
40022a6c:	e1a04000 	mov	r4, r0
40022a70:	e1a05001 	mov	r5, r1
40022a74:	e3a06000 	mov	r6, #0
40022a78:	e59f00d0 	ldr	r0, [pc, #208]	; 40022b50 <CyU3PGpioSetSimpleConfig+0xe8>
40022a7c:	e5900000 	ldr	r0, [r0]
40022a80:	e3500000 	cmp	r0, #0
40022a84:	1a000001 	bne	40022a90 <CyU3PGpioSetSimpleConfig+0x28>
40022a88:	e3a00042 	mov	r0, #66	; 0x42
40022a8c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022a90:	e1a00004 	mov	r0, r4
40022a94:	ebffc03d 	bl	40012b90 <CyU3PIsGpioValid>
40022a98:	e3500000 	cmp	r0, #0
40022a9c:	1a000001 	bne	40022aa8 <CyU3PGpioSetSimpleConfig+0x40>
40022aa0:	e3a00040 	mov	r0, #64	; 0x40
40022aa4:	eafffff8 	b	40022a8c <CyU3PGpioSetSimpleConfig+0x24>
40022aa8:	e3550000 	cmp	r5, #0
40022aac:	1a000001 	bne	40022ab8 <CyU3PGpioSetSimpleConfig+0x50>
40022ab0:	e3a00041 	mov	r0, #65	; 0x41
40022ab4:	eafffff4 	b	40022a8c <CyU3PGpioSetSimpleConfig+0x24>
40022ab8:	e5d50010 	ldrb	r0, [r5, #16]
40022abc:	e3500005 	cmp	r0, #5
40022ac0:	da000001 	ble	40022acc <CyU3PGpioSetSimpleConfig+0x64>
40022ac4:	e3a00040 	mov	r0, #64	; 0x40
40022ac8:	eaffffef 	b	40022a8c <CyU3PGpioSetSimpleConfig+0x24>
40022acc:	e1a00004 	mov	r0, r4
40022ad0:	ebffc028 	bl	40012b78 <CyU3PIsGpioSimpleIOConfigured>
40022ad4:	e3500000 	cmp	r0, #0
40022ad8:	1a000001 	bne	40022ae4 <CyU3PGpioSetSimpleConfig+0x7c>
40022adc:	e3a00044 	mov	r0, #68	; 0x44
40022ae0:	eaffffe9 	b	40022a8c <CyU3PGpioSetSimpleConfig+0x24>
40022ae4:	e595000c 	ldr	r0, [r5, #12]
40022ae8:	e3500000 	cmp	r0, #0
40022aec:	0a000000 	beq	40022af4 <CyU3PGpioSetSimpleConfig+0x8c>
40022af0:	e3866040 	orr	r6, r6, #64	; 0x40
40022af4:	e5950004 	ldr	r0, [r5, #4]
40022af8:	e3500000 	cmp	r0, #0
40022afc:	0a000000 	beq	40022b04 <CyU3PGpioSetSimpleConfig+0x9c>
40022b00:	e3866010 	orr	r6, r6, #16
40022b04:	e5950008 	ldr	r0, [r5, #8]
40022b08:	e3500000 	cmp	r0, #0
40022b0c:	0a000000 	beq	40022b14 <CyU3PGpioSetSimpleConfig+0xac>
40022b10:	e3866020 	orr	r6, r6, #32
40022b14:	e5950000 	ldr	r0, [r5]
40022b18:	e3500000 	cmp	r0, #0
40022b1c:	0a000000 	beq	40022b24 <CyU3PGpioSetSimpleConfig+0xbc>
40022b20:	e3866001 	orr	r6, r6, #1
40022b24:	e5d50010 	ldrb	r0, [r5, #16]
40022b28:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022b2c:	e0010c00 	and	r0, r1, r0, lsl #24
40022b30:	e1866000 	orr	r6, r6, r0
40022b34:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022b38:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022b3c:	e59f0010 	ldr	r0, [pc, #16]	; 40022b54 <CyU3PGpioSetSimpleConfig+0xec>
40022b40:	e7806104 	str	r6, [r0, r4, lsl #2]
40022b44:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022b48:	e3a00000 	mov	r0, #0
40022b4c:	eaffffce 	b	40022a8c <CyU3PGpioSetSimpleConfig+0x24>
40022b50:	40030ef4 	.word	0x40030ef4
40022b54:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022b58 <CyU3PGpioSetValue>:
40022b58:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022b5c:	e1a04000 	mov	r4, r0
40022b60:	e1a05001 	mov	r5, r1
40022b64:	e59f00b8 	ldr	r0, [pc, #184]	; 40022c24 <CyU3PGpioSetValue+0xcc>
40022b68:	e5900000 	ldr	r0, [r0]
40022b6c:	e3500000 	cmp	r0, #0
40022b70:	1a000001 	bne	40022b7c <CyU3PGpioSetValue+0x24>
40022b74:	e3a00042 	mov	r0, #66	; 0x42
40022b78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022b7c:	e1a00004 	mov	r0, r4
40022b80:	ebffc002 	bl	40012b90 <CyU3PIsGpioValid>
40022b84:	e3500000 	cmp	r0, #0
40022b88:	1a000001 	bne	40022b94 <CyU3PGpioSetValue+0x3c>
40022b8c:	e3a00040 	mov	r0, #64	; 0x40
40022b90:	eafffff8 	b	40022b78 <CyU3PGpioSetValue+0x20>
40022b94:	e1a00004 	mov	r0, r4
40022b98:	ebffbff6 	bl	40012b78 <CyU3PIsGpioSimpleIOConfigured>
40022b9c:	e3500000 	cmp	r0, #0
40022ba0:	0a000002 	beq	40022bb0 <CyU3PGpioSetValue+0x58>
40022ba4:	e59f007c 	ldr	r0, [pc, #124]	; 40022c28 <CyU3PGpioSetValue+0xd0>
40022ba8:	e0807104 	add	r7, r0, r4, lsl #2
40022bac:	ea00000d 	b	40022be8 <CyU3PGpioSetValue+0x90>
40022bb0:	e1a00004 	mov	r0, r4
40022bb4:	ebffbfe9 	bl	40012b60 <CyU3PIsGpioComplexIOConfigured>
40022bb8:	e3500000 	cmp	r0, #0
40022bbc:	0a000007 	beq	40022be0 <CyU3PGpioSetValue+0x88>
40022bc0:	e1a00004 	mov	r0, r4
40022bc4:	e1a01fc4 	asr	r1, r4, #31
40022bc8:	e0841ea1 	add	r1, r4, r1, lsr #29
40022bcc:	e1a011c1 	asr	r1, r1, #3
40022bd0:	e0441181 	sub	r1, r4, r1, lsl #3
40022bd4:	e59f2050 	ldr	r2, [pc, #80]	; 40022c2c <CyU3PGpioSetValue+0xd4>
40022bd8:	e0827201 	add	r7, r2, r1, lsl #4
40022bdc:	ea000001 	b	40022be8 <CyU3PGpioSetValue+0x90>
40022be0:	e3a00044 	mov	r0, #68	; 0x44
40022be4:	eaffffe3 	b	40022b78 <CyU3PGpioSetValue+0x20>
40022be8:	e5970000 	ldr	r0, [r7]
40022bec:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022bf0:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022bf4:	1a000001 	bne	40022c00 <CyU3PGpioSetValue+0xa8>
40022bf8:	e3a00044 	mov	r0, #68	; 0x44
40022bfc:	eaffffdd 	b	40022b78 <CyU3PGpioSetValue+0x20>
40022c00:	e3550000 	cmp	r5, #0
40022c04:	0a000001 	beq	40022c10 <CyU3PGpioSetValue+0xb8>
40022c08:	e3866001 	orr	r6, r6, #1
40022c0c:	ea000000 	b	40022c14 <CyU3PGpioSetValue+0xbc>
40022c10:	e3c66001 	bic	r6, r6, #1
40022c14:	e5876000 	str	r6, [r7]
40022c18:	e5976000 	ldr	r6, [r7]
40022c1c:	e3a00000 	mov	r0, #0
40022c20:	eaffffd4 	b	40022b78 <CyU3PGpioSetValue+0x20>
40022c24:	40030ef4 	.word	0x40030ef4
40022c28:	e0001100 	.word	0xe0001100
40022c2c:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022c30 <CyU3PGpioSimpleGetValue>:
40022c30:	e92d4070 	push	{r4, r5, r6, lr}
40022c34:	e1a04000 	mov	r4, r0
40022c38:	e1a06001 	mov	r6, r1
40022c3c:	e59f0068 	ldr	r0, [pc, #104]	; 40022cac <CyU3PGpioSimpleGetValue+0x7c>
40022c40:	e5900000 	ldr	r0, [r0]
40022c44:	e3500000 	cmp	r0, #0
40022c48:	1a000001 	bne	40022c54 <CyU3PGpioSimpleGetValue+0x24>
40022c4c:	e3a00042 	mov	r0, #66	; 0x42
40022c50:	e8bd8070 	pop	{r4, r5, r6, pc}
40022c54:	e1a00004 	mov	r0, r4
40022c58:	ebffbfcc 	bl	40012b90 <CyU3PIsGpioValid>
40022c5c:	e3500000 	cmp	r0, #0
40022c60:	1a000001 	bne	40022c6c <CyU3PGpioSimpleGetValue+0x3c>
40022c64:	e3a00040 	mov	r0, #64	; 0x40
40022c68:	eafffff8 	b	40022c50 <CyU3PGpioSimpleGetValue+0x20>
40022c6c:	e3560000 	cmp	r6, #0
40022c70:	1a000001 	bne	40022c7c <CyU3PGpioSimpleGetValue+0x4c>
40022c74:	e3a00041 	mov	r0, #65	; 0x41
40022c78:	eafffff4 	b	40022c50 <CyU3PGpioSimpleGetValue+0x20>
40022c7c:	e59f002c 	ldr	r0, [pc, #44]	; 40022cb0 <CyU3PGpioSimpleGetValue+0x80>
40022c80:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022c84:	e3150040 	tst	r5, #64	; 0x40
40022c88:	0a000003 	beq	40022c9c <CyU3PGpioSimpleGetValue+0x6c>
40022c8c:	e2050002 	and	r0, r5, #2
40022c90:	e1a000a0 	lsr	r0, r0, #1
40022c94:	e5860000 	str	r0, [r6]
40022c98:	ea000001 	b	40022ca4 <CyU3PGpioSimpleGetValue+0x74>
40022c9c:	e2050001 	and	r0, r5, #1
40022ca0:	e5860000 	str	r0, [r6]
40022ca4:	e3a00000 	mov	r0, #0
40022ca8:	eaffffe8 	b	40022c50 <CyU3PGpioSimpleGetValue+0x20>
40022cac:	40030ef4 	.word	0x40030ef4
40022cb0:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022cb4 <CyU3PRegisterGpioCallBack>:
40022cb4:	e59f1004 	ldr	r1, [pc, #4]	; 40022cc0 <CyU3PRegisterGpioCallBack+0xc>
40022cb8:	e5810000 	str	r0, [r1]
40022cbc:	e12fff1e 	bx	lr
40022cc0:	40030ef8 	.word	0x40030ef8

Disassembly of section i.CyU3PRegisterUartCallBack:

40022cc4 <CyU3PRegisterUartCallBack>:
40022cc4:	e59f1004 	ldr	r1, [pc, #4]	; 40022cd0 <CyU3PRegisterUartCallBack+0xc>
40022cc8:	e5810000 	str	r0, [r1]
40022ccc:	e12fff1e 	bx	lr
40022cd0:	40030f08 	.word	0x40030f08

Disassembly of section i.CyU3PUartGetLock:

40022cd4 <CyU3PUartGetLock>:
40022cd4:	e92d4010 	push	{r4, lr}
40022cd8:	e3a04000 	mov	r4, #0
40022cdc:	e59f0044 	ldr	r0, [pc, #68]	; 40022d28 <CyU3PUartGetLock+0x54>
40022ce0:	e5900000 	ldr	r0, [r0]
40022ce4:	e3500000 	cmp	r0, #0
40022ce8:	1a000001 	bne	40022cf4 <CyU3PUartGetLock+0x20>
40022cec:	e3a00044 	mov	r0, #68	; 0x44
40022cf0:	e8bd8010 	pop	{r4, pc}
40022cf4:	ebff96da 	bl	40008864 <_tx_thread_identify>
40022cf8:	e3500000 	cmp	r0, #0
40022cfc:	0a000000 	beq	40022d04 <CyU3PUartGetLock+0x30>
40022d00:	e3e04000 	mvn	r4, #0
40022d04:	e1a01004 	mov	r1, r4
40022d08:	e59f001c 	ldr	r0, [pc, #28]	; 40022d2c <CyU3PUartGetLock+0x58>
40022d0c:	ebff9ce9 	bl	4000a0b8 <_txe_mutex_get>
40022d10:	e3500000 	cmp	r0, #0
40022d14:	0a000001 	beq	40022d20 <CyU3PUartGetLock+0x4c>
40022d18:	e3a0001d 	mov	r0, #29
40022d1c:	eafffff3 	b	40022cf0 <CyU3PUartGetLock+0x1c>
40022d20:	e3a00000 	mov	r0, #0
40022d24:	eafffff1 	b	40022cf0 <CyU3PUartGetLock+0x1c>
40022d28:	40030f04 	.word	0x40030f04
40022d2c:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

40022d30 <CyU3PUartInit>:
40022d30:	e92d4010 	push	{r4, lr}
40022d34:	e3a00003 	mov	r0, #3
40022d38:	ebffbf9b 	bl	40012bac <CyU3PIsLppIOConfigured>
40022d3c:	e3500000 	cmp	r0, #0
40022d40:	1a000001 	bne	40022d4c <CyU3PUartInit+0x1c>
40022d44:	e3a00044 	mov	r0, #68	; 0x44
40022d48:	e8bd8010 	pop	{r4, pc}
40022d4c:	e59f00b8 	ldr	r0, [pc, #184]	; 40022e0c <CyU3PUartInit+0xdc>
40022d50:	e5900000 	ldr	r0, [r0]
40022d54:	e3500000 	cmp	r0, #0
40022d58:	0a000001 	beq	40022d64 <CyU3PUartInit+0x34>
40022d5c:	e3a00043 	mov	r0, #67	; 0x43
40022d60:	eafffff8 	b	40022d48 <CyU3PUartInit+0x18>
40022d64:	e3a03038 	mov	r3, #56	; 0x38
40022d68:	e3a02000 	mov	r2, #0
40022d6c:	e1a01002 	mov	r1, r2
40022d70:	e59f0098 	ldr	r0, [pc, #152]	; 40022e10 <CyU3PUartInit+0xe0>
40022d74:	ebff9c51 	bl	40009ec0 <_txe_mutex_create>
40022d78:	e3a00d96 	mov	r0, #9600	; 0x2580
40022d7c:	ebffc505 	bl	40014198 <CyU3PUartSetClock>
40022d80:	e1a04000 	mov	r4, r0
40022d84:	e3540000 	cmp	r4, #0
40022d88:	0a000001 	beq	40022d94 <CyU3PUartInit+0x64>
40022d8c:	e1a00004 	mov	r0, r4
40022d90:	eaffffec 	b	40022d48 <CyU3PUartInit+0x18>
40022d94:	e59f1078 	ldr	r1, [pc, #120]	; 40022e14 <CyU3PUartInit+0xe4>
40022d98:	e3a00003 	mov	r0, #3
40022d9c:	ebffc3df 	bl	40013d20 <CyU3PLppInit>
40022da0:	e1a04000 	mov	r4, r0
40022da4:	e3540000 	cmp	r4, #0
40022da8:	0a000001 	beq	40022db4 <CyU3PUartInit+0x84>
40022dac:	e1a00004 	mov	r0, r4
40022db0:	eaffffe4 	b	40022d48 <CyU3PUartInit+0x18>
40022db4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022db8:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022dbc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022dc0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022dc4:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022dc8:	e3a0000a 	mov	r0, #10
40022dcc:	ebffc1d7 	bl	40013530 <CyU3PBusyWait>
40022dd0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022dd4:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022dd8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022ddc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022de0:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022de4:	e1a00000 	nop			; (mov r0, r0)
40022de8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022dec:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022df0:	e3100001 	tst	r0, #1
40022df4:	0afffffb 	beq	40022de8 <CyU3PUartInit+0xb8>
40022df8:	e3a00001 	mov	r0, #1
40022dfc:	e59f1008 	ldr	r1, [pc, #8]	; 40022e0c <CyU3PUartInit+0xdc>
40022e00:	e5810000 	str	r0, [r1]
40022e04:	e3a00000 	mov	r0, #0
40022e08:	eaffffce 	b	40022d48 <CyU3PUartInit+0x18>
40022e0c:	40030f04 	.word	0x40030f04
40022e10:	40032e1c 	.word	0x40032e1c
40022e14:	40022e18 	.word	0x40022e18

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022e18 <CyU3PUartInt_ThreadHandler>:
40022e18:	e92d4070 	push	{r4, r5, r6, lr}
40022e1c:	ebffffac 	bl	40022cd4 <CyU3PUartGetLock>
40022e20:	e1a05000 	mov	r5, r0
40022e24:	e3550000 	cmp	r5, #0
40022e28:	0a000000 	beq	40022e30 <CyU3PUartInt_ThreadHandler+0x18>
40022e2c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022e30:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e34:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40022e38:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022e3c:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40022e40:	e0004001 	and	r4, r0, r1
40022e44:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e48:	e5804808 	str	r4, [r0, #2056]	; 0x808
40022e4c:	e59f0078 	ldr	r0, [pc, #120]	; 40022ecc <CyU3PUartInt_ThreadHandler+0xb4>
40022e50:	e5900000 	ldr	r0, [r0]
40022e54:	e3500000 	cmp	r0, #0
40022e58:	1a000001 	bne	40022e64 <CyU3PUartInt_ThreadHandler+0x4c>
40022e5c:	eb00001b 	bl	40022ed0 <CyU3PUartReleaseLock>
40022e60:	eafffff1 	b	40022e2c <CyU3PUartInt_ThreadHandler+0x14>
40022e64:	e3140001 	tst	r4, #1
40022e68:	0a000004 	beq	40022e80 <CyU3PUartInt_ThreadHandler+0x68>
40022e6c:	e3a01000 	mov	r1, #0
40022e70:	e1a00001 	mov	r0, r1
40022e74:	e59f2050 	ldr	r2, [pc, #80]	; 40022ecc <CyU3PUartInt_ThreadHandler+0xb4>
40022e78:	e5922000 	ldr	r2, [r2]
40022e7c:	e12fff32 	blx	r2
40022e80:	e3140008 	tst	r4, #8
40022e84:	0a000004 	beq	40022e9c <CyU3PUartInt_ThreadHandler+0x84>
40022e88:	e3a01000 	mov	r1, #0
40022e8c:	e3a00001 	mov	r0, #1
40022e90:	e59f2034 	ldr	r2, [pc, #52]	; 40022ecc <CyU3PUartInt_ThreadHandler+0xb4>
40022e94:	e5922000 	ldr	r2, [r2]
40022e98:	e12fff32 	blx	r2
40022e9c:	e3140c02 	tst	r4, #512	; 0x200
40022ea0:	0a000007 	beq	40022ec4 <CyU3PUartInt_ThreadHandler+0xac>
40022ea4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ea8:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
40022eac:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40022eb0:	e1a01c20 	lsr	r1, r0, #24
40022eb4:	e3a00002 	mov	r0, #2
40022eb8:	e59f200c 	ldr	r2, [pc, #12]	; 40022ecc <CyU3PUartInt_ThreadHandler+0xb4>
40022ebc:	e5922000 	ldr	r2, [r2]
40022ec0:	e12fff32 	blx	r2
40022ec4:	eb000001 	bl	40022ed0 <CyU3PUartReleaseLock>
40022ec8:	eaffffd7 	b	40022e2c <CyU3PUartInt_ThreadHandler+0x14>
40022ecc:	40030f08 	.word	0x40030f08

Disassembly of section i.CyU3PUartReleaseLock:

40022ed0 <CyU3PUartReleaseLock>:
40022ed0:	e92d4010 	push	{r4, lr}
40022ed4:	e59f0030 	ldr	r0, [pc, #48]	; 40022f0c <CyU3PUartReleaseLock+0x3c>
40022ed8:	e5900000 	ldr	r0, [r0]
40022edc:	e3500000 	cmp	r0, #0
40022ee0:	1a000001 	bne	40022eec <CyU3PUartReleaseLock+0x1c>
40022ee4:	e3a00044 	mov	r0, #68	; 0x44
40022ee8:	e8bd8010 	pop	{r4, pc}
40022eec:	e59f001c 	ldr	r0, [pc, #28]	; 40022f10 <CyU3PUartReleaseLock+0x40>
40022ef0:	ebff9ca5 	bl	4000a18c <_txe_mutex_put>
40022ef4:	e3500000 	cmp	r0, #0
40022ef8:	0a000001 	beq	40022f04 <CyU3PUartReleaseLock+0x34>
40022efc:	e3a0001d 	mov	r0, #29
40022f00:	eafffff8 	b	40022ee8 <CyU3PUartReleaseLock+0x18>
40022f04:	e3a00000 	mov	r0, #0
40022f08:	eafffff6 	b	40022ee8 <CyU3PUartReleaseLock+0x18>
40022f0c:	40030f04 	.word	0x40030f04
40022f10:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40022f14 <CyU3PUartSetConfig>:
40022f14:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022f18:	e1a04000 	mov	r4, r0
40022f1c:	e1a05001 	mov	r5, r1
40022f20:	e3a07000 	mov	r7, #0
40022f24:	e59f01f0 	ldr	r0, [pc, #496]	; 4002311c <CyU3PUartSetConfig+0x208>
40022f28:	e5900000 	ldr	r0, [r0]
40022f2c:	e3500000 	cmp	r0, #0
40022f30:	1a000001 	bne	40022f3c <CyU3PUartSetConfig+0x28>
40022f34:	e3a00042 	mov	r0, #66	; 0x42
40022f38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022f3c:	e3540000 	cmp	r4, #0
40022f40:	1a000001 	bne	40022f4c <CyU3PUartSetConfig+0x38>
40022f44:	e3a00041 	mov	r0, #65	; 0x41
40022f48:	eafffffa 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022f4c:	e5940004 	ldr	r0, [r4, #4]
40022f50:	e5941000 	ldr	r1, [r4]
40022f54:	e1900001 	orrs	r0, r0, r1
40022f58:	1a000001 	bne	40022f64 <CyU3PUartSetConfig+0x50>
40022f5c:	e3a00040 	mov	r0, #64	; 0x40
40022f60:	eafffff4 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022f64:	e5d40015 	ldrb	r0, [r4, #21]
40022f68:	e3500003 	cmp	r0, #3
40022f6c:	ba000001 	blt	40022f78 <CyU3PUartSetConfig+0x64>
40022f70:	e3a00040 	mov	r0, #64	; 0x40
40022f74:	eaffffef 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022f78:	e5d40014 	ldrb	r0, [r4, #20]
40022f7c:	e3500001 	cmp	r0, #1
40022f80:	0a000004 	beq	40022f98 <CyU3PUartSetConfig+0x84>
40022f84:	e5d40014 	ldrb	r0, [r4, #20]
40022f88:	e3500002 	cmp	r0, #2
40022f8c:	0a000001 	beq	40022f98 <CyU3PUartSetConfig+0x84>
40022f90:	e3a00040 	mov	r0, #64	; 0x40
40022f94:	eaffffe7 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022f98:	e594000c 	ldr	r0, [r4, #12]
40022f9c:	e3500000 	cmp	r0, #0
40022fa0:	1a000003 	bne	40022fb4 <CyU3PUartSetConfig+0xa0>
40022fa4:	e3550000 	cmp	r5, #0
40022fa8:	0a000001 	beq	40022fb4 <CyU3PUartSetConfig+0xa0>
40022fac:	e3a00040 	mov	r0, #64	; 0x40
40022fb0:	eaffffe0 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022fb4:	ebffff46 	bl	40022cd4 <CyU3PUartGetLock>
40022fb8:	e1a06000 	mov	r6, r0
40022fbc:	e3560000 	cmp	r6, #0
40022fc0:	0a000001 	beq	40022fcc <CyU3PUartSetConfig+0xb8>
40022fc4:	e3a0001d 	mov	r0, #29
40022fc8:	eaffffda 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022fcc:	e5940010 	ldr	r0, [r4, #16]
40022fd0:	ebffc470 	bl	40014198 <CyU3PUartSetClock>
40022fd4:	e1a06000 	mov	r6, r0
40022fd8:	e3560000 	cmp	r6, #0
40022fdc:	0a000002 	beq	40022fec <CyU3PUartSetConfig+0xd8>
40022fe0:	ebffffba 	bl	40022ed0 <CyU3PUartReleaseLock>
40022fe4:	e1a00006 	mov	r0, r6
40022fe8:	eaffffd2 	b	40022f38 <CyU3PUartSetConfig+0x24>
40022fec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ff0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022ff4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022ff8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022ffc:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023000:	e5940004 	ldr	r0, [r4, #4]
40023004:	e3500000 	cmp	r0, #0
40023008:	0a000001 	beq	40023014 <CyU3PUartSetConfig+0x100>
4002300c:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40023010:	e3877001 	orr	r7, r7, #1
40023014:	e5940000 	ldr	r0, [r4]
40023018:	e3500000 	cmp	r0, #0
4002301c:	0a000000 	beq	40023024 <CyU3PUartSetConfig+0x110>
40023020:	e3877002 	orr	r7, r7, #2
40023024:	e5940008 	ldr	r0, [r4, #8]
40023028:	e3500000 	cmp	r0, #0
4002302c:	0a000000 	beq	40023034 <CyU3PUartSetConfig+0x120>
40023030:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40023034:	e594000c 	ldr	r0, [r4, #12]
40023038:	e3500000 	cmp	r0, #0
4002303c:	0a000004 	beq	40023054 <CyU3PUartSetConfig+0x140>
40023040:	e3877b01 	orr	r7, r7, #1024	; 0x400
40023044:	e3a00001 	mov	r0, #1
40023048:	e59f10d0 	ldr	r1, [pc, #208]	; 40023120 <CyU3PUartSetConfig+0x20c>
4002304c:	e5810000 	str	r0, [r1]
40023050:	ea000002 	b	40023060 <CyU3PUartSetConfig+0x14c>
40023054:	e3a00000 	mov	r0, #0
40023058:	e59f10c0 	ldr	r1, [pc, #192]	; 40023120 <CyU3PUartSetConfig+0x20c>
4002305c:	e5810000 	str	r0, [r1]
40023060:	e5d40014 	ldrb	r0, [r4, #20]
40023064:	e3a01c03 	mov	r1, #768	; 0x300
40023068:	e0010400 	and	r0, r1, r0, lsl #8
4002306c:	e1877000 	orr	r7, r7, r0
40023070:	e5d40015 	ldrb	r0, [r4, #21]
40023074:	e3500001 	cmp	r0, #1
40023078:	0a000002 	beq	40023088 <CyU3PUartSetConfig+0x174>
4002307c:	e3500002 	cmp	r0, #2
40023080:	1a000006 	bne	400230a0 <CyU3PUartSetConfig+0x18c>
40023084:	ea000002 	b	40023094 <CyU3PUartSetConfig+0x180>
40023088:	e1a00000 	nop			; (mov r0, r0)
4002308c:	e3877008 	orr	r7, r7, #8
40023090:	ea000004 	b	400230a8 <CyU3PUartSetConfig+0x194>
40023094:	e1a00000 	nop			; (mov r0, r0)
40023098:	e3877018 	orr	r7, r7, #24
4002309c:	ea000001 	b	400230a8 <CyU3PUartSetConfig+0x194>
400230a0:	e1a00000 	nop			; (mov r0, r0)
400230a4:	e1a00000 	nop			; (mov r0, r0)
400230a8:	e1a00000 	nop			; (mov r0, r0)
400230ac:	e3877807 	orr	r7, r7, #458752	; 0x70000
400230b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230b4:	e5807800 	str	r7, [r0, #2048]	; 0x800
400230b8:	e59f0064 	ldr	r0, [pc, #100]	; 40023124 <CyU3PUartSetConfig+0x210>
400230bc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230c0:	e5810818 	str	r0, [r1, #2072]	; 0x818
400230c4:	e1a00005 	mov	r0, r5
400230c8:	ebfffefd 	bl	40022cc4 <CyU3PRegisterUartCallBack>
400230cc:	e3550000 	cmp	r5, #0
400230d0:	0a000003 	beq	400230e4 <CyU3PUartSetConfig+0x1d0>
400230d4:	e59f004c 	ldr	r0, [pc, #76]	; 40023128 <CyU3PUartSetConfig+0x214>
400230d8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230dc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400230e0:	ea000002 	b	400230f0 <CyU3PUartSetConfig+0x1dc>
400230e4:	e3a00000 	mov	r0, #0
400230e8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230ec:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400230f0:	e3a00001 	mov	r0, #1
400230f4:	e59f1030 	ldr	r1, [pc, #48]	; 4002312c <CyU3PUartSetConfig+0x218>
400230f8:	e5810000 	str	r0, [r1]
400230fc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023100:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023104:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023108:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002310c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023110:	ebffff6e 	bl	40022ed0 <CyU3PUartReleaseLock>
40023114:	e3a00000 	mov	r0, #0
40023118:	eaffff86 	b	40022f38 <CyU3PUartSetConfig+0x24>
4002311c:	40030f04 	.word	0x40030f04
40023120:	40030efc 	.word	0x40030efc
40023124:	00000603 	.word	0x00000603
40023128:	00000309 	.word	0x00000309
4002312c:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023130 <CyU3PUartTxSetBlockXfer>:
40023130:	e92d4070 	push	{r4, r5, r6, lr}
40023134:	e1a05000 	mov	r5, r0
40023138:	e59f003c 	ldr	r0, [pc, #60]	; 4002317c <CyU3PUartTxSetBlockXfer+0x4c>
4002313c:	e5900000 	ldr	r0, [r0]
40023140:	e3500000 	cmp	r0, #0
40023144:	1a000001 	bne	40023150 <CyU3PUartTxSetBlockXfer+0x20>
40023148:	e3a00044 	mov	r0, #68	; 0x44
4002314c:	e8bd8070 	pop	{r4, r5, r6, pc}
40023150:	ebfffedf 	bl	40022cd4 <CyU3PUartGetLock>
40023154:	e1a04000 	mov	r4, r0
40023158:	e3540000 	cmp	r4, #0
4002315c:	0a000001 	beq	40023168 <CyU3PUartTxSetBlockXfer+0x38>
40023160:	e1a00004 	mov	r0, r4
40023164:	eafffff8 	b	4002314c <CyU3PUartTxSetBlockXfer+0x1c>
40023168:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002316c:	e5805820 	str	r5, [r0, #2080]	; 0x820
40023170:	ebffff56 	bl	40022ed0 <CyU3PUartReleaseLock>
40023174:	e3a00000 	mov	r0, #0
40023178:	eafffff3 	b	4002314c <CyU3PUartTxSetBlockXfer+0x1c>
4002317c:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PI2cErrorRecovery:

40023180 <CyU3PI2cErrorRecovery>:
40023180:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023184:	e1a04000 	mov	r4, r0
40023188:	e3a07000 	mov	r7, #0
4002318c:	e3a08000 	mov	r8, #0
40023190:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023194:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023198:	e59f1164 	ldr	r1, [pc, #356]	; 40023304 <CyU3PI2cErrorRecovery+0x184>
4002319c:	e5810000 	str	r0, [r1]
400231a0:	e59f5160 	ldr	r5, [pc, #352]	; 40023308 <CyU3PI2cErrorRecovery+0x188>
400231a4:	e1a00000 	nop			; (mov r0, r0)
400231a8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231ac:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400231b0:	e3100201 	tst	r0, #268435456	; 0x10000000
400231b4:	0a000002 	beq	400231c4 <CyU3PI2cErrorRecovery+0x44>
400231b8:	e1b00005 	movs	r0, r5
400231bc:	e2455001 	sub	r5, r5, #1
400231c0:	1afffff8 	bne	400231a8 <CyU3PI2cErrorRecovery+0x28>
400231c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c8:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
400231cc:	e3a00000 	mov	r0, #0
400231d0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231d4:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400231d8:	e3e00000 	mvn	r0, #0
400231dc:	e5810408 	str	r0, [r1, #1032]	; 0x408
400231e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231e4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400231e8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400231ec:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231f0:	e3a00005 	mov	r0, #5
400231f4:	ebffc0cd 	bl	40013530 <CyU3PBusyWait>
400231f8:	e3540000 	cmp	r4, #0
400231fc:	0a000032 	beq	400232cc <CyU3PI2cErrorRecovery+0x14c>
40023200:	e3a00000 	mov	r0, #0
40023204:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023208:	e5810438 	str	r0, [r1, #1080]	; 0x438
4002320c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023210:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023214:	e3100008 	tst	r0, #8
40023218:	1a000000 	bne	40023220 <CyU3PI2cErrorRecovery+0xa0>
4002321c:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023220:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023224:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023228:	e3100002 	tst	r0, #2
4002322c:	0a000000 	beq	40023234 <CyU3PI2cErrorRecovery+0xb4>
40023230:	e3a07202 	mov	r7, #536870912	; 0x20000000
40023234:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023238:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002323c:	e1800007 	orr	r0, r0, r7
40023240:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023244:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023248:	e1e05741 	mvn	r5, r1, asr #14
4002324c:	ea000004 	b	40023264 <CyU3PI2cErrorRecovery+0xe4>
40023250:	e1b00005 	movs	r0, r5
40023254:	e2455001 	sub	r5, r5, #1
40023258:	1a000001 	bne	40023264 <CyU3PI2cErrorRecovery+0xe4>
4002325c:	e3a08054 	mov	r8, #84	; 0x54
40023260:	ea000003 	b	40023274 <CyU3PI2cErrorRecovery+0xf4>
40023264:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023268:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002326c:	e3100008 	tst	r0, #8
40023270:	0afffff6 	beq	40023250 <CyU3PI2cErrorRecovery+0xd0>
40023274:	e1a00000 	nop			; (mov r0, r0)
40023278:	e3580000 	cmp	r8, #0
4002327c:	1a00000b 	bne	400232b0 <CyU3PI2cErrorRecovery+0x130>
40023280:	e59f5080 	ldr	r5, [pc, #128]	; 40023308 <CyU3PI2cErrorRecovery+0x188>
40023284:	ea000004 	b	4002329c <CyU3PI2cErrorRecovery+0x11c>
40023288:	e1b00005 	movs	r0, r5
4002328c:	e2455001 	sub	r5, r5, #1
40023290:	1a000001 	bne	4002329c <CyU3PI2cErrorRecovery+0x11c>
40023294:	e3a08054 	mov	r8, #84	; 0x54
40023298:	ea000003 	b	400232ac <CyU3PI2cErrorRecovery+0x12c>
4002329c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232a0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400232a4:	e3100002 	tst	r0, #2
400232a8:	1afffff6 	bne	40023288 <CyU3PI2cErrorRecovery+0x108>
400232ac:	e1a00000 	nop			; (mov r0, r0)
400232b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232b4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400232b8:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
400232bc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232c0:	e5810400 	str	r0, [r1, #1024]	; 0x400
400232c4:	e3a00001 	mov	r0, #1
400232c8:	ebffc098 	bl	40013530 <CyU3PBusyWait>
400232cc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232d0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400232d4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400232d8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232dc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400232e0:	e3a00005 	mov	r0, #5
400232e4:	ebffc091 	bl	40013530 <CyU3PBusyWait>
400232e8:	e3e00000 	mvn	r0, #0
400232ec:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232f0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400232f4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232f8:	e580640c 	str	r6, [r0, #1036]	; 0x40c
400232fc:	e1a00008 	mov	r0, r8
40023300:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023304:	40030f1c 	.word	0x40030f1c
40023308:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

4002330c <CyU3PI2cGetLock>:
4002330c:	e92d4010 	push	{r4, lr}
40023310:	e3a04000 	mov	r4, #0
40023314:	e59f0044 	ldr	r0, [pc, #68]	; 40023360 <CyU3PI2cGetLock+0x54>
40023318:	e5900000 	ldr	r0, [r0]
4002331c:	e3500000 	cmp	r0, #0
40023320:	1a000001 	bne	4002332c <CyU3PI2cGetLock+0x20>
40023324:	e3a00044 	mov	r0, #68	; 0x44
40023328:	e8bd8010 	pop	{r4, pc}
4002332c:	ebff954c 	bl	40008864 <_tx_thread_identify>
40023330:	e3500000 	cmp	r0, #0
40023334:	0a000000 	beq	4002333c <CyU3PI2cGetLock+0x30>
40023338:	e3e04000 	mvn	r4, #0
4002333c:	e1a01004 	mov	r1, r4
40023340:	e59f001c 	ldr	r0, [pc, #28]	; 40023364 <CyU3PI2cGetLock+0x58>
40023344:	ebff9b5b 	bl	4000a0b8 <_txe_mutex_get>
40023348:	e3500000 	cmp	r0, #0
4002334c:	0a000001 	beq	40023358 <CyU3PI2cGetLock+0x4c>
40023350:	e3a0001d 	mov	r0, #29
40023354:	eafffff3 	b	40023328 <CyU3PI2cGetLock+0x1c>
40023358:	e3a00000 	mov	r0, #0
4002335c:	eafffff1 	b	40023328 <CyU3PI2cGetLock+0x1c>
40023360:	40030f14 	.word	0x40030f14
40023364:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

40023368 <CyU3PI2cInit>:
40023368:	e92d4010 	push	{r4, lr}
4002336c:	e3a00000 	mov	r0, #0
40023370:	ebffbe0d 	bl	40012bac <CyU3PIsLppIOConfigured>
40023374:	e3500000 	cmp	r0, #0
40023378:	1a000001 	bne	40023384 <CyU3PI2cInit+0x1c>
4002337c:	e3a00044 	mov	r0, #68	; 0x44
40023380:	e8bd8010 	pop	{r4, pc}
40023384:	e59f00bc 	ldr	r0, [pc, #188]	; 40023448 <CyU3PI2cInit+0xe0>
40023388:	e5900000 	ldr	r0, [r0]
4002338c:	e3500000 	cmp	r0, #0
40023390:	0a000001 	beq	4002339c <CyU3PI2cInit+0x34>
40023394:	e3a00043 	mov	r0, #67	; 0x43
40023398:	eafffff8 	b	40023380 <CyU3PI2cInit+0x18>
4002339c:	e59f00a8 	ldr	r0, [pc, #168]	; 4002344c <CyU3PI2cInit+0xe4>
400233a0:	ebffc1f7 	bl	40013b84 <CyU3PI2cSetClock>
400233a4:	e1a04000 	mov	r4, r0
400233a8:	e3540000 	cmp	r4, #0
400233ac:	0a000001 	beq	400233b8 <CyU3PI2cInit+0x50>
400233b0:	e1a00004 	mov	r0, r4
400233b4:	eafffff1 	b	40023380 <CyU3PI2cInit+0x18>
400233b8:	e59f1090 	ldr	r1, [pc, #144]	; 40023450 <CyU3PI2cInit+0xe8>
400233bc:	e3a00000 	mov	r0, #0
400233c0:	ebffc256 	bl	40013d20 <CyU3PLppInit>
400233c4:	e1a04000 	mov	r4, r0
400233c8:	e3540000 	cmp	r4, #0
400233cc:	0a000001 	beq	400233d8 <CyU3PI2cInit+0x70>
400233d0:	e1a00004 	mov	r0, r4
400233d4:	eaffffe9 	b	40023380 <CyU3PI2cInit+0x18>
400233d8:	e3a03038 	mov	r3, #56	; 0x38
400233dc:	e3a02000 	mov	r2, #0
400233e0:	e1a01002 	mov	r1, r2
400233e4:	e59f0068 	ldr	r0, [pc, #104]	; 40023454 <CyU3PI2cInit+0xec>
400233e8:	ebff9ab4 	bl	40009ec0 <_txe_mutex_create>
400233ec:	e3a00000 	mov	r0, #0
400233f0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400233f4:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400233f8:	e3a0000a 	mov	r0, #10
400233fc:	ebffc04b 	bl	40013530 <CyU3PBusyWait>
40023400:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023404:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023408:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002340c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023410:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023414:	e1a00000 	nop			; (mov r0, r0)
40023418:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002341c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023420:	e3100001 	tst	r0, #1
40023424:	0afffffb 	beq	40023418 <CyU3PI2cInit+0xb0>
40023428:	e3a00000 	mov	r0, #0
4002342c:	e59f1024 	ldr	r1, [pc, #36]	; 40023458 <CyU3PI2cInit+0xf0>
40023430:	e5810000 	str	r0, [r1]
40023434:	e3a00001 	mov	r0, #1
40023438:	e2411008 	sub	r1, r1, #8
4002343c:	e5810000 	str	r0, [r1]
40023440:	e3a00000 	mov	r0, #0
40023444:	eaffffcd 	b	40023380 <CyU3PI2cInit+0x18>
40023448:	40030f14 	.word	0x40030f14
4002344c:	000186a0 	.word	0x000186a0
40023450:	4002345c 	.word	0x4002345c
40023454:	40032e54 	.word	0x40032e54
40023458:	40030f1c 	.word	0x40030f1c

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

4002345c <CyU3PI2cInt_ThreadHandler>:
4002345c:	e92d4070 	push	{r4, r5, r6, lr}
40023460:	ebffffa9 	bl	4002330c <CyU3PI2cGetLock>
40023464:	e1a05000 	mov	r5, r0
40023468:	e3550000 	cmp	r5, #0
4002346c:	0a000000 	beq	40023474 <CyU3PI2cInt_ThreadHandler+0x18>
40023470:	e8bd8070 	pop	{r4, r5, r6, pc}
40023474:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023478:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002347c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023480:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023484:	e0004001 	and	r4, r0, r1
40023488:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002348c:	e5804408 	str	r4, [r0, #1032]	; 0x408
40023490:	e59f00b0 	ldr	r0, [pc, #176]	; 40023548 <CyU3PI2cInt_ThreadHandler+0xec>
40023494:	e5900000 	ldr	r0, [r0]
40023498:	e3500000 	cmp	r0, #0
4002349c:	1a000001 	bne	400234a8 <CyU3PI2cInt_ThreadHandler+0x4c>
400234a0:	eb000098 	bl	40023708 <CyU3PI2cReleaseLock>
400234a4:	eafffff1 	b	40023470 <CyU3PI2cInt_ThreadHandler+0x14>
400234a8:	e3140001 	tst	r4, #1
400234ac:	0a000004 	beq	400234c4 <CyU3PI2cInt_ThreadHandler+0x68>
400234b0:	e3a01000 	mov	r1, #0
400234b4:	e1a00001 	mov	r0, r1
400234b8:	e59f2088 	ldr	r2, [pc, #136]	; 40023548 <CyU3PI2cInt_ThreadHandler+0xec>
400234bc:	e5922000 	ldr	r2, [r2]
400234c0:	e12fff32 	blx	r2
400234c4:	e3140008 	tst	r4, #8
400234c8:	0a000004 	beq	400234e0 <CyU3PI2cInt_ThreadHandler+0x84>
400234cc:	e3a01000 	mov	r1, #0
400234d0:	e3a00001 	mov	r0, #1
400234d4:	e59f206c 	ldr	r2, [pc, #108]	; 40023548 <CyU3PI2cInt_ThreadHandler+0xec>
400234d8:	e5922000 	ldr	r2, [r2]
400234dc:	e12fff32 	blx	r2
400234e0:	e3140040 	tst	r4, #64	; 0x40
400234e4:	0a000004 	beq	400234fc <CyU3PI2cInt_ThreadHandler+0xa0>
400234e8:	e3a01000 	mov	r1, #0
400234ec:	e3a00002 	mov	r0, #2
400234f0:	e59f2050 	ldr	r2, [pc, #80]	; 40023548 <CyU3PI2cInt_ThreadHandler+0xec>
400234f4:	e5922000 	ldr	r2, [r2]
400234f8:	e12fff32 	blx	r2
400234fc:	e3140080 	tst	r4, #128	; 0x80
40023500:	0a000004 	beq	40023518 <CyU3PI2cInt_ThreadHandler+0xbc>
40023504:	e3a01000 	mov	r1, #0
40023508:	e3a00003 	mov	r0, #3
4002350c:	e59f2034 	ldr	r2, [pc, #52]	; 40023548 <CyU3PI2cInt_ThreadHandler+0xec>
40023510:	e5922000 	ldr	r2, [r2]
40023514:	e12fff32 	blx	r2
40023518:	e3140c01 	tst	r4, #256	; 0x100
4002351c:	0a000007 	beq	40023540 <CyU3PI2cInt_ThreadHandler+0xe4>
40023520:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023524:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023528:	e200040f 	and	r0, r0, #251658240	; 0xf000000
4002352c:	e1a01c20 	lsr	r1, r0, #24
40023530:	e3a00004 	mov	r0, #4
40023534:	e59f200c 	ldr	r2, [pc, #12]	; 40023548 <CyU3PI2cInt_ThreadHandler+0xec>
40023538:	e5922000 	ldr	r2, [r2]
4002353c:	e12fff32 	blx	r2
40023540:	eb000070 	bl	40023708 <CyU3PI2cReleaseLock>
40023544:	eaffffc9 	b	40023470 <CyU3PI2cInt_ThreadHandler+0x14>
40023548:	40030f18 	.word	0x40030f18

Disassembly of section i.CyU3PI2cReceiveBytes:

4002354c <CyU3PI2cReceiveBytes>:
4002354c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40023550:	e1a04000 	mov	r4, r0
40023554:	e1a05001 	mov	r5, r1
40023558:	e1a06002 	mov	r6, r2
4002355c:	e1a07003 	mov	r7, r3
40023560:	e59f0194 	ldr	r0, [pc, #404]	; 400236fc <CyU3PI2cReceiveBytes+0x1b0>
40023564:	e5900000 	ldr	r0, [r0]
40023568:	e3500000 	cmp	r0, #0
4002356c:	1a000001 	bne	40023578 <CyU3PI2cReceiveBytes+0x2c>
40023570:	e3a00044 	mov	r0, #68	; 0x44
40023574:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40023578:	e59f0180 	ldr	r0, [pc, #384]	; 40023700 <CyU3PI2cReceiveBytes+0x1b4>
4002357c:	e5900000 	ldr	r0, [r0]
40023580:	e3500000 	cmp	r0, #0
40023584:	0a000001 	beq	40023590 <CyU3PI2cReceiveBytes+0x44>
40023588:	e3a00044 	mov	r0, #68	; 0x44
4002358c:	eafffff8 	b	40023574 <CyU3PI2cReceiveBytes+0x28>
40023590:	e3550000 	cmp	r5, #0
40023594:	0a000001 	beq	400235a0 <CyU3PI2cReceiveBytes+0x54>
40023598:	e3540000 	cmp	r4, #0
4002359c:	1a000001 	bne	400235a8 <CyU3PI2cReceiveBytes+0x5c>
400235a0:	e3a00041 	mov	r0, #65	; 0x41
400235a4:	eafffff2 	b	40023574 <CyU3PI2cReceiveBytes+0x28>
400235a8:	e5d40008 	ldrb	r0, [r4, #8]
400235ac:	e3500000 	cmp	r0, #0
400235b0:	0a000002 	beq	400235c0 <CyU3PI2cReceiveBytes+0x74>
400235b4:	e5d40008 	ldrb	r0, [r4, #8]
400235b8:	e3500008 	cmp	r0, #8
400235bc:	da000001 	ble	400235c8 <CyU3PI2cReceiveBytes+0x7c>
400235c0:	e3a00040 	mov	r0, #64	; 0x40
400235c4:	eaffffea 	b	40023574 <CyU3PI2cReceiveBytes+0x28>
400235c8:	e3560000 	cmp	r6, #0
400235cc:	1a000001 	bne	400235d8 <CyU3PI2cReceiveBytes+0x8c>
400235d0:	e3a00000 	mov	r0, #0
400235d4:	eaffffe6 	b	40023574 <CyU3PI2cReceiveBytes+0x28>
400235d8:	ebffff4b 	bl	4002330c <CyU3PI2cGetLock>
400235dc:	e1a08000 	mov	r8, r0
400235e0:	e3580000 	cmp	r8, #0
400235e4:	0a000001 	beq	400235f0 <CyU3PI2cReceiveBytes+0xa4>
400235e8:	e1a00008 	mov	r0, r8
400235ec:	eaffffe0 	b	40023574 <CyU3PI2cReceiveBytes+0x28>
400235f0:	e3a0bd07 	mov	fp, #448	; 0x1c0
400235f4:	e1a00000 	nop			; (mov r0, r0)
400235f8:	e3a02001 	mov	r2, #1
400235fc:	e1a01006 	mov	r1, r6
40023600:	e1a00004 	mov	r0, r4
40023604:	eb000166 	bl	40023ba4 <MyI2cSendCommand>
40023608:	e1a08000 	mov	r8, r0
4002360c:	e3580000 	cmp	r8, #0
40023610:	0a000000 	beq	40023618 <CyU3PI2cReceiveBytes+0xcc>
40023614:	ea00002a 	b	400236c4 <CyU3PI2cReceiveBytes+0x178>
40023618:	e3a0a000 	mov	sl, #0
4002361c:	ea000020 	b	400236a4 <CyU3PI2cReceiveBytes+0x158>
40023620:	e59f00dc 	ldr	r0, [pc, #220]	; 40023704 <CyU3PI2cReceiveBytes+0x1b8>
40023624:	e58d0000 	str	r0, [sp]
40023628:	ea000006 	b	40023648 <CyU3PI2cReceiveBytes+0xfc>
4002362c:	e59d0000 	ldr	r0, [sp]
40023630:	e2401001 	sub	r1, r0, #1
40023634:	e3500000 	cmp	r0, #0
40023638:	e58d1000 	str	r1, [sp]
4002363c:	1a000001 	bne	40023648 <CyU3PI2cReceiveBytes+0xfc>
40023640:	e3a08055 	mov	r8, #85	; 0x55
40023644:	ea000004 	b	4002365c <CyU3PI2cReceiveBytes+0x110>
40023648:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002364c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023650:	e38b1002 	orr	r1, fp, #2
40023654:	e1100001 	tst	r0, r1
40023658:	0afffff3 	beq	4002362c <CyU3PI2cReceiveBytes+0xe0>
4002365c:	e1a00000 	nop			; (mov r0, r0)
40023660:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023664:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023668:	e110000b 	tst	r0, fp
4002366c:	0a000000 	beq	40023674 <CyU3PI2cReceiveBytes+0x128>
40023670:	e3a0804a 	mov	r8, #74	; 0x4a
40023674:	e3580000 	cmp	r8, #0
40023678:	0a000005 	beq	40023694 <CyU3PI2cReceiveBytes+0x148>
4002367c:	e3a00001 	mov	r0, #1
40023680:	ebfffebe 	bl	40023180 <CyU3PI2cErrorRecovery>
40023684:	e3500000 	cmp	r0, #0
40023688:	0a000000 	beq	40023690 <CyU3PI2cReceiveBytes+0x144>
4002368c:	e3a08054 	mov	r8, #84	; 0x54
40023690:	ea000005 	b	400236ac <CyU3PI2cReceiveBytes+0x160>
40023694:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023698:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
4002369c:	e7c5000a 	strb	r0, [r5, sl]
400236a0:	e28aa001 	add	sl, sl, #1
400236a4:	e15a0006 	cmp	sl, r6
400236a8:	3affffdc 	bcc	40023620 <CyU3PI2cReceiveBytes+0xd4>
400236ac:	e1a00000 	nop			; (mov r0, r0)
400236b0:	e3580000 	cmp	r8, #0
400236b4:	0a000002 	beq	400236c4 <CyU3PI2cReceiveBytes+0x178>
400236b8:	e1b00007 	movs	r0, r7
400236bc:	e2477001 	sub	r7, r7, #1
400236c0:	1affffcc 	bne	400235f8 <CyU3PI2cReceiveBytes+0xac>
400236c4:	e1a00000 	nop			; (mov r0, r0)
400236c8:	e358004a 	cmp	r8, #74	; 0x4a
400236cc:	1a000007 	bne	400236f0 <CyU3PI2cReceiveBytes+0x1a4>
400236d0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236d4:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
400236d8:	e3190040 	tst	r9, #64	; 0x40
400236dc:	0a000000 	beq	400236e4 <CyU3PI2cReceiveBytes+0x198>
400236e0:	e3a08045 	mov	r8, #69	; 0x45
400236e4:	e3190080 	tst	r9, #128	; 0x80
400236e8:	0a000000 	beq	400236f0 <CyU3PI2cReceiveBytes+0x1a4>
400236ec:	e3a08055 	mov	r8, #85	; 0x55
400236f0:	eb000004 	bl	40023708 <CyU3PI2cReleaseLock>
400236f4:	e1a00008 	mov	r0, r8
400236f8:	eaffff9d 	b	40023574 <CyU3PI2cReceiveBytes+0x28>
400236fc:	40030f10 	.word	0x40030f10
40023700:	40030f0c 	.word	0x40030f0c
40023704:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023708 <CyU3PI2cReleaseLock>:
40023708:	e92d4010 	push	{r4, lr}
4002370c:	e59f0030 	ldr	r0, [pc, #48]	; 40023744 <CyU3PI2cReleaseLock+0x3c>
40023710:	e5900000 	ldr	r0, [r0]
40023714:	e3500000 	cmp	r0, #0
40023718:	1a000001 	bne	40023724 <CyU3PI2cReleaseLock+0x1c>
4002371c:	e3a00044 	mov	r0, #68	; 0x44
40023720:	e8bd8010 	pop	{r4, pc}
40023724:	e59f001c 	ldr	r0, [pc, #28]	; 40023748 <CyU3PI2cReleaseLock+0x40>
40023728:	ebff9a97 	bl	4000a18c <_txe_mutex_put>
4002372c:	e3500000 	cmp	r0, #0
40023730:	0a000001 	beq	4002373c <CyU3PI2cReleaseLock+0x34>
40023734:	e3a0001d 	mov	r0, #29
40023738:	eafffff8 	b	40023720 <CyU3PI2cReleaseLock+0x18>
4002373c:	e3a00000 	mov	r0, #0
40023740:	eafffff6 	b	40023720 <CyU3PI2cReleaseLock+0x18>
40023744:	40030f14 	.word	0x40030f14
40023748:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

4002374c <CyU3PI2cSetConfig>:
4002374c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023750:	e1a04000 	mov	r4, r0
40023754:	e1a05001 	mov	r5, r1
40023758:	e59f01e0 	ldr	r0, [pc, #480]	; 40023940 <CyU3PI2cSetConfig+0x1f4>
4002375c:	e5900000 	ldr	r0, [r0]
40023760:	e3500000 	cmp	r0, #0
40023764:	1a000001 	bne	40023770 <CyU3PI2cSetConfig+0x24>
40023768:	e3a00042 	mov	r0, #66	; 0x42
4002376c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023770:	e3540000 	cmp	r4, #0
40023774:	1a000001 	bne	40023780 <CyU3PI2cSetConfig+0x34>
40023778:	e3a00041 	mov	r0, #65	; 0x41
4002377c:	eafffffa 	b	4002376c <CyU3PI2cSetConfig+0x20>
40023780:	e5940004 	ldr	r0, [r4, #4]
40023784:	e3500000 	cmp	r0, #0
40023788:	1a000003 	bne	4002379c <CyU3PI2cSetConfig+0x50>
4002378c:	e3550000 	cmp	r5, #0
40023790:	0a000001 	beq	4002379c <CyU3PI2cSetConfig+0x50>
40023794:	e3a00040 	mov	r0, #64	; 0x40
40023798:	eafffff3 	b	4002376c <CyU3PI2cSetConfig+0x20>
4002379c:	ebfffeda 	bl	4002330c <CyU3PI2cGetLock>
400237a0:	e1a06000 	mov	r6, r0
400237a4:	e3560000 	cmp	r6, #0
400237a8:	0a000001 	beq	400237b4 <CyU3PI2cSetConfig+0x68>
400237ac:	e1a00006 	mov	r0, r6
400237b0:	eaffffed 	b	4002376c <CyU3PI2cSetConfig+0x20>
400237b4:	e3a00000 	mov	r0, #0
400237b8:	e59f1184 	ldr	r1, [pc, #388]	; 40023944 <CyU3PI2cSetConfig+0x1f8>
400237bc:	e5810000 	str	r0, [r1]
400237c0:	e5940000 	ldr	r0, [r4]
400237c4:	ebffc0ee 	bl	40013b84 <CyU3PI2cSetClock>
400237c8:	e1a06000 	mov	r6, r0
400237cc:	e3560000 	cmp	r6, #0
400237d0:	1a00000e 	bne	40023810 <CyU3PI2cSetConfig+0xc4>
400237d4:	e3a00206 	mov	r0, #1610612736	; 0x60000000
400237d8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237dc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400237e0:	e1e07741 	mvn	r7, r1, asr #14
400237e4:	ea000004 	b	400237fc <CyU3PI2cSetConfig+0xb0>
400237e8:	e1b00007 	movs	r0, r7
400237ec:	e2477001 	sub	r7, r7, #1
400237f0:	1a000001 	bne	400237fc <CyU3PI2cSetConfig+0xb0>
400237f4:	e3a06054 	mov	r6, #84	; 0x54
400237f8:	ea000003 	b	4002380c <CyU3PI2cSetConfig+0xc0>
400237fc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023800:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023804:	e3100008 	tst	r0, #8
40023808:	0afffff6 	beq	400237e8 <CyU3PI2cSetConfig+0x9c>
4002380c:	e1a00000 	nop			; (mov r0, r0)
40023810:	e3560000 	cmp	r6, #0
40023814:	1a00000b 	bne	40023848 <CyU3PI2cSetConfig+0xfc>
40023818:	e59f7128 	ldr	r7, [pc, #296]	; 40023948 <CyU3PI2cSetConfig+0x1fc>
4002381c:	ea000004 	b	40023834 <CyU3PI2cSetConfig+0xe8>
40023820:	e1b00007 	movs	r0, r7
40023824:	e2477001 	sub	r7, r7, #1
40023828:	1a000001 	bne	40023834 <CyU3PI2cSetConfig+0xe8>
4002382c:	e3a06054 	mov	r6, #84	; 0x54
40023830:	ea000003 	b	40023844 <CyU3PI2cSetConfig+0xf8>
40023834:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023838:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002383c:	e3100002 	tst	r0, #2
40023840:	1afffff6 	bne	40023820 <CyU3PI2cSetConfig+0xd4>
40023844:	e1a00000 	nop			; (mov r0, r0)
40023848:	e3560000 	cmp	r6, #0
4002384c:	0a000002 	beq	4002385c <CyU3PI2cSetConfig+0x110>
40023850:	ebffffac 	bl	40023708 <CyU3PI2cReleaseLock>
40023854:	e1a00006 	mov	r0, r6
40023858:	eaffffc3 	b	4002376c <CyU3PI2cSetConfig+0x20>
4002385c:	e3a00000 	mov	r0, #0
40023860:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023864:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023868:	e3a06000 	mov	r6, #0
4002386c:	e5940000 	ldr	r0, [r4]
40023870:	e59f10d4 	ldr	r1, [pc, #212]	; 4002394c <CyU3PI2cSetConfig+0x200>
40023874:	e1500001 	cmp	r0, r1
40023878:	8a000000 	bhi	40023880 <CyU3PI2cSetConfig+0x134>
4002387c:	e3a06004 	mov	r6, #4
40023880:	e5940004 	ldr	r0, [r4, #4]
40023884:	e3500000 	cmp	r0, #0
40023888:	0a000007 	beq	400238ac <CyU3PI2cSetConfig+0x160>
4002388c:	e3866001 	orr	r6, r6, #1
40023890:	e3a00001 	mov	r0, #1
40023894:	e59f10b4 	ldr	r1, [pc, #180]	; 40023950 <CyU3PI2cSetConfig+0x204>
40023898:	e5810000 	str	r0, [r1]
4002389c:	e1d400bc 	ldrh	r0, [r4, #12]
400238a0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400238a4:	e5810414 	str	r0, [r1, #1044]	; 0x414
400238a8:	ea000005 	b	400238c4 <CyU3PI2cSetConfig+0x178>
400238ac:	e3a00000 	mov	r0, #0
400238b0:	e59f1098 	ldr	r1, [pc, #152]	; 40023950 <CyU3PI2cSetConfig+0x204>
400238b4:	e5810000 	str	r0, [r1]
400238b8:	e59f0094 	ldr	r0, [pc, #148]	; 40023954 <CyU3PI2cSetConfig+0x208>
400238bc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400238c0:	e5810414 	str	r0, [r1, #1044]	; 0x414
400238c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238c8:	e5806400 	str	r6, [r0, #1024]	; 0x400
400238cc:	e59f0084 	ldr	r0, [pc, #132]	; 40023958 <CyU3PI2cSetConfig+0x20c>
400238d0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400238d4:	e5810440 	str	r0, [r1, #1088]	; 0x440
400238d8:	e5940008 	ldr	r0, [r4, #8]
400238dc:	e5810410 	str	r0, [r1, #1040]	; 0x410
400238e0:	e3e00000 	mvn	r0, #0
400238e4:	e5810408 	str	r0, [r1, #1032]	; 0x408
400238e8:	e1a00005 	mov	r0, r5
400238ec:	eb0000a8 	bl	40023b94 <CyU3PRegisterI2cCallBack>
400238f0:	e3550000 	cmp	r5, #0
400238f4:	0a000003 	beq	40023908 <CyU3PI2cSetConfig+0x1bc>
400238f8:	e59f005c 	ldr	r0, [pc, #92]	; 4002395c <CyU3PI2cSetConfig+0x210>
400238fc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023900:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023904:	ea000002 	b	40023914 <CyU3PI2cSetConfig+0x1c8>
40023908:	e3a00000 	mov	r0, #0
4002390c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023910:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023914:	e3a00001 	mov	r0, #1
40023918:	e59f1040 	ldr	r1, [pc, #64]	; 40023960 <CyU3PI2cSetConfig+0x214>
4002391c:	e5810000 	str	r0, [r1]
40023920:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023924:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023928:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002392c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023930:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023934:	ebffff73 	bl	40023708 <CyU3PI2cReleaseLock>
40023938:	e3a00000 	mov	r0, #0
4002393c:	eaffff8a 	b	4002376c <CyU3PI2cSetConfig+0x20>
40023940:	40030f14 	.word	0x40030f14
40023944:	40030f1c 	.word	0x40030f1c
40023948:	00007fff 	.word	0x00007fff
4002394c:	000186a0 	.word	0x000186a0
40023950:	40030f0c 	.word	0x40030f0c
40023954:	0000ffff 	.word	0x0000ffff
40023958:	00000502 	.word	0x00000502
4002395c:	000001c9 	.word	0x000001c9
40023960:	40030f10 	.word	0x40030f10

Disassembly of section i.CyU3PI2cTransmitBytes:

40023964 <CyU3PI2cTransmitBytes>:
40023964:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023968:	e1a04000 	mov	r4, r0
4002396c:	e1a05001 	mov	r5, r1
40023970:	e1a06002 	mov	r6, r2
40023974:	e59f020c 	ldr	r0, [pc, #524]	; 40023b88 <CyU3PI2cTransmitBytes+0x224>
40023978:	e5900000 	ldr	r0, [r0]
4002397c:	e3500000 	cmp	r0, #0
40023980:	1a000002 	bne	40023990 <CyU3PI2cTransmitBytes+0x2c>
40023984:	e3a00044 	mov	r0, #68	; 0x44
40023988:	e28dd010 	add	sp, sp, #16
4002398c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023990:	e59f01f4 	ldr	r0, [pc, #500]	; 40023b8c <CyU3PI2cTransmitBytes+0x228>
40023994:	e5900000 	ldr	r0, [r0]
40023998:	e3500000 	cmp	r0, #0
4002399c:	0a000001 	beq	400239a8 <CyU3PI2cTransmitBytes+0x44>
400239a0:	e3a00044 	mov	r0, #68	; 0x44
400239a4:	eafffff7 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
400239a8:	e3550000 	cmp	r5, #0
400239ac:	0a000001 	beq	400239b8 <CyU3PI2cTransmitBytes+0x54>
400239b0:	e3540000 	cmp	r4, #0
400239b4:	1a000001 	bne	400239c0 <CyU3PI2cTransmitBytes+0x5c>
400239b8:	e3a00041 	mov	r0, #65	; 0x41
400239bc:	eafffff1 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
400239c0:	e5d40008 	ldrb	r0, [r4, #8]
400239c4:	e3500000 	cmp	r0, #0
400239c8:	0a000002 	beq	400239d8 <CyU3PI2cTransmitBytes+0x74>
400239cc:	e5d40008 	ldrb	r0, [r4, #8]
400239d0:	e3500008 	cmp	r0, #8
400239d4:	da000001 	ble	400239e0 <CyU3PI2cTransmitBytes+0x7c>
400239d8:	e3a00040 	mov	r0, #64	; 0x40
400239dc:	eaffffe9 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
400239e0:	e3560000 	cmp	r6, #0
400239e4:	1a000001 	bne	400239f0 <CyU3PI2cTransmitBytes+0x8c>
400239e8:	e3a00000 	mov	r0, #0
400239ec:	eaffffe5 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
400239f0:	ebfffe45 	bl	4002330c <CyU3PI2cGetLock>
400239f4:	e1a07000 	mov	r7, r0
400239f8:	e3570000 	cmp	r7, #0
400239fc:	0a000001 	beq	40023a08 <CyU3PI2cTransmitBytes+0xa4>
40023a00:	e1a00007 	mov	r0, r7
40023a04:	eaffffdf 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
40023a08:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023a0c:	e1a00000 	nop			; (mov r0, r0)
40023a10:	e3a07000 	mov	r7, #0
40023a14:	e5d50000 	ldrb	r0, [r5]
40023a18:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023a1c:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023a20:	e3a02000 	mov	r2, #0
40023a24:	e1a01006 	mov	r1, r6
40023a28:	e1a00004 	mov	r0, r4
40023a2c:	eb00005c 	bl	40023ba4 <MyI2cSendCommand>
40023a30:	e1a07000 	mov	r7, r0
40023a34:	e3570000 	cmp	r7, #0
40023a38:	0a000000 	beq	40023a40 <CyU3PI2cTransmitBytes+0xdc>
40023a3c:	ea000043 	b	40023b50 <CyU3PI2cTransmitBytes+0x1ec>
40023a40:	e3a08001 	mov	r8, #1
40023a44:	ea000018 	b	40023aac <CyU3PI2cTransmitBytes+0x148>
40023a48:	e59f9140 	ldr	r9, [pc, #320]	; 40023b90 <CyU3PI2cTransmitBytes+0x22c>
40023a4c:	ea000004 	b	40023a64 <CyU3PI2cTransmitBytes+0x100>
40023a50:	e1b00009 	movs	r0, r9
40023a54:	e2499001 	sub	r9, r9, #1
40023a58:	1a000001 	bne	40023a64 <CyU3PI2cTransmitBytes+0x100>
40023a5c:	e3a07055 	mov	r7, #85	; 0x55
40023a60:	ea000004 	b	40023a78 <CyU3PI2cTransmitBytes+0x114>
40023a64:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a68:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023a6c:	e38a1010 	orr	r1, sl, #16
40023a70:	e1100001 	tst	r0, r1
40023a74:	0afffff5 	beq	40023a50 <CyU3PI2cTransmitBytes+0xec>
40023a78:	e1a00000 	nop			; (mov r0, r0)
40023a7c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a80:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023a84:	e110000a 	tst	r0, sl
40023a88:	0a000000 	beq	40023a90 <CyU3PI2cTransmitBytes+0x12c>
40023a8c:	e3a0704a 	mov	r7, #74	; 0x4a
40023a90:	e3570000 	cmp	r7, #0
40023a94:	0a000000 	beq	40023a9c <CyU3PI2cTransmitBytes+0x138>
40023a98:	ea000005 	b	40023ab4 <CyU3PI2cTransmitBytes+0x150>
40023a9c:	e7d50008 	ldrb	r0, [r5, r8]
40023aa0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023aa4:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023aa8:	e2888001 	add	r8, r8, #1
40023aac:	e1580006 	cmp	r8, r6
40023ab0:	3affffe4 	bcc	40023a48 <CyU3PI2cTransmitBytes+0xe4>
40023ab4:	e1a00000 	nop			; (mov r0, r0)
40023ab8:	e1560008 	cmp	r6, r8
40023abc:	1a000013 	bne	40023b10 <CyU3PI2cTransmitBytes+0x1ac>
40023ac0:	e3570000 	cmp	r7, #0
40023ac4:	1a000011 	bne	40023b10 <CyU3PI2cTransmitBytes+0x1ac>
40023ac8:	e59f90c0 	ldr	r9, [pc, #192]	; 40023b90 <CyU3PI2cTransmitBytes+0x22c>
40023acc:	ea000004 	b	40023ae4 <CyU3PI2cTransmitBytes+0x180>
40023ad0:	e1b00009 	movs	r0, r9
40023ad4:	e2499001 	sub	r9, r9, #1
40023ad8:	1a000001 	bne	40023ae4 <CyU3PI2cTransmitBytes+0x180>
40023adc:	e3a07055 	mov	r7, #85	; 0x55
40023ae0:	ea000004 	b	40023af8 <CyU3PI2cTransmitBytes+0x194>
40023ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ae8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023aec:	e38a1008 	orr	r1, sl, #8
40023af0:	e1100001 	tst	r0, r1
40023af4:	0afffff5 	beq	40023ad0 <CyU3PI2cTransmitBytes+0x16c>
40023af8:	e1a00000 	nop			; (mov r0, r0)
40023afc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b00:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b04:	e110000a 	tst	r0, sl
40023b08:	0a000000 	beq	40023b10 <CyU3PI2cTransmitBytes+0x1ac>
40023b0c:	e3a0704a 	mov	r7, #74	; 0x4a
40023b10:	e3570000 	cmp	r7, #0
40023b14:	0a000006 	beq	40023b34 <CyU3PI2cTransmitBytes+0x1d0>
40023b18:	e3a00001 	mov	r0, #1
40023b1c:	ebfffd97 	bl	40023180 <CyU3PI2cErrorRecovery>
40023b20:	e3500000 	cmp	r0, #0
40023b24:	0a000002 	beq	40023b34 <CyU3PI2cTransmitBytes+0x1d0>
40023b28:	ebfffef6 	bl	40023708 <CyU3PI2cReleaseLock>
40023b2c:	e3a00054 	mov	r0, #84	; 0x54
40023b30:	eaffff94 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
40023b34:	e3570000 	cmp	r7, #0
40023b38:	0a000004 	beq	40023b50 <CyU3PI2cTransmitBytes+0x1ec>
40023b3c:	e59d000c 	ldr	r0, [sp, #12]
40023b40:	e2401001 	sub	r1, r0, #1
40023b44:	e3500000 	cmp	r0, #0
40023b48:	e58d100c 	str	r1, [sp, #12]
40023b4c:	1affffaf 	bne	40023a10 <CyU3PI2cTransmitBytes+0xac>
40023b50:	e1a00000 	nop			; (mov r0, r0)
40023b54:	e357004a 	cmp	r7, #74	; 0x4a
40023b58:	1a000007 	bne	40023b7c <CyU3PI2cTransmitBytes+0x218>
40023b5c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b60:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023b64:	e31b0040 	tst	fp, #64	; 0x40
40023b68:	0a000000 	beq	40023b70 <CyU3PI2cTransmitBytes+0x20c>
40023b6c:	e3a07045 	mov	r7, #69	; 0x45
40023b70:	e31b0080 	tst	fp, #128	; 0x80
40023b74:	0a000000 	beq	40023b7c <CyU3PI2cTransmitBytes+0x218>
40023b78:	e3a07055 	mov	r7, #85	; 0x55
40023b7c:	ebfffee1 	bl	40023708 <CyU3PI2cReleaseLock>
40023b80:	e1a00007 	mov	r0, r7
40023b84:	eaffff7f 	b	40023988 <CyU3PI2cTransmitBytes+0x24>
40023b88:	40030f10 	.word	0x40030f10
40023b8c:	40030f0c 	.word	0x40030f0c
40023b90:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023b94 <CyU3PRegisterI2cCallBack>:
40023b94:	e59f1004 	ldr	r1, [pc, #4]	; 40023ba0 <CyU3PRegisterI2cCallBack+0xc>
40023b98:	e5810000 	str	r0, [r1]
40023b9c:	e12fff1e 	bx	lr
40023ba0:	40030f18 	.word	0x40030f18

Disassembly of section i.MyI2cSendCommand:

40023ba4 <MyI2cSendCommand>:
40023ba4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023ba8:	e1a04000 	mov	r4, r0
40023bac:	e1a06001 	mov	r6, r1
40023bb0:	e1a07002 	mov	r7, r2
40023bb4:	e3a00000 	mov	r0, #0
40023bb8:	e59f1108 	ldr	r1, [pc, #264]	; 40023cc8 <MyI2cSendCommand+0x124>
40023bbc:	e5810000 	str	r0, [r1]
40023bc0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bc4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023bc8:	e3100202 	tst	r0, #536870912	; 0x20000000
40023bcc:	0a000006 	beq	40023bec <MyI2cSendCommand+0x48>
40023bd0:	e3a00000 	mov	r0, #0
40023bd4:	ebfffd69 	bl	40023180 <CyU3PI2cErrorRecovery>
40023bd8:	e1a05000 	mov	r5, r0
40023bdc:	e3550000 	cmp	r5, #0
40023be0:	0a000001 	beq	40023bec <MyI2cSendCommand+0x48>
40023be4:	e1a00005 	mov	r0, r5
40023be8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023bec:	e59f80d8 	ldr	r8, [pc, #216]	; 40023ccc <MyI2cSendCommand+0x128>
40023bf0:	e1a00000 	nop			; (mov r0, r0)
40023bf4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bf8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023bfc:	e3100203 	tst	r0, #805306368	; 0x30000000
40023c00:	0a000002 	beq	40023c10 <MyI2cSendCommand+0x6c>
40023c04:	e1b00008 	movs	r0, r8
40023c08:	e2488001 	sub	r8, r8, #1
40023c0c:	1afffff8 	bne	40023bf4 <MyI2cSendCommand+0x50>
40023c10:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c14:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c18:	e3100203 	tst	r0, #805306368	; 0x30000000
40023c1c:	0a000001 	beq	40023c28 <MyI2cSendCommand+0x84>
40023c20:	e3a00045 	mov	r0, #69	; 0x45
40023c24:	eaffffef 	b	40023be8 <MyI2cSendCommand+0x44>
40023c28:	e3a00000 	mov	r0, #0
40023c2c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c30:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023c34:	e5d42008 	ldrb	r2, [r4, #8]
40023c38:	e1a01004 	mov	r1, r4
40023c3c:	e1a0000d 	mov	r0, sp
40023c40:	ebff7f23 	bl	400038d4 <CyU3PMemCopy>
40023c44:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c48:	e59d0000 	ldr	r0, [sp]
40023c4c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023c50:	e59d0004 	ldr	r0, [sp, #4]
40023c54:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023c58:	e3a00000 	mov	r0, #0
40023c5c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023c60:	e3e00000 	mvn	r0, #0
40023c64:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023c68:	e3a00d07 	mov	r0, #448	; 0x1c0
40023c6c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023c70:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c74:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023c78:	e1d400ba 	ldrh	r0, [r4, #10]
40023c7c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023c80:	e3570000 	cmp	r7, #0
40023c84:	0a000004 	beq	40023c9c <MyI2cSendCommand+0xf8>
40023c88:	e5d40008 	ldrb	r0, [r4, #8]
40023c8c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023c90:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023c94:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023c98:	ea000003 	b	40023cac <MyI2cSendCommand+0x108>
40023c9c:	e5d40008 	ldrb	r0, [r4, #8]
40023ca0:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023ca4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023ca8:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023cac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023cb0:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023cb4:	e3800010 	orr	r0, r0, #16
40023cb8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023cbc:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023cc0:	e3a00000 	mov	r0, #0
40023cc4:	eaffffc7 	b	40023be8 <MyI2cSendCommand+0x44>
40023cc8:	40030f1c 	.word	0x40030f1c
40023ccc:	00007fff 	.word	0x00007fff
