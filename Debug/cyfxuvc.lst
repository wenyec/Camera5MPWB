
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f6a0  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  400126a0  400126a0  000126a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  400127f0  400127f0  000127f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  40012888  40012888  00012888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012cf4  40012cf4  00012cf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  40012d20  40012d20  00012d20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012e18  40012e18  00012e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012e24  40012e24  00012e24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012e30  40012e30  00012e30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012e58  40012e58  00012e58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012e68  40012e68  00012e68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012e78  40012e78  00012e78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012e88  40012e88  00012e88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012e9c  40012e9c  00012e9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012eac  40012eac  00012eac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012eb8  40012eb8  00012eb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012ecc  40012ecc  00012ecc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012f08  40012f08  00012f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012f30  40012f30  00012f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012f68  40012f68  00012f68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012f9c  40012f9c  00012f9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012fb4  40012fb4  00012fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012fcc  40012fcc  00012fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012fe8  40012fe8  00012fe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  4001306c  4001306c  0001306c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40013140  40013140  00013140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40013188  40013188  00013188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40013318  40013318  00013318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40013398  40013398  00013398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  400133a8  400133a8  000133a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  400135dc  400135dc  000135dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  400136d4  400136d4  000136d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  4001396c  4001396c  0001396c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  400139a4  400139a4  000139a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  40013a00  40013a00  00013a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  40013a20  40013a20  00013a20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013a7c  40013a7c  00013a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  40013aa0  40013aa0  00013aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013ac0  40013ac0  00013ac0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013bb4  40013bb4  00013bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013c40  40013c40  00013c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013c44  40013c44  00013c44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013c68  40013c68  00013c68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013d7c  40013d7c  00013d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013e1c  40013e1c  00013e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013e74  40013e74  00013e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013ec4  40013ec4  00013ec4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013fc0  40013fc0  00013fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40014070  40014070  00014070  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40014124  40014124  00014124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  4001414c  4001414c  0001414c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  4001415c  4001415c  0001415c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  400142fc  400142fc  000142fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40014414  40014414  00014414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40014464  40014464  00014464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  400145d4  400145d4  000145d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  400146ac  400146ac  000146ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  40014730  40014730  00014730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  40014748  40014748  00014748  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  400148c8  400148c8  000148c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  40014908  40014908  00014908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  40014918  40014918  00014918  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  40014928  40014928  00014928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  40014938  40014938  00014938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  40014948  40014948  00014948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  40014a18  40014a18  00014a18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014c48  40014c48  00014c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014cd8  40014cd8  00014cd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014d4c  40014d4c  00014d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014d74  40014d74  00014d74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014db0  40014db0  00014db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014dd8  40014dd8  00014dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  40014e00  40014e00  00014e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014e28  40014e28  00014e28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014e50  40014e50  00014e50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014e78  40014e78  00014e78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014ea0  40014ea0  00014ea0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014ecc  40014ecc  00014ecc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014f34  40014f34  00014f34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014f48  40014f48  00014f48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014f9c  40014f9c  00014f9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014ffc  40014ffc  00014ffc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  4001509c  4001509c  0001509c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  4001517c  4001517c  0001517c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  4001525c  4001525c  0001525c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  400152a4  400152a4  000152a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40015350  40015350  00015350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40015394  40015394  00015394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40015408  40015408  00015408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  4001556c  4001556c  0001556c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  400155c0  400155c0  000155c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  40015614  40015614  00015614  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  40015904  40015904  00015904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  40015994  40015994  00015994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  40015c00  40015c00  00015c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015fe8  40015fe8  00015fe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40016098  40016098  00016098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  4001616c  4001616c  0001616c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40016320  40016320  00016320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  40016654  40016654  00016654  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  40016774  40016774  00016774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  400167e0  400167e0  000167e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  400168d8  400168d8  000168d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  400169b4  400169b4  000169b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016b54  40016b54  00016b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016d40  40016d40  00016d40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016f60  40016f60  00016f60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40017198  40017198  00017198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  400172c8  400172c8  000172c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  4001746c  4001746c  0001746c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  4001756c  4001756c  0001756c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  40017688  40017688  00017688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  400176dc  400176dc  000176dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  40017a9c  40017a9c  00017a9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  40017d88  40017d88  00017d88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40018080  40018080  00018080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  400187c4  400187c4  000187c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  40018918  40018918  00018918  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  40018a48  40018a48  00018a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018b78  40018b78  00018b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018cb4  40018cb4  00018cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018f24  40018f24  00018f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40019180  40019180  00019180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40019300  40019300  00019300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  40019488  40019488  00019488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  4001953c  4001953c  0001953c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  400195f4  400195f4  000195f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  40019690  40019690  00019690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  40019730  40019730  00019730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  40019a9c  40019a9c  00019a9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  4001a02c  4001a02c  0001a02c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a60c  4001a60c  0001a60c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001ac94  4001ac94  0001ac94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001acf8  4001acf8  0001acf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001ad48  4001ad48  0001ad48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001ae40  4001ae40  0001ae40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001af58  4001af58  0001af58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001afd4  4001afd4  0001afd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001b108  4001b108  0001b108  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001b26c  4001b26c  0001b26c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001b2bc  4001b2bc  0001b2bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b56c  4001b56c  0001b56c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b6f0  4001b6f0  0001b6f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b730  4001b730  0001b730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b7e8  4001b7e8  0001b7e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b878  4001b878  0001b878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001bb00  4001bb00  0001bb00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001bb10  4001bb10  0001bb10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001bc64  4001bc64  0001bc64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001bde4  4001bde4  0001bde4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001c048  4001c048  0001c048  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001c058  4001c058  0001c058  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001c124  4001c124  0001c124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001c1e4  4001c1e4  0001c1e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001c1f4  4001c1f4  0001c1f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c7ec  4001c7ec  0001c7ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c870  4001c870  0001c870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001ca38  4001ca38  0001ca38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001cb5c  4001cb5c  0001cb5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001cca4  4001cca4  0001cca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001ce18  4001ce18  0001ce18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001cee4  4001cee4  0001cee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001d0ac  4001d0ac  0001d0ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001d0bc  4001d0bc  0001d0bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001d0cc  4001d0cc  0001d0cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001d118  4001d118  0001d118  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001d184  4001d184  0001d184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001d200  4001d200  0001d200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001d2b4  4001d2b4  0001d2b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d48c  4001d48c  0001d48c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d7ac  4001d7ac  0001d7ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d7b8  4001d7b8  0001d7b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d89c  4001d89c  0001d89c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001da74  4001da74  0001da74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001db68  4001db68  0001db68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001dc58  4001dc58  0001dc58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001de30  4001de30  0001de30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001dff4  4001dff4  0001dff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001e148  4001e148  0001e148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e4d8  4001e4d8  0001e4d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e850  4001e850  0001e850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e8c8  4001e8c8  0001e8c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e940  4001e940  0001e940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001eadc  4001eadc  0001eadc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001ecc0  4001ecc0  0001ecc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ef30  4001ef30  0001ef30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001efe8  4001efe8  0001efe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001f018  4001f018  0001f018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001f0b8  4001f0b8  0001f0b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f498  4001f498  0001f498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f584  4001f584  0001f584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001fba0  4001fba0  0001fba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001fc3c  4001fc3c  0001fc3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001fcac  4001fcac  0001fcac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001fd28  4001fd28  0001fd28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001fe9c  4001fe9c  0001fe9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001ff08  4001ff08  0001ff08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4002013c  4002013c  0002013c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  40020158  40020158  00020158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  40020350  40020350  00020350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  400205c4  400205c4  000205c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  4002067c  4002067c  0002067c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  40020794  40020794  00020794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020b90  40020b90  00020b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  40020c88  40020c88  00020c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020d94  40020d94  00020d94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020f60  40020f60  00020f60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020fb4  40020fb4  00020fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40021014  40021014  00021014  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40021158  40021158  00021158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  400211a8  400211a8  000211a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  4002139c  4002139c  0002139c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  4002152c  4002152c  0002152c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  400216c4  400216c4  000216c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  400218d4  400218d4  000218d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  400220e0  400220e0  000220e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40022130  40022130  00022130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40022234  40022234  00022234  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40022348  40022348  00022348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40022354  40022354  00022354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40022364  40022364  00022364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40022378  40022378  00022378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  4002238c  4002238c  0002238c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40022398  40022398  00022398  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  400223d8  400223d8  000223d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  400223f0  400223f0  000223f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40022408  40022408  00022408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  40022444  40022444  00022444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  40022474  40022474  00022474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  400224a0  400224a0  000224a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40022520  40022520  00022520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  400225b4  400225b4  000225b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  40022704  40022704  00022704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  40022790  40022790  00022790  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022870  40022870  00022870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022880  40022880  00022880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  400228d4  400228d4  000228d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022970  40022970  00022970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  400229dc  400229dc  000229dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022a48  40022a48  00022a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022bc0  40022bc0  00022bc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022cdc  40022cdc  00022cdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022ea0  40022ea0  00022ea0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022f90  40022f90  00022f90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40023068  40023068  00023068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  400230ec  400230ec  000230ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  400230fc  400230fc  000230fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  4002310c  4002310c  0002310c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40023168  40023168  00023168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40023250  40023250  00023250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40023308  40023308  00023308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  4002334c  4002334c  0002334c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023568  40023568  00023568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  400235b8  400235b8  000235b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  40023744  40023744  00023744  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  400237a0  400237a0  000237a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  40023894  40023894  00023894  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  40023984  40023984  00023984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023b40  40023b40  00023b40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  40023b84  40023b84  00023b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023d9c  40023d9c  00023d9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023fcc  40023fcc  00023fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023fdc  40023fdc  00023fdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f24  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          0000235c  40030f40  40030f40  00028f24  2**5
                  ALLOC
266 .debug_abbrev 000011a4  00000000  00000000  00028f24  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d493  00000000  00000000  0002a0c8  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023100  00000000  00000000  000a755b  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca65b  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d6500  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d6534  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d66e4  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    00004312  00000000  00000000  000d72ed  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000ea3f  00000000  00000000  000db5ff  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 00007689  00000000  00000000  000ea03e  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f16c8  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a760  00000000  00000000  000f1768  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 000004f0  00000000  00000000  000fbec8  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fc3b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031624 	.word	0x40031624

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x1>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x5>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x5>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0xd>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp_.debug_frame$13>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp_.debug_frame$13>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$38+0x21>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp_.debug_frame$13>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp_.debug_frame$13>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$20+0x2c>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp_.debug_frame$13+0x4>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <CyU3PGpifIntHandler+0x88>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp_.debug_frame$13>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp_.debug_frame$13+0x4>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp_.debug_frame$13>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp_.debug_frame$13>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0xc>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp_.debug_frame$13>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$27+0x38>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp_.debug_frame$13>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x14>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp_.debug_frame$13>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_frame$34+0x40>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp_.debug_frame$13>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$41+0x14>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp_.debug_frame$13>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$41+0x40>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp_.debug_frame$13>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$48+0x28>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp_.debug_frame$13>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_frame$55+0x8>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp_.debug_frame$13>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$24+0x23>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp_.debug_frame$13>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_pubnames$31+0x7>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp_.debug_frame$13>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$38+0xd>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp_.debug_frame$13>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp_.debug_frame$13>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp_.debug_frame$13>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$59+0x5>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp_.debug_frame$13+0xc>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_frame$76>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp_.debug_frame$13+0xc>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$66+0x12>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp_.debug_frame$13+0xc>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$66+0x6>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp_.debug_frame$13+0xc>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$66+0x1e>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$73+0xa>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp_.debug_pubnames$73+0x2e>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x23>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x22>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x30>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x9>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp_.debug_frame$13+0x8>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d58 	.word	0x40030d58
     af8:	40030d40 	.word	0x40030d40
     afc:	40031a60 	.word	0x40031a60
     b00:	40031990 	.word	0x40031990
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d54 	.word	0x40030d54
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d5c 	.word	0x40030d5c

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_pubnames$59+0xd>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp..debug_macinfo$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$24+0x13>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp_.debug_frame$34+0x4>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp_.debug_frame$27+0x34>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$13+0x14>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$48+0x10>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$13+0x14>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$48+0x10>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$13+0x18>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$115+0x6>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_pubnames$108+0x1d>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$80+0xd>
     ca0:	ea00003a 	b	d90 <__ARM_grp_.debug_pubnames$38+0x4>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_pubnames$24+0xf>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_frame$118+0x8>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$115+0x1a>
     cbc:	ea000000 	b	cc4 <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0xa>
     cc0:	ea000001 	b	ccc <__ARM_grp..debug_pubnames$cyu3device.c$.2_P6k000_tW3Sle9SEL1_F80000+0x12>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$13+0x20>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$17+0x3>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$13+0x20>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_frame$13+0x24>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_frame$13+0x28>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_pubnames$24+0xb>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_frame$13+0x2c>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_pubnames$24+0xb>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_frame$13+0x2c>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp_.debug_pubnames$38>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$13+0x20>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp_.debug_pubnames$38>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$13+0x20>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_frame$13+0x24>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$17+0x1>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$45+0x29>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$45+0x29>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_frame$13+0x28>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$73+0x13>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$17+0x5>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$59+0x22>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$17+0x5>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$59+0x22>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x9>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$73+0x13>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$73+0x13>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_frame$97+0x28>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$73+0x13>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x9>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$80+0x9>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_pubnames$17+0xd>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$94+0x11>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_frame$13+0x28>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_frame$118+0x4>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$13+0x20>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_frame$13+0x24>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_pubnames$17+0xd>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_pubnames$17+0x11>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$10+0x20>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_frame$13>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$10+0x1c>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$13+0x18>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$17+0x7>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$24+0x7>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_frame$20>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x13>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$24+0x13>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$24+0x13>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$13+0x18>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_pubnames$38+0xf>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_pubnames$52+0xc>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_pubnames$59+0xd>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x4>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x5>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x19>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x5>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_frame$20+0x4>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x21>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_frame$20+0x4>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$20+0x20>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$62+0x10>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_frame$20+0x14>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$17+0x1>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_frame$20+0x14>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$20+0x8>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_frame$20+0x14>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_frame$34>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x9>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$73+0x3>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_frame$20+0x8>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_pubnames$17+0x9>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$17+0x1>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$59+0xd>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$59+0xd>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$59+0xd>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_frame$13+0x28>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$59+0xd>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_frame$48>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_frame$48+0xc>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$87+0xe>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x4>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$13+0xc>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x4>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_frame$13+0x2c>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$101+0x4>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_frame$13+0x2c>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$24+0x23>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_frame$69+0x8>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_pubnames$129+0x8>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_frame$20+0x10>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_frame$20+0x14>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$83+0x38>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$31+0x1>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp_.debug_frame$83+0x1c>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$83+0x30>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3descriptor.h$.2_Os2000_h7PQidXgB29_l00000+0x12>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x8>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x24>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$10+0xc>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0xb>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_frame$20+0xc>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_frame$13+0x2c>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0xb>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$24+0xb>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_frame$13+0x2c>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$24+0x23>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_frame$104+0x1c>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$38+0x21>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_frame$111+0x14>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$52+0x24>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$66+0x5>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$73+0xb>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_pubnames$80+0x12>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x8>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$132+0x34>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$13+0x8>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$31+0x5>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$31+0x5>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$13+0x4>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$31+0x5>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$13+0x1c>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$13+0x18>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$13+0x10>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d60 	.word	0x40031d60
    17cc:	40030da4 	.word	0x40030da4
    17d0:	40030d84 	.word	0x40030d84
    17d4:	40031ed8 	.word	0x40031ed8
    17d8:	40030d90 	.word	0x40030d90
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d8c 	.word	0x40030d8c
    17e4:	40030dbc 	.word	0x40030dbc
    17e8:	40030d60 	.word	0x40030d60
    17ec:	40030dc4 	.word	0x40030dc4
    17f0:	40030dd4 	.word	0x40030dd4
    17f4:	40030d94 	.word	0x40030d94
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d88 	.word	0x40030d88
    1800:	80008000 	.word	0x80008000
    1804:	40030dd0 	.word	0x40030dd0
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a9c 	.word	0x40031a9c
    1810:	40031b3c 	.word	0x40031b3c
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$52+0x2>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_pubnames$52+0x6>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$52+0xa>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$52+0xe>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$52+0x12>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$52+0x16>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$52+0x1a>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$52+0x1e>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$52+0x22>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$52+0x26>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_pubnames$52+0x2a>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_pubnames$59+0x3>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_frame$41>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_frame$41+0x4>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_frame$41+0x8>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_frame$41+0xc>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$41+0x10>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$41+0x14>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_frame$41+0x18>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	40012654 	.word	0x40012654
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_pubnames$73+0x14>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_pubnames$73+0x18>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_frame$83+0x10>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_frame$83+0x10>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_frame$83+0x14>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030ddc 	.word	0x40030ddc

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_frame$90+0xc>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_frame$90+0xc>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315d4 	.word	0x400315d4

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp_.debug_pubnames$129+0x27>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_line$71+0xc>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_line$71+0x4>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <CyU3PLppDmaIntHandler+0x14>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$143+0x3>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_frame$20+0xc>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_frame$20+0x4>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x8>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_pubnames$80+0x1b>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_frame$27>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_pubnames$94+0x24>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$94+0x1c>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$94+0x4>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$143+0x7>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$108+0x13>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$108+0xb>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_pubnames$143+0xb>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$122+0xa>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$122+0x2>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$115+0x23>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$115+0xb>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_pubnames$143+0xf>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp_.debug_pubnames$129+0x23>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_pubnames$129+0x1b>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_pubnames$129+0x13>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_frame$41+0x10>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000b0e8 	.word	0x4000b0e8

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__ARM_grp_.debug_pubnames$150>
    1fb4:	4001396c 	.word	0x4001396c

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	400223f0 	.word	0x400223f0

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a87c 	.word	0x4000a87c

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40022364 	.word	0x40022364

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000b1d8 	.word	0x4000b1d8

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40022520 	.word	0x40022520

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	40014730 	.word	0x40014730

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000>
    1fec:	4000b2f0 	.word	0x4000b2f0

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000b314 	.word	0x4000b314

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40022348 	.word	0x40022348

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001fe9c 	.word	0x4001fe9c

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <__ARM_grp_.debug_pubnames$164+0x1>
    200c:	4000b094 	.word	0x4000b094

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a73c 	.word	0x4000a73c

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	4000a1b0 	.word	0x4000a1b0

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40014124 	.word	0x40014124

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001ca38 	.word	0x4001ca38

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b6f0 	.word	0x4001b6f0

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__ARM_grp_.debug_frame$34>
    203c:	40022a48 	.word	0x40022a48

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	4002139c 	.word	0x4002139c

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	40016654 	.word	0x40016654

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260,
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea0040e5 	b	400133a8 <CyU3PDebugPrint>
40003010:	40010f6c 	.word	0x40010f6c

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb0040dc 	bl	400133a8 <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb0040cf 	bl	400133a8 <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb0040c1 	bl	400133a8 <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb0040b4 	bl	400133a8 <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb0040a7 	bl	400133a8 <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb00409a 	bl	400133a8 <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb00408c 	bl	400133a8 <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb00407f 	bl	400133a8 <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb004072 	bl	400133a8 <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb004065 	bl	400133a8 <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb004058 	bl	400133a8 <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb00404b 	bl	400133a8 <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb00403e 	bl	400133a8 <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb004031 	bl	400133a8 <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb004024 	bl	400133a8 <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb004017 	bl	400133a8 <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb00400a 	bl	400133a8 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003ffe 	bl	400133a8 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010f84 	.word	0x40010f84
400033b8:	40010fa0 	.word	0x40010fa0
400033bc:	40011000 	.word	0x40011000

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001b8a 	bl	4000a218 <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40011058 	.word	0x40011058

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb00164e 	bl	40008dd0 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb00164a 	bl	40008dd0 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003f9b 	bl	400133a8 <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010eec 	.word	0x40010eec
40003548:	4001106c 	.word	0x4001106c

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea0068c2 	b	4001d89c <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f40 	.word	0x40030f40

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea00152a 	b	40008ab8 <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f40 	.word	0x40030f40
40003614:	4003329c 	.word	0x4003329c

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea004125 	b	40013ac0 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb00198c 	bl	40009c94 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f60 	.word	0x40030f60
4000366c:	40032eac 	.word	0x40032eac
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb00154d 	bl	40008bbc <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb001939 	bl	40009b84 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032eac 	.word	0x40032eac

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0019fa 	b	40009ea4 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb001988 	bl	4000a218 <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb0013ec 	bl	40008bbc <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb0017d8 	bl	40009b84 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb0019a5 	bl	4000a390 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f60 	.word	0x40030f60
40003d00:	40030f64 	.word	0x40030f64
40003d04:	40032eac 	.word	0x40032eac
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb0013a9 	bl	40008bbc <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb0019ba 	bl	4000a410 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001859 	bl	40009ea4 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb0019e3 	bl	4000a4e4 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea00198b 	b	4000a390 <_txe_mutex_delete>
40003d60:	40030f64 	.word	0x40030f64
40003d64:	40030f60 	.word	0x40030f60

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb001391 	bl	40008bbc <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb0019a2 	bl	4000a410 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb0019a4 	bl	4000a4e4 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb00197f 	bl	4000a4e4 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f64 	.word	0x40030f64
40003ef0:	40030f60 	.word	0x40030f60

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb00132e 	bl	40008bbc <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb00193f 	bl	4000a410 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb00196a 	bl	4000a4e4 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f64 	.word	0x40030f64
40004024:	40030f60 	.word	0x40030f60

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0012e2 	bl	40008bbc <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0018f3 	bl	4000a410 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb001791 	bl	40009ea4 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb00191b 	bl	4000a4e4 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb0018c4 	bl	4000a390 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001767 	bl	40009e24 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f64 	.word	0x40030f64
40004094:	40030f60 	.word	0x40030f60
40004098:	40032eac 	.word	0x40032eac

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007f2e 	bl	40023d9c <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001d 	bne	40004160 <SensorRead2B.clone.1+0xc4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003e1e 	bl	4001396c <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007e19 	bl	40023984 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003e0f 	bl	4001396c <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f103c 	ldr	r1, [pc, #60]	; 40004184 <SensorRead2B.clone.1+0xe8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003c94 	bl	400133a8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004154:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004158:	eb003e03 	bl	4001396c <CyU3PBusyWait>
4000415c:	eafffff2 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004160:	e5d4c001 	ldrb	ip, [r4, #1]
40004164:	e5d43000 	ldrb	r3, [r4]
40004168:	e59f1018 	ldr	r1, [pc, #24]	; 40004188 <SensorRead2B.clone.1+0xec>
4000416c:	e3a00004 	mov	r0, #4
40004170:	e58dc000 	str	ip, [sp]
40004174:	eb003c8b 	bl	400133a8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004178:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000417c:	eb003dfa 	bl	4001396c <CyU3PBusyWait>
40004180:	eaffffda 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004184:	400113a8 	.word	0x400113a8
40004188:	4001138c 	.word	0x4001138c

4000418c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000418c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	e35000a0 	cmp	r0, #160	; 0xa0
40004194:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e24dd014 	sub	sp, sp, #20
4000419c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a0:	03a0e000 	moveq	lr, #0
400041a4:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
400041a8:	e1a07001 	mov	r7, r1
400041ac:	e1a06002 	mov	r6, r2
400041b0:	e1a05003 	mov	r5, r3
400041b4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041b8:	1a000020 	bne	40004240 <SensorWrite2B+0xb4>
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041bc:	e1a0300e 	mov	r3, lr
400041c0:	e28d100c 	add	r1, sp, #12
400041c4:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041c8:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041cc:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400041d4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d8:	e5cdc008 	strb	ip, [sp, #8]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041dc:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041e0:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
400041e4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041e8:	eb007eeb 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041ec:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400041f0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400041f4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400041f8:	eb003ddb 	bl	4001396c <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004204:	e1a0000d 	mov	r0, sp
40004208:	e28d100c 	add	r1, sp, #12
4000420c:	e1a0200c 	mov	r2, ip
40004210:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004214:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004218:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
4000421c:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004220:	eb007edd 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004224:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004228:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000422c:	13a00ffa 	movne	r0, #1000	; 0x3e8
40004230:	eb003dcd 	bl	4001396c <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004234:	e1a00004 	mov	r0, r4
40004238:	e28dd014 	add	sp, sp, #20
4000423c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004240:	e3a00004 	mov	r0, #4
40004244:	e59f1008 	ldr	r1, [pc, #8]	; 40004254 <SensorWrite2B+0xc8>
40004248:	eb003c56 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
4000424c:	e3a04001 	mov	r4, #1
40004250:	eafffff7 	b	40004234 <SensorWrite2B+0xa8>
40004254:	400113c4 	.word	0x400113c4

40004258 <SensorWrite2B2>:
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004258:	e92d4070 	push	{r4, r5, r6, lr}
4000425c:	e24dd018 	sub	sp, sp, #24
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
40004260:	e3a0c002 	mov	ip, #2
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
40004264:	e1a06002 	mov	r6, r2
	/* Validate the I2C slave address. */
	//if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
	//	CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004268:	e5cd0008 	strb	r0, [sp, #8]
	preamble.buffer[1] = highAddr;
4000426c:	e5cd1009 	strb	r1, [sp, #9]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;
40004270:	e5cd3014 	strb	r3, [sp, #20]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004274:	e28d1014 	add	r1, sp, #20
40004278:	e3a02001 	mov	r2, #1
4000427c:	e3a03000 	mov	r3, #0
40004280:	e28d0008 	add	r0, sp, #8
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004284:	e3a04000 	mov	r4, #0
	preamble.length = 2; /*  Three byte preamble. */
40004288:	e5cdc010 	strb	ip, [sp, #16]
CyU3PReturnStatus_t SensorWrite2B2(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr,
	uint8_t highData,
	uint8_t lowData) {
4000428c:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
	//	return 1;
	//}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004290:	e1cd41b2 	strh	r4, [sp, #18]
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004294:	eb007ec0 	bl	40023d9c <CyU3PI2cTransmitBytes>
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
40004298:	e5dd3014 	ldrb	r3, [sp, #20]
4000429c:	e59f102c 	ldr	r1, [pc, #44]	; 400042d0 <SensorWrite2B2+0x78>
400042a0:	e1a02006 	mov	r2, r6
400042a4:	e58d5000 	str	r5, [sp]
	//preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 2; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400042a8:	e1a04000 	mov	r4, r0
//#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
400042ac:	e3a00004 	mov	r0, #4
400042b0:	eb003c3c 	bl	400133a8 <CyU3PDebugPrint>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042b4:	e3540000 	cmp	r4, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400042b8:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400042bc:	13a00ffa 	movne	r0, #1000	; 0x3e8
400042c0:	eb003da9 	bl	4001396c <CyU3PBusyWait>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
400042c4:	e1a00004 	mov	r0, r4
400042c8:	e28dd018 	add	sp, sp, #24
400042cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400042d0:	400113e8 	.word	0x400113e8

400042d4 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042d4:	e35000a0 	cmp	r0, #160	; 0xa0
400042d8:	13500070 	cmpne	r0, #112	; 0x70
	//SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
400042dc:	e92d4010 	push	{r4, lr}
400042e0:	e1a0c000 	mov	ip, r0
400042e4:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400042e8:	03a0e000 	moveq	lr, #0
400042ec:	13a0e001 	movne	lr, #1
400042f0:	1a00001a 	bne	40004360 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
400042f4:	e3530040 	cmp	r3, #64	; 0x40
400042f8:	8a000013 	bhi	4000434c <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
400042fc:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004300:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004304:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004308:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
4000430c:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004310:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004314:	e28d0004 	add	r0, sp, #4
40004318:	e59d1018 	ldr	r1, [sp, #24]
4000431c:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004320:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
40004324:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004328:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000432c:	eb007e9a 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004330:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004334:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004338:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000433c:	eb003d8a 	bl	4001396c <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
40004340:	e1a00004 	mov	r0, r4
40004344:	e28dd010 	add	sp, sp, #16
40004348:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
4000434c:	e3a00004 	mov	r0, #4
40004350:	e59f101c 	ldr	r1, [pc, #28]	; 40004374 <SensorWrite+0xa0>
40004354:	eb003c13 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
40004358:	e3a04001 	mov	r4, #1
4000435c:	eafffff7 	b	40004340 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004360:	e3a00004 	mov	r0, #4
40004364:	e59f100c 	ldr	r1, [pc, #12]	; 40004378 <SensorWrite+0xa4>
40004368:	eb003c0e 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
4000436c:	e3a04001 	mov	r4, #1
40004370:	eafffff2 	b	40004340 <SensorWrite+0x6c>
40004374:	40011408 	.word	0x40011408
40004378:	400113c4 	.word	0x400113c4

4000437c <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000437c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004380:	e35000a1 	cmp	r0, #161	; 0xa1
40004384:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004388:	e24dd01c 	sub	sp, sp, #28
4000438c:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004390:	03a0c000 	moveq	ip, #0
40004394:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004398:	e1a06001 	mov	r6, r1
4000439c:	e1a0e002 	mov	lr, r2
400043a0:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400043a4:	1a000021 	bne	40004430 <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400043a8:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043ac:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b0:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400043b4:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043b8:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043bc:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043c0:	e1a01005 	mov	r1, r5
400043c4:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400043c8:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
400043cc:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400043d0:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400043d4:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400043d8:	eb007e6f 	bl	40023d9c <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400043dc:	e2502000 	subs	r2, r0, #0
400043e0:	1a000017 	bne	40004444 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
400043e4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400043e8:	eb003d5f 	bl	4001396c <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400043ec:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400043f0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043f4:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400043f8:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400043fc:	e1a01005 	mov	r1, r5
40004400:	e1a0200e 	mov	r2, lr
40004404:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004408:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
4000440c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004410:	eb007d5b 	bl	40023984 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004414:	e2504000 	subs	r4, r0, #0
40004418:	1a000012 	bne	40004468 <SensorRead2B+0xec>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
4000441c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004420:	eb003d51 	bl	4001396c <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004424:	e1a00004 	mov	r0, r4
40004428:	e28dd01c 	add	sp, sp, #28
4000442c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004430:	e3a00004 	mov	r0, #4
40004434:	e59f1054 	ldr	r1, [pc, #84]	; 40004490 <SensorRead2B+0x114>
40004438:	eb003bda 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
4000443c:	e3a04001 	mov	r4, #1
40004440:	eafffff7 	b	40004424 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004444:	e5d5c001 	ldrb	ip, [r5, #1]
40004448:	e5d53000 	ldrb	r3, [r5]
4000444c:	e59f1040 	ldr	r1, [pc, #64]	; 40004494 <SensorRead2B+0x118>
40004450:	e3a00004 	mov	r0, #4
40004454:	e58dc000 	str	ip, [sp]
40004458:	eb003bd2 	bl	400133a8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
4000445c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004460:	eb003d41 	bl	4001396c <CyU3PBusyWait>
40004464:	eaffffe0 	b	400043ec <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004468:	e5d5c001 	ldrb	ip, [r5, #1]
4000446c:	e5d53000 	ldrb	r3, [r5]
40004470:	e59f1020 	ldr	r1, [pc, #32]	; 40004498 <SensorRead2B+0x11c>
40004474:	e1a02004 	mov	r2, r4
40004478:	e3a00004 	mov	r0, #4
4000447c:	e58dc000 	str	ip, [sp]
40004480:	eb003bc8 	bl	400133a8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004484:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004488:	eb003d37 	bl	4001396c <CyU3PBusyWait>
4000448c:	eaffffe4 	b	40004424 <SensorRead2B+0xa8>
40004490:	400113c4 	.word	0x400113c4
40004494:	4001138c 	.word	0x4001138c
40004498:	400113a8 	.word	0x400113a8

4000449c <SensorRead2B2>:
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
4000449c:	e92d4070 	push	{r4, r5, r6, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044a0:	e35000a1 	cmp	r0, #161	; 0xa1
400044a4:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044a8:	e24dd018 	sub	sp, sp, #24
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044ac:	03a0c000 	moveq	ip, #0
400044b0:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B2(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400044b4:	e1a05001 	mov	r5, r1
400044b8:	e1a0e002 	mov	lr, r2
400044bc:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400044c0:	1a000013 	bne	40004514 <SensorRead2B2+0x78>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400044c4:	e5c43000 	strb	r3, [r4]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044c8:	e3c06001 	bic	r6, r0, #1
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
400044cc:	e5cde00e 	strb	lr, [sp, #14]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d0:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044d4:	e3a0e003 	mov	lr, #3
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044d8:	e1a01004 	mov	r1, r4
400044dc:	e3a02001 	mov	r2, #1
400044e0:	e1a0300c 	mov	r3, ip
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400044e4:	e5cd500d 	strb	r5, [sp, #13]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400044e8:	e5cd600c 	strb	r6, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400044ec:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400044f0:	e1cdc1b6 	strh	ip, [sp, #22]
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400044f4:	eb007d22 	bl	40023984 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400044f8:	e2505000 	subs	r5, r0, #0
400044fc:	1a000009 	bne	40004528 <SensorRead2B2+0x8c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 100us.
40004500:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004504:	eb003d18 	bl	4001396c <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
40004508:	e1a00005 	mov	r0, r5
4000450c:	e28dd018 	add	sp, sp, #24
40004510:	e8bd8070 	pop	{r4, r5, r6, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004514:	e3a00004 	mov	r0, #4
40004518:	e59f1030 	ldr	r1, [pc, #48]	; 40004550 <SensorRead2B2+0xb4>
4000451c:	eb003ba1 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
40004520:	e3a05001 	mov	r5, #1
40004524:	eafffff7 	b	40004508 <SensorRead2B2+0x6c>
	preamble.ctrlMask = 0x0000;
#endif
	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004528:	e5d4c001 	ldrb	ip, [r4, #1]
4000452c:	e5d43000 	ldrb	r3, [r4]
40004530:	e59f101c 	ldr	r1, [pc, #28]	; 40004554 <SensorRead2B2+0xb8>
40004534:	e1a02005 	mov	r2, r5
40004538:	e3a00004 	mov	r0, #4
4000453c:	e58dc000 	str	ip, [sp]
40004540:	eb003b98 	bl	400133a8 <CyU3PDebugPrint>
		CyU3PBusyWait(2000); //change into 100us.
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004544:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40004548:	eb003d07 	bl	4001396c <CyU3PBusyWait>
4000454c:	eaffffed 	b	40004508 <SensorRead2B2+0x6c>
40004550:	400113c4 	.word	0x400113c4
40004554:	400113a8 	.word	0x400113a8

40004558 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004558:	e35000a1 	cmp	r0, #161	; 0xa1
4000455c:	13500071 	cmpne	r0, #113	; 0x71
	return apiRetStatus;
}


CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004560:	e92d4030 	push	{r4, r5, lr}
40004564:	e1a0c000 	mov	ip, r0
40004568:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000456c:	03a0e000 	moveq	lr, #0
40004570:	13a0e001 	movne	lr, #1
40004574:	1a00001c 	bne	400045ec <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004578:	e3530040 	cmp	r3, #64	; 0x40
4000457c:	8a000015 	bhi	400045d8 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004580:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004584:	e1a02003 	mov	r2, r3
40004588:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000458c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004590:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004594:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004598:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000459c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045a0:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
400045a4:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
400045a8:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400045ac:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
400045b0:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
400045b4:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
400045b8:	eb007cf1 	bl	40023984 <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400045bc:	e2504000 	subs	r4, r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400045c0:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400045c4:	13a00ffa 	movne	r0, #1000	; 0x3e8
400045c8:	eb003ce7 	bl	4001396c <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400045cc:	e1a00004 	mov	r0, r4
400045d0:	e28dd014 	add	sp, sp, #20
400045d4:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400045d8:	e3a00004 	mov	r0, #4
400045dc:	e59f101c 	ldr	r1, [pc, #28]	; 40004600 <SensorRead+0xa8>
400045e0:	eb003b70 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
400045e4:	e3a04001 	mov	r4, #1
400045e8:	eafffff7 	b	400045cc <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400045ec:	e3a00004 	mov	r0, #4
400045f0:	e59f100c 	ldr	r1, [pc, #12]	; 40004604 <SensorRead+0xac>
400045f4:	eb003b6b 	bl	400133a8 <CyU3PDebugPrint>
		return 1;
400045f8:	e3a04001 	mov	r4, #1
400045fc:	eafffff2 	b	400045cc <SensorRead+0x74>
40004600:	40011408 	.word	0x40011408
40004604:	400113c4 	.word	0x400113c4

40004608 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
40004608:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
4000460c:	e3a00016 	mov	r0, #22
40004610:	e3a01000 	mov	r1, #0
40004614:	eb007a5d 	bl	40022f90 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004618:	e2502000 	subs	r2, r0, #0
4000461c:	1a000022 	bne	400046ac <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
40004620:	e59f1094 	ldr	r1, [pc, #148]	; 400046bc <SensorReset+0xb4>
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003b5e 	bl	400133a8 <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000462c:	eb0013d9 	bl	40009598 <_tx_time_get>
40004630:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004634:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004638:	eb0011e4 	bl	40008dd0 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000463c:	eb0013d5 	bl	40009598 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004640:	e1a04804 	lsl	r4, r4, #16
40004644:	e1a02824 	lsr	r2, r4, #16
40004648:	e59f1070 	ldr	r1, [pc, #112]	; 400046c0 <SensorReset+0xb8>
4000464c:	e1a00800 	lsl	r0, r0, #16
40004650:	e1a03820 	lsr	r3, r0, #16
40004654:	e3a00004 	mov	r0, #4
40004658:	eb003b52 	bl	400133a8 <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000465c:	eb0013cd 	bl	40009598 <_tx_time_get>
40004660:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004664:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004668:	eb0011d8 	bl	40008dd0 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000466c:	eb0013c9 	bl	40009598 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004670:	e1a02804 	lsl	r2, r4, #16
40004674:	e1a02822 	lsr	r2, r2, #16
40004678:	e59f1040 	ldr	r1, [pc, #64]	; 400046c0 <SensorReset+0xb8>
4000467c:	e1a03800 	lsl	r3, r0, #16
40004680:	e1a03823 	lsr	r3, r3, #16
40004684:	e3a00004 	mov	r0, #4
40004688:	eb003b46 	bl	400133a8 <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000468c:	e3a00016 	mov	r0, #22
40004690:	e3a01001 	mov	r1, #1
40004694:	eb007a3d 	bl	40022f90 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004698:	e2502000 	subs	r2, r0, #0
4000469c:	1a000002 	bne	400046ac <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a0:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046a4:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
400046a8:	ea0011c8 	b	40008dd0 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046ac:	e59f1010 	ldr	r1, [pc, #16]	; 400046c4 <SensorReset+0xbc>
400046b0:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
400046b4:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
400046b8:	ea003b3a 	b	400133a8 <CyU3PDebugPrint>
400046bc:	40011450 	.word	0x40011450
400046c0:	40011464 	.word	0x40011464
400046c4:	40011428 	.word	0x40011428

400046c8 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
400046c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400046cc:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400046d0:	e3a00052 	mov	r0, #82	; 0x52
400046d4:	e3a01030 	mov	r1, #48	; 0x30
400046d8:	e3a020f2 	mov	r2, #242	; 0xf2
400046dc:	e28d3004 	add	r3, sp, #4
400046e0:	ebfffe6d 	bl	4000409c <SensorRead2B.clone.1>
400046e4:	e3500000 	cmp	r0, #0
400046e8:	1a000002 	bne	400046f8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
400046ec:	e5dd3004 	ldrb	r3, [sp, #4]
400046f0:	e3530056 	cmp	r3, #86	; 0x56
400046f4:	0a000002 	beq	40004704 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400046f8:	e3a00004 	mov	r0, #4
400046fc:	e59f1008 	ldr	r1, [pc, #8]	; 4000470c <SensorInit+0x44>
40004700:	eb003b28 	bl	400133a8 <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
40004704:	e28dd00c 	add	sp, sp, #12
40004708:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4000470c:	40011478 	.word	0x40011478

40004710 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004710:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004714:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004718:	e3a00052 	mov	r0, #82	; 0x52
4000471c:	e3a01030 	mov	r1, #48	; 0x30
40004720:	e3a020f2 	mov	r2, #242	; 0xf2
40004724:	e28d3004 	add	r3, sp, #4
40004728:	ebfffe5b 	bl	4000409c <SensorRead2B.clone.1>
4000472c:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
40004730:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004734:	1a000002 	bne	40004744 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
40004738:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
4000473c:	e2500056 	subs	r0, r0, #86	; 0x56
40004740:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
40004744:	e28dd00c 	add	sp, sp, #12
40004748:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000474c <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
4000474c:	e92d4010 	push	{r4, lr}
40004750:	e24dd008 	sub	sp, sp, #8
40004754:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004758:	e1a02000 	mov	r2, r0
4000475c:	e28d3004 	add	r3, sp, #4
40004760:	e3a00053 	mov	r0, #83	; 0x53
40004764:	ebfffe4c 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004768:	e59f1018 	ldr	r1, [pc, #24]	; 40004788 <SensorGetControl+0x3c>
4000476c:	e1a02004 	mov	r2, r4
40004770:	e5dd3004 	ldrb	r3, [sp, #4]
40004774:	e3a00004 	mov	r0, #4
40004778:	eb003b0a 	bl	400133a8 <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000477c:	e5dd0004 	ldrb	r0, [sp, #4]
40004780:	e28dd008 	add	sp, sp, #8
40004784:	e8bd8010 	pop	{r4, pc}
40004788:	4001149c 	.word	0x4001149c

4000478c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000478c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004790:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004794:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004798:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000479c:	e1a04000 	mov	r4, r0
400047a0:	e1a05002 	mov	r5, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
400047a4:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047a8:	e3a02001 	mov	r2, #1
400047ac:	e28d100c 	add	r1, sp, #12
400047b0:	e3a03000 	mov	r3, #0
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400047b4:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
400047b8:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047bc:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
400047c0:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047c4:	e1a0000d 	mov	r0, sp
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400047c8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400047cc:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400047d0:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047d4:	eb007d70 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400047d8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400047dc:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400047e0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400047e4:	eb003c60 	bl	4001396c <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400047e8:	e3a0c001 	mov	ip, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047ec:	e1a0200c 	mov	r2, ip
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400047f0:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400047f4:	e28d100c 	add	r1, sp, #12
400047f8:	e3a03000 	mov	r3, #0
400047fc:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004800:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004804:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004808:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000480c:	eb007d62 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004810:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
40004814:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
40004818:	13a00ffa 	movne	r0, #1000	; 0x3e8
4000481c:	eb003c52 	bl	4001396c <CyU3PBusyWait>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
40004820:	e59f1018 	ldr	r1, [pc, #24]	; 40004840 <SensorSetControl+0xb4>
40004824:	e1a02004 	mov	r2, r4
40004828:	e1a03005 	mov	r3, r5
4000482c:	e3a00004 	mov	r0, #4
40004830:	eb003adc 	bl	400133a8 <CyU3PDebugPrint>
//#endif
	return 0;
};
40004834:	e3a00000 	mov	r0, #0
40004838:	e28dd014 	add	sp, sp, #20
4000483c:	e8bd8030 	pop	{r4, r5, pc}
40004840:	400114bc 	.word	0x400114bc

40004844 <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
40004844:	e1a0c000 	mov	ip, r0
40004848:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000484c:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004850:	e28d3004 	add	r3, sp, #4
40004854:	e1a00002 	mov	r0, r2
40004858:	e1a0200c 	mov	r2, ip
4000485c:	ebfffe0e 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004860:	e5dd0004 	ldrb	r0, [sp, #4]
40004864:	e28dd00c 	add	sp, sp, #12
40004868:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

4000486c <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000486c:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004870:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004874:	e24dd010 	sub	sp, sp, #16
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004878:	e3a0e000 	mov	lr, #0
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
4000487c:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004880:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004884:	e5cd000c 	strb	r0, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004888:	e28d100c 	add	r1, sp, #12
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000488c:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004890:	e3a03000 	mov	r3, #0
40004894:	e3a02001 	mov	r2, #1
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004898:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000489c:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400048a0:	e3a0c003 	mov	ip, #3
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
400048a4:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400048a8:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048ac:	eb007d3a 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048b0:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048b4:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048b8:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048bc:	eb003c2a 	bl	4001396c <CyU3PBusyWait>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400048c0:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048c4:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048c8:	e28d100c 	add	r1, sp, #12
400048cc:	e1a0200c 	mov	r2, ip
400048d0:	e3a03000 	mov	r3, #0
400048d4:	e1a0000d 	mov	r0, sp
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400048d8:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400048dc:	e5cdc008 	strb	ip, [sp, #8]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400048e0:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400048e4:	eb007d2c 	bl	40023d9c <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400048e8:	e3500000 	cmp	r0, #0
	{
		CyU3PBusyWait(2000); //change into 100us.
400048ec:	03a00e7d 	moveq	r0, #2000	; 0x7d0
	}
	else //if I2C operation is not success reconfig the I2C
	{
//		CyFxUVCApplnI2CInit ();
		CyU3PBusyWait(1000);
400048f0:	13a00ffa 	movne	r0, #1000	; 0x3e8
400048f4:	eb003c1c 	bl	4001396c <CyU3PBusyWait>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400048f8:	e3a00000 	mov	r0, #0
400048fc:	e28dd010 	add	sp, sp, #16
40004900:	e8bd8010 	pop	{r4, pc}

40004904 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004904:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004908:	e59f2210 	ldr	r2, [pc, #528]	; 40004b20 <I2cAppThread_Entry+0x21c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
4000490c:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
40004910:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004914:	e3a0effa 	mov	lr, #1000	; 0x3e8
40004918:	e284c02c 	add	ip, r4, #44	; 0x2c
4000491c:	e3a0300b 	mov	r3, #11
40004920:	e1a01004 	mov	r1, r4
40004924:	e59f01f8 	ldr	r0, [pc, #504]	; 40004b24 <I2cAppThread_Entry+0x220>
40004928:	e58de000 	str	lr, [sp]
4000492c:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
40004930:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
40004934:	e58d4004 	str	r4, [sp, #4]
40004938:	e58d4008 	str	r4, [sp, #8]
4000493c:	eb001923 	bl	4000add0 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004940:	eb001314 	bl	40009598 <_tx_time_get>
40004944:	e59f11dc 	ldr	r1, [pc, #476]	; 40004b28 <I2cAppThread_Entry+0x224>
40004948:	e59f51dc 	ldr	r5, [pc, #476]	; 40004b2c <I2cAppThread_Entry+0x228>
4000494c:	e1a02000 	mov	r2, r0
40004950:	e3a00004 	mov	r0, #4
40004954:	eb003a93 	bl	400133a8 <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004958:	e3a00032 	mov	r0, #50	; 0x32
4000495c:	eb00111b 	bl	40008dd0 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004960:	e59f01bc 	ldr	r0, [pc, #444]	; 40004b24 <I2cAppThread_Entry+0x220>
40004964:	eb0018e7 	bl	4000ad08 <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004968:	ea000000 	b	40004970 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000496c:	eb0018c8 	bl	4000ac94 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004970:	e5d5201a 	ldrb	r2, [r5, #26]
40004974:	e3520000 	cmp	r2, #0
40004978:	0afffffb 	beq	4000496c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000497c:	e59f01a8 	ldr	r0, [pc, #424]	; 40004b2c <I2cAppThread_Entry+0x228>
40004980:	e59f11a8 	ldr	r1, [pc, #424]	; 40004b30 <I2cAppThread_Entry+0x22c>
40004984:	e5903010 	ldr	r3, [r0, #16]
40004988:	e3a00004 	mov	r0, #4
4000498c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004990:	eb003a84 	bl	400133a8 <CyU3PDebugPrint>
40004994:	e59f7198 	ldr	r7, [pc, #408]	; 40004b34 <I2cAppThread_Entry+0x230>
40004998:	e59fb198 	ldr	fp, [pc, #408]	; 40004b38 <I2cAppThread_Entry+0x234>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000499c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049a0:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
400049a4:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
400049a8:	e3a02003 	mov	r2, #3
400049ac:	e28d3014 	add	r3, sp, #20
400049b0:	e3a01020 	mov	r1, #32
400049b4:	e59f0180 	ldr	r0, [pc, #384]	; 40004b3c <I2cAppThread_Entry+0x238>
400049b8:	e58d6000 	str	r6, [sp]
400049bc:	eb0015cb 	bl	4000a0f0 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049c0:	e1a01006 	mov	r1, r6
400049c4:	e597001c 	ldr	r0, [r7, #28]
400049c8:	eb001690 	bl	4000a410 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
400049cc:	e597001c 	ldr	r0, [r7, #28]
400049d0:	eb0016c3 	bl	4000a4e4 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400049d4:	e595001c 	ldr	r0, [r5, #28]
400049d8:	e1a01006 	mov	r1, r6
400049dc:	eb00168b 	bl	4000a410 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400049e0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049e4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400049e8:	e3520000 	cmp	r2, #0
400049ec:	1a000008 	bne	40004a14 <I2cAppThread_Entry+0x110>
400049f0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400049f4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400049f8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400049fc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
40004a00:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004a04:	e353003f 	cmp	r3, #63	; 0x3f
40004a08:	93520000 	cmpls	r2, #0
40004a0c:	0afffff8 	beq	400049f4 <I2cAppThread_Entry+0xf0>
40004a10:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
40004a14:	e3520000 	cmp	r2, #0
40004a18:	0a00002d 	beq	40004ad4 <I2cAppThread_Entry+0x1d0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a1c:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a20:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a24:	e083e083 	add	lr, r3, r3, lsl #1
40004a28:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
40004a2c:	e242c014 	sub	ip, r2, #20
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){//remove sensor set for WB camera
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
40004a30:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
40004a34:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
40004a38:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
40004a3c:	e1daa0b8 	ldrh	sl, [sl, #8]
#if 1
					switch(lcCmdDes->CmdID){
40004a40:	e35c0003 	cmp	ip, #3
40004a44:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004a48:	ea00001a 	b	40004ab8 <I2cAppThread_Entry+0x1b4>
40004a4c:	40004ac4 	.word	0x40004ac4
40004a50:	40004aa8 	.word	0x40004aa8
40004a54:	40004a5c 	.word	0x40004a5c
40004a58:	40004a5c 	.word	0x40004a5c
						case 22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40004a5c:	e3a03082 	mov	r3, #130	; 0x82
40004a60:	ebffff81 	bl	4000486c <SensorSetIrisControl>
							delaytime = 300;
							break;
40004a64:	e3a01f4b 	mov	r1, #300	; 0x12c
					}
#endif
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					//delaytime =100; //temp add -6/17/2015
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004a68:	e3a02000 	mov	r2, #0
40004a6c:	e59f00b0 	ldr	r0, [pc, #176]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a70:	eb0018b4 	bl	4000ad48 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004a74:	e59f00a8 	ldr	r0, [pc, #168]	; 40004b24 <I2cAppThread_Entry+0x220>
40004a78:	eb0018a2 	bl	4000ad08 <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a7c:	e5d40001 	ldrb	r0, [r4, #1]
40004a80:	e5d41002 	ldrb	r1, [r4, #2]
40004a84:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004a88:	12800001 	addne	r0, r0, #1
40004a8c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004a90:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004a94:	0a000014 	beq	40004aec <I2cAppThread_Entry+0x1e8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004a98:	e595001c 	ldr	r0, [r5, #28]
40004a9c:	eb001690 	bl	4000a4e4 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004aa0:	eb00187b 	bl	4000ac94 <_txe_thread_relinquish>
		}
40004aa4:	eaffffbf 	b	400049a8 <I2cAppThread_Entry+0xa4>
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004aa8:	e3a03052 	mov	r3, #82	; 0x52
40004aac:	ebffff6e 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004ab0:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ab4:	eaffffeb 	b	40004a68 <I2cAppThread_Entry+0x164>
						case 23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004ab8:	ebffff33 	bl	4000478c <SensorSetControl>
40004abc:	e1a0100a 	mov	r1, sl
							break;
40004ac0:	eaffffe8 	b	40004a68 <I2cAppThread_Entry+0x164>
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
#if 1
					switch(lcCmdDes->CmdID){
						case 20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
40004ac4:	e3a03082 	mov	r3, #130	; 0x82
40004ac8:	ebffff67 	bl	4000486c <SensorSetIrisControl>
							delaytime = 500;
							break;
40004acc:	e3a01f7d 	mov	r1, #500	; 0x1f4
40004ad0:	eaffffe4 	b	40004a68 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004ad4:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004ad8:	e59f0044 	ldr	r0, [pc, #68]	; 40004b24 <I2cAppThread_Entry+0x220>
40004adc:	eb001899 	bl	4000ad48 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
40004ae0:	e59f003c 	ldr	r0, [pc, #60]	; 40004b24 <I2cAppThread_Entry+0x220>
40004ae4:	eb001887 	bl	4000ad08 <_txe_timer_activate>
40004ae8:	eaffffea 	b	40004a98 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004aec:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
40004af0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004af4:	e35c001f 	cmp	ip, #31
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004af8:	824cc020 	subhi	ip, ip, #32
40004afc:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b00:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b04:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b08:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET)][16] = CyFalse;
40004b0c:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
40004b10:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
40004b14:	e5944034 	ldr	r4, [r4, #52]	; 0x34
40004b18:	e5854010 	str	r4, [r5, #16]
40004b1c:	eaffffdd 	b	40004a98 <I2cAppThread_Entry+0x194>
40004b20:	40004b40 	.word	0x40004b40
40004b24:	40032fe4 	.word	0x40032fe4
40004b28:	40011528 	.word	0x40011528
40004b2c:	40032ee4 	.word	0x40032ee4
40004b30:	4001153c 	.word	0x4001153c
40004b34:	40033168 	.word	0x40033168
40004b38:	40030000 	.word	0x40030000
40004b3c:	40030fb0 	.word	0x40030fb0

40004b40 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
40004b40:	e59f0008 	ldr	r0, [pc, #8]	; 40004b50 <I2CCmdCb+0x10>
40004b44:	e3a01020 	mov	r1, #32
40004b48:	e3a02000 	mov	r2, #0
40004b4c:	ea001597 	b	4000a1b0 <_txe_event_flags_set>
40004b50:	40030fb0 	.word	0x40030fb0

40004b54 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004b54:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004b58:	e92d4070 	push	{r4, r5, r6, lr}
40004b5c:	e1a03001 	mov	r3, r1
40004b60:	e24dd010 	sub	sp, sp, #16
40004b64:	e1a04000 	mov	r4, r0
    switch (evtype)
40004b68:	0a000036 	beq	40004c48 <CyFxUVCApplnUSBEventCB+0xf4>
40004b6c:	e3500004 	cmp	r0, #4
40004b70:	0a00001f 	beq	40004bf4 <CyFxUVCApplnUSBEventCB+0xa0>
40004b74:	e3500001 	cmp	r0, #1
40004b78:	0a000001 	beq	40004b84 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004b7c:	e28dd010 	add	sp, sp, #16
40004b80:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b84:	e59f5128 	ldr	r5, [pc, #296]	; 40004cb4 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004b88:	e1a02000 	mov	r2, r0
40004b8c:	e59f1124 	ldr	r1, [pc, #292]	; 40004cb8 <CyFxUVCApplnUSBEventCB+0x164>
40004b90:	e3a00004 	mov	r0, #4
40004b94:	eb003a03 	bl	400133a8 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b98:	e1a00004 	mov	r0, r4
40004b9c:	eb005b11 	bl	4001b7e8 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004ba0:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ba4:	e1a01004 	mov	r1, r4
40004ba8:	e1a00005 	mov	r0, r5
40004bac:	e3a02002 	mov	r2, #2
40004bb0:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bb4:	e585c028 	str	ip, [r5, #40]	; 0x28
            isUsbConnected = CyFalse;
40004bb8:	e585c030 	str	ip, [r5, #48]	; 0x30
            streamingStarted = CyFalse;
40004bbc:	e585c02c 	str	ip, [r5, #44]	; 0x2c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bc0:	e58dc000 	str	ip, [sp]
40004bc4:	eb001549 	bl	4000a0f0 <_txe_event_flags_get>
40004bc8:	e2504000 	subs	r4, r0, #0
40004bcc:	1affffea 	bne	40004b7c <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004bd0:	e3e01001 	mvn	r1, #1
40004bd4:	e3a02002 	mov	r2, #2
40004bd8:	e1a00005 	mov	r0, r5
40004bdc:	eb001573 	bl	4000a1b0 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004be0:	e1a00005 	mov	r0, r5
40004be4:	e3a01002 	mov	r1, #2
40004be8:	e1a02004 	mov	r2, r4
40004bec:	eb00156f 	bl	4000a1b0 <_txe_event_flags_set>
40004bf0:	eaffffe1 	b	40004b7c <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bf4:	e59f50b8 	ldr	r5, [pc, #184]	; 40004cb4 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004bf8:	e59f10bc 	ldr	r1, [pc, #188]	; 40004cbc <CyFxUVCApplnUSBEventCB+0x168>
40004bfc:	e1a02000 	mov	r2, r0
40004c00:	eb0039e8 	bl	400133a8 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c04:	e3a00001 	mov	r0, #1
40004c08:	eb005af6 	bl	4001b7e8 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c0c:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c10:	e3a01001 	mov	r1, #1
40004c14:	e3a02002 	mov	r2, #2
40004c18:	e1a00005 	mov	r0, r5
40004c1c:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c20:	e585c028 	str	ip, [r5, #40]	; 0x28
            streamingStarted = CyFalse;
40004c24:	e585c02c 	str	ip, [r5, #44]	; 0x2c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c28:	e58dc000 	str	ip, [sp]
40004c2c:	eb00152f 	bl	4000a0f0 <_txe_event_flags_get>
40004c30:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c34:	01a00005 	moveq	r0, r5
40004c38:	03e01001 	mvneq	r1, #1
40004c3c:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c40:	1affffcd 	bne	40004b7c <CyFxUVCApplnUSBEventCB+0x28>
40004c44:	eaffffe4 	b	40004bdc <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c48:	e59f5064 	ldr	r5, [pc, #100]	; 40004cb4 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004c4c:	e1a02000 	mov	r2, r0
40004c50:	e59f1068 	ldr	r1, [pc, #104]	; 40004cc0 <CyFxUVCApplnUSBEventCB+0x16c>
40004c54:	e3a00004 	mov	r0, #4
40004c58:	eb0039d2 	bl	400133a8 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c5c:	e3a00001 	mov	r0, #1
40004c60:	eb005ae0 	bl	4001b7e8 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c64:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c68:	e1a00005 	mov	r0, r5
40004c6c:	e3a01001 	mov	r1, #1
40004c70:	e1a02004 	mov	r2, r4
40004c74:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c78:	e5856028 	str	r6, [r5, #40]	; 0x28
            streamingStarted = CyFalse;
40004c7c:	e585602c 	str	r6, [r5, #44]	; 0x2c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c80:	e58d6000 	str	r6, [sp]
40004c84:	eb001519 	bl	4000a0f0 <_txe_event_flags_get>
40004c88:	e2506000 	subs	r6, r0, #0
40004c8c:	1affffba 	bne	40004b7c <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c90:	e1a02004 	mov	r2, r4
40004c94:	e1a00005 	mov	r0, r5
40004c98:	e3e01001 	mvn	r1, #1
40004c9c:	eb001543 	bl	4000a1b0 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004ca0:	e1a00005 	mov	r0, r5
40004ca4:	e1a01004 	mov	r1, r4
40004ca8:	e1a02006 	mov	r2, r6
40004cac:	eb00153f 	bl	4000a1b0 <_txe_event_flags_set>
40004cb0:	eaffffb1 	b	40004b7c <CyFxUVCApplnUSBEventCB+0x28>
40004cb4:	40030fb0 	.word	0x40030fb0
40004cb8:	400115a4 	.word	0x400115a4
40004cbc:	40011560 	.word	0x40011560
40004cc0:	40011580 	.word	0x40011580

40004cc4 <CyFxUvcApplnDmaCallback>:
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004cc4:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004cc8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40004ccc:	e1a05002 	mov	r5, r2
40004cd0:	e24dd00c 	sub	sp, sp, #12
#if 1
    CyU3PReturnStatus_t status;
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004cd4:	0a00000b 	beq	40004d08 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
                        status, input->buffer_p.count, prodCount, consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004cd8:	e3510010 	cmp	r1, #16
40004cdc:	1a000007 	bne	40004d00 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004ce0:	e59f317c 	ldr	r3, [pc, #380]	; 40004e64 <CyFxUvcApplnDmaCallback+0x1a0>
        streamingStarted = CyTrue;
40004ce4:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004ce8:	e1d304b2 	ldrh	r0, [r3, #66]	; 0x42
        streamingStarted = CyTrue;
40004cec:	e583202c 	str	r2, [r3, #44]	; 0x2c
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004cf0:	e080c002 	add	ip, r0, r2
40004cf4:	e1a0180c 	lsl	r1, ip, #16
40004cf8:	e1a02821 	lsr	r2, r1, #16
40004cfc:	e1c324b2 	strh	r2, [r3, #66]	; 0x42
        streamingStarted = CyTrue;
    }
}
40004d00:	e28dd00c 	add	sp, sp, #12
40004d04:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    //CyU3PDebugPrint (4, "DMA Callback: event = %d, size = %x, dmaDone %x\r\n",
      //                                          type, input->buffer_p.count, prodCount - consCount);

    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004d08:	e1d220b4 	ldrh	r2, [r2, #4]
40004d0c:	e59f3154 	ldr	r3, [pc, #340]	; 40004e68 <CyFxUvcApplnDmaCallback+0x1a4>
40004d10:	e1520003 	cmp	r2, r3
40004d14:	0a000035 	beq	40004df0 <CyFxUvcApplnDmaCallback+0x12c>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004d18:	e5956000 	ldr	r6, [r5]
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004d1c:	e59f7148 	ldr	r7, [pc, #328]	; 40004e6c <CyFxUvcApplnDmaCallback+0x1a8>
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004d20:	e3e01000 	mvn	r1, #0
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004d24:	e246400c 	sub	r4, r6, #12
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004d28:	e59f0140 	ldr	r0, [pc, #320]	; 40004e70 <CyFxUvcApplnDmaCallback+0x1ac>
40004d2c:	eb0015b7 	bl	4000a410 <_txe_mutex_get>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004d30:	e1a00004 	mov	r0, r4
40004d34:	e2871d12 	add	r1, r7, #1152	; 0x480
40004d38:	e3a0200c 	mov	r2, #12
40004d3c:	ebfffae4 	bl	400038d4 <CyU3PMemCopy>
	CyU3PMutexPut(&imgHdMux);
40004d40:	e59f0128 	ldr	r0, [pc, #296]	; 40004e70 <CyFxUvcApplnDmaCallback+0x1ac>
40004d44:	eb0015e6 	bl	4000a4e4 <_txe_mutex_put>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004d48:	e556c00b 	ldrb	ip, [r6, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004d4c:	e59f4110 	ldr	r4, [pc, #272]	; 40004e64 <CyFxUvcApplnDmaCallback+0x1a0>
	CyU3PMutexPut(&imgHdMux);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004d50:	e38c1002 	orr	r1, ip, #2
40004d54:	e546100b 	strb	r1, [r6, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004d58:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
                pbc = input->buffer_p.count;
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
40004d5c:	e5d4203a 	ldrb	r2, [r4, #58]	; 0x3a
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
                pbc = input->buffer_p.count;
40004d60:	e1d510b4 	ldrh	r1, [r5, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004d64:	e2803001 	add	r3, r0, #1
                pbc = input->buffer_p.count;
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
40004d68:	e352000f 	cmp	r2, #15
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004d6c:	e1c433b6 	strh	r3, [r4, #54]	; 0x36
                pbc = input->buffer_p.count;
40004d70:	e1c413b8 	strh	r1, [r4, #56]	; 0x38
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
40004d74:	0a00002e 	beq	40004e34 <CyFxUvcApplnDmaCallback+0x170>
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	CyU3PMutexPut(&imgHdMux);
                	stiflag = 0xAA;
                }
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004d78:	e3a0e001 	mov	lr, #1
40004d7c:	e584e03c 	str	lr, [r4, #60]	; 0x3c
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004d80:	e1d4e4b0 	ldrh	lr, [r4, #64]	; 0x40
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004d84:	e281100c 	add	r1, r1, #12
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004d88:	e28e3001 	add	r3, lr, #1
40004d8c:	e1a00803 	lsl	r0, r3, #16
40004d90:	e1a0c820 	lsr	ip, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004d94:	e1a02801 	lsl	r2, r1, #16
40004d98:	e1a01822 	lsr	r1, r2, #16
40004d9c:	e59f00d0 	ldr	r0, [pc, #208]	; 40004e74 <CyFxUvcApplnDmaCallback+0x1b0>
40004da0:	e3a02000 	mov	r2, #0
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004da4:	e1c4c4b0 	strh	ip, [r4, #64]	; 0x40
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004da8:	eb004a4b 	bl	400176dc <CyU3PDmaMultiChannelCommitBuffer>
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004dac:	e59f10b0 	ldr	r1, [pc, #176]	; 40004e64 <CyFxUvcApplnDmaCallback+0x1a0>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
40004db0:	e2502000 	subs	r2, r0, #0
40004db4:	0affffd1 	beq	40004d00 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004db8:	e1d104b0 	ldrh	r0, [r1, #64]	; 0x40
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004dbc:	e1d530b4 	ldrh	r3, [r5, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if ((status != CY_U3P_SUCCESS))
            {
                prodCount--;
40004dc0:	e240e001 	sub	lr, r0, #1
40004dc4:	e1a0c80e 	lsl	ip, lr, #16
40004dc8:	e1a0082c 	lsr	r0, ip, #16
40004dcc:	e1c104b0 	strh	r0, [r1, #64]	; 0x40
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer(1): Code = %d, size = %x, dmaDone %d %d\r\n",
40004dd0:	e1d1e4b0 	ldrh	lr, [r1, #64]	; 0x40
40004dd4:	e1d1c4b2 	ldrh	ip, [r1, #66]	; 0x42
40004dd8:	e3a00004 	mov	r0, #4
40004ddc:	e59f1094 	ldr	r1, [pc, #148]	; 40004e78 <CyFxUvcApplnDmaCallback+0x1b4>
40004de0:	e58de000 	str	lr, [sp]
40004de4:	e58dc004 	str	ip, [sp, #4]
40004de8:	eb00396e 	bl	400133a8 <CyU3PDebugPrint>
40004dec:	eaffffc3 	b	40004d00 <CyFxUvcApplnDmaCallback+0x3c>
                	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	CyU3PMutexPut(&imgHdMux);
                }
#endif
            	CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004df0:	e5956000 	ldr	r6, [r5]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004df4:	e3e01000 	mvn	r1, #0
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	CyU3PMutexPut(&imgHdMux);
                }
#endif
            	CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004df8:	e59f4064 	ldr	r4, [pc, #100]	; 40004e64 <CyFxUvcApplnDmaCallback+0x1a0>
                	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	CyU3PMutexPut(&imgHdMux);
                }
#endif
            	CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004dfc:	e246600c 	sub	r6, r6, #12
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004e00:	e59f0068 	ldr	r0, [pc, #104]	; 40004e70 <CyFxUvcApplnDmaCallback+0x1ac>
40004e04:	eb001581 	bl	4000a410 <_txe_mutex_get>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004e08:	e59f106c 	ldr	r1, [pc, #108]	; 40004e7c <CyFxUvcApplnDmaCallback+0x1b8>
40004e0c:	e1a00006 	mov	r0, r6
40004e10:	e3a0200c 	mov	r2, #12
40004e14:	ebfffaae 	bl	400038d4 <CyU3PMemCopy>
	CyU3PMutexPut(&imgHdMux);
40004e18:	e59f0050 	ldr	r0, [pc, #80]	; 40004e70 <CyFxUvcApplnDmaCallback+0x1ac>
40004e1c:	eb0015b0 	bl	4000a4e4 <_txe_mutex_put>
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	CyU3PMutexPut(&imgHdMux);
                }
#endif
            	CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004e20:	e1d4c3b4 	ldrh	ip, [r4, #52]	; 0x34
40004e24:	e1d510b4 	ldrh	r1, [r5, #4]
40004e28:	e28c0001 	add	r0, ip, #1
40004e2c:	e1c403b4 	strh	r0, [r4, #52]	; 0x34
40004e30:	eaffffd2 	b	40004d80 <CyFxUvcApplnDmaCallback+0xbc>
                //CyU3PDebugPrint (4, "((partition)buffer: Code = %d, size = %x, dmaRx %d, dmaTx %d line %d\r\n",
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
                	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004e34:	e3e01000 	mvn	r1, #0
40004e38:	e59f0030 	ldr	r0, [pc, #48]	; 40004e70 <CyFxUvcApplnDmaCallback+0x1ac>
40004e3c:	eb001573 	bl	4000a410 <_txe_mutex_get>
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40004e40:	e5d71481 	ldrb	r1, [r7, #1153]	; 0x481
                	CyU3PMutexPut(&imgHdMux);
40004e44:	e59f0024 	ldr	r0, [pc, #36]	; 40004e70 <CyFxUvcApplnDmaCallback+0x1ac>
                //                        status, input->buffer_p.count, prodCount, consCount, lineCount);
                //lineCount = 0; //res test
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
                	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40004e48:	e20120df 	and	r2, r1, #223	; 0xdf
40004e4c:	e5c72481 	strb	r2, [r7, #1153]	; 0x481
                	CyU3PMutexPut(&imgHdMux);
40004e50:	eb0015a3 	bl	4000a4e4 <_txe_mutex_put>
                	stiflag = 0xAA;
40004e54:	e3e03055 	mvn	r3, #85	; 0x55
40004e58:	e5c4303a 	strb	r3, [r4, #58]	; 0x3a
40004e5c:	e1d510b4 	ldrh	r1, [r5, #4]
40004e60:	eaffffc4 	b	40004d78 <CyFxUvcApplnDmaCallback+0xb4>
40004e64:	40030fb0 	.word	0x40030fb0
40004e68:	00003ff0 	.word	0x00003ff0
40004e6c:	40030000 	.word	0x40030000
40004e70:	400330f0 	.word	0x400330f0
40004e74:	40032f04 	.word	0x40032f04
40004e78:	400115c4 	.word	0x400115c4
40004e7c:	40030480 	.word	0x40030480

40004e80 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e80:	e59f32c0 	ldr	r3, [pc, #704]	; 40005148 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004e84:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e88:	e59fc2bc 	ldr	ip, [pc, #700]	; 4000514c <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e8c:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004e90:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e94:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004e98:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004e9c:	e59f22ac 	ldr	r2, [pc, #684]	; 40005150 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ea0:	e59f02ac 	ldr	r0, [pc, #684]	; 40005154 <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ea4:	e59f32ac 	ldr	r3, [pc, #684]	; 40005158 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ea8:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004eac:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004eb0:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004eb4:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004eb8:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004ebc:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004ec0:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004ec4:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ec8:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ecc:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004ed0:	0a00004f 	beq	40005014 <CyFxUVCApplnUSBSetupCB+0x194>
40004ed4:	9a000006 	bls	40004ef4 <CyFxUVCApplnUSBSetupCB+0x74>
40004ed8:	e3540021 	cmp	r4, #33	; 0x21
40004edc:	0a00003a 	beq	40004fcc <CyFxUVCApplnUSBSetupCB+0x14c>
40004ee0:	e35400a1 	cmp	r4, #161	; 0xa1
40004ee4:	0a000038 	beq	40004fcc <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004ee8:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004eec:	e28dd010 	add	sp, sp, #16
40004ef0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004ef4:	e3540001 	cmp	r4, #1
40004ef8:	1afffffa 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004efc:	e358000b 	cmp	r8, #11
40004f00:	1afffff8 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004f04:	e3550001 	cmp	r5, #1
40004f08:	1afffff6 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
40004f0c:	e3570000 	cmp	r7, #0
40004f10:	1afffff4 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004f14:	e59f4240 	ldr	r4, [pc, #576]	; 4000515c <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004f18:	e59f1240 	ldr	r1, [pc, #576]	; 40005160 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004f1c:	e3a00004 	mov	r0, #4
40004f20:	eb003920 	bl	400133a8 <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004f24:	e1a00005 	mov	r0, r5
40004f28:	eb005a2e 	bl	4001b7e8 <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004f2c:	e1a01005 	mov	r1, r5
40004f30:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004f34:	e5847028 	str	r7, [r4, #40]	; 0x28
                    streamingStarted = CyFalse;
40004f38:	e584702c 	str	r7, [r4, #44]	; 0x2c
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004f3c:	eb0063bb 	bl	4001de30 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004f40:	e3a00064 	mov	r0, #100	; 0x64
40004f44:	eb003a88 	bl	4001396c <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004f48:	e59f0214 	ldr	r0, [pc, #532]	; 40005164 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004f4c:	eb004e1c 	bl	400187c4 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004f50:	e3a00083 	mov	r0, #131	; 0x83
40004f54:	eb005faf 	bl	4001ce18 <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004f58:	e1a01007 	mov	r1, r7
40004f5c:	e3a00083 	mov	r0, #131	; 0x83
40004f60:	eb0063b2 	bl	4001de30 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004f64:	e3a00064 	mov	r0, #100	; 0x64
40004f68:	eb003a7f 	bl	4001396c <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f6c:	e1a01007 	mov	r1, r7
40004f70:	e1a02005 	mov	r2, r5
40004f74:	e3a00083 	mov	r0, #131	; 0x83
40004f78:	eb006472 	bl	4001e148 <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004f7c:	eb005ead 	bl	4001ca38 <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004f80:	e5845044 	str	r5, [r4, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f84:	e1a00004 	mov	r0, r4
40004f88:	e1a01005 	mov	r1, r5
40004f8c:	e3a02002 	mov	r2, #2
40004f90:	e28d300c 	add	r3, sp, #12
40004f94:	e58d7000 	str	r7, [sp]
40004f98:	eb001454 	bl	4000a0f0 <_txe_event_flags_get>
40004f9c:	e2506000 	subs	r6, r0, #0
40004fa0:	1a00002e 	bne	40005060 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004fa4:	e3e01001 	mvn	r1, #1
40004fa8:	e3a02002 	mov	r2, #2
40004fac:	e1a00004 	mov	r0, r4
40004fb0:	eb00147e 	bl	4000a1b0 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004fb4:	e1a00004 	mov	r0, r4
40004fb8:	e3a01002 	mov	r1, #2
40004fbc:	e1a02006 	mov	r2, r6
40004fc0:	eb00147a 	bl	4000a1b0 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004fc4:	e1a00005 	mov	r0, r5
40004fc8:	eaffffc7 	b	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004fcc:	e21550ff 	ands	r5, r5, #255	; 0xff
40004fd0:	1a00001a 	bne	40005040 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004fd4:	e1a02005 	mov	r2, r5
40004fd8:	e59f017c 	ldr	r0, [pc, #380]	; 4000515c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004fdc:	e3a01004 	mov	r1, #4
40004fe0:	eb001472 	bl	4000a1b0 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004fe4:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004fe8:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004fec:	0affffbe 	beq	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004ff0:	e59f1170 	ldr	r1, [pc, #368]	; 40005168 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004ff4:	e3a00004 	mov	r0, #4
40004ff8:	eb0038ea 	bl	400133a8 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ffc:	e1a00005 	mov	r0, r5
40005000:	e3a01001 	mov	r1, #1
40005004:	e1a02005 	mov	r2, r5
40005008:	eb00644e 	bl	4001e148 <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
4000500c:	e3a00001 	mov	r0, #1
40005010:	eaffffb5 	b	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40005014:	e3580001 	cmp	r8, #1
40005018:	1affffb2 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
4000501c:	e3550083 	cmp	r5, #131	; 0x83
40005020:	1affffb0 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40005024:	e59f7130 	ldr	r7, [pc, #304]	; 4000515c <CyFxUVCApplnUSBSetupCB+0x2dc>
40005028:	e597602c 	ldr	r6, [r7, #44]	; 0x2c
4000502c:	e3560001 	cmp	r6, #1
40005030:	0a000015 	beq	4000508c <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40005034:	eb005e7f 	bl	4001ca38 <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40005038:	e1a00008 	mov	r0, r8
4000503c:	eaffffaa 	b	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40005040:	e3550001 	cmp	r5, #1
40005044:	1affffa7 	bne	40004ee8 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40005048:	e3a02000 	mov	r2, #0
4000504c:	e59f0108 	ldr	r0, [pc, #264]	; 4000515c <CyFxUVCApplnUSBSetupCB+0x2dc>
40005050:	e3a01008 	mov	r1, #8
40005054:	eb001455 	bl	4000a1b0 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40005058:	e2502000 	subs	r2, r0, #0
4000505c:	1a000001 	bne	40005068 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40005060:	e1a00005 	mov	r0, r5
40005064:	eaffffa0 	b	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40005068:	e59f10fc 	ldr	r1, [pc, #252]	; 4000516c <CyFxUVCApplnUSBSetupCB+0x2ec>
4000506c:	e3a00004 	mov	r0, #4
40005070:	eb0038cc 	bl	400133a8 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40005074:	e3a00000 	mov	r0, #0
40005078:	e1a01005 	mov	r1, r5
4000507c:	e1a02000 	mov	r2, r0
40005080:	eb006430 	bl	4001e148 <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40005084:	e1a00005 	mov	r0, r5
40005088:	eaffff97 	b	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
4000508c:	e59f10dc 	ldr	r1, [pc, #220]	; 40005170 <CyFxUVCApplnUSBSetupCB+0x2f0>
40005090:	e3a00004 	mov	r0, #4
40005094:	eb0038c3 	bl	400133a8 <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40005098:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
4000509c:	e1a00006 	mov	r0, r6
400050a0:	eb0059d0 	bl	4001b7e8 <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
400050a4:	e1a01006 	mov	r1, r6
400050a8:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
400050ac:	e5878028 	str	r8, [r7, #40]	; 0x28
                        streamingStarted = CyFalse;
400050b0:	e587802c 	str	r8, [r7, #44]	; 0x2c

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
400050b4:	eb00635d 	bl	4001de30 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
400050b8:	e3a00064 	mov	r0, #100	; 0x64
400050bc:	eb003a2a 	bl	4001396c <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400050c0:	e59f009c 	ldr	r0, [pc, #156]	; 40005164 <CyFxUVCApplnUSBSetupCB+0x2e4>
400050c4:	eb004dbe 	bl	400187c4 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
400050c8:	e1a00005 	mov	r0, r5
400050cc:	eb005f51 	bl	4001ce18 <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
400050d0:	e1a01008 	mov	r1, r8
400050d4:	e1a00005 	mov	r0, r5
400050d8:	eb006354 	bl	4001de30 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
400050dc:	e3a00064 	mov	r0, #100	; 0x64
400050e0:	eb003a21 	bl	4001396c <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
400050e4:	e1a01008 	mov	r1, r8
400050e8:	e1a02006 	mov	r2, r6
400050ec:	e1a00005 	mov	r0, r5
400050f0:	eb006414 	bl	4001e148 <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
400050f4:	eb005e4f 	bl	4001ca38 <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
400050f8:	e5876044 	str	r6, [r7, #68]	; 0x44
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
400050fc:	e1a00007 	mov	r0, r7
40005100:	e1a01006 	mov	r1, r6
40005104:	e1a02004 	mov	r2, r4
40005108:	e28d300c 	add	r3, sp, #12
4000510c:	e58d8000 	str	r8, [sp]
40005110:	eb0013f6 	bl	4000a0f0 <_txe_event_flags_get>
40005114:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40005118:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
4000511c:	1affff72 	bne	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40005120:	e3e01001 	mvn	r1, #1
40005124:	e1a02004 	mov	r2, r4
40005128:	e1a00007 	mov	r0, r7
4000512c:	eb00141f 	bl	4000a1b0 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40005130:	e1a00007 	mov	r0, r7
40005134:	e1a01004 	mov	r1, r4
40005138:	e1a02005 	mov	r2, r5
4000513c:	eb00141b 	bl	4000a1b0 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40005140:	e1a00006 	mov	r0, r6
40005144:	eaffff68 	b	40004eec <CyFxUVCApplnUSBSetupCB+0x6c>
40005148:	40032ee0 	.word	0x40032ee0
4000514c:	40033164 	.word	0x40033164
40005150:	40032fe0 	.word	0x40032fe0
40005154:	40033010 	.word	0x40033010
40005158:	40033012 	.word	0x40033012
4000515c:	40030fb0 	.word	0x40030fb0
40005160:	4001167c 	.word	0x4001167c
40005164:	40032f04 	.word	0x40032f04
40005168:	40011610 	.word	0x40011610
4000516c:	40011648 	.word	0x40011648
40005170:	40011694 	.word	0x40011694

40005174 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40005174:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40005178:	e92d4010 	push	{r4, lr}
4000517c:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40005180:	18bd8010 	popne	{r4, pc}
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40005184:	e59f30cc 	ldr	r3, [pc, #204]	; 40005258 <CyFxGpifCB+0xe4>
40005188:	e5d33048 	ldrb	r3, [r3, #72]	; 0x48
4000518c:	e3530003 	cmp	r3, #3
40005190:	0a000021 	beq	4000521c <CyFxGpifCB+0xa8>
            	//lineCount++;
            	return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40005194:	e3530002 	cmp	r3, #2
40005198:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
4000519c:	e2410008 	sub	r0, r1, #8
400051a0:	e350000a 	cmp	r0, #10
400051a4:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
400051a8:	ea000023 	b	4000523c <CyFxGpifCB+0xc8>
400051ac:	400051dc 	.word	0x400051dc
400051b0:	4000523c 	.word	0x4000523c
400051b4:	4000523c 	.word	0x4000523c
400051b8:	400051d8 	.word	0x400051d8
400051bc:	4000523c 	.word	0x4000523c
400051c0:	4000523c 	.word	0x4000523c
400051c4:	4000523c 	.word	0x4000523c
400051c8:	40005214 	.word	0x40005214
400051cc:	4000523c 	.word	0x4000523c
400051d0:	4000523c 	.word	0x4000523c
400051d4:	400051d8 	.word	0x400051d8
400051d8:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
400051dc:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
400051e0:	e59f0074 	ldr	r0, [pc, #116]	; 4000525c <CyFxGpifCB+0xe8>
400051e4:	eb0050a7 	bl	40019488 <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
400051e8:	e2502000 	subs	r2, r0, #0
400051ec:	0afffff9 	beq	400051d8 <CyFxGpifCB+0x64>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
400051f0:	e3a00004 	mov	r0, #4
400051f4:	e59f1064 	ldr	r1, [pc, #100]	; 40005260 <CyFxGpifCB+0xec>
400051f8:	eb00386a 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400051fc:	e59f1060 	ldr	r1, [pc, #96]	; 40005264 <CyFxGpifCB+0xf0>
40005200:	e3a00004 	mov	r0, #4
40005204:	eb003867 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005208:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000520c:	eb000eef 	bl	40008dd0 <_tx_thread_sleep>
40005210:	eafffff9 	b	400051fc <CyFxGpifCB+0x88>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
40005214:	e3a01001 	mov	r1, #1
40005218:	eafffff0 	b	400051e0 <CyFxGpifCB+0x6c>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
4000521c:	e241200b 	sub	r2, r1, #11
40005220:	e3520003 	cmp	r2, #3
40005224:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40005228:	ea000006 	b	40005248 <CyFxGpifCB+0xd4>
4000522c:	400051dc 	.word	0x400051dc
40005230:	40005214 	.word	0x40005214
40005234:	400051d8 	.word	0x400051d8
40005238:	400051d8 	.word	0x400051d8
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
4000523c:	e59f1024 	ldr	r1, [pc, #36]	; 40005268 <CyFxGpifCB+0xf4>
40005240:	e3a00001 	mov	r0, #1
40005244:	eb003857 	bl	400133a8 <CyU3PDebugPrint>
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
40005248:	e59f101c 	ldr	r1, [pc, #28]	; 4000526c <CyFxGpifCB+0xf8>
4000524c:	e3a00004 	mov	r0, #4
    }
   // CyU3PDebugPrint(4,"\r\n commiteof state = %d",currentState);
}
40005250:	e8bd4010 	pop	{r4, lr}
    {
    	/* KYS: Moving hitFV to where we commit the partial buffer. This fixes a potential race condition
    	           in the UVC implementation. */
    	//hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\r\n");
40005254:	ea003853 	b	400133a8 <CyU3PDebugPrint>
40005258:	40030fb0 	.word	0x40030fb0
4000525c:	40032f04 	.word	0x40032f04
40005260:	400116d0 	.word	0x400116d0
40005264:	40011700 	.word	0x40011700
40005268:	400116b8 	.word	0x400116b8
4000526c:	40011714 	.word	0x40011714

40005270 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
40005270:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005274:	e59f41fc 	ldr	r4, [pc, #508]	; 40005478 <I2CCmdHandler+0x208>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
40005278:	e24dd034 	sub	sp, sp, #52	; 0x34
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
4000527c:	e5d41054 	ldrb	r1, [r4, #84]	; 0x54
//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005280:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
40005284:	e5d4604d 	ldrb	r6, [r4, #77]	; 0x4d
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005288:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
4000528c:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
40005290:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
40005294:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
40005298:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
4000529c:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
400052a0:	e58d1018 	str	r1, [sp, #24]
400052a4:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
400052a8:	e3a00004 	mov	r0, #4
400052ac:	e58d301c 	str	r3, [sp, #28]
400052b0:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
400052b4:	e1a03006 	mov	r3, r6
400052b8:	e59f11bc 	ldr	r1, [pc, #444]	; 4000547c <I2CCmdHandler+0x20c>
400052bc:	e1a02005 	mov	r2, r5
400052c0:	e88d4080 	stm	sp, {r7, lr}
400052c4:	e58d8008 	str	r8, [sp, #8]
400052c8:	e58da00c 	str	sl, [sp, #12]
400052cc:	e58d9010 	str	r9, [sp, #16]
400052d0:	e58db014 	str	fp, [sp, #20]
400052d4:	e58dc020 	str	ip, [sp, #32]
400052d8:	eb003832 	bl	400133a8 <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
400052dc:	e5d4304f 	ldrb	r3, [r4, #79]	; 0x4f
400052e0:	e3530052 	cmp	r3, #82	; 0x52
400052e4:	0a00001a 	beq	40005354 <I2CCmdHandler+0xe4>
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);

	}
	if(CmdType == 0)//I2C read
400052e8:	e3550000 	cmp	r5, #0
				I2CCMDArry[9] = buf[0];
				if(CmdDataLen == 2){
					I2CCMDArry[10] = buf[1];
				}
			}*/
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400052ec:	03e03000 	mvneq	r3, #0
400052f0:	05c43057 	strbeq	r3, [r4, #87]	; 0x57
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);

	}
	if(CmdType == 0)//I2C read
400052f4:	0a000001 	beq	40005300 <I2CCmdHandler+0x90>
			}*/
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
400052f8:	e3550001 	cmp	r5, #1
400052fc:	0a000001 	beq	40005308 <I2CCmdHandler+0x98>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
40005300:	e28dd034 	add	sp, sp, #52	; 0x34
40005304:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
40005308:	e3560002 	cmp	r6, #2
4000530c:	0a000023 	beq	400053a0 <I2CCmdHandler+0x130>
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005310:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005314:	e59f315c 	ldr	r3, [pc, #348]	; 40005478 <I2CCmdHandler+0x208>
40005318:	e20110fe 	and	r1, r1, #254	; 0xfe
4000531c:	e3510082 	cmp	r1, #130	; 0x82
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
40005320:	15d35050 	ldrbne	r5, [r3, #80]	; 0x50
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005324:	1a000002 	bne	40005334 <I2CCmdHandler+0xc4>
40005328:	e5d35050 	ldrb	r5, [r3, #80]	; 0x50
4000532c:	e3550030 	cmp	r5, #48	; 0x30
40005330:	0a00003b 	beq	40005424 <I2CCmdHandler+0x1b4>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
40005334:	e5d33051 	ldrb	r3, [r3, #81]	; 0x51
				}
				else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
40005338:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
4000533c:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
40005340:	e20200fe 	and	r0, r2, #254	; 0xfe
40005344:	e1a02005 	mov	r2, r5
40005348:	e58de000 	str	lr, [sp]
4000534c:	ebfffb8e 	bl	4000418c <SensorWrite2B>
40005350:	eaffffea 	b	40005300 <I2CCmdHandler+0x90>
	VdRingBuf *cmdQuptr = &cmdQu;
	uint8_t i;
	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
40005354:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005358:	e3530030 	cmp	r3, #48	; 0x30
4000535c:	1affffe1 	bne	400052e8 <I2CCmdHandler+0x78>
40005360:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005364:	e3530001 	cmp	r3, #1
40005368:	1affffde 	bne	400052e8 <I2CCmdHandler+0x78>
	{
		ROIMode = I2CCMDArry[9]&0x03; //set ROI mode based on the I2C data.
4000536c:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
40005370:	e59f0108 	ldr	r0, [pc, #264]	; 40005480 <I2CCmdHandler+0x210>
40005374:	e202e003 	and	lr, r2, #3
40005378:	e5c0e48c 	strb	lr, [r0, #1164]	; 0x48c
		if(is60Hz==CyFalse)
4000537c:	e594c058 	ldr	ip, [r4, #88]	; 0x58
			{
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);
40005380:	e59f10fc 	ldr	r1, [pc, #252]	; 40005484 <I2CCmdHandler+0x214>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
	{
		ROIMode = I2CCMDArry[9]&0x03; //set ROI mode based on the I2C data.
		if(is60Hz==CyFalse)
40005384:	e35c0000 	cmp	ip, #0
			{
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
40005388:	03822080 	orreq	r2, r2, #128	; 0x80
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);
4000538c:	e5d0348c 	ldrb	r3, [r0, #1164]	; 0x48c
	if((I2CCMDArry[3]==0x52) && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x01))
	{
		ROIMode = I2CCMDArry[9]&0x03; //set ROI mode based on the I2C data.
		if(is60Hz==CyFalse)
			{
				I2CCMDArry[9]=0x80|I2CCMDArry[9];
40005390:	05c42055 	strbeq	r2, [r4, #85]	; 0x55
			}
			CyU3PDebugPrint (4, "The I2C command setting value %x %x\r\n", I2CCMDArry[9], ROIMode);
40005394:	e3a00004 	mov	r0, #4
40005398:	eb003802 	bl	400133a8 <CyU3PDebugPrint>
4000539c:	eaffffd1 	b	400052e8 <I2CCmdHandler+0x78>
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			if(CmdRegLen == 2){
				for(i = 0; i<4; i++)
				SensorWrite2B2(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3], 0, I2CCMDArry[4], I2CCMDArry[9]);
400053a0:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
400053a4:	e5d4e055 	ldrb	lr, [r4, #85]	; 0x55
400053a8:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
400053ac:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
400053b0:	e3a02000 	mov	r2, #0
400053b4:	e20000fe 	and	r0, r0, #254	; 0xfe
400053b8:	e58de000 	str	lr, [sp]
400053bc:	ebfffba5 	bl	40004258 <SensorWrite2B2>
400053c0:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
400053c4:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
400053c8:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
400053cc:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
400053d0:	e20200fe 	and	r0, r2, #254	; 0xfe
400053d4:	e3a02000 	mov	r2, #0
400053d8:	e58dc000 	str	ip, [sp]
400053dc:	ebfffb9d 	bl	40004258 <SensorWrite2B2>
400053e0:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
400053e4:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
400053e8:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
400053ec:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
400053f0:	e3a02000 	mov	r2, #0
400053f4:	e20000fe 	and	r0, r0, #254	; 0xfe
400053f8:	e58dc000 	str	ip, [sp]
400053fc:	ebfffb95 	bl	40004258 <SensorWrite2B2>
40005400:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
40005404:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
40005408:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
4000540c:	e5d43050 	ldrb	r3, [r4, #80]	; 0x50
40005410:	e20200fe 	and	r0, r2, #254	; 0xfe
40005414:	e3a02000 	mov	r2, #0
40005418:	e58dc000 	str	ip, [sp]
4000541c:	ebfffb8d 	bl	40004258 <SensorWrite2B2>
40005420:	eaffffb6 	b	40005300 <I2CCmdHandler+0x90>
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
40005424:	e5d33051 	ldrb	r3, [r3, #81]	; 0x51
40005428:	e3530010 	cmp	r3, #16
4000542c:	1affffc1 	bne	40005338 <I2CCmdHandler+0xc8>
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
40005430:	e59f4050 	ldr	r4, [pc, #80]	; 40005488 <I2CCmdHandler+0x218>
40005434:	e3e01000 	mvn	r1, #0
40005438:	e594001c 	ldr	r0, [r4, #28]
4000543c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40005440:	eb0013f2 	bl	4000a410 <_txe_mutex_get>
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
40005444:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40005448:	e3a0c000 	mov	ip, #0
4000544c:	e1a02003 	mov	r2, r3
40005450:	e1a00004 	mov	r0, r4
40005454:	e3a01017 	mov	r1, #23
40005458:	e1a03005 	mov	r3, r5
4000545c:	e58dc000 	str	ip, [sp]
40005460:	e58dc004 	str	ip, [sp, #4]
40005464:	ebfff813 	bl	400034b8 <cmdSet>
					CyU3PMutexPut(cmdQuptr->ringMux);
40005468:	e594001c 	ldr	r0, [r4, #28]
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
4000546c:	e28dd034 	add	sp, sp, #52	; 0x34
40005470:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
			}
			else{
				if((I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
					CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
					cmdSet(cmdQuptr, 23, 0x10, 0x30, STOP, 0);
					CyU3PMutexPut(cmdQuptr->ringMux);
40005474:	ea00141a 	b	4000a4e4 <_txe_mutex_put>
40005478:	40030fb0 	.word	0x40030fb0
4000547c:	4001172c 	.word	0x4001172c
40005480:	40030000 	.word	0x40030000
40005484:	40011778 	.word	0x40011778
40005488:	40032ee4 	.word	0x40032ee4

4000548c <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
4000548c:	e92d4070 	push	{r4, r5, r6, lr}
40005490:	e1a06001 	mov	r6, r1
40005494:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005498:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
4000549c:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400054a0:	e3e01000 	mvn	r1, #0
400054a4:	e590001c 	ldr	r0, [r0, #28]
400054a8:	eb0013d8 	bl	4000a410 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400054ac:	e0650006 	rsb	r0, r5, r6
400054b0:	e270c000 	rsbs	ip, r0, #0
400054b4:	e0acc000 	adc	ip, ip, r0
400054b8:	e3a01014 	mov	r1, #20
400054bc:	e3a02027 	mov	r2, #39	; 0x27
400054c0:	e3a03030 	mov	r3, #48	; 0x30
400054c4:	e1a00004 	mov	r0, r4
400054c8:	e58dc000 	str	ip, [sp]
400054cc:	e58d5004 	str	r5, [sp, #4]
400054d0:	ebfff7f8 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400054d4:	e1560005 	cmp	r6, r5
400054d8:	03a06002 	moveq	r6, #2
400054dc:	11a06005 	movne	r6, r5
400054e0:	e1a00004 	mov	r0, r4
400054e4:	e3a01015 	mov	r1, #21
400054e8:	e3a02025 	mov	r2, #37	; 0x25
400054ec:	e3a03030 	mov	r3, #48	; 0x30
400054f0:	e58d6000 	str	r6, [sp]
400054f4:	e58d5004 	str	r5, [sp, #4]
400054f8:	ebfff7ee 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400054fc:	e594001c 	ldr	r0, [r4, #28]
}
40005500:	e28dd008 	add	sp, sp, #8
40005504:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005508:	ea0013f5 	b	4000a4e4 <_txe_mutex_put>

4000550c <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
4000550c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005510:	e350001f 	cmp	r0, #31
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
40005514:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005518:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000551c:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
40005520:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005524:	9a000023 	bls	400055b8 <ControlHandle+0xac>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005528:	e59f6ee4 	ldr	r6, [pc, #3812]	; 40006414 <ControlHandle+0xf08>
4000552c:	e0872087 	add	r2, r7, r7, lsl #1
40005530:	e1a02182 	lsl	r2, r2, #3
40005534:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
40005538:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
4000553c:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
40005540:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005544:	e59f3ecc 	ldr	r3, [pc, #3788]	; 40006418 <ControlHandle+0xf0c>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005548:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000554c:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005550:	e3550083 	cmp	r5, #131	; 0x83
40005554:	0a000022 	beq	400055e4 <ControlHandle+0xd8>
40005558:	9a00002b 	bls	4000560c <ControlHandle+0x100>
4000555c:	e3550085 	cmp	r5, #133	; 0x85
40005560:	0a000084 	beq	40005778 <ControlHandle+0x26c>
40005564:	3a000072 	bcc	40005734 <ControlHandle+0x228>
40005568:	e3550086 	cmp	r5, #134	; 0x86
4000556c:	0a0000bd 	beq	40005868 <ControlHandle+0x35c>
40005570:	e3550087 	cmp	r5, #135	; 0x87
40005574:	0a0000b1 	beq	40005840 <ControlHandle+0x334>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005578:	e3a00000 	mov	r0, #0
4000557c:	e3a01001 	mov	r1, #1
40005580:	e1a02000 	mov	r2, r0
40005584:	eb0062ef 	bl	4001e148 <CyU3PUsbStall>
			  break;
40005588:	e3a0e0ff 	mov	lr, #255	; 0xff
4000558c:	e1a0400e 	mov	r4, lr
40005590:	e1a0c00e 	mov	ip, lr
40005594:	e1a0300e 	mov	r3, lr
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005598:	e59f1e7c 	ldr	r1, [pc, #3708]	; 4000641c <ControlHandle+0xf10>
4000559c:	e1a02005 	mov	r2, r5
400055a0:	e3a00004 	mov	r0, #4
400055a4:	e58dc000 	str	ip, [sp]
400055a8:	e98d4010 	stmib	sp, {r4, lr}
400055ac:	eb00377d 	bl	400133a8 <CyU3PDebugPrint>
}
400055b0:	e28dd02c 	add	sp, sp, #44	; 0x2c
400055b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400055b8:	e59f6e54 	ldr	r6, [pc, #3668]	; 40006414 <ControlHandle+0xf08>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400055bc:	e59f3e54 	ldr	r3, [pc, #3668]	; 40006418 <ControlHandle+0xf0c>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400055c0:	e0805080 	add	r5, r0, r0, lsl #1
400055c4:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400055c8:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400055cc:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400055d0:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
400055d4:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
400055d8:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
400055dc:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400055e0:	1affffdc 	bne	40005558 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055e4:	e354001f 	cmp	r4, #31
400055e8:	9a0000bc 	bls	400058e0 <ControlHandle+0x3d4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
400055ec:	e0877087 	add	r7, r7, r7, lsl #1
400055f0:	e0866187 	add	r6, r6, r7, lsl #3
400055f4:	e59fae24 	ldr	sl, [pc, #3620]	; 40006420 <ControlHandle+0xf14>
400055f8:	e5d60005 	ldrb	r0, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
400055fc:	e5d6c006 	ldrb	ip, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005600:	e5ca005c 	strb	r0, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005604:	e5cac05d 	strb	ip, [sl, #93]	; 0x5d
40005608:	ea00000b 	b	4000563c <ControlHandle+0x130>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000560c:	e3550081 	cmp	r5, #129	; 0x81
40005610:	0a000064 	beq	400057a8 <ControlHandle+0x29c>
40005614:	9a000010 	bls	4000565c <ControlHandle+0x150>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
40005618:	e354001f 	cmp	r4, #31
4000561c:	9a0000a3 	bls	400058b0 <ControlHandle+0x3a4>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005620:	e0877087 	add	r7, r7, r7, lsl #1
40005624:	e0866187 	add	r6, r6, r7, lsl #3
40005628:	e59fadf0 	ldr	sl, [pc, #3568]	; 40006420 <ControlHandle+0xf14>
4000562c:	e5d62003 	ldrb	r2, [r6, #3]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005630:	e5d6e004 	ldrb	lr, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005634:	e5ca205c 	strb	r2, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005638:	e5cae05d 	strb	lr, [sl, #93]	; 0x5d
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000563c:	e1a00008 	mov	r0, r8
40005640:	e59f1ddc 	ldr	r1, [pc, #3548]	; 40006424 <ControlHandle+0xf18>
40005644:	eb006094 	bl	4001d89c <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005648:	e3a0e0ff 	mov	lr, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000564c:	e5da405c 	ldrb	r4, [sl, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40005650:	e1a0c00e 	mov	ip, lr
40005654:	e1a0300e 	mov	r3, lr
40005658:	eaffffce 	b	40005598 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000565c:	e3550001 	cmp	r5, #1
40005660:	1affffc4 	bne	40005578 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40005664:	e59f1db4 	ldr	r1, [pc, #3508]	; 40006420 <ControlHandle+0xf14>
40005668:	e28d2026 	add	r2, sp, #38	; 0x26
4000566c:	e3a00020 	mov	r0, #32
40005670:	e281105c 	add	r1, r1, #92	; 0x5c
40005674:	eb005e1a 	bl	4001cee4 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005678:	e2502000 	subs	r2, r0, #0
4000567c:	1a000301 	bne	40006288 <ControlHandle+0xd7c>
			   {
				  Data0 = glEp0Buffer[0];
40005680:	e59fed98 	ldr	lr, [pc, #3480]	; 40006420 <ControlHandle+0xf14>
40005684:	e5de305c 	ldrb	r3, [lr, #92]	; 0x5c
				  Data1 = glEp0Buffer[1];
40005688:	e59fed90 	ldr	lr, [pc, #3472]	; 40006420 <ControlHandle+0xf14>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
4000568c:	e58d3018 	str	r3, [sp, #24]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005690:	e5de005e 	ldrb	r0, [lr, #94]	; 0x5e
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
40005694:	e5dec05d 	ldrb	ip, [lr, #93]	; 0x5d
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005698:	e58d001c 	str	r0, [sp, #28]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
4000569c:	e3540022 	cmp	r4, #34	; 0x22
400056a0:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
400056a4:	ea0002c9 	b	400061d0 <ControlHandle+0xcc4>
400056a8:	40006238 	.word	0x40006238
400056ac:	40006168 	.word	0x40006168
400056b0:	400061d0 	.word	0x400061d0
400056b4:	400061d0 	.word	0x400061d0
400056b8:	40006118 	.word	0x40006118
400056bc:	40005fd4 	.word	0x40005fd4
400056c0:	40005f58 	.word	0x40005f58
400056c4:	400061d0 	.word	0x400061d0
400056c8:	400061d0 	.word	0x400061d0
400056cc:	400061d0 	.word	0x400061d0
400056d0:	400061d0 	.word	0x400061d0
400056d4:	40005ed0 	.word	0x40005ed0
400056d8:	400061d0 	.word	0x400061d0
400056dc:	400061d0 	.word	0x400061d0
400056e0:	400061d0 	.word	0x400061d0
400056e4:	400061d0 	.word	0x400061d0
400056e8:	40005dd8 	.word	0x40005dd8
400056ec:	400061d0 	.word	0x400061d0
400056f0:	400061d0 	.word	0x400061d0
400056f4:	400061d0 	.word	0x400061d0
400056f8:	400061d0 	.word	0x400061d0
400056fc:	400061d0 	.word	0x400061d0
40005700:	400061d0 	.word	0x400061d0
40005704:	400061d0 	.word	0x400061d0
40005708:	400061d0 	.word	0x400061d0
4000570c:	40005d1c 	.word	0x40005d1c
40005710:	400061d0 	.word	0x400061d0
40005714:	400061d0 	.word	0x400061d0
40005718:	40005e60 	.word	0x40005e60
4000571c:	400061d0 	.word	0x400061d0
40005720:	40005cc0 	.word	0x40005cc0
40005724:	40005c3c 	.word	0x40005c3c
40005728:	40005ba4 	.word	0x40005ba4
4000572c:	40005b8c 	.word	0x40005b8c
40005730:	40005b28 	.word	0x40005b28
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005734:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005738:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000573c:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005740:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005744:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005748:	859facd0 	ldrhi	sl, [pc, #3280]	; 40006420 <ControlHandle+0xf14>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000574c:	959faccc 	ldrls	sl, [pc, #3276]	; 40006420 <ControlHandle+0xf14>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005750:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
40005754:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005758:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
4000575c:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
40005760:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005764:	e5ca105c 	strb	r1, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
40005768:	e5ca205d 	strb	r2, [sl, #93]	; 0x5d
			  glEp0Buffer[2] = 0;
4000576c:	e5ca305e 	strb	r3, [sl, #94]	; 0x5e
			  glEp0Buffer[3] = 0;
40005770:	e5ca305f 	strb	r3, [sl, #95]	; 0x5f
40005774:	eaffffb0 	b	4000563c <ControlHandle+0x130>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005778:	e59f4ca0 	ldr	r4, [pc, #3232]	; 40006420 <ControlHandle+0xf14>
			  glEp0Buffer[1] = 0;
4000577c:	e3a0c000 	mov	ip, #0
40005780:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005784:	e284105c 	add	r1, r4, #92	; 0x5c
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005788:	e5c4805c 	strb	r8, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000578c:	e3a00002 	mov	r0, #2
40005790:	eb006041 	bl	4001d89c <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005794:	e3a0e0ff 	mov	lr, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005798:	e5d4405c 	ldrb	r4, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
4000579c:	e1a0c00e 	mov	ip, lr
400057a0:	e1a0300e 	mov	r3, lr
400057a4:	eaffff7b 	b	40005598 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
400057a8:	e2441001 	sub	r1, r4, #1
400057ac:	e3510021 	cmp	r1, #33	; 0x21
400057b0:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
400057b4:	ea0000d2 	b	40005b04 <ControlHandle+0x5f8>
400057b8:	40005ad8 	.word	0x40005ad8
400057bc:	40005b04 	.word	0x40005b04
400057c0:	40005b04 	.word	0x40005b04
400057c4:	40005b04 	.word	0x40005b04
400057c8:	40005ab8 	.word	0x40005ab8
400057cc:	40005b04 	.word	0x40005b04
400057d0:	40005b04 	.word	0x40005b04
400057d4:	40005b04 	.word	0x40005b04
400057d8:	40005b04 	.word	0x40005b04
400057dc:	40005b04 	.word	0x40005b04
400057e0:	40005a94 	.word	0x40005a94
400057e4:	40005b04 	.word	0x40005b04
400057e8:	40005b04 	.word	0x40005b04
400057ec:	40005b04 	.word	0x40005b04
400057f0:	40005b04 	.word	0x40005b04
400057f4:	40005b04 	.word	0x40005b04
400057f8:	40005b04 	.word	0x40005b04
400057fc:	40005b04 	.word	0x40005b04
40005800:	40005b04 	.word	0x40005b04
40005804:	40005b04 	.word	0x40005b04
40005808:	40005b04 	.word	0x40005b04
4000580c:	40005b04 	.word	0x40005b04
40005810:	40005b04 	.word	0x40005b04
40005814:	40005b04 	.word	0x40005b04
40005818:	40005a58 	.word	0x40005a58
4000581c:	40005b04 	.word	0x40005b04
40005820:	40005b04 	.word	0x40005b04
40005824:	40005a30 	.word	0x40005a30
40005828:	40005b04 	.word	0x40005b04
4000582c:	40005b04 	.word	0x40005b04
40005830:	40005994 	.word	0x40005994
40005834:	4000595c 	.word	0x4000595c
40005838:	4000595c 	.word	0x4000595c
4000583c:	4000595c 	.word	0x4000595c
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005840:	e354001f 	cmp	r4, #31
40005844:	9a000031 	bls	40005910 <ControlHandle+0x404>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
40005848:	e0877087 	add	r7, r7, r7, lsl #1
4000584c:	e0866187 	add	r6, r6, r7, lsl #3
40005850:	e59fabc8 	ldr	sl, [pc, #3016]	; 40006420 <ControlHandle+0xf14>
40005854:	e5d6100b 	ldrb	r1, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005858:	e5d6400c 	ldrb	r4, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
4000585c:	e5ca105c 	strb	r1, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005860:	e5ca405d 	strb	r4, [sl, #93]	; 0x5d
40005864:	eaffff74 	b	4000563c <ControlHandle+0x130>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005868:	e354001f 	cmp	r4, #31
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
4000586c:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005870:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005874:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005878:	80866187 	addhi	r6, r6, r7, lsl #3
4000587c:	859f8b9c 	ldrhi	r8, [pc, #2972]	; 40006420 <ControlHandle+0xf14>
40005880:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005884:	959f8b94 	ldrls	r8, [pc, #2964]	; 40006420 <ControlHandle+0xf14>
40005888:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000588c:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005890:	e5c8305c 	strb	r3, [r8, #92]	; 0x5c
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005894:	e59f1b88 	ldr	r1, [pc, #2952]	; 40006424 <ControlHandle+0xf18>
40005898:	eb005fff 	bl	4001d89c <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000589c:	e3a0e0ff 	mov	lr, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400058a0:	e5d8405c 	ldrb	r4, [r8, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400058a4:	e1a0c00e 	mov	ip, lr
400058a8:	e1a0300e 	mov	r3, lr
400058ac:	eaffff39 	b	40005598 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
400058b0:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
400058b4:	10844084 	addne	r4, r4, r4, lsl #1
400058b8:	10866184 	addne	r6, r6, r4, lsl #3
400058bc:	159fab5c 	ldrne	sl, [pc, #2908]	; 40006420 <ControlHandle+0xf14>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
400058c0:	059fab58 	ldreq	sl, [pc, #2904]	; 40006420 <ControlHandle+0xf14>
400058c4:	059f3b5c 	ldreq	r3, [pc, #2908]	; 40006428 <ControlHandle+0xf1c>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
400058c8:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
400058cc:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
400058d0:	058a305c 	streq	r3, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
400058d4:	15ca205c 	strbne	r2, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
400058d8:	15ca305d 	strbne	r3, [sl, #93]	; 0x5d
400058dc:	eaffff56 	b	4000563c <ControlHandle+0x130>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
400058e0:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400058e4:	10844084 	addne	r4, r4, r4, lsl #1
400058e8:	10866184 	addne	r6, r6, r4, lsl #3
400058ec:	159fab2c 	ldrne	sl, [pc, #2860]	; 40006420 <ControlHandle+0xf14>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
400058f0:	059fab28 	ldreq	sl, [pc, #2856]	; 40006420 <ControlHandle+0xf14>
400058f4:	059f3b30 	ldreq	r3, [pc, #2864]	; 4000642c <ControlHandle+0xf20>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400058f8:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
400058fc:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005900:	058a305c 	streq	r3, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005904:	15ca205c 	strbne	r2, [sl, #92]	; 0x5c
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005908:	15ca305d 	strbne	r3, [sl, #93]	; 0x5d
4000590c:	eaffff4a 	b	4000563c <ControlHandle+0x130>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005910:	e354000b 	cmp	r4, #11
40005914:	0a000007 	beq	40005938 <ControlHandle+0x42c>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005918:	e084a084 	add	sl, r4, r4, lsl #1
4000591c:	e086618a 	add	r6, r6, sl, lsl #3
40005920:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
40005924:	e59faaf4 	ldr	sl, [pc, #2804]	; 40006420 <ControlHandle+0xf14>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005928:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
4000592c:	e5ca305c 	strb	r3, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005930:	e5ca005d 	strb	r0, [sl, #93]	; 0x5d
40005934:	eaffff40 	b	4000563c <ControlHandle+0x130>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005938:	e59faae0 	ldr	sl, [pc, #2784]	; 40006420 <ControlHandle+0xf14>
4000593c:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005940:	e5d62294 	ldrb	r2, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
40005944:	e3a0e000 	mov	lr, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005948:	e5cac05c 	strb	ip, [sl, #92]	; 0x5c
				  glEp0Buffer[1] = 0;
4000594c:	e5cae05d 	strb	lr, [sl, #93]	; 0x5d
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005950:	e5ca205e 	strb	r2, [sl, #94]	; 0x5e
				  glEp0Buffer[3] = 0;
40005954:	e5cae05f 	strb	lr, [sl, #95]	; 0x5f
40005958:	eaffff37 	b	4000563c <ControlHandle+0x130>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
4000595c:	e0877087 	add	r7, r7, r7, lsl #1
40005960:	e0866187 	add	r6, r6, r7, lsl #3
40005964:	e59feab4 	ldr	lr, [pc, #2740]	; 40006420 <ControlHandle+0xf14>
40005968:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
4000596c:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID0:
			 	 	 case Ext1BLCWeightCtlID1:
			 	 	 case Ext1BLCGridCtlID2:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
40005970:	e5ce405c 	strb	r4, [lr, #92]	; 0x5c
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
40005974:	e5ce605d 	strb	r6, [lr, #93]	; 0x5d
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005978:	e1a00008 	mov	r0, r8
4000597c:	e59f1aa0 	ldr	r1, [pc, #2720]	; 40006424 <ControlHandle+0xf18>
40005980:	eb005fc5 	bl	4001d89c <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005984:	e3a0c0ff 	mov	ip, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005988:	e1a0e006 	mov	lr, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
4000598c:	e1a0300c 	mov	r3, ip
40005990:	eaffff00 	b	40005598 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005994:	e3580000 	cmp	r8, #0
40005998:	0a000280 	beq	400063a0 <ControlHandle+0xe94>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
4000599c:	e1a0e128 	lsr	lr, r8, #2
400059a0:	e35e0000 	cmp	lr, #0
400059a4:	13580003 	cmpne	r8, #3
400059a8:	83a02000 	movhi	r2, #0
400059ac:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400059b0:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400059b4:	9a000293 	bls	40006408 <ControlHandle+0xefc>
400059b8:	e59f1a64 	ldr	r1, [pc, #2660]	; 40006424 <ControlHandle+0xf18>
400059bc:	e2410010 	sub	r0, r1, #16
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
400059c0:	e4904004 	ldr	r4, [r0], #4
400059c4:	e282c001 	add	ip, r2, #1
400059c8:	e20c20ff 	and	r2, ip, #255	; 0xff
400059cc:	e15e0002 	cmp	lr, r2
400059d0:	e4814004 	str	r4, [r1], #4
400059d4:	8afffff9 	bhi	400059c0 <ControlHandle+0x4b4>
400059d8:	e1580003 	cmp	r8, r3
400059dc:	159f0a3c 	ldrne	r0, [pc, #2620]	; 40006420 <ControlHandle+0xf14>
400059e0:	0a00026e 	beq	400063a0 <ControlHandle+0xe94>
400059e4:	e080e003 	add	lr, r0, r3
400059e8:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400059ec:	e2836001 	add	r6, r3, #1
400059f0:	e20630ff 	and	r3, r6, #255	; 0xff
400059f4:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
400059f8:	e5ce105c 	strb	r1, [lr, #92]	; 0x5c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400059fc:	8afffff8 	bhi	400059e4 <ControlHandle+0x4d8>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005a00:	e5d02057 	ldrb	r2, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005a04:	e59f3a14 	ldr	r3, [pc, #2580]	; 40006420 <ControlHandle+0xf14>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005a08:	e35200ff 	cmp	r2, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005a0c:	e5d04065 	ldrb	r4, [r0, #101]	; 0x65
			 		 sendData1 = glEp0Buffer[10];
40005a10:	e5d06066 	ldrb	r6, [r0, #102]	; 0x66
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005a14:	0affffd7 	beq	40005978 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
40005a18:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
40005a1c:	e59f1a0c 	ldr	r1, [pc, #2572]	; 40006430 <ControlHandle+0xf24>
40005a20:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
40005a24:	e3a00004 	mov	r0, #4
40005a28:	eb00365e 	bl	400133a8 <CyU3PDebugPrint>
40005a2c:	eaffffd1 	b	40005978 <ControlHandle+0x46c>
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
40005a30:	e59f79e8 	ldr	r7, [pc, #2536]	; 40006420 <ControlHandle+0xf14>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
40005a34:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
40005a38:	e5d7207c 	ldrb	r2, [r7, #124]	; 0x7c
40005a3c:	e3520001 	cmp	r2, #1
40005a40:	0a000218 	beq	400062a8 <ControlHandle+0xd9c>
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
40005a44:	e3a00000 	mov	r0, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
40005a48:	e5c7405c 	strb	r4, [r7, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005a4c:	e5c7005d 	strb	r0, [r7, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005a50:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005a54:	eaffffc7 	b	40005978 <ControlHandle+0x46c>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005a58:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
40005a5c:	e59fc9bc 	ldr	ip, [pc, #2492]	; 40006420 <ControlHandle+0xf14>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005a60:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
40005a64:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005a68:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005a6c:	e5cce05d 	strb	lr, [ip, #93]	; 0x5d
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005a70:	e5cc605e 	strb	r6, [ip, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
40005a74:	e5cce05f 	strb	lr, [ip, #95]	; 0x5f
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005a78:	e59f19b4 	ldr	r1, [pc, #2484]	; 40006434 <ControlHandle+0xf28>
40005a7c:	e1a02004 	mov	r2, r4
40005a80:	e1a0300e 	mov	r3, lr
40005a84:	e3a00004 	mov	r0, #4
40005a88:	e88d4040 	stm	sp, {r6, lr}
40005a8c:	eb003645 	bl	400133a8 <CyU3PDebugPrint>
					 break;
40005a90:	eaffffb8 	b	40005978 <ControlHandle+0x46c>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005a94:	e59fc984 	ldr	ip, [pc, #2436]	; 40006420 <ControlHandle+0xf14>
40005a98:	e5d64490 	ldrb	r4, [r6, #1168]	; 0x490
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005a9c:	e5d66492 	ldrb	r6, [r6, #1170]	; 0x492
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005aa0:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005aa4:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005aa8:	e5cce05d 	strb	lr, [ip, #93]	; 0x5d
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005aac:	e5cc605e 	strb	r6, [ip, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
40005ab0:	e5cce05f 	strb	lr, [ip, #95]	; 0x5f
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005ab4:	eaffffaf 	b	40005978 <ControlHandle+0x46c>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005ab8:	e5d62205 	ldrb	r2, [r6, #517]	; 0x205
40005abc:	e59f695c 	ldr	r6, [pc, #2396]	; 40006420 <ControlHandle+0xf14>
40005ac0:	e2224080 	eor	r4, r2, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005ac4:	e3a01000 	mov	r1, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005ac8:	e5c6405c 	strb	r4, [r6, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005acc:	e5c6105d 	strb	r1, [r6, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005ad0:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005ad4:	eaffffa7 	b	40005978 <ControlHandle+0x46c>
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 */
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005ad8:	e5d641a5 	ldrb	r4, [r6, #421]	; 0x1a5
					  if(Data0&0x80){
						  Data0 = ~Data0;
					  }else{
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
40005adc:	e59f393c 	ldr	r3, [pc, #2364]	; 40006420 <ControlHandle+0xf14>
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 */
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					  if(Data0&0x80){
40005ae0:	e3140080 	tst	r4, #128	; 0x80
						  Data0 = ~Data0;
40005ae4:	11e04004 	mvnne	r4, r4
					  }else{
						  Data0 = Data0 + 0x80;
40005ae8:	02444080 	subeq	r4, r4, #128	; 0x80
40005aec:	e20440ff 	and	r4, r4, #255	; 0xff
					  }
					 glEp0Buffer[0] = Data0;
					 glEp0Buffer[1] = 0;
40005af0:	e3a00000 	mov	r0, #0
					  if(Data0&0x80){
						  Data0 = ~Data0;
					  }else{
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
40005af4:	e5c3405c 	strb	r4, [r3, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005af8:	e5c3005d 	strb	r0, [r3, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005afc:	e3a060ff 	mov	r6, #255	; 0xff
						  Data0 = Data0 + 0x80;
					  }
					 glEp0Buffer[0] = Data0;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
			 		 break;
40005b00:	eaffff9c 	b	40005978 <ControlHandle+0x46c>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005b04:	e0841084 	add	r1, r4, r4, lsl #1
40005b08:	e0864181 	add	r4, r6, r1, lsl #3
40005b0c:	e59f390c 	ldr	r3, [pc, #2316]	; 40006420 <ControlHandle+0xf14>
40005b10:	e5d4418d 	ldrb	r4, [r4, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005b14:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005b18:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005b1c:	e5c3405c 	strb	r4, [r3, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
40005b20:	e5c3005d 	strb	r0, [r3, #93]	; 0x5d
					 sendData = glEp0Buffer[0];
					 break;
40005b24:	eaffff93 	b	40005978 <ControlHandle+0x46c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b28:	e59f4908 	ldr	r4, [pc, #2312]	; 40006438 <ControlHandle+0xf2c>
40005b2c:	e3e01000 	mvn	r1, #0
40005b30:	e594001c 	ldr	r0, [r4, #28]
40005b34:	eb001235 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005b38:	e3a01022 	mov	r1, #34	; 0x22
40005b3c:	e59dc018 	ldr	ip, [sp, #24]
40005b40:	e3a0e000 	mov	lr, #0
40005b44:	e1a0300a 	mov	r3, sl
40005b48:	e1a02009 	mov	r2, r9
40005b4c:	e1a00004 	mov	r0, r4
40005b50:	e88d5000 	stm	sp, {ip, lr}
40005b54:	ebfff657 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b58:	e594001c 	ldr	r0, [r4, #28]
40005b5c:	eb001260 	bl	4000a4e4 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005b60:	e59d1018 	ldr	r1, [sp, #24]
40005b64:	e0877087 	add	r7, r7, r7, lsl #1
40005b68:	e0866187 	add	r6, r6, r7, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b6c:	e3a03001 	mov	r3, #1
							 break;
40005b70:	e3a0e0ff 	mov	lr, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b74:	e5c63010 	strb	r3, [r6, #16]
						 case Ext1BLCGridCtlID2:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005b78:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005b7c:	e1a03001 	mov	r3, r1
40005b80:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005b84:	e1a0400e 	mov	r4, lr
40005b88:	eafffe82 	b	40005598 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID1: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b8c:	e59f48a4 	ldr	r4, [pc, #2212]	; 40006438 <ControlHandle+0xf2c>
40005b90:	e3e01000 	mvn	r1, #0
40005b94:	e594001c 	ldr	r0, [r4, #28]
40005b98:	eb00121c 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005b9c:	e3a01021 	mov	r1, #33	; 0x21
40005ba0:	eaffffe5 	b	40005b3c <ControlHandle+0x630>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ba4:	e59f488c 	ldr	r4, [pc, #2188]	; 40006438 <ControlHandle+0xf2c>
40005ba8:	e3e01000 	mvn	r1, #0
40005bac:	e594001c 	ldr	r0, [r4, #28]
40005bb0:	e58dc014 	str	ip, [sp, #20]
40005bb4:	eb001215 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005bb8:	e59d2018 	ldr	r2, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005bbc:	e3a0e000 	mov	lr, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005bc0:	e202807f 	and	r8, r2, #127	; 0x7f
40005bc4:	e58d801c 	str	r8, [sp, #28]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005bc8:	e59dc01c 	ldr	ip, [sp, #28]
40005bcc:	e3a01020 	mov	r1, #32
40005bd0:	e1a02009 	mov	r2, r9
40005bd4:	e1a0300a 	mov	r3, sl
40005bd8:	e1a00004 	mov	r0, r4
40005bdc:	e88d5000 	stm	sp, {ip, lr}
40005be0:	ebfff634 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005be4:	e59dc014 	ldr	ip, [sp, #20]
40005be8:	e1a0300a 	mov	r3, sl
40005bec:	e3a08001 	mov	r8, #1
40005bf0:	e3a01020 	mov	r1, #32
40005bf4:	e1a0200b 	mov	r2, fp
40005bf8:	e1a00004 	mov	r0, r4
40005bfc:	e58dc000 	str	ip, [sp]
40005c00:	e58d8004 	str	r8, [sp, #4]
40005c04:	ebfff62b 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c08:	e594001c 	ldr	r0, [r4, #28]
40005c0c:	eb001234 	bl	4000a4e4 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005c10:	e59d001c 	ldr	r0, [sp, #28]
40005c14:	e0877087 	add	r7, r7, r7, lsl #1
40005c18:	e0866187 	add	r6, r6, r7, lsl #3
40005c1c:	e5c6000d 	strb	r0, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005c20:	e59dc014 	ldr	ip, [sp, #20]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005c24:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005c28:	e5c6c00e 	strb	ip, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005c2c:	e5c68010 	strb	r8, [r6, #16]
40005c30:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005c34:	e1a0400e 	mov	r4, lr
40005c38:	eafffe56 	b	40005598 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c3c:	e3580000 	cmp	r8, #0
40005c40:	0a000018 	beq	40005ca8 <ControlHandle+0x79c>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005c44:	e1a0e128 	lsr	lr, r8, #2
40005c48:	e35e0000 	cmp	lr, #0
40005c4c:	13580003 	cmpne	r8, #3
40005c50:	83a02000 	movhi	r2, #0
40005c54:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005c58:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005c5c:	9a0001e7 	bls	40006400 <ControlHandle+0xef4>
40005c60:	e59f17d4 	ldr	r1, [pc, #2004]	; 4000643c <ControlHandle+0xf30>
40005c64:	e2810010 	add	r0, r1, #16
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005c68:	e4904004 	ldr	r4, [r0], #4
40005c6c:	e2822001 	add	r2, r2, #1
40005c70:	e20220ff 	and	r2, r2, #255	; 0xff
40005c74:	e15e0002 	cmp	lr, r2
40005c78:	e4814004 	str	r4, [r1], #4
40005c7c:	8afffff9 	bhi	40005c68 <ControlHandle+0x75c>
40005c80:	e1580003 	cmp	r8, r3
40005c84:	0a000007 	beq	40005ca8 <ControlHandle+0x79c>
40005c88:	e59fc790 	ldr	ip, [pc, #1936]	; 40006420 <ControlHandle+0xf14>
40005c8c:	e08ce003 	add	lr, ip, r3
40005c90:	e5de105c 	ldrb	r1, [lr, #92]	; 0x5c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005c94:	e2833001 	add	r3, r3, #1
40005c98:	e20330ff 	and	r3, r3, #255	; 0xff
40005c9c:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005ca0:	e5ce104c 	strb	r1, [lr, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005ca4:	8afffff7 	bhi	40005c88 <ControlHandle+0x77c>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005ca8:	ebfffd70 	bl	40005270 <I2CCmdHandler>
							 break;
40005cac:	e3a0e0ff 	mov	lr, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005cb0:	e59d3018 	ldr	r3, [sp, #24]
40005cb4:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005cb8:	e1a0400e 	mov	r4, lr
40005cbc:	eafffe35 	b	40005598 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cc0:	e59f4770 	ldr	r4, [pc, #1904]	; 40006438 <ControlHandle+0xf2c>
40005cc4:	e3e01000 	mvn	r1, #0
40005cc8:	e594001c 	ldr	r0, [r4, #28]
40005ccc:	eb0011cf 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005cd0:	e59d0018 	ldr	r0, [sp, #24]
40005cd4:	e3a0e000 	mov	lr, #0
40005cd8:	e270c001 	rsbs	ip, r0, #1
40005cdc:	33a0c000 	movcc	ip, #0
40005ce0:	e1a0300a 	mov	r3, sl
40005ce4:	e3a0101e 	mov	r1, #30
40005ce8:	e1a02009 	mov	r2, r9
40005cec:	e1a00004 	mov	r0, r4
40005cf0:	e88d5000 	stm	sp, {ip, lr}
40005cf4:	ebfff5ef 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005cf8:	e594001c 	ldr	r0, [r4, #28]
40005cfc:	eb0011f8 	bl	4000a4e4 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d00:	e3a03001 	mov	r3, #1
							 break;
40005d04:	e3a0e0ff 	mov	lr, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d08:	e5c63460 	strb	r3, [r6, #1120]	; 0x460
40005d0c:	e59dc01c 	ldr	ip, [sp, #28]
40005d10:	e59d3018 	ldr	r3, [sp, #24]
							 break;
40005d14:	e1a0400e 	mov	r4, lr
40005d18:	eafffe1e 	b	40005598 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d1c:	e59f4714 	ldr	r4, [pc, #1812]	; 40006438 <ControlHandle+0xf2c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005d20:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005d24:	e59d301c 	ldr	r3, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d28:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d2c:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005d30:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d34:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d38:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d3c:	eb0011b3 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005d40:	e59dc018 	ldr	ip, [sp, #24]
40005d44:	e1a00004 	mov	r0, r4
40005d48:	e58dc000 	str	ip, [sp]
40005d4c:	e3a01019 	mov	r1, #25
40005d50:	e3a0c000 	mov	ip, #0
40005d54:	e1a02009 	mov	r2, r9
40005d58:	e1a0300a 	mov	r3, sl
40005d5c:	e58dc004 	str	ip, [sp, #4]
40005d60:	ebfff5d4 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005d64:	e59d0018 	ldr	r0, [sp, #24]
40005d68:	e3500000 	cmp	r0, #0
40005d6c:	0a000007 	beq	40005d90 <ControlHandle+0x884>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005d70:	e59de01c 	ldr	lr, [sp, #28]
40005d74:	e1a00004 	mov	r0, r4
40005d78:	e3a01019 	mov	r1, #25
40005d7c:	e1a0200b 	mov	r2, fp
40005d80:	e1a0300a 	mov	r3, sl
40005d84:	e58de000 	str	lr, [sp]
40005d88:	e58d7004 	str	r7, [sp, #4]
40005d8c:	ebfff5c9 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d90:	e594001c 	ldr	r0, [r4, #28]
40005d94:	eb0011d2 	bl	4000a4e4 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005d98:	e59f0680 	ldr	r0, [pc, #1664]	; 40006420 <ControlHandle+0xf14>
40005d9c:	e59f167c 	ldr	r1, [pc, #1660]	; 40006420 <ControlHandle+0xf14>
40005da0:	e5d0c05e 	ldrb	ip, [r0, #94]	; 0x5e
40005da4:	e5d1405f 	ldrb	r4, [r1, #95]	; 0x5f
40005da8:	e5d0305d 	ldrb	r3, [r0, #93]	; 0x5d
40005dac:	e5d0205c 	ldrb	r2, [r0, #92]	; 0x5c
40005db0:	e59f1688 	ldr	r1, [pc, #1672]	; 40006440 <ControlHandle+0xf34>
40005db4:	e3a00004 	mov	r0, #4
40005db8:	e58dc000 	str	ip, [sp]
40005dbc:	e58d4004 	str	r4, [sp, #4]
40005dc0:	eb003578 	bl	400133a8 <CyU3PDebugPrint>
							 break;
40005dc4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005dc8:	e59d3018 	ldr	r3, [sp, #24]
40005dcc:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005dd0:	e1a0400e 	mov	r4, lr
40005dd4:	eafffdef 	b	40005598 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005dd8:	e2531000 	subs	r1, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005ddc:	e5c6130d 	strb	r1, [r6, #781]	; 0x30d
40005de0:	e59f362c 	ldr	r3, [pc, #1580]	; 40006414 <ControlHandle+0xf08>
							 if(Data0 == 0){//set exposure mode auto
40005de4:	1a00013c 	bne	400062dc <ControlHandle+0xdd0>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005de8:	e5d324b9 	ldrb	r2, [r3, #1209]	; 0x4b9
40005dec:	e3520002 	cmp	r2, #2
40005df0:	13520008 	cmpne	r2, #8
40005df4:	0a000003 	beq	40005e08 <ControlHandle+0x8fc>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005df8:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005dfc:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005e00:	13a02002 	movne	r2, #2
40005e04:	e5c324b9 	strb	r2, [r3, #1209]	; 0x4b9
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e08:	e59f4628 	ldr	r4, [pc, #1576]	; 40006438 <ControlHandle+0xf2c>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e0c:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e10:	e3e01000 	mvn	r1, #0
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e14:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e18:	e594001c 	ldr	r0, [r4, #28]
40005e1c:	eb00117b 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e20:	e59dc018 	ldr	ip, [sp, #24]
40005e24:	e3a01010 	mov	r1, #16
40005e28:	e58dc000 	str	ip, [sp]
40005e2c:	e1a02009 	mov	r2, r9
40005e30:	e1a0300a 	mov	r3, sl
40005e34:	e1a00004 	mov	r0, r4
40005e38:	e3a0c000 	mov	ip, #0
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e3c:	e58dc004 	str	ip, [sp, #4]
40005e40:	ebfff59c 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e44:	e594001c 	ldr	r0, [r4, #28]
40005e48:	eb0011a5 	bl	4000a4e4 <_txe_mutex_put>

					 		 break;
40005e4c:	e3a0e0ff 	mov	lr, #255	; 0xff
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e50:	e59d3018 	ldr	r3, [sp, #24]
40005e54:	e59dc01c 	ldr	ip, [sp, #28]

					 		 break;
40005e58:	e1a0400e 	mov	r4, lr
40005e5c:	eafffdcd 	b	40005598 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
40005e60:	e3530003 	cmp	r3, #3
								 CamMode = 0; //set 1080p flag
40005e64:	959f25b4 	ldrls	r2, [pc, #1460]	; 40006420 <ControlHandle+0xf14>
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e68:	859fe5b0 	ldrhi	lr, [pc, #1456]	; 40006420 <ControlHandle+0xf14>
40005e6c:	e1a04003 	mov	r4, r3
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005e70:	93a03000 	movls	r3, #0
40005e74:	95c2307c 	strbls	r3, [r2, #124]	; 0x7c
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e78:	83a02001 	movhi	r2, #1
40005e7c:	959d2018 	ldrls	r2, [sp, #24]
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtCamMCtlID12:
							 dataIdx = 0;
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
40005e80:	91a03004 	movls	r3, r4
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
40005e84:	85ce207c 	strbhi	r2, [lr, #124]	; 0x7c
40005e88:	81a02004 	movhi	r2, r4
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e8c:	e59f45a4 	ldr	r4, [pc, #1444]	; 40006438 <ControlHandle+0xf2c>
							 if(Data0 <= 3){
								 CamMode = 0; //set 1080p flag
								 Data1 = Data0;
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
40005e90:	82433004 	subhi	r3, r3, #4
							 }
							 CtrlParArry[CtrlID][13] = Data0;
40005e94:	e5c6242d 	strb	r2, [r6, #1069]	; 0x42d
							 CtrlParArry[BLCIndex][13] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e98:	e3a02001 	mov	r2, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e9c:	e3e01000 	mvn	r1, #0
							 }else{
								 CamMode = 1; //set 720p flag
								 Data1 = Data0-4;
							 }
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[BLCIndex][13] = Data1;
40005ea0:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ea4:	e5c62430 	strb	r2, [r6, #1072]	; 0x430
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ea8:	e594001c 	ldr	r0, [r4, #28]
40005eac:	eb001157 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005eb0:	e59dc018 	ldr	ip, [sp, #24]
40005eb4:	e3a0101c 	mov	r1, #28
40005eb8:	e58dc000 	str	ip, [sp]
40005ebc:	e1a02009 	mov	r2, r9
40005ec0:	e1a0300a 	mov	r3, sl
40005ec4:	e1a00004 	mov	r0, r4
40005ec8:	e3a0c000 	mov	ip, #0
40005ecc:	eaffffda 	b	40005e3c <ControlHandle+0x930>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ed0:	e59f4560 	ldr	r4, [pc, #1376]	; 40006438 <ControlHandle+0xf2c>
40005ed4:	e3e01000 	mvn	r1, #0
40005ed8:	e594001c 	ldr	r0, [r4, #28]
40005edc:	eb00114b 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ee0:	e59dc018 	ldr	ip, [sp, #24]
40005ee4:	e3a0100b 	mov	r1, #11
40005ee8:	e1a02009 	mov	r2, r9
40005eec:	e1a0300a 	mov	r3, sl
40005ef0:	e1a00004 	mov	r0, r4
40005ef4:	e58dc000 	str	ip, [sp]
40005ef8:	e3a0c000 	mov	ip, #0
40005efc:	e58dc004 	str	ip, [sp, #4]
40005f00:	ebfff56c 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005f04:	e59de01c 	ldr	lr, [sp, #28]
40005f08:	e3a0100b 	mov	r1, #11
40005f0c:	e1a0200b 	mov	r2, fp
40005f10:	e1a0300a 	mov	r3, sl
40005f14:	e3a07001 	mov	r7, #1
40005f18:	e1a00004 	mov	r0, r4
40005f1c:	e58de000 	str	lr, [sp]
40005f20:	e58d7004 	str	r7, [sp, #4]
40005f24:	ebfff563 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f28:	e594001c 	ldr	r0, [r4, #28]
40005f2c:	eb00116c 	bl	4000a4e4 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005f30:	e59d1018 	ldr	r1, [sp, #24]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005f34:	e59d201c 	ldr	r2, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f38:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005f3c:	e5c61490 	strb	r1, [r6, #1168]	; 0x490
							 WBMenuCmpArry[2] = Data1;//using for red part
40005f40:	e5c62492 	strb	r2, [r6, #1170]	; 0x492
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f44:	e5c67298 	strb	r7, [r6, #664]	; 0x298
40005f48:	e1a03001 	mov	r3, r1
40005f4c:	e1a0c002 	mov	ip, r2
							 break;
40005f50:	e1a0400e 	mov	r4, lr
40005f54:	eafffd8f 	b	40005598 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f58:	e59f44d8 	ldr	r4, [pc, #1240]	; 40006438 <ControlHandle+0xf2c>
40005f5c:	e3e01000 	mvn	r1, #0
40005f60:	e594001c 	ldr	r0, [r4, #28]
40005f64:	eb001129 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f68:	e59dc018 	ldr	ip, [sp, #24]
40005f6c:	e3a0e000 	mov	lr, #0
40005f70:	e3a01006 	mov	r1, #6
40005f74:	e1a02009 	mov	r2, r9
40005f78:	e1a0300a 	mov	r3, sl
40005f7c:	e1a00004 	mov	r0, r4
40005f80:	e88d5000 	stm	sp, {ip, lr}
40005f84:	ebfff54b 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005f88:	e59dc018 	ldr	ip, [sp, #24]
40005f8c:	e1a0300a 	mov	r3, sl
40005f90:	e3a07001 	mov	r7, #1
40005f94:	e3a01006 	mov	r1, #6
40005f98:	e1a0200b 	mov	r2, fp
40005f9c:	e1a00004 	mov	r0, r4
40005fa0:	e58dc000 	str	ip, [sp]
40005fa4:	e58d7004 	str	r7, [sp, #4]
40005fa8:	ebfff542 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005fac:	e594001c 	ldr	r0, [r4, #28]
40005fb0:	eb00114b 	bl	4000a4e4 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005fb4:	e59d4018 	ldr	r4, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005fb8:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005fbc:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fc0:	e1a03004 	mov	r3, r4
40005fc4:	e5c67220 	strb	r7, [r6, #544]	; 0x220
40005fc8:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40005fcc:	e1a0400e 	mov	r4, lr
40005fd0:	eafffd70 	b	40005598 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fd4:	e59f445c 	ldr	r4, [pc, #1116]	; 40006438 <ControlHandle+0xf2c>
40005fd8:	e3e01000 	mvn	r1, #0
40005fdc:	e594001c 	ldr	r0, [r4, #28]
40005fe0:	eb00110a 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005fe4:	e59d0018 	ldr	r0, [sp, #24]
40005fe8:	e3a0c000 	mov	ip, #0
40005fec:	e2403080 	sub	r3, r0, #128	; 0x80
40005ff0:	e20370ff 	and	r7, r3, #255	; 0xff
40005ff4:	e3a01005 	mov	r1, #5
40005ff8:	e1a02009 	mov	r2, r9
40005ffc:	e1a0300a 	mov	r3, sl
40006000:	e1a00004 	mov	r0, r4
40006004:	e88d1080 	stm	sp, {r7, ip}
40006008:	ebfff52a 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
4000600c:	e59d1018 	ldr	r1, [sp, #24]
40006010:	e3a020dc 	mov	r2, #220	; 0xdc
40006014:	e2417076 	sub	r7, r1, #118	; 0x76
40006018:	e207e0ff 	and	lr, r7, #255	; 0xff
4000601c:	e3a01005 	mov	r1, #5
40006020:	e3a07001 	mov	r7, #1
40006024:	e1a0300a 	mov	r3, sl
40006028:	e1a00004 	mov	r0, r4
4000602c:	e58de000 	str	lr, [sp]
40006030:	e58d7004 	str	r7, [sp, #4]
40006034:	ebfff51f 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40006038:	e59d2018 	ldr	r2, [sp, #24]
4000603c:	e3a01005 	mov	r1, #5
40006040:	e282007e 	add	r0, r2, #126	; 0x7e
40006044:	e200c0ff 	and	ip, r0, #255	; 0xff
40006048:	e3a020de 	mov	r2, #222	; 0xde
4000604c:	e1a0300a 	mov	r3, sl
40006050:	e1a00004 	mov	r0, r4
40006054:	e58dc000 	str	ip, [sp]
40006058:	e3a0c002 	mov	ip, #2
4000605c:	e58dc004 	str	ip, [sp, #4]
40006060:	ebfff514 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40006064:	e59d3018 	ldr	r3, [sp, #24]
40006068:	e3a020e0 	mov	r2, #224	; 0xe0
4000606c:	e2831072 	add	r1, r3, #114	; 0x72
40006070:	e201c0ff 	and	ip, r1, #255	; 0xff
40006074:	e1a0300a 	mov	r3, sl
40006078:	e3a01005 	mov	r1, #5
4000607c:	e1a00004 	mov	r0, r4
40006080:	e58dc000 	str	ip, [sp]
40006084:	e3a0c003 	mov	ip, #3
40006088:	e58dc004 	str	ip, [sp, #4]
4000608c:	ebfff509 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40006090:	e59d2018 	ldr	r2, [sp, #24]
40006094:	e3a01005 	mov	r1, #5
40006098:	e242006f 	sub	r0, r2, #111	; 0x6f
4000609c:	e200c0ff 	and	ip, r0, #255	; 0xff
400060a0:	e3a020dd 	mov	r2, #221	; 0xdd
400060a4:	e1a0300a 	mov	r3, sl
400060a8:	e1a00004 	mov	r0, r4
400060ac:	e58dc000 	str	ip, [sp]
400060b0:	e3a0c004 	mov	ip, #4
400060b4:	e58dc004 	str	ip, [sp, #4]
400060b8:	ebfff4fe 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
400060bc:	e59f335c 	ldr	r3, [pc, #860]	; 40006420 <ControlHandle+0xf14>
400060c0:	e3a0e005 	mov	lr, #5
400060c4:	e5d3105c 	ldrb	r1, [r3, #92]	; 0x5c
400060c8:	e1a00004 	mov	r0, r4
400060cc:	e281207f 	add	r2, r1, #127	; 0x7f
400060d0:	e202c0ff 	and	ip, r2, #255	; 0xff
400060d4:	e1a0100e 	mov	r1, lr
400060d8:	e1a0300a 	mov	r3, sl
400060dc:	e1a0200b 	mov	r2, fp
400060e0:	e88d5000 	stm	sp, {ip, lr}
400060e4:	ebfff4f3 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060e8:	e594001c 	ldr	r0, [r4, #28]
400060ec:	eb0010fc 	bl	4000a4e4 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
400060f0:	e59f0328 	ldr	r0, [pc, #808]	; 40006420 <ControlHandle+0xf14>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400060f4:	e3a0e0ff 	mov	lr, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
400060f8:	e5d0305c 	ldrb	r3, [r0, #92]	; 0x5c
							 CtrlParArry[CtrlID][16] = CyTrue;
400060fc:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40006100:	e2431080 	sub	r1, r3, #128	; 0x80
40006104:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40006108:	e59d3018 	ldr	r3, [sp, #24]
4000610c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40006110:	e1a0400e 	mov	r4, lr
40006114:	eafffd1f 	b	40005598 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 Data0 = Data0 - 1;
40006118:	e2431001 	sub	r1, r3, #1
4000611c:	e1a00003 	mov	r0, r3
							 is60Hz = Data0;
40006120:	e59f22f8 	ldr	r2, [pc, #760]	; 40006420 <ControlHandle+0xf14>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 Data0 = Data0 - 1;
40006124:	e20130ff 	and	r3, r1, #255	; 0xff
							 {
								 Data0 = 1;  // 60Hz (NTSC)
								 is60Hz = CyTrue;
							 }
							 //CyU3PDebugPrint (4, "Frequency setting is  %d %d\r\n", Data0, is60Hz);
							 if (gpif_initialized == CyTrue)
40006128:	e59fe2f0 	ldr	lr, [pc, #752]	; 40006420 <ControlHandle+0xf14>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
							 {
								 Data0 = 0;  // 50Hz (PAL)
								 is60Hz = CyFalse;
							 }
							 else if(Data0 >2)
4000612c:	e3530002 	cmp	r3, #2
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
40006130:	e5c601ed 	strb	r0, [r6, #493]	; 0x1ed
								 is60Hz = CyFalse;
							 }
							 else if(Data0 >2)
							 {
								 Data0 = 1;  // 60Hz (NTSC)
								 is60Hz = CyTrue;
40006134:	83a00001 	movhi	r0, #1
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 Data0 = Data0 - 1;
							 is60Hz = Data0;
40006138:	e5823058 	str	r3, [r2, #88]	; 0x58
								 is60Hz = CyFalse;
							 }
							 else if(Data0 >2)
							 {
								 Data0 = 1;  // 60Hz (NTSC)
								 is60Hz = CyTrue;
4000613c:	85820058 	strhi	r0, [r2, #88]	; 0x58
							 }
							 //CyU3PDebugPrint (4, "Frequency setting is  %d %d\r\n", Data0, is60Hz);
							 if (gpif_initialized == CyTrue)
40006140:	e59e0028 	ldr	r0, [lr, #40]	; 0x28
40006144:	e3500001 	cmp	r0, #1
40006148:	0a000082 	beq	40006358 <ControlHandle+0xe4c>
			                         		break;
			                         }
								 //CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 }

							 CtrlParArry[CtrlID][16] = CyTrue;
4000614c:	e3a0c001 	mov	ip, #1
							 break;
40006150:	e3a0e0ff 	mov	lr, #255	; 0xff
			                         		break;
			                         }
								 //CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 }

							 CtrlParArry[CtrlID][16] = CyTrue;
40006154:	e5c6c1f0 	strb	ip, [r6, #496]	; 0x1f0
40006158:	e59d3018 	ldr	r3, [sp, #24]
4000615c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40006160:	e1a0400e 	mov	r4, lr
40006164:	eafffd0b 	b	40005598 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
#endif
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006168:	e59f42c8 	ldr	r4, [pc, #712]	; 40006438 <ControlHandle+0xf2c>
4000616c:	e3e01000 	mvn	r1, #0
40006170:	e594001c 	ldr	r0, [r4, #28]
40006174:	eb0010a5 	bl	4000a410 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40006178:	e59d2018 	ldr	r2, [sp, #24]
								  Data0 = Data0 - 0x80;
							  }else{
								  Data0 = ~Data0;
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
4000617c:	e3a0c000 	mov	ip, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
#endif
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40006180:	e3120080 	tst	r2, #128	; 0x80
								  Data0 = Data0 - 0x80;
40006184:	12427080 	subne	r7, r2, #128	; 0x80
							  }else{
								  Data0 = ~Data0;
40006188:	01e07002 	mvneq	r7, r2
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
4000618c:	e1a0300a 	mov	r3, sl
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data0 = Data0 - 0x80;
							  }else{
								  Data0 = ~Data0;
40006190:	e20770ff 	and	r7, r7, #255	; 0xff
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40006194:	e3a01001 	mov	r1, #1
40006198:	e1a0200b 	mov	r2, fp
4000619c:	e59f0294 	ldr	r0, [pc, #660]	; 40006438 <ControlHandle+0xf2c>
400061a0:	e88d1080 	stm	sp, {r7, ip}
400061a4:	ebfff4c3 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400061a8:	e594001c 	ldr	r0, [r4, #28]
400061ac:	eb0010cc 	bl	4000a4e4 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;


							 break;
400061b0:	e3a0e0ff 	mov	lr, #255	; 0xff
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061b4:	e3a00001 	mov	r0, #1
								  Data0 = ~Data0;
							  }
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400061b8:	e5c671a5 	strb	r7, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][16] = CyTrue;
400061bc:	e5c601a8 	strb	r0, [r6, #424]	; 0x1a8
400061c0:	e59d3018 	ldr	r3, [sp, #24]
400061c4:	e59dc01c 	ldr	ip, [sp, #28]


							 break;
400061c8:	e1a0400e 	mov	r4, lr
400061cc:	eafffcf1 	b	40005598 <ControlHandle+0x8c>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400061d0:	e59f7260 	ldr	r7, [pc, #608]	; 40006438 <ControlHandle+0xf2c>
400061d4:	e3e01000 	mvn	r1, #0
400061d8:	e597001c 	ldr	r0, [r7, #28]
400061dc:	eb00108b 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
400061e0:	e59dc018 	ldr	ip, [sp, #24]
400061e4:	e1a01004 	mov	r1, r4
400061e8:	e1a0300a 	mov	r3, sl
400061ec:	e1a02009 	mov	r2, r9
400061f0:	e58dc000 	str	ip, [sp]
400061f4:	e1a00007 	mov	r0, r7
400061f8:	e3a0c000 	mov	ip, #0
400061fc:	e58dc004 	str	ip, [sp, #4]
40006200:	ebfff4ac 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006204:	e597001c 	ldr	r0, [r7, #28]
40006208:	eb0010b5 	bl	4000a4e4 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
4000620c:	e59d1018 	ldr	r1, [sp, #24]
40006210:	e0844084 	add	r4, r4, r4, lsl #1
40006214:	e0866184 	add	r6, r6, r4, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
40006218:	e3a03001 	mov	r3, #1
							 break;
4000621c:	e3a0e0ff 	mov	lr, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006220:	e5c63190 	strb	r3, [r6, #400]	; 0x190

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40006224:	e5c6118d 	strb	r1, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40006228:	e1a03001 	mov	r3, r1
4000622c:	e59dc01c 	ldr	ip, [sp, #28]
							 break;
40006230:	e1a0400e 	mov	r4, lr
40006234:	eafffcd7 	b	40005598 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40006238:	e59f21e0 	ldr	r2, [pc, #480]	; 40006420 <ControlHandle+0xf14>

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
4000623c:	e3a00001 	mov	r0, #1
							 if(CamMode == 1) //mode 720p
40006240:	e5d2207c 	ldrb	r2, [r2, #124]	; 0x7c
							 }

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40006244:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
40006248:	e3520001 	cmp	r2, #1

							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
4000624c:	e5c60190 	strb	r0, [r6, #400]	; 0x190
40006250:	11a07003 	movne	r7, r3
							 if(CamMode == 1) //mode 720p
40006254:	0a000035 	beq	40006330 <ControlHandle+0xe24>
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006258:	e59f41d8 	ldr	r4, [pc, #472]	; 40006438 <ControlHandle+0xf2c>
4000625c:	e3e01000 	mvn	r1, #0
40006260:	e594001c 	ldr	r0, [r4, #28]
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
									Data0 = 4; //set to default.
					 			 }
					 		 }
							 CtrlParArry[CamModeIndex][13] = Data0;
40006264:	e5c6742d 	strb	r7, [r6, #1069]	; 0x42d
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006268:	eb001068 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
4000626c:	e3a0c000 	mov	ip, #0
40006270:	e1a0100c 	mov	r1, ip
40006274:	e1a02009 	mov	r2, r9
40006278:	e1a0300a 	mov	r3, sl
4000627c:	e1a00004 	mov	r0, r4
40006280:	e58d7000 	str	r7, [sp]
40006284:	eafffeec 	b	40005e3c <ControlHandle+0x930>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
40006288:	e3a00004 	mov	r0, #4
4000628c:	e59f11b0 	ldr	r1, [pc, #432]	; 40006444 <ControlHandle+0xf38>
40006290:	eb003444 	bl	400133a8 <CyU3PDebugPrint>
40006294:	e3a0e0ff 	mov	lr, #255	; 0xff
40006298:	e1a0400e 	mov	r4, lr
4000629c:	e1a0c00e 	mov	ip, lr
400062a0:	e1a0300e 	mov	r3, lr
400062a4:	eafffcbb 	b	40005598 <ControlHandle+0x8c>
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
400062a8:	e3540002 	cmp	r4, #2
400062ac:	92844004 	addls	r4, r4, #4
400062b0:	920440ff 	andls	r4, r4, #255	; 0xff
400062b4:	9afffde2 	bls	40005a44 <ControlHandle+0x538>
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
400062b8:	e1a03004 	mov	r3, r4
400062bc:	e3a00004 	mov	r0, #4
400062c0:	e59f1180 	ldr	r1, [pc, #384]	; 40006448 <ControlHandle+0xf3c>
400062c4:	eb003437 	bl	400133a8 <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
400062c8:	e59f3144 	ldr	r3, [pc, #324]	; 40006414 <ControlHandle+0xf08>
400062cc:	e3a02000 	mov	r2, #0
400062d0:	e3a04004 	mov	r4, #4
400062d4:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
400062d8:	eafffdd9 	b	40005a44 <ControlHandle+0x538>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400062dc:	e5d324b9 	ldrb	r2, [r3, #1209]	; 0x4b9
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400062e0:	e2414001 	sub	r4, r1, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400062e4:	e3520004 	cmp	r2, #4
400062e8:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400062ec:	e20410ff 	and	r1, r4, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400062f0:	0a000003 	beq	40006304 <ControlHandle+0xdf8>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
400062f4:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
400062f8:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
400062fc:	13a02004 	movne	r2, #4
40006300:	e5c324b9 	strb	r2, [r3, #1209]	; 0x4b9
									 }
								 }
								 if(Data1 < 8){
40006304:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006308:	959f313c 	ldrls	r3, [pc, #316]	; 4000644c <ControlHandle+0xf40>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
4000630c:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006310:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006314:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006318:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
4000631c:	85c634e9 	strbhi	r3, [r6, #1257]	; 0x4e9
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006320:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006324:	95c624e9 	strbls	r2, [r6, #1257]	; 0x4e9
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006328:	e5c634ea 	strb	r3, [r6, #1258]	; 0x4ea
4000632c:	eafffeb5 	b	40005e08 <ControlHandle+0x8fc>
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
40006330:	e3530002 	cmp	r3, #2
					 				 Data0 += 4;
40006334:	92837004 	addls	r7, r3, #4
40006338:	920770ff 	andls	r7, r7, #255	; 0xff
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 3){
4000633c:	9affffc5 	bls	40006258 <ControlHandle+0xd4c>
					 				 Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
40006340:	e3a00004 	mov	r0, #4
40006344:	e59f10fc 	ldr	r1, [pc, #252]	; 40006448 <ControlHandle+0xf3c>
40006348:	e59d3018 	ldr	r3, [sp, #24]
4000634c:	eb003415 	bl	400133a8 <CyU3PDebugPrint>
									Data0 = 4; //set to default.
40006350:	e3a07004 	mov	r7, #4
40006354:	eaffffbf 	b	40006258 <ControlHandle+0xd4c>
							 }
							 //CyU3PDebugPrint (4, "Frequency setting is  %d %d\r\n", Data0, is60Hz);
							 if (gpif_initialized == CyTrue)
							 {
								 //CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			                       switch (setRes)
40006358:	e5de107d 	ldrb	r1, [lr, #125]	; 0x7d
4000635c:	e3510002 	cmp	r1, #2
40006360:	0a00001c 	beq	400063d8 <ControlHandle+0xecc>
40006364:	e3510003 	cmp	r1, #3
40006368:	0a00000e 	beq	400063a8 <ControlHandle+0xe9c>
4000636c:	e3510001 	cmp	r1, #1
40006370:	1affff75 	bne	4000614c <ControlHandle+0xc40>
			                         {
			                         	case 1: //1944
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40006374:	e59e2058 	ldr	r2, [lr, #88]	; 0x58
40006378:	e1a00001 	mov	r0, r1
4000637c:	e3520000 	cmp	r2, #0
40006380:	e281102f 	add	r1, r1, #47	; 0x2f
40006384:	03a020e4 	moveq	r2, #228	; 0xe4
40006388:	13a02064 	movne	r2, #100	; 0x64
4000638c:	e3a03052 	mov	r3, #82	; 0x52
40006390:	ebfff935 	bl	4000486c <SensorSetIrisControl>
			                         		CyU3PThreadSleep(500);
40006394:	e3a00f7d 	mov	r0, #500	; 0x1f4
40006398:	eb000a8c 	bl	40008dd0 <_tx_thread_sleep>
			                                //CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
			                         		break;
4000639c:	eaffff6a 	b	4000614c <ControlHandle+0xc40>
400063a0:	e59f0078 	ldr	r0, [pc, #120]	; 40006420 <ControlHandle+0xf14>
400063a4:	eafffd95 	b	40005a00 <ControlHandle+0x4f4>
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
			                         		CyU3PThreadSleep(500);
			                                //CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
			                         		break;
			                         	case 3: //720
			                         		SensorSetIrisControl(0x1, 0x30, ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400063a8:	e59e4058 	ldr	r4, [lr, #88]	; 0x58
400063ac:	e5d6e48c 	ldrb	lr, [r6, #1164]	; 0x48c
400063b0:	e3540000 	cmp	r4, #0
400063b4:	03a040c4 	moveq	r4, #196	; 0xc4
400063b8:	13a04044 	movne	r4, #68	; 0x44
400063bc:	e3a01030 	mov	r1, #48	; 0x30
400063c0:	e184200e 	orr	r2, r4, lr
400063c4:	e3a03052 	mov	r3, #82	; 0x52
400063c8:	ebfff927 	bl	4000486c <SensorSetIrisControl>
			                         		CyU3PThreadSleep(500);
400063cc:	e3a00f7d 	mov	r0, #500	; 0x1f4
400063d0:	eb000a7e 	bl	40008dd0 <_tx_thread_sleep>
			                                //CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
			                         		break;
400063d4:	eaffff5c 	b	4000614c <ControlHandle+0xc40>
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
			                         		CyU3PThreadSleep(500);
			                                //CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
			                         		break;
			                         	case 2: //1080
			                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400063d8:	e59e2058 	ldr	r2, [lr, #88]	; 0x58
400063dc:	e3a01030 	mov	r1, #48	; 0x30
400063e0:	e3520000 	cmp	r2, #0
400063e4:	03a020d4 	moveq	r2, #212	; 0xd4
400063e8:	13a02054 	movne	r2, #84	; 0x54
400063ec:	e3a03052 	mov	r3, #82	; 0x52
400063f0:	ebfff91d 	bl	4000486c <SensorSetIrisControl>
			                         		CyU3PThreadSleep(500);
400063f4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400063f8:	eb000a74 	bl	40008dd0 <_tx_thread_sleep>
			                                //CyU3PDebugPrint (4, "FSet the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
			                         		break;
400063fc:	eaffff52 	b	4000614c <ControlHandle+0xc40>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40006400:	e3a03000 	mov	r3, #0
40006404:	eafffe1f 	b	40005c88 <ControlHandle+0x77c>
40006408:	e59f0010 	ldr	r0, [pc, #16]	; 40006420 <ControlHandle+0xf14>
4000640c:	e3a03000 	mov	r3, #0
40006410:	eafffd73 	b	400059e4 <ControlHandle+0x4d8>
40006414:	40030000 	.word	0x40030000
40006418:	40033164 	.word	0x40033164
4000641c:	40011898 	.word	0x40011898
40006420:	40030fb0 	.word	0x40030fb0
40006424:	4003100c 	.word	0x4003100c
40006428:	00010001 	.word	0x00010001
4000642c:	00ff00ff 	.word	0x00ff00ff
40006430:	400117d8 	.word	0x400117d8
40006434:	40011814 	.word	0x40011814
40006438:	40032ee4 	.word	0x40032ee4
4000643c:	40030ffc 	.word	0x40030ffc
40006440:	4001183c 	.word	0x4001183c
40006444:	40011868 	.word	0x40011868
40006448:	400117a0 	.word	0x400117a0
4000644c:	400114e0 	.word	0x400114e0

40006450 <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006450:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006454:	e59fa960 	ldr	sl, [pc, #2400]	; 40006dbc <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006458:	e59f8960 	ldr	r8, [pc, #2400]	; 40006dc0 <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000645c:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006460:	e1a09080 	lsl	r9, r0, #1
40006464:	e0892000 	add	r2, r9, r0
40006468:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
4000646c:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006470:	e24dd05c 	sub	sp, sp, #92	; 0x5c
40006474:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006478:	e5d234a3 	ldrb	r3, [r2, #1187]	; 0x4a3
    RegAdd0 = CTCtrlParArry[CtrlID][0];
4000647c:	e5d2b494 	ldrb	fp, [r2, #1172]	; 0x494
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
40006480:	e5d27496 	ldrb	r7, [r2, #1174]	; 0x496
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006484:	0a000076 	beq	40006664 <CTControlHandle+0x214>
40006488:	9a000021 	bls	40006514 <CTControlHandle+0xc4>
4000648c:	e3550085 	cmp	r5, #133	; 0x85
40006490:	0a000059 	beq	400065fc <CTControlHandle+0x1ac>
40006494:	3a00004e 	bcc	400065d4 <CTControlHandle+0x184>
40006498:	e3550086 	cmp	r5, #134	; 0x86
4000649c:	0a000080 	beq	400066a4 <CTControlHandle+0x254>
400064a0:	e3550087 	cmp	r5, #135	; 0x87
400064a4:	0a000076 	beq	40006684 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400064a8:	e3a00000 	mov	r0, #0
400064ac:	e3a01001 	mov	r1, #1
400064b0:	e1a02000 	mov	r2, r0
400064b4:	eb005f23 	bl	4001e148 <CyU3PUsbStall>
400064b8:	e59f4904 	ldr	r4, [pc, #2308]	; 40006dc4 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400064bc:	e1a02006 	mov	r2, r6
400064c0:	e3a00004 	mov	r0, #4
400064c4:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006dc8 <CTControlHandle+0x978>
400064c8:	e5da3000 	ldrb	r3, [sl]
400064cc:	eb0033b5 	bl	400133a8 <CyU3PDebugPrint>
			  break;
400064d0:	e3a0c0ff 	mov	ip, #255	; 0xff
400064d4:	e1a0600c 	mov	r6, ip
400064d8:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
400064dc:	e5d4e05e 	ldrb	lr, [r4, #94]	; 0x5e
400064e0:	e58dc008 	str	ip, [sp, #8]
400064e4:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006dcc <CTControlHandle+0x97c>
400064e8:	e3a0c0ff 	mov	ip, #255	; 0xff
400064ec:	e1a02005 	mov	r2, r5
400064f0:	e1a03008 	mov	r3, r8
400064f4:	e3a00004 	mov	r0, #4
400064f8:	e88d4040 	stm	sp, {r6, lr}
400064fc:	e58dc00c 	str	ip, [sp, #12]
40006500:	e58de010 	str	lr, [sp, #16]
40006504:	e58d7014 	str	r7, [sp, #20]
40006508:	eb0033a6 	bl	400133a8 <CyU3PDebugPrint>
}
4000650c:	e28dd05c 	add	sp, sp, #92	; 0x5c
40006510:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006514:	e3550081 	cmp	r5, #129	; 0x81
40006518:	0a000042 	beq	40006628 <CTControlHandle+0x1d8>
4000651c:	9a000011 	bls	40006568 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006520:	e59f489c 	ldr	r4, [pc, #2204]	; 40006dc4 <CTControlHandle+0x974>
40006524:	e5d21497 	ldrb	r1, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006528:	e5d26498 	ldrb	r6, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
4000652c:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006530:	e5c4105c 	strb	r1, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006534:	e5c4605d 	strb	r6, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006538:	0a00002c 	beq	400065f0 <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
4000653c:	e3a0e000 	mov	lr, #0
40006540:	e5c4e05e 	strb	lr, [r4, #94]	; 0x5e
			  glEp0Buffer[3] = 0;
40006544:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006548:	e1a00007 	mov	r0, r7
4000654c:	e59f187c 	ldr	r1, [pc, #2172]	; 40006dd0 <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
40006550:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
40006554:	e5c4305f 	strb	r3, [r4, #95]	; 0x5f
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006558:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000655c:	eb005cce 	bl	4001d89c <CyU3PUsbSendEP0Data>
40006560:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40006564:	eaffffdc 	b	400064dc <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006568:	e3550001 	cmp	r5, #1
4000656c:	1affffcd 	bne	400064a8 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006570:	e59f484c 	ldr	r4, [pc, #2124]	; 40006dc4 <CTControlHandle+0x974>
40006574:	e28d2056 	add	r2, sp, #86	; 0x56
40006578:	e3a00020 	mov	r0, #32
4000657c:	e284105c 	add	r1, r4, #92	; 0x5c
40006580:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006584:	eb005a56 	bl	4001cee4 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006588:	e5d4005c 	ldrb	r0, [r4, #92]	; 0x5c
			  Data1 = glEp0Buffer[1];
4000658c:	e5d4c05d 	ldrb	ip, [r4, #93]	; 0x5d
			  value = Data1;

			  switch(CtrlID)
40006590:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006594:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
40006598:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
4000659c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400065a0:	e3520009 	cmp	r2, #9
400065a4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400065a8:	ea000155 	b	40006b04 <CTControlHandle+0x6b4>
400065ac:	40006ac0 	.word	0x40006ac0
400065b0:	40006b04 	.word	0x40006b04
400065b4:	400067d0 	.word	0x400067d0
400065b8:	40006b04 	.word	0x40006b04
400065bc:	40006b04 	.word	0x40006b04
400065c0:	40006b04 	.word	0x40006b04
400065c4:	4000674c 	.word	0x4000674c
400065c8:	40006b04 	.word	0x40006b04
400065cc:	40006b04 	.word	0x40006b04
400065d0:	400066d0 	.word	0x400066d0
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
400065d4:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006dc4 <CTControlHandle+0x974>
400065d8:	e5d2849b 	ldrb	r8, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
400065dc:	e5d2249c 	ldrb	r2, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065e0:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
400065e4:	e5c4805c 	strb	r8, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
400065e8:	e5c4205d 	strb	r2, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065ec:	1affffd2 	bne	4000653c <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400065f0:	e3a01001 	mov	r1, #1
400065f4:	e5c4105e 	strb	r1, [r4, #94]	; 0x5e
400065f8:	eaffffd1 	b	40006544 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400065fc:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006dc4 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
40006600:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006604:	e3a00002 	mov	r0, #2
40006608:	e284105c 	add	r1, r4, #92	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
4000660c:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006610:	e5c4705c 	strb	r7, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = 0;
40006614:	e5c4305d 	strb	r3, [r4, #93]	; 0x5d
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006618:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000661c:	eb005c9e 	bl	4001d89c <CyU3PUsbSendEP0Data>
40006620:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40006624:	eaffffac 	b	400064dc <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006628:	e59f4794 	ldr	r4, [pc, #1940]	; 40006dc4 <CTControlHandle+0x974>
4000662c:	e5d2a4a1 	ldrb	sl, [r2, #1185]	; 0x4a1
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006630:	e5d2c4a2 	ldrb	ip, [r2, #1186]	; 0x4a2
					 glEp0Buffer[2] = 0;
40006634:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006638:	e1a00007 	mov	r0, r7
4000663c:	e284105c 	add	r1, r4, #92	; 0x5c

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006640:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006644:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
					 glEp0Buffer[2] = 0;
40006648:	e5c4805e 	strb	r8, [r4, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
4000664c:	e5c4805f 	strb	r8, [r4, #95]	; 0x5f
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006650:	e5c4a05c 	strb	sl, [r4, #92]	; 0x5c
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006654:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006658:	eb005c8f 	bl	4001d89c <CyU3PUsbSendEP0Data>
4000665c:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006660:	eaffff9d 	b	400064dc <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006664:	e59f4758 	ldr	r4, [pc, #1880]	; 40006dc4 <CTControlHandle+0x974>
40006668:	e5d23499 	ldrb	r3, [r2, #1177]	; 0x499
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
4000666c:	e5d2e49a 	ldrb	lr, [r2, #1178]	; 0x49a
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006670:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006674:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006678:	e5c4e05d 	strb	lr, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000667c:	1affffae 	bne	4000653c <CTControlHandle+0xec>
40006680:	eaffffda 	b	400065f0 <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006684:	e59f4738 	ldr	r4, [pc, #1848]	; 40006dc4 <CTControlHandle+0x974>
40006688:	e5d2649f 	ldrb	r6, [r2, #1183]	; 0x49f
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
4000668c:	e5d2c4a0 	ldrb	ip, [r2, #1184]	; 0x4a0
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006690:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006694:	e5c4605c 	strb	r6, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006698:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000669c:	1affffa6 	bne	4000653c <CTControlHandle+0xec>
400066a0:	eaffffd2 	b	400065f0 <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
400066a4:	e59f4718 	ldr	r4, [pc, #1816]	; 40006dc4 <CTControlHandle+0x974>
400066a8:	e5d2049d 	ldrb	r0, [r2, #1181]	; 0x49d
400066ac:	e1a01004 	mov	r1, r4
400066b0:	e5e1005c 	strb	r0, [r1, #92]!	; 0x5c
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400066b4:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400066b8:	e3a00001 	mov	r0, #1
400066bc:	eb005c76 	bl	4001d89c <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400066c0:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400066c4:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400066c8:	e3a07001 	mov	r7, #1
400066cc:	eaffff82 	b	400064dc <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400066d0:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006dd4 <CTControlHandle+0x984>
400066d4:	e3e01000 	mvn	r1, #0
400066d8:	e596001c 	ldr	r0, [r6, #28]
400066dc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400066e0:	eb000f4a 	bl	4000a410 <_txe_mutex_get>
					  if(getData == 1)
400066e4:	e59de030 	ldr	lr, [sp, #48]	; 0x30
400066e8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400066ec:	e35e0001 	cmp	lr, #1
400066f0:	0a0001a9 	beq	40006d9c <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
400066f4:	e35e00ff 	cmp	lr, #255	; 0xff
400066f8:	0a00019e 	beq	40006d78 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx);
400066fc:	e3a08000 	mov	r8, #0
40006700:	e1a00006 	mov	r0, r6
40006704:	e3a01017 	mov	r1, #23
40006708:	e1a0200b 	mov	r2, fp
4000670c:	e58d8000 	str	r8, [sp]
40006710:	e58d8004 	str	r8, [sp, #4]
40006714:	ebfff367 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006718:	e596001c 	ldr	r0, [r6, #28]
4000671c:	eb000f70 	bl	4000a4e4 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
40006720:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006724:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006728:	e5d4c05e 	ldrb	ip, [r4, #94]	; 0x5e
4000672c:	e3a00004 	mov	r0, #4
40006730:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006dd8 <CTControlHandle+0x988>
40006734:	e1a02008 	mov	r2, r8
40006738:	e1a03006 	mov	r3, r6
4000673c:	e58dc000 	str	ip, [sp]
40006740:	eb003318 	bl	400133a8 <CyU3PDebugPrint>
					  break;
40006744:	e3a0c0ff 	mov	ip, #255	; 0xff
40006748:	eaffff63 	b	400064dc <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
4000674c:	e5d884b9 	ldrb	r8, [r8, #1209]	; 0x4b9
40006750:	e3580001 	cmp	r8, #1
40006754:	13580008 	cmpne	r8, #8
40006758:	13a00000 	movne	r0, #0
4000675c:	03a00001 	moveq	r0, #1
40006760:	1a000180 	bne	40006d68 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006764:	e59f8668 	ldr	r8, [pc, #1640]	; 40006dd4 <CTControlHandle+0x984>
40006768:	e3e01000 	mvn	r1, #0
4000676c:	e598001c 	ldr	r0, [r8, #28]
40006770:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006774:	eb000f25 	bl	4000a410 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
40006778:	e59da030 	ldr	sl, [sp, #48]	; 0x30
4000677c:	e3a01016 	mov	r1, #22
40006780:	e1a0200b 	mov	r2, fp
40006784:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006788:	e3a0c000 	mov	ip, #0
4000678c:	e1a00008 	mov	r0, r8
40006790:	e88d1400 	stm	sp, {sl, ip}
40006794:	ebfff347 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006798:	e598001c 	ldr	r0, [r8, #28]
4000679c:	eb000f50 	bl	4000a4e4 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400067a0:	e59f0618 	ldr	r0, [pc, #1560]	; 40006dc0 <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
400067a4:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400067a8:	e0891006 	add	r1, r9, r6
400067ac:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400067b0:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400067b4:	e5c3a4a1 	strb	sl, [r3, #1185]	; 0x4a1
							 CTCtrlParArry[CtrlID][14] = Data1;
400067b8:	e5c324a2 	strb	r2, [r3, #1186]	; 0x4a2
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400067bc:	e5c364a4 	strb	r6, [r3, #1188]	; 0x4a4
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
400067c0:	e5d4805c 	ldrb	r8, [r4, #92]	; 0x5c
400067c4:	e5d4605d 	ldrb	r6, [r4, #93]	; 0x5d
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
400067c8:	e3a0c0ff 	mov	ip, #255	; 0xff
400067cc:	eaffff42 	b	400064dc <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
400067d0:	e5d804b9 	ldrb	r0, [r8, #1209]	; 0x4b9
400067d4:	e3500001 	cmp	r0, #1
400067d8:	13500004 	cmpne	r0, #4
400067dc:	1a00015c 	bne	40006d54 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
400067e0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
400067e4:	e59de034 	ldr	lr, [sp, #52]	; 0x34
400067e8:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
400067ec:	e35200f9 	cmp	r2, #249	; 0xf9
400067f0:	8a000157 	bhi	40006d54 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067f4:	e242a0c8 	sub	sl, r2, #200	; 0xc8
400067f8:	e1a0c80a 	lsl	ip, sl, #16
400067fc:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
40006800:	e262a027 	rsb	sl, r2, #39	; 0x27
40006804:	e58da038 	str	sl, [sp, #56]	; 0x38
40006808:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
4000680c:	e26210c8 	rsb	r1, r2, #200	; 0xc8
40006810:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006814:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006818:	e1a01801 	lsl	r1, r1, #16
4000681c:	e262e064 	rsb	lr, r2, #100	; 0x64
40006820:	81a0182a 	lsrhi	r1, sl, #16
40006824:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006828:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000682c:	e3520064 	cmp	r2, #100	; 0x64
40006830:	e1a0080e 	lsl	r0, lr, #16
40006834:	81a0082c 	lsrhi	r0, ip, #16
40006838:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000683c:	e242a014 	sub	sl, r2, #20
40006840:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006844:	91a00820 	lsrls	r0, r0, #16
40006848:	e262a014 	rsb	sl, r2, #20
4000684c:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006850:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
40006854:	e1510000 	cmp	r1, r0
40006858:	31a0a001 	movcc	sl, r1
4000685c:	21a0a000 	movcs	sl, r0
40006860:	e1a0c80c 	lsl	ip, ip, #16
40006864:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006868:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000686c:	91a0e82c 	lsrls	lr, ip, #16
40006870:	e59fc564 	ldr	ip, [pc, #1380]	; 40006ddc <CTControlHandle+0x98c>
40006874:	e58da020 	str	sl, [sp, #32]
40006878:	e06ca001 	rsb	sl, ip, r1
4000687c:	81a0e82e 	lsrhi	lr, lr, #16
40006880:	e27ac000 	rsbs	ip, sl, #0
40006884:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006888:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
4000688c:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006890:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006894:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006898:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
4000689c:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068a0:	e242a00a 	sub	sl, r2, #10
400068a4:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400068a8:	e59da020 	ldr	sl, [sp, #32]
400068ac:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400068b0:	e15e000a 	cmp	lr, sl
400068b4:	31a0a00e 	movcc	sl, lr
400068b8:	e262c00a 	rsb	ip, r2, #10
400068bc:	e58dc040 	str	ip, [sp, #64]	; 0x40
400068c0:	e58da038 	str	sl, [sp, #56]	; 0x38
400068c4:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400068c8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400068cc:	e3520014 	cmp	r2, #20
400068d0:	91a0a82c 	lsrls	sl, ip, #16
400068d4:	81a0a82a 	lsrhi	sl, sl, #16
400068d8:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400068dc:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068e0:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400068e4:	33a0c001 	movcc	ip, #1
400068e8:	e58da03c 	str	sl, [sp, #60]	; 0x3c
400068ec:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068f0:	e1a0a801 	lsl	sl, r1, #16
400068f4:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
400068f8:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400068fc:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006900:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
40006904:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006908:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
4000690c:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006910:	e58d104c 	str	r1, [sp, #76]	; 0x4c
40006914:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006918:	e1a00800 	lsl	r0, r0, #16
4000691c:	e15c000a 	cmp	ip, sl
40006920:	21a0c00a 	movcs	ip, sl
40006924:	e352000a 	cmp	r2, #10
40006928:	e59da020 	ldr	sl, [sp, #32]
4000692c:	81a00821 	lsrhi	r0, r1, #16
40006930:	91a00820 	lsrls	r0, r0, #16
40006934:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006938:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000693c:	e15e000a 	cmp	lr, sl
40006940:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006944:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006948:	e58dc044 	str	ip, [sp, #68]	; 0x44
4000694c:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006950:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006954:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006958:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
4000695c:	e59de048 	ldr	lr, [sp, #72]	; 0x48
40006960:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006964:	e262a002 	rsb	sl, r2, #2
40006968:	e15e0000 	cmp	lr, r0
4000696c:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006970:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006974:	e3520005 	cmp	r2, #5
40006978:	e58da040 	str	sl, [sp, #64]	; 0x40
4000697c:	e1a01801 	lsl	r1, r1, #16
40006980:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006984:	81a0182c 	lsrhi	r1, ip, #16
40006988:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
4000698c:	e58de04c 	str	lr, [sp, #76]	; 0x4c
40006990:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006994:	e59de040 	ldr	lr, [sp, #64]	; 0x40
40006998:	91a01821 	lsrls	r1, r1, #16
4000699c:	e15a000c 	cmp	sl, ip
400069a0:	e58d1020 	str	r1, [sp, #32]
400069a4:	33a00003 	movcc	r0, #3
400069a8:	e58d0038 	str	r0, [sp, #56]	; 0x38
400069ac:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400069b0:	e1a0080e 	lsl	r0, lr, #16
400069b4:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400069b8:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400069bc:	e15e000a 	cmp	lr, sl
400069c0:	21a0e00a 	movcs	lr, sl
400069c4:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400069c8:	e59da048 	ldr	sl, [sp, #72]	; 0x48
400069cc:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400069d0:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400069d4:	91a01820 	lsrls	r1, r0, #16
400069d8:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
400069dc:	81a01821 	lsrhi	r1, r1, #16
400069e0:	e15a000c 	cmp	sl, ip
400069e4:	33a00004 	movcc	r0, #4
400069e8:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400069ec:	e2420001 	sub	r0, r2, #1
400069f0:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400069f4:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400069f8:	e59d0020 	ldr	r0, [sp, #32]
400069fc:	e262c001 	rsb	ip, r2, #1
40006a00:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006a04:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a08:	e59da038 	ldr	sl, [sp, #56]	; 0x38
40006a0c:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006a10:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006a14:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a18:	e3520001 	cmp	r2, #1
40006a1c:	91a02800 	lslls	r2, r0, #16
40006a20:	81a0280a 	lslhi	r2, sl, #16
40006a24:	e151000e 	cmp	r1, lr
40006a28:	31a0a001 	movcc	sl, r1
40006a2c:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006a30:	e151000e 	cmp	r1, lr
40006a34:	21a0100c 	movcs	r1, ip
40006a38:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a3c:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a40:	e59fa38c 	ldr	sl, [pc, #908]	; 40006dd4 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a44:	91a02001 	movls	r2, r1
40006a48:	83a02007 	movhi	r2, #7
40006a4c:	e2822001 	add	r2, r2, #1
40006a50:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a54:	e3e01000 	mvn	r1, #0
40006a58:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006a5c:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a60:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006a64:	eb000e69 	bl	4000a410 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006a68:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006a6c:	e3a01003 	mov	r1, #3
40006a70:	e1a0200b 	mov	r2, fp
40006a74:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006a78:	e58dc000 	str	ip, [sp]
40006a7c:	e1a0000a 	mov	r0, sl
40006a80:	e3a0c000 	mov	ip, #0
40006a84:	e58dc004 	str	ip, [sp, #4]
40006a88:	ebfff28a 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a8c:	e59a001c 	ldr	r0, [sl, #28]
40006a90:	eb000e93 	bl	4000a4e4 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006a94:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006a98:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006a9c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006aa0:	e0891006 	add	r1, r9, r6
40006aa4:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006aa8:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006aac:	e5c604a1 	strb	r0, [r6, #1185]	; 0x4a1
						  CTCtrlParArry[CtrlID][14] = Data1;
40006ab0:	e5c6c4a2 	strb	ip, [r6, #1186]	; 0x4a2
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006ab4:	e5c624a4 	strb	r2, [r6, #1188]	; 0x4a4
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006ab8:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
40006abc:	eaffff3f 	b	400067c0 <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006ac0:	e0892006 	add	r2, r9, r6
40006ac4:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006ac8:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006acc:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006ad0:	e5c604a1 	strb	r0, [r6, #1185]	; 0x4a1
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006ad4:	e5c614a4 	strb	r1, [r6, #1188]	; 0x4a4
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006ad8:	e35e0007 	cmp	lr, #7
40006adc:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
40006ae0:	ea000097 	b	40006d44 <CTControlHandle+0x8f4>
40006ae4:	40006cd8 	.word	0x40006cd8
40006ae8:	40006c3c 	.word	0x40006c3c
40006aec:	40006d44 	.word	0x40006d44
40006af0:	40006bd8 	.word	0x40006bd8
40006af4:	40006d44 	.word	0x40006d44
40006af8:	40006d44 	.word	0x40006d44
40006afc:	40006d44 	.word	0x40006d44
40006b00:	40006b38 	.word	0x40006b38
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006b04:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006b08:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006b0c:	e0899006 	add	r9, r9, r6
40006b10:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006b14:	e1a02006 	mov	r2, r6
40006b18:	e3a00004 	mov	r0, #4
40006b1c:	e59f12bc 	ldr	r1, [pc, #700]	; 40006de0 <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006b20:	e5cea4a1 	strb	sl, [lr, #1185]	; 0x4a1
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006b24:	eb00321f 	bl	400133a8 <CyU3PDebugPrint>
			  		 break;
40006b28:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b2c:	e1a0600c 	mov	r6, ip
40006b30:	e1a0800c 	mov	r8, ip
40006b34:	eafffe68 	b	400064dc <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b38:	e59f6294 	ldr	r6, [pc, #660]	; 40006dd4 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006b3c:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b40:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006b44:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b48:	e3e01000 	mvn	r1, #0
40006b4c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006b50:	eb000e2e 	bl	4000a410 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006b54:	e1a0200b 	mov	r2, fp
40006b58:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006b5c:	e3a01010 	mov	r1, #16
40006b60:	e1a00006 	mov	r0, r6
40006b64:	e58da000 	str	sl, [sp]
40006b68:	e58da004 	str	sl, [sp, #4]
40006b6c:	ebfff251 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006b70:	e596001c 	ldr	r0, [r6, #28]
40006b74:	eb000e5a 	bl	4000a4e4 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b78:	e3e01000 	mvn	r1, #0
40006b7c:	e596001c 	ldr	r0, [r6, #28]
40006b80:	eb000e22 	bl	4000a410 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006b84:	e3a08001 	mov	r8, #1
40006b88:	e3a01014 	mov	r1, #20
40006b8c:	e3a02027 	mov	r2, #39	; 0x27
40006b90:	e3a03030 	mov	r3, #48	; 0x30
40006b94:	e1a00006 	mov	r0, r6
40006b98:	e88d0500 	stm	sp, {r8, sl}
40006b9c:	ebfff245 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006ba0:	e3a0c002 	mov	ip, #2
40006ba4:	e3a01015 	mov	r1, #21
40006ba8:	e3a02025 	mov	r2, #37	; 0x25
40006bac:	e3a03030 	mov	r3, #48	; 0x30
40006bb0:	e1a00006 	mov	r0, r6
40006bb4:	e58dc000 	str	ip, [sp]
40006bb8:	e58da004 	str	sl, [sp, #4]
40006bbc:	ebfff23d 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006bc0:	e596001c 	ldr	r0, [r6, #28]
40006bc4:	eb000e46 	bl	4000a4e4 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006bc8:	e3a0c0ff 	mov	ip, #255	; 0xff
40006bcc:	e1a0600c 	mov	r6, ip
40006bd0:	e3a08008 	mov	r8, #8
40006bd4:	eafffe40 	b	400064dc <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006bd8:	e59f81f4 	ldr	r8, [pc, #500]	; 40006dd4 <CTControlHandle+0x984>
40006bdc:	e3e01000 	mvn	r1, #0
40006be0:	e598001c 	ldr	r0, [r8, #28]
40006be4:	eb000e09 	bl	4000a410 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006be8:	e3a06000 	mov	r6, #0
40006bec:	e3a01014 	mov	r1, #20
40006bf0:	e3a02027 	mov	r2, #39	; 0x27
40006bf4:	e3a03030 	mov	r3, #48	; 0x30
40006bf8:	e1a00008 	mov	r0, r8
40006bfc:	e58d6000 	str	r6, [sp]
40006c00:	e58d6004 	str	r6, [sp, #4]
40006c04:	ebfff22b 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006c08:	e3a01015 	mov	r1, #21
40006c0c:	e3a02025 	mov	r2, #37	; 0x25
40006c10:	e3a03030 	mov	r3, #48	; 0x30
40006c14:	e1a00008 	mov	r0, r8
40006c18:	e58d6000 	str	r6, [sp]
40006c1c:	e58d6004 	str	r6, [sp, #4]
40006c20:	ebfff224 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006c24:	e598001c 	ldr	r0, [r8, #28]
40006c28:	eb000e2d 	bl	4000a4e4 <_txe_mutex_put>
40006c2c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006c30:	e1a0600c 	mov	r6, ip
40006c34:	e3a08004 	mov	r8, #4
40006c38:	eafffe27 	b	400064dc <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c3c:	e59fa190 	ldr	sl, [pc, #400]	; 40006dd4 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006c40:	e3a06000 	mov	r6, #0
40006c44:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c48:	e3e01000 	mvn	r1, #0
40006c4c:	e59a001c 	ldr	r0, [sl, #28]
40006c50:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006c54:	eb000ded 	bl	4000a410 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006c58:	e1a0200b 	mov	r2, fp
40006c5c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006c60:	e3a01010 	mov	r1, #16
40006c64:	e1a0000a 	mov	r0, sl
40006c68:	e58d6000 	str	r6, [sp]
40006c6c:	e58d6004 	str	r6, [sp, #4]
40006c70:	ebfff210 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006c74:	e59a001c 	ldr	r0, [sl, #28]
40006c78:	eb000e19 	bl	4000a4e4 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006c7c:	e3e01000 	mvn	r1, #0
40006c80:	e59a001c 	ldr	r0, [sl, #28]
40006c84:	eb000de1 	bl	4000a410 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006c88:	e3a01014 	mov	r1, #20
40006c8c:	e3a02027 	mov	r2, #39	; 0x27
40006c90:	e3a03030 	mov	r3, #48	; 0x30
40006c94:	e1a0000a 	mov	r0, sl
40006c98:	e58d6000 	str	r6, [sp]
40006c9c:	e58d6004 	str	r6, [sp, #4]
40006ca0:	ebfff204 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006ca4:	e3a01015 	mov	r1, #21
40006ca8:	e3a02025 	mov	r2, #37	; 0x25
40006cac:	e3a03030 	mov	r3, #48	; 0x30
40006cb0:	e1a0000a 	mov	r0, sl
40006cb4:	e58d6000 	str	r6, [sp]
40006cb8:	e58d6004 	str	r6, [sp, #4]
40006cbc:	ebfff1fd 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006cc0:	e59a001c 	ldr	r0, [sl, #28]
40006cc4:	eb000e06 	bl	4000a4e4 <_txe_mutex_put>
40006cc8:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ccc:	e1a0600c 	mov	r6, ip
40006cd0:	e3a08002 	mov	r8, #2
40006cd4:	eafffe00 	b	400064dc <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006cd8:	e59f60f4 	ldr	r6, [pc, #244]	; 40006dd4 <CTControlHandle+0x984>
40006cdc:	e3e01000 	mvn	r1, #0
40006ce0:	e596001c 	ldr	r0, [r6, #28]
40006ce4:	eb000dc9 	bl	4000a410 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006ce8:	e3a08000 	mov	r8, #0
40006cec:	e3a0a001 	mov	sl, #1
40006cf0:	e3a01014 	mov	r1, #20
40006cf4:	e3a02027 	mov	r2, #39	; 0x27
40006cf8:	e3a03030 	mov	r3, #48	; 0x30
40006cfc:	e1a00006 	mov	r0, r6
40006d00:	e58d8004 	str	r8, [sp, #4]
40006d04:	e58da000 	str	sl, [sp]
40006d08:	ebfff1ea 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006d0c:	e3a0c002 	mov	ip, #2
40006d10:	e3a01015 	mov	r1, #21
40006d14:	e3a02025 	mov	r2, #37	; 0x25
40006d18:	e3a03030 	mov	r3, #48	; 0x30
40006d1c:	e1a00006 	mov	r0, r6
40006d20:	e58dc000 	str	ip, [sp]
40006d24:	e58d8004 	str	r8, [sp, #4]
40006d28:	ebfff1e2 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006d2c:	e596001c 	ldr	r0, [r6, #28]
40006d30:	eb000deb 	bl	4000a4e4 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006d34:	e3a0c0ff 	mov	ip, #255	; 0xff
40006d38:	e1a0600c 	mov	r6, ip
40006d3c:	e1a0800a 	mov	r8, sl
40006d40:	eafffde5 	b	400064dc <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006d44:	e3a0c0ff 	mov	ip, #255	; 0xff
40006d48:	e1a08000 	mov	r8, r0
40006d4c:	e1a0600c 	mov	r6, ip
40006d50:	eafffde1 	b	400064dc <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006d54:	e3a00000 	mov	r0, #0
40006d58:	e3a01001 	mov	r1, #1
40006d5c:	e1a02000 	mov	r2, r0
40006d60:	eb005cf8 	bl	4001e148 <CyU3PUsbStall>
40006d64:	eafffe95 	b	400067c0 <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006d68:	e3a01001 	mov	r1, #1
40006d6c:	e1a02000 	mov	r2, r0
40006d70:	eb005cf4 	bl	4001e148 <CyU3PUsbStall>
40006d74:	eafffe91 	b	400067c0 <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006d78:	e3a0e008 	mov	lr, #8
40006d7c:	e3a0c000 	mov	ip, #0
40006d80:	e1a00006 	mov	r0, r6
40006d84:	e3a01017 	mov	r1, #23
40006d88:	e1a0200b 	mov	r2, fp
40006d8c:	e58de000 	str	lr, [sp]
40006d90:	e58dc004 	str	ip, [sp, #4]
40006d94:	ebfff1c7 	bl	400034b8 <cmdSet>
40006d98:	eafffe5e 	b	40006718 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006d9c:	e3a08004 	mov	r8, #4
40006da0:	e3a0e000 	mov	lr, #0
40006da4:	e1a00006 	mov	r0, r6
40006da8:	e3a01017 	mov	r1, #23
40006dac:	e1a0200b 	mov	r2, fp
40006db0:	e88d4100 	stm	sp, {r8, lr}
40006db4:	ebfff1bf 	bl	400034b8 <cmdSet>
40006db8:	eafffe56 	b	40006718 <CTControlHandle+0x2c8>
40006dbc:	40033164 	.word	0x40033164
40006dc0:	40030000 	.word	0x40030000
40006dc4:	40030fb0 	.word	0x40030fb0
40006dc8:	40011934 	.word	0x40011934
40006dcc:	40011958 	.word	0x40011958
40006dd0:	4003100c 	.word	0x4003100c
40006dd4:	40032ee4 	.word	0x40032ee4
40006dd8:	400118e8 	.word	0x400118e8
40006ddc:	0000ffff 	.word	0x0000ffff
40006de0:	40011910 	.word	0x40011910

40006de4 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006de4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006de8:	e59f4b34 	ldr	r4, [pc, #2868]	; 40007924 <UVCAppEP0Thread_Entry+0xb40>
40006dec:	e59f6b34 	ldr	r6, [pc, #2868]	; 40007928 <UVCAppEP0Thread_Entry+0xb44>
40006df0:	e59f8b34 	ldr	r8, [pc, #2868]	; 4000792c <UVCAppEP0Thread_Entry+0xb48>
40006df4:	e59f9b34 	ldr	r9, [pc, #2868]	; 40007930 <UVCAppEP0Thread_Entry+0xb4c>
40006df8:	e59fbb34 	ldr	fp, [pc, #2868]	; 40007934 <UVCAppEP0Thread_Entry+0xb50>
40006dfc:	e59f7b34 	ldr	r7, [pc, #2868]	; 40007938 <UVCAppEP0Thread_Entry+0xb54>
40006e00:	e24dd034 	sub	sp, sp, #52	; 0x34
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006e04:	e1a05004 	mov	r5, r4
40006e08:	e3e0c000 	mvn	ip, #0
40006e0c:	e59f0b10 	ldr	r0, [pc, #2832]	; 40007924 <UVCAppEP0Thread_Entry+0xb40>
40006e10:	e3a0104c 	mov	r1, #76	; 0x4c
40006e14:	e3a02001 	mov	r2, #1
40006e18:	e28d3028 	add	r3, sp, #40	; 0x28
40006e1c:	e58dc000 	str	ip, [sp]
40006e20:	eb000cb2 	bl	4000a0f0 <_txe_event_flags_get>
40006e24:	e3500000 	cmp	r0, #0
40006e28:	1a000030 	bne	40006ef0 <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006e2c:	e5953030 	ldr	r3, [r5, #48]	; 0x30
40006e30:	e3530000 	cmp	r3, #0
40006e34:	0a00008c 	beq	4000706c <UVCAppEP0Thread_Entry+0x288>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006e38:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40006e3c:	e313000c 	tst	r3, #12
40006e40:	1a000075 	bne	4000701c <UVCAppEP0Thread_Entry+0x238>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006e44:	e3130004 	tst	r3, #4
40006e48:	0a00001c 	beq	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006e4c:	e1dbe0b0 	ldrh	lr, [fp]
40006e50:	e1a0242e 	lsr	r2, lr, #8
40006e54:	e3520003 	cmp	r2, #3
40006e58:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006e5c:	ea000012 	b	40006eac <UVCAppEP0Thread_Entry+0xc8>
40006e60:	40006eac 	.word	0x40006eac
40006e64:	40006f9c 	.word	0x40006f9c
40006e68:	40006e70 	.word	0x40006e70
40006e6c:	40006fd8 	.word	0x40006fd8
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006e70:	e1d920b0 	ldrh	r2, [r9]
40006e74:	e3520c06 	cmp	r2, #1536	; 0x600
40006e78:	0a000286 	beq	40007898 <UVCAppEP0Thread_Entry+0xab4>
40006e7c:	8a0000d9 	bhi	400071e8 <UVCAppEP0Thread_Entry+0x404>
40006e80:	e3520c03 	cmp	r2, #768	; 0x300
40006e84:	0a00027f 	beq	40007888 <UVCAppEP0Thread_Entry+0xaa4>
40006e88:	8a0001bc 	bhi	40007580 <UVCAppEP0Thread_Entry+0x79c>
40006e8c:	e3520c01 	cmp	r2, #256	; 0x100
40006e90:	0a000278 	beq	40007878 <UVCAppEP0Thread_Entry+0xa94>
40006e94:	e3520c02 	cmp	r2, #512	; 0x200
40006e98:	0a000272 	beq	40007868 <UVCAppEP0Thread_Entry+0xa84>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006e9c:	e59f1a98 	ldr	r1, [pc, #2712]	; 4000793c <UVCAppEP0Thread_Entry+0xb58>
40006ea0:	e5d83000 	ldrb	r3, [r8]
40006ea4:	e3a00004 	mov	r0, #4
40006ea8:	eb00313e 	bl	400133a8 <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006eac:	e3a00000 	mov	r0, #0
40006eb0:	e3a01001 	mov	r1, #1
40006eb4:	e1a02000 	mov	r2, r0
40006eb8:	eb005ca2 	bl	4001e148 <CyU3PUsbStall>
40006ebc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006ec0:	e3130008 	tst	r3, #8
40006ec4:	0a000007 	beq	40006ee8 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006ec8:	e1db30b0 	ldrh	r3, [fp]
40006ecc:	e3530001 	cmp	r3, #1
40006ed0:	0a00006b 	beq	40007084 <UVCAppEP0Thread_Entry+0x2a0>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006ed4:	e3a00000 	mov	r0, #0
40006ed8:	e3a01001 	mov	r1, #1
40006edc:	e1a02000 	mov	r2, r0
40006ee0:	eb005c98 	bl	4001e148 <CyU3PUsbStall>
40006ee4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006ee8:	e3130040 	tst	r3, #64	; 0x40
40006eec:	1a000001 	bne	40006ef8 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006ef0:	eb000f67 	bl	4000ac94 <_txe_thread_relinquish>
    }
40006ef4:	eaffffc3 	b	40006e08 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006ef8:	e3a00018 	mov	r0, #24
40006efc:	e28d1024 	add	r1, sp, #36	; 0x24
40006f00:	eb007058 	bl	40023068 <CyU3PGpioSimpleGetValue>

					snapButFlag = 0; //snap button is not masked.
					stiflag = 0xFF;
				}
#else			//for botton simulation
				if(snapButFlag == 0x0f){
40006f04:	e5d6367f 	ldrb	r3, [r6, #1663]	; 0x67f
40006f08:	e353000f 	cmp	r3, #15
40006f0c:	0a000094 	beq	40007164 <UVCAppEP0Thread_Entry+0x380>
						CyFxAppErrorHandler (apiRetStatus);
					}
						SensorSetControl(0x5, 0x30, 0); //mirror set to 0

						snapButFlag = 1;//snap button is masked.
				}else if(!snapButFlag){
40006f10:	e3530000 	cmp	r3, #0
40006f14:	1afffff5 	bne	40006ef0 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006f18:	e5972000 	ldr	r2, [r7]
40006f1c:	e3a0a002 	mov	sl, #2
40006f20:	e5c2a000 	strb	sl, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006f24:	e5971000 	ldr	r1, [r7]
40006f28:	e3a0a001 	mov	sl, #1
40006f2c:	e5c1a001 	strb	sl, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006f30:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006f34:	e3a0cb01 	mov	ip, #1024	; 0x400
						snapButFlag = 1;//snap button is masked.
				}else if(!snapButFlag){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006f38:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006f3c:	e597e000 	ldr	lr, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f40:	e3e01000 	mvn	r1, #0
				}else if(!snapButFlag){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006f44:	e5cea003 	strb	sl, [lr, #3]

					interStabuf.buffer = glInterStaBuffer;
40006f48:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006f4c:	e3a0e004 	mov	lr, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f50:	e59f09e8 	ldr	r0, [pc, #2536]	; 40007940 <UVCAppEP0Thread_Entry+0xb5c>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006f54:	e58d2018 	str	r2, [sp, #24]
					interStabuf.size   = 1024;
40006f58:	e1cdc1be 	strh	ip, [sp, #30]
					interStabuf.status = 0;
40006f5c:	e1cd32b0 	strh	r3, [sp, #32]

					interStabuf.count = 4;
40006f60:	e1cde1bc 	strh	lr, [sp, #28]

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f64:	eb00408b 	bl	40017198 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006f68:	e59f09d0 	ldr	r0, [pc, #2512]	; 40007940 <UVCAppEP0Thread_Entry+0xb5c>
40006f6c:	e28d1018 	add	r1, sp, #24
40006f70:	eb003ffa 	bl	40016f60 <CyU3PDmaChannelSetupSendBuffer>
					//CyU3PDebugPrint (4, "send interrupt status\r\n");
					if (apiRetStatus != CY_U3P_SUCCESS)
40006f74:	e2502000 	subs	r2, r0, #0
40006f78:	1a000160 	bne	40007500 <UVCAppEP0Thread_Entry+0x71c>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					SensorSetControl(0x5, 0x30, 1); //mirror set to 1
40006f7c:	e3a01030 	mov	r1, #48	; 0x30
40006f80:	e1a0200a 	mov	r2, sl
40006f84:	e3a00005 	mov	r0, #5
40006f88:	ebfff5ff 	bl	4000478c <SensorSetControl>
					snapButFlag = 1; //snap button is not masked.
40006f8c:	e59f3994 	ldr	r3, [pc, #2452]	; 40007928 <UVCAppEP0Thread_Entry+0xb44>
40006f90:	e5c3a67f 	strb	sl, [r3, #1663]	; 0x67f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006f94:	eb000f3e 	bl	4000ac94 <_txe_thread_relinquish>
40006f98:	eaffff9a 	b	40006e08 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006f9c:	e1d920b0 	ldrh	r2, [r9]
40006fa0:	e3520c06 	cmp	r2, #1536	; 0x600
40006fa4:	0a00022b 	beq	40007858 <UVCAppEP0Thread_Entry+0xa74>
40006fa8:	8a000099 	bhi	40007214 <UVCAppEP0Thread_Entry+0x430>
40006fac:	e3520c03 	cmp	r2, #768	; 0x300
40006fb0:	0a000224 	beq	40007848 <UVCAppEP0Thread_Entry+0xa64>
40006fb4:	8a00015f 	bhi	40007538 <UVCAppEP0Thread_Entry+0x754>
40006fb8:	e3520c01 	cmp	r2, #256	; 0x100
40006fbc:	0a00021d 	beq	40007838 <UVCAppEP0Thread_Entry+0xa54>
40006fc0:	e3520c02 	cmp	r2, #512	; 0x200
40006fc4:	1affffb4 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006fc8:	e3a00001 	mov	r0, #1
40006fcc:	ebfffd1f 	bl	40006450 <CTControlHandle>
40006fd0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40006fd4:	eaffffb9 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006fd8:	e1d930b0 	ldrh	r3, [r9]
40006fdc:	e3530c09 	cmp	r3, #2304	; 0x900
40006fe0:	0a000210 	beq	40007828 <UVCAppEP0Thread_Entry+0xa44>
40006fe4:	8a000092 	bhi	40007234 <UVCAppEP0Thread_Entry+0x450>
40006fe8:	e3530b01 	cmp	r3, #1024	; 0x400
40006fec:	0a000209 	beq	40007818 <UVCAppEP0Thread_Entry+0xa34>
40006ff0:	8a000173 	bhi	400075c4 <UVCAppEP0Thread_Entry+0x7e0>
40006ff4:	e3530c02 	cmp	r3, #512	; 0x200
40006ff8:	0a000202 	beq	40007808 <UVCAppEP0Thread_Entry+0xa24>
40006ffc:	e3530c03 	cmp	r3, #768	; 0x300
40007000:	0a0001fc 	beq	400077f8 <UVCAppEP0Thread_Entry+0xa14>
40007004:	e3530c01 	cmp	r3, #256	; 0x100
40007008:	1affffa7 	bne	40006eac <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
4000700c:	e3a00010 	mov	r0, #16
40007010:	ebfff93d 	bl	4000550c <ControlHandle>
40007014:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007018:	eaffffa8 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
4000701c:	e1d9c0b0 	ldrh	ip, [r9]
40007020:	e59fa91c 	ldr	sl, [pc, #2332]	; 40007944 <UVCAppEP0Thread_Entry+0xb60>
40007024:	e59f191c 	ldr	r1, [pc, #2332]	; 40007948 <UVCAppEP0Thread_Entry+0xb64>
40007028:	e5dae000 	ldrb	lr, [sl]
4000702c:	e58dc008 	str	ip, [sp, #8]
40007030:	e1db00b0 	ldrh	r0, [fp]
40007034:	e5d8a000 	ldrb	sl, [r8]
40007038:	e58d000c 	str	r0, [sp, #12]
4000703c:	e1d1c0b0 	ldrh	ip, [r1]
40007040:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40007044:	e58da004 	str	sl, [sp, #4]
40007048:	e3a00004 	mov	r0, #4
4000704c:	e59f18f8 	ldr	r1, [pc, #2296]	; 4000794c <UVCAppEP0Thread_Entry+0xb68>
40007050:	e3a0a000 	mov	sl, #0
40007054:	e58de000 	str	lr, [sp]
40007058:	e58dc010 	str	ip, [sp, #16]
4000705c:	e58da014 	str	sl, [sp, #20]
40007060:	eb0030d0 	bl	400133a8 <CyU3PDebugPrint>
40007064:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007068:	eaffff75 	b	40006e44 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
4000706c:	eb00580e 	bl	4001d0ac <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40007070:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40007074:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40007078:	13a00001 	movne	r0, #1
4000707c:	15850030 	strne	r0, [r5, #48]	; 0x30
40007080:	eaffff6c 	b	40006e38 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40007084:	e1d920b0 	ldrh	r2, [r9]
40007088:	e3520c03 	cmp	r2, #768	; 0x300
4000708c:	0a000092 	beq	400072dc <UVCAppEP0Thread_Entry+0x4f8>
40007090:	8a00000f 	bhi	400070d4 <UVCAppEP0Thread_Entry+0x2f0>
40007094:	e3520c01 	cmp	r2, #256	; 0x100
40007098:	0a00009c 	beq	40007310 <UVCAppEP0Thread_Entry+0x52c>
4000709c:	e3520c02 	cmp	r2, #512	; 0x200
400070a0:	1affff8b 	bne	40006ed4 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
400070a4:	e5d83000 	ldrb	r3, [r8]
400070a8:	e3530081 	cmp	r3, #129	; 0x81
400070ac:	0a0001c9 	beq	400077d8 <UVCAppEP0Thread_Entry+0x9f4>
400070b0:	8a0000dc 	bhi	40007428 <UVCAppEP0Thread_Entry+0x644>
400070b4:	e3530001 	cmp	r3, #1
400070b8:	0a00018b 	beq	400076ec <UVCAppEP0Thread_Entry+0x908>

                        }
                        break;

                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
400070bc:	e3a00000 	mov	r0, #0
400070c0:	e3a01001 	mov	r1, #1
400070c4:	e1a02000 	mov	r2, r0
400070c8:	eb005c1e 	bl	4001e148 <CyU3PUsbStall>
400070cc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400070d0:	eaffff84 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
400070d4:	e3520b01 	cmp	r2, #1024	; 0x400
400070d8:	0a000062 	beq	40007268 <UVCAppEP0Thread_Entry+0x484>
400070dc:	e3520c05 	cmp	r2, #1280	; 0x500
400070e0:	1affff7b 	bne	40006ed4 <UVCAppEP0Thread_Entry+0xf0>
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                //CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", bRequest, 0);
            	switch (bRequest)
400070e4:	e5d82000 	ldrb	r2, [r8]
400070e8:	e3520081 	cmp	r2, #129	; 0x81
400070ec:	0a0001b9 	beq	400077d8 <UVCAppEP0Thread_Entry+0x9f4>
400070f0:	8a00010b 	bhi	40007524 <UVCAppEP0Thread_Entry+0x740>
400070f4:	e3520001 	cmp	r2, #1
400070f8:	1affff75 	bne	40006ed4 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400070fc:	e3a00020 	mov	r0, #32
40007100:	e59f1848 	ldr	r1, [pc, #2120]	; 40007950 <UVCAppEP0Thread_Entry+0xb6c>
40007104:	e28d202e 	add	r2, sp, #46	; 0x2e
40007108:	eb005775 	bl	4001cee4 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
4000710c:	e3500000 	cmp	r0, #0
40007110:	1a00016f 	bne	400076d4 <UVCAppEP0Thread_Entry+0x8f0>
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
40007114:	e3a02000 	mov	r2, #0
40007118:	e59f0804 	ldr	r0, [pc, #2052]	; 40007924 <UVCAppEP0Thread_Entry+0xb40>
4000711c:	e3a01080 	mov	r1, #128	; 0x80
40007120:	eb000c22 	bl	4000a1b0 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40007124:	e2502000 	subs	r2, r0, #0
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            else{
                            stiflag = 0xF0;//set still trigger flag
40007128:	03e0000f 	mvneq	r0, #15
4000712c:	05c5003a 	strbeq	r0, [r5, #58]	; 0x3a
                        if (apiRetStatus == CY_U3P_SUCCESS)
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
40007130:	0a000002 	beq	40007140 <UVCAppEP0Thread_Entry+0x35c>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007134:	e59f1818 	ldr	r1, [pc, #2072]	; 40007954 <UVCAppEP0Thread_Entry+0xb70>
40007138:	e3a00004 	mov	r0, #4
4000713c:	eb003099 	bl	400133a8 <CyU3PDebugPrint>
    #endif
                            else{
                            stiflag = 0xF0;//set still trigger flag
                            //stillcont = 0;
                            }
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007140:	e5d4e081 	ldrb	lr, [r4, #129]	; 0x81
40007144:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
40007148:	e1dd22be 	ldrh	r2, [sp, #46]	; 0x2e
4000714c:	e3a00004 	mov	r0, #4
40007150:	e59f1800 	ldr	r1, [pc, #2048]	; 40007958 <UVCAppEP0Thread_Entry+0xb74>
40007154:	e58de000 	str	lr, [sp]
40007158:	eb003092 	bl	400133a8 <CyU3PDebugPrint>
4000715c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007160:	eaffff60 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
					stiflag = 0xFF;
				}
#else			//for botton simulation
				if(snapButFlag == 0x0f){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40007164:	e597c000 	ldr	ip, [r7]
40007168:	e3a0a002 	mov	sl, #2
4000716c:	e5cca000 	strb	sl, [ip]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40007170:	e5972000 	ldr	r2, [r7]
40007174:	e3a0a001 	mov	sl, #1
40007178:	e5c2a001 	strb	sl, [r2, #1]
					glInterStaBuffer[2] = 0x00;
4000717c:	e5971000 	ldr	r1, [r7]
40007180:	e3a0c000 	mov	ip, #0
40007184:	e5c1c002 	strb	ip, [r1, #2]
					glInterStaBuffer[3] = 0x00; //button release
40007188:	e5970000 	ldr	r0, [r7]

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
4000718c:	e3a02004 	mov	r2, #4
				if(snapButFlag == 0x0f){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40007190:	e5c0c003 	strb	ip, [r0, #3]

					interStabuf.buffer = glInterStaBuffer;
40007194:	e597e000 	ldr	lr, [r7]
					interStabuf.size   = 1024;
40007198:	e3a03b01 	mov	r3, #1024	; 0x400
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
4000719c:	e3e01000 	mvn	r1, #0
400071a0:	e59f0798 	ldr	r0, [pc, #1944]	; 40007940 <UVCAppEP0Thread_Entry+0xb5c>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
400071a4:	e1cd21bc 	strh	r2, [sp, #28]
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
400071a8:	e58de018 	str	lr, [sp, #24]
					interStabuf.size   = 1024;
400071ac:	e1cd31be 	strh	r3, [sp, #30]
					interStabuf.status = 0;
400071b0:	e1cdc2b0 	strh	ip, [sp, #32]

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
400071b4:	eb003ff7 	bl	40017198 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
400071b8:	e59f0780 	ldr	r0, [pc, #1920]	; 40007940 <UVCAppEP0Thread_Entry+0xb5c>
400071bc:	e28d1018 	add	r1, sp, #24
400071c0:	eb003f66 	bl	40016f60 <CyU3PDmaChannelSetupSendBuffer>
					//CyU3PDebugPrint (4, "send interrupt status\r\n");
					if (apiRetStatus != CY_U3P_SUCCESS)
400071c4:	e2502000 	subs	r2, r0, #0
400071c8:	1a0000f4 	bne	400075a0 <UVCAppEP0Thread_Entry+0x7bc>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
						SensorSetControl(0x5, 0x30, 0); //mirror set to 0
400071cc:	e3a01030 	mov	r1, #48	; 0x30
400071d0:	e3a00005 	mov	r0, #5
400071d4:	ebfff56c 	bl	4000478c <SensorSetControl>

						snapButFlag = 1;//snap button is masked.
400071d8:	e59f3748 	ldr	r3, [pc, #1864]	; 40007928 <UVCAppEP0Thread_Entry+0xb44>
400071dc:	e5c3a67f 	strb	sl, [r3, #1663]	; 0x67f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
400071e0:	eb000eab 	bl	4000ac94 <_txe_thread_relinquish>
400071e4:	eaffff07 	b	40006e08 <UVCAppEP0Thread_Entry+0x24>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400071e8:	e3520c0a 	cmp	r2, #2560	; 0xa00
400071ec:	0a000134 	beq	400076c4 <UVCAppEP0Thread_Entry+0x8e0>
400071f0:	8a0000d8 	bhi	40007558 <UVCAppEP0Thread_Entry+0x774>
400071f4:	e3520c07 	cmp	r2, #1792	; 0x700
400071f8:	0a00012d 	beq	400076b4 <UVCAppEP0Thread_Entry+0x8d0>
400071fc:	e3520b02 	cmp	r2, #2048	; 0x800
40007200:	1affff25 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40007204:	e3a00007 	mov	r0, #7
40007208:	ebfff8bf 	bl	4000550c <ControlHandle>
4000720c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007210:	eaffff2a 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007214:	e3520c09 	cmp	r2, #2304	; 0x900
40007218:	0a000121 	beq	400076a4 <UVCAppEP0Thread_Entry+0x8c0>
4000721c:	8a0000f1 	bhi	400075e8 <UVCAppEP0Thread_Entry+0x804>
40007220:	e3520c07 	cmp	r2, #1792	; 0x700
40007224:	0a00011a 	beq	40007694 <UVCAppEP0Thread_Entry+0x8b0>
40007228:	e3520b02 	cmp	r2, #2048	; 0x800
4000722c:	1affff1a 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>
40007230:	eaffff22 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007234:	e3530c0f 	cmp	r3, #3840	; 0xf00
40007238:	0a000111 	beq	40007684 <UVCAppEP0Thread_Entry+0x8a0>
4000723c:	8a000040 	bhi	40007344 <UVCAppEP0Thread_Entry+0x560>
40007240:	e3530c0b 	cmp	r3, #2816	; 0xb00
40007244:	0a00010a 	beq	40007674 <UVCAppEP0Thread_Entry+0x890>
40007248:	e3530c0d 	cmp	r3, #3328	; 0xd00
4000724c:	0a000104 	beq	40007664 <UVCAppEP0Thread_Entry+0x880>
40007250:	e3530c0a 	cmp	r3, #2560	; 0xa00
40007254:	1affff14 	bne	40006eac <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(1||CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40007258:	e3a00019 	mov	r0, #25
4000725c:	ebfff8aa 	bl	4000550c <ControlHandle>
40007260:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007264:	eaffff15 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007268:	e5d8a000 	ldrb	sl, [r8]
4000726c:	e35a0081 	cmp	sl, #129	; 0x81
40007270:	0a00001e 	beq	400072f0 <UVCAppEP0Thread_Entry+0x50c>
40007274:	8a000071 	bhi	40007440 <UVCAppEP0Thread_Entry+0x65c>
40007278:	e35a0001 	cmp	sl, #1
4000727c:	1affff8e 	bne	400070bc <UVCAppEP0Thread_Entry+0x2d8>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007280:	e28d202e 	add	r2, sp, #46	; 0x2e
40007284:	e3a00020 	mov	r0, #32
40007288:	e59f16c0 	ldr	r1, [pc, #1728]	; 40007950 <UVCAppEP0Thread_Entry+0xb6c>
4000728c:	eb005714 	bl	4001cee4 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007290:	e2502000 	subs	r2, r0, #0
40007294:	1affff12 	bne	40006ee4 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007298:	e59f0684 	ldr	r0, [pc, #1668]	; 40007924 <UVCAppEP0Thread_Entry+0xb40>
4000729c:	e1a0100a 	mov	r1, sl
400072a0:	eb000bc2 	bl	4000a1b0 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
400072a4:	e2502000 	subs	r2, r0, #0
400072a8:	0a000002 	beq	400072b8 <UVCAppEP0Thread_Entry+0x4d4>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
400072ac:	e3a00004 	mov	r0, #4
400072b0:	e59f169c 	ldr	r1, [pc, #1692]	; 40007954 <UVCAppEP0Thread_Entry+0xb70>
400072b4:	eb00303b 	bl	400133a8 <CyU3PDebugPrint>
                            }
                        	CyU3PDebugPrint (4, "UVC still commit control set %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
400072b8:	e5d4c081 	ldrb	ip, [r4, #129]	; 0x81
400072bc:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
400072c0:	e1dd22be 	ldrh	r2, [sp, #46]	; 0x2e
400072c4:	e3a00004 	mov	r0, #4
400072c8:	e59f168c 	ldr	r1, [pc, #1676]	; 4000795c <UVCAppEP0Thread_Entry+0xb78>
400072cc:	e58dc000 	str	ip, [sp]
400072d0:	eb003034 	bl	400133a8 <CyU3PDebugPrint>
400072d4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400072d8:	eaffff02 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400072dc:	e5d82000 	ldrb	r2, [r8]
400072e0:	e3520083 	cmp	r2, #131	; 0x83
400072e4:	8a000080 	bhi	400074ec <UVCAppEP0Thread_Entry+0x708>
400072e8:	e3520081 	cmp	r2, #129	; 0x81
400072ec:	3a00005e 	bcc	4000746c <UVCAppEP0Thread_Entry+0x688>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400072f0:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400072f4:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400072f8:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400072fc:	059f165c 	ldreq	r1, [pc, #1628]	; 40007960 <UVCAppEP0Thread_Entry+0xb7c>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40007300:	159f165c 	ldrne	r1, [pc, #1628]	; 40007964 <UVCAppEP0Thread_Entry+0xb80>
40007304:	eb005964 	bl	4001d89c <CyU3PUsbSendEP0Data>
40007308:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000730c:	eafffef5 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007310:	e5d82000 	ldrb	r2, [r8]
40007314:	e3520083 	cmp	r2, #131	; 0x83
40007318:	8a00002b 	bhi	400073cc <UVCAppEP0Thread_Entry+0x5e8>
4000731c:	e3520081 	cmp	r2, #129	; 0x81
40007320:	3a000010 	bcc	40007368 <UVCAppEP0Thread_Entry+0x584>
                    break;
                case CY_FX_USB_UVC_GET_CUR_REQ:
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
40007324:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
40007328:	e3530003 	cmp	r3, #3
4000732c:	0a0000c3 	beq	40007640 <UVCAppEP0Thread_Entry+0x85c>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007330:	e3a0001a 	mov	r0, #26
40007334:	e59f162c 	ldr	r1, [pc, #1580]	; 40007968 <UVCAppEP0Thread_Entry+0xb84>
40007338:	eb005957 	bl	4001d89c <CyU3PUsbSendEP0Data>
4000733c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007340:	eafffee8 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007344:	e3530c11 	cmp	r3, #4352	; 0x1100
40007348:	0a0000b8 	beq	40007630 <UVCAppEP0Thread_Entry+0x84c>
4000734c:	8a00002d 	bhi	40007408 <UVCAppEP0Thread_Entry+0x624>
40007350:	e3530a01 	cmp	r3, #4096	; 0x1000
40007354:	1afffed4 	bne	40006eac <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007358:	e3a0001f 	mov	r0, #31
4000735c:	ebfff86a 	bl	4000550c <ControlHandle>
40007360:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007364:	eafffed5 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007368:	e3520001 	cmp	r2, #1
4000736c:	1affff52 	bne	400070bc <UVCAppEP0Thread_Entry+0x2d8>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007370:	e3a00020 	mov	r0, #32
40007374:	e59f15d4 	ldr	r1, [pc, #1492]	; 40007950 <UVCAppEP0Thread_Entry+0xb6c>
40007378:	e28d202e 	add	r2, sp, #46	; 0x2e
4000737c:	eb0056d8 	bl	4001cee4 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007380:	e3500000 	cmp	r0, #0
40007384:	1afffed6 	bne	40006ee4 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007388:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
4000738c:	e3510003 	cmp	r1, #3
40007390:	1afffed3 	bne	40006ee4 <UVCAppEP0Thread_Entry+0x100>
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
40007394:	e5d43085 	ldrb	r3, [r4, #133]	; 0x85
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
40007398:	e5d4e082 	ldrb	lr, [r4, #130]	; 0x82
                            glProbeCtrlFull[3] = glCommitCtrl[3];
4000739c:	e5d4c083 	ldrb	ip, [r4, #131]	; 0x83
                            glProbeCtrlFull[4] = glCommitCtrl[4];
400073a0:	e5d40084 	ldrb	r0, [r4, #132]	; 0x84
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
400073a4:	e5d42086 	ldrb	r2, [r4, #134]	; 0x86
                            glProbeCtrlFull[7] = glCommitCtrl[7];
400073a8:	e5d4a087 	ldrb	sl, [r4, #135]	; 0x87
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
                            glProbeCtrlFull[3] = glCommitCtrl[3];
                            glProbeCtrlFull[4] = glCommitCtrl[4];
                            glProbeCtrlFull[5] = glCommitCtrl[5];
400073ac:	e5c63619 	strb	r3, [r6, #1561]	; 0x619
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrlFull[2] = glCommitCtrl[2];
400073b0:	e5c6e616 	strb	lr, [r6, #1558]	; 0x616
                            glProbeCtrlFull[3] = glCommitCtrl[3];
400073b4:	e5c6c617 	strb	ip, [r6, #1559]	; 0x617
                            glProbeCtrlFull[4] = glCommitCtrl[4];
400073b8:	e5c60618 	strb	r0, [r6, #1560]	; 0x618
                            glProbeCtrlFull[5] = glCommitCtrl[5];
                            glProbeCtrlFull[6] = glCommitCtrl[6];
400073bc:	e5c6261a 	strb	r2, [r6, #1562]	; 0x61a
                            glProbeCtrlFull[7] = glCommitCtrl[7];
400073c0:	e5c6a61b 	strb	sl, [r6, #1563]	; 0x61b
400073c4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400073c8:	eafffec6 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400073cc:	e3520086 	cmp	r2, #134	; 0x86
400073d0:	0a00001e 	beq	40007450 <UVCAppEP0Thread_Entry+0x66c>
400073d4:	e3520087 	cmp	r2, #135	; 0x87
400073d8:	0affffd1 	beq	40007324 <UVCAppEP0Thread_Entry+0x540>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400073dc:	e3520085 	cmp	r2, #133	; 0x85
400073e0:	1affff35 	bne	400070bc <UVCAppEP0Thread_Entry+0x2d8>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400073e4:	e59f1580 	ldr	r1, [pc, #1408]	; 4000796c <UVCAppEP0Thread_Entry+0xb88>
400073e8:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400073ec:	e3a0301a 	mov	r3, #26
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
400073f0:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
                        glEp0Buffer[1] = 0;
400073f4:	e3a03000 	mov	r3, #0
400073f8:	e5c4305d 	strb	r3, [r4, #93]	; 0x5d
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400073fc:	eb005926 	bl	4001d89c <CyU3PUsbSendEP0Data>
40007400:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007404:	eafffeb7 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007408:	e3530c12 	cmp	r3, #4608	; 0x1200
4000740c:	0a000140 	beq	40007914 <UVCAppEP0Thread_Entry+0xb30>
40007410:	e3530c13 	cmp	r3, #4864	; 0x1300
40007414:	1afffea4 	bne	40006eac <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID2-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCGridCtlID2);
40007418:	e3a00022 	mov	r0, #34	; 0x22
4000741c:	ebfff83a 	bl	4000550c <ControlHandle>
40007420:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007424:	eafffea5 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007428:	e3530085 	cmp	r3, #133	; 0x85
4000742c:	0affffec 	beq	400073e4 <UVCAppEP0Thread_Entry+0x600>
40007430:	e3530086 	cmp	r3, #134	; 0x86
40007434:	1affff20 	bne	400070bc <UVCAppEP0Thread_Entry+0x2d8>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007438:	e3a00001 	mov	r0, #1
4000743c:	ea000004 	b	40007454 <UVCAppEP0Thread_Entry+0x670>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007440:	e35a0085 	cmp	sl, #133	; 0x85
40007444:	0affffe6 	beq	400073e4 <UVCAppEP0Thread_Entry+0x600>
40007448:	e35a0086 	cmp	sl, #134	; 0x86
4000744c:	1affff1a 	bne	400070bc <UVCAppEP0Thread_Entry+0x2d8>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007450:	e1a00003 	mov	r0, r3
        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007454:	e59f1510 	ldr	r1, [pc, #1296]	; 4000796c <UVCAppEP0Thread_Entry+0xb88>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007458:	e3a0a003 	mov	sl, #3
4000745c:	e5c4a05c 	strb	sl, [r4, #92]	; 0x5c
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007460:	eb00590d 	bl	4001d89c <CyU3PUsbSendEP0Data>
40007464:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007468:	eafffe9e 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000746c:	e3520001 	cmp	r2, #1
40007470:	1affff11 	bne	400070bc <UVCAppEP0Thread_Entry+0x2d8>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007474:	e3a00020 	mov	r0, #32
40007478:	e59f14d0 	ldr	r1, [pc, #1232]	; 40007950 <UVCAppEP0Thread_Entry+0xb6c>
4000747c:	e28d202e 	add	r2, sp, #46	; 0x2e
40007480:	eb005697 	bl	4001cee4 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007484:	e3500000 	cmp	r0, #0
40007488:	1afffe95 	bne	40006ee4 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
4000748c:	e5d51048 	ldrb	r1, [r5, #72]	; 0x48
40007490:	e3510003 	cmp	r1, #3
40007494:	1a00000b 	bne	400074c8 <UVCAppEP0Thread_Entry+0x6e4>
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007498:	e5d5e081 	ldrb	lr, [r5, #129]	; 0x81
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
4000749c:	e5d5c082 	ldrb	ip, [r5, #130]	; 0x82
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400074a0:	e5d50083 	ldrb	r0, [r5, #131]	; 0x83
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400074a4:	e5d53084 	ldrb	r3, [r5, #132]	; 0x84
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400074a8:	e5d52085 	ldrb	r2, [r5, #133]	; 0x85
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400074ac:	e5d5a086 	ldrb	sl, [r5, #134]	; 0x86
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400074b0:	e5c6e669 	strb	lr, [r6, #1641]	; 0x669
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400074b4:	e5c6c66a 	strb	ip, [r6, #1642]	; 0x66a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400074b8:	e5c6066b 	strb	r0, [r6, #1643]	; 0x66b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400074bc:	e5c6366c 	strb	r3, [r6, #1644]	; 0x66c
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400074c0:	e5c6266d 	strb	r2, [r6, #1645]	; 0x66d
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400074c4:	e5c6a66e 	strb	sl, [r6, #1646]	; 0x66e
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
400074c8:	e5d4a081 	ldrb	sl, [r4, #129]	; 0x81
400074cc:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
400074d0:	e1dd22be 	ldrh	r2, [sp, #46]	; 0x2e
400074d4:	e3a00004 	mov	r0, #4
400074d8:	e59f1490 	ldr	r1, [pc, #1168]	; 40007970 <UVCAppEP0Thread_Entry+0xb8c>
400074dc:	e58da000 	str	sl, [sp]
400074e0:	eb002fb0 	bl	400133a8 <CyU3PDebugPrint>
400074e4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400074e8:	eafffe7e 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400074ec:	e3520086 	cmp	r2, #134	; 0x86
400074f0:	0affffd6 	beq	40007450 <UVCAppEP0Thread_Entry+0x66c>
400074f4:	e3520087 	cmp	r2, #135	; 0x87
400074f8:	1affffb7 	bne	400073dc <UVCAppEP0Thread_Entry+0x5f8>
400074fc:	eaffff7b 	b	400072f0 <UVCAppEP0Thread_Entry+0x50c>
					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					//CyU3PDebugPrint (4, "send interrupt status\r\n");
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007500:	e3a00004 	mov	r0, #4
40007504:	e59f1468 	ldr	r1, [pc, #1128]	; 40007974 <UVCAppEP0Thread_Entry+0xb90>
40007508:	eb002fa6 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000750c:	e59f1464 	ldr	r1, [pc, #1124]	; 40007978 <UVCAppEP0Thread_Entry+0xb94>
40007510:	e3a00004 	mov	r0, #4
40007514:	eb002fa3 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007518:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000751c:	eb00062b 	bl	40008dd0 <_tx_thread_sleep>
40007520:	eafffff9 	b	4000750c <UVCAppEP0Thread_Entry+0x728>
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                //CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", bRequest, 0);
            	switch (bRequest)
40007524:	e3520085 	cmp	r2, #133	; 0x85
40007528:	0a0000f6 	beq	40007908 <UVCAppEP0Thread_Entry+0xb24>
4000752c:	e3520086 	cmp	r2, #134	; 0x86
40007530:	1afffe67 	bne	40006ed4 <UVCAppEP0Thread_Entry+0xf0>
40007534:	eaffffbf 	b	40007438 <UVCAppEP0Thread_Entry+0x654>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007538:	e3520b01 	cmp	r2, #1024	; 0x400
4000753c:	0a0000ed 	beq	400078f8 <UVCAppEP0Thread_Entry+0xb14>
40007540:	e3520c05 	cmp	r2, #1280	; 0x500
40007544:	1afffe54 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007548:	e3a00004 	mov	r0, #4
4000754c:	ebfffbbf 	bl	40006450 <CTControlHandle>
40007550:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007554:	eafffe59 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007558:	e3520c0d 	cmp	r2, #3328	; 0xd00
4000755c:	0a000058 	beq	400076c4 <UVCAppEP0Thread_Entry+0x8e0>
40007560:	e3520c0e 	cmp	r2, #3584	; 0xe00
40007564:	0a0000df 	beq	400078e8 <UVCAppEP0Thread_Entry+0xb04>
40007568:	e3520b03 	cmp	r2, #3072	; 0xc00
4000756c:	1afffe4a 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
40007570:	e3a0000b 	mov	r0, #11
40007574:	ebfff7e4 	bl	4000550c <ControlHandle>
40007578:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000757c:	eafffe4f 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007580:	e3520b01 	cmp	r2, #1024	; 0x400
40007584:	0afffe4d 	beq	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
40007588:	e3520c05 	cmp	r2, #1280	; 0x500
4000758c:	1afffe42 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
40007590:	e3a00004 	mov	r0, #4
40007594:	ebfff7dc 	bl	4000550c <ControlHandle>
40007598:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000759c:	eafffe47 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					//CyU3PDebugPrint (4, "send interrupt status\r\n");
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400075a0:	e3a00004 	mov	r0, #4
400075a4:	e59f13c8 	ldr	r1, [pc, #968]	; 40007974 <UVCAppEP0Thread_Entry+0xb90>
400075a8:	eb002f7e 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400075ac:	e59f13c4 	ldr	r1, [pc, #964]	; 40007978 <UVCAppEP0Thread_Entry+0xb94>
400075b0:	e3a00004 	mov	r0, #4
400075b4:	eb002f7b 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400075b8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400075bc:	eb000603 	bl	40008dd0 <_tx_thread_sleep>
400075c0:	eafffff9 	b	400075ac <UVCAppEP0Thread_Entry+0x7c8>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400075c4:	e3530c06 	cmp	r3, #1536	; 0x600
400075c8:	0a0000c2 	beq	400078d8 <UVCAppEP0Thread_Entry+0xaf4>
400075cc:	8a00000f 	bhi	40007610 <UVCAppEP0Thread_Entry+0x82c>
400075d0:	e3530c05 	cmp	r3, #1280	; 0x500
400075d4:	1afffe34 	bne	40006eac <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
400075d8:	e3a00014 	mov	r0, #20
400075dc:	ebfff7ca 	bl	4000550c <ControlHandle>
400075e0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400075e4:	eafffe35 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400075e8:	e3520c0b 	cmp	r2, #2816	; 0xb00
400075ec:	0a0000b5 	beq	400078c8 <UVCAppEP0Thread_Entry+0xae4>
400075f0:	e3520b03 	cmp	r2, #3072	; 0xc00
400075f4:	0a0000af 	beq	400078b8 <UVCAppEP0Thread_Entry+0xad4>
400075f8:	e3520c0a 	cmp	r2, #2560	; 0xa00
400075fc:	1afffe26 	bne	40006e9c <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
40007600:	e3a00008 	mov	r0, #8
40007604:	ebfffb91 	bl	40006450 <CTControlHandle>
40007608:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000760c:	eafffe2b 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007610:	e3530c07 	cmp	r3, #1792	; 0x700
40007614:	0a0000a3 	beq	400078a8 <UVCAppEP0Thread_Entry+0xac4>
40007618:	e3530b02 	cmp	r3, #2048	; 0x800
4000761c:	1afffe22 	bne	40006eac <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
40007620:	e3a00017 	mov	r0, #23
40007624:	ebfff7b8 	bl	4000550c <ControlHandle>
40007628:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000762c:	eafffe23 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
40007630:	e3a00020 	mov	r0, #32
40007634:	ebfff7b4 	bl	4000550c <ControlHandle>
40007638:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000763c:	eafffe1f 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
                case CY_FX_USB_UVC_GET_MIN_REQ:
                case CY_FX_USB_UVC_GET_MAX_REQ:
                case CY_FX_USB_UVC_GET_DEF_REQ: 	/* There is only one setting per USB speed. */
                    if (usbSpeed == CY_U3P_SUPER_SPEED)
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrlFull);
40007640:	e59f1334 	ldr	r1, [pc, #820]	; 4000797c <UVCAppEP0Thread_Entry+0xb98>
40007644:	e3a0001a 	mov	r0, #26
40007648:	eb005893 	bl	4001d89c <CyU3PUsbSendEP0Data>
                        CyU3PDebugPrint (4, "video stream GET request Code: %d, \n", bRequest);
4000764c:	e3a00004 	mov	r0, #4
40007650:	e59f1328 	ldr	r1, [pc, #808]	; 40007980 <UVCAppEP0Thread_Entry+0xb9c>
40007654:	e5d82000 	ldrb	r2, [r8]
40007658:	eb002f52 	bl	400133a8 <CyU3PDebugPrint>
4000765c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007660:	eafffe20 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
40007664:	e3a0001c 	mov	r0, #28
40007668:	ebfff7a7 	bl	4000550c <ControlHandle>
4000766c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007670:	eafffe12 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x\r\n", wValue, bRequest);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
40007674:	e3a0001a 	mov	r0, #26
40007678:	ebfff7a3 	bl	4000550c <ControlHandle>
4000767c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007680:	eafffe0e 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
40007684:	e3a0001e 	mov	r0, #30
40007688:	ebfff79f 	bl	4000550c <ControlHandle>
4000768c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007690:	eafffe0a 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007694:	e3a00006 	mov	r0, #6
40007698:	ebfffb6c 	bl	40006450 <CTControlHandle>
4000769c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400076a0:	eafffe06 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400076a4:	e3a00007 	mov	r0, #7
400076a8:	ebfffb68 	bl	40006450 <CTControlHandle>
400076ac:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400076b0:	eafffe02 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
400076b4:	e3a00006 	mov	r0, #6
400076b8:	ebfff793 	bl	4000550c <ControlHandle>
400076bc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400076c0:	eafffdfe 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
400076c4:	e3a00009 	mov	r0, #9
400076c8:	ebfff78f 	bl	4000550c <ControlHandle>
400076cc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400076d0:	eafffdfa 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
                            stiflag = 0xF0;//set still trigger flag
                            //stillcont = 0;
                            }
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
400076d4:	e59f12a8 	ldr	r1, [pc, #680]	; 40007984 <UVCAppEP0Thread_Entry+0xba0>
400076d8:	e1dd22be 	ldrh	r2, [sp, #46]	; 0x2e
400076dc:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
400076e0:	e3a00004 	mov	r0, #4
400076e4:	eb002f2f 	bl	400133a8 <CyU3PDebugPrint>
400076e8:	eafffdf9 	b	40006ed4 <UVCAppEP0Thread_Entry+0xf0>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400076ec:	e3a00020 	mov	r0, #32
400076f0:	e59f1258 	ldr	r1, [pc, #600]	; 40007950 <UVCAppEP0Thread_Entry+0xb6c>
400076f4:	e28d202e 	add	r2, sp, #46	; 0x2e
400076f8:	eb0055f9 	bl	4001cee4 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400076fc:	e3500000 	cmp	r0, #0
40007700:	1afffdf7 	bne	40006ee4 <UVCAppEP0Thread_Entry+0x100>
                    {
                        switch (glCommitCtrl[3])
40007704:	e5d40083 	ldrb	r0, [r4, #131]	; 0x83
40007708:	e3500002 	cmp	r0, #2
4000770c:	0a000026 	beq	400077ac <UVCAppEP0Thread_Entry+0x9c8>
40007710:	e3500003 	cmp	r0, #3
40007714:	0a000017 	beq	40007778 <UVCAppEP0Thread_Entry+0x994>
40007718:	e3500001 	cmp	r0, #1
4000771c:	1a000008 	bne	40007744 <UVCAppEP0Thread_Entry+0x960>
                         {
                         	case 1: //1944
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007720:	e5952058 	ldr	r2, [r5, #88]	; 0x58
40007724:	e3a01030 	mov	r1, #48	; 0x30
40007728:	e3520000 	cmp	r2, #0
4000772c:	03a020e4 	moveq	r2, #228	; 0xe4
40007730:	13a02064 	movne	r2, #100	; 0x64
40007734:	e3a03052 	mov	r3, #82	; 0x52
40007738:	ebfff44b 	bl	4000486c <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
4000773c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007740:	eb0005a2 	bl	40008dd0 <_tx_thread_sleep>
                                //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
40007744:	e5d4c083 	ldrb	ip, [r4, #131]	; 0x83
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007748:	e3a02000 	mov	r2, #0
4000774c:	e59f01d0 	ldr	r0, [pc, #464]	; 40007924 <UVCAppEP0Thread_Entry+0xb40>
40007750:	e3a01001 	mov	r1, #1
                                //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
40007754:	e5c4c07d 	strb	ip, [r4, #125]	; 0x7d
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007758:	eb000a94 	bl	4000a1b0 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000775c:	e2502000 	subs	r2, r0, #0
40007760:	0afffddf 	beq	40006ee4 <UVCAppEP0Thread_Entry+0x100>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007764:	e3a00004 	mov	r0, #4
40007768:	e59f11e4 	ldr	r1, [pc, #484]	; 40007954 <UVCAppEP0Thread_Entry+0xb70>
4000776c:	eb002f0d 	bl	400133a8 <CyU3PDebugPrint>
40007770:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007774:	eafffddb 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                         		CyU3PThreadSleep(500);
                                //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
                         		break;
                         	case 3: //720
                         		SensorSetIrisControl(0x1, 0x30, ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007778:	e5952058 	ldr	r2, [r5, #88]	; 0x58
4000777c:	e5d6348c 	ldrb	r3, [r6, #1164]	; 0x48c
40007780:	e3520000 	cmp	r2, #0
40007784:	03a020c4 	moveq	r2, #196	; 0xc4
40007788:	13a02044 	movne	r2, #68	; 0x44
4000778c:	e1822003 	orr	r2, r2, r3
40007790:	e3a01030 	mov	r1, #48	; 0x30
40007794:	e3a03052 	mov	r3, #82	; 0x52
40007798:	e3a00001 	mov	r0, #1
4000779c:	ebfff432 	bl	4000486c <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
400077a0:	e3a00f7d 	mov	r0, #500	; 0x1f4
400077a4:	eb000589 	bl	40008dd0 <_tx_thread_sleep>
400077a8:	eaffffe5 	b	40007744 <UVCAppEP0Thread_Entry+0x960>
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                         		CyU3PThreadSleep(500);
                                //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
                         		break;
                         	case 2: //1080
                         		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400077ac:	e5952058 	ldr	r2, [r5, #88]	; 0x58
400077b0:	e3a01030 	mov	r1, #48	; 0x30
400077b4:	e3520000 	cmp	r2, #0
400077b8:	03a020d4 	moveq	r2, #212	; 0xd4
400077bc:	13a02054 	movne	r2, #84	; 0x54
400077c0:	e3a03052 	mov	r3, #82	; 0x52
400077c4:	e3a00001 	mov	r0, #1
400077c8:	ebfff427 	bl	4000486c <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
400077cc:	e3a00f7d 	mov	r0, #500	; 0x1f4
400077d0:	eb00057e 	bl	40008dd0 <_tx_thread_sleep>
400077d4:	eaffffda 	b	40007744 <UVCAppEP0Thread_Entry+0x960>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400077d8:	e5d41048 	ldrb	r1, [r4, #72]	; 0x48
400077dc:	e3510003 	cmp	r1, #3
400077e0:	1afffed2 	bne	40007330 <UVCAppEP0Thread_Entry+0x54c>
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
400077e4:	e3a0001a 	mov	r0, #26
400077e8:	e59f1198 	ldr	r1, [pc, #408]	; 40007988 <UVCAppEP0Thread_Entry+0xba4>
400077ec:	eb00582a 	bl	4001d89c <CyU3PUsbSendEP0Data>
400077f0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400077f4:	eafffdbb 	b	40006ee8 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
400077f8:	e3a00012 	mov	r0, #18
400077fc:	ebfff742 	bl	4000550c <ControlHandle>
40007800:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007804:	eafffdad 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007808:	e3a00011 	mov	r0, #17
4000780c:	ebfff73e 	bl	4000550c <ControlHandle>
40007810:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007814:	eafffda9 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
40007818:	e3a00013 	mov	r0, #19
4000781c:	ebfff73a 	bl	4000550c <ControlHandle>
40007820:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007824:	eafffda5 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
40007828:	e3a00018 	mov	r0, #24
4000782c:	ebfff736 	bl	4000550c <ControlHandle>
40007830:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007834:	eafffda1 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
40007838:	e3a00000 	mov	r0, #0
4000783c:	ebfffb03 	bl	40006450 <CTControlHandle>
40007840:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007844:	eafffd9d 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007848:	e3a00002 	mov	r0, #2
4000784c:	ebfffaff 	bl	40006450 <CTControlHandle>
40007850:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007854:	eafffd99 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007858:	e3a00005 	mov	r0, #5
4000785c:	ebfffafb 	bl	40006450 <CTControlHandle>
40007860:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007864:	eafffd95 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007868:	e3a00001 	mov	r0, #1
4000786c:	ebfff726 	bl	4000550c <ControlHandle>
40007870:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007874:	eafffd91 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
40007878:	e3a00000 	mov	r0, #0
4000787c:	ebfff722 	bl	4000550c <ControlHandle>
40007880:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007884:	eafffd8d 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
40007888:	e3a00002 	mov	r0, #2
4000788c:	ebfff71e 	bl	4000550c <ControlHandle>
40007890:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007894:	eafffd89 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
40007898:	e3a00005 	mov	r0, #5
4000789c:	ebfff71a 	bl	4000550c <ControlHandle>
400078a0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400078a4:	eafffd85 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
400078a8:	e3a00016 	mov	r0, #22
400078ac:	ebfff716 	bl	4000550c <ControlHandle>
400078b0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400078b4:	eafffd81 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
400078b8:	e3a0000a 	mov	r0, #10
400078bc:	ebfffae3 	bl	40006450 <CTControlHandle>
400078c0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400078c4:	eafffd7d 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400078c8:	e3a00009 	mov	r0, #9
400078cc:	ebfffadf 	bl	40006450 <CTControlHandle>
400078d0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400078d4:	eafffd79 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
400078d8:	e3a00015 	mov	r0, #21
400078dc:	ebfff70a 	bl	4000550c <ControlHandle>
400078e0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400078e4:	eafffd75 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400078e8:	e3a0000e 	mov	r0, #14
400078ec:	ebfff706 	bl	4000550c <ControlHandle>
400078f0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
400078f4:	eafffd71 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
			CTControlHandle(AutoExPCtlID2);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
400078f8:	e3a00003 	mov	r0, #3
400078fc:	ebfffad3 	bl	40006450 <CTControlHandle>
40007900:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007904:	eafffd6d 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007908:	e3a00002 	mov	r0, #2
4000790c:	e59f1058 	ldr	r1, [pc, #88]	; 4000796c <UVCAppEP0Thread_Entry+0xb88>
40007910:	eafffeb6 	b	400073f0 <UVCAppEP0Thread_Entry+0x60c>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID0-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCRangeCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID1-EXUAOFFSET][0];
      		ControlHandle(Ext1BLCWeightCtlID1);
40007914:	e3a00021 	mov	r0, #33	; 0x21
40007918:	ebfff6fb 	bl	4000550c <ControlHandle>
4000791c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
40007920:	eafffd66 	b	40006ec0 <UVCAppEP0Thread_Entry+0xdc>
40007924:	40030fb0 	.word	0x40030fb0
40007928:	40030000 	.word	0x40030000
4000792c:	40033164 	.word	0x40033164
40007930:	40032fe0 	.word	0x40032fe0
40007934:	40033010 	.word	0x40033010
40007938:	40033128 	.word	0x40033128
4000793c:	40011a38 	.word	0x40011a38
40007940:	40033050 	.word	0x40033050
40007944:	40032ee0 	.word	0x40032ee0
40007948:	40033012 	.word	0x40033012
4000794c:	400119bc 	.word	0x400119bc
40007950:	40031030 	.word	0x40031030
40007954:	40011a8c 	.word	0x40011a8c
40007958:	40011b08 	.word	0x40011b08
4000795c:	40011ae0 	.word	0x40011ae0
40007960:	40030668 	.word	0x40030668
40007964:	40030674 	.word	0x40030674
40007968:	40030630 	.word	0x40030630
4000796c:	4003100c 	.word	0x4003100c
40007970:	40011ab4 	.word	0x40011ab4
40007974:	40011b5c 	.word	0x40011b5c
40007978:	40011700 	.word	0x40011700
4000797c:	40030614 	.word	0x40030614
40007980:	40011a64 	.word	0x40011a64
40007984:	40011b34 	.word	0x40011b34
40007988:	4003064c 	.word	0x4003064c

4000798c <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
4000798c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007990:	e59f42ac 	ldr	r4, [pc, #684]	; 40007c44 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007994:	e59f22ac 	ldr	r2, [pc, #684]	; 40007c48 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
40007998:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
4000799c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400079a0:	e592001c 	ldr	r0, [r2, #28]
400079a4:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400079a8:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
400079ac:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400079b0:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400079b4:	eb000a95 	bl	4000a410 <_txe_mutex_get>
    if(Data1&0x80){
400079b8:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400079bc:	12066001 	andne	r6, r6, #1
400079c0:	11e06006 	mvnne	r6, r6
400079c4:	1206603b 	andne	r6, r6, #59	; 0x3b
400079c8:	11e06006 	mvnne	r6, r6
400079cc:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
400079d0:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400079d4:	e3a08000 	mov	r8, #0
400079d8:	e1a0200a 	mov	r2, sl
400079dc:	e1a03007 	mov	r3, r7
400079e0:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400079e4:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400079e8:	e59f0258 	ldr	r0, [pc, #600]	; 40007c48 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400079ec:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400079f0:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400079f4:	e88d0140 	stm	sp, {r6, r8}
400079f8:	ebffeeae 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400079fc:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
40007a00:	e1a01009 	mov	r1, r9
40007a04:	e1a03007 	mov	r3, r7
40007a08:	e59f0238 	ldr	r0, [pc, #568]	; 40007c48 <CamDefSet+0x2bc>
40007a0c:	e88d0220 	stm	sp, {r5, r9}
40007a10:	ebffeea8 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007a14:	e1a02006 	mov	r2, r6
40007a18:	e1a03005 	mov	r3, r5
40007a1c:	e59f1228 	ldr	r1, [pc, #552]	; 40007c4c <CamDefSet+0x2c0>
40007a20:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
40007a24:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007a28:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007a2c:	eb002e5d 	bl	400133a8 <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007a30:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
40007a34:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007a38:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007a3c:	e3a01002 	mov	r1, #2
40007a40:	e59f0200 	ldr	r0, [pc, #512]	; 40007c48 <CamDefSet+0x2bc>
40007a44:	e58db000 	str	fp, [sp]
40007a48:	e58d8004 	str	r8, [sp, #4]
40007a4c:	ebffee99 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a50:	e1a0200b 	mov	r2, fp
40007a54:	e1a03005 	mov	r3, r5
40007a58:	e59f11ec 	ldr	r1, [pc, #492]	; 40007c4c <CamDefSet+0x2c0>
40007a5c:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007a60:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a64:	eb002e4f 	bl	400133a8 <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007a68:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007a6c:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007a70:	e247b080 	sub	fp, r7, #128	; 0x80
40007a74:	e20b10ff 	and	r1, fp, #255	; 0xff
40007a78:	e58d1014 	str	r1, [sp, #20]
40007a7c:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007a80:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007a84:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007a88:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007a8c:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007a90:	e3a01005 	mov	r1, #5
40007a94:	e3a020df 	mov	r2, #223	; 0xdf
40007a98:	e59f01a8 	ldr	r0, [pc, #424]	; 40007c48 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007a9c:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007aa0:	e58dc000 	str	ip, [sp]
40007aa4:	e58d8004 	str	r8, [sp, #4]
40007aa8:	ebffee82 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007aac:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007ab0:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007ab4:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007ab8:	e1a03006 	mov	r3, r6
40007abc:	e3a01005 	mov	r1, #5
40007ac0:	e3a020dc 	mov	r2, #220	; 0xdc
40007ac4:	e59f017c 	ldr	r0, [pc, #380]	; 40007c48 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007ac8:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007acc:	e58dc000 	str	ip, [sp]
40007ad0:	e58d9004 	str	r9, [sp, #4]
40007ad4:	ebffee77 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007ad8:	e59d001c 	ldr	r0, [sp, #28]
40007adc:	e3a0e002 	mov	lr, #2
40007ae0:	e200c0ff 	and	ip, r0, #255	; 0xff
40007ae4:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007ae8:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007aec:	e3a01005 	mov	r1, #5
40007af0:	e3a020de 	mov	r2, #222	; 0xde
40007af4:	e59f014c 	ldr	r0, [pc, #332]	; 40007c48 <CamDefSet+0x2bc>
40007af8:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007afc:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007b00:	e58dc000 	str	ip, [sp]
40007b04:	ebffee6b 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007b08:	e59da020 	ldr	sl, [sp, #32]
40007b0c:	e1a03006 	mov	r3, r6
40007b10:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007b14:	e58dc000 	str	ip, [sp]
40007b18:	e3a01005 	mov	r1, #5
40007b1c:	e3a0c003 	mov	ip, #3
40007b20:	e3a020e0 	mov	r2, #224	; 0xe0
40007b24:	e59f011c 	ldr	r0, [pc, #284]	; 40007c48 <CamDefSet+0x2bc>
40007b28:	e58dc004 	str	ip, [sp, #4]
40007b2c:	ebffee61 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007b30:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40007b34:	e3a0a004 	mov	sl, #4
40007b38:	e200c0ff 	and	ip, r0, #255	; 0xff
40007b3c:	e1a03006 	mov	r3, r6
40007b40:	e3a01005 	mov	r1, #5
40007b44:	e3a020dd 	mov	r2, #221	; 0xdd
40007b48:	e59f00f8 	ldr	r0, [pc, #248]	; 40007c48 <CamDefSet+0x2bc>
40007b4c:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007b50:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007b54:	e58da004 	str	sl, [sp, #4]
40007b58:	ebffee56 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007b5c:	e3a0e005 	mov	lr, #5
40007b60:	e1a0100e 	mov	r1, lr
40007b64:	e1a03006 	mov	r3, r6
40007b68:	e3a020e1 	mov	r2, #225	; 0xe1
40007b6c:	e20760ff 	and	r6, r7, #255	; 0xff
40007b70:	e59f00d0 	ldr	r0, [pc, #208]	; 40007c48 <CamDefSet+0x2bc>
40007b74:	e88d4040 	stm	sp, {r6, lr}
40007b78:	ebffee4e 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007b7c:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007b80:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40007b84:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007b88:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007b8c:	e59dc020 	ldr	ip, [sp, #32]
40007b90:	e1a0200b 	mov	r2, fp
40007b94:	e59d3018 	ldr	r3, [sp, #24]
40007b98:	e59f10b0 	ldr	r1, [pc, #176]	; 40007c50 <CamDefSet+0x2c4>
40007b9c:	e1a0000a 	mov	r0, sl
40007ba0:	e88d5040 	stm	sp, {r6, ip, lr}
40007ba4:	e58d700c 	str	r7, [sp, #12]
40007ba8:	eb002dfe 	bl	400133a8 <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007bac:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
40007bb0:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
40007bb4:	e1a03007 	mov	r3, r7
40007bb8:	e3a01006 	mov	r1, #6
40007bbc:	e3a02085 	mov	r2, #133	; 0x85
40007bc0:	e59f0080 	ldr	r0, [pc, #128]	; 40007c48 <CamDefSet+0x2bc>
40007bc4:	e88d0140 	stm	sp, {r6, r8}
40007bc8:	ebffee3a 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007bcc:	e1a03007 	mov	r3, r7
40007bd0:	e3a01006 	mov	r1, #6
40007bd4:	e3a02086 	mov	r2, #134	; 0x86
40007bd8:	e59f0068 	ldr	r0, [pc, #104]	; 40007c48 <CamDefSet+0x2bc>
40007bdc:	e88d0240 	stm	sp, {r6, r9}
40007be0:	ebffee34 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007be4:	e1a02006 	mov	r2, r6
40007be8:	e1a03005 	mov	r3, r5
40007bec:	e59f1058 	ldr	r1, [pc, #88]	; 40007c4c <CamDefSet+0x2c0>
40007bf0:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
40007bf4:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007bf8:	eb002dea 	bl	400133a8 <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007bfc:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
40007c00:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
40007c04:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
40007c08:	e3a01007 	mov	r1, #7
40007c0c:	e59f0034 	ldr	r0, [pc, #52]	; 40007c48 <CamDefSet+0x2bc>
40007c10:	e88d0140 	stm	sp, {r6, r8}
40007c14:	ebffee27 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007c18:	e1a03005 	mov	r3, r5
40007c1c:	e1a0000a 	mov	r0, sl
40007c20:	e59f1024 	ldr	r1, [pc, #36]	; 40007c4c <CamDefSet+0x2c0>
40007c24:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007c28:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007c2c:	eb002ddd 	bl	400133a8 <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007c30:	e59f3010 	ldr	r3, [pc, #16]	; 40007c48 <CamDefSet+0x2bc>
40007c34:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007c38:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007c3c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007c40:	ea000a27 	b	4000a4e4 <_txe_mutex_put>
40007c44:	40030000 	.word	0x40030000
40007c48:	40032ee4 	.word	0x40032ee4
40007c4c:	40011b90 	.word	0x40011b90
40007c50:	40011bb0 	.word	0x40011bb0

40007c54 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007c54:	e92d4038 	push	{r3, r4, r5, lr}
40007c58:	e1a04000 	mov	r4, r0
40007c5c:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40007c60:	e59f0030 	ldr	r0, [pc, #48]	; 40007c98 <CyFxUVCAddHeader+0x44>
40007c64:	e3e01000 	mvn	r1, #0
40007c68:	eb0009e8 	bl	4000a410 <_txe_mutex_get>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007c6c:	e1a00004 	mov	r0, r4
40007c70:	e59f1024 	ldr	r1, [pc, #36]	; 40007c9c <CyFxUVCAddHeader+0x48>
40007c74:	e3a0200c 	mov	r2, #12
40007c78:	ebffef15 	bl	400038d4 <CyU3PMemCopy>
	CyU3PMutexPut(&imgHdMux);
40007c7c:	e59f0014 	ldr	r0, [pc, #20]	; 40007c98 <CyFxUVCAddHeader+0x44>
40007c80:	eb000a17 	bl	4000a4e4 <_txe_mutex_put>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007c84:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007c88:	15d43001 	ldrbne	r3, [r4, #1]
40007c8c:	13833002 	orrne	r3, r3, #2
40007c90:	15c43001 	strbne	r3, [r4, #1]
40007c94:	e8bd8038 	pop	{r3, r4, r5, pc}
40007c98:	400330f0 	.word	0x400330f0
40007c9c:	40030480 	.word	0x40030480

40007ca0 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007ca0:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ca4:	e59f1010 	ldr	r1, [pc, #16]	; 40007cbc <CyFxAppErrorHandler+0x1c>
40007ca8:	e3a00004 	mov	r0, #4
40007cac:	eb002dbd 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007cb0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007cb4:	eb000445 	bl	40008dd0 <_tx_thread_sleep>
40007cb8:	eafffff9 	b	40007ca4 <CyFxAppErrorHandler+0x4>
40007cbc:	40011700 	.word	0x40011700

40007cc0 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007cc0:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007cc4:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007cc8:	eb006d26 	bl	40023168 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ccc:	e2504000 	subs	r4, r0, #0
40007cd0:	0a000004 	beq	40007ce8 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007cd4:	e3a00004 	mov	r0, #4
40007cd8:	e59f1b50 	ldr	r1, [pc, #2896]	; 40008830 <UVCAppThread_Entry+0xb70>
40007cdc:	eb002db1 	bl	400133a8 <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007ce0:	e1a00004 	mov	r0, r4
40007ce4:	ebffffed 	bl	40007ca0 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007ce8:	e59fcb44 	ldr	ip, [pc, #2884]	; 40008834 <UVCAppThread_Entry+0xb74>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007cec:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007cf0:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007cf4:	e28d0050 	add	r0, sp, #80	; 0x50
40007cf8:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007cfc:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007d00:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007d04:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007d08:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007d0c:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007d10:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007d14:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007d18:	eb006d8b 	bl	4002334c <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d1c:	e3500000 	cmp	r0, #0
40007d20:	0a000000 	beq	40007d28 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007d24:	ebffffdd 	bl	40007ca0 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007d28:	e3e00000 	mvn	r0, #0
40007d2c:	eb006e0d 	bl	40023568 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d30:	e3500000 	cmp	r0, #0
40007d34:	0a000000 	beq	40007d3c <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007d38:	ebffffd8 	bl	40007ca0 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007d3c:	e3a00003 	mov	r0, #3
40007d40:	e3a01004 	mov	r1, #4
40007d44:	eb002d0f 	bl	40013188 <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d48:	e3500000 	cmp	r0, #0
40007d4c:	0a000000 	beq	40007d54 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007d50:	ebffffd2 	bl	40007ca0 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007d54:	e3a00000 	mov	r0, #0
40007d58:	eb002d8e 	bl	40013398 <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007d5c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d60:	eb00041a 	bl	40008dd0 <_tx_thread_sleep>
40007d64:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d68:	eb000418 	bl	40008dd0 <_tx_thread_sleep>
40007d6c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d70:	eb000416 	bl	40008dd0 <_tx_thread_sleep>
40007d74:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d78:	eb000414 	bl	40008dd0 <_tx_thread_sleep>
40007d7c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d80:	eb000412 	bl	40008dd0 <_tx_thread_sleep>
40007d84:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007d88:	eb000410 	bl	40008dd0 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007d8c:	eb006e83 	bl	400237a0 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007d90:	e2504000 	subs	r4, r0, #0
40007d94:	0a000004 	beq	40007dac <UVCAppThread_Entry+0xec>
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007d98:	e3a00004 	mov	r0, #4
40007d9c:	e59f1a94 	ldr	r1, [pc, #2708]	; 40008838 <UVCAppThread_Entry+0xb78>
40007da0:	eb002d80 	bl	400133a8 <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007da4:	e1a00004 	mov	r0, r4
40007da8:	ebffffbc 	bl	40007ca0 <CyFxAppErrorHandler>
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007dac:	e59f6a88 	ldr	r6, [pc, #2696]	; 4000883c <UVCAppThread_Entry+0xb7c>
    i2cConfig.isDma      = CyFalse;
40007db0:	e3a05000 	mov	r5, #0
    i2cConfig.busTimeout = 0xffffffffU;
40007db4:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007db8:	e28d008c 	add	r0, sp, #140	; 0x8c
40007dbc:	e1a01005 	mov	r1, r5
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007dc0:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007dc4:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007dc8:	e58d608c 	str	r6, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007dcc:	e58d5090 	str	r5, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007dd0:	eb006f6b 	bl	40023b84 <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007dd4:	e2504000 	subs	r4, r0, #0
40007dd8:	0a000004 	beq	40007df0 <UVCAppThread_Entry+0x130>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007ddc:	e3a00004 	mov	r0, #4
40007de0:	e59f1a58 	ldr	r1, [pc, #2648]	; 40008840 <UVCAppThread_Entry+0xb80>
40007de4:	eb002d6f 	bl	400133a8 <CyU3PDebugPrint>
        CyFxAppErrorHandler (status);
40007de8:	e1a00004 	mov	r0, r4
40007dec:	ebffffab 	bl	40007ca0 <CyFxAppErrorHandler>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007df0:	e59f4a4c 	ldr	r4, [pc, #2636]	; 40008844 <UVCAppThread_Entry+0xb84>
40007df4:	e3a02028 	mov	r2, #40	; 0x28
40007df8:	e3a01000 	mov	r1, #0
40007dfc:	e1a00004 	mov	r0, r4
40007e00:	eb00084a 	bl	40009f30 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007e04:	e2502000 	subs	r2, r0, #0
40007e08:	1a0000f8 	bne	400081f0 <UVCAppThread_Entry+0x530>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007e0c:	e3a06002 	mov	r6, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007e10:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007e14:	e5842030 	str	r2, [r4, #48]	; 0x30
    clearFeatureRqtReceived = CyFalse;
40007e18:	e5842044 	str	r2, [r4, #68]	; 0x44

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007e1c:	e3a07003 	mov	r7, #3
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007e20:	e28d009c 	add	r0, sp, #156	; 0x9c
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007e24:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007e28:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007e2c:	e5cd609c 	strb	r6, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007e30:	e5cd609d 	strb	r6, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007e34:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007e38:	eb006b60 	bl	40022bc0 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007e3c:	e2502000 	subs	r2, r0, #0
40007e40:	1a0000fc 	bne	40008238 <UVCAppThread_Entry+0x578>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007e44:	e3a00016 	mov	r0, #22
40007e48:	e3a01001 	mov	r1, #1
40007e4c:	eb002c45 	bl	40012f68 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007e50:	e2502000 	subs	r2, r0, #0
40007e54:	1a0000ee 	bne	40008214 <UVCAppThread_Entry+0x554>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007e58:	e3a00014 	mov	r0, #20
40007e5c:	e3a01001 	mov	r1, #1
40007e60:	eb002c40 	bl	40012f68 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007e64:	e2502000 	subs	r2, r0, #0
40007e68:	1a0000fb 	bne	4000825c <UVCAppThread_Entry+0x59c>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007e6c:	e3a00018 	mov	r0, #24
40007e70:	e3a01001 	mov	r1, #1
40007e74:	eb002c3b 	bl	40012f68 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007e78:	e2502000 	subs	r2, r0, #0
40007e7c:	1a0001d6 	bne	400085dc <UVCAppThread_Entry+0x91c>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007e80:	e3a05001 	mov	r5, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007e84:	e3a00016 	mov	r0, #22
40007e88:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007e8c:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007e90:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007e94:	e58d5068 	str	r5, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007e98:	e58d506c 	str	r5, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007e9c:	e58d5070 	str	r5, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007ea0:	eb006bfe 	bl	40022ea0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ea4:	e2502000 	subs	r2, r0, #0
40007ea8:	1a0001c2 	bne	400085b8 <UVCAppThread_Entry+0x8f8>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007eac:	e3a00014 	mov	r0, #20
40007eb0:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007eb4:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007eb8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007ebc:	e58d5068 	str	r5, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007ec0:	e58d506c 	str	r5, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007ec4:	e58d5070 	str	r5, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007ec8:	eb006bf4 	bl	40022ea0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ecc:	e2502000 	subs	r2, r0, #0
40007ed0:	1a0001ca 	bne	40008600 <UVCAppThread_Entry+0x940>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007ed4:	e3a00018 	mov	r0, #24
40007ed8:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007edc:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007ee0:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007ee4:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ee8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007eec:	e58d5074 	str	r5, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007ef0:	eb006bea 	bl	40022ea0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ef4:	e2502000 	subs	r2, r0, #0
40007ef8:	1a0001a5 	bne	40008594 <UVCAppThread_Entry+0x8d4>
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007efc:	e1a00005 	mov	r0, r5
40007f00:	e28d107c 	add	r1, sp, #124	; 0x7c
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007f04:	e58d2084 	str	r2, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007f08:	e58d2080 	str	r2, [sp, #128]	; 0x80
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007f0c:	e1cd67bc 	strh	r6, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007f10:	e5cd7088 	strb	r7, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007f14:	eb004c7b 	bl	4001b108 <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f18:	e2502000 	subs	r2, r0, #0
40007f1c:	1a000193 	bne	40008570 <UVCAppThread_Entry+0x8b0>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007f20:	e59f0920 	ldr	r0, [pc, #2336]	; 40008848 <UVCAppThread_Entry+0xb88>
40007f24:	eb004ef5 	bl	4001bb00 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007f28:	ebfff1b6 	bl	40004608 <SensorReset>
    CyU3PThreadSleep(5000);
40007f2c:	e59f0918 	ldr	r0, [pc, #2328]	; 4000884c <UVCAppThread_Entry+0xb8c>
40007f30:	eb0003a6 	bl	40008dd0 <_tx_thread_sleep>
    //SensorInit ();

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007f34:	eb005967 	bl	4001e4d8 <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f38:	e2502000 	subs	r2, r0, #0
40007f3c:	1a000182 	bne	4000854c <UVCAppThread_Entry+0x88c>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007f40:	e3a01000 	mov	r1, #0
40007f44:	e59f0904 	ldr	r0, [pc, #2308]	; 40008850 <UVCAppThread_Entry+0xb90>
40007f48:	eb006419 	bl	40020fb4 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007f4c:	e59f0900 	ldr	r0, [pc, #2304]	; 40008854 <UVCAppThread_Entry+0xb94>
40007f50:	eb006402 	bl	40020f60 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007f54:	e3a01000 	mov	r1, #0
40007f58:	e59f28f8 	ldr	r2, [pc, #2296]	; 40008858 <UVCAppThread_Entry+0xb98>
40007f5c:	e3a00001 	mov	r0, #1
40007f60:	eb00573c 	bl	4001dc58 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007f64:	e3a00000 	mov	r0, #0
40007f68:	e1a01000 	mov	r1, r0
40007f6c:	e59f28e8 	ldr	r2, [pc, #2280]	; 4000885c <UVCAppThread_Entry+0xb9c>
40007f70:	eb005738 	bl	4001dc58 <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007f74:	e3a01000 	mov	r1, #0
40007f78:	e59f28e0 	ldr	r2, [pc, #2272]	; 40008860 <UVCAppThread_Entry+0xba0>
40007f7c:	e3a00002 	mov	r0, #2
40007f80:	eb005734 	bl	4001dc58 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007f84:	e3a01000 	mov	r1, #0
40007f88:	e59f28d4 	ldr	r2, [pc, #2260]	; 40008864 <UVCAppThread_Entry+0xba4>
40007f8c:	e3a00007 	mov	r0, #7
40007f90:	eb005730 	bl	4001dc58 <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007f94:	e3a01000 	mov	r1, #0
40007f98:	e59f28c8 	ldr	r2, [pc, #2248]	; 40008868 <UVCAppThread_Entry+0xba8>
40007f9c:	e3a00004 	mov	r0, #4
40007fa0:	eb00572c 	bl	4001dc58 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007fa4:	e3a01000 	mov	r1, #0
40007fa8:	e59f28bc 	ldr	r2, [pc, #2236]	; 4000886c <UVCAppThread_Entry+0xbac>
40007fac:	e3a00003 	mov	r0, #3
40007fb0:	eb005728 	bl	4001dc58 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007fb4:	e3a01000 	mov	r1, #0
40007fb8:	e59f28b0 	ldr	r2, [pc, #2224]	; 40008870 <UVCAppThread_Entry+0xbb0>
40007fbc:	e3a00006 	mov	r0, #6
40007fc0:	eb005724 	bl	4001dc58 <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007fc4:	e3a01000 	mov	r1, #0
40007fc8:	e59f28a4 	ldr	r2, [pc, #2212]	; 40008874 <UVCAppThread_Entry+0xbb4>
40007fcc:	e3a00005 	mov	r0, #5
40007fd0:	eb005720 	bl	4001dc58 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007fd4:	e3a01001 	mov	r1, #1
40007fd8:	e59f2898 	ldr	r2, [pc, #2200]	; 40008878 <UVCAppThread_Entry+0xbb8>
40007fdc:	e3a00005 	mov	r0, #5
40007fe0:	eb00571c 	bl	4001dc58 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007fe4:	e3a01002 	mov	r1, #2
40007fe8:	e59f288c 	ldr	r2, [pc, #2188]	; 4000887c <UVCAppThread_Entry+0xbbc>
40007fec:	e3a00005 	mov	r0, #5
40007ff0:	eb005718 	bl	4001dc58 <CyU3PUsbSetDesc>
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40007ff4:	e3a08000 	mov	r8, #0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007ff8:	e3a05001 	mov	r5, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007ffc:	e3a07040 	mov	r7, #64	; 0x40
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40008000:	e3a00082 	mov	r0, #130	; 0x82
40008004:	e28d10a8 	add	r1, sp, #168	; 0xa8
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40008008:	e3a0a003 	mov	sl, #3
    endPointConfig.pcktSize = 64;
4000800c:	e1cd7bb0 	strh	r7, [sp, #176]	; 0xb0
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40008010:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40008014:	e5cda0ac 	strb	sl, [sp, #172]	; 0xac
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
40008018:	e5cd80b3 	strb	r8, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
4000801c:	e1cd8abe 	strh	r8, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40008020:	e5cd50b2 	strb	r5, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40008024:	eb005072 	bl	4001c1f4 <CyU3PSetEpConfig>
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
40008028:	e1a07008 	mov	r7, r8
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
4000802c:	e2503000 	subs	r3, r0, #0
40008030:	1a00013b 	bne	40008524 <UVCAppThread_Entry+0x864>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40008034:	e59fc844 	ldr	ip, [pc, #2116]	; 40008880 <UVCAppThread_Entry+0xbc0>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40008038:	e59fe844 	ldr	lr, [pc, #2116]	; 40008884 <UVCAppThread_Entry+0xbc4>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
4000803c:	e3a06b01 	mov	r6, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40008040:	e3a08010 	mov	r8, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40008044:	e59f083c 	ldr	r0, [pc, #2108]	; 40008888 <UVCAppThread_Entry+0xbc8>
40008048:	e3a01004 	mov	r1, #4
4000804c:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40008050:	e1cd63b4 	strh	r6, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40008054:	e1cd53b6 	strh	r5, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40008058:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
4000805c:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40008060:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40008064:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40008068:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
4000806c:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40008070:	e5cd7044 	strb	r7, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40008074:	e58d8048 	str	r8, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40008078:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
4000807c:	eb0036df 	bl	40015c00 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40008080:	e2506000 	subs	r6, r0, #0
40008084:	1a0000df 	bne	40008408 <UVCAppThread_Entry+0x748>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40008088:	e3a00b01 	mov	r0, #1024	; 0x400
4000808c:	ebffef35 	bl	40003d68 <CyU3PDmaBufferAlloc>
40008090:	e59f17f4 	ldr	r1, [pc, #2036]	; 4000888c <UVCAppThread_Entry+0xbcc>
    if (glInterStaBuffer == 0)
40008094:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40008098:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
4000809c:	0a0000d0 	beq	400083e4 <UVCAppThread_Entry+0x724>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
400080a0:	e1a01006 	mov	r1, r6
400080a4:	e1a02006 	mov	r2, r6
400080a8:	e3a03038 	mov	r3, #56	; 0x38
400080ac:	e59f07dc 	ldr	r0, [pc, #2012]	; 40008890 <UVCAppThread_Entry+0xbd0>
400080b0:	eb000858 	bl	4000a218 <_txe_mutex_create>
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
400080b4:	e3a03004 	mov	r3, #4
400080b8:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
400080bc:	e59f37d0 	ldr	r3, [pc, #2000]	; 40008894 <UVCAppThread_Entry+0xbd4>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
400080c0:	e3a0c901 	mov	ip, #16384	; 0x4000
400080c4:	e1cdc0bc 	strh	ip, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
400080c8:	e3a0cc01 	mov	ip, #256	; 0x100
400080cc:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
400080d0:	e1cd31b4 	strh	r3, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
400080d4:	e59fc7bc 	ldr	ip, [pc, #1980]	; 40008898 <UVCAppThread_Entry+0xbd8>
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
400080d8:	e3a0300c 	mov	r3, #12
400080dc:	e1cd32b4 	strh	r3, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
400080e0:	e59f37b4 	ldr	r3, [pc, #1972]	; 4000889c <UVCAppThread_Entry+0xbdc>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
400080e4:	e28d200c 	add	r2, sp, #12
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
400080e8:	e1cdc1ba 	strh	ip, [sp, #26]
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
400080ec:	e5cd702a 	strb	r7, [sp, #42]	; 0x2a
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
400080f0:	e3a0c004 	mov	ip, #4

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
400080f4:	e3a0a002 	mov	sl, #2
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
400080f8:	e59f07a0 	ldr	r0, [pc, #1952]	; 400088a0 <UVCAppThread_Entry+0xbe0>
400080fc:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40008100:	e3a07018 	mov	r7, #24

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40008104:	e1cda1b0 	strh	sl, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40008108:	e1cd62b2 	strh	r6, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
4000810c:	e1cdc2b6 	strh	ip, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40008110:	e1cd62b8 	strh	r6, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40008114:	e58d702c 	str	r7, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40008118:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
4000811c:	eb003fd7 	bl	40018080 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40008120:	e2502000 	subs	r2, r0, #0
40008124:	1a0000a5 	bne	400083c0 <UVCAppThread_Entry+0x700>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40008128:	e1a00005 	mov	r0, r5
4000812c:	e1a01005 	mov	r1, r5
40008130:	eb004f2b 	bl	4001bde4 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008134:	e2502000 	subs	r2, r0, #0
40008138:	1a000097 	bne	4000839c <UVCAppThread_Entry+0x6dc>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
4000813c:	e3a00064 	mov	r0, #100	; 0x64
40008140:	eb002e09 	bl	4001396c <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40008144:	eb0053d8 	bl	4001d0ac <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40008148:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
4000814c:	e5cda0ac 	strb	sl, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40008150:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40008154:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40008158:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
4000815c:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40008160:	e5c40048 	strb	r0, [r4, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40008164:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40008168:	03a0ab01 	moveq	sl, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
4000816c:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40008170:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40008174:	01cdabb0 	strheq	sl, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40008178:	05cd80b2 	strbeq	r8, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
4000817c:	15cd50b2 	strbne	r5, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40008180:	eb00501b 	bl	4001c1f4 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008184:	e2502000 	subs	r2, r0, #0
40008188:	1a00004f 	bne	400082cc <UVCAppThread_Entry+0x60c>
4000818c:	e59f7710 	ldr	r7, [pc, #1808]	; 400088a4 <UVCAppThread_Entry+0xbe4>
    //CyU3PThreadSleep(1000);

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40008190:	e59f56ac 	ldr	r5, [pc, #1708]	; 40008844 <UVCAppThread_Entry+0xb84>
40008194:	e1a06002 	mov	r6, r2
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40008198:	e3e08000 	mvn	r8, #0
    //CyU3PThreadSleep(1000);

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
4000819c:	e59f06a0 	ldr	r0, [pc, #1696]	; 40008844 <UVCAppThread_Entry+0xb84>
400081a0:	e3a01001 	mov	r1, #1
400081a4:	e3a02002 	mov	r2, #2
400081a8:	e28d30b4 	add	r3, sp, #180	; 0xb4
400081ac:	e58d6000 	str	r6, [sp]
400081b0:	eb0007ce 	bl	4000a0f0 <_txe_event_flags_get>
400081b4:	e3500000 	cmp	r0, #0
400081b8:	1a000030 	bne	40008280 <UVCAppThread_Entry+0x5c0>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
400081bc:	e595e03c 	ldr	lr, [r5, #60]	; 0x3c
400081c0:	e35e0000 	cmp	lr, #0
400081c4:	0a000003 	beq	400081d8 <UVCAppThread_Entry+0x518>
400081c8:	e1d514b0 	ldrh	r1, [r5, #64]	; 0x40
400081cc:	e1d534b2 	ldrh	r3, [r5, #66]	; 0x42
400081d0:	e1510003 	cmp	r1, r3
400081d4:	0a000112 	beq	40008624 <UVCAppThread_Entry+0x964>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
400081d8:	e3a01040 	mov	r1, #64	; 0x40
400081dc:	e3a02000 	mov	r2, #0
400081e0:	e59f065c 	ldr	r0, [pc, #1628]	; 40008844 <UVCAppThread_Entry+0xb84>
400081e4:	eb0007f1 	bl	4000a1b0 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
400081e8:	eb000aa9 	bl	4000ac94 <_txe_thread_relinquish>
    }
400081ec:	eaffffea 	b	4000819c <UVCAppThread_Entry+0x4dc>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
400081f0:	e3a00004 	mov	r0, #4
400081f4:	e59f16ac 	ldr	r1, [pc, #1708]	; 400088a8 <UVCAppThread_Entry+0xbe8>
400081f8:	eb002c6a 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081fc:	e59f16a8 	ldr	r1, [pc, #1704]	; 400088ac <UVCAppThread_Entry+0xbec>
40008200:	e3a00004 	mov	r0, #4
40008204:	eb002c67 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008208:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000820c:	eb0002ef 	bl	40008dd0 <_tx_thread_sleep>
40008210:	eafffff9 	b	400081fc <UVCAppThread_Entry+0x53c>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40008214:	e3a00004 	mov	r0, #4
40008218:	e59f1690 	ldr	r1, [pc, #1680]	; 400088b0 <UVCAppThread_Entry+0xbf0>
4000821c:	eb002c61 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008220:	e59f1684 	ldr	r1, [pc, #1668]	; 400088ac <UVCAppThread_Entry+0xbec>
40008224:	e3a00004 	mov	r0, #4
40008228:	eb002c5e 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000822c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008230:	eb0002e6 	bl	40008dd0 <_tx_thread_sleep>
40008234:	eafffff9 	b	40008220 <UVCAppThread_Entry+0x560>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40008238:	e3a00004 	mov	r0, #4
4000823c:	e59f1670 	ldr	r1, [pc, #1648]	; 400088b4 <UVCAppThread_Entry+0xbf4>
40008240:	eb002c58 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008244:	e59f1660 	ldr	r1, [pc, #1632]	; 400088ac <UVCAppThread_Entry+0xbec>
40008248:	e3a00004 	mov	r0, #4
4000824c:	eb002c55 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008250:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008254:	eb0002dd 	bl	40008dd0 <_tx_thread_sleep>
40008258:	eafffff9 	b	40008244 <UVCAppThread_Entry+0x584>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
4000825c:	e3a00004 	mov	r0, #4
40008260:	e59f1650 	ldr	r1, [pc, #1616]	; 400088b8 <UVCAppThread_Entry+0xbf8>
40008264:	eb002c4f 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008268:	e59f163c 	ldr	r1, [pc, #1596]	; 400088ac <UVCAppThread_Entry+0xbec>
4000826c:	e3a00004 	mov	r0, #4
40008270:	eb002c4c 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008274:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008278:	eb0002d4 	bl	40008dd0 <_tx_thread_sleep>
4000827c:	eafffff9 	b	40008268 <UVCAppThread_Entry+0x5a8>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40008280:	e59f05bc 	ldr	r0, [pc, #1468]	; 40008844 <UVCAppThread_Entry+0xb84>
40008284:	e3a01002 	mov	r1, #2
40008288:	e3a02003 	mov	r2, #3
4000828c:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008290:	e58d6000 	str	r6, [sp]
40008294:	eb000795 	bl	4000a0f0 <_txe_event_flags_get>
40008298:	e3500000 	cmp	r0, #0
4000829c:	1a000025 	bne	40008338 <UVCAppThread_Entry+0x678>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
400082a0:	e5951044 	ldr	r1, [r5, #68]	; 0x44
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
400082a4:	e585603c 	str	r6, [r5, #60]	; 0x3c
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
400082a8:	e3510000 	cmp	r1, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
400082ac:	e1c564b0 	strh	r6, [r5, #64]	; 0x40
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
400082b0:	e1c563b4 	strh	r6, [r5, #52]	; 0x34
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
400082b4:	e1c564b2 	strh	r6, [r5, #66]	; 0x42
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
400082b8:	e1c563b6 	strh	r6, [r5, #54]	; 0x36
                pbc=0;
400082bc:	e1c563b8 	strh	r6, [r5, #56]	; 0x38

                if (!clearFeatureRqtReceived)
400082c0:	0a00000a 	beq	400082f0 <UVCAppThread_Entry+0x630>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
400082c4:	e5846044 	str	r6, [r4, #68]	; 0x44
400082c8:	eaffffc2 	b	400081d8 <UVCAppThread_Entry+0x518>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400082cc:	e3a00004 	mov	r0, #4
400082d0:	e59f15e4 	ldr	r1, [pc, #1508]	; 400088bc <UVCAppThread_Entry+0xbfc>
400082d4:	eb002c33 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082d8:	e59f15cc 	ldr	r1, [pc, #1484]	; 400088ac <UVCAppThread_Entry+0xbec>
400082dc:	e3a00004 	mov	r0, #4
400082e0:	eb002c30 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082e4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082e8:	eb0002b8 	bl	40008dd0 <_tx_thread_sleep>
400082ec:	eafffff9 	b	400082d8 <UVCAppThread_Entry+0x618>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400082f0:	e59f05a8 	ldr	r0, [pc, #1448]	; 400088a0 <UVCAppThread_Entry+0xbe0>
400082f4:	eb004132 	bl	400187c4 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
400082f8:	e3500000 	cmp	r0, #0
400082fc:	1a000002 	bne	4000830c <UVCAppThread_Entry+0x64c>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008300:	e3a00083 	mov	r0, #131	; 0x83
40008304:	eb0052c3 	bl	4001ce18 <CyU3PUsbFlushEp>
40008308:	eaffffed 	b	400082c4 <UVCAppThread_Entry+0x604>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000830c:	e59f1598 	ldr	r1, [pc, #1432]	; 400088ac <UVCAppThread_Entry+0xbec>
40008310:	e3a00004 	mov	r0, #4
40008314:	eb002c23 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008318:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000831c:	eb0002ab 	bl	40008dd0 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008320:	e59f1584 	ldr	r1, [pc, #1412]	; 400088ac <UVCAppThread_Entry+0xbec>
40008324:	e3a00004 	mov	r0, #4
40008328:	eb002c1e 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000832c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008330:	eb0002a6 	bl	40008dd0 <_tx_thread_sleep>
40008334:	eafffff4 	b	4000830c <UVCAppThread_Entry+0x64c>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40008338:	e3a01001 	mov	r1, #1
4000833c:	e3a02002 	mov	r2, #2
40008340:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008344:	e59f04f8 	ldr	r0, [pc, #1272]	; 40008844 <UVCAppThread_Entry+0xb84>
40008348:	e58d8000 	str	r8, [sp]
4000834c:	eb000767 	bl	4000a0f0 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008350:	e1a02006 	mov	r2, r6
40008354:	e59f0544 	ldr	r0, [pc, #1348]	; 400088a0 <UVCAppThread_Entry+0xbe0>
40008358:	e1a01006 	mov	r1, r6
4000835c:	eb004205 	bl	40018b78 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008360:	e2502000 	subs	r2, r0, #0
40008364:	1a000065 	bne	40008500 <UVCAppThread_Entry+0x840>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008368:	e5952028 	ldr	r2, [r5, #40]	; 0x28
4000836c:	e3520000 	cmp	r2, #0
40008370:	1a00005a 	bne	400084e0 <UVCAppThread_Entry+0x820>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008374:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
40008378:	e3530003 	cmp	r3, #3
4000837c:	0a000047 	beq	400084a0 <UVCAppThread_Entry+0x7e0>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008380:	e3530002 	cmp	r3, #2
40008384:	0a000029 	beq	40008430 <UVCAppThread_Entry+0x770>
                    		break;
                    }
#endif
                    CyFxUvcAppGpifInit ();

                    gpif_initialized = CyTrue;
40008388:	e3a0e001 	mov	lr, #1
4000838c:	e584e028 	str	lr, [r4, #40]	; 0x28
                    CyU3PThreadSleep(200);
40008390:	e3a000c8 	mov	r0, #200	; 0xc8
40008394:	eb00028d 	bl	40008dd0 <_tx_thread_sleep>
40008398:	eaffff8e 	b	400081d8 <UVCAppThread_Entry+0x518>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
4000839c:	e3a00004 	mov	r0, #4
400083a0:	e59f1518 	ldr	r1, [pc, #1304]	; 400088c0 <UVCAppThread_Entry+0xc00>
400083a4:	eb002bff 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083a8:	e59f14fc 	ldr	r1, [pc, #1276]	; 400088ac <UVCAppThread_Entry+0xbec>
400083ac:	e3a00004 	mov	r0, #4
400083b0:	eb002bfc 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083b4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083b8:	eb000284 	bl	40008dd0 <_tx_thread_sleep>
400083bc:	eafffff9 	b	400083a8 <UVCAppThread_Entry+0x6e8>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400083c0:	e3a00004 	mov	r0, #4
400083c4:	e59f14f8 	ldr	r1, [pc, #1272]	; 400088c4 <UVCAppThread_Entry+0xc04>
400083c8:	eb002bf6 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083cc:	e59f14d8 	ldr	r1, [pc, #1240]	; 400088ac <UVCAppThread_Entry+0xbec>
400083d0:	e3a00004 	mov	r0, #4
400083d4:	eb002bf3 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083d8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083dc:	eb00027b 	bl	40008dd0 <_tx_thread_sleep>
400083e0:	eafffff9 	b	400083cc <UVCAppThread_Entry+0x70c>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400083e4:	e2800004 	add	r0, r0, #4
400083e8:	e59f14d8 	ldr	r1, [pc, #1240]	; 400088c8 <UVCAppThread_Entry+0xc08>
400083ec:	eb002bed 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083f0:	e59f14b4 	ldr	r1, [pc, #1204]	; 400088ac <UVCAppThread_Entry+0xbec>
400083f4:	e3a00004 	mov	r0, #4
400083f8:	eb002bea 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083fc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008400:	eb000272 	bl	40008dd0 <_tx_thread_sleep>
40008404:	eafffff9 	b	400083f0 <UVCAppThread_Entry+0x730>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008408:	e3a00004 	mov	r0, #4
4000840c:	e59f14b8 	ldr	r1, [pc, #1208]	; 400088cc <UVCAppThread_Entry+0xc0c>
40008410:	e1a02006 	mov	r2, r6
40008414:	eb002be3 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008418:	e59f148c 	ldr	r1, [pc, #1164]	; 400088ac <UVCAppThread_Entry+0xbec>
4000841c:	e3a00004 	mov	r0, #4
40008420:	eb002be0 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008424:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008428:	eb000268 	bl	40008dd0 <_tx_thread_sleep>
4000842c:	eafffff9 	b	40008418 <UVCAppThread_Entry+0x758>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
40008430:	e59f1498 	ldr	r1, [pc, #1176]	; 400088d0 <UVCAppThread_Entry+0xc10>
40008434:	e3a00001 	mov	r0, #1
40008438:	eb002bda 	bl	400133a8 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
4000843c:	e59f0490 	ldr	r0, [pc, #1168]	; 400088d4 <UVCAppThread_Entry+0xc14>
40008440:	eb004d0c 	bl	4001b878 <CyU3PGpifLoad>
40008444:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008448:	e3520000 	cmp	r2, #0
4000844c:	1a00001a 	bne	400084bc <UVCAppThread_Entry+0x7fc>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008450:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
40008454:	e3530003 	cmp	r3, #3
40008458:	0a000001 	beq	40008464 <UVCAppThread_Entry+0x7a4>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
4000845c:	e3530002 	cmp	r3, #2
40008460:	1affffc8 	bne	40008388 <UVCAppThread_Entry+0x6c8>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008464:	e1a00002 	mov	r0, r2
40008468:	e1a01002 	mov	r1, r2
4000846c:	eb004da7 	bl	4001bb10 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008470:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008474:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008478:	0affffc2 	beq	40008388 <UVCAppThread_Entry+0x6c8>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
4000847c:	e3a00004 	mov	r0, #4
40008480:	e59f1450 	ldr	r1, [pc, #1104]	; 400088d8 <UVCAppThread_Entry+0xc18>
40008484:	eb002bc7 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008488:	e59f141c 	ldr	r1, [pc, #1052]	; 400088ac <UVCAppThread_Entry+0xbec>
4000848c:	e3a00004 	mov	r0, #4
40008490:	eb002bc4 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008494:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008498:	eb00024c 	bl	40008dd0 <_tx_thread_sleep>
4000849c:	eafffff9 	b	40008488 <UVCAppThread_Entry+0x7c8>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400084a0:	e59f1434 	ldr	r1, [pc, #1076]	; 400088dc <UVCAppThread_Entry+0xc1c>
400084a4:	e3a00001 	mov	r0, #1
400084a8:	eb002bbe 	bl	400133a8 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400084ac:	e59f042c 	ldr	r0, [pc, #1068]	; 400088e0 <UVCAppThread_Entry+0xc20>
400084b0:	eb004cf0 	bl	4001b878 <CyU3PGpifLoad>
400084b4:	e1a02000 	mov	r2, r0
400084b8:	eaffffe2 	b	40008448 <UVCAppThread_Entry+0x788>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
400084bc:	e3a00004 	mov	r0, #4
400084c0:	e59f141c 	ldr	r1, [pc, #1052]	; 400088e4 <UVCAppThread_Entry+0xc24>
400084c4:	eb002bb7 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084c8:	e59f13dc 	ldr	r1, [pc, #988]	; 400088ac <UVCAppThread_Entry+0xbec>
400084cc:	e3a00004 	mov	r0, #4
400084d0:	eb002bb4 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084d4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084d8:	eb00023c 	bl	40008dd0 <_tx_thread_sleep>
400084dc:	eafffff9 	b	400084c8 <UVCAppThread_Entry+0x808>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400084e0:	e59f03ac 	ldr	r0, [pc, #940]	; 40008894 <UVCAppThread_Entry+0xbd4>
400084e4:	e3a0c002 	mov	ip, #2
400084e8:	e1a01006 	mov	r1, r6
400084ec:	e1a02000 	mov	r2, r0
400084f0:	e1a03006 	mov	r3, r6
400084f4:	e58dc000 	str	ip, [sp]
400084f8:	eb004dd9 	bl	4001bc64 <CyU3PGpifSMSwitch>
400084fc:	eaffff35 	b	400081d8 <UVCAppThread_Entry+0x518>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008500:	e3a00004 	mov	r0, #4
40008504:	e59f13dc 	ldr	r1, [pc, #988]	; 400088e8 <UVCAppThread_Entry+0xc28>
40008508:	eb002ba6 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000850c:	e59f1398 	ldr	r1, [pc, #920]	; 400088ac <UVCAppThread_Entry+0xbec>
40008510:	e3a00004 	mov	r0, #4
40008514:	eb002ba3 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008518:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000851c:	eb00022b 	bl	40008dd0 <_tx_thread_sleep>
40008520:	eafffff9 	b	4000850c <UVCAppThread_Entry+0x84c>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008524:	e3a00004 	mov	r0, #4
40008528:	e59f138c 	ldr	r1, [pc, #908]	; 400088bc <UVCAppThread_Entry+0xbfc>
4000852c:	e1a02003 	mov	r2, r3
40008530:	eb002b9c 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008534:	e59f1370 	ldr	r1, [pc, #880]	; 400088ac <UVCAppThread_Entry+0xbec>
40008538:	e3a00004 	mov	r0, #4
4000853c:	eb002b99 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008540:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008544:	eb000221 	bl	40008dd0 <_tx_thread_sleep>
40008548:	eafffff9 	b	40008534 <UVCAppThread_Entry+0x874>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
4000854c:	e3a00004 	mov	r0, #4
40008550:	e59f1394 	ldr	r1, [pc, #916]	; 400088ec <UVCAppThread_Entry+0xc2c>
40008554:	eb002b93 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008558:	e59f134c 	ldr	r1, [pc, #844]	; 400088ac <UVCAppThread_Entry+0xbec>
4000855c:	e3a00004 	mov	r0, #4
40008560:	eb002b90 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008564:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008568:	eb000218 	bl	40008dd0 <_tx_thread_sleep>
4000856c:	eafffff9 	b	40008558 <UVCAppThread_Entry+0x898>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008570:	e3a00004 	mov	r0, #4
40008574:	e59f1374 	ldr	r1, [pc, #884]	; 400088f0 <UVCAppThread_Entry+0xc30>
40008578:	eb002b8a 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000857c:	e59f1328 	ldr	r1, [pc, #808]	; 400088ac <UVCAppThread_Entry+0xbec>
40008580:	e3a00004 	mov	r0, #4
40008584:	eb002b87 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008588:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000858c:	eb00020f 	bl	40008dd0 <_tx_thread_sleep>
40008590:	eafffff9 	b	4000857c <UVCAppThread_Entry+0x8bc>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
40008594:	e3a00004 	mov	r0, #4
40008598:	e59f1354 	ldr	r1, [pc, #852]	; 400088f4 <UVCAppThread_Entry+0xc34>
4000859c:	eb002b81 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085a0:	e59f1304 	ldr	r1, [pc, #772]	; 400088ac <UVCAppThread_Entry+0xbec>
400085a4:	e3a00004 	mov	r0, #4
400085a8:	eb002b7e 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085ac:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085b0:	eb000206 	bl	40008dd0 <_tx_thread_sleep>
400085b4:	eafffff9 	b	400085a0 <UVCAppThread_Entry+0x8e0>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
400085b8:	e3a00004 	mov	r0, #4
400085bc:	e59f1334 	ldr	r1, [pc, #820]	; 400088f8 <UVCAppThread_Entry+0xc38>
400085c0:	eb002b78 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085c4:	e59f12e0 	ldr	r1, [pc, #736]	; 400088ac <UVCAppThread_Entry+0xbec>
400085c8:	e3a00004 	mov	r0, #4
400085cc:	eb002b75 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085d0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085d4:	eb0001fd 	bl	40008dd0 <_tx_thread_sleep>
400085d8:	eafffff9 	b	400085c4 <UVCAppThread_Entry+0x904>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
400085dc:	e3a00004 	mov	r0, #4
400085e0:	e59f1314 	ldr	r1, [pc, #788]	; 400088fc <UVCAppThread_Entry+0xc3c>
400085e4:	eb002b6f 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085e8:	e59f12bc 	ldr	r1, [pc, #700]	; 400088ac <UVCAppThread_Entry+0xbec>
400085ec:	e3a00004 	mov	r0, #4
400085f0:	eb002b6c 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085f4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085f8:	eb0001f4 	bl	40008dd0 <_tx_thread_sleep>
400085fc:	eafffff9 	b	400085e8 <UVCAppThread_Entry+0x928>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40008600:	e3a00004 	mov	r0, #4
40008604:	e59f12f4 	ldr	r1, [pc, #756]	; 40008900 <UVCAppThread_Entry+0xc40>
40008608:	eb002b66 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000860c:	e59f1298 	ldr	r1, [pc, #664]	; 400088ac <UVCAppThread_Entry+0xbec>
40008610:	e3a00004 	mov	r0, #4
40008614:	eb002b63 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008618:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000861c:	eb0001eb 	bl	40008dd0 <_tx_thread_sleep>
40008620:	eafffff9 	b	4000860c <UVCAppThread_Entry+0x94c>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40008624:	e1c564b0 	strh	r6, [r5, #64]	; 0x40
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40008628:	e59f0260 	ldr	r0, [pc, #608]	; 40008890 <UVCAppThread_Entry+0xbd0>
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
                consCount = 0;
4000862c:	e1c564b2 	strh	r6, [r5, #66]	; 0x42
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40008630:	e3e01000 	mvn	r1, #0
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40008634:	e1c563b4 	strh	r6, [r5, #52]	; 0x34
            	pb=0;
40008638:	e1c563b6 	strh	r6, [r5, #54]	; 0x36
            	pbc=0;
4000863c:	e1c563b8 	strh	r6, [r5, #56]	; 0x38
                prodCount = 0;
                consCount = 0;
                hitFV     = CyFalse;
40008640:	e585603c 	str	r6, [r5, #60]	; 0x3c
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40008644:	eb000771 	bl	4000a410 <_txe_mutex_get>
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008648:	e5d70481 	ldrb	r0, [r7, #1153]	; 0x481
4000864c:	e2202001 	eor	r2, r0, #1
40008650:	e5c72481 	strb	r2, [r7, #1153]	; 0x481
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008654:	e5d5c03a 	ldrb	ip, [r5, #58]	; 0x3a
40008658:	e35c00f0 	cmp	ip, #240	; 0xf0
4000865c:	0a000018 	beq	400086c4 <UVCAppThread_Entry+0xa04>
                       	SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                     	//CyU3PThreadSleep(100);
                		stiflag = 0xFF;
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late
40008660:	e5d4a03a 	ldrb	sl, [r4, #58]	; 0x3a
40008664:	e35a00ff 	cmp	sl, #255	; 0xff
40008668:	0a000064 	beq	40008800 <UVCAppThread_Entry+0xb40>
                 		/*if(IMcount > 0x4){
                			stiflag = 0x0F;
                			IMcount = 0;
                		}*/

                }else if(stiflag==0xAA){//recovery video stream res. after one still frame set.
4000866c:	e5d5003a 	ldrb	r0, [r5, #58]	; 0x3a
40008670:	e35000aa 	cmp	r0, #170	; 0xaa
40008674:	0a000037 	beq	40008758 <UVCAppThread_Entry+0xa98>
                    IMcount = 0;
                	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	stiflag = 0x0;
                	}
                }
                CyU3PMutexPut(&imgHdMux);
40008678:	e59f0210 	ldr	r0, [pc, #528]	; 40008890 <UVCAppThread_Entry+0xbd0>
4000867c:	eb000798 	bl	4000a4e4 <_txe_mutex_put>
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008680:	e59f0218 	ldr	r0, [pc, #536]	; 400088a0 <UVCAppThread_Entry+0xbe0>
40008684:	eb00404e 	bl	400187c4 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008688:	e2502000 	subs	r2, r0, #0
4000868c:	1a000028 	bne	40008734 <UVCAppThread_Entry+0xa74>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008690:	e1a01002 	mov	r1, r2
40008694:	e59f0204 	ldr	r0, [pc, #516]	; 400088a0 <UVCAppThread_Entry+0xbe0>
40008698:	eb004136 	bl	40018b78 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
4000869c:	e2502000 	subs	r2, r0, #0
400086a0:	1a00001a 	bne	40008710 <UVCAppThread_Entry+0xa50>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400086a4:	e59f01e8 	ldr	r0, [pc, #488]	; 40008894 <UVCAppThread_Entry+0xbd4>
400086a8:	e1a01002 	mov	r1, r2
400086ac:	e3a0a002 	mov	sl, #2
400086b0:	e1a02000 	mov	r2, r0
400086b4:	e1a03001 	mov	r3, r1
400086b8:	e58da000 	str	sl, [sp]
400086bc:	eb004d68 	bl	4001bc64 <CyU3PGpifSMSwitch>
400086c0:	eafffec4 	b	400081d8 <UVCAppThread_Entry+0x518>
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
400086c4:	e59f0178 	ldr	r0, [pc, #376]	; 40008844 <UVCAppThread_Entry+0xb84>
400086c8:	e3a01080 	mov	r1, #128	; 0x80
400086cc:	e3a02003 	mov	r2, #3
400086d0:	e28d30b4 	add	r3, sp, #180	; 0xb4
400086d4:	e58d6000 	str	r6, [sp]
400086d8:	eb000684 	bl	4000a0f0 <_txe_event_flags_get>
400086dc:	e3500000 	cmp	r0, #0
400086e0:	1affffde 	bne	40008660 <UVCAppThread_Entry+0x9a0>
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){ //start full res.
                		//glUVCHeader[1] |= (1<<5);    //set still image flag
                       	SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400086e4:	e5952058 	ldr	r2, [r5, #88]	; 0x58
400086e8:	e2800001 	add	r0, r0, #1
400086ec:	e3520000 	cmp	r2, #0
400086f0:	e3a01030 	mov	r1, #48	; 0x30
400086f4:	03a020e4 	moveq	r2, #228	; 0xe4
400086f8:	13a02064 	movne	r2, #100	; 0x64
400086fc:	e3a03052 	mov	r3, #82	; 0x52
40008700:	ebfff059 	bl	4000486c <SensorSetIrisControl>
                     	//CyU3PThreadSleep(100);
                		stiflag = 0xFF;
40008704:	e5c4803a 	strb	r8, [r4, #58]	; 0x3a
                		IMcount = 0;
40008708:	e5c460a0 	strb	r6, [r4, #160]	; 0xa0
4000870c:	eaffffd9 	b	40008678 <UVCAppThread_Entry+0x9b8>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40008710:	e3a00004 	mov	r0, #4
40008714:	e59f11e8 	ldr	r1, [pc, #488]	; 40008904 <UVCAppThread_Entry+0xc44>
40008718:	eb002b22 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000871c:	e59f1188 	ldr	r1, [pc, #392]	; 400088ac <UVCAppThread_Entry+0xbec>
40008720:	e3a00004 	mov	r0, #4
40008724:	eb002b1f 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008728:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000872c:	eb0001a7 	bl	40008dd0 <_tx_thread_sleep>
40008730:	eafffff9 	b	4000871c <UVCAppThread_Entry+0xa5c>
                CyU3PMutexPut(&imgHdMux);
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008734:	e3a00004 	mov	r0, #4
40008738:	e59f11c8 	ldr	r1, [pc, #456]	; 40008908 <UVCAppThread_Entry+0xc48>
4000873c:	eb002b19 	bl	400133a8 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008740:	e59f1164 	ldr	r1, [pc, #356]	; 400088ac <UVCAppThread_Entry+0xbec>
40008744:	e3a00004 	mov	r0, #4
40008748:	eb002b16 	bl	400133a8 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000874c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008750:	eb00019e 	bl	40008dd0 <_tx_thread_sleep>
40008754:	eafffff9 	b	40008740 <UVCAppThread_Entry+0xa80>
                    //CyU3PThreadSleep(400);
                	//CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                   	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	//CyU3PMutexPut(&imgHdMux);

                	if(IMcount++ >= 0x4)
40008758:	e5d5e0a0 	ldrb	lr, [r5, #160]	; 0xa0
4000875c:	e28ea001 	add	sl, lr, #1
40008760:	e35e0003 	cmp	lr, #3
40008764:	e5c5a0a0 	strb	sl, [r5, #160]	; 0xa0
40008768:	9affffc2 	bls	40008678 <UVCAppThread_Entry+0x9b8>
                	{
                    switch (setRes)
4000876c:	e5d5007d 	ldrb	r0, [r5, #125]	; 0x7d
40008770:	e3500002 	cmp	r0, #2
40008774:	0a000018 	beq	400087dc <UVCAppThread_Entry+0xb1c>
40008778:	e3500003 	cmp	r0, #3
4000877c:	0a00000b 	beq	400087b0 <UVCAppThread_Entry+0xaf0>
40008780:	e3500001 	cmp	r0, #1
40008784:	1a000006 	bne	400087a4 <UVCAppThread_Entry+0xae4>
                     {
                 	case 1: //1944
                 		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40008788:	e5952058 	ldr	r2, [r5, #88]	; 0x58
4000878c:	e3a01030 	mov	r1, #48	; 0x30
40008790:	e3520000 	cmp	r2, #0
40008794:	03a020e4 	moveq	r2, #228	; 0xe4
40008798:	13a02064 	movne	r2, #100	; 0x64
4000879c:	e3a03052 	mov	r3, #82	; 0x52
400087a0:	ebfff031 	bl	4000486c <SensorSetIrisControl>
                        //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
                 		break;
                 	default:
                 		break;
                     }
                    IMcount = 0;
400087a4:	e5c460a0 	strb	r6, [r4, #160]	; 0xa0
                	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	stiflag = 0x0;
400087a8:	e5c4603a 	strb	r6, [r4, #58]	; 0x3a
400087ac:	eaffffb1 	b	40008678 <UVCAppThread_Entry+0x9b8>
                 		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                 		//CyU3PThreadSleep(100);
                        //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
                 		break;
                 	case 3: //720
                 		SensorSetIrisControl(0x1, 0x30, ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400087b0:	e595c058 	ldr	ip, [r5, #88]	; 0x58
400087b4:	e5d7348c 	ldrb	r3, [r7, #1164]	; 0x48c
400087b8:	e35c0000 	cmp	ip, #0
400087bc:	03a0c0c4 	moveq	ip, #196	; 0xc4
400087c0:	13a0c044 	movne	ip, #68	; 0x44
400087c4:	e18c2003 	orr	r2, ip, r3
400087c8:	e3a01030 	mov	r1, #48	; 0x30
400087cc:	e3a03052 	mov	r3, #82	; 0x52
400087d0:	e3a00001 	mov	r0, #1
400087d4:	ebfff024 	bl	4000486c <SensorSetIrisControl>
                 		//CyU3PThreadSleep(100);
                        //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", ((is60Hz? 0x45:0xC5)&0xFC)|ROIMode, is60Hz);
                 		break;
400087d8:	eafffff1 	b	400087a4 <UVCAppThread_Entry+0xae4>
                 		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                 		//CyU3PThreadSleep(100);
                        //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x64:0xE4, is60Hz);
                 		break;
                 	case 2: //1080
                 		SensorSetIrisControl(0x1, 0x30, is60Hz? 0x54:0xD4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400087dc:	e5952058 	ldr	r2, [r5, #88]	; 0x58
400087e0:	e3a01030 	mov	r1, #48	; 0x30
400087e4:	e3520000 	cmp	r2, #0
400087e8:	03a020d4 	moveq	r2, #212	; 0xd4
400087ec:	13a02054 	movne	r2, #84	; 0x54
400087f0:	e3a03052 	mov	r3, #82	; 0x52
400087f4:	e3a00001 	mov	r0, #1
400087f8:	ebfff01b 	bl	4000486c <SensorSetIrisControl>
                 		//CyU3PThreadSleep(100);
                        //CyU3PDebugPrint (4, "Set the video mode format %x %d\n", is60Hz? 0x54:0xD4, is60Hz);
                 		break;
400087fc:	eaffffe8 	b	400087a4 <UVCAppThread_Entry+0xae4>
                		stiflag = 0xFF;
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
40008800:	e5d510a0 	ldrb	r1, [r5, #160]	; 0xa0
40008804:	e281e001 	add	lr, r1, #1
40008808:	e3510002 	cmp	r1, #2
4000880c:	e5c5e0a0 	strb	lr, [r5, #160]	; 0xa0
40008810:	9affff98 	bls	40008678 <UVCAppThread_Entry+0x9b8>
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
40008814:	e5d72481 	ldrb	r2, [r7, #1153]	; 0x481
                		stiflag = 0x0F;
40008818:	e3a0300f 	mov	r3, #15
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
4000881c:	e382c020 	orr	ip, r2, #32
40008820:	e5c7c481 	strb	ip, [r7, #1153]	; 0x481
                		stiflag = 0x0F;
                		IMcount = 0;
40008824:	e5c560a0 	strb	r6, [r5, #160]	; 0xa0
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = 0x0F;
40008828:	e5c5303a 	strb	r3, [r5, #58]	; 0x3a
4000882c:	eaffff91 	b	40008678 <UVCAppThread_Entry+0x9b8>
40008830:	40011be8 	.word	0x40011be8
40008834:	0001c200 	.word	0x0001c200
40008838:	40011c08 	.word	0x40011c08
4000883c:	000186a0 	.word	0x000186a0
40008840:	40011c24 	.word	0x40011c24
40008844:	40030fb0 	.word	0x40030fb0
40008848:	40005174 	.word	0x40005174
4000884c:	00001388 	.word	0x00001388
40008850:	40004e80 	.word	0x40004e80
40008854:	40004b54 	.word	0x40004b54
40008858:	400110c0 	.word	0x400110c0
4000885c:	400110d4 	.word	0x400110d4
40008860:	400110e8 	.word	0x400110e8
40008864:	400111e0 	.word	0x400111e0
40008868:	40011100 	.word	0x40011100
4000886c:	400110f4 	.word	0x400110f4
40008870:	400111f8 	.word	0x400111f8
40008874:	40011320 	.word	0x40011320
40008878:	40011324 	.word	0x40011324
4000887c:	4001135c 	.word	0x4001135c
40008880:	00003f01 	.word	0x00003f01
40008884:	00000302 	.word	0x00000302
40008888:	40033050 	.word	0x40033050
4000888c:	40033128 	.word	0x40033128
40008890:	400330f0 	.word	0x400330f0
40008894:	00000101 	.word	0x00000101
40008898:	00000303 	.word	0x00000303
4000889c:	40004cc4 	.word	0x40004cc4
400088a0:	40032f04 	.word	0x40032f04
400088a4:	40030000 	.word	0x40030000
400088a8:	40011c40 	.word	0x40011c40
400088ac:	40011700 	.word	0x40011700
400088b0:	40011c90 	.word	0x40011c90
400088b4:	40011c6c 	.word	0x40011c6c
400088b8:	40011cb8 	.word	0x40011cb8
400088bc:	40011e10 	.word	0x40011e10
400088c0:	40011eec 	.word	0x40011eec
400088c4:	40011ebc 	.word	0x40011ebc
400088c8:	40011e84 	.word	0x40011e84
400088cc:	40011e44 	.word	0x40011e44
400088d0:	40011fb8 	.word	0x40011fb8
400088d4:	4001150c 	.word	0x4001150c
400088d8:	40012000 	.word	0x40012000
400088dc:	40011fa8 	.word	0x40011fa8
400088e0:	400114f0 	.word	0x400114f0
400088e4:	40011fc8 	.word	0x40011fc8
400088e8:	40011f74 	.word	0x40011f74
400088ec:	40011de0 	.word	0x40011de0
400088f0:	40011db0 	.word	0x40011db0
400088f4:	40011d78 	.word	0x40011d78
400088f8:	40011d10 	.word	0x40011d10
400088fc:	40011ce4 	.word	0x40011ce4
40008900:	40011d44 	.word	0x40011d44
40008904:	40011f40 	.word	0x40011f40
40008908:	40011f14 	.word	0x40011f14

4000890c <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
4000890c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008910:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008914:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008918:	ebffeb55 	bl	40003674 <CyU3PMemAlloc>
4000891c:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008920:	e3a00a01 	mov	r0, #4096	; 0x1000
40008924:	ebffeb52 	bl	40003674 <CyU3PMemAlloc>
40008928:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000892c:	e3a00a01 	mov	r0, #4096	; 0x1000
40008930:	ebffeb4f 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008934:	e35a0000 	cmp	sl, #0
40008938:	135b0000 	cmpne	fp, #0
4000893c:	13a09000 	movne	r9, #0
40008940:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008944:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008948:	1a000000 	bne	40008950 <CyFxApplicationDefine+0x44>
4000894c:	eafffffe 	b	4000894c <CyFxApplicationDefine+0x40>
40008950:	e3500000 	cmp	r0, #0
40008954:	0afffffc 	beq	4000894c <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008958:	e28d4028 	add	r4, sp, #40	; 0x28
4000895c:	e1a00004 	mov	r0, r4
40008960:	e3a01040 	mov	r1, #64	; 0x40
40008964:	e59f2118 	ldr	r2, [pc, #280]	; 40008a84 <CyFxApplicationDefine+0x178>
40008968:	ebffea94 	bl	400033c0 <cmdbufCreate>
4000896c:	e1a05004 	mov	r5, r4
40008970:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
40008974:	e59f710c 	ldr	r7, [pc, #268]	; 40008a88 <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008978:	e59f810c 	ldr	r8, [pc, #268]	; 40008a8c <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
4000897c:	e1a0c007 	mov	ip, r7
40008980:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008984:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008988:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
4000898c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008990:	e59f20f8 	ldr	r2, [pc, #248]	; 40008a90 <CyFxApplicationDefine+0x184>
40008994:	e1a00004 	mov	r0, r4
40008998:	e3a01020 	mov	r1, #32
4000899c:	ebffea87 	bl	400033c0 <cmdbufCreate>
400089a0:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
400089a4:	e1a0c008 	mov	ip, r8
400089a8:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
400089ac:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400089b0:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400089b4:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
400089b8:	e1a00007 	mov	r0, r7
400089bc:	ebffea97 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
400089c0:	e1a00008 	mov	r0, r8
400089c4:	ebffea95 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400089c8:	e3a050a8 	mov	r5, #168	; 0xa8
400089cc:	e3a0ca01 	mov	ip, #4096	; 0x1000
400089d0:	e59f00bc 	ldr	r0, [pc, #188]	; 40008a94 <CyFxApplicationDefine+0x188>
400089d4:	e59f10bc 	ldr	r1, [pc, #188]	; 40008a98 <CyFxApplicationDefine+0x18c>
400089d8:	e59f20bc 	ldr	r2, [pc, #188]	; 40008a9c <CyFxApplicationDefine+0x190>
400089dc:	e1a03009 	mov	r3, r9
400089e0:	e88d1400 	stm	sp, {sl, ip}
400089e4:	e58d6008 	str	r6, [sp, #8]
400089e8:	e58d600c 	str	r6, [sp, #12]
400089ec:	e58d9010 	str	r9, [sp, #16]
400089f0:	e58d4014 	str	r4, [sp, #20]
400089f4:	e58d5018 	str	r5, [sp, #24]
400089f8:	eb0007c7 	bl	4000a91c <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400089fc:	e250c000 	subs	ip, r0, #0
40008a00:	1affffd1 	bne	4000894c <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
40008a04:	e1a0300c 	mov	r3, ip
40008a08:	e3a07b02 	mov	r7, #2048	; 0x800
40008a0c:	e59f008c 	ldr	r0, [pc, #140]	; 40008aa0 <CyFxApplicationDefine+0x194>
40008a10:	e59f108c 	ldr	r1, [pc, #140]	; 40008aa4 <CyFxApplicationDefine+0x198>
40008a14:	e59f208c 	ldr	r2, [pc, #140]	; 40008aa8 <CyFxApplicationDefine+0x19c>
40008a18:	e58dc010 	str	ip, [sp, #16]
40008a1c:	e58db000 	str	fp, [sp]
40008a20:	e58d7004 	str	r7, [sp, #4]
40008a24:	e58d6008 	str	r6, [sp, #8]
40008a28:	e58d600c 	str	r6, [sp, #12]
40008a2c:	e58d4014 	str	r4, [sp, #20]
40008a30:	e58d5018 	str	r5, [sp, #24]
40008a34:	eb0007b8 	bl	4000a91c <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008a38:	e250c000 	subs	ip, r0, #0
40008a3c:	1affffc2 	bne	4000894c <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
40008a40:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40008a44:	e59f0060 	ldr	r0, [pc, #96]	; 40008aac <CyFxApplicationDefine+0x1a0>
40008a48:	e59f1060 	ldr	r1, [pc, #96]	; 40008ab0 <CyFxApplicationDefine+0x1a4>
40008a4c:	e59f2060 	ldr	r2, [pc, #96]	; 40008ab4 <CyFxApplicationDefine+0x1a8>
40008a50:	e1a0300c 	mov	r3, ip
40008a54:	e58de000 	str	lr, [sp]
40008a58:	e58d7004 	str	r7, [sp, #4]
40008a5c:	e58d6008 	str	r6, [sp, #8]
40008a60:	e58d600c 	str	r6, [sp, #12]
40008a64:	e58dc010 	str	ip, [sp, #16]
40008a68:	e58d4014 	str	r4, [sp, #20]
40008a6c:	e58d5018 	str	r5, [sp, #24]
40008a70:	eb0007a9 	bl	4000a91c <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008a74:	e3500000 	cmp	r0, #0
40008a78:	1affffb3 	bne	4000894c <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008a7c:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008a80:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008a84:	4003312c 	.word	0x4003312c
40008a88:	40032ee4 	.word	0x40032ee4
40008a8c:	40033168 	.word	0x40033168
40008a90:	40033018 	.word	0x40033018
40008a94:	40031054 	.word	0x40031054
40008a98:	40012038 	.word	0x40012038
40008a9c:	40007cc0 	.word	0x40007cc0
40008aa0:	400310fc 	.word	0x400310fc
40008aa4:	4001204c 	.word	0x4001204c
40008aa8:	40006de4 	.word	0x40006de4
40008aac:	400311a4 	.word	0x400311a4
40008ab0:	40012064 	.word	0x40012064
40008ab4:	40004904 	.word	0x40004904

40008ab8 <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008ab8:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008abc:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008ac0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
40008ac4:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008ac8:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008acc:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008ad0:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008ad4:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
40008ad8:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008adc:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008ae0:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
40008ae4:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008ae8:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008aec:	eb002765 	bl	40012888 <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008af0:	e2504000 	subs	r4, r0, #0
40008af4:	0a000000 	beq	40008afc <main+0x44>
40008af8:	eafffffe 	b	40008af8 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
40008afc:	e1a01004 	mov	r1, r4
40008b00:	e1a02004 	mov	r2, r4
40008b04:	e1a00005 	mov	r0, r5
40008b08:	eb002738 	bl	400127f0 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008b0c:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008b10:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
40008b14:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
40008b18:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
40008b1c:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
40008b20:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
40008b24:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
40008b28:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
40008b2c:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
40008b30:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
40008b34:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008b38:	eb0028fc 	bl	40012f30 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008b3c:	e2504000 	subs	r4, r0, #0
40008b40:	1affffec 	bne	40008af8 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
40008b44:	eb000002 	bl	40008b54 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
40008b48:	e1a00004 	mov	r0, r4
40008b4c:	e28dd03c 	add	sp, sp, #60	; 0x3c
40008b50:	e8bd8030 	pop	{r4, r5, pc}

40008b54 <_tx_initialize_kernel_enter>:
40008b54:	e92d4010 	push	{r4, lr}
40008b58:	e59f004c 	ldr	r0, [pc, #76]	; 40008bac <_tx_initialize_kernel_enter+0x58>
40008b5c:	e5900000 	ldr	r0, [r0]
40008b60:	e59f1048 	ldr	r1, [pc, #72]	; 40008bb0 <_tx_initialize_kernel_enter+0x5c>
40008b64:	e1500001 	cmp	r0, r1
40008b68:	0a000004 	beq	40008b80 <_tx_initialize_kernel_enter+0x2c>
40008b6c:	e1e00221 	mvn	r0, r1, lsr #4
40008b70:	e59f1034 	ldr	r1, [pc, #52]	; 40008bac <_tx_initialize_kernel_enter+0x58>
40008b74:	e5810000 	str	r0, [r1]
40008b78:	eb0009ee 	bl	4000b338 <_tx_initialize_low_level>
40008b7c:	eb00105f 	bl	4000cd00 <_tx_initialize_high_level>
40008b80:	e59f002c 	ldr	r0, [pc, #44]	; 40008bb4 <_tx_initialize_kernel_enter+0x60>
40008b84:	e59f1020 	ldr	r1, [pc, #32]	; 40008bac <_tx_initialize_kernel_enter+0x58>
40008b88:	e5810000 	str	r0, [r1]
40008b8c:	e59f0024 	ldr	r0, [pc, #36]	; 40008bb8 <_tx_initialize_kernel_enter+0x64>
40008b90:	e5900000 	ldr	r0, [r0]
40008b94:	ebffeaa2 	bl	40003624 <tx_application_define>
40008b98:	e3a00000 	mov	r0, #0
40008b9c:	e59f1008 	ldr	r1, [pc, #8]	; 40008bac <_tx_initialize_kernel_enter+0x58>
40008ba0:	e5810000 	str	r0, [r1]
40008ba4:	eb00091f 	bl	4000b028 <_tx_thread_schedule>
40008ba8:	e8bd8010 	pop	{r4, pc}
40008bac:	40030e4c 	.word	0x40030e4c
40008bb0:	f0f0f0f1 	.word	0xf0f0f0f1
40008bb4:	f0f0f0f0 	.word	0xf0f0f0f0
40008bb8:	40030de4 	.word	0x40030de4

40008bbc <_tx_thread_identify>:
40008bbc:	e10f1000 	mrs	r1, CPSR
40008bc0:	e3812080 	orr	r2, r1, #128	; 0x80
40008bc4:	e121f002 	msr	CPSR_c, r2
40008bc8:	e59f30e0 	ldr	r3, [pc, #224]	; 40008cb0 <_tx_thread_identify+0xf4>
40008bcc:	e5930000 	ldr	r0, [r3]
40008bd0:	e3500000 	cmp	r0, #0
40008bd4:	0a000031 	beq	40008ca0 <_tx_thread_identify+0xe4>
40008bd8:	e59f30d4 	ldr	r3, [pc, #212]	; 40008cb4 <_tx_thread_identify+0xf8>
40008bdc:	e5933000 	ldr	r3, [r3]
40008be0:	e2833001 	add	r3, r3, #1
40008be4:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008cb4 <_tx_thread_identify+0xf8>
40008be8:	e58c3000 	str	r3, [ip]
40008bec:	e580300c 	str	r3, [r0, #12]
40008bf0:	e59f30c0 	ldr	r3, [pc, #192]	; 40008cb8 <_tx_thread_identify+0xfc>
40008bf4:	e5933000 	ldr	r3, [r3]
40008bf8:	e3530000 	cmp	r3, #0
40008bfc:	1a000006 	bne	40008c1c <_tx_thread_identify+0x60>
40008c00:	e59f30b4 	ldr	r3, [pc, #180]	; 40008cbc <_tx_thread_identify+0x100>
40008c04:	e5933000 	ldr	r3, [r3]
40008c08:	e5803000 	str	r3, [r0]
40008c0c:	e5903000 	ldr	r3, [r0]
40008c10:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008c14:	e5803004 	str	r3, [r0, #4]
40008c18:	ea00000d 	b	40008c54 <_tx_thread_identify+0x98>
40008c1c:	e59f3094 	ldr	r3, [pc, #148]	; 40008cb8 <_tx_thread_identify+0xfc>
40008c20:	e5933000 	ldr	r3, [r3]
40008c24:	e59fc094 	ldr	ip, [pc, #148]	; 40008cc0 <_tx_thread_identify+0x104>
40008c28:	e153000c 	cmp	r3, ip
40008c2c:	2a000004 	bcs	40008c44 <_tx_thread_identify+0x88>
40008c30:	e3e03000 	mvn	r3, #0
40008c34:	e5803000 	str	r3, [r0]
40008c38:	e3a03000 	mov	r3, #0
40008c3c:	e5803004 	str	r3, [r0, #4]
40008c40:	ea000003 	b	40008c54 <_tx_thread_identify+0x98>
40008c44:	e59f3074 	ldr	r3, [pc, #116]	; 40008cc0 <_tx_thread_identify+0x104>
40008c48:	e5803000 	str	r3, [r0]
40008c4c:	e3a03000 	mov	r3, #0
40008c50:	e5803004 	str	r3, [r0, #4]
40008c54:	e3a03067 	mov	r3, #103	; 0x67
40008c58:	e5803008 	str	r3, [r0, #8]
40008c5c:	e3a03000 	mov	r3, #0
40008c60:	e5803010 	str	r3, [r0, #16]
40008c64:	e5803014 	str	r3, [r0, #20]
40008c68:	e5803018 	str	r3, [r0, #24]
40008c6c:	e580301c 	str	r3, [r0, #28]
40008c70:	e2800020 	add	r0, r0, #32
40008c74:	e59f3048 	ldr	r3, [pc, #72]	; 40008cc4 <_tx_thread_identify+0x108>
40008c78:	e5933000 	ldr	r3, [r3]
40008c7c:	e1500003 	cmp	r0, r3
40008c80:	3a000001 	bcc	40008c8c <_tx_thread_identify+0xd0>
40008c84:	e59f303c 	ldr	r3, [pc, #60]	; 40008cc8 <_tx_thread_identify+0x10c>
40008c88:	e5930000 	ldr	r0, [r3]
40008c8c:	e59f301c 	ldr	r3, [pc, #28]	; 40008cb0 <_tx_thread_identify+0xf4>
40008c90:	e5830000 	str	r0, [r3]
40008c94:	e59f3030 	ldr	r3, [pc, #48]	; 40008ccc <_tx_thread_identify+0x110>
40008c98:	e5933000 	ldr	r3, [r3]
40008c9c:	e5830020 	str	r0, [r3, #32]
40008ca0:	e121f001 	msr	CPSR_c, r1
40008ca4:	e59f0010 	ldr	r0, [pc, #16]	; 40008cbc <_tx_thread_identify+0x100>
40008ca8:	e5900000 	ldr	r0, [r0]
40008cac:	e12fff1e 	bx	lr
40008cb0:	40030ec0 	.word	0x40030ec0
40008cb4:	40030ec4 	.word	0x40030ec4
40008cb8:	40030e4c 	.word	0x40030e4c
40008cbc:	40030e54 	.word	0x40030e54
40008cc0:	f0f0f0f0 	.word	0xf0f0f0f0
40008cc4:	40030ebc 	.word	0x40030ebc
40008cc8:	40030eb8 	.word	0x40030eb8
40008ccc:	40030eac 	.word	0x40030eac

40008cd0 <_tx_thread_initialize>:
40008cd0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008cd4:	e3a00000 	mov	r0, #0
40008cd8:	e59f10c0 	ldr	r1, [pc, #192]	; 40008da0 <_tx_thread_initialize+0xd0>
40008cdc:	e5810000 	str	r0, [r1]
40008ce0:	e59f10bc 	ldr	r1, [pc, #188]	; 40008da4 <_tx_thread_initialize+0xd4>
40008ce4:	e5810000 	str	r0, [r1]
40008ce8:	e59f00b8 	ldr	r0, [pc, #184]	; 40008da8 <_tx_thread_initialize+0xd8>
40008cec:	e3a01000 	mov	r1, #0
40008cf0:	e5801000 	str	r1, [r0]
40008cf4:	e59f00b0 	ldr	r0, [pc, #176]	; 40008dac <_tx_thread_initialize+0xdc>
40008cf8:	e5801000 	str	r1, [r0]
40008cfc:	e3a00020 	mov	r0, #32
40008d00:	e59f10a8 	ldr	r1, [pc, #168]	; 40008db0 <_tx_thread_initialize+0xe0>
40008d04:	e5810000 	str	r0, [r1]
40008d08:	e3a00000 	mov	r0, #0
40008d0c:	e59f10a0 	ldr	r1, [pc, #160]	; 40008db4 <_tx_thread_initialize+0xe4>
40008d10:	e5c10000 	strb	r0, [r1]
40008d14:	e2816001 	add	r6, r1, #1
40008d18:	e3a04001 	mov	r4, #1
40008d1c:	ea000009 	b	40008d48 <_tx_thread_initialize+0x78>
40008d20:	e1a07004 	mov	r7, r4
40008d24:	e3a05000 	mov	r5, #0
40008d28:	ea000002 	b	40008d38 <_tx_thread_initialize+0x68>
40008d2c:	e1a070a7 	lsr	r7, r7, #1
40008d30:	e2850001 	add	r0, r5, #1
40008d34:	e20050ff 	and	r5, r0, #255	; 0xff
40008d38:	e3170001 	tst	r7, #1
40008d3c:	0afffffa 	beq	40008d2c <_tx_thread_initialize+0x5c>
40008d40:	e4c65001 	strb	r5, [r6], #1
40008d44:	e2844001 	add	r4, r4, #1
40008d48:	e3540c01 	cmp	r4, #256	; 0x100
40008d4c:	3afffff3 	bcc	40008d20 <_tx_thread_initialize+0x50>
40008d50:	e3a01080 	mov	r1, #128	; 0x80
40008d54:	e59f005c 	ldr	r0, [pc, #92]	; 40008db8 <_tx_thread_initialize+0xe8>
40008d58:	eb002b28 	bl	40013a00 <__aeabi_memclr4>
40008d5c:	e3a00000 	mov	r0, #0
40008d60:	e59f1054 	ldr	r1, [pc, #84]	; 40008dbc <_tx_thread_initialize+0xec>
40008d64:	e5810000 	str	r0, [r1]
40008d68:	e59f1050 	ldr	r1, [pc, #80]	; 40008dc0 <_tx_thread_initialize+0xf0>
40008d6c:	e5810000 	str	r0, [r1]
40008d70:	e59f104c 	ldr	r1, [pc, #76]	; 40008dc4 <_tx_thread_initialize+0xf4>
40008d74:	e5810000 	str	r0, [r1]
40008d78:	e59f1048 	ldr	r1, [pc, #72]	; 40008dc8 <_tx_thread_initialize+0xf8>
40008d7c:	e5810000 	str	r0, [r1]
40008d80:	e59f0044 	ldr	r0, [pc, #68]	; 40008dcc <_tx_thread_initialize+0xfc>
40008d84:	e5900000 	ldr	r0, [r0]
40008d88:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008d8c:	e3800c01 	orr	r0, r0, #256	; 0x100
40008d90:	e3800002 	orr	r0, r0, #2
40008d94:	e59f1030 	ldr	r1, [pc, #48]	; 40008dcc <_tx_thread_initialize+0xfc>
40008d98:	e5810000 	str	r0, [r1]
40008d9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008da0:	40030e54 	.word	0x40030e54
40008da4:	40030e58 	.word	0x40030e58
40008da8:	40030e64 	.word	0x40030e64
40008dac:	40030e68 	.word	0x40030e68
40008db0:	40030e6c 	.word	0x40030e6c
40008db4:	40032794 	.word	0x40032794
40008db8:	40032894 	.word	0x40032894
40008dbc:	40030e5c 	.word	0x40030e5c
40008dc0:	40030e60 	.word	0x40030e60
40008dc4:	40030e70 	.word	0x40030e70
40008dc8:	40030e78 	.word	0x40030e78
40008dcc:	40030e74 	.word	0x40030e74

40008dd0 <_tx_thread_sleep>:
40008dd0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008dd4:	e1a04000 	mov	r4, r0
40008dd8:	e59f018c 	ldr	r0, [pc, #396]	; 40008f6c <_tx_thread_sleep+0x19c>
40008ddc:	e5900000 	ldr	r0, [r0]
40008de0:	e58d0000 	str	r0, [sp]
40008de4:	e59d0000 	ldr	r0, [sp]
40008de8:	e3500000 	cmp	r0, #0
40008dec:	0a000007 	beq	40008e10 <_tx_thread_sleep+0x40>
40008df0:	e59f1178 	ldr	r1, [pc, #376]	; 40008f70 <_tx_thread_sleep+0x1a0>
40008df4:	e59d0000 	ldr	r0, [sp]
40008df8:	e1500001 	cmp	r0, r1
40008dfc:	0a000003 	beq	40008e10 <_tx_thread_sleep+0x40>
40008e00:	e59f016c 	ldr	r0, [pc, #364]	; 40008f74 <_tx_thread_sleep+0x1a4>
40008e04:	e5900000 	ldr	r0, [r0]
40008e08:	e3500000 	cmp	r0, #0
40008e0c:	0a000001 	beq	40008e18 <_tx_thread_sleep+0x48>
40008e10:	e3a00013 	mov	r0, #19
40008e14:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008e18:	e3540000 	cmp	r4, #0
40008e1c:	1a000001 	bne	40008e28 <_tx_thread_sleep+0x58>
40008e20:	e3a00000 	mov	r0, #0
40008e24:	eafffffa 	b	40008e14 <_tx_thread_sleep+0x44>
40008e28:	e10f5000 	mrs	r5, CPSR
40008e2c:	e3856080 	orr	r6, r5, #128	; 0x80
40008e30:	e121f006 	msr	CPSR_c, r6
40008e34:	e59f113c 	ldr	r1, [pc, #316]	; 40008f78 <_tx_thread_sleep+0x1a8>
40008e38:	e5910000 	ldr	r0, [r1]
40008e3c:	e3500000 	cmp	r0, #0
40008e40:	0a000033 	beq	40008f14 <_tx_thread_sleep+0x144>
40008e44:	e59f1130 	ldr	r1, [pc, #304]	; 40008f7c <_tx_thread_sleep+0x1ac>
40008e48:	e5911000 	ldr	r1, [r1]
40008e4c:	e2811001 	add	r1, r1, #1
40008e50:	e59f2124 	ldr	r2, [pc, #292]	; 40008f7c <_tx_thread_sleep+0x1ac>
40008e54:	e5821000 	str	r1, [r2]
40008e58:	e580100c 	str	r1, [r0, #12]
40008e5c:	e59f1110 	ldr	r1, [pc, #272]	; 40008f74 <_tx_thread_sleep+0x1a4>
40008e60:	e5911000 	ldr	r1, [r1]
40008e64:	e3510000 	cmp	r1, #0
40008e68:	1a000006 	bne	40008e88 <_tx_thread_sleep+0xb8>
40008e6c:	e59f10f8 	ldr	r1, [pc, #248]	; 40008f6c <_tx_thread_sleep+0x19c>
40008e70:	e5911000 	ldr	r1, [r1]
40008e74:	e5801000 	str	r1, [r0]
40008e78:	e5901000 	ldr	r1, [r0]
40008e7c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008e80:	e5801004 	str	r1, [r0, #4]
40008e84:	ea00000d 	b	40008ec0 <_tx_thread_sleep+0xf0>
40008e88:	e59f10e4 	ldr	r1, [pc, #228]	; 40008f74 <_tx_thread_sleep+0x1a4>
40008e8c:	e5911000 	ldr	r1, [r1]
40008e90:	e59f20e8 	ldr	r2, [pc, #232]	; 40008f80 <_tx_thread_sleep+0x1b0>
40008e94:	e1510002 	cmp	r1, r2
40008e98:	2a000004 	bcs	40008eb0 <_tx_thread_sleep+0xe0>
40008e9c:	e3e01000 	mvn	r1, #0
40008ea0:	e5801000 	str	r1, [r0]
40008ea4:	e3a01000 	mov	r1, #0
40008ea8:	e5801004 	str	r1, [r0, #4]
40008eac:	ea000003 	b	40008ec0 <_tx_thread_sleep+0xf0>
40008eb0:	e59f10c8 	ldr	r1, [pc, #200]	; 40008f80 <_tx_thread_sleep+0x1b0>
40008eb4:	e5801000 	str	r1, [r0]
40008eb8:	e3a01000 	mov	r1, #0
40008ebc:	e5801004 	str	r1, [r0, #4]
40008ec0:	e3a01070 	mov	r1, #112	; 0x70
40008ec4:	e5801008 	str	r1, [r0, #8]
40008ec8:	e5804010 	str	r4, [r0, #16]
40008ecc:	e59d1000 	ldr	r1, [sp]
40008ed0:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008ed4:	e5801014 	str	r1, [r0, #20]
40008ed8:	e580d018 	str	sp, [r0, #24]
40008edc:	e3a01000 	mov	r1, #0
40008ee0:	e580101c 	str	r1, [r0, #28]
40008ee4:	e2800020 	add	r0, r0, #32
40008ee8:	e59f1094 	ldr	r1, [pc, #148]	; 40008f84 <_tx_thread_sleep+0x1b4>
40008eec:	e5911000 	ldr	r1, [r1]
40008ef0:	e1500001 	cmp	r0, r1
40008ef4:	3a000001 	bcc	40008f00 <_tx_thread_sleep+0x130>
40008ef8:	e59f1088 	ldr	r1, [pc, #136]	; 40008f88 <_tx_thread_sleep+0x1b8>
40008efc:	e5910000 	ldr	r0, [r1]
40008f00:	e59f1070 	ldr	r1, [pc, #112]	; 40008f78 <_tx_thread_sleep+0x1a8>
40008f04:	e5810000 	str	r0, [r1]
40008f08:	e59f107c 	ldr	r1, [pc, #124]	; 40008f8c <_tx_thread_sleep+0x1bc>
40008f0c:	e5911000 	ldr	r1, [r1]
40008f10:	e5810020 	str	r0, [r1, #32]
40008f14:	e3a00004 	mov	r0, #4
40008f18:	e59d1000 	ldr	r1, [sp]
40008f1c:	e5810030 	str	r0, [r1, #48]	; 0x30
40008f20:	e3a00001 	mov	r0, #1
40008f24:	e59d1000 	ldr	r1, [sp]
40008f28:	e5810038 	str	r0, [r1, #56]	; 0x38
40008f2c:	e3a00000 	mov	r0, #0
40008f30:	e59d1000 	ldr	r1, [sp]
40008f34:	e5810084 	str	r0, [r1, #132]	; 0x84
40008f38:	e59d0000 	ldr	r0, [sp]
40008f3c:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008f40:	e59f0048 	ldr	r0, [pc, #72]	; 40008f90 <_tx_thread_sleep+0x1c0>
40008f44:	e5900000 	ldr	r0, [r0]
40008f48:	e2800001 	add	r0, r0, #1
40008f4c:	e59f103c 	ldr	r1, [pc, #60]	; 40008f90 <_tx_thread_sleep+0x1c0>
40008f50:	e5810000 	str	r0, [r1]
40008f54:	e121f005 	msr	CPSR_c, r5
40008f58:	e59d0000 	ldr	r0, [sp]
40008f5c:	eb00000c 	bl	40008f94 <_tx_thread_system_suspend>
40008f60:	e59d0000 	ldr	r0, [sp]
40008f64:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008f68:	eaffffa9 	b	40008e14 <_tx_thread_sleep+0x44>
40008f6c:	40030e54 	.word	0x40030e54
40008f70:	40032994 	.word	0x40032994
40008f74:	40030e4c 	.word	0x40030e4c
40008f78:	40030ec0 	.word	0x40030ec0
40008f7c:	40030ec4 	.word	0x40030ec4
40008f80:	f0f0f0f0 	.word	0xf0f0f0f0
40008f84:	40030ebc 	.word	0x40030ebc
40008f88:	40030eb8 	.word	0x40030eb8
40008f8c:	40030eac 	.word	0x40030eac
40008f90:	40030e70 	.word	0x40030e70

40008f94 <_tx_thread_system_suspend>:
40008f94:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008f98:	e1a04000 	mov	r4, r0
40008f9c:	e3a0b000 	mov	fp, #0
40008fa0:	e59f05b0 	ldr	r0, [pc, #1456]	; 40009558 <_tx_thread_system_suspend+0x5c4>
40008fa4:	e5900000 	ldr	r0, [r0]
40008fa8:	e1540000 	cmp	r4, r0
40008fac:	1a000009 	bne	40008fd8 <_tx_thread_system_suspend+0x44>
40008fb0:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008fb4:	e58d0000 	str	r0, [sp]
40008fb8:	e59d0000 	ldr	r0, [sp]
40008fbc:	e3500000 	cmp	r0, #0
40008fc0:	0a000004 	beq	40008fd8 <_tx_thread_system_suspend+0x44>
40008fc4:	e59d0000 	ldr	r0, [sp]
40008fc8:	e3700001 	cmn	r0, #1
40008fcc:	0a000001 	beq	40008fd8 <_tx_thread_system_suspend+0x44>
40008fd0:	e284004c 	add	r0, r4, #76	; 0x4c
40008fd4:	eb00020a 	bl	40009804 <_tx_timer_system_activate>
40008fd8:	e5940008 	ldr	r0, [r4, #8]
40008fdc:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008fe0:	e1500001 	cmp	r0, r1
40008fe4:	2a000001 	bcs	40008ff0 <_tx_thread_system_suspend+0x5c>
40008fe8:	e5940008 	ldr	r0, [r4, #8]
40008fec:	e5840040 	str	r0, [r4, #64]	; 0x40
40008ff0:	e594000c 	ldr	r0, [r4, #12]
40008ff4:	e5900000 	ldr	r0, [r0]
40008ff8:	e59f155c 	ldr	r1, [pc, #1372]	; 4000955c <_tx_thread_system_suspend+0x5c8>
40008ffc:	e1500001 	cmp	r0, r1
40009000:	1a000007 	bne	40009024 <_tx_thread_system_suspend+0x90>
40009004:	e5940010 	ldr	r0, [r4, #16]
40009008:	e5900001 	ldr	r0, [r0, #1]
4000900c:	e1500001 	cmp	r0, r1
40009010:	1a000003 	bne	40009024 <_tx_thread_system_suspend+0x90>
40009014:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009018:	e594100c 	ldr	r1, [r4, #12]
4000901c:	e1500001 	cmp	r0, r1
40009020:	2a000001 	bcs	4000902c <_tx_thread_system_suspend+0x98>
40009024:	e1a00004 	mov	r0, r4
40009028:	eb001941 	bl	4000f534 <_tx_thread_stack_error_handler>
4000902c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009030:	e5100004 	ldr	r0, [r0, #-4]
40009034:	e59f1520 	ldr	r1, [pc, #1312]	; 4000955c <_tx_thread_system_suspend+0x5c8>
40009038:	e1500001 	cmp	r0, r1
4000903c:	0a000001 	beq	40009048 <_tx_thread_system_suspend+0xb4>
40009040:	e1a00004 	mov	r0, r4
40009044:	eb001905 	bl	4000f460 <_tx_thread_stack_analyze>
40009048:	e10f5000 	mrs	r5, CPSR
4000904c:	e3856080 	orr	r6, r5, #128	; 0x80
40009050:	e121f006 	msr	CPSR_c, r6
40009054:	e59f0504 	ldr	r0, [pc, #1284]	; 40009560 <_tx_thread_system_suspend+0x5cc>
40009058:	e5900000 	ldr	r0, [r0]
4000905c:	e2400001 	sub	r0, r0, #1
40009060:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009560 <_tx_thread_system_suspend+0x5cc>
40009064:	e5810000 	str	r0, [r1]
40009068:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000906c:	e3500000 	cmp	r0, #0
40009070:	0a000112 	beq	400094c0 <_tx_thread_system_suspend+0x52c>
40009074:	e59f04e8 	ldr	r0, [pc, #1256]	; 40009564 <_tx_thread_system_suspend+0x5d0>
40009078:	e590a000 	ldr	sl, [r0]
4000907c:	e2801000 	add	r1, r0, #0
40009080:	e5910000 	ldr	r0, [r1]
40009084:	e3500000 	cmp	r0, #0
40009088:	0a000034 	beq	40009160 <_tx_thread_system_suspend+0x1cc>
4000908c:	e59f14d4 	ldr	r1, [pc, #1236]	; 40009568 <_tx_thread_system_suspend+0x5d4>
40009090:	e5911000 	ldr	r1, [r1]
40009094:	e2811001 	add	r1, r1, #1
40009098:	e59f24c8 	ldr	r2, [pc, #1224]	; 40009568 <_tx_thread_system_suspend+0x5d4>
4000909c:	e5821000 	str	r1, [r2]
400090a0:	e580100c 	str	r1, [r0, #12]
400090a4:	e59f14c0 	ldr	r1, [pc, #1216]	; 4000956c <_tx_thread_system_suspend+0x5d8>
400090a8:	e5911000 	ldr	r1, [r1]
400090ac:	e3510000 	cmp	r1, #0
400090b0:	1a000006 	bne	400090d0 <_tx_thread_system_suspend+0x13c>
400090b4:	e59f149c 	ldr	r1, [pc, #1180]	; 40009558 <_tx_thread_system_suspend+0x5c4>
400090b8:	e5911000 	ldr	r1, [r1]
400090bc:	e5801000 	str	r1, [r0]
400090c0:	e5901000 	ldr	r1, [r0]
400090c4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400090c8:	e5801004 	str	r1, [r0, #4]
400090cc:	ea00000d 	b	40009108 <_tx_thread_system_suspend+0x174>
400090d0:	e59f1494 	ldr	r1, [pc, #1172]	; 4000956c <_tx_thread_system_suspend+0x5d8>
400090d4:	e5911000 	ldr	r1, [r1]
400090d8:	e59f2490 	ldr	r2, [pc, #1168]	; 40009570 <_tx_thread_system_suspend+0x5dc>
400090dc:	e1510002 	cmp	r1, r2
400090e0:	2a000004 	bcs	400090f8 <_tx_thread_system_suspend+0x164>
400090e4:	e3e01000 	mvn	r1, #0
400090e8:	e5801000 	str	r1, [r0]
400090ec:	e3a01000 	mov	r1, #0
400090f0:	e5801004 	str	r1, [r0, #4]
400090f4:	ea000003 	b	40009108 <_tx_thread_system_suspend+0x174>
400090f8:	e59f1470 	ldr	r1, [pc, #1136]	; 40009570 <_tx_thread_system_suspend+0x5dc>
400090fc:	e5801000 	str	r1, [r0]
40009100:	e3a01000 	mov	r1, #0
40009104:	e5801004 	str	r1, [r0, #4]
40009108:	e3a01002 	mov	r1, #2
4000910c:	e5801008 	str	r1, [r0, #8]
40009110:	e5804010 	str	r4, [r0, #16]
40009114:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40009118:	e5801014 	str	r1, [r0, #20]
4000911c:	e28d1004 	add	r1, sp, #4
40009120:	e5801018 	str	r1, [r0, #24]
40009124:	e59f1448 	ldr	r1, [pc, #1096]	; 40009574 <_tx_thread_system_suspend+0x5e0>
40009128:	e5911000 	ldr	r1, [r1]
4000912c:	e580101c 	str	r1, [r0, #28]
40009130:	e2800020 	add	r0, r0, #32
40009134:	e59f143c 	ldr	r1, [pc, #1084]	; 40009578 <_tx_thread_system_suspend+0x5e4>
40009138:	e5911000 	ldr	r1, [r1]
4000913c:	e1500001 	cmp	r0, r1
40009140:	3a000001 	bcc	4000914c <_tx_thread_system_suspend+0x1b8>
40009144:	e59f1430 	ldr	r1, [pc, #1072]	; 4000957c <_tx_thread_system_suspend+0x5e8>
40009148:	e5910000 	ldr	r0, [r1]
4000914c:	e59f1410 	ldr	r1, [pc, #1040]	; 40009564 <_tx_thread_system_suspend+0x5d0>
40009150:	e5810000 	str	r0, [r1]
40009154:	e59f1424 	ldr	r1, [pc, #1060]	; 40009580 <_tx_thread_system_suspend+0x5ec>
40009158:	e5911000 	ldr	r1, [r1]
4000915c:	e5810020 	str	r0, [r1, #32]
40009160:	e35a0000 	cmp	sl, #0
40009164:	0a000000 	beq	4000916c <_tx_thread_system_suspend+0x1d8>
40009168:	e59ab00c 	ldr	fp, [sl, #12]
4000916c:	e3a00000 	mov	r0, #0
40009170:	e5840038 	str	r0, [r4, #56]	; 0x38
40009174:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40009178:	e5940020 	ldr	r0, [r4, #32]
4000917c:	e1500004 	cmp	r0, r4
40009180:	0a000029 	beq	4000922c <_tx_thread_system_suspend+0x298>
40009184:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40009188:	e5941020 	ldr	r1, [r4, #32]
4000918c:	e5810024 	str	r0, [r1, #36]	; 0x24
40009190:	e5940020 	ldr	r0, [r4, #32]
40009194:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40009198:	e5810020 	str	r0, [r1, #32]
4000919c:	e59f03e0 	ldr	r0, [pc, #992]	; 40009584 <_tx_thread_system_suspend+0x5f0>
400091a0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400091a4:	e1500004 	cmp	r0, r4
400091a8:	1a0000c4 	bne	400094c0 <_tx_thread_system_suspend+0x52c>
400091ac:	e59f13d0 	ldr	r1, [pc, #976]	; 40009584 <_tx_thread_system_suspend+0x5f0>
400091b0:	e5940020 	ldr	r0, [r4, #32]
400091b4:	e7810107 	str	r0, [r1, r7, lsl #2]
400091b8:	e59f03c8 	ldr	r0, [pc, #968]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400091bc:	e5900000 	ldr	r0, [r0]
400091c0:	e3500000 	cmp	r0, #0
400091c4:	0a000005 	beq	400091e0 <_tx_thread_system_suspend+0x24c>
400091c8:	e59f03b8 	ldr	r0, [pc, #952]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400091cc:	e5900000 	ldr	r0, [r0]
400091d0:	e3a01001 	mov	r1, #1
400091d4:	e1c00711 	bic	r0, r0, r1, lsl r7
400091d8:	e59f13a8 	ldr	r1, [pc, #936]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400091dc:	e5810000 	str	r0, [r1]
400091e0:	e59f038c 	ldr	r0, [pc, #908]	; 40009574 <_tx_thread_system_suspend+0x5e0>
400091e4:	e5900000 	ldr	r0, [r0]
400091e8:	e1540000 	cmp	r4, r0
400091ec:	1a0000b3 	bne	400094c0 <_tx_thread_system_suspend+0x52c>
400091f0:	e59f038c 	ldr	r0, [pc, #908]	; 40009584 <_tx_thread_system_suspend+0x5f0>
400091f4:	e59f1390 	ldr	r1, [pc, #912]	; 4000958c <_tx_thread_system_suspend+0x5f8>
400091f8:	e5911000 	ldr	r1, [r1]
400091fc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40009200:	e59f136c 	ldr	r1, [pc, #876]	; 40009574 <_tx_thread_system_suspend+0x5e0>
40009204:	e5810000 	str	r0, [r1]
40009208:	e35a0000 	cmp	sl, #0
4000920c:	0a0000ab 	beq	400094c0 <_tx_thread_system_suspend+0x52c>
40009210:	e59a000c 	ldr	r0, [sl, #12]
40009214:	e150000b 	cmp	r0, fp
40009218:	1a0000a8 	bne	400094c0 <_tx_thread_system_suspend+0x52c>
4000921c:	e2810000 	add	r0, r1, #0
40009220:	e5900000 	ldr	r0, [r0]
40009224:	e58a001c 	str	r0, [sl, #28]
40009228:	ea0000a4 	b	400094c0 <_tx_thread_system_suspend+0x52c>
4000922c:	e3a00000 	mov	r0, #0
40009230:	e59f134c 	ldr	r1, [pc, #844]	; 40009584 <_tx_thread_system_suspend+0x5f0>
40009234:	e7810107 	str	r0, [r1, r7, lsl #2]
40009238:	e59f0350 	ldr	r0, [pc, #848]	; 40009590 <_tx_thread_system_suspend+0x5fc>
4000923c:	e5900000 	ldr	r0, [r0]
40009240:	e3a01001 	mov	r1, #1
40009244:	e1c00711 	bic	r0, r0, r1, lsl r7
40009248:	e59f1340 	ldr	r1, [pc, #832]	; 40009590 <_tx_thread_system_suspend+0x5fc>
4000924c:	e5810000 	str	r0, [r1]
40009250:	e59f0330 	ldr	r0, [pc, #816]	; 40009588 <_tx_thread_system_suspend+0x5f4>
40009254:	e5900000 	ldr	r0, [r0]
40009258:	e3500000 	cmp	r0, #0
4000925c:	0a000005 	beq	40009278 <_tx_thread_system_suspend+0x2e4>
40009260:	e59f0320 	ldr	r0, [pc, #800]	; 40009588 <_tx_thread_system_suspend+0x5f4>
40009264:	e5900000 	ldr	r0, [r0]
40009268:	e3a01001 	mov	r1, #1
4000926c:	e1c00711 	bic	r0, r0, r1, lsl r7
40009270:	e59f1310 	ldr	r1, [pc, #784]	; 40009588 <_tx_thread_system_suspend+0x5f4>
40009274:	e5810000 	str	r0, [r1]
40009278:	e3a08000 	mov	r8, #0
4000927c:	e59f030c 	ldr	r0, [pc, #780]	; 40009590 <_tx_thread_system_suspend+0x5fc>
40009280:	e5909000 	ldr	r9, [r0]
40009284:	e20900ff 	and	r0, r9, #255	; 0xff
40009288:	e58d0004 	str	r0, [sp, #4]
4000928c:	e59d0004 	ldr	r0, [sp, #4]
40009290:	e3500000 	cmp	r0, #0
40009294:	1a00002a 	bne	40009344 <_tx_thread_system_suspend+0x3b0>
40009298:	e1a09429 	lsr	r9, r9, #8
4000929c:	e20900ff 	and	r0, r9, #255	; 0xff
400092a0:	e58d0004 	str	r0, [sp, #4]
400092a4:	e2888008 	add	r8, r8, #8
400092a8:	e59d0004 	ldr	r0, [sp, #4]
400092ac:	e3500000 	cmp	r0, #0
400092b0:	1a000023 	bne	40009344 <_tx_thread_system_suspend+0x3b0>
400092b4:	e1a09429 	lsr	r9, r9, #8
400092b8:	e20900ff 	and	r0, r9, #255	; 0xff
400092bc:	e58d0004 	str	r0, [sp, #4]
400092c0:	e2888008 	add	r8, r8, #8
400092c4:	e59d0004 	ldr	r0, [sp, #4]
400092c8:	e3500000 	cmp	r0, #0
400092cc:	1a00001c 	bne	40009344 <_tx_thread_system_suspend+0x3b0>
400092d0:	e1a09429 	lsr	r9, r9, #8
400092d4:	e20900ff 	and	r0, r9, #255	; 0xff
400092d8:	e58d0004 	str	r0, [sp, #4]
400092dc:	e2888008 	add	r8, r8, #8
400092e0:	e59d0004 	ldr	r0, [sp, #4]
400092e4:	e3500000 	cmp	r0, #0
400092e8:	1a000015 	bne	40009344 <_tx_thread_system_suspend+0x3b0>
400092ec:	e3a00020 	mov	r0, #32
400092f0:	e59f1294 	ldr	r1, [pc, #660]	; 4000958c <_tx_thread_system_suspend+0x5f8>
400092f4:	e5810000 	str	r0, [r1]
400092f8:	e3a00000 	mov	r0, #0
400092fc:	e59f1270 	ldr	r1, [pc, #624]	; 40009574 <_tx_thread_system_suspend+0x5e0>
40009300:	e5810000 	str	r0, [r1]
40009304:	e35a0000 	cmp	sl, #0
40009308:	0a000004 	beq	40009320 <_tx_thread_system_suspend+0x38c>
4000930c:	e59a000c 	ldr	r0, [sl, #12]
40009310:	e150000b 	cmp	r0, fp
40009314:	1a000001 	bne	40009320 <_tx_thread_system_suspend+0x38c>
40009318:	e3a00000 	mov	r0, #0
4000931c:	e58a001c 	str	r0, [sl, #28]
40009320:	e121f005 	msr	CPSR_c, r5
40009324:	e59f0240 	ldr	r0, [pc, #576]	; 4000956c <_tx_thread_system_suspend+0x5d8>
40009328:	e5900000 	ldr	r0, [r0]
4000932c:	e59f122c 	ldr	r1, [pc, #556]	; 40009560 <_tx_thread_system_suspend+0x5cc>
40009330:	e5911000 	ldr	r1, [r1]
40009334:	e1900001 	orrs	r0, r0, r1
40009338:	1a000000 	bne	40009340 <_tx_thread_system_suspend+0x3ac>
4000933c:	eb000725 	bl	4000afd8 <_tx_thread_system_return>
40009340:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009344:	e59f0248 	ldr	r0, [pc, #584]	; 40009594 <_tx_thread_system_suspend+0x600>
40009348:	e59d1004 	ldr	r1, [sp, #4]
4000934c:	e7d00001 	ldrb	r0, [r0, r1]
40009350:	e0800008 	add	r0, r0, r8
40009354:	e59f1230 	ldr	r1, [pc, #560]	; 4000958c <_tx_thread_system_suspend+0x5f8>
40009358:	e5810000 	str	r0, [r1]
4000935c:	e59f0210 	ldr	r0, [pc, #528]	; 40009574 <_tx_thread_system_suspend+0x5e0>
40009360:	e5900000 	ldr	r0, [r0]
40009364:	e1540000 	cmp	r4, r0
40009368:	1a000054 	bne	400094c0 <_tx_thread_system_suspend+0x52c>
4000936c:	e59f0210 	ldr	r0, [pc, #528]	; 40009584 <_tx_thread_system_suspend+0x5f0>
40009370:	e5911000 	ldr	r1, [r1]
40009374:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40009378:	e59f11f4 	ldr	r1, [pc, #500]	; 40009574 <_tx_thread_system_suspend+0x5e0>
4000937c:	e5810000 	str	r0, [r1]
40009380:	e35a0000 	cmp	sl, #0
40009384:	0a000005 	beq	400093a0 <_tx_thread_system_suspend+0x40c>
40009388:	e59a000c 	ldr	r0, [sl, #12]
4000938c:	e150000b 	cmp	r0, fp
40009390:	1a000002 	bne	400093a0 <_tx_thread_system_suspend+0x40c>
40009394:	e2810000 	add	r0, r1, #0
40009398:	e5900000 	ldr	r0, [r0]
4000939c:	e58a001c 	str	r0, [sl, #28]
400093a0:	e59f01e0 	ldr	r0, [pc, #480]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400093a4:	e5900000 	ldr	r0, [r0]
400093a8:	e3500000 	cmp	r0, #0
400093ac:	0a000043 	beq	400094c0 <_tx_thread_system_suspend+0x52c>
400093b0:	e59f01a8 	ldr	r0, [pc, #424]	; 40009560 <_tx_thread_system_suspend+0x5cc>
400093b4:	e5900000 	ldr	r0, [r0]
400093b8:	e2800001 	add	r0, r0, #1
400093bc:	e59f119c 	ldr	r1, [pc, #412]	; 40009560 <_tx_thread_system_suspend+0x5cc>
400093c0:	e5810000 	str	r0, [r1]
400093c4:	e121f005 	msr	CPSR_c, r5
400093c8:	e10f5000 	mrs	r5, CPSR
400093cc:	e3856080 	orr	r6, r5, #128	; 0x80
400093d0:	e121f006 	msr	CPSR_c, r6
400093d4:	e2810000 	add	r0, r1, #0
400093d8:	e5900000 	ldr	r0, [r0]
400093dc:	e2400001 	sub	r0, r0, #1
400093e0:	e5810000 	str	r0, [r1]
400093e4:	e3a08000 	mov	r8, #0
400093e8:	e59f0198 	ldr	r0, [pc, #408]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400093ec:	e5909000 	ldr	r9, [r0]
400093f0:	e20900ff 	and	r0, r9, #255	; 0xff
400093f4:	e58d0004 	str	r0, [sp, #4]
400093f8:	e59d0004 	ldr	r0, [sp, #4]
400093fc:	e3500000 	cmp	r0, #0
40009400:	1a000011 	bne	4000944c <_tx_thread_system_suspend+0x4b8>
40009404:	e1a09429 	lsr	r9, r9, #8
40009408:	e20900ff 	and	r0, r9, #255	; 0xff
4000940c:	e58d0004 	str	r0, [sp, #4]
40009410:	e2888008 	add	r8, r8, #8
40009414:	e59d0004 	ldr	r0, [sp, #4]
40009418:	e3500000 	cmp	r0, #0
4000941c:	1a00000a 	bne	4000944c <_tx_thread_system_suspend+0x4b8>
40009420:	e1a09429 	lsr	r9, r9, #8
40009424:	e20900ff 	and	r0, r9, #255	; 0xff
40009428:	e58d0004 	str	r0, [sp, #4]
4000942c:	e2888008 	add	r8, r8, #8
40009430:	e59d0004 	ldr	r0, [sp, #4]
40009434:	e3500000 	cmp	r0, #0
40009438:	1a000003 	bne	4000944c <_tx_thread_system_suspend+0x4b8>
4000943c:	e1a09429 	lsr	r9, r9, #8
40009440:	e20900ff 	and	r0, r9, #255	; 0xff
40009444:	e58d0004 	str	r0, [sp, #4]
40009448:	e2888008 	add	r8, r8, #8
4000944c:	e59f0140 	ldr	r0, [pc, #320]	; 40009594 <_tx_thread_system_suspend+0x600>
40009450:	e59d1004 	ldr	r1, [sp, #4]
40009454:	e7d00001 	ldrb	r0, [r0, r1]
40009458:	e0807008 	add	r7, r0, r8
4000945c:	e59f0120 	ldr	r0, [pc, #288]	; 40009584 <_tx_thread_system_suspend+0x5f0>
40009460:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009464:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40009468:	e59f111c 	ldr	r1, [pc, #284]	; 4000958c <_tx_thread_system_suspend+0x5f8>
4000946c:	e5911000 	ldr	r1, [r1]
40009470:	e1500001 	cmp	r0, r1
40009474:	8a000011 	bhi	400094c0 <_tx_thread_system_suspend+0x52c>
40009478:	e59f0104 	ldr	r0, [pc, #260]	; 40009584 <_tx_thread_system_suspend+0x5f0>
4000947c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009480:	e59f10ec 	ldr	r1, [pc, #236]	; 40009574 <_tx_thread_system_suspend+0x5e0>
40009484:	e5810000 	str	r0, [r1]
40009488:	e35a0000 	cmp	sl, #0
4000948c:	0a000005 	beq	400094a8 <_tx_thread_system_suspend+0x514>
40009490:	e59a000c 	ldr	r0, [sl, #12]
40009494:	e150000b 	cmp	r0, fp
40009498:	1a000002 	bne	400094a8 <_tx_thread_system_suspend+0x514>
4000949c:	e2810000 	add	r0, r1, #0
400094a0:	e5900000 	ldr	r0, [r0]
400094a4:	e58a001c 	str	r0, [sl, #28]
400094a8:	e59f00d8 	ldr	r0, [pc, #216]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400094ac:	e5900000 	ldr	r0, [r0]
400094b0:	e3a01001 	mov	r1, #1
400094b4:	e1c00711 	bic	r0, r0, r1, lsl r7
400094b8:	e59f10c8 	ldr	r1, [pc, #200]	; 40009588 <_tx_thread_system_suspend+0x5f4>
400094bc:	e5810000 	str	r0, [r1]
400094c0:	e121f005 	msr	CPSR_c, r5
400094c4:	e59f008c 	ldr	r0, [pc, #140]	; 40009558 <_tx_thread_system_suspend+0x5c4>
400094c8:	e5900000 	ldr	r0, [r0]
400094cc:	e59f10a0 	ldr	r1, [pc, #160]	; 40009574 <_tx_thread_system_suspend+0x5e0>
400094d0:	e5911000 	ldr	r1, [r1]
400094d4:	e1500001 	cmp	r0, r1
400094d8:	0a00001d 	beq	40009554 <_tx_thread_system_suspend+0x5c0>
400094dc:	e59f0090 	ldr	r0, [pc, #144]	; 40009574 <_tx_thread_system_suspend+0x5e0>
400094e0:	e5904000 	ldr	r4, [r0]
400094e4:	e5940008 	ldr	r0, [r4, #8]
400094e8:	e5941040 	ldr	r1, [r4, #64]	; 0x40
400094ec:	e1500001 	cmp	r0, r1
400094f0:	2a000001 	bcs	400094fc <_tx_thread_system_suspend+0x568>
400094f4:	e5940008 	ldr	r0, [r4, #8]
400094f8:	e5840040 	str	r0, [r4, #64]	; 0x40
400094fc:	e594000c 	ldr	r0, [r4, #12]
40009500:	e5900000 	ldr	r0, [r0]
40009504:	e59f1050 	ldr	r1, [pc, #80]	; 4000955c <_tx_thread_system_suspend+0x5c8>
40009508:	e1500001 	cmp	r0, r1
4000950c:	1a000007 	bne	40009530 <_tx_thread_system_suspend+0x59c>
40009510:	e5940010 	ldr	r0, [r4, #16]
40009514:	e5900001 	ldr	r0, [r0, #1]
40009518:	e1500001 	cmp	r0, r1
4000951c:	1a000003 	bne	40009530 <_tx_thread_system_suspend+0x59c>
40009520:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009524:	e594100c 	ldr	r1, [r4, #12]
40009528:	e1500001 	cmp	r0, r1
4000952c:	2a000001 	bcs	40009538 <_tx_thread_system_suspend+0x5a4>
40009530:	e1a00004 	mov	r0, r4
40009534:	eb0017fe 	bl	4000f534 <_tx_thread_stack_error_handler>
40009538:	e59f002c 	ldr	r0, [pc, #44]	; 4000956c <_tx_thread_system_suspend+0x5d8>
4000953c:	e5900000 	ldr	r0, [r0]
40009540:	e59f1018 	ldr	r1, [pc, #24]	; 40009560 <_tx_thread_system_suspend+0x5cc>
40009544:	e5911000 	ldr	r1, [r1]
40009548:	e1900001 	orrs	r0, r0, r1
4000954c:	1a000000 	bne	40009554 <_tx_thread_system_suspend+0x5c0>
40009550:	eb0006a0 	bl	4000afd8 <_tx_thread_system_return>
40009554:	eaffff79 	b	40009340 <_tx_thread_system_suspend+0x3ac>
40009558:	40030e54 	.word	0x40030e54
4000955c:	efefefef 	.word	0xefefefef
40009560:	40030e70 	.word	0x40030e70
40009564:	40030ec0 	.word	0x40030ec0
40009568:	40030ec4 	.word	0x40030ec4
4000956c:	40030e4c 	.word	0x40030e4c
40009570:	f0f0f0f0 	.word	0xf0f0f0f0
40009574:	40030e58 	.word	0x40030e58
40009578:	40030ebc 	.word	0x40030ebc
4000957c:	40030eb8 	.word	0x40030eb8
40009580:	40030eac 	.word	0x40030eac
40009584:	40032894 	.word	0x40032894
40009588:	40030e68 	.word	0x40030e68
4000958c:	40030e6c 	.word	0x40030e6c
40009590:	40030e64 	.word	0x40030e64
40009594:	40032794 	.word	0x40032794

40009598 <_tx_time_get>:
40009598:	e92d4008 	push	{r3, lr}
4000959c:	e10f1000 	mrs	r1, CPSR
400095a0:	e3812080 	orr	r2, r1, #128	; 0x80
400095a4:	e121f002 	msr	CPSR_c, r2
400095a8:	e59f00ec 	ldr	r0, [pc, #236]	; 4000969c <_tx_time_get+0x104>
400095ac:	e5900000 	ldr	r0, [r0]
400095b0:	e58d0000 	str	r0, [sp]
400095b4:	e59f30e4 	ldr	r3, [pc, #228]	; 400096a0 <_tx_time_get+0x108>
400095b8:	e5930000 	ldr	r0, [r3]
400095bc:	e3500000 	cmp	r0, #0
400095c0:	0a000032 	beq	40009690 <_tx_time_get+0xf8>
400095c4:	e59f30d8 	ldr	r3, [pc, #216]	; 400096a4 <_tx_time_get+0x10c>
400095c8:	e5933000 	ldr	r3, [r3]
400095cc:	e2833001 	add	r3, r3, #1
400095d0:	e59fc0cc 	ldr	ip, [pc, #204]	; 400096a4 <_tx_time_get+0x10c>
400095d4:	e58c3000 	str	r3, [ip]
400095d8:	e580300c 	str	r3, [r0, #12]
400095dc:	e59f30c4 	ldr	r3, [pc, #196]	; 400096a8 <_tx_time_get+0x110>
400095e0:	e5933000 	ldr	r3, [r3]
400095e4:	e3530000 	cmp	r3, #0
400095e8:	1a000006 	bne	40009608 <_tx_time_get+0x70>
400095ec:	e59f30b8 	ldr	r3, [pc, #184]	; 400096ac <_tx_time_get+0x114>
400095f0:	e5933000 	ldr	r3, [r3]
400095f4:	e5803000 	str	r3, [r0]
400095f8:	e5903000 	ldr	r3, [r0]
400095fc:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40009600:	e5803004 	str	r3, [r0, #4]
40009604:	ea00000d 	b	40009640 <_tx_time_get+0xa8>
40009608:	e59f3098 	ldr	r3, [pc, #152]	; 400096a8 <_tx_time_get+0x110>
4000960c:	e5933000 	ldr	r3, [r3]
40009610:	e59fc098 	ldr	ip, [pc, #152]	; 400096b0 <_tx_time_get+0x118>
40009614:	e153000c 	cmp	r3, ip
40009618:	2a000004 	bcs	40009630 <_tx_time_get+0x98>
4000961c:	e3e03000 	mvn	r3, #0
40009620:	e5803000 	str	r3, [r0]
40009624:	e3a03000 	mov	r3, #0
40009628:	e5803004 	str	r3, [r0, #4]
4000962c:	ea000003 	b	40009640 <_tx_time_get+0xa8>
40009630:	e59f3078 	ldr	r3, [pc, #120]	; 400096b0 <_tx_time_get+0x118>
40009634:	e5803000 	str	r3, [r0]
40009638:	e3a03000 	mov	r3, #0
4000963c:	e5803004 	str	r3, [r0, #4]
40009640:	e3a03078 	mov	r3, #120	; 0x78
40009644:	e5803008 	str	r3, [r0, #8]
40009648:	e59d3000 	ldr	r3, [sp]
4000964c:	e5803010 	str	r3, [r0, #16]
40009650:	e580d014 	str	sp, [r0, #20]
40009654:	e3a03000 	mov	r3, #0
40009658:	e5803018 	str	r3, [r0, #24]
4000965c:	e580301c 	str	r3, [r0, #28]
40009660:	e2800020 	add	r0, r0, #32
40009664:	e59f3048 	ldr	r3, [pc, #72]	; 400096b4 <_tx_time_get+0x11c>
40009668:	e5933000 	ldr	r3, [r3]
4000966c:	e1500003 	cmp	r0, r3
40009670:	3a000001 	bcc	4000967c <_tx_time_get+0xe4>
40009674:	e59f303c 	ldr	r3, [pc, #60]	; 400096b8 <_tx_time_get+0x120>
40009678:	e5930000 	ldr	r0, [r3]
4000967c:	e59f301c 	ldr	r3, [pc, #28]	; 400096a0 <_tx_time_get+0x108>
40009680:	e5830000 	str	r0, [r3]
40009684:	e59f3030 	ldr	r3, [pc, #48]	; 400096bc <_tx_time_get+0x124>
40009688:	e5933000 	ldr	r3, [r3]
4000968c:	e5830020 	str	r0, [r3, #32]
40009690:	e121f001 	msr	CPSR_c, r1
40009694:	e59d0000 	ldr	r0, [sp]
40009698:	e8bd8008 	pop	{r3, pc}
4000969c:	40030e7c 	.word	0x40030e7c
400096a0:	40030ec0 	.word	0x40030ec0
400096a4:	40030ec4 	.word	0x40030ec4
400096a8:	40030e4c 	.word	0x40030e4c
400096ac:	40030e54 	.word	0x40030e54
400096b0:	f0f0f0f0 	.word	0xf0f0f0f0
400096b4:	40030ebc 	.word	0x40030ebc
400096b8:	40030eb8 	.word	0x40030eb8
400096bc:	40030eac 	.word	0x40030eac

400096c0 <_tx_timer_initialize>:
400096c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400096c4:	e24dd01c 	sub	sp, sp, #28
400096c8:	e3a00000 	mov	r0, #0
400096cc:	e59f10d8 	ldr	r1, [pc, #216]	; 400097ac <_tx_timer_initialize+0xec>
400096d0:	e5810000 	str	r0, [r1]
400096d4:	e59f10d4 	ldr	r1, [pc, #212]	; 400097b0 <_tx_timer_initialize+0xf0>
400096d8:	e5810000 	str	r0, [r1]
400096dc:	e59f10d0 	ldr	r1, [pc, #208]	; 400097b4 <_tx_timer_initialize+0xf4>
400096e0:	e5810000 	str	r0, [r1]
400096e4:	e59f10cc 	ldr	r1, [pc, #204]	; 400097b8 <_tx_timer_initialize+0xf8>
400096e8:	e5810000 	str	r0, [r1]
400096ec:	e3a01080 	mov	r1, #128	; 0x80
400096f0:	e59f00c4 	ldr	r0, [pc, #196]	; 400097bc <_tx_timer_initialize+0xfc>
400096f4:	eb0028c1 	bl	40013a00 <__aeabi_memclr4>
400096f8:	e59f00bc 	ldr	r0, [pc, #188]	; 400097bc <_tx_timer_initialize+0xfc>
400096fc:	e59f10bc 	ldr	r1, [pc, #188]	; 400097c0 <_tx_timer_initialize+0x100>
40009700:	e5810000 	str	r0, [r1]
40009704:	e59f10b8 	ldr	r1, [pc, #184]	; 400097c4 <_tx_timer_initialize+0x104>
40009708:	e5810000 	str	r0, [r1]
4000970c:	e280007c 	add	r0, r0, #124	; 0x7c
40009710:	e59f10b0 	ldr	r1, [pc, #176]	; 400097c8 <_tx_timer_initialize+0x108>
40009714:	e5810000 	str	r0, [r1]
40009718:	e2810000 	add	r0, r1, #0
4000971c:	e5900000 	ldr	r0, [r0]
40009720:	e2800004 	add	r0, r0, #4
40009724:	e5810000 	str	r0, [r1]
40009728:	e59f009c 	ldr	r0, [pc, #156]	; 400097cc <_tx_timer_initialize+0x10c>
4000972c:	e59f109c 	ldr	r1, [pc, #156]	; 400097d0 <_tx_timer_initialize+0x110>
40009730:	e5810000 	str	r0, [r1]
40009734:	e3a00b01 	mov	r0, #1024	; 0x400
40009738:	e59f1094 	ldr	r1, [pc, #148]	; 400097d4 <_tx_timer_initialize+0x114>
4000973c:	e5810000 	str	r0, [r1]
40009740:	e3a00000 	mov	r0, #0
40009744:	e59f108c 	ldr	r1, [pc, #140]	; 400097d8 <_tx_timer_initialize+0x118>
40009748:	e5810000 	str	r0, [r1]
4000974c:	e3a03000 	mov	r3, #0
40009750:	e2810000 	add	r0, r1, #0
40009754:	e5901000 	ldr	r1, [r0]
40009758:	e5900000 	ldr	r0, [r0]
4000975c:	e28d2008 	add	r2, sp, #8
40009760:	e882000b 	stm	r2, {r0, r1, r3}
40009764:	e59f0068 	ldr	r0, [pc, #104]	; 400097d4 <_tx_timer_initialize+0x114>
40009768:	e58d3014 	str	r3, [sp, #20]
4000976c:	e5903000 	ldr	r3, [r0]
40009770:	e59f0058 	ldr	r0, [pc, #88]	; 400097d0 <_tx_timer_initialize+0x110>
40009774:	e5902000 	ldr	r2, [r0]
40009778:	e1cd20f0 	strd	r2, [sp]
4000977c:	e59f3058 	ldr	r3, [pc, #88]	; 400097dc <_tx_timer_initialize+0x11c>
40009780:	e59f2058 	ldr	r2, [pc, #88]	; 400097e0 <_tx_timer_initialize+0x120>
40009784:	e28f1058 	add	r1, pc, #88	; 0x58
40009788:	e59f0068 	ldr	r0, [pc, #104]	; 400097f8 <_tx_timer_initialize+0x138>
4000978c:	eb00143b 	bl	4000e880 <_tx_thread_create>
40009790:	e3a00000 	mov	r0, #0
40009794:	e59f1060 	ldr	r1, [pc, #96]	; 400097fc <_tx_timer_initialize+0x13c>
40009798:	e5810000 	str	r0, [r1]
4000979c:	e59f105c 	ldr	r1, [pc, #92]	; 40009800 <_tx_timer_initialize+0x140>
400097a0:	e5810000 	str	r0, [r1]
400097a4:	e28dd01c 	add	sp, sp, #28
400097a8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400097ac:	40030e7c 	.word	0x40030e7c
400097b0:	40030e80 	.word	0x40030e80
400097b4:	40030e84 	.word	0x40030e84
400097b8:	40030e94 	.word	0x40030e94
400097bc:	40032914 	.word	0x40032914
400097c0:	40030e88 	.word	0x40030e88
400097c4:	40030e90 	.word	0x40030e90
400097c8:	40030e8c 	.word	0x40030e8c
400097cc:	40032a3c 	.word	0x40032a3c
400097d0:	40030ea0 	.word	0x40030ea0
400097d4:	40030ea4 	.word	0x40030ea4
400097d8:	40030ea8 	.word	0x40030ea8
400097dc:	4154494d 	.word	0x4154494d
400097e0:	400098f0 	.word	0x400098f0
400097e4:	74737953 	.word	0x74737953
400097e8:	54206d65 	.word	0x54206d65
400097ec:	72656d69 	.word	0x72656d69
400097f0:	72685420 	.word	0x72685420
400097f4:	00646165 	.word	0x00646165
400097f8:	40032994 	.word	0x40032994
400097fc:	40030e98 	.word	0x40030e98
40009800:	40030e9c 	.word	0x40030e9c

40009804 <_tx_timer_system_activate>:
40009804:	e92d4010 	push	{r4, lr}
40009808:	e1a01000 	mov	r1, r0
4000980c:	e10f2000 	mrs	r2, CPSR
40009810:	e3823080 	orr	r3, r2, #128	; 0x80
40009814:	e121f003 	msr	CPSR_c, r3
40009818:	e5910000 	ldr	r0, [r1]
4000981c:	e3500000 	cmp	r0, #0
40009820:	0a00002c 	beq	400098d8 <_tx_timer_system_activate+0xd4>
40009824:	e5910000 	ldr	r0, [r1]
40009828:	e3700001 	cmn	r0, #1
4000982c:	0a000029 	beq	400098d8 <_tx_timer_system_activate+0xd4>
40009830:	e5910018 	ldr	r0, [r1, #24]
40009834:	e3500000 	cmp	r0, #0
40009838:	1a000026 	bne	400098d8 <_tx_timer_system_activate+0xd4>
4000983c:	e5910000 	ldr	r0, [r1]
40009840:	e3500020 	cmp	r0, #32
40009844:	9a000001 	bls	40009850 <_tx_timer_system_activate+0x4c>
40009848:	e3a0e01f 	mov	lr, #31
4000984c:	ea000001 	b	40009858 <_tx_timer_system_activate+0x54>
40009850:	e5910000 	ldr	r0, [r1]
40009854:	e240e001 	sub	lr, r0, #1
40009858:	e59f0084 	ldr	r0, [pc, #132]	; 400098e4 <_tx_timer_system_activate+0xe0>
4000985c:	e5900000 	ldr	r0, [r0]
40009860:	e080c10e 	add	ip, r0, lr, lsl #2
40009864:	e59f007c 	ldr	r0, [pc, #124]	; 400098e8 <_tx_timer_system_activate+0xe4>
40009868:	e5900000 	ldr	r0, [r0]
4000986c:	e15c0000 	cmp	ip, r0
40009870:	3a000006 	bcc	40009890 <_tx_timer_system_activate+0x8c>
40009874:	e59f006c 	ldr	r0, [pc, #108]	; 400098e8 <_tx_timer_system_activate+0xe4>
40009878:	e5900000 	ldr	r0, [r0]
4000987c:	e04c0000 	sub	r0, ip, r0
40009880:	e1a00140 	asr	r0, r0, #2
40009884:	e59f4060 	ldr	r4, [pc, #96]	; 400098ec <_tx_timer_system_activate+0xe8>
40009888:	e5944000 	ldr	r4, [r4]
4000988c:	e084c100 	add	ip, r4, r0, lsl #2
40009890:	e59c0000 	ldr	r0, [ip]
40009894:	e3500000 	cmp	r0, #0
40009898:	0a00000a 	beq	400098c8 <_tx_timer_system_activate+0xc4>
4000989c:	e59c0000 	ldr	r0, [ip]
400098a0:	e5810010 	str	r0, [r1, #16]
400098a4:	e59c0000 	ldr	r0, [ip]
400098a8:	e5900014 	ldr	r0, [r0, #20]
400098ac:	e5810014 	str	r0, [r1, #20]
400098b0:	e5910014 	ldr	r0, [r1, #20]
400098b4:	e5801010 	str	r1, [r0, #16]
400098b8:	e59c0000 	ldr	r0, [ip]
400098bc:	e5801014 	str	r1, [r0, #20]
400098c0:	e581c018 	str	ip, [r1, #24]
400098c4:	ea000003 	b	400098d8 <_tx_timer_system_activate+0xd4>
400098c8:	e5811010 	str	r1, [r1, #16]
400098cc:	e5811014 	str	r1, [r1, #20]
400098d0:	e581c018 	str	ip, [r1, #24]
400098d4:	e58c1000 	str	r1, [ip]
400098d8:	e121f002 	msr	CPSR_c, r2
400098dc:	e3a00000 	mov	r0, #0
400098e0:	e8bd8010 	pop	{r4, pc}
400098e4:	40030e90 	.word	0x40030e90
400098e8:	40030e8c 	.word	0x40030e8c
400098ec:	40030e88 	.word	0x40030e88

400098f0 <_tx_timer_thread_entry>:
400098f0:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400098f4:	e1a04000 	mov	r4, r0
400098f8:	e3a09000 	mov	r9, #0
400098fc:	e59f0214 	ldr	r0, [pc, #532]	; 40009b18 <_tx_timer_thread_entry+0x228>
40009900:	e1540000 	cmp	r4, r0
40009904:	0a000000 	beq	4000990c <_tx_timer_thread_entry+0x1c>
40009908:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000990c:	e3a00000 	mov	r0, #0
40009910:	e58d0000 	str	r0, [sp]
40009914:	e1a00000 	nop			; (mov r0, r0)
40009918:	e10f5000 	mrs	r5, CPSR
4000991c:	e3856080 	orr	r6, r5, #128	; 0x80
40009920:	e121f006 	msr	CPSR_c, r6
40009924:	e59f01f0 	ldr	r0, [pc, #496]	; 40009b1c <_tx_timer_thread_entry+0x22c>
40009928:	e5900000 	ldr	r0, [r0]
4000992c:	e5900000 	ldr	r0, [r0]
40009930:	e58d0004 	str	r0, [sp, #4]
40009934:	e59d0004 	ldr	r0, [sp, #4]
40009938:	e3500000 	cmp	r0, #0
4000993c:	0a000002 	beq	4000994c <_tx_timer_thread_entry+0x5c>
40009940:	e28d0004 	add	r0, sp, #4
40009944:	e59d1004 	ldr	r1, [sp, #4]
40009948:	e5810018 	str	r0, [r1, #24]
4000994c:	e3a00000 	mov	r0, #0
40009950:	e59f11c4 	ldr	r1, [pc, #452]	; 40009b1c <_tx_timer_thread_entry+0x22c>
40009954:	e5911000 	ldr	r1, [r1]
40009958:	e5810000 	str	r0, [r1]
4000995c:	e59f01b8 	ldr	r0, [pc, #440]	; 40009b1c <_tx_timer_thread_entry+0x22c>
40009960:	e5900000 	ldr	r0, [r0]
40009964:	e2800004 	add	r0, r0, #4
40009968:	e59f11ac 	ldr	r1, [pc, #428]	; 40009b1c <_tx_timer_thread_entry+0x22c>
4000996c:	e5810000 	str	r0, [r1]
40009970:	e2810000 	add	r0, r1, #0
40009974:	e5900000 	ldr	r0, [r0]
40009978:	e59f11a0 	ldr	r1, [pc, #416]	; 40009b20 <_tx_timer_thread_entry+0x230>
4000997c:	e5911000 	ldr	r1, [r1]
40009980:	e1500001 	cmp	r0, r1
40009984:	1a000003 	bne	40009998 <_tx_timer_thread_entry+0xa8>
40009988:	e59f0194 	ldr	r0, [pc, #404]	; 40009b24 <_tx_timer_thread_entry+0x234>
4000998c:	e5900000 	ldr	r0, [r0]
40009990:	e59f1184 	ldr	r1, [pc, #388]	; 40009b1c <_tx_timer_thread_entry+0x22c>
40009994:	e5810000 	str	r0, [r1]
40009998:	e3a00000 	mov	r0, #0
4000999c:	e59f1184 	ldr	r1, [pc, #388]	; 40009b28 <_tx_timer_thread_entry+0x238>
400099a0:	e5810000 	str	r0, [r1]
400099a4:	e121f005 	msr	CPSR_c, r5
400099a8:	e10f5000 	mrs	r5, CPSR
400099ac:	e3856080 	orr	r6, r5, #128	; 0x80
400099b0:	e121f006 	msr	CPSR_c, r6
400099b4:	ea000040 	b	40009abc <_tx_timer_thread_entry+0x1cc>
400099b8:	e59d7004 	ldr	r7, [sp, #4]
400099bc:	e59d0004 	ldr	r0, [sp, #4]
400099c0:	e5900010 	ldr	r0, [r0, #16]
400099c4:	e1500007 	cmp	r0, r7
400099c8:	1a000002 	bne	400099d8 <_tx_timer_thread_entry+0xe8>
400099cc:	e3a00000 	mov	r0, #0
400099d0:	e58d0004 	str	r0, [sp, #4]
400099d4:	ea00000a 	b	40009a04 <_tx_timer_thread_entry+0x114>
400099d8:	e5970014 	ldr	r0, [r7, #20]
400099dc:	e5971010 	ldr	r1, [r7, #16]
400099e0:	e5810014 	str	r0, [r1, #20]
400099e4:	e5970010 	ldr	r0, [r7, #16]
400099e8:	e5971014 	ldr	r1, [r7, #20]
400099ec:	e5810010 	str	r0, [r1, #16]
400099f0:	e28d0004 	add	r0, sp, #4
400099f4:	e5971010 	ldr	r1, [r7, #16]
400099f8:	e5810018 	str	r0, [r1, #24]
400099fc:	e5970010 	ldr	r0, [r7, #16]
40009a00:	e58d0004 	str	r0, [sp, #4]
40009a04:	e5970000 	ldr	r0, [r7]
40009a08:	e3500020 	cmp	r0, #32
40009a0c:	9a000006 	bls	40009a2c <_tx_timer_thread_entry+0x13c>
40009a10:	e5970000 	ldr	r0, [r7]
40009a14:	e2400020 	sub	r0, r0, #32
40009a18:	e5870000 	str	r0, [r7]
40009a1c:	e3a08000 	mov	r8, #0
40009a20:	e587d018 	str	sp, [r7, #24]
40009a24:	e5877010 	str	r7, [r7, #16]
40009a28:	ea00000b 	b	40009a5c <_tx_timer_thread_entry+0x16c>
40009a2c:	e5978008 	ldr	r8, [r7, #8]
40009a30:	e597900c 	ldr	r9, [r7, #12]
40009a34:	e5970004 	ldr	r0, [r7, #4]
40009a38:	e5870000 	str	r0, [r7]
40009a3c:	e5970000 	ldr	r0, [r7]
40009a40:	e3500000 	cmp	r0, #0
40009a44:	0a000002 	beq	40009a54 <_tx_timer_thread_entry+0x164>
40009a48:	e587d018 	str	sp, [r7, #24]
40009a4c:	e5877010 	str	r7, [r7, #16]
40009a50:	ea000001 	b	40009a5c <_tx_timer_thread_entry+0x16c>
40009a54:	e3a00000 	mov	r0, #0
40009a58:	e5870018 	str	r0, [r7, #24]
40009a5c:	e121f005 	msr	CPSR_c, r5
40009a60:	e3580000 	cmp	r8, #0
40009a64:	0a000001 	beq	40009a70 <_tx_timer_thread_entry+0x180>
40009a68:	e1a00009 	mov	r0, r9
40009a6c:	e12fff38 	blx	r8
40009a70:	e10f5000 	mrs	r5, CPSR
40009a74:	e3856080 	orr	r6, r5, #128	; 0x80
40009a78:	e121f006 	msr	CPSR_c, r6
40009a7c:	e1a0100d 	mov	r1, sp
40009a80:	e5970018 	ldr	r0, [r7, #24]
40009a84:	e1500001 	cmp	r0, r1
40009a88:	1a000007 	bne	40009aac <_tx_timer_thread_entry+0x1bc>
40009a8c:	e3a00000 	mov	r0, #0
40009a90:	e5870018 	str	r0, [r7, #24]
40009a94:	e121f005 	msr	CPSR_c, r5
40009a98:	e1a00007 	mov	r0, r7
40009a9c:	ebffff58 	bl	40009804 <_tx_timer_system_activate>
40009aa0:	e10f5000 	mrs	r5, CPSR
40009aa4:	e3856080 	orr	r6, r5, #128	; 0x80
40009aa8:	e121f006 	msr	CPSR_c, r6
40009aac:	e121f005 	msr	CPSR_c, r5
40009ab0:	e10f5000 	mrs	r5, CPSR
40009ab4:	e3856080 	orr	r6, r5, #128	; 0x80
40009ab8:	e121f006 	msr	CPSR_c, r6
40009abc:	e59d0004 	ldr	r0, [sp, #4]
40009ac0:	e3500000 	cmp	r0, #0
40009ac4:	1affffbb 	bne	400099b8 <_tx_timer_thread_entry+0xc8>
40009ac8:	e59f0058 	ldr	r0, [pc, #88]	; 40009b28 <_tx_timer_thread_entry+0x238>
40009acc:	e5900000 	ldr	r0, [r0]
40009ad0:	e3500000 	cmp	r0, #0
40009ad4:	1a00000d 	bne	40009b10 <_tx_timer_thread_entry+0x220>
40009ad8:	e59fa04c 	ldr	sl, [pc, #76]	; 40009b2c <_tx_timer_thread_entry+0x23c>
40009adc:	e3a00003 	mov	r0, #3
40009ae0:	e58a0030 	str	r0, [sl, #48]	; 0x30
40009ae4:	e3a00001 	mov	r0, #1
40009ae8:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009aec:	e59f003c 	ldr	r0, [pc, #60]	; 40009b30 <_tx_timer_thread_entry+0x240>
40009af0:	e5900000 	ldr	r0, [r0]
40009af4:	e2800001 	add	r0, r0, #1
40009af8:	e59f1030 	ldr	r1, [pc, #48]	; 40009b30 <_tx_timer_thread_entry+0x240>
40009afc:	e5810000 	str	r0, [r1]
40009b00:	e121f005 	msr	CPSR_c, r5
40009b04:	e1a0000a 	mov	r0, sl
40009b08:	ebfffd21 	bl	40008f94 <_tx_thread_system_suspend>
40009b0c:	ea000000 	b	40009b14 <_tx_timer_thread_entry+0x224>
40009b10:	e121f005 	msr	CPSR_c, r5
40009b14:	eaffff7f 	b	40009918 <_tx_timer_thread_entry+0x28>
40009b18:	4154494d 	.word	0x4154494d
40009b1c:	40030e90 	.word	0x40030e90
40009b20:	40030e8c 	.word	0x40030e8c
40009b24:	40030e88 	.word	0x40030e88
40009b28:	40030e94 	.word	0x40030e94
40009b2c:	40032994 	.word	0x40032994
40009b30:	40030e70 	.word	0x40030e70

40009b34 <_tx_trace_initialize>:
40009b34:	e3a00000 	mov	r0, #0
40009b38:	e59f102c 	ldr	r1, [pc, #44]	; 40009b6c <_tx_trace_initialize+0x38>
40009b3c:	e5810000 	str	r0, [r1]
40009b40:	e59f1028 	ldr	r1, [pc, #40]	; 40009b70 <_tx_trace_initialize+0x3c>
40009b44:	e5810000 	str	r0, [r1]
40009b48:	e59f1024 	ldr	r1, [pc, #36]	; 40009b74 <_tx_trace_initialize+0x40>
40009b4c:	e5810000 	str	r0, [r1]
40009b50:	e59f1020 	ldr	r1, [pc, #32]	; 40009b78 <_tx_trace_initialize+0x44>
40009b54:	e5810000 	str	r0, [r1]
40009b58:	e59f101c 	ldr	r1, [pc, #28]	; 40009b7c <_tx_trace_initialize+0x48>
40009b5c:	e5810000 	str	r0, [r1]
40009b60:	e59f1018 	ldr	r1, [pc, #24]	; 40009b80 <_tx_trace_initialize+0x4c>
40009b64:	e5810000 	str	r0, [r1]
40009b68:	e12fff1e 	bx	lr
40009b6c:	40030eac 	.word	0x40030eac
40009b70:	40030eb0 	.word	0x40030eb0
40009b74:	40030eb4 	.word	0x40030eb4
40009b78:	40030eb8 	.word	0x40030eb8
40009b7c:	40030ebc 	.word	0x40030ebc
40009b80:	40030ec0 	.word	0x40030ec0

40009b84 <_txe_byte_allocate>:
40009b84:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40009b88:	e1a04000 	mov	r4, r0
40009b8c:	e1a05001 	mov	r5, r1
40009b90:	e1a06002 	mov	r6, r2
40009b94:	e1a07003 	mov	r7, r3
40009b98:	e3540000 	cmp	r4, #0
40009b9c:	0a000003 	beq	40009bb0 <_txe_byte_allocate+0x2c>
40009ba0:	e5940000 	ldr	r0, [r4]
40009ba4:	e59f10d4 	ldr	r1, [pc, #212]	; 40009c80 <_txe_byte_allocate+0xfc>
40009ba8:	e1500001 	cmp	r0, r1
40009bac:	0a000001 	beq	40009bb8 <_txe_byte_allocate+0x34>
40009bb0:	e3a00002 	mov	r0, #2
40009bb4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40009bb8:	e3550000 	cmp	r5, #0
40009bbc:	1a000001 	bne	40009bc8 <_txe_byte_allocate+0x44>
40009bc0:	e3a00003 	mov	r0, #3
40009bc4:	eafffffa 	b	40009bb4 <_txe_byte_allocate+0x30>
40009bc8:	e3560000 	cmp	r6, #0
40009bcc:	0a000002 	beq	40009bdc <_txe_byte_allocate+0x58>
40009bd0:	e594001c 	ldr	r0, [r4, #28]
40009bd4:	e1500006 	cmp	r0, r6
40009bd8:	2a000001 	bcs	40009be4 <_txe_byte_allocate+0x60>
40009bdc:	e3a00005 	mov	r0, #5
40009be0:	eafffff3 	b	40009bb4 <_txe_byte_allocate+0x30>
40009be4:	e59f0098 	ldr	r0, [pc, #152]	; 40009c84 <_txe_byte_allocate+0x100>
40009be8:	e5908000 	ldr	r8, [r0]
40009bec:	e3570000 	cmp	r7, #0
40009bf0:	0a000008 	beq	40009c18 <_txe_byte_allocate+0x94>
40009bf4:	e59f008c 	ldr	r0, [pc, #140]	; 40009c88 <_txe_byte_allocate+0x104>
40009bf8:	e5900000 	ldr	r0, [r0]
40009bfc:	e3500000 	cmp	r0, #0
40009c00:	1a000002 	bne	40009c10 <_txe_byte_allocate+0x8c>
40009c04:	e59f0080 	ldr	r0, [pc, #128]	; 40009c8c <_txe_byte_allocate+0x108>
40009c08:	e1580000 	cmp	r8, r0
40009c0c:	1a000001 	bne	40009c18 <_txe_byte_allocate+0x94>
40009c10:	e3a00004 	mov	r0, #4
40009c14:	eaffffe6 	b	40009bb4 <_txe_byte_allocate+0x30>
40009c18:	e3580000 	cmp	r8, #0
40009c1c:	0a000008 	beq	40009c44 <_txe_byte_allocate+0xc0>
40009c20:	e59f0064 	ldr	r0, [pc, #100]	; 40009c8c <_txe_byte_allocate+0x108>
40009c24:	e1580000 	cmp	r8, r0
40009c28:	0a000003 	beq	40009c3c <_txe_byte_allocate+0xb8>
40009c2c:	e59f0054 	ldr	r0, [pc, #84]	; 40009c88 <_txe_byte_allocate+0x104>
40009c30:	e5900000 	ldr	r0, [r0]
40009c34:	e3500000 	cmp	r0, #0
40009c38:	0a000008 	beq	40009c60 <_txe_byte_allocate+0xdc>
40009c3c:	e3a00013 	mov	r0, #19
40009c40:	eaffffdb 	b	40009bb4 <_txe_byte_allocate+0x30>
40009c44:	e59f003c 	ldr	r0, [pc, #60]	; 40009c88 <_txe_byte_allocate+0x104>
40009c48:	e5900000 	ldr	r0, [r0]
40009c4c:	e59f103c 	ldr	r1, [pc, #60]	; 40009c90 <_txe_byte_allocate+0x10c>
40009c50:	e1500001 	cmp	r0, r1
40009c54:	2a000001 	bcs	40009c60 <_txe_byte_allocate+0xdc>
40009c58:	e3a00013 	mov	r0, #19
40009c5c:	eaffffd4 	b	40009bb4 <_txe_byte_allocate+0x30>
40009c60:	e1a03007 	mov	r3, r7
40009c64:	e1a02006 	mov	r2, r6
40009c68:	e1a01005 	mov	r1, r5
40009c6c:	e1a00004 	mov	r0, r4
40009c70:	eb0005bf 	bl	4000b374 <_tx_byte_allocate>
40009c74:	e1a09000 	mov	r9, r0
40009c78:	e1a00009 	mov	r0, r9
40009c7c:	eaffffcc 	b	40009bb4 <_txe_byte_allocate+0x30>
40009c80:	42595445 	.word	0x42595445
40009c84:	40030e54 	.word	0x40030e54
40009c88:	40030e4c 	.word	0x40030e4c
40009c8c:	40032994 	.word	0x40032994
40009c90:	f0f0f0f0 	.word	0xf0f0f0f0

40009c94 <_txe_byte_pool_create>:
40009c94:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009c98:	e1a04000 	mov	r4, r0
40009c9c:	e1a05001 	mov	r5, r1
40009ca0:	e1a06002 	mov	r6, r2
40009ca4:	e1a07003 	mov	r7, r3
40009ca8:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009cac:	e3540000 	cmp	r4, #0
40009cb0:	0a000001 	beq	40009cbc <_txe_byte_pool_create+0x28>
40009cb4:	e3580034 	cmp	r8, #52	; 0x34
40009cb8:	0a000001 	beq	40009cc4 <_txe_byte_pool_create+0x30>
40009cbc:	e3a00002 	mov	r0, #2
40009cc0:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009cc4:	e10f9000 	mrs	r9, CPSR
40009cc8:	e389a080 	orr	sl, r9, #128	; 0x80
40009ccc:	e121f00a 	msr	CPSR_c, sl
40009cd0:	e59f0130 	ldr	r0, [pc, #304]	; 40009e08 <_txe_byte_pool_create+0x174>
40009cd4:	e5900000 	ldr	r0, [r0]
40009cd8:	e2800001 	add	r0, r0, #1
40009cdc:	e59f1124 	ldr	r1, [pc, #292]	; 40009e08 <_txe_byte_pool_create+0x174>
40009ce0:	e5810000 	str	r0, [r1]
40009ce4:	e121f009 	msr	CPSR_c, r9
40009ce8:	e59f011c 	ldr	r0, [pc, #284]	; 40009e0c <_txe_byte_pool_create+0x178>
40009cec:	e5900000 	ldr	r0, [r0]
40009cf0:	e58d0004 	str	r0, [sp, #4]
40009cf4:	e3a0b000 	mov	fp, #0
40009cf8:	ea000007 	b	40009d1c <_txe_byte_pool_create+0x88>
40009cfc:	e59d0004 	ldr	r0, [sp, #4]
40009d00:	e1540000 	cmp	r4, r0
40009d04:	1a000000 	bne	40009d0c <_txe_byte_pool_create+0x78>
40009d08:	ea000007 	b	40009d2c <_txe_byte_pool_create+0x98>
40009d0c:	e59d0004 	ldr	r0, [sp, #4]
40009d10:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009d14:	e58d0004 	str	r0, [sp, #4]
40009d18:	e28bb001 	add	fp, fp, #1
40009d1c:	e59f00ec 	ldr	r0, [pc, #236]	; 40009e10 <_txe_byte_pool_create+0x17c>
40009d20:	e5900000 	ldr	r0, [r0]
40009d24:	e15b0000 	cmp	fp, r0
40009d28:	3afffff3 	bcc	40009cfc <_txe_byte_pool_create+0x68>
40009d2c:	e1a00000 	nop			; (mov r0, r0)
40009d30:	e10f9000 	mrs	r9, CPSR
40009d34:	e389a080 	orr	sl, r9, #128	; 0x80
40009d38:	e121f00a 	msr	CPSR_c, sl
40009d3c:	e59f00c4 	ldr	r0, [pc, #196]	; 40009e08 <_txe_byte_pool_create+0x174>
40009d40:	e5900000 	ldr	r0, [r0]
40009d44:	e2400001 	sub	r0, r0, #1
40009d48:	e59f10b8 	ldr	r1, [pc, #184]	; 40009e08 <_txe_byte_pool_create+0x174>
40009d4c:	e5810000 	str	r0, [r1]
40009d50:	e121f009 	msr	CPSR_c, r9
40009d54:	eb001609 	bl	4000f580 <_tx_thread_system_preempt_check>
40009d58:	e59d0004 	ldr	r0, [sp, #4]
40009d5c:	e1540000 	cmp	r4, r0
40009d60:	1a000001 	bne	40009d6c <_txe_byte_pool_create+0xd8>
40009d64:	e3a00002 	mov	r0, #2
40009d68:	eaffffd4 	b	40009cc0 <_txe_byte_pool_create+0x2c>
40009d6c:	e3560000 	cmp	r6, #0
40009d70:	1a000001 	bne	40009d7c <_txe_byte_pool_create+0xe8>
40009d74:	e3a00003 	mov	r0, #3
40009d78:	eaffffd0 	b	40009cc0 <_txe_byte_pool_create+0x2c>
40009d7c:	e3570064 	cmp	r7, #100	; 0x64
40009d80:	2a000001 	bcs	40009d8c <_txe_byte_pool_create+0xf8>
40009d84:	e3a00005 	mov	r0, #5
40009d88:	eaffffcc 	b	40009cc0 <_txe_byte_pool_create+0x2c>
40009d8c:	e59f0080 	ldr	r0, [pc, #128]	; 40009e14 <_txe_byte_pool_create+0x180>
40009d90:	e5900000 	ldr	r0, [r0]
40009d94:	e58d0000 	str	r0, [sp]
40009d98:	e59d0000 	ldr	r0, [sp]
40009d9c:	e3500000 	cmp	r0, #0
40009da0:	0a000009 	beq	40009dcc <_txe_byte_pool_create+0x138>
40009da4:	e59f106c 	ldr	r1, [pc, #108]	; 40009e18 <_txe_byte_pool_create+0x184>
40009da8:	e59d0000 	ldr	r0, [sp]
40009dac:	e1500001 	cmp	r0, r1
40009db0:	0a000003 	beq	40009dc4 <_txe_byte_pool_create+0x130>
40009db4:	e59f0060 	ldr	r0, [pc, #96]	; 40009e1c <_txe_byte_pool_create+0x188>
40009db8:	e5900000 	ldr	r0, [r0]
40009dbc:	e3500000 	cmp	r0, #0
40009dc0:	0a000008 	beq	40009de8 <_txe_byte_pool_create+0x154>
40009dc4:	e3a00013 	mov	r0, #19
40009dc8:	eaffffbc 	b	40009cc0 <_txe_byte_pool_create+0x2c>
40009dcc:	e59f0048 	ldr	r0, [pc, #72]	; 40009e1c <_txe_byte_pool_create+0x188>
40009dd0:	e5900000 	ldr	r0, [r0]
40009dd4:	e59f1044 	ldr	r1, [pc, #68]	; 40009e20 <_txe_byte_pool_create+0x18c>
40009dd8:	e1500001 	cmp	r0, r1
40009ddc:	2a000001 	bcs	40009de8 <_txe_byte_pool_create+0x154>
40009de0:	e3a00013 	mov	r0, #19
40009de4:	eaffffb5 	b	40009cc0 <_txe_byte_pool_create+0x2c>
40009de8:	e1a03007 	mov	r3, r7
40009dec:	e1a02006 	mov	r2, r6
40009df0:	e1a01005 	mov	r1, r5
40009df4:	e1a00004 	mov	r0, r4
40009df8:	eb000643 	bl	4000b70c <_tx_byte_pool_create>
40009dfc:	e58d0008 	str	r0, [sp, #8]
40009e00:	e59d0008 	ldr	r0, [sp, #8]
40009e04:	eaffffad 	b	40009cc0 <_txe_byte_pool_create+0x2c>
40009e08:	40030e70 	.word	0x40030e70
40009e0c:	40030ef0 	.word	0x40030ef0
40009e10:	40030ef4 	.word	0x40030ef4
40009e14:	40030e54 	.word	0x40030e54
40009e18:	40032994 	.word	0x40032994
40009e1c:	40030e4c 	.word	0x40030e4c
40009e20:	f0f0f0f0 	.word	0xf0f0f0f0

40009e24 <_txe_byte_pool_delete>:
40009e24:	e92d4070 	push	{r4, r5, r6, lr}
40009e28:	e1a04000 	mov	r4, r0
40009e2c:	e3540000 	cmp	r4, #0
40009e30:	0a000003 	beq	40009e44 <_txe_byte_pool_delete+0x20>
40009e34:	e5940000 	ldr	r0, [r4]
40009e38:	e59f1054 	ldr	r1, [pc, #84]	; 40009e94 <_txe_byte_pool_delete+0x70>
40009e3c:	e1500001 	cmp	r0, r1
40009e40:	0a000001 	beq	40009e4c <_txe_byte_pool_delete+0x28>
40009e44:	e3a00002 	mov	r0, #2
40009e48:	e8bd8070 	pop	{r4, r5, r6, pc}
40009e4c:	e59f0044 	ldr	r0, [pc, #68]	; 40009e98 <_txe_byte_pool_delete+0x74>
40009e50:	e5905000 	ldr	r5, [r0]
40009e54:	e3550000 	cmp	r5, #0
40009e58:	0a000006 	beq	40009e78 <_txe_byte_pool_delete+0x54>
40009e5c:	e59f0038 	ldr	r0, [pc, #56]	; 40009e9c <_txe_byte_pool_delete+0x78>
40009e60:	e5900000 	ldr	r0, [r0]
40009e64:	e3500000 	cmp	r0, #0
40009e68:	1a000002 	bne	40009e78 <_txe_byte_pool_delete+0x54>
40009e6c:	e59f002c 	ldr	r0, [pc, #44]	; 40009ea0 <_txe_byte_pool_delete+0x7c>
40009e70:	e1550000 	cmp	r5, r0
40009e74:	1a000001 	bne	40009e80 <_txe_byte_pool_delete+0x5c>
40009e78:	e3a00013 	mov	r0, #19
40009e7c:	eafffff1 	b	40009e48 <_txe_byte_pool_delete+0x24>
40009e80:	e1a00004 	mov	r0, r4
40009e84:	eb0006b6 	bl	4000b964 <_tx_byte_pool_delete>
40009e88:	e1a06000 	mov	r6, r0
40009e8c:	e1a00006 	mov	r0, r6
40009e90:	eaffffec 	b	40009e48 <_txe_byte_pool_delete+0x24>
40009e94:	42595445 	.word	0x42595445
40009e98:	40030e54 	.word	0x40030e54
40009e9c:	40030e4c 	.word	0x40030e4c
40009ea0:	40032994 	.word	0x40032994

40009ea4 <_txe_byte_release>:
40009ea4:	e92d4070 	push	{r4, r5, r6, lr}
40009ea8:	e1a04000 	mov	r4, r0
40009eac:	e3540000 	cmp	r4, #0
40009eb0:	1a000001 	bne	40009ebc <_txe_byte_release+0x18>
40009eb4:	e3a00003 	mov	r0, #3
40009eb8:	e8bd8070 	pop	{r4, r5, r6, pc}
40009ebc:	e59f005c 	ldr	r0, [pc, #92]	; 40009f20 <_txe_byte_release+0x7c>
40009ec0:	e5905000 	ldr	r5, [r0]
40009ec4:	e3550000 	cmp	r5, #0
40009ec8:	0a000008 	beq	40009ef0 <_txe_byte_release+0x4c>
40009ecc:	e59f0050 	ldr	r0, [pc, #80]	; 40009f24 <_txe_byte_release+0x80>
40009ed0:	e1550000 	cmp	r5, r0
40009ed4:	0a000003 	beq	40009ee8 <_txe_byte_release+0x44>
40009ed8:	e59f0048 	ldr	r0, [pc, #72]	; 40009f28 <_txe_byte_release+0x84>
40009edc:	e5900000 	ldr	r0, [r0]
40009ee0:	e3500000 	cmp	r0, #0
40009ee4:	0a000008 	beq	40009f0c <_txe_byte_release+0x68>
40009ee8:	e3a00013 	mov	r0, #19
40009eec:	eafffff1 	b	40009eb8 <_txe_byte_release+0x14>
40009ef0:	e59f0030 	ldr	r0, [pc, #48]	; 40009f28 <_txe_byte_release+0x84>
40009ef4:	e5900000 	ldr	r0, [r0]
40009ef8:	e59f102c 	ldr	r1, [pc, #44]	; 40009f2c <_txe_byte_release+0x88>
40009efc:	e1500001 	cmp	r0, r1
40009f00:	2a000001 	bcs	40009f0c <_txe_byte_release+0x68>
40009f04:	e3a00013 	mov	r0, #19
40009f08:	eaffffea 	b	40009eb8 <_txe_byte_release+0x14>
40009f0c:	e1a00004 	mov	r0, r4
40009f10:	eb000794 	bl	4000bd68 <_tx_byte_release>
40009f14:	e1a06000 	mov	r6, r0
40009f18:	e1a00006 	mov	r0, r6
40009f1c:	eaffffe5 	b	40009eb8 <_txe_byte_release+0x14>
40009f20:	40030e54 	.word	0x40030e54
40009f24:	40032994 	.word	0x40032994
40009f28:	40030e4c 	.word	0x40030e4c
40009f2c:	f0f0f0f0 	.word	0xf0f0f0f0

40009f30 <_txe_event_flags_create>:
40009f30:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009f34:	e1a04000 	mov	r4, r0
40009f38:	e1a05001 	mov	r5, r1
40009f3c:	e1a06002 	mov	r6, r2
40009f40:	e3540000 	cmp	r4, #0
40009f44:	0a000001 	beq	40009f50 <_txe_event_flags_create+0x20>
40009f48:	e3560028 	cmp	r6, #40	; 0x28
40009f4c:	0a000001 	beq	40009f58 <_txe_event_flags_create+0x28>
40009f50:	e3a00006 	mov	r0, #6
40009f54:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009f58:	e10f7000 	mrs	r7, CPSR
40009f5c:	e3878080 	orr	r8, r7, #128	; 0x80
40009f60:	e121f008 	msr	CPSR_c, r8
40009f64:	e59f00e8 	ldr	r0, [pc, #232]	; 4000a054 <_txe_event_flags_create+0x124>
40009f68:	e5900000 	ldr	r0, [r0]
40009f6c:	e2800001 	add	r0, r0, #1
40009f70:	e59f10dc 	ldr	r1, [pc, #220]	; 4000a054 <_txe_event_flags_create+0x124>
40009f74:	e5810000 	str	r0, [r1]
40009f78:	e121f007 	msr	CPSR_c, r7
40009f7c:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a058 <_txe_event_flags_create+0x128>
40009f80:	e590a000 	ldr	sl, [r0]
40009f84:	e3a09000 	mov	r9, #0
40009f88:	ea000004 	b	40009fa0 <_txe_event_flags_create+0x70>
40009f8c:	e154000a 	cmp	r4, sl
40009f90:	1a000000 	bne	40009f98 <_txe_event_flags_create+0x68>
40009f94:	ea000005 	b	40009fb0 <_txe_event_flags_create+0x80>
40009f98:	e59aa018 	ldr	sl, [sl, #24]
40009f9c:	e2899001 	add	r9, r9, #1
40009fa0:	e59f00b4 	ldr	r0, [pc, #180]	; 4000a05c <_txe_event_flags_create+0x12c>
40009fa4:	e5900000 	ldr	r0, [r0]
40009fa8:	e1590000 	cmp	r9, r0
40009fac:	3afffff6 	bcc	40009f8c <_txe_event_flags_create+0x5c>
40009fb0:	e1a00000 	nop			; (mov r0, r0)
40009fb4:	e10f7000 	mrs	r7, CPSR
40009fb8:	e3878080 	orr	r8, r7, #128	; 0x80
40009fbc:	e121f008 	msr	CPSR_c, r8
40009fc0:	e59f008c 	ldr	r0, [pc, #140]	; 4000a054 <_txe_event_flags_create+0x124>
40009fc4:	e5900000 	ldr	r0, [r0]
40009fc8:	e2400001 	sub	r0, r0, #1
40009fcc:	e59f1080 	ldr	r1, [pc, #128]	; 4000a054 <_txe_event_flags_create+0x124>
40009fd0:	e5810000 	str	r0, [r1]
40009fd4:	e121f007 	msr	CPSR_c, r7
40009fd8:	eb001568 	bl	4000f580 <_tx_thread_system_preempt_check>
40009fdc:	e154000a 	cmp	r4, sl
40009fe0:	1a000001 	bne	40009fec <_txe_event_flags_create+0xbc>
40009fe4:	e3a00006 	mov	r0, #6
40009fe8:	eaffffd9 	b	40009f54 <_txe_event_flags_create+0x24>
40009fec:	e59f006c 	ldr	r0, [pc, #108]	; 4000a060 <_txe_event_flags_create+0x130>
40009ff0:	e590b000 	ldr	fp, [r0]
40009ff4:	e35b0000 	cmp	fp, #0
40009ff8:	0a000008 	beq	4000a020 <_txe_event_flags_create+0xf0>
40009ffc:	e59f0060 	ldr	r0, [pc, #96]	; 4000a064 <_txe_event_flags_create+0x134>
4000a000:	e15b0000 	cmp	fp, r0
4000a004:	0a000003 	beq	4000a018 <_txe_event_flags_create+0xe8>
4000a008:	e59f0058 	ldr	r0, [pc, #88]	; 4000a068 <_txe_event_flags_create+0x138>
4000a00c:	e5900000 	ldr	r0, [r0]
4000a010:	e3500000 	cmp	r0, #0
4000a014:	0a000008 	beq	4000a03c <_txe_event_flags_create+0x10c>
4000a018:	e3a00013 	mov	r0, #19
4000a01c:	eaffffcc 	b	40009f54 <_txe_event_flags_create+0x24>
4000a020:	e59f0040 	ldr	r0, [pc, #64]	; 4000a068 <_txe_event_flags_create+0x138>
4000a024:	e5900000 	ldr	r0, [r0]
4000a028:	e59f103c 	ldr	r1, [pc, #60]	; 4000a06c <_txe_event_flags_create+0x13c>
4000a02c:	e1500001 	cmp	r0, r1
4000a030:	2a000001 	bcs	4000a03c <_txe_event_flags_create+0x10c>
4000a034:	e3a00013 	mov	r0, #19
4000a038:	eaffffc5 	b	40009f54 <_txe_event_flags_create+0x24>
4000a03c:	e1a01005 	mov	r1, r5
4000a040:	e1a00004 	mov	r0, r4
4000a044:	eb0007f9 	bl	4000c030 <_tx_event_flags_create>
4000a048:	e58d0000 	str	r0, [sp]
4000a04c:	e59d0000 	ldr	r0, [sp]
4000a050:	eaffffbf 	b	40009f54 <_txe_event_flags_create+0x24>
4000a054:	40030e70 	.word	0x40030e70
4000a058:	40030ed8 	.word	0x40030ed8
4000a05c:	40030edc 	.word	0x40030edc
4000a060:	40030e54 	.word	0x40030e54
4000a064:	40032994 	.word	0x40032994
4000a068:	40030e4c 	.word	0x40030e4c
4000a06c:	f0f0f0f0 	.word	0xf0f0f0f0

4000a070 <_txe_event_flags_delete>:
4000a070:	e92d4070 	push	{r4, r5, r6, lr}
4000a074:	e1a04000 	mov	r4, r0
4000a078:	e3540000 	cmp	r4, #0
4000a07c:	0a000003 	beq	4000a090 <_txe_event_flags_delete+0x20>
4000a080:	e5940000 	ldr	r0, [r4]
4000a084:	e59f1054 	ldr	r1, [pc, #84]	; 4000a0e0 <_txe_event_flags_delete+0x70>
4000a088:	e1500001 	cmp	r0, r1
4000a08c:	0a000001 	beq	4000a098 <_txe_event_flags_delete+0x28>
4000a090:	e3a00006 	mov	r0, #6
4000a094:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a098:	e59f0044 	ldr	r0, [pc, #68]	; 4000a0e4 <_txe_event_flags_delete+0x74>
4000a09c:	e5905000 	ldr	r5, [r0]
4000a0a0:	e3550000 	cmp	r5, #0
4000a0a4:	0a000006 	beq	4000a0c4 <_txe_event_flags_delete+0x54>
4000a0a8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a0e8 <_txe_event_flags_delete+0x78>
4000a0ac:	e5900000 	ldr	r0, [r0]
4000a0b0:	e3500000 	cmp	r0, #0
4000a0b4:	1a000002 	bne	4000a0c4 <_txe_event_flags_delete+0x54>
4000a0b8:	e59f002c 	ldr	r0, [pc, #44]	; 4000a0ec <_txe_event_flags_delete+0x7c>
4000a0bc:	e1550000 	cmp	r5, r0
4000a0c0:	1a000001 	bne	4000a0cc <_txe_event_flags_delete+0x5c>
4000a0c4:	e3a00013 	mov	r0, #19
4000a0c8:	eafffff1 	b	4000a094 <_txe_event_flags_delete+0x24>
4000a0cc:	e1a00004 	mov	r0, r4
4000a0d0:	eb000849 	bl	4000c1fc <_tx_event_flags_delete>
4000a0d4:	e1a06000 	mov	r6, r0
4000a0d8:	e1a00006 	mov	r0, r6
4000a0dc:	eaffffec 	b	4000a094 <_txe_event_flags_delete+0x24>
4000a0e0:	4456444e 	.word	0x4456444e
4000a0e4:	40030e54 	.word	0x40030e54
4000a0e8:	40030e4c 	.word	0x40030e4c
4000a0ec:	40032994 	.word	0x40032994

4000a0f0 <_txe_event_flags_get>:
4000a0f0:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000a0f4:	e1a04000 	mov	r4, r0
4000a0f8:	e1a05001 	mov	r5, r1
4000a0fc:	e1a06002 	mov	r6, r2
4000a100:	e1a08003 	mov	r8, r3
4000a104:	e59d9020 	ldr	r9, [sp, #32]
4000a108:	e3540000 	cmp	r4, #0
4000a10c:	0a000003 	beq	4000a120 <_txe_event_flags_get+0x30>
4000a110:	e5940000 	ldr	r0, [r4]
4000a114:	e59f1084 	ldr	r1, [pc, #132]	; 4000a1a0 <_txe_event_flags_get+0xb0>
4000a118:	e1500001 	cmp	r0, r1
4000a11c:	0a000001 	beq	4000a128 <_txe_event_flags_get+0x38>
4000a120:	e3a00006 	mov	r0, #6
4000a124:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000a128:	e3580000 	cmp	r8, #0
4000a12c:	1a000001 	bne	4000a138 <_txe_event_flags_get+0x48>
4000a130:	e3a00003 	mov	r0, #3
4000a134:	eafffffa 	b	4000a124 <_txe_event_flags_get+0x34>
4000a138:	e3590000 	cmp	r9, #0
4000a13c:	0a00000a 	beq	4000a16c <_txe_event_flags_get+0x7c>
4000a140:	e59f005c 	ldr	r0, [pc, #92]	; 4000a1a4 <_txe_event_flags_get+0xb4>
4000a144:	e5900000 	ldr	r0, [r0]
4000a148:	e3500000 	cmp	r0, #0
4000a14c:	1a000004 	bne	4000a164 <_txe_event_flags_get+0x74>
4000a150:	e59f0050 	ldr	r0, [pc, #80]	; 4000a1a8 <_txe_event_flags_get+0xb8>
4000a154:	e5900000 	ldr	r0, [r0]
4000a158:	e59f104c 	ldr	r1, [pc, #76]	; 4000a1ac <_txe_event_flags_get+0xbc>
4000a15c:	e1500001 	cmp	r0, r1
4000a160:	1a000001 	bne	4000a16c <_txe_event_flags_get+0x7c>
4000a164:	e3a00004 	mov	r0, #4
4000a168:	eaffffed 	b	4000a124 <_txe_event_flags_get+0x34>
4000a16c:	e3560003 	cmp	r6, #3
4000a170:	9a000001 	bls	4000a17c <_txe_event_flags_get+0x8c>
4000a174:	e3a00008 	mov	r0, #8
4000a178:	eaffffe9 	b	4000a124 <_txe_event_flags_get+0x34>
4000a17c:	e1a03008 	mov	r3, r8
4000a180:	e1a02006 	mov	r2, r6
4000a184:	e1a01005 	mov	r1, r5
4000a188:	e1a00004 	mov	r0, r4
4000a18c:	e58d9000 	str	r9, [sp]
4000a190:	eb0008ac 	bl	4000c448 <_tx_event_flags_get>
4000a194:	e1a07000 	mov	r7, r0
4000a198:	e1a00007 	mov	r0, r7
4000a19c:	eaffffe0 	b	4000a124 <_txe_event_flags_get+0x34>
4000a1a0:	4456444e 	.word	0x4456444e
4000a1a4:	40030e4c 	.word	0x40030e4c
4000a1a8:	40030e54 	.word	0x40030e54
4000a1ac:	40032994 	.word	0x40032994

4000a1b0 <_txe_event_flags_set>:
4000a1b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a1b4:	e1a04000 	mov	r4, r0
4000a1b8:	e1a05001 	mov	r5, r1
4000a1bc:	e1a06002 	mov	r6, r2
4000a1c0:	e3540000 	cmp	r4, #0
4000a1c4:	0a000003 	beq	4000a1d8 <_txe_event_flags_set+0x28>
4000a1c8:	e5940000 	ldr	r0, [r4]
4000a1cc:	e59f1040 	ldr	r1, [pc, #64]	; 4000a214 <_txe_event_flags_set+0x64>
4000a1d0:	e1500001 	cmp	r0, r1
4000a1d4:	0a000001 	beq	4000a1e0 <_txe_event_flags_set+0x30>
4000a1d8:	e3a00006 	mov	r0, #6
4000a1dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a1e0:	e3560002 	cmp	r6, #2
4000a1e4:	0a000003 	beq	4000a1f8 <_txe_event_flags_set+0x48>
4000a1e8:	e3560000 	cmp	r6, #0
4000a1ec:	0a000001 	beq	4000a1f8 <_txe_event_flags_set+0x48>
4000a1f0:	e3a00008 	mov	r0, #8
4000a1f4:	eafffff8 	b	4000a1dc <_txe_event_flags_set+0x2c>
4000a1f8:	e1a02006 	mov	r2, r6
4000a1fc:	e1a01005 	mov	r1, r5
4000a200:	e1a00004 	mov	r0, r4
4000a204:	eb000943 	bl	4000c718 <_tx_event_flags_set>
4000a208:	e1a07000 	mov	r7, r0
4000a20c:	e1a00007 	mov	r0, r7
4000a210:	eafffff1 	b	4000a1dc <_txe_event_flags_set+0x2c>
4000a214:	4456444e 	.word	0x4456444e

4000a218 <_txe_mutex_create>:
4000a218:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000a21c:	e1a04000 	mov	r4, r0
4000a220:	e1a05001 	mov	r5, r1
4000a224:	e1a06002 	mov	r6, r2
4000a228:	e1a07003 	mov	r7, r3
4000a22c:	e3540000 	cmp	r4, #0
4000a230:	0a000001 	beq	4000a23c <_txe_mutex_create+0x24>
4000a234:	e3570038 	cmp	r7, #56	; 0x38
4000a238:	0a000001 	beq	4000a244 <_txe_mutex_create+0x2c>
4000a23c:	e3a0001c 	mov	r0, #28
4000a240:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000a244:	e10f0000 	mrs	r0, CPSR
4000a248:	e58d0004 	str	r0, [sp, #4]
4000a24c:	e59d0004 	ldr	r0, [sp, #4]
4000a250:	e3808080 	orr	r8, r0, #128	; 0x80
4000a254:	e121f008 	msr	CPSR_c, r8
4000a258:	e59f0114 	ldr	r0, [pc, #276]	; 4000a374 <_txe_mutex_create+0x15c>
4000a25c:	e5900000 	ldr	r0, [r0]
4000a260:	e2800001 	add	r0, r0, #1
4000a264:	e59f1108 	ldr	r1, [pc, #264]	; 4000a374 <_txe_mutex_create+0x15c>
4000a268:	e5810000 	str	r0, [r1]
4000a26c:	e59d0004 	ldr	r0, [sp, #4]
4000a270:	e121f000 	msr	CPSR_c, r0
4000a274:	e59f00fc 	ldr	r0, [pc, #252]	; 4000a378 <_txe_mutex_create+0x160>
4000a278:	e590a000 	ldr	sl, [r0]
4000a27c:	e3a09000 	mov	r9, #0
4000a280:	ea000004 	b	4000a298 <_txe_mutex_create+0x80>
4000a284:	e154000a 	cmp	r4, sl
4000a288:	1a000000 	bne	4000a290 <_txe_mutex_create+0x78>
4000a28c:	ea000005 	b	4000a2a8 <_txe_mutex_create+0x90>
4000a290:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
4000a294:	e2899001 	add	r9, r9, #1
4000a298:	e59f00dc 	ldr	r0, [pc, #220]	; 4000a37c <_txe_mutex_create+0x164>
4000a29c:	e5900000 	ldr	r0, [r0]
4000a2a0:	e1590000 	cmp	r9, r0
4000a2a4:	3afffff6 	bcc	4000a284 <_txe_mutex_create+0x6c>
4000a2a8:	e1a00000 	nop			; (mov r0, r0)
4000a2ac:	e10f0000 	mrs	r0, CPSR
4000a2b0:	e58d0004 	str	r0, [sp, #4]
4000a2b4:	e59d0004 	ldr	r0, [sp, #4]
4000a2b8:	e3808080 	orr	r8, r0, #128	; 0x80
4000a2bc:	e121f008 	msr	CPSR_c, r8
4000a2c0:	e59f00ac 	ldr	r0, [pc, #172]	; 4000a374 <_txe_mutex_create+0x15c>
4000a2c4:	e5900000 	ldr	r0, [r0]
4000a2c8:	e2400001 	sub	r0, r0, #1
4000a2cc:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a374 <_txe_mutex_create+0x15c>
4000a2d0:	e5810000 	str	r0, [r1]
4000a2d4:	e59d0004 	ldr	r0, [sp, #4]
4000a2d8:	e121f000 	msr	CPSR_c, r0
4000a2dc:	eb0014a7 	bl	4000f580 <_tx_thread_system_preempt_check>
4000a2e0:	e154000a 	cmp	r4, sl
4000a2e4:	1a000001 	bne	4000a2f0 <_txe_mutex_create+0xd8>
4000a2e8:	e3a0001c 	mov	r0, #28
4000a2ec:	eaffffd3 	b	4000a240 <_txe_mutex_create+0x28>
4000a2f0:	e3560001 	cmp	r6, #1
4000a2f4:	0a000003 	beq	4000a308 <_txe_mutex_create+0xf0>
4000a2f8:	e3560000 	cmp	r6, #0
4000a2fc:	0a000001 	beq	4000a308 <_txe_mutex_create+0xf0>
4000a300:	e3a0001f 	mov	r0, #31
4000a304:	eaffffcd 	b	4000a240 <_txe_mutex_create+0x28>
4000a308:	e59f0070 	ldr	r0, [pc, #112]	; 4000a380 <_txe_mutex_create+0x168>
4000a30c:	e590b000 	ldr	fp, [r0]
4000a310:	e35b0000 	cmp	fp, #0
4000a314:	0a000008 	beq	4000a33c <_txe_mutex_create+0x124>
4000a318:	e59f0064 	ldr	r0, [pc, #100]	; 4000a384 <_txe_mutex_create+0x16c>
4000a31c:	e15b0000 	cmp	fp, r0
4000a320:	0a000003 	beq	4000a334 <_txe_mutex_create+0x11c>
4000a324:	e59f005c 	ldr	r0, [pc, #92]	; 4000a388 <_txe_mutex_create+0x170>
4000a328:	e5900000 	ldr	r0, [r0]
4000a32c:	e3500000 	cmp	r0, #0
4000a330:	0a000008 	beq	4000a358 <_txe_mutex_create+0x140>
4000a334:	e3a00013 	mov	r0, #19
4000a338:	eaffffc0 	b	4000a240 <_txe_mutex_create+0x28>
4000a33c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a388 <_txe_mutex_create+0x170>
4000a340:	e5900000 	ldr	r0, [r0]
4000a344:	e59f1040 	ldr	r1, [pc, #64]	; 4000a38c <_txe_mutex_create+0x174>
4000a348:	e1500001 	cmp	r0, r1
4000a34c:	2a000001 	bcs	4000a358 <_txe_mutex_create+0x140>
4000a350:	e3a00013 	mov	r0, #19
4000a354:	eaffffb9 	b	4000a240 <_txe_mutex_create+0x28>
4000a358:	e1a02006 	mov	r2, r6
4000a35c:	e1a01005 	mov	r1, r5
4000a360:	e1a00004 	mov	r0, r4
4000a364:	eb000a8f 	bl	4000cda8 <_tx_mutex_create>
4000a368:	e58d0000 	str	r0, [sp]
4000a36c:	e59d0000 	ldr	r0, [sp]
4000a370:	eaffffb2 	b	4000a240 <_txe_mutex_create+0x28>
4000a374:	40030e70 	.word	0x40030e70
4000a378:	40030ee0 	.word	0x40030ee0
4000a37c:	40030ee4 	.word	0x40030ee4
4000a380:	40030e54 	.word	0x40030e54
4000a384:	40032994 	.word	0x40032994
4000a388:	40030e4c 	.word	0x40030e4c
4000a38c:	f0f0f0f0 	.word	0xf0f0f0f0

4000a390 <_txe_mutex_delete>:
4000a390:	e92d4070 	push	{r4, r5, r6, lr}
4000a394:	e1a04000 	mov	r4, r0
4000a398:	e3540000 	cmp	r4, #0
4000a39c:	0a000003 	beq	4000a3b0 <_txe_mutex_delete+0x20>
4000a3a0:	e5940000 	ldr	r0, [r4]
4000a3a4:	e59f1054 	ldr	r1, [pc, #84]	; 4000a400 <_txe_mutex_delete+0x70>
4000a3a8:	e1500001 	cmp	r0, r1
4000a3ac:	0a000001 	beq	4000a3b8 <_txe_mutex_delete+0x28>
4000a3b0:	e3a0001c 	mov	r0, #28
4000a3b4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a3b8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a404 <_txe_mutex_delete+0x74>
4000a3bc:	e5905000 	ldr	r5, [r0]
4000a3c0:	e3550000 	cmp	r5, #0
4000a3c4:	0a000006 	beq	4000a3e4 <_txe_mutex_delete+0x54>
4000a3c8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a408 <_txe_mutex_delete+0x78>
4000a3cc:	e5900000 	ldr	r0, [r0]
4000a3d0:	e3500000 	cmp	r0, #0
4000a3d4:	1a000002 	bne	4000a3e4 <_txe_mutex_delete+0x54>
4000a3d8:	e59f002c 	ldr	r0, [pc, #44]	; 4000a40c <_txe_mutex_delete+0x7c>
4000a3dc:	e1550000 	cmp	r5, r0
4000a3e0:	1a000001 	bne	4000a3ec <_txe_mutex_delete+0x5c>
4000a3e4:	e3a00013 	mov	r0, #19
4000a3e8:	eafffff1 	b	4000a3b4 <_txe_mutex_delete+0x24>
4000a3ec:	e1a00004 	mov	r0, r4
4000a3f0:	eb000ae2 	bl	4000cf80 <_tx_mutex_delete>
4000a3f4:	e1a06000 	mov	r6, r0
4000a3f8:	e1a00006 	mov	r0, r6
4000a3fc:	eaffffec 	b	4000a3b4 <_txe_mutex_delete+0x24>
4000a400:	4d555445 	.word	0x4d555445
4000a404:	40030e54 	.word	0x40030e54
4000a408:	40030e4c 	.word	0x40030e4c
4000a40c:	40032994 	.word	0x40032994

4000a410 <_txe_mutex_get>:
4000a410:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a414:	e1a04000 	mov	r4, r0
4000a418:	e1a05001 	mov	r5, r1
4000a41c:	e3540000 	cmp	r4, #0
4000a420:	0a000003 	beq	4000a434 <_txe_mutex_get+0x24>
4000a424:	e5940000 	ldr	r0, [r4]
4000a428:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a4d0 <_txe_mutex_get+0xc0>
4000a42c:	e1500001 	cmp	r0, r1
4000a430:	0a000001 	beq	4000a43c <_txe_mutex_get+0x2c>
4000a434:	e3a0001c 	mov	r0, #28
4000a438:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a43c:	e59f0090 	ldr	r0, [pc, #144]	; 4000a4d4 <_txe_mutex_get+0xc4>
4000a440:	e5906000 	ldr	r6, [r0]
4000a444:	e3550000 	cmp	r5, #0
4000a448:	0a000008 	beq	4000a470 <_txe_mutex_get+0x60>
4000a44c:	e59f0084 	ldr	r0, [pc, #132]	; 4000a4d8 <_txe_mutex_get+0xc8>
4000a450:	e5900000 	ldr	r0, [r0]
4000a454:	e3500000 	cmp	r0, #0
4000a458:	1a000002 	bne	4000a468 <_txe_mutex_get+0x58>
4000a45c:	e59f0078 	ldr	r0, [pc, #120]	; 4000a4dc <_txe_mutex_get+0xcc>
4000a460:	e1560000 	cmp	r6, r0
4000a464:	1a000001 	bne	4000a470 <_txe_mutex_get+0x60>
4000a468:	e3a00004 	mov	r0, #4
4000a46c:	eafffff1 	b	4000a438 <_txe_mutex_get+0x28>
4000a470:	e3560000 	cmp	r6, #0
4000a474:	0a000008 	beq	4000a49c <_txe_mutex_get+0x8c>
4000a478:	e59f005c 	ldr	r0, [pc, #92]	; 4000a4dc <_txe_mutex_get+0xcc>
4000a47c:	e1560000 	cmp	r6, r0
4000a480:	0a000003 	beq	4000a494 <_txe_mutex_get+0x84>
4000a484:	e59f004c 	ldr	r0, [pc, #76]	; 4000a4d8 <_txe_mutex_get+0xc8>
4000a488:	e5900000 	ldr	r0, [r0]
4000a48c:	e3500000 	cmp	r0, #0
4000a490:	0a000008 	beq	4000a4b8 <_txe_mutex_get+0xa8>
4000a494:	e3a00013 	mov	r0, #19
4000a498:	eaffffe6 	b	4000a438 <_txe_mutex_get+0x28>
4000a49c:	e59f0034 	ldr	r0, [pc, #52]	; 4000a4d8 <_txe_mutex_get+0xc8>
4000a4a0:	e5900000 	ldr	r0, [r0]
4000a4a4:	e59f1034 	ldr	r1, [pc, #52]	; 4000a4e0 <_txe_mutex_get+0xd0>
4000a4a8:	e1500001 	cmp	r0, r1
4000a4ac:	2a000001 	bcs	4000a4b8 <_txe_mutex_get+0xa8>
4000a4b0:	e3a00013 	mov	r0, #19
4000a4b4:	eaffffdf 	b	4000a438 <_txe_mutex_get+0x28>
4000a4b8:	e1a01005 	mov	r1, r5
4000a4bc:	e1a00004 	mov	r0, r4
4000a4c0:	eb000b65 	bl	4000d25c <_tx_mutex_get>
4000a4c4:	e1a07000 	mov	r7, r0
4000a4c8:	e1a00007 	mov	r0, r7
4000a4cc:	eaffffd9 	b	4000a438 <_txe_mutex_get+0x28>
4000a4d0:	4d555445 	.word	0x4d555445
4000a4d4:	40030e54 	.word	0x40030e54
4000a4d8:	40030e4c 	.word	0x40030e4c
4000a4dc:	40032994 	.word	0x40032994
4000a4e0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a4e4 <_txe_mutex_put>:
4000a4e4:	e92d4070 	push	{r4, r5, r6, lr}
4000a4e8:	e1a04000 	mov	r4, r0
4000a4ec:	e3540000 	cmp	r4, #0
4000a4f0:	0a000003 	beq	4000a504 <_txe_mutex_put+0x20>
4000a4f4:	e5940000 	ldr	r0, [r4]
4000a4f8:	e59f1070 	ldr	r1, [pc, #112]	; 4000a570 <_txe_mutex_put+0x8c>
4000a4fc:	e1500001 	cmp	r0, r1
4000a500:	0a000001 	beq	4000a50c <_txe_mutex_put+0x28>
4000a504:	e3a0001c 	mov	r0, #28
4000a508:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a50c:	e59f0060 	ldr	r0, [pc, #96]	; 4000a574 <_txe_mutex_put+0x90>
4000a510:	e5905000 	ldr	r5, [r0]
4000a514:	e3550000 	cmp	r5, #0
4000a518:	0a000008 	beq	4000a540 <_txe_mutex_put+0x5c>
4000a51c:	e59f0054 	ldr	r0, [pc, #84]	; 4000a578 <_txe_mutex_put+0x94>
4000a520:	e1550000 	cmp	r5, r0
4000a524:	0a000003 	beq	4000a538 <_txe_mutex_put+0x54>
4000a528:	e59f004c 	ldr	r0, [pc, #76]	; 4000a57c <_txe_mutex_put+0x98>
4000a52c:	e5900000 	ldr	r0, [r0]
4000a530:	e3500000 	cmp	r0, #0
4000a534:	0a000008 	beq	4000a55c <_txe_mutex_put+0x78>
4000a538:	e3a00013 	mov	r0, #19
4000a53c:	eafffff1 	b	4000a508 <_txe_mutex_put+0x24>
4000a540:	e59f0034 	ldr	r0, [pc, #52]	; 4000a57c <_txe_mutex_put+0x98>
4000a544:	e5900000 	ldr	r0, [r0]
4000a548:	e59f1030 	ldr	r1, [pc, #48]	; 4000a580 <_txe_mutex_put+0x9c>
4000a54c:	e1500001 	cmp	r0, r1
4000a550:	2a000001 	bcs	4000a55c <_txe_mutex_put+0x78>
4000a554:	e3a00013 	mov	r0, #19
4000a558:	eaffffea 	b	4000a508 <_txe_mutex_put+0x24>
4000a55c:	e1a00004 	mov	r0, r4
4000a560:	eb000c1c 	bl	4000d5d8 <_tx_mutex_put>
4000a564:	e1a06000 	mov	r6, r0
4000a568:	e1a00006 	mov	r0, r6
4000a56c:	eaffffe5 	b	4000a508 <_txe_mutex_put+0x24>
4000a570:	4d555445 	.word	0x4d555445
4000a574:	40030e54 	.word	0x40030e54
4000a578:	40032994 	.word	0x40032994
4000a57c:	40030e4c 	.word	0x40030e4c
4000a580:	f0f0f0f0 	.word	0xf0f0f0f0

4000a584 <_txe_queue_create>:
4000a584:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a588:	e24dd014 	sub	sp, sp, #20
4000a58c:	e1a04000 	mov	r4, r0
4000a590:	e1a05002 	mov	r5, r2
4000a594:	e1a06003 	mov	r6, r3
4000a598:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a59c:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a5a0:	e3540000 	cmp	r4, #0
4000a5a4:	0a000001 	beq	4000a5b0 <_txe_queue_create+0x2c>
4000a5a8:	e358003c 	cmp	r8, #60	; 0x3c
4000a5ac:	0a000002 	beq	4000a5bc <_txe_queue_create+0x38>
4000a5b0:	e3a00009 	mov	r0, #9
4000a5b4:	e28dd024 	add	sp, sp, #36	; 0x24
4000a5b8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a5bc:	e10f9000 	mrs	r9, CPSR
4000a5c0:	e389a080 	orr	sl, r9, #128	; 0x80
4000a5c4:	e121f00a 	msr	CPSR_c, sl
4000a5c8:	e59f0150 	ldr	r0, [pc, #336]	; 4000a720 <_txe_queue_create+0x19c>
4000a5cc:	e5900000 	ldr	r0, [r0]
4000a5d0:	e2800001 	add	r0, r0, #1
4000a5d4:	e59f1144 	ldr	r1, [pc, #324]	; 4000a720 <_txe_queue_create+0x19c>
4000a5d8:	e5810000 	str	r0, [r1]
4000a5dc:	e121f009 	msr	CPSR_c, r9
4000a5e0:	e59f013c 	ldr	r0, [pc, #316]	; 4000a724 <_txe_queue_create+0x1a0>
4000a5e4:	e5900000 	ldr	r0, [r0]
4000a5e8:	e58d0008 	str	r0, [sp, #8]
4000a5ec:	e3a00000 	mov	r0, #0
4000a5f0:	e58d000c 	str	r0, [sp, #12]
4000a5f4:	ea000009 	b	4000a620 <_txe_queue_create+0x9c>
4000a5f8:	e59d0008 	ldr	r0, [sp, #8]
4000a5fc:	e1540000 	cmp	r4, r0
4000a600:	1a000000 	bne	4000a608 <_txe_queue_create+0x84>
4000a604:	ea00000a 	b	4000a634 <_txe_queue_create+0xb0>
4000a608:	e59d0008 	ldr	r0, [sp, #8]
4000a60c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a610:	e58d0008 	str	r0, [sp, #8]
4000a614:	e59d000c 	ldr	r0, [sp, #12]
4000a618:	e2800001 	add	r0, r0, #1
4000a61c:	e58d000c 	str	r0, [sp, #12]
4000a620:	e59f1100 	ldr	r1, [pc, #256]	; 4000a728 <_txe_queue_create+0x1a4>
4000a624:	e59d000c 	ldr	r0, [sp, #12]
4000a628:	e5911000 	ldr	r1, [r1]
4000a62c:	e1500001 	cmp	r0, r1
4000a630:	3afffff0 	bcc	4000a5f8 <_txe_queue_create+0x74>
4000a634:	e1a00000 	nop			; (mov r0, r0)
4000a638:	e10f9000 	mrs	r9, CPSR
4000a63c:	e389a080 	orr	sl, r9, #128	; 0x80
4000a640:	e121f00a 	msr	CPSR_c, sl
4000a644:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a720 <_txe_queue_create+0x19c>
4000a648:	e5900000 	ldr	r0, [r0]
4000a64c:	e2400001 	sub	r0, r0, #1
4000a650:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a720 <_txe_queue_create+0x19c>
4000a654:	e5810000 	str	r0, [r1]
4000a658:	e121f009 	msr	CPSR_c, r9
4000a65c:	eb0013c7 	bl	4000f580 <_tx_thread_system_preempt_check>
4000a660:	e59d0008 	ldr	r0, [sp, #8]
4000a664:	e1540000 	cmp	r4, r0
4000a668:	1a000001 	bne	4000a674 <_txe_queue_create+0xf0>
4000a66c:	e3a00009 	mov	r0, #9
4000a670:	eaffffcf 	b	4000a5b4 <_txe_queue_create+0x30>
4000a674:	e3560000 	cmp	r6, #0
4000a678:	1a000001 	bne	4000a684 <_txe_queue_create+0x100>
4000a67c:	e3a00003 	mov	r0, #3
4000a680:	eaffffcb 	b	4000a5b4 <_txe_queue_create+0x30>
4000a684:	e3550000 	cmp	r5, #0
4000a688:	0a000001 	beq	4000a694 <_txe_queue_create+0x110>
4000a68c:	e3550010 	cmp	r5, #16
4000a690:	9a000001 	bls	4000a69c <_txe_queue_create+0x118>
4000a694:	e3a00005 	mov	r0, #5
4000a698:	eaffffc5 	b	4000a5b4 <_txe_queue_create+0x30>
4000a69c:	e1550127 	cmp	r5, r7, lsr #2
4000a6a0:	9a000001 	bls	4000a6ac <_txe_queue_create+0x128>
4000a6a4:	e3a00005 	mov	r0, #5
4000a6a8:	eaffffc1 	b	4000a5b4 <_txe_queue_create+0x30>
4000a6ac:	e59f0078 	ldr	r0, [pc, #120]	; 4000a72c <_txe_queue_create+0x1a8>
4000a6b0:	e590b000 	ldr	fp, [r0]
4000a6b4:	e35b0000 	cmp	fp, #0
4000a6b8:	0a000008 	beq	4000a6e0 <_txe_queue_create+0x15c>
4000a6bc:	e59f006c 	ldr	r0, [pc, #108]	; 4000a730 <_txe_queue_create+0x1ac>
4000a6c0:	e15b0000 	cmp	fp, r0
4000a6c4:	0a000003 	beq	4000a6d8 <_txe_queue_create+0x154>
4000a6c8:	e59f0064 	ldr	r0, [pc, #100]	; 4000a734 <_txe_queue_create+0x1b0>
4000a6cc:	e5900000 	ldr	r0, [r0]
4000a6d0:	e3500000 	cmp	r0, #0
4000a6d4:	0a000008 	beq	4000a6fc <_txe_queue_create+0x178>
4000a6d8:	e3a00013 	mov	r0, #19
4000a6dc:	eaffffb4 	b	4000a5b4 <_txe_queue_create+0x30>
4000a6e0:	e59f004c 	ldr	r0, [pc, #76]	; 4000a734 <_txe_queue_create+0x1b0>
4000a6e4:	e5900000 	ldr	r0, [r0]
4000a6e8:	e59f1048 	ldr	r1, [pc, #72]	; 4000a738 <_txe_queue_create+0x1b4>
4000a6ec:	e1500001 	cmp	r0, r1
4000a6f0:	2a000001 	bcs	4000a6fc <_txe_queue_create+0x178>
4000a6f4:	e3a00013 	mov	r0, #19
4000a6f8:	eaffffad 	b	4000a5b4 <_txe_queue_create+0x30>
4000a6fc:	e1a03006 	mov	r3, r6
4000a700:	e1a02005 	mov	r2, r5
4000a704:	e58d7000 	str	r7, [sp]
4000a708:	e1a00004 	mov	r0, r4
4000a70c:	e59d1018 	ldr	r1, [sp, #24]
4000a710:	eb000ce5 	bl	4000daac <_tx_queue_create>
4000a714:	e58d0010 	str	r0, [sp, #16]
4000a718:	e59d0010 	ldr	r0, [sp, #16]
4000a71c:	eaffffa4 	b	4000a5b4 <_txe_queue_create+0x30>
4000a720:	40030e70 	.word	0x40030e70
4000a724:	40030ed0 	.word	0x40030ed0
4000a728:	40030ed4 	.word	0x40030ed4
4000a72c:	40030e54 	.word	0x40030e54
4000a730:	40032994 	.word	0x40032994
4000a734:	40030e4c 	.word	0x40030e4c
4000a738:	f0f0f0f0 	.word	0xf0f0f0f0

4000a73c <_txe_queue_front_send>:
4000a73c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a740:	e1a04000 	mov	r4, r0
4000a744:	e1a05001 	mov	r5, r1
4000a748:	e1a06002 	mov	r6, r2
4000a74c:	e3540000 	cmp	r4, #0
4000a750:	0a000003 	beq	4000a764 <_txe_queue_front_send+0x28>
4000a754:	e5940000 	ldr	r0, [r4]
4000a758:	e59f106c 	ldr	r1, [pc, #108]	; 4000a7cc <_txe_queue_front_send+0x90>
4000a75c:	e1500001 	cmp	r0, r1
4000a760:	0a000001 	beq	4000a76c <_txe_queue_front_send+0x30>
4000a764:	e3a00009 	mov	r0, #9
4000a768:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a76c:	e3550000 	cmp	r5, #0
4000a770:	1a000001 	bne	4000a77c <_txe_queue_front_send+0x40>
4000a774:	e3a00003 	mov	r0, #3
4000a778:	eafffffa 	b	4000a768 <_txe_queue_front_send+0x2c>
4000a77c:	e3560000 	cmp	r6, #0
4000a780:	0a00000a 	beq	4000a7b0 <_txe_queue_front_send+0x74>
4000a784:	e59f0044 	ldr	r0, [pc, #68]	; 4000a7d0 <_txe_queue_front_send+0x94>
4000a788:	e5900000 	ldr	r0, [r0]
4000a78c:	e3500000 	cmp	r0, #0
4000a790:	1a000004 	bne	4000a7a8 <_txe_queue_front_send+0x6c>
4000a794:	e59f0038 	ldr	r0, [pc, #56]	; 4000a7d4 <_txe_queue_front_send+0x98>
4000a798:	e5900000 	ldr	r0, [r0]
4000a79c:	e59f1034 	ldr	r1, [pc, #52]	; 4000a7d8 <_txe_queue_front_send+0x9c>
4000a7a0:	e1500001 	cmp	r0, r1
4000a7a4:	1a000001 	bne	4000a7b0 <_txe_queue_front_send+0x74>
4000a7a8:	e3a00004 	mov	r0, #4
4000a7ac:	eaffffed 	b	4000a768 <_txe_queue_front_send+0x2c>
4000a7b0:	e1a02006 	mov	r2, r6
4000a7b4:	e1a01005 	mov	r1, r5
4000a7b8:	e1a00004 	mov	r0, r4
4000a7bc:	eb000d3d 	bl	4000dcb8 <_tx_queue_front_send>
4000a7c0:	e1a07000 	mov	r7, r0
4000a7c4:	e1a00007 	mov	r0, r7
4000a7c8:	eaffffe6 	b	4000a768 <_txe_queue_front_send+0x2c>
4000a7cc:	51554555 	.word	0x51554555
4000a7d0:	40030e4c 	.word	0x40030e4c
4000a7d4:	40030e54 	.word	0x40030e54
4000a7d8:	40032994 	.word	0x40032994

4000a7dc <_txe_queue_receive>:
4000a7dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a7e0:	e1a04000 	mov	r4, r0
4000a7e4:	e1a05001 	mov	r5, r1
4000a7e8:	e1a06002 	mov	r6, r2
4000a7ec:	e3540000 	cmp	r4, #0
4000a7f0:	0a000003 	beq	4000a804 <_txe_queue_receive+0x28>
4000a7f4:	e5940000 	ldr	r0, [r4]
4000a7f8:	e59f106c 	ldr	r1, [pc, #108]	; 4000a86c <_txe_queue_receive+0x90>
4000a7fc:	e1500001 	cmp	r0, r1
4000a800:	0a000001 	beq	4000a80c <_txe_queue_receive+0x30>
4000a804:	e3a00009 	mov	r0, #9
4000a808:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a80c:	e3550000 	cmp	r5, #0
4000a810:	1a000001 	bne	4000a81c <_txe_queue_receive+0x40>
4000a814:	e3a00003 	mov	r0, #3
4000a818:	eafffffa 	b	4000a808 <_txe_queue_receive+0x2c>
4000a81c:	e3560000 	cmp	r6, #0
4000a820:	0a00000a 	beq	4000a850 <_txe_queue_receive+0x74>
4000a824:	e59f0044 	ldr	r0, [pc, #68]	; 4000a870 <_txe_queue_receive+0x94>
4000a828:	e5900000 	ldr	r0, [r0]
4000a82c:	e3500000 	cmp	r0, #0
4000a830:	1a000004 	bne	4000a848 <_txe_queue_receive+0x6c>
4000a834:	e59f0038 	ldr	r0, [pc, #56]	; 4000a874 <_txe_queue_receive+0x98>
4000a838:	e5900000 	ldr	r0, [r0]
4000a83c:	e59f1034 	ldr	r1, [pc, #52]	; 4000a878 <_txe_queue_receive+0x9c>
4000a840:	e1500001 	cmp	r0, r1
4000a844:	1a000001 	bne	4000a850 <_txe_queue_receive+0x74>
4000a848:	e3a00004 	mov	r0, #4
4000a84c:	eaffffed 	b	4000a808 <_txe_queue_receive+0x2c>
4000a850:	e1a02006 	mov	r2, r6
4000a854:	e1a01005 	mov	r1, r5
4000a858:	e1a00004 	mov	r0, r4
4000a85c:	eb000e04 	bl	4000e074 <_tx_queue_receive>
4000a860:	e1a07000 	mov	r7, r0
4000a864:	e1a00007 	mov	r0, r7
4000a868:	eaffffe6 	b	4000a808 <_txe_queue_receive+0x2c>
4000a86c:	51554555 	.word	0x51554555
4000a870:	40030e4c 	.word	0x40030e4c
4000a874:	40030e54 	.word	0x40030e54
4000a878:	40032994 	.word	0x40032994

4000a87c <_txe_queue_send>:
4000a87c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a880:	e1a04000 	mov	r4, r0
4000a884:	e1a05001 	mov	r5, r1
4000a888:	e1a06002 	mov	r6, r2
4000a88c:	e3540000 	cmp	r4, #0
4000a890:	0a000003 	beq	4000a8a4 <_txe_queue_send+0x28>
4000a894:	e5940000 	ldr	r0, [r4]
4000a898:	e59f106c 	ldr	r1, [pc, #108]	; 4000a90c <_txe_queue_send+0x90>
4000a89c:	e1500001 	cmp	r0, r1
4000a8a0:	0a000001 	beq	4000a8ac <_txe_queue_send+0x30>
4000a8a4:	e3a00009 	mov	r0, #9
4000a8a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a8ac:	e3550000 	cmp	r5, #0
4000a8b0:	1a000001 	bne	4000a8bc <_txe_queue_send+0x40>
4000a8b4:	e3a00003 	mov	r0, #3
4000a8b8:	eafffffa 	b	4000a8a8 <_txe_queue_send+0x2c>
4000a8bc:	e3560000 	cmp	r6, #0
4000a8c0:	0a00000a 	beq	4000a8f0 <_txe_queue_send+0x74>
4000a8c4:	e59f0044 	ldr	r0, [pc, #68]	; 4000a910 <_txe_queue_send+0x94>
4000a8c8:	e5900000 	ldr	r0, [r0]
4000a8cc:	e3500000 	cmp	r0, #0
4000a8d0:	1a000004 	bne	4000a8e8 <_txe_queue_send+0x6c>
4000a8d4:	e59f0038 	ldr	r0, [pc, #56]	; 4000a914 <_txe_queue_send+0x98>
4000a8d8:	e5900000 	ldr	r0, [r0]
4000a8dc:	e59f1034 	ldr	r1, [pc, #52]	; 4000a918 <_txe_queue_send+0x9c>
4000a8e0:	e1500001 	cmp	r0, r1
4000a8e4:	1a000001 	bne	4000a8f0 <_txe_queue_send+0x74>
4000a8e8:	e3a00004 	mov	r0, #4
4000a8ec:	eaffffed 	b	4000a8a8 <_txe_queue_send+0x2c>
4000a8f0:	e1a02006 	mov	r2, r6
4000a8f4:	e1a01005 	mov	r1, r5
4000a8f8:	e1a00004 	mov	r0, r4
4000a8fc:	eb000ef4 	bl	4000e4d4 <_tx_queue_send>
4000a900:	e1a07000 	mov	r7, r0
4000a904:	e1a00007 	mov	r0, r7
4000a908:	eaffffe6 	b	4000a8a8 <_txe_queue_send+0x2c>
4000a90c:	51554555 	.word	0x51554555
4000a910:	40030e4c 	.word	0x40030e4c
4000a914:	40030e54 	.word	0x40030e54
4000a918:	40032994 	.word	0x40032994

4000a91c <_txe_thread_create>:
4000a91c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a920:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a924:	e1a04000 	mov	r4, r0
4000a928:	e1a05002 	mov	r5, r2
4000a92c:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a930:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a934:	e3540000 	cmp	r4, #0
4000a938:	0a000002 	beq	4000a948 <_txe_thread_create+0x2c>
4000a93c:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a940:	e35000a8 	cmp	r0, #168	; 0xa8
4000a944:	0a000002 	beq	4000a954 <_txe_thread_create+0x38>
4000a948:	e3a0000e 	mov	r0, #14
4000a94c:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a950:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a954:	e10f0000 	mrs	r0, CPSR
4000a958:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a95c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a960:	e3800080 	orr	r0, r0, #128	; 0x80
4000a964:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a968:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a96c:	e121f000 	msr	CPSR_c, r0
4000a970:	e59f01ec 	ldr	r0, [pc, #492]	; 4000ab64 <_txe_thread_create+0x248>
4000a974:	e5900000 	ldr	r0, [r0]
4000a978:	e2800001 	add	r0, r0, #1
4000a97c:	e59f11e0 	ldr	r1, [pc, #480]	; 4000ab64 <_txe_thread_create+0x248>
4000a980:	e5810000 	str	r0, [r1]
4000a984:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a988:	e121f000 	msr	CPSR_c, r0
4000a98c:	e59f01d4 	ldr	r0, [pc, #468]	; 4000ab68 <_txe_thread_create+0x24c>
4000a990:	e5900000 	ldr	r0, [r0]
4000a994:	e58d0018 	str	r0, [sp, #24]
4000a998:	e2470001 	sub	r0, r7, #1
4000a99c:	e080b006 	add	fp, r0, r6
4000a9a0:	e3a00000 	mov	r0, #0
4000a9a4:	e58d001c 	str	r0, [sp, #28]
4000a9a8:	ea00001d 	b	4000aa24 <_txe_thread_create+0x108>
4000a9ac:	e59d0018 	ldr	r0, [sp, #24]
4000a9b0:	e1540000 	cmp	r4, r0
4000a9b4:	1a000000 	bne	4000a9bc <_txe_thread_create+0xa0>
4000a9b8:	ea00001e 	b	4000aa38 <_txe_thread_create+0x11c>
4000a9bc:	e59d0018 	ldr	r0, [sp, #24]
4000a9c0:	e590000c 	ldr	r0, [r0, #12]
4000a9c4:	e1500006 	cmp	r0, r6
4000a9c8:	8a000005 	bhi	4000a9e4 <_txe_thread_create+0xc8>
4000a9cc:	e59d0018 	ldr	r0, [sp, #24]
4000a9d0:	e5900010 	ldr	r0, [r0, #16]
4000a9d4:	e1500006 	cmp	r0, r6
4000a9d8:	9a000001 	bls	4000a9e4 <_txe_thread_create+0xc8>
4000a9dc:	e3a06000 	mov	r6, #0
4000a9e0:	ea000014 	b	4000aa38 <_txe_thread_create+0x11c>
4000a9e4:	e59d0018 	ldr	r0, [sp, #24]
4000a9e8:	e590000c 	ldr	r0, [r0, #12]
4000a9ec:	e150000b 	cmp	r0, fp
4000a9f0:	8a000005 	bhi	4000aa0c <_txe_thread_create+0xf0>
4000a9f4:	e59d0018 	ldr	r0, [sp, #24]
4000a9f8:	e5900010 	ldr	r0, [r0, #16]
4000a9fc:	e150000b 	cmp	r0, fp
4000aa00:	9a000001 	bls	4000aa0c <_txe_thread_create+0xf0>
4000aa04:	e3a06000 	mov	r6, #0
4000aa08:	ea00000a 	b	4000aa38 <_txe_thread_create+0x11c>
4000aa0c:	e59d0018 	ldr	r0, [sp, #24]
4000aa10:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000aa14:	e58d0018 	str	r0, [sp, #24]
4000aa18:	e59d001c 	ldr	r0, [sp, #28]
4000aa1c:	e2800001 	add	r0, r0, #1
4000aa20:	e58d001c 	str	r0, [sp, #28]
4000aa24:	e59f1140 	ldr	r1, [pc, #320]	; 4000ab6c <_txe_thread_create+0x250>
4000aa28:	e59d001c 	ldr	r0, [sp, #28]
4000aa2c:	e5911000 	ldr	r1, [r1]
4000aa30:	e1500001 	cmp	r0, r1
4000aa34:	3affffdc 	bcc	4000a9ac <_txe_thread_create+0x90>
4000aa38:	e1a00000 	nop			; (mov r0, r0)
4000aa3c:	e10f0000 	mrs	r0, CPSR
4000aa40:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000aa44:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000aa48:	e3800080 	orr	r0, r0, #128	; 0x80
4000aa4c:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000aa50:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000aa54:	e121f000 	msr	CPSR_c, r0
4000aa58:	e59f0104 	ldr	r0, [pc, #260]	; 4000ab64 <_txe_thread_create+0x248>
4000aa5c:	e5900000 	ldr	r0, [r0]
4000aa60:	e2400001 	sub	r0, r0, #1
4000aa64:	e59f10f8 	ldr	r1, [pc, #248]	; 4000ab64 <_txe_thread_create+0x248>
4000aa68:	e5810000 	str	r0, [r1]
4000aa6c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000aa70:	e121f000 	msr	CPSR_c, r0
4000aa74:	eb0012c1 	bl	4000f580 <_tx_thread_system_preempt_check>
4000aa78:	e59d0018 	ldr	r0, [sp, #24]
4000aa7c:	e1540000 	cmp	r4, r0
4000aa80:	1a000001 	bne	4000aa8c <_txe_thread_create+0x170>
4000aa84:	e3a0000e 	mov	r0, #14
4000aa88:	eaffffaf 	b	4000a94c <_txe_thread_create+0x30>
4000aa8c:	e3560000 	cmp	r6, #0
4000aa90:	0a000001 	beq	4000aa9c <_txe_thread_create+0x180>
4000aa94:	e3550000 	cmp	r5, #0
4000aa98:	1a000001 	bne	4000aaa4 <_txe_thread_create+0x188>
4000aa9c:	e3a00003 	mov	r0, #3
4000aaa0:	eaffffa9 	b	4000a94c <_txe_thread_create+0x30>
4000aaa4:	e35700c8 	cmp	r7, #200	; 0xc8
4000aaa8:	2a000001 	bcs	4000aab4 <_txe_thread_create+0x198>
4000aaac:	e3a00005 	mov	r0, #5
4000aab0:	eaffffa5 	b	4000a94c <_txe_thread_create+0x30>
4000aab4:	e3580020 	cmp	r8, #32
4000aab8:	3a000001 	bcc	4000aac4 <_txe_thread_create+0x1a8>
4000aabc:	e3a0000f 	mov	r0, #15
4000aac0:	eaffffa1 	b	4000a94c <_txe_thread_create+0x30>
4000aac4:	e1590008 	cmp	r9, r8
4000aac8:	9a000001 	bls	4000aad4 <_txe_thread_create+0x1b8>
4000aacc:	e3a00018 	mov	r0, #24
4000aad0:	eaffff9d 	b	4000a94c <_txe_thread_create+0x30>
4000aad4:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000aad8:	e3500001 	cmp	r0, #1
4000aadc:	9a000001 	bls	4000aae8 <_txe_thread_create+0x1cc>
4000aae0:	e3a00010 	mov	r0, #16
4000aae4:	eaffff98 	b	4000a94c <_txe_thread_create+0x30>
4000aae8:	e59f0080 	ldr	r0, [pc, #128]	; 4000ab70 <_txe_thread_create+0x254>
4000aaec:	e590a000 	ldr	sl, [r0]
4000aaf0:	e35a0000 	cmp	sl, #0
4000aaf4:	0a000008 	beq	4000ab1c <_txe_thread_create+0x200>
4000aaf8:	e59f0074 	ldr	r0, [pc, #116]	; 4000ab74 <_txe_thread_create+0x258>
4000aafc:	e15a0000 	cmp	sl, r0
4000ab00:	0a000003 	beq	4000ab14 <_txe_thread_create+0x1f8>
4000ab04:	e59f006c 	ldr	r0, [pc, #108]	; 4000ab78 <_txe_thread_create+0x25c>
4000ab08:	e5900000 	ldr	r0, [r0]
4000ab0c:	e3500000 	cmp	r0, #0
4000ab10:	0a000008 	beq	4000ab38 <_txe_thread_create+0x21c>
4000ab14:	e3a00013 	mov	r0, #19
4000ab18:	eaffff8b 	b	4000a94c <_txe_thread_create+0x30>
4000ab1c:	e59f0054 	ldr	r0, [pc, #84]	; 4000ab78 <_txe_thread_create+0x25c>
4000ab20:	e5900000 	ldr	r0, [r0]
4000ab24:	e59f1050 	ldr	r1, [pc, #80]	; 4000ab7c <_txe_thread_create+0x260>
4000ab28:	e1500001 	cmp	r0, r1
4000ab2c:	2a000001 	bcs	4000ab38 <_txe_thread_create+0x21c>
4000ab30:	e3a00013 	mov	r0, #19
4000ab34:	eaffff84 	b	4000a94c <_txe_thread_create+0x30>
4000ab38:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000ab3c:	e1cd21f0 	strd	r2, [sp, #16]
4000ab40:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000ab44:	e1a02005 	mov	r2, r5
4000ab48:	e1a00004 	mov	r0, r4
4000ab4c:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000ab50:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000ab54:	eb000f49 	bl	4000e880 <_tx_thread_create>
4000ab58:	e58d0020 	str	r0, [sp, #32]
4000ab5c:	e59d0020 	ldr	r0, [sp, #32]
4000ab60:	eaffff79 	b	4000a94c <_txe_thread_create+0x30>
4000ab64:	40030e70 	.word	0x40030e70
4000ab68:	40030e5c 	.word	0x40030e5c
4000ab6c:	40030e60 	.word	0x40030e60
4000ab70:	40030e54 	.word	0x40030e54
4000ab74:	40032994 	.word	0x40032994
4000ab78:	40030e4c 	.word	0x40030e4c
4000ab7c:	f0f0f0f0 	.word	0xf0f0f0f0

4000ab80 <_txe_thread_info_get>:
4000ab80:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ab84:	e24dd01c 	sub	sp, sp, #28
4000ab88:	e1a04000 	mov	r4, r0
4000ab8c:	e1a05001 	mov	r5, r1
4000ab90:	e1a06002 	mov	r6, r2
4000ab94:	e1a07003 	mov	r7, r3
4000ab98:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000ab9c:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000aba0:	e3540000 	cmp	r4, #0
4000aba4:	0a000003 	beq	4000abb8 <_txe_thread_info_get+0x38>
4000aba8:	e5940000 	ldr	r0, [r4]
4000abac:	e59f103c 	ldr	r1, [pc, #60]	; 4000abf0 <_txe_thread_info_get+0x70>
4000abb0:	e1500001 	cmp	r0, r1
4000abb4:	0a000002 	beq	4000abc4 <_txe_thread_info_get+0x44>
4000abb8:	e3a0000e 	mov	r0, #14
4000abbc:	e28dd01c 	add	sp, sp, #28
4000abc0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000abc4:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000abc8:	e58d3010 	str	r3, [sp, #16]
4000abcc:	e1a03007 	mov	r3, r7
4000abd0:	e1a02006 	mov	r2, r6
4000abd4:	e1a01005 	mov	r1, r5
4000abd8:	e1a00004 	mov	r0, r4
4000abdc:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000abe0:	eb000ff5 	bl	4000ebbc <_tx_thread_info_get>
4000abe4:	e58d0018 	str	r0, [sp, #24]
4000abe8:	e59d0018 	ldr	r0, [sp, #24]
4000abec:	eafffff2 	b	4000abbc <_txe_thread_info_get+0x3c>
4000abf0:	54485244 	.word	0x54485244

4000abf4 <_txe_thread_priority_change>:
4000abf4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000abf8:	e1a04000 	mov	r4, r0
4000abfc:	e1a05001 	mov	r5, r1
4000ac00:	e1a06002 	mov	r6, r2
4000ac04:	e3540000 	cmp	r4, #0
4000ac08:	0a000003 	beq	4000ac1c <_txe_thread_priority_change+0x28>
4000ac0c:	e5940000 	ldr	r0, [r4]
4000ac10:	e59f1070 	ldr	r1, [pc, #112]	; 4000ac88 <_txe_thread_priority_change+0x94>
4000ac14:	e1500001 	cmp	r0, r1
4000ac18:	0a000001 	beq	4000ac24 <_txe_thread_priority_change+0x30>
4000ac1c:	e3a0000e 	mov	r0, #14
4000ac20:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ac24:	e3560000 	cmp	r6, #0
4000ac28:	1a000001 	bne	4000ac34 <_txe_thread_priority_change+0x40>
4000ac2c:	e3a00003 	mov	r0, #3
4000ac30:	eafffffa 	b	4000ac20 <_txe_thread_priority_change+0x2c>
4000ac34:	e3550020 	cmp	r5, #32
4000ac38:	3a000001 	bcc	4000ac44 <_txe_thread_priority_change+0x50>
4000ac3c:	e3a0000f 	mov	r0, #15
4000ac40:	eafffff6 	b	4000ac20 <_txe_thread_priority_change+0x2c>
4000ac44:	e59f0040 	ldr	r0, [pc, #64]	; 4000ac8c <_txe_thread_priority_change+0x98>
4000ac48:	e5900000 	ldr	r0, [r0]
4000ac4c:	e3500000 	cmp	r0, #0
4000ac50:	0a000003 	beq	4000ac64 <_txe_thread_priority_change+0x70>
4000ac54:	e59f0034 	ldr	r0, [pc, #52]	; 4000ac90 <_txe_thread_priority_change+0x9c>
4000ac58:	e5900000 	ldr	r0, [r0]
4000ac5c:	e3500000 	cmp	r0, #0
4000ac60:	0a000001 	beq	4000ac6c <_txe_thread_priority_change+0x78>
4000ac64:	e3a00013 	mov	r0, #19
4000ac68:	eaffffec 	b	4000ac20 <_txe_thread_priority_change+0x2c>
4000ac6c:	e1a02006 	mov	r2, r6
4000ac70:	e1a01005 	mov	r1, r5
4000ac74:	e1a00004 	mov	r0, r4
4000ac78:	eb001039 	bl	4000ed64 <_tx_thread_priority_change>
4000ac7c:	e1a07000 	mov	r7, r0
4000ac80:	e1a00007 	mov	r0, r7
4000ac84:	eaffffe5 	b	4000ac20 <_txe_thread_priority_change+0x2c>
4000ac88:	54485244 	.word	0x54485244
4000ac8c:	40030e54 	.word	0x40030e54
4000ac90:	40030e4c 	.word	0x40030e4c

4000ac94 <_txe_thread_relinquish>:
4000ac94:	e92d4010 	push	{r4, lr}
4000ac98:	e59f0020 	ldr	r0, [pc, #32]	; 4000acc0 <_txe_thread_relinquish+0x2c>
4000ac9c:	e5900000 	ldr	r0, [r0]
4000aca0:	e3500000 	cmp	r0, #0
4000aca4:	0a000004 	beq	4000acbc <_txe_thread_relinquish+0x28>
4000aca8:	e59f0014 	ldr	r0, [pc, #20]	; 4000acc4 <_txe_thread_relinquish+0x30>
4000acac:	e5900000 	ldr	r0, [r0]
4000acb0:	e3500000 	cmp	r0, #0
4000acb4:	1a000000 	bne	4000acbc <_txe_thread_relinquish+0x28>
4000acb8:	eb001091 	bl	4000ef04 <_tx_thread_relinquish>
4000acbc:	e8bd8010 	pop	{r4, pc}
4000acc0:	40030e54 	.word	0x40030e54
4000acc4:	40030e4c 	.word	0x40030e4c

4000acc8 <_txe_thread_resume>:
4000acc8:	e92d4070 	push	{r4, r5, r6, lr}
4000accc:	e1a04000 	mov	r4, r0
4000acd0:	e3540000 	cmp	r4, #0
4000acd4:	0a000003 	beq	4000ace8 <_txe_thread_resume+0x20>
4000acd8:	e5940000 	ldr	r0, [r4]
4000acdc:	e59f1020 	ldr	r1, [pc, #32]	; 4000ad04 <_txe_thread_resume+0x3c>
4000ace0:	e1500001 	cmp	r0, r1
4000ace4:	0a000001 	beq	4000acf0 <_txe_thread_resume+0x28>
4000ace8:	e3a0000e 	mov	r0, #14
4000acec:	e8bd8070 	pop	{r4, r5, r6, pc}
4000acf0:	e1a00004 	mov	r0, r4
4000acf4:	eb00113e 	bl	4000f1f4 <_tx_thread_resume>
4000acf8:	e1a05000 	mov	r5, r0
4000acfc:	e1a00005 	mov	r0, r5
4000ad00:	eafffff9 	b	4000acec <_txe_thread_resume+0x24>
4000ad04:	54485244 	.word	0x54485244

4000ad08 <_txe_timer_activate>:
4000ad08:	e92d4070 	push	{r4, r5, r6, lr}
4000ad0c:	e1a04000 	mov	r4, r0
4000ad10:	e3540000 	cmp	r4, #0
4000ad14:	0a000003 	beq	4000ad28 <_txe_timer_activate+0x20>
4000ad18:	e5940000 	ldr	r0, [r4]
4000ad1c:	e59f1020 	ldr	r1, [pc, #32]	; 4000ad44 <_txe_timer_activate+0x3c>
4000ad20:	e1500001 	cmp	r0, r1
4000ad24:	0a000001 	beq	4000ad30 <_txe_timer_activate+0x28>
4000ad28:	e3a00015 	mov	r0, #21
4000ad2c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ad30:	e1a00004 	mov	r0, r4
4000ad34:	eb0013a4 	bl	4000fbcc <_tx_timer_activate>
4000ad38:	e1a05000 	mov	r5, r0
4000ad3c:	e1a00005 	mov	r0, r5
4000ad40:	eafffff9 	b	4000ad2c <_txe_timer_activate+0x24>
4000ad44:	4154494d 	.word	0x4154494d

4000ad48 <_txe_timer_change>:
4000ad48:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ad4c:	e1a04000 	mov	r4, r0
4000ad50:	e1a05001 	mov	r5, r1
4000ad54:	e1a06002 	mov	r6, r2
4000ad58:	e3540000 	cmp	r4, #0
4000ad5c:	0a000003 	beq	4000ad70 <_txe_timer_change+0x28>
4000ad60:	e5940000 	ldr	r0, [r4]
4000ad64:	e59f1058 	ldr	r1, [pc, #88]	; 4000adc4 <_txe_timer_change+0x7c>
4000ad68:	e1500001 	cmp	r0, r1
4000ad6c:	0a000001 	beq	4000ad78 <_txe_timer_change+0x30>
4000ad70:	e3a00015 	mov	r0, #21
4000ad74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ad78:	e3550000 	cmp	r5, #0
4000ad7c:	1a000001 	bne	4000ad88 <_txe_timer_change+0x40>
4000ad80:	e3a00016 	mov	r0, #22
4000ad84:	eafffffa 	b	4000ad74 <_txe_timer_change+0x2c>
4000ad88:	e59f0038 	ldr	r0, [pc, #56]	; 4000adc8 <_txe_timer_change+0x80>
4000ad8c:	e5900000 	ldr	r0, [r0]
4000ad90:	e3c0000f 	bic	r0, r0, #15
4000ad94:	e59f1030 	ldr	r1, [pc, #48]	; 4000adcc <_txe_timer_change+0x84>
4000ad98:	e1500001 	cmp	r0, r1
4000ad9c:	1a000001 	bne	4000ada8 <_txe_timer_change+0x60>
4000ada0:	e3a00013 	mov	r0, #19
4000ada4:	eafffff2 	b	4000ad74 <_txe_timer_change+0x2c>
4000ada8:	e1a02006 	mov	r2, r6
4000adac:	e1a01005 	mov	r1, r5
4000adb0:	e1a00004 	mov	r0, r4
4000adb4:	eb0013d4 	bl	4000fd0c <_tx_timer_change>
4000adb8:	e1a07000 	mov	r7, r0
4000adbc:	e1a00007 	mov	r0, r7
4000adc0:	eaffffeb 	b	4000ad74 <_txe_timer_change+0x2c>
4000adc4:	4154494d 	.word	0x4154494d
4000adc8:	40030e4c 	.word	0x40030e4c
4000adcc:	f0f0f0f0 	.word	0xf0f0f0f0

4000add0 <_txe_timer_create>:
4000add0:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000add4:	e24dd01c 	sub	sp, sp, #28
4000add8:	e1a04000 	mov	r4, r0
4000addc:	e1a05001 	mov	r5, r1
4000ade0:	e1a06002 	mov	r6, r2
4000ade4:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000ade8:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000adec:	e3540000 	cmp	r4, #0
4000adf0:	0a000001 	beq	4000adfc <_txe_timer_create+0x2c>
4000adf4:	e358002c 	cmp	r8, #44	; 0x2c
4000adf8:	0a000002 	beq	4000ae08 <_txe_timer_create+0x38>
4000adfc:	e3a00015 	mov	r0, #21
4000ae00:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000ae04:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ae08:	e10f9000 	mrs	r9, CPSR
4000ae0c:	e389a080 	orr	sl, r9, #128	; 0x80
4000ae10:	e121f00a 	msr	CPSR_c, sl
4000ae14:	e59f0160 	ldr	r0, [pc, #352]	; 4000af7c <_txe_timer_create+0x1ac>
4000ae18:	e5900000 	ldr	r0, [r0]
4000ae1c:	e2800001 	add	r0, r0, #1
4000ae20:	e59f1154 	ldr	r1, [pc, #340]	; 4000af7c <_txe_timer_create+0x1ac>
4000ae24:	e5810000 	str	r0, [r1]
4000ae28:	e121f009 	msr	CPSR_c, r9
4000ae2c:	e59f014c 	ldr	r0, [pc, #332]	; 4000af80 <_txe_timer_create+0x1b0>
4000ae30:	e5900000 	ldr	r0, [r0]
4000ae34:	e58d0014 	str	r0, [sp, #20]
4000ae38:	e3a00000 	mov	r0, #0
4000ae3c:	e58d0018 	str	r0, [sp, #24]
4000ae40:	ea000009 	b	4000ae6c <_txe_timer_create+0x9c>
4000ae44:	e59d0014 	ldr	r0, [sp, #20]
4000ae48:	e1540000 	cmp	r4, r0
4000ae4c:	1a000000 	bne	4000ae54 <_txe_timer_create+0x84>
4000ae50:	ea00000a 	b	4000ae80 <_txe_timer_create+0xb0>
4000ae54:	e59d0014 	ldr	r0, [sp, #20]
4000ae58:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000ae5c:	e58d0014 	str	r0, [sp, #20]
4000ae60:	e59d0018 	ldr	r0, [sp, #24]
4000ae64:	e2800001 	add	r0, r0, #1
4000ae68:	e58d0018 	str	r0, [sp, #24]
4000ae6c:	e59f1110 	ldr	r1, [pc, #272]	; 4000af84 <_txe_timer_create+0x1b4>
4000ae70:	e59d0018 	ldr	r0, [sp, #24]
4000ae74:	e5911000 	ldr	r1, [r1]
4000ae78:	e1500001 	cmp	r0, r1
4000ae7c:	3afffff0 	bcc	4000ae44 <_txe_timer_create+0x74>
4000ae80:	e1a00000 	nop			; (mov r0, r0)
4000ae84:	e10f9000 	mrs	r9, CPSR
4000ae88:	e389a080 	orr	sl, r9, #128	; 0x80
4000ae8c:	e121f00a 	msr	CPSR_c, sl
4000ae90:	e59f00e4 	ldr	r0, [pc, #228]	; 4000af7c <_txe_timer_create+0x1ac>
4000ae94:	e5900000 	ldr	r0, [r0]
4000ae98:	e2400001 	sub	r0, r0, #1
4000ae9c:	e59f10d8 	ldr	r1, [pc, #216]	; 4000af7c <_txe_timer_create+0x1ac>
4000aea0:	e5810000 	str	r0, [r1]
4000aea4:	e121f009 	msr	CPSR_c, r9
4000aea8:	eb0011b4 	bl	4000f580 <_tx_thread_system_preempt_check>
4000aeac:	e59d0014 	ldr	r0, [sp, #20]
4000aeb0:	e1540000 	cmp	r4, r0
4000aeb4:	1a000001 	bne	4000aec0 <_txe_timer_create+0xf0>
4000aeb8:	e3a00015 	mov	r0, #21
4000aebc:	eaffffcf 	b	4000ae00 <_txe_timer_create+0x30>
4000aec0:	e3570000 	cmp	r7, #0
4000aec4:	1a000001 	bne	4000aed0 <_txe_timer_create+0x100>
4000aec8:	e3a00016 	mov	r0, #22
4000aecc:	eaffffcb 	b	4000ae00 <_txe_timer_create+0x30>
4000aed0:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aed4:	e3500001 	cmp	r0, #1
4000aed8:	0a000004 	beq	4000aef0 <_txe_timer_create+0x120>
4000aedc:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aee0:	e3500000 	cmp	r0, #0
4000aee4:	0a000001 	beq	4000aef0 <_txe_timer_create+0x120>
4000aee8:	e3a00017 	mov	r0, #23
4000aeec:	eaffffc3 	b	4000ae00 <_txe_timer_create+0x30>
4000aef0:	e59f0090 	ldr	r0, [pc, #144]	; 4000af88 <_txe_timer_create+0x1b8>
4000aef4:	e5900000 	ldr	r0, [r0]
4000aef8:	e58d0010 	str	r0, [sp, #16]
4000aefc:	e59d0010 	ldr	r0, [sp, #16]
4000af00:	e3500000 	cmp	r0, #0
4000af04:	0a000009 	beq	4000af30 <_txe_timer_create+0x160>
4000af08:	e59f107c 	ldr	r1, [pc, #124]	; 4000af8c <_txe_timer_create+0x1bc>
4000af0c:	e59d0010 	ldr	r0, [sp, #16]
4000af10:	e1500001 	cmp	r0, r1
4000af14:	0a000003 	beq	4000af28 <_txe_timer_create+0x158>
4000af18:	e59f0070 	ldr	r0, [pc, #112]	; 4000af90 <_txe_timer_create+0x1c0>
4000af1c:	e5900000 	ldr	r0, [r0]
4000af20:	e3500000 	cmp	r0, #0
4000af24:	0a000008 	beq	4000af4c <_txe_timer_create+0x17c>
4000af28:	e3a00013 	mov	r0, #19
4000af2c:	eaffffb3 	b	4000ae00 <_txe_timer_create+0x30>
4000af30:	e59f0058 	ldr	r0, [pc, #88]	; 4000af90 <_txe_timer_create+0x1c0>
4000af34:	e5900000 	ldr	r0, [r0]
4000af38:	e59f1054 	ldr	r1, [pc, #84]	; 4000af94 <_txe_timer_create+0x1c4>
4000af3c:	e1500001 	cmp	r0, r1
4000af40:	2a000001 	bcs	4000af4c <_txe_timer_create+0x17c>
4000af44:	e3a00013 	mov	r0, #19
4000af48:	eaffffac 	b	4000ae00 <_txe_timer_create+0x30>
4000af4c:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000af50:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000af54:	e98d000c 	stmib	sp, {r2, r3}
4000af58:	e58d7000 	str	r7, [sp]
4000af5c:	e1a02006 	mov	r2, r6
4000af60:	e1a01005 	mov	r1, r5
4000af64:	e1a00004 	mov	r0, r4
4000af68:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000af6c:	eb0013b1 	bl	4000fe38 <_tx_timer_create>
4000af70:	e1a0b000 	mov	fp, r0
4000af74:	e1a0000b 	mov	r0, fp
4000af78:	eaffffa0 	b	4000ae00 <_txe_timer_create+0x30>
4000af7c:	40030e70 	.word	0x40030e70
4000af80:	40030e98 	.word	0x40030e98
4000af84:	40030e9c 	.word	0x40030e9c
4000af88:	40030e54 	.word	0x40030e54
4000af8c:	40032994 	.word	0x40032994
4000af90:	40030e4c 	.word	0x40030e4c
4000af94:	f0f0f0f0 	.word	0xf0f0f0f0

4000af98 <_txe_timer_deactivate>:
4000af98:	e92d4070 	push	{r4, r5, r6, lr}
4000af9c:	e1a04000 	mov	r4, r0
4000afa0:	e3540000 	cmp	r4, #0
4000afa4:	0a000003 	beq	4000afb8 <_txe_timer_deactivate+0x20>
4000afa8:	e5940000 	ldr	r0, [r4]
4000afac:	e59f1020 	ldr	r1, [pc, #32]	; 4000afd4 <_txe_timer_deactivate+0x3c>
4000afb0:	e1500001 	cmp	r0, r1
4000afb4:	0a000001 	beq	4000afc0 <_txe_timer_deactivate+0x28>
4000afb8:	e3a00015 	mov	r0, #21
4000afbc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000afc0:	e1a00004 	mov	r0, r4
4000afc4:	eb00141a 	bl	40010034 <_tx_timer_deactivate>
4000afc8:	e1a05000 	mov	r5, r0
4000afcc:	e1a00005 	mov	r0, r5
4000afd0:	eafffff9 	b	4000afbc <_txe_timer_deactivate+0x24>
4000afd4:	4154494d 	.word	0x4154494d

4000afd8 <_tx_thread_system_return>:
4000afd8:	e3a00000 	mov	r0, #0
4000afdc:	e10f1000 	mrs	r1, CPSR
4000afe0:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000afe4:	e3812080 	orr	r2, r1, #128	; 0x80
4000afe8:	e12ff002 	msr	CPSR_fsxc, r2
4000afec:	e59f302c 	ldr	r3, [pc, #44]	; 4000b020 <_tx_thread_system_return+0x48>
4000aff0:	e5930000 	ldr	r0, [r3]
4000aff4:	e59f2028 	ldr	r2, [pc, #40]	; 4000b024 <_tx_thread_system_return+0x4c>
4000aff8:	e5921000 	ldr	r1, [r2]
4000affc:	e580d008 	str	sp, [r0, #8]
4000b000:	e3a04000 	mov	r4, #0
4000b004:	e3510000 	cmp	r1, #0
4000b008:	0a000002 	beq	4000b018 <_tx_thread_system_return+0x40>
4000b00c:	e590101c 	ldr	r1, [r0, #28]
4000b010:	e5824000 	str	r4, [r2]
4000b014:	e5801018 	str	r1, [r0, #24]
4000b018:	e5834000 	str	r4, [r3]
4000b01c:	ea000001 	b	4000b028 <_tx_thread_schedule>
4000b020:	40030e54 	.word	0x40030e54
4000b024:	40030e80 	.word	0x40030e80

4000b028 <_tx_thread_schedule>:
4000b028:	e10f2000 	mrs	r2, CPSR
4000b02c:	e3c20080 	bic	r0, r2, #128	; 0x80
4000b030:	e12ff000 	msr	CPSR_fsxc, r0
4000b034:	e59f104c 	ldr	r1, [pc, #76]	; 4000b088 <_tx_thread_schedule+0x60>
4000b038:	e5910000 	ldr	r0, [r1]
4000b03c:	e3500000 	cmp	r0, #0
4000b040:	0afffffc 	beq	4000b038 <_tx_thread_schedule+0x10>
4000b044:	e12ff002 	msr	CPSR_fsxc, r2
4000b048:	e59f103c 	ldr	r1, [pc, #60]	; 4000b08c <_tx_thread_schedule+0x64>
4000b04c:	e5810000 	str	r0, [r1]
4000b050:	e5902004 	ldr	r2, [r0, #4]
4000b054:	e5903018 	ldr	r3, [r0, #24]
4000b058:	e2822001 	add	r2, r2, #1
4000b05c:	e5802004 	str	r2, [r0, #4]
4000b060:	e59f2028 	ldr	r2, [pc, #40]	; 4000b090 <_tx_thread_schedule+0x68>
4000b064:	e590d008 	ldr	sp, [r0, #8]
4000b068:	e5823000 	str	r3, [r2]
4000b06c:	e8bd0003 	pop	{r0, r1}
4000b070:	e3500000 	cmp	r0, #0
4000b074:	116ff001 	msrne	SPSR_fsxc, r1
4000b078:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000b07c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b080:	e12ff001 	msr	CPSR_fsxc, r1
4000b084:	e12fff1e 	bx	lr
4000b088:	40030e58 	.word	0x40030e58
4000b08c:	40030e54 	.word	0x40030e54
4000b090:	40030e80 	.word	0x40030e80

4000b094 <_tx_thread_vectored_context_save>:
4000b094:	e59f3044 	ldr	r3, [pc, #68]	; 4000b0e0 <_tx_thread_vectored_context_save+0x4c>
4000b098:	e5932000 	ldr	r2, [r3]
4000b09c:	e3520000 	cmp	r2, #0
4000b0a0:	0a000003 	beq	4000b0b4 <_tx_thread_vectored_context_save+0x20>
4000b0a4:	e2822001 	add	r2, r2, #1
4000b0a8:	e5832000 	str	r2, [r3]
4000b0ac:	e3a0a000 	mov	sl, #0
4000b0b0:	e12fff1e 	bx	lr
4000b0b4:	e2822001 	add	r2, r2, #1
4000b0b8:	e5832000 	str	r2, [r3]
4000b0bc:	e59f1020 	ldr	r1, [pc, #32]	; 4000b0e4 <_tx_thread_vectored_context_save+0x50>
4000b0c0:	e5910000 	ldr	r0, [r1]
4000b0c4:	e3500000 	cmp	r0, #0
4000b0c8:	0a000001 	beq	4000b0d4 <_tx_thread_vectored_context_save+0x40>
4000b0cc:	e3a0a000 	mov	sl, #0
4000b0d0:	e12fff1e 	bx	lr
4000b0d4:	e3a0a000 	mov	sl, #0
4000b0d8:	e28dd020 	add	sp, sp, #32
4000b0dc:	e12fff1e 	bx	lr
4000b0e0:	40030e4c 	.word	0x40030e4c
4000b0e4:	40030e54 	.word	0x40030e54

4000b0e8 <_tx_timer_interrupt>:
4000b0e8:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b1bc <_tx_timer_interrupt+0xd4>
4000b0ec:	e5910000 	ldr	r0, [r1]
4000b0f0:	e2800001 	add	r0, r0, #1
4000b0f4:	e5810000 	str	r0, [r1]
4000b0f8:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b1c0 <_tx_timer_interrupt+0xd8>
4000b0fc:	e5932000 	ldr	r2, [r3]
4000b100:	e3520000 	cmp	r2, #0
4000b104:	0a000006 	beq	4000b124 <_tx_timer_interrupt+0x3c>
4000b108:	e2422001 	sub	r2, r2, #1
4000b10c:	e5832000 	str	r2, [r3]
4000b110:	e3520000 	cmp	r2, #0
4000b114:	1a000002 	bne	4000b124 <_tx_timer_interrupt+0x3c>
4000b118:	e59f30a4 	ldr	r3, [pc, #164]	; 4000b1c4 <_tx_timer_interrupt+0xdc>
4000b11c:	e3a00001 	mov	r0, #1
4000b120:	e5830000 	str	r0, [r3]
4000b124:	e59f109c 	ldr	r1, [pc, #156]	; 4000b1c8 <_tx_timer_interrupt+0xe0>
4000b128:	e5910000 	ldr	r0, [r1]
4000b12c:	e5902000 	ldr	r2, [r0]
4000b130:	e3520000 	cmp	r2, #0
4000b134:	0a000003 	beq	4000b148 <_tx_timer_interrupt+0x60>
4000b138:	e59f308c 	ldr	r3, [pc, #140]	; 4000b1cc <_tx_timer_interrupt+0xe4>
4000b13c:	e3a02001 	mov	r2, #1
4000b140:	e5832000 	str	r2, [r3]
4000b144:	ea000007 	b	4000b168 <_tx_timer_interrupt+0x80>
4000b148:	e2800004 	add	r0, r0, #4
4000b14c:	e59f307c 	ldr	r3, [pc, #124]	; 4000b1d0 <_tx_timer_interrupt+0xe8>
4000b150:	e5932000 	ldr	r2, [r3]
4000b154:	e1500002 	cmp	r0, r2
4000b158:	1a000001 	bne	4000b164 <_tx_timer_interrupt+0x7c>
4000b15c:	e59f3070 	ldr	r3, [pc, #112]	; 4000b1d4 <_tx_timer_interrupt+0xec>
4000b160:	e5930000 	ldr	r0, [r3]
4000b164:	e5810000 	str	r0, [r1]
4000b168:	e59f3054 	ldr	r3, [pc, #84]	; 4000b1c4 <_tx_timer_interrupt+0xdc>
4000b16c:	e5932000 	ldr	r2, [r3]
4000b170:	e3520000 	cmp	r2, #0
4000b174:	1a000003 	bne	4000b188 <_tx_timer_interrupt+0xa0>
4000b178:	e59f104c 	ldr	r1, [pc, #76]	; 4000b1cc <_tx_timer_interrupt+0xe4>
4000b17c:	e5910000 	ldr	r0, [r1]
4000b180:	e3500000 	cmp	r0, #0
4000b184:	0a00000b 	beq	4000b1b8 <_tx_timer_interrupt+0xd0>
4000b188:	e92d4001 	push	{r0, lr}
4000b18c:	e59f1038 	ldr	r1, [pc, #56]	; 4000b1cc <_tx_timer_interrupt+0xe4>
4000b190:	e5910000 	ldr	r0, [r1]
4000b194:	e3500000 	cmp	r0, #0
4000b198:	0a000000 	beq	4000b1a0 <_tx_timer_interrupt+0xb8>
4000b19c:	eb001441 	bl	400102a8 <_tx_timer_expiration_process>
4000b1a0:	e59f301c 	ldr	r3, [pc, #28]	; 4000b1c4 <_tx_timer_interrupt+0xdc>
4000b1a4:	e5932000 	ldr	r2, [r3]
4000b1a8:	e3520000 	cmp	r2, #0
4000b1ac:	0a000000 	beq	4000b1b4 <_tx_timer_interrupt+0xcc>
4000b1b0:	eb001210 	bl	4000f9f8 <_tx_thread_time_slice>
4000b1b4:	e8bd4001 	pop	{r0, lr}
4000b1b8:	e12fff1e 	bx	lr
4000b1bc:	40030e7c 	.word	0x40030e7c
4000b1c0:	40030e80 	.word	0x40030e80
4000b1c4:	40030e84 	.word	0x40030e84
4000b1c8:	40030e90 	.word	0x40030e90
4000b1cc:	40030e94 	.word	0x40030e94
4000b1d0:	40030e8c 	.word	0x40030e8c
4000b1d4:	40030e88 	.word	0x40030e88

4000b1d8 <_tx_thread_context_restore>:
4000b1d8:	e10f3000 	mrs	r3, CPSR
4000b1dc:	e3830080 	orr	r0, r3, #128	; 0x80
4000b1e0:	e12ff000 	msr	CPSR_fsxc, r0
4000b1e4:	e59f30f0 	ldr	r3, [pc, #240]	; 4000b2dc <_tx_thread_context_restore+0x104>
4000b1e8:	e5932000 	ldr	r2, [r3]
4000b1ec:	e2422001 	sub	r2, r2, #1
4000b1f0:	e5832000 	str	r2, [r3]
4000b1f4:	e3520000 	cmp	r2, #0
4000b1f8:	0a000003 	beq	4000b20c <_tx_thread_context_restore+0x34>
4000b1fc:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b200:	e16ff000 	msr	SPSR_fsxc, r0
4000b204:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b208:	e1b0f00e 	movs	pc, lr
4000b20c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b2e0 <_tx_thread_context_restore+0x108>
4000b210:	e5910000 	ldr	r0, [r1]
4000b214:	e3500000 	cmp	r0, #0
4000b218:	0a00002a 	beq	4000b2c8 <_tx_thread_context_restore+0xf0>
4000b21c:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b2e4 <_tx_thread_context_restore+0x10c>
4000b220:	e5932000 	ldr	r2, [r3]
4000b224:	e3520000 	cmp	r2, #0
4000b228:	1a000003 	bne	4000b23c <_tx_thread_context_restore+0x64>
4000b22c:	e59f30b4 	ldr	r3, [pc, #180]	; 4000b2e8 <_tx_thread_context_restore+0x110>
4000b230:	e5932000 	ldr	r2, [r3]
4000b234:	e1500002 	cmp	r0, r2
4000b238:	1a000003 	bne	4000b24c <_tx_thread_context_restore+0x74>
4000b23c:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b240:	e16ff000 	msr	SPSR_fsxc, r0
4000b244:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b248:	e1b0f00e 	movs	pc, lr
4000b24c:	e8bd5408 	pop	{r3, sl, ip, lr}
4000b250:	e1a0100e 	mov	r1, lr
4000b254:	e3a020d3 	mov	r2, #211	; 0xd3
4000b258:	e121f002 	msr	CPSR_c, r2
4000b25c:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000b260:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000b264:	e1a04003 	mov	r4, r3
4000b268:	e3a020d2 	mov	r2, #210	; 0xd2
4000b26c:	e121f002 	msr	CPSR_c, r2
4000b270:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b274:	e3a050d3 	mov	r5, #211	; 0xd3
4000b278:	e121f005 	msr	CPSR_c, r5
4000b27c:	e92d000f 	push	{r0, r1, r2, r3}
4000b280:	e3a03001 	mov	r3, #1
4000b284:	e92d0018 	push	{r3, r4}
4000b288:	e59f1050 	ldr	r1, [pc, #80]	; 4000b2e0 <_tx_thread_context_restore+0x108>
4000b28c:	e5910000 	ldr	r0, [r1]
4000b290:	e580d008 	str	sp, [r0, #8]
4000b294:	e3c44020 	bic	r4, r4, #32
4000b298:	e3843080 	orr	r3, r4, #128	; 0x80
4000b29c:	e12ff003 	msr	CPSR_fsxc, r3
4000b2a0:	e59f3044 	ldr	r3, [pc, #68]	; 4000b2ec <_tx_thread_context_restore+0x114>
4000b2a4:	e5932000 	ldr	r2, [r3]
4000b2a8:	e3520000 	cmp	r2, #0
4000b2ac:	0a000002 	beq	4000b2bc <_tx_thread_context_restore+0xe4>
4000b2b0:	e5802018 	str	r2, [r0, #24]
4000b2b4:	e3a02000 	mov	r2, #0
4000b2b8:	e5832000 	str	r2, [r3]
4000b2bc:	e3a00000 	mov	r0, #0
4000b2c0:	e5810000 	str	r0, [r1]
4000b2c4:	eaffff57 	b	4000b028 <_tx_thread_schedule>
4000b2c8:	e10f3000 	mrs	r3, CPSR
4000b2cc:	e3c3301f 	bic	r3, r3, #31
4000b2d0:	e3833013 	orr	r3, r3, #19
4000b2d4:	e12ff003 	msr	CPSR_fsxc, r3
4000b2d8:	eaffff52 	b	4000b028 <_tx_thread_schedule>
4000b2dc:	40030e4c 	.word	0x40030e4c
4000b2e0:	40030e54 	.word	0x40030e54
4000b2e4:	40030e70 	.word	0x40030e70
4000b2e8:	40030e58 	.word	0x40030e58
4000b2ec:	40030e80 	.word	0x40030e80

4000b2f0 <_tx_thread_irq_nesting_end>:
4000b2f0:	e1a0300e 	mov	r3, lr
4000b2f4:	e10f0000 	mrs	r0, CPSR
4000b2f8:	e3800080 	orr	r0, r0, #128	; 0x80
4000b2fc:	e12ff000 	msr	CPSR_fsxc, r0
4000b300:	e8bd4002 	pop	{r1, lr}
4000b304:	e3c0001f 	bic	r0, r0, #31
4000b308:	e3800012 	orr	r0, r0, #18
4000b30c:	e12ff000 	msr	CPSR_fsxc, r0
4000b310:	e12fff13 	bx	r3

4000b314 <_tx_thread_irq_nesting_start>:
4000b314:	e1a0300e 	mov	r3, lr
4000b318:	e10f0000 	mrs	r0, CPSR
4000b31c:	e3c0001f 	bic	r0, r0, #31
4000b320:	e380001f 	orr	r0, r0, #31
4000b324:	e12ff000 	msr	CPSR_fsxc, r0
4000b328:	e92d4002 	push	{r1, lr}
4000b32c:	e3c00080 	bic	r0, r0, #128	; 0x80
4000b330:	e12ff000 	msr	CPSR_fsxc, r0
4000b334:	e12fff13 	bx	r3

4000b338 <_tx_initialize_low_level>:
4000b338:	e1a0100d 	mov	r1, sp
4000b33c:	e59f3024 	ldr	r3, [pc, #36]	; 4000b368 <_tx_initialize_low_level+0x30>
4000b340:	e5831000 	str	r1, [r3]
4000b344:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b348:	e3a00000 	mov	r0, #0
4000b34c:	eb005bb8 	bl	40022234 <CyU3POsTimerInit>
4000b350:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000b354:	e12fff1e 	bx	lr
4000b358:	e59f200c 	ldr	r2, [pc, #12]	; 4000b36c <_tx_initialize_low_level+0x34>
4000b35c:	e5920000 	ldr	r0, [r2]
4000b360:	e59f2008 	ldr	r2, [pc, #8]	; 4000b370 <_tx_initialize_low_level+0x38>
4000b364:	e5920000 	ldr	r0, [r2]
4000b368:	40030e50 	.word	0x40030e50
4000b36c:	40030e74 	.word	0x40030e74
4000b370:	40030de8 	.word	0x40030de8

4000b374 <_tx_byte_allocate>:
4000b374:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b378:	e1a04000 	mov	r4, r0
4000b37c:	e1a05001 	mov	r5, r1
4000b380:	e1a06002 	mov	r6, r2
4000b384:	e1a07003 	mov	r7, r3
4000b388:	e3a00000 	mov	r0, #0
4000b38c:	e58d0000 	str	r0, [sp]
4000b390:	e59f027c 	ldr	r0, [pc, #636]	; 4000b614 <_tx_byte_allocate+0x2a0>
4000b394:	e590a000 	ldr	sl, [r0]
4000b398:	e10f8000 	mrs	r8, CPSR
4000b39c:	e3889080 	orr	r9, r8, #128	; 0x80
4000b3a0:	e121f009 	msr	CPSR_c, r9
4000b3a4:	e2860003 	add	r0, r6, #3
4000b3a8:	e1a00120 	lsr	r0, r0, #2
4000b3ac:	e1a06100 	lsl	r6, r0, #2
4000b3b0:	e59f0260 	ldr	r0, [pc, #608]	; 4000b618 <_tx_byte_allocate+0x2a4>
4000b3b4:	e5900000 	ldr	r0, [r0]
4000b3b8:	e58d0004 	str	r0, [sp, #4]
4000b3bc:	e59f1254 	ldr	r1, [pc, #596]	; 4000b618 <_tx_byte_allocate+0x2a4>
4000b3c0:	e5910000 	ldr	r0, [r1]
4000b3c4:	e3500000 	cmp	r0, #0
4000b3c8:	0a000031 	beq	4000b494 <_tx_byte_allocate+0x120>
4000b3cc:	e59f1248 	ldr	r1, [pc, #584]	; 4000b61c <_tx_byte_allocate+0x2a8>
4000b3d0:	e5911000 	ldr	r1, [r1]
4000b3d4:	e2811001 	add	r1, r1, #1
4000b3d8:	e59f223c 	ldr	r2, [pc, #572]	; 4000b61c <_tx_byte_allocate+0x2a8>
4000b3dc:	e5821000 	str	r1, [r2]
4000b3e0:	e580100c 	str	r1, [r0, #12]
4000b3e4:	e59f1234 	ldr	r1, [pc, #564]	; 4000b620 <_tx_byte_allocate+0x2ac>
4000b3e8:	e5911000 	ldr	r1, [r1]
4000b3ec:	e3510000 	cmp	r1, #0
4000b3f0:	1a000006 	bne	4000b410 <_tx_byte_allocate+0x9c>
4000b3f4:	e59f1218 	ldr	r1, [pc, #536]	; 4000b614 <_tx_byte_allocate+0x2a0>
4000b3f8:	e5911000 	ldr	r1, [r1]
4000b3fc:	e5801000 	str	r1, [r0]
4000b400:	e5901000 	ldr	r1, [r0]
4000b404:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b408:	e5801004 	str	r1, [r0, #4]
4000b40c:	ea00000d 	b	4000b448 <_tx_byte_allocate+0xd4>
4000b410:	e59f1208 	ldr	r1, [pc, #520]	; 4000b620 <_tx_byte_allocate+0x2ac>
4000b414:	e5911000 	ldr	r1, [r1]
4000b418:	e59f2204 	ldr	r2, [pc, #516]	; 4000b624 <_tx_byte_allocate+0x2b0>
4000b41c:	e1510002 	cmp	r1, r2
4000b420:	2a000004 	bcs	4000b438 <_tx_byte_allocate+0xc4>
4000b424:	e3e01000 	mvn	r1, #0
4000b428:	e5801000 	str	r1, [r0]
4000b42c:	e3a01000 	mov	r1, #0
4000b430:	e5801004 	str	r1, [r0, #4]
4000b434:	ea000003 	b	4000b448 <_tx_byte_allocate+0xd4>
4000b438:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b624 <_tx_byte_allocate+0x2b0>
4000b43c:	e5801000 	str	r1, [r0]
4000b440:	e3a01000 	mov	r1, #0
4000b444:	e5801004 	str	r1, [r0, #4]
4000b448:	e3a01014 	mov	r1, #20
4000b44c:	e5801008 	str	r1, [r0, #8]
4000b450:	e5804010 	str	r4, [r0, #16]
4000b454:	e3a01000 	mov	r1, #0
4000b458:	e5801014 	str	r1, [r0, #20]
4000b45c:	e5806018 	str	r6, [r0, #24]
4000b460:	e580701c 	str	r7, [r0, #28]
4000b464:	e2800020 	add	r0, r0, #32
4000b468:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b628 <_tx_byte_allocate+0x2b4>
4000b46c:	e5911000 	ldr	r1, [r1]
4000b470:	e1500001 	cmp	r0, r1
4000b474:	3a000001 	bcc	4000b480 <_tx_byte_allocate+0x10c>
4000b478:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b62c <_tx_byte_allocate+0x2b8>
4000b47c:	e5910000 	ldr	r0, [r1]
4000b480:	e59f1190 	ldr	r1, [pc, #400]	; 4000b618 <_tx_byte_allocate+0x2a4>
4000b484:	e5810000 	str	r0, [r1]
4000b488:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b630 <_tx_byte_allocate+0x2bc>
4000b48c:	e5911000 	ldr	r1, [r1]
4000b490:	e5810020 	str	r0, [r1, #32]
4000b494:	e59d0004 	ldr	r0, [sp, #4]
4000b498:	e3500000 	cmp	r0, #0
4000b49c:	0a000002 	beq	4000b4ac <_tx_byte_allocate+0x138>
4000b4a0:	e59d0004 	ldr	r0, [sp, #4]
4000b4a4:	e590000c 	ldr	r0, [r0, #12]
4000b4a8:	e58d0000 	str	r0, [sp]
4000b4ac:	e1a00000 	nop			; (mov r0, r0)
4000b4b0:	e584a020 	str	sl, [r4, #32]
4000b4b4:	e121f008 	msr	CPSR_c, r8
4000b4b8:	e1a01006 	mov	r1, r6
4000b4bc:	e1a00004 	mov	r0, r4
4000b4c0:	eb0001ba 	bl	4000bbb0 <_tx_byte_pool_search>
4000b4c4:	e1a0b000 	mov	fp, r0
4000b4c8:	e10f8000 	mrs	r8, CPSR
4000b4cc:	e3889080 	orr	r9, r8, #128	; 0x80
4000b4d0:	e121f009 	msr	CPSR_c, r9
4000b4d4:	e35b0000 	cmp	fp, #0
4000b4d8:	1a000002 	bne	4000b4e8 <_tx_byte_allocate+0x174>
4000b4dc:	e5940020 	ldr	r0, [r4, #32]
4000b4e0:	e150000a 	cmp	r0, sl
4000b4e4:	1afffff1 	bne	4000b4b0 <_tx_byte_allocate+0x13c>
4000b4e8:	e35b0000 	cmp	fp, #0
4000b4ec:	0a00000e 	beq	4000b52c <_tx_byte_allocate+0x1b8>
4000b4f0:	e585b000 	str	fp, [r5]
4000b4f4:	e59d0004 	ldr	r0, [sp, #4]
4000b4f8:	e3500000 	cmp	r0, #0
4000b4fc:	0a000007 	beq	4000b520 <_tx_byte_allocate+0x1ac>
4000b500:	e59d0004 	ldr	r0, [sp, #4]
4000b504:	e590100c 	ldr	r1, [r0, #12]
4000b508:	e59d0000 	ldr	r0, [sp]
4000b50c:	e1510000 	cmp	r1, r0
4000b510:	1a000002 	bne	4000b520 <_tx_byte_allocate+0x1ac>
4000b514:	e5950000 	ldr	r0, [r5]
4000b518:	e59d1004 	ldr	r1, [sp, #4]
4000b51c:	e5810014 	str	r0, [r1, #20]
4000b520:	e3a00000 	mov	r0, #0
4000b524:	e58d0008 	str	r0, [sp, #8]
4000b528:	ea000036 	b	4000b608 <_tx_byte_allocate+0x294>
4000b52c:	e3570000 	cmp	r7, #0
4000b530:	0a000032 	beq	4000b600 <_tx_byte_allocate+0x28c>
4000b534:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b634 <_tx_byte_allocate+0x2c0>
4000b538:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b53c:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b540:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b544:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b548:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b54c:	e3500000 	cmp	r0, #0
4000b550:	0a00000a 	beq	4000b580 <_tx_byte_allocate+0x20c>
4000b554:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b558:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b55c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b560:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b564:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b568:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b56c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b570:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b574:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b578:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b57c:	ea000002 	b	4000b58c <_tx_byte_allocate+0x218>
4000b580:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b584:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b588:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b58c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b590:	e2800001 	add	r0, r0, #1
4000b594:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b598:	e3a00009 	mov	r0, #9
4000b59c:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b5a0:	e3a00001 	mov	r0, #1
4000b5a4:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b5a8:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b5ac:	e59f0084 	ldr	r0, [pc, #132]	; 4000b638 <_tx_byte_allocate+0x2c4>
4000b5b0:	e5900000 	ldr	r0, [r0]
4000b5b4:	e2800001 	add	r0, r0, #1
4000b5b8:	e59f1078 	ldr	r1, [pc, #120]	; 4000b638 <_tx_byte_allocate+0x2c4>
4000b5bc:	e5810000 	str	r0, [r1]
4000b5c0:	e121f008 	msr	CPSR_c, r8
4000b5c4:	e1a0000a 	mov	r0, sl
4000b5c8:	ebfff671 	bl	40008f94 <_tx_thread_system_suspend>
4000b5cc:	e59d0004 	ldr	r0, [sp, #4]
4000b5d0:	e3500000 	cmp	r0, #0
4000b5d4:	0a000007 	beq	4000b5f8 <_tx_byte_allocate+0x284>
4000b5d8:	e59d0004 	ldr	r0, [sp, #4]
4000b5dc:	e590100c 	ldr	r1, [r0, #12]
4000b5e0:	e59d0000 	ldr	r0, [sp]
4000b5e4:	e1510000 	cmp	r1, r0
4000b5e8:	1a000002 	bne	4000b5f8 <_tx_byte_allocate+0x284>
4000b5ec:	e5950000 	ldr	r0, [r5]
4000b5f0:	e59d1004 	ldr	r1, [sp, #4]
4000b5f4:	e5810014 	str	r0, [r1, #20]
4000b5f8:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b5fc:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b600:	e3a00010 	mov	r0, #16
4000b604:	e58d0008 	str	r0, [sp, #8]
4000b608:	e121f008 	msr	CPSR_c, r8
4000b60c:	e59d0008 	ldr	r0, [sp, #8]
4000b610:	eafffff9 	b	4000b5fc <_tx_byte_allocate+0x288>
4000b614:	40030e54 	.word	0x40030e54
4000b618:	40030ec0 	.word	0x40030ec0
4000b61c:	40030ec4 	.word	0x40030ec4
4000b620:	40030e4c 	.word	0x40030e4c
4000b624:	f0f0f0f0 	.word	0xf0f0f0f0
4000b628:	40030ebc 	.word	0x40030ebc
4000b62c:	40030eb8 	.word	0x40030eb8
4000b630:	40030eac 	.word	0x40030eac
4000b634:	4000b63c 	.word	0x4000b63c
4000b638:	40030e70 	.word	0x40030e70

4000b63c <_tx_byte_pool_cleanup>:
4000b63c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b640:	e1a04000 	mov	r4, r0
4000b644:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b648:	e10f5000 	mrs	r5, CPSR
4000b64c:	e3856080 	orr	r6, r5, #128	; 0x80
4000b650:	e121f006 	msr	CPSR_c, r6
4000b654:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b658:	e3500000 	cmp	r0, #0
4000b65c:	0a000026 	beq	4000b6fc <_tx_byte_pool_cleanup+0xc0>
4000b660:	e3570000 	cmp	r7, #0
4000b664:	0a000024 	beq	4000b6fc <_tx_byte_pool_cleanup+0xc0>
4000b668:	e5970000 	ldr	r0, [r7]
4000b66c:	e59f1090 	ldr	r1, [pc, #144]	; 4000b704 <_tx_byte_pool_cleanup+0xc8>
4000b670:	e1500001 	cmp	r0, r1
4000b674:	1a000020 	bne	4000b6fc <_tx_byte_pool_cleanup+0xc0>
4000b678:	e3a00000 	mov	r0, #0
4000b67c:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b680:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b684:	e1500004 	cmp	r0, r4
4000b688:	1a000002 	bne	4000b698 <_tx_byte_pool_cleanup+0x5c>
4000b68c:	e3a00000 	mov	r0, #0
4000b690:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b694:	ea000007 	b	4000b6b8 <_tx_byte_pool_cleanup+0x7c>
4000b698:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b69c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b6a0:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b6a4:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b6a8:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b6ac:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b6b0:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b6b4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b6b8:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b6bc:	e2400001 	sub	r0, r0, #1
4000b6c0:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b6c4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b6c8:	e3500009 	cmp	r0, #9
4000b6cc:	1a00000a 	bne	4000b6fc <_tx_byte_pool_cleanup+0xc0>
4000b6d0:	e3a00010 	mov	r0, #16
4000b6d4:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b6d8:	e59f0028 	ldr	r0, [pc, #40]	; 4000b708 <_tx_byte_pool_cleanup+0xcc>
4000b6dc:	e5900000 	ldr	r0, [r0]
4000b6e0:	e2800001 	add	r0, r0, #1
4000b6e4:	e59f101c 	ldr	r1, [pc, #28]	; 4000b708 <_tx_byte_pool_cleanup+0xcc>
4000b6e8:	e5810000 	str	r0, [r1]
4000b6ec:	e121f005 	msr	CPSR_c, r5
4000b6f0:	e1a00004 	mov	r0, r4
4000b6f4:	eb000fcd 	bl	4000f630 <_tx_thread_system_resume>
4000b6f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b6fc:	e121f005 	msr	CPSR_c, r5
4000b700:	eafffffc 	b	4000b6f8 <_tx_byte_pool_cleanup+0xbc>
4000b704:	42595445 	.word	0x42595445
4000b708:	40030e70 	.word	0x40030e70

4000b70c <_tx_byte_pool_create>:
4000b70c:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b710:	e1a04000 	mov	r4, r0
4000b714:	e1a05001 	mov	r5, r1
4000b718:	e1a06002 	mov	r6, r2
4000b71c:	e1a07003 	mov	r7, r3
4000b720:	e3a01034 	mov	r1, #52	; 0x34
4000b724:	e1a00004 	mov	r0, r4
4000b728:	eb0020b4 	bl	40013a00 <__aeabi_memclr4>
4000b72c:	e1a00127 	lsr	r0, r7, #2
4000b730:	e1a07100 	lsl	r7, r0, #2
4000b734:	e5845004 	str	r5, [r4, #4]
4000b738:	e5846018 	str	r6, [r4, #24]
4000b73c:	e584701c 	str	r7, [r4, #28]
4000b740:	e5846010 	str	r6, [r4, #16]
4000b744:	e5846014 	str	r6, [r4, #20]
4000b748:	e2470008 	sub	r0, r7, #8
4000b74c:	e5840008 	str	r0, [r4, #8]
4000b750:	e3a00002 	mov	r0, #2
4000b754:	e584000c 	str	r0, [r4, #12]
4000b758:	e0860007 	add	r0, r6, r7
4000b75c:	e58d0004 	str	r0, [sp, #4]
4000b760:	e59d0004 	ldr	r0, [sp, #4]
4000b764:	e2400004 	sub	r0, r0, #4
4000b768:	e58d0004 	str	r0, [sp, #4]
4000b76c:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b930 <_tx_byte_pool_create+0x224>
4000b770:	e59d1004 	ldr	r1, [sp, #4]
4000b774:	e5810000 	str	r0, [r1]
4000b778:	e59d0004 	ldr	r0, [sp, #4]
4000b77c:	e2400004 	sub	r0, r0, #4
4000b780:	e58d0004 	str	r0, [sp, #4]
4000b784:	e59d0004 	ldr	r0, [sp, #4]
4000b788:	e5806000 	str	r6, [r0]
4000b78c:	e59d0004 	ldr	r0, [sp, #4]
4000b790:	e5860000 	str	r0, [r6]
4000b794:	e58d6004 	str	r6, [sp, #4]
4000b798:	e59d0004 	ldr	r0, [sp, #4]
4000b79c:	e2800004 	add	r0, r0, #4
4000b7a0:	e58d0004 	str	r0, [sp, #4]
4000b7a4:	e59f0188 	ldr	r0, [pc, #392]	; 4000b934 <_tx_byte_pool_create+0x228>
4000b7a8:	e59d1004 	ldr	r1, [sp, #4]
4000b7ac:	e5810000 	str	r0, [r1]
4000b7b0:	e3a00000 	mov	r0, #0
4000b7b4:	e5840020 	str	r0, [r4, #32]
4000b7b8:	e10f8000 	mrs	r8, CPSR
4000b7bc:	e3889080 	orr	r9, r8, #128	; 0x80
4000b7c0:	e121f009 	msr	CPSR_c, r9
4000b7c4:	e59f016c 	ldr	r0, [pc, #364]	; 4000b938 <_tx_byte_pool_create+0x22c>
4000b7c8:	e5840000 	str	r0, [r4]
4000b7cc:	e59f0168 	ldr	r0, [pc, #360]	; 4000b93c <_tx_byte_pool_create+0x230>
4000b7d0:	e5900000 	ldr	r0, [r0]
4000b7d4:	e3500000 	cmp	r0, #0
4000b7d8:	0a00000b 	beq	4000b80c <_tx_byte_pool_create+0x100>
4000b7dc:	e59f0158 	ldr	r0, [pc, #344]	; 4000b93c <_tx_byte_pool_create+0x230>
4000b7e0:	e5900000 	ldr	r0, [r0]
4000b7e4:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b7e8:	e59f014c 	ldr	r0, [pc, #332]	; 4000b93c <_tx_byte_pool_create+0x230>
4000b7ec:	e5900000 	ldr	r0, [r0]
4000b7f0:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b7f4:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b7f8:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b7fc:	e59f0138 	ldr	r0, [pc, #312]	; 4000b93c <_tx_byte_pool_create+0x230>
4000b800:	e5900000 	ldr	r0, [r0]
4000b804:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b808:	ea000003 	b	4000b81c <_tx_byte_pool_create+0x110>
4000b80c:	e59f0128 	ldr	r0, [pc, #296]	; 4000b93c <_tx_byte_pool_create+0x230>
4000b810:	e5804000 	str	r4, [r0]
4000b814:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b818:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b81c:	e59f011c 	ldr	r0, [pc, #284]	; 4000b940 <_tx_byte_pool_create+0x234>
4000b820:	e5900000 	ldr	r0, [r0]
4000b824:	e2800001 	add	r0, r0, #1
4000b828:	e59f1110 	ldr	r1, [pc, #272]	; 4000b940 <_tx_byte_pool_create+0x234>
4000b82c:	e5810000 	str	r0, [r1]
4000b830:	e3a03000 	mov	r3, #0
4000b834:	e58d3000 	str	r3, [sp]
4000b838:	e1a03007 	mov	r3, r7
4000b83c:	e1a02005 	mov	r2, r5
4000b840:	e1a01004 	mov	r1, r4
4000b844:	e3a00008 	mov	r0, #8
4000b848:	eb0012ce 	bl	40010388 <_tx_trace_object_register>
4000b84c:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b944 <_tx_byte_pool_create+0x238>
4000b850:	e5910000 	ldr	r0, [r1]
4000b854:	e3500000 	cmp	r0, #0
4000b858:	0a000031 	beq	4000b924 <_tx_byte_pool_create+0x218>
4000b85c:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b948 <_tx_byte_pool_create+0x23c>
4000b860:	e5911000 	ldr	r1, [r1]
4000b864:	e2811001 	add	r1, r1, #1
4000b868:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b948 <_tx_byte_pool_create+0x23c>
4000b86c:	e5821000 	str	r1, [r2]
4000b870:	e580100c 	str	r1, [r0, #12]
4000b874:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b94c <_tx_byte_pool_create+0x240>
4000b878:	e5911000 	ldr	r1, [r1]
4000b87c:	e3510000 	cmp	r1, #0
4000b880:	1a000006 	bne	4000b8a0 <_tx_byte_pool_create+0x194>
4000b884:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b950 <_tx_byte_pool_create+0x244>
4000b888:	e5911000 	ldr	r1, [r1]
4000b88c:	e5801000 	str	r1, [r0]
4000b890:	e5901000 	ldr	r1, [r0]
4000b894:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b898:	e5801004 	str	r1, [r0, #4]
4000b89c:	ea00000d 	b	4000b8d8 <_tx_byte_pool_create+0x1cc>
4000b8a0:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b94c <_tx_byte_pool_create+0x240>
4000b8a4:	e5911000 	ldr	r1, [r1]
4000b8a8:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b954 <_tx_byte_pool_create+0x248>
4000b8ac:	e1510002 	cmp	r1, r2
4000b8b0:	2a000004 	bcs	4000b8c8 <_tx_byte_pool_create+0x1bc>
4000b8b4:	e3e01000 	mvn	r1, #0
4000b8b8:	e5801000 	str	r1, [r0]
4000b8bc:	e3a01000 	mov	r1, #0
4000b8c0:	e5801004 	str	r1, [r0, #4]
4000b8c4:	ea000003 	b	4000b8d8 <_tx_byte_pool_create+0x1cc>
4000b8c8:	e59f1084 	ldr	r1, [pc, #132]	; 4000b954 <_tx_byte_pool_create+0x248>
4000b8cc:	e5801000 	str	r1, [r0]
4000b8d0:	e3a01000 	mov	r1, #0
4000b8d4:	e5801004 	str	r1, [r0, #4]
4000b8d8:	e3a01015 	mov	r1, #21
4000b8dc:	e5801008 	str	r1, [r0, #8]
4000b8e0:	e5804010 	str	r4, [r0, #16]
4000b8e4:	e5806014 	str	r6, [r0, #20]
4000b8e8:	e5807018 	str	r7, [r0, #24]
4000b8ec:	e28d1004 	add	r1, sp, #4
4000b8f0:	e580101c 	str	r1, [r0, #28]
4000b8f4:	e2800020 	add	r0, r0, #32
4000b8f8:	e59f1058 	ldr	r1, [pc, #88]	; 4000b958 <_tx_byte_pool_create+0x24c>
4000b8fc:	e5911000 	ldr	r1, [r1]
4000b900:	e1500001 	cmp	r0, r1
4000b904:	3a000001 	bcc	4000b910 <_tx_byte_pool_create+0x204>
4000b908:	e59f104c 	ldr	r1, [pc, #76]	; 4000b95c <_tx_byte_pool_create+0x250>
4000b90c:	e5910000 	ldr	r0, [r1]
4000b910:	e59f102c 	ldr	r1, [pc, #44]	; 4000b944 <_tx_byte_pool_create+0x238>
4000b914:	e5810000 	str	r0, [r1]
4000b918:	e59f1040 	ldr	r1, [pc, #64]	; 4000b960 <_tx_byte_pool_create+0x254>
4000b91c:	e5911000 	ldr	r1, [r1]
4000b920:	e5810020 	str	r0, [r1, #32]
4000b924:	e121f008 	msr	CPSR_c, r8
4000b928:	e3a00000 	mov	r0, #0
4000b92c:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b930:	aaaaaaaa 	.word	0xaaaaaaaa
4000b934:	ffffeeee 	.word	0xffffeeee
4000b938:	42595445 	.word	0x42595445
4000b93c:	40030ef0 	.word	0x40030ef0
4000b940:	40030ef4 	.word	0x40030ef4
4000b944:	40030ec0 	.word	0x40030ec0
4000b948:	40030ec4 	.word	0x40030ec4
4000b94c:	40030e4c 	.word	0x40030e4c
4000b950:	40030e54 	.word	0x40030e54
4000b954:	f0f0f0f0 	.word	0xf0f0f0f0
4000b958:	40030ebc 	.word	0x40030ebc
4000b95c:	40030eb8 	.word	0x40030eb8
4000b960:	40030eac 	.word	0x40030eac

4000b964 <_tx_byte_pool_delete>:
4000b964:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b968:	e1a04000 	mov	r4, r0
4000b96c:	e10f5000 	mrs	r5, CPSR
4000b970:	e3856080 	orr	r6, r5, #128	; 0x80
4000b974:	e121f006 	msr	CPSR_c, r6
4000b978:	e59f1204 	ldr	r1, [pc, #516]	; 4000bb84 <_tx_byte_pool_delete+0x220>
4000b97c:	e5910000 	ldr	r0, [r1]
4000b980:	e3500000 	cmp	r0, #0
4000b984:	0a000031 	beq	4000ba50 <_tx_byte_pool_delete+0xec>
4000b988:	e59f11f8 	ldr	r1, [pc, #504]	; 4000bb88 <_tx_byte_pool_delete+0x224>
4000b98c:	e5911000 	ldr	r1, [r1]
4000b990:	e2811001 	add	r1, r1, #1
4000b994:	e59f21ec 	ldr	r2, [pc, #492]	; 4000bb88 <_tx_byte_pool_delete+0x224>
4000b998:	e5821000 	str	r1, [r2]
4000b99c:	e580100c 	str	r1, [r0, #12]
4000b9a0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000bb8c <_tx_byte_pool_delete+0x228>
4000b9a4:	e5911000 	ldr	r1, [r1]
4000b9a8:	e3510000 	cmp	r1, #0
4000b9ac:	1a000006 	bne	4000b9cc <_tx_byte_pool_delete+0x68>
4000b9b0:	e59f11d8 	ldr	r1, [pc, #472]	; 4000bb90 <_tx_byte_pool_delete+0x22c>
4000b9b4:	e5911000 	ldr	r1, [r1]
4000b9b8:	e5801000 	str	r1, [r0]
4000b9bc:	e5901000 	ldr	r1, [r0]
4000b9c0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b9c4:	e5801004 	str	r1, [r0, #4]
4000b9c8:	ea00000d 	b	4000ba04 <_tx_byte_pool_delete+0xa0>
4000b9cc:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bb8c <_tx_byte_pool_delete+0x228>
4000b9d0:	e5911000 	ldr	r1, [r1]
4000b9d4:	e59f21b8 	ldr	r2, [pc, #440]	; 4000bb94 <_tx_byte_pool_delete+0x230>
4000b9d8:	e1510002 	cmp	r1, r2
4000b9dc:	2a000004 	bcs	4000b9f4 <_tx_byte_pool_delete+0x90>
4000b9e0:	e3e01000 	mvn	r1, #0
4000b9e4:	e5801000 	str	r1, [r0]
4000b9e8:	e3a01000 	mov	r1, #0
4000b9ec:	e5801004 	str	r1, [r0, #4]
4000b9f0:	ea000003 	b	4000ba04 <_tx_byte_pool_delete+0xa0>
4000b9f4:	e59f1198 	ldr	r1, [pc, #408]	; 4000bb94 <_tx_byte_pool_delete+0x230>
4000b9f8:	e5801000 	str	r1, [r0]
4000b9fc:	e3a01000 	mov	r1, #0
4000ba00:	e5801004 	str	r1, [r0, #4]
4000ba04:	e3a01016 	mov	r1, #22
4000ba08:	e5801008 	str	r1, [r0, #8]
4000ba0c:	e5804010 	str	r4, [r0, #16]
4000ba10:	e580d014 	str	sp, [r0, #20]
4000ba14:	e3a01000 	mov	r1, #0
4000ba18:	e5801018 	str	r1, [r0, #24]
4000ba1c:	e580101c 	str	r1, [r0, #28]
4000ba20:	e2800020 	add	r0, r0, #32
4000ba24:	e59f116c 	ldr	r1, [pc, #364]	; 4000bb98 <_tx_byte_pool_delete+0x234>
4000ba28:	e5911000 	ldr	r1, [r1]
4000ba2c:	e1500001 	cmp	r0, r1
4000ba30:	3a000001 	bcc	4000ba3c <_tx_byte_pool_delete+0xd8>
4000ba34:	e59f1160 	ldr	r1, [pc, #352]	; 4000bb9c <_tx_byte_pool_delete+0x238>
4000ba38:	e5910000 	ldr	r0, [r1]
4000ba3c:	e59f1140 	ldr	r1, [pc, #320]	; 4000bb84 <_tx_byte_pool_delete+0x220>
4000ba40:	e5810000 	str	r0, [r1]
4000ba44:	e59f1154 	ldr	r1, [pc, #340]	; 4000bba0 <_tx_byte_pool_delete+0x23c>
4000ba48:	e5911000 	ldr	r1, [r1]
4000ba4c:	e5810020 	str	r0, [r1, #32]
4000ba50:	e1a00004 	mov	r0, r4
4000ba54:	eb0012b6 	bl	40010534 <_tx_trace_object_unregister>
4000ba58:	e59f0144 	ldr	r0, [pc, #324]	; 4000bba4 <_tx_byte_pool_delete+0x240>
4000ba5c:	e5900000 	ldr	r0, [r0]
4000ba60:	e2400001 	sub	r0, r0, #1
4000ba64:	e59f1138 	ldr	r1, [pc, #312]	; 4000bba4 <_tx_byte_pool_delete+0x240>
4000ba68:	e5810000 	str	r0, [r1]
4000ba6c:	e3a00000 	mov	r0, #0
4000ba70:	e5840000 	str	r0, [r4]
4000ba74:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000ba78:	e1500004 	cmp	r0, r4
4000ba7c:	1a000003 	bne	4000ba90 <_tx_byte_pool_delete+0x12c>
4000ba80:	e3a00000 	mov	r0, #0
4000ba84:	e59f111c 	ldr	r1, [pc, #284]	; 4000bba8 <_tx_byte_pool_delete+0x244>
4000ba88:	e5810000 	str	r0, [r1]
4000ba8c:	ea00000c 	b	4000bac4 <_tx_byte_pool_delete+0x160>
4000ba90:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ba94:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ba98:	e5810030 	str	r0, [r1, #48]	; 0x30
4000ba9c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000baa0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000baa4:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000baa8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bba8 <_tx_byte_pool_delete+0x244>
4000baac:	e5900000 	ldr	r0, [r0]
4000bab0:	e1500004 	cmp	r0, r4
4000bab4:	1a000002 	bne	4000bac4 <_tx_byte_pool_delete+0x160>
4000bab8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000bba8 <_tx_byte_pool_delete+0x244>
4000babc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000bac0:	e5810000 	str	r0, [r1]
4000bac4:	e59f00e0 	ldr	r0, [pc, #224]	; 4000bbac <_tx_byte_pool_delete+0x248>
4000bac8:	e5900000 	ldr	r0, [r0]
4000bacc:	e2800001 	add	r0, r0, #1
4000bad0:	e59f10d4 	ldr	r1, [pc, #212]	; 4000bbac <_tx_byte_pool_delete+0x248>
4000bad4:	e5810000 	str	r0, [r1]
4000bad8:	e121f005 	msr	CPSR_c, r5
4000badc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000bae0:	e58d0000 	str	r0, [sp]
4000bae4:	ea000017 	b	4000bb48 <_tx_byte_pool_delete+0x1e4>
4000bae8:	e10f5000 	mrs	r5, CPSR
4000baec:	e3856080 	orr	r6, r5, #128	; 0x80
4000baf0:	e121f006 	msr	CPSR_c, r6
4000baf4:	e3a00000 	mov	r0, #0
4000baf8:	e59d1000 	ldr	r1, [sp]
4000bafc:	e5810068 	str	r0, [r1, #104]	; 0x68
4000bb00:	e59f00a4 	ldr	r0, [pc, #164]	; 4000bbac <_tx_byte_pool_delete+0x248>
4000bb04:	e5900000 	ldr	r0, [r0]
4000bb08:	e2800001 	add	r0, r0, #1
4000bb0c:	e59f1098 	ldr	r1, [pc, #152]	; 4000bbac <_tx_byte_pool_delete+0x248>
4000bb10:	e5810000 	str	r0, [r1]
4000bb14:	e121f005 	msr	CPSR_c, r5
4000bb18:	e3a00001 	mov	r0, #1
4000bb1c:	e59d1000 	ldr	r1, [sp]
4000bb20:	e5810084 	str	r0, [r1, #132]	; 0x84
4000bb24:	e59d0000 	ldr	r0, [sp]
4000bb28:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000bb2c:	e58d0000 	str	r0, [sp]
4000bb30:	e59d1000 	ldr	r1, [sp]
4000bb34:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000bb38:	eb000ebc 	bl	4000f630 <_tx_thread_system_resume>
4000bb3c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000bb40:	e2400001 	sub	r0, r0, #1
4000bb44:	e5840028 	str	r0, [r4, #40]	; 0x28
4000bb48:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000bb4c:	e3500000 	cmp	r0, #0
4000bb50:	1affffe4 	bne	4000bae8 <_tx_byte_pool_delete+0x184>
4000bb54:	e10f5000 	mrs	r5, CPSR
4000bb58:	e3856080 	orr	r6, r5, #128	; 0x80
4000bb5c:	e121f006 	msr	CPSR_c, r6
4000bb60:	e59f0044 	ldr	r0, [pc, #68]	; 4000bbac <_tx_byte_pool_delete+0x248>
4000bb64:	e5900000 	ldr	r0, [r0]
4000bb68:	e2400001 	sub	r0, r0, #1
4000bb6c:	e59f1038 	ldr	r1, [pc, #56]	; 4000bbac <_tx_byte_pool_delete+0x248>
4000bb70:	e5810000 	str	r0, [r1]
4000bb74:	e121f005 	msr	CPSR_c, r5
4000bb78:	eb000e80 	bl	4000f580 <_tx_thread_system_preempt_check>
4000bb7c:	e3a00000 	mov	r0, #0
4000bb80:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000bb84:	40030ec0 	.word	0x40030ec0
4000bb88:	40030ec4 	.word	0x40030ec4
4000bb8c:	40030e4c 	.word	0x40030e4c
4000bb90:	40030e54 	.word	0x40030e54
4000bb94:	f0f0f0f0 	.word	0xf0f0f0f0
4000bb98:	40030ebc 	.word	0x40030ebc
4000bb9c:	40030eb8 	.word	0x40030eb8
4000bba0:	40030eac 	.word	0x40030eac
4000bba4:	40030ef4 	.word	0x40030ef4
4000bba8:	40030ef0 	.word	0x40030ef0
4000bbac:	40030e70 	.word	0x40030e70

4000bbb0 <_tx_byte_pool_search>:
4000bbb0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000bbb4:	e1a02000 	mov	r2, r0
4000bbb8:	e3a08000 	mov	r8, #0
4000bbbc:	e10f3000 	mrs	r3, CPSR
4000bbc0:	e383c080 	orr	ip, r3, #128	; 0x80
4000bbc4:	e121f00c 	msr	CPSR_c, ip
4000bbc8:	e5920008 	ldr	r0, [r2, #8]
4000bbcc:	e1500001 	cmp	r0, r1
4000bbd0:	8a000002 	bhi	4000bbe0 <_tx_byte_pool_search+0x30>
4000bbd4:	e121f003 	msr	CPSR_c, r3
4000bbd8:	e3a00000 	mov	r0, #0
4000bbdc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000bbe0:	e5925014 	ldr	r5, [r2, #20]
4000bbe4:	e1a0e005 	mov	lr, r5
4000bbe8:	e592000c 	ldr	r0, [r2, #12]
4000bbec:	e2807001 	add	r7, r0, #1
4000bbf0:	e3a06000 	mov	r6, #0
4000bbf4:	e1a00000 	nop			; (mov r0, r0)
4000bbf8:	e59e0004 	ldr	r0, [lr, #4]
4000bbfc:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000bc00:	e29aa012 	adds	sl, sl, #18
4000bc04:	1a000020 	bne	4000bc8c <_tx_byte_pool_search+0xdc>
4000bc08:	e3580000 	cmp	r8, #0
4000bc0c:	1a000004 	bne	4000bc24 <_tx_byte_pool_search+0x74>
4000bc10:	e5920014 	ldr	r0, [r2, #20]
4000bc14:	e1500005 	cmp	r0, r5
4000bc18:	1a000000 	bne	4000bc20 <_tx_byte_pool_search+0x70>
4000bc1c:	e582e014 	str	lr, [r2, #20]
4000bc20:	e3a08001 	mov	r8, #1
4000bc24:	e59e4000 	ldr	r4, [lr]
4000bc28:	e044000e 	sub	r0, r4, lr
4000bc2c:	e2406008 	sub	r6, r0, #8
4000bc30:	e1560001 	cmp	r6, r1
4000bc34:	3a000000 	bcc	4000bc3c <_tx_byte_pool_search+0x8c>
4000bc38:	ea000026 	b	4000bcd8 <_tx_byte_pool_search+0x128>
4000bc3c:	e3a06000 	mov	r6, #0
4000bc40:	e5940004 	ldr	r0, [r4, #4]
4000bc44:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000bc48:	e29aa012 	adds	sl, sl, #18
4000bc4c:	1a000009 	bne	4000bc78 <_tx_byte_pool_search+0xc8>
4000bc50:	e5940000 	ldr	r0, [r4]
4000bc54:	e58e0000 	str	r0, [lr]
4000bc58:	e592000c 	ldr	r0, [r2, #12]
4000bc5c:	e2400001 	sub	r0, r0, #1
4000bc60:	e582000c 	str	r0, [r2, #12]
4000bc64:	e5920014 	ldr	r0, [r2, #20]
4000bc68:	e1500004 	cmp	r0, r4
4000bc6c:	1a000007 	bne	4000bc90 <_tx_byte_pool_search+0xe0>
4000bc70:	e582e014 	str	lr, [r2, #20]
4000bc74:	ea000005 	b	4000bc90 <_tx_byte_pool_search+0xe0>
4000bc78:	e594e000 	ldr	lr, [r4]
4000bc7c:	e3570000 	cmp	r7, #0
4000bc80:	0a000002 	beq	4000bc90 <_tx_byte_pool_search+0xe0>
4000bc84:	e2477001 	sub	r7, r7, #1
4000bc88:	ea000000 	b	4000bc90 <_tx_byte_pool_search+0xe0>
4000bc8c:	e59ee000 	ldr	lr, [lr]
4000bc90:	e3570000 	cmp	r7, #0
4000bc94:	0a000000 	beq	4000bc9c <_tx_byte_pool_search+0xec>
4000bc98:	e2477001 	sub	r7, r7, #1
4000bc9c:	e121f003 	msr	CPSR_c, r3
4000bca0:	e10f3000 	mrs	r3, CPSR
4000bca4:	e383c080 	orr	ip, r3, #128	; 0x80
4000bca8:	e121f00c 	msr	CPSR_c, ip
4000bcac:	e59f00ac 	ldr	r0, [pc, #172]	; 4000bd60 <_tx_byte_pool_search+0x1b0>
4000bcb0:	e5909000 	ldr	r9, [r0]
4000bcb4:	e5920020 	ldr	r0, [r2, #32]
4000bcb8:	e1500009 	cmp	r0, r9
4000bcbc:	0a000003 	beq	4000bcd0 <_tx_byte_pool_search+0x120>
4000bcc0:	e592e014 	ldr	lr, [r2, #20]
4000bcc4:	e592000c 	ldr	r0, [r2, #12]
4000bcc8:	e2807001 	add	r7, r0, #1
4000bccc:	e5829020 	str	r9, [r2, #32]
4000bcd0:	e3570000 	cmp	r7, #0
4000bcd4:	1affffc7 	bne	4000bbf8 <_tx_byte_pool_search+0x48>
4000bcd8:	e1a00000 	nop			; (mov r0, r0)
4000bcdc:	e3560000 	cmp	r6, #0
4000bce0:	0a00001a 	beq	4000bd50 <_tx_byte_pool_search+0x1a0>
4000bce4:	e0460001 	sub	r0, r6, r1
4000bce8:	e3500014 	cmp	r0, #20
4000bcec:	3a00000a 	bcc	4000bd1c <_tx_byte_pool_search+0x16c>
4000bcf0:	e08e0001 	add	r0, lr, r1
4000bcf4:	e2804008 	add	r4, r0, #8
4000bcf8:	e59e0000 	ldr	r0, [lr]
4000bcfc:	e5840000 	str	r0, [r4]
4000bd00:	e59f005c 	ldr	r0, [pc, #92]	; 4000bd64 <_tx_byte_pool_search+0x1b4>
4000bd04:	e5840004 	str	r0, [r4, #4]
4000bd08:	e592000c 	ldr	r0, [r2, #12]
4000bd0c:	e2800001 	add	r0, r0, #1
4000bd10:	e582000c 	str	r0, [r2, #12]
4000bd14:	e58e4000 	str	r4, [lr]
4000bd18:	e1a06001 	mov	r6, r1
4000bd1c:	e58e2004 	str	r2, [lr, #4]
4000bd20:	e5920008 	ldr	r0, [r2, #8]
4000bd24:	e0400006 	sub	r0, r0, r6
4000bd28:	e2400008 	sub	r0, r0, #8
4000bd2c:	e5820008 	str	r0, [r2, #8]
4000bd30:	e5920014 	ldr	r0, [r2, #20]
4000bd34:	e150000e 	cmp	r0, lr
4000bd38:	1a000001 	bne	4000bd44 <_tx_byte_pool_search+0x194>
4000bd3c:	e59e0000 	ldr	r0, [lr]
4000bd40:	e5820014 	str	r0, [r2, #20]
4000bd44:	e121f003 	msr	CPSR_c, r3
4000bd48:	e28ee008 	add	lr, lr, #8
4000bd4c:	ea000001 	b	4000bd58 <_tx_byte_pool_search+0x1a8>
4000bd50:	e121f003 	msr	CPSR_c, r3
4000bd54:	e3a0e000 	mov	lr, #0
4000bd58:	e1a0000e 	mov	r0, lr
4000bd5c:	eaffff9e 	b	4000bbdc <_tx_byte_pool_search+0x2c>
4000bd60:	40030e54 	.word	0x40030e54
4000bd64:	ffffeeee 	.word	0xffffeeee

4000bd68 <_tx_byte_release>:
4000bd68:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000bd6c:	e1a04000 	mov	r4, r0
4000bd70:	e1a09004 	mov	r9, r4
4000bd74:	e1b04009 	movs	r4, r9
4000bd78:	0a00000f 	beq	4000bdbc <_tx_byte_release+0x54>
4000bd7c:	e2499008 	sub	r9, r9, #8
4000bd80:	e5990004 	ldr	r0, [r9, #4]
4000bd84:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000bd88:	e2911012 	adds	r1, r1, #18
4000bd8c:	0a000008 	beq	4000bdb4 <_tx_byte_release+0x4c>
4000bd90:	e5997004 	ldr	r7, [r9, #4]
4000bd94:	e3570000 	cmp	r7, #0
4000bd98:	0a000003 	beq	4000bdac <_tx_byte_release+0x44>
4000bd9c:	e5970000 	ldr	r0, [r7]
4000bda0:	e59f125c 	ldr	r1, [pc, #604]	; 4000c004 <_tx_byte_release+0x29c>
4000bda4:	e1500001 	cmp	r0, r1
4000bda8:	0a000005 	beq	4000bdc4 <_tx_byte_release+0x5c>
4000bdac:	e3a00003 	mov	r0, #3
4000bdb0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000bdb4:	e3a00003 	mov	r0, #3
4000bdb8:	eafffffc 	b	4000bdb0 <_tx_byte_release+0x48>
4000bdbc:	e3a00003 	mov	r0, #3
4000bdc0:	eafffffa 	b	4000bdb0 <_tx_byte_release+0x48>
4000bdc4:	e59f023c 	ldr	r0, [pc, #572]	; 4000c008 <_tx_byte_release+0x2a0>
4000bdc8:	e5908000 	ldr	r8, [r0]
4000bdcc:	e5878020 	str	r8, [r7, #32]
4000bdd0:	e10f5000 	mrs	r5, CPSR
4000bdd4:	e3856080 	orr	r6, r5, #128	; 0x80
4000bdd8:	e121f006 	msr	CPSR_c, r6
4000bddc:	e59f1228 	ldr	r1, [pc, #552]	; 4000c00c <_tx_byte_release+0x2a4>
4000bde0:	e5910000 	ldr	r0, [r1]
4000bde4:	e3500000 	cmp	r0, #0
4000bde8:	0a000032 	beq	4000beb8 <_tx_byte_release+0x150>
4000bdec:	e59f121c 	ldr	r1, [pc, #540]	; 4000c010 <_tx_byte_release+0x2a8>
4000bdf0:	e5911000 	ldr	r1, [r1]
4000bdf4:	e2811001 	add	r1, r1, #1
4000bdf8:	e59f2210 	ldr	r2, [pc, #528]	; 4000c010 <_tx_byte_release+0x2a8>
4000bdfc:	e5821000 	str	r1, [r2]
4000be00:	e580100c 	str	r1, [r0, #12]
4000be04:	e59f1208 	ldr	r1, [pc, #520]	; 4000c014 <_tx_byte_release+0x2ac>
4000be08:	e5911000 	ldr	r1, [r1]
4000be0c:	e3510000 	cmp	r1, #0
4000be10:	1a000006 	bne	4000be30 <_tx_byte_release+0xc8>
4000be14:	e59f11ec 	ldr	r1, [pc, #492]	; 4000c008 <_tx_byte_release+0x2a0>
4000be18:	e5911000 	ldr	r1, [r1]
4000be1c:	e5801000 	str	r1, [r0]
4000be20:	e5901000 	ldr	r1, [r0]
4000be24:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000be28:	e5801004 	str	r1, [r0, #4]
4000be2c:	ea00000d 	b	4000be68 <_tx_byte_release+0x100>
4000be30:	e59f11dc 	ldr	r1, [pc, #476]	; 4000c014 <_tx_byte_release+0x2ac>
4000be34:	e5911000 	ldr	r1, [r1]
4000be38:	e59f21d8 	ldr	r2, [pc, #472]	; 4000c018 <_tx_byte_release+0x2b0>
4000be3c:	e1510002 	cmp	r1, r2
4000be40:	2a000004 	bcs	4000be58 <_tx_byte_release+0xf0>
4000be44:	e3e01000 	mvn	r1, #0
4000be48:	e5801000 	str	r1, [r0]
4000be4c:	e3a01000 	mov	r1, #0
4000be50:	e5801004 	str	r1, [r0, #4]
4000be54:	ea000003 	b	4000be68 <_tx_byte_release+0x100>
4000be58:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c018 <_tx_byte_release+0x2b0>
4000be5c:	e5801000 	str	r1, [r0]
4000be60:	e3a01000 	mov	r1, #0
4000be64:	e5801004 	str	r1, [r0, #4]
4000be68:	e3a0101b 	mov	r1, #27
4000be6c:	e5801008 	str	r1, [r0, #8]
4000be70:	e5807010 	str	r7, [r0, #16]
4000be74:	e5804014 	str	r4, [r0, #20]
4000be78:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000be7c:	e5801018 	str	r1, [r0, #24]
4000be80:	e5971008 	ldr	r1, [r7, #8]
4000be84:	e580101c 	str	r1, [r0, #28]
4000be88:	e2800020 	add	r0, r0, #32
4000be8c:	e59f1188 	ldr	r1, [pc, #392]	; 4000c01c <_tx_byte_release+0x2b4>
4000be90:	e5911000 	ldr	r1, [r1]
4000be94:	e1500001 	cmp	r0, r1
4000be98:	3a000001 	bcc	4000bea4 <_tx_byte_release+0x13c>
4000be9c:	e59f117c 	ldr	r1, [pc, #380]	; 4000c020 <_tx_byte_release+0x2b8>
4000bea0:	e5910000 	ldr	r0, [r1]
4000bea4:	e59f1160 	ldr	r1, [pc, #352]	; 4000c00c <_tx_byte_release+0x2a4>
4000bea8:	e5810000 	str	r0, [r1]
4000beac:	e59f1170 	ldr	r1, [pc, #368]	; 4000c024 <_tx_byte_release+0x2bc>
4000beb0:	e5911000 	ldr	r1, [r1]
4000beb4:	e5810020 	str	r0, [r1, #32]
4000beb8:	e59f0168 	ldr	r0, [pc, #360]	; 4000c028 <_tx_byte_release+0x2c0>
4000bebc:	e5890004 	str	r0, [r9, #4]
4000bec0:	e5970008 	ldr	r0, [r7, #8]
4000bec4:	e5991000 	ldr	r1, [r9]
4000bec8:	e0411009 	sub	r1, r1, r9
4000becc:	e0800001 	add	r0, r0, r1
4000bed0:	e5870008 	str	r0, [r7, #8]
4000bed4:	e5970014 	ldr	r0, [r7, #20]
4000bed8:	e1500009 	cmp	r0, r9
4000bedc:	9a000000 	bls	4000bee4 <_tx_byte_release+0x17c>
4000bee0:	e5879014 	str	r9, [r7, #20]
4000bee4:	ea00003e 	b	4000bfe4 <_tx_byte_release+0x27c>
4000bee8:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000beec:	e121f005 	msr	CPSR_c, r5
4000bef0:	e1a00007 	mov	r0, r7
4000bef4:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bef8:	ebffff2c 	bl	4000bbb0 <_tx_byte_pool_search>
4000befc:	e1a09000 	mov	r9, r0
4000bf00:	e10f5000 	mrs	r5, CPSR
4000bf04:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf08:	e121f006 	msr	CPSR_c, r6
4000bf0c:	e3590000 	cmp	r9, #0
4000bf10:	1a000000 	bne	4000bf18 <_tx_byte_release+0x1b0>
4000bf14:	ea000035 	b	4000bff0 <_tx_byte_release+0x288>
4000bf18:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bf1c:	e150000a 	cmp	r0, sl
4000bf20:	0a00000c 	beq	4000bf58 <_tx_byte_release+0x1f0>
4000bf24:	e2499008 	sub	r9, r9, #8
4000bf28:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c028 <_tx_byte_release+0x2c0>
4000bf2c:	e5890004 	str	r0, [r9, #4]
4000bf30:	e5970008 	ldr	r0, [r7, #8]
4000bf34:	e5991000 	ldr	r1, [r9]
4000bf38:	e0411009 	sub	r1, r1, r9
4000bf3c:	e0800001 	add	r0, r0, r1
4000bf40:	e5870008 	str	r0, [r7, #8]
4000bf44:	e5970014 	ldr	r0, [r7, #20]
4000bf48:	e1500009 	cmp	r0, r9
4000bf4c:	9a000000 	bls	4000bf54 <_tx_byte_release+0x1ec>
4000bf50:	e5879014 	str	r9, [r7, #20]
4000bf54:	ea000022 	b	4000bfe4 <_tx_byte_release+0x27c>
4000bf58:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bf5c:	e150000a 	cmp	r0, sl
4000bf60:	1a000002 	bne	4000bf70 <_tx_byte_release+0x208>
4000bf64:	e3a00000 	mov	r0, #0
4000bf68:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bf6c:	ea000007 	b	4000bf90 <_tx_byte_release+0x228>
4000bf70:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bf74:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bf78:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bf7c:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bf80:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bf84:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bf88:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bf8c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bf90:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bf94:	e2400001 	sub	r0, r0, #1
4000bf98:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bf9c:	e3a00000 	mov	r0, #0
4000bfa0:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bfa4:	e59f0080 	ldr	r0, [pc, #128]	; 4000c02c <_tx_byte_release+0x2c4>
4000bfa8:	e5900000 	ldr	r0, [r0]
4000bfac:	e2800001 	add	r0, r0, #1
4000bfb0:	e59f1074 	ldr	r1, [pc, #116]	; 4000c02c <_tx_byte_release+0x2c4>
4000bfb4:	e5810000 	str	r0, [r1]
4000bfb8:	e121f005 	msr	CPSR_c, r5
4000bfbc:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bfc0:	e5809000 	str	r9, [r0]
4000bfc4:	e3a00000 	mov	r0, #0
4000bfc8:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bfcc:	e1a0000a 	mov	r0, sl
4000bfd0:	eb000d96 	bl	4000f630 <_tx_thread_system_resume>
4000bfd4:	e10f5000 	mrs	r5, CPSR
4000bfd8:	e3856080 	orr	r6, r5, #128	; 0x80
4000bfdc:	e121f006 	msr	CPSR_c, r6
4000bfe0:	e1a00000 	nop			; (mov r0, r0)
4000bfe4:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bfe8:	e3500000 	cmp	r0, #0
4000bfec:	1affffbd 	bne	4000bee8 <_tx_byte_release+0x180>
4000bff0:	e1a00000 	nop			; (mov r0, r0)
4000bff4:	e121f005 	msr	CPSR_c, r5
4000bff8:	eb000d60 	bl	4000f580 <_tx_thread_system_preempt_check>
4000bffc:	e3a00000 	mov	r0, #0
4000c000:	eaffff6a 	b	4000bdb0 <_tx_byte_release+0x48>
4000c004:	42595445 	.word	0x42595445
4000c008:	40030e54 	.word	0x40030e54
4000c00c:	40030ec0 	.word	0x40030ec0
4000c010:	40030ec4 	.word	0x40030ec4
4000c014:	40030e4c 	.word	0x40030e4c
4000c018:	f0f0f0f0 	.word	0xf0f0f0f0
4000c01c:	40030ebc 	.word	0x40030ebc
4000c020:	40030eb8 	.word	0x40030eb8
4000c024:	40030eac 	.word	0x40030eac
4000c028:	ffffeeee 	.word	0xffffeeee
4000c02c:	40030e70 	.word	0x40030e70

4000c030 <_tx_event_flags_create>:
4000c030:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000c034:	e1a04000 	mov	r4, r0
4000c038:	e1a05001 	mov	r5, r1
4000c03c:	e3a01028 	mov	r1, #40	; 0x28
4000c040:	e1a00004 	mov	r0, r4
4000c044:	eb001e6d 	bl	40013a00 <__aeabi_memclr4>
4000c048:	e5845004 	str	r5, [r4, #4]
4000c04c:	e10f6000 	mrs	r6, CPSR
4000c050:	e3867080 	orr	r7, r6, #128	; 0x80
4000c054:	e121f007 	msr	CPSR_c, r7
4000c058:	e59f0170 	ldr	r0, [pc, #368]	; 4000c1d0 <_tx_event_flags_create+0x1a0>
4000c05c:	e5840000 	str	r0, [r4]
4000c060:	e59f016c 	ldr	r0, [pc, #364]	; 4000c1d4 <_tx_event_flags_create+0x1a4>
4000c064:	e5900000 	ldr	r0, [r0]
4000c068:	e3500000 	cmp	r0, #0
4000c06c:	0a00000e 	beq	4000c0ac <_tx_event_flags_create+0x7c>
4000c070:	e59f015c 	ldr	r0, [pc, #348]	; 4000c1d4 <_tx_event_flags_create+0x1a4>
4000c074:	e5900000 	ldr	r0, [r0]
4000c078:	e590001c 	ldr	r0, [r0, #28]
4000c07c:	e58d0004 	str	r0, [sp, #4]
4000c080:	e59f014c 	ldr	r0, [pc, #332]	; 4000c1d4 <_tx_event_flags_create+0x1a4>
4000c084:	e5900000 	ldr	r0, [r0]
4000c088:	e580401c 	str	r4, [r0, #28]
4000c08c:	e59d0004 	ldr	r0, [sp, #4]
4000c090:	e5804018 	str	r4, [r0, #24]
4000c094:	e59d0004 	ldr	r0, [sp, #4]
4000c098:	e584001c 	str	r0, [r4, #28]
4000c09c:	e59f0130 	ldr	r0, [pc, #304]	; 4000c1d4 <_tx_event_flags_create+0x1a4>
4000c0a0:	e5900000 	ldr	r0, [r0]
4000c0a4:	e5840018 	str	r0, [r4, #24]
4000c0a8:	ea000003 	b	4000c0bc <_tx_event_flags_create+0x8c>
4000c0ac:	e59f0120 	ldr	r0, [pc, #288]	; 4000c1d4 <_tx_event_flags_create+0x1a4>
4000c0b0:	e5804000 	str	r4, [r0]
4000c0b4:	e5844018 	str	r4, [r4, #24]
4000c0b8:	e584401c 	str	r4, [r4, #28]
4000c0bc:	e59f0114 	ldr	r0, [pc, #276]	; 4000c1d8 <_tx_event_flags_create+0x1a8>
4000c0c0:	e5900000 	ldr	r0, [r0]
4000c0c4:	e2800001 	add	r0, r0, #1
4000c0c8:	e59f1108 	ldr	r1, [pc, #264]	; 4000c1d8 <_tx_event_flags_create+0x1a8>
4000c0cc:	e5810000 	str	r0, [r1]
4000c0d0:	e3a03000 	mov	r3, #0
4000c0d4:	e1a02005 	mov	r2, r5
4000c0d8:	e1a01004 	mov	r1, r4
4000c0dc:	e3a00006 	mov	r0, #6
4000c0e0:	e58d3000 	str	r3, [sp]
4000c0e4:	eb0010a7 	bl	40010388 <_tx_trace_object_register>
4000c0e8:	e59f10ec 	ldr	r1, [pc, #236]	; 4000c1dc <_tx_event_flags_create+0x1ac>
4000c0ec:	e5910000 	ldr	r0, [r1]
4000c0f0:	e3500000 	cmp	r0, #0
4000c0f4:	0a000032 	beq	4000c1c4 <_tx_event_flags_create+0x194>
4000c0f8:	e59f10e0 	ldr	r1, [pc, #224]	; 4000c1e0 <_tx_event_flags_create+0x1b0>
4000c0fc:	e5911000 	ldr	r1, [r1]
4000c100:	e2811001 	add	r1, r1, #1
4000c104:	e59f20d4 	ldr	r2, [pc, #212]	; 4000c1e0 <_tx_event_flags_create+0x1b0>
4000c108:	e5821000 	str	r1, [r2]
4000c10c:	e580100c 	str	r1, [r0, #12]
4000c110:	e59f10cc 	ldr	r1, [pc, #204]	; 4000c1e4 <_tx_event_flags_create+0x1b4>
4000c114:	e5911000 	ldr	r1, [r1]
4000c118:	e3510000 	cmp	r1, #0
4000c11c:	1a000006 	bne	4000c13c <_tx_event_flags_create+0x10c>
4000c120:	e59f10c0 	ldr	r1, [pc, #192]	; 4000c1e8 <_tx_event_flags_create+0x1b8>
4000c124:	e5911000 	ldr	r1, [r1]
4000c128:	e5801000 	str	r1, [r0]
4000c12c:	e5901000 	ldr	r1, [r0]
4000c130:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c134:	e5801004 	str	r1, [r0, #4]
4000c138:	ea00000d 	b	4000c174 <_tx_event_flags_create+0x144>
4000c13c:	e59f10a0 	ldr	r1, [pc, #160]	; 4000c1e4 <_tx_event_flags_create+0x1b4>
4000c140:	e5911000 	ldr	r1, [r1]
4000c144:	e59f20a0 	ldr	r2, [pc, #160]	; 4000c1ec <_tx_event_flags_create+0x1bc>
4000c148:	e1510002 	cmp	r1, r2
4000c14c:	2a000004 	bcs	4000c164 <_tx_event_flags_create+0x134>
4000c150:	e3e01000 	mvn	r1, #0
4000c154:	e5801000 	str	r1, [r0]
4000c158:	e3a01000 	mov	r1, #0
4000c15c:	e5801004 	str	r1, [r0, #4]
4000c160:	ea000003 	b	4000c174 <_tx_event_flags_create+0x144>
4000c164:	e59f1080 	ldr	r1, [pc, #128]	; 4000c1ec <_tx_event_flags_create+0x1bc>
4000c168:	e5801000 	str	r1, [r0]
4000c16c:	e3a01000 	mov	r1, #0
4000c170:	e5801004 	str	r1, [r0, #4]
4000c174:	e3a0101e 	mov	r1, #30
4000c178:	e5801008 	str	r1, [r0, #8]
4000c17c:	e5804010 	str	r4, [r0, #16]
4000c180:	e28d1004 	add	r1, sp, #4
4000c184:	e5801014 	str	r1, [r0, #20]
4000c188:	e3a01000 	mov	r1, #0
4000c18c:	e5801018 	str	r1, [r0, #24]
4000c190:	e580101c 	str	r1, [r0, #28]
4000c194:	e2800020 	add	r0, r0, #32
4000c198:	e59f1050 	ldr	r1, [pc, #80]	; 4000c1f0 <_tx_event_flags_create+0x1c0>
4000c19c:	e5911000 	ldr	r1, [r1]
4000c1a0:	e1500001 	cmp	r0, r1
4000c1a4:	3a000001 	bcc	4000c1b0 <_tx_event_flags_create+0x180>
4000c1a8:	e59f1044 	ldr	r1, [pc, #68]	; 4000c1f4 <_tx_event_flags_create+0x1c4>
4000c1ac:	e5910000 	ldr	r0, [r1]
4000c1b0:	e59f1024 	ldr	r1, [pc, #36]	; 4000c1dc <_tx_event_flags_create+0x1ac>
4000c1b4:	e5810000 	str	r0, [r1]
4000c1b8:	e59f1038 	ldr	r1, [pc, #56]	; 4000c1f8 <_tx_event_flags_create+0x1c8>
4000c1bc:	e5911000 	ldr	r1, [r1]
4000c1c0:	e5810020 	str	r0, [r1, #32]
4000c1c4:	e121f006 	msr	CPSR_c, r6
4000c1c8:	e3a00000 	mov	r0, #0
4000c1cc:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000c1d0:	4456444e 	.word	0x4456444e
4000c1d4:	40030ed8 	.word	0x40030ed8
4000c1d8:	40030edc 	.word	0x40030edc
4000c1dc:	40030ec0 	.word	0x40030ec0
4000c1e0:	40030ec4 	.word	0x40030ec4
4000c1e4:	40030e4c 	.word	0x40030e4c
4000c1e8:	40030e54 	.word	0x40030e54
4000c1ec:	f0f0f0f0 	.word	0xf0f0f0f0
4000c1f0:	40030ebc 	.word	0x40030ebc
4000c1f4:	40030eb8 	.word	0x40030eb8
4000c1f8:	40030eac 	.word	0x40030eac

4000c1fc <_tx_event_flags_delete>:
4000c1fc:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000c200:	e1a04000 	mov	r4, r0
4000c204:	e10f5000 	mrs	r5, CPSR
4000c208:	e3856080 	orr	r6, r5, #128	; 0x80
4000c20c:	e121f006 	msr	CPSR_c, r6
4000c210:	e59f1204 	ldr	r1, [pc, #516]	; 4000c41c <_tx_event_flags_delete+0x220>
4000c214:	e5910000 	ldr	r0, [r1]
4000c218:	e3500000 	cmp	r0, #0
4000c21c:	0a000031 	beq	4000c2e8 <_tx_event_flags_delete+0xec>
4000c220:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c420 <_tx_event_flags_delete+0x224>
4000c224:	e5911000 	ldr	r1, [r1]
4000c228:	e2811001 	add	r1, r1, #1
4000c22c:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c420 <_tx_event_flags_delete+0x224>
4000c230:	e5821000 	str	r1, [r2]
4000c234:	e580100c 	str	r1, [r0, #12]
4000c238:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c424 <_tx_event_flags_delete+0x228>
4000c23c:	e5911000 	ldr	r1, [r1]
4000c240:	e3510000 	cmp	r1, #0
4000c244:	1a000006 	bne	4000c264 <_tx_event_flags_delete+0x68>
4000c248:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c428 <_tx_event_flags_delete+0x22c>
4000c24c:	e5911000 	ldr	r1, [r1]
4000c250:	e5801000 	str	r1, [r0]
4000c254:	e5901000 	ldr	r1, [r0]
4000c258:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c25c:	e5801004 	str	r1, [r0, #4]
4000c260:	ea00000d 	b	4000c29c <_tx_event_flags_delete+0xa0>
4000c264:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c424 <_tx_event_flags_delete+0x228>
4000c268:	e5911000 	ldr	r1, [r1]
4000c26c:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c42c <_tx_event_flags_delete+0x230>
4000c270:	e1510002 	cmp	r1, r2
4000c274:	2a000004 	bcs	4000c28c <_tx_event_flags_delete+0x90>
4000c278:	e3e01000 	mvn	r1, #0
4000c27c:	e5801000 	str	r1, [r0]
4000c280:	e3a01000 	mov	r1, #0
4000c284:	e5801004 	str	r1, [r0, #4]
4000c288:	ea000003 	b	4000c29c <_tx_event_flags_delete+0xa0>
4000c28c:	e59f1198 	ldr	r1, [pc, #408]	; 4000c42c <_tx_event_flags_delete+0x230>
4000c290:	e5801000 	str	r1, [r0]
4000c294:	e3a01000 	mov	r1, #0
4000c298:	e5801004 	str	r1, [r0, #4]
4000c29c:	e3a0101f 	mov	r1, #31
4000c2a0:	e5801008 	str	r1, [r0, #8]
4000c2a4:	e5804010 	str	r4, [r0, #16]
4000c2a8:	e580d014 	str	sp, [r0, #20]
4000c2ac:	e3a01000 	mov	r1, #0
4000c2b0:	e5801018 	str	r1, [r0, #24]
4000c2b4:	e580101c 	str	r1, [r0, #28]
4000c2b8:	e2800020 	add	r0, r0, #32
4000c2bc:	e59f116c 	ldr	r1, [pc, #364]	; 4000c430 <_tx_event_flags_delete+0x234>
4000c2c0:	e5911000 	ldr	r1, [r1]
4000c2c4:	e1500001 	cmp	r0, r1
4000c2c8:	3a000001 	bcc	4000c2d4 <_tx_event_flags_delete+0xd8>
4000c2cc:	e59f1160 	ldr	r1, [pc, #352]	; 4000c434 <_tx_event_flags_delete+0x238>
4000c2d0:	e5910000 	ldr	r0, [r1]
4000c2d4:	e59f1140 	ldr	r1, [pc, #320]	; 4000c41c <_tx_event_flags_delete+0x220>
4000c2d8:	e5810000 	str	r0, [r1]
4000c2dc:	e59f1154 	ldr	r1, [pc, #340]	; 4000c438 <_tx_event_flags_delete+0x23c>
4000c2e0:	e5911000 	ldr	r1, [r1]
4000c2e4:	e5810020 	str	r0, [r1, #32]
4000c2e8:	e1a00004 	mov	r0, r4
4000c2ec:	eb001090 	bl	40010534 <_tx_trace_object_unregister>
4000c2f0:	e59f0144 	ldr	r0, [pc, #324]	; 4000c43c <_tx_event_flags_delete+0x240>
4000c2f4:	e5900000 	ldr	r0, [r0]
4000c2f8:	e2400001 	sub	r0, r0, #1
4000c2fc:	e59f1138 	ldr	r1, [pc, #312]	; 4000c43c <_tx_event_flags_delete+0x240>
4000c300:	e5810000 	str	r0, [r1]
4000c304:	e3a00000 	mov	r0, #0
4000c308:	e5840000 	str	r0, [r4]
4000c30c:	e5940018 	ldr	r0, [r4, #24]
4000c310:	e1500004 	cmp	r0, r4
4000c314:	1a000003 	bne	4000c328 <_tx_event_flags_delete+0x12c>
4000c318:	e3a00000 	mov	r0, #0
4000c31c:	e59f111c 	ldr	r1, [pc, #284]	; 4000c440 <_tx_event_flags_delete+0x244>
4000c320:	e5810000 	str	r0, [r1]
4000c324:	ea00000c 	b	4000c35c <_tx_event_flags_delete+0x160>
4000c328:	e594001c 	ldr	r0, [r4, #28]
4000c32c:	e5941018 	ldr	r1, [r4, #24]
4000c330:	e581001c 	str	r0, [r1, #28]
4000c334:	e5940018 	ldr	r0, [r4, #24]
4000c338:	e594101c 	ldr	r1, [r4, #28]
4000c33c:	e5810018 	str	r0, [r1, #24]
4000c340:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c440 <_tx_event_flags_delete+0x244>
4000c344:	e5900000 	ldr	r0, [r0]
4000c348:	e1500004 	cmp	r0, r4
4000c34c:	1a000002 	bne	4000c35c <_tx_event_flags_delete+0x160>
4000c350:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c440 <_tx_event_flags_delete+0x244>
4000c354:	e5940018 	ldr	r0, [r4, #24]
4000c358:	e5810000 	str	r0, [r1]
4000c35c:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c444 <_tx_event_flags_delete+0x248>
4000c360:	e5900000 	ldr	r0, [r0]
4000c364:	e2800001 	add	r0, r0, #1
4000c368:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c444 <_tx_event_flags_delete+0x248>
4000c36c:	e5810000 	str	r0, [r1]
4000c370:	e121f005 	msr	CPSR_c, r5
4000c374:	e5940010 	ldr	r0, [r4, #16]
4000c378:	e58d0000 	str	r0, [sp]
4000c37c:	ea000017 	b	4000c3e0 <_tx_event_flags_delete+0x1e4>
4000c380:	e10f5000 	mrs	r5, CPSR
4000c384:	e3856080 	orr	r6, r5, #128	; 0x80
4000c388:	e121f006 	msr	CPSR_c, r6
4000c38c:	e3a00000 	mov	r0, #0
4000c390:	e59d1000 	ldr	r1, [sp]
4000c394:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c398:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c444 <_tx_event_flags_delete+0x248>
4000c39c:	e5900000 	ldr	r0, [r0]
4000c3a0:	e2800001 	add	r0, r0, #1
4000c3a4:	e59f1098 	ldr	r1, [pc, #152]	; 4000c444 <_tx_event_flags_delete+0x248>
4000c3a8:	e5810000 	str	r0, [r1]
4000c3ac:	e121f005 	msr	CPSR_c, r5
4000c3b0:	e3a00001 	mov	r0, #1
4000c3b4:	e59d1000 	ldr	r1, [sp]
4000c3b8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c3bc:	e59d0000 	ldr	r0, [sp]
4000c3c0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c3c4:	e58d0000 	str	r0, [sp]
4000c3c8:	e59d1000 	ldr	r1, [sp]
4000c3cc:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c3d0:	eb000c96 	bl	4000f630 <_tx_thread_system_resume>
4000c3d4:	e5940014 	ldr	r0, [r4, #20]
4000c3d8:	e2400001 	sub	r0, r0, #1
4000c3dc:	e5840014 	str	r0, [r4, #20]
4000c3e0:	e5940014 	ldr	r0, [r4, #20]
4000c3e4:	e3500000 	cmp	r0, #0
4000c3e8:	1affffe4 	bne	4000c380 <_tx_event_flags_delete+0x184>
4000c3ec:	e10f5000 	mrs	r5, CPSR
4000c3f0:	e3856080 	orr	r6, r5, #128	; 0x80
4000c3f4:	e121f006 	msr	CPSR_c, r6
4000c3f8:	e59f0044 	ldr	r0, [pc, #68]	; 4000c444 <_tx_event_flags_delete+0x248>
4000c3fc:	e5900000 	ldr	r0, [r0]
4000c400:	e2400001 	sub	r0, r0, #1
4000c404:	e59f1038 	ldr	r1, [pc, #56]	; 4000c444 <_tx_event_flags_delete+0x248>
4000c408:	e5810000 	str	r0, [r1]
4000c40c:	e121f005 	msr	CPSR_c, r5
4000c410:	eb000c5a 	bl	4000f580 <_tx_thread_system_preempt_check>
4000c414:	e3a00000 	mov	r0, #0
4000c418:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c41c:	40030ec0 	.word	0x40030ec0
4000c420:	40030ec4 	.word	0x40030ec4
4000c424:	40030e4c 	.word	0x40030e4c
4000c428:	40030e54 	.word	0x40030e54
4000c42c:	f0f0f0f0 	.word	0xf0f0f0f0
4000c430:	40030ebc 	.word	0x40030ebc
4000c434:	40030eb8 	.word	0x40030eb8
4000c438:	40030eac 	.word	0x40030eac
4000c43c:	40030edc 	.word	0x40030edc
4000c440:	40030ed8 	.word	0x40030ed8
4000c444:	40030e70 	.word	0x40030e70

4000c448 <_tx_event_flags_get>:
4000c448:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c44c:	e1a04000 	mov	r4, r0
4000c450:	e1a05001 	mov	r5, r1
4000c454:	e1a06002 	mov	r6, r2
4000c458:	e1a07003 	mov	r7, r3
4000c45c:	e10f8000 	mrs	r8, CPSR
4000c460:	e3880080 	orr	r0, r8, #128	; 0x80
4000c464:	e58d0004 	str	r0, [sp, #4]
4000c468:	e59d0004 	ldr	r0, [sp, #4]
4000c46c:	e121f000 	msr	CPSR_c, r0
4000c470:	e59f1278 	ldr	r1, [pc, #632]	; 4000c6f0 <_tx_event_flags_get+0x2a8>
4000c474:	e5910000 	ldr	r0, [r1]
4000c478:	e3500000 	cmp	r0, #0
4000c47c:	0a000031 	beq	4000c548 <_tx_event_flags_get+0x100>
4000c480:	e59f126c 	ldr	r1, [pc, #620]	; 4000c6f4 <_tx_event_flags_get+0x2ac>
4000c484:	e5911000 	ldr	r1, [r1]
4000c488:	e2811001 	add	r1, r1, #1
4000c48c:	e59f2260 	ldr	r2, [pc, #608]	; 4000c6f4 <_tx_event_flags_get+0x2ac>
4000c490:	e5821000 	str	r1, [r2]
4000c494:	e580100c 	str	r1, [r0, #12]
4000c498:	e59f1258 	ldr	r1, [pc, #600]	; 4000c6f8 <_tx_event_flags_get+0x2b0>
4000c49c:	e5911000 	ldr	r1, [r1]
4000c4a0:	e3510000 	cmp	r1, #0
4000c4a4:	1a000006 	bne	4000c4c4 <_tx_event_flags_get+0x7c>
4000c4a8:	e59f124c 	ldr	r1, [pc, #588]	; 4000c6fc <_tx_event_flags_get+0x2b4>
4000c4ac:	e5911000 	ldr	r1, [r1]
4000c4b0:	e5801000 	str	r1, [r0]
4000c4b4:	e5901000 	ldr	r1, [r0]
4000c4b8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c4bc:	e5801004 	str	r1, [r0, #4]
4000c4c0:	ea00000d 	b	4000c4fc <_tx_event_flags_get+0xb4>
4000c4c4:	e59f122c 	ldr	r1, [pc, #556]	; 4000c6f8 <_tx_event_flags_get+0x2b0>
4000c4c8:	e5911000 	ldr	r1, [r1]
4000c4cc:	e59f222c 	ldr	r2, [pc, #556]	; 4000c700 <_tx_event_flags_get+0x2b8>
4000c4d0:	e1510002 	cmp	r1, r2
4000c4d4:	2a000004 	bcs	4000c4ec <_tx_event_flags_get+0xa4>
4000c4d8:	e3e01000 	mvn	r1, #0
4000c4dc:	e5801000 	str	r1, [r0]
4000c4e0:	e3a01000 	mov	r1, #0
4000c4e4:	e5801004 	str	r1, [r0, #4]
4000c4e8:	ea000003 	b	4000c4fc <_tx_event_flags_get+0xb4>
4000c4ec:	e59f120c 	ldr	r1, [pc, #524]	; 4000c700 <_tx_event_flags_get+0x2b8>
4000c4f0:	e5801000 	str	r1, [r0]
4000c4f4:	e3a01000 	mov	r1, #0
4000c4f8:	e5801004 	str	r1, [r0, #4]
4000c4fc:	e3a01020 	mov	r1, #32
4000c500:	e5801008 	str	r1, [r0, #8]
4000c504:	e5804010 	str	r4, [r0, #16]
4000c508:	e5805014 	str	r5, [r0, #20]
4000c50c:	e5941008 	ldr	r1, [r4, #8]
4000c510:	e5801018 	str	r1, [r0, #24]
4000c514:	e580601c 	str	r6, [r0, #28]
4000c518:	e2800020 	add	r0, r0, #32
4000c51c:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c704 <_tx_event_flags_get+0x2bc>
4000c520:	e5911000 	ldr	r1, [r1]
4000c524:	e1500001 	cmp	r0, r1
4000c528:	3a000001 	bcc	4000c534 <_tx_event_flags_get+0xec>
4000c52c:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c708 <_tx_event_flags_get+0x2c0>
4000c530:	e5910000 	ldr	r0, [r1]
4000c534:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c6f0 <_tx_event_flags_get+0x2a8>
4000c538:	e5810000 	str	r0, [r1]
4000c53c:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c70c <_tx_event_flags_get+0x2c4>
4000c540:	e5911000 	ldr	r1, [r1]
4000c544:	e5810020 	str	r0, [r1, #32]
4000c548:	e594a008 	ldr	sl, [r4, #8]
4000c54c:	e594b020 	ldr	fp, [r4, #32]
4000c550:	e35b0000 	cmp	fp, #0
4000c554:	0a000000 	beq	4000c55c <_tx_event_flags_get+0x114>
4000c558:	e1caa00b 	bic	sl, sl, fp
4000c55c:	e3160002 	tst	r6, #2
4000c560:	0a000006 	beq	4000c580 <_tx_event_flags_get+0x138>
4000c564:	e00a0005 	and	r0, sl, r5
4000c568:	e1500005 	cmp	r0, r5
4000c56c:	1a000001 	bne	4000c578 <_tx_event_flags_get+0x130>
4000c570:	e3a09000 	mov	r9, #0
4000c574:	ea000006 	b	4000c594 <_tx_event_flags_get+0x14c>
4000c578:	e3a09007 	mov	r9, #7
4000c57c:	ea000004 	b	4000c594 <_tx_event_flags_get+0x14c>
4000c580:	e11a0005 	tst	sl, r5
4000c584:	0a000001 	beq	4000c590 <_tx_event_flags_get+0x148>
4000c588:	e3a09000 	mov	r9, #0
4000c58c:	ea000000 	b	4000c594 <_tx_event_flags_get+0x14c>
4000c590:	e3a09007 	mov	r9, #7
4000c594:	e3590000 	cmp	r9, #0
4000c598:	1a000010 	bne	4000c5e0 <_tx_event_flags_get+0x198>
4000c59c:	e587a000 	str	sl, [r7]
4000c5a0:	e3160001 	tst	r6, #1
4000c5a4:	0a00004e 	beq	4000c6e4 <_tx_event_flags_get+0x29c>
4000c5a8:	e5940014 	ldr	r0, [r4, #20]
4000c5ac:	e3500000 	cmp	r0, #0
4000c5b0:	0a000006 	beq	4000c5d0 <_tx_event_flags_get+0x188>
4000c5b4:	e5940010 	ldr	r0, [r4, #16]
4000c5b8:	e3500000 	cmp	r0, #0
4000c5bc:	1a000003 	bne	4000c5d0 <_tx_event_flags_get+0x188>
4000c5c0:	e5940020 	ldr	r0, [r4, #32]
4000c5c4:	e1800005 	orr	r0, r0, r5
4000c5c8:	e5840020 	str	r0, [r4, #32]
4000c5cc:	ea000044 	b	4000c6e4 <_tx_event_flags_get+0x29c>
4000c5d0:	e5940008 	ldr	r0, [r4, #8]
4000c5d4:	e1c00005 	bic	r0, r0, r5
4000c5d8:	e5840008 	str	r0, [r4, #8]
4000c5dc:	ea000040 	b	4000c6e4 <_tx_event_flags_get+0x29c>
4000c5e0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c5e4:	e3500000 	cmp	r0, #0
4000c5e8:	0a00003c 	beq	4000c6e0 <_tx_event_flags_get+0x298>
4000c5ec:	e59f0108 	ldr	r0, [pc, #264]	; 4000c6fc <_tx_event_flags_get+0x2b4>
4000c5f0:	e5900000 	ldr	r0, [r0]
4000c5f4:	e58d0000 	str	r0, [sp]
4000c5f8:	e59f1110 	ldr	r1, [pc, #272]	; 4000c710 <_tx_event_flags_get+0x2c8>
4000c5fc:	e59d0000 	ldr	r0, [sp]
4000c600:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c604:	e59d0000 	ldr	r0, [sp]
4000c608:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c60c:	e59d0000 	ldr	r0, [sp]
4000c610:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c614:	e59d0000 	ldr	r0, [sp]
4000c618:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c61c:	e59d0000 	ldr	r0, [sp]
4000c620:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c624:	e5940010 	ldr	r0, [r4, #16]
4000c628:	e3500000 	cmp	r0, #0
4000c62c:	0a00000e 	beq	4000c66c <_tx_event_flags_get+0x224>
4000c630:	e5941010 	ldr	r1, [r4, #16]
4000c634:	e59d0000 	ldr	r0, [sp]
4000c638:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c63c:	e5940010 	ldr	r0, [r4, #16]
4000c640:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c644:	e59d0000 	ldr	r0, [sp]
4000c648:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c64c:	e59d0000 	ldr	r0, [sp]
4000c650:	e5941010 	ldr	r1, [r4, #16]
4000c654:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c658:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c65c:	e59d0000 	ldr	r0, [sp]
4000c660:	e5941010 	ldr	r1, [r4, #16]
4000c664:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c668:	ea000005 	b	4000c684 <_tx_event_flags_get+0x23c>
4000c66c:	e59d0000 	ldr	r0, [sp]
4000c670:	e5840010 	str	r0, [r4, #16]
4000c674:	e59d0000 	ldr	r0, [sp]
4000c678:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c67c:	e59d0000 	ldr	r0, [sp]
4000c680:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c684:	e5940014 	ldr	r0, [r4, #20]
4000c688:	e2800001 	add	r0, r0, #1
4000c68c:	e5840014 	str	r0, [r4, #20]
4000c690:	e3a00007 	mov	r0, #7
4000c694:	e59d1000 	ldr	r1, [sp]
4000c698:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c69c:	e3a01001 	mov	r1, #1
4000c6a0:	e59d0000 	ldr	r0, [sp]
4000c6a4:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c6a8:	e59d0000 	ldr	r0, [sp]
4000c6ac:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c6b0:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c6b4:	e59f0058 	ldr	r0, [pc, #88]	; 4000c714 <_tx_event_flags_get+0x2cc>
4000c6b8:	e5900000 	ldr	r0, [r0]
4000c6bc:	e2800001 	add	r0, r0, #1
4000c6c0:	e59f104c 	ldr	r1, [pc, #76]	; 4000c714 <_tx_event_flags_get+0x2cc>
4000c6c4:	e5810000 	str	r0, [r1]
4000c6c8:	e121f008 	msr	CPSR_c, r8
4000c6cc:	e59d0000 	ldr	r0, [sp]
4000c6d0:	ebfff22f 	bl	40008f94 <_tx_thread_system_suspend>
4000c6d4:	e59d0000 	ldr	r0, [sp]
4000c6d8:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c6dc:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c6e0:	e3a09007 	mov	r9, #7
4000c6e4:	e121f008 	msr	CPSR_c, r8
4000c6e8:	e1a00009 	mov	r0, r9
4000c6ec:	eafffffa 	b	4000c6dc <_tx_event_flags_get+0x294>
4000c6f0:	40030ec0 	.word	0x40030ec0
4000c6f4:	40030ec4 	.word	0x40030ec4
4000c6f8:	40030e4c 	.word	0x40030e4c
4000c6fc:	40030e54 	.word	0x40030e54
4000c700:	f0f0f0f0 	.word	0xf0f0f0f0
4000c704:	40030ebc 	.word	0x40030ebc
4000c708:	40030eb8 	.word	0x40030eb8
4000c70c:	40030eac 	.word	0x40030eac
4000c710:	40010640 	.word	0x40010640
4000c714:	40030e70 	.word	0x40030e70

4000c718 <_tx_event_flags_set>:
4000c718:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c71c:	e24dd01c 	sub	sp, sp, #28
4000c720:	e1a04000 	mov	r4, r0
4000c724:	e1a05001 	mov	r5, r1
4000c728:	e1a06002 	mov	r6, r2
4000c72c:	e10f7000 	mrs	r7, CPSR
4000c730:	e3870080 	orr	r0, r7, #128	; 0x80
4000c734:	e58d0018 	str	r0, [sp, #24]
4000c738:	e59d0018 	ldr	r0, [sp, #24]
4000c73c:	e121f000 	msr	CPSR_c, r0
4000c740:	e59f1594 	ldr	r1, [pc, #1428]	; 4000ccdc <_tx_event_flags_set+0x5c4>
4000c744:	e5910000 	ldr	r0, [r1]
4000c748:	e3500000 	cmp	r0, #0
4000c74c:	0a000031 	beq	4000c818 <_tx_event_flags_set+0x100>
4000c750:	e59f1588 	ldr	r1, [pc, #1416]	; 4000cce0 <_tx_event_flags_set+0x5c8>
4000c754:	e5911000 	ldr	r1, [r1]
4000c758:	e2811001 	add	r1, r1, #1
4000c75c:	e59f257c 	ldr	r2, [pc, #1404]	; 4000cce0 <_tx_event_flags_set+0x5c8>
4000c760:	e5821000 	str	r1, [r2]
4000c764:	e580100c 	str	r1, [r0, #12]
4000c768:	e59f1574 	ldr	r1, [pc, #1396]	; 4000cce4 <_tx_event_flags_set+0x5cc>
4000c76c:	e5911000 	ldr	r1, [r1]
4000c770:	e3510000 	cmp	r1, #0
4000c774:	1a000006 	bne	4000c794 <_tx_event_flags_set+0x7c>
4000c778:	e59f1568 	ldr	r1, [pc, #1384]	; 4000cce8 <_tx_event_flags_set+0x5d0>
4000c77c:	e5911000 	ldr	r1, [r1]
4000c780:	e5801000 	str	r1, [r0]
4000c784:	e5901000 	ldr	r1, [r0]
4000c788:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c78c:	e5801004 	str	r1, [r0, #4]
4000c790:	ea00000d 	b	4000c7cc <_tx_event_flags_set+0xb4>
4000c794:	e59f1548 	ldr	r1, [pc, #1352]	; 4000cce4 <_tx_event_flags_set+0x5cc>
4000c798:	e5911000 	ldr	r1, [r1]
4000c79c:	e59f2548 	ldr	r2, [pc, #1352]	; 4000ccec <_tx_event_flags_set+0x5d4>
4000c7a0:	e1510002 	cmp	r1, r2
4000c7a4:	2a000004 	bcs	4000c7bc <_tx_event_flags_set+0xa4>
4000c7a8:	e3e01000 	mvn	r1, #0
4000c7ac:	e5801000 	str	r1, [r0]
4000c7b0:	e3a01000 	mov	r1, #0
4000c7b4:	e5801004 	str	r1, [r0, #4]
4000c7b8:	ea000003 	b	4000c7cc <_tx_event_flags_set+0xb4>
4000c7bc:	e59f1528 	ldr	r1, [pc, #1320]	; 4000ccec <_tx_event_flags_set+0x5d4>
4000c7c0:	e5801000 	str	r1, [r0]
4000c7c4:	e3a01000 	mov	r1, #0
4000c7c8:	e5801004 	str	r1, [r0, #4]
4000c7cc:	e3a01024 	mov	r1, #36	; 0x24
4000c7d0:	e5801008 	str	r1, [r0, #8]
4000c7d4:	e5804010 	str	r4, [r0, #16]
4000c7d8:	e5805014 	str	r5, [r0, #20]
4000c7dc:	e5806018 	str	r6, [r0, #24]
4000c7e0:	e5941014 	ldr	r1, [r4, #20]
4000c7e4:	e580101c 	str	r1, [r0, #28]
4000c7e8:	e2800020 	add	r0, r0, #32
4000c7ec:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000ccf0 <_tx_event_flags_set+0x5d8>
4000c7f0:	e5911000 	ldr	r1, [r1]
4000c7f4:	e1500001 	cmp	r0, r1
4000c7f8:	3a000001 	bcc	4000c804 <_tx_event_flags_set+0xec>
4000c7fc:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000ccf4 <_tx_event_flags_set+0x5dc>
4000c800:	e5910000 	ldr	r0, [r1]
4000c804:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000ccdc <_tx_event_flags_set+0x5c4>
4000c808:	e5810000 	str	r0, [r1]
4000c80c:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000ccf8 <_tx_event_flags_set+0x5e0>
4000c810:	e5911000 	ldr	r1, [r1]
4000c814:	e5810020 	str	r0, [r1, #32]
4000c818:	e3160002 	tst	r6, #2
4000c81c:	0a000011 	beq	4000c868 <_tx_event_flags_set+0x150>
4000c820:	e5940014 	ldr	r0, [r4, #20]
4000c824:	e3500000 	cmp	r0, #0
4000c828:	0a000007 	beq	4000c84c <_tx_event_flags_set+0x134>
4000c82c:	e5940010 	ldr	r0, [r4, #16]
4000c830:	e3500000 	cmp	r0, #0
4000c834:	1a000004 	bne	4000c84c <_tx_event_flags_set+0x134>
4000c838:	e1e01005 	mvn	r1, r5
4000c83c:	e5940020 	ldr	r0, [r4, #32]
4000c840:	e1800001 	orr	r0, r0, r1
4000c844:	e5840020 	str	r0, [r4, #32]
4000c848:	ea000002 	b	4000c858 <_tx_event_flags_set+0x140>
4000c84c:	e5940008 	ldr	r0, [r4, #8]
4000c850:	e0000005 	and	r0, r0, r5
4000c854:	e5840008 	str	r0, [r4, #8]
4000c858:	e121f007 	msr	CPSR_c, r7
4000c85c:	e3a00000 	mov	r0, #0
4000c860:	e28dd01c 	add	sp, sp, #28
4000c864:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c868:	e5940008 	ldr	r0, [r4, #8]
4000c86c:	e1800005 	orr	r0, r0, r5
4000c870:	e5840008 	str	r0, [r4, #8]
4000c874:	e5940020 	ldr	r0, [r4, #32]
4000c878:	e3500000 	cmp	r0, #0
4000c87c:	0a000002 	beq	4000c88c <_tx_event_flags_set+0x174>
4000c880:	e5940020 	ldr	r0, [r4, #32]
4000c884:	e1c00005 	bic	r0, r0, r5
4000c888:	e5840020 	str	r0, [r4, #32]
4000c88c:	e5940010 	ldr	r0, [r4, #16]
4000c890:	e3500000 	cmp	r0, #0
4000c894:	0a000102 	beq	4000cca4 <_tx_event_flags_set+0x58c>
4000c898:	e5940014 	ldr	r0, [r4, #20]
4000c89c:	e3500001 	cmp	r0, #1
4000c8a0:	1a000048 	bne	4000c9c8 <_tx_event_flags_set+0x2b0>
4000c8a4:	e5940010 	ldr	r0, [r4, #16]
4000c8a8:	e58d0014 	str	r0, [sp, #20]
4000c8ac:	e59d0014 	ldr	r0, [sp, #20]
4000c8b0:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c8b4:	e3100002 	tst	r0, #2
4000c8b8:	0a00000b 	beq	4000c8ec <_tx_event_flags_set+0x1d4>
4000c8bc:	e5940008 	ldr	r0, [r4, #8]
4000c8c0:	e59d1014 	ldr	r1, [sp, #20]
4000c8c4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c8c8:	e0000001 	and	r0, r0, r1
4000c8cc:	e59d1014 	ldr	r1, [sp, #20]
4000c8d0:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c8d4:	e1500001 	cmp	r0, r1
4000c8d8:	1a000001 	bne	4000c8e4 <_tx_event_flags_set+0x1cc>
4000c8dc:	e3a08000 	mov	r8, #0
4000c8e0:	ea000009 	b	4000c90c <_tx_event_flags_set+0x1f4>
4000c8e4:	e3a08007 	mov	r8, #7
4000c8e8:	ea000007 	b	4000c90c <_tx_event_flags_set+0x1f4>
4000c8ec:	e5940008 	ldr	r0, [r4, #8]
4000c8f0:	e59d1014 	ldr	r1, [sp, #20]
4000c8f4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c8f8:	e1100001 	tst	r0, r1
4000c8fc:	0a000001 	beq	4000c908 <_tx_event_flags_set+0x1f0>
4000c900:	e3a08000 	mov	r8, #0
4000c904:	ea000000 	b	4000c90c <_tx_event_flags_set+0x1f4>
4000c908:	e3a08007 	mov	r8, #7
4000c90c:	e3580000 	cmp	r8, #0
4000c910:	1a000024 	bne	4000c9a8 <_tx_event_flags_set+0x290>
4000c914:	e5941008 	ldr	r1, [r4, #8]
4000c918:	e59d0014 	ldr	r0, [sp, #20]
4000c91c:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c920:	e5801000 	str	r1, [r0]
4000c924:	e59d0014 	ldr	r0, [sp, #20]
4000c928:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c92c:	e3100001 	tst	r0, #1
4000c930:	0a000004 	beq	4000c948 <_tx_event_flags_set+0x230>
4000c934:	e5940008 	ldr	r0, [r4, #8]
4000c938:	e59d1014 	ldr	r1, [sp, #20]
4000c93c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c940:	e1c00001 	bic	r0, r0, r1
4000c944:	e5840008 	str	r0, [r4, #8]
4000c948:	e3a00000 	mov	r0, #0
4000c94c:	e5840010 	str	r0, [r4, #16]
4000c950:	e5840014 	str	r0, [r4, #20]
4000c954:	e3a01000 	mov	r1, #0
4000c958:	e59d0014 	ldr	r0, [sp, #20]
4000c95c:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c960:	e59f0394 	ldr	r0, [pc, #916]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000c964:	e5900000 	ldr	r0, [r0]
4000c968:	e2800001 	add	r0, r0, #1
4000c96c:	e59f1388 	ldr	r1, [pc, #904]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000c970:	e5810000 	str	r0, [r1]
4000c974:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c978:	e121f007 	msr	CPSR_c, r7
4000c97c:	e35b0000 	cmp	fp, #0
4000c980:	0a000001 	beq	4000c98c <_tx_event_flags_set+0x274>
4000c984:	e1a00004 	mov	r0, r4
4000c988:	e12fff3b 	blx	fp
4000c98c:	e3a00000 	mov	r0, #0
4000c990:	e59d1014 	ldr	r1, [sp, #20]
4000c994:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c998:	e59d0014 	ldr	r0, [sp, #20]
4000c99c:	eb000b23 	bl	4000f630 <_tx_thread_system_resume>
4000c9a0:	e3a00000 	mov	r0, #0
4000c9a4:	eaffffad 	b	4000c860 <_tx_event_flags_set+0x148>
4000c9a8:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c9ac:	e121f007 	msr	CPSR_c, r7
4000c9b0:	e35b0000 	cmp	fp, #0
4000c9b4:	0a000001 	beq	4000c9c0 <_tx_event_flags_set+0x2a8>
4000c9b8:	e1a00004 	mov	r0, r4
4000c9bc:	e12fff3b 	blx	fp
4000c9c0:	e3a00000 	mov	r0, #0
4000c9c4:	eaffffa5 	b	4000c860 <_tx_event_flags_set+0x148>
4000c9c8:	e5940010 	ldr	r0, [r4, #16]
4000c9cc:	e58d0004 	str	r0, [sp, #4]
4000c9d0:	e59d0004 	ldr	r0, [sp, #4]
4000c9d4:	e58d0014 	str	r0, [sp, #20]
4000c9d8:	e3a00000 	mov	r0, #0
4000c9dc:	e5840010 	str	r0, [r4, #16]
4000c9e0:	e58d000c 	str	r0, [sp, #12]
4000c9e4:	e58d0008 	str	r0, [sp, #8]
4000c9e8:	e5940014 	ldr	r0, [r4, #20]
4000c9ec:	e58d0000 	str	r0, [sp]
4000c9f0:	e5949008 	ldr	r9, [r4, #8]
4000c9f4:	e59f0300 	ldr	r0, [pc, #768]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000c9f8:	e5900000 	ldr	r0, [r0]
4000c9fc:	e2800001 	add	r0, r0, #1
4000ca00:	e59f12f4 	ldr	r1, [pc, #756]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000ca04:	e5810000 	str	r0, [r1]
4000ca08:	e1a00000 	nop			; (mov r0, r0)
4000ca0c:	e121f007 	msr	CPSR_c, r7
4000ca10:	e10f7000 	mrs	r7, CPSR
4000ca14:	e3870080 	orr	r0, r7, #128	; 0x80
4000ca18:	e58d0018 	str	r0, [sp, #24]
4000ca1c:	e59d0018 	ldr	r0, [sp, #24]
4000ca20:	e121f000 	msr	CPSR_c, r0
4000ca24:	e594000c 	ldr	r0, [r4, #12]
4000ca28:	e3500000 	cmp	r0, #0
4000ca2c:	0a00000b 	beq	4000ca60 <_tx_event_flags_set+0x348>
4000ca30:	e3a00000 	mov	r0, #0
4000ca34:	e584000c 	str	r0, [r4, #12]
4000ca38:	e59d0004 	ldr	r0, [sp, #4]
4000ca3c:	e58d0014 	str	r0, [sp, #20]
4000ca40:	e5940014 	ldr	r0, [r4, #20]
4000ca44:	e58d0000 	str	r0, [sp]
4000ca48:	e5940008 	ldr	r0, [r4, #8]
4000ca4c:	e1899000 	orr	r9, r9, r0
4000ca50:	e59d0014 	ldr	r0, [sp, #20]
4000ca54:	e3500000 	cmp	r0, #0
4000ca58:	1a000000 	bne	4000ca60 <_tx_event_flags_set+0x348>
4000ca5c:	ea00005d 	b	4000cbd8 <_tx_event_flags_set+0x4c0>
4000ca60:	e59d0014 	ldr	r0, [sp, #20]
4000ca64:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000ca68:	e31a0002 	tst	sl, #2
4000ca6c:	0a00000a 	beq	4000ca9c <_tx_event_flags_set+0x384>
4000ca70:	e59d0014 	ldr	r0, [sp, #20]
4000ca74:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000ca78:	e0000009 	and	r0, r0, r9
4000ca7c:	e59d1014 	ldr	r1, [sp, #20]
4000ca80:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000ca84:	e1500001 	cmp	r0, r1
4000ca88:	1a000001 	bne	4000ca94 <_tx_event_flags_set+0x37c>
4000ca8c:	e3a08000 	mov	r8, #0
4000ca90:	ea000008 	b	4000cab8 <_tx_event_flags_set+0x3a0>
4000ca94:	e3a08007 	mov	r8, #7
4000ca98:	ea000006 	b	4000cab8 <_tx_event_flags_set+0x3a0>
4000ca9c:	e59d0014 	ldr	r0, [sp, #20]
4000caa0:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000caa4:	e1100009 	tst	r0, r9
4000caa8:	0a000001 	beq	4000cab4 <_tx_event_flags_set+0x39c>
4000caac:	e3a08000 	mov	r8, #0
4000cab0:	ea000000 	b	4000cab8 <_tx_event_flags_set+0x3a0>
4000cab4:	e3a08007 	mov	r8, #7
4000cab8:	e59d0014 	ldr	r0, [sp, #20]
4000cabc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cac0:	e58d0010 	str	r0, [sp, #16]
4000cac4:	e3580000 	cmp	r8, #0
4000cac8:	1a00003c 	bne	4000cbc0 <_tx_event_flags_set+0x4a8>
4000cacc:	e59d0014 	ldr	r0, [sp, #20]
4000cad0:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000cad4:	e5809000 	str	r9, [r0]
4000cad8:	e31a0001 	tst	sl, #1
4000cadc:	0a000004 	beq	4000caf4 <_tx_event_flags_set+0x3dc>
4000cae0:	e5940008 	ldr	r0, [r4, #8]
4000cae4:	e59d1014 	ldr	r1, [sp, #20]
4000cae8:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000caec:	e1c00001 	bic	r0, r0, r1
4000caf0:	e5840008 	str	r0, [r4, #8]
4000caf4:	e59d0014 	ldr	r0, [sp, #20]
4000caf8:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000cafc:	e1510000 	cmp	r1, r0
4000cb00:	1a000002 	bne	4000cb10 <_tx_event_flags_set+0x3f8>
4000cb04:	e3a00000 	mov	r0, #0
4000cb08:	e58d0004 	str	r0, [sp, #4]
4000cb0c:	ea000010 	b	4000cb54 <_tx_event_flags_set+0x43c>
4000cb10:	e59d0004 	ldr	r0, [sp, #4]
4000cb14:	e59d1014 	ldr	r1, [sp, #20]
4000cb18:	e1500001 	cmp	r0, r1
4000cb1c:	1a000002 	bne	4000cb2c <_tx_event_flags_set+0x414>
4000cb20:	e59d0014 	ldr	r0, [sp, #20]
4000cb24:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cb28:	e58d0004 	str	r0, [sp, #4]
4000cb2c:	e59d0014 	ldr	r0, [sp, #20]
4000cb30:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cb34:	e59d1014 	ldr	r1, [sp, #20]
4000cb38:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000cb3c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000cb40:	e59d0014 	ldr	r0, [sp, #20]
4000cb44:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cb48:	e59d1014 	ldr	r1, [sp, #20]
4000cb4c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000cb50:	e5810070 	str	r0, [r1, #112]	; 0x70
4000cb54:	e5940014 	ldr	r0, [r4, #20]
4000cb58:	e2400001 	sub	r0, r0, #1
4000cb5c:	e5840014 	str	r0, [r4, #20]
4000cb60:	e3a00000 	mov	r0, #0
4000cb64:	e59d1014 	ldr	r1, [sp, #20]
4000cb68:	e5810068 	str	r0, [r1, #104]	; 0x68
4000cb6c:	e59d1014 	ldr	r1, [sp, #20]
4000cb70:	e5810084 	str	r0, [r1, #132]	; 0x84
4000cb74:	e59d000c 	ldr	r0, [sp, #12]
4000cb78:	e3500000 	cmp	r0, #0
4000cb7c:	1a000007 	bne	4000cba0 <_tx_event_flags_set+0x488>
4000cb80:	e59d0014 	ldr	r0, [sp, #20]
4000cb84:	e58d000c 	str	r0, [sp, #12]
4000cb88:	e59d0014 	ldr	r0, [sp, #20]
4000cb8c:	e58d0008 	str	r0, [sp, #8]
4000cb90:	e3a01000 	mov	r1, #0
4000cb94:	e59d0014 	ldr	r0, [sp, #20]
4000cb98:	e5801070 	str	r1, [r0, #112]	; 0x70
4000cb9c:	ea000007 	b	4000cbc0 <_tx_event_flags_set+0x4a8>
4000cba0:	e59d0014 	ldr	r0, [sp, #20]
4000cba4:	e59d1008 	ldr	r1, [sp, #8]
4000cba8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000cbac:	e3a00000 	mov	r0, #0
4000cbb0:	e59d1014 	ldr	r1, [sp, #20]
4000cbb4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000cbb8:	e59d0014 	ldr	r0, [sp, #20]
4000cbbc:	e58d0008 	str	r0, [sp, #8]
4000cbc0:	e59d0010 	ldr	r0, [sp, #16]
4000cbc4:	e58d0014 	str	r0, [sp, #20]
4000cbc8:	e59d0000 	ldr	r0, [sp]
4000cbcc:	e2500001 	subs	r0, r0, #1
4000cbd0:	e58d0000 	str	r0, [sp]
4000cbd4:	1affff8c 	bne	4000ca0c <_tx_event_flags_set+0x2f4>
4000cbd8:	e1a00000 	nop			; (mov r0, r0)
4000cbdc:	e59d0004 	ldr	r0, [sp, #4]
4000cbe0:	e5840010 	str	r0, [r4, #16]
4000cbe4:	e5940020 	ldr	r0, [r4, #32]
4000cbe8:	e3500000 	cmp	r0, #0
4000cbec:	0a000005 	beq	4000cc08 <_tx_event_flags_set+0x4f0>
4000cbf0:	e5940008 	ldr	r0, [r4, #8]
4000cbf4:	e5941020 	ldr	r1, [r4, #32]
4000cbf8:	e1c00001 	bic	r0, r0, r1
4000cbfc:	e5840008 	str	r0, [r4, #8]
4000cc00:	e3a00000 	mov	r0, #0
4000cc04:	e5840020 	str	r0, [r4, #32]
4000cc08:	e121f007 	msr	CPSR_c, r7
4000cc0c:	e59d000c 	ldr	r0, [sp, #12]
4000cc10:	e58d0014 	str	r0, [sp, #20]
4000cc14:	ea000011 	b	4000cc60 <_tx_event_flags_set+0x548>
4000cc18:	e59d0014 	ldr	r0, [sp, #20]
4000cc1c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cc20:	e58d0010 	str	r0, [sp, #16]
4000cc24:	e10f7000 	mrs	r7, CPSR
4000cc28:	e3870080 	orr	r0, r7, #128	; 0x80
4000cc2c:	e58d0018 	str	r0, [sp, #24]
4000cc30:	e59d0018 	ldr	r0, [sp, #24]
4000cc34:	e121f000 	msr	CPSR_c, r0
4000cc38:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000cc3c:	e5900000 	ldr	r0, [r0]
4000cc40:	e2800001 	add	r0, r0, #1
4000cc44:	e59f10b0 	ldr	r1, [pc, #176]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000cc48:	e5810000 	str	r0, [r1]
4000cc4c:	e121f007 	msr	CPSR_c, r7
4000cc50:	e59d0014 	ldr	r0, [sp, #20]
4000cc54:	eb000a75 	bl	4000f630 <_tx_thread_system_resume>
4000cc58:	e59d0010 	ldr	r0, [sp, #16]
4000cc5c:	e58d0014 	str	r0, [sp, #20]
4000cc60:	e59d0014 	ldr	r0, [sp, #20]
4000cc64:	e3500000 	cmp	r0, #0
4000cc68:	1affffea 	bne	4000cc18 <_tx_event_flags_set+0x500>
4000cc6c:	e10f7000 	mrs	r7, CPSR
4000cc70:	e3870080 	orr	r0, r7, #128	; 0x80
4000cc74:	e58d0018 	str	r0, [sp, #24]
4000cc78:	e59d0018 	ldr	r0, [sp, #24]
4000cc7c:	e121f000 	msr	CPSR_c, r0
4000cc80:	e59f0074 	ldr	r0, [pc, #116]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000cc84:	e5900000 	ldr	r0, [r0]
4000cc88:	e2400001 	sub	r0, r0, #1
4000cc8c:	e59f1068 	ldr	r1, [pc, #104]	; 4000ccfc <_tx_event_flags_set+0x5e4>
4000cc90:	e5810000 	str	r0, [r1]
4000cc94:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cc98:	e121f007 	msr	CPSR_c, r7
4000cc9c:	eb000a37 	bl	4000f580 <_tx_thread_system_preempt_check>
4000cca0:	ea000007 	b	4000ccc4 <_tx_event_flags_set+0x5ac>
4000cca4:	e5940014 	ldr	r0, [r4, #20]
4000cca8:	e3500000 	cmp	r0, #0
4000ccac:	0a000002 	beq	4000ccbc <_tx_event_flags_set+0x5a4>
4000ccb0:	e594000c 	ldr	r0, [r4, #12]
4000ccb4:	e2800001 	add	r0, r0, #1
4000ccb8:	e584000c 	str	r0, [r4, #12]
4000ccbc:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000ccc0:	e121f007 	msr	CPSR_c, r7
4000ccc4:	e35b0000 	cmp	fp, #0
4000ccc8:	0a000001 	beq	4000ccd4 <_tx_event_flags_set+0x5bc>
4000cccc:	e1a00004 	mov	r0, r4
4000ccd0:	e12fff3b 	blx	fp
4000ccd4:	e3a00000 	mov	r0, #0
4000ccd8:	eafffee0 	b	4000c860 <_tx_event_flags_set+0x148>
4000ccdc:	40030ec0 	.word	0x40030ec0
4000cce0:	40030ec4 	.word	0x40030ec4
4000cce4:	40030e4c 	.word	0x40030e4c
4000cce8:	40030e54 	.word	0x40030e54
4000ccec:	f0f0f0f0 	.word	0xf0f0f0f0
4000ccf0:	40030ebc 	.word	0x40030ebc
4000ccf4:	40030eb8 	.word	0x40030eb8
4000ccf8:	40030eac 	.word	0x40030eac
4000ccfc:	40030e70 	.word	0x40030e70

4000cd00 <_tx_initialize_high_level>:
4000cd00:	e92d4010 	push	{r4, lr}
4000cd04:	ebfff38a 	bl	40009b34 <_tx_trace_initialize>
4000cd08:	ebffeff0 	bl	40008cd0 <_tx_thread_initialize>
4000cd0c:	ebfff26b 	bl	400096c0 <_tx_timer_initialize>
4000cd10:	e3a00000 	mov	r0, #0
4000cd14:	e59f105c 	ldr	r1, [pc, #92]	; 4000cd78 <_tx_initialize_high_level+0x78>
4000cd18:	e5810000 	str	r0, [r1]
4000cd1c:	e59f1058 	ldr	r1, [pc, #88]	; 4000cd7c <_tx_initialize_high_level+0x7c>
4000cd20:	e5810000 	str	r0, [r1]
4000cd24:	e59f1054 	ldr	r1, [pc, #84]	; 4000cd80 <_tx_initialize_high_level+0x80>
4000cd28:	e5810000 	str	r0, [r1]
4000cd2c:	e59f1050 	ldr	r1, [pc, #80]	; 4000cd84 <_tx_initialize_high_level+0x84>
4000cd30:	e5810000 	str	r0, [r1]
4000cd34:	e59f104c 	ldr	r1, [pc, #76]	; 4000cd88 <_tx_initialize_high_level+0x88>
4000cd38:	e5810000 	str	r0, [r1]
4000cd3c:	e59f1048 	ldr	r1, [pc, #72]	; 4000cd8c <_tx_initialize_high_level+0x8c>
4000cd40:	e5810000 	str	r0, [r1]
4000cd44:	e59f1044 	ldr	r1, [pc, #68]	; 4000cd90 <_tx_initialize_high_level+0x90>
4000cd48:	e5810000 	str	r0, [r1]
4000cd4c:	e59f1040 	ldr	r1, [pc, #64]	; 4000cd94 <_tx_initialize_high_level+0x94>
4000cd50:	e5810000 	str	r0, [r1]
4000cd54:	e59f103c 	ldr	r1, [pc, #60]	; 4000cd98 <_tx_initialize_high_level+0x98>
4000cd58:	e5810000 	str	r0, [r1]
4000cd5c:	e59f1038 	ldr	r1, [pc, #56]	; 4000cd9c <_tx_initialize_high_level+0x9c>
4000cd60:	e5810000 	str	r0, [r1]
4000cd64:	e59f1034 	ldr	r1, [pc, #52]	; 4000cda0 <_tx_initialize_high_level+0xa0>
4000cd68:	e5810000 	str	r0, [r1]
4000cd6c:	e59f1030 	ldr	r1, [pc, #48]	; 4000cda4 <_tx_initialize_high_level+0xa4>
4000cd70:	e5810000 	str	r0, [r1]
4000cd74:	e8bd8010 	pop	{r4, pc}
4000cd78:	40030ec8 	.word	0x40030ec8
4000cd7c:	40030ecc 	.word	0x40030ecc
4000cd80:	40030ed0 	.word	0x40030ed0
4000cd84:	40030ed4 	.word	0x40030ed4
4000cd88:	40030ed8 	.word	0x40030ed8
4000cd8c:	40030edc 	.word	0x40030edc
4000cd90:	40030ee8 	.word	0x40030ee8
4000cd94:	40030eec 	.word	0x40030eec
4000cd98:	40030ef0 	.word	0x40030ef0
4000cd9c:	40030ef4 	.word	0x40030ef4
4000cda0:	40030ee0 	.word	0x40030ee0
4000cda4:	40030ee4 	.word	0x40030ee4

4000cda8 <_tx_mutex_create>:
4000cda8:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000cdac:	e1a04000 	mov	r4, r0
4000cdb0:	e1a05001 	mov	r5, r1
4000cdb4:	e1a06002 	mov	r6, r2
4000cdb8:	e3a01038 	mov	r1, #56	; 0x38
4000cdbc:	e1a00004 	mov	r0, r4
4000cdc0:	eb001b0e 	bl	40013a00 <__aeabi_memclr4>
4000cdc4:	e5845004 	str	r5, [r4, #4]
4000cdc8:	e5846010 	str	r6, [r4, #16]
4000cdcc:	e10f7000 	mrs	r7, CPSR
4000cdd0:	e3878080 	orr	r8, r7, #128	; 0x80
4000cdd4:	e121f008 	msr	CPSR_c, r8
4000cdd8:	e59f0174 	ldr	r0, [pc, #372]	; 4000cf54 <_tx_mutex_create+0x1ac>
4000cddc:	e5840000 	str	r0, [r4]
4000cde0:	e59f0170 	ldr	r0, [pc, #368]	; 4000cf58 <_tx_mutex_create+0x1b0>
4000cde4:	e5900000 	ldr	r0, [r0]
4000cde8:	e3500000 	cmp	r0, #0
4000cdec:	0a00000e 	beq	4000ce2c <_tx_mutex_create+0x84>
4000cdf0:	e59f0160 	ldr	r0, [pc, #352]	; 4000cf58 <_tx_mutex_create+0x1b0>
4000cdf4:	e5900000 	ldr	r0, [r0]
4000cdf8:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000cdfc:	e58d0004 	str	r0, [sp, #4]
4000ce00:	e59f0150 	ldr	r0, [pc, #336]	; 4000cf58 <_tx_mutex_create+0x1b0>
4000ce04:	e5900000 	ldr	r0, [r0]
4000ce08:	e5804028 	str	r4, [r0, #40]	; 0x28
4000ce0c:	e59d0004 	ldr	r0, [sp, #4]
4000ce10:	e5804024 	str	r4, [r0, #36]	; 0x24
4000ce14:	e59d0004 	ldr	r0, [sp, #4]
4000ce18:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ce1c:	e59f0134 	ldr	r0, [pc, #308]	; 4000cf58 <_tx_mutex_create+0x1b0>
4000ce20:	e5900000 	ldr	r0, [r0]
4000ce24:	e5840024 	str	r0, [r4, #36]	; 0x24
4000ce28:	ea000003 	b	4000ce3c <_tx_mutex_create+0x94>
4000ce2c:	e59f0124 	ldr	r0, [pc, #292]	; 4000cf58 <_tx_mutex_create+0x1b0>
4000ce30:	e5804000 	str	r4, [r0]
4000ce34:	e5844024 	str	r4, [r4, #36]	; 0x24
4000ce38:	e5844028 	str	r4, [r4, #40]	; 0x28
4000ce3c:	e59f0118 	ldr	r0, [pc, #280]	; 4000cf5c <_tx_mutex_create+0x1b4>
4000ce40:	e5900000 	ldr	r0, [r0]
4000ce44:	e2800001 	add	r0, r0, #1
4000ce48:	e59f110c 	ldr	r1, [pc, #268]	; 4000cf5c <_tx_mutex_create+0x1b4>
4000ce4c:	e5810000 	str	r0, [r1]
4000ce50:	e3a03000 	mov	r3, #0
4000ce54:	e58d3000 	str	r3, [sp]
4000ce58:	e1a03006 	mov	r3, r6
4000ce5c:	e1a02005 	mov	r2, r5
4000ce60:	e1a01004 	mov	r1, r4
4000ce64:	e3a00005 	mov	r0, #5
4000ce68:	eb000d46 	bl	40010388 <_tx_trace_object_register>
4000ce6c:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cf60 <_tx_mutex_create+0x1b8>
4000ce70:	e5910000 	ldr	r0, [r1]
4000ce74:	e3500000 	cmp	r0, #0
4000ce78:	0a000032 	beq	4000cf48 <_tx_mutex_create+0x1a0>
4000ce7c:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cf64 <_tx_mutex_create+0x1bc>
4000ce80:	e5911000 	ldr	r1, [r1]
4000ce84:	e2811001 	add	r1, r1, #1
4000ce88:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cf64 <_tx_mutex_create+0x1bc>
4000ce8c:	e5821000 	str	r1, [r2]
4000ce90:	e580100c 	str	r1, [r0, #12]
4000ce94:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cf68 <_tx_mutex_create+0x1c0>
4000ce98:	e5911000 	ldr	r1, [r1]
4000ce9c:	e3510000 	cmp	r1, #0
4000cea0:	1a000006 	bne	4000cec0 <_tx_mutex_create+0x118>
4000cea4:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cf6c <_tx_mutex_create+0x1c4>
4000cea8:	e5911000 	ldr	r1, [r1]
4000ceac:	e5801000 	str	r1, [r0]
4000ceb0:	e5901000 	ldr	r1, [r0]
4000ceb4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ceb8:	e5801004 	str	r1, [r0, #4]
4000cebc:	ea00000d 	b	4000cef8 <_tx_mutex_create+0x150>
4000cec0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cf68 <_tx_mutex_create+0x1c0>
4000cec4:	e5911000 	ldr	r1, [r1]
4000cec8:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cf70 <_tx_mutex_create+0x1c8>
4000cecc:	e1510002 	cmp	r1, r2
4000ced0:	2a000004 	bcs	4000cee8 <_tx_mutex_create+0x140>
4000ced4:	e3e01000 	mvn	r1, #0
4000ced8:	e5801000 	str	r1, [r0]
4000cedc:	e3a01000 	mov	r1, #0
4000cee0:	e5801004 	str	r1, [r0, #4]
4000cee4:	ea000003 	b	4000cef8 <_tx_mutex_create+0x150>
4000cee8:	e59f1080 	ldr	r1, [pc, #128]	; 4000cf70 <_tx_mutex_create+0x1c8>
4000ceec:	e5801000 	str	r1, [r0]
4000cef0:	e3a01000 	mov	r1, #0
4000cef4:	e5801004 	str	r1, [r0, #4]
4000cef8:	e3a01032 	mov	r1, #50	; 0x32
4000cefc:	e5801008 	str	r1, [r0, #8]
4000cf00:	e5804010 	str	r4, [r0, #16]
4000cf04:	e5806014 	str	r6, [r0, #20]
4000cf08:	e28d1004 	add	r1, sp, #4
4000cf0c:	e5801018 	str	r1, [r0, #24]
4000cf10:	e3a01000 	mov	r1, #0
4000cf14:	e580101c 	str	r1, [r0, #28]
4000cf18:	e2800020 	add	r0, r0, #32
4000cf1c:	e59f1050 	ldr	r1, [pc, #80]	; 4000cf74 <_tx_mutex_create+0x1cc>
4000cf20:	e5911000 	ldr	r1, [r1]
4000cf24:	e1500001 	cmp	r0, r1
4000cf28:	3a000001 	bcc	4000cf34 <_tx_mutex_create+0x18c>
4000cf2c:	e59f1044 	ldr	r1, [pc, #68]	; 4000cf78 <_tx_mutex_create+0x1d0>
4000cf30:	e5910000 	ldr	r0, [r1]
4000cf34:	e59f1024 	ldr	r1, [pc, #36]	; 4000cf60 <_tx_mutex_create+0x1b8>
4000cf38:	e5810000 	str	r0, [r1]
4000cf3c:	e59f1038 	ldr	r1, [pc, #56]	; 4000cf7c <_tx_mutex_create+0x1d4>
4000cf40:	e5911000 	ldr	r1, [r1]
4000cf44:	e5810020 	str	r0, [r1, #32]
4000cf48:	e121f007 	msr	CPSR_c, r7
4000cf4c:	e3a00000 	mov	r0, #0
4000cf50:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cf54:	4d555445 	.word	0x4d555445
4000cf58:	40030ee0 	.word	0x40030ee0
4000cf5c:	40030ee4 	.word	0x40030ee4
4000cf60:	40030ec0 	.word	0x40030ec0
4000cf64:	40030ec4 	.word	0x40030ec4
4000cf68:	40030e4c 	.word	0x40030e4c
4000cf6c:	40030e54 	.word	0x40030e54
4000cf70:	f0f0f0f0 	.word	0xf0f0f0f0
4000cf74:	40030ebc 	.word	0x40030ebc
4000cf78:	40030eb8 	.word	0x40030eb8
4000cf7c:	40030eac 	.word	0x40030eac

4000cf80 <_tx_mutex_delete>:
4000cf80:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cf84:	e1a04000 	mov	r4, r0
4000cf88:	e10f5000 	mrs	r5, CPSR
4000cf8c:	e3856080 	orr	r6, r5, #128	; 0x80
4000cf90:	e121f006 	msr	CPSR_c, r6
4000cf94:	e59f1294 	ldr	r1, [pc, #660]	; 4000d230 <_tx_mutex_delete+0x2b0>
4000cf98:	e5910000 	ldr	r0, [r1]
4000cf9c:	e3500000 	cmp	r0, #0
4000cfa0:	0a000031 	beq	4000d06c <_tx_mutex_delete+0xec>
4000cfa4:	e59f1288 	ldr	r1, [pc, #648]	; 4000d234 <_tx_mutex_delete+0x2b4>
4000cfa8:	e5911000 	ldr	r1, [r1]
4000cfac:	e2811001 	add	r1, r1, #1
4000cfb0:	e59f227c 	ldr	r2, [pc, #636]	; 4000d234 <_tx_mutex_delete+0x2b4>
4000cfb4:	e5821000 	str	r1, [r2]
4000cfb8:	e580100c 	str	r1, [r0, #12]
4000cfbc:	e59f1274 	ldr	r1, [pc, #628]	; 4000d238 <_tx_mutex_delete+0x2b8>
4000cfc0:	e5911000 	ldr	r1, [r1]
4000cfc4:	e3510000 	cmp	r1, #0
4000cfc8:	1a000006 	bne	4000cfe8 <_tx_mutex_delete+0x68>
4000cfcc:	e59f1268 	ldr	r1, [pc, #616]	; 4000d23c <_tx_mutex_delete+0x2bc>
4000cfd0:	e5911000 	ldr	r1, [r1]
4000cfd4:	e5801000 	str	r1, [r0]
4000cfd8:	e5901000 	ldr	r1, [r0]
4000cfdc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cfe0:	e5801004 	str	r1, [r0, #4]
4000cfe4:	ea00000d 	b	4000d020 <_tx_mutex_delete+0xa0>
4000cfe8:	e59f1248 	ldr	r1, [pc, #584]	; 4000d238 <_tx_mutex_delete+0x2b8>
4000cfec:	e5911000 	ldr	r1, [r1]
4000cff0:	e59f2248 	ldr	r2, [pc, #584]	; 4000d240 <_tx_mutex_delete+0x2c0>
4000cff4:	e1510002 	cmp	r1, r2
4000cff8:	2a000004 	bcs	4000d010 <_tx_mutex_delete+0x90>
4000cffc:	e3e01000 	mvn	r1, #0
4000d000:	e5801000 	str	r1, [r0]
4000d004:	e3a01000 	mov	r1, #0
4000d008:	e5801004 	str	r1, [r0, #4]
4000d00c:	ea000003 	b	4000d020 <_tx_mutex_delete+0xa0>
4000d010:	e59f1228 	ldr	r1, [pc, #552]	; 4000d240 <_tx_mutex_delete+0x2c0>
4000d014:	e5801000 	str	r1, [r0]
4000d018:	e3a01000 	mov	r1, #0
4000d01c:	e5801004 	str	r1, [r0, #4]
4000d020:	e3a01033 	mov	r1, #51	; 0x33
4000d024:	e5801008 	str	r1, [r0, #8]
4000d028:	e5804010 	str	r4, [r0, #16]
4000d02c:	e580d014 	str	sp, [r0, #20]
4000d030:	e3a01000 	mov	r1, #0
4000d034:	e5801018 	str	r1, [r0, #24]
4000d038:	e580101c 	str	r1, [r0, #28]
4000d03c:	e2800020 	add	r0, r0, #32
4000d040:	e59f11fc 	ldr	r1, [pc, #508]	; 4000d244 <_tx_mutex_delete+0x2c4>
4000d044:	e5911000 	ldr	r1, [r1]
4000d048:	e1500001 	cmp	r0, r1
4000d04c:	3a000001 	bcc	4000d058 <_tx_mutex_delete+0xd8>
4000d050:	e59f11f0 	ldr	r1, [pc, #496]	; 4000d248 <_tx_mutex_delete+0x2c8>
4000d054:	e5910000 	ldr	r0, [r1]
4000d058:	e59f11d0 	ldr	r1, [pc, #464]	; 4000d230 <_tx_mutex_delete+0x2b0>
4000d05c:	e5810000 	str	r0, [r1]
4000d060:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d24c <_tx_mutex_delete+0x2cc>
4000d064:	e5911000 	ldr	r1, [r1]
4000d068:	e5810020 	str	r0, [r1, #32]
4000d06c:	e1a00004 	mov	r0, r4
4000d070:	eb000d2f 	bl	40010534 <_tx_trace_object_unregister>
4000d074:	e59f01d4 	ldr	r0, [pc, #468]	; 4000d250 <_tx_mutex_delete+0x2d0>
4000d078:	e5900000 	ldr	r0, [r0]
4000d07c:	e2400001 	sub	r0, r0, #1
4000d080:	e59f11c8 	ldr	r1, [pc, #456]	; 4000d250 <_tx_mutex_delete+0x2d0>
4000d084:	e5810000 	str	r0, [r1]
4000d088:	e3a00000 	mov	r0, #0
4000d08c:	e5840000 	str	r0, [r4]
4000d090:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000d094:	e1500004 	cmp	r0, r4
4000d098:	1a000003 	bne	4000d0ac <_tx_mutex_delete+0x12c>
4000d09c:	e3a00000 	mov	r0, #0
4000d0a0:	e59f11ac 	ldr	r1, [pc, #428]	; 4000d254 <_tx_mutex_delete+0x2d4>
4000d0a4:	e5810000 	str	r0, [r1]
4000d0a8:	ea00000c 	b	4000d0e0 <_tx_mutex_delete+0x160>
4000d0ac:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000d0b0:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000d0b4:	e5810028 	str	r0, [r1, #40]	; 0x28
4000d0b8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000d0bc:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000d0c0:	e5810024 	str	r0, [r1, #36]	; 0x24
4000d0c4:	e59f0188 	ldr	r0, [pc, #392]	; 4000d254 <_tx_mutex_delete+0x2d4>
4000d0c8:	e5900000 	ldr	r0, [r0]
4000d0cc:	e1500004 	cmp	r0, r4
4000d0d0:	1a000002 	bne	4000d0e0 <_tx_mutex_delete+0x160>
4000d0d4:	e59f1178 	ldr	r1, [pc, #376]	; 4000d254 <_tx_mutex_delete+0x2d4>
4000d0d8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000d0dc:	e5810000 	str	r0, [r1]
4000d0e0:	e594000c 	ldr	r0, [r4, #12]
4000d0e4:	e58d0000 	str	r0, [sp]
4000d0e8:	e5940010 	ldr	r0, [r4, #16]
4000d0ec:	e3500000 	cmp	r0, #0
4000d0f0:	0a00001c 	beq	4000d168 <_tx_mutex_delete+0x1e8>
4000d0f4:	e59d0000 	ldr	r0, [sp]
4000d0f8:	e3500000 	cmp	r0, #0
4000d0fc:	0a000019 	beq	4000d168 <_tx_mutex_delete+0x1e8>
4000d100:	e59d0000 	ldr	r0, [sp]
4000d104:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000d108:	e2400001 	sub	r0, r0, #1
4000d10c:	e59d1000 	ldr	r1, [sp]
4000d110:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000d114:	e59d0000 	ldr	r0, [sp]
4000d118:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000d11c:	e3500000 	cmp	r0, #0
4000d120:	1a000003 	bne	4000d134 <_tx_mutex_delete+0x1b4>
4000d124:	e3a00000 	mov	r0, #0
4000d128:	e59d1000 	ldr	r1, [sp]
4000d12c:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000d130:	ea00000c 	b	4000d168 <_tx_mutex_delete+0x1e8>
4000d134:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d138:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d13c:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d140:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d144:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d148:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d14c:	e59d0000 	ldr	r0, [sp]
4000d150:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000d154:	e1500004 	cmp	r0, r4
4000d158:	1a000002 	bne	4000d168 <_tx_mutex_delete+0x1e8>
4000d15c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d160:	e59d1000 	ldr	r1, [sp]
4000d164:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000d168:	e3a00000 	mov	r0, #0
4000d16c:	e584000c 	str	r0, [r4, #12]
4000d170:	e59f00e0 	ldr	r0, [pc, #224]	; 4000d258 <_tx_mutex_delete+0x2d8>
4000d174:	e5900000 	ldr	r0, [r0]
4000d178:	e2800001 	add	r0, r0, #1
4000d17c:	e59f10d4 	ldr	r1, [pc, #212]	; 4000d258 <_tx_mutex_delete+0x2d8>
4000d180:	e5810000 	str	r0, [r1]
4000d184:	e121f005 	msr	CPSR_c, r5
4000d188:	e594001c 	ldr	r0, [r4, #28]
4000d18c:	e58d0000 	str	r0, [sp]
4000d190:	ea000017 	b	4000d1f4 <_tx_mutex_delete+0x274>
4000d194:	e10f5000 	mrs	r5, CPSR
4000d198:	e3856080 	orr	r6, r5, #128	; 0x80
4000d19c:	e121f006 	msr	CPSR_c, r6
4000d1a0:	e3a00000 	mov	r0, #0
4000d1a4:	e59d1000 	ldr	r1, [sp]
4000d1a8:	e5810068 	str	r0, [r1, #104]	; 0x68
4000d1ac:	e59f00a4 	ldr	r0, [pc, #164]	; 4000d258 <_tx_mutex_delete+0x2d8>
4000d1b0:	e5900000 	ldr	r0, [r0]
4000d1b4:	e2800001 	add	r0, r0, #1
4000d1b8:	e59f1098 	ldr	r1, [pc, #152]	; 4000d258 <_tx_mutex_delete+0x2d8>
4000d1bc:	e5810000 	str	r0, [r1]
4000d1c0:	e121f005 	msr	CPSR_c, r5
4000d1c4:	e3a00001 	mov	r0, #1
4000d1c8:	e59d1000 	ldr	r1, [sp]
4000d1cc:	e5810084 	str	r0, [r1, #132]	; 0x84
4000d1d0:	e59d0000 	ldr	r0, [sp]
4000d1d4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000d1d8:	e58d0000 	str	r0, [sp]
4000d1dc:	e59d1000 	ldr	r1, [sp]
4000d1e0:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000d1e4:	eb000911 	bl	4000f630 <_tx_thread_system_resume>
4000d1e8:	e5940020 	ldr	r0, [r4, #32]
4000d1ec:	e2400001 	sub	r0, r0, #1
4000d1f0:	e5840020 	str	r0, [r4, #32]
4000d1f4:	e5940020 	ldr	r0, [r4, #32]
4000d1f8:	e3500000 	cmp	r0, #0
4000d1fc:	1affffe4 	bne	4000d194 <_tx_mutex_delete+0x214>
4000d200:	e10f5000 	mrs	r5, CPSR
4000d204:	e3856080 	orr	r6, r5, #128	; 0x80
4000d208:	e121f006 	msr	CPSR_c, r6
4000d20c:	e59f0044 	ldr	r0, [pc, #68]	; 4000d258 <_tx_mutex_delete+0x2d8>
4000d210:	e5900000 	ldr	r0, [r0]
4000d214:	e2400001 	sub	r0, r0, #1
4000d218:	e59f1038 	ldr	r1, [pc, #56]	; 4000d258 <_tx_mutex_delete+0x2d8>
4000d21c:	e5810000 	str	r0, [r1]
4000d220:	e121f005 	msr	CPSR_c, r5
4000d224:	eb0008d5 	bl	4000f580 <_tx_thread_system_preempt_check>
4000d228:	e3a00000 	mov	r0, #0
4000d22c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000d230:	40030ec0 	.word	0x40030ec0
4000d234:	40030ec4 	.word	0x40030ec4
4000d238:	40030e4c 	.word	0x40030e4c
4000d23c:	40030e54 	.word	0x40030e54
4000d240:	f0f0f0f0 	.word	0xf0f0f0f0
4000d244:	40030ebc 	.word	0x40030ebc
4000d248:	40030eb8 	.word	0x40030eb8
4000d24c:	40030eac 	.word	0x40030eac
4000d250:	40030ee4 	.word	0x40030ee4
4000d254:	40030ee0 	.word	0x40030ee0
4000d258:	40030e70 	.word	0x40030e70

4000d25c <_tx_mutex_get>:
4000d25c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000d260:	e1a04000 	mov	r4, r0
4000d264:	e1a05001 	mov	r5, r1
4000d268:	e10f6000 	mrs	r6, CPSR
4000d26c:	e3867080 	orr	r7, r6, #128	; 0x80
4000d270:	e121f007 	msr	CPSR_c, r7
4000d274:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d528 <_tx_mutex_get+0x2cc>
4000d278:	e5910000 	ldr	r0, [r1]
4000d27c:	e3500000 	cmp	r0, #0
4000d280:	0a000032 	beq	4000d350 <_tx_mutex_get+0xf4>
4000d284:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d52c <_tx_mutex_get+0x2d0>
4000d288:	e5911000 	ldr	r1, [r1]
4000d28c:	e2811001 	add	r1, r1, #1
4000d290:	e59f2294 	ldr	r2, [pc, #660]	; 4000d52c <_tx_mutex_get+0x2d0>
4000d294:	e5821000 	str	r1, [r2]
4000d298:	e580100c 	str	r1, [r0, #12]
4000d29c:	e59f128c 	ldr	r1, [pc, #652]	; 4000d530 <_tx_mutex_get+0x2d4>
4000d2a0:	e5911000 	ldr	r1, [r1]
4000d2a4:	e3510000 	cmp	r1, #0
4000d2a8:	1a000006 	bne	4000d2c8 <_tx_mutex_get+0x6c>
4000d2ac:	e59f1280 	ldr	r1, [pc, #640]	; 4000d534 <_tx_mutex_get+0x2d8>
4000d2b0:	e5911000 	ldr	r1, [r1]
4000d2b4:	e5801000 	str	r1, [r0]
4000d2b8:	e5901000 	ldr	r1, [r0]
4000d2bc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d2c0:	e5801004 	str	r1, [r0, #4]
4000d2c4:	ea00000d 	b	4000d300 <_tx_mutex_get+0xa4>
4000d2c8:	e59f1260 	ldr	r1, [pc, #608]	; 4000d530 <_tx_mutex_get+0x2d4>
4000d2cc:	e5911000 	ldr	r1, [r1]
4000d2d0:	e59f2260 	ldr	r2, [pc, #608]	; 4000d538 <_tx_mutex_get+0x2dc>
4000d2d4:	e1510002 	cmp	r1, r2
4000d2d8:	2a000004 	bcs	4000d2f0 <_tx_mutex_get+0x94>
4000d2dc:	e3e01000 	mvn	r1, #0
4000d2e0:	e5801000 	str	r1, [r0]
4000d2e4:	e3a01000 	mov	r1, #0
4000d2e8:	e5801004 	str	r1, [r0, #4]
4000d2ec:	ea000003 	b	4000d300 <_tx_mutex_get+0xa4>
4000d2f0:	e59f1240 	ldr	r1, [pc, #576]	; 4000d538 <_tx_mutex_get+0x2dc>
4000d2f4:	e5801000 	str	r1, [r0]
4000d2f8:	e3a01000 	mov	r1, #0
4000d2fc:	e5801004 	str	r1, [r0, #4]
4000d300:	e3a01034 	mov	r1, #52	; 0x34
4000d304:	e5801008 	str	r1, [r0, #8]
4000d308:	e5804010 	str	r4, [r0, #16]
4000d30c:	e5805014 	str	r5, [r0, #20]
4000d310:	e594100c 	ldr	r1, [r4, #12]
4000d314:	e5801018 	str	r1, [r0, #24]
4000d318:	e5941008 	ldr	r1, [r4, #8]
4000d31c:	e580101c 	str	r1, [r0, #28]
4000d320:	e2800020 	add	r0, r0, #32
4000d324:	e59f1210 	ldr	r1, [pc, #528]	; 4000d53c <_tx_mutex_get+0x2e0>
4000d328:	e5911000 	ldr	r1, [r1]
4000d32c:	e1500001 	cmp	r0, r1
4000d330:	3a000001 	bcc	4000d33c <_tx_mutex_get+0xe0>
4000d334:	e59f1204 	ldr	r1, [pc, #516]	; 4000d540 <_tx_mutex_get+0x2e4>
4000d338:	e5910000 	ldr	r0, [r1]
4000d33c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d528 <_tx_mutex_get+0x2cc>
4000d340:	e5810000 	str	r0, [r1]
4000d344:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d544 <_tx_mutex_get+0x2e8>
4000d348:	e5911000 	ldr	r1, [r1]
4000d34c:	e5810020 	str	r0, [r1, #32]
4000d350:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d534 <_tx_mutex_get+0x2d8>
4000d354:	e5909000 	ldr	r9, [r0]
4000d358:	e5940008 	ldr	r0, [r4, #8]
4000d35c:	e3500000 	cmp	r0, #0
4000d360:	1a000025 	bne	4000d3fc <_tx_mutex_get+0x1a0>
4000d364:	e3a00001 	mov	r0, #1
4000d368:	e5840008 	str	r0, [r4, #8]
4000d36c:	e584900c 	str	r9, [r4, #12]
4000d370:	e5940010 	ldr	r0, [r4, #16]
4000d374:	e3500000 	cmp	r0, #0
4000d378:	0a00001d 	beq	4000d3f4 <_tx_mutex_get+0x198>
4000d37c:	e3590000 	cmp	r9, #0
4000d380:	0a00001b 	beq	4000d3f4 <_tx_mutex_get+0x198>
4000d384:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d388:	e5840014 	str	r0, [r4, #20]
4000d38c:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d390:	e5840018 	str	r0, [r4, #24]
4000d394:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d398:	e3500000 	cmp	r0, #0
4000d39c:	0a000008 	beq	4000d3c4 <_tx_mutex_get+0x168>
4000d3a0:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d3a4:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d3a8:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d3ac:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d3b0:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d3b4:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d3b8:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d3bc:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d3c0:	ea000006 	b	4000d3e0 <_tx_mutex_get+0x184>
4000d3c4:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d3c8:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d3cc:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d3d0:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d3d4:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d3d8:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d3dc:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d3e0:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d3e4:	e2800001 	add	r0, r0, #1
4000d3e8:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d3ec:	e3a00020 	mov	r0, #32
4000d3f0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d3f4:	e3a08000 	mov	r8, #0
4000d3f8:	ea000047 	b	4000d51c <_tx_mutex_get+0x2c0>
4000d3fc:	e594000c 	ldr	r0, [r4, #12]
4000d400:	e1500009 	cmp	r0, r9
4000d404:	1a000004 	bne	4000d41c <_tx_mutex_get+0x1c0>
4000d408:	e5940008 	ldr	r0, [r4, #8]
4000d40c:	e2800001 	add	r0, r0, #1
4000d410:	e5840008 	str	r0, [r4, #8]
4000d414:	e3a08000 	mov	r8, #0
4000d418:	ea00003f 	b	4000d51c <_tx_mutex_get+0x2c0>
4000d41c:	e3550000 	cmp	r5, #0
4000d420:	0a00003c 	beq	4000d518 <_tx_mutex_get+0x2bc>
4000d424:	e59f011c 	ldr	r0, [pc, #284]	; 4000d548 <_tx_mutex_get+0x2ec>
4000d428:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d42c:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d430:	e594001c 	ldr	r0, [r4, #28]
4000d434:	e3500000 	cmp	r0, #0
4000d438:	0a00000a 	beq	4000d468 <_tx_mutex_get+0x20c>
4000d43c:	e594001c 	ldr	r0, [r4, #28]
4000d440:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d444:	e594001c 	ldr	r0, [r4, #28]
4000d448:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d44c:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d450:	e594001c 	ldr	r0, [r4, #28]
4000d454:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d458:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d45c:	e594001c 	ldr	r0, [r4, #28]
4000d460:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d464:	ea000002 	b	4000d474 <_tx_mutex_get+0x218>
4000d468:	e584901c 	str	r9, [r4, #28]
4000d46c:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d470:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d474:	e5940020 	ldr	r0, [r4, #32]
4000d478:	e2800001 	add	r0, r0, #1
4000d47c:	e5840020 	str	r0, [r4, #32]
4000d480:	e3a0000d 	mov	r0, #13
4000d484:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d488:	e3a00001 	mov	r0, #1
4000d48c:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d490:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d494:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d54c <_tx_mutex_get+0x2f0>
4000d498:	e5900000 	ldr	r0, [r0]
4000d49c:	e2800001 	add	r0, r0, #1
4000d4a0:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d54c <_tx_mutex_get+0x2f0>
4000d4a4:	e5810000 	str	r0, [r1]
4000d4a8:	e121f006 	msr	CPSR_c, r6
4000d4ac:	e5940010 	ldr	r0, [r4, #16]
4000d4b0:	e3500000 	cmp	r0, #0
4000d4b4:	0a000013 	beq	4000d508 <_tx_mutex_get+0x2ac>
4000d4b8:	e594000c 	ldr	r0, [r4, #12]
4000d4bc:	e3500000 	cmp	r0, #0
4000d4c0:	0a000010 	beq	4000d508 <_tx_mutex_get+0x2ac>
4000d4c4:	e3590000 	cmp	r9, #0
4000d4c8:	0a00000e 	beq	4000d508 <_tx_mutex_get+0x2ac>
4000d4cc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d4d0:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d4d4:	e1500001 	cmp	r0, r1
4000d4d8:	9a000001 	bls	4000d4e4 <_tx_mutex_get+0x288>
4000d4dc:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d4e0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d4e4:	e594000c 	ldr	r0, [r4, #12]
4000d4e8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d4ec:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d4f0:	e1500001 	cmp	r0, r1
4000d4f4:	9a000003 	bls	4000d508 <_tx_mutex_get+0x2ac>
4000d4f8:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d4fc:	e1a01002 	mov	r1, r2
4000d500:	e594000c 	ldr	r0, [r4, #12]
4000d504:	eb000011 	bl	4000d550 <_tx_mutex_priority_change>
4000d508:	e1a00009 	mov	r0, r9
4000d50c:	ebffeea0 	bl	40008f94 <_tx_thread_system_suspend>
4000d510:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d514:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d518:	e3a0801d 	mov	r8, #29
4000d51c:	e121f006 	msr	CPSR_c, r6
4000d520:	e1a00008 	mov	r0, r8
4000d524:	eafffffa 	b	4000d514 <_tx_mutex_get+0x2b8>
4000d528:	40030ec0 	.word	0x40030ec0
4000d52c:	40030ec4 	.word	0x40030ec4
4000d530:	40030e4c 	.word	0x40030e4c
4000d534:	40030e54 	.word	0x40030e54
4000d538:	f0f0f0f0 	.word	0xf0f0f0f0
4000d53c:	40030ebc 	.word	0x40030ebc
4000d540:	40030eb8 	.word	0x40030eb8
4000d544:	40030eac 	.word	0x40030eac
4000d548:	40010710 	.word	0x40010710
4000d54c:	40030e70 	.word	0x40030e70

4000d550 <_tx_mutex_priority_change>:
4000d550:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d554:	e1a04000 	mov	r4, r0
4000d558:	e1a05001 	mov	r5, r1
4000d55c:	e1a06002 	mov	r6, r2
4000d560:	e10f7000 	mrs	r7, CPSR
4000d564:	e3878080 	orr	r8, r7, #128	; 0x80
4000d568:	e121f008 	msr	CPSR_c, r8
4000d56c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d570:	e3500000 	cmp	r0, #0
4000d574:	0a000003 	beq	4000d588 <_tx_mutex_priority_change+0x38>
4000d578:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d57c:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d580:	e121f007 	msr	CPSR_c, r7
4000d584:	ea000011 	b	4000d5d0 <_tx_mutex_priority_change+0x80>
4000d588:	e59f0044 	ldr	r0, [pc, #68]	; 4000d5d4 <_tx_mutex_priority_change+0x84>
4000d58c:	e5900000 	ldr	r0, [r0]
4000d590:	e2800002 	add	r0, r0, #2
4000d594:	e59f1038 	ldr	r1, [pc, #56]	; 4000d5d4 <_tx_mutex_priority_change+0x84>
4000d598:	e5810000 	str	r0, [r1]
4000d59c:	e3a00003 	mov	r0, #3
4000d5a0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d5a4:	e3a00001 	mov	r0, #1
4000d5a8:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d5ac:	e3a00000 	mov	r0, #0
4000d5b0:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d5b4:	e121f007 	msr	CPSR_c, r7
4000d5b8:	e1a00004 	mov	r0, r4
4000d5bc:	ebffee74 	bl	40008f94 <_tx_thread_system_suspend>
4000d5c0:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d5c4:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d5c8:	e1a00004 	mov	r0, r4
4000d5cc:	eb000817 	bl	4000f630 <_tx_thread_system_resume>
4000d5d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d5d4:	40030e70 	.word	0x40030e70

4000d5d8 <_tx_mutex_put>:
4000d5d8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d5dc:	e1a04000 	mov	r4, r0
4000d5e0:	e10f5000 	mrs	r5, CPSR
4000d5e4:	e3856080 	orr	r6, r5, #128	; 0x80
4000d5e8:	e121f006 	msr	CPSR_c, r6
4000d5ec:	e59f1494 	ldr	r1, [pc, #1172]	; 4000da88 <_tx_mutex_put+0x4b0>
4000d5f0:	e5910000 	ldr	r0, [r1]
4000d5f4:	e3500000 	cmp	r0, #0
4000d5f8:	0a000032 	beq	4000d6c8 <_tx_mutex_put+0xf0>
4000d5fc:	e59f1488 	ldr	r1, [pc, #1160]	; 4000da8c <_tx_mutex_put+0x4b4>
4000d600:	e5911000 	ldr	r1, [r1]
4000d604:	e2811001 	add	r1, r1, #1
4000d608:	e59f247c 	ldr	r2, [pc, #1148]	; 4000da8c <_tx_mutex_put+0x4b4>
4000d60c:	e5821000 	str	r1, [r2]
4000d610:	e580100c 	str	r1, [r0, #12]
4000d614:	e59f1474 	ldr	r1, [pc, #1140]	; 4000da90 <_tx_mutex_put+0x4b8>
4000d618:	e5911000 	ldr	r1, [r1]
4000d61c:	e3510000 	cmp	r1, #0
4000d620:	1a000006 	bne	4000d640 <_tx_mutex_put+0x68>
4000d624:	e59f1468 	ldr	r1, [pc, #1128]	; 4000da94 <_tx_mutex_put+0x4bc>
4000d628:	e5911000 	ldr	r1, [r1]
4000d62c:	e5801000 	str	r1, [r0]
4000d630:	e5901000 	ldr	r1, [r0]
4000d634:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d638:	e5801004 	str	r1, [r0, #4]
4000d63c:	ea00000d 	b	4000d678 <_tx_mutex_put+0xa0>
4000d640:	e59f1448 	ldr	r1, [pc, #1096]	; 4000da90 <_tx_mutex_put+0x4b8>
4000d644:	e5911000 	ldr	r1, [r1]
4000d648:	e59f2448 	ldr	r2, [pc, #1096]	; 4000da98 <_tx_mutex_put+0x4c0>
4000d64c:	e1510002 	cmp	r1, r2
4000d650:	2a000004 	bcs	4000d668 <_tx_mutex_put+0x90>
4000d654:	e3e01000 	mvn	r1, #0
4000d658:	e5801000 	str	r1, [r0]
4000d65c:	e3a01000 	mov	r1, #0
4000d660:	e5801004 	str	r1, [r0, #4]
4000d664:	ea000003 	b	4000d678 <_tx_mutex_put+0xa0>
4000d668:	e59f1428 	ldr	r1, [pc, #1064]	; 4000da98 <_tx_mutex_put+0x4c0>
4000d66c:	e5801000 	str	r1, [r0]
4000d670:	e3a01000 	mov	r1, #0
4000d674:	e5801004 	str	r1, [r0, #4]
4000d678:	e3a01039 	mov	r1, #57	; 0x39
4000d67c:	e5801008 	str	r1, [r0, #8]
4000d680:	e5804010 	str	r4, [r0, #16]
4000d684:	e594100c 	ldr	r1, [r4, #12]
4000d688:	e5801014 	str	r1, [r0, #20]
4000d68c:	e5941008 	ldr	r1, [r4, #8]
4000d690:	e5801018 	str	r1, [r0, #24]
4000d694:	e580d01c 	str	sp, [r0, #28]
4000d698:	e2800020 	add	r0, r0, #32
4000d69c:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000da9c <_tx_mutex_put+0x4c4>
4000d6a0:	e5911000 	ldr	r1, [r1]
4000d6a4:	e1500001 	cmp	r0, r1
4000d6a8:	3a000001 	bcc	4000d6b4 <_tx_mutex_put+0xdc>
4000d6ac:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000daa0 <_tx_mutex_put+0x4c8>
4000d6b0:	e5910000 	ldr	r0, [r1]
4000d6b4:	e59f13cc 	ldr	r1, [pc, #972]	; 4000da88 <_tx_mutex_put+0x4b0>
4000d6b8:	e5810000 	str	r0, [r1]
4000d6bc:	e59f13e0 	ldr	r1, [pc, #992]	; 4000daa4 <_tx_mutex_put+0x4cc>
4000d6c0:	e5911000 	ldr	r1, [r1]
4000d6c4:	e5810020 	str	r0, [r1, #32]
4000d6c8:	e59f03c4 	ldr	r0, [pc, #964]	; 4000da94 <_tx_mutex_put+0x4bc>
4000d6cc:	e5907000 	ldr	r7, [r0]
4000d6d0:	e5940008 	ldr	r0, [r4, #8]
4000d6d4:	e3500000 	cmp	r0, #0
4000d6d8:	0a0000e7 	beq	4000da7c <_tx_mutex_put+0x4a4>
4000d6dc:	e594000c 	ldr	r0, [r4, #12]
4000d6e0:	e1500007 	cmp	r0, r7
4000d6e4:	1a0000e4 	bne	4000da7c <_tx_mutex_put+0x4a4>
4000d6e8:	e5940008 	ldr	r0, [r4, #8]
4000d6ec:	e2400001 	sub	r0, r0, #1
4000d6f0:	e5840008 	str	r0, [r4, #8]
4000d6f4:	e5940008 	ldr	r0, [r4, #8]
4000d6f8:	e3500000 	cmp	r0, #0
4000d6fc:	0a000002 	beq	4000d70c <_tx_mutex_put+0x134>
4000d700:	e121f005 	msr	CPSR_c, r5
4000d704:	e3a00000 	mov	r0, #0
4000d708:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d70c:	e3a08000 	mov	r8, #0
4000d710:	e3a09000 	mov	r9, #0
4000d714:	e3a0a000 	mov	sl, #0
4000d718:	e5940010 	ldr	r0, [r4, #16]
4000d71c:	e3500000 	cmp	r0, #0
4000d720:	0a000033 	beq	4000d7f4 <_tx_mutex_put+0x21c>
4000d724:	e3570000 	cmp	r7, #0
4000d728:	0a000031 	beq	4000d7f4 <_tx_mutex_put+0x21c>
4000d72c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d730:	e2400001 	sub	r0, r0, #1
4000d734:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d738:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d73c:	e3500000 	cmp	r0, #0
4000d740:	1a000002 	bne	4000d750 <_tx_mutex_put+0x178>
4000d744:	e3a00000 	mov	r0, #0
4000d748:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d74c:	ea00000a 	b	4000d77c <_tx_mutex_put+0x1a4>
4000d750:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d754:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d758:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d75c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d760:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d764:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d768:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d76c:	e1500004 	cmp	r0, r4
4000d770:	1a000001 	bne	4000d77c <_tx_mutex_put+0x1a4>
4000d774:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d778:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d77c:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d780:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d784:	e59f031c 	ldr	r0, [pc, #796]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d788:	e5900000 	ldr	r0, [r0]
4000d78c:	e2800001 	add	r0, r0, #1
4000d790:	e59f1310 	ldr	r1, [pc, #784]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d794:	e5810000 	str	r0, [r1]
4000d798:	e121f005 	msr	CPSR_c, r5
4000d79c:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d7a0:	ea000009 	b	4000d7cc <_tx_mutex_put+0x1f4>
4000d7a4:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d7a8:	e1500009 	cmp	r0, r9
4000d7ac:	2a000001 	bcs	4000d7b8 <_tx_mutex_put+0x1e0>
4000d7b0:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d7b4:	e1a0a009 	mov	sl, r9
4000d7b8:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d7bc:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7c0:	e150000b 	cmp	r0, fp
4000d7c4:	1a000000 	bne	4000d7cc <_tx_mutex_put+0x1f4>
4000d7c8:	e3a0b000 	mov	fp, #0
4000d7cc:	e35b0000 	cmp	fp, #0
4000d7d0:	1afffff3 	bne	4000d7a4 <_tx_mutex_put+0x1cc>
4000d7d4:	e10f5000 	mrs	r5, CPSR
4000d7d8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d7dc:	e121f006 	msr	CPSR_c, r6
4000d7e0:	e59f02c0 	ldr	r0, [pc, #704]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d7e4:	e5900000 	ldr	r0, [r0]
4000d7e8:	e2400001 	sub	r0, r0, #1
4000d7ec:	e59f12b4 	ldr	r1, [pc, #692]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d7f0:	e5810000 	str	r0, [r1]
4000d7f4:	e5940020 	ldr	r0, [r4, #32]
4000d7f8:	e3500001 	cmp	r0, #1
4000d7fc:	9a000012 	bls	4000d84c <_tx_mutex_put+0x274>
4000d800:	e5940010 	ldr	r0, [r4, #16]
4000d804:	e3500000 	cmp	r0, #0
4000d808:	0a00000f 	beq	4000d84c <_tx_mutex_put+0x274>
4000d80c:	e59f0294 	ldr	r0, [pc, #660]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d810:	e5900000 	ldr	r0, [r0]
4000d814:	e2800001 	add	r0, r0, #1
4000d818:	e59f1288 	ldr	r1, [pc, #648]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d81c:	e5810000 	str	r0, [r1]
4000d820:	e121f005 	msr	CPSR_c, r5
4000d824:	e1a00004 	mov	r0, r4
4000d828:	eb000bec 	bl	400107e0 <_tx_mutex_prioritize>
4000d82c:	e10f5000 	mrs	r5, CPSR
4000d830:	e3856080 	orr	r6, r5, #128	; 0x80
4000d834:	e121f006 	msr	CPSR_c, r6
4000d838:	e59f0268 	ldr	r0, [pc, #616]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d83c:	e5900000 	ldr	r0, [r0]
4000d840:	e2400001 	sub	r0, r0, #1
4000d844:	e59f125c 	ldr	r1, [pc, #604]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d848:	e5810000 	str	r0, [r1]
4000d84c:	e594001c 	ldr	r0, [r4, #28]
4000d850:	e3500000 	cmp	r0, #0
4000d854:	1a000024 	bne	4000d8ec <_tx_mutex_put+0x314>
4000d858:	e59f0248 	ldr	r0, [pc, #584]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d85c:	e5900000 	ldr	r0, [r0]
4000d860:	e2800001 	add	r0, r0, #1
4000d864:	e59f123c 	ldr	r1, [pc, #572]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d868:	e5810000 	str	r0, [r1]
4000d86c:	e121f005 	msr	CPSR_c, r5
4000d870:	e5940010 	ldr	r0, [r4, #16]
4000d874:	e3500000 	cmp	r0, #0
4000d878:	0a00000a 	beq	4000d8a8 <_tx_mutex_put+0x2d0>
4000d87c:	e3a00020 	mov	r0, #32
4000d880:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d884:	e3570000 	cmp	r7, #0
4000d888:	0a000006 	beq	4000d8a8 <_tx_mutex_put+0x2d0>
4000d88c:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d890:	e1500009 	cmp	r0, r9
4000d894:	0a000003 	beq	4000d8a8 <_tx_mutex_put+0x2d0>
4000d898:	e1a0200a 	mov	r2, sl
4000d89c:	e1a01009 	mov	r1, r9
4000d8a0:	e594000c 	ldr	r0, [r4, #12]
4000d8a4:	ebffff29 	bl	4000d550 <_tx_mutex_priority_change>
4000d8a8:	e10f5000 	mrs	r5, CPSR
4000d8ac:	e3856080 	orr	r6, r5, #128	; 0x80
4000d8b0:	e121f006 	msr	CPSR_c, r6
4000d8b4:	e59f01ec 	ldr	r0, [pc, #492]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d8b8:	e5900000 	ldr	r0, [r0]
4000d8bc:	e2400001 	sub	r0, r0, #1
4000d8c0:	e59f11e0 	ldr	r1, [pc, #480]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d8c4:	e5810000 	str	r0, [r1]
4000d8c8:	e5940008 	ldr	r0, [r4, #8]
4000d8cc:	e3500000 	cmp	r0, #0
4000d8d0:	1a000001 	bne	4000d8dc <_tx_mutex_put+0x304>
4000d8d4:	e3a00000 	mov	r0, #0
4000d8d8:	e584000c 	str	r0, [r4, #12]
4000d8dc:	e121f005 	msr	CPSR_c, r5
4000d8e0:	eb000726 	bl	4000f580 <_tx_thread_system_preempt_check>
4000d8e4:	e3a00000 	mov	r0, #0
4000d8e8:	eaffff86 	b	4000d708 <_tx_mutex_put+0x130>
4000d8ec:	e594701c 	ldr	r7, [r4, #28]
4000d8f0:	e5940010 	ldr	r0, [r4, #16]
4000d8f4:	e3500000 	cmp	r0, #0
4000d8f8:	0a00001f 	beq	4000d97c <_tx_mutex_put+0x3a4>
4000d8fc:	e594800c 	ldr	r8, [r4, #12]
4000d900:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d904:	e5840014 	str	r0, [r4, #20]
4000d908:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d90c:	e5840018 	str	r0, [r4, #24]
4000d910:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d914:	e3500000 	cmp	r0, #0
4000d918:	0a00000b 	beq	4000d94c <_tx_mutex_put+0x374>
4000d91c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d920:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d924:	e58d0000 	str	r0, [sp]
4000d928:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d92c:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d930:	e59d0000 	ldr	r0, [sp]
4000d934:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d938:	e59d0000 	ldr	r0, [sp]
4000d93c:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d940:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d944:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d948:	ea000006 	b	4000d968 <_tx_mutex_put+0x390>
4000d94c:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d950:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d954:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d958:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d95c:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d960:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d964:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d968:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d96c:	e2800001 	add	r0, r0, #1
4000d970:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d974:	e3a00020 	mov	r0, #32
4000d978:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d97c:	e3a00001 	mov	r0, #1
4000d980:	e5840008 	str	r0, [r4, #8]
4000d984:	e584700c 	str	r7, [r4, #12]
4000d988:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d98c:	e1500007 	cmp	r0, r7
4000d990:	1a000002 	bne	4000d9a0 <_tx_mutex_put+0x3c8>
4000d994:	e3a00000 	mov	r0, #0
4000d998:	e584001c 	str	r0, [r4, #28]
4000d99c:	ea000007 	b	4000d9c0 <_tx_mutex_put+0x3e8>
4000d9a0:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d9a4:	e584001c 	str	r0, [r4, #28]
4000d9a8:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d9ac:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d9b0:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d9b4:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d9b8:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d9bc:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d9c0:	e5940020 	ldr	r0, [r4, #32]
4000d9c4:	e2400001 	sub	r0, r0, #1
4000d9c8:	e5840020 	str	r0, [r4, #32]
4000d9cc:	e3a00000 	mov	r0, #0
4000d9d0:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d9d4:	e59f00cc 	ldr	r0, [pc, #204]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d9d8:	e5900000 	ldr	r0, [r0]
4000d9dc:	e2800001 	add	r0, r0, #1
4000d9e0:	e59f10c0 	ldr	r1, [pc, #192]	; 4000daa8 <_tx_mutex_put+0x4d0>
4000d9e4:	e5810000 	str	r0, [r1]
4000d9e8:	e121f005 	msr	CPSR_c, r5
4000d9ec:	e3a00000 	mov	r0, #0
4000d9f0:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d9f4:	e5940010 	ldr	r0, [r4, #16]
4000d9f8:	e3500000 	cmp	r0, #0
4000d9fc:	0a00001a 	beq	4000da6c <_tx_mutex_put+0x494>
4000da00:	e5940020 	ldr	r0, [r4, #32]
4000da04:	e3500000 	cmp	r0, #0
4000da08:	0a00000e 	beq	4000da48 <_tx_mutex_put+0x470>
4000da0c:	e5940020 	ldr	r0, [r4, #32]
4000da10:	e3500001 	cmp	r0, #1
4000da14:	9a000001 	bls	4000da20 <_tx_mutex_put+0x448>
4000da18:	e1a00004 	mov	r0, r4
4000da1c:	eb000b6f 	bl	400107e0 <_tx_mutex_prioritize>
4000da20:	e10f5000 	mrs	r5, CPSR
4000da24:	e3856080 	orr	r6, r5, #128	; 0x80
4000da28:	e121f006 	msr	CPSR_c, r6
4000da2c:	e594001c 	ldr	r0, [r4, #28]
4000da30:	e3500000 	cmp	r0, #0
4000da34:	0a000002 	beq	4000da44 <_tx_mutex_put+0x46c>
4000da38:	e594001c 	ldr	r0, [r4, #28]
4000da3c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000da40:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000da44:	e121f005 	msr	CPSR_c, r5
4000da48:	e3580000 	cmp	r8, #0
4000da4c:	0a000006 	beq	4000da6c <_tx_mutex_put+0x494>
4000da50:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000da54:	e1500009 	cmp	r0, r9
4000da58:	0a000003 	beq	4000da6c <_tx_mutex_put+0x494>
4000da5c:	e1a0200a 	mov	r2, sl
4000da60:	e1a01009 	mov	r1, r9
4000da64:	e1a00008 	mov	r0, r8
4000da68:	ebfffeb8 	bl	4000d550 <_tx_mutex_priority_change>
4000da6c:	e1a00007 	mov	r0, r7
4000da70:	eb0006ee 	bl	4000f630 <_tx_thread_system_resume>
4000da74:	e3a00000 	mov	r0, #0
4000da78:	eaffff22 	b	4000d708 <_tx_mutex_put+0x130>
4000da7c:	e121f005 	msr	CPSR_c, r5
4000da80:	e3a0001e 	mov	r0, #30
4000da84:	eaffff1f 	b	4000d708 <_tx_mutex_put+0x130>
4000da88:	40030ec0 	.word	0x40030ec0
4000da8c:	40030ec4 	.word	0x40030ec4
4000da90:	40030e4c 	.word	0x40030e4c
4000da94:	40030e54 	.word	0x40030e54
4000da98:	f0f0f0f0 	.word	0xf0f0f0f0
4000da9c:	40030ebc 	.word	0x40030ebc
4000daa0:	40030eb8 	.word	0x40030eb8
4000daa4:	40030eac 	.word	0x40030eac
4000daa8:	40030e70 	.word	0x40030e70

4000daac <_tx_queue_create>:
4000daac:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dab0:	e1a04000 	mov	r4, r0
4000dab4:	e1a05001 	mov	r5, r1
4000dab8:	e1a06002 	mov	r6, r2
4000dabc:	e1a07003 	mov	r7, r3
4000dac0:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000dac4:	e3a0103c 	mov	r1, #60	; 0x3c
4000dac8:	e1a00004 	mov	r0, r4
4000dacc:	eb0017cb 	bl	40013a00 <__aeabi_memclr4>
4000dad0:	e5845004 	str	r5, [r4, #4]
4000dad4:	e5846008 	str	r6, [r4, #8]
4000dad8:	e1a01106 	lsl	r1, r6, #2
4000dadc:	e1a00008 	mov	r0, r8
4000dae0:	eb000ca6 	bl	40010d80 <__aeabi_uidivmod>
4000dae4:	e1a0b000 	mov	fp, r0
4000dae8:	e000069b 	mul	r0, fp, r6
4000daec:	e58d0004 	str	r0, [sp, #4]
4000daf0:	e5847018 	str	r7, [r4, #24]
4000daf4:	e59d0004 	ldr	r0, [sp, #4]
4000daf8:	e0870100 	add	r0, r7, r0, lsl #2
4000dafc:	e584001c 	str	r0, [r4, #28]
4000db00:	e5847020 	str	r7, [r4, #32]
4000db04:	e5847024 	str	r7, [r4, #36]	; 0x24
4000db08:	e584b014 	str	fp, [r4, #20]
4000db0c:	e584b00c 	str	fp, [r4, #12]
4000db10:	e10f9000 	mrs	r9, CPSR
4000db14:	e3890080 	orr	r0, r9, #128	; 0x80
4000db18:	e58d0008 	str	r0, [sp, #8]
4000db1c:	e59d0008 	ldr	r0, [sp, #8]
4000db20:	e121f000 	msr	CPSR_c, r0
4000db24:	e59f0160 	ldr	r0, [pc, #352]	; 4000dc8c <_tx_queue_create+0x1e0>
4000db28:	e5840000 	str	r0, [r4]
4000db2c:	e59f015c 	ldr	r0, [pc, #348]	; 4000dc90 <_tx_queue_create+0x1e4>
4000db30:	e5900000 	ldr	r0, [r0]
4000db34:	e3500000 	cmp	r0, #0
4000db38:	0a00000b 	beq	4000db6c <_tx_queue_create+0xc0>
4000db3c:	e59f014c 	ldr	r0, [pc, #332]	; 4000dc90 <_tx_queue_create+0x1e4>
4000db40:	e5900000 	ldr	r0, [r0]
4000db44:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000db48:	e59f0140 	ldr	r0, [pc, #320]	; 4000dc90 <_tx_queue_create+0x1e4>
4000db4c:	e5900000 	ldr	r0, [r0]
4000db50:	e5804034 	str	r4, [r0, #52]	; 0x34
4000db54:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000db58:	e584a034 	str	sl, [r4, #52]	; 0x34
4000db5c:	e59f012c 	ldr	r0, [pc, #300]	; 4000dc90 <_tx_queue_create+0x1e4>
4000db60:	e5900000 	ldr	r0, [r0]
4000db64:	e5840030 	str	r0, [r4, #48]	; 0x30
4000db68:	ea000003 	b	4000db7c <_tx_queue_create+0xd0>
4000db6c:	e59f011c 	ldr	r0, [pc, #284]	; 4000dc90 <_tx_queue_create+0x1e4>
4000db70:	e5804000 	str	r4, [r0]
4000db74:	e5844030 	str	r4, [r4, #48]	; 0x30
4000db78:	e5844034 	str	r4, [r4, #52]	; 0x34
4000db7c:	e59f0110 	ldr	r0, [pc, #272]	; 4000dc94 <_tx_queue_create+0x1e8>
4000db80:	e5900000 	ldr	r0, [r0]
4000db84:	e2800001 	add	r0, r0, #1
4000db88:	e59f1104 	ldr	r1, [pc, #260]	; 4000dc94 <_tx_queue_create+0x1e8>
4000db8c:	e5810000 	str	r0, [r1]
4000db90:	e3a03000 	mov	r3, #0
4000db94:	e58d3000 	str	r3, [sp]
4000db98:	e1a03008 	mov	r3, r8
4000db9c:	e1a02005 	mov	r2, r5
4000dba0:	e1a01004 	mov	r1, r4
4000dba4:	e3a00003 	mov	r0, #3
4000dba8:	eb0009f6 	bl	40010388 <_tx_trace_object_register>
4000dbac:	e59f10e4 	ldr	r1, [pc, #228]	; 4000dc98 <_tx_queue_create+0x1ec>
4000dbb0:	e5910000 	ldr	r0, [r1]
4000dbb4:	e3500000 	cmp	r0, #0
4000dbb8:	0a000030 	beq	4000dc80 <_tx_queue_create+0x1d4>
4000dbbc:	e59f10d8 	ldr	r1, [pc, #216]	; 4000dc9c <_tx_queue_create+0x1f0>
4000dbc0:	e5911000 	ldr	r1, [r1]
4000dbc4:	e2811001 	add	r1, r1, #1
4000dbc8:	e59f20cc 	ldr	r2, [pc, #204]	; 4000dc9c <_tx_queue_create+0x1f0>
4000dbcc:	e5821000 	str	r1, [r2]
4000dbd0:	e580100c 	str	r1, [r0, #12]
4000dbd4:	e59f10c4 	ldr	r1, [pc, #196]	; 4000dca0 <_tx_queue_create+0x1f4>
4000dbd8:	e5911000 	ldr	r1, [r1]
4000dbdc:	e3510000 	cmp	r1, #0
4000dbe0:	1a000006 	bne	4000dc00 <_tx_queue_create+0x154>
4000dbe4:	e59f10b8 	ldr	r1, [pc, #184]	; 4000dca4 <_tx_queue_create+0x1f8>
4000dbe8:	e5911000 	ldr	r1, [r1]
4000dbec:	e5801000 	str	r1, [r0]
4000dbf0:	e5901000 	ldr	r1, [r0]
4000dbf4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dbf8:	e5801004 	str	r1, [r0, #4]
4000dbfc:	ea00000d 	b	4000dc38 <_tx_queue_create+0x18c>
4000dc00:	e59f1098 	ldr	r1, [pc, #152]	; 4000dca0 <_tx_queue_create+0x1f4>
4000dc04:	e5911000 	ldr	r1, [r1]
4000dc08:	e59f2098 	ldr	r2, [pc, #152]	; 4000dca8 <_tx_queue_create+0x1fc>
4000dc0c:	e1510002 	cmp	r1, r2
4000dc10:	2a000004 	bcs	4000dc28 <_tx_queue_create+0x17c>
4000dc14:	e3e01000 	mvn	r1, #0
4000dc18:	e5801000 	str	r1, [r0]
4000dc1c:	e3a01000 	mov	r1, #0
4000dc20:	e5801004 	str	r1, [r0, #4]
4000dc24:	ea000003 	b	4000dc38 <_tx_queue_create+0x18c>
4000dc28:	e59f1078 	ldr	r1, [pc, #120]	; 4000dca8 <_tx_queue_create+0x1fc>
4000dc2c:	e5801000 	str	r1, [r0]
4000dc30:	e3a01000 	mov	r1, #0
4000dc34:	e5801004 	str	r1, [r0, #4]
4000dc38:	e3a0103c 	mov	r1, #60	; 0x3c
4000dc3c:	e5801008 	str	r1, [r0, #8]
4000dc40:	e5804010 	str	r4, [r0, #16]
4000dc44:	e5806014 	str	r6, [r0, #20]
4000dc48:	e5807018 	str	r7, [r0, #24]
4000dc4c:	e580801c 	str	r8, [r0, #28]
4000dc50:	e2800020 	add	r0, r0, #32
4000dc54:	e59f1050 	ldr	r1, [pc, #80]	; 4000dcac <_tx_queue_create+0x200>
4000dc58:	e5911000 	ldr	r1, [r1]
4000dc5c:	e1500001 	cmp	r0, r1
4000dc60:	3a000001 	bcc	4000dc6c <_tx_queue_create+0x1c0>
4000dc64:	e59f1044 	ldr	r1, [pc, #68]	; 4000dcb0 <_tx_queue_create+0x204>
4000dc68:	e5910000 	ldr	r0, [r1]
4000dc6c:	e59f1024 	ldr	r1, [pc, #36]	; 4000dc98 <_tx_queue_create+0x1ec>
4000dc70:	e5810000 	str	r0, [r1]
4000dc74:	e59f1038 	ldr	r1, [pc, #56]	; 4000dcb4 <_tx_queue_create+0x208>
4000dc78:	e5911000 	ldr	r1, [r1]
4000dc7c:	e5810020 	str	r0, [r1, #32]
4000dc80:	e121f009 	msr	CPSR_c, r9
4000dc84:	e3a00000 	mov	r0, #0
4000dc88:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000dc8c:	51554555 	.word	0x51554555
4000dc90:	40030ed0 	.word	0x40030ed0
4000dc94:	40030ed4 	.word	0x40030ed4
4000dc98:	40030ec0 	.word	0x40030ec0
4000dc9c:	40030ec4 	.word	0x40030ec4
4000dca0:	40030e4c 	.word	0x40030e4c
4000dca4:	40030e54 	.word	0x40030e54
4000dca8:	f0f0f0f0 	.word	0xf0f0f0f0
4000dcac:	40030ebc 	.word	0x40030ebc
4000dcb0:	40030eb8 	.word	0x40030eb8
4000dcb4:	40030eac 	.word	0x40030eac

4000dcb8 <_tx_queue_front_send>:
4000dcb8:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000dcbc:	e1a04000 	mov	r4, r0
4000dcc0:	e1a05001 	mov	r5, r1
4000dcc4:	e1a06002 	mov	r6, r2
4000dcc8:	e10f7000 	mrs	r7, CPSR
4000dccc:	e3870080 	orr	r0, r7, #128	; 0x80
4000dcd0:	e58d0004 	str	r0, [sp, #4]
4000dcd4:	e59d0004 	ldr	r0, [sp, #4]
4000dcd8:	e121f000 	msr	CPSR_c, r0
4000dcdc:	e59f1368 	ldr	r1, [pc, #872]	; 4000e04c <_tx_queue_front_send+0x394>
4000dce0:	e5910000 	ldr	r0, [r1]
4000dce4:	e3500000 	cmp	r0, #0
4000dce8:	0a000031 	beq	4000ddb4 <_tx_queue_front_send+0xfc>
4000dcec:	e59f135c 	ldr	r1, [pc, #860]	; 4000e050 <_tx_queue_front_send+0x398>
4000dcf0:	e5911000 	ldr	r1, [r1]
4000dcf4:	e2811001 	add	r1, r1, #1
4000dcf8:	e59f2350 	ldr	r2, [pc, #848]	; 4000e050 <_tx_queue_front_send+0x398>
4000dcfc:	e5821000 	str	r1, [r2]
4000dd00:	e580100c 	str	r1, [r0, #12]
4000dd04:	e59f1348 	ldr	r1, [pc, #840]	; 4000e054 <_tx_queue_front_send+0x39c>
4000dd08:	e5911000 	ldr	r1, [r1]
4000dd0c:	e3510000 	cmp	r1, #0
4000dd10:	1a000006 	bne	4000dd30 <_tx_queue_front_send+0x78>
4000dd14:	e59f133c 	ldr	r1, [pc, #828]	; 4000e058 <_tx_queue_front_send+0x3a0>
4000dd18:	e5911000 	ldr	r1, [r1]
4000dd1c:	e5801000 	str	r1, [r0]
4000dd20:	e5901000 	ldr	r1, [r0]
4000dd24:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dd28:	e5801004 	str	r1, [r0, #4]
4000dd2c:	ea00000d 	b	4000dd68 <_tx_queue_front_send+0xb0>
4000dd30:	e59f131c 	ldr	r1, [pc, #796]	; 4000e054 <_tx_queue_front_send+0x39c>
4000dd34:	e5911000 	ldr	r1, [r1]
4000dd38:	e59f231c 	ldr	r2, [pc, #796]	; 4000e05c <_tx_queue_front_send+0x3a4>
4000dd3c:	e1510002 	cmp	r1, r2
4000dd40:	2a000004 	bcs	4000dd58 <_tx_queue_front_send+0xa0>
4000dd44:	e3e01000 	mvn	r1, #0
4000dd48:	e5801000 	str	r1, [r0]
4000dd4c:	e3a01000 	mov	r1, #0
4000dd50:	e5801004 	str	r1, [r0, #4]
4000dd54:	ea000003 	b	4000dd68 <_tx_queue_front_send+0xb0>
4000dd58:	e59f12fc 	ldr	r1, [pc, #764]	; 4000e05c <_tx_queue_front_send+0x3a4>
4000dd5c:	e5801000 	str	r1, [r0]
4000dd60:	e3a01000 	mov	r1, #0
4000dd64:	e5801004 	str	r1, [r0, #4]
4000dd68:	e3a0103f 	mov	r1, #63	; 0x3f
4000dd6c:	e5801008 	str	r1, [r0, #8]
4000dd70:	e5804010 	str	r4, [r0, #16]
4000dd74:	e5805014 	str	r5, [r0, #20]
4000dd78:	e5806018 	str	r6, [r0, #24]
4000dd7c:	e5941010 	ldr	r1, [r4, #16]
4000dd80:	e580101c 	str	r1, [r0, #28]
4000dd84:	e2800020 	add	r0, r0, #32
4000dd88:	e59f12d0 	ldr	r1, [pc, #720]	; 4000e060 <_tx_queue_front_send+0x3a8>
4000dd8c:	e5911000 	ldr	r1, [r1]
4000dd90:	e1500001 	cmp	r0, r1
4000dd94:	3a000001 	bcc	4000dda0 <_tx_queue_front_send+0xe8>
4000dd98:	e59f12c4 	ldr	r1, [pc, #708]	; 4000e064 <_tx_queue_front_send+0x3ac>
4000dd9c:	e5910000 	ldr	r0, [r1]
4000dda0:	e59f12a4 	ldr	r1, [pc, #676]	; 4000e04c <_tx_queue_front_send+0x394>
4000dda4:	e5810000 	str	r0, [r1]
4000dda8:	e59f12b8 	ldr	r1, [pc, #696]	; 4000e068 <_tx_queue_front_send+0x3b0>
4000ddac:	e5911000 	ldr	r1, [r1]
4000ddb0:	e5810020 	str	r0, [r1, #32]
4000ddb4:	e5940014 	ldr	r0, [r4, #20]
4000ddb8:	e3500000 	cmp	r0, #0
4000ddbc:	0a000064 	beq	4000df54 <_tx_queue_front_send+0x29c>
4000ddc0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000ddc4:	e3500000 	cmp	r0, #0
4000ddc8:	1a00002b 	bne	4000de7c <_tx_queue_front_send+0x1c4>
4000ddcc:	e5940020 	ldr	r0, [r4, #32]
4000ddd0:	e5941018 	ldr	r1, [r4, #24]
4000ddd4:	e1500001 	cmp	r0, r1
4000ddd8:	1a000004 	bne	4000ddf0 <_tx_queue_front_send+0x138>
4000dddc:	e594001c 	ldr	r0, [r4, #28]
4000dde0:	e5941008 	ldr	r1, [r4, #8]
4000dde4:	e0400101 	sub	r0, r0, r1, lsl #2
4000dde8:	e5840020 	str	r0, [r4, #32]
4000ddec:	ea000003 	b	4000de00 <_tx_queue_front_send+0x148>
4000ddf0:	e5940020 	ldr	r0, [r4, #32]
4000ddf4:	e5941008 	ldr	r1, [r4, #8]
4000ddf8:	e0400101 	sub	r0, r0, r1, lsl #2
4000ddfc:	e5840020 	str	r0, [r4, #32]
4000de00:	e5940014 	ldr	r0, [r4, #20]
4000de04:	e2400001 	sub	r0, r0, #1
4000de08:	e5840014 	str	r0, [r4, #20]
4000de0c:	e5940010 	ldr	r0, [r4, #16]
4000de10:	e2800001 	add	r0, r0, #1
4000de14:	e5840010 	str	r0, [r4, #16]
4000de18:	e1a09005 	mov	r9, r5
4000de1c:	e594a020 	ldr	sl, [r4, #32]
4000de20:	e594b008 	ldr	fp, [r4, #8]
4000de24:	e1a00000 	nop			; (mov r0, r0)
4000de28:	e5990000 	ldr	r0, [r9]
4000de2c:	e58a0000 	str	r0, [sl]
4000de30:	e24bb001 	sub	fp, fp, #1
4000de34:	e35b0000 	cmp	fp, #0
4000de38:	1a000000 	bne	4000de40 <_tx_queue_front_send+0x188>
4000de3c:	ea000002 	b	4000de4c <_tx_queue_front_send+0x194>
4000de40:	e28aa004 	add	sl, sl, #4
4000de44:	e2899004 	add	r9, r9, #4
4000de48:	eafffff6 	b	4000de28 <_tx_queue_front_send+0x170>
4000de4c:	e1a00000 	nop			; (mov r0, r0)
4000de50:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000de54:	e58d0000 	str	r0, [sp]
4000de58:	e121f007 	msr	CPSR_c, r7
4000de5c:	e59d0000 	ldr	r0, [sp]
4000de60:	e3500000 	cmp	r0, #0
4000de64:	0a000002 	beq	4000de74 <_tx_queue_front_send+0x1bc>
4000de68:	e1a00004 	mov	r0, r4
4000de6c:	e59d1000 	ldr	r1, [sp]
4000de70:	e12fff31 	blx	r1
4000de74:	e3a00000 	mov	r0, #0
4000de78:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000de7c:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000de80:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de84:	e1500008 	cmp	r0, r8
4000de88:	1a000002 	bne	4000de98 <_tx_queue_front_send+0x1e0>
4000de8c:	e3a00000 	mov	r0, #0
4000de90:	e5840028 	str	r0, [r4, #40]	; 0x28
4000de94:	ea000007 	b	4000deb8 <_tx_queue_front_send+0x200>
4000de98:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000de9c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dea0:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dea4:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dea8:	e5810074 	str	r0, [r1, #116]	; 0x74
4000deac:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000deb0:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000deb4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000deb8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000debc:	e2400001 	sub	r0, r0, #1
4000dec0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dec4:	e3a00000 	mov	r0, #0
4000dec8:	e5880068 	str	r0, [r8, #104]	; 0x68
4000decc:	e59f0198 	ldr	r0, [pc, #408]	; 4000e06c <_tx_queue_front_send+0x3b4>
4000ded0:	e5900000 	ldr	r0, [r0]
4000ded4:	e2800001 	add	r0, r0, #1
4000ded8:	e59f118c 	ldr	r1, [pc, #396]	; 4000e06c <_tx_queue_front_send+0x3b4>
4000dedc:	e5810000 	str	r0, [r1]
4000dee0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dee4:	e58d0000 	str	r0, [sp]
4000dee8:	e121f007 	msr	CPSR_c, r7
4000deec:	e1a09005 	mov	r9, r5
4000def0:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000def4:	e594b008 	ldr	fp, [r4, #8]
4000def8:	e1a00000 	nop			; (mov r0, r0)
4000defc:	e5990000 	ldr	r0, [r9]
4000df00:	e58a0000 	str	r0, [sl]
4000df04:	e24bb001 	sub	fp, fp, #1
4000df08:	e35b0000 	cmp	fp, #0
4000df0c:	1a000000 	bne	4000df14 <_tx_queue_front_send+0x25c>
4000df10:	ea000002 	b	4000df20 <_tx_queue_front_send+0x268>
4000df14:	e28aa004 	add	sl, sl, #4
4000df18:	e2899004 	add	r9, r9, #4
4000df1c:	eafffff6 	b	4000defc <_tx_queue_front_send+0x244>
4000df20:	e1a00000 	nop			; (mov r0, r0)
4000df24:	e3a00000 	mov	r0, #0
4000df28:	e5880084 	str	r0, [r8, #132]	; 0x84
4000df2c:	e1a00008 	mov	r0, r8
4000df30:	eb0005be 	bl	4000f630 <_tx_thread_system_resume>
4000df34:	e59d0000 	ldr	r0, [sp]
4000df38:	e3500000 	cmp	r0, #0
4000df3c:	0a000002 	beq	4000df4c <_tx_queue_front_send+0x294>
4000df40:	e1a00004 	mov	r0, r4
4000df44:	e59d1000 	ldr	r1, [sp]
4000df48:	e12fff31 	blx	r1
4000df4c:	e3a00000 	mov	r0, #0
4000df50:	eaffffc8 	b	4000de78 <_tx_queue_front_send+0x1c0>
4000df54:	e3560000 	cmp	r6, #0
4000df58:	0a000038 	beq	4000e040 <_tx_queue_front_send+0x388>
4000df5c:	e59f00f4 	ldr	r0, [pc, #244]	; 4000e058 <_tx_queue_front_send+0x3a0>
4000df60:	e5908000 	ldr	r8, [r0]
4000df64:	e59f0104 	ldr	r0, [pc, #260]	; 4000e070 <_tx_queue_front_send+0x3b8>
4000df68:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df6c:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000df70:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000df74:	e3a00001 	mov	r0, #1
4000df78:	e5880080 	str	r0, [r8, #128]	; 0x80
4000df7c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df80:	e3500000 	cmp	r0, #0
4000df84:	0a00000b 	beq	4000dfb8 <_tx_queue_front_send+0x300>
4000df88:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df8c:	e5880070 	str	r0, [r8, #112]	; 0x70
4000df90:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000df94:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000df98:	e5880074 	str	r0, [r8, #116]	; 0x74
4000df9c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfa0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dfa4:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dfa8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfac:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dfb0:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dfb4:	ea000002 	b	4000dfc4 <_tx_queue_front_send+0x30c>
4000dfb8:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dfbc:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dfc0:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dfc4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dfc8:	e2800001 	add	r0, r0, #1
4000dfcc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dfd0:	e3a00005 	mov	r0, #5
4000dfd4:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dfd8:	e3a00001 	mov	r0, #1
4000dfdc:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dfe0:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dfe4:	e59f0080 	ldr	r0, [pc, #128]	; 4000e06c <_tx_queue_front_send+0x3b4>
4000dfe8:	e5900000 	ldr	r0, [r0]
4000dfec:	e2800001 	add	r0, r0, #1
4000dff0:	e59f1074 	ldr	r1, [pc, #116]	; 4000e06c <_tx_queue_front_send+0x3b4>
4000dff4:	e5810000 	str	r0, [r1]
4000dff8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dffc:	e58d0000 	str	r0, [sp]
4000e000:	e121f007 	msr	CPSR_c, r7
4000e004:	e1a00008 	mov	r0, r8
4000e008:	ebffebe1 	bl	40008f94 <_tx_thread_system_suspend>
4000e00c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e010:	e58d0000 	str	r0, [sp]
4000e014:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e018:	e3500000 	cmp	r0, #0
4000e01c:	1a000005 	bne	4000e038 <_tx_queue_front_send+0x380>
4000e020:	e59d0000 	ldr	r0, [sp]
4000e024:	e3500000 	cmp	r0, #0
4000e028:	0a000002 	beq	4000e038 <_tx_queue_front_send+0x380>
4000e02c:	e1a00004 	mov	r0, r4
4000e030:	e59d1000 	ldr	r1, [sp]
4000e034:	e12fff31 	blx	r1
4000e038:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e03c:	eaffff8d 	b	4000de78 <_tx_queue_front_send+0x1c0>
4000e040:	e121f007 	msr	CPSR_c, r7
4000e044:	e3a0000b 	mov	r0, #11
4000e048:	eaffff8a 	b	4000de78 <_tx_queue_front_send+0x1c0>
4000e04c:	40030ec0 	.word	0x40030ec0
4000e050:	40030ec4 	.word	0x40030ec4
4000e054:	40030e4c 	.word	0x40030e4c
4000e058:	40030e54 	.word	0x40030e54
4000e05c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e060:	40030ebc 	.word	0x40030ebc
4000e064:	40030eb8 	.word	0x40030eb8
4000e068:	40030eac 	.word	0x40030eac
4000e06c:	40030e70 	.word	0x40030e70
4000e070:	40010a54 	.word	0x40010a54

4000e074 <_tx_queue_receive>:
4000e074:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e078:	e1a04000 	mov	r4, r0
4000e07c:	e1a05001 	mov	r5, r1
4000e080:	e1a06002 	mov	r6, r2
4000e084:	e10f7000 	mrs	r7, CPSR
4000e088:	e3870080 	orr	r0, r7, #128	; 0x80
4000e08c:	e58d0000 	str	r0, [sp]
4000e090:	e59d0000 	ldr	r0, [sp]
4000e094:	e121f000 	msr	CPSR_c, r0
4000e098:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e4ac <_tx_queue_receive+0x438>
4000e09c:	e5910000 	ldr	r0, [r1]
4000e0a0:	e3500000 	cmp	r0, #0
4000e0a4:	0a000031 	beq	4000e170 <_tx_queue_receive+0xfc>
4000e0a8:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e4b0 <_tx_queue_receive+0x43c>
4000e0ac:	e5911000 	ldr	r1, [r1]
4000e0b0:	e2811001 	add	r1, r1, #1
4000e0b4:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e4b0 <_tx_queue_receive+0x43c>
4000e0b8:	e5821000 	str	r1, [r2]
4000e0bc:	e580100c 	str	r1, [r0, #12]
4000e0c0:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e4b4 <_tx_queue_receive+0x440>
4000e0c4:	e5911000 	ldr	r1, [r1]
4000e0c8:	e3510000 	cmp	r1, #0
4000e0cc:	1a000006 	bne	4000e0ec <_tx_queue_receive+0x78>
4000e0d0:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e4b8 <_tx_queue_receive+0x444>
4000e0d4:	e5911000 	ldr	r1, [r1]
4000e0d8:	e5801000 	str	r1, [r0]
4000e0dc:	e5901000 	ldr	r1, [r0]
4000e0e0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e0e4:	e5801004 	str	r1, [r0, #4]
4000e0e8:	ea00000d 	b	4000e124 <_tx_queue_receive+0xb0>
4000e0ec:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e4b4 <_tx_queue_receive+0x440>
4000e0f0:	e5911000 	ldr	r1, [r1]
4000e0f4:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e4bc <_tx_queue_receive+0x448>
4000e0f8:	e1510002 	cmp	r1, r2
4000e0fc:	2a000004 	bcs	4000e114 <_tx_queue_receive+0xa0>
4000e100:	e3e01000 	mvn	r1, #0
4000e104:	e5801000 	str	r1, [r0]
4000e108:	e3a01000 	mov	r1, #0
4000e10c:	e5801004 	str	r1, [r0, #4]
4000e110:	ea000003 	b	4000e124 <_tx_queue_receive+0xb0>
4000e114:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e4bc <_tx_queue_receive+0x448>
4000e118:	e5801000 	str	r1, [r0]
4000e11c:	e3a01000 	mov	r1, #0
4000e120:	e5801004 	str	r1, [r0, #4]
4000e124:	e3a01044 	mov	r1, #68	; 0x44
4000e128:	e5801008 	str	r1, [r0, #8]
4000e12c:	e5804010 	str	r4, [r0, #16]
4000e130:	e5805014 	str	r5, [r0, #20]
4000e134:	e5806018 	str	r6, [r0, #24]
4000e138:	e5941010 	ldr	r1, [r4, #16]
4000e13c:	e580101c 	str	r1, [r0, #28]
4000e140:	e2800020 	add	r0, r0, #32
4000e144:	e59f1374 	ldr	r1, [pc, #884]	; 4000e4c0 <_tx_queue_receive+0x44c>
4000e148:	e5911000 	ldr	r1, [r1]
4000e14c:	e1500001 	cmp	r0, r1
4000e150:	3a000001 	bcc	4000e15c <_tx_queue_receive+0xe8>
4000e154:	e59f1368 	ldr	r1, [pc, #872]	; 4000e4c4 <_tx_queue_receive+0x450>
4000e158:	e5910000 	ldr	r0, [r1]
4000e15c:	e59f1348 	ldr	r1, [pc, #840]	; 4000e4ac <_tx_queue_receive+0x438>
4000e160:	e5810000 	str	r0, [r1]
4000e164:	e59f135c 	ldr	r1, [pc, #860]	; 4000e4c8 <_tx_queue_receive+0x454>
4000e168:	e5911000 	ldr	r1, [r1]
4000e16c:	e5810020 	str	r0, [r1, #32]
4000e170:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e174:	e3580000 	cmp	r8, #0
4000e178:	0a00002f 	beq	4000e23c <_tx_queue_receive+0x1c8>
4000e17c:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000e180:	e3500000 	cmp	r0, #0
4000e184:	0a00002c 	beq	4000e23c <_tx_queue_receive+0x1c8>
4000e188:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e18c:	e1a0a005 	mov	sl, r5
4000e190:	e594b008 	ldr	fp, [r4, #8]
4000e194:	e1a00000 	nop			; (mov r0, r0)
4000e198:	e5990000 	ldr	r0, [r9]
4000e19c:	e58a0000 	str	r0, [sl]
4000e1a0:	e24bb001 	sub	fp, fp, #1
4000e1a4:	e35b0000 	cmp	fp, #0
4000e1a8:	1a000000 	bne	4000e1b0 <_tx_queue_receive+0x13c>
4000e1ac:	ea000002 	b	4000e1bc <_tx_queue_receive+0x148>
4000e1b0:	e28aa004 	add	sl, sl, #4
4000e1b4:	e2899004 	add	r9, r9, #4
4000e1b8:	eafffff6 	b	4000e198 <_tx_queue_receive+0x124>
4000e1bc:	e1a00000 	nop			; (mov r0, r0)
4000e1c0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e1c4:	e1500008 	cmp	r0, r8
4000e1c8:	1a000002 	bne	4000e1d8 <_tx_queue_receive+0x164>
4000e1cc:	e3a00000 	mov	r0, #0
4000e1d0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e1d4:	ea000007 	b	4000e1f8 <_tx_queue_receive+0x184>
4000e1d8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e1dc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e1e0:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e1e4:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e1e8:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e1ec:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e1f0:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e1f4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e1f8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e1fc:	e2400001 	sub	r0, r0, #1
4000e200:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e204:	e3a00000 	mov	r0, #0
4000e208:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e20c:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e4cc <_tx_queue_receive+0x458>
4000e210:	e5900000 	ldr	r0, [r0]
4000e214:	e2800001 	add	r0, r0, #1
4000e218:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e4cc <_tx_queue_receive+0x458>
4000e21c:	e5810000 	str	r0, [r1]
4000e220:	e121f007 	msr	CPSR_c, r7
4000e224:	e3a00000 	mov	r0, #0
4000e228:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e22c:	e1a00008 	mov	r0, r8
4000e230:	eb0004fe 	bl	4000f630 <_tx_thread_system_resume>
4000e234:	e3a00000 	mov	r0, #0
4000e238:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e23c:	e5940010 	ldr	r0, [r4, #16]
4000e240:	e3500000 	cmp	r0, #0
4000e244:	0a000068 	beq	4000e3ec <_tx_queue_receive+0x378>
4000e248:	e5949020 	ldr	r9, [r4, #32]
4000e24c:	e1a0a005 	mov	sl, r5
4000e250:	e594b008 	ldr	fp, [r4, #8]
4000e254:	e1a00000 	nop			; (mov r0, r0)
4000e258:	e5990000 	ldr	r0, [r9]
4000e25c:	e58a0000 	str	r0, [sl]
4000e260:	e24bb001 	sub	fp, fp, #1
4000e264:	e35b0000 	cmp	fp, #0
4000e268:	1a000000 	bne	4000e270 <_tx_queue_receive+0x1fc>
4000e26c:	ea000002 	b	4000e27c <_tx_queue_receive+0x208>
4000e270:	e28aa004 	add	sl, sl, #4
4000e274:	e2899004 	add	r9, r9, #4
4000e278:	eafffff6 	b	4000e258 <_tx_queue_receive+0x1e4>
4000e27c:	e1a00000 	nop			; (mov r0, r0)
4000e280:	e5940020 	ldr	r0, [r4, #32]
4000e284:	e5941008 	ldr	r1, [r4, #8]
4000e288:	e0800101 	add	r0, r0, r1, lsl #2
4000e28c:	e5840020 	str	r0, [r4, #32]
4000e290:	e5940020 	ldr	r0, [r4, #32]
4000e294:	e594101c 	ldr	r1, [r4, #28]
4000e298:	e1500001 	cmp	r0, r1
4000e29c:	3a000001 	bcc	4000e2a8 <_tx_queue_receive+0x234>
4000e2a0:	e5940018 	ldr	r0, [r4, #24]
4000e2a4:	e5840020 	str	r0, [r4, #32]
4000e2a8:	e3580000 	cmp	r8, #0
4000e2ac:	1a000008 	bne	4000e2d4 <_tx_queue_receive+0x260>
4000e2b0:	e5940014 	ldr	r0, [r4, #20]
4000e2b4:	e2800001 	add	r0, r0, #1
4000e2b8:	e5840014 	str	r0, [r4, #20]
4000e2bc:	e5940010 	ldr	r0, [r4, #16]
4000e2c0:	e2400001 	sub	r0, r0, #1
4000e2c4:	e5840010 	str	r0, [r4, #16]
4000e2c8:	e121f007 	msr	CPSR_c, r7
4000e2cc:	e3a00000 	mov	r0, #0
4000e2d0:	eaffffd8 	b	4000e238 <_tx_queue_receive+0x1c4>
4000e2d4:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e4cc <_tx_queue_receive+0x458>
4000e2d8:	e5900000 	ldr	r0, [r0]
4000e2dc:	e2800001 	add	r0, r0, #1
4000e2e0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e4cc <_tx_queue_receive+0x458>
4000e2e4:	e5810000 	str	r0, [r1]
4000e2e8:	e121f007 	msr	CPSR_c, r7
4000e2ec:	e10f7000 	mrs	r7, CPSR
4000e2f0:	e3870080 	orr	r0, r7, #128	; 0x80
4000e2f4:	e58d0000 	str	r0, [sp]
4000e2f8:	e59d0000 	ldr	r0, [sp]
4000e2fc:	e121f000 	msr	CPSR_c, r0
4000e300:	e2810000 	add	r0, r1, #0
4000e304:	e5900000 	ldr	r0, [r0]
4000e308:	e2400001 	sub	r0, r0, #1
4000e30c:	e5810000 	str	r0, [r1]
4000e310:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e314:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e318:	e594b008 	ldr	fp, [r4, #8]
4000e31c:	e1a00000 	nop			; (mov r0, r0)
4000e320:	e5990000 	ldr	r0, [r9]
4000e324:	e58a0000 	str	r0, [sl]
4000e328:	e24bb001 	sub	fp, fp, #1
4000e32c:	e35b0000 	cmp	fp, #0
4000e330:	1a000000 	bne	4000e338 <_tx_queue_receive+0x2c4>
4000e334:	ea000002 	b	4000e344 <_tx_queue_receive+0x2d0>
4000e338:	e28aa004 	add	sl, sl, #4
4000e33c:	e2899004 	add	r9, r9, #4
4000e340:	eafffff6 	b	4000e320 <_tx_queue_receive+0x2ac>
4000e344:	e1a00000 	nop			; (mov r0, r0)
4000e348:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e34c:	e5941008 	ldr	r1, [r4, #8]
4000e350:	e0800101 	add	r0, r0, r1, lsl #2
4000e354:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e358:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e35c:	e594101c 	ldr	r1, [r4, #28]
4000e360:	e1500001 	cmp	r0, r1
4000e364:	3a000001 	bcc	4000e370 <_tx_queue_receive+0x2fc>
4000e368:	e5940018 	ldr	r0, [r4, #24]
4000e36c:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e370:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e374:	e1500008 	cmp	r0, r8
4000e378:	1a000002 	bne	4000e388 <_tx_queue_receive+0x314>
4000e37c:	e3a00000 	mov	r0, #0
4000e380:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e384:	ea000007 	b	4000e3a8 <_tx_queue_receive+0x334>
4000e388:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e38c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e390:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e394:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e398:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e39c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e3a0:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e3a4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e3a8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e3ac:	e2400001 	sub	r0, r0, #1
4000e3b0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e3b4:	e3a00000 	mov	r0, #0
4000e3b8:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e3bc:	e59f0108 	ldr	r0, [pc, #264]	; 4000e4cc <_tx_queue_receive+0x458>
4000e3c0:	e5900000 	ldr	r0, [r0]
4000e3c4:	e2800001 	add	r0, r0, #1
4000e3c8:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e4cc <_tx_queue_receive+0x458>
4000e3cc:	e5810000 	str	r0, [r1]
4000e3d0:	e121f007 	msr	CPSR_c, r7
4000e3d4:	e3a00000 	mov	r0, #0
4000e3d8:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e3dc:	e1a00008 	mov	r0, r8
4000e3e0:	eb000492 	bl	4000f630 <_tx_thread_system_resume>
4000e3e4:	e3a00000 	mov	r0, #0
4000e3e8:	eaffff92 	b	4000e238 <_tx_queue_receive+0x1c4>
4000e3ec:	e3560000 	cmp	r6, #0
4000e3f0:	0a00002a 	beq	4000e4a0 <_tx_queue_receive+0x42c>
4000e3f4:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e4b8 <_tx_queue_receive+0x444>
4000e3f8:	e5908000 	ldr	r8, [r0]
4000e3fc:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e4d0 <_tx_queue_receive+0x45c>
4000e400:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e404:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e408:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e40c:	e3a00000 	mov	r0, #0
4000e410:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e414:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e418:	e3500000 	cmp	r0, #0
4000e41c:	0a00000a 	beq	4000e44c <_tx_queue_receive+0x3d8>
4000e420:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e424:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e428:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e42c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e430:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e434:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e438:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e43c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e440:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e444:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e448:	ea000002 	b	4000e458 <_tx_queue_receive+0x3e4>
4000e44c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e450:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e454:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e458:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e45c:	e2800001 	add	r0, r0, #1
4000e460:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e464:	e3a00005 	mov	r0, #5
4000e468:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e46c:	e3a00001 	mov	r0, #1
4000e470:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e474:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e478:	e59f004c 	ldr	r0, [pc, #76]	; 4000e4cc <_tx_queue_receive+0x458>
4000e47c:	e5900000 	ldr	r0, [r0]
4000e480:	e2800001 	add	r0, r0, #1
4000e484:	e59f1040 	ldr	r1, [pc, #64]	; 4000e4cc <_tx_queue_receive+0x458>
4000e488:	e5810000 	str	r0, [r1]
4000e48c:	e121f007 	msr	CPSR_c, r7
4000e490:	e1a00008 	mov	r0, r8
4000e494:	ebffeabe 	bl	40008f94 <_tx_thread_system_suspend>
4000e498:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e49c:	eaffff65 	b	4000e238 <_tx_queue_receive+0x1c4>
4000e4a0:	e121f007 	msr	CPSR_c, r7
4000e4a4:	e3a0000a 	mov	r0, #10
4000e4a8:	eaffff62 	b	4000e238 <_tx_queue_receive+0x1c4>
4000e4ac:	40030ec0 	.word	0x40030ec0
4000e4b0:	40030ec4 	.word	0x40030ec4
4000e4b4:	40030e4c 	.word	0x40030e4c
4000e4b8:	40030e54 	.word	0x40030e54
4000e4bc:	f0f0f0f0 	.word	0xf0f0f0f0
4000e4c0:	40030ebc 	.word	0x40030ebc
4000e4c4:	40030eb8 	.word	0x40030eb8
4000e4c8:	40030eac 	.word	0x40030eac
4000e4cc:	40030e70 	.word	0x40030e70
4000e4d0:	40010a54 	.word	0x40010a54

4000e4d4 <_tx_queue_send>:
4000e4d4:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e4d8:	e1a04000 	mov	r4, r0
4000e4dc:	e1a05001 	mov	r5, r1
4000e4e0:	e1a06002 	mov	r6, r2
4000e4e4:	e10f7000 	mrs	r7, CPSR
4000e4e8:	e3870080 	orr	r0, r7, #128	; 0x80
4000e4ec:	e58d0004 	str	r0, [sp, #4]
4000e4f0:	e59d0004 	ldr	r0, [sp, #4]
4000e4f4:	e121f000 	msr	CPSR_c, r0
4000e4f8:	e59f1358 	ldr	r1, [pc, #856]	; 4000e858 <_tx_queue_send+0x384>
4000e4fc:	e5910000 	ldr	r0, [r1]
4000e500:	e3500000 	cmp	r0, #0
4000e504:	0a000031 	beq	4000e5d0 <_tx_queue_send+0xfc>
4000e508:	e59f134c 	ldr	r1, [pc, #844]	; 4000e85c <_tx_queue_send+0x388>
4000e50c:	e5911000 	ldr	r1, [r1]
4000e510:	e2811001 	add	r1, r1, #1
4000e514:	e59f2340 	ldr	r2, [pc, #832]	; 4000e85c <_tx_queue_send+0x388>
4000e518:	e5821000 	str	r1, [r2]
4000e51c:	e580100c 	str	r1, [r0, #12]
4000e520:	e59f1338 	ldr	r1, [pc, #824]	; 4000e860 <_tx_queue_send+0x38c>
4000e524:	e5911000 	ldr	r1, [r1]
4000e528:	e3510000 	cmp	r1, #0
4000e52c:	1a000006 	bne	4000e54c <_tx_queue_send+0x78>
4000e530:	e59f132c 	ldr	r1, [pc, #812]	; 4000e864 <_tx_queue_send+0x390>
4000e534:	e5911000 	ldr	r1, [r1]
4000e538:	e5801000 	str	r1, [r0]
4000e53c:	e5901000 	ldr	r1, [r0]
4000e540:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e544:	e5801004 	str	r1, [r0, #4]
4000e548:	ea00000d 	b	4000e584 <_tx_queue_send+0xb0>
4000e54c:	e59f130c 	ldr	r1, [pc, #780]	; 4000e860 <_tx_queue_send+0x38c>
4000e550:	e5911000 	ldr	r1, [r1]
4000e554:	e59f230c 	ldr	r2, [pc, #780]	; 4000e868 <_tx_queue_send+0x394>
4000e558:	e1510002 	cmp	r1, r2
4000e55c:	2a000004 	bcs	4000e574 <_tx_queue_send+0xa0>
4000e560:	e3e01000 	mvn	r1, #0
4000e564:	e5801000 	str	r1, [r0]
4000e568:	e3a01000 	mov	r1, #0
4000e56c:	e5801004 	str	r1, [r0, #4]
4000e570:	ea000003 	b	4000e584 <_tx_queue_send+0xb0>
4000e574:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e868 <_tx_queue_send+0x394>
4000e578:	e5801000 	str	r1, [r0]
4000e57c:	e3a01000 	mov	r1, #0
4000e580:	e5801004 	str	r1, [r0, #4]
4000e584:	e3a01045 	mov	r1, #69	; 0x45
4000e588:	e5801008 	str	r1, [r0, #8]
4000e58c:	e5804010 	str	r4, [r0, #16]
4000e590:	e5805014 	str	r5, [r0, #20]
4000e594:	e5806018 	str	r6, [r0, #24]
4000e598:	e5941010 	ldr	r1, [r4, #16]
4000e59c:	e580101c 	str	r1, [r0, #28]
4000e5a0:	e2800020 	add	r0, r0, #32
4000e5a4:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e86c <_tx_queue_send+0x398>
4000e5a8:	e5911000 	ldr	r1, [r1]
4000e5ac:	e1500001 	cmp	r0, r1
4000e5b0:	3a000001 	bcc	4000e5bc <_tx_queue_send+0xe8>
4000e5b4:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e870 <_tx_queue_send+0x39c>
4000e5b8:	e5910000 	ldr	r0, [r1]
4000e5bc:	e59f1294 	ldr	r1, [pc, #660]	; 4000e858 <_tx_queue_send+0x384>
4000e5c0:	e5810000 	str	r0, [r1]
4000e5c4:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e874 <_tx_queue_send+0x3a0>
4000e5c8:	e5911000 	ldr	r1, [r1]
4000e5cc:	e5810020 	str	r0, [r1, #32]
4000e5d0:	e5940014 	ldr	r0, [r4, #20]
4000e5d4:	e3500000 	cmp	r0, #0
4000e5d8:	0a000061 	beq	4000e764 <_tx_queue_send+0x290>
4000e5dc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e5e0:	e3500000 	cmp	r0, #0
4000e5e4:	1a000028 	bne	4000e68c <_tx_queue_send+0x1b8>
4000e5e8:	e5940014 	ldr	r0, [r4, #20]
4000e5ec:	e2400001 	sub	r0, r0, #1
4000e5f0:	e5840014 	str	r0, [r4, #20]
4000e5f4:	e5940010 	ldr	r0, [r4, #16]
4000e5f8:	e2800001 	add	r0, r0, #1
4000e5fc:	e5840010 	str	r0, [r4, #16]
4000e600:	e1a09005 	mov	r9, r5
4000e604:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e608:	e594b008 	ldr	fp, [r4, #8]
4000e60c:	e1a00000 	nop			; (mov r0, r0)
4000e610:	e5990000 	ldr	r0, [r9]
4000e614:	e58a0000 	str	r0, [sl]
4000e618:	e24bb001 	sub	fp, fp, #1
4000e61c:	e35b0000 	cmp	fp, #0
4000e620:	1a000000 	bne	4000e628 <_tx_queue_send+0x154>
4000e624:	ea000002 	b	4000e634 <_tx_queue_send+0x160>
4000e628:	e28aa004 	add	sl, sl, #4
4000e62c:	e2899004 	add	r9, r9, #4
4000e630:	eafffff6 	b	4000e610 <_tx_queue_send+0x13c>
4000e634:	e1a00000 	nop			; (mov r0, r0)
4000e638:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e63c:	e5941008 	ldr	r1, [r4, #8]
4000e640:	e0800101 	add	r0, r0, r1, lsl #2
4000e644:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e648:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e64c:	e594101c 	ldr	r1, [r4, #28]
4000e650:	e1500001 	cmp	r0, r1
4000e654:	3a000001 	bcc	4000e660 <_tx_queue_send+0x18c>
4000e658:	e5940018 	ldr	r0, [r4, #24]
4000e65c:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e660:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e664:	e58d0000 	str	r0, [sp]
4000e668:	e121f007 	msr	CPSR_c, r7
4000e66c:	e59d0000 	ldr	r0, [sp]
4000e670:	e3500000 	cmp	r0, #0
4000e674:	0a000002 	beq	4000e684 <_tx_queue_send+0x1b0>
4000e678:	e1a00004 	mov	r0, r4
4000e67c:	e59d1000 	ldr	r1, [sp]
4000e680:	e12fff31 	blx	r1
4000e684:	e3a00000 	mov	r0, #0
4000e688:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e68c:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e690:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e694:	e1500008 	cmp	r0, r8
4000e698:	1a000002 	bne	4000e6a8 <_tx_queue_send+0x1d4>
4000e69c:	e3a00000 	mov	r0, #0
4000e6a0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e6a4:	ea000007 	b	4000e6c8 <_tx_queue_send+0x1f4>
4000e6a8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e6ac:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e6b0:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e6b4:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e6b8:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e6bc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e6c0:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e6c4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e6c8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e6cc:	e2400001 	sub	r0, r0, #1
4000e6d0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e6d4:	e3a00000 	mov	r0, #0
4000e6d8:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e6dc:	e59f0194 	ldr	r0, [pc, #404]	; 4000e878 <_tx_queue_send+0x3a4>
4000e6e0:	e5900000 	ldr	r0, [r0]
4000e6e4:	e2800001 	add	r0, r0, #1
4000e6e8:	e59f1188 	ldr	r1, [pc, #392]	; 4000e878 <_tx_queue_send+0x3a4>
4000e6ec:	e5810000 	str	r0, [r1]
4000e6f0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e6f4:	e58d0000 	str	r0, [sp]
4000e6f8:	e121f007 	msr	CPSR_c, r7
4000e6fc:	e1a09005 	mov	r9, r5
4000e700:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e704:	e594b008 	ldr	fp, [r4, #8]
4000e708:	e1a00000 	nop			; (mov r0, r0)
4000e70c:	e5990000 	ldr	r0, [r9]
4000e710:	e58a0000 	str	r0, [sl]
4000e714:	e24bb001 	sub	fp, fp, #1
4000e718:	e35b0000 	cmp	fp, #0
4000e71c:	1a000000 	bne	4000e724 <_tx_queue_send+0x250>
4000e720:	ea000002 	b	4000e730 <_tx_queue_send+0x25c>
4000e724:	e28aa004 	add	sl, sl, #4
4000e728:	e2899004 	add	r9, r9, #4
4000e72c:	eafffff6 	b	4000e70c <_tx_queue_send+0x238>
4000e730:	e1a00000 	nop			; (mov r0, r0)
4000e734:	e3a00000 	mov	r0, #0
4000e738:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e73c:	e1a00008 	mov	r0, r8
4000e740:	eb0003ba 	bl	4000f630 <_tx_thread_system_resume>
4000e744:	e59d0000 	ldr	r0, [sp]
4000e748:	e3500000 	cmp	r0, #0
4000e74c:	0a000002 	beq	4000e75c <_tx_queue_send+0x288>
4000e750:	e1a00004 	mov	r0, r4
4000e754:	e59d1000 	ldr	r1, [sp]
4000e758:	e12fff31 	blx	r1
4000e75c:	e3a00000 	mov	r0, #0
4000e760:	eaffffc8 	b	4000e688 <_tx_queue_send+0x1b4>
4000e764:	e3560000 	cmp	r6, #0
4000e768:	0a000037 	beq	4000e84c <_tx_queue_send+0x378>
4000e76c:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e864 <_tx_queue_send+0x390>
4000e770:	e5908000 	ldr	r8, [r0]
4000e774:	e59f0100 	ldr	r0, [pc, #256]	; 4000e87c <_tx_queue_send+0x3a8>
4000e778:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e77c:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e780:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e784:	e3a00000 	mov	r0, #0
4000e788:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e78c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e790:	e3500000 	cmp	r0, #0
4000e794:	0a00000a 	beq	4000e7c4 <_tx_queue_send+0x2f0>
4000e798:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e79c:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e7a0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e7a4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e7a8:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e7ac:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e7b0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e7b4:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e7b8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e7bc:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e7c0:	ea000002 	b	4000e7d0 <_tx_queue_send+0x2fc>
4000e7c4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e7c8:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e7cc:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e7d0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e7d4:	e2800001 	add	r0, r0, #1
4000e7d8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e7dc:	e3a00005 	mov	r0, #5
4000e7e0:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e7e4:	e3a00001 	mov	r0, #1
4000e7e8:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e7ec:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e7f0:	e59f0080 	ldr	r0, [pc, #128]	; 4000e878 <_tx_queue_send+0x3a4>
4000e7f4:	e5900000 	ldr	r0, [r0]
4000e7f8:	e2800001 	add	r0, r0, #1
4000e7fc:	e59f1074 	ldr	r1, [pc, #116]	; 4000e878 <_tx_queue_send+0x3a4>
4000e800:	e5810000 	str	r0, [r1]
4000e804:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e808:	e58d0000 	str	r0, [sp]
4000e80c:	e121f007 	msr	CPSR_c, r7
4000e810:	e1a00008 	mov	r0, r8
4000e814:	ebffe9de 	bl	40008f94 <_tx_thread_system_suspend>
4000e818:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e81c:	e58d0000 	str	r0, [sp]
4000e820:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e824:	e3500000 	cmp	r0, #0
4000e828:	1a000005 	bne	4000e844 <_tx_queue_send+0x370>
4000e82c:	e59d0000 	ldr	r0, [sp]
4000e830:	e3500000 	cmp	r0, #0
4000e834:	0a000002 	beq	4000e844 <_tx_queue_send+0x370>
4000e838:	e1a00004 	mov	r0, r4
4000e83c:	e59d1000 	ldr	r1, [sp]
4000e840:	e12fff31 	blx	r1
4000e844:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e848:	eaffff8e 	b	4000e688 <_tx_queue_send+0x1b4>
4000e84c:	e121f007 	msr	CPSR_c, r7
4000e850:	e3a0000b 	mov	r0, #11
4000e854:	eaffff8b 	b	4000e688 <_tx_queue_send+0x1b4>
4000e858:	40030ec0 	.word	0x40030ec0
4000e85c:	40030ec4 	.word	0x40030ec4
4000e860:	40030e4c 	.word	0x40030e4c
4000e864:	40030e54 	.word	0x40030e54
4000e868:	f0f0f0f0 	.word	0xf0f0f0f0
4000e86c:	40030ebc 	.word	0x40030ebc
4000e870:	40030eb8 	.word	0x40030eb8
4000e874:	40030eac 	.word	0x40030eac
4000e878:	40030e70 	.word	0x40030e70
4000e87c:	40010a54 	.word	0x40010a54

4000e880 <_tx_thread_create>:
4000e880:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e884:	e24dd014 	sub	sp, sp, #20
4000e888:	e1a04000 	mov	r4, r0
4000e88c:	e1a05001 	mov	r5, r1
4000e890:	e28da048 	add	sl, sp, #72	; 0x48
4000e894:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e898:	e3a00000 	mov	r0, #0
4000e89c:	e58d0004 	str	r0, [sp, #4]
4000e8a0:	e3a020ef 	mov	r2, #239	; 0xef
4000e8a4:	e1a01007 	mov	r1, r7
4000e8a8:	e1a00006 	mov	r0, r6
4000e8ac:	eb00147b 	bl	40013aa0 <__aeabi_memset>
4000e8b0:	e1a00127 	lsr	r0, r7, #2
4000e8b4:	e3a01004 	mov	r1, #4
4000e8b8:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e8bc:	e3a010a8 	mov	r1, #168	; 0xa8
4000e8c0:	e1a00004 	mov	r0, r4
4000e8c4:	eb00144d 	bl	40013a00 <__aeabi_memclr4>
4000e8c8:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e8cc:	e59d001c 	ldr	r0, [sp, #28]
4000e8d0:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e8d4:	e59d0020 	ldr	r0, [sp, #32]
4000e8d8:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e8dc:	e584600c 	str	r6, [r4, #12]
4000e8e0:	e5847014 	str	r7, [r4, #20]
4000e8e4:	e2470001 	sub	r0, r7, #1
4000e8e8:	e0800006 	add	r0, r0, r6
4000e8ec:	e5840010 	str	r0, [r4, #16]
4000e8f0:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e8f4:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e8f8:	e584a018 	str	sl, [r4, #24]
4000e8fc:	e584a01c 	str	sl, [r4, #28]
4000e900:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e904:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e908:	e3a00003 	mov	r0, #3
4000e90c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e910:	e59f0268 	ldr	r0, [pc, #616]	; 4000eb80 <_tx_thread_create+0x300>
4000e914:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e918:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e91c:	e59f1260 	ldr	r1, [pc, #608]	; 4000eb84 <_tx_thread_create+0x304>
4000e920:	e1a00004 	mov	r0, r4
4000e924:	eb000727 	bl	400105c8 <_tx_thread_stack_build>
4000e928:	e5940008 	ldr	r0, [r4, #8]
4000e92c:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e930:	e10f0000 	mrs	r0, CPSR
4000e934:	e58d0010 	str	r0, [sp, #16]
4000e938:	e59d0010 	ldr	r0, [sp, #16]
4000e93c:	e380b080 	orr	fp, r0, #128	; 0x80
4000e940:	e121f00b 	msr	CPSR_c, fp
4000e944:	e59f023c 	ldr	r0, [pc, #572]	; 4000eb88 <_tx_thread_create+0x308>
4000e948:	e5840000 	str	r0, [r4]
4000e94c:	e59f0238 	ldr	r0, [pc, #568]	; 4000eb8c <_tx_thread_create+0x30c>
4000e950:	e5900000 	ldr	r0, [r0]
4000e954:	e3500000 	cmp	r0, #0
4000e958:	0a00000e 	beq	4000e998 <_tx_thread_create+0x118>
4000e95c:	e59f0228 	ldr	r0, [pc, #552]	; 4000eb8c <_tx_thread_create+0x30c>
4000e960:	e5900000 	ldr	r0, [r0]
4000e964:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e968:	e58d000c 	str	r0, [sp, #12]
4000e96c:	e59f0218 	ldr	r0, [pc, #536]	; 4000eb8c <_tx_thread_create+0x30c>
4000e970:	e5900000 	ldr	r0, [r0]
4000e974:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e978:	e59d000c 	ldr	r0, [sp, #12]
4000e97c:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e980:	e59d000c 	ldr	r0, [sp, #12]
4000e984:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e988:	e59f01fc 	ldr	r0, [pc, #508]	; 4000eb8c <_tx_thread_create+0x30c>
4000e98c:	e5900000 	ldr	r0, [r0]
4000e990:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e994:	ea000003 	b	4000e9a8 <_tx_thread_create+0x128>
4000e998:	e59f01ec 	ldr	r0, [pc, #492]	; 4000eb8c <_tx_thread_create+0x30c>
4000e99c:	e5804000 	str	r4, [r0]
4000e9a0:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e9a4:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e9a8:	e59f01e0 	ldr	r0, [pc, #480]	; 4000eb90 <_tx_thread_create+0x310>
4000e9ac:	e5900000 	ldr	r0, [r0]
4000e9b0:	e2800001 	add	r0, r0, #1
4000e9b4:	e59f11d4 	ldr	r1, [pc, #468]	; 4000eb90 <_tx_thread_create+0x310>
4000e9b8:	e5810000 	str	r0, [r1]
4000e9bc:	e59f01d0 	ldr	r0, [pc, #464]	; 4000eb94 <_tx_thread_create+0x314>
4000e9c0:	e5900000 	ldr	r0, [r0]
4000e9c4:	e2800001 	add	r0, r0, #1
4000e9c8:	e59f11c4 	ldr	r1, [pc, #452]	; 4000eb94 <_tx_thread_create+0x314>
4000e9cc:	e5810000 	str	r0, [r1]
4000e9d0:	e1a03006 	mov	r3, r6
4000e9d4:	e1a02005 	mov	r2, r5
4000e9d8:	e1a01004 	mov	r1, r4
4000e9dc:	e3a00001 	mov	r0, #1
4000e9e0:	e58d7000 	str	r7, [sp]
4000e9e4:	eb000667 	bl	40010388 <_tx_trace_object_register>
4000e9e8:	e59f11a8 	ldr	r1, [pc, #424]	; 4000eb98 <_tx_thread_create+0x318>
4000e9ec:	e5910000 	ldr	r0, [r1]
4000e9f0:	e3500000 	cmp	r0, #0
4000e9f4:	0a000030 	beq	4000eabc <_tx_thread_create+0x23c>
4000e9f8:	e59f119c 	ldr	r1, [pc, #412]	; 4000eb9c <_tx_thread_create+0x31c>
4000e9fc:	e5911000 	ldr	r1, [r1]
4000ea00:	e2811001 	add	r1, r1, #1
4000ea04:	e59f2190 	ldr	r2, [pc, #400]	; 4000eb9c <_tx_thread_create+0x31c>
4000ea08:	e5821000 	str	r1, [r2]
4000ea0c:	e580100c 	str	r1, [r0, #12]
4000ea10:	e59f1188 	ldr	r1, [pc, #392]	; 4000eba0 <_tx_thread_create+0x320>
4000ea14:	e5911000 	ldr	r1, [r1]
4000ea18:	e3510000 	cmp	r1, #0
4000ea1c:	1a000006 	bne	4000ea3c <_tx_thread_create+0x1bc>
4000ea20:	e59f117c 	ldr	r1, [pc, #380]	; 4000eba4 <_tx_thread_create+0x324>
4000ea24:	e5911000 	ldr	r1, [r1]
4000ea28:	e5801000 	str	r1, [r0]
4000ea2c:	e5901000 	ldr	r1, [r0]
4000ea30:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ea34:	e5801004 	str	r1, [r0, #4]
4000ea38:	ea00000d 	b	4000ea74 <_tx_thread_create+0x1f4>
4000ea3c:	e59f115c 	ldr	r1, [pc, #348]	; 4000eba0 <_tx_thread_create+0x320>
4000ea40:	e5911000 	ldr	r1, [r1]
4000ea44:	e59f215c 	ldr	r2, [pc, #348]	; 4000eba8 <_tx_thread_create+0x328>
4000ea48:	e1510002 	cmp	r1, r2
4000ea4c:	2a000004 	bcs	4000ea64 <_tx_thread_create+0x1e4>
4000ea50:	e3e01000 	mvn	r1, #0
4000ea54:	e5801000 	str	r1, [r0]
4000ea58:	e3a01000 	mov	r1, #0
4000ea5c:	e5801004 	str	r1, [r0, #4]
4000ea60:	ea000003 	b	4000ea74 <_tx_thread_create+0x1f4>
4000ea64:	e59f113c 	ldr	r1, [pc, #316]	; 4000eba8 <_tx_thread_create+0x328>
4000ea68:	e5801000 	str	r1, [r0]
4000ea6c:	e3a01000 	mov	r1, #0
4000ea70:	e5801004 	str	r1, [r0, #4]
4000ea74:	e3a01064 	mov	r1, #100	; 0x64
4000ea78:	e5801008 	str	r1, [r0, #8]
4000ea7c:	e5804010 	str	r4, [r0, #16]
4000ea80:	e5808014 	str	r8, [r0, #20]
4000ea84:	e5806018 	str	r6, [r0, #24]
4000ea88:	e580701c 	str	r7, [r0, #28]
4000ea8c:	e2800020 	add	r0, r0, #32
4000ea90:	e59f1114 	ldr	r1, [pc, #276]	; 4000ebac <_tx_thread_create+0x32c>
4000ea94:	e5911000 	ldr	r1, [r1]
4000ea98:	e1500001 	cmp	r0, r1
4000ea9c:	3a000001 	bcc	4000eaa8 <_tx_thread_create+0x228>
4000eaa0:	e59f1108 	ldr	r1, [pc, #264]	; 4000ebb0 <_tx_thread_create+0x330>
4000eaa4:	e5910000 	ldr	r0, [r1]
4000eaa8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000eb98 <_tx_thread_create+0x318>
4000eaac:	e5810000 	str	r0, [r1]
4000eab0:	e59f10fc 	ldr	r1, [pc, #252]	; 4000ebb4 <_tx_thread_create+0x334>
4000eab4:	e5911000 	ldr	r1, [r1]
4000eab8:	e5810020 	str	r0, [r1, #32]
4000eabc:	e59d0010 	ldr	r0, [sp, #16]
4000eac0:	e121f000 	msr	CPSR_c, r0
4000eac4:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000eac8:	e3500000 	cmp	r0, #0
4000eacc:	0a00001c 	beq	4000eb44 <_tx_thread_create+0x2c4>
4000ead0:	e59f00c8 	ldr	r0, [pc, #200]	; 4000eba0 <_tx_thread_create+0x320>
4000ead4:	e5900000 	ldr	r0, [r0]
4000ead8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000eba8 <_tx_thread_create+0x328>
4000eadc:	e1500001 	cmp	r0, r1
4000eae0:	3a00000c 	bcc	4000eb18 <_tx_thread_create+0x298>
4000eae4:	e59f00cc 	ldr	r0, [pc, #204]	; 4000ebb8 <_tx_thread_create+0x338>
4000eae8:	e5900000 	ldr	r0, [r0]
4000eaec:	e58d0008 	str	r0, [sp, #8]
4000eaf0:	e59d0008 	ldr	r0, [sp, #8]
4000eaf4:	e3500000 	cmp	r0, #0
4000eaf8:	0a000008 	beq	4000eb20 <_tx_thread_create+0x2a0>
4000eafc:	e59d0008 	ldr	r0, [sp, #8]
4000eb00:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000eb04:	e58d0004 	str	r0, [sp, #4]
4000eb08:	e59d0008 	ldr	r0, [sp, #8]
4000eb0c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000eb10:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000eb14:	ea000001 	b	4000eb20 <_tx_thread_create+0x2a0>
4000eb18:	e3a00000 	mov	r0, #0
4000eb1c:	e58d0008 	str	r0, [sp, #8]
4000eb20:	e1a00004 	mov	r0, r4
4000eb24:	eb0002c1 	bl	4000f630 <_tx_thread_system_resume>
4000eb28:	e59d0008 	ldr	r0, [sp, #8]
4000eb2c:	e3500000 	cmp	r0, #0
4000eb30:	0a00000f 	beq	4000eb74 <_tx_thread_create+0x2f4>
4000eb34:	e59d0008 	ldr	r0, [sp, #8]
4000eb38:	e59d1004 	ldr	r1, [sp, #4]
4000eb3c:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000eb40:	ea00000b 	b	4000eb74 <_tx_thread_create+0x2f4>
4000eb44:	e10f0000 	mrs	r0, CPSR
4000eb48:	e58d0010 	str	r0, [sp, #16]
4000eb4c:	e59d0010 	ldr	r0, [sp, #16]
4000eb50:	e380b080 	orr	fp, r0, #128	; 0x80
4000eb54:	e121f00b 	msr	CPSR_c, fp
4000eb58:	e59f0034 	ldr	r0, [pc, #52]	; 4000eb94 <_tx_thread_create+0x314>
4000eb5c:	e5900000 	ldr	r0, [r0]
4000eb60:	e2400001 	sub	r0, r0, #1
4000eb64:	e59f1028 	ldr	r1, [pc, #40]	; 4000eb94 <_tx_thread_create+0x314>
4000eb68:	e5810000 	str	r0, [r1]
4000eb6c:	e59d0010 	ldr	r0, [sp, #16]
4000eb70:	e121f000 	msr	CPSR_c, r0
4000eb74:	e3a00000 	mov	r0, #0
4000eb78:	e28dd024 	add	sp, sp, #36	; 0x24
4000eb7c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000eb80:	4000fb60 	.word	0x4000fb60
4000eb84:	4000f3c4 	.word	0x4000f3c4
4000eb88:	54485244 	.word	0x54485244
4000eb8c:	40030e5c 	.word	0x40030e5c
4000eb90:	40030e60 	.word	0x40030e60
4000eb94:	40030e70 	.word	0x40030e70
4000eb98:	40030ec0 	.word	0x40030ec0
4000eb9c:	40030ec4 	.word	0x40030ec4
4000eba0:	40030e4c 	.word	0x40030e4c
4000eba4:	40030e54 	.word	0x40030e54
4000eba8:	f0f0f0f0 	.word	0xf0f0f0f0
4000ebac:	40030ebc 	.word	0x40030ebc
4000ebb0:	40030eb8 	.word	0x40030eb8
4000ebb4:	40030eac 	.word	0x40030eac
4000ebb8:	40030e58 	.word	0x40030e58

4000ebbc <_tx_thread_info_get>:
4000ebbc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ebc0:	e1a0c000 	mov	ip, r0
4000ebc4:	e28d7028 	add	r7, sp, #40	; 0x28
4000ebc8:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000ebcc:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000ebd0:	e10f8000 	mrs	r8, CPSR
4000ebd4:	e3889080 	orr	r9, r8, #128	; 0x80
4000ebd8:	e121f009 	msr	CPSR_c, r9
4000ebdc:	e59fa160 	ldr	sl, [pc, #352]	; 4000ed44 <_tx_thread_info_get+0x188>
4000ebe0:	e59a0000 	ldr	r0, [sl]
4000ebe4:	e3500000 	cmp	r0, #0
4000ebe8:	0a000032 	beq	4000ecb8 <_tx_thread_info_get+0xfc>
4000ebec:	e59fa154 	ldr	sl, [pc, #340]	; 4000ed48 <_tx_thread_info_get+0x18c>
4000ebf0:	e59aa000 	ldr	sl, [sl]
4000ebf4:	e28aa001 	add	sl, sl, #1
4000ebf8:	e59fb148 	ldr	fp, [pc, #328]	; 4000ed48 <_tx_thread_info_get+0x18c>
4000ebfc:	e58ba000 	str	sl, [fp]
4000ec00:	e580a00c 	str	sl, [r0, #12]
4000ec04:	e59fa140 	ldr	sl, [pc, #320]	; 4000ed4c <_tx_thread_info_get+0x190>
4000ec08:	e59aa000 	ldr	sl, [sl]
4000ec0c:	e35a0000 	cmp	sl, #0
4000ec10:	1a000006 	bne	4000ec30 <_tx_thread_info_get+0x74>
4000ec14:	e59fa134 	ldr	sl, [pc, #308]	; 4000ed50 <_tx_thread_info_get+0x194>
4000ec18:	e59aa000 	ldr	sl, [sl]
4000ec1c:	e580a000 	str	sl, [r0]
4000ec20:	e590a000 	ldr	sl, [r0]
4000ec24:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000ec28:	e580a004 	str	sl, [r0, #4]
4000ec2c:	ea00000d 	b	4000ec68 <_tx_thread_info_get+0xac>
4000ec30:	e59fa114 	ldr	sl, [pc, #276]	; 4000ed4c <_tx_thread_info_get+0x190>
4000ec34:	e59aa000 	ldr	sl, [sl]
4000ec38:	e59fb114 	ldr	fp, [pc, #276]	; 4000ed54 <_tx_thread_info_get+0x198>
4000ec3c:	e15a000b 	cmp	sl, fp
4000ec40:	2a000004 	bcs	4000ec58 <_tx_thread_info_get+0x9c>
4000ec44:	e3e0a000 	mvn	sl, #0
4000ec48:	e580a000 	str	sl, [r0]
4000ec4c:	e3a0a000 	mov	sl, #0
4000ec50:	e580a004 	str	sl, [r0, #4]
4000ec54:	ea000003 	b	4000ec68 <_tx_thread_info_get+0xac>
4000ec58:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000ed54 <_tx_thread_info_get+0x198>
4000ec5c:	e580a000 	str	sl, [r0]
4000ec60:	e3a0a000 	mov	sl, #0
4000ec64:	e580a004 	str	sl, [r0, #4]
4000ec68:	e3a0a068 	mov	sl, #104	; 0x68
4000ec6c:	e580a008 	str	sl, [r0, #8]
4000ec70:	e580c010 	str	ip, [r0, #16]
4000ec74:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000ec78:	e580a014 	str	sl, [r0, #20]
4000ec7c:	e3a0a000 	mov	sl, #0
4000ec80:	e580a018 	str	sl, [r0, #24]
4000ec84:	e580a01c 	str	sl, [r0, #28]
4000ec88:	e2800020 	add	r0, r0, #32
4000ec8c:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000ed58 <_tx_thread_info_get+0x19c>
4000ec90:	e59aa000 	ldr	sl, [sl]
4000ec94:	e150000a 	cmp	r0, sl
4000ec98:	3a000001 	bcc	4000eca4 <_tx_thread_info_get+0xe8>
4000ec9c:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000ed5c <_tx_thread_info_get+0x1a0>
4000eca0:	e59a0000 	ldr	r0, [sl]
4000eca4:	e59fa098 	ldr	sl, [pc, #152]	; 4000ed44 <_tx_thread_info_get+0x188>
4000eca8:	e58a0000 	str	r0, [sl]
4000ecac:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000ed60 <_tx_thread_info_get+0x1a4>
4000ecb0:	e59aa000 	ldr	sl, [sl]
4000ecb4:	e58a0020 	str	r0, [sl, #32]
4000ecb8:	e3510000 	cmp	r1, #0
4000ecbc:	0a000001 	beq	4000ecc8 <_tx_thread_info_get+0x10c>
4000ecc0:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000ecc4:	e5810000 	str	r0, [r1]
4000ecc8:	e3520000 	cmp	r2, #0
4000eccc:	0a000001 	beq	4000ecd8 <_tx_thread_info_get+0x11c>
4000ecd0:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000ecd4:	e5820000 	str	r0, [r2]
4000ecd8:	e3530000 	cmp	r3, #0
4000ecdc:	0a000001 	beq	4000ece8 <_tx_thread_info_get+0x12c>
4000ece0:	e59c0004 	ldr	r0, [ip, #4]
4000ece4:	e5830000 	str	r0, [r3]
4000ece8:	e35e0000 	cmp	lr, #0
4000ecec:	0a000001 	beq	4000ecf8 <_tx_thread_info_get+0x13c>
4000ecf0:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000ecf4:	e58e0000 	str	r0, [lr]
4000ecf8:	e3540000 	cmp	r4, #0
4000ecfc:	0a000001 	beq	4000ed08 <_tx_thread_info_get+0x14c>
4000ed00:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000ed04:	e5840000 	str	r0, [r4]
4000ed08:	e3550000 	cmp	r5, #0
4000ed0c:	0a000001 	beq	4000ed18 <_tx_thread_info_get+0x15c>
4000ed10:	e59c0018 	ldr	r0, [ip, #24]
4000ed14:	e5850000 	str	r0, [r5]
4000ed18:	e3560000 	cmp	r6, #0
4000ed1c:	0a000001 	beq	4000ed28 <_tx_thread_info_get+0x16c>
4000ed20:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000ed24:	e5860000 	str	r0, [r6]
4000ed28:	e3570000 	cmp	r7, #0
4000ed2c:	0a000001 	beq	4000ed38 <_tx_thread_info_get+0x17c>
4000ed30:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000ed34:	e5870000 	str	r0, [r7]
4000ed38:	e121f008 	msr	CPSR_c, r8
4000ed3c:	e3a00000 	mov	r0, #0
4000ed40:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ed44:	40030ec0 	.word	0x40030ec0
4000ed48:	40030ec4 	.word	0x40030ec4
4000ed4c:	40030e4c 	.word	0x40030e4c
4000ed50:	40030e54 	.word	0x40030e54
4000ed54:	f0f0f0f0 	.word	0xf0f0f0f0
4000ed58:	40030ebc 	.word	0x40030ebc
4000ed5c:	40030eb8 	.word	0x40030eb8
4000ed60:	40030eac 	.word	0x40030eac

4000ed64 <_tx_thread_priority_change>:
4000ed64:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ed68:	e1a04000 	mov	r4, r0
4000ed6c:	e1a05001 	mov	r5, r1
4000ed70:	e1a06002 	mov	r6, r2
4000ed74:	e10f7000 	mrs	r7, CPSR
4000ed78:	e3878080 	orr	r8, r7, #128	; 0x80
4000ed7c:	e121f008 	msr	CPSR_c, r8
4000ed80:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000ed84:	e5860000 	str	r0, [r6]
4000ed88:	e59f1150 	ldr	r1, [pc, #336]	; 4000eee0 <_tx_thread_priority_change+0x17c>
4000ed8c:	e5910000 	ldr	r0, [r1]
4000ed90:	e3500000 	cmp	r0, #0
4000ed94:	0a000032 	beq	4000ee64 <_tx_thread_priority_change+0x100>
4000ed98:	e59f1144 	ldr	r1, [pc, #324]	; 4000eee4 <_tx_thread_priority_change+0x180>
4000ed9c:	e5911000 	ldr	r1, [r1]
4000eda0:	e2811001 	add	r1, r1, #1
4000eda4:	e59f2138 	ldr	r2, [pc, #312]	; 4000eee4 <_tx_thread_priority_change+0x180>
4000eda8:	e5821000 	str	r1, [r2]
4000edac:	e580100c 	str	r1, [r0, #12]
4000edb0:	e59f1130 	ldr	r1, [pc, #304]	; 4000eee8 <_tx_thread_priority_change+0x184>
4000edb4:	e5911000 	ldr	r1, [r1]
4000edb8:	e3510000 	cmp	r1, #0
4000edbc:	1a000006 	bne	4000eddc <_tx_thread_priority_change+0x78>
4000edc0:	e59f1124 	ldr	r1, [pc, #292]	; 4000eeec <_tx_thread_priority_change+0x188>
4000edc4:	e5911000 	ldr	r1, [r1]
4000edc8:	e5801000 	str	r1, [r0]
4000edcc:	e5901000 	ldr	r1, [r0]
4000edd0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000edd4:	e5801004 	str	r1, [r0, #4]
4000edd8:	ea00000d 	b	4000ee14 <_tx_thread_priority_change+0xb0>
4000eddc:	e59f1104 	ldr	r1, [pc, #260]	; 4000eee8 <_tx_thread_priority_change+0x184>
4000ede0:	e5911000 	ldr	r1, [r1]
4000ede4:	e59f2104 	ldr	r2, [pc, #260]	; 4000eef0 <_tx_thread_priority_change+0x18c>
4000ede8:	e1510002 	cmp	r1, r2
4000edec:	2a000004 	bcs	4000ee04 <_tx_thread_priority_change+0xa0>
4000edf0:	e3e01000 	mvn	r1, #0
4000edf4:	e5801000 	str	r1, [r0]
4000edf8:	e3a01000 	mov	r1, #0
4000edfc:	e5801004 	str	r1, [r0, #4]
4000ee00:	ea000003 	b	4000ee14 <_tx_thread_priority_change+0xb0>
4000ee04:	e59f10e4 	ldr	r1, [pc, #228]	; 4000eef0 <_tx_thread_priority_change+0x18c>
4000ee08:	e5801000 	str	r1, [r0]
4000ee0c:	e3a01000 	mov	r1, #0
4000ee10:	e5801004 	str	r1, [r0, #4]
4000ee14:	e3a0106c 	mov	r1, #108	; 0x6c
4000ee18:	e5801008 	str	r1, [r0, #8]
4000ee1c:	e5804010 	str	r4, [r0, #16]
4000ee20:	e5805014 	str	r5, [r0, #20]
4000ee24:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ee28:	e5801018 	str	r1, [r0, #24]
4000ee2c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ee30:	e580101c 	str	r1, [r0, #28]
4000ee34:	e2800020 	add	r0, r0, #32
4000ee38:	e59f10b4 	ldr	r1, [pc, #180]	; 4000eef4 <_tx_thread_priority_change+0x190>
4000ee3c:	e5911000 	ldr	r1, [r1]
4000ee40:	e1500001 	cmp	r0, r1
4000ee44:	3a000001 	bcc	4000ee50 <_tx_thread_priority_change+0xec>
4000ee48:	e59f10a8 	ldr	r1, [pc, #168]	; 4000eef8 <_tx_thread_priority_change+0x194>
4000ee4c:	e5910000 	ldr	r0, [r1]
4000ee50:	e59f1088 	ldr	r1, [pc, #136]	; 4000eee0 <_tx_thread_priority_change+0x17c>
4000ee54:	e5810000 	str	r0, [r1]
4000ee58:	e59f109c 	ldr	r1, [pc, #156]	; 4000eefc <_tx_thread_priority_change+0x198>
4000ee5c:	e5911000 	ldr	r1, [r1]
4000ee60:	e5810020 	str	r0, [r1, #32]
4000ee64:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ee68:	e3500000 	cmp	r0, #0
4000ee6c:	0a000005 	beq	4000ee88 <_tx_thread_priority_change+0x124>
4000ee70:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ee74:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ee78:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ee7c:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ee80:	e121f007 	msr	CPSR_c, r7
4000ee84:	ea000013 	b	4000eed8 <_tx_thread_priority_change+0x174>
4000ee88:	e59f0070 	ldr	r0, [pc, #112]	; 4000ef00 <_tx_thread_priority_change+0x19c>
4000ee8c:	e5900000 	ldr	r0, [r0]
4000ee90:	e2800002 	add	r0, r0, #2
4000ee94:	e59f1064 	ldr	r1, [pc, #100]	; 4000ef00 <_tx_thread_priority_change+0x19c>
4000ee98:	e5810000 	str	r0, [r1]
4000ee9c:	e3a00003 	mov	r0, #3
4000eea0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000eea4:	e3a00001 	mov	r0, #1
4000eea8:	e5840038 	str	r0, [r4, #56]	; 0x38
4000eeac:	e3a00000 	mov	r0, #0
4000eeb0:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000eeb4:	e121f007 	msr	CPSR_c, r7
4000eeb8:	e1a00004 	mov	r0, r4
4000eebc:	ebffe834 	bl	40008f94 <_tx_thread_system_suspend>
4000eec0:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eec4:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eec8:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eecc:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eed0:	e1a00004 	mov	r0, r4
4000eed4:	eb0001d5 	bl	4000f630 <_tx_thread_system_resume>
4000eed8:	e3a00000 	mov	r0, #0
4000eedc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000eee0:	40030ec0 	.word	0x40030ec0
4000eee4:	40030ec4 	.word	0x40030ec4
4000eee8:	40030e4c 	.word	0x40030e4c
4000eeec:	40030e54 	.word	0x40030e54
4000eef0:	f0f0f0f0 	.word	0xf0f0f0f0
4000eef4:	40030ebc 	.word	0x40030ebc
4000eef8:	40030eb8 	.word	0x40030eb8
4000eefc:	40030eac 	.word	0x40030eac
4000ef00:	40030e70 	.word	0x40030e70

4000ef04 <_tx_thread_relinquish>:
4000ef04:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ef08:	e59f02b0 	ldr	r0, [pc, #688]	; 4000f1c0 <_tx_thread_relinquish+0x2bc>
4000ef0c:	e5900000 	ldr	r0, [r0]
4000ef10:	e58d0000 	str	r0, [sp]
4000ef14:	e59d0000 	ldr	r0, [sp]
4000ef18:	e5900008 	ldr	r0, [r0, #8]
4000ef1c:	e59d1000 	ldr	r1, [sp]
4000ef20:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ef24:	e1500001 	cmp	r0, r1
4000ef28:	2a000003 	bcs	4000ef3c <_tx_thread_relinquish+0x38>
4000ef2c:	e59d0000 	ldr	r0, [sp]
4000ef30:	e5900008 	ldr	r0, [r0, #8]
4000ef34:	e59d1000 	ldr	r1, [sp]
4000ef38:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ef3c:	e59d0000 	ldr	r0, [sp]
4000ef40:	e590000c 	ldr	r0, [r0, #12]
4000ef44:	e5900000 	ldr	r0, [r0]
4000ef48:	e59f1274 	ldr	r1, [pc, #628]	; 4000f1c4 <_tx_thread_relinquish+0x2c0>
4000ef4c:	e1500001 	cmp	r0, r1
4000ef50:	1a00000a 	bne	4000ef80 <_tx_thread_relinquish+0x7c>
4000ef54:	e59d0000 	ldr	r0, [sp]
4000ef58:	e5900010 	ldr	r0, [r0, #16]
4000ef5c:	e5900001 	ldr	r0, [r0, #1]
4000ef60:	e1500001 	cmp	r0, r1
4000ef64:	1a000005 	bne	4000ef80 <_tx_thread_relinquish+0x7c>
4000ef68:	e59d0000 	ldr	r0, [sp]
4000ef6c:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ef70:	e59d1000 	ldr	r1, [sp]
4000ef74:	e591100c 	ldr	r1, [r1, #12]
4000ef78:	e1500001 	cmp	r0, r1
4000ef7c:	2a000001 	bcs	4000ef88 <_tx_thread_relinquish+0x84>
4000ef80:	e59d0000 	ldr	r0, [sp]
4000ef84:	eb00016a 	bl	4000f534 <_tx_thread_stack_error_handler>
4000ef88:	e59d0000 	ldr	r0, [sp]
4000ef8c:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ef90:	e5100004 	ldr	r0, [r0, #-4]
4000ef94:	e59f1228 	ldr	r1, [pc, #552]	; 4000f1c4 <_tx_thread_relinquish+0x2c0>
4000ef98:	e1500001 	cmp	r0, r1
4000ef9c:	0a000001 	beq	4000efa8 <_tx_thread_relinquish+0xa4>
4000efa0:	e59d0000 	ldr	r0, [sp]
4000efa4:	eb00012d 	bl	4000f460 <_tx_thread_stack_analyze>
4000efa8:	e10f4000 	mrs	r4, CPSR
4000efac:	e3845080 	orr	r5, r4, #128	; 0x80
4000efb0:	e121f005 	msr	CPSR_c, r5
4000efb4:	e59f120c 	ldr	r1, [pc, #524]	; 4000f1c8 <_tx_thread_relinquish+0x2c4>
4000efb8:	e5910000 	ldr	r0, [r1]
4000efbc:	e3500000 	cmp	r0, #0
4000efc0:	0a000031 	beq	4000f08c <_tx_thread_relinquish+0x188>
4000efc4:	e59f1200 	ldr	r1, [pc, #512]	; 4000f1cc <_tx_thread_relinquish+0x2c8>
4000efc8:	e5911000 	ldr	r1, [r1]
4000efcc:	e2811001 	add	r1, r1, #1
4000efd0:	e59f21f4 	ldr	r2, [pc, #500]	; 4000f1cc <_tx_thread_relinquish+0x2c8>
4000efd4:	e5821000 	str	r1, [r2]
4000efd8:	e580100c 	str	r1, [r0, #12]
4000efdc:	e59f11ec 	ldr	r1, [pc, #492]	; 4000f1d0 <_tx_thread_relinquish+0x2cc>
4000efe0:	e5911000 	ldr	r1, [r1]
4000efe4:	e3510000 	cmp	r1, #0
4000efe8:	1a000006 	bne	4000f008 <_tx_thread_relinquish+0x104>
4000efec:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f1c0 <_tx_thread_relinquish+0x2bc>
4000eff0:	e5911000 	ldr	r1, [r1]
4000eff4:	e5801000 	str	r1, [r0]
4000eff8:	e5901000 	ldr	r1, [r0]
4000effc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f000:	e5801004 	str	r1, [r0, #4]
4000f004:	ea00000d 	b	4000f040 <_tx_thread_relinquish+0x13c>
4000f008:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f1d0 <_tx_thread_relinquish+0x2cc>
4000f00c:	e5911000 	ldr	r1, [r1]
4000f010:	e59f21bc 	ldr	r2, [pc, #444]	; 4000f1d4 <_tx_thread_relinquish+0x2d0>
4000f014:	e1510002 	cmp	r1, r2
4000f018:	2a000004 	bcs	4000f030 <_tx_thread_relinquish+0x12c>
4000f01c:	e3e01000 	mvn	r1, #0
4000f020:	e5801000 	str	r1, [r0]
4000f024:	e3a01000 	mov	r1, #0
4000f028:	e5801004 	str	r1, [r0, #4]
4000f02c:	ea000003 	b	4000f040 <_tx_thread_relinquish+0x13c>
4000f030:	e59f119c 	ldr	r1, [pc, #412]	; 4000f1d4 <_tx_thread_relinquish+0x2d0>
4000f034:	e5801000 	str	r1, [r0]
4000f038:	e3a01000 	mov	r1, #0
4000f03c:	e5801004 	str	r1, [r0, #4]
4000f040:	e3a0106d 	mov	r1, #109	; 0x6d
4000f044:	e5801008 	str	r1, [r0, #8]
4000f048:	e580d010 	str	sp, [r0, #16]
4000f04c:	e3a01000 	mov	r1, #0
4000f050:	e5801014 	str	r1, [r0, #20]
4000f054:	e5801018 	str	r1, [r0, #24]
4000f058:	e580101c 	str	r1, [r0, #28]
4000f05c:	e2800020 	add	r0, r0, #32
4000f060:	e59f1170 	ldr	r1, [pc, #368]	; 4000f1d8 <_tx_thread_relinquish+0x2d4>
4000f064:	e5911000 	ldr	r1, [r1]
4000f068:	e1500001 	cmp	r0, r1
4000f06c:	3a000001 	bcc	4000f078 <_tx_thread_relinquish+0x174>
4000f070:	e59f1164 	ldr	r1, [pc, #356]	; 4000f1dc <_tx_thread_relinquish+0x2d8>
4000f074:	e5910000 	ldr	r0, [r1]
4000f078:	e59f1148 	ldr	r1, [pc, #328]	; 4000f1c8 <_tx_thread_relinquish+0x2c4>
4000f07c:	e5810000 	str	r0, [r1]
4000f080:	e59f1158 	ldr	r1, [pc, #344]	; 4000f1e0 <_tx_thread_relinquish+0x2dc>
4000f084:	e5911000 	ldr	r1, [r1]
4000f088:	e5810020 	str	r0, [r1, #32]
4000f08c:	e59d0000 	ldr	r0, [sp]
4000f090:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000f094:	e59d0000 	ldr	r0, [sp]
4000f098:	e5900020 	ldr	r0, [r0, #32]
4000f09c:	e59d1000 	ldr	r1, [sp]
4000f0a0:	e1500001 	cmp	r0, r1
4000f0a4:	0a000013 	beq	4000f0f8 <_tx_thread_relinquish+0x1f4>
4000f0a8:	e59d0000 	ldr	r0, [sp]
4000f0ac:	e5900020 	ldr	r0, [r0, #32]
4000f0b0:	e59f112c 	ldr	r1, [pc, #300]	; 4000f1e4 <_tx_thread_relinquish+0x2e0>
4000f0b4:	e7810106 	str	r0, [r1, r6, lsl #2]
4000f0b8:	e59d0000 	ldr	r0, [sp]
4000f0bc:	e5900020 	ldr	r0, [r0, #32]
4000f0c0:	e59f1120 	ldr	r1, [pc, #288]	; 4000f1e8 <_tx_thread_relinquish+0x2e4>
4000f0c4:	e5810000 	str	r0, [r1]
4000f0c8:	e59f011c 	ldr	r0, [pc, #284]	; 4000f1ec <_tx_thread_relinquish+0x2e8>
4000f0cc:	e5900000 	ldr	r0, [r0]
4000f0d0:	e3500000 	cmp	r0, #0
4000f0d4:	0a000007 	beq	4000f0f8 <_tx_thread_relinquish+0x1f4>
4000f0d8:	e59f010c 	ldr	r0, [pc, #268]	; 4000f1ec <_tx_thread_relinquish+0x2e8>
4000f0dc:	e5900000 	ldr	r0, [r0]
4000f0e0:	e59d1000 	ldr	r1, [sp]
4000f0e4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f0e8:	e3a02001 	mov	r2, #1
4000f0ec:	e1c00112 	bic	r0, r0, r2, lsl r1
4000f0f0:	e59f10f4 	ldr	r1, [pc, #244]	; 4000f1ec <_tx_thread_relinquish+0x2e8>
4000f0f4:	e5810000 	str	r0, [r1]
4000f0f8:	e59f00f0 	ldr	r0, [pc, #240]	; 4000f1f0 <_tx_thread_relinquish+0x2ec>
4000f0fc:	e5900000 	ldr	r0, [r0]
4000f100:	e1500006 	cmp	r0, r6
4000f104:	2a000005 	bcs	4000f120 <_tx_thread_relinquish+0x21c>
4000f108:	e59f00d4 	ldr	r0, [pc, #212]	; 4000f1e4 <_tx_thread_relinquish+0x2e0>
4000f10c:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f1f0 <_tx_thread_relinquish+0x2ec>
4000f110:	e5911000 	ldr	r1, [r1]
4000f114:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f118:	e59f10c8 	ldr	r1, [pc, #200]	; 4000f1e8 <_tx_thread_relinquish+0x2e4>
4000f11c:	e5810000 	str	r0, [r1]
4000f120:	e121f004 	msr	CPSR_c, r4
4000f124:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f1e8 <_tx_thread_relinquish+0x2e4>
4000f128:	e5900000 	ldr	r0, [r0]
4000f12c:	e59d1000 	ldr	r1, [sp]
4000f130:	e1500001 	cmp	r0, r1
4000f134:	0a000020 	beq	4000f1bc <_tx_thread_relinquish+0x2b8>
4000f138:	e59f00a8 	ldr	r0, [pc, #168]	; 4000f1e8 <_tx_thread_relinquish+0x2e4>
4000f13c:	e5900000 	ldr	r0, [r0]
4000f140:	e58d0000 	str	r0, [sp]
4000f144:	e59d0000 	ldr	r0, [sp]
4000f148:	e5900008 	ldr	r0, [r0, #8]
4000f14c:	e59d1000 	ldr	r1, [sp]
4000f150:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000f154:	e1500001 	cmp	r0, r1
4000f158:	2a000003 	bcs	4000f16c <_tx_thread_relinquish+0x268>
4000f15c:	e59d0000 	ldr	r0, [sp]
4000f160:	e5900008 	ldr	r0, [r0, #8]
4000f164:	e59d1000 	ldr	r1, [sp]
4000f168:	e5810040 	str	r0, [r1, #64]	; 0x40
4000f16c:	e59d0000 	ldr	r0, [sp]
4000f170:	e590000c 	ldr	r0, [r0, #12]
4000f174:	e5900000 	ldr	r0, [r0]
4000f178:	e59f1044 	ldr	r1, [pc, #68]	; 4000f1c4 <_tx_thread_relinquish+0x2c0>
4000f17c:	e1500001 	cmp	r0, r1
4000f180:	1a00000a 	bne	4000f1b0 <_tx_thread_relinquish+0x2ac>
4000f184:	e59d0000 	ldr	r0, [sp]
4000f188:	e5900010 	ldr	r0, [r0, #16]
4000f18c:	e5900001 	ldr	r0, [r0, #1]
4000f190:	e1500001 	cmp	r0, r1
4000f194:	1a000005 	bne	4000f1b0 <_tx_thread_relinquish+0x2ac>
4000f198:	e59d0000 	ldr	r0, [sp]
4000f19c:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000f1a0:	e59d1000 	ldr	r1, [sp]
4000f1a4:	e591100c 	ldr	r1, [r1, #12]
4000f1a8:	e1500001 	cmp	r0, r1
4000f1ac:	2a000001 	bcs	4000f1b8 <_tx_thread_relinquish+0x2b4>
4000f1b0:	e59d0000 	ldr	r0, [sp]
4000f1b4:	eb0000de 	bl	4000f534 <_tx_thread_stack_error_handler>
4000f1b8:	ebffef86 	bl	4000afd8 <_tx_thread_system_return>
4000f1bc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000f1c0:	40030e54 	.word	0x40030e54
4000f1c4:	efefefef 	.word	0xefefefef
4000f1c8:	40030ec0 	.word	0x40030ec0
4000f1cc:	40030ec4 	.word	0x40030ec4
4000f1d0:	40030e4c 	.word	0x40030e4c
4000f1d4:	f0f0f0f0 	.word	0xf0f0f0f0
4000f1d8:	40030ebc 	.word	0x40030ebc
4000f1dc:	40030eb8 	.word	0x40030eb8
4000f1e0:	40030eac 	.word	0x40030eac
4000f1e4:	40032894 	.word	0x40032894
4000f1e8:	40030e58 	.word	0x40030e58
4000f1ec:	40030e68 	.word	0x40030e68
4000f1f0:	40030e6c 	.word	0x40030e6c

4000f1f4 <_tx_thread_resume>:
4000f1f4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f1f8:	e1a04000 	mov	r4, r0
4000f1fc:	e3a00000 	mov	r0, #0
4000f200:	e58d0000 	str	r0, [sp]
4000f204:	e10f5000 	mrs	r5, CPSR
4000f208:	e3856080 	orr	r6, r5, #128	; 0x80
4000f20c:	e121f006 	msr	CPSR_c, r6
4000f210:	e59f1184 	ldr	r1, [pc, #388]	; 4000f39c <_tx_thread_resume+0x1a8>
4000f214:	e5910000 	ldr	r0, [r1]
4000f218:	e3500000 	cmp	r0, #0
4000f21c:	0a000032 	beq	4000f2ec <_tx_thread_resume+0xf8>
4000f220:	e59f1178 	ldr	r1, [pc, #376]	; 4000f3a0 <_tx_thread_resume+0x1ac>
4000f224:	e5911000 	ldr	r1, [r1]
4000f228:	e2811001 	add	r1, r1, #1
4000f22c:	e59f216c 	ldr	r2, [pc, #364]	; 4000f3a0 <_tx_thread_resume+0x1ac>
4000f230:	e5821000 	str	r1, [r2]
4000f234:	e580100c 	str	r1, [r0, #12]
4000f238:	e59f1164 	ldr	r1, [pc, #356]	; 4000f3a4 <_tx_thread_resume+0x1b0>
4000f23c:	e5911000 	ldr	r1, [r1]
4000f240:	e3510000 	cmp	r1, #0
4000f244:	1a000006 	bne	4000f264 <_tx_thread_resume+0x70>
4000f248:	e59f1158 	ldr	r1, [pc, #344]	; 4000f3a8 <_tx_thread_resume+0x1b4>
4000f24c:	e5911000 	ldr	r1, [r1]
4000f250:	e5801000 	str	r1, [r0]
4000f254:	e5901000 	ldr	r1, [r0]
4000f258:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f25c:	e5801004 	str	r1, [r0, #4]
4000f260:	ea00000d 	b	4000f29c <_tx_thread_resume+0xa8>
4000f264:	e59f1138 	ldr	r1, [pc, #312]	; 4000f3a4 <_tx_thread_resume+0x1b0>
4000f268:	e5911000 	ldr	r1, [r1]
4000f26c:	e59f2138 	ldr	r2, [pc, #312]	; 4000f3ac <_tx_thread_resume+0x1b8>
4000f270:	e1510002 	cmp	r1, r2
4000f274:	2a000004 	bcs	4000f28c <_tx_thread_resume+0x98>
4000f278:	e3e01000 	mvn	r1, #0
4000f27c:	e5801000 	str	r1, [r0]
4000f280:	e3a01000 	mov	r1, #0
4000f284:	e5801004 	str	r1, [r0, #4]
4000f288:	ea000003 	b	4000f29c <_tx_thread_resume+0xa8>
4000f28c:	e59f1118 	ldr	r1, [pc, #280]	; 4000f3ac <_tx_thread_resume+0x1b8>
4000f290:	e5801000 	str	r1, [r0]
4000f294:	e3a01000 	mov	r1, #0
4000f298:	e5801004 	str	r1, [r0, #4]
4000f29c:	e3a0106f 	mov	r1, #111	; 0x6f
4000f2a0:	e5801008 	str	r1, [r0, #8]
4000f2a4:	e5804010 	str	r4, [r0, #16]
4000f2a8:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f2ac:	e5801014 	str	r1, [r0, #20]
4000f2b0:	e580d018 	str	sp, [r0, #24]
4000f2b4:	e3a01000 	mov	r1, #0
4000f2b8:	e580101c 	str	r1, [r0, #28]
4000f2bc:	e2800020 	add	r0, r0, #32
4000f2c0:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f3b0 <_tx_thread_resume+0x1bc>
4000f2c4:	e5911000 	ldr	r1, [r1]
4000f2c8:	e1500001 	cmp	r0, r1
4000f2cc:	3a000001 	bcc	4000f2d8 <_tx_thread_resume+0xe4>
4000f2d0:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f3b4 <_tx_thread_resume+0x1c0>
4000f2d4:	e5910000 	ldr	r0, [r1]
4000f2d8:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f39c <_tx_thread_resume+0x1a8>
4000f2dc:	e5810000 	str	r0, [r1]
4000f2e0:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f3b8 <_tx_thread_resume+0x1c4>
4000f2e4:	e5911000 	ldr	r1, [r1]
4000f2e8:	e5810020 	str	r0, [r1, #32]
4000f2ec:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f2f0:	e3500003 	cmp	r0, #3
4000f2f4:	1a00001c 	bne	4000f36c <_tx_thread_resume+0x178>
4000f2f8:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f3bc <_tx_thread_resume+0x1c8>
4000f2fc:	e5900000 	ldr	r0, [r0]
4000f300:	e2800001 	add	r0, r0, #1
4000f304:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f3bc <_tx_thread_resume+0x1c8>
4000f308:	e5810000 	str	r0, [r1]
4000f30c:	e121f005 	msr	CPSR_c, r5
4000f310:	e59f008c 	ldr	r0, [pc, #140]	; 4000f3a4 <_tx_thread_resume+0x1b0>
4000f314:	e5900000 	ldr	r0, [r0]
4000f318:	e59f108c 	ldr	r1, [pc, #140]	; 4000f3ac <_tx_thread_resume+0x1b8>
4000f31c:	e1500001 	cmp	r0, r1
4000f320:	3a000008 	bcc	4000f348 <_tx_thread_resume+0x154>
4000f324:	e59f0094 	ldr	r0, [pc, #148]	; 4000f3c0 <_tx_thread_resume+0x1cc>
4000f328:	e5907000 	ldr	r7, [r0]
4000f32c:	e3570000 	cmp	r7, #0
4000f330:	0a000005 	beq	4000f34c <_tx_thread_resume+0x158>
4000f334:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000f338:	e58d0000 	str	r0, [sp]
4000f33c:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000f340:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f344:	ea000000 	b	4000f34c <_tx_thread_resume+0x158>
4000f348:	e3a07000 	mov	r7, #0
4000f34c:	e1a00004 	mov	r0, r4
4000f350:	eb0000b6 	bl	4000f630 <_tx_thread_system_resume>
4000f354:	e3570000 	cmp	r7, #0
4000f358:	0a000001 	beq	4000f364 <_tx_thread_resume+0x170>
4000f35c:	e59d0000 	ldr	r0, [sp]
4000f360:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f364:	e3a08000 	mov	r8, #0
4000f368:	ea000009 	b	4000f394 <_tx_thread_resume+0x1a0>
4000f36c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f370:	e3500000 	cmp	r0, #0
4000f374:	0a000004 	beq	4000f38c <_tx_thread_resume+0x198>
4000f378:	e3a00000 	mov	r0, #0
4000f37c:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f380:	e121f005 	msr	CPSR_c, r5
4000f384:	e3a08019 	mov	r8, #25
4000f388:	ea000001 	b	4000f394 <_tx_thread_resume+0x1a0>
4000f38c:	e121f005 	msr	CPSR_c, r5
4000f390:	e3a08012 	mov	r8, #18
4000f394:	e1a00008 	mov	r0, r8
4000f398:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f39c:	40030ec0 	.word	0x40030ec0
4000f3a0:	40030ec4 	.word	0x40030ec4
4000f3a4:	40030e4c 	.word	0x40030e4c
4000f3a8:	40030e54 	.word	0x40030e54
4000f3ac:	f0f0f0f0 	.word	0xf0f0f0f0
4000f3b0:	40030ebc 	.word	0x40030ebc
4000f3b4:	40030eb8 	.word	0x40030eb8
4000f3b8:	40030eac 	.word	0x40030eac
4000f3bc:	40030e70 	.word	0x40030e70
4000f3c0:	40030e58 	.word	0x40030e58

4000f3c4 <_tx_thread_shell_entry>:
4000f3c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f3c8:	e59f0088 	ldr	r0, [pc, #136]	; 4000f458 <_tx_thread_shell_entry+0x94>
4000f3cc:	e5907000 	ldr	r7, [r0]
4000f3d0:	e10f4000 	mrs	r4, CPSR
4000f3d4:	e3845080 	orr	r5, r4, #128	; 0x80
4000f3d8:	e121f005 	msr	CPSR_c, r5
4000f3dc:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f3e0:	e121f004 	msr	CPSR_c, r4
4000f3e4:	e3560000 	cmp	r6, #0
4000f3e8:	0a000002 	beq	4000f3f8 <_tx_thread_shell_entry+0x34>
4000f3ec:	e3a01000 	mov	r1, #0
4000f3f0:	e1a00007 	mov	r0, r7
4000f3f4:	e12fff36 	blx	r6
4000f3f8:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f3fc:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f400:	e12fff31 	blx	r1
4000f404:	e10f4000 	mrs	r4, CPSR
4000f408:	e3845080 	orr	r5, r4, #128	; 0x80
4000f40c:	e121f005 	msr	CPSR_c, r5
4000f410:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f414:	e3a00001 	mov	r0, #1
4000f418:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f41c:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f420:	e59f0034 	ldr	r0, [pc, #52]	; 4000f45c <_tx_thread_shell_entry+0x98>
4000f424:	e5900000 	ldr	r0, [r0]
4000f428:	e2800001 	add	r0, r0, #1
4000f42c:	e59f1028 	ldr	r1, [pc, #40]	; 4000f45c <_tx_thread_shell_entry+0x98>
4000f430:	e5810000 	str	r0, [r1]
4000f434:	e121f004 	msr	CPSR_c, r4
4000f438:	e3560000 	cmp	r6, #0
4000f43c:	0a000002 	beq	4000f44c <_tx_thread_shell_entry+0x88>
4000f440:	e3a01001 	mov	r1, #1
4000f444:	e1a00007 	mov	r0, r7
4000f448:	e12fff36 	blx	r6
4000f44c:	e1a00007 	mov	r0, r7
4000f450:	ebffe6cf 	bl	40008f94 <_tx_thread_system_suspend>
4000f454:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f458:	40030e54 	.word	0x40030e54
4000f45c:	40030e70 	.word	0x40030e70

4000f460 <_tx_thread_stack_analyze>:
4000f460:	e92d4070 	push	{r4, r5, r6, lr}
4000f464:	e10f1000 	mrs	r1, CPSR
4000f468:	e3812080 	orr	r2, r1, #128	; 0x80
4000f46c:	e121f002 	msr	CPSR_c, r2
4000f470:	e3500000 	cmp	r0, #0
4000f474:	0a000003 	beq	4000f488 <_tx_thread_stack_analyze+0x28>
4000f478:	e5905000 	ldr	r5, [r0]
4000f47c:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f52c <_tx_thread_stack_analyze+0xcc>
4000f480:	e1550006 	cmp	r5, r6
4000f484:	0a000001 	beq	4000f490 <_tx_thread_stack_analyze+0x30>
4000f488:	e121f001 	msr	CPSR_c, r1
4000f48c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f490:	e590c008 	ldr	ip, [r0, #8]
4000f494:	e590300c 	ldr	r3, [r0, #12]
4000f498:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f49c:	e121f001 	msr	CPSR_c, r1
4000f4a0:	e24ec004 	sub	ip, lr, #4
4000f4a4:	e04e6003 	sub	r6, lr, r3
4000f4a8:	e1a05146 	asr	r5, r6, #2
4000f4ac:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f4b0:	e1a040c6 	asr	r4, r6, #1
4000f4b4:	e083c104 	add	ip, r3, r4, lsl #2
4000f4b8:	e1a00000 	nop			; (mov r0, r0)
4000f4bc:	e59c5000 	ldr	r5, [ip]
4000f4c0:	e59f6068 	ldr	r6, [pc, #104]	; 4000f530 <_tx_thread_stack_analyze+0xd0>
4000f4c4:	e1550006 	cmp	r5, r6
4000f4c8:	0a000002 	beq	4000f4d8 <_tx_thread_stack_analyze+0x78>
4000f4cc:	e1a050a4 	lsr	r5, r4, #1
4000f4d0:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f4d4:	ea000001 	b	4000f4e0 <_tx_thread_stack_analyze+0x80>
4000f4d8:	e1a050a4 	lsr	r5, r4, #1
4000f4dc:	e08cc105 	add	ip, ip, r5, lsl #2
4000f4e0:	e1a040a4 	lsr	r4, r4, #1
4000f4e4:	e3540001 	cmp	r4, #1
4000f4e8:	8afffff3 	bhi	4000f4bc <_tx_thread_stack_analyze+0x5c>
4000f4ec:	ea000000 	b	4000f4f4 <_tx_thread_stack_analyze+0x94>
4000f4f0:	e28cc004 	add	ip, ip, #4
4000f4f4:	e59c5000 	ldr	r5, [ip]
4000f4f8:	e59f6030 	ldr	r6, [pc, #48]	; 4000f530 <_tx_thread_stack_analyze+0xd0>
4000f4fc:	e1550006 	cmp	r5, r6
4000f500:	0afffffa 	beq	4000f4f0 <_tx_thread_stack_analyze+0x90>
4000f504:	e10f1000 	mrs	r1, CPSR
4000f508:	e3812080 	orr	r2, r1, #128	; 0x80
4000f50c:	e121f002 	msr	CPSR_c, r2
4000f510:	e5905000 	ldr	r5, [r0]
4000f514:	e59f6010 	ldr	r6, [pc, #16]	; 4000f52c <_tx_thread_stack_analyze+0xcc>
4000f518:	e1550006 	cmp	r5, r6
4000f51c:	1a000000 	bne	4000f524 <_tx_thread_stack_analyze+0xc4>
4000f520:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f524:	e121f001 	msr	CPSR_c, r1
4000f528:	eaffffd7 	b	4000f48c <_tx_thread_stack_analyze+0x2c>
4000f52c:	54485244 	.word	0x54485244
4000f530:	efefefef 	.word	0xefefefef

4000f534 <_tx_thread_stack_error_handler>:
4000f534:	e92d4070 	push	{r4, r5, r6, lr}
4000f538:	e1a04000 	mov	r4, r0
4000f53c:	e10f5000 	mrs	r5, CPSR
4000f540:	e3856080 	orr	r6, r5, #128	; 0x80
4000f544:	e121f006 	msr	CPSR_c, r6
4000f548:	e59f002c 	ldr	r0, [pc, #44]	; 4000f57c <_tx_thread_stack_error_handler+0x48>
4000f54c:	e5900000 	ldr	r0, [r0]
4000f550:	e3500000 	cmp	r0, #0
4000f554:	0a000004 	beq	4000f56c <_tx_thread_stack_error_handler+0x38>
4000f558:	e1a00004 	mov	r0, r4
4000f55c:	e59f1018 	ldr	r1, [pc, #24]	; 4000f57c <_tx_thread_stack_error_handler+0x48>
4000f560:	e5911000 	ldr	r1, [r1]
4000f564:	e12fff31 	blx	r1
4000f568:	ea000001 	b	4000f574 <_tx_thread_stack_error_handler+0x40>
4000f56c:	e1a00000 	nop			; (mov r0, r0)
4000f570:	eafffffe 	b	4000f570 <_tx_thread_stack_error_handler+0x3c>
4000f574:	e121f005 	msr	CPSR_c, r5
4000f578:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f57c:	40030e78 	.word	0x40030e78

4000f580 <_tx_thread_system_preempt_check>:
4000f580:	e92d4010 	push	{r4, lr}
4000f584:	e59f0090 	ldr	r0, [pc, #144]	; 4000f61c <_tx_thread_system_preempt_check+0x9c>
4000f588:	e5900000 	ldr	r0, [r0]
4000f58c:	e59f108c 	ldr	r1, [pc, #140]	; 4000f620 <_tx_thread_system_preempt_check+0xa0>
4000f590:	e5911000 	ldr	r1, [r1]
4000f594:	e1500001 	cmp	r0, r1
4000f598:	0a00001e 	beq	4000f618 <_tx_thread_system_preempt_check+0x98>
4000f59c:	e59f0080 	ldr	r0, [pc, #128]	; 4000f624 <_tx_thread_system_preempt_check+0xa4>
4000f5a0:	e5900000 	ldr	r0, [r0]
4000f5a4:	e59f107c 	ldr	r1, [pc, #124]	; 4000f628 <_tx_thread_system_preempt_check+0xa8>
4000f5a8:	e5911000 	ldr	r1, [r1]
4000f5ac:	e1900001 	orrs	r0, r0, r1
4000f5b0:	1a000018 	bne	4000f618 <_tx_thread_system_preempt_check+0x98>
4000f5b4:	e59f0064 	ldr	r0, [pc, #100]	; 4000f620 <_tx_thread_system_preempt_check+0xa0>
4000f5b8:	e5904000 	ldr	r4, [r0]
4000f5bc:	e5940008 	ldr	r0, [r4, #8]
4000f5c0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f5c4:	e1500001 	cmp	r0, r1
4000f5c8:	2a000001 	bcs	4000f5d4 <_tx_thread_system_preempt_check+0x54>
4000f5cc:	e5940008 	ldr	r0, [r4, #8]
4000f5d0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f5d4:	e594000c 	ldr	r0, [r4, #12]
4000f5d8:	e5900000 	ldr	r0, [r0]
4000f5dc:	e59f1048 	ldr	r1, [pc, #72]	; 4000f62c <_tx_thread_system_preempt_check+0xac>
4000f5e0:	e1500001 	cmp	r0, r1
4000f5e4:	1a000007 	bne	4000f608 <_tx_thread_system_preempt_check+0x88>
4000f5e8:	e5940010 	ldr	r0, [r4, #16]
4000f5ec:	e5900001 	ldr	r0, [r0, #1]
4000f5f0:	e1500001 	cmp	r0, r1
4000f5f4:	1a000003 	bne	4000f608 <_tx_thread_system_preempt_check+0x88>
4000f5f8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f5fc:	e594100c 	ldr	r1, [r4, #12]
4000f600:	e1500001 	cmp	r0, r1
4000f604:	2a000001 	bcs	4000f610 <_tx_thread_system_preempt_check+0x90>
4000f608:	e1a00004 	mov	r0, r4
4000f60c:	ebffffc8 	bl	4000f534 <_tx_thread_stack_error_handler>
4000f610:	ebffee70 	bl	4000afd8 <_tx_thread_system_return>
4000f614:	e1a00000 	nop			; (mov r0, r0)
4000f618:	e8bd8010 	pop	{r4, pc}
4000f61c:	40030e54 	.word	0x40030e54
4000f620:	40030e58 	.word	0x40030e58
4000f624:	40030e4c 	.word	0x40030e4c
4000f628:	40030e70 	.word	0x40030e70
4000f62c:	efefefef 	.word	0xefefefef

4000f630 <_tx_thread_system_resume>:
4000f630:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f634:	e1a04000 	mov	r4, r0
4000f638:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f63c:	e3500000 	cmp	r0, #0
4000f640:	0a000002 	beq	4000f650 <_tx_thread_system_resume+0x20>
4000f644:	e284004c 	add	r0, r4, #76	; 0x4c
4000f648:	eb000325 	bl	400102e4 <_tx_timer_system_deactivate>
4000f64c:	ea000001 	b	4000f658 <_tx_thread_system_resume+0x28>
4000f650:	e3a00000 	mov	r0, #0
4000f654:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f658:	e5940008 	ldr	r0, [r4, #8]
4000f65c:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f660:	e1500001 	cmp	r0, r1
4000f664:	2a000001 	bcs	4000f670 <_tx_thread_system_resume+0x40>
4000f668:	e5940008 	ldr	r0, [r4, #8]
4000f66c:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f670:	e594000c 	ldr	r0, [r4, #12]
4000f674:	e5900000 	ldr	r0, [r0]
4000f678:	e59f133c 	ldr	r1, [pc, #828]	; 4000f9bc <_tx_thread_system_resume+0x38c>
4000f67c:	e1500001 	cmp	r0, r1
4000f680:	1a000007 	bne	4000f6a4 <_tx_thread_system_resume+0x74>
4000f684:	e5940010 	ldr	r0, [r4, #16]
4000f688:	e5900001 	ldr	r0, [r0, #1]
4000f68c:	e1500001 	cmp	r0, r1
4000f690:	1a000003 	bne	4000f6a4 <_tx_thread_system_resume+0x74>
4000f694:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f698:	e594100c 	ldr	r1, [r4, #12]
4000f69c:	e1500001 	cmp	r0, r1
4000f6a0:	2a000001 	bcs	4000f6ac <_tx_thread_system_resume+0x7c>
4000f6a4:	e1a00004 	mov	r0, r4
4000f6a8:	ebffffa1 	bl	4000f534 <_tx_thread_stack_error_handler>
4000f6ac:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f6b0:	e5100004 	ldr	r0, [r0, #-4]
4000f6b4:	e59f1300 	ldr	r1, [pc, #768]	; 4000f9bc <_tx_thread_system_resume+0x38c>
4000f6b8:	e1500001 	cmp	r0, r1
4000f6bc:	0a000001 	beq	4000f6c8 <_tx_thread_system_resume+0x98>
4000f6c0:	e1a00004 	mov	r0, r4
4000f6c4:	ebffff65 	bl	4000f460 <_tx_thread_stack_analyze>
4000f6c8:	e10f5000 	mrs	r5, CPSR
4000f6cc:	e3856080 	orr	r6, r5, #128	; 0x80
4000f6d0:	e121f006 	msr	CPSR_c, r6
4000f6d4:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f9c0 <_tx_thread_system_resume+0x390>
4000f6d8:	e5900000 	ldr	r0, [r0]
4000f6dc:	e2400001 	sub	r0, r0, #1
4000f6e0:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f9c0 <_tx_thread_system_resume+0x390>
4000f6e4:	e5810000 	str	r0, [r1]
4000f6e8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f6ec:	e3500000 	cmp	r0, #0
4000f6f0:	0a000009 	beq	4000f71c <_tx_thread_system_resume+0xec>
4000f6f4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f6f8:	e3500001 	cmp	r0, #1
4000f6fc:	0a000084 	beq	4000f914 <_tx_thread_system_resume+0x2e4>
4000f700:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f704:	e3500002 	cmp	r0, #2
4000f708:	0a000081 	beq	4000f914 <_tx_thread_system_resume+0x2e4>
4000f70c:	e3a00000 	mov	r0, #0
4000f710:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f714:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f718:	ea00007d 	b	4000f914 <_tx_thread_system_resume+0x2e4>
4000f71c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f720:	e3500000 	cmp	r0, #0
4000f724:	0a00007a 	beq	4000f914 <_tx_thread_system_resume+0x2e4>
4000f728:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f72c:	e3500000 	cmp	r0, #0
4000f730:	0a000004 	beq	4000f748 <_tx_thread_system_resume+0x118>
4000f734:	e3a00000 	mov	r0, #0
4000f738:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f73c:	e3a00003 	mov	r0, #3
4000f740:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f744:	ea000072 	b	4000f914 <_tx_thread_system_resume+0x2e4>
4000f748:	e59f1274 	ldr	r1, [pc, #628]	; 4000f9c4 <_tx_thread_system_resume+0x394>
4000f74c:	e5910000 	ldr	r0, [r1]
4000f750:	e3500000 	cmp	r0, #0
4000f754:	0a000032 	beq	4000f824 <_tx_thread_system_resume+0x1f4>
4000f758:	e59f1268 	ldr	r1, [pc, #616]	; 4000f9c8 <_tx_thread_system_resume+0x398>
4000f75c:	e5911000 	ldr	r1, [r1]
4000f760:	e2811001 	add	r1, r1, #1
4000f764:	e59f225c 	ldr	r2, [pc, #604]	; 4000f9c8 <_tx_thread_system_resume+0x398>
4000f768:	e5821000 	str	r1, [r2]
4000f76c:	e580100c 	str	r1, [r0, #12]
4000f770:	e59f1254 	ldr	r1, [pc, #596]	; 4000f9cc <_tx_thread_system_resume+0x39c>
4000f774:	e5911000 	ldr	r1, [r1]
4000f778:	e3510000 	cmp	r1, #0
4000f77c:	1a000006 	bne	4000f79c <_tx_thread_system_resume+0x16c>
4000f780:	e59f1248 	ldr	r1, [pc, #584]	; 4000f9d0 <_tx_thread_system_resume+0x3a0>
4000f784:	e5911000 	ldr	r1, [r1]
4000f788:	e5801000 	str	r1, [r0]
4000f78c:	e5901000 	ldr	r1, [r0]
4000f790:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f794:	e5801004 	str	r1, [r0, #4]
4000f798:	ea00000d 	b	4000f7d4 <_tx_thread_system_resume+0x1a4>
4000f79c:	e59f1228 	ldr	r1, [pc, #552]	; 4000f9cc <_tx_thread_system_resume+0x39c>
4000f7a0:	e5911000 	ldr	r1, [r1]
4000f7a4:	e59f2228 	ldr	r2, [pc, #552]	; 4000f9d4 <_tx_thread_system_resume+0x3a4>
4000f7a8:	e1510002 	cmp	r1, r2
4000f7ac:	2a000004 	bcs	4000f7c4 <_tx_thread_system_resume+0x194>
4000f7b0:	e3e01000 	mvn	r1, #0
4000f7b4:	e5801000 	str	r1, [r0]
4000f7b8:	e3a01000 	mov	r1, #0
4000f7bc:	e5801004 	str	r1, [r0, #4]
4000f7c0:	ea000003 	b	4000f7d4 <_tx_thread_system_resume+0x1a4>
4000f7c4:	e59f1208 	ldr	r1, [pc, #520]	; 4000f9d4 <_tx_thread_system_resume+0x3a4>
4000f7c8:	e5801000 	str	r1, [r0]
4000f7cc:	e3a01000 	mov	r1, #0
4000f7d0:	e5801004 	str	r1, [r0, #4]
4000f7d4:	e3a01001 	mov	r1, #1
4000f7d8:	e5801008 	str	r1, [r0, #8]
4000f7dc:	e5804010 	str	r4, [r0, #16]
4000f7e0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f7e4:	e5801014 	str	r1, [r0, #20]
4000f7e8:	e580d018 	str	sp, [r0, #24]
4000f7ec:	e3a01000 	mov	r1, #0
4000f7f0:	e580101c 	str	r1, [r0, #28]
4000f7f4:	e2800020 	add	r0, r0, #32
4000f7f8:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f9d8 <_tx_thread_system_resume+0x3a8>
4000f7fc:	e5911000 	ldr	r1, [r1]
4000f800:	e1500001 	cmp	r0, r1
4000f804:	3a000001 	bcc	4000f810 <_tx_thread_system_resume+0x1e0>
4000f808:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f9dc <_tx_thread_system_resume+0x3ac>
4000f80c:	e5910000 	ldr	r0, [r1]
4000f810:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f9c4 <_tx_thread_system_resume+0x394>
4000f814:	e5810000 	str	r0, [r1]
4000f818:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f9e0 <_tx_thread_system_resume+0x3b0>
4000f81c:	e5911000 	ldr	r1, [r1]
4000f820:	e5810020 	str	r0, [r1, #32]
4000f824:	e3a00000 	mov	r0, #0
4000f828:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f82c:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f830:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f9e4 <_tx_thread_system_resume+0x3b4>
4000f834:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f838:	e3580000 	cmp	r8, #0
4000f83c:	0a000005 	beq	4000f858 <_tx_thread_system_resume+0x228>
4000f840:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f844:	e5894020 	str	r4, [r9, #32]
4000f848:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f84c:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f850:	e5848020 	str	r8, [r4, #32]
4000f854:	ea00002e 	b	4000f914 <_tx_thread_system_resume+0x2e4>
4000f858:	e59f0184 	ldr	r0, [pc, #388]	; 4000f9e4 <_tx_thread_system_resume+0x3b4>
4000f85c:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f860:	e5844020 	str	r4, [r4, #32]
4000f864:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f868:	e59f0178 	ldr	r0, [pc, #376]	; 4000f9e8 <_tx_thread_system_resume+0x3b8>
4000f86c:	e5900000 	ldr	r0, [r0]
4000f870:	e3a01001 	mov	r1, #1
4000f874:	e1800711 	orr	r0, r0, r1, lsl r7
4000f878:	e59f1168 	ldr	r1, [pc, #360]	; 4000f9e8 <_tx_thread_system_resume+0x3b8>
4000f87c:	e5810000 	str	r0, [r1]
4000f880:	e59f0164 	ldr	r0, [pc, #356]	; 4000f9ec <_tx_thread_system_resume+0x3bc>
4000f884:	e5900000 	ldr	r0, [r0]
4000f888:	e58d0000 	str	r0, [sp]
4000f88c:	e59d0000 	ldr	r0, [sp]
4000f890:	e3500000 	cmp	r0, #0
4000f894:	1a000004 	bne	4000f8ac <_tx_thread_system_resume+0x27c>
4000f898:	e59f014c 	ldr	r0, [pc, #332]	; 4000f9ec <_tx_thread_system_resume+0x3bc>
4000f89c:	e5804000 	str	r4, [r0]
4000f8a0:	e59f0148 	ldr	r0, [pc, #328]	; 4000f9f0 <_tx_thread_system_resume+0x3c0>
4000f8a4:	e5807000 	str	r7, [r0]
4000f8a8:	ea000019 	b	4000f914 <_tx_thread_system_resume+0x2e4>
4000f8ac:	e59f013c 	ldr	r0, [pc, #316]	; 4000f9f0 <_tx_thread_system_resume+0x3c0>
4000f8b0:	e5900000 	ldr	r0, [r0]
4000f8b4:	e1570000 	cmp	r7, r0
4000f8b8:	2a000015 	bcs	4000f914 <_tx_thread_system_resume+0x2e4>
4000f8bc:	e59f012c 	ldr	r0, [pc, #300]	; 4000f9f0 <_tx_thread_system_resume+0x3c0>
4000f8c0:	e5807000 	str	r7, [r0]
4000f8c4:	e59d0000 	ldr	r0, [sp]
4000f8c8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f8cc:	e1500007 	cmp	r0, r7
4000f8d0:	9a00000f 	bls	4000f914 <_tx_thread_system_resume+0x2e4>
4000f8d4:	e59d0000 	ldr	r0, [sp]
4000f8d8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f8dc:	e59d1000 	ldr	r1, [sp]
4000f8e0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f8e4:	e1500001 	cmp	r0, r1
4000f8e8:	0a000007 	beq	4000f90c <_tx_thread_system_resume+0x2dc>
4000f8ec:	e59f0100 	ldr	r0, [pc, #256]	; 4000f9f4 <_tx_thread_system_resume+0x3c4>
4000f8f0:	e5900000 	ldr	r0, [r0]
4000f8f4:	e59d1000 	ldr	r1, [sp]
4000f8f8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f8fc:	e3a02001 	mov	r2, #1
4000f900:	e1800112 	orr	r0, r0, r2, lsl r1
4000f904:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f9f4 <_tx_thread_system_resume+0x3c4>
4000f908:	e5810000 	str	r0, [r1]
4000f90c:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f9ec <_tx_thread_system_resume+0x3bc>
4000f910:	e5804000 	str	r4, [r0]
4000f914:	e121f005 	msr	CPSR_c, r5
4000f918:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f9d0 <_tx_thread_system_resume+0x3a0>
4000f91c:	e5900000 	ldr	r0, [r0]
4000f920:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f9ec <_tx_thread_system_resume+0x3bc>
4000f924:	e5911000 	ldr	r1, [r1]
4000f928:	e1500001 	cmp	r0, r1
4000f92c:	0a000021 	beq	4000f9b8 <_tx_thread_system_resume+0x388>
4000f930:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f9ec <_tx_thread_system_resume+0x3bc>
4000f934:	e5900000 	ldr	r0, [r0]
4000f938:	e1540000 	cmp	r4, r0
4000f93c:	0a000016 	beq	4000f99c <_tx_thread_system_resume+0x36c>
4000f940:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f9ec <_tx_thread_system_resume+0x3bc>
4000f944:	e5904000 	ldr	r4, [r0]
4000f948:	e5940008 	ldr	r0, [r4, #8]
4000f94c:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f950:	e1500001 	cmp	r0, r1
4000f954:	2a000001 	bcs	4000f960 <_tx_thread_system_resume+0x330>
4000f958:	e5940008 	ldr	r0, [r4, #8]
4000f95c:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f960:	e594000c 	ldr	r0, [r4, #12]
4000f964:	e5900000 	ldr	r0, [r0]
4000f968:	e59f104c 	ldr	r1, [pc, #76]	; 4000f9bc <_tx_thread_system_resume+0x38c>
4000f96c:	e1500001 	cmp	r0, r1
4000f970:	1a000007 	bne	4000f994 <_tx_thread_system_resume+0x364>
4000f974:	e5940010 	ldr	r0, [r4, #16]
4000f978:	e5900001 	ldr	r0, [r0, #1]
4000f97c:	e1500001 	cmp	r0, r1
4000f980:	1a000003 	bne	4000f994 <_tx_thread_system_resume+0x364>
4000f984:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f988:	e594100c 	ldr	r1, [r4, #12]
4000f98c:	e1500001 	cmp	r0, r1
4000f990:	2a000001 	bcs	4000f99c <_tx_thread_system_resume+0x36c>
4000f994:	e1a00004 	mov	r0, r4
4000f998:	ebfffee5 	bl	4000f534 <_tx_thread_stack_error_handler>
4000f99c:	e59f0028 	ldr	r0, [pc, #40]	; 4000f9cc <_tx_thread_system_resume+0x39c>
4000f9a0:	e5900000 	ldr	r0, [r0]
4000f9a4:	e59f1014 	ldr	r1, [pc, #20]	; 4000f9c0 <_tx_thread_system_resume+0x390>
4000f9a8:	e5911000 	ldr	r1, [r1]
4000f9ac:	e1900001 	orrs	r0, r0, r1
4000f9b0:	1a000000 	bne	4000f9b8 <_tx_thread_system_resume+0x388>
4000f9b4:	ebffed87 	bl	4000afd8 <_tx_thread_system_return>
4000f9b8:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f9bc:	efefefef 	.word	0xefefefef
4000f9c0:	40030e70 	.word	0x40030e70
4000f9c4:	40030ec0 	.word	0x40030ec0
4000f9c8:	40030ec4 	.word	0x40030ec4
4000f9cc:	40030e4c 	.word	0x40030e4c
4000f9d0:	40030e54 	.word	0x40030e54
4000f9d4:	f0f0f0f0 	.word	0xf0f0f0f0
4000f9d8:	40030ebc 	.word	0x40030ebc
4000f9dc:	40030eb8 	.word	0x40030eb8
4000f9e0:	40030eac 	.word	0x40030eac
4000f9e4:	40032894 	.word	0x40032894
4000f9e8:	40030e64 	.word	0x40030e64
4000f9ec:	40030e58 	.word	0x40030e58
4000f9f0:	40030e6c 	.word	0x40030e6c
4000f9f4:	40030e68 	.word	0x40030e68

4000f9f8 <_tx_thread_time_slice>:
4000f9f8:	e92d4070 	push	{r4, r5, r6, lr}
4000f9fc:	e59f0140 	ldr	r0, [pc, #320]	; 4000fb44 <_tx_thread_time_slice+0x14c>
4000fa00:	e5906000 	ldr	r6, [r0]
4000fa04:	e5960008 	ldr	r0, [r6, #8]
4000fa08:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000fa0c:	e1500001 	cmp	r0, r1
4000fa10:	2a000001 	bcs	4000fa1c <_tx_thread_time_slice+0x24>
4000fa14:	e5960008 	ldr	r0, [r6, #8]
4000fa18:	e5860040 	str	r0, [r6, #64]	; 0x40
4000fa1c:	e596000c 	ldr	r0, [r6, #12]
4000fa20:	e5900000 	ldr	r0, [r0]
4000fa24:	e59f111c 	ldr	r1, [pc, #284]	; 4000fb48 <_tx_thread_time_slice+0x150>
4000fa28:	e1500001 	cmp	r0, r1
4000fa2c:	1a000007 	bne	4000fa50 <_tx_thread_time_slice+0x58>
4000fa30:	e5960010 	ldr	r0, [r6, #16]
4000fa34:	e5900001 	ldr	r0, [r0, #1]
4000fa38:	e1500001 	cmp	r0, r1
4000fa3c:	1a000003 	bne	4000fa50 <_tx_thread_time_slice+0x58>
4000fa40:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000fa44:	e596100c 	ldr	r1, [r6, #12]
4000fa48:	e1500001 	cmp	r0, r1
4000fa4c:	2a000001 	bcs	4000fa58 <_tx_thread_time_slice+0x60>
4000fa50:	e1a00006 	mov	r0, r6
4000fa54:	ebfffeb6 	bl	4000f534 <_tx_thread_stack_error_handler>
4000fa58:	e10f4000 	mrs	r4, CPSR
4000fa5c:	e3845080 	orr	r5, r4, #128	; 0x80
4000fa60:	e121f005 	msr	CPSR_c, r5
4000fa64:	e3a00000 	mov	r0, #0
4000fa68:	e59f10dc 	ldr	r1, [pc, #220]	; 4000fb4c <_tx_thread_time_slice+0x154>
4000fa6c:	e5810000 	str	r0, [r1]
4000fa70:	e3560000 	cmp	r6, #0
4000fa74:	0a000030 	beq	4000fb3c <_tx_thread_time_slice+0x144>
4000fa78:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000fa7c:	e3500000 	cmp	r0, #0
4000fa80:	1a00002d 	bne	4000fb3c <_tx_thread_time_slice+0x144>
4000fa84:	e596001c 	ldr	r0, [r6, #28]
4000fa88:	e5860018 	str	r0, [r6, #24]
4000fa8c:	e5960020 	ldr	r0, [r6, #32]
4000fa90:	e1500006 	cmp	r0, r6
4000fa94:	0a000025 	beq	4000fb30 <_tx_thread_time_slice+0x138>
4000fa98:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000fa9c:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000faa0:	e1500001 	cmp	r0, r1
4000faa4:	1a000021 	bne	4000fb30 <_tx_thread_time_slice+0x138>
4000faa8:	e59f20a0 	ldr	r2, [pc, #160]	; 4000fb50 <_tx_thread_time_slice+0x158>
4000faac:	e5960020 	ldr	r0, [r6, #32]
4000fab0:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000fab4:	e7820101 	str	r0, [r2, r1, lsl #2]
4000fab8:	e2820000 	add	r0, r2, #0
4000fabc:	e59f1090 	ldr	r1, [pc, #144]	; 4000fb54 <_tx_thread_time_slice+0x15c>
4000fac0:	e5911000 	ldr	r1, [r1]
4000fac4:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000fac8:	e59f1088 	ldr	r1, [pc, #136]	; 4000fb58 <_tx_thread_time_slice+0x160>
4000facc:	e5810000 	str	r0, [r1]
4000fad0:	e2810000 	add	r0, r1, #0
4000fad4:	e5906000 	ldr	r6, [r0]
4000fad8:	e5960008 	ldr	r0, [r6, #8]
4000fadc:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000fae0:	e1500001 	cmp	r0, r1
4000fae4:	2a000001 	bcs	4000faf0 <_tx_thread_time_slice+0xf8>
4000fae8:	e5960008 	ldr	r0, [r6, #8]
4000faec:	e5860040 	str	r0, [r6, #64]	; 0x40
4000faf0:	e596000c 	ldr	r0, [r6, #12]
4000faf4:	e5900000 	ldr	r0, [r0]
4000faf8:	e59f1048 	ldr	r1, [pc, #72]	; 4000fb48 <_tx_thread_time_slice+0x150>
4000fafc:	e1500001 	cmp	r0, r1
4000fb00:	1a000007 	bne	4000fb24 <_tx_thread_time_slice+0x12c>
4000fb04:	e5960010 	ldr	r0, [r6, #16]
4000fb08:	e5900001 	ldr	r0, [r0, #1]
4000fb0c:	e1500001 	cmp	r0, r1
4000fb10:	1a000003 	bne	4000fb24 <_tx_thread_time_slice+0x12c>
4000fb14:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000fb18:	e596100c 	ldr	r1, [r6, #12]
4000fb1c:	e1500001 	cmp	r0, r1
4000fb20:	2a000005 	bcs	4000fb3c <_tx_thread_time_slice+0x144>
4000fb24:	e1a00006 	mov	r0, r6
4000fb28:	ebfffe81 	bl	4000f534 <_tx_thread_stack_error_handler>
4000fb2c:	ea000002 	b	4000fb3c <_tx_thread_time_slice+0x144>
4000fb30:	e59f1024 	ldr	r1, [pc, #36]	; 4000fb5c <_tx_thread_time_slice+0x164>
4000fb34:	e5960018 	ldr	r0, [r6, #24]
4000fb38:	e5810000 	str	r0, [r1]
4000fb3c:	e121f004 	msr	CPSR_c, r4
4000fb40:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fb44:	40030e54 	.word	0x40030e54
4000fb48:	efefefef 	.word	0xefefefef
4000fb4c:	40030e84 	.word	0x40030e84
4000fb50:	40032894 	.word	0x40032894
4000fb54:	40030e6c 	.word	0x40030e6c
4000fb58:	40030e58 	.word	0x40030e58
4000fb5c:	40030e80 	.word	0x40030e80

4000fb60 <_tx_thread_timeout>:
4000fb60:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000fb64:	e1a04000 	mov	r4, r0
4000fb68:	e1a08004 	mov	r8, r4
4000fb6c:	e10f5000 	mrs	r5, CPSR
4000fb70:	e3856080 	orr	r6, r5, #128	; 0x80
4000fb74:	e121f006 	msr	CPSR_c, r6
4000fb78:	e1a04008 	mov	r4, r8
4000fb7c:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000fb80:	e3500004 	cmp	r0, #4
4000fb84:	1a000008 	bne	4000fbac <_tx_thread_timeout+0x4c>
4000fb88:	e59f0038 	ldr	r0, [pc, #56]	; 4000fbc8 <_tx_thread_timeout+0x68>
4000fb8c:	e5900000 	ldr	r0, [r0]
4000fb90:	e2800001 	add	r0, r0, #1
4000fb94:	e59f102c 	ldr	r1, [pc, #44]	; 4000fbc8 <_tx_thread_timeout+0x68>
4000fb98:	e5810000 	str	r0, [r1]
4000fb9c:	e121f005 	msr	CPSR_c, r5
4000fba0:	e1a00008 	mov	r0, r8
4000fba4:	ebfffea1 	bl	4000f630 <_tx_thread_system_resume>
4000fba8:	ea000005 	b	4000fbc4 <_tx_thread_timeout+0x64>
4000fbac:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000fbb0:	e121f005 	msr	CPSR_c, r5
4000fbb4:	e3570000 	cmp	r7, #0
4000fbb8:	0a000001 	beq	4000fbc4 <_tx_thread_timeout+0x64>
4000fbbc:	e1a00008 	mov	r0, r8
4000fbc0:	e12fff37 	blx	r7
4000fbc4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000fbc8:	40030e70 	.word	0x40030e70

4000fbcc <_tx_timer_activate>:
4000fbcc:	e92d4070 	push	{r4, r5, r6, lr}
4000fbd0:	e1a04000 	mov	r4, r0
4000fbd4:	e10f5000 	mrs	r5, CPSR
4000fbd8:	e3856080 	orr	r6, r5, #128	; 0x80
4000fbdc:	e121f006 	msr	CPSR_c, r6
4000fbe0:	e59f1104 	ldr	r1, [pc, #260]	; 4000fcec <_tx_timer_activate+0x120>
4000fbe4:	e5910000 	ldr	r0, [r1]
4000fbe8:	e3500000 	cmp	r0, #0
4000fbec:	0a000031 	beq	4000fcb8 <_tx_timer_activate+0xec>
4000fbf0:	e59f10f8 	ldr	r1, [pc, #248]	; 4000fcf0 <_tx_timer_activate+0x124>
4000fbf4:	e5911000 	ldr	r1, [r1]
4000fbf8:	e2811001 	add	r1, r1, #1
4000fbfc:	e59f20ec 	ldr	r2, [pc, #236]	; 4000fcf0 <_tx_timer_activate+0x124>
4000fc00:	e5821000 	str	r1, [r2]
4000fc04:	e580100c 	str	r1, [r0, #12]
4000fc08:	e59f10e4 	ldr	r1, [pc, #228]	; 4000fcf4 <_tx_timer_activate+0x128>
4000fc0c:	e5911000 	ldr	r1, [r1]
4000fc10:	e3510000 	cmp	r1, #0
4000fc14:	1a000006 	bne	4000fc34 <_tx_timer_activate+0x68>
4000fc18:	e59f10d8 	ldr	r1, [pc, #216]	; 4000fcf8 <_tx_timer_activate+0x12c>
4000fc1c:	e5911000 	ldr	r1, [r1]
4000fc20:	e5801000 	str	r1, [r0]
4000fc24:	e5901000 	ldr	r1, [r0]
4000fc28:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fc2c:	e5801004 	str	r1, [r0, #4]
4000fc30:	ea00000d 	b	4000fc6c <_tx_timer_activate+0xa0>
4000fc34:	e59f10b8 	ldr	r1, [pc, #184]	; 4000fcf4 <_tx_timer_activate+0x128>
4000fc38:	e5911000 	ldr	r1, [r1]
4000fc3c:	e59f20b8 	ldr	r2, [pc, #184]	; 4000fcfc <_tx_timer_activate+0x130>
4000fc40:	e1510002 	cmp	r1, r2
4000fc44:	2a000004 	bcs	4000fc5c <_tx_timer_activate+0x90>
4000fc48:	e3e01000 	mvn	r1, #0
4000fc4c:	e5801000 	str	r1, [r0]
4000fc50:	e3a01000 	mov	r1, #0
4000fc54:	e5801004 	str	r1, [r0, #4]
4000fc58:	ea000003 	b	4000fc6c <_tx_timer_activate+0xa0>
4000fc5c:	e59f1098 	ldr	r1, [pc, #152]	; 4000fcfc <_tx_timer_activate+0x130>
4000fc60:	e5801000 	str	r1, [r0]
4000fc64:	e3a01000 	mov	r1, #0
4000fc68:	e5801004 	str	r1, [r0, #4]
4000fc6c:	e3a0107a 	mov	r1, #122	; 0x7a
4000fc70:	e5801008 	str	r1, [r0, #8]
4000fc74:	e5804010 	str	r4, [r0, #16]
4000fc78:	e3a01000 	mov	r1, #0
4000fc7c:	e5801014 	str	r1, [r0, #20]
4000fc80:	e5801018 	str	r1, [r0, #24]
4000fc84:	e580101c 	str	r1, [r0, #28]
4000fc88:	e2800020 	add	r0, r0, #32
4000fc8c:	e59f106c 	ldr	r1, [pc, #108]	; 4000fd00 <_tx_timer_activate+0x134>
4000fc90:	e5911000 	ldr	r1, [r1]
4000fc94:	e1500001 	cmp	r0, r1
4000fc98:	3a000001 	bcc	4000fca4 <_tx_timer_activate+0xd8>
4000fc9c:	e59f1060 	ldr	r1, [pc, #96]	; 4000fd04 <_tx_timer_activate+0x138>
4000fca0:	e5910000 	ldr	r0, [r1]
4000fca4:	e59f1040 	ldr	r1, [pc, #64]	; 4000fcec <_tx_timer_activate+0x120>
4000fca8:	e5810000 	str	r0, [r1]
4000fcac:	e59f1054 	ldr	r1, [pc, #84]	; 4000fd08 <_tx_timer_activate+0x13c>
4000fcb0:	e5911000 	ldr	r1, [r1]
4000fcb4:	e5810020 	str	r0, [r1, #32]
4000fcb8:	e121f005 	msr	CPSR_c, r5
4000fcbc:	e5940020 	ldr	r0, [r4, #32]
4000fcc0:	e3500000 	cmp	r0, #0
4000fcc4:	1a000002 	bne	4000fcd4 <_tx_timer_activate+0x108>
4000fcc8:	e5940008 	ldr	r0, [r4, #8]
4000fccc:	e3500000 	cmp	r0, #0
4000fcd0:	1a000001 	bne	4000fcdc <_tx_timer_activate+0x110>
4000fcd4:	e3a00017 	mov	r0, #23
4000fcd8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fcdc:	e2840008 	add	r0, r4, #8
4000fce0:	ebffe6c7 	bl	40009804 <_tx_timer_system_activate>
4000fce4:	e3a00000 	mov	r0, #0
4000fce8:	eafffffa 	b	4000fcd8 <_tx_timer_activate+0x10c>
4000fcec:	40030ec0 	.word	0x40030ec0
4000fcf0:	40030ec4 	.word	0x40030ec4
4000fcf4:	40030e4c 	.word	0x40030e4c
4000fcf8:	40030e54 	.word	0x40030e54
4000fcfc:	f0f0f0f0 	.word	0xf0f0f0f0
4000fd00:	40030ebc 	.word	0x40030ebc
4000fd04:	40030eb8 	.word	0x40030eb8
4000fd08:	40030eac 	.word	0x40030eac

4000fd0c <_tx_timer_change>:
4000fd0c:	e92d4030 	push	{r4, r5, lr}
4000fd10:	e1a03000 	mov	r3, r0
4000fd14:	e10fc000 	mrs	ip, CPSR
4000fd18:	e38ce080 	orr	lr, ip, #128	; 0x80
4000fd1c:	e121f00e 	msr	CPSR_c, lr
4000fd20:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fe18 <_tx_timer_change+0x10c>
4000fd24:	e5940000 	ldr	r0, [r4]
4000fd28:	e3500000 	cmp	r0, #0
4000fd2c:	0a000031 	beq	4000fdf8 <_tx_timer_change+0xec>
4000fd30:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fe1c <_tx_timer_change+0x110>
4000fd34:	e5944000 	ldr	r4, [r4]
4000fd38:	e2844001 	add	r4, r4, #1
4000fd3c:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fe1c <_tx_timer_change+0x110>
4000fd40:	e5854000 	str	r4, [r5]
4000fd44:	e580400c 	str	r4, [r0, #12]
4000fd48:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fe20 <_tx_timer_change+0x114>
4000fd4c:	e5944000 	ldr	r4, [r4]
4000fd50:	e3540000 	cmp	r4, #0
4000fd54:	1a000006 	bne	4000fd74 <_tx_timer_change+0x68>
4000fd58:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fe24 <_tx_timer_change+0x118>
4000fd5c:	e5944000 	ldr	r4, [r4]
4000fd60:	e5804000 	str	r4, [r0]
4000fd64:	e5904000 	ldr	r4, [r0]
4000fd68:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000fd6c:	e5804004 	str	r4, [r0, #4]
4000fd70:	ea00000d 	b	4000fdac <_tx_timer_change+0xa0>
4000fd74:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fe20 <_tx_timer_change+0x114>
4000fd78:	e5944000 	ldr	r4, [r4]
4000fd7c:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fe28 <_tx_timer_change+0x11c>
4000fd80:	e1540005 	cmp	r4, r5
4000fd84:	2a000004 	bcs	4000fd9c <_tx_timer_change+0x90>
4000fd88:	e3e04000 	mvn	r4, #0
4000fd8c:	e5804000 	str	r4, [r0]
4000fd90:	e3a04000 	mov	r4, #0
4000fd94:	e5804004 	str	r4, [r0, #4]
4000fd98:	ea000003 	b	4000fdac <_tx_timer_change+0xa0>
4000fd9c:	e59f4084 	ldr	r4, [pc, #132]	; 4000fe28 <_tx_timer_change+0x11c>
4000fda0:	e5804000 	str	r4, [r0]
4000fda4:	e3a04000 	mov	r4, #0
4000fda8:	e5804004 	str	r4, [r0, #4]
4000fdac:	e3a0407b 	mov	r4, #123	; 0x7b
4000fdb0:	e5804008 	str	r4, [r0, #8]
4000fdb4:	e5803010 	str	r3, [r0, #16]
4000fdb8:	e5801014 	str	r1, [r0, #20]
4000fdbc:	e5802018 	str	r2, [r0, #24]
4000fdc0:	e3a04000 	mov	r4, #0
4000fdc4:	e580401c 	str	r4, [r0, #28]
4000fdc8:	e2800020 	add	r0, r0, #32
4000fdcc:	e59f4058 	ldr	r4, [pc, #88]	; 4000fe2c <_tx_timer_change+0x120>
4000fdd0:	e5944000 	ldr	r4, [r4]
4000fdd4:	e1500004 	cmp	r0, r4
4000fdd8:	3a000001 	bcc	4000fde4 <_tx_timer_change+0xd8>
4000fddc:	e59f404c 	ldr	r4, [pc, #76]	; 4000fe30 <_tx_timer_change+0x124>
4000fde0:	e5940000 	ldr	r0, [r4]
4000fde4:	e59f402c 	ldr	r4, [pc, #44]	; 4000fe18 <_tx_timer_change+0x10c>
4000fde8:	e5840000 	str	r0, [r4]
4000fdec:	e59f4040 	ldr	r4, [pc, #64]	; 4000fe34 <_tx_timer_change+0x128>
4000fdf0:	e5944000 	ldr	r4, [r4]
4000fdf4:	e5840020 	str	r0, [r4, #32]
4000fdf8:	e5930020 	ldr	r0, [r3, #32]
4000fdfc:	e3500000 	cmp	r0, #0
4000fe00:	1a000001 	bne	4000fe0c <_tx_timer_change+0x100>
4000fe04:	e5831008 	str	r1, [r3, #8]
4000fe08:	e583200c 	str	r2, [r3, #12]
4000fe0c:	e121f00c 	msr	CPSR_c, ip
4000fe10:	e3a00000 	mov	r0, #0
4000fe14:	e8bd8030 	pop	{r4, r5, pc}
4000fe18:	40030ec0 	.word	0x40030ec0
4000fe1c:	40030ec4 	.word	0x40030ec4
4000fe20:	40030e4c 	.word	0x40030e4c
4000fe24:	40030e54 	.word	0x40030e54
4000fe28:	f0f0f0f0 	.word	0xf0f0f0f0
4000fe2c:	40030ebc 	.word	0x40030ebc
4000fe30:	40030eb8 	.word	0x40030eb8
4000fe34:	40030eac 	.word	0x40030eac

4000fe38 <_tx_timer_create>:
4000fe38:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fe3c:	e1a04000 	mov	r4, r0
4000fe40:	e1a05001 	mov	r5, r1
4000fe44:	e1a06002 	mov	r6, r2
4000fe48:	e1a07003 	mov	r7, r3
4000fe4c:	e28da030 	add	sl, sp, #48	; 0x30
4000fe50:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fe54:	e3a0102c 	mov	r1, #44	; 0x2c
4000fe58:	e1a00004 	mov	r0, r4
4000fe5c:	eb000ee7 	bl	40013a00 <__aeabi_memclr4>
4000fe60:	e5845004 	str	r5, [r4, #4]
4000fe64:	e5848008 	str	r8, [r4, #8]
4000fe68:	e584900c 	str	r9, [r4, #12]
4000fe6c:	e5846010 	str	r6, [r4, #16]
4000fe70:	e5847014 	str	r7, [r4, #20]
4000fe74:	e10fb000 	mrs	fp, CPSR
4000fe78:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fe7c:	e58d0008 	str	r0, [sp, #8]
4000fe80:	e59d0008 	ldr	r0, [sp, #8]
4000fe84:	e121f000 	msr	CPSR_c, r0
4000fe88:	e59f0178 	ldr	r0, [pc, #376]	; 40010008 <_tx_timer_create+0x1d0>
4000fe8c:	e5840000 	str	r0, [r4]
4000fe90:	e59f0174 	ldr	r0, [pc, #372]	; 4001000c <_tx_timer_create+0x1d4>
4000fe94:	e5900000 	ldr	r0, [r0]
4000fe98:	e3500000 	cmp	r0, #0
4000fe9c:	0a00000e 	beq	4000fedc <_tx_timer_create+0xa4>
4000fea0:	e59f0164 	ldr	r0, [pc, #356]	; 4001000c <_tx_timer_create+0x1d4>
4000fea4:	e5900000 	ldr	r0, [r0]
4000fea8:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000feac:	e58d0004 	str	r0, [sp, #4]
4000feb0:	e59f0154 	ldr	r0, [pc, #340]	; 4001000c <_tx_timer_create+0x1d4>
4000feb4:	e5900000 	ldr	r0, [r0]
4000feb8:	e5804028 	str	r4, [r0, #40]	; 0x28
4000febc:	e59d0004 	ldr	r0, [sp, #4]
4000fec0:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fec4:	e59d0004 	ldr	r0, [sp, #4]
4000fec8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fecc:	e59f0138 	ldr	r0, [pc, #312]	; 4001000c <_tx_timer_create+0x1d4>
4000fed0:	e5900000 	ldr	r0, [r0]
4000fed4:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fed8:	ea000003 	b	4000feec <_tx_timer_create+0xb4>
4000fedc:	e59f0128 	ldr	r0, [pc, #296]	; 4001000c <_tx_timer_create+0x1d4>
4000fee0:	e5804000 	str	r4, [r0]
4000fee4:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fee8:	e5844028 	str	r4, [r4, #40]	; 0x28
4000feec:	e59f011c 	ldr	r0, [pc, #284]	; 40010010 <_tx_timer_create+0x1d8>
4000fef0:	e5900000 	ldr	r0, [r0]
4000fef4:	e2800001 	add	r0, r0, #1
4000fef8:	e59f1110 	ldr	r1, [pc, #272]	; 40010010 <_tx_timer_create+0x1d8>
4000fefc:	e5810000 	str	r0, [r1]
4000ff00:	e1a03008 	mov	r3, r8
4000ff04:	e1a02005 	mov	r2, r5
4000ff08:	e1a01004 	mov	r1, r4
4000ff0c:	e3a00002 	mov	r0, #2
4000ff10:	e58d9000 	str	r9, [sp]
4000ff14:	eb00011b 	bl	40010388 <_tx_trace_object_register>
4000ff18:	e59f10f4 	ldr	r1, [pc, #244]	; 40010014 <_tx_timer_create+0x1dc>
4000ff1c:	e5910000 	ldr	r0, [r1]
4000ff20:	e3500000 	cmp	r0, #0
4000ff24:	0a000030 	beq	4000ffec <_tx_timer_create+0x1b4>
4000ff28:	e59f10e8 	ldr	r1, [pc, #232]	; 40010018 <_tx_timer_create+0x1e0>
4000ff2c:	e5911000 	ldr	r1, [r1]
4000ff30:	e2811001 	add	r1, r1, #1
4000ff34:	e59f20dc 	ldr	r2, [pc, #220]	; 40010018 <_tx_timer_create+0x1e0>
4000ff38:	e5821000 	str	r1, [r2]
4000ff3c:	e580100c 	str	r1, [r0, #12]
4000ff40:	e59f10d4 	ldr	r1, [pc, #212]	; 4001001c <_tx_timer_create+0x1e4>
4000ff44:	e5911000 	ldr	r1, [r1]
4000ff48:	e3510000 	cmp	r1, #0
4000ff4c:	1a000006 	bne	4000ff6c <_tx_timer_create+0x134>
4000ff50:	e59f10c8 	ldr	r1, [pc, #200]	; 40010020 <_tx_timer_create+0x1e8>
4000ff54:	e5911000 	ldr	r1, [r1]
4000ff58:	e5801000 	str	r1, [r0]
4000ff5c:	e5901000 	ldr	r1, [r0]
4000ff60:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ff64:	e5801004 	str	r1, [r0, #4]
4000ff68:	ea00000d 	b	4000ffa4 <_tx_timer_create+0x16c>
4000ff6c:	e59f10a8 	ldr	r1, [pc, #168]	; 4001001c <_tx_timer_create+0x1e4>
4000ff70:	e5911000 	ldr	r1, [r1]
4000ff74:	e59f20a8 	ldr	r2, [pc, #168]	; 40010024 <_tx_timer_create+0x1ec>
4000ff78:	e1510002 	cmp	r1, r2
4000ff7c:	2a000004 	bcs	4000ff94 <_tx_timer_create+0x15c>
4000ff80:	e3e01000 	mvn	r1, #0
4000ff84:	e5801000 	str	r1, [r0]
4000ff88:	e3a01000 	mov	r1, #0
4000ff8c:	e5801004 	str	r1, [r0, #4]
4000ff90:	ea000003 	b	4000ffa4 <_tx_timer_create+0x16c>
4000ff94:	e59f1088 	ldr	r1, [pc, #136]	; 40010024 <_tx_timer_create+0x1ec>
4000ff98:	e5801000 	str	r1, [r0]
4000ff9c:	e3a01000 	mov	r1, #0
4000ffa0:	e5801004 	str	r1, [r0, #4]
4000ffa4:	e3a0107c 	mov	r1, #124	; 0x7c
4000ffa8:	e5801008 	str	r1, [r0, #8]
4000ffac:	e5804010 	str	r4, [r0, #16]
4000ffb0:	e5808014 	str	r8, [r0, #20]
4000ffb4:	e5809018 	str	r9, [r0, #24]
4000ffb8:	e580a01c 	str	sl, [r0, #28]
4000ffbc:	e2800020 	add	r0, r0, #32
4000ffc0:	e59f1060 	ldr	r1, [pc, #96]	; 40010028 <_tx_timer_create+0x1f0>
4000ffc4:	e5911000 	ldr	r1, [r1]
4000ffc8:	e1500001 	cmp	r0, r1
4000ffcc:	3a000001 	bcc	4000ffd8 <_tx_timer_create+0x1a0>
4000ffd0:	e59f1054 	ldr	r1, [pc, #84]	; 4001002c <_tx_timer_create+0x1f4>
4000ffd4:	e5910000 	ldr	r0, [r1]
4000ffd8:	e59f1034 	ldr	r1, [pc, #52]	; 40010014 <_tx_timer_create+0x1dc>
4000ffdc:	e5810000 	str	r0, [r1]
4000ffe0:	e59f1048 	ldr	r1, [pc, #72]	; 40010030 <_tx_timer_create+0x1f8>
4000ffe4:	e5911000 	ldr	r1, [r1]
4000ffe8:	e5810020 	str	r0, [r1, #32]
4000ffec:	e121f00b 	msr	CPSR_c, fp
4000fff0:	e35a0000 	cmp	sl, #0
4000fff4:	0a000001 	beq	40010000 <_tx_timer_create+0x1c8>
4000fff8:	e2840008 	add	r0, r4, #8
4000fffc:	ebffe600 	bl	40009804 <_tx_timer_system_activate>
40010000:	e3a00000 	mov	r0, #0
40010004:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40010008:	4154494d 	.word	0x4154494d
4001000c:	40030e98 	.word	0x40030e98
40010010:	40030e9c 	.word	0x40030e9c
40010014:	40030ec0 	.word	0x40030ec0
40010018:	40030ec4 	.word	0x40030ec4
4001001c:	40030e4c 	.word	0x40030e4c
40010020:	40030e54 	.word	0x40030e54
40010024:	f0f0f0f0 	.word	0xf0f0f0f0
40010028:	40030ebc 	.word	0x40030ebc
4001002c:	40030eb8 	.word	0x40030eb8
40010030:	40030eac 	.word	0x40030eac

40010034 <_tx_timer_deactivate>:
40010034:	e92d4018 	push	{r3, r4, lr}
40010038:	e1a01000 	mov	r1, r0
4001003c:	e281c008 	add	ip, r1, #8
40010040:	e10f2000 	mrs	r2, CPSR
40010044:	e3823080 	orr	r3, r2, #128	; 0x80
40010048:	e121f003 	msr	CPSR_c, r3
4001004c:	e59fe228 	ldr	lr, [pc, #552]	; 4001027c <_tx_timer_deactivate+0x248>
40010050:	e59e0000 	ldr	r0, [lr]
40010054:	e3500000 	cmp	r0, #0
40010058:	0a000031 	beq	40010124 <_tx_timer_deactivate+0xf0>
4001005c:	e59fe21c 	ldr	lr, [pc, #540]	; 40010280 <_tx_timer_deactivate+0x24c>
40010060:	e59ee000 	ldr	lr, [lr]
40010064:	e28ee001 	add	lr, lr, #1
40010068:	e59f4210 	ldr	r4, [pc, #528]	; 40010280 <_tx_timer_deactivate+0x24c>
4001006c:	e584e000 	str	lr, [r4]
40010070:	e580e00c 	str	lr, [r0, #12]
40010074:	e59fe208 	ldr	lr, [pc, #520]	; 40010284 <_tx_timer_deactivate+0x250>
40010078:	e59ee000 	ldr	lr, [lr]
4001007c:	e35e0000 	cmp	lr, #0
40010080:	1a000006 	bne	400100a0 <_tx_timer_deactivate+0x6c>
40010084:	e59fe1fc 	ldr	lr, [pc, #508]	; 40010288 <_tx_timer_deactivate+0x254>
40010088:	e59ee000 	ldr	lr, [lr]
4001008c:	e580e000 	str	lr, [r0]
40010090:	e590e000 	ldr	lr, [r0]
40010094:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
40010098:	e580e004 	str	lr, [r0, #4]
4001009c:	ea00000d 	b	400100d8 <_tx_timer_deactivate+0xa4>
400100a0:	e59fe1dc 	ldr	lr, [pc, #476]	; 40010284 <_tx_timer_deactivate+0x250>
400100a4:	e59ee000 	ldr	lr, [lr]
400100a8:	e59f41dc 	ldr	r4, [pc, #476]	; 4001028c <_tx_timer_deactivate+0x258>
400100ac:	e15e0004 	cmp	lr, r4
400100b0:	2a000004 	bcs	400100c8 <_tx_timer_deactivate+0x94>
400100b4:	e3e0e000 	mvn	lr, #0
400100b8:	e580e000 	str	lr, [r0]
400100bc:	e3a0e000 	mov	lr, #0
400100c0:	e580e004 	str	lr, [r0, #4]
400100c4:	ea000003 	b	400100d8 <_tx_timer_deactivate+0xa4>
400100c8:	e59fe1bc 	ldr	lr, [pc, #444]	; 4001028c <_tx_timer_deactivate+0x258>
400100cc:	e580e000 	str	lr, [r0]
400100d0:	e3a0e000 	mov	lr, #0
400100d4:	e580e004 	str	lr, [r0, #4]
400100d8:	e3a0e07d 	mov	lr, #125	; 0x7d
400100dc:	e580e008 	str	lr, [r0, #8]
400100e0:	e5801010 	str	r1, [r0, #16]
400100e4:	e580d014 	str	sp, [r0, #20]
400100e8:	e3a0e000 	mov	lr, #0
400100ec:	e580e018 	str	lr, [r0, #24]
400100f0:	e580e01c 	str	lr, [r0, #28]
400100f4:	e2800020 	add	r0, r0, #32
400100f8:	e59fe190 	ldr	lr, [pc, #400]	; 40010290 <_tx_timer_deactivate+0x25c>
400100fc:	e59ee000 	ldr	lr, [lr]
40010100:	e150000e 	cmp	r0, lr
40010104:	3a000001 	bcc	40010110 <_tx_timer_deactivate+0xdc>
40010108:	e59fe184 	ldr	lr, [pc, #388]	; 40010294 <_tx_timer_deactivate+0x260>
4001010c:	e59e0000 	ldr	r0, [lr]
40010110:	e59fe164 	ldr	lr, [pc, #356]	; 4001027c <_tx_timer_deactivate+0x248>
40010114:	e58e0000 	str	r0, [lr]
40010118:	e59fe178 	ldr	lr, [pc, #376]	; 40010298 <_tx_timer_deactivate+0x264>
4001011c:	e59ee000 	ldr	lr, [lr]
40010120:	e58e0020 	str	r0, [lr, #32]
40010124:	e59fe170 	ldr	lr, [pc, #368]	; 4001029c <_tx_timer_deactivate+0x268>
40010128:	e59c0018 	ldr	r0, [ip, #24]
4001012c:	e59ee000 	ldr	lr, [lr]
40010130:	e150000e 	cmp	r0, lr
40010134:	3a00002b 	bcc	400101e8 <_tx_timer_deactivate+0x1b4>
40010138:	e59fe160 	ldr	lr, [pc, #352]	; 400102a0 <_tx_timer_deactivate+0x26c>
4001013c:	e59c0018 	ldr	r0, [ip, #24]
40010140:	e59ee000 	ldr	lr, [lr]
40010144:	e150000e 	cmp	r0, lr
40010148:	2a000026 	bcs	400101e8 <_tx_timer_deactivate+0x1b4>
4001014c:	e59fe150 	ldr	lr, [pc, #336]	; 400102a4 <_tx_timer_deactivate+0x270>
40010150:	e59c0018 	ldr	r0, [ip, #24]
40010154:	e59ee000 	ldr	lr, [lr]
40010158:	e150000e 	cmp	r0, lr
4001015c:	3a000007 	bcc	40010180 <_tx_timer_deactivate+0x14c>
40010160:	e59fe13c 	ldr	lr, [pc, #316]	; 400102a4 <_tx_timer_deactivate+0x270>
40010164:	e59c0018 	ldr	r0, [ip, #24]
40010168:	e59ee000 	ldr	lr, [lr]
4001016c:	e040000e 	sub	r0, r0, lr
40010170:	e3a0e001 	mov	lr, #1
40010174:	e08e0140 	add	r0, lr, r0, asr #2
40010178:	e58d0000 	str	r0, [sp]
4001017c:	ea00000e 	b	400101bc <_tx_timer_deactivate+0x188>
40010180:	e59fe114 	ldr	lr, [pc, #276]	; 4001029c <_tx_timer_deactivate+0x268>
40010184:	e59c0018 	ldr	r0, [ip, #24]
40010188:	e59ee000 	ldr	lr, [lr]
4001018c:	e040000e 	sub	r0, r0, lr
40010190:	e1a00140 	asr	r0, r0, #2
40010194:	e58d0000 	str	r0, [sp]
40010198:	e59f0100 	ldr	r0, [pc, #256]	; 400102a0 <_tx_timer_deactivate+0x26c>
4001019c:	e5900000 	ldr	r0, [r0]
400101a0:	e59fe0fc 	ldr	lr, [pc, #252]	; 400102a4 <_tx_timer_deactivate+0x270>
400101a4:	e59ee000 	ldr	lr, [lr]
400101a8:	e040000e 	sub	r0, r0, lr
400101ac:	e59de000 	ldr	lr, [sp]
400101b0:	e08e0140 	add	r0, lr, r0, asr #2
400101b4:	e2800001 	add	r0, r0, #1
400101b8:	e58d0000 	str	r0, [sp]
400101bc:	e59c0000 	ldr	r0, [ip]
400101c0:	e3500020 	cmp	r0, #32
400101c4:	9a000005 	bls	400101e0 <_tx_timer_deactivate+0x1ac>
400101c8:	e59c0000 	ldr	r0, [ip]
400101cc:	e2400020 	sub	r0, r0, #32
400101d0:	e59de000 	ldr	lr, [sp]
400101d4:	e080000e 	add	r0, r0, lr
400101d8:	e58c0000 	str	r0, [ip]
400101dc:	ea000001 	b	400101e8 <_tx_timer_deactivate+0x1b4>
400101e0:	e59d0000 	ldr	r0, [sp]
400101e4:	e58c0000 	str	r0, [ip]
400101e8:	e59c0018 	ldr	r0, [ip, #24]
400101ec:	e3500000 	cmp	r0, #0
400101f0:	0a00001e 	beq	40010270 <_tx_timer_deactivate+0x23c>
400101f4:	e59c0010 	ldr	r0, [ip, #16]
400101f8:	e150000c 	cmp	r0, ip
400101fc:	1a000009 	bne	40010228 <_tx_timer_deactivate+0x1f4>
40010200:	e59c0018 	ldr	r0, [ip, #24]
40010204:	e5900000 	ldr	r0, [r0]
40010208:	e150000c 	cmp	r0, ip
4001020c:	1a000002 	bne	4001021c <_tx_timer_deactivate+0x1e8>
40010210:	e3a00000 	mov	r0, #0
40010214:	e59ce018 	ldr	lr, [ip, #24]
40010218:	e58e0000 	str	r0, [lr]
4001021c:	e3a00000 	mov	r0, #0
40010220:	e58c0018 	str	r0, [ip, #24]
40010224:	ea000011 	b	40010270 <_tx_timer_deactivate+0x23c>
40010228:	e59c0014 	ldr	r0, [ip, #20]
4001022c:	e59ce010 	ldr	lr, [ip, #16]
40010230:	e58e0014 	str	r0, [lr, #20]
40010234:	e59c0010 	ldr	r0, [ip, #16]
40010238:	e59ce014 	ldr	lr, [ip, #20]
4001023c:	e58e0010 	str	r0, [lr, #16]
40010240:	e59c0018 	ldr	r0, [ip, #24]
40010244:	e5900000 	ldr	r0, [r0]
40010248:	e150000c 	cmp	r0, ip
4001024c:	1a000005 	bne	40010268 <_tx_timer_deactivate+0x234>
40010250:	e59c0018 	ldr	r0, [ip, #24]
40010254:	e59ce010 	ldr	lr, [ip, #16]
40010258:	e58e0018 	str	r0, [lr, #24]
4001025c:	e59c0010 	ldr	r0, [ip, #16]
40010260:	e59ce018 	ldr	lr, [ip, #24]
40010264:	e58e0000 	str	r0, [lr]
40010268:	e3a00000 	mov	r0, #0
4001026c:	e58c0018 	str	r0, [ip, #24]
40010270:	e121f002 	msr	CPSR_c, r2
40010274:	e3a00000 	mov	r0, #0
40010278:	e8bd8018 	pop	{r3, r4, pc}
4001027c:	40030ec0 	.word	0x40030ec0
40010280:	40030ec4 	.word	0x40030ec4
40010284:	40030e4c 	.word	0x40030e4c
40010288:	40030e54 	.word	0x40030e54
4001028c:	f0f0f0f0 	.word	0xf0f0f0f0
40010290:	40030ebc 	.word	0x40030ebc
40010294:	40030eb8 	.word	0x40030eb8
40010298:	40030eac 	.word	0x40030eac
4001029c:	40030e88 	.word	0x40030e88
400102a0:	40030e8c 	.word	0x40030e8c
400102a4:	40030e90 	.word	0x40030e90

400102a8 <_tx_timer_expiration_process>:
400102a8:	e92d4070 	push	{r4, r5, r6, lr}
400102ac:	e10f4000 	mrs	r4, CPSR
400102b0:	e3845080 	orr	r5, r4, #128	; 0x80
400102b4:	e121f005 	msr	CPSR_c, r5
400102b8:	e59f001c 	ldr	r0, [pc, #28]	; 400102dc <_tx_timer_expiration_process+0x34>
400102bc:	e5900000 	ldr	r0, [r0]
400102c0:	e2800001 	add	r0, r0, #1
400102c4:	e59f1010 	ldr	r1, [pc, #16]	; 400102dc <_tx_timer_expiration_process+0x34>
400102c8:	e5810000 	str	r0, [r1]
400102cc:	e121f004 	msr	CPSR_c, r4
400102d0:	e59f0008 	ldr	r0, [pc, #8]	; 400102e0 <_tx_timer_expiration_process+0x38>
400102d4:	ebfffcd5 	bl	4000f630 <_tx_thread_system_resume>
400102d8:	e8bd8070 	pop	{r4, r5, r6, pc}
400102dc:	40030e70 	.word	0x40030e70
400102e0:	40032994 	.word	0x40032994

400102e4 <_tx_timer_system_deactivate>:
400102e4:	e1a01000 	mov	r1, r0
400102e8:	e10f2000 	mrs	r2, CPSR
400102ec:	e3823080 	orr	r3, r2, #128	; 0x80
400102f0:	e121f003 	msr	CPSR_c, r3
400102f4:	e5910018 	ldr	r0, [r1, #24]
400102f8:	e3500000 	cmp	r0, #0
400102fc:	0a00001e 	beq	4001037c <_tx_timer_system_deactivate+0x98>
40010300:	e5910010 	ldr	r0, [r1, #16]
40010304:	e1500001 	cmp	r0, r1
40010308:	1a000009 	bne	40010334 <_tx_timer_system_deactivate+0x50>
4001030c:	e5910018 	ldr	r0, [r1, #24]
40010310:	e5900000 	ldr	r0, [r0]
40010314:	e1500001 	cmp	r0, r1
40010318:	1a000002 	bne	40010328 <_tx_timer_system_deactivate+0x44>
4001031c:	e3a00000 	mov	r0, #0
40010320:	e591c018 	ldr	ip, [r1, #24]
40010324:	e58c0000 	str	r0, [ip]
40010328:	e3a00000 	mov	r0, #0
4001032c:	e5810018 	str	r0, [r1, #24]
40010330:	ea000011 	b	4001037c <_tx_timer_system_deactivate+0x98>
40010334:	e5910014 	ldr	r0, [r1, #20]
40010338:	e591c010 	ldr	ip, [r1, #16]
4001033c:	e58c0014 	str	r0, [ip, #20]
40010340:	e5910010 	ldr	r0, [r1, #16]
40010344:	e591c014 	ldr	ip, [r1, #20]
40010348:	e58c0010 	str	r0, [ip, #16]
4001034c:	e5910018 	ldr	r0, [r1, #24]
40010350:	e5900000 	ldr	r0, [r0]
40010354:	e1500001 	cmp	r0, r1
40010358:	1a000005 	bne	40010374 <_tx_timer_system_deactivate+0x90>
4001035c:	e5910018 	ldr	r0, [r1, #24]
40010360:	e591c010 	ldr	ip, [r1, #16]
40010364:	e58c0018 	str	r0, [ip, #24]
40010368:	e5910010 	ldr	r0, [r1, #16]
4001036c:	e591c018 	ldr	ip, [r1, #24]
40010370:	e58c0000 	str	r0, [ip]
40010374:	e3a00000 	mov	r0, #0
40010378:	e5810018 	str	r0, [r1, #24]
4001037c:	e121f002 	msr	CPSR_c, r2
40010380:	e3a00000 	mov	r0, #0
40010384:	e12fff1e 	bx	lr

40010388 <_tx_trace_object_register>:
40010388:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4001038c:	e1a04000 	mov	r4, r0
40010390:	e1a05001 	mov	r5, r1
40010394:	e1a06002 	mov	r6, r2
40010398:	e1a07003 	mov	r7, r3
4001039c:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
400103a0:	e59f0184 	ldr	r0, [pc, #388]	; 4001052c <_tx_trace_object_register+0x1a4>
400103a4:	e5900000 	ldr	r0, [r0]
400103a8:	e3500000 	cmp	r0, #0
400103ac:	1a000000 	bne	400103b4 <_tx_trace_object_register+0x2c>
400103b0:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400103b4:	e59f1174 	ldr	r1, [pc, #372]	; 40010530 <_tx_trace_object_register+0x1a8>
400103b8:	e5911000 	ldr	r1, [r1]
400103bc:	e59f2168 	ldr	r2, [pc, #360]	; 4001052c <_tx_trace_object_register+0x1a4>
400103c0:	e5922000 	ldr	r2, [r2]
400103c4:	e0410002 	sub	r0, r1, r2
400103c8:	e3a01030 	mov	r1, #48	; 0x30
400103cc:	eb0002bd 	bl	40010ec8 <__aeabi_idivmod>
400103d0:	e1a0a000 	mov	sl, r0
400103d4:	e1a0b00a 	mov	fp, sl
400103d8:	e3a09000 	mov	r9, #0
400103dc:	ea00001b 	b	40010450 <_tx_trace_object_register+0xc8>
400103e0:	e0890089 	add	r0, r9, r9, lsl #1
400103e4:	e59f1140 	ldr	r1, [pc, #320]	; 4001052c <_tx_trace_object_register+0x1a4>
400103e8:	e5911000 	ldr	r1, [r1]
400103ec:	e0810200 	add	r0, r1, r0, lsl #4
400103f0:	e5900004 	ldr	r0, [r0, #4]
400103f4:	e1500005 	cmp	r0, r5
400103f8:	1a000001 	bne	40010404 <_tx_trace_object_register+0x7c>
400103fc:	e1a0b009 	mov	fp, r9
40010400:	ea000014 	b	40010458 <_tx_trace_object_register+0xd0>
40010404:	e0890089 	add	r0, r9, r9, lsl #1
40010408:	e59f111c 	ldr	r1, [pc, #284]	; 4001052c <_tx_trace_object_register+0x1a4>
4001040c:	e5911000 	ldr	r1, [r1]
40010410:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
40010414:	e3500000 	cmp	r0, #0
40010418:	0a00000b 	beq	4001044c <_tx_trace_object_register+0xc4>
4001041c:	e15b000a 	cmp	fp, sl
40010420:	1a000001 	bne	4001042c <_tx_trace_object_register+0xa4>
40010424:	e1a0b009 	mov	fp, r9
40010428:	ea000007 	b	4001044c <_tx_trace_object_register+0xc4>
4001042c:	e08b008b 	add	r0, fp, fp, lsl #1
40010430:	e59f10f4 	ldr	r1, [pc, #244]	; 4001052c <_tx_trace_object_register+0x1a4>
40010434:	e5911000 	ldr	r1, [r1]
40010438:	e0810200 	add	r0, r1, r0, lsl #4
4001043c:	e5d00001 	ldrb	r0, [r0, #1]
40010440:	e3500000 	cmp	r0, #0
40010444:	0a000000 	beq	4001044c <_tx_trace_object_register+0xc4>
40010448:	e1a0b009 	mov	fp, r9
4001044c:	e2899001 	add	r9, r9, #1
40010450:	e159000a 	cmp	r9, sl
40010454:	3affffe1 	bcc	400103e0 <_tx_trace_object_register+0x58>
40010458:	e1a00000 	nop			; (mov r0, r0)
4001045c:	e15b000a 	cmp	fp, sl
40010460:	2a000030 	bcs	40010528 <_tx_trace_object_register+0x1a0>
40010464:	e3a00000 	mov	r0, #0
40010468:	e08b108b 	add	r1, fp, fp, lsl #1
4001046c:	e59f20b8 	ldr	r2, [pc, #184]	; 4001052c <_tx_trace_object_register+0x1a4>
40010470:	e5922000 	ldr	r2, [r2]
40010474:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010478:	e08b008b 	add	r0, fp, fp, lsl #1
4001047c:	e59f10a8 	ldr	r1, [pc, #168]	; 4001052c <_tx_trace_object_register+0x1a4>
40010480:	e5911000 	ldr	r1, [r1]
40010484:	e0810200 	add	r0, r1, r0, lsl #4
40010488:	e5c04001 	strb	r4, [r0, #1]
4001048c:	e08b008b 	add	r0, fp, fp, lsl #1
40010490:	e59f1094 	ldr	r1, [pc, #148]	; 4001052c <_tx_trace_object_register+0x1a4>
40010494:	e5911000 	ldr	r1, [r1]
40010498:	e0810200 	add	r0, r1, r0, lsl #4
4001049c:	e5805004 	str	r5, [r0, #4]
400104a0:	e08b008b 	add	r0, fp, fp, lsl #1
400104a4:	e59f1080 	ldr	r1, [pc, #128]	; 4001052c <_tx_trace_object_register+0x1a4>
400104a8:	e5911000 	ldr	r1, [r1]
400104ac:	e0810200 	add	r0, r1, r0, lsl #4
400104b0:	e5807008 	str	r7, [r0, #8]
400104b4:	e08b008b 	add	r0, fp, fp, lsl #1
400104b8:	e59f106c 	ldr	r1, [pc, #108]	; 4001052c <_tx_trace_object_register+0x1a4>
400104bc:	e5911000 	ldr	r1, [r1]
400104c0:	e0810200 	add	r0, r1, r0, lsl #4
400104c4:	e580800c 	str	r8, [r0, #12]
400104c8:	e3a09000 	mov	r9, #0
400104cc:	ea00000b 	b	40010500 <_tx_trace_object_register+0x178>
400104d0:	e7d60009 	ldrb	r0, [r6, r9]
400104d4:	e08b108b 	add	r1, fp, fp, lsl #1
400104d8:	e59f204c 	ldr	r2, [pc, #76]	; 4001052c <_tx_trace_object_register+0x1a4>
400104dc:	e5922000 	ldr	r2, [r2]
400104e0:	e0821201 	add	r1, r2, r1, lsl #4
400104e4:	e2811010 	add	r1, r1, #16
400104e8:	e7c10009 	strb	r0, [r1, r9]
400104ec:	e7d60009 	ldrb	r0, [r6, r9]
400104f0:	e3500000 	cmp	r0, #0
400104f4:	1a000000 	bne	400104fc <_tx_trace_object_register+0x174>
400104f8:	ea000002 	b	40010508 <_tx_trace_object_register+0x180>
400104fc:	e2899001 	add	r9, r9, #1
40010500:	e359001f 	cmp	r9, #31
40010504:	3afffff1 	bcc	400104d0 <_tx_trace_object_register+0x148>
40010508:	e1a00000 	nop			; (mov r0, r0)
4001050c:	e3a00000 	mov	r0, #0
40010510:	e08b108b 	add	r1, fp, fp, lsl #1
40010514:	e59f2010 	ldr	r2, [pc, #16]	; 4001052c <_tx_trace_object_register+0x1a4>
40010518:	e5922000 	ldr	r2, [r2]
4001051c:	e0821201 	add	r1, r2, r1, lsl #4
40010520:	e2811010 	add	r1, r1, #16
40010524:	e7c10009 	strb	r0, [r1, r9]
40010528:	eaffffa0 	b	400103b0 <_tx_trace_object_register+0x28>
4001052c:	40030eb0 	.word	0x40030eb0
40010530:	40030eb4 	.word	0x40030eb4

40010534 <_tx_trace_object_unregister>:
40010534:	e92d4070 	push	{r4, r5, r6, lr}
40010538:	e1a04000 	mov	r4, r0
4001053c:	e59f007c 	ldr	r0, [pc, #124]	; 400105c0 <_tx_trace_object_unregister+0x8c>
40010540:	e5900000 	ldr	r0, [r0]
40010544:	e3500000 	cmp	r0, #0
40010548:	1a000000 	bne	40010550 <_tx_trace_object_unregister+0x1c>
4001054c:	e8bd8070 	pop	{r4, r5, r6, pc}
40010550:	e59f106c 	ldr	r1, [pc, #108]	; 400105c4 <_tx_trace_object_unregister+0x90>
40010554:	e5911000 	ldr	r1, [r1]
40010558:	e59f2060 	ldr	r2, [pc, #96]	; 400105c0 <_tx_trace_object_unregister+0x8c>
4001055c:	e5922000 	ldr	r2, [r2]
40010560:	e0410002 	sub	r0, r1, r2
40010564:	e3a01030 	mov	r1, #48	; 0x30
40010568:	eb000256 	bl	40010ec8 <__aeabi_idivmod>
4001056c:	e1a05000 	mov	r5, r0
40010570:	e3a06000 	mov	r6, #0
40010574:	ea00000d 	b	400105b0 <_tx_trace_object_unregister+0x7c>
40010578:	e0860086 	add	r0, r6, r6, lsl #1
4001057c:	e59f103c 	ldr	r1, [pc, #60]	; 400105c0 <_tx_trace_object_unregister+0x8c>
40010580:	e5911000 	ldr	r1, [r1]
40010584:	e0810200 	add	r0, r1, r0, lsl #4
40010588:	e5900004 	ldr	r0, [r0, #4]
4001058c:	e1500004 	cmp	r0, r4
40010590:	1a000005 	bne	400105ac <_tx_trace_object_unregister+0x78>
40010594:	e3a00001 	mov	r0, #1
40010598:	e0861086 	add	r1, r6, r6, lsl #1
4001059c:	e59f201c 	ldr	r2, [pc, #28]	; 400105c0 <_tx_trace_object_unregister+0x8c>
400105a0:	e5922000 	ldr	r2, [r2]
400105a4:	e7c20201 	strb	r0, [r2, r1, lsl #4]
400105a8:	ea000002 	b	400105b8 <_tx_trace_object_unregister+0x84>
400105ac:	e2866001 	add	r6, r6, #1
400105b0:	e1560005 	cmp	r6, r5
400105b4:	3affffef 	bcc	40010578 <_tx_trace_object_unregister+0x44>
400105b8:	e1a00000 	nop			; (mov r0, r0)
400105bc:	eaffffe2 	b	4001054c <_tx_trace_object_unregister+0x18>
400105c0:	40030eb0 	.word	0x40030eb0
400105c4:	40030eb4 	.word	0x40030eb4

400105c8 <_tx_thread_stack_build>:
400105c8:	e5902010 	ldr	r2, [r0, #16]
400105cc:	e3c22007 	bic	r2, r2, #7
400105d0:	e242204c 	sub	r2, r2, #76	; 0x4c
400105d4:	e3a03001 	mov	r3, #1
400105d8:	e5823000 	str	r3, [r2]
400105dc:	e3a03000 	mov	r3, #0
400105e0:	e5823008 	str	r3, [r2, #8]
400105e4:	e582300c 	str	r3, [r2, #12]
400105e8:	e5823010 	str	r3, [r2, #16]
400105ec:	e5823014 	str	r3, [r2, #20]
400105f0:	e5823018 	str	r3, [r2, #24]
400105f4:	e582301c 	str	r3, [r2, #28]
400105f8:	e5823020 	str	r3, [r2, #32]
400105fc:	e5823024 	str	r3, [r2, #36]	; 0x24
40010600:	e5823028 	str	r3, [r2, #40]	; 0x28
40010604:	e582302c 	str	r3, [r2, #44]	; 0x2c
40010608:	e590300c 	ldr	r3, [r0, #12]
4001060c:	e5823030 	str	r3, [r2, #48]	; 0x30
40010610:	e3a03000 	mov	r3, #0
40010614:	e5823034 	str	r3, [r2, #52]	; 0x34
40010618:	e5823038 	str	r3, [r2, #56]	; 0x38
4001061c:	e582303c 	str	r3, [r2, #60]	; 0x3c
40010620:	e5821040 	str	r1, [r2, #64]	; 0x40
40010624:	e5823044 	str	r3, [r2, #68]	; 0x44
40010628:	e10f1000 	mrs	r1, CPSR
4001062c:	e3c1109f 	bic	r1, r1, #159	; 0x9f
40010630:	e3813013 	orr	r3, r1, #19
40010634:	e5823004 	str	r3, [r2, #4]
40010638:	e5802008 	str	r2, [r0, #8]
4001063c:	e12fff1e 	bx	lr

40010640 <_tx_event_flags_cleanup>:
40010640:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010644:	e1a04000 	mov	r4, r0
40010648:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4001064c:	e10f5000 	mrs	r5, CPSR
40010650:	e3856080 	orr	r6, r5, #128	; 0x80
40010654:	e121f006 	msr	CPSR_c, r6
40010658:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4001065c:	e3500000 	cmp	r0, #0
40010660:	0a000026 	beq	40010700 <_tx_event_flags_cleanup+0xc0>
40010664:	e3570000 	cmp	r7, #0
40010668:	0a000024 	beq	40010700 <_tx_event_flags_cleanup+0xc0>
4001066c:	e5970000 	ldr	r0, [r7]
40010670:	e59f1090 	ldr	r1, [pc, #144]	; 40010708 <_tx_event_flags_cleanup+0xc8>
40010674:	e1500001 	cmp	r0, r1
40010678:	1a000020 	bne	40010700 <_tx_event_flags_cleanup+0xc0>
4001067c:	e3a00000 	mov	r0, #0
40010680:	e5840068 	str	r0, [r4, #104]	; 0x68
40010684:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010688:	e1500004 	cmp	r0, r4
4001068c:	1a000002 	bne	4001069c <_tx_event_flags_cleanup+0x5c>
40010690:	e3a00000 	mov	r0, #0
40010694:	e5870010 	str	r0, [r7, #16]
40010698:	ea000007 	b	400106bc <_tx_event_flags_cleanup+0x7c>
4001069c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400106a0:	e5870010 	str	r0, [r7, #16]
400106a4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400106a8:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400106ac:	e5810074 	str	r0, [r1, #116]	; 0x74
400106b0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400106b4:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400106b8:	e5810070 	str	r0, [r1, #112]	; 0x70
400106bc:	e5970014 	ldr	r0, [r7, #20]
400106c0:	e2400001 	sub	r0, r0, #1
400106c4:	e5870014 	str	r0, [r7, #20]
400106c8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400106cc:	e3500007 	cmp	r0, #7
400106d0:	1a00000a 	bne	40010700 <_tx_event_flags_cleanup+0xc0>
400106d4:	e3a00007 	mov	r0, #7
400106d8:	e5840084 	str	r0, [r4, #132]	; 0x84
400106dc:	e59f0028 	ldr	r0, [pc, #40]	; 4001070c <_tx_event_flags_cleanup+0xcc>
400106e0:	e5900000 	ldr	r0, [r0]
400106e4:	e2800001 	add	r0, r0, #1
400106e8:	e59f101c 	ldr	r1, [pc, #28]	; 4001070c <_tx_event_flags_cleanup+0xcc>
400106ec:	e5810000 	str	r0, [r1]
400106f0:	e121f005 	msr	CPSR_c, r5
400106f4:	e1a00004 	mov	r0, r4
400106f8:	ebfffbcc 	bl	4000f630 <_tx_thread_system_resume>
400106fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010700:	e121f005 	msr	CPSR_c, r5
40010704:	eafffffc 	b	400106fc <_tx_event_flags_cleanup+0xbc>
40010708:	4456444e 	.word	0x4456444e
4001070c:	40030e70 	.word	0x40030e70

40010710 <_tx_mutex_cleanup>:
40010710:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010714:	e1a04000 	mov	r4, r0
40010718:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4001071c:	e10f5000 	mrs	r5, CPSR
40010720:	e3856080 	orr	r6, r5, #128	; 0x80
40010724:	e121f006 	msr	CPSR_c, r6
40010728:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4001072c:	e3500000 	cmp	r0, #0
40010730:	0a000026 	beq	400107d0 <_tx_mutex_cleanup+0xc0>
40010734:	e3570000 	cmp	r7, #0
40010738:	0a000024 	beq	400107d0 <_tx_mutex_cleanup+0xc0>
4001073c:	e5970000 	ldr	r0, [r7]
40010740:	e59f1090 	ldr	r1, [pc, #144]	; 400107d8 <_tx_mutex_cleanup+0xc8>
40010744:	e1500001 	cmp	r0, r1
40010748:	1a000020 	bne	400107d0 <_tx_mutex_cleanup+0xc0>
4001074c:	e3a00000 	mov	r0, #0
40010750:	e5840068 	str	r0, [r4, #104]	; 0x68
40010754:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010758:	e1500004 	cmp	r0, r4
4001075c:	1a000002 	bne	4001076c <_tx_mutex_cleanup+0x5c>
40010760:	e3a00000 	mov	r0, #0
40010764:	e587001c 	str	r0, [r7, #28]
40010768:	ea000007 	b	4001078c <_tx_mutex_cleanup+0x7c>
4001076c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010770:	e587001c 	str	r0, [r7, #28]
40010774:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010778:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4001077c:	e5810074 	str	r0, [r1, #116]	; 0x74
40010780:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010784:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010788:	e5810070 	str	r0, [r1, #112]	; 0x70
4001078c:	e5970020 	ldr	r0, [r7, #32]
40010790:	e2400001 	sub	r0, r0, #1
40010794:	e5870020 	str	r0, [r7, #32]
40010798:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001079c:	e350000d 	cmp	r0, #13
400107a0:	1a00000a 	bne	400107d0 <_tx_mutex_cleanup+0xc0>
400107a4:	e3a0001d 	mov	r0, #29
400107a8:	e5840084 	str	r0, [r4, #132]	; 0x84
400107ac:	e59f0028 	ldr	r0, [pc, #40]	; 400107dc <_tx_mutex_cleanup+0xcc>
400107b0:	e5900000 	ldr	r0, [r0]
400107b4:	e2800001 	add	r0, r0, #1
400107b8:	e59f101c 	ldr	r1, [pc, #28]	; 400107dc <_tx_mutex_cleanup+0xcc>
400107bc:	e5810000 	str	r0, [r1]
400107c0:	e121f005 	msr	CPSR_c, r5
400107c4:	e1a00004 	mov	r0, r4
400107c8:	ebfffb98 	bl	4000f630 <_tx_thread_system_resume>
400107cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400107d0:	e121f005 	msr	CPSR_c, r5
400107d4:	eafffffc 	b	400107cc <_tx_mutex_cleanup+0xbc>
400107d8:	4d555445 	.word	0x4d555445
400107dc:	40030e70 	.word	0x40030e70

400107e0 <_tx_mutex_prioritize>:
400107e0:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
400107e4:	e1a04000 	mov	r4, r0
400107e8:	e10f5000 	mrs	r5, CPSR
400107ec:	e3856080 	orr	r6, r5, #128	; 0x80
400107f0:	e121f006 	msr	CPSR_c, r6
400107f4:	e59f1234 	ldr	r1, [pc, #564]	; 40010a30 <_tx_mutex_prioritize+0x250>
400107f8:	e5910000 	ldr	r0, [r1]
400107fc:	e3500000 	cmp	r0, #0
40010800:	0a000032 	beq	400108d0 <_tx_mutex_prioritize+0xf0>
40010804:	e59f1228 	ldr	r1, [pc, #552]	; 40010a34 <_tx_mutex_prioritize+0x254>
40010808:	e5911000 	ldr	r1, [r1]
4001080c:	e2811001 	add	r1, r1, #1
40010810:	e59f221c 	ldr	r2, [pc, #540]	; 40010a34 <_tx_mutex_prioritize+0x254>
40010814:	e5821000 	str	r1, [r2]
40010818:	e580100c 	str	r1, [r0, #12]
4001081c:	e59f1214 	ldr	r1, [pc, #532]	; 40010a38 <_tx_mutex_prioritize+0x258>
40010820:	e5911000 	ldr	r1, [r1]
40010824:	e3510000 	cmp	r1, #0
40010828:	1a000006 	bne	40010848 <_tx_mutex_prioritize+0x68>
4001082c:	e59f1208 	ldr	r1, [pc, #520]	; 40010a3c <_tx_mutex_prioritize+0x25c>
40010830:	e5911000 	ldr	r1, [r1]
40010834:	e5801000 	str	r1, [r0]
40010838:	e5901000 	ldr	r1, [r0]
4001083c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010840:	e5801004 	str	r1, [r0, #4]
40010844:	ea00000d 	b	40010880 <_tx_mutex_prioritize+0xa0>
40010848:	e59f11e8 	ldr	r1, [pc, #488]	; 40010a38 <_tx_mutex_prioritize+0x258>
4001084c:	e5911000 	ldr	r1, [r1]
40010850:	e59f21e8 	ldr	r2, [pc, #488]	; 40010a40 <_tx_mutex_prioritize+0x260>
40010854:	e1510002 	cmp	r1, r2
40010858:	2a000004 	bcs	40010870 <_tx_mutex_prioritize+0x90>
4001085c:	e3e01000 	mvn	r1, #0
40010860:	e5801000 	str	r1, [r0]
40010864:	e3a01000 	mov	r1, #0
40010868:	e5801004 	str	r1, [r0, #4]
4001086c:	ea000003 	b	40010880 <_tx_mutex_prioritize+0xa0>
40010870:	e59f11c8 	ldr	r1, [pc, #456]	; 40010a40 <_tx_mutex_prioritize+0x260>
40010874:	e5801000 	str	r1, [r0]
40010878:	e3a01000 	mov	r1, #0
4001087c:	e5801004 	str	r1, [r0, #4]
40010880:	e3a01038 	mov	r1, #56	; 0x38
40010884:	e5801008 	str	r1, [r0, #8]
40010888:	e5804010 	str	r4, [r0, #16]
4001088c:	e5941020 	ldr	r1, [r4, #32]
40010890:	e5801014 	str	r1, [r0, #20]
40010894:	e580d018 	str	sp, [r0, #24]
40010898:	e3a01000 	mov	r1, #0
4001089c:	e580101c 	str	r1, [r0, #28]
400108a0:	e2800020 	add	r0, r0, #32
400108a4:	e59f1198 	ldr	r1, [pc, #408]	; 40010a44 <_tx_mutex_prioritize+0x264>
400108a8:	e5911000 	ldr	r1, [r1]
400108ac:	e1500001 	cmp	r0, r1
400108b0:	3a000001 	bcc	400108bc <_tx_mutex_prioritize+0xdc>
400108b4:	e59f118c 	ldr	r1, [pc, #396]	; 40010a48 <_tx_mutex_prioritize+0x268>
400108b8:	e5910000 	ldr	r0, [r1]
400108bc:	e59f116c 	ldr	r1, [pc, #364]	; 40010a30 <_tx_mutex_prioritize+0x250>
400108c0:	e5810000 	str	r0, [r1]
400108c4:	e59f1180 	ldr	r1, [pc, #384]	; 40010a4c <_tx_mutex_prioritize+0x26c>
400108c8:	e5911000 	ldr	r1, [r1]
400108cc:	e5810020 	str	r0, [r1, #32]
400108d0:	e5940020 	ldr	r0, [r4, #32]
400108d4:	e3500002 	cmp	r0, #2
400108d8:	2a000002 	bcs	400108e8 <_tx_mutex_prioritize+0x108>
400108dc:	e121f005 	msr	CPSR_c, r5
400108e0:	e3a00000 	mov	r0, #0
400108e4:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
400108e8:	e5940020 	ldr	r0, [r4, #32]
400108ec:	e3500002 	cmp	r0, #2
400108f0:	1a00000c 	bne	40010928 <_tx_mutex_prioritize+0x148>
400108f4:	e594001c 	ldr	r0, [r4, #28]
400108f8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400108fc:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40010900:	e594101c 	ldr	r1, [r4, #28]
40010904:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010908:	e1500001 	cmp	r0, r1
4001090c:	2a000002 	bcs	4001091c <_tx_mutex_prioritize+0x13c>
40010910:	e594001c 	ldr	r0, [r4, #28]
40010914:	e5900070 	ldr	r0, [r0, #112]	; 0x70
40010918:	e584001c 	str	r0, [r4, #28]
4001091c:	e121f005 	msr	CPSR_c, r5
40010920:	e3a00000 	mov	r0, #0
40010924:	eaffffee 	b	400108e4 <_tx_mutex_prioritize+0x104>
40010928:	e594901c 	ldr	r9, [r4, #28]
4001092c:	e5940020 	ldr	r0, [r4, #32]
40010930:	e58d0000 	str	r0, [sp]
40010934:	e594801c 	ldr	r8, [r4, #28]
40010938:	e5987070 	ldr	r7, [r8, #112]	; 0x70
4001093c:	e59f010c 	ldr	r0, [pc, #268]	; 40010a50 <_tx_mutex_prioritize+0x270>
40010940:	e5900000 	ldr	r0, [r0]
40010944:	e2800001 	add	r0, r0, #1
40010948:	e59f1100 	ldr	r1, [pc, #256]	; 40010a50 <_tx_mutex_prioritize+0x270>
4001094c:	e5810000 	str	r0, [r1]
40010950:	e1a00000 	nop			; (mov r0, r0)
40010954:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010958:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
4001095c:	e1500001 	cmp	r0, r1
40010960:	2a000000 	bcs	40010968 <_tx_mutex_prioritize+0x188>
40010964:	e1a08007 	mov	r8, r7
40010968:	e121f005 	msr	CPSR_c, r5
4001096c:	e10f5000 	mrs	r5, CPSR
40010970:	e3856080 	orr	r6, r5, #128	; 0x80
40010974:	e121f006 	msr	CPSR_c, r6
40010978:	e594001c 	ldr	r0, [r4, #28]
4001097c:	e1500009 	cmp	r0, r9
40010980:	1a000005 	bne	4001099c <_tx_mutex_prioritize+0x1bc>
40010984:	e5940020 	ldr	r0, [r4, #32]
40010988:	e59d1000 	ldr	r1, [sp]
4001098c:	e1500001 	cmp	r0, r1
40010990:	1a000001 	bne	4001099c <_tx_mutex_prioritize+0x1bc>
40010994:	e5977070 	ldr	r7, [r7, #112]	; 0x70
40010998:	ea000004 	b	400109b0 <_tx_mutex_prioritize+0x1d0>
4001099c:	e594901c 	ldr	r9, [r4, #28]
400109a0:	e5940020 	ldr	r0, [r4, #32]
400109a4:	e58d0000 	str	r0, [sp]
400109a8:	e594801c 	ldr	r8, [r4, #28]
400109ac:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400109b0:	e594001c 	ldr	r0, [r4, #28]
400109b4:	e1500007 	cmp	r0, r7
400109b8:	1affffe5 	bne	40010954 <_tx_mutex_prioritize+0x174>
400109bc:	e59f008c 	ldr	r0, [pc, #140]	; 40010a50 <_tx_mutex_prioritize+0x270>
400109c0:	e5900000 	ldr	r0, [r0]
400109c4:	e2400001 	sub	r0, r0, #1
400109c8:	e59f1080 	ldr	r1, [pc, #128]	; 40010a50 <_tx_mutex_prioritize+0x270>
400109cc:	e5810000 	str	r0, [r1]
400109d0:	e594001c 	ldr	r0, [r4, #28]
400109d4:	e1500008 	cmp	r0, r8
400109d8:	0a000010 	beq	40010a20 <_tx_mutex_prioritize+0x240>
400109dc:	e5980074 	ldr	r0, [r8, #116]	; 0x74
400109e0:	e5981070 	ldr	r1, [r8, #112]	; 0x70
400109e4:	e5810074 	str	r0, [r1, #116]	; 0x74
400109e8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
400109ec:	e5981074 	ldr	r1, [r8, #116]	; 0x74
400109f0:	e5810070 	str	r0, [r1, #112]	; 0x70
400109f4:	e594001c 	ldr	r0, [r4, #28]
400109f8:	e5880070 	str	r0, [r8, #112]	; 0x70
400109fc:	e594001c 	ldr	r0, [r4, #28]
40010a00:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010a04:	e5880074 	str	r0, [r8, #116]	; 0x74
40010a08:	e594001c 	ldr	r0, [r4, #28]
40010a0c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010a10:	e5808070 	str	r8, [r0, #112]	; 0x70
40010a14:	e594001c 	ldr	r0, [r4, #28]
40010a18:	e5808074 	str	r8, [r0, #116]	; 0x74
40010a1c:	e584801c 	str	r8, [r4, #28]
40010a20:	e121f005 	msr	CPSR_c, r5
40010a24:	ebfffad5 	bl	4000f580 <_tx_thread_system_preempt_check>
40010a28:	e3a00000 	mov	r0, #0
40010a2c:	eaffffac 	b	400108e4 <_tx_mutex_prioritize+0x104>
40010a30:	40030ec0 	.word	0x40030ec0
40010a34:	40030ec4 	.word	0x40030ec4
40010a38:	40030e4c 	.word	0x40030e4c
40010a3c:	40030e54 	.word	0x40030e54
40010a40:	f0f0f0f0 	.word	0xf0f0f0f0
40010a44:	40030ebc 	.word	0x40030ebc
40010a48:	40030eb8 	.word	0x40030eb8
40010a4c:	40030eac 	.word	0x40030eac
40010a50:	40030e70 	.word	0x40030e70

40010a54 <_tx_queue_cleanup>:
40010a54:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010a58:	e1a04000 	mov	r4, r0
40010a5c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010a60:	e10f5000 	mrs	r5, CPSR
40010a64:	e3856080 	orr	r6, r5, #128	; 0x80
40010a68:	e121f006 	msr	CPSR_c, r6
40010a6c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010a70:	e3500000 	cmp	r0, #0
40010a74:	0a00002c 	beq	40010b2c <_tx_queue_cleanup+0xd8>
40010a78:	e3570000 	cmp	r7, #0
40010a7c:	0a00002a 	beq	40010b2c <_tx_queue_cleanup+0xd8>
40010a80:	e5970000 	ldr	r0, [r7]
40010a84:	e59f10a8 	ldr	r1, [pc, #168]	; 40010b34 <_tx_queue_cleanup+0xe0>
40010a88:	e1500001 	cmp	r0, r1
40010a8c:	1a000026 	bne	40010b2c <_tx_queue_cleanup+0xd8>
40010a90:	e3a00000 	mov	r0, #0
40010a94:	e5840068 	str	r0, [r4, #104]	; 0x68
40010a98:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010a9c:	e1500004 	cmp	r0, r4
40010aa0:	1a000002 	bne	40010ab0 <_tx_queue_cleanup+0x5c>
40010aa4:	e3a00000 	mov	r0, #0
40010aa8:	e5870028 	str	r0, [r7, #40]	; 0x28
40010aac:	ea000007 	b	40010ad0 <_tx_queue_cleanup+0x7c>
40010ab0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010ab4:	e5870028 	str	r0, [r7, #40]	; 0x28
40010ab8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010abc:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010ac0:	e5810074 	str	r0, [r1, #116]	; 0x74
40010ac4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010ac8:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010acc:	e5810070 	str	r0, [r1, #112]	; 0x70
40010ad0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010ad4:	e2400001 	sub	r0, r0, #1
40010ad8:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010adc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010ae0:	e3500005 	cmp	r0, #5
40010ae4:	1a000010 	bne	40010b2c <_tx_queue_cleanup+0xd8>
40010ae8:	e5970010 	ldr	r0, [r7, #16]
40010aec:	e3500000 	cmp	r0, #0
40010af0:	0a000002 	beq	40010b00 <_tx_queue_cleanup+0xac>
40010af4:	e3a0000b 	mov	r0, #11
40010af8:	e5840084 	str	r0, [r4, #132]	; 0x84
40010afc:	ea000001 	b	40010b08 <_tx_queue_cleanup+0xb4>
40010b00:	e3a0000a 	mov	r0, #10
40010b04:	e5840084 	str	r0, [r4, #132]	; 0x84
40010b08:	e59f0028 	ldr	r0, [pc, #40]	; 40010b38 <_tx_queue_cleanup+0xe4>
40010b0c:	e5900000 	ldr	r0, [r0]
40010b10:	e2800001 	add	r0, r0, #1
40010b14:	e59f101c 	ldr	r1, [pc, #28]	; 40010b38 <_tx_queue_cleanup+0xe4>
40010b18:	e5810000 	str	r0, [r1]
40010b1c:	e121f005 	msr	CPSR_c, r5
40010b20:	e1a00004 	mov	r0, r4
40010b24:	ebfffac1 	bl	4000f630 <_tx_thread_system_resume>
40010b28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010b2c:	e121f005 	msr	CPSR_c, r5
40010b30:	eafffffc 	b	40010b28 <_tx_queue_cleanup+0xd4>
40010b34:	51554555 	.word	0x51554555
40010b38:	40030e70 	.word	0x40030e70

40010b3c <strcpy>:
40010b3c:	e0202001 	eor	r2, r0, r1
40010b40:	e1a0c000 	mov	ip, r0
40010b44:	e3120003 	tst	r2, #3
40010b48:	1a000032 	bne	40010c18 <strcpy+0xdc>
40010b4c:	e3110003 	tst	r1, #3
40010b50:	1a000021 	bne	40010bdc <strcpy+0xa0>
40010b54:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
40010b58:	e3a05001 	mov	r5, #1
40010b5c:	e1855405 	orr	r5, r5, r5, lsl #8
40010b60:	e1855805 	orr	r5, r5, r5, lsl #16
40010b64:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
40010b68:	e3110004 	tst	r1, #4
40010b6c:	e4913004 	ldr	r3, [r1], #4
40010b70:	0a000005 	beq	40010b8c <strcpy+0x50>
40010b74:	e0432005 	sub	r2, r3, r5
40010b78:	e1d22003 	bics	r2, r2, r3
40010b7c:	e1120385 	tst	r2, r5, lsl #7
40010b80:	048c3004 	streq	r3, [ip], #4
40010b84:	04913004 	ldreq	r3, [r1], #4
40010b88:	1a00000c 	bne	40010bc0 <strcpy+0x84>
40010b8c:	e4914004 	ldr	r4, [r1], #4
40010b90:	e0432005 	sub	r2, r3, r5
40010b94:	e1d22003 	bics	r2, r2, r3
40010b98:	e1120385 	tst	r2, r5, lsl #7
40010b9c:	e0442005 	sub	r2, r4, r5
40010ba0:	1a000006 	bne	40010bc0 <strcpy+0x84>
40010ba4:	e48c3004 	str	r3, [ip], #4
40010ba8:	e1d22004 	bics	r2, r2, r4
40010bac:	e1120385 	tst	r2, r5, lsl #7
40010bb0:	04913004 	ldreq	r3, [r1], #4
40010bb4:	048c4004 	streq	r4, [ip], #4
40010bb8:	0afffff3 	beq	40010b8c <strcpy+0x50>
40010bbc:	e1a03004 	mov	r3, r4
40010bc0:	e4cc3001 	strb	r3, [ip], #1
40010bc4:	e31300ff 	tst	r3, #255	; 0xff
40010bc8:	e1a03463 	ror	r3, r3, #8
40010bcc:	1afffffb 	bne	40010bc0 <strcpy+0x84>
40010bd0:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010bd4:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
40010bd8:	e12fff1e 	bx	lr
40010bdc:	e3110001 	tst	r1, #1
40010be0:	0a000003 	beq	40010bf4 <strcpy+0xb8>
40010be4:	e4d12001 	ldrb	r2, [r1], #1
40010be8:	e4cc2001 	strb	r2, [ip], #1
40010bec:	e3520000 	cmp	r2, #0
40010bf0:	012fff1e 	bxeq	lr
40010bf4:	e3110002 	tst	r1, #2
40010bf8:	0affffd5 	beq	40010b54 <strcpy+0x18>
40010bfc:	e0d120b2 	ldrh	r2, [r1], #2
40010c00:	e31200ff 	tst	r2, #255	; 0xff
40010c04:	10cc20b2 	strhne	r2, [ip], #2
40010c08:	05cc2000 	strbeq	r2, [ip]
40010c0c:	13120cff 	tstne	r2, #65280	; 0xff00
40010c10:	1affffcf 	bne	40010b54 <strcpy+0x18>
40010c14:	e12fff1e 	bx	lr
40010c18:	e4d12001 	ldrb	r2, [r1], #1
40010c1c:	e4cc2001 	strb	r2, [ip], #1
40010c20:	e3520000 	cmp	r2, #0
40010c24:	1afffffb 	bne	40010c18 <strcpy+0xdc>
40010c28:	e12fff1e 	bx	lr

40010c2c <strlen>:
40010c2c:	e3c01003 	bic	r1, r0, #3
40010c30:	e2100003 	ands	r0, r0, #3
40010c34:	e2600000 	rsb	r0, r0, #0
40010c38:	e4913004 	ldr	r3, [r1], #4
40010c3c:	e280c004 	add	ip, r0, #4
40010c40:	e1a0c18c 	lsl	ip, ip, #3
40010c44:	e3e02000 	mvn	r2, #0
40010c48:	11833c32 	orrne	r3, r3, r2, lsr ip
40010c4c:	e3a0c001 	mov	ip, #1
40010c50:	e18cc40c 	orr	ip, ip, ip, lsl #8
40010c54:	e18cc80c 	orr	ip, ip, ip, lsl #16
40010c58:	e043200c 	sub	r2, r3, ip
40010c5c:	e1c22003 	bic	r2, r2, r3
40010c60:	e012238c 	ands	r2, r2, ip, lsl #7
40010c64:	04913004 	ldreq	r3, [r1], #4
40010c68:	02800004 	addeq	r0, r0, #4
40010c6c:	0afffff9 	beq	40010c58 <strlen+0x2c>
40010c70:	e31300ff 	tst	r3, #255	; 0xff
40010c74:	12800001 	addne	r0, r0, #1
40010c78:	13130cff 	tstne	r3, #65280	; 0xff00
40010c7c:	12800001 	addne	r0, r0, #1
40010c80:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010c84:	12800001 	addne	r0, r0, #1
40010c88:	e12fff1e 	bx	lr

40010c8c <__aeabi_uidiv>:
40010c8c:	e2512001 	subs	r2, r1, #1
40010c90:	012fff1e 	bxeq	lr
40010c94:	3a000036 	bcc	40010d74 <__aeabi_uidiv+0xe8>
40010c98:	e1500001 	cmp	r0, r1
40010c9c:	9a000022 	bls	40010d2c <__aeabi_uidiv+0xa0>
40010ca0:	e1110002 	tst	r1, r2
40010ca4:	0a000023 	beq	40010d38 <__aeabi_uidiv+0xac>
40010ca8:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010cac:	01a01181 	lsleq	r1, r1, #3
40010cb0:	03a03008 	moveq	r3, #8
40010cb4:	13a03001 	movne	r3, #1
40010cb8:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010cbc:	31510000 	cmpcc	r1, r0
40010cc0:	31a01201 	lslcc	r1, r1, #4
40010cc4:	31a03203 	lslcc	r3, r3, #4
40010cc8:	3afffffa 	bcc	40010cb8 <__aeabi_uidiv+0x2c>
40010ccc:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010cd0:	31510000 	cmpcc	r1, r0
40010cd4:	31a01081 	lslcc	r1, r1, #1
40010cd8:	31a03083 	lslcc	r3, r3, #1
40010cdc:	3afffffa 	bcc	40010ccc <__aeabi_uidiv+0x40>
40010ce0:	e3a02000 	mov	r2, #0
40010ce4:	e1500001 	cmp	r0, r1
40010ce8:	20400001 	subcs	r0, r0, r1
40010cec:	21822003 	orrcs	r2, r2, r3
40010cf0:	e15000a1 	cmp	r0, r1, lsr #1
40010cf4:	204000a1 	subcs	r0, r0, r1, lsr #1
40010cf8:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010cfc:	e1500121 	cmp	r0, r1, lsr #2
40010d00:	20400121 	subcs	r0, r0, r1, lsr #2
40010d04:	21822123 	orrcs	r2, r2, r3, lsr #2
40010d08:	e15001a1 	cmp	r0, r1, lsr #3
40010d0c:	204001a1 	subcs	r0, r0, r1, lsr #3
40010d10:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010d14:	e3500000 	cmp	r0, #0
40010d18:	11b03223 	lsrsne	r3, r3, #4
40010d1c:	11a01221 	lsrne	r1, r1, #4
40010d20:	1affffef 	bne	40010ce4 <__aeabi_uidiv+0x58>
40010d24:	e1a00002 	mov	r0, r2
40010d28:	e12fff1e 	bx	lr
40010d2c:	03a00001 	moveq	r0, #1
40010d30:	13a00000 	movne	r0, #0
40010d34:	e12fff1e 	bx	lr
40010d38:	e3510801 	cmp	r1, #65536	; 0x10000
40010d3c:	21a01821 	lsrcs	r1, r1, #16
40010d40:	23a02010 	movcs	r2, #16
40010d44:	33a02000 	movcc	r2, #0
40010d48:	e3510c01 	cmp	r1, #256	; 0x100
40010d4c:	21a01421 	lsrcs	r1, r1, #8
40010d50:	22822008 	addcs	r2, r2, #8
40010d54:	e3510010 	cmp	r1, #16
40010d58:	21a01221 	lsrcs	r1, r1, #4
40010d5c:	22822004 	addcs	r2, r2, #4
40010d60:	e3510004 	cmp	r1, #4
40010d64:	82822003 	addhi	r2, r2, #3
40010d68:	908220a1 	addls	r2, r2, r1, lsr #1
40010d6c:	e1a00230 	lsr	r0, r0, r2
40010d70:	e12fff1e 	bx	lr
40010d74:	e3500000 	cmp	r0, #0
40010d78:	13e00000 	mvnne	r0, #0
40010d7c:	ea000059 	b	40010ee8 <__aeabi_idiv0>

40010d80 <__aeabi_uidivmod>:
40010d80:	e3510000 	cmp	r1, #0
40010d84:	0afffffa 	beq	40010d74 <__aeabi_uidiv+0xe8>
40010d88:	e92d4003 	push	{r0, r1, lr}
40010d8c:	ebffffbe 	bl	40010c8c <__aeabi_uidiv>
40010d90:	e8bd4006 	pop	{r1, r2, lr}
40010d94:	e0030092 	mul	r3, r2, r0
40010d98:	e0411003 	sub	r1, r1, r3
40010d9c:	e12fff1e 	bx	lr

40010da0 <__aeabi_idiv>:
40010da0:	e3510000 	cmp	r1, #0
40010da4:	0a000043 	beq	40010eb8 <.divsi3_skip_div0_test+0x110>

40010da8 <.divsi3_skip_div0_test>:
40010da8:	e020c001 	eor	ip, r0, r1
40010dac:	42611000 	rsbmi	r1, r1, #0
40010db0:	e2512001 	subs	r2, r1, #1
40010db4:	0a000027 	beq	40010e58 <.divsi3_skip_div0_test+0xb0>
40010db8:	e1b03000 	movs	r3, r0
40010dbc:	42603000 	rsbmi	r3, r0, #0
40010dc0:	e1530001 	cmp	r3, r1
40010dc4:	9a000026 	bls	40010e64 <.divsi3_skip_div0_test+0xbc>
40010dc8:	e1110002 	tst	r1, r2
40010dcc:	0a000028 	beq	40010e74 <.divsi3_skip_div0_test+0xcc>
40010dd0:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010dd4:	01a01181 	lsleq	r1, r1, #3
40010dd8:	03a02008 	moveq	r2, #8
40010ddc:	13a02001 	movne	r2, #1
40010de0:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010de4:	31510003 	cmpcc	r1, r3
40010de8:	31a01201 	lslcc	r1, r1, #4
40010dec:	31a02202 	lslcc	r2, r2, #4
40010df0:	3afffffa 	bcc	40010de0 <.divsi3_skip_div0_test+0x38>
40010df4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010df8:	31510003 	cmpcc	r1, r3
40010dfc:	31a01081 	lslcc	r1, r1, #1
40010e00:	31a02082 	lslcc	r2, r2, #1
40010e04:	3afffffa 	bcc	40010df4 <.divsi3_skip_div0_test+0x4c>
40010e08:	e3a00000 	mov	r0, #0
40010e0c:	e1530001 	cmp	r3, r1
40010e10:	20433001 	subcs	r3, r3, r1
40010e14:	21800002 	orrcs	r0, r0, r2
40010e18:	e15300a1 	cmp	r3, r1, lsr #1
40010e1c:	204330a1 	subcs	r3, r3, r1, lsr #1
40010e20:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010e24:	e1530121 	cmp	r3, r1, lsr #2
40010e28:	20433121 	subcs	r3, r3, r1, lsr #2
40010e2c:	21800122 	orrcs	r0, r0, r2, lsr #2
40010e30:	e15301a1 	cmp	r3, r1, lsr #3
40010e34:	204331a1 	subcs	r3, r3, r1, lsr #3
40010e38:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010e3c:	e3530000 	cmp	r3, #0
40010e40:	11b02222 	lsrsne	r2, r2, #4
40010e44:	11a01221 	lsrne	r1, r1, #4
40010e48:	1affffef 	bne	40010e0c <.divsi3_skip_div0_test+0x64>
40010e4c:	e35c0000 	cmp	ip, #0
40010e50:	42600000 	rsbmi	r0, r0, #0
40010e54:	e12fff1e 	bx	lr
40010e58:	e13c0000 	teq	ip, r0
40010e5c:	42600000 	rsbmi	r0, r0, #0
40010e60:	e12fff1e 	bx	lr
40010e64:	33a00000 	movcc	r0, #0
40010e68:	01a00fcc 	asreq	r0, ip, #31
40010e6c:	03800001 	orreq	r0, r0, #1
40010e70:	e12fff1e 	bx	lr
40010e74:	e3510801 	cmp	r1, #65536	; 0x10000
40010e78:	21a01821 	lsrcs	r1, r1, #16
40010e7c:	23a02010 	movcs	r2, #16
40010e80:	33a02000 	movcc	r2, #0
40010e84:	e3510c01 	cmp	r1, #256	; 0x100
40010e88:	21a01421 	lsrcs	r1, r1, #8
40010e8c:	22822008 	addcs	r2, r2, #8
40010e90:	e3510010 	cmp	r1, #16
40010e94:	21a01221 	lsrcs	r1, r1, #4
40010e98:	22822004 	addcs	r2, r2, #4
40010e9c:	e3510004 	cmp	r1, #4
40010ea0:	82822003 	addhi	r2, r2, #3
40010ea4:	908220a1 	addls	r2, r2, r1, lsr #1
40010ea8:	e35c0000 	cmp	ip, #0
40010eac:	e1a00233 	lsr	r0, r3, r2
40010eb0:	42600000 	rsbmi	r0, r0, #0
40010eb4:	e12fff1e 	bx	lr
40010eb8:	e3500000 	cmp	r0, #0
40010ebc:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010ec0:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010ec4:	ea000007 	b	40010ee8 <__aeabi_idiv0>

40010ec8 <__aeabi_idivmod>:
40010ec8:	e3510000 	cmp	r1, #0
40010ecc:	0afffff9 	beq	40010eb8 <.divsi3_skip_div0_test+0x110>
40010ed0:	e92d4003 	push	{r0, r1, lr}
40010ed4:	ebffffb3 	bl	40010da8 <.divsi3_skip_div0_test>
40010ed8:	e8bd4006 	pop	{r1, r2, lr}
40010edc:	e0030092 	mul	r3, r2, r0
40010ee0:	e0411003 	sub	r1, r1, r3
40010ee4:	e12fff1e 	bx	lr

40010ee8 <__aeabi_idiv0>:
40010ee8:	e12fff1e 	bx	lr

40010eec <DelayArray>:
40010eec:	010402bc 01040104 010402bc 01040104     ................
40010efc:	01040104 01040104 01040104 01040104     ................
40010f0c:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010f1c:	02bc0104 010402bc 010402bc 010401f4     ................
40010f2c:	01040104 00000104 00000000 00000000     ................
	...
40010f6c:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010f7c:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010f8c:	75657551 73252065 61747320 25206574     Queue %s state %
40010f9c:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010fac:	68632065 206b6365 75657571 20444965     e check queueID 
40010fbc:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010fcc:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010fdc:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010fec:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010ffc:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
4001100c:	68632065 206b6365 49646d63 64252044     e check cmdID %d
4001101c:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
4001102c:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
4001103c:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
4001104c:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
4001105c:	6d6d6f63 20646e61 75657571 00000065     command queue...
4001106c:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
4001107c:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
4001108c:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
4001109c:	646d6320 67616c66 20642520 61746164      cmdflag %d data
400110ac:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
400110bc:	00000a0d                                ....

400110c0 <CyFxUSBDeviceDscr>:
400110c0:	02000112 400102ef 30611bbd 02010000     .......@..a0....
400110d0:	00000100                                ....

400110d4 <CyFxUSBDeviceDscrSS>:
400110d4:	03000112 090102ef 30611bbd 02010000     ..........a0....
400110e4:	00000100                                ....

400110e8 <CyFxUSBDeviceQualDscr>:
400110e8:	0200060a 400102ef 00000001              .......@....

400110f4 <CyFxUSBFSConfigDscr>:
400110f4:	00090209 80000100 00000032              ........2...

40011100 <CyFxUSBHSConfigDscr>:
40011100:	00dd0209 80000102 000b08fa 00030e02     ................
40011110:	00040900 010e0100 240d0000 50010001     ...........$...P
40011120:	6cf71000 12010104 01010224 00000002     ...l....$.......
40011130:	00000000 059e0300 05240c00 02580102     ..........$...X.
40011140:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40011150:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40011160:	03240900 00010104 05070003 04000382     ..$.............
40011170:	03250501 04090040 0e010001 0e000002     ..%.@...........
40011180:	57010124 04008300 01010102 04241b00     $..W..........$.
40011190:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
400111a0:	0110719b 00000608 0105241e 1c03c002     .q.......$......
400111b0:	d4e00002 d4e0000e 0fd2000e 05161500     ................
400111c0:	16150100 240a0005 c0010003 00021c03     .......$........
400111d0:	000d2406 05070000 02000283 00000001     .$..............

400111e0 <CyFxUSBBOSDscr>:
400111e0:	00160f05 02100702 00000000 0003100a     ................
400111f0:	0003000e 00000000                       ........

400111f8 <CyFxUSBSSConfigDscr>:
400111f8:	01250209 80000102 000b0864 00030e02     ..%.....d.......
40011208:	00040900 010e0100 240d0000 50010001     ...........$...P
40011218:	b8d80000 12010105 01010224 00000002     ........$.......
40011228:	00000000 00000300 05240c00 02580102     ..........$...X.
40011238:	00041103 06241c00 57ca7a03 5b1aa337     ......$..z.W7..[
40011248:	8e8d9649 76961f36 02010b50 00860403     I...6..vP.......
40011258:	03240900 00010104 05070003 04000382     ..$.............
40011268:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40011278:	00020e01 01240e00 83009301 01020400     ......$.........
40011288:	1b000101 03010424 32595559 00100000     ....$...YUY2....
40011298:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
400112a8:	20020105 0007980a 00317040 004814d0     ... ....@p1...H.
400112b8:	2a0099c6 01000a2c 000a2c2a 0205241e     ...*,...*,...$..
400112c8:	38078002 70400004 26280031 1fa40084     ...8..@p1.(&....
400112d8:	05161500 16150100 241e0005 00020305     ...........$....
400112e8:	0002d005 00317040 004814d0 0a0099c6     ....@p1...H.....
400112f8:	0100028b 00028b0a 0003240a 980a2001     .........$... ..
40011308:	24060007 0000000d 02830507 06010400     ...$............
40011318:	00000f30 00000000                       0.......

40011320 <CyFxUSBStringLangIDDscr>:
40011320:	04090304                                ....

40011324 <CyFxUSBManufactureDscr>:
40011324:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40011334:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40011344:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40011354:	006f0069 0073006e                       i.o.n.s.

4001135c <CyFxUSBProductDscr>:
4001135c:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
4001136c:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
4001137c:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
4001138c:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
4001139c:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
400113ac:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
400113bc:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
400113cc:	64612065 73657264 73692073 746f6e20     e address is not
400113dc:	6c617620 0a216469 00000000 736e6573      valid!.....sens
400113ec:	7720726f 65746972 30284232 64252029     or write2B(0) %d
400113fc:	20642520 0a0d6425 00000000 4f525245      %d %d......ERRO
4001140c:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
4001141c:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
4001142c:	74655320 6c615620 45206575 726f7272      Set Value Error
4001143c:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
4001144c:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
4001145c:	0a0d6575 00000000 20656854 6b636974     ue......The tick
4001146c:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
4001147c:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
4001148c:	44492072 69616620 2164656c 00000a0d     r ID failed!....
4001149c:	20656854 20746547 746e6f63 206c6f72     The Get control 
400114ac:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
400114bc:	20656854 20746553 746e6f63 206c6f72     The Set control 
400114cc:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
400114dc:	00000a0d                                ....

400114e0 <ExTime>:
400114e0:	004e009c 00140027 0005000a 00010002     ..N.'...........

400114f0 <CyFxGpifConfig>:
400114f0:	0000000f 4003068c 400307ac 00000005     .......@...@....
40011500:	40030680 0000004c 400307bc              ...@L......@

4001150c <CyFxGpifConfig_usb2>:
4001150c:	00000093 400308fc 40030aac 00000008     .......@...@....
4001151c:	400308ec 0000004c 40030b40 20433249     ...@L...@..@I2C 
4001152c:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
4001153c:	20656854 6d6d6f63 20646e61 75657571     The command queu
4001154c:	73692065 61657220 25207964 64252064     e is ready %d %d
4001155c:	00000a0d 45534552 6e652054 6e756f63     ....RESET encoun
4001156c:	65726574 2e2e2e64 78257830 25783020     tered...0x%x 0x%
4001157c:	000a0d78 50535553 20444e45 6f636e65     x...SUSPEND enco
4001158c:	65746e75 2e646572 78302e2e 30207825     untered...0x%x 0
4001159c:	0d782578 0000000a 20425355 63736964     x%x.....USB disc
400115ac:	656e6e6f 64657463 302e2e2e 20782578     onnected...0x%x 
400115bc:	78257830 00000a0d 6f727245 6e692072     0x%x....Error in
400115cc:	6c756d20 68636974 656e6e61 6d6f636c      multichannelcom
400115dc:	6274696d 65666675 29312872 6f43203a     mitbuffer(1): Co
400115ec:	3d206564 2c642520 7a697320 203d2065     de = %d, size = 
400115fc:	202c7825 44616d64 20656e6f 25206425     %x, dmaDone %d %
4001160c:	000a0d64 20746553 465f5943 56555f58     d...Set CY_FX_UV
4001161c:	49565f43 5f4f4544 544e4f43 5f4c4f52     C_VIDEO_CONTROL_
4001162c:	55514552 5f545345 4e455645 61462054     REQUEST_EVENT Fa
4001163c:	64656c69 0a782520 00000000 20746553     iled %x.....Set 
4001164c:	465f5943 56555f58 49565f43 5f4f4544     CY_FX_UVC_VIDEO_
4001165c:	45525453 525f4d41 45555145 455f5453     STREAM_REQUEST_E
4001166c:	544e4556 69614620 2064656c 000a7825     VENT Failed %x..
4001167c:	65746c41 74616e72 65732065 6e697474     Alternate settin
4001168c:	2e302067 000a0d2e 61656c43 65662072     g 0.....Clear fe
4001169c:	72757461 65722065 73657571 65642074     ature request de
400116ac:	74636574 2e2e6465 00000a0d 63200a0d     tected........ c
400116bc:	696d6d6f 666f6574 61747320 3d206574     ommiteof state =
400116cc:	00642520 6e616843 206c656e 20746553      %d.Channel Set 
400116dc:	70617257 66207055 656c6961 45202c64     WrapUp failed, E
400116ec:	726f7272 646f6320 203d2065 0a0d6425     rror code = %d..
400116fc:	00000000 6f727245 61682072 656c646e     ....Error handle
4001170c:	2e2e2e72 00000a0d 6d6d6f43 45207469     r.......Commit E
4001171c:	6620464f 656c6961 0a0d2164 00000000     OF failed!......
4001172c:	20656854 20433249 6d6d6f63 20646e61     The I2C command 
4001173c:	30207369 20782578 78257830 25783020     is 0x%x 0x%x 0x%
4001174c:	78302078 30207825 20782578 78257830     x 0x%x 0x%x 0x%x
4001175c:	25783020 78302078 30207825 20782578      0x%x 0x%x 0x%x 
4001176c:	78257830 25783020 000a0d78 20656854     0x%x 0x%x...The 
4001177c:	20433249 6d6d6f63 20646e61 74746573     I2C command sett
4001178c:	20676e69 756c6176 78252065 0d782520     ing value %x %x.
4001179c:	0000000a 6b636162 67696c20 63207468     ....back light c
400117ac:	65706d6f 7461736e 206e6f69 74746573     ompensation sett
400117bc:	20676e69 6e207369 6320746f 6572726f     ing is not corre
400117cc:	202e7463 25206425 000a0d64 20656854     ct. %d %d...The 
400117dc:	20433249 72727563 20746e65 61746164     I2C current data
400117ec:	20736920 20746f6e 69617661 6c62616c      is not availabl
400117fc:	74202e65 61207972 6e696167 6425202e     e. try again. %d
4001180c:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
4001181c:	6e657320 6f742074 736f6820 25202e74      sent to host. %
4001182c:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
4001183c:	4d707845 43474126 746f6720 206e6574     ExpM&AGC gotten 
4001184c:	6d6f7266 736f6820 25202e74 64252064     from host. %d %d
4001185c:	6425203b 0d642520 0000000a 20656854     ; %d %d.....The 
4001186c:	20746567 61746164 6f726620 6f68206d     get data from ho
4001187c:	66207473 206c6961 6f727265 6f632072     st fail error co
4001188c:	25206564 0a0d2e64 00000000 20656854     de %d.......The 
4001189c:	75716552 20747365 78257830 72617020     Request 0x%x par
400118ac:	74656d61 67207265 66207465 206d6f72     ameter get from 
400118bc:	74736f68 25783020 78302078 2f207825     host 0x%x 0x%x /
400118cc:	6e657320 6f742064 736f6820 78302074      send to host 0x
400118dc:	30207825 0d782578 0000000a 6d6f6f5a     %x 0x%x.....Zoom
400118ec:	20704f20 65636572 73657669 54432820      Op receives (CT
400118fc:	78302029 30207825 20782578 78257830     ) 0x%x 0x%x 0x%x
4001190c:	00000a0d 61666564 20746c75 656c6573     ....default sele
4001191c:	726f7463 54432820 78302029 30207825     ctor (CT) 0x%x 0
4001192c:	0d782578 0000000a 61666564 20746c75     x%x.....default 
4001193c:	75716572 20747365 29544328 25783020     request (CT) 0x%
4001194c:	78302078 0a0d7825 00000000 20656854     x 0x%x......The 
4001195c:	75716552 20747365 78257830 72617020     Request 0x%x par
4001196c:	74656d61 67207265 66207465 206d6f72     ameter get from 
4001197c:	74736f68 54432820 78302029 30207825     host (CT) 0x%x 0
4001198c:	20782578 78257830 73202f20 20646e65     x%x 0x%x / send 
4001199c:	68206f74 2074736f 78257830 25783020     to host 0x%x 0x%
400119ac:	78302078 202c7825 0a0d6425 00000000     x 0x%x, %d......
400119bc:	20425355 65657073 203d2064 65206425     USB speed = %d e
400119cc:	666e6576 2067616c 7830203d 62207825     venflag = 0x%x b
400119dc:	7165526d 65707954 30203d20 0d782578     mReqType = 0x%x.
400119ec:	6552620a 73657571 203d2074 78257830     .bRequest = 0x%x
400119fc:	61567720 2065756c 7830203d 77207825      wValue = 0x%x w
40011a0c:	65646e49 203d2078 78257830 654c7720     Index = 0x%x wLe
40011a1c:	6874676e 30203d20 20782578 6c667369     ngth = 0x%x isfl
40011a2c:	30206761 0d782578 0000000a 20656854     ag 0x%x.....The 
40011a3c:	61666564 20746c75 75746573 65722070     default setup re
40011a4c:	73657571 61762074 2065756c 78257830     quest value 0x%x
40011a5c:	25783020 000a0d78 65646976 7473206f      0x%x...video st
40011a6c:	6d616572 54454720 71657220 74736575     ream GET request
40011a7c:	646f4320 25203a65 0a202c64 00000000      Code: %d, .....
40011a8c:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
40011a9c:	4d414552 4556455f 6620544e 656c6961     REAM_EVENT faile
40011aac:	78252064 0000000a 20746547 20435655     d %x....Get UVC 
40011abc:	6c697473 7250206c 7328626f 20297465     still Prob(set) 
40011acc:	746e6f63 206c6f72 25206425 64252064     control %d %d %d
40011adc:	00000a0d 20435655 6c697473 6f63206c     ....UVC still co
40011aec:	74696d6d 6e6f6320 6c6f7274 74657320     mmit control set
40011afc:	20642520 25206425 000a0d64 20746547      %d %d %d...Get 
40011b0c:	20435655 6c697473 7274206c 65676769     UVC still trigge
40011b1c:	6f632072 6f72746e 6425206c 20642520     r control %d %d 
40011b2c:	0a0d6425 00000000 20435655 6c697473     %d......UVC stil
40011b3c:	7274206c 65676769 6f632072 6f72746e     l trigger contro
40011b4c:	6166206c 25206c69 64252064 00000a0d     l fail %d %d....
40011b5c:	6c696146 74206465 6573206f 6920646e     Failed to send i
40011b6c:	7265746e 74707572 61747320 2c737574     nterrupt status,
40011b7c:	72724520 6320726f 2065646f 6425203d      Error code = %d
40011b8c:	00000a0d 20656854 20746573 20666564     ....The set def 
40011b9c:	61746164 25783020 30202c78 2e782578     data 0x%x, 0x%x.
40011bac:	00000a0d 20656854 20746573 20666564     ....The set def 
40011bbc:	61746164 25783020 30202c78 2c782578     data 0x%x, 0x%x,
40011bcc:	25783020 30202c78 2c782578 25783020      0x%x, 0x%x, 0x%
40011bdc:	30202c78 2e782578 00000a0d 54524155     x, 0x%x.....UART
40011bec:	696e6920 6c616974 74617a69 206e6f69      initialization 
40011bfc:	6c696166 0a216465 00000000 20433249     failed!.....I2C 
40011c0c:	74696e69 696c6169 6974617a 66206e6f     initialization f
40011c1c:	656c6961 000a2164 20433249 666e6f63     ailed!..I2C conf
40011c2c:	72756769 6f697461 6166206e 64656c69     iguration failed
40011c3c:	00000a21 20435655 61657243 45206574     !...UVC Create E
40011c4c:	746e6576 69616620 2c64656c 72724520     vent failed, Err
40011c5c:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011c6c:	4f495047 696e4920 61662074 64656c69     GPIO Init failed
40011c7c:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011c8c:	00000a64 4f495047 65764f20 64697272     d...GPIO Overrid
40011c9c:	61662065 64656c69 7245202c 20726f72     e failed, Error 
40011cac:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011cbc:	29303228 65764f20 64697272 61662065     (20) Override fa
40011ccc:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011cdc:	25203d20 00000a64 4f495047 29343228      = %d...GPIO(24)
40011cec:	65764f20 64697272 61662065 64656c69      Override failed
40011cfc:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011d0c:	00000a64 4f495047 74655320 65722820     d...GPIO Set (re
40011d1c:	20746573 20293232 666e6f43 45206769     set 22) Config E
40011d2c:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
40011d3c:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
40011d4c:	6f702820 20726577 20293032 666e6f43      (power 20) Conf
40011d5c:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011d6c:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011d7c:	74655320 6e732820 73207061 20746f68      Set (snap shot 
40011d8c:	20293432 666e6f43 45206769 726f7272     24) Config Error
40011d9c:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011dac:	00000a64 20424950 636e7546 6e6f6974     d...PIB Function
40011dbc:	69614620 2064656c 53206f74 74726174      Failed to Start
40011dcc:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011ddc:	00000a64 20425355 636e7546 6e6f6974     d...USB Function
40011dec:	69614620 2064656c 53206f74 74726174      Failed to Start
40011dfc:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011e0c:	00000a64 20425355 20746553 70646e45     d...USB Set Endp
40011e1c:	746e696f 6e6f6320 20676966 6c696166     oint config fail
40011e2c:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011e3c:	0a642520 00000000 20414d44 65746e49      %d.....DMA Inte
40011e4c:	70757272 74532074 73757461 61684320     rrupt Status Cha
40011e5c:	6c656e6e 65724320 6f697461 6146206e     nnel Creation Fa
40011e6c:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011e7c:	25203d20 00000a64 6c696146 74206465      = %d...Failed t
40011e8c:	6c61206f 61636f6c 6d206574 726f6d65     o allocate memor
40011e9c:	6f662079 6e692072 72726574 20747075     y for interrupt 
40011eac:	74617473 62207375 65666675 000a0d72     status buffer...
40011ebc:	20414d44 6e616843 206c656e 61657243     DMA Channel Crea
40011ecc:	6e6f6974 69614620 2c64656c 72724520     tion Failed, Err
40011edc:	4320726f 2065646f 6425203d 0000000a     or Code = %d....
40011eec:	20425355 6e6e6f43 20746365 6c696166     USB Connect fail
40011efc:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011f0c:	0a642520 00000000 20414d44 6e616843      %d.....DMA Chan
40011f1c:	206c656e 65736552 61462074 64656c69     nel Reset Failed
40011f2c:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011f3c:	00000a64 20414d44 6e616843 206c656e     d...DMA Channel 
40011f4c:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011f5c:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011f6c:	6425203d 0000000a 20414d44 6e616843     = %d....DMA Chan
40011f7c:	206c656e 20746553 6e617254 72656673     nel Set Transfer
40011f8c:	69614620 2c64656c 72724520 4320726f      Failed, Error C
40011f9c:	2065646f 6425203d 00000a0d 73200a0d     ode = %d...... s
40011fac:	72657075 69706720 00000066 68200a0d     uper gpif..... h
40011fbc:	20686769 66697067 00000000 64616f4c     igh gpif....Load
40011fcc:	20676e69 46495047 6e6f4320 75676966     ing GPIF Configu
40011fdc:	69746172 66206e6f 656c6961 45202c64     ration failed, E
40011fec:	726f7272 646f4320 203d2065 0a0d6425     rror Code = %d..
40011ffc:	00000000 72617453 676e6974 49504720     ....Starting GPI
4001200c:	74732046 20657461 6863616d 20656e69     F state machine 
4001201c:	6c696166 202c6465 6f727245 6f432072     failed, Error Co
4001202c:	3d206564 0d642520 0000000a 553a3033     de = %d.....30:U
4001203c:	41204356 54207070 61657268 00000064     VC App Thread...
4001204c:	553a3133 41204356 45207070 54203050     31:UVC App EP0 T
4001205c:	61657268 00000064 493a3233 41204332     hread...32:I2C A
4001206c:	43207070 204c5254 65726854 00006461     pp CTRL Thread..

4001207c <glFx3PartProperties>:
4001207c:	00000000 0000009f 00000010 0000009b     ................
4001208c:	00000020 0000008f 00000030 0000008b      .......0.......
4001209c:	00000004 000000ef 00000104 000000ef     ................
400120ac:	00000184 000000af 00000154 000000e9     ........T.......
400120bc:	000001d4 000000a9 10000004 000000ee     ................
400120cc:	10000104 000000ee 10000184 000000ae     ................
400120dc:	10000154 000000e8 100001d4 000000a8     T...............
400120ec:	00000002 00000077 00000102 00000077     ....w.......w...
400120fc:	000001c2 00000035 000001d2 00000031     ....5.......1...
4001210c:	10000002 00000076 10000102 00000076     ....v.......v...
4001211c:	100001c2 00000034 00000258 00000199     ....4...X.......
4001212c:	00000248 0000019d 00000458 00000299     H.......X.......
4001213c:	00000448 0000029d 00000848 0000049d     H.......H.......
4001214c:	10000448 0000029c                       H.......

40012154 <glPmmcCsdValue>:
40012154:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40012164 <glPmmcExtCsdValue>:
40012164:	40040000 03020200 00000404 32321414     ...@..........22
40012174:	00406464 00000000                       dd@.....

4001217c <glConstGpifDefaults>:
4001217c:	00000220 00000000 00000000 00000000      ...............
4001218c:	000f0000 00000000 00000000 00000082     ................
4001219c:	00000782 00000000 00000000 00000000     ................
	...
400121f0:	00000006 00000000 0000ffff 0000010a     ................
40012200:	00000000 0000ffff 00000000 0000ffff     ................
40012210:	0000010a 00000000 0000ffff 00000000     ................
	...
40012278:	00010400 00010400 00010400 00010400     ................
40012288:	10000000 00000000 00000000 00000000     ................
	...
400122a8:	00000001                                ....

400122ac <glGpifConstMaxState>:
400122ac:	1f3f7fff                                ..?.

400122b0 <CyU3PSSEpTypeMap>:
400122b0:	01020003                                ....

400122b4 <glUsbMaxPacketSize>:
400122b4:	000003ff 00000040 00000040 00000400     ....@...@.......
400122c4:	00000200 00000400 00000400 00000400     ................
400122d4:	00000400                                ....

400122d8 <glUsb3CompliancePatterns>:
400122d8:	00000600 0000044a 00000478 000005bc     ....J...x.......
400122e8:	00000c00 000005fc 000001fc 00001400     ................
400122f8:	00001000                                ....

400122fc <CyU3PFirmwareEntry>:
400122fc:	e59f1038 	ldr	r1, [pc, #56]	; 4001233c <CyU3PFirmwareEntry+0x40>
40012300:	e3e00000 	mvn	r0, #0
40012304:	e5810000 	str	r0, [r1]
40012308:	e59f1030 	ldr	r1, [pc, #48]	; 40012340 <CyU3PFirmwareEntry+0x44>
4001230c:	e2411008 	sub	r1, r1, #8
40012310:	e3a02a01 	mov	r2, #4096	; 0x1000
40012314:	e3a000d3 	mov	r0, #211	; 0xd3
40012318:	e121f000 	msr	CPSR_c, r0
4001231c:	e0811002 	add	r1, r1, r2
40012320:	e3c11007 	bic	r1, r1, #7
40012324:	e1a0d001 	mov	sp, r1
40012328:	eb000271 	bl	40012cf4 <CyU3PSysSetupMMU>
4001232c:	eb000620 	bl	40013bb4 <CyU3PSysCheckBootState>
40012330:	eb000003 	bl	40012344 <CyU3PSetupStackPtrs>
40012334:	eb0000d1 	bl	40012680 <__CyU3PEntryKeep>
40012338:	eaffc4ac 	b	400035f0 <CyU3PToolChainInit>
4001233c:	fffff014 	.word	0xfffff014
40012340:	40002000 	.word	0x40002000

40012344 <CyU3PSetupStackPtrs>:
40012344:	e3a01201 	mov	r1, #268435456	; 0x10000000
40012348:	e2411008 	sub	r1, r1, #8
4001234c:	e3a02b02 	mov	r2, #2048	; 0x800
40012350:	e3a030df 	mov	r3, #223	; 0xdf
40012354:	e12ff003 	msr	CPSR_fsxc, r3
40012358:	e0811002 	add	r1, r1, r2
4001235c:	e3c11007 	bic	r1, r1, #7
40012360:	e1a0d001 	mov	sp, r1
40012364:	e3a0a000 	mov	sl, #0
40012368:	e3a0b000 	mov	fp, #0
4001236c:	e3a02c01 	mov	r2, #256	; 0x100
40012370:	e3a030d7 	mov	r3, #215	; 0xd7
40012374:	e12ff003 	msr	CPSR_fsxc, r3
40012378:	e0811002 	add	r1, r1, r2
4001237c:	e3c11007 	bic	r1, r1, #7
40012380:	e1a0d001 	mov	sp, r1
40012384:	e3a0a000 	mov	sl, #0
40012388:	e3a0b000 	mov	fp, #0
4001238c:	e3a02c01 	mov	r2, #256	; 0x100
40012390:	e3a030db 	mov	r3, #219	; 0xdb
40012394:	e12ff003 	msr	CPSR_fsxc, r3
40012398:	e0811002 	add	r1, r1, r2
4001239c:	e3c11007 	bic	r1, r1, #7
400123a0:	e1a0d001 	mov	sp, r1
400123a4:	e3a0a000 	mov	sl, #0
400123a8:	e3a0b000 	mov	fp, #0
400123ac:	e3a02c02 	mov	r2, #512	; 0x200
400123b0:	e3a000d1 	mov	r0, #209	; 0xd1
400123b4:	e121f000 	msr	CPSR_c, r0
400123b8:	e0811002 	add	r1, r1, r2
400123bc:	e3c11007 	bic	r1, r1, #7
400123c0:	e1a0d001 	mov	sp, r1
400123c4:	e3a0a000 	mov	sl, #0
400123c8:	e3a0b000 	mov	fp, #0
400123cc:	e3a02b01 	mov	r2, #1024	; 0x400
400123d0:	e3a000d2 	mov	r0, #210	; 0xd2
400123d4:	e121f000 	msr	CPSR_c, r0
400123d8:	e0811002 	add	r1, r1, r2
400123dc:	e3c11007 	bic	r1, r1, #7
400123e0:	e1a0d001 	mov	sp, r1
400123e4:	e3a02a01 	mov	r2, #4096	; 0x1000
400123e8:	e3a000d3 	mov	r0, #211	; 0xd3
400123ec:	e121f000 	msr	CPSR_c, r0
400123f0:	e0811002 	add	r1, r1, r2
400123f4:	e3c11007 	bic	r1, r1, #7
400123f8:	e1a0d001 	mov	sp, r1
400123fc:	e12fff1e 	bx	lr

40012400 <CyU3PSysCleanDCache>:
40012400:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40012404:	1afffffd 	bne	40012400 <CyU3PSysCleanDCache>
40012408:	e12fff1e 	bx	lr

4001240c <CyU3PSysClearDCache>:
4001240c:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40012410:	1afffffd 	bne	4001240c <CyU3PSysClearDCache>
40012414:	e12fff1e 	bx	lr

40012418 <CyU3PSysFlushIRegion>:
40012418:	e3510000 	cmp	r1, #0
4001241c:	0a00000a 	beq	4001244c <CyU3PSysFlushIRegion+0x34>
40012420:	e0801001 	add	r1, r0, r1
40012424:	e3c0001f 	bic	r0, r0, #31
40012428:	e3a0201f 	mov	r2, #31
4001242c:	e1110002 	tst	r1, r2
40012430:	e0411000 	sub	r1, r1, r0
40012434:	e1a012a1 	lsr	r1, r1, #5
40012438:	12811001 	addne	r1, r1, #1
4001243c:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40012440:	e2800020 	add	r0, r0, #32
40012444:	e2511001 	subs	r1, r1, #1
40012448:	1afffffb 	bne	4001243c <CyU3PSysFlushIRegion+0x24>
4001244c:	e12fff1e 	bx	lr

40012450 <CyU3PSysClearDRegion>:
40012450:	e3510000 	cmp	r1, #0
40012454:	0a00000a 	beq	40012484 <CyU3PSysClearDRegion+0x34>
40012458:	e0801001 	add	r1, r0, r1
4001245c:	e3c0001f 	bic	r0, r0, #31
40012460:	e3a0201f 	mov	r2, #31
40012464:	e1110002 	tst	r1, r2
40012468:	e0411000 	sub	r1, r1, r0
4001246c:	e1a012a1 	lsr	r1, r1, #5
40012470:	12811001 	addne	r1, r1, #1
40012474:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40012478:	e2800020 	add	r0, r0, #32
4001247c:	e2511001 	subs	r1, r1, #1
40012480:	1afffffb 	bne	40012474 <CyU3PSysClearDRegion+0x24>
40012484:	e12fff1e 	bx	lr

40012488 <CyU3PSysCleanDRegion>:
40012488:	e3510000 	cmp	r1, #0
4001248c:	0a00000a 	beq	400124bc <CyU3PSysCleanDRegion+0x34>
40012490:	e0801001 	add	r1, r0, r1
40012494:	e3c0001f 	bic	r0, r0, #31
40012498:	e3a0201f 	mov	r2, #31
4001249c:	e1110002 	tst	r1, r2
400124a0:	e0411000 	sub	r1, r1, r0
400124a4:	e1a012a1 	lsr	r1, r1, #5
400124a8:	12811001 	addne	r1, r1, #1
400124ac:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
400124b0:	e2800020 	add	r0, r0, #32
400124b4:	e2511001 	subs	r1, r1, #1
400124b8:	1afffffb 	bne	400124ac <CyU3PSysCleanDRegion+0x24>
400124bc:	e12fff1e 	bx	lr

400124c0 <CyU3PSysFlushDRegion>:
400124c0:	e3510000 	cmp	r1, #0
400124c4:	0a00000a 	beq	400124f4 <CyU3PSysFlushDRegion+0x34>
400124c8:	e0801001 	add	r1, r0, r1
400124cc:	e3c0001f 	bic	r0, r0, #31
400124d0:	e3a0201f 	mov	r2, #31
400124d4:	e1110002 	tst	r1, r2
400124d8:	e0411000 	sub	r1, r1, r0
400124dc:	e1a012a1 	lsr	r1, r1, #5
400124e0:	12811001 	addne	r1, r1, #1
400124e4:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
400124e8:	e2800020 	add	r0, r0, #32
400124ec:	e2511001 	subs	r1, r1, #1
400124f0:	1afffffb 	bne	400124e4 <CyU3PSysFlushDRegion+0x24>
400124f4:	e12fff1e 	bx	lr

400124f8 <CyU3PSysCacheIRegion>:
400124f8:	e3a03000 	mov	r3, #0
400124fc:	e3510000 	cmp	r1, #0
40012500:	0a000023 	beq	40012594 <CyU3PSysCacheIRegion+0x9c>
40012504:	e0801001 	add	r1, r0, r1
40012508:	e3c0001f 	bic	r0, r0, #31
4001250c:	e3a0201f 	mov	r2, #31
40012510:	e1110002 	tst	r1, r2
40012514:	e0411000 	sub	r1, r1, r0
40012518:	e1a012a1 	lsr	r1, r1, #5
4001251c:	12811001 	addne	r1, r1, #1
40012520:	e351003f 	cmp	r1, #63	; 0x3f
40012524:	8a00001a 	bhi	40012594 <CyU3PSysCacheIRegion+0x9c>
40012528:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
4001252c:	e20c200f 	and	r2, ip, #15
40012530:	e3a03001 	mov	r3, #1
40012534:	e11c0003 	tst	ip, r3
40012538:	11a03083 	lslne	r3, r3, #1
4001253c:	111c0003 	tstne	ip, r3
40012540:	11a03083 	lslne	r3, r3, #1
40012544:	111c0003 	tstne	ip, r3
40012548:	11a03083 	lslne	r3, r3, #1
4001254c:	1a000010 	bne	40012594 <CyU3PSysCacheIRegion+0x9c>
40012550:	e3510000 	cmp	r1, #0
40012554:	0a00000e 	beq	40012594 <CyU3PSysCacheIRegion+0x9c>
40012558:	e1e03003 	mvn	r3, r3
4001255c:	e203300f 	and	r3, r3, #15
40012560:	e3ccc00f 	bic	ip, ip, #15
40012564:	e08cc003 	add	ip, ip, r3
40012568:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
4001256c:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012570:	e2800020 	add	r0, r0, #32
40012574:	e2511001 	subs	r1, r1, #1
40012578:	1afffffb 	bne	4001256c <CyU3PSysCacheIRegion+0x74>
4001257c:	e1e0300c 	mvn	r3, ip
40012580:	e203300f 	and	r3, r3, #15
40012584:	e1822003 	orr	r2, r2, r3
40012588:	e3ccc00f 	bic	ip, ip, #15
4001258c:	e00cc002 	and	ip, ip, r2
40012590:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
40012594:	e1a00003 	mov	r0, r3
40012598:	e12fff1e 	bx	lr

4001259c <CyU3PSysCacheDRegion>:
4001259c:	e3a03000 	mov	r3, #0
400125a0:	e3510000 	cmp	r1, #0
400125a4:	0a000022 	beq	40012634 <CyU3PSysCacheDRegion+0x98>
400125a8:	e0801001 	add	r1, r0, r1
400125ac:	e3c0001f 	bic	r0, r0, #31
400125b0:	e3a0201f 	mov	r2, #31
400125b4:	e1110002 	tst	r1, r2
400125b8:	e0411000 	sub	r1, r1, r0
400125bc:	e1a012a1 	lsr	r1, r1, #5
400125c0:	12811001 	addne	r1, r1, #1
400125c4:	e351003f 	cmp	r1, #63	; 0x3f
400125c8:	8a000019 	bhi	40012634 <CyU3PSysCacheDRegion+0x98>
400125cc:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
400125d0:	e20c200f 	and	r2, ip, #15
400125d4:	e3a03001 	mov	r3, #1
400125d8:	e11c0003 	tst	ip, r3
400125dc:	11a03083 	lslne	r3, r3, #1
400125e0:	111c0003 	tstne	ip, r3
400125e4:	11a03083 	lslne	r3, r3, #1
400125e8:	111c0003 	tstne	ip, r3
400125ec:	11a03083 	lslne	r3, r3, #1
400125f0:	1a00000f 	bne	40012634 <CyU3PSysCacheDRegion+0x98>
400125f4:	e3510000 	cmp	r1, #0
400125f8:	0a00000d 	beq	40012634 <CyU3PSysCacheDRegion+0x98>
400125fc:	e1e03003 	mvn	r3, r3
40012600:	e203300f 	and	r3, r3, #15
40012604:	e3ccc00f 	bic	ip, ip, #15
40012608:	e08cc003 	add	ip, ip, r3
4001260c:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
40012610:	e4903020 	ldr	r3, [r0], #32
40012614:	e2511001 	subs	r1, r1, #1
40012618:	1afffffc 	bne	40012610 <CyU3PSysCacheDRegion+0x74>
4001261c:	e1e0300c 	mvn	r3, ip
40012620:	e203300f 	and	r3, r3, #15
40012624:	e1822003 	orr	r2, r2, r3
40012628:	e3ccc00f 	bic	ip, ip, #15
4001262c:	e00cc002 	and	ip, ip, r2
40012630:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
40012634:	e1a00003 	mov	r0, r3
40012638:	e12fff1e 	bx	lr

4001263c <CyU3PSysUnlockICache>:
4001263c:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012640:	e3c0000f 	bic	r0, r0, #15
40012644:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

40012648 <CyU3PSysUnlockDCache>:
40012648:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
4001264c:	e3c0000f 	bic	r0, r0, #15
40012650:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

40012654 <__cyu3p_exception_vectors>:
40012654:	e59ff028 	ldr	pc, [pc, #40]	; 40012684 <__CyU3PEntryKeep+0x4>
40012658:	e59ff028 	ldr	pc, [pc, #40]	; 40012688 <__CyU3PEntryKeep+0x8>
4001265c:	e59ff028 	ldr	pc, [pc, #40]	; 4001268c <__CyU3PEntryKeep+0xc>
40012660:	e59ff028 	ldr	pc, [pc, #40]	; 40012690 <__CyU3PEntryKeep+0x10>
40012664:	e59ff028 	ldr	pc, [pc, #40]	; 40012694 <__CyU3PEntryKeep+0x14>
40012668:	e59ff028 	ldr	pc, [pc, #40]	; 40012698 <__CyU3PEntryKeep+0x18>
4001266c:	e51ff120 	ldr	pc, [pc, #-288]	; 40012554 <CyU3PSysCacheIRegion+0x5c>
40012670:	e59ff024 	ldr	pc, [pc, #36]	; 4001269c <__CyU3PEntryKeep+0x1c>

40012674 <__CyU3PSWIHandler>:
40012674:	eafffffe 	b	40012674 <__CyU3PSWIHandler>

40012678 <__CyU3PReservedHandler>:
40012678:	eafffffe 	b	40012678 <__CyU3PReservedHandler>

4001267c <__CyU3PFiqHandler>:
4001267c:	eafffffe 	b	4001267c <__CyU3PFiqHandler>

40012680 <__CyU3PEntryKeep>:
40012680:	e12fff1e 	bx	lr
40012684:	400122fc 	.word	0x400122fc
40012688:	40003618 	.word	0x40003618
4001268c:	40012674 	.word	0x40012674
40012690:	4000361c 	.word	0x4000361c
40012694:	40003620 	.word	0x40003620
40012698:	40012678 	.word	0x40012678
4001269c:	4001267c 	.word	0x4001267c

Disassembly of section i.CyU3PDevCheckDevStateStruct:

400126a0 <CyU3PDevCheckDevStateStruct>:
400126a0:	e92d4038 	push	{r3, r4, r5, lr}
400126a4:	e59f4118 	ldr	r4, [pc, #280]	; 400127c4 <_etext+0x124>
400126a8:	e3a00000 	mov	r0, #0
400126ac:	e58d0000 	str	r0, [sp]
400126b0:	e5940000 	ldr	r0, [r4]
400126b4:	e59f110c 	ldr	r1, [pc, #268]	; 400127c8 <_etext+0x128>
400126b8:	e1500001 	cmp	r0, r1
400126bc:	0a000000 	beq	400126c4 <CyU3PDevCheckDevStateStruct+0x24>
400126c0:	ea00003b 	b	400127b4 <CyU3PDevCheckDevStateStruct+0x114>
400126c4:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400126c8:	e59f10fc 	ldr	r1, [pc, #252]	; 400127cc <_etext+0x12c>
400126cc:	e1500001 	cmp	r0, r1
400126d0:	1a000005 	bne	400126ec <CyU3PDevCheckDevStateStruct+0x4c>
400126d4:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
400126d8:	e59f10f0 	ldr	r1, [pc, #240]	; 400127d0 <_etext+0x130>
400126dc:	e1500001 	cmp	r0, r1
400126e0:	3a000001 	bcc	400126ec <CyU3PDevCheckDevStateStruct+0x4c>
400126e4:	e594500c 	ldr	r5, [r4, #12]
400126e8:	ea000001 	b	400126f4 <CyU3PDevCheckDevStateStruct+0x54>
400126ec:	e594000c 	ldr	r0, [r4, #12]
400126f0:	e20050ff 	and	r5, r0, #255	; 0xff
400126f4:	e594000c 	ldr	r0, [r4, #12]
400126f8:	e3500000 	cmp	r0, #0
400126fc:	0a000003 	beq	40012710 <CyU3PDevCheckDevStateStruct+0x70>
40012700:	e594000c 	ldr	r0, [r4, #12]
40012704:	e59f10c8 	ldr	r1, [pc, #200]	; 400127d4 <_etext+0x134>
40012708:	e1500001 	cmp	r0, r1
4001270c:	9a000000 	bls	40012714 <CyU3PDevCheckDevStateStruct+0x74>
40012710:	ea000027 	b	400127b4 <CyU3PDevCheckDevStateStruct+0x114>
40012714:	e1a0200d 	mov	r2, sp
40012718:	e1a01005 	mov	r1, r5
4001271c:	e59f00a0 	ldr	r0, [pc, #160]	; 400127c4 <_etext+0x124>
40012720:	eb00049f 	bl	400139a4 <CyU3PComputeChecksum>
40012724:	e594000c 	ldr	r0, [r4, #12]
40012728:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
4001272c:	e2800a02 	add	r0, r0, #8192	; 0x2000
40012730:	e5900000 	ldr	r0, [r0]
40012734:	e59d1000 	ldr	r1, [sp]
40012738:	e1500001 	cmp	r0, r1
4001273c:	0a000000 	beq	40012744 <CyU3PDevCheckDevStateStruct+0xa4>
40012740:	ea00001b 	b	400127b4 <CyU3PDevCheckDevStateStruct+0x114>
40012744:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012748:	e59f107c 	ldr	r1, [pc, #124]	; 400127cc <_etext+0x12c>
4001274c:	e1500001 	cmp	r0, r1
40012750:	0a000001 	beq	4001275c <CyU3PDevCheckDevStateStruct+0xbc>
40012754:	e59f007c 	ldr	r0, [pc, #124]	; 400127d8 <_etext+0x138>
40012758:	e58400dc 	str	r0, [r4, #220]	; 0xdc
4001275c:	e3a00001 	mov	r0, #1
40012760:	e59f1074 	ldr	r1, [pc, #116]	; 400127dc <_etext+0x13c>
40012764:	e5810000 	str	r0, [r1]
40012768:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
4001276c:	e59f106c 	ldr	r1, [pc, #108]	; 400127e0 <_etext+0x140>
40012770:	e1500001 	cmp	r0, r1
40012774:	3a00000d 	bcc	400127b0 <CyU3PDevCheckDevStateStruct+0x110>
40012778:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
4001277c:	e3500000 	cmp	r0, #0
40012780:	0a00000a 	beq	400127b0 <CyU3PDevCheckDevStateStruct+0x110>
40012784:	e59f0058 	ldr	r0, [pc, #88]	; 400127e4 <_etext+0x144>
40012788:	e5900018 	ldr	r0, [r0, #24]
4001278c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012790:	0a000006 	beq	400127b0 <CyU3PDevCheckDevStateStruct+0x110>
40012794:	e59f004c 	ldr	r0, [pc, #76]	; 400127e8 <_etext+0x148>
40012798:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
4001279c:	e3100001 	tst	r0, #1
400127a0:	0a000002 	beq	400127b0 <CyU3PDevCheckDevStateStruct+0x110>
400127a4:	e3a00001 	mov	r0, #1
400127a8:	e59f103c 	ldr	r1, [pc, #60]	; 400127ec <_etext+0x14c>
400127ac:	e5810000 	str	r0, [r1]
400127b0:	e8bd8038 	pop	{r3, r4, r5, pc}
400127b4:	e1a00000 	nop			; (mov r0, r0)
400127b8:	e3e00000 	mvn	r0, #0
400127bc:	e5840000 	str	r0, [r4]
400127c0:	eafffffa 	b	400127b0 <CyU3PDevCheckDevStateStruct+0x110>
400127c4:	40002000 	.word	0x40002000
400127c8:	42575943 	.word	0x42575943
400127cc:	42335846 	.word	0x42335846
400127d0:	00010300 	.word	0x00010300
400127d4:	00000ff8 	.word	0x00000ff8
400127d8:	00010101 	.word	0x00010101
400127dc:	40030c88 	.word	0x40030c88
400127e0:	00010201 	.word	0x00010201
400127e4:	e0052000 	.word	0xe0052000
400127e8:	e0001000 	.word	0xe0001000
400127ec:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PDeviceCacheControl:

400127f0 <CyU3PDeviceCacheControl>:
400127f0:	e92d4070 	push	{r4, r5, r6, lr}
400127f4:	e1a04000 	mov	r4, r0
400127f8:	e1a06001 	mov	r6, r1
400127fc:	e1a05002 	mov	r5, r2
40012800:	e3550000 	cmp	r5, #0
40012804:	0a000003 	beq	40012818 <CyU3PDeviceCacheControl+0x28>
40012808:	e3560000 	cmp	r6, #0
4001280c:	1a000001 	bne	40012818 <CyU3PDeviceCacheControl+0x28>
40012810:	e3a00040 	mov	r0, #64	; 0x40
40012814:	e8bd8070 	pop	{r4, r5, r6, pc}
40012818:	eb000181 	bl	40012e24 <CyU3PSysBarrierSync>
4001281c:	ebfffefa 	bl	4001240c <CyU3PSysClearDCache>
40012820:	eb0001a1 	bl	40012eac <CyU3PSysFlushICache>
40012824:	eb00018f 	bl	40012e68 <CyU3PSysDisableICache>
40012828:	eb00018a 	bl	40012e58 <CyU3PSysDisableDCache>
4001282c:	e3540000 	cmp	r4, #0
40012830:	0a000003 	beq	40012844 <CyU3PDeviceCacheControl+0x54>
40012834:	eb000193 	bl	40012e88 <CyU3PSysEnableICache>
40012838:	eb000179 	bl	40012e24 <CyU3PSysBarrierSync>
4001283c:	e59f0038 	ldr	r0, [pc, #56]	; 4001287c <CyU3PDeviceCacheControl+0x8c>
40012840:	e5804000 	str	r4, [r0]
40012844:	e3a00000 	mov	r0, #0
40012848:	e59f1030 	ldr	r1, [pc, #48]	; 40012880 <CyU3PDeviceCacheControl+0x90>
4001284c:	e5810000 	str	r0, [r1]
40012850:	e3560000 	cmp	r6, #0
40012854:	0a000005 	beq	40012870 <CyU3PDeviceCacheControl+0x80>
40012858:	eb000186 	bl	40012e78 <CyU3PSysEnableDCache>
4001285c:	eb000170 	bl	40012e24 <CyU3PSysBarrierSync>
40012860:	e59f0018 	ldr	r0, [pc, #24]	; 40012880 <CyU3PDeviceCacheControl+0x90>
40012864:	e5805000 	str	r5, [r0]
40012868:	e59f0014 	ldr	r0, [pc, #20]	; 40012884 <CyU3PDeviceCacheControl+0x94>
4001286c:	e5806000 	str	r6, [r0]
40012870:	eb00016b 	bl	40012e24 <CyU3PSysBarrierSync>
40012874:	e3a00000 	mov	r0, #0
40012878:	eaffffe5 	b	40012814 <CyU3PDeviceCacheControl+0x24>
4001287c:	40030c7c 	.word	0x40030c7c
40012880:	40030c84 	.word	0x40030c84
40012884:	40030c80 	.word	0x40030c80

Disassembly of section i.CyU3PDeviceInit:

40012888 <CyU3PDeviceInit>:
40012888:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001288c:	e1a04000 	mov	r4, r0
40012890:	e3a06000 	mov	r6, #0
40012894:	e3a07000 	mov	r7, #0
40012898:	e3a09000 	mov	r9, #0
4001289c:	e3a0a000 	mov	sl, #0
400128a0:	e3540000 	cmp	r4, #0
400128a4:	0a000033 	beq	40012978 <CyU3PDeviceInit+0xf0>
400128a8:	e5d40004 	ldrb	r0, [r4, #4]
400128ac:	e3500002 	cmp	r0, #2
400128b0:	ba000002 	blt	400128c0 <CyU3PDeviceInit+0x38>
400128b4:	e5d40004 	ldrb	r0, [r4, #4]
400128b8:	e3500010 	cmp	r0, #16
400128bc:	da000001 	ble	400128c8 <CyU3PDeviceInit+0x40>
400128c0:	e3a00040 	mov	r0, #64	; 0x40
400128c4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400128c8:	e5d40005 	ldrb	r0, [r4, #5]
400128cc:	e3500002 	cmp	r0, #2
400128d0:	ba000002 	blt	400128e0 <CyU3PDeviceInit+0x58>
400128d4:	e5d40005 	ldrb	r0, [r4, #5]
400128d8:	e3500010 	cmp	r0, #16
400128dc:	da000001 	ble	400128e8 <CyU3PDeviceInit+0x60>
400128e0:	e3a00040 	mov	r0, #64	; 0x40
400128e4:	eafffff6 	b	400128c4 <CyU3PDeviceInit+0x3c>
400128e8:	e5d40006 	ldrb	r0, [r4, #6]
400128ec:	e3500002 	cmp	r0, #2
400128f0:	ba000002 	blt	40012900 <CyU3PDeviceInit+0x78>
400128f4:	e5d40006 	ldrb	r0, [r4, #6]
400128f8:	e3500010 	cmp	r0, #16
400128fc:	da000001 	ble	40012908 <CyU3PDeviceInit+0x80>
40012900:	e3a00040 	mov	r0, #64	; 0x40
40012904:	eaffffee 	b	400128c4 <CyU3PDeviceInit+0x3c>
40012908:	e5d40006 	ldrb	r0, [r4, #6]
4001290c:	e5d41005 	ldrb	r1, [r4, #5]
40012910:	e1500001 	cmp	r0, r1
40012914:	ba000004 	blt	4001292c <CyU3PDeviceInit+0xa4>
40012918:	e5d41005 	ldrb	r1, [r4, #5]
4001291c:	e5d40006 	ldrb	r0, [r4, #6]
40012920:	ebfff968 	bl	40010ec8 <__aeabi_idivmod>
40012924:	e3510000 	cmp	r1, #0
40012928:	0a000001 	beq	40012934 <CyU3PDeviceInit+0xac>
4001292c:	e3a00040 	mov	r0, #64	; 0x40
40012930:	eaffffe3 	b	400128c4 <CyU3PDeviceInit+0x3c>
40012934:	e5d4000c 	ldrb	r0, [r4, #12]
40012938:	e3500004 	cmp	r0, #4
4001293c:	ba000001 	blt	40012948 <CyU3PDeviceInit+0xc0>
40012940:	e3a00040 	mov	r0, #64	; 0x40
40012944:	eaffffde 	b	400128c4 <CyU3PDeviceInit+0x3c>
40012948:	e5d40004 	ldrb	r0, [r4, #4]
4001294c:	e2400001 	sub	r0, r0, #1
40012950:	e5d41005 	ldrb	r1, [r4, #5]
40012954:	e2411001 	sub	r1, r1, #1
40012958:	e1800401 	orr	r0, r0, r1, lsl #8
4001295c:	e5d41006 	ldrb	r1, [r4, #6]
40012960:	e2411001 	sub	r1, r1, #1
40012964:	e1800601 	orr	r0, r0, r1, lsl #12
40012968:	e5d4100c 	ldrb	r1, [r4, #12]
4001296c:	e1805201 	orr	r5, r0, r1, lsl #4
40012970:	e594a000 	ldr	sl, [r4]
40012974:	ea000000 	b	4001297c <CyU3PDeviceInit+0xf4>
40012978:	e59f5334 	ldr	r5, [pc, #820]	; 40012cb4 <CyU3PDeviceInit+0x42c>
4001297c:	e59f0334 	ldr	r0, [pc, #820]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012980:	e5805004 	str	r5, [r0, #4]
40012984:	e5905004 	ldr	r5, [r0, #4]
40012988:	e3a0000a 	mov	r0, #10
4001298c:	eb0003f6 	bl	4001396c <CyU3PBusyWait>
40012990:	e59f0320 	ldr	r0, [pc, #800]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012994:	e5900000 	ldr	r0, [r0]
40012998:	e2000807 	and	r0, r0, #458752	; 0x70000
4001299c:	e1a05820 	lsr	r5, r0, #16
400129a0:	e2150003 	ands	r0, r5, #3
400129a4:	0a000004 	beq	400129bc <CyU3PDeviceInit+0x134>
400129a8:	e3500001 	cmp	r0, #1
400129ac:	0a00000e 	beq	400129ec <CyU3PDeviceInit+0x164>
400129b0:	e3500002 	cmp	r0, #2
400129b4:	1a000024 	bne	40012a4c <CyU3PDeviceInit+0x1c4>
400129b8:	ea000014 	b	40012a10 <CyU3PDeviceInit+0x188>
400129bc:	e1a00000 	nop			; (mov r0, r0)
400129c0:	e59f92f4 	ldr	r9, [pc, #756]	; 40012cbc <CyU3PDeviceInit+0x434>
400129c4:	e35a0000 	cmp	sl, #0
400129c8:	0a000003 	beq	400129dc <CyU3PDeviceInit+0x154>
400129cc:	e59f02ec 	ldr	r0, [pc, #748]	; 40012cc0 <CyU3PDeviceInit+0x438>
400129d0:	e59f12ec 	ldr	r1, [pc, #748]	; 40012cc4 <CyU3PDeviceInit+0x43c>
400129d4:	e5810000 	str	r0, [r1]
400129d8:	ea000002 	b	400129e8 <CyU3PDeviceInit+0x160>
400129dc:	e59f02e4 	ldr	r0, [pc, #740]	; 40012cc8 <CyU3PDeviceInit+0x440>
400129e0:	e59f12dc 	ldr	r1, [pc, #732]	; 40012cc4 <CyU3PDeviceInit+0x43c>
400129e4:	e5810000 	str	r0, [r1]
400129e8:	ea000020 	b	40012a70 <CyU3PDeviceInit+0x1e8>
400129ec:	e1a00000 	nop			; (mov r0, r0)
400129f0:	e59f92d4 	ldr	r9, [pc, #724]	; 40012ccc <CyU3PDeviceInit+0x444>
400129f4:	e1a00209 	lsl	r0, r9, #4
400129f8:	e59f12c4 	ldr	r1, [pc, #708]	; 40012cc4 <CyU3PDeviceInit+0x43c>
400129fc:	e5810000 	str	r0, [r1]
40012a00:	e59f02c8 	ldr	r0, [pc, #712]	; 40012cd0 <CyU3PDeviceInit+0x448>
40012a04:	e59f12c8 	ldr	r1, [pc, #712]	; 40012cd4 <CyU3PDeviceInit+0x44c>
40012a08:	e5810000 	str	r0, [r1]
40012a0c:	ea000017 	b	40012a70 <CyU3PDeviceInit+0x1e8>
40012a10:	e1a00000 	nop			; (mov r0, r0)
40012a14:	e59f92bc 	ldr	r9, [pc, #700]	; 40012cd8 <CyU3PDeviceInit+0x450>
40012a18:	e59f02bc 	ldr	r0, [pc, #700]	; 40012cdc <CyU3PDeviceInit+0x454>
40012a1c:	e59f12b0 	ldr	r1, [pc, #688]	; 40012cd4 <CyU3PDeviceInit+0x44c>
40012a20:	e5810000 	str	r0, [r1]
40012a24:	e35a0000 	cmp	sl, #0
40012a28:	0a000003 	beq	40012a3c <CyU3PDeviceInit+0x1b4>
40012a2c:	e59f028c 	ldr	r0, [pc, #652]	; 40012cc0 <CyU3PDeviceInit+0x438>
40012a30:	e59f128c 	ldr	r1, [pc, #652]	; 40012cc4 <CyU3PDeviceInit+0x43c>
40012a34:	e5810000 	str	r0, [r1]
40012a38:	ea000002 	b	40012a48 <CyU3PDeviceInit+0x1c0>
40012a3c:	e59f0284 	ldr	r0, [pc, #644]	; 40012cc8 <CyU3PDeviceInit+0x440>
40012a40:	e59f127c 	ldr	r1, [pc, #636]	; 40012cc4 <CyU3PDeviceInit+0x43c>
40012a44:	e5810000 	str	r0, [r1]
40012a48:	ea000008 	b	40012a70 <CyU3PDeviceInit+0x1e8>
40012a4c:	e1a00000 	nop			; (mov r0, r0)
40012a50:	e59f9288 	ldr	r9, [pc, #648]	; 40012ce0 <CyU3PDeviceInit+0x458>
40012a54:	e1a00189 	lsl	r0, r9, #3
40012a58:	e59f1264 	ldr	r1, [pc, #612]	; 40012cc4 <CyU3PDeviceInit+0x43c>
40012a5c:	e5810000 	str	r0, [r1]
40012a60:	e59f027c 	ldr	r0, [pc, #636]	; 40012ce4 <CyU3PDeviceInit+0x45c>
40012a64:	e59f1268 	ldr	r1, [pc, #616]	; 40012cd4 <CyU3PDeviceInit+0x44c>
40012a68:	e5810000 	str	r0, [r1]
40012a6c:	e1a00000 	nop			; (mov r0, r0)
40012a70:	e1a00000 	nop			; (mov r0, r0)
40012a74:	e59f023c 	ldr	r0, [pc, #572]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012a78:	e5900000 	ldr	r0, [r0]
40012a7c:	e200003f 	and	r0, r0, #63	; 0x3f
40012a80:	e3500015 	cmp	r0, #21
40012a84:	1a000002 	bne	40012a94 <CyU3PDeviceInit+0x20c>
40012a88:	e59f0230 	ldr	r0, [pc, #560]	; 40012cc0 <CyU3PDeviceInit+0x438>
40012a8c:	e59f1230 	ldr	r1, [pc, #560]	; 40012cc4 <CyU3PDeviceInit+0x43c>
40012a90:	e5810000 	str	r0, [r1]
40012a94:	e59f0228 	ldr	r0, [pc, #552]	; 40012cc4 <CyU3PDeviceInit+0x43c>
40012a98:	e5900000 	ldr	r0, [r0]
40012a9c:	e59f121c 	ldr	r1, [pc, #540]	; 40012cc0 <CyU3PDeviceInit+0x438>
40012aa0:	e1500001 	cmp	r0, r1
40012aa4:	1a000013 	bne	40012af8 <CyU3PDeviceInit+0x270>
40012aa8:	e59f0208 	ldr	r0, [pc, #520]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012aac:	e5900000 	ldr	r0, [r0]
40012ab0:	e200003f 	and	r0, r0, #63	; 0x3f
40012ab4:	e3500015 	cmp	r0, #21
40012ab8:	0a00000e 	beq	40012af8 <CyU3PDeviceInit+0x270>
40012abc:	e59f01f4 	ldr	r0, [pc, #500]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012ac0:	e5900000 	ldr	r0, [r0]
40012ac4:	e3c0003f 	bic	r0, r0, #63	; 0x3f
40012ac8:	e3800015 	orr	r0, r0, #21
40012acc:	e59f11e4 	ldr	r1, [pc, #484]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012ad0:	e5810000 	str	r0, [r1]
40012ad4:	e3a00064 	mov	r0, #100	; 0x64
40012ad8:	eb0003a3 	bl	4001396c <CyU3PBusyWait>
40012adc:	e1a00000 	nop			; (mov r0, r0)
40012ae0:	e59f01d0 	ldr	r0, [pc, #464]	; 40012cb8 <CyU3PDeviceInit+0x430>
40012ae4:	e5900000 	ldr	r0, [r0]
40012ae8:	e3100702 	tst	r0, #524288	; 0x80000
40012aec:	0afffffb 	beq	40012ae0 <CyU3PDeviceInit+0x258>
40012af0:	e3a00064 	mov	r0, #100	; 0x64
40012af4:	eb00039c 	bl	4001396c <CyU3PBusyWait>
40012af8:	e59f01e8 	ldr	r0, [pc, #488]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012afc:	e5908014 	ldr	r8, [r0, #20]
40012b00:	e3a0000a 	mov	r0, #10
40012b04:	eb000398 	bl	4001396c <CyU3PBusyWait>
40012b08:	e2080003 	and	r0, r8, #3
40012b0c:	e3500002 	cmp	r0, #2
40012b10:	1a000005 	bne	40012b2c <CyU3PDeviceInit+0x2a4>
40012b14:	e3a07001 	mov	r7, #1
40012b18:	e3880003 	orr	r0, r8, #3
40012b1c:	e59f11c4 	ldr	r1, [pc, #452]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012b20:	e5810014 	str	r0, [r1, #20]
40012b24:	e3a0000a 	mov	r0, #10
40012b28:	eb00038f 	bl	4001396c <CyU3PBusyWait>
40012b2c:	e3180102 	tst	r8, #-2147483648	; 0x80000000
40012b30:	1a000004 	bne	40012b48 <CyU3PDeviceInit+0x2c0>
40012b34:	e3540000 	cmp	r4, #0
40012b38:	0a000003 	beq	40012b4c <CyU3PDeviceInit+0x2c4>
40012b3c:	e5940008 	ldr	r0, [r4, #8]
40012b40:	e3500000 	cmp	r0, #0
40012b44:	1a000000 	bne	40012b4c <CyU3PDeviceInit+0x2c4>
40012b48:	e3a06001 	mov	r6, #1
40012b4c:	e3560000 	cmp	r6, #0
40012b50:	1a000014 	bne	40012ba8 <CyU3PDeviceInit+0x320>
40012b54:	e3c80003 	bic	r0, r8, #3
40012b58:	e3800001 	orr	r0, r0, #1
40012b5c:	e59f1184 	ldr	r1, [pc, #388]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012b60:	e5810014 	str	r0, [r1, #20]
40012b64:	e3a00064 	mov	r0, #100	; 0x64
40012b68:	eb00037f 	bl	4001396c <CyU3PBusyWait>
40012b6c:	e59f0174 	ldr	r0, [pc, #372]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012b70:	e5905018 	ldr	r5, [r0, #24]
40012b74:	e3a000c8 	mov	r0, #200	; 0xc8
40012b78:	eb00037b 	bl	4001396c <CyU3PBusyWait>
40012b7c:	e59f0164 	ldr	r0, [pc, #356]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012b80:	e5900018 	ldr	r0, [r0, #24]
40012b84:	e1500005 	cmp	r0, r5
40012b88:	1a000000 	bne	40012b90 <CyU3PDeviceInit+0x308>
40012b8c:	e3a06001 	mov	r6, #1
40012b90:	e3a00064 	mov	r0, #100	; 0x64
40012b94:	eb000374 	bl	4001396c <CyU3PBusyWait>
40012b98:	e59f0148 	ldr	r0, [pc, #328]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012b9c:	e5808014 	str	r8, [r0, #20]
40012ba0:	e3a00064 	mov	r0, #100	; 0x64
40012ba4:	eb000370 	bl	4001396c <CyU3PBusyWait>
40012ba8:	e3560000 	cmp	r6, #0
40012bac:	0a000026 	beq	40012c4c <CyU3PDeviceInit+0x3c4>
40012bb0:	e59f0130 	ldr	r0, [pc, #304]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012bb4:	e5900014 	ldr	r0, [r0, #20]
40012bb8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012bbc:	1a000022 	bne	40012c4c <CyU3PDeviceInit+0x3c4>
40012bc0:	e1a09109 	lsl	r9, r9, #2
40012bc4:	e3a01c7d 	mov	r1, #32000	; 0x7d00
40012bc8:	e1a00009 	mov	r0, r9
40012bcc:	ebfff86b 	bl	40010d80 <__aeabi_uidivmod>
40012bd0:	e1a09000 	mov	r9, r0
40012bd4:	e2095003 	and	r5, r9, #3
40012bd8:	e1a09129 	lsr	r9, r9, #2
40012bdc:	e3550010 	cmp	r5, #16
40012be0:	2a000000 	bcs	40012be8 <CyU3PDeviceInit+0x360>
40012be4:	e2499001 	sub	r9, r9, #1
40012be8:	e1a09809 	lsl	r9, r9, #16
40012bec:	e59f00f8 	ldr	r0, [pc, #248]	; 40012cec <CyU3PDeviceInit+0x464>
40012bf0:	e1590000 	cmp	r9, r0
40012bf4:	9a000000 	bls	40012bfc <CyU3PDeviceInit+0x374>
40012bf8:	e1a09000 	mov	r9, r0
40012bfc:	e3a00064 	mov	r0, #100	; 0x64
40012c00:	eb000359 	bl	4001396c <CyU3PBusyWait>
40012c04:	e59f00dc 	ldr	r0, [pc, #220]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012c08:	e5905014 	ldr	r5, [r0, #20]
40012c0c:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
40012c10:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40012c14:	e1805009 	orr	r5, r0, r9
40012c18:	e3a00064 	mov	r0, #100	; 0x64
40012c1c:	eb000352 	bl	4001396c <CyU3PBusyWait>
40012c20:	e59f00c0 	ldr	r0, [pc, #192]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012c24:	e5805014 	str	r5, [r0, #20]
40012c28:	e3a00064 	mov	r0, #100	; 0x64
40012c2c:	eb00034e 	bl	4001396c <CyU3PBusyWait>
40012c30:	e59f00b0 	ldr	r0, [pc, #176]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012c34:	e5900014 	ldr	r0, [r0, #20]
40012c38:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012c3c:	e59f10a4 	ldr	r1, [pc, #164]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012c40:	e5810014 	str	r0, [r1, #20]
40012c44:	e3a00064 	mov	r0, #100	; 0x64
40012c48:	eb000347 	bl	4001396c <CyU3PBusyWait>
40012c4c:	e59f0094 	ldr	r0, [pc, #148]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012c50:	e5900000 	ldr	r0, [r0]
40012c54:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012c58:	e59f1088 	ldr	r1, [pc, #136]	; 40012ce8 <CyU3PDeviceInit+0x460>
40012c5c:	e5810000 	str	r0, [r1]
40012c60:	e3a00064 	mov	r0, #100	; 0x64
40012c64:	eb000340 	bl	4001396c <CyU3PBusyWait>
40012c68:	eb003dca 	bl	40022398 <CyU3PVicInit>
40012c6c:	e10f0000 	mrs	r0, CPSR
40012c70:	e3c00080 	bic	r0, r0, #128	; 0x80
40012c74:	e121f000 	msr	CPSR_c, r0
40012c78:	e3570000 	cmp	r7, #0
40012c7c:	0a000002 	beq	40012c8c <CyU3PDeviceInit+0x404>
40012c80:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012c84:	e3a00001 	mov	r0, #1
40012c88:	eb000024 	bl	40012d20 <CyU3PSysWatchDogConfigure>
40012c8c:	e59f005c 	ldr	r0, [pc, #92]	; 40012cf0 <CyU3PDeviceInit+0x468>
40012c90:	e5900000 	ldr	r0, [r0]
40012c94:	e3500000 	cmp	r0, #0
40012c98:	0a000002 	beq	40012ca8 <CyU3PDeviceInit+0x420>
40012c9c:	e59f004c 	ldr	r0, [pc, #76]	; 40012cf0 <CyU3PDeviceInit+0x468>
40012ca0:	e5900000 	ldr	r0, [r0]
40012ca4:	eb000594 	bl	400142fc <CyU3PLppRestoreState>
40012ca8:	ebfffe7c 	bl	400126a0 <_etext>
40012cac:	e3a00000 	mov	r0, #0
40012cb0:	eaffff03 	b	400128c4 <CyU3PDeviceInit+0x3c>
40012cb4:	00001131 	.word	0x00001131
40012cb8:	e0052000 	.word	0xe0052000
40012cbc:	0124f800 	.word	0x0124f800
40012cc0:	18085800 	.word	0x18085800
40012cc4:	40030c70 	.word	0x40030c70
40012cc8:	16e36000 	.word	0x16e36000
40012ccc:	018cba80 	.word	0x018cba80
40012cd0:	00910700 	.word	0x00910700
40012cd4:	40030c78 	.word	0x40030c78
40012cd8:	0249f000 	.word	0x0249f000
40012cdc:	00910608 	.word	0x00910608
40012ce0:	03197500 	.word	0x03197500
40012ce4:	00910580 	.word	0x00910580
40012ce8:	e0050000 	.word	0xe0050000
40012cec:	7fff0000 	.word	0x7fff0000
40012cf0:	40030cac 	.word	0x40030cac

Disassembly of section i.CyU3PSysSetupMMU:

40012cf4 <CyU3PSysSetupMMU>:
40012cf4:	e92d4010 	push	{r4, lr}
40012cf8:	eb000049 	bl	40012e24 <CyU3PSysBarrierSync>
40012cfc:	ebfffdc2 	bl	4001240c <CyU3PSysClearDCache>
40012d00:	eb000069 	bl	40012eac <CyU3PSysFlushICache>
40012d04:	eb000049 	bl	40012e30 <CyU3PSysDisableCacheMMU>
40012d08:	eb00006a 	bl	40012eb8 <CyU3PSysInitTCMs>
40012d0c:	eb000041 	bl	40012e18 <CyU3PInitPageTable>
40012d10:	eb000061 	bl	40012e9c <CyU3PSysEnableMMU>
40012d14:	eb00006c 	bl	40012ecc <CyU3PSysLoadTLB>
40012d18:	eb000041 	bl	40012e24 <CyU3PSysBarrierSync>
40012d1c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

40012d20 <CyU3PSysWatchDogConfigure>:
40012d20:	e92d4070 	push	{r4, r5, r6, lr}
40012d24:	e1a04000 	mov	r4, r0
40012d28:	e1a05001 	mov	r5, r1
40012d2c:	e59f00d8 	ldr	r0, [pc, #216]	; 40012e0c <CyU3PSysWatchDogConfigure+0xec>
40012d30:	e5906014 	ldr	r6, [r0, #20]
40012d34:	e3a00064 	mov	r0, #100	; 0x64
40012d38:	eb00030b 	bl	4001396c <CyU3PBusyWait>
40012d3c:	e3540000 	cmp	r4, #0
40012d40:	0a000023 	beq	40012dd4 <CyU3PSysWatchDogConfigure+0xb4>
40012d44:	e2060003 	and	r0, r6, #3
40012d48:	e3500003 	cmp	r0, #3
40012d4c:	0a000004 	beq	40012d64 <CyU3PSysWatchDogConfigure+0x44>
40012d50:	e3860003 	orr	r0, r6, #3
40012d54:	e59f10b0 	ldr	r1, [pc, #176]	; 40012e0c <CyU3PSysWatchDogConfigure+0xec>
40012d58:	e5810014 	str	r0, [r1, #20]
40012d5c:	e3a00064 	mov	r0, #100	; 0x64
40012d60:	eb000301 	bl	4001396c <CyU3PBusyWait>
40012d64:	e0850285 	add	r0, r5, r5, lsl #5
40012d68:	e59f10a0 	ldr	r1, [pc, #160]	; 40012e10 <CyU3PSysWatchDogConfigure+0xf0>
40012d6c:	e5810000 	str	r0, [r1]
40012d70:	e2810000 	add	r0, r1, #0
40012d74:	e5900000 	ldr	r0, [r0]
40012d78:	e1500005 	cmp	r0, r5
40012d7c:	2a000001 	bcs	40012d88 <CyU3PSysWatchDogConfigure+0x68>
40012d80:	e3e00000 	mvn	r0, #0
40012d84:	e5810000 	str	r0, [r1]
40012d88:	e59f0080 	ldr	r0, [pc, #128]	; 40012e10 <CyU3PSysWatchDogConfigure+0xf0>
40012d8c:	e5900000 	ldr	r0, [r0]
40012d90:	e59f1074 	ldr	r1, [pc, #116]	; 40012e0c <CyU3PSysWatchDogConfigure+0xec>
40012d94:	e5810018 	str	r0, [r1, #24]
40012d98:	e3a00064 	mov	r0, #100	; 0x64
40012d9c:	eb0002f2 	bl	4001396c <CyU3PBusyWait>
40012da0:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012da4:	e38660fa 	orr	r6, r6, #250	; 0xfa
40012da8:	e59f005c 	ldr	r0, [pc, #92]	; 40012e0c <CyU3PSysWatchDogConfigure+0xec>
40012dac:	e5806014 	str	r6, [r0, #20]
40012db0:	e3a00064 	mov	r0, #100	; 0x64
40012db4:	eb0002ec 	bl	4001396c <CyU3PBusyWait>
40012db8:	e2060c03 	and	r0, r6, #768	; 0x300
40012dbc:	e3500c03 	cmp	r0, #768	; 0x300
40012dc0:	1a000010 	bne	40012e08 <CyU3PSysWatchDogConfigure+0xe8>
40012dc4:	e59f0048 	ldr	r0, [pc, #72]	; 40012e14 <CyU3PSysWatchDogConfigure+0xf4>
40012dc8:	e1d000b0 	ldrh	r0, [r0]
40012dcc:	eb003d18 	bl	40022234 <CyU3POsTimerInit>
40012dd0:	ea00000c 	b	40012e08 <CyU3PSysWatchDogConfigure+0xe8>
40012dd4:	e2060003 	and	r0, r6, #3
40012dd8:	e3500003 	cmp	r0, #3
40012ddc:	0a000006 	beq	40012dfc <CyU3PSysWatchDogConfigure+0xdc>
40012de0:	e59f0024 	ldr	r0, [pc, #36]	; 40012e0c <CyU3PSysWatchDogConfigure+0xec>
40012de4:	e5900014 	ldr	r0, [r0, #20]
40012de8:	e3800003 	orr	r0, r0, #3
40012dec:	e59f1018 	ldr	r1, [pc, #24]	; 40012e0c <CyU3PSysWatchDogConfigure+0xec>
40012df0:	e5810014 	str	r0, [r1, #20]
40012df4:	e3a00064 	mov	r0, #100	; 0x64
40012df8:	eb0002db 	bl	4001396c <CyU3PBusyWait>
40012dfc:	e3a00000 	mov	r0, #0
40012e00:	e59f1008 	ldr	r1, [pc, #8]	; 40012e10 <CyU3PSysWatchDogConfigure+0xf0>
40012e04:	e5810000 	str	r0, [r1]
40012e08:	e8bd8070 	pop	{r4, r5, r6, pc}
40012e0c:	e0050000 	.word	0xe0050000
40012e10:	40030c74 	.word	0x40030c74
40012e14:	40030dd8 	.word	0x40030dd8

Disassembly of section i.CyU3PInitPageTable:

40012e18 <CyU3PInitPageTable>:
40012e18:	e92d4010 	push	{r4, lr}
40012e1c:	eb0007ad 	bl	40014cd8 <CyFx3DevInitPageTables>
40012e20:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012e24 <CyU3PSysBarrierSync>:
40012e24:	e3a00000 	mov	r0, #0
40012e28:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012e2c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012e30 <CyU3PSysDisableCacheMMU>:
40012e30:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012e34:	e59f2018 	ldr	r2, [pc, #24]	; 40012e54 <CyU3PSysDisableCacheMMU+0x24>
40012e38:	e1c00002 	bic	r0, r0, r2
40012e3c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012e40:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012e44:	e3e01801 	mvn	r1, #65536	; 0x10000
40012e48:	e0000001 	and	r0, r0, r1
40012e4c:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012e50:	e12fff1e 	bx	lr
40012e54:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012e58 <CyU3PSysDisableDCache>:
40012e58:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012e5c:	e3c00004 	bic	r0, r0, #4
40012e60:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012e64:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012e68 <CyU3PSysDisableICache>:
40012e68:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012e6c:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012e70:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012e74:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012e78 <CyU3PSysEnableDCache>:
40012e78:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012e7c:	e3800004 	orr	r0, r0, #4
40012e80:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012e84:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012e88 <CyU3PSysEnableICache>:
40012e88:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012e8c:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012e90:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012e94:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012e98:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012e9c <CyU3PSysEnableMMU>:
40012e9c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012ea0:	e3800001 	orr	r0, r0, #1
40012ea4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012ea8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012eac <CyU3PSysFlushICache>:
40012eac:	e3a00000 	mov	r0, #0
40012eb0:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012eb4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012eb8 <CyU3PSysInitTCMs>:
40012eb8:	e3a00015 	mov	r0, #21
40012ebc:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012ec0:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012ec4:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012ec8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012ecc <CyU3PSysLoadTLB>:
40012ecc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012ed0:	e3a00000 	mov	r0, #0
40012ed4:	eb00000b 	bl	40012f08 <CyU3PSysLockTLBEntry>
40012ed8:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012edc:	eb000009 	bl	40012f08 <CyU3PSysLockTLBEntry>
40012ee0:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012ee4:	eb000007 	bl	40012f08 <CyU3PSysLockTLBEntry>
40012ee8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012eec:	eb000005 	bl	40012f08 <CyU3PSysLockTLBEntry>
40012ef0:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012ef4:	eb000003 	bl	40012f08 <CyU3PSysLockTLBEntry>
40012ef8:	e59f0004 	ldr	r0, [pc, #4]	; 40012f04 <CyU3PSysLoadTLB+0x38>
40012efc:	eb000001 	bl	40012f08 <CyU3PSysLockTLBEntry>
40012f00:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012f04:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012f08 <CyU3PSysLockTLBEntry>:
40012f08:	e3a01000 	mov	r1, #0
40012f0c:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012f10:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012f14:	e3811001 	orr	r1, r1, #1
40012f18:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012f1c:	e5900000 	ldr	r0, [r0]
40012f20:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012f24:	e3c11001 	bic	r1, r1, #1
40012f28:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012f2c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012f30 <CyU3PDeviceConfigureIOMatrix>:
40012f30:	e92d4010 	push	{r4, lr}
40012f34:	e1a04000 	mov	r4, r0
40012f38:	e3540000 	cmp	r4, #0
40012f3c:	1a000001 	bne	40012f48 <CyU3PDeviceConfigureIOMatrix+0x18>
40012f40:	e3a00041 	mov	r0, #65	; 0x41
40012f44:	e8bd8010 	pop	{r4, pc}
40012f48:	e1a00004 	mov	r0, r4
40012f4c:	eb0005fd 	bl	40014748 <CyFx3DevIOConfigure>
40012f50:	e3500000 	cmp	r0, #0
40012f54:	1a000001 	bne	40012f60 <CyU3PDeviceConfigureIOMatrix+0x30>
40012f58:	e3a00040 	mov	r0, #64	; 0x40
40012f5c:	eafffff8 	b	40012f44 <CyU3PDeviceConfigureIOMatrix+0x14>
40012f60:	e3a00000 	mov	r0, #0
40012f64:	eafffff6 	b	40012f44 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012f68 <CyU3PDeviceGpioOverride>:
40012f68:	e92d4070 	push	{r4, r5, r6, lr}
40012f6c:	e1a04000 	mov	r4, r0
40012f70:	e1a05001 	mov	r5, r1
40012f74:	e354003d 	cmp	r4, #61	; 0x3d
40012f78:	ba000001 	blt	40012f84 <CyU3PDeviceGpioOverride+0x1c>
40012f7c:	e3a00040 	mov	r0, #64	; 0x40
40012f80:	e8bd8070 	pop	{r4, r5, r6, pc}
40012f84:	e1a02005 	mov	r2, r5
40012f88:	e3a01001 	mov	r1, #1
40012f8c:	e1a00004 	mov	r0, r4
40012f90:	eb00066c 	bl	40014948 <CyFx3DevIOSelectGpio>
40012f94:	e3a00000 	mov	r0, #0
40012f98:	eafffff8 	b	40012f80 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012f9c <CyU3PIsGpioComplexIOConfigured>:
40012f9c:	e92d4010 	push	{r4, lr}
40012fa0:	e1a04000 	mov	r4, r0
40012fa4:	e3a01000 	mov	r1, #0
40012fa8:	e1a00004 	mov	r0, r4
40012fac:	eb000645 	bl	400148c8 <CyFx3DevIOIsGpio>
40012fb0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012fb4 <CyU3PIsGpioSimpleIOConfigured>:
40012fb4:	e92d4010 	push	{r4, lr}
40012fb8:	e1a04000 	mov	r4, r0
40012fbc:	e3a01001 	mov	r1, #1
40012fc0:	e1a00004 	mov	r0, r4
40012fc4:	eb00063f 	bl	400148c8 <CyFx3DevIOIsGpio>
40012fc8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012fcc <CyU3PIsGpioValid>:
40012fcc:	e1a01000 	mov	r1, r0
40012fd0:	e351003d 	cmp	r1, #61	; 0x3d
40012fd4:	aa000001 	bge	40012fe0 <CyU3PIsGpioValid+0x14>
40012fd8:	e3a00001 	mov	r0, #1
40012fdc:	e12fff1e 	bx	lr
40012fe0:	e3a00000 	mov	r0, #0
40012fe4:	eafffffc 	b	40012fdc <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012fe8 <CyU3PIsLppIOConfigured>:
40012fe8:	e92d4070 	push	{r4, r5, r6, lr}
40012fec:	e1a04000 	mov	r4, r0
40012ff0:	e3a05000 	mov	r5, #0
40012ff4:	e3540000 	cmp	r4, #0
40012ff8:	0a00000a 	beq	40013028 <CyU3PIsLppIOConfigured+0x40>
40012ffc:	e3540001 	cmp	r4, #1
40013000:	0a000004 	beq	40013018 <CyU3PIsLppIOConfigured+0x30>
40013004:	e3540002 	cmp	r4, #2
40013008:	0a00000e 	beq	40013048 <CyU3PIsLppIOConfigured+0x60>
4001300c:	e3540003 	cmp	r4, #3
40013010:	1a000010 	bne	40013058 <CyU3PIsLppIOConfigured+0x70>
40013014:	ea000007 	b	40013038 <CyU3PIsLppIOConfigured+0x50>
40013018:	e1a00000 	nop			; (mov r0, r0)
4001301c:	eb00063d 	bl	40014918 <CyFx3DevIOIsI2sConfigured>
40013020:	e1a05000 	mov	r5, r0
40013024:	ea00000d 	b	40013060 <CyU3PIsLppIOConfigured+0x78>
40013028:	e1a00000 	nop			; (mov r0, r0)
4001302c:	eb000635 	bl	40014908 <CyFx3DevIOIsI2cConfigured>
40013030:	e1a05000 	mov	r5, r0
40013034:	ea000009 	b	40013060 <CyU3PIsLppIOConfigured+0x78>
40013038:	e1a00000 	nop			; (mov r0, r0)
4001303c:	eb00063d 	bl	40014938 <CyFx3DevIOIsUartConfigured>
40013040:	e1a05000 	mov	r5, r0
40013044:	ea000005 	b	40013060 <CyU3PIsLppIOConfigured+0x78>
40013048:	e1a00000 	nop			; (mov r0, r0)
4001304c:	eb000635 	bl	40014928 <CyFx3DevIOIsSpiConfigured>
40013050:	e1a05000 	mov	r5, r0
40013054:	ea000001 	b	40013060 <CyU3PIsLppIOConfigured+0x78>
40013058:	e1a00000 	nop			; (mov r0, r0)
4001305c:	e1a00000 	nop			; (mov r0, r0)
40013060:	e1a00000 	nop			; (mov r0, r0)
40013064:	e1a00005 	mov	r0, r5
40013068:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

4001306c <CyU3PDebugApplicationDefine>:
4001306c:	e92d4010 	push	{r4, lr}
40013070:	e24dd020 	sub	sp, sp, #32
40013074:	e3a00000 	mov	r0, #0
40013078:	e59f109c 	ldr	r1, [pc, #156]	; 4001311c <CyU3PDebugApplicationDefine+0xb0>
4001307c:	e5810000 	str	r0, [r1]
40013080:	e3a00001 	mov	r0, #1
40013084:	e2811008 	add	r1, r1, #8
40013088:	e5810000 	str	r0, [r1]
4001308c:	e3a00c02 	mov	r0, #512	; 0x200
40013090:	ebffc177 	bl	40003674 <CyU3PMemAlloc>
40013094:	e1a04000 	mov	r4, r0
40013098:	e3a030a8 	mov	r3, #168	; 0xa8
4001309c:	e3a02001 	mov	r2, #1
400130a0:	e3a01000 	mov	r1, #0
400130a4:	e3a00006 	mov	r0, #6
400130a8:	e28dc00c 	add	ip, sp, #12
400130ac:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400130b0:	e3a02c02 	mov	r2, #512	; 0x200
400130b4:	e1a03001 	mov	r3, r1
400130b8:	e58d2004 	str	r2, [sp, #4]
400130bc:	e59f205c 	ldr	r2, [pc, #92]	; 40013120 <CyU3PDebugApplicationDefine+0xb4>
400130c0:	e28f105c 	add	r1, pc, #92	; 0x5c
400130c4:	e58d0008 	str	r0, [sp, #8]
400130c8:	e59f0064 	ldr	r0, [pc, #100]	; 40013134 <CyU3PDebugApplicationDefine+0xc8>
400130cc:	e58d4000 	str	r4, [sp]
400130d0:	ebffde11 	bl	4000a91c <_txe_thread_create>
400130d4:	e3a00084 	mov	r0, #132	; 0x84
400130d8:	ebffc165 	bl	40003674 <CyU3PMemAlloc>
400130dc:	e1a04000 	mov	r4, r0
400130e0:	e3a0303c 	mov	r3, #60	; 0x3c
400130e4:	e3a02084 	mov	r2, #132	; 0x84
400130e8:	e1cd20f0 	strd	r2, [sp]
400130ec:	e1a03004 	mov	r3, r4
400130f0:	e3a02003 	mov	r2, #3
400130f4:	e3a01000 	mov	r1, #0
400130f8:	e59f0038 	ldr	r0, [pc, #56]	; 40013138 <CyU3PDebugApplicationDefine+0xcc>
400130fc:	ebffdd20 	bl	4000a584 <_txe_queue_create>
40013100:	e3a03038 	mov	r3, #56	; 0x38
40013104:	e3a02000 	mov	r2, #0
40013108:	e1a01002 	mov	r1, r2
4001310c:	e59f0028 	ldr	r0, [pc, #40]	; 4001313c <CyU3PDebugApplicationDefine+0xd0>
40013110:	ebffdc40 	bl	4000a218 <_txe_mutex_create>
40013114:	e28dd020 	add	sp, sp, #32
40013118:	e8bd8010 	pop	{r4, pc}
4001311c:	40030c90 	.word	0x40030c90
40013120:	400135dc 	.word	0x400135dc
40013124:	75626544 	.word	0x75626544
40013128:	68542067 	.word	0x68542067
4001312c:	64616572 	.word	0x64616572
40013130:	00000000 	.word	0x00000000
40013134:	40031258 	.word	0x40031258
40013138:	40031300 	.word	0x40031300
4001313c:	4003133c 	.word	0x4003133c

Disassembly of section i.CyU3PDebugChannelReset:

40013140 <CyU3PDebugChannelReset>:
40013140:	e92d4010 	push	{r4, lr}
40013144:	e59f0034 	ldr	r0, [pc, #52]	; 40013180 <CyU3PDebugChannelReset+0x40>
40013148:	eb000d41 	bl	40016654 <CyU3PDmaChannelReset>
4001314c:	e3a01000 	mov	r1, #0
40013150:	e59f0028 	ldr	r0, [pc, #40]	; 40013180 <CyU3PDebugChannelReset+0x40>
40013154:	eb000ddf 	bl	400168d8 <CyU3PDmaChannelSetXfer>
40013158:	e1a04000 	mov	r4, r0
4001315c:	e3540000 	cmp	r4, #0
40013160:	1a000004 	bne	40013178 <CyU3PDebugChannelReset+0x38>
40013164:	e3e02000 	mvn	r2, #0
40013168:	e59f1014 	ldr	r1, [pc, #20]	; 40013184 <CyU3PDebugChannelReset+0x44>
4001316c:	e281000c 	add	r0, r1, #12
40013170:	eb000c6a 	bl	40016320 <CyU3PDmaChannelGetBuffer>
40013174:	e1a04000 	mov	r4, r0
40013178:	e1a00004 	mov	r0, r4
4001317c:	e8bd8010 	pop	{r4, pc}
40013180:	40031380 	.word	0x40031380
40013184:	40031374 	.word	0x40031374

Disassembly of section i.CyU3PDebugInit:

40013188 <CyU3PDebugInit>:
40013188:	e92d4070 	push	{r4, r5, r6, lr}
4001318c:	e24dd020 	sub	sp, sp, #32
40013190:	e1a04000 	mov	r4, r0
40013194:	e1a06001 	mov	r6, r1
40013198:	e59f0150 	ldr	r0, [pc, #336]	; 400132f0 <CyU3PDebugInit+0x168>
4001319c:	e5900000 	ldr	r0, [r0]
400131a0:	e3500000 	cmp	r0, #0
400131a4:	1a000003 	bne	400131b8 <CyU3PDebugInit+0x30>
400131a8:	e59f0144 	ldr	r0, [pc, #324]	; 400132f4 <CyU3PDebugInit+0x16c>
400131ac:	e5900000 	ldr	r0, [r0]
400131b0:	e3500000 	cmp	r0, #0
400131b4:	0a000002 	beq	400131c4 <CyU3PDebugInit+0x3c>
400131b8:	e3a00043 	mov	r0, #67	; 0x43
400131bc:	e28dd020 	add	sp, sp, #32
400131c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400131c4:	e1a00004 	mov	r0, r4
400131c8:	eb0007b3 	bl	4001509c <CyU3PDmaSocketIsValidConsumer>
400131cc:	e1a05000 	mov	r5, r0
400131d0:	e3550000 	cmp	r5, #0
400131d4:	1a000001 	bne	400131e0 <CyU3PDebugInit+0x58>
400131d8:	e3a00040 	mov	r0, #64	; 0x40
400131dc:	eafffff6 	b	400131bc <CyU3PDebugInit+0x34>
400131e0:	e3e01000 	mvn	r1, #0
400131e4:	e59f010c 	ldr	r0, [pc, #268]	; 400132f8 <CyU3PDebugInit+0x170>
400131e8:	ebffdc88 	bl	4000a410 <_txe_mutex_get>
400131ec:	e3a00c01 	mov	r0, #256	; 0x100
400131f0:	e1cd00b4 	strh	r0, [sp, #4]
400131f4:	e3a00008 	mov	r0, #8
400131f8:	e1cd00b6 	strh	r0, [sp, #6]
400131fc:	e3a00000 	mov	r0, #0
40013200:	e1cd00bc 	strh	r0, [sp, #12]
40013204:	e59f00f0 	ldr	r0, [pc, #240]	; 400132fc <CyU3PDebugInit+0x174>
40013208:	e1cd00b8 	strh	r0, [sp, #8]
4001320c:	e1cd40ba 	strh	r4, [sp, #10]
40013210:	e3a00000 	mov	r0, #0
40013214:	e5cd0014 	strb	r0, [sp, #20]
40013218:	e1cd00be 	strh	r0, [sp, #14]
4001321c:	e1cd01b0 	strh	r0, [sp, #16]
40013220:	e1cd01b2 	strh	r0, [sp, #18]
40013224:	e58d001c 	str	r0, [sp, #28]
40013228:	e28d2004 	add	r2, sp, #4
4001322c:	e3a01004 	mov	r1, #4
40013230:	e59f00c8 	ldr	r0, [pc, #200]	; 40013300 <CyU3PDebugInit+0x178>
40013234:	eb000a71 	bl	40015c00 <CyU3PDmaChannelCreate>
40013238:	e1a05000 	mov	r5, r0
4001323c:	e3550000 	cmp	r5, #0
40013240:	1a000007 	bne	40013264 <CyU3PDebugInit+0xdc>
40013244:	e59f00b8 	ldr	r0, [pc, #184]	; 40013304 <CyU3PDebugInit+0x17c>
40013248:	e5900000 	ldr	r0, [r0]
4001324c:	e3500000 	cmp	r0, #0
40013250:	0a000003 	beq	40013264 <CyU3PDebugInit+0xdc>
40013254:	e3a01001 	mov	r1, #1
40013258:	e59f00a0 	ldr	r0, [pc, #160]	; 40013300 <CyU3PDebugInit+0x178>
4001325c:	eb0008d7 	bl	400155c0 <CyU3PDmaChannelCacheControl>
40013260:	e1a05000 	mov	r5, r0
40013264:	e3550000 	cmp	r5, #0
40013268:	1a000003 	bne	4001327c <CyU3PDebugInit+0xf4>
4001326c:	e3a01000 	mov	r1, #0
40013270:	e59f0088 	ldr	r0, [pc, #136]	; 40013300 <CyU3PDebugInit+0x178>
40013274:	eb000d97 	bl	400168d8 <CyU3PDmaChannelSetXfer>
40013278:	e1a05000 	mov	r5, r0
4001327c:	e3550000 	cmp	r5, #0
40013280:	1a000004 	bne	40013298 <CyU3PDebugInit+0x110>
40013284:	e3e02000 	mvn	r2, #0
40013288:	e59f1078 	ldr	r1, [pc, #120]	; 40013308 <CyU3PDebugInit+0x180>
4001328c:	e281000c 	add	r0, r1, #12
40013290:	eb000c22 	bl	40016320 <CyU3PDmaChannelGetBuffer>
40013294:	e1a05000 	mov	r5, r0
40013298:	e3550000 	cmp	r5, #0
4001329c:	0a000005 	beq	400132b8 <CyU3PDebugInit+0x130>
400132a0:	e59f0058 	ldr	r0, [pc, #88]	; 40013300 <CyU3PDebugInit+0x178>
400132a4:	eb000b4f 	bl	40015fe8 <CyU3PDmaChannelDestroy>
400132a8:	e59f0048 	ldr	r0, [pc, #72]	; 400132f8 <CyU3PDebugInit+0x170>
400132ac:	ebffdc8c 	bl	4000a4e4 <_txe_mutex_put>
400132b0:	e1a00005 	mov	r0, r5
400132b4:	eaffffc0 	b	400131bc <CyU3PDebugInit+0x34>
400132b8:	e3a00000 	mov	r0, #0
400132bc:	e59f1048 	ldr	r1, [pc, #72]	; 4001330c <CyU3PDebugInit+0x184>
400132c0:	e1c100b0 	strh	r0, [r1]
400132c4:	e59f1044 	ldr	r1, [pc, #68]	; 40013310 <CyU3PDebugInit+0x188>
400132c8:	e1c100b0 	strh	r0, [r1]
400132cc:	e59f0040 	ldr	r0, [pc, #64]	; 40013314 <CyU3PDebugInit+0x18c>
400132d0:	e5c06000 	strb	r6, [r0]
400132d4:	e3a00001 	mov	r0, #1
400132d8:	e2411010 	sub	r1, r1, #16
400132dc:	e5810000 	str	r0, [r1]
400132e0:	e59f0010 	ldr	r0, [pc, #16]	; 400132f8 <CyU3PDebugInit+0x170>
400132e4:	ebffdc7e 	bl	4000a4e4 <_txe_mutex_put>
400132e8:	e1a00005 	mov	r0, r5
400132ec:	eaffffb2 	b	400131bc <CyU3PDebugInit+0x34>
400132f0:	40030c90 	.word	0x40030c90
400132f4:	40030c94 	.word	0x40030c94
400132f8:	4003133c 	.word	0x4003133c
400132fc:	00003f01 	.word	0x00003f01
40013300:	40031380 	.word	0x40031380
40013304:	40030c80 	.word	0x40030c80
40013308:	40031374 	.word	0x40031374
4001330c:	40030c9e 	.word	0x40030c9e
40013310:	40030ca0 	.word	0x40030ca0
40013314:	40030c9c 	.word	0x40030c9c

Disassembly of section i.CyU3PDebugIntToStr:

40013318 <CyU3PDebugIntToStr>:
40013318:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001331c:	e1a04000 	mov	r4, r0
40013320:	e1a05001 	mov	r5, r1
40013324:	e1a08002 	mov	r8, r2
40013328:	e3a0600a 	mov	r6, #10
4001332c:	e1a07004 	mov	r7, r4
40013330:	e3a00000 	mov	r0, #0
40013334:	e1a04007 	mov	r4, r7
40013338:	e7c70006 	strb	r0, [r7, r6]
4001333c:	e1a00000 	nop			; (mov r0, r0)
40013340:	e1a01008 	mov	r1, r8
40013344:	e1a00005 	mov	r0, r5
40013348:	ebfff68c 	bl	40010d80 <__aeabi_uidivmod>
4001334c:	e28f0030 	add	r0, pc, #48	; 0x30
40013350:	e7d00001 	ldrb	r0, [r0, r1]
40013354:	e2461001 	sub	r1, r6, #1
40013358:	e20110ff 	and	r1, r1, #255	; 0xff
4001335c:	e1a06001 	mov	r6, r1
40013360:	e7c70001 	strb	r0, [r7, r1]
40013364:	e1a01008 	mov	r1, r8
40013368:	e1a00005 	mov	r0, r5
4001336c:	ebfff683 	bl	40010d80 <__aeabi_uidivmod>
40013370:	e1a05000 	mov	r5, r0
40013374:	e3550000 	cmp	r5, #0
40013378:	1afffff0 	bne	40013340 <CyU3PDebugIntToStr+0x28>
4001337c:	e0870006 	add	r0, r7, r6
40013380:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40013384:	33323130 	.word	0x33323130
40013388:	37363534 	.word	0x37363534
4001338c:	42413938 	.word	0x42413938
40013390:	46454443 	.word	0x46454443
40013394:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40013398 <CyU3PDebugPreamble>:
40013398:	e59f1004 	ldr	r1, [pc, #4]	; 400133a4 <CyU3PDebugPreamble+0xc>
4001339c:	e5810000 	str	r0, [r1]
400133a0:	e12fff1e 	bx	lr
400133a4:	40030c98 	.word	0x40030c98

Disassembly of section i.CyU3PDebugPrint:

400133a8 <CyU3PDebugPrint>:
400133a8:	e92d000f 	push	{r0, r1, r2, r3}
400133ac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400133b0:	e24dd028 	sub	sp, sp, #40	; 0x28
400133b4:	e1a04000 	mov	r4, r0
400133b8:	e59f0200 	ldr	r0, [pc, #512]	; 400135c0 <CyU3PDebugPrint+0x218>
400133bc:	e5900000 	ldr	r0, [r0]
400133c0:	e3500000 	cmp	r0, #0
400133c4:	1a000003 	bne	400133d8 <CyU3PDebugPrint+0x30>
400133c8:	e3a00042 	mov	r0, #66	; 0x42
400133cc:	e28dd028 	add	sp, sp, #40	; 0x28
400133d0:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400133d4:	e49df014 	ldr	pc, [sp], #20
400133d8:	e59f01e4 	ldr	r0, [pc, #484]	; 400135c4 <CyU3PDebugPrint+0x21c>
400133dc:	e5d00000 	ldrb	r0, [r0]
400133e0:	e1540000 	cmp	r4, r0
400133e4:	da000001 	ble	400133f0 <CyU3PDebugPrint+0x48>
400133e8:	e3a00000 	mov	r0, #0
400133ec:	eafffff6 	b	400133cc <CyU3PDebugPrint+0x24>
400133f0:	ebffd5f1 	bl	40008bbc <_tx_thread_identify>
400133f4:	e1a05000 	mov	r5, r0
400133f8:	e3550000 	cmp	r5, #0
400133fc:	1a000001 	bne	40013408 <CyU3PDebugPrint+0x60>
40013400:	e3a00013 	mov	r0, #19
40013404:	eafffff0 	b	400133cc <CyU3PDebugPrint+0x24>
40013408:	e3a03000 	mov	r3, #0
4001340c:	e58d3004 	str	r3, [sp, #4]
40013410:	e58d3008 	str	r3, [sp, #8]
40013414:	e58d300c 	str	r3, [sp, #12]
40013418:	e58d3010 	str	r3, [sp, #16]
4001341c:	e58d3000 	str	r3, [sp]
40013420:	e1a02003 	mov	r2, r3
40013424:	e28d1018 	add	r1, sp, #24
40013428:	e1a00005 	mov	r0, r5
4001342c:	ebffddd3 	bl	4000ab80 <_txe_thread_info_get>
40013430:	e59d0018 	ldr	r0, [sp, #24]
40013434:	e5d00001 	ldrb	r0, [r0, #1]
40013438:	e2400030 	sub	r0, r0, #48	; 0x30
4001343c:	e59d1018 	ldr	r1, [sp, #24]
40013440:	e5d11000 	ldrb	r1, [r1]
40013444:	e2411030 	sub	r1, r1, #48	; 0x30
40013448:	e3a0200a 	mov	r2, #10
4001344c:	e1000182 	smlabb	r0, r2, r1, r0
40013450:	e20080ff 	and	r8, r0, #255	; 0xff
40013454:	e3e01000 	mvn	r1, #0
40013458:	e59f0168 	ldr	r0, [pc, #360]	; 400135c8 <CyU3PDebugPrint+0x220>
4001345c:	ebffdbeb 	bl	4000a410 <_txe_mutex_get>
40013460:	e59f0164 	ldr	r0, [pc, #356]	; 400135cc <CyU3PDebugPrint+0x224>
40013464:	e1d000b0 	ldrh	r0, [r0]
40013468:	e3500000 	cmp	r0, #0
4001346c:	0a000011 	beq	400134b8 <CyU3PDebugPrint+0x110>
40013470:	e3a02000 	mov	r2, #0
40013474:	e3a01c01 	mov	r1, #256	; 0x100
40013478:	e59f0150 	ldr	r0, [pc, #336]	; 400135d0 <CyU3PDebugPrint+0x228>
4001347c:	eb000864 	bl	40015614 <CyU3PDmaChannelCommitBuffer>
40013480:	e1a06000 	mov	r6, r0
40013484:	e3560000 	cmp	r6, #0
40013488:	1a000004 	bne	400134a0 <CyU3PDebugPrint+0xf8>
4001348c:	e3e02000 	mvn	r2, #0
40013490:	e59f113c 	ldr	r1, [pc, #316]	; 400135d4 <CyU3PDebugPrint+0x22c>
40013494:	e281000c 	add	r0, r1, #12
40013498:	eb000ba0 	bl	40016320 <CyU3PDmaChannelGetBuffer>
4001349c:	e1a06000 	mov	r6, r0
400134a0:	e3560000 	cmp	r6, #0
400134a4:	0a000000 	beq	400134ac <CyU3PDebugPrint+0x104>
400134a8:	ebffff24 	bl	40013140 <CyU3PDebugChannelReset>
400134ac:	e3a00000 	mov	r0, #0
400134b0:	e59f1114 	ldr	r1, [pc, #276]	; 400135cc <CyU3PDebugPrint+0x224>
400134b4:	e1c100b0 	strh	r0, [r1]
400134b8:	e59f0114 	ldr	r0, [pc, #276]	; 400135d4 <CyU3PDebugPrint+0x22c>
400134bc:	e5907000 	ldr	r7, [r0]
400134c0:	e3a00c01 	mov	r0, #256	; 0x100
400134c4:	e58d0014 	str	r0, [sp, #20]
400134c8:	e59f0108 	ldr	r0, [pc, #264]	; 400135d8 <CyU3PDebugPrint+0x230>
400134cc:	e5900000 	ldr	r0, [r0]
400134d0:	e3500000 	cmp	r0, #0
400134d4:	0a000005 	beq	400134f0 <CyU3PDebugPrint+0x148>
400134d8:	e2877008 	add	r7, r7, #8
400134dc:	e1dd01b4 	ldrh	r0, [sp, #20]
400134e0:	e2400008 	sub	r0, r0, #8
400134e4:	e1a00800 	lsl	r0, r0, #16
400134e8:	e1a00820 	lsr	r0, r0, #16
400134ec:	e58d0014 	str	r0, [sp, #20]
400134f0:	e28d0048 	add	r0, sp, #72	; 0x48
400134f4:	e58d001c 	str	r0, [sp, #28]
400134f8:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
400134fc:	e59d301c 	ldr	r3, [sp, #28]
40013500:	e28d1014 	add	r1, sp, #20
40013504:	e1a00007 	mov	r0, r7
40013508:	eb000071 	bl	400136d4 <MyDebugSNPrint>
4001350c:	e1a06000 	mov	r6, r0
40013510:	e59f00c0 	ldr	r0, [pc, #192]	; 400135d8 <CyU3PDebugPrint+0x230>
40013514:	e5900000 	ldr	r0, [r0]
40013518:	e3500000 	cmp	r0, #0
4001351c:	0a00000f 	beq	40013560 <CyU3PDebugPrint+0x1b8>
40013520:	e59f00ac 	ldr	r0, [pc, #172]	; 400135d4 <CyU3PDebugPrint+0x22c>
40013524:	e5907000 	ldr	r7, [r0]
40013528:	e5cd4020 	strb	r4, [sp, #32]
4001352c:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40013530:	e3e00000 	mvn	r0, #0
40013534:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
40013538:	e1dd01b4 	ldrh	r0, [sp, #20]
4001353c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013540:	e3a02008 	mov	r2, #8
40013544:	e28d1020 	add	r1, sp, #32
40013548:	e1a00007 	mov	r0, r7
4001354c:	ebffc0e0 	bl	400038d4 <CyU3PMemCopy>
40013550:	e1dd01b4 	ldrh	r0, [sp, #20]
40013554:	e2800008 	add	r0, r0, #8
40013558:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001355c:	e58d0014 	str	r0, [sp, #20]
40013560:	e3a02000 	mov	r2, #0
40013564:	e1dd11b4 	ldrh	r1, [sp, #20]
40013568:	e59f0060 	ldr	r0, [pc, #96]	; 400135d0 <CyU3PDebugPrint+0x228>
4001356c:	eb000828 	bl	40015614 <CyU3PDmaChannelCommitBuffer>
40013570:	e1a06000 	mov	r6, r0
40013574:	e3560000 	cmp	r6, #0
40013578:	1a000004 	bne	40013590 <CyU3PDebugPrint+0x1e8>
4001357c:	e3e02000 	mvn	r2, #0
40013580:	e59f104c 	ldr	r1, [pc, #76]	; 400135d4 <CyU3PDebugPrint+0x22c>
40013584:	e281000c 	add	r0, r1, #12
40013588:	eb000b64 	bl	40016320 <CyU3PDmaChannelGetBuffer>
4001358c:	e1a06000 	mov	r6, r0
40013590:	e3560000 	cmp	r6, #0
40013594:	0a000002 	beq	400135a4 <CyU3PDebugPrint+0x1fc>
40013598:	ebfffee8 	bl	40013140 <CyU3PDebugChannelReset>
4001359c:	e1a00006 	mov	r0, r6
400135a0:	eaffff89 	b	400133cc <CyU3PDebugPrint+0x24>
400135a4:	e3a00000 	mov	r0, #0
400135a8:	e59f101c 	ldr	r1, [pc, #28]	; 400135cc <CyU3PDebugPrint+0x224>
400135ac:	e1c100b0 	strh	r0, [r1]
400135b0:	e59f0010 	ldr	r0, [pc, #16]	; 400135c8 <CyU3PDebugPrint+0x220>
400135b4:	ebffdbca 	bl	4000a4e4 <_txe_mutex_put>
400135b8:	e3a00000 	mov	r0, #0
400135bc:	eaffff82 	b	400133cc <CyU3PDebugPrint+0x24>
400135c0:	40030c90 	.word	0x40030c90
400135c4:	40030c9c 	.word	0x40030c9c
400135c8:	4003133c 	.word	0x4003133c
400135cc:	40030ca0 	.word	0x40030ca0
400135d0:	40031380 	.word	0x40031380
400135d4:	40031374 	.word	0x40031374
400135d8:	40030c98 	.word	0x40030c98

Disassembly of section i.CyU3PDebugThreadEntry:

400135dc <CyU3PDebugThreadEntry>:
400135dc:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
400135e0:	e1a06000 	mov	r6, r0
400135e4:	e3a05000 	mov	r5, #0
400135e8:	e1a00000 	nop			; (mov r0, r0)
400135ec:	e3e02000 	mvn	r2, #0
400135f0:	e1a0100d 	mov	r1, sp
400135f4:	e59f00c4 	ldr	r0, [pc, #196]	; 400136c0 <CyU3PDebugThreadEntry+0xe4>
400135f8:	ebffdc77 	bl	4000a7dc <_txe_queue_receive>
400135fc:	e1a04000 	mov	r4, r0
40013600:	e3540000 	cmp	r4, #0
40013604:	1afffff8 	bne	400135ec <CyU3PDebugThreadEntry+0x10>
40013608:	e3e01000 	mvn	r1, #0
4001360c:	e59f00b0 	ldr	r0, [pc, #176]	; 400136c4 <CyU3PDebugThreadEntry+0xe8>
40013610:	ebffdb7e 	bl	4000a410 <_txe_mutex_get>
40013614:	e59f00ac 	ldr	r0, [pc, #172]	; 400136c8 <CyU3PDebugThreadEntry+0xec>
40013618:	e1d000b0 	ldrh	r0, [r0]
4001361c:	e3500c01 	cmp	r0, #256	; 0x100
40013620:	0a000007 	beq	40013644 <CyU3PDebugThreadEntry+0x68>
40013624:	e59f10a0 	ldr	r1, [pc, #160]	; 400136cc <CyU3PDebugThreadEntry+0xf0>
40013628:	e5911000 	ldr	r1, [r1]
4001362c:	e59f2094 	ldr	r2, [pc, #148]	; 400136c8 <CyU3PDebugThreadEntry+0xec>
40013630:	e1d220b0 	ldrh	r2, [r2]
40013634:	e0810002 	add	r0, r1, r2
40013638:	e3a02008 	mov	r2, #8
4001363c:	e1a0100d 	mov	r1, sp
40013640:	ebffc0a3 	bl	400038d4 <CyU3PMemCopy>
40013644:	e59f007c 	ldr	r0, [pc, #124]	; 400136c8 <CyU3PDebugThreadEntry+0xec>
40013648:	e1d000b0 	ldrh	r0, [r0]
4001364c:	e35000f8 	cmp	r0, #248	; 0xf8
40013650:	1a000015 	bne	400136ac <CyU3PDebugThreadEntry+0xd0>
40013654:	e3a02000 	mov	r2, #0
40013658:	e3a01c01 	mov	r1, #256	; 0x100
4001365c:	e59f006c 	ldr	r0, [pc, #108]	; 400136d0 <CyU3PDebugThreadEntry+0xf4>
40013660:	eb0007eb 	bl	40015614 <CyU3PDmaChannelCommitBuffer>
40013664:	e1a05000 	mov	r5, r0
40013668:	e3550000 	cmp	r5, #0
4001366c:	1a000004 	bne	40013684 <CyU3PDebugThreadEntry+0xa8>
40013670:	e3e02000 	mvn	r2, #0
40013674:	e59f1050 	ldr	r1, [pc, #80]	; 400136cc <CyU3PDebugThreadEntry+0xf0>
40013678:	e281000c 	add	r0, r1, #12
4001367c:	eb000b27 	bl	40016320 <CyU3PDmaChannelGetBuffer>
40013680:	e1a05000 	mov	r5, r0
40013684:	e3550000 	cmp	r5, #0
40013688:	0a000004 	beq	400136a0 <CyU3PDebugThreadEntry+0xc4>
4001368c:	ebfffeab 	bl	40013140 <CyU3PDebugChannelReset>
40013690:	e1a05000 	mov	r5, r0
40013694:	e3550000 	cmp	r5, #0
40013698:	0a000000 	beq	400136a0 <CyU3PDebugThreadEntry+0xc4>
4001369c:	ea000005 	b	400136b8 <CyU3PDebugThreadEntry+0xdc>
400136a0:	e3a00000 	mov	r0, #0
400136a4:	e59f101c 	ldr	r1, [pc, #28]	; 400136c8 <CyU3PDebugThreadEntry+0xec>
400136a8:	e1c100b0 	strh	r0, [r1]
400136ac:	e59f0010 	ldr	r0, [pc, #16]	; 400136c4 <CyU3PDebugThreadEntry+0xe8>
400136b0:	ebffdb8b 	bl	4000a4e4 <_txe_mutex_put>
400136b4:	eaffffcc 	b	400135ec <CyU3PDebugThreadEntry+0x10>
400136b8:	e1a00000 	nop			; (mov r0, r0)
400136bc:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
400136c0:	40031300 	.word	0x40031300
400136c4:	4003133c 	.word	0x4003133c
400136c8:	40030ca0 	.word	0x40030ca0
400136cc:	40031374 	.word	0x40031374
400136d0:	40031380 	.word	0x40031380

Disassembly of section i.MyDebugSNPrint:

400136d4 <MyDebugSNPrint>:
400136d4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400136d8:	e24dd01c 	sub	sp, sp, #28
400136dc:	e1a04000 	mov	r4, r0
400136e0:	e1a05001 	mov	r5, r1
400136e4:	e1a06002 	mov	r6, r2
400136e8:	e3a08000 	mov	r8, #0
400136ec:	e3a00000 	mov	r0, #0
400136f0:	e58d0018 	str	r0, [sp, #24]
400136f4:	e3a09000 	mov	r9, #0
400136f8:	e1d5b0b0 	ldrh	fp, [r5]
400136fc:	e3540000 	cmp	r4, #0
40013700:	1a000002 	bne	40013710 <MyDebugSNPrint+0x3c>
40013704:	e3a00040 	mov	r0, #64	; 0x40
40013708:	e28dd02c 	add	sp, sp, #44	; 0x2c
4001370c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40013710:	e1a07006 	mov	r7, r6
40013714:	ea00008d 	b	40013950 <MyDebugSNPrint+0x27c>
40013718:	e24b0002 	sub	r0, fp, #2
4001371c:	e1500009 	cmp	r0, r9
40013720:	ca000001 	bgt	4001372c <MyDebugSNPrint+0x58>
40013724:	e3a00040 	mov	r0, #64	; 0x40
40013728:	eafffff6 	b	40013708 <MyDebugSNPrint+0x34>
4001372c:	e5d70000 	ldrb	r0, [r7]
40013730:	e3500025 	cmp	r0, #37	; 0x25
40013734:	0a000005 	beq	40013750 <MyDebugSNPrint+0x7c>
40013738:	e5d71000 	ldrb	r1, [r7]
4001373c:	e1a00009 	mov	r0, r9
40013740:	e2892001 	add	r2, r9, #1
40013744:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013748:	e7c41000 	strb	r1, [r4, r0]
4001374c:	ea00007e 	b	4001394c <MyDebugSNPrint+0x278>
40013750:	e2877001 	add	r7, r7, #1
40013754:	e5d70000 	ldrb	r0, [r7]
40013758:	e3500064 	cmp	r0, #100	; 0x64
4001375c:	0a000021 	beq	400137e8 <MyDebugSNPrint+0x114>
40013760:	ca000006 	bgt	40013780 <MyDebugSNPrint+0xac>
40013764:	e3500025 	cmp	r0, #37	; 0x25
40013768:	0a00000b 	beq	4001379c <MyDebugSNPrint+0xc8>
4001376c:	e3500058 	cmp	r0, #88	; 0x58
40013770:	0a00004c 	beq	400138a8 <MyDebugSNPrint+0x1d4>
40013774:	e3500063 	cmp	r0, #99	; 0x63
40013778:	1a00005a 	bne	400138e8 <MyDebugSNPrint+0x214>
4001377c:	ea00000d 	b	400137b8 <MyDebugSNPrint+0xe4>
40013780:	e3500073 	cmp	r0, #115	; 0x73
40013784:	0a000031 	beq	40013850 <MyDebugSNPrint+0x17c>
40013788:	e3500075 	cmp	r0, #117	; 0x75
4001378c:	0a000036 	beq	4001386c <MyDebugSNPrint+0x198>
40013790:	e3500078 	cmp	r0, #120	; 0x78
40013794:	1a000053 	bne	400138e8 <MyDebugSNPrint+0x214>
40013798:	ea000044 	b	400138b0 <MyDebugSNPrint+0x1dc>
4001379c:	e1a00000 	nop			; (mov r0, r0)
400137a0:	e3a01025 	mov	r1, #37	; 0x25
400137a4:	e1a00009 	mov	r0, r9
400137a8:	e2892001 	add	r2, r9, #1
400137ac:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400137b0:	e7c41000 	strb	r1, [r4, r0]
400137b4:	ea00004e 	b	400138f4 <MyDebugSNPrint+0x220>
400137b8:	e1a00000 	nop			; (mov r0, r0)
400137bc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137c0:	e5900000 	ldr	r0, [r0]
400137c4:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
400137c8:	e2811004 	add	r1, r1, #4
400137cc:	e58d1028 	str	r1, [sp, #40]	; 0x28
400137d0:	e20010ff 	and	r1, r0, #255	; 0xff
400137d4:	e1a00009 	mov	r0, r9
400137d8:	e2892001 	add	r2, r9, #1
400137dc:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400137e0:	e7c41000 	strb	r1, [r4, r0]
400137e4:	ea000042 	b	400138f4 <MyDebugSNPrint+0x220>
400137e8:	e1a00000 	nop			; (mov r0, r0)
400137ec:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137f0:	e5900000 	ldr	r0, [r0]
400137f4:	e58d0014 	str	r0, [sp, #20]
400137f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137fc:	e2800004 	add	r0, r0, #4
40013800:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013804:	e59d0014 	ldr	r0, [sp, #20]
40013808:	e3500000 	cmp	r0, #0
4001380c:	aa000007 	bge	40013830 <MyDebugSNPrint+0x15c>
40013810:	e3a0102d 	mov	r1, #45	; 0x2d
40013814:	e1a00009 	mov	r0, r9
40013818:	e2892001 	add	r2, r9, #1
4001381c:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013820:	e7c41000 	strb	r1, [r4, r0]
40013824:	e59d0014 	ldr	r0, [sp, #20]
40013828:	e2600000 	rsb	r0, r0, #0
4001382c:	e58d0014 	str	r0, [sp, #20]
40013830:	e3a0200a 	mov	r2, #10
40013834:	e59d1014 	ldr	r1, [sp, #20]
40013838:	e28d0004 	add	r0, sp, #4
4001383c:	ebfffeb5 	bl	40013318 <CyU3PDebugIntToStr>
40013840:	e1a08000 	mov	r8, r0
40013844:	e3a00001 	mov	r0, #1
40013848:	e58d0018 	str	r0, [sp, #24]
4001384c:	ea000028 	b	400138f4 <MyDebugSNPrint+0x220>
40013850:	e1a00000 	nop			; (mov r0, r0)
40013854:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013858:	e4908004 	ldr	r8, [r0], #4
4001385c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013860:	e3a00001 	mov	r0, #1
40013864:	e58d0018 	str	r0, [sp, #24]
40013868:	ea000021 	b	400138f4 <MyDebugSNPrint+0x220>
4001386c:	e1a00000 	nop			; (mov r0, r0)
40013870:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013874:	e5900000 	ldr	r0, [r0]
40013878:	e58d0010 	str	r0, [sp, #16]
4001387c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013880:	e2800004 	add	r0, r0, #4
40013884:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013888:	e3a0200a 	mov	r2, #10
4001388c:	e59d1010 	ldr	r1, [sp, #16]
40013890:	e28d0004 	add	r0, sp, #4
40013894:	ebfffe9f 	bl	40013318 <CyU3PDebugIntToStr>
40013898:	e1a08000 	mov	r8, r0
4001389c:	e3a00001 	mov	r0, #1
400138a0:	e58d0018 	str	r0, [sp, #24]
400138a4:	ea000012 	b	400138f4 <MyDebugSNPrint+0x220>
400138a8:	e1a00000 	nop			; (mov r0, r0)
400138ac:	e1a00000 	nop			; (mov r0, r0)
400138b0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400138b4:	e5900000 	ldr	r0, [r0]
400138b8:	e58d0010 	str	r0, [sp, #16]
400138bc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400138c0:	e2800004 	add	r0, r0, #4
400138c4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400138c8:	e3a02010 	mov	r2, #16
400138cc:	e59d1010 	ldr	r1, [sp, #16]
400138d0:	e28d0004 	add	r0, sp, #4
400138d4:	ebfffe8f 	bl	40013318 <CyU3PDebugIntToStr>
400138d8:	e1a08000 	mov	r8, r0
400138dc:	e3a00001 	mov	r0, #1
400138e0:	e58d0018 	str	r0, [sp, #24]
400138e4:	ea000002 	b	400138f4 <MyDebugSNPrint+0x220>
400138e8:	e1a00000 	nop			; (mov r0, r0)
400138ec:	e3a00040 	mov	r0, #64	; 0x40
400138f0:	eaffff84 	b	40013708 <MyDebugSNPrint+0x34>
400138f4:	e1a00000 	nop			; (mov r0, r0)
400138f8:	e59d0018 	ldr	r0, [sp, #24]
400138fc:	e3500000 	cmp	r0, #0
40013900:	0a000010 	beq	40013948 <MyDebugSNPrint+0x274>
40013904:	e1a00008 	mov	r0, r8
40013908:	ebfff4c7 	bl	40010c2c <strlen>
4001390c:	e1a0a800 	lsl	sl, r0, #16
40013910:	e1a0a82a 	lsr	sl, sl, #16
40013914:	e04b000a 	sub	r0, fp, sl
40013918:	e2400001 	sub	r0, r0, #1
4001391c:	e1500009 	cmp	r0, r9
40013920:	ca000001 	bgt	4001392c <MyDebugSNPrint+0x258>
40013924:	e3a00040 	mov	r0, #64	; 0x40
40013928:	eaffff76 	b	40013708 <MyDebugSNPrint+0x34>
4001392c:	e0840009 	add	r0, r4, r9
40013930:	e1a01008 	mov	r1, r8
40013934:	ebfff480 	bl	40010b3c <strcpy>
40013938:	e089000a 	add	r0, r9, sl
4001393c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013940:	e3a00000 	mov	r0, #0
40013944:	e58d0018 	str	r0, [sp, #24]
40013948:	e1a00000 	nop			; (mov r0, r0)
4001394c:	e2877001 	add	r7, r7, #1
40013950:	e5d70000 	ldrb	r0, [r7]
40013954:	e3500000 	cmp	r0, #0
40013958:	1affff6e 	bne	40013718 <MyDebugSNPrint+0x44>
4001395c:	e3a00000 	mov	r0, #0
40013960:	e7c40009 	strb	r0, [r4, r9]
40013964:	e1c590b0 	strh	r9, [r5]
40013968:	eaffff66 	b	40013708 <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

4001396c <CyU3PBusyWait>:
4001396c:	ea000006 	b	4001398c <CyU3PBusyWait+0x20>
40013970:	e3a01000 	mov	r1, #0
40013974:	ea000002 	b	40013984 <CyU3PBusyWait+0x18>
40013978:	e281100a 	add	r1, r1, #10
4001397c:	e241100a 	sub	r1, r1, #10
40013980:	e2811001 	add	r1, r1, #1
40013984:	e351001f 	cmp	r1, #31
40013988:	3afffffa 	bcc	40013978 <CyU3PBusyWait+0xc>
4001398c:	e1b02000 	movs	r2, r0
40013990:	e2403001 	sub	r3, r0, #1
40013994:	e1a00803 	lsl	r0, r3, #16
40013998:	e1a00820 	lsr	r0, r0, #16
4001399c:	1afffff3 	bne	40013970 <CyU3PBusyWait+0x4>
400139a0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

400139a4 <CyU3PComputeChecksum>:
400139a4:	e92d4010 	push	{r4, lr}
400139a8:	e1a03000 	mov	r3, r0
400139ac:	e3a00000 	mov	r0, #0
400139b0:	e3530000 	cmp	r3, #0
400139b4:	0a000003 	beq	400139c8 <CyU3PComputeChecksum+0x24>
400139b8:	e3510000 	cmp	r1, #0
400139bc:	0a000001 	beq	400139c8 <CyU3PComputeChecksum+0x24>
400139c0:	e3520000 	cmp	r2, #0
400139c4:	1a000001 	bne	400139d0 <CyU3PComputeChecksum+0x2c>
400139c8:	e3a00040 	mov	r0, #64	; 0x40
400139cc:	ea00000a 	b	400139fc <CyU3PComputeChecksum+0x58>
400139d0:	e3a0e000 	mov	lr, #0
400139d4:	e582e000 	str	lr, [r2]
400139d8:	e3a0c000 	mov	ip, #0
400139dc:	ea000004 	b	400139f4 <CyU3PComputeChecksum+0x50>
400139e0:	e592e000 	ldr	lr, [r2]
400139e4:	e793410c 	ldr	r4, [r3, ip, lsl #2]
400139e8:	e08ee004 	add	lr, lr, r4
400139ec:	e582e000 	str	lr, [r2]
400139f0:	e28cc001 	add	ip, ip, #1
400139f4:	e15c0121 	cmp	ip, r1, lsr #2
400139f8:	3afffff8 	bcc	400139e0 <CyU3PComputeChecksum+0x3c>
400139fc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

40013a00 <__aeabi_memclr4>:
40013a00:	e92d4030 	push	{r4, r5, lr}
40013a04:	e1a04000 	mov	r4, r0
40013a08:	e1a05001 	mov	r5, r1
40013a0c:	e3a02000 	mov	r2, #0
40013a10:	e1a01005 	mov	r1, r5
40013a14:	e1a00004 	mov	r0, r4
40013a18:	eb000020 	bl	40013aa0 <__aeabi_memset>
40013a1c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

40013a20 <__aeabi_memcpy>:
40013a20:	e92d4010 	push	{r4, lr}
40013a24:	e1a03000 	mov	r3, r0
40013a28:	e1a0c001 	mov	ip, r1
40013a2c:	e1500001 	cmp	r0, r1
40013a30:	2a000006 	bcs	40013a50 <__aeabi_memcpy+0x30>
40013a34:	ea000001 	b	40013a40 <__aeabi_memcpy+0x20>
40013a38:	e4dce001 	ldrb	lr, [ip], #1
40013a3c:	e4c3e001 	strb	lr, [r3], #1
40013a40:	e1b0e002 	movs	lr, r2
40013a44:	e2422001 	sub	r2, r2, #1
40013a48:	1afffffa 	bne	40013a38 <__aeabi_memcpy+0x18>
40013a4c:	ea000009 	b	40013a78 <__aeabi_memcpy+0x58>
40013a50:	e080e002 	add	lr, r0, r2
40013a54:	e24e3001 	sub	r3, lr, #1
40013a58:	e081e002 	add	lr, r1, r2
40013a5c:	e24ec001 	sub	ip, lr, #1
40013a60:	ea000001 	b	40013a6c <__aeabi_memcpy+0x4c>
40013a64:	e45ce001 	ldrb	lr, [ip], #-1
40013a68:	e443e001 	strb	lr, [r3], #-1
40013a6c:	e1b0e002 	movs	lr, r2
40013a70:	e2422001 	sub	r2, r2, #1
40013a74:	1afffffa 	bne	40013a64 <__aeabi_memcpy+0x44>
40013a78:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013a7c <__aeabi_memcpy4>:
40013a7c:	e92d4070 	push	{r4, r5, r6, lr}
40013a80:	e1a04000 	mov	r4, r0
40013a84:	e1a05001 	mov	r5, r1
40013a88:	e1a06002 	mov	r6, r2
40013a8c:	e1a02006 	mov	r2, r6
40013a90:	e1a01005 	mov	r1, r5
40013a94:	e1a00004 	mov	r0, r4
40013a98:	ebffffe0 	bl	40013a20 <__aeabi_memcpy>
40013a9c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

40013aa0 <__aeabi_memset>:
40013aa0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40013aa4:	e1a03000 	mov	r3, r0
40013aa8:	ea000000 	b	40013ab0 <__aeabi_memset+0x10>
40013aac:	e4c32001 	strb	r2, [r3], #1
40013ab0:	e1b0c001 	movs	ip, r1
40013ab4:	e2411001 	sub	r1, r1, #1
40013ab8:	1afffffb 	bne	40013aac <__aeabi_memset+0xc>
40013abc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013ac0 <CyU3PApplicationDefine>:
40013ac0:	e92d4010 	push	{r4, lr}
40013ac4:	e24dd020 	sub	sp, sp, #32
40013ac8:	e3e00000 	mvn	r0, #0
40013acc:	e59f10b4 	ldr	r1, [pc, #180]	; 40013b88 <CyU3PApplicationDefine+0xc8>
40013ad0:	e5810000 	str	r0, [r1]
40013ad4:	e3a00000 	mov	r0, #0
40013ad8:	e59f10ac 	ldr	r1, [pc, #172]	; 40013b8c <CyU3PApplicationDefine+0xcc>
40013adc:	e5810000 	str	r0, [r1]
40013ae0:	ebffbed0 	bl	40003628 <CyU3PMemInit>
40013ae4:	eb001694 	bl	4001953c <CyU3PDmaApplicationDefine>
40013ae8:	e3a02028 	mov	r2, #40	; 0x28
40013aec:	e3a01000 	mov	r1, #0
40013af0:	e59f0098 	ldr	r0, [pc, #152]	; 40013b90 <CyU3PApplicationDefine+0xd0>
40013af4:	ebffd90d 	bl	40009f30 <_txe_event_flags_create>
40013af8:	e3a00080 	mov	r0, #128	; 0x80
40013afc:	ebffbedc 	bl	40003674 <CyU3PMemAlloc>
40013b00:	e1a04000 	mov	r4, r0
40013b04:	e3a0303c 	mov	r3, #60	; 0x3c
40013b08:	e3a02080 	mov	r2, #128	; 0x80
40013b0c:	e1cd20f0 	strd	r2, [sp]
40013b10:	e1a03004 	mov	r3, r4
40013b14:	e3a02006 	mov	r2, #6
40013b18:	e3a01000 	mov	r1, #0
40013b1c:	e59f0070 	ldr	r0, [pc, #112]	; 40013b94 <CyU3PApplicationDefine+0xd4>
40013b20:	ebffda97 	bl	4000a584 <_txe_queue_create>
40013b24:	e3a00b01 	mov	r0, #1024	; 0x400
40013b28:	ebffbed1 	bl	40003674 <CyU3PMemAlloc>
40013b2c:	e1a04000 	mov	r4, r0
40013b30:	e3a030a8 	mov	r3, #168	; 0xa8
40013b34:	e3a02001 	mov	r2, #1
40013b38:	e3a01000 	mov	r1, #0
40013b3c:	e3a00004 	mov	r0, #4
40013b40:	e28dc00c 	add	ip, sp, #12
40013b44:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013b48:	e3a02b01 	mov	r2, #1024	; 0x400
40013b4c:	e1a03001 	mov	r3, r1
40013b50:	e58d2004 	str	r2, [sp, #4]
40013b54:	e59f203c 	ldr	r2, [pc, #60]	; 40013b98 <CyU3PApplicationDefine+0xd8>
40013b58:	e28f103c 	add	r1, pc, #60	; 0x3c
40013b5c:	e58d0008 	str	r0, [sp, #8]
40013b60:	e59f0048 	ldr	r0, [pc, #72]	; 40013bb0 <CyU3PApplicationDefine+0xf0>
40013b64:	e58d4000 	str	r4, [sp]
40013b68:	ebffdb6b 	bl	4000a91c <_txe_thread_create>
40013b6c:	eb000082 	bl	40013d7c <CyU3PSibApplicationDefine>
40013b70:	ebfffd3d 	bl	4001306c <CyU3PDebugApplicationDefine>
40013b74:	eb001d16 	bl	4001afd4 <CyU3PPibApplicationDefine>
40013b78:	eb00013c 	bl	40014070 <CyU3PLppApplicationDefine>
40013b7c:	eb002b6f 	bl	4001e940 <CyU3PUibApplicationDefine>
40013b80:	e28dd020 	add	sp, sp, #32
40013b84:	e8bd8010 	pop	{r4, pc}
40013b88:	40030ca4 	.word	0x40030ca4
40013b8c:	40030ca8 	.word	0x40030ca8
40013b90:	400314c8 	.word	0x400314c8
40013b94:	400314f0 	.word	0x400314f0
40013b98:	40013c68 	.word	0x40013c68
40013b9c:	535f3230 	.word	0x535f3230
40013ba0:	45545359 	.word	0x45545359
40013ba4:	48545f4d 	.word	0x48545f4d
40013ba8:	44414552 	.word	0x44414552
40013bac:	00000000 	.word	0x00000000
40013bb0:	40031420 	.word	0x40031420

Disassembly of section i.CyU3PSysCheckBootState:

40013bb4 <CyU3PSysCheckBootState>:
40013bb4:	e92d4070 	push	{r4, r5, r6, lr}
40013bb8:	e3a00000 	mov	r0, #0
40013bbc:	e59f106c 	ldr	r1, [pc, #108]	; 40013c30 <CyU3PSysCheckBootState+0x7c>
40013bc0:	e5810000 	str	r0, [r1]
40013bc4:	e59f0068 	ldr	r0, [pc, #104]	; 40013c34 <CyU3PSysCheckBootState+0x80>
40013bc8:	e5900000 	ldr	r0, [r0]
40013bcc:	e3100401 	tst	r0, #16777216	; 0x1000000
40013bd0:	0a000015 	beq	40013c2c <CyU3PSysCheckBootState+0x78>
40013bd4:	e59f005c 	ldr	r0, [pc, #92]	; 40013c38 <CyU3PSysCheckBootState+0x84>
40013bd8:	e5900000 	ldr	r0, [r0]
40013bdc:	e3500001 	cmp	r0, #1
40013be0:	1a000011 	bne	40013c2c <CyU3PSysCheckBootState+0x78>
40013be4:	e3a00000 	mov	r0, #0
40013be8:	e59f1048 	ldr	r1, [pc, #72]	; 40013c38 <CyU3PSysCheckBootState+0x84>
40013bec:	e5810000 	str	r0, [r1]
40013bf0:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013bf4:	e5904004 	ldr	r4, [r0, #4]
40013bf8:	e1a05004 	mov	r5, r4
40013bfc:	e3a02901 	mov	r2, #16384	; 0x4000
40013c00:	e1a01005 	mov	r1, r5
40013c04:	e3a00000 	mov	r0, #0
40013c08:	ebffbf31 	bl	400038d4 <CyU3PMemCopy>
40013c0c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013c10:	e5900008 	ldr	r0, [r0, #8]
40013c14:	e59f1020 	ldr	r1, [pc, #32]	; 40013c3c <CyU3PSysCheckBootState+0x88>
40013c18:	e1500001 	cmp	r0, r1
40013c1c:	1a000002 	bne	40013c2c <CyU3PSysCheckBootState+0x78>
40013c20:	e2840901 	add	r0, r4, #16384	; 0x4000
40013c24:	e59f1004 	ldr	r1, [pc, #4]	; 40013c30 <CyU3PSysCheckBootState+0x7c>
40013c28:	e5810000 	str	r0, [r1]
40013c2c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c30:	40030cac 	.word	0x40030cac
40013c34:	e0050000 	.word	0xe0050000
40013c38:	40030ca8 	.word	0x40030ca8
40013c3c:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013c40 <CyU3PSysFwMsgHandler>:
40013c40:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013c44 <CyU3PSysModuleInitCompleteEvt>:
40013c44:	e92d4010 	push	{r4, lr}
40013c48:	e1a04000 	mov	r4, r0
40013c4c:	e3a00010 	mov	r0, #16
40013c50:	e1a01410 	lsl	r1, r0, r4
40013c54:	e3a02000 	mov	r2, #0
40013c58:	e59f0004 	ldr	r0, [pc, #4]	; 40013c64 <CyU3PSysModuleInitCompleteEvt+0x20>
40013c5c:	ebffd953 	bl	4000a1b0 <_txe_event_flags_set>
40013c60:	e8bd8010 	pop	{r4, pc}
40013c64:	400314c8 	.word	0x400314c8

Disassembly of section i.CyU3PSysThreadEntry:

40013c68 <CyU3PSysThreadEntry>:
40013c68:	e92d4010 	push	{r4, lr}
40013c6c:	e24dd028 	sub	sp, sp, #40	; 0x28
40013c70:	e3a04c02 	mov	r4, #512	; 0x200
40013c74:	e3844080 	orr	r4, r4, #128	; 0x80
40013c78:	e3e03000 	mvn	r3, #0
40013c7c:	e58d3000 	str	r3, [sp]
40013c80:	e28d3024 	add	r3, sp, #36	; 0x24
40013c84:	e3a02003 	mov	r2, #3
40013c88:	e1a01004 	mov	r1, r4
40013c8c:	e59f00d8 	ldr	r0, [pc, #216]	; 40013d6c <CyU3PSysThreadEntry+0x104>
40013c90:	ebffd916 	bl	4000a0f0 <_txe_event_flags_get>
40013c94:	e28d2020 	add	r2, sp, #32
40013c98:	e3a01000 	mov	r1, #0
40013c9c:	e59f00cc 	ldr	r0, [pc, #204]	; 40013d70 <CyU3PSysThreadEntry+0x108>
40013ca0:	ebffdbd3 	bl	4000abf4 <_txe_thread_priority_change>
40013ca4:	ebffd318 	bl	4000890c <CyFxApplicationDefine>
40013ca8:	e28d2020 	add	r2, sp, #32
40013cac:	e3a01004 	mov	r1, #4
40013cb0:	e59f00b8 	ldr	r0, [pc, #184]	; 40013d70 <CyU3PSysThreadEntry+0x108>
40013cb4:	ebffdbce 	bl	4000abf4 <_txe_thread_priority_change>
40013cb8:	ea00002a 	b	40013d68 <CyU3PSysThreadEntry+0x100>
40013cbc:	e59f00b0 	ldr	r0, [pc, #176]	; 40013d74 <CyU3PSysThreadEntry+0x10c>
40013cc0:	e5903000 	ldr	r3, [r0]
40013cc4:	e58d3000 	str	r3, [sp]
40013cc8:	e28d3024 	add	r3, sp, #36	; 0x24
40013ccc:	e3a02001 	mov	r2, #1
40013cd0:	e3e01000 	mvn	r1, #0
40013cd4:	e59f0090 	ldr	r0, [pc, #144]	; 40013d6c <CyU3PSysThreadEntry+0x104>
40013cd8:	ebffd904 	bl	4000a0f0 <_txe_event_flags_get>
40013cdc:	e58d0020 	str	r0, [sp, #32]
40013ce0:	e59d0020 	ldr	r0, [sp, #32]
40013ce4:	e3500000 	cmp	r0, #0
40013ce8:	0a000000 	beq	40013cf0 <CyU3PSysThreadEntry+0x88>
40013cec:	ea00001d 	b	40013d68 <CyU3PSysThreadEntry+0x100>
40013cf0:	e3a04001 	mov	r4, #1
40013cf4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013cf8:	e0000004 	and	r0, r0, r4
40013cfc:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013d00:	ea000014 	b	40013d58 <CyU3PSysThreadEntry+0xf0>
40013d04:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013d08:	e3100001 	tst	r0, #1
40013d0c:	0a000011 	beq	40013d58 <CyU3PSysThreadEntry+0xf0>
40013d10:	e3a02000 	mov	r2, #0
40013d14:	e28d1008 	add	r1, sp, #8
40013d18:	e59f0058 	ldr	r0, [pc, #88]	; 40013d78 <CyU3PSysThreadEntry+0x110>
40013d1c:	ebffdaae 	bl	4000a7dc <_txe_queue_receive>
40013d20:	e58d0020 	str	r0, [sp, #32]
40013d24:	e59d0020 	ldr	r0, [sp, #32]
40013d28:	e3500000 	cmp	r0, #0
40013d2c:	1a000006 	bne	40013d4c <CyU3PSysThreadEntry+0xe4>
40013d30:	e1dd00b8 	ldrh	r0, [sp, #8]
40013d34:	e2000902 	and	r0, r0, #32768	; 0x8000
40013d38:	e1b007a0 	lsrs	r0, r0, #15
40013d3c:	1a000005 	bne	40013d58 <CyU3PSysThreadEntry+0xf0>
40013d40:	e28d0008 	add	r0, sp, #8
40013d44:	ebffffbd 	bl	40013c40 <CyU3PSysFwMsgHandler>
40013d48:	ea000002 	b	40013d58 <CyU3PSysThreadEntry+0xf0>
40013d4c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013d50:	e3c00001 	bic	r0, r0, #1
40013d54:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013d58:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013d5c:	e3500000 	cmp	r0, #0
40013d60:	1affffe7 	bne	40013d04 <CyU3PSysThreadEntry+0x9c>
40013d64:	e1a00000 	nop			; (mov r0, r0)
40013d68:	eaffffd3 	b	40013cbc <CyU3PSysThreadEntry+0x54>
40013d6c:	400314c8 	.word	0x400314c8
40013d70:	40031420 	.word	0x40031420
40013d74:	40030ca4 	.word	0x40030ca4
40013d78:	400314f0 	.word	0x400314f0

Disassembly of section i.CyU3PSibApplicationDefine:

40013d7c <CyU3PSibApplicationDefine>:
40013d7c:	e92d4010 	push	{r4, lr}
40013d80:	e24dd020 	sub	sp, sp, #32
40013d84:	e3a04000 	mov	r4, #0
40013d88:	e3a02028 	mov	r2, #40	; 0x28
40013d8c:	e3a01000 	mov	r1, #0
40013d90:	e59f0064 	ldr	r0, [pc, #100]	; 40013dfc <CyU3PSibApplicationDefine+0x80>
40013d94:	ebffd865 	bl	40009f30 <_txe_event_flags_create>
40013d98:	e3a00000 	mov	r0, #0
40013d9c:	e59f105c 	ldr	r1, [pc, #92]	; 40013e00 <CyU3PSibApplicationDefine+0x84>
40013da0:	e5810000 	str	r0, [r1]
40013da4:	e3a00b02 	mov	r0, #2048	; 0x800
40013da8:	ebffbe31 	bl	40003674 <CyU3PMemAlloc>
40013dac:	e1a04000 	mov	r4, r0
40013db0:	e3540000 	cmp	r4, #0
40013db4:	0a00000e 	beq	40013df4 <CyU3PSibApplicationDefine+0x78>
40013db8:	e3a030a8 	mov	r3, #168	; 0xa8
40013dbc:	e3a02001 	mov	r2, #1
40013dc0:	e3a01000 	mov	r1, #0
40013dc4:	e3a00004 	mov	r0, #4
40013dc8:	e28dc00c 	add	ip, sp, #12
40013dcc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013dd0:	e3a02b02 	mov	r2, #2048	; 0x800
40013dd4:	e1a03001 	mov	r3, r1
40013dd8:	e58d2004 	str	r2, [sp, #4]
40013ddc:	e59f2020 	ldr	r2, [pc, #32]	; 40013e04 <CyU3PSibApplicationDefine+0x88>
40013de0:	e28f1020 	add	r1, pc, #32
40013de4:	e58d0008 	str	r0, [sp, #8]
40013de8:	e59f0028 	ldr	r0, [pc, #40]	; 40013e18 <CyU3PSibApplicationDefine+0x9c>
40013dec:	e58d4000 	str	r4, [sp]
40013df0:	ebffdac9 	bl	4000a91c <_txe_thread_create>
40013df4:	e28dd020 	add	sp, sp, #32
40013df8:	e8bd8010 	pop	{r4, pc}
40013dfc:	400315d4 	.word	0x400315d4
40013e00:	40030cb0 	.word	0x40030cb0
40013e04:	40013e74 	.word	0x40013e74
40013e08:	535f3630 	.word	0x535f3630
40013e0c:	545f4249 	.word	0x545f4249
40013e10:	41455248 	.word	0x41455248
40013e14:	00000044 	.word	0x00000044
40013e18:	4003152c 	.word	0x4003152c

Disassembly of section i.CyU3PSibInitIntfParams:

40013e1c <CyU3PSibInitIntfParams>:
40013e1c:	e0802100 	add	r2, r0, r0, lsl #2
40013e20:	e59f3048 	ldr	r3, [pc, #72]	; 40013e70 <CyU3PSibInitIntfParams+0x54>
40013e24:	e0831102 	add	r1, r3, r2, lsl #2
40013e28:	e3a020ff 	mov	r2, #255	; 0xff
40013e2c:	e5c12000 	strb	r2, [r1]
40013e30:	e3a02002 	mov	r2, #2
40013e34:	e5c12008 	strb	r2, [r1, #8]
40013e38:	e3a02001 	mov	r2, #1
40013e3c:	e5c12009 	strb	r2, [r1, #9]
40013e40:	e3a02000 	mov	r2, #0
40013e44:	e5c12010 	strb	r2, [r1, #16]
40013e48:	e5c1200a 	strb	r2, [r1, #10]
40013e4c:	e3a020ff 	mov	r2, #255	; 0xff
40013e50:	e5c1200b 	strb	r2, [r1, #11]
40013e54:	e3a02000 	mov	r2, #0
40013e58:	e581200c 	str	r2, [r1, #12]
40013e5c:	e3a02004 	mov	r2, #4
40013e60:	e5c12011 	strb	r2, [r1, #17]
40013e64:	e3a02000 	mov	r2, #0
40013e68:	e5c12012 	strb	r2, [r1, #18]
40013e6c:	e12fff1e 	bx	lr
40013e70:	400315fc 	.word	0x400315fc

Disassembly of section i.CyU3PSibThreadEntry:

40013e74 <CyU3PSibThreadEntry>:
40013e74:	e92d4010 	push	{r4, lr}
40013e78:	e3a00000 	mov	r0, #0
40013e7c:	ebffffe6 	bl	40013e1c <CyU3PSibInitIntfParams>
40013e80:	e3a00001 	mov	r0, #1
40013e84:	ebffffe4 	bl	40013e1c <CyU3PSibInitIntfParams>
40013e88:	e3a00003 	mov	r0, #3
40013e8c:	ebffff6c 	bl	40013c44 <CyU3PSysModuleInitCompleteEvt>
40013e90:	ea000009 	b	40013ebc <CyU3PSibThreadEntry+0x48>
40013e94:	e59f0024 	ldr	r0, [pc, #36]	; 40013ec0 <CyU3PSibThreadEntry+0x4c>
40013e98:	e5900000 	ldr	r0, [r0]
40013e9c:	e3500000 	cmp	r0, #0
40013ea0:	0a000003 	beq	40013eb4 <CyU3PSibThreadEntry+0x40>
40013ea4:	e59f0014 	ldr	r0, [pc, #20]	; 40013ec0 <CyU3PSibThreadEntry+0x4c>
40013ea8:	e5900000 	ldr	r0, [r0]
40013eac:	e12fff30 	blx	r0
40013eb0:	ea000001 	b	40013ebc <CyU3PSibThreadEntry+0x48>
40013eb4:	e3a0000a 	mov	r0, #10
40013eb8:	ebffd3c4 	bl	40008dd0 <_tx_thread_sleep>
40013ebc:	eafffff4 	b	40013e94 <CyU3PSibThreadEntry+0x20>
40013ec0:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyU3PGpioSetClock:

40013ec4 <CyU3PGpioSetClock>:
40013ec4:	e92d4070 	push	{r4, r5, r6, lr}
40013ec8:	e1a04000 	mov	r4, r0
40013ecc:	e3a05000 	mov	r5, #0
40013ed0:	e5d40000 	ldrb	r0, [r4]
40013ed4:	e3500002 	cmp	r0, #2
40013ed8:	ba000002 	blt	40013ee8 <CyU3PGpioSetClock+0x24>
40013edc:	e5d40000 	ldrb	r0, [r4]
40013ee0:	e3500010 	cmp	r0, #16
40013ee4:	da000001 	ble	40013ef0 <CyU3PGpioSetClock+0x2c>
40013ee8:	e3a00040 	mov	r0, #64	; 0x40
40013eec:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ef0:	e5d40001 	ldrb	r0, [r4, #1]
40013ef4:	e3500000 	cmp	r0, #0
40013ef8:	1a000004 	bne	40013f10 <CyU3PGpioSetClock+0x4c>
40013efc:	e5940004 	ldr	r0, [r4, #4]
40013f00:	e3500000 	cmp	r0, #0
40013f04:	0a000009 	beq	40013f30 <CyU3PGpioSetClock+0x6c>
40013f08:	e3a00040 	mov	r0, #64	; 0x40
40013f0c:	eafffff6 	b	40013eec <CyU3PGpioSetClock+0x28>
40013f10:	e5d40001 	ldrb	r0, [r4, #1]
40013f14:	e3500002 	cmp	r0, #2
40013f18:	ba000002 	blt	40013f28 <CyU3PGpioSetClock+0x64>
40013f1c:	e5d40001 	ldrb	r0, [r4, #1]
40013f20:	e3500040 	cmp	r0, #64	; 0x40
40013f24:	da000001 	ble	40013f30 <CyU3PGpioSetClock+0x6c>
40013f28:	e3a00040 	mov	r0, #64	; 0x40
40013f2c:	eaffffee 	b	40013eec <CyU3PGpioSetClock+0x28>
40013f30:	e5d40009 	ldrb	r0, [r4, #9]
40013f34:	e3500004 	cmp	r0, #4
40013f38:	ba000001 	blt	40013f44 <CyU3PGpioSetClock+0x80>
40013f3c:	e3a00040 	mov	r0, #64	; 0x40
40013f40:	eaffffe9 	b	40013eec <CyU3PGpioSetClock+0x28>
40013f44:	e5d40008 	ldrb	r0, [r4, #8]
40013f48:	e3500004 	cmp	r0, #4
40013f4c:	ba000001 	blt	40013f58 <CyU3PGpioSetClock+0x94>
40013f50:	e3a00040 	mov	r0, #64	; 0x40
40013f54:	eaffffe4 	b	40013eec <CyU3PGpioSetClock+0x28>
40013f58:	e5d40000 	ldrb	r0, [r4]
40013f5c:	e2400001 	sub	r0, r0, #1
40013f60:	e5d41009 	ldrb	r1, [r4, #9]
40013f64:	e1800281 	orr	r0, r0, r1, lsl #5
40013f68:	e5d41008 	ldrb	r1, [r4, #8]
40013f6c:	e1800381 	orr	r0, r0, r1, lsl #7
40013f70:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013f74:	e5940004 	ldr	r0, [r4, #4]
40013f78:	e3500000 	cmp	r0, #0
40013f7c:	0a000000 	beq	40013f84 <CyU3PGpioSetClock+0xc0>
40013f80:	e3855010 	orr	r5, r5, #16
40013f84:	e59f0030 	ldr	r0, [pc, #48]	; 40013fbc <CyU3PGpioSetClock+0xf8>
40013f88:	e5805018 	str	r5, [r0, #24]
40013f8c:	e5d40001 	ldrb	r0, [r4, #1]
40013f90:	e3500000 	cmp	r0, #0
40013f94:	0a000006 	beq	40013fb4 <CyU3PGpioSetClock+0xf0>
40013f98:	e3a00001 	mov	r0, #1
40013f9c:	ebfffe72 	bl	4001396c <CyU3PBusyWait>
40013fa0:	e5d40001 	ldrb	r0, [r4, #1]
40013fa4:	e2400001 	sub	r0, r0, #1
40013fa8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013fac:	e59f1008 	ldr	r1, [pc, #8]	; 40013fbc <CyU3PGpioSetClock+0xf8>
40013fb0:	e581001c 	str	r0, [r1, #28]
40013fb4:	e3a00000 	mov	r0, #0
40013fb8:	eaffffcb 	b	40013eec <CyU3PGpioSetClock+0x28>
40013fbc:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013fc0 <CyU3PI2cSetClock>:
40013fc0:	e92d4070 	push	{r4, r5, r6, lr}
40013fc4:	e1a05000 	mov	r5, r0
40013fc8:	e3a06000 	mov	r6, #0
40013fcc:	e3550000 	cmp	r5, #0
40013fd0:	1a000001 	bne	40013fdc <CyU3PI2cSetClock+0x1c>
40013fd4:	e3a00040 	mov	r0, #64	; 0x40
40013fd8:	e8bd8070 	pop	{r4, r5, r6, pc}
40013fdc:	e0852105 	add	r2, r5, r5, lsl #2
40013fe0:	e1a01082 	lsl	r1, r2, #1
40013fe4:	e59f207c 	ldr	r2, [pc, #124]	; 40014068 <CyU3PI2cSetClock+0xa8>
40013fe8:	e5922000 	ldr	r2, [r2]
40013fec:	e1a00122 	lsr	r0, r2, #2
40013ff0:	ebfff362 	bl	40010d80 <__aeabi_uidivmod>
40013ff4:	e1a04000 	mov	r4, r0
40013ff8:	e3140003 	tst	r4, #3
40013ffc:	1a000001 	bne	40014008 <CyU3PI2cSetClock+0x48>
40014000:	e1a04144 	asr	r4, r4, #2
40014004:	ea00000a 	b	40014034 <CyU3PI2cSetClock+0x74>
40014008:	e2040003 	and	r0, r4, #3
4001400c:	e3500001 	cmp	r0, #1
40014010:	0a000002 	beq	40014020 <CyU3PI2cSetClock+0x60>
40014014:	e2040003 	and	r0, r4, #3
40014018:	e3500002 	cmp	r0, #2
4001401c:	1a000002 	bne	4001402c <CyU3PI2cSetClock+0x6c>
40014020:	e1a04144 	asr	r4, r4, #2
40014024:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40014028:	ea000001 	b	40014034 <CyU3PI2cSetClock+0x74>
4001402c:	e3a00001 	mov	r0, #1
40014030:	e0804144 	add	r4, r0, r4, asr #2
40014034:	e2444001 	sub	r4, r4, #1
40014038:	e3540001 	cmp	r4, #1
4001403c:	ba000001 	blt	40014048 <CyU3PI2cSetClock+0x88>
40014040:	e3540a01 	cmp	r4, #4096	; 0x1000
40014044:	ba000001 	blt	40014050 <CyU3PI2cSetClock+0x90>
40014048:	e3a00040 	mov	r0, #64	; 0x40
4001404c:	eaffffe1 	b	40013fd8 <CyU3PI2cSetClock+0x18>
40014050:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40014054:	e1866000 	orr	r6, r6, r0
40014058:	e59f000c 	ldr	r0, [pc, #12]	; 4001406c <CyU3PI2cSetClock+0xac>
4001405c:	e5806020 	str	r6, [r0, #32]
40014060:	e3a00000 	mov	r0, #0
40014064:	eaffffdb 	b	40013fd8 <CyU3PI2cSetClock+0x18>
40014068:	40030c70 	.word	0x40030c70
4001406c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40014070 <CyU3PLppApplicationDefine>:
40014070:	e92d4010 	push	{r4, lr}
40014074:	e24dd020 	sub	sp, sp, #32
40014078:	e3a00b01 	mov	r0, #1024	; 0x400
4001407c:	ebffbd7c 	bl	40003674 <CyU3PMemAlloc>
40014080:	e1a04000 	mov	r4, r0
40014084:	e3a030a8 	mov	r3, #168	; 0xa8
40014088:	e3a02001 	mov	r2, #1
4001408c:	e3a01000 	mov	r1, #0
40014090:	e3a00004 	mov	r0, #4
40014094:	e28dc00c 	add	ip, sp, #12
40014098:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001409c:	e3a02b01 	mov	r2, #1024	; 0x400
400140a0:	e1a03001 	mov	r3, r1
400140a4:	e58d2004 	str	r2, [sp, #4]
400140a8:	e59f2054 	ldr	r2, [pc, #84]	; 40014104 <CyU3PLppApplicationDefine+0x94>
400140ac:	e28f1054 	add	r1, pc, #84	; 0x54
400140b0:	e58d0008 	str	r0, [sp, #8]
400140b4:	e59f005c 	ldr	r0, [pc, #92]	; 40014118 <CyU3PLppApplicationDefine+0xa8>
400140b8:	e58d4000 	str	r4, [sp]
400140bc:	ebffda16 	bl	4000a91c <_txe_thread_create>
400140c0:	e3a02028 	mov	r2, #40	; 0x28
400140c4:	e3a01000 	mov	r1, #0
400140c8:	e59f004c 	ldr	r0, [pc, #76]	; 4001411c <CyU3PLppApplicationDefine+0xac>
400140cc:	ebffd797 	bl	40009f30 <_txe_event_flags_create>
400140d0:	e3a00040 	mov	r0, #64	; 0x40
400140d4:	ebffbd66 	bl	40003674 <CyU3PMemAlloc>
400140d8:	e1a04000 	mov	r4, r0
400140dc:	e3a0303c 	mov	r3, #60	; 0x3c
400140e0:	e3a02040 	mov	r2, #64	; 0x40
400140e4:	e1cd20f0 	strd	r2, [sp]
400140e8:	e1a03004 	mov	r3, r4
400140ec:	e3a02005 	mov	r2, #5
400140f0:	e3a01000 	mov	r1, #0
400140f4:	e59f0024 	ldr	r0, [pc, #36]	; 40014120 <CyU3PLppApplicationDefine+0xb0>
400140f8:	ebffd921 	bl	4000a584 <_txe_queue_create>
400140fc:	e28dd020 	add	sp, sp, #32
40014100:	e8bd8010 	pop	{r4, pc}
40014104:	40014464 	.word	0x40014464
40014108:	4c5f3530 	.word	0x4c5f3530
4001410c:	545f5050 	.word	0x545f5050
40014110:	41455248 	.word	0x41455248
40014114:	00000044 	.word	0x00000044
40014118:	40031660 	.word	0x40031660
4001411c:	40031638 	.word	0x40031638
40014120:	40031708 	.word	0x40031708

Disassembly of section i.CyU3PLppEventSend:

40014124 <CyU3PLppEventSend>:
40014124:	e92d4070 	push	{r4, r5, r6, lr}
40014128:	e1a04000 	mov	r4, r0
4001412c:	e3a02000 	mov	r2, #0
40014130:	e1a01004 	mov	r1, r4
40014134:	e59f000c 	ldr	r0, [pc, #12]	; 40014148 <CyU3PLppEventSend+0x24>
40014138:	ebffd81c 	bl	4000a1b0 <_txe_event_flags_set>
4001413c:	e1a05000 	mov	r5, r0
40014140:	e1a00005 	mov	r0, r5
40014144:	e8bd8070 	pop	{r4, r5, r6, pc}
40014148:	40031638 	.word	0x40031638

Disassembly of section i.CyU3PLppGpioBlockIsOn:

4001414c <CyU3PLppGpioBlockIsOn>:
4001414c:	e59f0004 	ldr	r0, [pc, #4]	; 40014158 <CyU3PLppGpioBlockIsOn+0xc>
40014150:	e5900000 	ldr	r0, [r0]
40014154:	e12fff1e 	bx	lr
40014158:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PLppInit:

4001415c <CyU3PLppInit>:
4001415c:	e92d4070 	push	{r4, r5, r6, lr}
40014160:	e1a04000 	mov	r4, r0
40014164:	e1a05001 	mov	r5, r1
40014168:	e3a06000 	mov	r6, #0
4001416c:	e3a00001 	mov	r0, #1
40014170:	e59f1174 	ldr	r1, [pc, #372]	; 400142ec <CyU3PLppInit+0x190>
40014174:	e5d11000 	ldrb	r1, [r1]
40014178:	e1110410 	tst	r1, r0, lsl r4
4001417c:	0a000001 	beq	40014188 <CyU3PLppInit+0x2c>
40014180:	e3a00043 	mov	r0, #67	; 0x43
40014184:	e8bd8070 	pop	{r4, r5, r6, pc}
40014188:	e3540001 	cmp	r4, #1
4001418c:	1a000004 	bne	400141a4 <CyU3PLppInit+0x48>
40014190:	eb000310 	bl	40014dd8 <CyFx3DevIsI2sSupported>
40014194:	e3500000 	cmp	r0, #0
40014198:	1a000001 	bne	400141a4 <CyU3PLppInit+0x48>
4001419c:	e3a00046 	mov	r0, #70	; 0x46
400141a0:	eafffff7 	b	40014184 <CyU3PLppInit+0x28>
400141a4:	e3540005 	cmp	r4, #5
400141a8:	308ff104 	addcc	pc, pc, r4, lsl #2
400141ac:	ea000027 	b	40014250 <CyU3PLppInit+0xf4>
400141b0:	ea000003 	b	400141c4 <CyU3PLppInit+0x68>
400141b4:	ea000009 	b	400141e0 <CyU3PLppInit+0x84>
400141b8:	ea00000f 	b	400141fc <CyU3PLppInit+0xa0>
400141bc:	ea000015 	b	40014218 <CyU3PLppInit+0xbc>
400141c0:	ea00001b 	b	40014234 <CyU3PLppInit+0xd8>
400141c4:	e1a00000 	nop			; (mov r0, r0)
400141c8:	e59f0120 	ldr	r0, [pc, #288]	; 400142f0 <CyU3PLppInit+0x194>
400141cc:	e5900020 	ldr	r0, [r0, #32]
400141d0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400141d4:	0a000000 	beq	400141dc <CyU3PLppInit+0x80>
400141d8:	e3a06001 	mov	r6, #1
400141dc:	ea00001b 	b	40014250 <CyU3PLppInit+0xf4>
400141e0:	e1a00000 	nop			; (mov r0, r0)
400141e4:	e59f0104 	ldr	r0, [pc, #260]	; 400142f0 <CyU3PLppInit+0x194>
400141e8:	e5900034 	ldr	r0, [r0, #52]	; 0x34
400141ec:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400141f0:	0a000000 	beq	400141f8 <CyU3PLppInit+0x9c>
400141f4:	e3a06001 	mov	r6, #1
400141f8:	ea000014 	b	40014250 <CyU3PLppInit+0xf4>
400141fc:	e1a00000 	nop			; (mov r0, r0)
40014200:	e59f00e8 	ldr	r0, [pc, #232]	; 400142f0 <CyU3PLppInit+0x194>
40014204:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40014208:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001420c:	0a000000 	beq	40014214 <CyU3PLppInit+0xb8>
40014210:	e3a06001 	mov	r6, #1
40014214:	ea00000d 	b	40014250 <CyU3PLppInit+0xf4>
40014218:	e1a00000 	nop			; (mov r0, r0)
4001421c:	e59f00cc 	ldr	r0, [pc, #204]	; 400142f0 <CyU3PLppInit+0x194>
40014220:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40014224:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014228:	0a000000 	beq	40014230 <CyU3PLppInit+0xd4>
4001422c:	e3a06001 	mov	r6, #1
40014230:	ea000006 	b	40014250 <CyU3PLppInit+0xf4>
40014234:	e1a00000 	nop			; (mov r0, r0)
40014238:	e59f00b0 	ldr	r0, [pc, #176]	; 400142f0 <CyU3PLppInit+0x194>
4001423c:	e5900018 	ldr	r0, [r0, #24]
40014240:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014244:	0a000000 	beq	4001424c <CyU3PLppInit+0xf0>
40014248:	e3a06001 	mov	r6, #1
4001424c:	e1a00000 	nop			; (mov r0, r0)
40014250:	e1a00000 	nop			; (mov r0, r0)
40014254:	e3560000 	cmp	r6, #0
40014258:	1a000001 	bne	40014264 <CyU3PLppInit+0x108>
4001425c:	e3a00047 	mov	r0, #71	; 0x47
40014260:	eaffffc7 	b	40014184 <CyU3PLppInit+0x28>
40014264:	e59f0080 	ldr	r0, [pc, #128]	; 400142ec <CyU3PLppInit+0x190>
40014268:	e5d00000 	ldrb	r0, [r0]
4001426c:	e3500000 	cmp	r0, #0
40014270:	1a000017 	bne	400142d4 <CyU3PLppInit+0x178>
40014274:	e59f0078 	ldr	r0, [pc, #120]	; 400142f4 <CyU3PLppInit+0x198>
40014278:	e5900000 	ldr	r0, [r0]
4001427c:	e3500000 	cmp	r0, #0
40014280:	1a000010 	bne	400142c8 <CyU3PLppInit+0x16c>
40014284:	e59f006c 	ldr	r0, [pc, #108]	; 400142f8 <CyU3PLppInit+0x19c>
40014288:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
4001428c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40014290:	e59f1060 	ldr	r1, [pc, #96]	; 400142f8 <CyU3PLppInit+0x19c>
40014294:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40014298:	e3a0000a 	mov	r0, #10
4001429c:	ebfffdb2 	bl	4001396c <CyU3PBusyWait>
400142a0:	e59f0050 	ldr	r0, [pc, #80]	; 400142f8 <CyU3PLppInit+0x19c>
400142a4:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400142a8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400142ac:	e59f1044 	ldr	r1, [pc, #68]	; 400142f8 <CyU3PLppInit+0x19c>
400142b0:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
400142b4:	e1a00000 	nop			; (mov r0, r0)
400142b8:	e59f0038 	ldr	r0, [pc, #56]	; 400142f8 <CyU3PLppInit+0x19c>
400142bc:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400142c0:	e3100001 	tst	r0, #1
400142c4:	0afffffb 	beq	400142b8 <CyU3PLppInit+0x15c>
400142c8:	eb000051 	bl	40014414 <CyU3PLppSocketInit>
400142cc:	e3a00014 	mov	r0, #20
400142d0:	eb003828 	bl	40022378 <CyU3PVicEnableInt>
400142d4:	e1a02005 	mov	r2, r5
400142d8:	e3a01001 	mov	r1, #1
400142dc:	e1a00004 	mov	r0, r4
400142e0:	eb0000f1 	bl	400146ac <CyU3UpdateLppActiveInfo>
400142e4:	e3a00000 	mov	r0, #0
400142e8:	eaffffa5 	b	40014184 <CyU3PLppInit+0x28>
400142ec:	40030cb4 	.word	0x40030cb4
400142f0:	e0052000 	.word	0xe0052000
400142f4:	40030c8c 	.word	0x40030c8c
400142f8:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

400142fc <CyU3PLppRestoreState>:
400142fc:	e92d4070 	push	{r4, r5, r6, lr}
40014300:	e1a04000 	mov	r4, r0
40014304:	e3a00000 	mov	r0, #0
40014308:	e59f10ec 	ldr	r1, [pc, #236]	; 400143fc <CyU3PLppRestoreState+0x100>
4001430c:	e5c10000 	strb	r0, [r1]
40014310:	e5940000 	ldr	r0, [r4]
40014314:	e59f10e4 	ldr	r1, [pc, #228]	; 40014400 <CyU3PLppRestoreState+0x104>
40014318:	e5810018 	str	r0, [r1, #24]
4001431c:	e3a00001 	mov	r0, #1
40014320:	ebfffd91 	bl	4001396c <CyU3PBusyWait>
40014324:	e5940004 	ldr	r0, [r4, #4]
40014328:	e59f10d0 	ldr	r1, [pc, #208]	; 40014400 <CyU3PLppRestoreState+0x104>
4001432c:	e581001c 	str	r0, [r1, #28]
40014330:	e3a00001 	mov	r0, #1
40014334:	ebfffd8c 	bl	4001396c <CyU3PBusyWait>
40014338:	e5940008 	ldr	r0, [r4, #8]
4001433c:	e59f10c0 	ldr	r1, [pc, #192]	; 40014404 <CyU3PLppRestoreState+0x108>
40014340:	e581000c 	str	r0, [r1, #12]
40014344:	e3a00001 	mov	r0, #1
40014348:	ebfffd87 	bl	4001396c <CyU3PBusyWait>
4001434c:	e594000c 	ldr	r0, [r4, #12]
40014350:	e59f10ac 	ldr	r1, [pc, #172]	; 40014404 <CyU3PLppRestoreState+0x108>
40014354:	e5810010 	str	r0, [r1, #16]
40014358:	e3a00001 	mov	r0, #1
4001435c:	ebfffd82 	bl	4001396c <CyU3PBusyWait>
40014360:	e5940010 	ldr	r0, [r4, #16]
40014364:	e59f1098 	ldr	r1, [pc, #152]	; 40014404 <CyU3PLppRestoreState+0x108>
40014368:	e5810008 	str	r0, [r1, #8]
4001436c:	e3a00001 	mov	r0, #1
40014370:	ebfffd7d 	bl	4001396c <CyU3PBusyWait>
40014374:	e3a00004 	mov	r0, #4
40014378:	e5941014 	ldr	r1, [r4, #20]
4001437c:	ebffff76 	bl	4001415c <CyU3PLppInit>
40014380:	e3a00001 	mov	r0, #1
40014384:	ebfffd78 	bl	4001396c <CyU3PBusyWait>
40014388:	e59f0078 	ldr	r0, [pc, #120]	; 40014408 <CyU3PLppRestoreState+0x10c>
4001438c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40014390:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014394:	e59f106c 	ldr	r1, [pc, #108]	; 40014408 <CyU3PLppRestoreState+0x10c>
40014398:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
4001439c:	e3a0000a 	mov	r0, #10
400143a0:	ebfffd71 	bl	4001396c <CyU3PBusyWait>
400143a4:	e1a00000 	nop			; (mov r0, r0)
400143a8:	e59f0058 	ldr	r0, [pc, #88]	; 40014408 <CyU3PLppRestoreState+0x10c>
400143ac:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400143b0:	e3100001 	tst	r0, #1
400143b4:	0afffffb 	beq	400143a8 <CyU3PLppRestoreState+0xac>
400143b8:	e3a05000 	mov	r5, #0
400143bc:	ea000006 	b	400143dc <CyU3PLppRestoreState+0xe0>
400143c0:	e2850006 	add	r0, r5, #6
400143c4:	e7940100 	ldr	r0, [r4, r0, lsl #2]
400143c8:	e59f103c 	ldr	r1, [pc, #60]	; 4001440c <CyU3PLppRestoreState+0x110>
400143cc:	e7810105 	str	r0, [r1, r5, lsl #2]
400143d0:	e3a00001 	mov	r0, #1
400143d4:	ebfffd64 	bl	4001396c <CyU3PBusyWait>
400143d8:	e2855001 	add	r5, r5, #1
400143dc:	e355003d 	cmp	r5, #61	; 0x3d
400143e0:	3afffff6 	bcc	400143c0 <CyU3PLppRestoreState+0xc4>
400143e4:	e59f0024 	ldr	r0, [pc, #36]	; 40014410 <CyU3PLppRestoreState+0x114>
400143e8:	e5900000 	ldr	r0, [r0]
400143ec:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
400143f0:	e59f1018 	ldr	r1, [pc, #24]	; 40014410 <CyU3PLppRestoreState+0x114>
400143f4:	e5810000 	str	r0, [r1]
400143f8:	e8bd8070 	pop	{r4, r5, r6, pc}
400143fc:	40030cb4 	.word	0x40030cb4
40014400:	e0052000 	.word	0xe0052000
40014404:	e0051000 	.word	0xe0051000
40014408:	e0001000 	.word	0xe0001000
4001440c:	e0001100 	.word	0xe0001100
40014410:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40014414 <CyU3PLppSocketInit>:
40014414:	e3a00000 	mov	r0, #0
40014418:	ea00000d 	b	40014454 <CyU3PLppSocketInit+0x40>
4001441c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40014420:	e59f2038 	ldr	r2, [pc, #56]	; 40014460 <CyU3PLppSocketInit+0x4c>
40014424:	e0822380 	add	r2, r2, r0, lsl #7
40014428:	e582100c 	str	r1, [r2, #12]
4001442c:	e3e01000 	mvn	r1, #0
40014430:	e59f2028 	ldr	r2, [pc, #40]	; 40014460 <CyU3PLppSocketInit+0x4c>
40014434:	e0822380 	add	r2, r2, r0, lsl #7
40014438:	e5821010 	str	r1, [r2, #16]
4001443c:	e3a01000 	mov	r1, #0
40014440:	e59f2018 	ldr	r2, [pc, #24]	; 40014460 <CyU3PLppSocketInit+0x4c>
40014444:	e0822380 	add	r2, r2, r0, lsl #7
40014448:	e5821014 	str	r1, [r2, #20]
4001444c:	e2801001 	add	r1, r0, #1
40014450:	e20100ff 	and	r0, r1, #255	; 0xff
40014454:	e3500008 	cmp	r0, #8
40014458:	baffffef 	blt	4001441c <CyU3PLppSocketInit+0x8>
4001445c:	e12fff1e 	bx	lr
40014460:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40014464 <CyU3PLppThreadEntry>:
40014464:	e92d4010 	push	{r4, lr}
40014468:	e24dd020 	sub	sp, sp, #32
4001446c:	e3a00006 	mov	r0, #6
40014470:	ebfffdf3 	bl	40013c44 <CyU3PSysModuleInitCompleteEvt>
40014474:	e3a000f1 	mov	r0, #241	; 0xf1
40014478:	e59f1144 	ldr	r1, [pc, #324]	; 400145c4 <CyU3PLppThreadEntry+0x160>
4001447c:	e5810000 	str	r0, [r1]
40014480:	e1a00000 	nop			; (mov r0, r0)
40014484:	e3e03000 	mvn	r3, #0
40014488:	e58d3000 	str	r3, [sp]
4001448c:	e28d301c 	add	r3, sp, #28
40014490:	e3a02001 	mov	r2, #1
40014494:	e59f0128 	ldr	r0, [pc, #296]	; 400145c4 <CyU3PLppThreadEntry+0x160>
40014498:	e5901000 	ldr	r1, [r0]
4001449c:	e59f0124 	ldr	r0, [pc, #292]	; 400145c8 <CyU3PLppThreadEntry+0x164>
400144a0:	ebffd712 	bl	4000a0f0 <_txe_event_flags_get>
400144a4:	e1a04000 	mov	r4, r0
400144a8:	e59f1114 	ldr	r1, [pc, #276]	; 400145c4 <CyU3PLppThreadEntry+0x160>
400144ac:	e59d001c 	ldr	r0, [sp, #28]
400144b0:	e5911000 	ldr	r1, [r1]
400144b4:	e0000001 	and	r0, r0, r1
400144b8:	e58d001c 	str	r0, [sp, #28]
400144bc:	e3540000 	cmp	r4, #0
400144c0:	0a000000 	beq	400144c8 <CyU3PLppThreadEntry+0x64>
400144c4:	eaffffee 	b	40014484 <CyU3PLppThreadEntry+0x20>
400144c8:	ea000009 	b	400144f4 <CyU3PLppThreadEntry+0x90>
400144cc:	e3a02000 	mov	r2, #0
400144d0:	e28d1008 	add	r1, sp, #8
400144d4:	e59f00f0 	ldr	r0, [pc, #240]	; 400145cc <CyU3PLppThreadEntry+0x168>
400144d8:	ebffd8bf 	bl	4000a7dc <_txe_queue_receive>
400144dc:	e1a04000 	mov	r4, r0
400144e0:	e3540000 	cmp	r4, #0
400144e4:	0a000002 	beq	400144f4 <CyU3PLppThreadEntry+0x90>
400144e8:	e59d001c 	ldr	r0, [sp, #28]
400144ec:	e3c00001 	bic	r0, r0, #1
400144f0:	e58d001c 	str	r0, [sp, #28]
400144f4:	e59d001c 	ldr	r0, [sp, #28]
400144f8:	e3100001 	tst	r0, #1
400144fc:	1afffff2 	bne	400144cc <CyU3PLppThreadEntry+0x68>
40014500:	e59d001c 	ldr	r0, [sp, #28]
40014504:	e3100020 	tst	r0, #32
40014508:	0a000008 	beq	40014530 <CyU3PLppThreadEntry+0xcc>
4001450c:	e59f00bc 	ldr	r0, [pc, #188]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
40014510:	e5900000 	ldr	r0, [r0]
40014514:	e3500000 	cmp	r0, #0
40014518:	0a000002 	beq	40014528 <CyU3PLppThreadEntry+0xc4>
4001451c:	e59f10ac 	ldr	r1, [pc, #172]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
40014520:	e5910000 	ldr	r0, [r1]
40014524:	e12fff30 	blx	r0
40014528:	e3a0000f 	mov	r0, #15
4001452c:	eb003791 	bl	40022378 <CyU3PVicEnableInt>
40014530:	e59d001c 	ldr	r0, [sp, #28]
40014534:	e3100010 	tst	r0, #16
40014538:	0a000008 	beq	40014560 <CyU3PLppThreadEntry+0xfc>
4001453c:	e59f008c 	ldr	r0, [pc, #140]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
40014540:	e5900004 	ldr	r0, [r0, #4]
40014544:	e3500000 	cmp	r0, #0
40014548:	0a000002 	beq	40014558 <CyU3PLppThreadEntry+0xf4>
4001454c:	e59f107c 	ldr	r1, [pc, #124]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
40014550:	e5910004 	ldr	r0, [r1, #4]
40014554:	e12fff30 	blx	r0
40014558:	e3a00010 	mov	r0, #16
4001455c:	eb003785 	bl	40022378 <CyU3PVicEnableInt>
40014560:	e59d001c 	ldr	r0, [sp, #28]
40014564:	e3100080 	tst	r0, #128	; 0x80
40014568:	0a000008 	beq	40014590 <CyU3PLppThreadEntry+0x12c>
4001456c:	e59f005c 	ldr	r0, [pc, #92]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
40014570:	e5900008 	ldr	r0, [r0, #8]
40014574:	e3500000 	cmp	r0, #0
40014578:	0a000002 	beq	40014588 <CyU3PLppThreadEntry+0x124>
4001457c:	e59f104c 	ldr	r1, [pc, #76]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
40014580:	e5910008 	ldr	r0, [r1, #8]
40014584:	e12fff30 	blx	r0
40014588:	e3a00011 	mov	r0, #17
4001458c:	eb003779 	bl	40022378 <CyU3PVicEnableInt>
40014590:	e59d001c 	ldr	r0, [sp, #28]
40014594:	e3100040 	tst	r0, #64	; 0x40
40014598:	0a000008 	beq	400145c0 <CyU3PLppThreadEntry+0x15c>
4001459c:	e59f002c 	ldr	r0, [pc, #44]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
400145a0:	e590000c 	ldr	r0, [r0, #12]
400145a4:	e3500000 	cmp	r0, #0
400145a8:	0a000002 	beq	400145b8 <CyU3PLppThreadEntry+0x154>
400145ac:	e59f101c 	ldr	r1, [pc, #28]	; 400145d0 <CyU3PLppThreadEntry+0x16c>
400145b0:	e591000c 	ldr	r0, [r1, #12]
400145b4:	e12fff30 	blx	r0
400145b8:	e3a00012 	mov	r0, #18
400145bc:	eb00376d 	bl	40022378 <CyU3PVicEnableInt>
400145c0:	eaffffaf 	b	40014484 <CyU3PLppThreadEntry+0x20>
400145c4:	40030cb8 	.word	0x40030cb8
400145c8:	40031638 	.word	0x40031638
400145cc:	40031708 	.word	0x40031708
400145d0:	40031624 	.word	0x40031624

Disassembly of section i.CyU3PUartSetClock:

400145d4 <CyU3PUartSetClock>:
400145d4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400145d8:	e1a04000 	mov	r4, r0
400145dc:	e3a06000 	mov	r6, #0
400145e0:	e59f00bc 	ldr	r0, [pc, #188]	; 400146a4 <CyU3PUartSetClock+0xd0>
400145e4:	e5907000 	ldr	r7, [r0]
400145e8:	e3540000 	cmp	r4, #0
400145ec:	1a000001 	bne	400145f8 <CyU3PUartSetClock+0x24>
400145f0:	e3a00040 	mov	r0, #64	; 0x40
400145f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400145f8:	e3540f96 	cmp	r4, #600	; 0x258
400145fc:	2a000002 	bcs	4001460c <CyU3PUartSetClock+0x38>
40014600:	e59f009c 	ldr	r0, [pc, #156]	; 400146a4 <CyU3PUartSetClock+0xd0>
40014604:	e5900000 	ldr	r0, [r0]
40014608:	e1a07220 	lsr	r7, r0, #4
4001460c:	e1a01204 	lsl	r1, r4, #4
40014610:	e1a00107 	lsl	r0, r7, #2
40014614:	ebfff1d9 	bl	40010d80 <__aeabi_uidivmod>
40014618:	e1a05000 	mov	r5, r0
4001461c:	e3150003 	tst	r5, #3
40014620:	1a000001 	bne	4001462c <CyU3PUartSetClock+0x58>
40014624:	e1a05145 	asr	r5, r5, #2
40014628:	ea00000a 	b	40014658 <CyU3PUartSetClock+0x84>
4001462c:	e2050003 	and	r0, r5, #3
40014630:	e3500001 	cmp	r0, #1
40014634:	0a000002 	beq	40014644 <CyU3PUartSetClock+0x70>
40014638:	e2050003 	and	r0, r5, #3
4001463c:	e3500002 	cmp	r0, #2
40014640:	1a000002 	bne	40014650 <CyU3PUartSetClock+0x7c>
40014644:	e1a05145 	asr	r5, r5, #2
40014648:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001464c:	ea000001 	b	40014658 <CyU3PUartSetClock+0x84>
40014650:	e3a00001 	mov	r0, #1
40014654:	e0805145 	add	r5, r0, r5, asr #2
40014658:	e2455001 	sub	r5, r5, #1
4001465c:	e3550001 	cmp	r5, #1
40014660:	ba000001 	blt	4001466c <CyU3PUartSetClock+0x98>
40014664:	e3550801 	cmp	r5, #65536	; 0x10000
40014668:	ba000001 	blt	40014674 <CyU3PUartSetClock+0xa0>
4001466c:	e3a00040 	mov	r0, #64	; 0x40
40014670:	eaffffdf 	b	400145f4 <CyU3PUartSetClock+0x20>
40014674:	e3540f96 	cmp	r4, #600	; 0x258
40014678:	2a000002 	bcs	40014688 <CyU3PUartSetClock+0xb4>
4001467c:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014680:	e1866000 	orr	r6, r6, r0
40014684:	ea000002 	b	40014694 <CyU3PUartSetClock+0xc0>
40014688:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
4001468c:	e3800806 	orr	r0, r0, #393216	; 0x60000
40014690:	e1866000 	orr	r6, r6, r0
40014694:	e59f000c 	ldr	r0, [pc, #12]	; 400146a8 <CyU3PUartSetClock+0xd4>
40014698:	e5806024 	str	r6, [r0, #36]	; 0x24
4001469c:	e3a00000 	mov	r0, #0
400146a0:	eaffffd3 	b	400145f4 <CyU3PUartSetClock+0x20>
400146a4:	40030c70 	.word	0x40030c70
400146a8:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

400146ac <CyU3UpdateLppActiveInfo>:
400146ac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400146b0:	e1a04000 	mov	r4, r0
400146b4:	e1a05001 	mov	r5, r1
400146b8:	e1a06002 	mov	r6, r2
400146bc:	e3a00001 	mov	r0, #1
400146c0:	e1a00410 	lsl	r0, r0, r4
400146c4:	e20070ff 	and	r7, r0, #255	; 0xff
400146c8:	e284000f 	add	r0, r4, #15
400146cc:	e20080ff 	and	r8, r0, #255	; 0xff
400146d0:	e59f0050 	ldr	r0, [pc, #80]	; 40014728 <CyU3UpdateLppActiveInfo+0x7c>
400146d4:	e7806104 	str	r6, [r0, r4, lsl #2]
400146d8:	e3550000 	cmp	r5, #0
400146dc:	0a000009 	beq	40014708 <CyU3UpdateLppActiveInfo+0x5c>
400146e0:	e3560000 	cmp	r6, #0
400146e4:	0a000001 	beq	400146f0 <CyU3UpdateLppActiveInfo+0x44>
400146e8:	e1a00008 	mov	r0, r8
400146ec:	eb003721 	bl	40022378 <CyU3PVicEnableInt>
400146f0:	e59f0034 	ldr	r0, [pc, #52]	; 4001472c <CyU3UpdateLppActiveInfo+0x80>
400146f4:	e5d00000 	ldrb	r0, [r0]
400146f8:	e1800007 	orr	r0, r0, r7
400146fc:	e59f1028 	ldr	r1, [pc, #40]	; 4001472c <CyU3UpdateLppActiveInfo+0x80>
40014700:	e5c10000 	strb	r0, [r1]
40014704:	ea000006 	b	40014724 <CyU3UpdateLppActiveInfo+0x78>
40014708:	e59f001c 	ldr	r0, [pc, #28]	; 4001472c <CyU3UpdateLppActiveInfo+0x80>
4001470c:	e5d00000 	ldrb	r0, [r0]
40014710:	e1c00007 	bic	r0, r0, r7
40014714:	e59f1010 	ldr	r1, [pc, #16]	; 4001472c <CyU3UpdateLppActiveInfo+0x80>
40014718:	e5c10000 	strb	r0, [r1]
4001471c:	e1a00008 	mov	r0, r8
40014720:	eb00370f 	bl	40022364 <CyU3PVicDisableInt>
40014724:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014728:	40031624 	.word	0x40031624
4001472c:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevClearSwInterrupt:

40014730 <CyFx3DevClearSwInterrupt>:
40014730:	e59f000c 	ldr	r0, [pc, #12]	; 40014744 <CyFx3DevClearSwInterrupt+0x14>
40014734:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
40014738:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
4001473c:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014740:	e12fff1e 	bx	lr
40014744:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

40014748 <CyFx3DevIOConfigure>:
40014748:	e92d4030 	push	{r4, r5, lr}
4001474c:	e1b04000 	movs	r4, r0
40014750:	e24dd024 	sub	sp, sp, #36	; 0x24
40014754:	0a000045 	beq	40014870 <CyFx3DevIOConfigure+0x128>
40014758:	eb00017b 	bl	40014d4c <CyFx3DevIsGpif32Supported>
4001475c:	e3500000 	cmp	r0, #0
40014760:	e3a05000 	mov	r5, #0
40014764:	05845000 	streq	r5, [r4]
40014768:	eb0001ae 	bl	40014e28 <CyFx3DevIsSib0Supported>
4001476c:	e3500000 	cmp	r0, #0
40014770:	05c45014 	strbeq	r5, [r4, #20]
40014774:	eb0001b5 	bl	40014e50 <CyFx3DevIsSib1Supported>
40014778:	e3500000 	cmp	r0, #0
4001477c:	05c45015 	strbeq	r5, [r4, #21]
40014780:	eb000194 	bl	40014dd8 <CyFx3DevIsI2sSupported>
40014784:	e3500000 	cmp	r0, #0
40014788:	1a000002 	bne	40014798 <CyFx3DevIOConfigure+0x50>
4001478c:	e594000c 	ldr	r0, [r4, #12]
40014790:	e3500000 	cmp	r0, #0
40014794:	1a000035 	bne	40014870 <CyFx3DevIOConfigure+0x128>
40014798:	e5940000 	ldr	r0, [r4]
4001479c:	e3500000 	cmp	r0, #0
400147a0:	0a000009 	beq	400147cc <CyFx3DevIOConfigure+0x84>
400147a4:	e5d40016 	ldrb	r0, [r4, #22]
400147a8:	e3500000 	cmp	r0, #0
400147ac:	05d40014 	ldrbeq	r0, [r4, #20]
400147b0:	03500000 	cmpeq	r0, #0
400147b4:	05d40015 	ldrbeq	r0, [r4, #21]
400147b8:	03500000 	cmpeq	r0, #0
400147bc:	1a00002b 	bne	40014870 <CyFx3DevIOConfigure+0x128>
400147c0:	e3a00002 	mov	r0, #2
400147c4:	e5cd0000 	strb	r0, [sp]
400147c8:	ea000022 	b	40014858 <CyFx3DevIOConfigure+0x110>
400147cc:	e5d40014 	ldrb	r0, [r4, #20]
400147d0:	e3a02003 	mov	r2, #3
400147d4:	e3a03001 	mov	r3, #1
400147d8:	e3500000 	cmp	r0, #0
400147dc:	05cd2000 	strbeq	r2, [sp]
400147e0:	0a000004 	beq	400147f8 <CyFx3DevIOConfigure+0xb0>
400147e4:	e3500001 	cmp	r0, #1
400147e8:	05cd3000 	strbeq	r3, [sp]
400147ec:	0a000001 	beq	400147f8 <CyFx3DevIOConfigure+0xb0>
400147f0:	e3500002 	cmp	r0, #2
400147f4:	05cd5000 	strbeq	r5, [sp]
400147f8:	e5d41015 	ldrb	r1, [r4, #21]
400147fc:	e5d40016 	ldrb	r0, [r4, #22]
40014800:	e3510002 	cmp	r1, #2
40014804:	1a000009 	bne	40014830 <CyFx3DevIOConfigure+0xe8>
40014808:	e3500004 	cmp	r0, #4
4001480c:	05940004 	ldreq	r0, [r4, #4]
40014810:	03500000 	cmpeq	r0, #0
40014814:	05940010 	ldreq	r0, [r4, #16]
40014818:	03500000 	cmpeq	r0, #0
4001481c:	0594000c 	ldreq	r0, [r4, #12]
40014820:	03500000 	cmpeq	r0, #0
40014824:	05cd5001 	strbeq	r5, [sp, #1]
40014828:	0a000013 	beq	4001487c <CyFx3DevIOConfigure+0x134>
4001482c:	ea00000f 	b	40014870 <CyFx3DevIOConfigure+0x128>
40014830:	e3500000 	cmp	r0, #0
40014834:	0a000009 	beq	40014860 <CyFx3DevIOConfigure+0x118>
40014838:	e3500001 	cmp	r0, #1
4001483c:	13500002 	cmpne	r0, #2
40014840:	13500003 	cmpne	r0, #3
40014844:	1a000009 	bne	40014870 <CyFx3DevIOConfigure+0x128>
40014848:	e3510001 	cmp	r1, #1
4001484c:	05cd3001 	strbeq	r3, [sp, #1]
40014850:	0a000009 	beq	4001487c <CyFx3DevIOConfigure+0x134>
40014854:	e3a00004 	mov	r0, #4
40014858:	e5cd0001 	strb	r0, [sp, #1]
4001485c:	ea000006 	b	4001487c <CyFx3DevIOConfigure+0x134>
40014860:	e5cd2001 	strb	r2, [sp, #1]
40014864:	e5d40015 	ldrb	r0, [r4, #21]
40014868:	e3500000 	cmp	r0, #0
4001486c:	0a000002 	beq	4001487c <CyFx3DevIOConfigure+0x134>
40014870:	e3a00000 	mov	r0, #0
40014874:	e28dd024 	add	sp, sp, #36	; 0x24
40014878:	e8bd8030 	pop	{r4, r5, pc}
4001487c:	e5940004 	ldr	r0, [r4, #4]
40014880:	e58d0004 	str	r0, [sp, #4]
40014884:	e594000c 	ldr	r0, [r4, #12]
40014888:	e58d000c 	str	r0, [sp, #12]
4001488c:	e5940010 	ldr	r0, [r4, #16]
40014890:	e58d0010 	str	r0, [sp, #16]
40014894:	e5940008 	ldr	r0, [r4, #8]
40014898:	e58d0008 	str	r0, [sp, #8]
4001489c:	e5940018 	ldr	r0, [r4, #24]
400148a0:	e58d0014 	str	r0, [sp, #20]
400148a4:	e594001c 	ldr	r0, [r4, #28]
400148a8:	e58d0018 	str	r0, [sp, #24]
400148ac:	e5940020 	ldr	r0, [r4, #32]
400148b0:	e58d001c 	str	r0, [sp, #28]
400148b4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
400148b8:	e58d0020 	str	r0, [sp, #32]
400148bc:	e1a0000d 	mov	r0, sp
400148c0:	eb000054 	bl	40014a18 <CyFx3DevIOSetConfig>
400148c4:	eaffffea 	b	40014874 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

400148c8 <CyFx3DevIOIsGpio>:
400148c8:	e350003d 	cmp	r0, #61	; 0x3d
400148cc:	e3a02000 	mov	r2, #0
400148d0:	23a00000 	movcs	r0, #0
400148d4:	212fff1e 	bxcs	lr
400148d8:	e3500020 	cmp	r0, #32
400148dc:	83a02001 	movhi	r2, #1
400148e0:	82400020 	subhi	r0, r0, #32
400148e4:	e59fc018 	ldr	ip, [pc, #24]	; 40014904 <CyFx3DevIOIsGpio+0x3c>
400148e8:	e3510000 	cmp	r1, #0
400148ec:	e08c1102 	add	r1, ip, r2, lsl #2
400148f0:	0591101c 	ldreq	r1, [r1, #28]
400148f4:	15911014 	ldrne	r1, [r1, #20]
400148f8:	e3a03001 	mov	r3, #1
400148fc:	e0010013 	and	r0, r1, r3, lsl r0
40014900:	e12fff1e 	bx	lr
40014904:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

40014908 <CyFx3DevIOIsI2cConfigured>:
40014908:	e59f0004 	ldr	r0, [pc, #4]	; 40014914 <CyFx3DevIOIsI2cConfigured+0xc>
4001490c:	e5900008 	ldr	r0, [r0, #8]
40014910:	e12fff1e 	bx	lr
40014914:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

40014918 <CyFx3DevIOIsI2sConfigured>:
40014918:	e59f0004 	ldr	r0, [pc, #4]	; 40014924 <CyFx3DevIOIsI2sConfigured+0xc>
4001491c:	e590000c 	ldr	r0, [r0, #12]
40014920:	e12fff1e 	bx	lr
40014924:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

40014928 <CyFx3DevIOIsSpiConfigured>:
40014928:	e59f0004 	ldr	r0, [pc, #4]	; 40014934 <CyFx3DevIOIsSpiConfigured+0xc>
4001492c:	e5900010 	ldr	r0, [r0, #16]
40014930:	e12fff1e 	bx	lr
40014934:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOIsUartConfigured:

40014938 <CyFx3DevIOIsUartConfigured>:
40014938:	e59f0004 	ldr	r0, [pc, #4]	; 40014944 <CyFx3DevIOIsUartConfigured+0xc>
4001493c:	e5900004 	ldr	r0, [r0, #4]
40014940:	e12fff1e 	bx	lr
40014944:	40030cd0 	.word	0x40030cd0

Disassembly of section i.CyFx3DevIOSelectGpio:

40014948 <CyFx3DevIOSelectGpio>:
40014948:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001494c:	e350003d 	cmp	r0, #61	; 0x3d
40014950:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
40014954:	e3a08001 	mov	r8, #1
40014958:	e59f30b0 	ldr	r3, [pc, #176]	; 40014a10 <CyFx3DevIOSelectGpio+0xc8>
4001495c:	e1a0c018 	lsl	ip, r8, r0
40014960:	e2837014 	add	r7, r3, #20
40014964:	e89700d0 	ldm	r7, {r4, r6, r7}
40014968:	e5935020 	ldr	r5, [r3, #32]
4001496c:	e3510000 	cmp	r1, #0
40014970:	e240e020 	sub	lr, r0, #32
40014974:	0a00000f 	beq	400149b8 <CyFx3DevIOSelectGpio+0x70>
40014978:	e3500020 	cmp	r0, #32
4001497c:	2a000005 	bcs	40014998 <CyFx3DevIOSelectGpio+0x50>
40014980:	e3520000 	cmp	r2, #0
40014984:	0187000c 	orreq	r0, r7, ip
40014988:	0a00000f 	beq	400149cc <CyFx3DevIOSelectGpio+0x84>
4001498c:	e184000c 	orr	r0, r4, ip
40014990:	e5830014 	str	r0, [r3, #20]
40014994:	ea000013 	b	400149e8 <CyFx3DevIOSelectGpio+0xa0>
40014998:	e3520000 	cmp	r2, #0
4001499c:	e20e00ff 	and	r0, lr, #255	; 0xff
400149a0:	e1a00018 	lsl	r0, r8, r0
400149a4:	01800005 	orreq	r0, r0, r5
400149a8:	0a00000d 	beq	400149e4 <CyFx3DevIOSelectGpio+0x9c>
400149ac:	e1800006 	orr	r0, r0, r6
400149b0:	e5830018 	str	r0, [r3, #24]
400149b4:	ea00000b 	b	400149e8 <CyFx3DevIOSelectGpio+0xa0>
400149b8:	e3500020 	cmp	r0, #32
400149bc:	2a000004 	bcs	400149d4 <CyFx3DevIOSelectGpio+0x8c>
400149c0:	e1c4000c 	bic	r0, r4, ip
400149c4:	e5830014 	str	r0, [r3, #20]
400149c8:	e1c7000c 	bic	r0, r7, ip
400149cc:	e583001c 	str	r0, [r3, #28]
400149d0:	ea000004 	b	400149e8 <CyFx3DevIOSelectGpio+0xa0>
400149d4:	e1a00e18 	lsl	r0, r8, lr
400149d8:	e1c61000 	bic	r1, r6, r0
400149dc:	e1c50000 	bic	r0, r5, r0
400149e0:	e5831018 	str	r1, [r3, #24]
400149e4:	e5830020 	str	r0, [r3, #32]
400149e8:	e5931014 	ldr	r1, [r3, #20]
400149ec:	e59f0020 	ldr	r0, [pc, #32]	; 40014a14 <CyFx3DevIOSelectGpio+0xcc>
400149f0:	e580100c 	str	r1, [r0, #12]
400149f4:	e5931018 	ldr	r1, [r3, #24]
400149f8:	e5801010 	str	r1, [r0, #16]
400149fc:	e593101c 	ldr	r1, [r3, #28]
40014a00:	e5801014 	str	r1, [r0, #20]
40014a04:	e5931020 	ldr	r1, [r3, #32]
40014a08:	e5801018 	str	r1, [r0, #24]
40014a0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014a10:	40030cd0 	.word	0x40030cd0
40014a14:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

40014a18 <CyFx3DevIOSetConfig>:
40014a18:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014a1c:	e59f8208 	ldr	r8, [pc, #520]	; 40014c2c <CyFx3DevIOSetConfig+0x214>
40014a20:	e1a05000 	mov	r5, r0
40014a24:	e5980008 	ldr	r0, [r8, #8]
40014a28:	e59f7200 	ldr	r7, [pc, #512]	; 40014c30 <CyFx3DevIOSetConfig+0x218>
40014a2c:	e2006002 	and	r6, r0, #2
40014a30:	e5d50000 	ldrb	r0, [r5]
40014a34:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
40014a38:	e3500000 	cmp	r0, #0
40014a3c:	01c44944 	biceq	r4, r4, r4, asr #18
40014a40:	0a000008 	beq	40014a68 <CyFx3DevIOSetConfig+0x50>
40014a44:	e3500001 	cmp	r0, #1
40014a48:	059f41e4 	ldreq	r4, [pc, #484]	; 40014c34 <CyFx3DevIOSetConfig+0x21c>
40014a4c:	0a000005 	beq	40014a68 <CyFx3DevIOSetConfig+0x50>
40014a50:	e3500002 	cmp	r0, #2
40014a54:	059f41dc 	ldreq	r4, [pc, #476]	; 40014c38 <CyFx3DevIOSetConfig+0x220>
40014a58:	0a000001 	beq	40014a64 <CyFx3DevIOSetConfig+0x4c>
40014a5c:	e3500003 	cmp	r0, #3
40014a60:	1a000058 	bne	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014a64:	e3866010 	orr	r6, r6, #16
40014a68:	e5d50001 	ldrb	r0, [r5, #1]
40014a6c:	e3500005 	cmp	r0, #5
40014a70:	308ff100 	addcc	pc, pc, r0, lsl #2
40014a74:	ea000053 	b	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014a78:	ea000003 	b	40014a8c <CyFx3DevIOSetConfig+0x74>
40014a7c:	ea000005 	b	40014a98 <CyFx3DevIOSetConfig+0x80>
40014a80:	ea000021 	b	40014b0c <CyFx3DevIOSetConfig+0xf4>
40014a84:	ea00002c 	b	40014b3c <CyFx3DevIOSetConfig+0x124>
40014a88:	ea000002 	b	40014a98 <CyFx3DevIOSetConfig+0x80>
40014a8c:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
40014a90:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
40014a94:	ea000032 	b	40014b64 <CyFx3DevIOSetConfig+0x14c>
40014a98:	e3500001 	cmp	r0, #1
40014a9c:	e5950004 	ldr	r0, [r5, #4]
40014aa0:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
40014aa4:	e3500000 	cmp	r0, #0
40014aa8:	1a000006 	bne	40014ac8 <CyFx3DevIOSetConfig+0xb0>
40014aac:	e5950010 	ldr	r0, [r5, #16]
40014ab0:	e3500000 	cmp	r0, #0
40014ab4:	1a00000b 	bne	40014ae8 <CyFx3DevIOSetConfig+0xd0>
40014ab8:	e595000c 	ldr	r0, [r5, #12]
40014abc:	e3500000 	cmp	r0, #0
40014ac0:	1a00000e 	bne	40014b00 <CyFx3DevIOSetConfig+0xe8>
40014ac4:	ea000005 	b	40014ae0 <CyFx3DevIOSetConfig+0xc8>
40014ac8:	e595000c 	ldr	r0, [r5, #12]
40014acc:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014ad0:	e3500000 	cmp	r0, #0
40014ad4:	05950010 	ldreq	r0, [r5, #16]
40014ad8:	03500000 	cmpeq	r0, #0
40014adc:	1a000039 	bne	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014ae0:	e3866c01 	orr	r6, r6, #256	; 0x100
40014ae4:	ea00001e 	b	40014b64 <CyFx3DevIOSetConfig+0x14c>
40014ae8:	e595000c 	ldr	r0, [r5, #12]
40014aec:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014af0:	e3500000 	cmp	r0, #0
40014af4:	1a000033 	bne	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014af8:	e3866c02 	orr	r6, r6, #512	; 0x200
40014afc:	ea000018 	b	40014b64 <CyFx3DevIOSetConfig+0x14c>
40014b00:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
40014b04:	e3866c03 	orr	r6, r6, #768	; 0x300
40014b08:	ea000015 	b	40014b64 <CyFx3DevIOSetConfig+0x14c>
40014b0c:	e5950010 	ldr	r0, [r5, #16]
40014b10:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
40014b14:	e3500000 	cmp	r0, #0
40014b18:	1a00002a 	bne	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014b1c:	e5950004 	ldr	r0, [r5, #4]
40014b20:	e3866c05 	orr	r6, r6, #1280	; 0x500
40014b24:	e3500000 	cmp	r0, #0
40014b28:	e595000c 	ldr	r0, [r5, #12]
40014b2c:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014b30:	e3500000 	cmp	r0, #0
40014b34:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014b38:	ea000009 	b	40014b64 <CyFx3DevIOSetConfig+0x14c>
40014b3c:	e5950004 	ldr	r0, [r5, #4]
40014b40:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014b44:	e3500000 	cmp	r0, #0
40014b48:	e5950010 	ldr	r0, [r5, #16]
40014b4c:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014b50:	e3500000 	cmp	r0, #0
40014b54:	e595000c 	ldr	r0, [r5, #12]
40014b58:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014b5c:	e3500000 	cmp	r0, #0
40014b60:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014b64:	e5950008 	ldr	r0, [r5, #8]
40014b68:	e5959014 	ldr	r9, [r5, #20]
40014b6c:	e3500000 	cmp	r0, #0
40014b70:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014b74:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014b78:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014b7c:	05950018 	ldreq	r0, [r5, #24]
40014b80:	01d00004 	bicseq	r0, r0, r4
40014b84:	0595e01c 	ldreq	lr, [r5, #28]
40014b88:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014b8c:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014b90:	0595c020 	ldreq	ip, [r5, #32]
40014b94:	01dc0004 	bicseq	r0, ip, r4
40014b98:	1a00000a 	bne	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014b9c:	e59f0098 	ldr	r0, [pc, #152]	; 40014c3c <CyFx3DevIOSetConfig+0x224>
40014ba0:	e3a01000 	mov	r1, #0
40014ba4:	e01e2000 	ands	r2, lr, r0
40014ba8:	000c2000 	andeq	r2, ip, r0
40014bac:	0a000001 	beq	40014bb8 <CyFx3DevIOSetConfig+0x1a0>
40014bb0:	e11c0000 	tst	ip, r0
40014bb4:	1a000003 	bne	40014bc8 <CyFx3DevIOSetConfig+0x1b0>
40014bb8:	e2523001 	subs	r3, r2, #1
40014bbc:	13a03001 	movne	r3, #1
40014bc0:	e1120003 	tst	r2, r3
40014bc4:	0a000001 	beq	40014bd0 <CyFx3DevIOSetConfig+0x1b8>
40014bc8:	e3a00000 	mov	r0, #0
40014bcc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014bd0:	e2811001 	add	r1, r1, #1
40014bd4:	e3510008 	cmp	r1, #8
40014bd8:	e1a00080 	lsl	r0, r0, #1
40014bdc:	3afffff0 	bcc	40014ba4 <CyFx3DevIOSetConfig+0x18c>
40014be0:	e588900c 	str	r9, [r8, #12]
40014be4:	e5950018 	ldr	r0, [r5, #24]
40014be8:	e5880010 	str	r0, [r8, #16]
40014bec:	e595001c 	ldr	r0, [r5, #28]
40014bf0:	e5880014 	str	r0, [r8, #20]
40014bf4:	e5950020 	ldr	r0, [r5, #32]
40014bf8:	e5880018 	str	r0, [r8, #24]
40014bfc:	e3a00001 	mov	r0, #1
40014c00:	eb0000a6 	bl	40014ea0 <CyFx3BusyWait>
40014c04:	e5886008 	str	r6, [r8, #8]
40014c08:	e59f0030 	ldr	r0, [pc, #48]	; 40014c40 <CyFx3DevIOSetConfig+0x228>
40014c0c:	e3a02024 	mov	r2, #36	; 0x24
40014c10:	e1a01005 	mov	r1, r5
40014c14:	ebfffb98 	bl	40013a7c <__aeabi_memcpy4>
40014c18:	e59f0024 	ldr	r0, [pc, #36]	; 40014c44 <CyFx3DevIOSetConfig+0x22c>
40014c1c:	e5804004 	str	r4, [r0, #4]
40014c20:	e5807000 	str	r7, [r0]
40014c24:	e3a00001 	mov	r0, #1
40014c28:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014c2c:	e0051000 	.word	0xe0051000
40014c30:	3fe00000 	.word	0x3fe00000
40014c34:	1ffff9e0 	.word	0x1ffff9e0
40014c38:	1fffe000 	.word	0x1fffe000
40014c3c:	01010101 	.word	0x01010101
40014c40:	40030cd0 	.word	0x40030cd0
40014c44:	40030cc8 	.word	0x40030cc8

Disassembly of section i.CyFx3DevIdentifyPart:

40014c48 <CyFx3DevIdentifyPart>:
40014c48:	e59f0078 	ldr	r0, [pc, #120]	; 40014cc8 <CyFx3DevIdentifyPart+0x80>
40014c4c:	e5901008 	ldr	r1, [r0, #8]
40014c50:	e59f2074 	ldr	r2, [pc, #116]	; 40014ccc <CyFx3DevIdentifyPart+0x84>
40014c54:	e1a01221 	lsr	r1, r1, #4
40014c58:	e5923004 	ldr	r3, [r2, #4]
40014c5c:	e3530000 	cmp	r3, #0
40014c60:	15d20000 	ldrbne	r0, [r2]
40014c64:	112fff1e 	bxne	lr
40014c68:	e5900004 	ldr	r0, [r0, #4]
40014c6c:	e3100040 	tst	r0, #64	; 0x40
40014c70:	e59f2058 	ldr	r2, [pc, #88]	; 40014cd0 <CyFx3DevIdentifyPart+0x88>
40014c74:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014c78:	e3a00000 	mov	r0, #0
40014c7c:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014c80:	e1530001 	cmp	r3, r1
40014c84:	12800001 	addne	r0, r0, #1
40014c88:	120000ff 	andne	r0, r0, #255	; 0xff
40014c8c:	1350001b 	cmpne	r0, #27
40014c90:	3afffff9 	bcc	40014c7c <CyFx3DevIdentifyPart+0x34>
40014c94:	e350001b 	cmp	r0, #27
40014c98:	03a00003 	moveq	r0, #3
40014c9c:	0a000000 	beq	40014ca4 <CyFx3DevIdentifyPart+0x5c>
40014ca0:	2a000003 	bcs	40014cb4 <CyFx3DevIdentifyPart+0x6c>
40014ca4:	e0821180 	add	r1, r2, r0, lsl #3
40014ca8:	e5911004 	ldr	r1, [r1, #4]
40014cac:	e3110004 	tst	r1, #4
40014cb0:	112fff1e 	bxne	lr
40014cb4:	e59f1018 	ldr	r1, [pc, #24]	; 40014cd4 <CyFx3DevIdentifyPart+0x8c>
40014cb8:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014cbc:	e3822004 	orr	r2, r2, #4
40014cc0:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014cc4:	e12fff1e 	bx	lr
40014cc8:	e0055000 	.word	0xe0055000
40014ccc:	40030cbc 	.word	0x40030cbc
40014cd0:	4001207c 	.word	0x4001207c
40014cd4:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014cd8 <CyFx3DevInitPageTables>:
40014cd8:	e92d4030 	push	{r4, r5, lr}
40014cdc:	e59f0058 	ldr	r0, [pc, #88]	; 40014d3c <CyFx3DevInitPageTables+0x64>
40014ce0:	e3a04000 	mov	r4, #0
40014ce4:	e59f504c 	ldr	r5, [pc, #76]	; 40014d38 <CyFx3DevInitPageTables+0x60>
40014ce8:	e5804004 	str	r4, [r0, #4]
40014cec:	ebffffd5 	bl	40014c48 <CyFx3DevIdentifyPart>
40014cf0:	e59f1048 	ldr	r1, [pc, #72]	; 40014d40 <CyFx3DevInitPageTables+0x68>
40014cf4:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014cf8:	e5801000 	str	r1, [r0]
40014cfc:	e2811201 	add	r1, r1, #268435456	; 0x10000000
40014d00:	e5801008 	str	r1, [r0, #8]
40014d04:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014d08:	e5801010 	str	r1, [r0, #16]
40014d0c:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
40014d10:	e5801018 	str	r1, [r0, #24]
40014d14:	e59f1028 	ldr	r1, [pc, #40]	; 40014d44 <CyFx3DevInitPageTables+0x6c>
40014d18:	e5801020 	str	r1, [r0, #32]
40014d1c:	e59f1024 	ldr	r1, [pc, #36]	; 40014d48 <CyFx3DevInitPageTables+0x70>
40014d20:	e580101c 	str	r1, [r0, #28]
40014d24:	e5804024 	str	r4, [r0, #36]	; 0x24
40014d28:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014d2c:	e3a00003 	mov	r0, #3
40014d30:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014d34:	e8bd8030 	pop	{r4, r5, pc}
40014d38:	e0058000 	.word	0xe0058000
40014d3c:	40030cbc 	.word	0x40030cbc
40014d40:	00000c12 	.word	0x00000c12
40014d44:	fff00c12 	.word	0xfff00c12
40014d48:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014d4c <CyFx3DevIsGpif32Supported>:
40014d4c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d50:	ebffffbc 	bl	40014c48 <CyFx3DevIdentifyPart>
40014d54:	e350001b 	cmp	r0, #27
40014d58:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d70 <CyFx3DevIsGpif32Supported+0x24>
40014d5c:	30810180 	addcc	r0, r1, r0, lsl #3
40014d60:	35900004 	ldrcc	r0, [r0, #4]
40014d64:	32000010 	andcc	r0, r0, #16
40014d68:	23a00000 	movcs	r0, #0
40014d6c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d70:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014d74 <CyFx3DevIsGpifConfigurable>:
40014d74:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d78:	ebffffb2 	bl	40014c48 <CyFx3DevIdentifyPart>
40014d7c:	e350001b 	cmp	r0, #27
40014d80:	2a000006 	bcs	40014da0 <CyFx3DevIsGpifConfigurable+0x2c>
40014d84:	e59f101c 	ldr	r1, [pc, #28]	; 40014da8 <CyFx3DevIsGpifConfigurable+0x34>
40014d88:	e0810180 	add	r0, r1, r0, lsl #3
40014d8c:	e5900004 	ldr	r0, [r0, #4]
40014d90:	e3100c0f 	tst	r0, #3840	; 0xf00
40014d94:	159f0010 	ldrne	r0, [pc, #16]	; 40014dac <CyFx3DevIsGpifConfigurable+0x38>
40014d98:	15900008 	ldrne	r0, [r0, #8]
40014d9c:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014da0:	e3a00001 	mov	r0, #1
40014da4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014da8:	4001207c 	.word	0x4001207c
40014dac:	40030cbc 	.word	0x40030cbc

Disassembly of section i.CyFx3DevIsGpifSupported:

40014db0 <CyFx3DevIsGpifSupported>:
40014db0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014db4:	ebffffa3 	bl	40014c48 <CyFx3DevIdentifyPart>
40014db8:	e350001b 	cmp	r0, #27
40014dbc:	359f1010 	ldrcc	r1, [pc, #16]	; 40014dd4 <CyFx3DevIsGpifSupported+0x24>
40014dc0:	30810180 	addcc	r0, r1, r0, lsl #3
40014dc4:	35900004 	ldrcc	r0, [r0, #4]
40014dc8:	32000008 	andcc	r0, r0, #8
40014dcc:	23a00000 	movcs	r0, #0
40014dd0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014dd4:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3DevIsI2sSupported:

40014dd8 <CyFx3DevIsI2sSupported>:
40014dd8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014ddc:	ebffff99 	bl	40014c48 <CyFx3DevIdentifyPart>
40014de0:	e350001b 	cmp	r0, #27
40014de4:	359f1010 	ldrcc	r1, [pc, #16]	; 40014dfc <CyFx3DevIsI2sSupported+0x24>
40014de8:	30810180 	addcc	r0, r1, r0, lsl #3
40014dec:	35900004 	ldrcc	r0, [r0, #4]
40014df0:	32000080 	andcc	r0, r0, #128	; 0x80
40014df4:	23a00000 	movcs	r0, #0
40014df8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014dfc:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3DevIsOtgSupported:

40014e00 <CyFx3DevIsOtgSupported>:
40014e00:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014e04:	ebffff8f 	bl	40014c48 <CyFx3DevIdentifyPart>
40014e08:	e350001b 	cmp	r0, #27
40014e0c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014e24 <CyFx3DevIsOtgSupported+0x24>
40014e10:	30810180 	addcc	r0, r1, r0, lsl #3
40014e14:	35900004 	ldrcc	r0, [r0, #4]
40014e18:	32000002 	andcc	r0, r0, #2
40014e1c:	23a00000 	movcs	r0, #0
40014e20:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e24:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3DevIsSib0Supported:

40014e28 <CyFx3DevIsSib0Supported>:
40014e28:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014e2c:	ebffff85 	bl	40014c48 <CyFx3DevIdentifyPart>
40014e30:	e350001b 	cmp	r0, #27
40014e34:	359f1010 	ldrcc	r1, [pc, #16]	; 40014e4c <CyFx3DevIsSib0Supported+0x24>
40014e38:	30810180 	addcc	r0, r1, r0, lsl #3
40014e3c:	35900004 	ldrcc	r0, [r0, #4]
40014e40:	32000020 	andcc	r0, r0, #32
40014e44:	23a00000 	movcs	r0, #0
40014e48:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e4c:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3DevIsSib1Supported:

40014e50 <CyFx3DevIsSib1Supported>:
40014e50:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014e54:	ebffff7b 	bl	40014c48 <CyFx3DevIdentifyPart>
40014e58:	e350001b 	cmp	r0, #27
40014e5c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014e74 <CyFx3DevIsSib1Supported+0x24>
40014e60:	30810180 	addcc	r0, r1, r0, lsl #3
40014e64:	35900004 	ldrcc	r0, [r0, #4]
40014e68:	32000040 	andcc	r0, r0, #64	; 0x40
40014e6c:	23a00000 	movcs	r0, #0
40014e70:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e74:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014e78 <CyFx3DevIsUsb3Supported>:
40014e78:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014e7c:	ebffff71 	bl	40014c48 <CyFx3DevIdentifyPart>
40014e80:	e350001b 	cmp	r0, #27
40014e84:	359f1010 	ldrcc	r1, [pc, #16]	; 40014e9c <CyFx3DevIsUsb3Supported+0x24>
40014e88:	30810180 	addcc	r0, r1, r0, lsl #3
40014e8c:	35900004 	ldrcc	r0, [r0, #4]
40014e90:	32000001 	andcc	r0, r0, #1
40014e94:	23a00000 	movcs	r0, #0
40014e98:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e9c:	4001207c 	.word	0x4001207c

Disassembly of section i.CyFx3BusyWait:

40014ea0 <CyFx3BusyWait>:
40014ea0:	ea000003 	b	40014eb4 <CyFx3BusyWait+0x14>
40014ea4:	e3a01000 	mov	r1, #0
40014ea8:	e2811001 	add	r1, r1, #1
40014eac:	e351002f 	cmp	r1, #47	; 0x2f
40014eb0:	3afffffc 	bcc	40014ea8 <CyFx3BusyWait+0x8>
40014eb4:	e1b01000 	movs	r1, r0
40014eb8:	e2400001 	sub	r0, r0, #1
40014ebc:	e1a00800 	lsl	r0, r0, #16
40014ec0:	e1a00820 	lsr	r0, r0, #16
40014ec4:	1afffff6 	bne	40014ea4 <CyFx3BusyWait+0x4>
40014ec8:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014ecc <CyFx3PibDllEnable>:
40014ecc:	e59f205c 	ldr	r2, [pc, #92]	; 40014f30 <CyFx3PibDllEnable+0x64>
40014ed0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014ed4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014ed8:	e3c00001 	bic	r0, r0, #1
40014edc:	e5820028 	str	r0, [r2, #40]	; 0x28
40014ee0:	e3a00001 	mov	r0, #1
40014ee4:	ebffffed 	bl	40014ea0 <CyFx3BusyWait>
40014ee8:	e3a00003 	mov	r0, #3
40014eec:	e5820028 	str	r0, [r2, #40]	; 0x28
40014ef0:	e3a00001 	mov	r0, #1
40014ef4:	ebffffe9 	bl	40014ea0 <CyFx3BusyWait>
40014ef8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014efc:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014f00:	e5820028 	str	r0, [r2, #40]	; 0x28
40014f04:	e3a00001 	mov	r0, #1
40014f08:	ebffffe4 	bl	40014ea0 <CyFx3BusyWait>
40014f0c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014f10:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014f14:	e5820028 	str	r0, [r2, #40]	; 0x28
40014f18:	e3a00001 	mov	r0, #1
40014f1c:	ebffffdf 	bl	40014ea0 <CyFx3BusyWait>
40014f20:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014f24:	e3100004 	tst	r0, #4
40014f28:	0afffffc 	beq	40014f20 <CyFx3PibDllEnable+0x54>
40014f2c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014f30:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014f34 <CyFx3PibGetDllStatus>:
40014f34:	e59f0008 	ldr	r0, [pc, #8]	; 40014f44 <CyFx3PibGetDllStatus+0x10>
40014f38:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014f3c:	e2000004 	and	r0, r0, #4
40014f40:	e12fff1e 	bx	lr
40014f44:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014f48 <CyFx3PibPowerOn>:
40014f48:	e92d4010 	push	{r4, lr}
40014f4c:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014f50:	ebffff96 	bl	40014db0 <CyFx3DevIsGpifSupported>
40014f54:	e3500000 	cmp	r0, #0
40014f58:	1a000002 	bne	40014f68 <CyFx3PibPowerOn+0x20>
40014f5c:	e4940004 	ldr	r0, [r4], #4
40014f60:	e3500000 	cmp	r0, #0
40014f64:	1afffffc 	bne	40014f5c <CyFx3PibPowerOn+0x14>
40014f68:	e59f2028 	ldr	r2, [pc, #40]	; 40014f98 <CyFx3PibPowerOn+0x50>
40014f6c:	e3a00000 	mov	r0, #0
40014f70:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014f74:	e3a0000a 	mov	r0, #10
40014f78:	ebffffc8 	bl	40014ea0 <CyFx3BusyWait>
40014f7c:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014f80:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014f84:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014f88:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014f8c:	e3100001 	tst	r0, #1
40014f90:	0afffffc 	beq	40014f88 <CyFx3PibPowerOn+0x40>
40014f94:	e8bd8010 	pop	{r4, pc}
40014f98:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014f9c <CyU3PDmaSocketDisable>:
40014f9c:	e3a0c03f 	mov	ip, #63	; 0x3f
40014fa0:	e00c1440 	and	r1, ip, r0, asr #8
40014fa4:	e20030ff 	and	r3, r0, #255	; 0xff
40014fa8:	e59fc048 	ldr	ip, [pc, #72]	; 40014ff8 <CyU3PDmaSocketDisable+0x5c>
40014fac:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014fb0:	e08cc383 	add	ip, ip, r3, lsl #7
40014fb4:	e59c200c 	ldr	r2, [ip, #12]
40014fb8:	e3120601 	tst	r2, #1048576	; 0x100000
40014fbc:	1a000000 	bne	40014fc4 <CyU3PDmaSocketDisable+0x28>
40014fc0:	e12fff1e 	bx	lr
40014fc4:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014fc8:	e59fc028 	ldr	ip, [pc, #40]	; 40014ff8 <CyU3PDmaSocketDisable+0x5c>
40014fcc:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014fd0:	e08cc383 	add	ip, ip, r3, lsl #7
40014fd4:	e58c200c 	str	r2, [ip, #12]
40014fd8:	e1a00000 	nop			; (mov r0, r0)
40014fdc:	e59fc014 	ldr	ip, [pc, #20]	; 40014ff8 <CyU3PDmaSocketDisable+0x5c>
40014fe0:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014fe4:	e08cc383 	add	ip, ip, r3, lsl #7
40014fe8:	e59cc00c 	ldr	ip, [ip, #12]
40014fec:	e31c0601 	tst	ip, #1048576	; 0x100000
40014ff0:	1afffff9 	bne	40014fdc <CyU3PDmaSocketDisable+0x40>
40014ff4:	eafffff1 	b	40014fc0 <CyU3PDmaSocketDisable+0x24>
40014ff8:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014ffc <CyU3PDmaSocketGetConfig>:
40014ffc:	e1a02000 	mov	r2, r0
40015000:	e3a0003f 	mov	r0, #63	; 0x3f
40015004:	e0003442 	and	r3, r0, r2, asr #8
40015008:	e202c0ff 	and	ip, r2, #255	; 0xff
4001500c:	e3510000 	cmp	r1, #0
40015010:	1a000001 	bne	4001501c <CyU3PDmaSocketGetConfig+0x20>
40015014:	e3a00040 	mov	r0, #64	; 0x40
40015018:	e12fff1e 	bx	lr
4001501c:	e59f0074 	ldr	r0, [pc, #116]	; 40015098 <CyU3PDmaSocketGetConfig+0x9c>
40015020:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40015024:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40015028:	e5810000 	str	r0, [r1]
4001502c:	e59f0064 	ldr	r0, [pc, #100]	; 40015098 <CyU3PDmaSocketGetConfig+0x9c>
40015030:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40015034:	e080038c 	add	r0, r0, ip, lsl #7
40015038:	e5900004 	ldr	r0, [r0, #4]
4001503c:	e5810004 	str	r0, [r1, #4]
40015040:	e59f0050 	ldr	r0, [pc, #80]	; 40015098 <CyU3PDmaSocketGetConfig+0x9c>
40015044:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40015048:	e080038c 	add	r0, r0, ip, lsl #7
4001504c:	e5900008 	ldr	r0, [r0, #8]
40015050:	e5810008 	str	r0, [r1, #8]
40015054:	e59f003c 	ldr	r0, [pc, #60]	; 40015098 <CyU3PDmaSocketGetConfig+0x9c>
40015058:	e7900103 	ldr	r0, [r0, r3, lsl #2]
4001505c:	e080038c 	add	r0, r0, ip, lsl #7
40015060:	e590000c 	ldr	r0, [r0, #12]
40015064:	e581000c 	str	r0, [r1, #12]
40015068:	e59f0028 	ldr	r0, [pc, #40]	; 40015098 <CyU3PDmaSocketGetConfig+0x9c>
4001506c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40015070:	e080038c 	add	r0, r0, ip, lsl #7
40015074:	e5900010 	ldr	r0, [r0, #16]
40015078:	e5810010 	str	r0, [r1, #16]
4001507c:	e59f0014 	ldr	r0, [pc, #20]	; 40015098 <CyU3PDmaSocketGetConfig+0x9c>
40015080:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40015084:	e080038c 	add	r0, r0, ip, lsl #7
40015088:	e5900014 	ldr	r0, [r0, #20]
4001508c:	e5810014 	str	r0, [r1, #20]
40015090:	e3a00000 	mov	r0, #0
40015094:	eaffffdf 	b	40015018 <CyU3PDmaSocketGetConfig+0x1c>
40015098:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

4001509c <CyU3PDmaSocketIsValidConsumer>:
4001509c:	e92d4010 	push	{r4, lr}
400150a0:	e1a01000 	mov	r1, r0
400150a4:	e3a0003f 	mov	r0, #63	; 0x3f
400150a8:	e0002441 	and	r2, r0, r1, asr #8
400150ac:	e20130ff 	and	r3, r1, #255	; 0xff
400150b0:	e3a04000 	mov	r4, #0
400150b4:	e3520000 	cmp	r2, #0
400150b8:	0a000006 	beq	400150d8 <CyU3PDmaSocketIsValidConsumer+0x3c>
400150bc:	e3520001 	cmp	r2, #1
400150c0:	0a000009 	beq	400150ec <CyU3PDmaSocketIsValidConsumer+0x50>
400150c4:	e3520002 	cmp	r2, #2
400150c8:	0a00000c 	beq	40015100 <CyU3PDmaSocketIsValidConsumer+0x64>
400150cc:	e3520003 	cmp	r2, #3
400150d0:	1a000014 	bne	40015128 <CyU3PDmaSocketIsValidConsumer+0x8c>
400150d4:	ea00000e 	b	40015114 <CyU3PDmaSocketIsValidConsumer+0x78>
400150d8:	e1a00000 	nop			; (mov r0, r0)
400150dc:	e3a0c000 	mov	ip, #0
400150e0:	e3a0e004 	mov	lr, #4
400150e4:	e59f4080 	ldr	r4, [pc, #128]	; 4001516c <CyU3PDmaSocketIsValidConsumer+0xd0>
400150e8:	ea000011 	b	40015134 <CyU3PDmaSocketIsValidConsumer+0x98>
400150ec:	e1a00000 	nop			; (mov r0, r0)
400150f0:	e3a0c000 	mov	ip, #0
400150f4:	e3a0e00f 	mov	lr, #15
400150f8:	e59f4070 	ldr	r4, [pc, #112]	; 40015170 <CyU3PDmaSocketIsValidConsumer+0xd4>
400150fc:	ea00000c 	b	40015134 <CyU3PDmaSocketIsValidConsumer+0x98>
40015100:	e1a00000 	nop			; (mov r0, r0)
40015104:	e3a0c000 	mov	ip, #0
40015108:	e3a0e007 	mov	lr, #7
4001510c:	e59f4060 	ldr	r4, [pc, #96]	; 40015174 <CyU3PDmaSocketIsValidConsumer+0xd8>
40015110:	ea000007 	b	40015134 <CyU3PDmaSocketIsValidConsumer+0x98>
40015114:	e1a00000 	nop			; (mov r0, r0)
40015118:	e3a0c000 	mov	ip, #0
4001511c:	e3a0e00f 	mov	lr, #15
40015120:	e59f4050 	ldr	r4, [pc, #80]	; 40015178 <CyU3PDmaSocketIsValidConsumer+0xdc>
40015124:	ea000002 	b	40015134 <CyU3PDmaSocketIsValidConsumer+0x98>
40015128:	e1a00000 	nop			; (mov r0, r0)
4001512c:	e3a00000 	mov	r0, #0
40015130:	e8bd8010 	pop	{r4, pc}
40015134:	e1a00000 	nop			; (mov r0, r0)
40015138:	e5940000 	ldr	r0, [r4]
4001513c:	e3100001 	tst	r0, #1
40015140:	1a000001 	bne	4001514c <CyU3PDmaSocketIsValidConsumer+0xb0>
40015144:	e3a00000 	mov	r0, #0
40015148:	eafffff8 	b	40015130 <CyU3PDmaSocketIsValidConsumer+0x94>
4001514c:	e153000c 	cmp	r3, ip
40015150:	ba000003 	blt	40015164 <CyU3PDmaSocketIsValidConsumer+0xc8>
40015154:	e153000e 	cmp	r3, lr
40015158:	ca000001 	bgt	40015164 <CyU3PDmaSocketIsValidConsumer+0xc8>
4001515c:	e3a00001 	mov	r0, #1
40015160:	eafffff2 	b	40015130 <CyU3PDmaSocketIsValidConsumer+0x94>
40015164:	e3a00000 	mov	r0, #0
40015168:	eafffff0 	b	40015130 <CyU3PDmaSocketIsValidConsumer+0x94>
4001516c:	e0007f04 	.word	0xe0007f04
40015170:	e0017f04 	.word	0xe0017f04
40015174:	e0027f04 	.word	0xe0027f04
40015178:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

4001517c <CyU3PDmaSocketIsValidProducer>:
4001517c:	e92d4010 	push	{r4, lr}
40015180:	e1a01000 	mov	r1, r0
40015184:	e3a0003f 	mov	r0, #63	; 0x3f
40015188:	e0002441 	and	r2, r0, r1, asr #8
4001518c:	e20130ff 	and	r3, r1, #255	; 0xff
40015190:	e3a04000 	mov	r4, #0
40015194:	e3520000 	cmp	r2, #0
40015198:	0a000006 	beq	400151b8 <CyU3PDmaSocketIsValidProducer+0x3c>
4001519c:	e3520001 	cmp	r2, #1
400151a0:	0a000009 	beq	400151cc <CyU3PDmaSocketIsValidProducer+0x50>
400151a4:	e3520002 	cmp	r2, #2
400151a8:	0a00000c 	beq	400151e0 <CyU3PDmaSocketIsValidProducer+0x64>
400151ac:	e3520004 	cmp	r2, #4
400151b0:	1a000014 	bne	40015208 <CyU3PDmaSocketIsValidProducer+0x8c>
400151b4:	ea00000e 	b	400151f4 <CyU3PDmaSocketIsValidProducer+0x78>
400151b8:	e1a00000 	nop			; (mov r0, r0)
400151bc:	e3a0c005 	mov	ip, #5
400151c0:	e3a0e007 	mov	lr, #7
400151c4:	e59f4080 	ldr	r4, [pc, #128]	; 4001524c <CyU3PDmaSocketIsValidProducer+0xd0>
400151c8:	ea000011 	b	40015214 <CyU3PDmaSocketIsValidProducer+0x98>
400151cc:	e1a00000 	nop			; (mov r0, r0)
400151d0:	e3a0c000 	mov	ip, #0
400151d4:	e3a0e01f 	mov	lr, #31
400151d8:	e59f4070 	ldr	r4, [pc, #112]	; 40015250 <CyU3PDmaSocketIsValidProducer+0xd4>
400151dc:	ea00000c 	b	40015214 <CyU3PDmaSocketIsValidProducer+0x98>
400151e0:	e1a00000 	nop			; (mov r0, r0)
400151e4:	e3a0c000 	mov	ip, #0
400151e8:	e3a0e007 	mov	lr, #7
400151ec:	e59f4060 	ldr	r4, [pc, #96]	; 40015254 <CyU3PDmaSocketIsValidProducer+0xd8>
400151f0:	ea000007 	b	40015214 <CyU3PDmaSocketIsValidProducer+0x98>
400151f4:	e1a00000 	nop			; (mov r0, r0)
400151f8:	e3a0c000 	mov	ip, #0
400151fc:	e3a0e00f 	mov	lr, #15
40015200:	e59f4050 	ldr	r4, [pc, #80]	; 40015258 <CyU3PDmaSocketIsValidProducer+0xdc>
40015204:	ea000002 	b	40015214 <CyU3PDmaSocketIsValidProducer+0x98>
40015208:	e1a00000 	nop			; (mov r0, r0)
4001520c:	e3a00000 	mov	r0, #0
40015210:	e8bd8010 	pop	{r4, pc}
40015214:	e1a00000 	nop			; (mov r0, r0)
40015218:	e5940000 	ldr	r0, [r4]
4001521c:	e3100001 	tst	r0, #1
40015220:	1a000001 	bne	4001522c <CyU3PDmaSocketIsValidProducer+0xb0>
40015224:	e3a00000 	mov	r0, #0
40015228:	eafffff8 	b	40015210 <CyU3PDmaSocketIsValidProducer+0x94>
4001522c:	e153000c 	cmp	r3, ip
40015230:	ba000003 	blt	40015244 <CyU3PDmaSocketIsValidProducer+0xc8>
40015234:	e153000e 	cmp	r3, lr
40015238:	ca000001 	bgt	40015244 <CyU3PDmaSocketIsValidProducer+0xc8>
4001523c:	e3a00001 	mov	r0, #1
40015240:	eafffff2 	b	40015210 <CyU3PDmaSocketIsValidProducer+0x94>
40015244:	e3a00000 	mov	r0, #0
40015248:	eafffff0 	b	40015210 <CyU3PDmaSocketIsValidProducer+0x94>
4001524c:	e0007f04 	.word	0xe0007f04
40015250:	e0017f04 	.word	0xe0017f04
40015254:	e0027f04 	.word	0xe0027f04
40015258:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

4001525c <CyU3PDmaSocketSendEvent>:
4001525c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015260:	e1a04000 	mov	r4, r0
40015264:	e1a05001 	mov	r5, r1
40015268:	e1a06002 	mov	r6, r2
4001526c:	e3a0003f 	mov	r0, #63	; 0x3f
40015270:	e0007444 	and	r7, r0, r4, asr #8
40015274:	e20480ff 	and	r8, r4, #255	; 0xff
40015278:	e1a09005 	mov	r9, r5
4001527c:	e3560001 	cmp	r6, #1
40015280:	1a000000 	bne	40015288 <CyU3PDmaSocketSendEvent+0x2c>
40015284:	e3899801 	orr	r9, r9, #65536	; 0x10000
40015288:	e59f0010 	ldr	r0, [pc, #16]	; 400152a0 <CyU3PDmaSocketSendEvent+0x44>
4001528c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40015290:	e0800388 	add	r0, r0, r8, lsl #7
40015294:	e580907c 	str	r9, [r0, #124]	; 0x7c
40015298:	ebfff6e1 	bl	40012e24 <CyU3PSysBarrierSync>
4001529c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400152a0:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketSetConfig:

400152a4 <CyU3PDmaSocketSetConfig>:
400152a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400152a8:	e1a04000 	mov	r4, r0
400152ac:	e1a05001 	mov	r5, r1
400152b0:	e3a0003f 	mov	r0, #63	; 0x3f
400152b4:	e0006444 	and	r6, r0, r4, asr #8
400152b8:	e20470ff 	and	r7, r4, #255	; 0xff
400152bc:	e3550000 	cmp	r5, #0
400152c0:	1a000001 	bne	400152cc <CyU3PDmaSocketSetConfig+0x28>
400152c4:	e3a00040 	mov	r0, #64	; 0x40
400152c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400152cc:	e59f1078 	ldr	r1, [pc, #120]	; 4001534c <CyU3PDmaSocketSetConfig+0xa8>
400152d0:	e5950000 	ldr	r0, [r5]
400152d4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400152d8:	e7810387 	str	r0, [r1, r7, lsl #7]
400152dc:	e59f1068 	ldr	r1, [pc, #104]	; 4001534c <CyU3PDmaSocketSetConfig+0xa8>
400152e0:	e5950004 	ldr	r0, [r5, #4]
400152e4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400152e8:	e0811387 	add	r1, r1, r7, lsl #7
400152ec:	e5810004 	str	r0, [r1, #4]
400152f0:	e59f1054 	ldr	r1, [pc, #84]	; 4001534c <CyU3PDmaSocketSetConfig+0xa8>
400152f4:	e5950008 	ldr	r0, [r5, #8]
400152f8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400152fc:	e0811387 	add	r1, r1, r7, lsl #7
40015300:	e5810008 	str	r0, [r1, #8]
40015304:	e59f1040 	ldr	r1, [pc, #64]	; 4001534c <CyU3PDmaSocketSetConfig+0xa8>
40015308:	e5950010 	ldr	r0, [r5, #16]
4001530c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015310:	e0811387 	add	r1, r1, r7, lsl #7
40015314:	e5810010 	str	r0, [r1, #16]
40015318:	e59f102c 	ldr	r1, [pc, #44]	; 4001534c <CyU3PDmaSocketSetConfig+0xa8>
4001531c:	e5950014 	ldr	r0, [r5, #20]
40015320:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015324:	e0811387 	add	r1, r1, r7, lsl #7
40015328:	e5810014 	str	r0, [r1, #20]
4001532c:	e59f1018 	ldr	r1, [pc, #24]	; 4001534c <CyU3PDmaSocketSetConfig+0xa8>
40015330:	e595000c 	ldr	r0, [r5, #12]
40015334:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015338:	e0811387 	add	r1, r1, r7, lsl #7
4001533c:	e581000c 	str	r0, [r1, #12]
40015340:	ebfff6b7 	bl	40012e24 <CyU3PSysBarrierSync>
40015344:	e3a00000 	mov	r0, #0
40015348:	eaffffde 	b	400152c8 <CyU3PDmaSocketSetConfig+0x24>
4001534c:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40015350 <CyU3PDmaSocketSetWrapUp>:
40015350:	e3a0c03f 	mov	ip, #63	; 0x3f
40015354:	e00c1440 	and	r1, ip, r0, asr #8
40015358:	e20030ff 	and	r3, r0, #255	; 0xff
4001535c:	e59fc02c 	ldr	ip, [pc, #44]	; 40015390 <CyU3PDmaSocketSetWrapUp+0x40>
40015360:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40015364:	e08cc383 	add	ip, ip, r3, lsl #7
40015368:	e59c200c 	ldr	r2, [ip, #12]
4001536c:	e3120601 	tst	r2, #1048576	; 0x100000
40015370:	1a000000 	bne	40015378 <CyU3PDmaSocketSetWrapUp+0x28>
40015374:	e12fff1e 	bx	lr
40015378:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001537c:	e59fc00c 	ldr	ip, [pc, #12]	; 40015390 <CyU3PDmaSocketSetWrapUp+0x40>
40015380:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40015384:	e08cc383 	add	ip, ip, r3, lsl #7
40015388:	e58c200c 	str	r2, [ip, #12]
4001538c:	eafffff8 	b	40015374 <CyU3PDmaSocketSetWrapUp+0x24>
40015390:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40015394 <CyU3PDmaSocketUpdateStatus>:
40015394:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015398:	e1a04000 	mov	r4, r0
4001539c:	e1a05001 	mov	r5, r1
400153a0:	e3a0003f 	mov	r0, #63	; 0x3f
400153a4:	e0006444 	and	r6, r0, r4, asr #8
400153a8:	e20470ff 	and	r7, r4, #255	; 0xff
400153ac:	e3550000 	cmp	r5, #0
400153b0:	1a000001 	bne	400153bc <CyU3PDmaSocketUpdateStatus+0x28>
400153b4:	e3a00040 	mov	r0, #64	; 0x40
400153b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400153bc:	e59f1040 	ldr	r1, [pc, #64]	; 40015404 <CyU3PDmaSocketUpdateStatus+0x70>
400153c0:	e5950010 	ldr	r0, [r5, #16]
400153c4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400153c8:	e0811387 	add	r1, r1, r7, lsl #7
400153cc:	e5810010 	str	r0, [r1, #16]
400153d0:	e59f102c 	ldr	r1, [pc, #44]	; 40015404 <CyU3PDmaSocketUpdateStatus+0x70>
400153d4:	e5950014 	ldr	r0, [r5, #20]
400153d8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400153dc:	e0811387 	add	r1, r1, r7, lsl #7
400153e0:	e5810014 	str	r0, [r1, #20]
400153e4:	e59f1018 	ldr	r1, [pc, #24]	; 40015404 <CyU3PDmaSocketUpdateStatus+0x70>
400153e8:	e595000c 	ldr	r0, [r5, #12]
400153ec:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400153f0:	e0811387 	add	r1, r1, r7, lsl #7
400153f4:	e581000c 	str	r0, [r1, #12]
400153f8:	ebfff689 	bl	40012e24 <CyU3PSysBarrierSync>
400153fc:	e3a00000 	mov	r0, #0
40015400:	eaffffec 	b	400153b8 <CyU3PDmaSocketUpdateStatus+0x24>
40015404:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40015408 <CyU3PDmaUpdateSocketSuspendOption>:
40015408:	e92d4070 	push	{r4, r5, r6, lr}
4001540c:	e24dd018 	sub	sp, sp, #24
40015410:	e1a04000 	mov	r4, r0
40015414:	e1a06001 	mov	r6, r1
40015418:	e1a0100d 	mov	r1, sp
4001541c:	e1a00004 	mov	r0, r4
40015420:	ebfffef5 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40015424:	e59d000c 	ldr	r0, [sp, #12]
40015428:	e2000702 	and	r0, r0, #524288	; 0x80000
4001542c:	e1a059a0 	lsr	r5, r0, #19
40015430:	e3550001 	cmp	r5, #1
40015434:	1a000010 	bne	4001547c <CyU3PDmaUpdateSocketSuspendOption+0x74>
40015438:	e59d000c 	ldr	r0, [sp, #12]
4001543c:	e3100101 	tst	r0, #1073741824	; 0x40000000
40015440:	1a00000a 	bne	40015470 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40015444:	e59d000c 	ldr	r0, [sp, #12]
40015448:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
4001544c:	e58d000c 	str	r0, [sp, #12]
40015450:	e3a00000 	mov	r0, #0
40015454:	e58d0010 	str	r0, [sp, #16]
40015458:	e1a0100d 	mov	r1, sp
4001545c:	e1a00004 	mov	r0, r4
40015460:	ebffffcb 	bl	40015394 <CyU3PDmaSocketUpdateStatus>
40015464:	e1a0100d 	mov	r1, sp
40015468:	e1a00004 	mov	r0, r4
4001546c:	ebfffee2 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40015470:	e3a00000 	mov	r0, #0
40015474:	e58d0010 	str	r0, [sp, #16]
40015478:	ea000004 	b	40015490 <CyU3PDmaUpdateSocketSuspendOption+0x88>
4001547c:	e59d000c 	ldr	r0, [sp, #12]
40015480:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40015484:	e58d000c 	str	r0, [sp, #12]
40015488:	e3a00e12 	mov	r0, #288	; 0x120
4001548c:	e58d0010 	str	r0, [sp, #16]
40015490:	e59d000c 	ldr	r0, [sp, #12]
40015494:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
40015498:	e58d000c 	str	r0, [sp, #12]
4001549c:	e59d0014 	ldr	r0, [sp, #20]
400154a0:	e3c00e12 	bic	r0, r0, #288	; 0x120
400154a4:	e58d0014 	str	r0, [sp, #20]
400154a8:	e3560000 	cmp	r6, #0
400154ac:	0a000006 	beq	400154cc <CyU3PDmaUpdateSocketSuspendOption+0xc4>
400154b0:	e3560001 	cmp	r6, #1
400154b4:	0a000006 	beq	400154d4 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
400154b8:	e3560002 	cmp	r6, #2
400154bc:	0a00000e 	beq	400154fc <CyU3PDmaUpdateSocketSuspendOption+0xf4>
400154c0:	e3560003 	cmp	r6, #3
400154c4:	1a000020 	bne	4001554c <CyU3PDmaUpdateSocketSuspendOption+0x144>
400154c8:	ea000015 	b	40015524 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
400154cc:	e1a00000 	nop			; (mov r0, r0)
400154d0:	ea00001f 	b	40015554 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400154d4:	e1a00000 	nop			; (mov r0, r0)
400154d8:	e59d000c 	ldr	r0, [sp, #12]
400154dc:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400154e0:	e58d000c 	str	r0, [sp, #12]
400154e4:	e3550000 	cmp	r5, #0
400154e8:	1a000002 	bne	400154f8 <CyU3PDmaUpdateSocketSuspendOption+0xf0>
400154ec:	e59d0014 	ldr	r0, [sp, #20]
400154f0:	e3800020 	orr	r0, r0, #32
400154f4:	e58d0014 	str	r0, [sp, #20]
400154f8:	ea000015 	b	40015554 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400154fc:	e1a00000 	nop			; (mov r0, r0)
40015500:	e3550000 	cmp	r5, #0
40015504:	1a000005 	bne	40015520 <CyU3PDmaUpdateSocketSuspendOption+0x118>
40015508:	e59d000c 	ldr	r0, [sp, #12]
4001550c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015510:	e58d000c 	str	r0, [sp, #12]
40015514:	e59d0014 	ldr	r0, [sp, #20]
40015518:	e3800020 	orr	r0, r0, #32
4001551c:	e58d0014 	str	r0, [sp, #20]
40015520:	ea00000b 	b	40015554 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015524:	e1a00000 	nop			; (mov r0, r0)
40015528:	e59d000c 	ldr	r0, [sp, #12]
4001552c:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40015530:	e58d000c 	str	r0, [sp, #12]
40015534:	e3550000 	cmp	r5, #0
40015538:	1a000002 	bne	40015548 <CyU3PDmaUpdateSocketSuspendOption+0x140>
4001553c:	e59d0014 	ldr	r0, [sp, #20]
40015540:	e3800c01 	orr	r0, r0, #256	; 0x100
40015544:	e58d0014 	str	r0, [sp, #20]
40015548:	ea000001 	b	40015554 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
4001554c:	e1a00000 	nop			; (mov r0, r0)
40015550:	e1a00000 	nop			; (mov r0, r0)
40015554:	e1a00000 	nop			; (mov r0, r0)
40015558:	e1a0100d 	mov	r1, sp
4001555c:	e1a00004 	mov	r0, r4
40015560:	ebffff8b 	bl	40015394 <CyU3PDmaSocketUpdateStatus>
40015564:	e28dd018 	add	sp, sp, #24
40015568:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

4001556c <CyU3PDmaChannelAcquireLock>:
4001556c:	e92d4070 	push	{r4, r5, r6, lr}
40015570:	e1a04000 	mov	r4, r0
40015574:	e1a05001 	mov	r5, r1
40015578:	e3540000 	cmp	r4, #0
4001557c:	1a000001 	bne	40015588 <CyU3PDmaChannelAcquireLock+0x1c>
40015580:	e3a00041 	mov	r0, #65	; 0x41
40015584:	e8bd8070 	pop	{r4, r5, r6, pc}
40015588:	e5940000 	ldr	r0, [r4]
4001558c:	e3500000 	cmp	r0, #0
40015590:	1a000001 	bne	4001559c <CyU3PDmaChannelAcquireLock+0x30>
40015594:	e3a00044 	mov	r0, #68	; 0x44
40015598:	eafffff9 	b	40015584 <CyU3PDmaChannelAcquireLock+0x18>
4001559c:	e1a01005 	mov	r1, r5
400155a0:	e284003c 	add	r0, r4, #60	; 0x3c
400155a4:	ebffd399 	bl	4000a410 <_txe_mutex_get>
400155a8:	e3500000 	cmp	r0, #0
400155ac:	0a000001 	beq	400155b8 <CyU3PDmaChannelAcquireLock+0x4c>
400155b0:	e3a0001d 	mov	r0, #29
400155b4:	eafffff2 	b	40015584 <CyU3PDmaChannelAcquireLock+0x18>
400155b8:	e3a00000 	mov	r0, #0
400155bc:	eafffff0 	b	40015584 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

400155c0 <CyU3PDmaChannelCacheControl>:
400155c0:	e92d4070 	push	{r4, r5, r6, lr}
400155c4:	e1a04000 	mov	r4, r0
400155c8:	e1a05001 	mov	r5, r1
400155cc:	e3e01000 	mvn	r1, #0
400155d0:	e1a00004 	mov	r0, r4
400155d4:	ebffffe4 	bl	4001556c <CyU3PDmaChannelAcquireLock>
400155d8:	e1a06000 	mov	r6, r0
400155dc:	e3560000 	cmp	r6, #0
400155e0:	0a000001 	beq	400155ec <CyU3PDmaChannelCacheControl+0x2c>
400155e4:	e1a00006 	mov	r0, r6
400155e8:	e8bd8070 	pop	{r4, r5, r6, pc}
400155ec:	e5940000 	ldr	r0, [r4]
400155f0:	e3500001 	cmp	r0, #1
400155f4:	1a000001 	bne	40015600 <CyU3PDmaChannelCacheControl+0x40>
400155f8:	e5845038 	str	r5, [r4, #56]	; 0x38
400155fc:	ea000000 	b	40015604 <CyU3PDmaChannelCacheControl+0x44>
40015600:	e3a06047 	mov	r6, #71	; 0x47
40015604:	e284003c 	add	r0, r4, #60	; 0x3c
40015608:	ebffd3b5 	bl	4000a4e4 <_txe_mutex_put>
4001560c:	e1a00006 	mov	r0, r6
40015610:	eafffff4 	b	400155e8 <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

40015614 <CyU3PDmaChannelCommitBuffer>:
40015614:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015618:	e24dd03c 	sub	sp, sp, #60	; 0x3c
4001561c:	e1a04000 	mov	r4, r0
40015620:	e1a05001 	mov	r5, r1
40015624:	e1a06002 	mov	r6, r2
40015628:	e3e01000 	mvn	r1, #0
4001562c:	e1a00004 	mov	r0, r4
40015630:	ebffffcd 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40015634:	e1a09000 	mov	r9, r0
40015638:	e3590000 	cmp	r9, #0
4001563c:	0a000002 	beq	4001564c <CyU3PDmaChannelCommitBuffer+0x38>
40015640:	e1a00009 	mov	r0, r9
40015644:	e28dd03c 	add	sp, sp, #60	; 0x3c
40015648:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001564c:	e1d400b6 	ldrh	r0, [r4, #6]
40015650:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015654:	e0400001 	sub	r0, r0, r1
40015658:	e1500005 	cmp	r0, r5
4001565c:	aa000000 	bge	40015664 <CyU3PDmaChannelCommitBuffer+0x50>
40015660:	e3a09040 	mov	r9, #64	; 0x40
40015664:	e5940000 	ldr	r0, [r4]
40015668:	e3500002 	cmp	r0, #2
4001566c:	0a000000 	beq	40015674 <CyU3PDmaChannelCommitBuffer+0x60>
40015670:	e3a09042 	mov	r9, #66	; 0x42
40015674:	e1d400b4 	ldrh	r0, [r4, #4]
40015678:	e3500003 	cmp	r0, #3
4001567c:	1a000000 	bne	40015684 <CyU3PDmaChannelCommitBuffer+0x70>
40015680:	e3a09046 	mov	r9, #70	; 0x46
40015684:	e3590000 	cmp	r9, #0
40015688:	0a000003 	beq	4001569c <CyU3PDmaChannelCommitBuffer+0x88>
4001568c:	e284003c 	add	r0, r4, #60	; 0x3c
40015690:	ebffd393 	bl	4000a4e4 <_txe_mutex_put>
40015694:	e1a00009 	mov	r0, r9
40015698:	eaffffe9 	b	40015644 <CyU3PDmaChannelCommitBuffer+0x30>
4001569c:	e1d400b4 	ldrh	r0, [r4, #4]
400156a0:	e20070ff 	and	r7, r0, #255	; 0xff
400156a4:	e3570002 	cmp	r7, #2
400156a8:	1a000037 	bne	4001578c <CyU3PDmaChannelCommitBuffer+0x178>
400156ac:	e1d401b6 	ldrh	r0, [r4, #22]
400156b0:	e28d1014 	add	r1, sp, #20
400156b4:	eb0034ad 	bl	40022970 <CyU3PDmaDscrGetConfig>
400156b8:	e1d401b8 	ldrh	r0, [r4, #24]
400156bc:	e28d1004 	add	r1, sp, #4
400156c0:	eb0034aa 	bl	40022970 <CyU3PDmaDscrGetConfig>
400156c4:	e59d0020 	ldr	r0, [sp, #32]
400156c8:	e3100008 	tst	r0, #8
400156cc:	1a000000 	bne	400156d4 <CyU3PDmaChannelCommitBuffer+0xc0>
400156d0:	e3a09047 	mov	r9, #71	; 0x47
400156d4:	e59d0010 	ldr	r0, [sp, #16]
400156d8:	e3100008 	tst	r0, #8
400156dc:	0a000000 	beq	400156e4 <CyU3PDmaChannelCommitBuffer+0xd0>
400156e0:	e3a09047 	mov	r9, #71	; 0x47
400156e4:	e3590000 	cmp	r9, #0
400156e8:	1a000080 	bne	400158f0 <CyU3PDmaChannelCommitBuffer+0x2dc>
400156ec:	e59d0010 	ldr	r0, [sp, #16]
400156f0:	e59f1208 	ldr	r1, [pc, #520]	; 40015900 <CyU3PDmaChannelCommitBuffer+0x2ec>
400156f4:	e0000001 	and	r0, r0, r1
400156f8:	e58d0010 	str	r0, [sp, #16]
400156fc:	e59d0010 	ldr	r0, [sp, #16]
40015700:	e1800805 	orr	r0, r0, r5, lsl #16
40015704:	e58d0010 	str	r0, [sp, #16]
40015708:	e3560000 	cmp	r6, #0
4001570c:	1a000005 	bne	40015728 <CyU3PDmaChannelCommitBuffer+0x114>
40015710:	e59d1020 	ldr	r1, [sp, #32]
40015714:	e201100f 	and	r1, r1, #15
40015718:	e59d0010 	ldr	r0, [sp, #16]
4001571c:	e1800001 	orr	r0, r0, r1
40015720:	e58d0010 	str	r0, [sp, #16]
40015724:	ea000004 	b	4001573c <CyU3PDmaChannelCommitBuffer+0x128>
40015728:	e206100e 	and	r1, r6, #14
4001572c:	e3811008 	orr	r1, r1, #8
40015730:	e59d0010 	ldr	r0, [sp, #16]
40015734:	e1800001 	orr	r0, r0, r1
40015738:	e58d0010 	str	r0, [sp, #16]
4001573c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015740:	e3500000 	cmp	r0, #0
40015744:	0a000004 	beq	4001575c <CyU3PDmaChannelCommitBuffer+0x148>
40015748:	e59d2010 	ldr	r2, [sp, #16]
4001574c:	e59f31ac 	ldr	r3, [pc, #428]	; 40015900 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015750:	e0021003 	and	r1, r2, r3
40015754:	e59d0004 	ldr	r0, [sp, #4]
40015758:	ebfff34a 	bl	40012488 <CyU3PSysCleanDRegion>
4001575c:	e1d401b8 	ldrh	r0, [r4, #24]
40015760:	e28d1004 	add	r1, sp, #4
40015764:	eb00349c 	bl	400229dc <CyU3PDmaDscrSetConfig>
40015768:	e1d411b8 	ldrh	r1, [r4, #24]
4001576c:	e1d401b2 	ldrh	r0, [r4, #18]
40015770:	e3a02001 	mov	r2, #1
40015774:	ebfffeb8 	bl	4001525c <CyU3PDmaSocketSendEvent>
40015778:	e59d001c 	ldr	r0, [sp, #28]
4001577c:	e1c401b6 	strh	r0, [r4, #22]
40015780:	e59d000c 	ldr	r0, [sp, #12]
40015784:	e1c401b8 	strh	r0, [r4, #24]
40015788:	ea000058 	b	400158f0 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001578c:	e3570004 	cmp	r7, #4
40015790:	1a000027 	bne	40015834 <CyU3PDmaChannelCommitBuffer+0x220>
40015794:	e1d401b8 	ldrh	r0, [r4, #24]
40015798:	e28d1004 	add	r1, sp, #4
4001579c:	eb003473 	bl	40022970 <CyU3PDmaDscrGetConfig>
400157a0:	e59d0010 	ldr	r0, [sp, #16]
400157a4:	e3100008 	tst	r0, #8
400157a8:	0a000000 	beq	400157b0 <CyU3PDmaChannelCommitBuffer+0x19c>
400157ac:	e3a09047 	mov	r9, #71	; 0x47
400157b0:	e3590000 	cmp	r9, #0
400157b4:	1a00004d 	bne	400158f0 <CyU3PDmaChannelCommitBuffer+0x2dc>
400157b8:	e59d0010 	ldr	r0, [sp, #16]
400157bc:	e1a00800 	lsl	r0, r0, #16
400157c0:	e1a00820 	lsr	r0, r0, #16
400157c4:	e58d0010 	str	r0, [sp, #16]
400157c8:	e3a01008 	mov	r1, #8
400157cc:	e1811805 	orr	r1, r1, r5, lsl #16
400157d0:	e59d0010 	ldr	r0, [sp, #16]
400157d4:	e1800001 	orr	r0, r0, r1
400157d8:	e58d0010 	str	r0, [sp, #16]
400157dc:	e206100e 	and	r1, r6, #14
400157e0:	e59d0010 	ldr	r0, [sp, #16]
400157e4:	e1800001 	orr	r0, r0, r1
400157e8:	e58d0010 	str	r0, [sp, #16]
400157ec:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400157f0:	e3500000 	cmp	r0, #0
400157f4:	0a000004 	beq	4001580c <CyU3PDmaChannelCommitBuffer+0x1f8>
400157f8:	e59d2010 	ldr	r2, [sp, #16]
400157fc:	e59f30fc 	ldr	r3, [pc, #252]	; 40015900 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015800:	e0021003 	and	r1, r2, r3
40015804:	e59d0004 	ldr	r0, [sp, #4]
40015808:	ebfff31e 	bl	40012488 <CyU3PSysCleanDRegion>
4001580c:	e1d401b8 	ldrh	r0, [r4, #24]
40015810:	e28d1004 	add	r1, sp, #4
40015814:	eb003470 	bl	400229dc <CyU3PDmaDscrSetConfig>
40015818:	e1d411b8 	ldrh	r1, [r4, #24]
4001581c:	e1d401b2 	ldrh	r0, [r4, #18]
40015820:	e3a02001 	mov	r2, #1
40015824:	ebfffe8c 	bl	4001525c <CyU3PDmaSocketSendEvent>
40015828:	e59d000c 	ldr	r0, [sp, #12]
4001582c:	e1c401b8 	strh	r0, [r4, #24]
40015830:	ea00002e 	b	400158f0 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015834:	e1d401b2 	ldrh	r0, [r4, #18]
40015838:	e28d1024 	add	r1, sp, #36	; 0x24
4001583c:	ebfffdee 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40015840:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015844:	e3100702 	tst	r0, #524288	; 0x80000
40015848:	0a000027 	beq	400158ec <CyU3PDmaChannelCommitBuffer+0x2d8>
4001584c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015850:	e1a08800 	lsl	r8, r0, #16
40015854:	e1a08828 	lsr	r8, r8, #16
40015858:	e28d1004 	add	r1, sp, #4
4001585c:	e1a00008 	mov	r0, r8
40015860:	eb003442 	bl	40022970 <CyU3PDmaDscrGetConfig>
40015864:	e59d0010 	ldr	r0, [sp, #16]
40015868:	e3100008 	tst	r0, #8
4001586c:	0a00001c 	beq	400158e4 <CyU3PDmaChannelCommitBuffer+0x2d0>
40015870:	e59d0010 	ldr	r0, [sp, #16]
40015874:	e1a00800 	lsl	r0, r0, #16
40015878:	e1a00820 	lsr	r0, r0, #16
4001587c:	e58d0010 	str	r0, [sp, #16]
40015880:	e59d0010 	ldr	r0, [sp, #16]
40015884:	e1800805 	orr	r0, r0, r5, lsl #16
40015888:	e58d0010 	str	r0, [sp, #16]
4001588c:	e3560000 	cmp	r6, #0
40015890:	0a000007 	beq	400158b4 <CyU3PDmaChannelCommitBuffer+0x2a0>
40015894:	e59d0010 	ldr	r0, [sp, #16]
40015898:	e3c0000f 	bic	r0, r0, #15
4001589c:	e58d0010 	str	r0, [sp, #16]
400158a0:	e206100e 	and	r1, r6, #14
400158a4:	e3811008 	orr	r1, r1, #8
400158a8:	e59d0010 	ldr	r0, [sp, #16]
400158ac:	e1800001 	orr	r0, r0, r1
400158b0:	e58d0010 	str	r0, [sp, #16]
400158b4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400158b8:	e3500000 	cmp	r0, #0
400158bc:	0a000004 	beq	400158d4 <CyU3PDmaChannelCommitBuffer+0x2c0>
400158c0:	e59d2010 	ldr	r2, [sp, #16]
400158c4:	e59f3034 	ldr	r3, [pc, #52]	; 40015900 <CyU3PDmaChannelCommitBuffer+0x2ec>
400158c8:	e0021003 	and	r1, r2, r3
400158cc:	e59d0004 	ldr	r0, [sp, #4]
400158d0:	ebfff2ec 	bl	40012488 <CyU3PSysCleanDRegion>
400158d4:	e28d1004 	add	r1, sp, #4
400158d8:	e1a00008 	mov	r0, r8
400158dc:	eb00343e 	bl	400229dc <CyU3PDmaDscrSetConfig>
400158e0:	ea000002 	b	400158f0 <CyU3PDmaChannelCommitBuffer+0x2dc>
400158e4:	e3a09047 	mov	r9, #71	; 0x47
400158e8:	ea000000 	b	400158f0 <CyU3PDmaChannelCommitBuffer+0x2dc>
400158ec:	e3a09047 	mov	r9, #71	; 0x47
400158f0:	e284003c 	add	r0, r4, #60	; 0x3c
400158f4:	ebffd2fa 	bl	4000a4e4 <_txe_mutex_put>
400158f8:	e1a00009 	mov	r0, r9
400158fc:	eaffff50 	b	40015644 <CyU3PDmaChannelCommitBuffer+0x30>
40015900:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

40015904 <CyU3PDmaChannelConfigure_TypeAuto>:
40015904:	e92d4070 	push	{r4, r5, r6, lr}
40015908:	e1a05000 	mov	r5, r0
4001590c:	e1d501b2 	ldrh	r0, [r5, #18]
40015910:	e3806901 	orr	r6, r0, #16384	; 0x4000
40015914:	e1d501b0 	ldrh	r0, [r5, #16]
40015918:	e3a01101 	mov	r1, #1073741824	; 0x40000000
4001591c:	e1810800 	orr	r0, r1, r0, lsl #16
40015920:	e1866000 	orr	r6, r6, r0
40015924:	e1d500b4 	ldrh	r0, [r5, #4]
40015928:	e3500001 	cmp	r0, #1
4001592c:	1a000000 	bne	40015934 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
40015930:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40015934:	e1d520b6 	ldrh	r2, [r5, #6]
40015938:	e1d510b8 	ldrh	r1, [r5, #8]
4001593c:	e1a03006 	mov	r3, r6
40015940:	e285000c 	add	r0, r5, #12
40015944:	eb00331a 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40015948:	e1a04000 	mov	r4, r0
4001594c:	e3540000 	cmp	r4, #0
40015950:	0a000001 	beq	4001595c <CyU3PDmaChannelConfigure_TypeAuto+0x58>
40015954:	e1a00004 	mov	r0, r4
40015958:	e8bd8070 	pop	{r4, r5, r6, pc}
4001595c:	e1d500bc 	ldrh	r0, [r5, #12]
40015960:	e1c501b6 	strh	r0, [r5, #22]
40015964:	e1c501ba 	strh	r0, [r5, #26]
40015968:	e1c501be 	strh	r0, [r5, #30]
4001596c:	e1d500be 	ldrh	r0, [r5, #14]
40015970:	e1c501b8 	strh	r0, [r5, #24]
40015974:	e1c501bc 	strh	r0, [r5, #28]
40015978:	e1c502b0 	strh	r0, [r5, #32]
4001597c:	e2850014 	add	r0, r5, #20
40015980:	eb003382 	bl	40022790 <CyU3PDmaDscrGet>
40015984:	e1a00005 	mov	r0, r5
40015988:	eb0006b7 	bl	4001746c <CyU3PDmaConfigureSockets_TypeAuto>
4001598c:	e3a00000 	mov	r0, #0
40015990:	eafffff0 	b	40015958 <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

40015994 <CyU3PDmaChannelConfigure_TypeManual>:
40015994:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015998:	e24dd024 	sub	sp, sp, #36	; 0x24
4001599c:	e1a04000 	mov	r4, r0
400159a0:	e284700c 	add	r7, r4, #12
400159a4:	e3a06cff 	mov	r6, #65280	; 0xff00
400159a8:	e1d401b0 	ldrh	r0, [r4, #16]
400159ac:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400159b0:	e1810800 	orr	r0, r1, r0, lsl #16
400159b4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400159b8:	e1866000 	orr	r6, r6, r0
400159bc:	e1d400b4 	ldrh	r0, [r4, #4]
400159c0:	e3500003 	cmp	r0, #3
400159c4:	1a000002 	bne	400159d4 <CyU3PDmaChannelConfigure_TypeManual+0x40>
400159c8:	e3a00c3f 	mov	r0, #16128	; 0x3f00
400159cc:	e1c401b2 	strh	r0, [r4, #18]
400159d0:	ea000009 	b	400159fc <CyU3PDmaChannelConfigure_TypeManual+0x68>
400159d4:	e1d400b4 	ldrh	r0, [r4, #4]
400159d8:	e3500004 	cmp	r0, #4
400159dc:	1a000006 	bne	400159fc <CyU3PDmaChannelConfigure_TypeManual+0x68>
400159e0:	e59f020c 	ldr	r0, [pc, #524]	; 40015bf4 <CyU3PDmaChannelConfigure_TypeManual+0x260>
400159e4:	e1c401b0 	strh	r0, [r4, #16]
400159e8:	e284700e 	add	r7, r4, #14
400159ec:	e1d401b2 	ldrh	r0, [r4, #18]
400159f0:	e3806903 	orr	r6, r0, #49152	; 0xc000
400159f4:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400159f8:	e3866801 	orr	r6, r6, #65536	; 0x10000
400159fc:	e1d400b8 	ldrh	r0, [r4, #8]
40015a00:	e3500000 	cmp	r0, #0
40015a04:	0a00006b 	beq	40015bb8 <CyU3PDmaChannelConfigure_TypeManual+0x224>
40015a08:	e1d420b6 	ldrh	r2, [r4, #6]
40015a0c:	e1d410b8 	ldrh	r1, [r4, #8]
40015a10:	e1a03006 	mov	r3, r6
40015a14:	e1a00007 	mov	r0, r7
40015a18:	eb0032e5 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40015a1c:	e1a05000 	mov	r5, r0
40015a20:	e3550000 	cmp	r5, #0
40015a24:	0a000002 	beq	40015a34 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
40015a28:	e1a00005 	mov	r0, r5
40015a2c:	e28dd024 	add	sp, sp, #36	; 0x24
40015a30:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015a34:	e1d400b4 	ldrh	r0, [r4, #4]
40015a38:	e3500002 	cmp	r0, #2
40015a3c:	1a000012 	bne	40015a8c <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015a40:	e1d401b2 	ldrh	r0, [r4, #18]
40015a44:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015a48:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015a4c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015a50:	e1d410b8 	ldrh	r1, [r4, #8]
40015a54:	e1a03006 	mov	r3, r6
40015a58:	e3a02000 	mov	r2, #0
40015a5c:	e284000e 	add	r0, r4, #14
40015a60:	eb0032d3 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40015a64:	e1a05000 	mov	r5, r0
40015a68:	e3550000 	cmp	r5, #0
40015a6c:	0a000006 	beq	40015a8c <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015a70:	e1d410b8 	ldrh	r1, [r4, #8]
40015a74:	e1d700b0 	ldrh	r0, [r7]
40015a78:	e3a03001 	mov	r3, #1
40015a7c:	e1a02003 	mov	r2, r3
40015a80:	eb00331f 	bl	40022704 <CyU3PDmaDscrChainDestroy>
40015a84:	e1a00005 	mov	r0, r5
40015a88:	eaffffe7 	b	40015a2c <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015a8c:	e1d400bc 	ldrh	r0, [r4, #12]
40015a90:	e1c401b6 	strh	r0, [r4, #22]
40015a94:	e1c401ba 	strh	r0, [r4, #26]
40015a98:	e1c401be 	strh	r0, [r4, #30]
40015a9c:	e1d400be 	ldrh	r0, [r4, #14]
40015aa0:	e1c401b8 	strh	r0, [r4, #24]
40015aa4:	e1c401bc 	strh	r0, [r4, #28]
40015aa8:	e1c402b0 	strh	r0, [r4, #32]
40015aac:	e3a08000 	mov	r8, #0
40015ab0:	e1d790b0 	ldrh	r9, [r7]
40015ab4:	ea00003b 	b	40015ba8 <CyU3PDmaChannelConfigure_TypeManual+0x214>
40015ab8:	e28d1014 	add	r1, sp, #20
40015abc:	e1a00009 	mov	r0, r9
40015ac0:	eb0033aa 	bl	40022970 <CyU3PDmaDscrGetConfig>
40015ac4:	e1d400b4 	ldrh	r0, [r4, #4]
40015ac8:	e3500004 	cmp	r0, #4
40015acc:	1a00000b 	bne	40015b00 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015ad0:	e59d0014 	ldr	r0, [sp, #20]
40015ad4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015ad8:	e0800001 	add	r0, r0, r1
40015adc:	e58d0014 	str	r0, [sp, #20]
40015ae0:	e1d400b6 	ldrh	r0, [r4, #6]
40015ae4:	e280000f 	add	r0, r0, #15
40015ae8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015aec:	e0400001 	sub	r0, r0, r1
40015af0:	e59f1100 	ldr	r1, [pc, #256]	; 40015bf8 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015af4:	e0000001 	and	r0, r0, r1
40015af8:	e58d0020 	str	r0, [sp, #32]
40015afc:	ea000021 	b	40015b88 <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
40015b00:	e1d400b4 	ldrh	r0, [r4, #4]
40015b04:	e3500002 	cmp	r0, #2
40015b08:	1a000012 	bne	40015b58 <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
40015b0c:	e1d401b8 	ldrh	r0, [r4, #24]
40015b10:	e28d1004 	add	r1, sp, #4
40015b14:	eb003395 	bl	40022970 <CyU3PDmaDscrGetConfig>
40015b18:	e59d0014 	ldr	r0, [sp, #20]
40015b1c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015b20:	e0800001 	add	r0, r0, r1
40015b24:	e58d0004 	str	r0, [sp, #4]
40015b28:	e1d400b6 	ldrh	r0, [r4, #6]
40015b2c:	e280000f 	add	r0, r0, #15
40015b30:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015b34:	e0400001 	sub	r0, r0, r1
40015b38:	e59f10b8 	ldr	r1, [pc, #184]	; 40015bf8 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015b3c:	e0000001 	and	r0, r0, r1
40015b40:	e58d0010 	str	r0, [sp, #16]
40015b44:	e1d401b8 	ldrh	r0, [r4, #24]
40015b48:	e28d1004 	add	r1, sp, #4
40015b4c:	eb0033a2 	bl	400229dc <CyU3PDmaDscrSetConfig>
40015b50:	e59d000c 	ldr	r0, [sp, #12]
40015b54:	e1c401b8 	strh	r0, [r4, #24]
40015b58:	e59d0014 	ldr	r0, [sp, #20]
40015b5c:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015b60:	e0800001 	add	r0, r0, r1
40015b64:	e58d0014 	str	r0, [sp, #20]
40015b68:	e1d400b6 	ldrh	r0, [r4, #6]
40015b6c:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015b70:	e0400001 	sub	r0, r0, r1
40015b74:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015b78:	e0400001 	sub	r0, r0, r1
40015b7c:	e59f1074 	ldr	r1, [pc, #116]	; 40015bf8 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015b80:	e0000001 	and	r0, r0, r1
40015b84:	e58d0020 	str	r0, [sp, #32]
40015b88:	e28d1014 	add	r1, sp, #20
40015b8c:	e1a00009 	mov	r0, r9
40015b90:	eb003391 	bl	400229dc <CyU3PDmaDscrSetConfig>
40015b94:	e59d001c 	ldr	r0, [sp, #28]
40015b98:	e1a09800 	lsl	r9, r0, #16
40015b9c:	e1a09829 	lsr	r9, r9, #16
40015ba0:	e2880001 	add	r0, r8, #1
40015ba4:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40015ba8:	e1d400b8 	ldrh	r0, [r4, #8]
40015bac:	e1500008 	cmp	r0, r8
40015bb0:	caffffc0 	bgt	40015ab8 <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015bb4:	ea000008 	b	40015bdc <CyU3PDmaChannelConfigure_TypeManual+0x248>
40015bb8:	e59f003c 	ldr	r0, [pc, #60]	; 40015bfc <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015bbc:	e1c400bc 	strh	r0, [r4, #12]
40015bc0:	e1c401b6 	strh	r0, [r4, #22]
40015bc4:	e1c401ba 	strh	r0, [r4, #26]
40015bc8:	e1c401be 	strh	r0, [r4, #30]
40015bcc:	e1c400be 	strh	r0, [r4, #14]
40015bd0:	e1c401b8 	strh	r0, [r4, #24]
40015bd4:	e1c401bc 	strh	r0, [r4, #28]
40015bd8:	e1c402b0 	strh	r0, [r4, #32]
40015bdc:	e2840014 	add	r0, r4, #20
40015be0:	eb0032ea 	bl	40022790 <CyU3PDmaDscrGet>
40015be4:	e1a00004 	mov	r0, r4
40015be8:	eb00065f 	bl	4001756c <CyU3PDmaConfigureSockets_TypeManual>
40015bec:	e3a00000 	mov	r0, #0
40015bf0:	eaffff8d 	b	40015a2c <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015bf4:	00003f01 	.word	0x00003f01
40015bf8:	0000fff0 	.word	0x0000fff0
40015bfc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

40015c00 <CyU3PDmaChannelCreate>:
40015c00:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015c04:	e1a04000 	mov	r4, r0
40015c08:	e1a05001 	mov	r5, r1
40015c0c:	e1a06002 	mov	r6, r2
40015c10:	e3560000 	cmp	r6, #0
40015c14:	1a000001 	bne	40015c20 <CyU3PDmaChannelCreate+0x20>
40015c18:	e3a00041 	mov	r0, #65	; 0x41
40015c1c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40015c20:	e3540000 	cmp	r4, #0
40015c24:	1a000001 	bne	40015c30 <CyU3PDmaChannelCreate+0x30>
40015c28:	e3a00041 	mov	r0, #65	; 0x41
40015c2c:	eafffffa 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015c30:	eb00330e 	bl	40022870 <CyU3PDmaDscrGetFreeCount>
40015c34:	e1d610b2 	ldrh	r1, [r6, #2]
40015c38:	e2811001 	add	r1, r1, #1
40015c3c:	e1500001 	cmp	r0, r1
40015c40:	da000007 	ble	40015c64 <CyU3PDmaChannelCreate+0x64>
40015c44:	e3550002 	cmp	r5, #2
40015c48:	1a000007 	bne	40015c6c <CyU3PDmaChannelCreate+0x6c>
40015c4c:	eb003307 	bl	40022870 <CyU3PDmaDscrGetFreeCount>
40015c50:	e1d610b2 	ldrh	r1, [r6, #2]
40015c54:	e3a02001 	mov	r2, #1
40015c58:	e0821101 	add	r1, r2, r1, lsl #2
40015c5c:	e1500001 	cmp	r0, r1
40015c60:	ca000001 	bgt	40015c6c <CyU3PDmaChannelCreate+0x6c>
40015c64:	e3a00010 	mov	r0, #16
40015c68:	eaffffeb 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015c6c:	e1d600b0 	ldrh	r0, [r6]
40015c70:	e3500000 	cmp	r0, #0
40015c74:	0a000003 	beq	40015c88 <CyU3PDmaChannelCreate+0x88>
40015c78:	e1d600b0 	ldrh	r0, [r6]
40015c7c:	e59f1354 	ldr	r1, [pc, #852]	; 40015fd8 <CyU3PDmaChannelCreate+0x3d8>
40015c80:	e1500001 	cmp	r0, r1
40015c84:	da000001 	ble	40015c90 <CyU3PDmaChannelCreate+0x90>
40015c88:	e3a00040 	mov	r0, #64	; 0x40
40015c8c:	eaffffe2 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015c90:	e3550000 	cmp	r5, #0
40015c94:	0a000001 	beq	40015ca0 <CyU3PDmaChannelCreate+0xa0>
40015c98:	e3550001 	cmp	r5, #1
40015c9c:	1a000009 	bne	40015cc8 <CyU3PDmaChannelCreate+0xc8>
40015ca0:	e1d600b0 	ldrh	r0, [r6]
40015ca4:	e310000f 	tst	r0, #15
40015ca8:	0a000001 	beq	40015cb4 <CyU3PDmaChannelCreate+0xb4>
40015cac:	e3a00040 	mov	r0, #64	; 0x40
40015cb0:	eaffffd9 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015cb4:	e1d600b2 	ldrh	r0, [r6, #2]
40015cb8:	e3500000 	cmp	r0, #0
40015cbc:	1a00000b 	bne	40015cf0 <CyU3PDmaChannelCreate+0xf0>
40015cc0:	e3a00040 	mov	r0, #64	; 0x40
40015cc4:	eaffffd4 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015cc8:	e1d600b0 	ldrh	r0, [r6]
40015ccc:	e1d610ba 	ldrh	r1, [r6, #10]
40015cd0:	e0400001 	sub	r0, r0, r1
40015cd4:	e1d610bc 	ldrh	r1, [r6, #12]
40015cd8:	e0400001 	sub	r0, r0, r1
40015cdc:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015ce0:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015ce4:	0a000001 	beq	40015cf0 <CyU3PDmaChannelCreate+0xf0>
40015ce8:	e3a00040 	mov	r0, #64	; 0x40
40015cec:	eaffffca 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015cf0:	e5d60010 	ldrb	r0, [r6, #16]
40015cf4:	e3500002 	cmp	r0, #2
40015cf8:	ba000001 	blt	40015d04 <CyU3PDmaChannelCreate+0x104>
40015cfc:	e3a00040 	mov	r0, #64	; 0x40
40015d00:	eaffffc5 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015d04:	e3550004 	cmp	r5, #4
40015d08:	0a000011 	beq	40015d54 <CyU3PDmaChannelCreate+0x154>
40015d0c:	e1d600b4 	ldrh	r0, [r6, #4]
40015d10:	e3a0103f 	mov	r1, #63	; 0x3f
40015d14:	e0018440 	and	r8, r1, r0, asr #8
40015d18:	e1d600b4 	ldrh	r0, [r6, #4]
40015d1c:	e20090ff 	and	r9, r0, #255	; 0xff
40015d20:	e1d600b4 	ldrh	r0, [r6, #4]
40015d24:	ebfffd14 	bl	4001517c <CyU3PDmaSocketIsValidProducer>
40015d28:	e3500000 	cmp	r0, #0
40015d2c:	1a000001 	bne	40015d38 <CyU3PDmaChannelCreate+0x138>
40015d30:	e3a00040 	mov	r0, #64	; 0x40
40015d34:	eaffffb8 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015d38:	e59f029c 	ldr	r0, [pc, #668]	; 40015fdc <CyU3PDmaChannelCreate+0x3dc>
40015d3c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015d40:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015d44:	e3500000 	cmp	r0, #0
40015d48:	0a000007 	beq	40015d6c <CyU3PDmaChannelCreate+0x16c>
40015d4c:	e3a00040 	mov	r0, #64	; 0x40
40015d50:	eaffffb1 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015d54:	e1d600b4 	ldrh	r0, [r6, #4]
40015d58:	e59f1280 	ldr	r1, [pc, #640]	; 40015fe0 <CyU3PDmaChannelCreate+0x3e0>
40015d5c:	e1500001 	cmp	r0, r1
40015d60:	0a000001 	beq	40015d6c <CyU3PDmaChannelCreate+0x16c>
40015d64:	e3a00040 	mov	r0, #64	; 0x40
40015d68:	eaffffab 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015d6c:	e3550003 	cmp	r5, #3
40015d70:	0a000011 	beq	40015dbc <CyU3PDmaChannelCreate+0x1bc>
40015d74:	e1d600b6 	ldrh	r0, [r6, #6]
40015d78:	e3a0103f 	mov	r1, #63	; 0x3f
40015d7c:	e0018440 	and	r8, r1, r0, asr #8
40015d80:	e1d600b6 	ldrh	r0, [r6, #6]
40015d84:	e20090ff 	and	r9, r0, #255	; 0xff
40015d88:	e1d600b6 	ldrh	r0, [r6, #6]
40015d8c:	ebfffcc2 	bl	4001509c <CyU3PDmaSocketIsValidConsumer>
40015d90:	e3500000 	cmp	r0, #0
40015d94:	1a000001 	bne	40015da0 <CyU3PDmaChannelCreate+0x1a0>
40015d98:	e3a00040 	mov	r0, #64	; 0x40
40015d9c:	eaffff9e 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015da0:	e59f0234 	ldr	r0, [pc, #564]	; 40015fdc <CyU3PDmaChannelCreate+0x3dc>
40015da4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015da8:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015dac:	e3500000 	cmp	r0, #0
40015db0:	0a000006 	beq	40015dd0 <CyU3PDmaChannelCreate+0x1d0>
40015db4:	e3a00040 	mov	r0, #64	; 0x40
40015db8:	eaffff97 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015dbc:	e1d600b6 	ldrh	r0, [r6, #6]
40015dc0:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015dc4:	0a000001 	beq	40015dd0 <CyU3PDmaChannelCreate+0x1d0>
40015dc8:	e3a00040 	mov	r0, #64	; 0x40
40015dcc:	eaffff92 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015dd0:	e1d600b8 	ldrh	r0, [r6, #8]
40015dd4:	e3500000 	cmp	r0, #0
40015dd8:	0a000008 	beq	40015e00 <CyU3PDmaChannelCreate+0x200>
40015ddc:	e1d600b8 	ldrh	r0, [r6, #8]
40015de0:	e1d610b2 	ldrh	r1, [r6, #2]
40015de4:	e1500001 	cmp	r0, r1
40015de8:	aa000002 	bge	40015df8 <CyU3PDmaChannelCreate+0x1f8>
40015dec:	e1d600b2 	ldrh	r0, [r6, #2]
40015df0:	e350001f 	cmp	r0, #31
40015df4:	da000001 	ble	40015e00 <CyU3PDmaChannelCreate+0x200>
40015df8:	e3a00040 	mov	r0, #64	; 0x40
40015dfc:	eaffff86 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015e00:	e3550004 	cmp	r5, #4
40015e04:	0a000007 	beq	40015e28 <CyU3PDmaChannelCreate+0x228>
40015e08:	e1d600b4 	ldrh	r0, [r6, #4]
40015e0c:	e3a0103f 	mov	r1, #63	; 0x3f
40015e10:	e0018440 	and	r8, r1, r0, asr #8
40015e14:	e1d600b4 	ldrh	r0, [r6, #4]
40015e18:	e20090ff 	and	r9, r0, #255	; 0xff
40015e1c:	e59f01b8 	ldr	r0, [pc, #440]	; 40015fdc <CyU3PDmaChannelCreate+0x3dc>
40015e20:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015e24:	e7804109 	str	r4, [r0, r9, lsl #2]
40015e28:	e3550003 	cmp	r5, #3
40015e2c:	0a000007 	beq	40015e50 <CyU3PDmaChannelCreate+0x250>
40015e30:	e1d600b6 	ldrh	r0, [r6, #6]
40015e34:	e3a0103f 	mov	r1, #63	; 0x3f
40015e38:	e0018440 	and	r8, r1, r0, asr #8
40015e3c:	e1d600b6 	ldrh	r0, [r6, #6]
40015e40:	e20090ff 	and	r9, r0, #255	; 0xff
40015e44:	e59f0190 	ldr	r0, [pc, #400]	; 40015fdc <CyU3PDmaChannelCreate+0x3dc>
40015e48:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015e4c:	e7804109 	str	r4, [r0, r9, lsl #2]
40015e50:	e1c450b4 	strh	r5, [r4, #4]
40015e54:	e1d600b0 	ldrh	r0, [r6]
40015e58:	e1c400b6 	strh	r0, [r4, #6]
40015e5c:	e1d600b2 	ldrh	r0, [r6, #2]
40015e60:	e1c400b8 	strh	r0, [r4, #8]
40015e64:	e1d600b8 	ldrh	r0, [r6, #8]
40015e68:	e1c400ba 	strh	r0, [r4, #10]
40015e6c:	e1d600b4 	ldrh	r0, [r6, #4]
40015e70:	e1c401b0 	strh	r0, [r4, #16]
40015e74:	e1d600b6 	ldrh	r0, [r6, #6]
40015e78:	e1c401b2 	strh	r0, [r4, #18]
40015e7c:	e1d600ba 	ldrh	r0, [r6, #10]
40015e80:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015e84:	e1d600bc 	ldrh	r0, [r6, #12]
40015e88:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015e8c:	e1d600be 	ldrh	r0, [r6, #14]
40015e90:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015e94:	e5d60010 	ldrb	r0, [r6, #16]
40015e98:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015e9c:	e5960014 	ldr	r0, [r6, #20]
40015ea0:	e5840030 	str	r0, [r4, #48]	; 0x30
40015ea4:	e3a00000 	mov	r0, #0
40015ea8:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015eac:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015eb0:	e3a03038 	mov	r3, #56	; 0x38
40015eb4:	e3a02000 	mov	r2, #0
40015eb8:	e1a01002 	mov	r1, r2
40015ebc:	e284003c 	add	r0, r4, #60	; 0x3c
40015ec0:	ebffd0d4 	bl	4000a218 <_txe_mutex_create>
40015ec4:	e3a02028 	mov	r2, #40	; 0x28
40015ec8:	e3a01000 	mov	r1, #0
40015ecc:	e2840074 	add	r0, r4, #116	; 0x74
40015ed0:	ebffd016 	bl	40009f30 <_txe_event_flags_create>
40015ed4:	e5960018 	ldr	r0, [r6, #24]
40015ed8:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015edc:	e59f0100 	ldr	r0, [pc, #256]	; 40015fe4 <CyU3PDmaChannelCreate+0x3e4>
40015ee0:	e5900000 	ldr	r0, [r0]
40015ee4:	e5840038 	str	r0, [r4, #56]	; 0x38
40015ee8:	e3550005 	cmp	r5, #5
40015eec:	308ff105 	addcc	pc, pc, r5, lsl #2
40015ef0:	ea000011 	b	40015f3c <CyU3PDmaChannelCreate+0x33c>
40015ef4:	ea000003 	b	40015f08 <CyU3PDmaChannelCreate+0x308>
40015ef8:	ea000004 	b	40015f10 <CyU3PDmaChannelCreate+0x310>
40015efc:	ea00000a 	b	40015f2c <CyU3PDmaChannelCreate+0x32c>
40015f00:	ea000006 	b	40015f20 <CyU3PDmaChannelCreate+0x320>
40015f04:	ea000007 	b	40015f28 <CyU3PDmaChannelCreate+0x328>
40015f08:	e1a00000 	nop			; (mov r0, r0)
40015f0c:	e1a00000 	nop			; (mov r0, r0)
40015f10:	e1a00004 	mov	r0, r4
40015f14:	ebfffe7a 	bl	40015904 <CyU3PDmaChannelConfigure_TypeAuto>
40015f18:	e1a07000 	mov	r7, r0
40015f1c:	ea000009 	b	40015f48 <CyU3PDmaChannelCreate+0x348>
40015f20:	e1a00000 	nop			; (mov r0, r0)
40015f24:	e1a00000 	nop			; (mov r0, r0)
40015f28:	e1a00000 	nop			; (mov r0, r0)
40015f2c:	e1a00004 	mov	r0, r4
40015f30:	ebfffe97 	bl	40015994 <CyU3PDmaChannelConfigure_TypeManual>
40015f34:	e1a07000 	mov	r7, r0
40015f38:	ea000002 	b	40015f48 <CyU3PDmaChannelCreate+0x348>
40015f3c:	e1a00000 	nop			; (mov r0, r0)
40015f40:	e3a07040 	mov	r7, #64	; 0x40
40015f44:	e1a00000 	nop			; (mov r0, r0)
40015f48:	e1a00000 	nop			; (mov r0, r0)
40015f4c:	e3570000 	cmp	r7, #0
40015f50:	1a000002 	bne	40015f60 <CyU3PDmaChannelCreate+0x360>
40015f54:	e3a00001 	mov	r0, #1
40015f58:	e5840000 	str	r0, [r4]
40015f5c:	ea00001b 	b	40015fd0 <CyU3PDmaChannelCreate+0x3d0>
40015f60:	e284003c 	add	r0, r4, #60	; 0x3c
40015f64:	ebffd109 	bl	4000a390 <_txe_mutex_delete>
40015f68:	e2840074 	add	r0, r4, #116	; 0x74
40015f6c:	ebffd03f 	bl	4000a070 <_txe_event_flags_delete>
40015f70:	e3550004 	cmp	r5, #4
40015f74:	0a000008 	beq	40015f9c <CyU3PDmaChannelCreate+0x39c>
40015f78:	e1d600b4 	ldrh	r0, [r6, #4]
40015f7c:	e3a0103f 	mov	r1, #63	; 0x3f
40015f80:	e0018440 	and	r8, r1, r0, asr #8
40015f84:	e1d600b4 	ldrh	r0, [r6, #4]
40015f88:	e20090ff 	and	r9, r0, #255	; 0xff
40015f8c:	e3a00000 	mov	r0, #0
40015f90:	e59f1044 	ldr	r1, [pc, #68]	; 40015fdc <CyU3PDmaChannelCreate+0x3dc>
40015f94:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015f98:	e7810109 	str	r0, [r1, r9, lsl #2]
40015f9c:	e3550003 	cmp	r5, #3
40015fa0:	0a000008 	beq	40015fc8 <CyU3PDmaChannelCreate+0x3c8>
40015fa4:	e1d600b6 	ldrh	r0, [r6, #6]
40015fa8:	e3a0103f 	mov	r1, #63	; 0x3f
40015fac:	e0018440 	and	r8, r1, r0, asr #8
40015fb0:	e1d600b6 	ldrh	r0, [r6, #6]
40015fb4:	e20090ff 	and	r9, r0, #255	; 0xff
40015fb8:	e3a00000 	mov	r0, #0
40015fbc:	e59f1018 	ldr	r1, [pc, #24]	; 40015fdc <CyU3PDmaChannelCreate+0x3dc>
40015fc0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015fc4:	e7810109 	str	r0, [r1, r9, lsl #2]
40015fc8:	e3a00000 	mov	r0, #0
40015fcc:	e5840000 	str	r0, [r4]
40015fd0:	e1a00007 	mov	r0, r7
40015fd4:	eaffff10 	b	40015c1c <CyU3PDmaChannelCreate+0x1c>
40015fd8:	0000fff0 	.word	0x0000fff0
40015fdc:	40030d20 	.word	0x40030d20
40015fe0:	00003f01 	.word	0x00003f01
40015fe4:	40030c84 	.word	0x40030c84

Disassembly of section i.CyU3PDmaChannelDestroy:

40015fe8 <CyU3PDmaChannelDestroy>:
40015fe8:	e92d4070 	push	{r4, r5, r6, lr}
40015fec:	e1a04000 	mov	r4, r0
40015ff0:	e3e01000 	mvn	r1, #0
40015ff4:	e1a00004 	mov	r0, r4
40015ff8:	ebfffd5b 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40015ffc:	e1a05000 	mov	r5, r0
40016000:	e3550000 	cmp	r5, #0
40016004:	0a000001 	beq	40016010 <CyU3PDmaChannelDestroy+0x28>
40016008:	e1a00005 	mov	r0, r5
4001600c:	e8bd8070 	pop	{r4, r5, r6, pc}
40016010:	e1d400b4 	ldrh	r0, [r4, #4]
40016014:	e3500005 	cmp	r0, #5
40016018:	308ff100 	addcc	pc, pc, r0, lsl #2
4001601c:	ea00000f 	b	40016060 <CyU3PDmaChannelDestroy+0x78>
40016020:	ea000003 	b	40016034 <CyU3PDmaChannelDestroy+0x4c>
40016024:	ea000004 	b	4001603c <CyU3PDmaChannelDestroy+0x54>
40016028:	ea000009 	b	40016054 <CyU3PDmaChannelDestroy+0x6c>
4001602c:	ea000005 	b	40016048 <CyU3PDmaChannelDestroy+0x60>
40016030:	ea000006 	b	40016050 <CyU3PDmaChannelDestroy+0x68>
40016034:	e1a00000 	nop			; (mov r0, r0)
40016038:	e1a00000 	nop			; (mov r0, r0)
4001603c:	e1a00004 	mov	r0, r4
40016040:	eb000014 	bl	40016098 <CyU3PDmaChannelDestroy_TypeAuto>
40016044:	ea00000a 	b	40016074 <CyU3PDmaChannelDestroy+0x8c>
40016048:	e1a00000 	nop			; (mov r0, r0)
4001604c:	e1a00000 	nop			; (mov r0, r0)
40016050:	e1a00000 	nop			; (mov r0, r0)
40016054:	e1a00004 	mov	r0, r4
40016058:	eb000043 	bl	4001616c <CyU3PDmaChannelDestroy_TypeManual>
4001605c:	ea000004 	b	40016074 <CyU3PDmaChannelDestroy+0x8c>
40016060:	e1a00000 	nop			; (mov r0, r0)
40016064:	e284003c 	add	r0, r4, #60	; 0x3c
40016068:	ebffd11d 	bl	4000a4e4 <_txe_mutex_put>
4001606c:	e3a00040 	mov	r0, #64	; 0x40
40016070:	eaffffe5 	b	4001600c <CyU3PDmaChannelDestroy+0x24>
40016074:	e1a00000 	nop			; (mov r0, r0)
40016078:	e3a00000 	mov	r0, #0
4001607c:	e5840000 	str	r0, [r4]
40016080:	e284003c 	add	r0, r4, #60	; 0x3c
40016084:	ebffd0c1 	bl	4000a390 <_txe_mutex_delete>
40016088:	e2840074 	add	r0, r4, #116	; 0x74
4001608c:	ebffcff7 	bl	4000a070 <_txe_event_flags_delete>
40016090:	e3a00000 	mov	r0, #0
40016094:	eaffffdc 	b	4001600c <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40016098 <CyU3PDmaChannelDestroy_TypeAuto>:
40016098:	e92d4070 	push	{r4, r5, r6, lr}
4001609c:	e24dd018 	sub	sp, sp, #24
400160a0:	e1a04000 	mov	r4, r0
400160a4:	e1d401b0 	ldrh	r0, [r4, #16]
400160a8:	ebfffbbb 	bl	40014f9c <CyU3PDmaSocketDisable>
400160ac:	e1d401b2 	ldrh	r0, [r4, #18]
400160b0:	ebfffbb9 	bl	40014f9c <CyU3PDmaSocketDisable>
400160b4:	e1d401b0 	ldrh	r0, [r4, #16]
400160b8:	e1a0100d 	mov	r1, sp
400160bc:	ebfffbce 	bl	40014ffc <CyU3PDmaSocketGetConfig>
400160c0:	e59f009c 	ldr	r0, [pc, #156]	; 40016164 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
400160c4:	e58d0000 	str	r0, [sp]
400160c8:	e1d401b0 	ldrh	r0, [r4, #16]
400160cc:	e1a0100d 	mov	r1, sp
400160d0:	ebfffc73 	bl	400152a4 <CyU3PDmaSocketSetConfig>
400160d4:	e1d401b0 	ldrh	r0, [r4, #16]
400160d8:	e20050ff 	and	r5, r0, #255	; 0xff
400160dc:	e1d401b0 	ldrh	r0, [r4, #16]
400160e0:	e3a0103f 	mov	r1, #63	; 0x3f
400160e4:	e0016440 	and	r6, r1, r0, asr #8
400160e8:	e3a00000 	mov	r0, #0
400160ec:	e59f1074 	ldr	r1, [pc, #116]	; 40016168 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
400160f0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
400160f4:	e7810105 	str	r0, [r1, r5, lsl #2]
400160f8:	e1d401b2 	ldrh	r0, [r4, #18]
400160fc:	e1a0100d 	mov	r1, sp
40016100:	ebfffbbd 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016104:	e59f0058 	ldr	r0, [pc, #88]	; 40016164 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40016108:	e58d0000 	str	r0, [sp]
4001610c:	e1d401b2 	ldrh	r0, [r4, #18]
40016110:	e1a0100d 	mov	r1, sp
40016114:	ebfffc62 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016118:	e1d401b2 	ldrh	r0, [r4, #18]
4001611c:	e20050ff 	and	r5, r0, #255	; 0xff
40016120:	e1d401b2 	ldrh	r0, [r4, #18]
40016124:	e3a0103f 	mov	r1, #63	; 0x3f
40016128:	e0016440 	and	r6, r1, r0, asr #8
4001612c:	e3a00000 	mov	r0, #0
40016130:	e59f1030 	ldr	r1, [pc, #48]	; 40016168 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40016134:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40016138:	e7810105 	str	r0, [r1, r5, lsl #2]
4001613c:	e1d410b8 	ldrh	r1, [r4, #8]
40016140:	e1d400bc 	ldrh	r0, [r4, #12]
40016144:	e3a03001 	mov	r3, #1
40016148:	e1a02003 	mov	r2, r3
4001614c:	eb00316c 	bl	40022704 <CyU3PDmaDscrChainDestroy>
40016150:	e1d401b4 	ldrh	r0, [r4, #20]
40016154:	eb0031de 	bl	400228d4 <CyU3PDmaDscrPut>
40016158:	e3a00000 	mov	r0, #0
4001615c:	e28dd018 	add	sp, sp, #24
40016160:	e8bd8070 	pop	{r4, r5, r6, pc}
40016164:	0000ffff 	.word	0x0000ffff
40016168:	40030d20 	.word	0x40030d20

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

4001616c <CyU3PDmaChannelDestroy_TypeManual>:
4001616c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016170:	e24dd028 	sub	sp, sp, #40	; 0x28
40016174:	e1a04000 	mov	r4, r0
40016178:	e1d400b4 	ldrh	r0, [r4, #4]
4001617c:	e3500004 	cmp	r0, #4
40016180:	0a000012 	beq	400161d0 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40016184:	e1d401b0 	ldrh	r0, [r4, #16]
40016188:	ebfffb83 	bl	40014f9c <CyU3PDmaSocketDisable>
4001618c:	e1d401b0 	ldrh	r0, [r4, #16]
40016190:	e1a0100d 	mov	r1, sp
40016194:	ebfffb98 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016198:	e59f0178 	ldr	r0, [pc, #376]	; 40016318 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
4001619c:	e58d0000 	str	r0, [sp]
400161a0:	e1d401b0 	ldrh	r0, [r4, #16]
400161a4:	e1a0100d 	mov	r1, sp
400161a8:	ebfffc3d 	bl	400152a4 <CyU3PDmaSocketSetConfig>
400161ac:	e1d401b0 	ldrh	r0, [r4, #16]
400161b0:	e20070ff 	and	r7, r0, #255	; 0xff
400161b4:	e1d401b0 	ldrh	r0, [r4, #16]
400161b8:	e3a0103f 	mov	r1, #63	; 0x3f
400161bc:	e0018440 	and	r8, r1, r0, asr #8
400161c0:	e3a00000 	mov	r0, #0
400161c4:	e59f1150 	ldr	r1, [pc, #336]	; 4001631c <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
400161c8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400161cc:	e7810107 	str	r0, [r1, r7, lsl #2]
400161d0:	e1d400b4 	ldrh	r0, [r4, #4]
400161d4:	e3500003 	cmp	r0, #3
400161d8:	0a000012 	beq	40016228 <CyU3PDmaChannelDestroy_TypeManual+0xbc>
400161dc:	e1d401b2 	ldrh	r0, [r4, #18]
400161e0:	ebfffb6d 	bl	40014f9c <CyU3PDmaSocketDisable>
400161e4:	e1d401b2 	ldrh	r0, [r4, #18]
400161e8:	e1a0100d 	mov	r1, sp
400161ec:	ebfffb82 	bl	40014ffc <CyU3PDmaSocketGetConfig>
400161f0:	e59f0120 	ldr	r0, [pc, #288]	; 40016318 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
400161f4:	e58d0000 	str	r0, [sp]
400161f8:	e1d401b2 	ldrh	r0, [r4, #18]
400161fc:	e1a0100d 	mov	r1, sp
40016200:	ebfffc27 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016204:	e1d401b2 	ldrh	r0, [r4, #18]
40016208:	e20070ff 	and	r7, r0, #255	; 0xff
4001620c:	e1d401b2 	ldrh	r0, [r4, #18]
40016210:	e3a0103f 	mov	r1, #63	; 0x3f
40016214:	e0018440 	and	r8, r1, r0, asr #8
40016218:	e3a00000 	mov	r0, #0
4001621c:	e59f10f8 	ldr	r1, [pc, #248]	; 4001631c <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40016220:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40016224:	e7810107 	str	r0, [r1, r7, lsl #2]
40016228:	e1d400b8 	ldrh	r0, [r4, #8]
4001622c:	e3500000 	cmp	r0, #0
40016230:	0a000033 	beq	40016304 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016234:	e1d400b4 	ldrh	r0, [r4, #4]
40016238:	e3500004 	cmp	r0, #4
4001623c:	1a000014 	bne	40016294 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40016240:	e1d450be 	ldrh	r5, [r4, #14]
40016244:	e3a06000 	mov	r6, #0
40016248:	ea00000d 	b	40016284 <CyU3PDmaChannelDestroy_TypeManual+0x118>
4001624c:	e28d1018 	add	r1, sp, #24
40016250:	e1a00005 	mov	r0, r5
40016254:	eb0031c5 	bl	40022970 <CyU3PDmaDscrGetConfig>
40016258:	e59d1018 	ldr	r1, [sp, #24]
4001625c:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40016260:	e0410002 	sub	r0, r1, r2
40016264:	ebffb722 	bl	40003ef4 <CyU3PDmaBufferFree>
40016268:	e1a00005 	mov	r0, r5
4001626c:	eb003198 	bl	400228d4 <CyU3PDmaDscrPut>
40016270:	e59d0020 	ldr	r0, [sp, #32]
40016274:	e1a05800 	lsl	r5, r0, #16
40016278:	e1a05825 	lsr	r5, r5, #16
4001627c:	e2860001 	add	r0, r6, #1
40016280:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40016284:	e1d400b8 	ldrh	r0, [r4, #8]
40016288:	e1500006 	cmp	r0, r6
4001628c:	caffffee 	bgt	4001624c <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40016290:	ea000013 	b	400162e4 <CyU3PDmaChannelDestroy_TypeManual+0x178>
40016294:	e1d450bc 	ldrh	r5, [r4, #12]
40016298:	e3a06000 	mov	r6, #0
4001629c:	ea00000d 	b	400162d8 <CyU3PDmaChannelDestroy_TypeManual+0x16c>
400162a0:	e28d1018 	add	r1, sp, #24
400162a4:	e1a00005 	mov	r0, r5
400162a8:	eb0031b0 	bl	40022970 <CyU3PDmaDscrGetConfig>
400162ac:	e59d1018 	ldr	r1, [sp, #24]
400162b0:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
400162b4:	e0410002 	sub	r0, r1, r2
400162b8:	ebffb70d 	bl	40003ef4 <CyU3PDmaBufferFree>
400162bc:	e1a00005 	mov	r0, r5
400162c0:	eb003183 	bl	400228d4 <CyU3PDmaDscrPut>
400162c4:	e59d0020 	ldr	r0, [sp, #32]
400162c8:	e1a05800 	lsl	r5, r0, #16
400162cc:	e1a05825 	lsr	r5, r5, #16
400162d0:	e2860001 	add	r0, r6, #1
400162d4:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400162d8:	e1d400b8 	ldrh	r0, [r4, #8]
400162dc:	e1500006 	cmp	r0, r6
400162e0:	caffffee 	bgt	400162a0 <CyU3PDmaChannelDestroy_TypeManual+0x134>
400162e4:	e1d400b4 	ldrh	r0, [r4, #4]
400162e8:	e3500002 	cmp	r0, #2
400162ec:	1a000004 	bne	40016304 <CyU3PDmaChannelDestroy_TypeManual+0x198>
400162f0:	e1d410b8 	ldrh	r1, [r4, #8]
400162f4:	e1d400be 	ldrh	r0, [r4, #14]
400162f8:	e3a03000 	mov	r3, #0
400162fc:	e1a02003 	mov	r2, r3
40016300:	eb0030ff 	bl	40022704 <CyU3PDmaDscrChainDestroy>
40016304:	e1d401b4 	ldrh	r0, [r4, #20]
40016308:	eb003171 	bl	400228d4 <CyU3PDmaDscrPut>
4001630c:	e3a00000 	mov	r0, #0
40016310:	e28dd028 	add	sp, sp, #40	; 0x28
40016314:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016318:	0000ffff 	.word	0x0000ffff
4001631c:	40030d20 	.word	0x40030d20

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40016320 <CyU3PDmaChannelGetBuffer>:
40016320:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016324:	e24dd030 	sub	sp, sp, #48	; 0x30
40016328:	e1a04000 	mov	r4, r0
4001632c:	e1a05001 	mov	r5, r1
40016330:	e1a06002 	mov	r6, r2
40016334:	e3550000 	cmp	r5, #0
40016338:	1a000002 	bne	40016348 <CyU3PDmaChannelGetBuffer+0x28>
4001633c:	e3a00041 	mov	r0, #65	; 0x41
40016340:	e28dd030 	add	sp, sp, #48	; 0x30
40016344:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016348:	e1a01006 	mov	r1, r6
4001634c:	e1a00004 	mov	r0, r4
40016350:	ebfffc85 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40016354:	e1a08000 	mov	r8, r0
40016358:	e3580000 	cmp	r8, #0
4001635c:	0a000001 	beq	40016368 <CyU3PDmaChannelGetBuffer+0x48>
40016360:	e1a00008 	mov	r0, r8
40016364:	eafffff5 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016368:	e5940000 	ldr	r0, [r4]
4001636c:	e3500002 	cmp	r0, #2
40016370:	0a000003 	beq	40016384 <CyU3PDmaChannelGetBuffer+0x64>
40016374:	e5940000 	ldr	r0, [r4]
40016378:	e3500006 	cmp	r0, #6
4001637c:	0a000000 	beq	40016384 <CyU3PDmaChannelGetBuffer+0x64>
40016380:	e3a08042 	mov	r8, #66	; 0x42
40016384:	e5940000 	ldr	r0, [r4]
40016388:	e3500005 	cmp	r0, #5
4001638c:	1a000000 	bne	40016394 <CyU3PDmaChannelGetBuffer+0x74>
40016390:	e3a08049 	mov	r8, #73	; 0x49
40016394:	e5940000 	ldr	r0, [r4]
40016398:	e3500007 	cmp	r0, #7
4001639c:	1a000000 	bne	400163a4 <CyU3PDmaChannelGetBuffer+0x84>
400163a0:	e3a08048 	mov	r8, #72	; 0x48
400163a4:	e3580000 	cmp	r8, #0
400163a8:	0a000003 	beq	400163bc <CyU3PDmaChannelGetBuffer+0x9c>
400163ac:	e284003c 	add	r0, r4, #60	; 0x3c
400163b0:	ebffd04b 	bl	4000a4e4 <_txe_mutex_put>
400163b4:	e1a00008 	mov	r0, r8
400163b8:	eaffffe0 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
400163bc:	e1d400b4 	ldrh	r0, [r4, #4]
400163c0:	e20070ff 	and	r7, r0, #255	; 0xff
400163c4:	e3570002 	cmp	r7, #2
400163c8:	0a000001 	beq	400163d4 <CyU3PDmaChannelGetBuffer+0xb4>
400163cc:	e3570003 	cmp	r7, #3
400163d0:	1a00003e 	bne	400164d0 <CyU3PDmaChannelGetBuffer+0x1b0>
400163d4:	e3a02002 	mov	r2, #2
400163d8:	e3e01008 	mvn	r1, #8
400163dc:	e2840074 	add	r0, r4, #116	; 0x74
400163e0:	ebffcf72 	bl	4000a1b0 <_txe_event_flags_set>
400163e4:	e1d401b6 	ldrh	r0, [r4, #22]
400163e8:	e28d101c 	add	r1, sp, #28
400163ec:	eb00315f 	bl	40022970 <CyU3PDmaDscrGetConfig>
400163f0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163f4:	e3100008 	tst	r0, #8
400163f8:	1a000022 	bne	40016488 <CyU3PDmaChannelGetBuffer+0x168>
400163fc:	e284003c 	add	r0, r4, #60	; 0x3c
40016400:	ebffd037 	bl	4000a4e4 <_txe_mutex_put>
40016404:	e58d6000 	str	r6, [sp]
40016408:	e28d302c 	add	r3, sp, #44	; 0x2c
4001640c:	e3a02000 	mov	r2, #0
40016410:	e3a01068 	mov	r1, #104	; 0x68
40016414:	e2840074 	add	r0, r4, #116	; 0x74
40016418:	ebffcf34 	bl	4000a0f0 <_txe_event_flags_get>
4001641c:	e1a08000 	mov	r8, r0
40016420:	e3580000 	cmp	r8, #0
40016424:	0a000001 	beq	40016430 <CyU3PDmaChannelGetBuffer+0x110>
40016428:	e3a00045 	mov	r0, #69	; 0x45
4001642c:	eaffffc3 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016430:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016434:	e3100040 	tst	r0, #64	; 0x40
40016438:	0a000001 	beq	40016444 <CyU3PDmaChannelGetBuffer+0x124>
4001643c:	e3a00049 	mov	r0, #73	; 0x49
40016440:	eaffffbe 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016444:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016448:	e3100020 	tst	r0, #32
4001644c:	0a000001 	beq	40016458 <CyU3PDmaChannelGetBuffer+0x138>
40016450:	e3a00048 	mov	r0, #72	; 0x48
40016454:	eaffffb9 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016458:	e1a01006 	mov	r1, r6
4001645c:	e1a00004 	mov	r0, r4
40016460:	ebfffc41 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40016464:	e1a08000 	mov	r8, r0
40016468:	e3580000 	cmp	r8, #0
4001646c:	0a000001 	beq	40016478 <CyU3PDmaChannelGetBuffer+0x158>
40016470:	e1a00008 	mov	r0, r8
40016474:	eaffffb1 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016478:	e1d401b6 	ldrh	r0, [r4, #22]
4001647c:	e28d101c 	add	r1, sp, #28
40016480:	eb00313a 	bl	40022970 <CyU3PDmaDscrGetConfig>
40016484:	ea000003 	b	40016498 <CyU3PDmaChannelGetBuffer+0x178>
40016488:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001648c:	e3500000 	cmp	r0, #0
40016490:	0a000000 	beq	40016498 <CyU3PDmaChannelGetBuffer+0x178>
40016494:	ebffd1fe 	bl	4000ac94 <_txe_thread_relinquish>
40016498:	e59d001c 	ldr	r0, [sp, #28]
4001649c:	e5850000 	str	r0, [r5]
400164a0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400164a4:	e59f11a4 	ldr	r1, [pc, #420]	; 40016650 <CyU3PDmaChannelGetBuffer+0x330>
400164a8:	e0010820 	and	r0, r1, r0, lsr #16
400164ac:	e1c500b4 	strh	r0, [r5, #4]
400164b0:	e241100f 	sub	r1, r1, #15
400164b4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400164b8:	e0000001 	and	r0, r0, r1
400164bc:	e1c500b6 	strh	r0, [r5, #6]
400164c0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400164c4:	e200000f 	and	r0, r0, #15
400164c8:	e1c500b8 	strh	r0, [r5, #8]
400164cc:	ea00005b 	b	40016640 <CyU3PDmaChannelGetBuffer+0x320>
400164d0:	e3570004 	cmp	r7, #4
400164d4:	1a000036 	bne	400165b4 <CyU3PDmaChannelGetBuffer+0x294>
400164d8:	e3a02002 	mov	r2, #2
400164dc:	e3e01010 	mvn	r1, #16
400164e0:	e2840074 	add	r0, r4, #116	; 0x74
400164e4:	ebffcf31 	bl	4000a1b0 <_txe_event_flags_set>
400164e8:	e1d401b8 	ldrh	r0, [r4, #24]
400164ec:	e28d101c 	add	r1, sp, #28
400164f0:	eb00311e 	bl	40022970 <CyU3PDmaDscrGetConfig>
400164f4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400164f8:	e3100008 	tst	r0, #8
400164fc:	0a000021 	beq	40016588 <CyU3PDmaChannelGetBuffer+0x268>
40016500:	e284003c 	add	r0, r4, #60	; 0x3c
40016504:	ebffcff6 	bl	4000a4e4 <_txe_mutex_put>
40016508:	e58d6000 	str	r6, [sp]
4001650c:	e28d302c 	add	r3, sp, #44	; 0x2c
40016510:	e3a02000 	mov	r2, #0
40016514:	e3a01070 	mov	r1, #112	; 0x70
40016518:	e2840074 	add	r0, r4, #116	; 0x74
4001651c:	ebffcef3 	bl	4000a0f0 <_txe_event_flags_get>
40016520:	e1a08000 	mov	r8, r0
40016524:	e3580000 	cmp	r8, #0
40016528:	0a000001 	beq	40016534 <CyU3PDmaChannelGetBuffer+0x214>
4001652c:	e3a00045 	mov	r0, #69	; 0x45
40016530:	eaffff82 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016534:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016538:	e3100040 	tst	r0, #64	; 0x40
4001653c:	0a000001 	beq	40016548 <CyU3PDmaChannelGetBuffer+0x228>
40016540:	e3a00049 	mov	r0, #73	; 0x49
40016544:	eaffff7d 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016548:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001654c:	e3100020 	tst	r0, #32
40016550:	0a000001 	beq	4001655c <CyU3PDmaChannelGetBuffer+0x23c>
40016554:	e3a00048 	mov	r0, #72	; 0x48
40016558:	eaffff78 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
4001655c:	e1a01006 	mov	r1, r6
40016560:	e1a00004 	mov	r0, r4
40016564:	ebfffc00 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40016568:	e1a08000 	mov	r8, r0
4001656c:	e3580000 	cmp	r8, #0
40016570:	0a000001 	beq	4001657c <CyU3PDmaChannelGetBuffer+0x25c>
40016574:	e1a00008 	mov	r0, r8
40016578:	eaffff70 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
4001657c:	e1d401b8 	ldrh	r0, [r4, #24]
40016580:	e28d101c 	add	r1, sp, #28
40016584:	eb0030f9 	bl	40022970 <CyU3PDmaDscrGetConfig>
40016588:	e59d001c 	ldr	r0, [sp, #28]
4001658c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40016590:	e0400001 	sub	r0, r0, r1
40016594:	e5850000 	str	r0, [r5]
40016598:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
4001659c:	e1c500b4 	strh	r0, [r5, #4]
400165a0:	e1d400b6 	ldrh	r0, [r4, #6]
400165a4:	e1c500b6 	strh	r0, [r5, #6]
400165a8:	e3a00000 	mov	r0, #0
400165ac:	e1c500b8 	strh	r0, [r5, #8]
400165b0:	ea000022 	b	40016640 <CyU3PDmaChannelGetBuffer+0x320>
400165b4:	e1d401b2 	ldrh	r0, [r4, #18]
400165b8:	e28d1004 	add	r1, sp, #4
400165bc:	ebfffa8e 	bl	40014ffc <CyU3PDmaSocketGetConfig>
400165c0:	e59d1004 	ldr	r1, [sp, #4]
400165c4:	e1a00801 	lsl	r0, r1, #16
400165c8:	e1a00820 	lsr	r0, r0, #16
400165cc:	e28d101c 	add	r1, sp, #28
400165d0:	eb0030e6 	bl	40022970 <CyU3PDmaDscrGetConfig>
400165d4:	e59d0010 	ldr	r0, [sp, #16]
400165d8:	e3100702 	tst	r0, #524288	; 0x80000
400165dc:	0a000016 	beq	4001663c <CyU3PDmaChannelGetBuffer+0x31c>
400165e0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400165e4:	e3100008 	tst	r0, #8
400165e8:	0a000013 	beq	4001663c <CyU3PDmaChannelGetBuffer+0x31c>
400165ec:	e59d001c 	ldr	r0, [sp, #28]
400165f0:	e5850000 	str	r0, [r5]
400165f4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400165f8:	e59f1050 	ldr	r1, [pc, #80]	; 40016650 <CyU3PDmaChannelGetBuffer+0x330>
400165fc:	e0010820 	and	r0, r1, r0, lsr #16
40016600:	e1c500b4 	strh	r0, [r5, #4]
40016604:	e241100f 	sub	r1, r1, #15
40016608:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001660c:	e0000001 	and	r0, r0, r1
40016610:	e1c500b6 	strh	r0, [r5, #6]
40016614:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016618:	e200000f 	and	r0, r0, #15
4001661c:	e1c500b8 	strh	r0, [r5, #8]
40016620:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016624:	e3500000 	cmp	r0, #0
40016628:	0a000004 	beq	40016640 <CyU3PDmaChannelGetBuffer+0x320>
4001662c:	e1d510b6 	ldrh	r1, [r5, #6]
40016630:	e5950000 	ldr	r0, [r5]
40016634:	ebffefa1 	bl	400124c0 <CyU3PSysFlushDRegion>
40016638:	ea000000 	b	40016640 <CyU3PDmaChannelGetBuffer+0x320>
4001663c:	e3a08047 	mov	r8, #71	; 0x47
40016640:	e284003c 	add	r0, r4, #60	; 0x3c
40016644:	ebffcfa6 	bl	4000a4e4 <_txe_mutex_put>
40016648:	e1a00008 	mov	r0, r8
4001664c:	eaffff3b 	b	40016340 <CyU3PDmaChannelGetBuffer+0x20>
40016650:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

40016654 <CyU3PDmaChannelReset>:
40016654:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40016658:	e1a04000 	mov	r4, r0
4001665c:	e3e01000 	mvn	r1, #0
40016660:	e1a00004 	mov	r0, r4
40016664:	ebfffbc0 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40016668:	e1a06000 	mov	r6, r0
4001666c:	e3560000 	cmp	r6, #0
40016670:	0a000001 	beq	4001667c <CyU3PDmaChannelReset+0x28>
40016674:	e1a00006 	mov	r0, r6
40016678:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4001667c:	e1d400b4 	ldrh	r0, [r4, #4]
40016680:	e3500005 	cmp	r0, #5
40016684:	308ff100 	addcc	pc, pc, r0, lsl #2
40016688:	ea00000f 	b	400166cc <CyU3PDmaChannelReset+0x78>
4001668c:	ea000003 	b	400166a0 <CyU3PDmaChannelReset+0x4c>
40016690:	ea000004 	b	400166a8 <CyU3PDmaChannelReset+0x54>
40016694:	ea000009 	b	400166c0 <CyU3PDmaChannelReset+0x6c>
40016698:	ea000005 	b	400166b4 <CyU3PDmaChannelReset+0x60>
4001669c:	ea000006 	b	400166bc <CyU3PDmaChannelReset+0x68>
400166a0:	e1a00000 	nop			; (mov r0, r0)
400166a4:	e1a00000 	nop			; (mov r0, r0)
400166a8:	e1a00004 	mov	r0, r4
400166ac:	eb000030 	bl	40016774 <CyU3PDmaChannelReset_TypeAuto>
400166b0:	ea000007 	b	400166d4 <CyU3PDmaChannelReset+0x80>
400166b4:	e1a00000 	nop			; (mov r0, r0)
400166b8:	e1a00000 	nop			; (mov r0, r0)
400166bc:	e1a00000 	nop			; (mov r0, r0)
400166c0:	e1a00004 	mov	r0, r4
400166c4:	eb000045 	bl	400167e0 <CyU3PDmaChannelReset_TypeManual>
400166c8:	ea000001 	b	400166d4 <CyU3PDmaChannelReset+0x80>
400166cc:	e1a00000 	nop			; (mov r0, r0)
400166d0:	e1a00000 	nop			; (mov r0, r0)
400166d4:	e1a00000 	nop			; (mov r0, r0)
400166d8:	ebffc937 	bl	40008bbc <_tx_thread_identify>
400166dc:	e1a05000 	mov	r5, r0
400166e0:	e3550000 	cmp	r5, #0
400166e4:	0a000003 	beq	400166f8 <CyU3PDmaChannelReset+0xa4>
400166e8:	e1a0200d 	mov	r2, sp
400166ec:	e3a01002 	mov	r1, #2
400166f0:	e1a00005 	mov	r0, r5
400166f4:	ebffd13e 	bl	4000abf4 <_txe_thread_priority_change>
400166f8:	e3a02002 	mov	r2, #2
400166fc:	e3e01007 	mvn	r1, #7
40016700:	e2840074 	add	r0, r4, #116	; 0x74
40016704:	ebffcea9 	bl	4000a1b0 <_txe_event_flags_set>
40016708:	e3a02000 	mov	r2, #0
4001670c:	e3a01020 	mov	r1, #32
40016710:	e2840074 	add	r0, r4, #116	; 0x74
40016714:	ebffcea5 	bl	4000a1b0 <_txe_event_flags_set>
40016718:	e3a00001 	mov	r0, #1
4001671c:	e5840000 	str	r0, [r4]
40016720:	e284003c 	add	r0, r4, #60	; 0x3c
40016724:	ebffcf6e 	bl	4000a4e4 <_txe_mutex_put>
40016728:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
4001672c:	e3500000 	cmp	r0, #0
40016730:	0a000007 	beq	40016754 <CyU3PDmaChannelReset+0x100>
40016734:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40016738:	e3100020 	tst	r0, #32
4001673c:	0a000004 	beq	40016754 <CyU3PDmaChannelReset+0x100>
40016740:	e3a02000 	mov	r2, #0
40016744:	e3a01020 	mov	r1, #32
40016748:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
4001674c:	e1a00004 	mov	r0, r4
40016750:	e12fff33 	blx	r3
40016754:	e3550000 	cmp	r5, #0
40016758:	0a000003 	beq	4001676c <CyU3PDmaChannelReset+0x118>
4001675c:	e1a0200d 	mov	r2, sp
40016760:	e1a00005 	mov	r0, r5
40016764:	e59d1000 	ldr	r1, [sp]
40016768:	ebffd121 	bl	4000abf4 <_txe_thread_priority_change>
4001676c:	e3a00000 	mov	r0, #0
40016770:	eaffffc0 	b	40016678 <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

40016774 <CyU3PDmaChannelReset_TypeAuto>:
40016774:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016778:	e1a04000 	mov	r4, r0
4001677c:	e1d450b8 	ldrh	r5, [r4, #8]
40016780:	e1d460bc 	ldrh	r6, [r4, #12]
40016784:	e1a00004 	mov	r0, r4
40016788:	eb000337 	bl	4001746c <CyU3PDmaConfigureSockets_TypeAuto>
4001678c:	ea00000c 	b	400167c4 <CyU3PDmaChannelReset_TypeAuto+0x50>
40016790:	e1a0100d 	mov	r1, sp
40016794:	e1a00006 	mov	r0, r6
40016798:	eb003074 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001679c:	e59d000c 	ldr	r0, [sp, #12]
400167a0:	e59f1034 	ldr	r1, [pc, #52]	; 400167dc <CyU3PDmaChannelReset_TypeAuto+0x68>
400167a4:	e0000001 	and	r0, r0, r1
400167a8:	e58d000c 	str	r0, [sp, #12]
400167ac:	e1a0100d 	mov	r1, sp
400167b0:	e1a00006 	mov	r0, r6
400167b4:	eb003088 	bl	400229dc <CyU3PDmaDscrSetConfig>
400167b8:	e59d0008 	ldr	r0, [sp, #8]
400167bc:	e1a06800 	lsl	r6, r0, #16
400167c0:	e1a06826 	lsr	r6, r6, #16
400167c4:	e1b00005 	movs	r0, r5
400167c8:	e2451001 	sub	r1, r5, #1
400167cc:	e1a05801 	lsl	r5, r1, #16
400167d0:	e1a05825 	lsr	r5, r5, #16
400167d4:	1affffed 	bne	40016790 <CyU3PDmaChannelReset_TypeAuto+0x1c>
400167d8:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400167dc:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

400167e0 <CyU3PDmaChannelReset_TypeManual>:
400167e0:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400167e4:	e1a04000 	mov	r4, r0
400167e8:	e1d450b8 	ldrh	r5, [r4, #8]
400167ec:	e1a00004 	mov	r0, r4
400167f0:	eb00035d 	bl	4001756c <CyU3PDmaConfigureSockets_TypeManual>
400167f4:	e1d400b4 	ldrh	r0, [r4, #4]
400167f8:	e3500004 	cmp	r0, #4
400167fc:	0a000017 	beq	40016860 <CyU3PDmaChannelReset_TypeManual+0x80>
40016800:	e1d460bc 	ldrh	r6, [r4, #12]
40016804:	ea00000c 	b	4001683c <CyU3PDmaChannelReset_TypeManual+0x5c>
40016808:	e1a0100d 	mov	r1, sp
4001680c:	e1a00006 	mov	r0, r6
40016810:	eb003056 	bl	40022970 <CyU3PDmaDscrGetConfig>
40016814:	e59d000c 	ldr	r0, [sp, #12]
40016818:	e59f10b4 	ldr	r1, [pc, #180]	; 400168d4 <CyU3PDmaChannelReset_TypeManual+0xf4>
4001681c:	e0000001 	and	r0, r0, r1
40016820:	e58d000c 	str	r0, [sp, #12]
40016824:	e1a0100d 	mov	r1, sp
40016828:	e1a00006 	mov	r0, r6
4001682c:	eb00306a 	bl	400229dc <CyU3PDmaDscrSetConfig>
40016830:	e59d0008 	ldr	r0, [sp, #8]
40016834:	e1a06800 	lsl	r6, r0, #16
40016838:	e1a06826 	lsr	r6, r6, #16
4001683c:	e1b00005 	movs	r0, r5
40016840:	e2451001 	sub	r1, r5, #1
40016844:	e1a05801 	lsl	r5, r1, #16
40016848:	e1a05825 	lsr	r5, r5, #16
4001684c:	1affffed 	bne	40016808 <CyU3PDmaChannelReset_TypeManual+0x28>
40016850:	e1d400bc 	ldrh	r0, [r4, #12]
40016854:	e1c401b6 	strh	r0, [r4, #22]
40016858:	e1c401ba 	strh	r0, [r4, #26]
4001685c:	e1c401be 	strh	r0, [r4, #30]
40016860:	e1d400b4 	ldrh	r0, [r4, #4]
40016864:	e3500003 	cmp	r0, #3
40016868:	0a000018 	beq	400168d0 <CyU3PDmaChannelReset_TypeManual+0xf0>
4001686c:	e1d460be 	ldrh	r6, [r4, #14]
40016870:	e1d450b8 	ldrh	r5, [r4, #8]
40016874:	ea00000c 	b	400168ac <CyU3PDmaChannelReset_TypeManual+0xcc>
40016878:	e1a0100d 	mov	r1, sp
4001687c:	e1a00006 	mov	r0, r6
40016880:	eb00303a 	bl	40022970 <CyU3PDmaDscrGetConfig>
40016884:	e59d000c 	ldr	r0, [sp, #12]
40016888:	e59f1044 	ldr	r1, [pc, #68]	; 400168d4 <CyU3PDmaChannelReset_TypeManual+0xf4>
4001688c:	e0000001 	and	r0, r0, r1
40016890:	e58d000c 	str	r0, [sp, #12]
40016894:	e1a0100d 	mov	r1, sp
40016898:	e1a00006 	mov	r0, r6
4001689c:	eb00304e 	bl	400229dc <CyU3PDmaDscrSetConfig>
400168a0:	e59d0008 	ldr	r0, [sp, #8]
400168a4:	e1a06800 	lsl	r6, r0, #16
400168a8:	e1a06826 	lsr	r6, r6, #16
400168ac:	e1b00005 	movs	r0, r5
400168b0:	e2451001 	sub	r1, r5, #1
400168b4:	e1a05801 	lsl	r5, r1, #16
400168b8:	e1a05825 	lsr	r5, r5, #16
400168bc:	1affffed 	bne	40016878 <CyU3PDmaChannelReset_TypeManual+0x98>
400168c0:	e1d400be 	ldrh	r0, [r4, #14]
400168c4:	e1c401b8 	strh	r0, [r4, #24]
400168c8:	e1c401bc 	strh	r0, [r4, #28]
400168cc:	e1c402b0 	strh	r0, [r4, #32]
400168d0:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400168d4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

400168d8 <CyU3PDmaChannelSetXfer>:
400168d8:	e92d4070 	push	{r4, r5, r6, lr}
400168dc:	e1a04000 	mov	r4, r0
400168e0:	e1a05001 	mov	r5, r1
400168e4:	e3e01000 	mvn	r1, #0
400168e8:	e1a00004 	mov	r0, r4
400168ec:	ebfffb1e 	bl	4001556c <CyU3PDmaChannelAcquireLock>
400168f0:	e1a06000 	mov	r6, r0
400168f4:	e3560000 	cmp	r6, #0
400168f8:	0a000001 	beq	40016904 <CyU3PDmaChannelSetXfer+0x2c>
400168fc:	e1a00006 	mov	r0, r6
40016900:	e8bd8070 	pop	{r4, r5, r6, pc}
40016904:	e5940000 	ldr	r0, [r4]
40016908:	e3500001 	cmp	r0, #1
4001690c:	0a000000 	beq	40016914 <CyU3PDmaChannelSetXfer+0x3c>
40016910:	e3a06043 	mov	r6, #67	; 0x43
40016914:	e1d400b8 	ldrh	r0, [r4, #8]
40016918:	e3500000 	cmp	r0, #0
4001691c:	1a000000 	bne	40016924 <CyU3PDmaChannelSetXfer+0x4c>
40016920:	e3a06046 	mov	r6, #70	; 0x46
40016924:	e3560000 	cmp	r6, #0
40016928:	1a00001d 	bne	400169a4 <CyU3PDmaChannelSetXfer+0xcc>
4001692c:	e3a02002 	mov	r2, #2
40016930:	e3e01027 	mvn	r1, #39	; 0x27
40016934:	e2840074 	add	r0, r4, #116	; 0x74
40016938:	ebffce1c 	bl	4000a1b0 <_txe_event_flags_set>
4001693c:	e5845034 	str	r5, [r4, #52]	; 0x34
40016940:	e1d400b4 	ldrh	r0, [r4, #4]
40016944:	e3500005 	cmp	r0, #5
40016948:	308ff100 	addcc	pc, pc, r0, lsl #2
4001694c:	ea000011 	b	40016998 <CyU3PDmaChannelSetXfer+0xc0>
40016950:	ea000003 	b	40016964 <CyU3PDmaChannelSetXfer+0x8c>
40016954:	ea000004 	b	4001696c <CyU3PDmaChannelSetXfer+0x94>
40016958:	ea00000a 	b	40016988 <CyU3PDmaChannelSetXfer+0xb0>
4001695c:	ea000006 	b	4001697c <CyU3PDmaChannelSetXfer+0xa4>
40016960:	ea000007 	b	40016984 <CyU3PDmaChannelSetXfer+0xac>
40016964:	e1a00000 	nop			; (mov r0, r0)
40016968:	e1a00000 	nop			; (mov r0, r0)
4001696c:	e1a01005 	mov	r1, r5
40016970:	e1a00004 	mov	r0, r4
40016974:	eb00000e 	bl	400169b4 <CyU3PDmaChannelSetXfer_TypeAuto>
40016978:	ea000008 	b	400169a0 <CyU3PDmaChannelSetXfer+0xc8>
4001697c:	e1a00000 	nop			; (mov r0, r0)
40016980:	e1a00000 	nop			; (mov r0, r0)
40016984:	e1a00000 	nop			; (mov r0, r0)
40016988:	e1a01005 	mov	r1, r5
4001698c:	e1a00004 	mov	r0, r4
40016990:	eb00006f 	bl	40016b54 <CyU3PDmaChannelSetXfer_TypeManual>
40016994:	ea000001 	b	400169a0 <CyU3PDmaChannelSetXfer+0xc8>
40016998:	e1a00000 	nop			; (mov r0, r0)
4001699c:	e1a00000 	nop			; (mov r0, r0)
400169a0:	e1a00000 	nop			; (mov r0, r0)
400169a4:	e284003c 	add	r0, r4, #60	; 0x3c
400169a8:	ebffcecd 	bl	4000a4e4 <_txe_mutex_put>
400169ac:	e1a00006 	mov	r0, r6
400169b0:	eaffffd2 	b	40016900 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

400169b4 <CyU3PDmaChannelSetXfer_TypeAuto>:
400169b4:	e92d4030 	push	{r4, r5, lr}
400169b8:	e24dd01c 	sub	sp, sp, #28
400169bc:	e1a04000 	mov	r4, r0
400169c0:	e1a05001 	mov	r5, r1
400169c4:	e1d401b0 	ldrh	r0, [r4, #16]
400169c8:	ebfff973 	bl	40014f9c <CyU3PDmaSocketDisable>
400169cc:	e1d401b2 	ldrh	r0, [r4, #18]
400169d0:	ebfff971 	bl	40014f9c <CyU3PDmaSocketDisable>
400169d4:	e3a00002 	mov	r0, #2
400169d8:	e5840000 	str	r0, [r4]
400169dc:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400169e0:	e1d401b0 	ldrh	r0, [r4, #16]
400169e4:	ebfffa87 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
400169e8:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
400169ec:	e1d401b2 	ldrh	r0, [r4, #18]
400169f0:	ebfffa84 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
400169f4:	e1d401b0 	ldrh	r0, [r4, #16]
400169f8:	e28d1004 	add	r1, sp, #4
400169fc:	ebfff97e 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016a00:	e58d5008 	str	r5, [sp, #8]
40016a04:	e3a00000 	mov	r0, #0
40016a08:	e58d000c 	str	r0, [sp, #12]
40016a0c:	e3550000 	cmp	r5, #0
40016a10:	1a000003 	bne	40016a24 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
40016a14:	e59d0010 	ldr	r0, [sp, #16]
40016a18:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016a1c:	e58d0010 	str	r0, [sp, #16]
40016a20:	ea000002 	b	40016a30 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
40016a24:	e59d0010 	ldr	r0, [sp, #16]
40016a28:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016a2c:	e58d0010 	str	r0, [sp, #16]
40016a30:	e59d0010 	ldr	r0, [sp, #16]
40016a34:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016a38:	e58d0010 	str	r0, [sp, #16]
40016a3c:	e59d0010 	ldr	r0, [sp, #16]
40016a40:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016a44:	e58d0010 	str	r0, [sp, #16]
40016a48:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016a4c:	e3500001 	cmp	r0, #1
40016a50:	1a000003 	bne	40016a64 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
40016a54:	e59d0010 	ldr	r0, [sp, #16]
40016a58:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016a5c:	e58d0010 	str	r0, [sp, #16]
40016a60:	ea000002 	b	40016a70 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016a64:	e59d0010 	ldr	r0, [sp, #16]
40016a68:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016a6c:	e58d0010 	str	r0, [sp, #16]
40016a70:	e1d400ba 	ldrh	r0, [r4, #10]
40016a74:	e3500000 	cmp	r0, #0
40016a78:	0a000006 	beq	40016a98 <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016a7c:	e1d400b8 	ldrh	r0, [r4, #8]
40016a80:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016a84:	e1d410ba 	ldrh	r1, [r4, #10]
40016a88:	e1800281 	orr	r0, r0, r1, lsl #5
40016a8c:	e59d1010 	ldr	r1, [sp, #16]
40016a90:	e1800001 	orr	r0, r0, r1
40016a94:	e58d0010 	str	r0, [sp, #16]
40016a98:	e3e00000 	mvn	r0, #0
40016a9c:	e58d0014 	str	r0, [sp, #20]
40016aa0:	e1d401b0 	ldrh	r0, [r4, #16]
40016aa4:	e28d1004 	add	r1, sp, #4
40016aa8:	ebfff9fd 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016aac:	e1d401b2 	ldrh	r0, [r4, #18]
40016ab0:	e28d1004 	add	r1, sp, #4
40016ab4:	ebfff950 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016ab8:	e58d5008 	str	r5, [sp, #8]
40016abc:	e3a00000 	mov	r0, #0
40016ac0:	e58d000c 	str	r0, [sp, #12]
40016ac4:	e3550000 	cmp	r5, #0
40016ac8:	1a000006 	bne	40016ae8 <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016acc:	e59d0018 	ldr	r0, [sp, #24]
40016ad0:	e3c00080 	bic	r0, r0, #128	; 0x80
40016ad4:	e58d0018 	str	r0, [sp, #24]
40016ad8:	e59d0010 	ldr	r0, [sp, #16]
40016adc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016ae0:	e58d0010 	str	r0, [sp, #16]
40016ae4:	ea000005 	b	40016b00 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
40016ae8:	e59d0018 	ldr	r0, [sp, #24]
40016aec:	e3800080 	orr	r0, r0, #128	; 0x80
40016af0:	e58d0018 	str	r0, [sp, #24]
40016af4:	e59d0010 	ldr	r0, [sp, #16]
40016af8:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016afc:	e58d0010 	str	r0, [sp, #16]
40016b00:	e59d0010 	ldr	r0, [sp, #16]
40016b04:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016b08:	e58d0010 	str	r0, [sp, #16]
40016b0c:	e59d0010 	ldr	r0, [sp, #16]
40016b10:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016b14:	e58d0010 	str	r0, [sp, #16]
40016b18:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016b1c:	e3500001 	cmp	r0, #1
40016b20:	1a000003 	bne	40016b34 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
40016b24:	e59d0010 	ldr	r0, [sp, #16]
40016b28:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016b2c:	e58d0010 	str	r0, [sp, #16]
40016b30:	ea000002 	b	40016b40 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016b34:	e59d0010 	ldr	r0, [sp, #16]
40016b38:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016b3c:	e58d0010 	str	r0, [sp, #16]
40016b40:	e1d401b2 	ldrh	r0, [r4, #18]
40016b44:	e28d1004 	add	r1, sp, #4
40016b48:	ebfff9d5 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016b4c:	e28dd01c 	add	sp, sp, #28
40016b50:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016b54 <CyU3PDmaChannelSetXfer_TypeManual>:
40016b54:	e92d4030 	push	{r4, r5, lr}
40016b58:	e24dd01c 	sub	sp, sp, #28
40016b5c:	e1a04000 	mov	r4, r0
40016b60:	e1a05001 	mov	r5, r1
40016b64:	e3a00002 	mov	r0, #2
40016b68:	e5840000 	str	r0, [r4]
40016b6c:	e1d400b4 	ldrh	r0, [r4, #4]
40016b70:	e3500004 	cmp	r0, #4
40016b74:	0a00003d 	beq	40016c70 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016b78:	e1d401b0 	ldrh	r0, [r4, #16]
40016b7c:	ebfff906 	bl	40014f9c <CyU3PDmaSocketDisable>
40016b80:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016b84:	e1d401b0 	ldrh	r0, [r4, #16]
40016b88:	ebfffa1e 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
40016b8c:	e1d401b0 	ldrh	r0, [r4, #16]
40016b90:	e28d1004 	add	r1, sp, #4
40016b94:	ebfff918 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016b98:	e58d5008 	str	r5, [sp, #8]
40016b9c:	e3a00000 	mov	r0, #0
40016ba0:	e58d000c 	str	r0, [sp, #12]
40016ba4:	e59d0010 	ldr	r0, [sp, #16]
40016ba8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016bac:	e58d0010 	str	r0, [sp, #16]
40016bb0:	e59d0010 	ldr	r0, [sp, #16]
40016bb4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016bb8:	e58d0010 	str	r0, [sp, #16]
40016bbc:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016bc0:	e3500001 	cmp	r0, #1
40016bc4:	1a000003 	bne	40016bd8 <CyU3PDmaChannelSetXfer_TypeManual+0x84>
40016bc8:	e59d0010 	ldr	r0, [sp, #16]
40016bcc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016bd0:	e58d0010 	str	r0, [sp, #16]
40016bd4:	ea000002 	b	40016be4 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016bd8:	e59d0010 	ldr	r0, [sp, #16]
40016bdc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016be0:	e58d0010 	str	r0, [sp, #16]
40016be4:	e1d400ba 	ldrh	r0, [r4, #10]
40016be8:	e3500000 	cmp	r0, #0
40016bec:	0a000006 	beq	40016c0c <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016bf0:	e1d400b8 	ldrh	r0, [r4, #8]
40016bf4:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016bf8:	e1d410ba 	ldrh	r1, [r4, #10]
40016bfc:	e1800281 	orr	r0, r0, r1, lsl #5
40016c00:	e59d1010 	ldr	r1, [sp, #16]
40016c04:	e1800001 	orr	r0, r0, r1
40016c08:	e58d0010 	str	r0, [sp, #16]
40016c0c:	e3e00000 	mvn	r0, #0
40016c10:	e58d0014 	str	r0, [sp, #20]
40016c14:	e3550000 	cmp	r5, #0
40016c18:	0a000002 	beq	40016c28 <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
40016c1c:	e1d400b4 	ldrh	r0, [r4, #4]
40016c20:	e3500002 	cmp	r0, #2
40016c24:	1a000008 	bne	40016c4c <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
40016c28:	e3a00000 	mov	r0, #0
40016c2c:	e58d0008 	str	r0, [sp, #8]
40016c30:	e59d0010 	ldr	r0, [sp, #16]
40016c34:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016c38:	e58d0010 	str	r0, [sp, #16]
40016c3c:	e59d0018 	ldr	r0, [sp, #24]
40016c40:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c44:	e58d0018 	str	r0, [sp, #24]
40016c48:	ea000005 	b	40016c64 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016c4c:	e59d0010 	ldr	r0, [sp, #16]
40016c50:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016c54:	e58d0010 	str	r0, [sp, #16]
40016c58:	e59d0018 	ldr	r0, [sp, #24]
40016c5c:	e3800080 	orr	r0, r0, #128	; 0x80
40016c60:	e58d0018 	str	r0, [sp, #24]
40016c64:	e1d401b0 	ldrh	r0, [r4, #16]
40016c68:	e28d1004 	add	r1, sp, #4
40016c6c:	ebfff98c 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016c70:	e1d400b4 	ldrh	r0, [r4, #4]
40016c74:	e3500003 	cmp	r0, #3
40016c78:	0a00002e 	beq	40016d38 <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016c7c:	e1d401b2 	ldrh	r0, [r4, #18]
40016c80:	ebfff8c5 	bl	40014f9c <CyU3PDmaSocketDisable>
40016c84:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016c88:	e1d401b2 	ldrh	r0, [r4, #18]
40016c8c:	ebfff9dd 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
40016c90:	e1d401b2 	ldrh	r0, [r4, #18]
40016c94:	e28d1004 	add	r1, sp, #4
40016c98:	ebfff8d7 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016c9c:	e58d5008 	str	r5, [sp, #8]
40016ca0:	e3a00000 	mov	r0, #0
40016ca4:	e58d000c 	str	r0, [sp, #12]
40016ca8:	e59d0010 	ldr	r0, [sp, #16]
40016cac:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016cb0:	e58d0010 	str	r0, [sp, #16]
40016cb4:	e59d0010 	ldr	r0, [sp, #16]
40016cb8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016cbc:	e58d0010 	str	r0, [sp, #16]
40016cc0:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016cc4:	e3500001 	cmp	r0, #1
40016cc8:	1a000003 	bne	40016cdc <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016ccc:	e59d0010 	ldr	r0, [sp, #16]
40016cd0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016cd4:	e58d0010 	str	r0, [sp, #16]
40016cd8:	ea000002 	b	40016ce8 <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016cdc:	e59d0010 	ldr	r0, [sp, #16]
40016ce0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016ce4:	e58d0010 	str	r0, [sp, #16]
40016ce8:	e3e00000 	mvn	r0, #0
40016cec:	e58d0014 	str	r0, [sp, #20]
40016cf0:	e3550000 	cmp	r5, #0
40016cf4:	1a000006 	bne	40016d14 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016cf8:	e59d0010 	ldr	r0, [sp, #16]
40016cfc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016d00:	e58d0010 	str	r0, [sp, #16]
40016d04:	e59d0018 	ldr	r0, [sp, #24]
40016d08:	e3c00080 	bic	r0, r0, #128	; 0x80
40016d0c:	e58d0018 	str	r0, [sp, #24]
40016d10:	ea000005 	b	40016d2c <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016d14:	e59d0010 	ldr	r0, [sp, #16]
40016d18:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016d1c:	e58d0010 	str	r0, [sp, #16]
40016d20:	e59d0018 	ldr	r0, [sp, #24]
40016d24:	e3800080 	orr	r0, r0, #128	; 0x80
40016d28:	e58d0018 	str	r0, [sp, #24]
40016d2c:	e1d401b2 	ldrh	r0, [r4, #18]
40016d30:	e28d1004 	add	r1, sp, #4
40016d34:	ebfff95a 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016d38:	e28dd01c 	add	sp, sp, #28
40016d3c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016d40 <CyU3PDmaChannelSetupRecvBuffer>:
40016d40:	e92d4070 	push	{r4, r5, r6, lr}
40016d44:	e24dd028 	sub	sp, sp, #40	; 0x28
40016d48:	e1a04000 	mov	r4, r0
40016d4c:	e1a05001 	mov	r5, r1
40016d50:	e3550000 	cmp	r5, #0
40016d54:	1a000002 	bne	40016d64 <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016d58:	e3a00041 	mov	r0, #65	; 0x41
40016d5c:	e28dd028 	add	sp, sp, #40	; 0x28
40016d60:	e8bd8070 	pop	{r4, r5, r6, pc}
40016d64:	e5950000 	ldr	r0, [r5]
40016d68:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016d6c:	3a000005 	bcc	40016d88 <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016d70:	e5950000 	ldr	r0, [r5]
40016d74:	e1d510b6 	ldrh	r1, [r5, #6]
40016d78:	e0800001 	add	r0, r0, r1
40016d7c:	e59f11d4 	ldr	r1, [pc, #468]	; 40016f58 <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016d80:	e1500001 	cmp	r0, r1
40016d84:	3a000001 	bcc	40016d90 <CyU3PDmaChannelSetupRecvBuffer+0x50>
40016d88:	e3a00040 	mov	r0, #64	; 0x40
40016d8c:	eafffff2 	b	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d90:	e1d500b6 	ldrh	r0, [r5, #6]
40016d94:	e59f11c0 	ldr	r1, [pc, #448]	; 40016f5c <CyU3PDmaChannelSetupRecvBuffer+0x21c>
40016d98:	e1500001 	cmp	r0, r1
40016d9c:	da000001 	ble	40016da8 <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016da0:	e3a00040 	mov	r0, #64	; 0x40
40016da4:	eaffffec 	b	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016da8:	e1d500b6 	ldrh	r0, [r5, #6]
40016dac:	e3500000 	cmp	r0, #0
40016db0:	0a000002 	beq	40016dc0 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016db4:	e1d500b6 	ldrh	r0, [r5, #6]
40016db8:	e310000f 	tst	r0, #15
40016dbc:	0a000001 	beq	40016dc8 <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016dc0:	e3a00040 	mov	r0, #64	; 0x40
40016dc4:	eaffffe4 	b	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016dc8:	e3e01000 	mvn	r1, #0
40016dcc:	e1a00004 	mov	r0, r4
40016dd0:	ebfff9e5 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40016dd4:	e1a06000 	mov	r6, r0
40016dd8:	e3560000 	cmp	r6, #0
40016ddc:	0a000001 	beq	40016de8 <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016de0:	e1a00006 	mov	r0, r6
40016de4:	eaffffdc 	b	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016de8:	e1d400b4 	ldrh	r0, [r4, #4]
40016dec:	e3500004 	cmp	r0, #4
40016df0:	1a000000 	bne	40016df8 <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016df4:	e3a06046 	mov	r6, #70	; 0x46
40016df8:	e5940000 	ldr	r0, [r4]
40016dfc:	e3500001 	cmp	r0, #1
40016e00:	0a000000 	beq	40016e08 <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016e04:	e3a06043 	mov	r6, #67	; 0x43
40016e08:	e3560000 	cmp	r6, #0
40016e0c:	0a000003 	beq	40016e20 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
40016e10:	e284003c 	add	r0, r4, #60	; 0x3c
40016e14:	ebffcdb2 	bl	4000a4e4 <_txe_mutex_put>
40016e18:	e1a00006 	mov	r0, r6
40016e1c:	eaffffce 	b	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016e20:	e1d401b0 	ldrh	r0, [r4, #16]
40016e24:	ebfff85c 	bl	40014f9c <CyU3PDmaSocketDisable>
40016e28:	e1d401b0 	ldrh	r0, [r4, #16]
40016e2c:	e3a01000 	mov	r1, #0
40016e30:	ebfff974 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
40016e34:	e3a02002 	mov	r2, #2
40016e38:	e3e01027 	mvn	r1, #39	; 0x27
40016e3c:	e2840074 	add	r0, r4, #116	; 0x74
40016e40:	ebffccda 	bl	4000a1b0 <_txe_event_flags_set>
40016e44:	e3a00004 	mov	r0, #4
40016e48:	e5840000 	str	r0, [r4]
40016e4c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016e50:	e3500000 	cmp	r0, #0
40016e54:	0a000002 	beq	40016e64 <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016e58:	e1d510b6 	ldrh	r1, [r5, #6]
40016e5c:	e5950000 	ldr	r0, [r5]
40016e60:	ebffed96 	bl	400124c0 <CyU3PSysFlushDRegion>
40016e64:	e1d401b0 	ldrh	r0, [r4, #16]
40016e68:	e1a0100d 	mov	r1, sp
40016e6c:	ebfff862 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40016e70:	e59d0000 	ldr	r0, [sp]
40016e74:	e1c401b6 	strh	r0, [r4, #22]
40016e78:	e1d401b4 	ldrh	r0, [r4, #20]
40016e7c:	e28d1018 	add	r1, sp, #24
40016e80:	eb002eba 	bl	40022970 <CyU3PDmaDscrGetConfig>
40016e84:	e5950000 	ldr	r0, [r5]
40016e88:	e58d0018 	str	r0, [sp, #24]
40016e8c:	e1d401b0 	ldrh	r0, [r4, #16]
40016e90:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016e94:	e1810800 	orr	r0, r1, r0, lsl #16
40016e98:	e58d001c 	str	r0, [sp, #28]
40016e9c:	e59d001c 	ldr	r0, [sp, #28]
40016ea0:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016ea4:	e58d001c 	str	r0, [sp, #28]
40016ea8:	e1d401b6 	ldrh	r0, [r4, #22]
40016eac:	e1e01741 	mvn	r1, r1, asr #14
40016eb0:	e1810800 	orr	r0, r1, r0, lsl #16
40016eb4:	e58d0020 	str	r0, [sp, #32]
40016eb8:	e1d500b6 	ldrh	r0, [r5, #6]
40016ebc:	e241100f 	sub	r1, r1, #15
40016ec0:	e0000001 	and	r0, r0, r1
40016ec4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016ec8:	e1d401b4 	ldrh	r0, [r4, #20]
40016ecc:	e28d1018 	add	r1, sp, #24
40016ed0:	eb002ec1 	bl	400229dc <CyU3PDmaDscrSetConfig>
40016ed4:	e59d000c 	ldr	r0, [sp, #12]
40016ed8:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016edc:	e58d000c 	str	r0, [sp, #12]
40016ee0:	e59d000c 	ldr	r0, [sp, #12]
40016ee4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016ee8:	e58d000c 	str	r0, [sp, #12]
40016eec:	e59d000c 	ldr	r0, [sp, #12]
40016ef0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016ef4:	e58d000c 	str	r0, [sp, #12]
40016ef8:	e59d000c 	ldr	r0, [sp, #12]
40016efc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016f00:	e58d000c 	str	r0, [sp, #12]
40016f04:	e3a00001 	mov	r0, #1
40016f08:	e58d0004 	str	r0, [sp, #4]
40016f0c:	e3a00000 	mov	r0, #0
40016f10:	e58d0008 	str	r0, [sp, #8]
40016f14:	e3e00000 	mvn	r0, #0
40016f18:	e58d0010 	str	r0, [sp, #16]
40016f1c:	e59d0014 	ldr	r0, [sp, #20]
40016f20:	e3800001 	orr	r0, r0, #1
40016f24:	e58d0014 	str	r0, [sp, #20]
40016f28:	e59d0014 	ldr	r0, [sp, #20]
40016f2c:	e3c00080 	bic	r0, r0, #128	; 0x80
40016f30:	e58d0014 	str	r0, [sp, #20]
40016f34:	e1d401b4 	ldrh	r0, [r4, #20]
40016f38:	e58d0000 	str	r0, [sp]
40016f3c:	e1d401b0 	ldrh	r0, [r4, #16]
40016f40:	e1a0100d 	mov	r1, sp
40016f44:	ebfff8d6 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40016f48:	e284003c 	add	r0, r4, #60	; 0x3c
40016f4c:	ebffcd64 	bl	4000a4e4 <_txe_mutex_put>
40016f50:	e3a00000 	mov	r0, #0
40016f54:	eaffff80 	b	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016f58:	40080000 	.word	0x40080000
40016f5c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016f60 <CyU3PDmaChannelSetupSendBuffer>:
40016f60:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016f64:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016f68:	e1a04000 	mov	r4, r0
40016f6c:	e1a05001 	mov	r5, r1
40016f70:	e3550000 	cmp	r5, #0
40016f74:	1a000002 	bne	40016f84 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016f78:	e3a00041 	mov	r0, #65	; 0x41
40016f7c:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016f80:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016f84:	e5950000 	ldr	r0, [r5]
40016f88:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016f8c:	3a000005 	bcc	40016fa8 <CyU3PDmaChannelSetupSendBuffer+0x48>
40016f90:	e5950000 	ldr	r0, [r5]
40016f94:	e1d510b4 	ldrh	r1, [r5, #4]
40016f98:	e0800001 	add	r0, r0, r1
40016f9c:	e59f11ec 	ldr	r1, [pc, #492]	; 40017190 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016fa0:	e1500001 	cmp	r0, r1
40016fa4:	3a000001 	bcc	40016fb0 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016fa8:	e3a00040 	mov	r0, #64	; 0x40
40016fac:	eafffff2 	b	40016f7c <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016fb0:	e1d500b4 	ldrh	r0, [r5, #4]
40016fb4:	e59f11d8 	ldr	r1, [pc, #472]	; 40017194 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016fb8:	e1500001 	cmp	r0, r1
40016fbc:	da000001 	ble	40016fc8 <CyU3PDmaChannelSetupSendBuffer+0x68>
40016fc0:	e3a00040 	mov	r0, #64	; 0x40
40016fc4:	eaffffec 	b	40016f7c <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016fc8:	e3e01000 	mvn	r1, #0
40016fcc:	e1a00004 	mov	r0, r4
40016fd0:	ebfff965 	bl	4001556c <CyU3PDmaChannelAcquireLock>
40016fd4:	e1a07000 	mov	r7, r0
40016fd8:	e3570000 	cmp	r7, #0
40016fdc:	0a000001 	beq	40016fe8 <CyU3PDmaChannelSetupSendBuffer+0x88>
40016fe0:	e1a00007 	mov	r0, r7
40016fe4:	eaffffe4 	b	40016f7c <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016fe8:	e1d400b4 	ldrh	r0, [r4, #4]
40016fec:	e3500003 	cmp	r0, #3
40016ff0:	1a000000 	bne	40016ff8 <CyU3PDmaChannelSetupSendBuffer+0x98>
40016ff4:	e3a07046 	mov	r7, #70	; 0x46
40016ff8:	e5940000 	ldr	r0, [r4]
40016ffc:	e3500001 	cmp	r0, #1
40017000:	0a000000 	beq	40017008 <CyU3PDmaChannelSetupSendBuffer+0xa8>
40017004:	e3a07043 	mov	r7, #67	; 0x43
40017008:	e3570000 	cmp	r7, #0
4001700c:	0a000003 	beq	40017020 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40017010:	e284003c 	add	r0, r4, #60	; 0x3c
40017014:	ebffcd32 	bl	4000a4e4 <_txe_mutex_put>
40017018:	e1a00007 	mov	r0, r7
4001701c:	eaffffd6 	b	40016f7c <CyU3PDmaChannelSetupSendBuffer+0x1c>
40017020:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40017024:	e3500000 	cmp	r0, #0
40017028:	0a000005 	beq	40017044 <CyU3PDmaChannelSetupSendBuffer+0xe4>
4001702c:	e1d500b4 	ldrh	r0, [r5, #4]
40017030:	e3500000 	cmp	r0, #0
40017034:	0a000002 	beq	40017044 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40017038:	e1d510b4 	ldrh	r1, [r5, #4]
4001703c:	e5950000 	ldr	r0, [r5]
40017040:	ebffed10 	bl	40012488 <CyU3PSysCleanDRegion>
40017044:	e1d401b2 	ldrh	r0, [r4, #18]
40017048:	ebfff7d3 	bl	40014f9c <CyU3PDmaSocketDisable>
4001704c:	e1d401b2 	ldrh	r0, [r4, #18]
40017050:	e3a01000 	mov	r1, #0
40017054:	ebfff8eb 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
40017058:	e3a02002 	mov	r2, #2
4001705c:	e3e01027 	mvn	r1, #39	; 0x27
40017060:	e2840074 	add	r0, r4, #116	; 0x74
40017064:	ebffcc51 	bl	4000a1b0 <_txe_event_flags_set>
40017068:	e3a00003 	mov	r0, #3
4001706c:	e5840000 	str	r0, [r4]
40017070:	e1d401b2 	ldrh	r0, [r4, #18]
40017074:	e28d1004 	add	r1, sp, #4
40017078:	ebfff7df 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001707c:	e59d0004 	ldr	r0, [sp, #4]
40017080:	e1c401b8 	strh	r0, [r4, #24]
40017084:	e1d401b4 	ldrh	r0, [r4, #20]
40017088:	e28d101c 	add	r1, sp, #28
4001708c:	eb002e37 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017090:	e5950000 	ldr	r0, [r5]
40017094:	e58d001c 	str	r0, [sp, #28]
40017098:	e1d401b2 	ldrh	r0, [r4, #18]
4001709c:	e3800903 	orr	r0, r0, #49152	; 0xc000
400170a0:	e58d0020 	str	r0, [sp, #32]
400170a4:	e59d0020 	ldr	r0, [sp, #32]
400170a8:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
400170ac:	e3800801 	orr	r0, r0, #65536	; 0x10000
400170b0:	e58d0020 	str	r0, [sp, #32]
400170b4:	e1d401b8 	ldrh	r0, [r4, #24]
400170b8:	e2400801 	sub	r0, r0, #65536	; 0x10000
400170bc:	e58d0024 	str	r0, [sp, #36]	; 0x24
400170c0:	e1d500b4 	ldrh	r0, [r5, #4]
400170c4:	e280000f 	add	r0, r0, #15
400170c8:	e59f10c4 	ldr	r1, [pc, #196]	; 40017194 <CyU3PDmaChannelSetupSendBuffer+0x234>
400170cc:	e0006001 	and	r6, r0, r1
400170d0:	e1d500b4 	ldrh	r0, [r5, #4]
400170d4:	e1860800 	orr	r0, r6, r0, lsl #16
400170d8:	e3800008 	orr	r0, r0, #8
400170dc:	e58d0028 	str	r0, [sp, #40]	; 0x28
400170e0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400170e4:	e1d510b8 	ldrh	r1, [r5, #8]
400170e8:	e201100e 	and	r1, r1, #14
400170ec:	e1800001 	orr	r0, r0, r1
400170f0:	e58d0028 	str	r0, [sp, #40]	; 0x28
400170f4:	e1d401b4 	ldrh	r0, [r4, #20]
400170f8:	e28d101c 	add	r1, sp, #28
400170fc:	eb002e36 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017100:	e59d0010 	ldr	r0, [sp, #16]
40017104:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40017108:	e58d0010 	str	r0, [sp, #16]
4001710c:	e59d0010 	ldr	r0, [sp, #16]
40017110:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017114:	e58d0010 	str	r0, [sp, #16]
40017118:	e59d0010 	ldr	r0, [sp, #16]
4001711c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40017120:	e58d0010 	str	r0, [sp, #16]
40017124:	e59d0010 	ldr	r0, [sp, #16]
40017128:	e3c00b01 	bic	r0, r0, #1024	; 0x400
4001712c:	e58d0010 	str	r0, [sp, #16]
40017130:	e59d0010 	ldr	r0, [sp, #16]
40017134:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40017138:	e58d0010 	str	r0, [sp, #16]
4001713c:	e1d500b4 	ldrh	r0, [r5, #4]
40017140:	e58d0008 	str	r0, [sp, #8]
40017144:	e3a00000 	mov	r0, #0
40017148:	e58d000c 	str	r0, [sp, #12]
4001714c:	e3e00000 	mvn	r0, #0
40017150:	e58d0014 	str	r0, [sp, #20]
40017154:	e59d0018 	ldr	r0, [sp, #24]
40017158:	e3800002 	orr	r0, r0, #2
4001715c:	e58d0018 	str	r0, [sp, #24]
40017160:	e59d0018 	ldr	r0, [sp, #24]
40017164:	e3c00080 	bic	r0, r0, #128	; 0x80
40017168:	e58d0018 	str	r0, [sp, #24]
4001716c:	e1d401b4 	ldrh	r0, [r4, #20]
40017170:	e58d0004 	str	r0, [sp, #4]
40017174:	e1d401b2 	ldrh	r0, [r4, #18]
40017178:	e28d1004 	add	r1, sp, #4
4001717c:	ebfff848 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40017180:	e284003c 	add	r0, r4, #60	; 0x3c
40017184:	ebffccd6 	bl	4000a4e4 <_txe_mutex_put>
40017188:	e3a00000 	mov	r0, #0
4001718c:	eaffff7a 	b	40016f7c <CyU3PDmaChannelSetupSendBuffer+0x1c>
40017190:	40080000 	.word	0x40080000
40017194:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40017198 <CyU3PDmaChannelWaitForCompletion>:
40017198:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4001719c:	e1a04000 	mov	r4, r0
400171a0:	e1a05001 	mov	r5, r1
400171a4:	e3a08000 	mov	r8, #0
400171a8:	e1a01005 	mov	r1, r5
400171ac:	e1a00004 	mov	r0, r4
400171b0:	ebfff8ed 	bl	4001556c <CyU3PDmaChannelAcquireLock>
400171b4:	e1a07000 	mov	r7, r0
400171b8:	e3570000 	cmp	r7, #0
400171bc:	0a000001 	beq	400171c8 <CyU3PDmaChannelWaitForCompletion+0x30>
400171c0:	e1a00007 	mov	r0, r7
400171c4:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
400171c8:	e5946000 	ldr	r6, [r4]
400171cc:	e3560001 	cmp	r6, #1
400171d0:	1a00000b 	bne	40017204 <CyU3PDmaChannelWaitForCompletion+0x6c>
400171d4:	e3a03000 	mov	r3, #0
400171d8:	e58d3000 	str	r3, [sp]
400171dc:	e28d3004 	add	r3, sp, #4
400171e0:	e3a02000 	mov	r2, #0
400171e4:	e3a01007 	mov	r1, #7
400171e8:	e2840074 	add	r0, r4, #116	; 0x74
400171ec:	ebffcbbf 	bl	4000a0f0 <_txe_event_flags_get>
400171f0:	e1a07000 	mov	r7, r0
400171f4:	e3570000 	cmp	r7, #0
400171f8:	0a000016 	beq	40017258 <CyU3PDmaChannelWaitForCompletion+0xc0>
400171fc:	e3a07042 	mov	r7, #66	; 0x42
40017200:	ea000014 	b	40017258 <CyU3PDmaChannelWaitForCompletion+0xc0>
40017204:	e3560002 	cmp	r6, #2
40017208:	1a000005 	bne	40017224 <CyU3PDmaChannelWaitForCompletion+0x8c>
4001720c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40017210:	e3500000 	cmp	r0, #0
40017214:	1a000000 	bne	4001721c <CyU3PDmaChannelWaitForCompletion+0x84>
40017218:	e3a07046 	mov	r7, #70	; 0x46
4001721c:	e3a08061 	mov	r8, #97	; 0x61
40017220:	ea00000c 	b	40017258 <CyU3PDmaChannelWaitForCompletion+0xc0>
40017224:	e3560003 	cmp	r6, #3
40017228:	1a000001 	bne	40017234 <CyU3PDmaChannelWaitForCompletion+0x9c>
4001722c:	e3a08062 	mov	r8, #98	; 0x62
40017230:	ea000008 	b	40017258 <CyU3PDmaChannelWaitForCompletion+0xc0>
40017234:	e3560004 	cmp	r6, #4
40017238:	1a000001 	bne	40017244 <CyU3PDmaChannelWaitForCompletion+0xac>
4001723c:	e3a08064 	mov	r8, #100	; 0x64
40017240:	ea000004 	b	40017258 <CyU3PDmaChannelWaitForCompletion+0xc0>
40017244:	e3560005 	cmp	r6, #5
40017248:	1a000001 	bne	40017254 <CyU3PDmaChannelWaitForCompletion+0xbc>
4001724c:	e3a07049 	mov	r7, #73	; 0x49
40017250:	ea000000 	b	40017258 <CyU3PDmaChannelWaitForCompletion+0xc0>
40017254:	e3a07042 	mov	r7, #66	; 0x42
40017258:	e284003c 	add	r0, r4, #60	; 0x3c
4001725c:	ebffcca0 	bl	4000a4e4 <_txe_mutex_put>
40017260:	e3570000 	cmp	r7, #0
40017264:	1a000015 	bne	400172c0 <CyU3PDmaChannelWaitForCompletion+0x128>
40017268:	e3580000 	cmp	r8, #0
4001726c:	0a000013 	beq	400172c0 <CyU3PDmaChannelWaitForCompletion+0x128>
40017270:	e58d5000 	str	r5, [sp]
40017274:	e28d3004 	add	r3, sp, #4
40017278:	e3a02000 	mov	r2, #0
4001727c:	e1a01008 	mov	r1, r8
40017280:	e2840074 	add	r0, r4, #116	; 0x74
40017284:	ebffcb99 	bl	4000a0f0 <_txe_event_flags_get>
40017288:	e1a07000 	mov	r7, r0
4001728c:	e3570000 	cmp	r7, #0
40017290:	0a000001 	beq	4001729c <CyU3PDmaChannelWaitForCompletion+0x104>
40017294:	e3a07045 	mov	r7, #69	; 0x45
40017298:	ea000008 	b	400172c0 <CyU3PDmaChannelWaitForCompletion+0x128>
4001729c:	e59d0004 	ldr	r0, [sp, #4]
400172a0:	e3100040 	tst	r0, #64	; 0x40
400172a4:	0a000001 	beq	400172b0 <CyU3PDmaChannelWaitForCompletion+0x118>
400172a8:	e3a07049 	mov	r7, #73	; 0x49
400172ac:	ea000003 	b	400172c0 <CyU3PDmaChannelWaitForCompletion+0x128>
400172b0:	e59d0004 	ldr	r0, [sp, #4]
400172b4:	e3100020 	tst	r0, #32
400172b8:	0a000000 	beq	400172c0 <CyU3PDmaChannelWaitForCompletion+0x128>
400172bc:	e3a07048 	mov	r7, #72	; 0x48
400172c0:	e1a00007 	mov	r0, r7
400172c4:	eaffffbe 	b	400171c4 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

400172c8 <CyU3PDmaChannelWaitForRecvBuffer>:
400172c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400172cc:	e24dd018 	sub	sp, sp, #24
400172d0:	e1a04000 	mov	r4, r0
400172d4:	e1a05001 	mov	r5, r1
400172d8:	e1a06002 	mov	r6, r2
400172dc:	e3550000 	cmp	r5, #0
400172e0:	1a000002 	bne	400172f0 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
400172e4:	e3a00041 	mov	r0, #65	; 0x41
400172e8:	e28dd018 	add	sp, sp, #24
400172ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400172f0:	e1a01006 	mov	r1, r6
400172f4:	e1a00004 	mov	r0, r4
400172f8:	ebfff89b 	bl	4001556c <CyU3PDmaChannelAcquireLock>
400172fc:	e1a07000 	mov	r7, r0
40017300:	e3570000 	cmp	r7, #0
40017304:	0a000001 	beq	40017310 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40017308:	e1a00007 	mov	r0, r7
4001730c:	eafffff5 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017310:	e1d400b4 	ldrh	r0, [r4, #4]
40017314:	e3500004 	cmp	r0, #4
40017318:	1a000000 	bne	40017320 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
4001731c:	e3a07046 	mov	r7, #70	; 0x46
40017320:	e5948000 	ldr	r8, [r4]
40017324:	e3570000 	cmp	r7, #0
40017328:	1a000034 	bne	40017400 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
4001732c:	e3580004 	cmp	r8, #4
40017330:	1a00001e 	bne	400173b0 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40017334:	e284003c 	add	r0, r4, #60	; 0x3c
40017338:	ebffcc69 	bl	4000a4e4 <_txe_mutex_put>
4001733c:	e58d6000 	str	r6, [sp]
40017340:	e28d3014 	add	r3, sp, #20
40017344:	e3a02000 	mov	r2, #0
40017348:	e3a01064 	mov	r1, #100	; 0x64
4001734c:	e2840074 	add	r0, r4, #116	; 0x74
40017350:	ebffcb66 	bl	4000a0f0 <_txe_event_flags_get>
40017354:	e1a07000 	mov	r7, r0
40017358:	e3570000 	cmp	r7, #0
4001735c:	0a000001 	beq	40017368 <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40017360:	e3a00045 	mov	r0, #69	; 0x45
40017364:	eaffffdf 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017368:	e59d0014 	ldr	r0, [sp, #20]
4001736c:	e3100040 	tst	r0, #64	; 0x40
40017370:	0a000001 	beq	4001737c <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40017374:	e3a00049 	mov	r0, #73	; 0x49
40017378:	eaffffda 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
4001737c:	e59d0014 	ldr	r0, [sp, #20]
40017380:	e3100020 	tst	r0, #32
40017384:	0a000001 	beq	40017390 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40017388:	e3a00048 	mov	r0, #72	; 0x48
4001738c:	eaffffd5 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017390:	e1a01006 	mov	r1, r6
40017394:	e1a00004 	mov	r0, r4
40017398:	ebfff873 	bl	4001556c <CyU3PDmaChannelAcquireLock>
4001739c:	e1a07000 	mov	r7, r0
400173a0:	e3570000 	cmp	r7, #0
400173a4:	0a000015 	beq	40017400 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400173a8:	e1a00007 	mov	r0, r7
400173ac:	eaffffcd 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400173b0:	e3580001 	cmp	r8, #1
400173b4:	1a000010 	bne	400173fc <CyU3PDmaChannelWaitForRecvBuffer+0x134>
400173b8:	e3a03000 	mov	r3, #0
400173bc:	e58d3000 	str	r3, [sp]
400173c0:	e28d3014 	add	r3, sp, #20
400173c4:	e3a02000 	mov	r2, #0
400173c8:	e3a01024 	mov	r1, #36	; 0x24
400173cc:	e2840074 	add	r0, r4, #116	; 0x74
400173d0:	ebffcb46 	bl	4000a0f0 <_txe_event_flags_get>
400173d4:	e1a07000 	mov	r7, r0
400173d8:	e3570000 	cmp	r7, #0
400173dc:	0a000001 	beq	400173e8 <CyU3PDmaChannelWaitForRecvBuffer+0x120>
400173e0:	e3a07047 	mov	r7, #71	; 0x47
400173e4:	ea000005 	b	40017400 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400173e8:	e59d0014 	ldr	r0, [sp, #20]
400173ec:	e3100020 	tst	r0, #32
400173f0:	0a000002 	beq	40017400 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400173f4:	e3a07042 	mov	r7, #66	; 0x42
400173f8:	ea000000 	b	40017400 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400173fc:	e3a07047 	mov	r7, #71	; 0x47
40017400:	e3570000 	cmp	r7, #0
40017404:	0a000003 	beq	40017418 <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40017408:	e284003c 	add	r0, r4, #60	; 0x3c
4001740c:	ebffcc34 	bl	4000a4e4 <_txe_mutex_put>
40017410:	e1a00007 	mov	r0, r7
40017414:	eaffffb3 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017418:	e1d401b4 	ldrh	r0, [r4, #20]
4001741c:	e28d1004 	add	r1, sp, #4
40017420:	eb002d52 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017424:	e59d0004 	ldr	r0, [sp, #4]
40017428:	e5850000 	str	r0, [r5]
4001742c:	e59d0010 	ldr	r0, [sp, #16]
40017430:	e59f1030 	ldr	r1, [pc, #48]	; 40017468 <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40017434:	e0010820 	and	r0, r1, r0, lsr #16
40017438:	e1c500b4 	strh	r0, [r5, #4]
4001743c:	e241100f 	sub	r1, r1, #15
40017440:	e59d0010 	ldr	r0, [sp, #16]
40017444:	e0000001 	and	r0, r0, r1
40017448:	e1c500b6 	strh	r0, [r5, #6]
4001744c:	e59d0010 	ldr	r0, [sp, #16]
40017450:	e200000f 	and	r0, r0, #15
40017454:	e1c500b8 	strh	r0, [r5, #8]
40017458:	e284003c 	add	r0, r4, #60	; 0x3c
4001745c:	ebffcc20 	bl	4000a4e4 <_txe_mutex_put>
40017460:	e3a00000 	mov	r0, #0
40017464:	eaffff9f 	b	400172e8 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017468:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

4001746c <CyU3PDmaConfigureSockets_TypeAuto>:
4001746c:	e92d4010 	push	{r4, lr}
40017470:	e24dd018 	sub	sp, sp, #24
40017474:	e1a04000 	mov	r4, r0
40017478:	e1d401b0 	ldrh	r0, [r4, #16]
4001747c:	ebfff6c6 	bl	40014f9c <CyU3PDmaSocketDisable>
40017480:	e1d401b2 	ldrh	r0, [r4, #18]
40017484:	ebfff6c4 	bl	40014f9c <CyU3PDmaSocketDisable>
40017488:	e1d401b0 	ldrh	r0, [r4, #16]
4001748c:	e1a0100d 	mov	r1, sp
40017490:	ebfff6d9 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40017494:	e1d400bc 	ldrh	r0, [r4, #12]
40017498:	e58d0000 	str	r0, [sp]
4001749c:	e3a00000 	mov	r0, #0
400174a0:	e58d0004 	str	r0, [sp, #4]
400174a4:	e58d0008 	str	r0, [sp, #8]
400174a8:	e3a00646 	mov	r0, #73400320	; 0x4600000
400174ac:	e58d000c 	str	r0, [sp, #12]
400174b0:	e1d401b0 	ldrh	r0, [r4, #16]
400174b4:	eb000df6 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
400174b8:	e3500000 	cmp	r0, #0
400174bc:	0a000002 	beq	400174cc <CyU3PDmaConfigureSockets_TypeAuto+0x60>
400174c0:	e59d000c 	ldr	r0, [sp, #12]
400174c4:	e3800b01 	orr	r0, r0, #1024	; 0x400
400174c8:	e58d000c 	str	r0, [sp, #12]
400174cc:	e3e00000 	mvn	r0, #0
400174d0:	e58d0010 	str	r0, [sp, #16]
400174d4:	e1d400b4 	ldrh	r0, [r4, #4]
400174d8:	e3500001 	cmp	r0, #1
400174dc:	1a000001 	bne	400174e8 <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
400174e0:	e3a00041 	mov	r0, #65	; 0x41
400174e4:	ea000000 	b	400174ec <CyU3PDmaConfigureSockets_TypeAuto+0x80>
400174e8:	e3a00040 	mov	r0, #64	; 0x40
400174ec:	e58d0014 	str	r0, [sp, #20]
400174f0:	e1d401b0 	ldrh	r0, [r4, #16]
400174f4:	e1a0100d 	mov	r1, sp
400174f8:	ebfff769 	bl	400152a4 <CyU3PDmaSocketSetConfig>
400174fc:	e1d401b2 	ldrh	r0, [r4, #18]
40017500:	e1a0100d 	mov	r1, sp
40017504:	ebfff6bc 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40017508:	e1d400bc 	ldrh	r0, [r4, #12]
4001750c:	e58d0000 	str	r0, [sp]
40017510:	e3a00000 	mov	r0, #0
40017514:	e58d0004 	str	r0, [sp, #4]
40017518:	e58d0008 	str	r0, [sp, #8]
4001751c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017520:	e58d000c 	str	r0, [sp, #12]
40017524:	e1d401b2 	ldrh	r0, [r4, #18]
40017528:	eb000dd9 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
4001752c:	e3500000 	cmp	r0, #0
40017530:	0a000002 	beq	40017540 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40017534:	e59d000c 	ldr	r0, [sp, #12]
40017538:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001753c:	e58d000c 	str	r0, [sp, #12]
40017540:	e3e00000 	mvn	r0, #0
40017544:	e58d0010 	str	r0, [sp, #16]
40017548:	e3a000c0 	mov	r0, #192	; 0xc0
4001754c:	e58d0014 	str	r0, [sp, #20]
40017550:	e1d401b2 	ldrh	r0, [r4, #18]
40017554:	e1a0100d 	mov	r1, sp
40017558:	ebfff751 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001755c:	e3a00000 	mov	r0, #0
40017560:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017564:	e28dd018 	add	sp, sp, #24
40017568:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

4001756c <CyU3PDmaConfigureSockets_TypeManual>:
4001756c:	e92d4010 	push	{r4, lr}
40017570:	e24dd018 	sub	sp, sp, #24
40017574:	e1a04000 	mov	r4, r0
40017578:	e1d400b4 	ldrh	r0, [r4, #4]
4001757c:	e3500004 	cmp	r0, #4
40017580:	0a00001f 	beq	40017604 <CyU3PDmaConfigureSockets_TypeManual+0x98>
40017584:	e1d401b0 	ldrh	r0, [r4, #16]
40017588:	ebfff683 	bl	40014f9c <CyU3PDmaSocketDisable>
4001758c:	e1d401b0 	ldrh	r0, [r4, #16]
40017590:	e1a0100d 	mov	r1, sp
40017594:	ebfff698 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40017598:	e1d400bc 	ldrh	r0, [r4, #12]
4001759c:	e58d0000 	str	r0, [sp]
400175a0:	e3a00000 	mov	r0, #0
400175a4:	e58d0004 	str	r0, [sp, #4]
400175a8:	e58d0008 	str	r0, [sp, #8]
400175ac:	e3a00646 	mov	r0, #73400320	; 0x4600000
400175b0:	e58d000c 	str	r0, [sp, #12]
400175b4:	e1d401b0 	ldrh	r0, [r4, #16]
400175b8:	eb000db5 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
400175bc:	e3500000 	cmp	r0, #0
400175c0:	0a000002 	beq	400175d0 <CyU3PDmaConfigureSockets_TypeManual+0x64>
400175c4:	e59d000c 	ldr	r0, [sp, #12]
400175c8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400175cc:	e58d000c 	str	r0, [sp, #12]
400175d0:	e3e00000 	mvn	r0, #0
400175d4:	e58d0010 	str	r0, [sp, #16]
400175d8:	e3a00041 	mov	r0, #65	; 0x41
400175dc:	e58d0014 	str	r0, [sp, #20]
400175e0:	e1d400b4 	ldrh	r0, [r4, #4]
400175e4:	e3500003 	cmp	r0, #3
400175e8:	1a000002 	bne	400175f8 <CyU3PDmaConfigureSockets_TypeManual+0x8c>
400175ec:	e59d0014 	ldr	r0, [sp, #20]
400175f0:	e3800080 	orr	r0, r0, #128	; 0x80
400175f4:	e58d0014 	str	r0, [sp, #20]
400175f8:	e1d401b0 	ldrh	r0, [r4, #16]
400175fc:	e1a0100d 	mov	r1, sp
40017600:	ebfff727 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40017604:	e1d400b4 	ldrh	r0, [r4, #4]
40017608:	e3500003 	cmp	r0, #3
4001760c:	0a000019 	beq	40017678 <CyU3PDmaConfigureSockets_TypeManual+0x10c>
40017610:	e1d401b2 	ldrh	r0, [r4, #18]
40017614:	ebfff660 	bl	40014f9c <CyU3PDmaSocketDisable>
40017618:	e1d401b2 	ldrh	r0, [r4, #18]
4001761c:	e1a0100d 	mov	r1, sp
40017620:	ebfff675 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40017624:	e1d400be 	ldrh	r0, [r4, #14]
40017628:	e58d0000 	str	r0, [sp]
4001762c:	e3a00000 	mov	r0, #0
40017630:	e58d0004 	str	r0, [sp, #4]
40017634:	e58d0008 	str	r0, [sp, #8]
40017638:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
4001763c:	e58d000c 	str	r0, [sp, #12]
40017640:	e1d401b2 	ldrh	r0, [r4, #18]
40017644:	eb000d92 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
40017648:	e3500000 	cmp	r0, #0
4001764c:	0a000002 	beq	4001765c <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017650:	e59d000c 	ldr	r0, [sp, #12]
40017654:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017658:	e58d000c 	str	r0, [sp, #12]
4001765c:	e3e00000 	mvn	r0, #0
40017660:	e58d0010 	str	r0, [sp, #16]
40017664:	e3a000c2 	mov	r0, #194	; 0xc2
40017668:	e58d0014 	str	r0, [sp, #20]
4001766c:	e1d401b2 	ldrh	r0, [r4, #18]
40017670:	e1a0100d 	mov	r1, sp
40017674:	ebfff70a 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40017678:	e3a00000 	mov	r0, #0
4001767c:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017680:	e28dd018 	add	sp, sp, #24
40017684:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

40017688 <CyU3PDmaMultiChannelAcquireLock>:
40017688:	e92d4070 	push	{r4, r5, r6, lr}
4001768c:	e1a04000 	mov	r4, r0
40017690:	e1a05001 	mov	r5, r1
40017694:	e3540000 	cmp	r4, #0
40017698:	1a000001 	bne	400176a4 <CyU3PDmaMultiChannelAcquireLock+0x1c>
4001769c:	e3a00041 	mov	r0, #65	; 0x41
400176a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400176a4:	e5940000 	ldr	r0, [r4]
400176a8:	e3500000 	cmp	r0, #0
400176ac:	1a000001 	bne	400176b8 <CyU3PDmaMultiChannelAcquireLock+0x30>
400176b0:	e3a00044 	mov	r0, #68	; 0x44
400176b4:	eafffff9 	b	400176a0 <CyU3PDmaMultiChannelAcquireLock+0x18>
400176b8:	e1a01005 	mov	r1, r5
400176bc:	e2840078 	add	r0, r4, #120	; 0x78
400176c0:	ebffcb52 	bl	4000a410 <_txe_mutex_get>
400176c4:	e3500000 	cmp	r0, #0
400176c8:	0a000001 	beq	400176d4 <CyU3PDmaMultiChannelAcquireLock+0x4c>
400176cc:	e3a0001d 	mov	r0, #29
400176d0:	eafffff2 	b	400176a0 <CyU3PDmaMultiChannelAcquireLock+0x18>
400176d4:	e3a00000 	mov	r0, #0
400176d8:	eafffff0 	b	400176a0 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

400176dc <CyU3PDmaMultiChannelCommitBuffer>:
400176dc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400176e0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400176e4:	e1a04000 	mov	r4, r0
400176e8:	e1a05001 	mov	r5, r1
400176ec:	e1a06002 	mov	r6, r2
400176f0:	e3e01000 	mvn	r1, #0
400176f4:	e1a00004 	mov	r0, r4
400176f8:	ebffffe2 	bl	40017688 <CyU3PDmaMultiChannelAcquireLock>
400176fc:	e1a0b000 	mov	fp, r0
40017700:	e35b0000 	cmp	fp, #0
40017704:	0a000002 	beq	40017714 <CyU3PDmaMultiChannelCommitBuffer+0x38>
40017708:	e1a0000b 	mov	r0, fp
4001770c:	e28dd03c 	add	sp, sp, #60	; 0x3c
40017710:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40017714:	e1d400b4 	ldrh	r0, [r4, #4]
40017718:	e20070ff 	and	r7, r0, #255	; 0xff
4001771c:	e1d400b6 	ldrh	r0, [r4, #6]
40017720:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017724:	e0400001 	sub	r0, r0, r1
40017728:	e1500005 	cmp	r0, r5
4001772c:	aa000000 	bge	40017734 <CyU3PDmaMultiChannelCommitBuffer+0x58>
40017730:	e3a0b040 	mov	fp, #64	; 0x40
40017734:	e5940000 	ldr	r0, [r4]
40017738:	e3500002 	cmp	r0, #2
4001773c:	0a000000 	beq	40017744 <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017740:	e3a0b042 	mov	fp, #66	; 0x42
40017744:	e5940000 	ldr	r0, [r4]
40017748:	e3500005 	cmp	r0, #5
4001774c:	1a000000 	bne	40017754 <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017750:	e3a0b049 	mov	fp, #73	; 0x49
40017754:	e5940000 	ldr	r0, [r4]
40017758:	e3500007 	cmp	r0, #7
4001775c:	1a000000 	bne	40017764 <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017760:	e3a0b048 	mov	fp, #72	; 0x48
40017764:	e3570006 	cmp	r7, #6
40017768:	1a000000 	bne	40017770 <CyU3PDmaMultiChannelCommitBuffer+0x94>
4001776c:	e3a0b046 	mov	fp, #70	; 0x46
40017770:	e3570005 	cmp	r7, #5
40017774:	1a000034 	bne	4001784c <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017778:	e35b0000 	cmp	fp, #0
4001777c:	1a000032 	bne	4001784c <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017780:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017784:	e28d1024 	add	r1, sp, #36	; 0x24
40017788:	ebfff61b 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001778c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40017790:	e3100702 	tst	r0, #524288	; 0x80000
40017794:	0a000027 	beq	40017838 <CyU3PDmaMultiChannelCommitBuffer+0x15c>
40017798:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001779c:	e1a09800 	lsl	r9, r0, #16
400177a0:	e1a09829 	lsr	r9, r9, #16
400177a4:	e28d1004 	add	r1, sp, #4
400177a8:	e1a00009 	mov	r0, r9
400177ac:	eb002c6f 	bl	40022970 <CyU3PDmaDscrGetConfig>
400177b0:	e59d0010 	ldr	r0, [sp, #16]
400177b4:	e3100008 	tst	r0, #8
400177b8:	0a00001c 	beq	40017830 <CyU3PDmaMultiChannelCommitBuffer+0x154>
400177bc:	e59d0010 	ldr	r0, [sp, #16]
400177c0:	e1a00800 	lsl	r0, r0, #16
400177c4:	e1a00820 	lsr	r0, r0, #16
400177c8:	e58d0010 	str	r0, [sp, #16]
400177cc:	e59d0010 	ldr	r0, [sp, #16]
400177d0:	e1800805 	orr	r0, r0, r5, lsl #16
400177d4:	e58d0010 	str	r0, [sp, #16]
400177d8:	e3560000 	cmp	r6, #0
400177dc:	0a000007 	beq	40017800 <CyU3PDmaMultiChannelCommitBuffer+0x124>
400177e0:	e59d0010 	ldr	r0, [sp, #16]
400177e4:	e3c0000f 	bic	r0, r0, #15
400177e8:	e58d0010 	str	r0, [sp, #16]
400177ec:	e206100e 	and	r1, r6, #14
400177f0:	e3811008 	orr	r1, r1, #8
400177f4:	e59d0010 	ldr	r0, [sp, #16]
400177f8:	e1800001 	orr	r0, r0, r1
400177fc:	e58d0010 	str	r0, [sp, #16]
40017800:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017804:	e3500000 	cmp	r0, #0
40017808:	0a000004 	beq	40017820 <CyU3PDmaMultiChannelCommitBuffer+0x144>
4001780c:	e59d2010 	ldr	r2, [sp, #16]
40017810:	e59f327c 	ldr	r3, [pc, #636]	; 40017a94 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017814:	e0021003 	and	r1, r2, r3
40017818:	e59d0004 	ldr	r0, [sp, #4]
4001781c:	ebffeb19 	bl	40012488 <CyU3PSysCleanDRegion>
40017820:	e28d1004 	add	r1, sp, #4
40017824:	e1a00009 	mov	r0, r9
40017828:	eb002c6b 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001782c:	ea000002 	b	4001783c <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017830:	e3a0b047 	mov	fp, #71	; 0x47
40017834:	ea000000 	b	4001783c <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017838:	e3a0b047 	mov	fp, #71	; 0x47
4001783c:	e2840078 	add	r0, r4, #120	; 0x78
40017840:	ebffcb27 	bl	4000a4e4 <_txe_mutex_put>
40017844:	e1a0000b 	mov	r0, fp
40017848:	eaffffaf 	b	4001770c <CyU3PDmaMultiChannelCommitBuffer+0x30>
4001784c:	e35b0000 	cmp	fp, #0
40017850:	1a00000d 	bne	4001788c <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017854:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017858:	e28d1014 	add	r1, sp, #20
4001785c:	eb002c43 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017860:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017864:	e28d1004 	add	r1, sp, #4
40017868:	eb002c40 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001786c:	e59d0020 	ldr	r0, [sp, #32]
40017870:	e3100008 	tst	r0, #8
40017874:	1a000000 	bne	4001787c <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
40017878:	e3a0b047 	mov	fp, #71	; 0x47
4001787c:	e59d0010 	ldr	r0, [sp, #16]
40017880:	e3100008 	tst	r0, #8
40017884:	0a000000 	beq	4001788c <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017888:	e3a0b047 	mov	fp, #71	; 0x47
4001788c:	e35b0000 	cmp	fp, #0
40017890:	0a000003 	beq	400178a4 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
40017894:	e2840078 	add	r0, r4, #120	; 0x78
40017898:	ebffcb11 	bl	4000a4e4 <_txe_mutex_put>
4001789c:	e1a0000b 	mov	r0, fp
400178a0:	eaffff99 	b	4001770c <CyU3PDmaMultiChannelCommitBuffer+0x30>
400178a4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400178a8:	e3500000 	cmp	r0, #0
400178ac:	0a000004 	beq	400178c4 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
400178b0:	e59d2010 	ldr	r2, [sp, #16]
400178b4:	e59f31d8 	ldr	r3, [pc, #472]	; 40017a94 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400178b8:	e0021003 	and	r1, r2, r3
400178bc:	e59d0004 	ldr	r0, [sp, #4]
400178c0:	ebffeaf0 	bl	40012488 <CyU3PSysCleanDRegion>
400178c4:	e3570009 	cmp	r7, #9
400178c8:	1a00003a 	bne	400179b8 <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
400178cc:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
400178d0:	e3a0a000 	mov	sl, #0
400178d4:	ea00002a 	b	40017984 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
400178d8:	e28d1004 	add	r1, sp, #4
400178dc:	e1a00009 	mov	r0, r9
400178e0:	eb002c22 	bl	40022970 <CyU3PDmaDscrGetConfig>
400178e4:	e284000c 	add	r0, r4, #12
400178e8:	e080008a 	add	r0, r0, sl, lsl #1
400178ec:	e1d000b0 	ldrh	r0, [r0]
400178f0:	e3500000 	cmp	r0, #0
400178f4:	1a00001d 	bne	40017970 <CyU3PDmaMultiChannelCommitBuffer+0x294>
400178f8:	e59d0010 	ldr	r0, [sp, #16]
400178fc:	e59f1190 	ldr	r1, [pc, #400]	; 40017a94 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017900:	e0000001 	and	r0, r0, r1
40017904:	e58d0010 	str	r0, [sp, #16]
40017908:	e59d0010 	ldr	r0, [sp, #16]
4001790c:	e1800805 	orr	r0, r0, r5, lsl #16
40017910:	e58d0010 	str	r0, [sp, #16]
40017914:	e3560000 	cmp	r6, #0
40017918:	1a000005 	bne	40017934 <CyU3PDmaMultiChannelCommitBuffer+0x258>
4001791c:	e59d1020 	ldr	r1, [sp, #32]
40017920:	e201100f 	and	r1, r1, #15
40017924:	e59d0010 	ldr	r0, [sp, #16]
40017928:	e1800001 	orr	r0, r0, r1
4001792c:	e58d0010 	str	r0, [sp, #16]
40017930:	ea000004 	b	40017948 <CyU3PDmaMultiChannelCommitBuffer+0x26c>
40017934:	e206100e 	and	r1, r6, #14
40017938:	e3811008 	orr	r1, r1, #8
4001793c:	e59d0010 	ldr	r0, [sp, #16]
40017940:	e1800001 	orr	r0, r0, r1
40017944:	e58d0010 	str	r0, [sp, #16]
40017948:	e28d1004 	add	r1, sp, #4
4001794c:	e1a00009 	mov	r0, r9
40017950:	eb002c21 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017954:	e59d0008 	ldr	r0, [sp, #8]
40017958:	e1a08900 	lsl	r8, r0, #18
4001795c:	e1a08928 	lsr	r8, r8, #18
40017960:	e3a02001 	mov	r2, #1
40017964:	e1a01009 	mov	r1, r9
40017968:	e1a00008 	mov	r0, r8
4001796c:	ebfff63a 	bl	4001525c <CyU3PDmaSocketSendEvent>
40017970:	e59d000c 	ldr	r0, [sp, #12]
40017974:	e59f111c 	ldr	r1, [pc, #284]	; 40017a98 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017978:	e0019820 	and	r9, r1, r0, lsr #16
4001797c:	e28a0001 	add	r0, sl, #1
40017980:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
40017984:	e1d400ba 	ldrh	r0, [r4, #10]
40017988:	e150000a 	cmp	r0, sl
4001798c:	caffffd1 	bgt	400178d8 <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
40017990:	e59d001c 	ldr	r0, [sp, #28]
40017994:	e59f10fc 	ldr	r1, [pc, #252]	; 40017a98 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017998:	e0010820 	and	r0, r1, r0, lsr #16
4001799c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400179a0:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400179a4:	e28d1014 	add	r1, sp, #20
400179a8:	eb002bf0 	bl	40022970 <CyU3PDmaDscrGetConfig>
400179ac:	e59d001c 	ldr	r0, [sp, #28]
400179b0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400179b4:	ea000032 	b	40017a84 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400179b8:	e59d0010 	ldr	r0, [sp, #16]
400179bc:	e59f10d0 	ldr	r1, [pc, #208]	; 40017a94 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400179c0:	e0000001 	and	r0, r0, r1
400179c4:	e58d0010 	str	r0, [sp, #16]
400179c8:	e59d0010 	ldr	r0, [sp, #16]
400179cc:	e1800805 	orr	r0, r0, r5, lsl #16
400179d0:	e58d0010 	str	r0, [sp, #16]
400179d4:	e3560000 	cmp	r6, #0
400179d8:	1a000005 	bne	400179f4 <CyU3PDmaMultiChannelCommitBuffer+0x318>
400179dc:	e59d1020 	ldr	r1, [sp, #32]
400179e0:	e201100f 	and	r1, r1, #15
400179e4:	e59d0010 	ldr	r0, [sp, #16]
400179e8:	e1800001 	orr	r0, r0, r1
400179ec:	e58d0010 	str	r0, [sp, #16]
400179f0:	ea000004 	b	40017a08 <CyU3PDmaMultiChannelCommitBuffer+0x32c>
400179f4:	e206100e 	and	r1, r6, #14
400179f8:	e3811008 	orr	r1, r1, #8
400179fc:	e59d0010 	ldr	r0, [sp, #16]
40017a00:	e1800001 	orr	r0, r0, r1
40017a04:	e58d0010 	str	r0, [sp, #16]
40017a08:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017a0c:	e28d1004 	add	r1, sp, #4
40017a10:	eb002bf1 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017a14:	e59d0008 	ldr	r0, [sp, #8]
40017a18:	e1a08900 	lsl	r8, r0, #18
40017a1c:	e1a08928 	lsr	r8, r8, #18
40017a20:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
40017a24:	e3a02001 	mov	r2, #1
40017a28:	e1a00008 	mov	r0, r8
40017a2c:	ebfff60a 	bl	4001525c <CyU3PDmaSocketSendEvent>
40017a30:	e3570007 	cmp	r7, #7
40017a34:	1a000009 	bne	40017a60 <CyU3PDmaMultiChannelCommitBuffer+0x384>
40017a38:	e59d000c 	ldr	r0, [sp, #12]
40017a3c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017a40:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017a44:	e28d1004 	add	r1, sp, #4
40017a48:	eb002bc8 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017a4c:	e59d000c 	ldr	r0, [sp, #12]
40017a50:	e59f1040 	ldr	r1, [pc, #64]	; 40017a98 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017a54:	e0010820 	and	r0, r1, r0, lsr #16
40017a58:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017a5c:	ea000008 	b	40017a84 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017a60:	e59d001c 	ldr	r0, [sp, #28]
40017a64:	e59f102c 	ldr	r1, [pc, #44]	; 40017a98 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017a68:	e0010820 	and	r0, r1, r0, lsr #16
40017a6c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017a70:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017a74:	e28d1014 	add	r1, sp, #20
40017a78:	eb002bbc 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017a7c:	e59d001c 	ldr	r0, [sp, #28]
40017a80:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017a84:	e2840078 	add	r0, r4, #120	; 0x78
40017a88:	ebffca95 	bl	4000a4e4 <_txe_mutex_put>
40017a8c:	e3a00000 	mov	r0, #0
40017a90:	eaffff1d 	b	4001770c <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017a94:	0000fff0 	.word	0x0000fff0
40017a98:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

40017a9c <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
40017a9c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017aa0:	e24dd024 	sub	sp, sp, #36	; 0x24
40017aa4:	e1a04000 	mov	r4, r0
40017aa8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017aac:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017ab0:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017ab4:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017ab8:	e1d400b8 	ldrh	r0, [r4, #8]
40017abc:	e1d430ba 	ldrh	r3, [r4, #10]
40017ac0:	e0000093 	mul	r0, r3, r0
40017ac4:	e1a01800 	lsl	r1, r0, #16
40017ac8:	e1a01821 	lsr	r1, r1, #16
40017acc:	e1d420b6 	ldrh	r2, [r4, #6]
40017ad0:	e1a03006 	mov	r3, r6
40017ad4:	e284001c 	add	r0, r4, #28
40017ad8:	eb002ab5 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40017adc:	e1a05000 	mov	r5, r0
40017ae0:	e3550000 	cmp	r5, #0
40017ae4:	0a000002 	beq	40017af4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
40017ae8:	e1a00005 	mov	r0, r5
40017aec:	e28dd024 	add	sp, sp, #36	; 0x24
40017af0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017af4:	e1d400b4 	ldrh	r0, [r4, #4]
40017af8:	e3500005 	cmp	r0, #5
40017afc:	1a00003c 	bne	40017bf4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
40017b00:	e3a07000 	mov	r7, #0
40017b04:	e1d481bc 	ldrh	r8, [r4, #28]
40017b08:	ea000035 	b	40017be4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
40017b0c:	e3a09000 	mov	r9, #0
40017b10:	ea00002e 	b	40017bd0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
40017b14:	e28d1004 	add	r1, sp, #4
40017b18:	e1a00008 	mov	r0, r8
40017b1c:	eb002b93 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017b20:	e3570000 	cmp	r7, #0
40017b24:	1a000003 	bne	40017b38 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
40017b28:	e2840014 	add	r0, r4, #20
40017b2c:	e0800089 	add	r0, r0, r9, lsl #1
40017b30:	e1c080b0 	strh	r8, [r0]
40017b34:	ea000020 	b	40017bbc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
40017b38:	e2841014 	add	r1, r4, #20
40017b3c:	e0811089 	add	r1, r1, r9, lsl #1
40017b40:	e1d100b0 	ldrh	r0, [r1]
40017b44:	e28d1014 	add	r1, sp, #20
40017b48:	eb002b88 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017b4c:	e59d0018 	ldr	r0, [sp, #24]
40017b50:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017b54:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017b58:	e58d0018 	str	r0, [sp, #24]
40017b5c:	e2841024 	add	r1, r4, #36	; 0x24
40017b60:	e0811089 	add	r1, r1, r9, lsl #1
40017b64:	e59d0018 	ldr	r0, [sp, #24]
40017b68:	e1d110b0 	ldrh	r1, [r1]
40017b6c:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017b70:	e1821801 	orr	r1, r2, r1, lsl #16
40017b74:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017b78:	e1800001 	orr	r0, r0, r1
40017b7c:	e58d0018 	str	r0, [sp, #24]
40017b80:	e59d001c 	ldr	r0, [sp, #28]
40017b84:	e1a00800 	lsl	r0, r0, #16
40017b88:	e1a00820 	lsr	r0, r0, #16
40017b8c:	e58d001c 	str	r0, [sp, #28]
40017b90:	e59d001c 	ldr	r0, [sp, #28]
40017b94:	e1800808 	orr	r0, r0, r8, lsl #16
40017b98:	e58d001c 	str	r0, [sp, #28]
40017b9c:	e2841014 	add	r1, r4, #20
40017ba0:	e0811089 	add	r1, r1, r9, lsl #1
40017ba4:	e1d100b0 	ldrh	r0, [r1]
40017ba8:	e28d1014 	add	r1, sp, #20
40017bac:	eb002b8a 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017bb0:	e2840014 	add	r0, r4, #20
40017bb4:	e0800089 	add	r0, r0, r9, lsl #1
40017bb8:	e1c080b0 	strh	r8, [r0]
40017bbc:	e59d000c 	ldr	r0, [sp, #12]
40017bc0:	e1a08800 	lsl	r8, r0, #16
40017bc4:	e1a08828 	lsr	r8, r8, #16
40017bc8:	e2890001 	add	r0, r9, #1
40017bcc:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017bd0:	e1d400ba 	ldrh	r0, [r4, #10]
40017bd4:	e1500009 	cmp	r0, r9
40017bd8:	caffffcd 	bgt	40017b14 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017bdc:	e2870001 	add	r0, r7, #1
40017be0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017be4:	e1d400b8 	ldrh	r0, [r4, #8]
40017be8:	e1500007 	cmp	r0, r7
40017bec:	aaffffc6 	bge	40017b0c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017bf0:	ea000056 	b	40017d50 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017bf4:	e3a07000 	mov	r7, #0
40017bf8:	e1d481bc 	ldrh	r8, [r4, #28]
40017bfc:	ea000050 	b	40017d44 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
40017c00:	e3a09000 	mov	r9, #0
40017c04:	ea000049 	b	40017d30 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
40017c08:	e3570000 	cmp	r7, #0
40017c0c:	1a00000d 	bne	40017c48 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
40017c10:	e3a06cff 	mov	r6, #65280	; 0xff00
40017c14:	e2840024 	add	r0, r4, #36	; 0x24
40017c18:	e0800089 	add	r0, r0, r9, lsl #1
40017c1c:	e1d000b0 	ldrh	r0, [r0]
40017c20:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017c24:	e1810800 	orr	r0, r1, r0, lsl #16
40017c28:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017c2c:	e1866000 	orr	r6, r6, r0
40017c30:	e1d410b8 	ldrh	r1, [r4, #8]
40017c34:	e2842014 	add	r2, r4, #20
40017c38:	e0820089 	add	r0, r2, r9, lsl #1
40017c3c:	e1a03006 	mov	r3, r6
40017c40:	e3a02000 	mov	r2, #0
40017c44:	eb002a5a 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40017c48:	e2841014 	add	r1, r4, #20
40017c4c:	e0811089 	add	r1, r1, r9, lsl #1
40017c50:	e1d100b0 	ldrh	r0, [r1]
40017c54:	e28d1014 	add	r1, sp, #20
40017c58:	eb002b44 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017c5c:	e28d1004 	add	r1, sp, #4
40017c60:	e1a00008 	mov	r0, r8
40017c64:	eb002b41 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017c68:	e59d0004 	ldr	r0, [sp, #4]
40017c6c:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017c70:	e0800001 	add	r0, r0, r1
40017c74:	e58d0014 	str	r0, [sp, #20]
40017c78:	e59d0010 	ldr	r0, [sp, #16]
40017c7c:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017c80:	e0400001 	sub	r0, r0, r1
40017c84:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017c88:	e0400001 	sub	r0, r0, r1
40017c8c:	e58d0020 	str	r0, [sp, #32]
40017c90:	e2841014 	add	r1, r4, #20
40017c94:	e0811089 	add	r1, r1, r9, lsl #1
40017c98:	e1d100b0 	ldrh	r0, [r1]
40017c9c:	e28d1014 	add	r1, sp, #20
40017ca0:	eb002b4d 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017ca4:	e59d0004 	ldr	r0, [sp, #4]
40017ca8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017cac:	e0800001 	add	r0, r0, r1
40017cb0:	e58d0004 	str	r0, [sp, #4]
40017cb4:	e1d400b6 	ldrh	r0, [r4, #6]
40017cb8:	e280000f 	add	r0, r0, #15
40017cbc:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017cc0:	e0400001 	sub	r0, r0, r1
40017cc4:	e59f10b4 	ldr	r1, [pc, #180]	; 40017d80 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
40017cc8:	e0000001 	and	r0, r0, r1
40017ccc:	e58d0010 	str	r0, [sp, #16]
40017cd0:	e59d000c 	ldr	r0, [sp, #12]
40017cd4:	e1a00800 	lsl	r0, r0, #16
40017cd8:	e1a00820 	lsr	r0, r0, #16
40017cdc:	e58d000c 	str	r0, [sp, #12]
40017ce0:	e2841014 	add	r1, r4, #20
40017ce4:	e0811089 	add	r1, r1, r9, lsl #1
40017ce8:	e59d000c 	ldr	r0, [sp, #12]
40017cec:	e1d110b0 	ldrh	r1, [r1]
40017cf0:	e1800801 	orr	r0, r0, r1, lsl #16
40017cf4:	e58d000c 	str	r0, [sp, #12]
40017cf8:	e28d1004 	add	r1, sp, #4
40017cfc:	e1a00008 	mov	r0, r8
40017d00:	eb002b35 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017d04:	e59d000c 	ldr	r0, [sp, #12]
40017d08:	e1a08800 	lsl	r8, r0, #16
40017d0c:	e1a08828 	lsr	r8, r8, #16
40017d10:	e59d001c 	ldr	r0, [sp, #28]
40017d14:	e59f1068 	ldr	r1, [pc, #104]	; 40017d84 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017d18:	e0010820 	and	r0, r1, r0, lsr #16
40017d1c:	e2841014 	add	r1, r4, #20
40017d20:	e0811089 	add	r1, r1, r9, lsl #1
40017d24:	e1c100b0 	strh	r0, [r1]
40017d28:	e2890001 	add	r0, r9, #1
40017d2c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017d30:	e1d400ba 	ldrh	r0, [r4, #10]
40017d34:	e1500009 	cmp	r0, r9
40017d38:	caffffb2 	bgt	40017c08 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017d3c:	e2870001 	add	r0, r7, #1
40017d40:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017d44:	e1d400b8 	ldrh	r0, [r4, #8]
40017d48:	e1500007 	cmp	r0, r7
40017d4c:	caffffab 	bgt	40017c00 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017d50:	e1a00004 	mov	r0, r4
40017d54:	eb000509 	bl	40019180 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017d58:	e1d401b4 	ldrh	r0, [r4, #20]
40017d5c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017d60:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017d64:	e1d401bc 	ldrh	r0, [r4, #28]
40017d68:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017d6c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017d70:	e2840034 	add	r0, r4, #52	; 0x34
40017d74:	eb002a85 	bl	40022790 <CyU3PDmaDscrGet>
40017d78:	e3a00000 	mov	r0, #0
40017d7c:	eaffff5a 	b	40017aec <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017d80:	0000fff0 	.word	0x0000fff0
40017d84:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

40017d88 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
40017d88:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017d8c:	e24dd024 	sub	sp, sp, #36	; 0x24
40017d90:	e1a04000 	mov	r4, r0
40017d94:	e3a06cff 	mov	r6, #65280	; 0xff00
40017d98:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017d9c:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017da0:	e1810800 	orr	r0, r1, r0, lsl #16
40017da4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017da8:	e1866000 	orr	r6, r6, r0
40017dac:	e1d400b8 	ldrh	r0, [r4, #8]
40017db0:	e1d430ba 	ldrh	r3, [r4, #10]
40017db4:	e0000093 	mul	r0, r3, r0
40017db8:	e1a01800 	lsl	r1, r0, #16
40017dbc:	e1a01821 	lsr	r1, r1, #16
40017dc0:	e1d420b6 	ldrh	r2, [r4, #6]
40017dc4:	e1a03006 	mov	r3, r6
40017dc8:	e2840014 	add	r0, r4, #20
40017dcc:	eb0029f8 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40017dd0:	e1a05000 	mov	r5, r0
40017dd4:	e3550000 	cmp	r5, #0
40017dd8:	0a000002 	beq	40017de8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017ddc:	e1a00005 	mov	r0, r5
40017de0:	e28dd024 	add	sp, sp, #36	; 0x24
40017de4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017de8:	e1d400b4 	ldrh	r0, [r4, #4]
40017dec:	e3500006 	cmp	r0, #6
40017df0:	1a00003a 	bne	40017ee0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017df4:	e3a07000 	mov	r7, #0
40017df8:	e1d481b4 	ldrh	r8, [r4, #20]
40017dfc:	ea000033 	b	40017ed0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
40017e00:	e3a09000 	mov	r9, #0
40017e04:	ea00002c 	b	40017ebc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017e08:	e28d1014 	add	r1, sp, #20
40017e0c:	e1a00008 	mov	r0, r8
40017e10:	eb002ad6 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017e14:	e3570000 	cmp	r7, #0
40017e18:	1a000003 	bne	40017e2c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017e1c:	e284001c 	add	r0, r4, #28
40017e20:	e0800089 	add	r0, r0, r9, lsl #1
40017e24:	e1c080b0 	strh	r8, [r0]
40017e28:	ea00001e 	b	40017ea8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017e2c:	e284101c 	add	r1, r4, #28
40017e30:	e0811089 	add	r1, r1, r9, lsl #1
40017e34:	e1d100b0 	ldrh	r0, [r1]
40017e38:	e28d1004 	add	r1, sp, #4
40017e3c:	eb002acb 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017e40:	e59d0008 	ldr	r0, [sp, #8]
40017e44:	e1a00720 	lsr	r0, r0, #14
40017e48:	e1a00700 	lsl	r0, r0, #14
40017e4c:	e58d0008 	str	r0, [sp, #8]
40017e50:	e284102c 	add	r1, r4, #44	; 0x2c
40017e54:	e0811089 	add	r1, r1, r9, lsl #1
40017e58:	e59d0008 	ldr	r0, [sp, #8]
40017e5c:	e1d110b0 	ldrh	r1, [r1]
40017e60:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017e64:	e1800001 	orr	r0, r0, r1
40017e68:	e58d0008 	str	r0, [sp, #8]
40017e6c:	e59d000c 	ldr	r0, [sp, #12]
40017e70:	e1a00820 	lsr	r0, r0, #16
40017e74:	e1a00800 	lsl	r0, r0, #16
40017e78:	e58d000c 	str	r0, [sp, #12]
40017e7c:	e59d000c 	ldr	r0, [sp, #12]
40017e80:	e1800008 	orr	r0, r0, r8
40017e84:	e58d000c 	str	r0, [sp, #12]
40017e88:	e284101c 	add	r1, r4, #28
40017e8c:	e0811089 	add	r1, r1, r9, lsl #1
40017e90:	e1d100b0 	ldrh	r0, [r1]
40017e94:	e28d1004 	add	r1, sp, #4
40017e98:	eb002acf 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017e9c:	e284001c 	add	r0, r4, #28
40017ea0:	e0800089 	add	r0, r0, r9, lsl #1
40017ea4:	e1c080b0 	strh	r8, [r0]
40017ea8:	e59d001c 	ldr	r0, [sp, #28]
40017eac:	e59f11c4 	ldr	r1, [pc, #452]	; 40018078 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017eb0:	e0018820 	and	r8, r1, r0, lsr #16
40017eb4:	e2890001 	add	r0, r9, #1
40017eb8:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017ebc:	e1d400ba 	ldrh	r0, [r4, #10]
40017ec0:	e1500009 	cmp	r0, r9
40017ec4:	caffffcf 	bgt	40017e08 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017ec8:	e2870001 	add	r0, r7, #1
40017ecc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017ed0:	e1d400b8 	ldrh	r0, [r4, #8]
40017ed4:	e1500007 	cmp	r0, r7
40017ed8:	aaffffc8 	bge	40017e00 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017edc:	ea000059 	b	40018048 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017ee0:	e3a07000 	mov	r7, #0
40017ee4:	e1d481b4 	ldrh	r8, [r4, #20]
40017ee8:	ea000053 	b	4001803c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017eec:	e3a09000 	mov	r9, #0
40017ef0:	ea00004c 	b	40018028 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017ef4:	e3570000 	cmp	r7, #0
40017ef8:	1a00000b 	bne	40017f2c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017efc:	e284002c 	add	r0, r4, #44	; 0x2c
40017f00:	e0800089 	add	r0, r0, r9, lsl #1
40017f04:	e1d000b0 	ldrh	r0, [r0]
40017f08:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017f0c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017f10:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017f14:	e1d410b8 	ldrh	r1, [r4, #8]
40017f18:	e284201c 	add	r2, r4, #28
40017f1c:	e0820089 	add	r0, r2, r9, lsl #1
40017f20:	e1a03006 	mov	r3, r6
40017f24:	e3a02000 	mov	r2, #0
40017f28:	eb0029a1 	bl	400225b4 <CyU3PDmaDscrChainCreate>
40017f2c:	e284101c 	add	r1, r4, #28
40017f30:	e0811089 	add	r1, r1, r9, lsl #1
40017f34:	e1d100b0 	ldrh	r0, [r1]
40017f38:	e28d1004 	add	r1, sp, #4
40017f3c:	eb002a8b 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017f40:	e28d1014 	add	r1, sp, #20
40017f44:	e1a00008 	mov	r0, r8
40017f48:	eb002a88 	bl	40022970 <CyU3PDmaDscrGetConfig>
40017f4c:	e59d0014 	ldr	r0, [sp, #20]
40017f50:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017f54:	e0800001 	add	r0, r0, r1
40017f58:	e58d0004 	str	r0, [sp, #4]
40017f5c:	e1d400b6 	ldrh	r0, [r4, #6]
40017f60:	e280000f 	add	r0, r0, #15
40017f64:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017f68:	e0400001 	sub	r0, r0, r1
40017f6c:	e59f1108 	ldr	r1, [pc, #264]	; 4001807c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017f70:	e0000001 	and	r0, r0, r1
40017f74:	e58d0010 	str	r0, [sp, #16]
40017f78:	e59d000c 	ldr	r0, [sp, #12]
40017f7c:	e1a00800 	lsl	r0, r0, #16
40017f80:	e1a00820 	lsr	r0, r0, #16
40017f84:	e58d000c 	str	r0, [sp, #12]
40017f88:	e59d000c 	ldr	r0, [sp, #12]
40017f8c:	e1800808 	orr	r0, r0, r8, lsl #16
40017f90:	e58d000c 	str	r0, [sp, #12]
40017f94:	e284101c 	add	r1, r4, #28
40017f98:	e0811089 	add	r1, r1, r9, lsl #1
40017f9c:	e1d100b0 	ldrh	r0, [r1]
40017fa0:	e28d1004 	add	r1, sp, #4
40017fa4:	eb002a8c 	bl	400229dc <CyU3PDmaDscrSetConfig>
40017fa8:	e59d0014 	ldr	r0, [sp, #20]
40017fac:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017fb0:	e0800001 	add	r0, r0, r1
40017fb4:	e58d0014 	str	r0, [sp, #20]
40017fb8:	e1d400b6 	ldrh	r0, [r4, #6]
40017fbc:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017fc0:	e0400001 	sub	r0, r0, r1
40017fc4:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017fc8:	e0400001 	sub	r0, r0, r1
40017fcc:	e58d0020 	str	r0, [sp, #32]
40017fd0:	e59d001c 	ldr	r0, [sp, #28]
40017fd4:	e1a00820 	lsr	r0, r0, #16
40017fd8:	e1a00800 	lsl	r0, r0, #16
40017fdc:	e58d001c 	str	r0, [sp, #28]
40017fe0:	e284101c 	add	r1, r4, #28
40017fe4:	e0811089 	add	r1, r1, r9, lsl #1
40017fe8:	e59d001c 	ldr	r0, [sp, #28]
40017fec:	e1d110b0 	ldrh	r1, [r1]
40017ff0:	e1800001 	orr	r0, r0, r1
40017ff4:	e58d001c 	str	r0, [sp, #28]
40017ff8:	e28d1014 	add	r1, sp, #20
40017ffc:	e1a00008 	mov	r0, r8
40018000:	eb002a75 	bl	400229dc <CyU3PDmaDscrSetConfig>
40018004:	e59d001c 	ldr	r0, [sp, #28]
40018008:	e59f1068 	ldr	r1, [pc, #104]	; 40018078 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
4001800c:	e0018820 	and	r8, r1, r0, lsr #16
40018010:	e284101c 	add	r1, r4, #28
40018014:	e0811089 	add	r1, r1, r9, lsl #1
40018018:	e59d000c 	ldr	r0, [sp, #12]
4001801c:	e1c100b0 	strh	r0, [r1]
40018020:	e2890001 	add	r0, r9, #1
40018024:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40018028:	e1d400ba 	ldrh	r0, [r4, #10]
4001802c:	e1500009 	cmp	r0, r9
40018030:	caffffaf 	bgt	40017ef4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40018034:	e2870001 	add	r0, r7, #1
40018038:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001803c:	e1d400b8 	ldrh	r0, [r4, #8]
40018040:	e1500007 	cmp	r0, r7
40018044:	caffffa8 	bgt	40017eec <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40018048:	e1d401b4 	ldrh	r0, [r4, #20]
4001804c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018050:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018054:	e1d401bc 	ldrh	r0, [r4, #28]
40018058:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001805c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018060:	e2840034 	add	r0, r4, #52	; 0x34
40018064:	eb0029c9 	bl	40022790 <CyU3PDmaDscrGet>
40018068:	e1a00004 	mov	r0, r4
4001806c:	eb0004a3 	bl	40019300 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40018070:	e3a00000 	mov	r0, #0
40018074:	eaffff59 	b	40017de0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40018078:	0000ffff 	.word	0x0000ffff
4001807c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40018080 <CyU3PDmaMultiChannelCreate>:
40018080:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40018084:	e1a04000 	mov	r4, r0
40018088:	e1a05001 	mov	r5, r1
4001808c:	e1a06002 	mov	r6, r2
40018090:	e3560000 	cmp	r6, #0
40018094:	1a000001 	bne	400180a0 <CyU3PDmaMultiChannelCreate+0x20>
40018098:	e3a00041 	mov	r0, #65	; 0x41
4001809c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400180a0:	e3540000 	cmp	r4, #0
400180a4:	1a000001 	bne	400180b0 <CyU3PDmaMultiChannelCreate+0x30>
400180a8:	e3a00041 	mov	r0, #65	; 0x41
400180ac:	eafffffa 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400180b0:	e1d600b2 	ldrh	r0, [r6, #2]
400180b4:	e3500000 	cmp	r0, #0
400180b8:	1a000001 	bne	400180c4 <CyU3PDmaMultiChannelCreate+0x44>
400180bc:	e3a00040 	mov	r0, #64	; 0x40
400180c0:	eafffff5 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400180c4:	e1d600b4 	ldrh	r0, [r6, #4]
400180c8:	e3500002 	cmp	r0, #2
400180cc:	ba000002 	blt	400180dc <CyU3PDmaMultiChannelCreate+0x5c>
400180d0:	e1d600b4 	ldrh	r0, [r6, #4]
400180d4:	e3500004 	cmp	r0, #4
400180d8:	da000001 	ble	400180e4 <CyU3PDmaMultiChannelCreate+0x64>
400180dc:	e3a00040 	mov	r0, #64	; 0x40
400180e0:	eaffffed 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400180e4:	e3550006 	cmp	r5, #6
400180e8:	0a000001 	beq	400180f4 <CyU3PDmaMultiChannelCreate+0x74>
400180ec:	e3550005 	cmp	r5, #5
400180f0:	1a000007 	bne	40018114 <CyU3PDmaMultiChannelCreate+0x94>
400180f4:	eb0029dd 	bl	40022870 <CyU3PDmaDscrGetFreeCount>
400180f8:	e1d610b2 	ldrh	r1, [r6, #2]
400180fc:	e1d620b4 	ldrh	r2, [r6, #4]
40018100:	e0010192 	mul	r1, r2, r1
40018104:	e1500001 	cmp	r0, r1
40018108:	ca000016 	bgt	40018168 <CyU3PDmaMultiChannelCreate+0xe8>
4001810c:	e3a00010 	mov	r0, #16
40018110:	eaffffe1 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018114:	e3550008 	cmp	r5, #8
40018118:	0a000001 	beq	40018124 <CyU3PDmaMultiChannelCreate+0xa4>
4001811c:	e3550007 	cmp	r5, #7
40018120:	1a000007 	bne	40018144 <CyU3PDmaMultiChannelCreate+0xc4>
40018124:	eb0029d1 	bl	40022870 <CyU3PDmaDscrGetFreeCount>
40018128:	e1d610b2 	ldrh	r1, [r6, #2]
4001812c:	e1d620b4 	ldrh	r2, [r6, #4]
40018130:	e0010192 	mul	r1, r2, r1
40018134:	e1500081 	cmp	r0, r1, lsl #1
40018138:	ca00000a 	bgt	40018168 <CyU3PDmaMultiChannelCreate+0xe8>
4001813c:	e3a00010 	mov	r0, #16
40018140:	eaffffd5 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018144:	eb0029c9 	bl	40022870 <CyU3PDmaDscrGetFreeCount>
40018148:	e1d610b2 	ldrh	r1, [r6, #2]
4001814c:	e1d620b4 	ldrh	r2, [r6, #4]
40018150:	e2822001 	add	r2, r2, #1
40018154:	e0010192 	mul	r1, r2, r1
40018158:	e1500001 	cmp	r0, r1
4001815c:	ca000001 	bgt	40018168 <CyU3PDmaMultiChannelCreate+0xe8>
40018160:	e3a00010 	mov	r0, #16
40018164:	eaffffcc 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018168:	e1d600b0 	ldrh	r0, [r6]
4001816c:	e3500000 	cmp	r0, #0
40018170:	0a000003 	beq	40018184 <CyU3PDmaMultiChannelCreate+0x104>
40018174:	e1d600b0 	ldrh	r0, [r6]
40018178:	e59f1634 	ldr	r1, [pc, #1588]	; 400187b4 <CyU3PDmaMultiChannelCreate+0x734>
4001817c:	e1500001 	cmp	r0, r1
40018180:	da000001 	ble	4001818c <CyU3PDmaMultiChannelCreate+0x10c>
40018184:	e3a00040 	mov	r0, #64	; 0x40
40018188:	eaffffc3 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
4001818c:	e3550005 	cmp	r5, #5
40018190:	0a000001 	beq	4001819c <CyU3PDmaMultiChannelCreate+0x11c>
40018194:	e3550006 	cmp	r5, #6
40018198:	1a000004 	bne	400181b0 <CyU3PDmaMultiChannelCreate+0x130>
4001819c:	e1d600b0 	ldrh	r0, [r6]
400181a0:	e310000f 	tst	r0, #15
400181a4:	0a00000b 	beq	400181d8 <CyU3PDmaMultiChannelCreate+0x158>
400181a8:	e3a00040 	mov	r0, #64	; 0x40
400181ac:	eaffffba 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400181b0:	e1d600b0 	ldrh	r0, [r6]
400181b4:	e1d611b8 	ldrh	r1, [r6, #24]
400181b8:	e0400001 	sub	r0, r0, r1
400181bc:	e1d611ba 	ldrh	r1, [r6, #26]
400181c0:	e0400001 	sub	r0, r0, r1
400181c4:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
400181c8:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
400181cc:	0a000001 	beq	400181d8 <CyU3PDmaMultiChannelCreate+0x158>
400181d0:	e3a00040 	mov	r0, #64	; 0x40
400181d4:	eaffffb0 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400181d8:	e5d6001e 	ldrb	r0, [r6, #30]
400181dc:	e3500002 	cmp	r0, #2
400181e0:	ba000001 	blt	400181ec <CyU3PDmaMultiChannelCreate+0x16c>
400181e4:	e3a00040 	mov	r0, #64	; 0x40
400181e8:	eaffffab 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400181ec:	e3550005 	cmp	r5, #5
400181f0:	0a000001 	beq	400181fc <CyU3PDmaMultiChannelCreate+0x17c>
400181f4:	e3550007 	cmp	r5, #7
400181f8:	1a000065 	bne	40018394 <CyU3PDmaMultiChannelCreate+0x314>
400181fc:	e1d601b6 	ldrh	r0, [r6, #22]
40018200:	e3500000 	cmp	r0, #0
40018204:	0a000008 	beq	4001822c <CyU3PDmaMultiChannelCreate+0x1ac>
40018208:	e1d601b6 	ldrh	r0, [r6, #22]
4001820c:	e1d610b2 	ldrh	r1, [r6, #2]
40018210:	e1500001 	cmp	r0, r1
40018214:	aa000002 	bge	40018224 <CyU3PDmaMultiChannelCreate+0x1a4>
40018218:	e1d600b2 	ldrh	r0, [r6, #2]
4001821c:	e350001f 	cmp	r0, #31
40018220:	da000001 	ble	4001822c <CyU3PDmaMultiChannelCreate+0x1ac>
40018224:	e3a00040 	mov	r0, #64	; 0x40
40018228:	eaffff9b 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
4001822c:	e3a09000 	mov	r9, #0
40018230:	ea00002b 	b	400182e4 <CyU3PDmaMultiChannelCreate+0x264>
40018234:	e2860006 	add	r0, r6, #6
40018238:	e0800089 	add	r0, r0, r9, lsl #1
4001823c:	e1d000b0 	ldrh	r0, [r0]
40018240:	e3a0103f 	mov	r1, #63	; 0x3f
40018244:	e0018440 	and	r8, r1, r0, asr #8
40018248:	e2860006 	add	r0, r6, #6
4001824c:	e0800089 	add	r0, r0, r9, lsl #1
40018250:	e1d000b0 	ldrh	r0, [r0]
40018254:	e20070ff 	and	r7, r0, #255	; 0xff
40018258:	e2861006 	add	r1, r6, #6
4001825c:	e0811089 	add	r1, r1, r9, lsl #1
40018260:	e1d100b0 	ldrh	r0, [r1]
40018264:	ebfff3c4 	bl	4001517c <CyU3PDmaSocketIsValidProducer>
40018268:	e3500000 	cmp	r0, #0
4001826c:	1a000001 	bne	40018278 <CyU3PDmaMultiChannelCreate+0x1f8>
40018270:	e3a00040 	mov	r0, #64	; 0x40
40018274:	eaffff88 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018278:	e59f0538 	ldr	r0, [pc, #1336]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
4001827c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018280:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018284:	e3500000 	cmp	r0, #0
40018288:	0a000001 	beq	40018294 <CyU3PDmaMultiChannelCreate+0x214>
4001828c:	e3a00040 	mov	r0, #64	; 0x40
40018290:	eaffff81 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018294:	e2890001 	add	r0, r9, #1
40018298:	e200a0ff 	and	sl, r0, #255	; 0xff
4001829c:	ea00000b 	b	400182d0 <CyU3PDmaMultiChannelCreate+0x250>
400182a0:	e2860006 	add	r0, r6, #6
400182a4:	e0800089 	add	r0, r0, r9, lsl #1
400182a8:	e1d000b0 	ldrh	r0, [r0]
400182ac:	e2861006 	add	r1, r6, #6
400182b0:	e081108a 	add	r1, r1, sl, lsl #1
400182b4:	e1d110b0 	ldrh	r1, [r1]
400182b8:	e1500001 	cmp	r0, r1
400182bc:	1a000001 	bne	400182c8 <CyU3PDmaMultiChannelCreate+0x248>
400182c0:	e3a00040 	mov	r0, #64	; 0x40
400182c4:	eaffff74 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400182c8:	e28a0001 	add	r0, sl, #1
400182cc:	e200a0ff 	and	sl, r0, #255	; 0xff
400182d0:	e1d600b4 	ldrh	r0, [r6, #4]
400182d4:	e150000a 	cmp	r0, sl
400182d8:	cafffff0 	bgt	400182a0 <CyU3PDmaMultiChannelCreate+0x220>
400182dc:	e2890001 	add	r0, r9, #1
400182e0:	e20090ff 	and	r9, r0, #255	; 0xff
400182e4:	e1d600b4 	ldrh	r0, [r6, #4]
400182e8:	e1500009 	cmp	r0, r9
400182ec:	caffffd0 	bgt	40018234 <CyU3PDmaMultiChannelCreate+0x1b4>
400182f0:	e1d600be 	ldrh	r0, [r6, #14]
400182f4:	e3a0103f 	mov	r1, #63	; 0x3f
400182f8:	e0018440 	and	r8, r1, r0, asr #8
400182fc:	e1d600be 	ldrh	r0, [r6, #14]
40018300:	e20070ff 	and	r7, r0, #255	; 0xff
40018304:	e1d600be 	ldrh	r0, [r6, #14]
40018308:	ebfff363 	bl	4001509c <CyU3PDmaSocketIsValidConsumer>
4001830c:	e3500000 	cmp	r0, #0
40018310:	1a000001 	bne	4001831c <CyU3PDmaMultiChannelCreate+0x29c>
40018314:	e3a00040 	mov	r0, #64	; 0x40
40018318:	eaffff5f 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
4001831c:	e59f0494 	ldr	r0, [pc, #1172]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
40018320:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018324:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018328:	e3500000 	cmp	r0, #0
4001832c:	0a000001 	beq	40018338 <CyU3PDmaMultiChannelCreate+0x2b8>
40018330:	e3a00040 	mov	r0, #64	; 0x40
40018334:	eaffff58 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018338:	e59f0478 	ldr	r0, [pc, #1144]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
4001833c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018340:	e7804107 	str	r4, [r0, r7, lsl #2]
40018344:	e3a09000 	mov	r9, #0
40018348:	ea00000d 	b	40018384 <CyU3PDmaMultiChannelCreate+0x304>
4001834c:	e2860006 	add	r0, r6, #6
40018350:	e0800089 	add	r0, r0, r9, lsl #1
40018354:	e1d000b0 	ldrh	r0, [r0]
40018358:	e3a0103f 	mov	r1, #63	; 0x3f
4001835c:	e0018440 	and	r8, r1, r0, asr #8
40018360:	e2860006 	add	r0, r6, #6
40018364:	e0800089 	add	r0, r0, r9, lsl #1
40018368:	e1d000b0 	ldrh	r0, [r0]
4001836c:	e20070ff 	and	r7, r0, #255	; 0xff
40018370:	e59f0440 	ldr	r0, [pc, #1088]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
40018374:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018378:	e7804107 	str	r4, [r0, r7, lsl #2]
4001837c:	e2890001 	add	r0, r9, #1
40018380:	e20090ff 	and	r9, r0, #255	; 0xff
40018384:	e1d600b4 	ldrh	r0, [r6, #4]
40018388:	e1500009 	cmp	r0, r9
4001838c:	caffffee 	bgt	4001834c <CyU3PDmaMultiChannelCreate+0x2cc>
40018390:	ea00005d 	b	4001850c <CyU3PDmaMultiChannelCreate+0x48c>
40018394:	e1d601b6 	ldrh	r0, [r6, #22]
40018398:	e3500000 	cmp	r0, #0
4001839c:	0a000001 	beq	400183a8 <CyU3PDmaMultiChannelCreate+0x328>
400183a0:	e3a00040 	mov	r0, #64	; 0x40
400183a4:	eaffff3c 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400183a8:	e3a09000 	mov	r9, #0
400183ac:	ea00002b 	b	40018460 <CyU3PDmaMultiChannelCreate+0x3e0>
400183b0:	e286000e 	add	r0, r6, #14
400183b4:	e0800089 	add	r0, r0, r9, lsl #1
400183b8:	e1d000b0 	ldrh	r0, [r0]
400183bc:	e3a0103f 	mov	r1, #63	; 0x3f
400183c0:	e0018440 	and	r8, r1, r0, asr #8
400183c4:	e286000e 	add	r0, r6, #14
400183c8:	e0800089 	add	r0, r0, r9, lsl #1
400183cc:	e1d000b0 	ldrh	r0, [r0]
400183d0:	e20070ff 	and	r7, r0, #255	; 0xff
400183d4:	e286100e 	add	r1, r6, #14
400183d8:	e0811089 	add	r1, r1, r9, lsl #1
400183dc:	e1d100b0 	ldrh	r0, [r1]
400183e0:	ebfff32d 	bl	4001509c <CyU3PDmaSocketIsValidConsumer>
400183e4:	e3500000 	cmp	r0, #0
400183e8:	1a000001 	bne	400183f4 <CyU3PDmaMultiChannelCreate+0x374>
400183ec:	e3a00040 	mov	r0, #64	; 0x40
400183f0:	eaffff29 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400183f4:	e59f03bc 	ldr	r0, [pc, #956]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
400183f8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400183fc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018400:	e3500000 	cmp	r0, #0
40018404:	0a000001 	beq	40018410 <CyU3PDmaMultiChannelCreate+0x390>
40018408:	e3a00040 	mov	r0, #64	; 0x40
4001840c:	eaffff22 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018410:	e2890001 	add	r0, r9, #1
40018414:	e200a0ff 	and	sl, r0, #255	; 0xff
40018418:	ea00000b 	b	4001844c <CyU3PDmaMultiChannelCreate+0x3cc>
4001841c:	e286000e 	add	r0, r6, #14
40018420:	e0800089 	add	r0, r0, r9, lsl #1
40018424:	e1d000b0 	ldrh	r0, [r0]
40018428:	e286100e 	add	r1, r6, #14
4001842c:	e081108a 	add	r1, r1, sl, lsl #1
40018430:	e1d110b0 	ldrh	r1, [r1]
40018434:	e1500001 	cmp	r0, r1
40018438:	1a000001 	bne	40018444 <CyU3PDmaMultiChannelCreate+0x3c4>
4001843c:	e3a00040 	mov	r0, #64	; 0x40
40018440:	eaffff15 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018444:	e28a0001 	add	r0, sl, #1
40018448:	e200a0ff 	and	sl, r0, #255	; 0xff
4001844c:	e1d600b4 	ldrh	r0, [r6, #4]
40018450:	e150000a 	cmp	r0, sl
40018454:	cafffff0 	bgt	4001841c <CyU3PDmaMultiChannelCreate+0x39c>
40018458:	e2890001 	add	r0, r9, #1
4001845c:	e20090ff 	and	r9, r0, #255	; 0xff
40018460:	e1d600b4 	ldrh	r0, [r6, #4]
40018464:	e1500009 	cmp	r0, r9
40018468:	caffffd0 	bgt	400183b0 <CyU3PDmaMultiChannelCreate+0x330>
4001846c:	e1d600b6 	ldrh	r0, [r6, #6]
40018470:	e3a0103f 	mov	r1, #63	; 0x3f
40018474:	e0018440 	and	r8, r1, r0, asr #8
40018478:	e1d600b6 	ldrh	r0, [r6, #6]
4001847c:	e20070ff 	and	r7, r0, #255	; 0xff
40018480:	e1d600b6 	ldrh	r0, [r6, #6]
40018484:	ebfff33c 	bl	4001517c <CyU3PDmaSocketIsValidProducer>
40018488:	e3500000 	cmp	r0, #0
4001848c:	1a000001 	bne	40018498 <CyU3PDmaMultiChannelCreate+0x418>
40018490:	e3a00040 	mov	r0, #64	; 0x40
40018494:	eaffff00 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
40018498:	e59f0318 	ldr	r0, [pc, #792]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
4001849c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400184a0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400184a4:	e3500000 	cmp	r0, #0
400184a8:	0a000001 	beq	400184b4 <CyU3PDmaMultiChannelCreate+0x434>
400184ac:	e3a00040 	mov	r0, #64	; 0x40
400184b0:	eafffef9 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400184b4:	e59f02fc 	ldr	r0, [pc, #764]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
400184b8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400184bc:	e7804107 	str	r4, [r0, r7, lsl #2]
400184c0:	e3a09000 	mov	r9, #0
400184c4:	ea00000d 	b	40018500 <CyU3PDmaMultiChannelCreate+0x480>
400184c8:	e286000e 	add	r0, r6, #14
400184cc:	e0800089 	add	r0, r0, r9, lsl #1
400184d0:	e1d000b0 	ldrh	r0, [r0]
400184d4:	e3a0103f 	mov	r1, #63	; 0x3f
400184d8:	e0018440 	and	r8, r1, r0, asr #8
400184dc:	e286000e 	add	r0, r6, #14
400184e0:	e0800089 	add	r0, r0, r9, lsl #1
400184e4:	e1d000b0 	ldrh	r0, [r0]
400184e8:	e20070ff 	and	r7, r0, #255	; 0xff
400184ec:	e59f02c4 	ldr	r0, [pc, #708]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
400184f0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400184f4:	e7804107 	str	r4, [r0, r7, lsl #2]
400184f8:	e2890001 	add	r0, r9, #1
400184fc:	e20090ff 	and	r9, r0, #255	; 0xff
40018500:	e1d600b4 	ldrh	r0, [r6, #4]
40018504:	e1500009 	cmp	r0, r9
40018508:	caffffee 	bgt	400184c8 <CyU3PDmaMultiChannelCreate+0x448>
4001850c:	e1c450b4 	strh	r5, [r4, #4]
40018510:	e1d600b0 	ldrh	r0, [r6]
40018514:	e1c400b6 	strh	r0, [r4, #6]
40018518:	e1d600b2 	ldrh	r0, [r6, #2]
4001851c:	e1c400b8 	strh	r0, [r4, #8]
40018520:	e1d601b6 	ldrh	r0, [r6, #22]
40018524:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40018528:	e1d600b4 	ldrh	r0, [r6, #4]
4001852c:	e1c400ba 	strh	r0, [r4, #10]
40018530:	e3a09000 	mov	r9, #0
40018534:	ea000014 	b	4001858c <CyU3PDmaMultiChannelCreate+0x50c>
40018538:	e2860006 	add	r0, r6, #6
4001853c:	e0800089 	add	r0, r0, r9, lsl #1
40018540:	e1d000b0 	ldrh	r0, [r0]
40018544:	e2841024 	add	r1, r4, #36	; 0x24
40018548:	e0811089 	add	r1, r1, r9, lsl #1
4001854c:	e1c100b0 	strh	r0, [r1]
40018550:	e286000e 	add	r0, r6, #14
40018554:	e0800089 	add	r0, r0, r9, lsl #1
40018558:	e1d000b0 	ldrh	r0, [r0]
4001855c:	e284102c 	add	r1, r4, #44	; 0x2c
40018560:	e0811089 	add	r1, r1, r9, lsl #1
40018564:	e1c100b0 	strh	r0, [r1]
40018568:	e3a00000 	mov	r0, #0
4001856c:	e284105c 	add	r1, r4, #92	; 0x5c
40018570:	e0811089 	add	r1, r1, r9, lsl #1
40018574:	e1c100b0 	strh	r0, [r1]
40018578:	e2841064 	add	r1, r4, #100	; 0x64
4001857c:	e0811089 	add	r1, r1, r9, lsl #1
40018580:	e1c100b0 	strh	r0, [r1]
40018584:	e2890001 	add	r0, r9, #1
40018588:	e20090ff 	and	r9, r0, #255	; 0xff
4001858c:	e3590004 	cmp	r9, #4
40018590:	baffffe8 	blt	40018538 <CyU3PDmaMultiChannelCreate+0x4b8>
40018594:	e1d601b8 	ldrh	r0, [r6, #24]
40018598:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
4001859c:	e1d601ba 	ldrh	r0, [r6, #26]
400185a0:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
400185a4:	e1d601bc 	ldrh	r0, [r6, #28]
400185a8:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
400185ac:	e5d6001e 	ldrb	r0, [r6, #30]
400185b0:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
400185b4:	e5960020 	ldr	r0, [r6, #32]
400185b8:	e584006c 	str	r0, [r4, #108]	; 0x6c
400185bc:	e3a03038 	mov	r3, #56	; 0x38
400185c0:	e3a02000 	mov	r2, #0
400185c4:	e1a01002 	mov	r1, r2
400185c8:	e2840078 	add	r0, r4, #120	; 0x78
400185cc:	ebffc711 	bl	4000a218 <_txe_mutex_create>
400185d0:	e3a02028 	mov	r2, #40	; 0x28
400185d4:	e3a01000 	mov	r1, #0
400185d8:	e28400b0 	add	r0, r4, #176	; 0xb0
400185dc:	ebffc653 	bl	40009f30 <_txe_event_flags_create>
400185e0:	e5960024 	ldr	r0, [r6, #36]	; 0x24
400185e4:	e58400d8 	str	r0, [r4, #216]	; 0xd8
400185e8:	e59f01cc 	ldr	r0, [pc, #460]	; 400187bc <CyU3PDmaMultiChannelCreate+0x73c>
400185ec:	e5900000 	ldr	r0, [r0]
400185f0:	e5840074 	str	r0, [r4, #116]	; 0x74
400185f4:	e2450005 	sub	r0, r5, #5
400185f8:	e3500005 	cmp	r0, #5
400185fc:	308ff100 	addcc	pc, pc, r0, lsl #2
40018600:	ea00001d 	b	4001867c <CyU3PDmaMultiChannelCreate+0x5fc>
40018604:	ea000003 	b	40018618 <CyU3PDmaMultiChannelCreate+0x598>
40018608:	ea000008 	b	40018630 <CyU3PDmaMultiChannelCreate+0x5b0>
4001860c:	ea000003 	b	40018620 <CyU3PDmaMultiChannelCreate+0x5a0>
40018610:	ea000008 	b	40018638 <CyU3PDmaMultiChannelCreate+0x5b8>
40018614:	ea00000b 	b	40018648 <CyU3PDmaMultiChannelCreate+0x5c8>
40018618:	e1a00000 	nop			; (mov r0, r0)
4001861c:	e1a00000 	nop			; (mov r0, r0)
40018620:	e1a00004 	mov	r0, r4
40018624:	ebfffd1c 	bl	40017a9c <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
40018628:	e1a0b000 	mov	fp, r0
4001862c:	ea000015 	b	40018688 <CyU3PDmaMultiChannelCreate+0x608>
40018630:	e1a00000 	nop			; (mov r0, r0)
40018634:	e1a00000 	nop			; (mov r0, r0)
40018638:	e1a00004 	mov	r0, r4
4001863c:	ebfffdd1 	bl	40017d88 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018640:	e1a0b000 	mov	fp, r0
40018644:	ea00000f 	b	40018688 <CyU3PDmaMultiChannelCreate+0x608>
40018648:	e1a00000 	nop			; (mov r0, r0)
4001864c:	e59f016c 	ldr	r0, [pc, #364]	; 400187c0 <CyU3PDmaMultiChannelCreate+0x740>
40018650:	e5900000 	ldr	r0, [r0]
40018654:	e3500000 	cmp	r0, #0
40018658:	1a000001 	bne	40018664 <CyU3PDmaMultiChannelCreate+0x5e4>
4001865c:	e3a0b047 	mov	fp, #71	; 0x47
40018660:	ea000004 	b	40018678 <CyU3PDmaMultiChannelCreate+0x5f8>
40018664:	e1a00004 	mov	r0, r4
40018668:	e59f1150 	ldr	r1, [pc, #336]	; 400187c0 <CyU3PDmaMultiChannelCreate+0x740>
4001866c:	e5911000 	ldr	r1, [r1]
40018670:	e12fff31 	blx	r1
40018674:	e1a0b000 	mov	fp, r0
40018678:	ea000002 	b	40018688 <CyU3PDmaMultiChannelCreate+0x608>
4001867c:	e1a00000 	nop			; (mov r0, r0)
40018680:	e3a0b040 	mov	fp, #64	; 0x40
40018684:	e1a00000 	nop			; (mov r0, r0)
40018688:	e1a00000 	nop			; (mov r0, r0)
4001868c:	e35b0000 	cmp	fp, #0
40018690:	1a000002 	bne	400186a0 <CyU3PDmaMultiChannelCreate+0x620>
40018694:	e3a00001 	mov	r0, #1
40018698:	e5840000 	str	r0, [r4]
4001869c:	ea000042 	b	400187ac <CyU3PDmaMultiChannelCreate+0x72c>
400186a0:	e2840078 	add	r0, r4, #120	; 0x78
400186a4:	ebffc739 	bl	4000a390 <_txe_mutex_delete>
400186a8:	e28400b0 	add	r0, r4, #176	; 0xb0
400186ac:	ebffc66f 	bl	4000a070 <_txe_event_flags_delete>
400186b0:	e3550005 	cmp	r5, #5
400186b4:	0a000001 	beq	400186c0 <CyU3PDmaMultiChannelCreate+0x640>
400186b8:	e3550007 	cmp	r5, #7
400186bc:	1a00001d 	bne	40018738 <CyU3PDmaMultiChannelCreate+0x6b8>
400186c0:	e1d600be 	ldrh	r0, [r6, #14]
400186c4:	e3a0103f 	mov	r1, #63	; 0x3f
400186c8:	e0018440 	and	r8, r1, r0, asr #8
400186cc:	e1d600be 	ldrh	r0, [r6, #14]
400186d0:	e20070ff 	and	r7, r0, #255	; 0xff
400186d4:	e3a00000 	mov	r0, #0
400186d8:	e59f10d8 	ldr	r1, [pc, #216]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
400186dc:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400186e0:	e7810107 	str	r0, [r1, r7, lsl #2]
400186e4:	e3a09000 	mov	r9, #0
400186e8:	ea00000e 	b	40018728 <CyU3PDmaMultiChannelCreate+0x6a8>
400186ec:	e2860006 	add	r0, r6, #6
400186f0:	e0800089 	add	r0, r0, r9, lsl #1
400186f4:	e1d000b0 	ldrh	r0, [r0]
400186f8:	e3a0103f 	mov	r1, #63	; 0x3f
400186fc:	e0018440 	and	r8, r1, r0, asr #8
40018700:	e2860006 	add	r0, r6, #6
40018704:	e0800089 	add	r0, r0, r9, lsl #1
40018708:	e1d000b0 	ldrh	r0, [r0]
4001870c:	e20070ff 	and	r7, r0, #255	; 0xff
40018710:	e3a00000 	mov	r0, #0
40018714:	e59f109c 	ldr	r1, [pc, #156]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
40018718:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001871c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018720:	e2890001 	add	r0, r9, #1
40018724:	e20090ff 	and	r9, r0, #255	; 0xff
40018728:	e1d600b4 	ldrh	r0, [r6, #4]
4001872c:	e1500009 	cmp	r0, r9
40018730:	caffffed 	bgt	400186ec <CyU3PDmaMultiChannelCreate+0x66c>
40018734:	ea00001c 	b	400187ac <CyU3PDmaMultiChannelCreate+0x72c>
40018738:	e1d600b6 	ldrh	r0, [r6, #6]
4001873c:	e3a0103f 	mov	r1, #63	; 0x3f
40018740:	e0018440 	and	r8, r1, r0, asr #8
40018744:	e1d600b6 	ldrh	r0, [r6, #6]
40018748:	e20070ff 	and	r7, r0, #255	; 0xff
4001874c:	e3a00000 	mov	r0, #0
40018750:	e59f1060 	ldr	r1, [pc, #96]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
40018754:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018758:	e7810107 	str	r0, [r1, r7, lsl #2]
4001875c:	e3a09000 	mov	r9, #0
40018760:	ea00000e 	b	400187a0 <CyU3PDmaMultiChannelCreate+0x720>
40018764:	e286000e 	add	r0, r6, #14
40018768:	e0800089 	add	r0, r0, r9, lsl #1
4001876c:	e1d000b0 	ldrh	r0, [r0]
40018770:	e3a0103f 	mov	r1, #63	; 0x3f
40018774:	e0018440 	and	r8, r1, r0, asr #8
40018778:	e286000e 	add	r0, r6, #14
4001877c:	e0800089 	add	r0, r0, r9, lsl #1
40018780:	e1d000b0 	ldrh	r0, [r0]
40018784:	e20070ff 	and	r7, r0, #255	; 0xff
40018788:	e3a00000 	mov	r0, #0
4001878c:	e59f1024 	ldr	r1, [pc, #36]	; 400187b8 <CyU3PDmaMultiChannelCreate+0x738>
40018790:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018794:	e7810107 	str	r0, [r1, r7, lsl #2]
40018798:	e2890001 	add	r0, r9, #1
4001879c:	e20090ff 	and	r9, r0, #255	; 0xff
400187a0:	e1d600b4 	ldrh	r0, [r6, #4]
400187a4:	e1500009 	cmp	r0, r9
400187a8:	caffffed 	bgt	40018764 <CyU3PDmaMultiChannelCreate+0x6e4>
400187ac:	e1a0000b 	mov	r0, fp
400187b0:	eafffe39 	b	4001809c <CyU3PDmaMultiChannelCreate+0x1c>
400187b4:	0000fff0 	.word	0x0000fff0
400187b8:	40030d20 	.word	0x40030d20
400187bc:	40030c84 	.word	0x40030c84
400187c0:	40030d0c 	.word	0x40030d0c

Disassembly of section i.CyU3PDmaMultiChannelReset:

400187c4 <CyU3PDmaMultiChannelReset>:
400187c4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400187c8:	e1a04000 	mov	r4, r0
400187cc:	e3e01000 	mvn	r1, #0
400187d0:	e1a00004 	mov	r0, r4
400187d4:	ebfffbab 	bl	40017688 <CyU3PDmaMultiChannelAcquireLock>
400187d8:	e1a06000 	mov	r6, r0
400187dc:	e3560000 	cmp	r6, #0
400187e0:	0a000001 	beq	400187ec <CyU3PDmaMultiChannelReset+0x28>
400187e4:	e1a00006 	mov	r0, r6
400187e8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400187ec:	e1d400b4 	ldrh	r0, [r4, #4]
400187f0:	e2400005 	sub	r0, r0, #5
400187f4:	e3500005 	cmp	r0, #5
400187f8:	308ff100 	addcc	pc, pc, r0, lsl #2
400187fc:	ea00001a 	b	4001886c <CyU3PDmaMultiChannelReset+0xa8>
40018800:	ea000003 	b	40018814 <CyU3PDmaMultiChannelReset+0x50>
40018804:	ea000007 	b	40018828 <CyU3PDmaMultiChannelReset+0x64>
40018808:	ea000003 	b	4001881c <CyU3PDmaMultiChannelReset+0x58>
4001880c:	ea000007 	b	40018830 <CyU3PDmaMultiChannelReset+0x6c>
40018810:	ea000009 	b	4001883c <CyU3PDmaMultiChannelReset+0x78>
40018814:	e1a00000 	nop			; (mov r0, r0)
40018818:	e1a00000 	nop			; (mov r0, r0)
4001881c:	e1a00004 	mov	r0, r4
40018820:	eb00003c 	bl	40018918 <CyU3PDmaMultiChannelReset_TypeManyToOne>
40018824:	ea000012 	b	40018874 <CyU3PDmaMultiChannelReset+0xb0>
40018828:	e1a00000 	nop			; (mov r0, r0)
4001882c:	e1a00000 	nop			; (mov r0, r0)
40018830:	e1a00004 	mov	r0, r4
40018834:	eb000083 	bl	40018a48 <CyU3PDmaMultiChannelReset_TypeOneToMany>
40018838:	ea00000d 	b	40018874 <CyU3PDmaMultiChannelReset+0xb0>
4001883c:	e1a00000 	nop			; (mov r0, r0)
40018840:	e59f00cc 	ldr	r0, [pc, #204]	; 40018914 <CyU3PDmaMultiChannelReset+0x150>
40018844:	e5900000 	ldr	r0, [r0]
40018848:	e3500000 	cmp	r0, #0
4001884c:	1a000001 	bne	40018858 <CyU3PDmaMultiChannelReset+0x94>
40018850:	e3a00047 	mov	r0, #71	; 0x47
40018854:	eaffffe3 	b	400187e8 <CyU3PDmaMultiChannelReset+0x24>
40018858:	e1a00004 	mov	r0, r4
4001885c:	e59f10b0 	ldr	r1, [pc, #176]	; 40018914 <CyU3PDmaMultiChannelReset+0x150>
40018860:	e5911000 	ldr	r1, [r1]
40018864:	e12fff31 	blx	r1
40018868:	ea000001 	b	40018874 <CyU3PDmaMultiChannelReset+0xb0>
4001886c:	e1a00000 	nop			; (mov r0, r0)
40018870:	e1a00000 	nop			; (mov r0, r0)
40018874:	e1a00000 	nop			; (mov r0, r0)
40018878:	ebffc0cf 	bl	40008bbc <_tx_thread_identify>
4001887c:	e1a05000 	mov	r5, r0
40018880:	e3550000 	cmp	r5, #0
40018884:	0a000003 	beq	40018898 <CyU3PDmaMultiChannelReset+0xd4>
40018888:	e1a0200d 	mov	r2, sp
4001888c:	e3a01002 	mov	r1, #2
40018890:	e1a00005 	mov	r0, r5
40018894:	ebffc8d6 	bl	4000abf4 <_txe_thread_priority_change>
40018898:	e3a02002 	mov	r2, #2
4001889c:	e3e01047 	mvn	r1, #71	; 0x47
400188a0:	e28400b0 	add	r0, r4, #176	; 0xb0
400188a4:	ebffc641 	bl	4000a1b0 <_txe_event_flags_set>
400188a8:	e3a02000 	mov	r2, #0
400188ac:	e3a01020 	mov	r1, #32
400188b0:	e28400b0 	add	r0, r4, #176	; 0xb0
400188b4:	ebffc63d 	bl	4000a1b0 <_txe_event_flags_set>
400188b8:	e3a00001 	mov	r0, #1
400188bc:	e5840000 	str	r0, [r4]
400188c0:	e2840078 	add	r0, r4, #120	; 0x78
400188c4:	ebffc706 	bl	4000a4e4 <_txe_mutex_put>
400188c8:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400188cc:	e3500000 	cmp	r0, #0
400188d0:	0a000007 	beq	400188f4 <CyU3PDmaMultiChannelReset+0x130>
400188d4:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
400188d8:	e3100020 	tst	r0, #32
400188dc:	0a000004 	beq	400188f4 <CyU3PDmaMultiChannelReset+0x130>
400188e0:	e3a02000 	mov	r2, #0
400188e4:	e3a01020 	mov	r1, #32
400188e8:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
400188ec:	e1a00004 	mov	r0, r4
400188f0:	e12fff33 	blx	r3
400188f4:	e3550000 	cmp	r5, #0
400188f8:	0a000003 	beq	4001890c <CyU3PDmaMultiChannelReset+0x148>
400188fc:	e1a0200d 	mov	r2, sp
40018900:	e1a00005 	mov	r0, r5
40018904:	e59d1000 	ldr	r1, [sp]
40018908:	ebffc8b9 	bl	4000abf4 <_txe_thread_priority_change>
4001890c:	e3a00000 	mov	r0, #0
40018910:	eaffffb4 	b	400187e8 <CyU3PDmaMultiChannelReset+0x24>
40018914:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

40018918 <CyU3PDmaMultiChannelReset_TypeManyToOne>:
40018918:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
4001891c:	e1a04000 	mov	r4, r0
40018920:	e1a00004 	mov	r0, r4
40018924:	eb000215 	bl	40019180 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40018928:	e1d451bc 	ldrh	r5, [r4, #28]
4001892c:	e1d400b8 	ldrh	r0, [r4, #8]
40018930:	e1d410ba 	ldrh	r1, [r4, #10]
40018934:	e0000091 	mul	r0, r1, r0
40018938:	e1a06800 	lsl	r6, r0, #16
4001893c:	e1a06826 	lsr	r6, r6, #16
40018940:	ea00000c 	b	40018978 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018944:	e1a0100d 	mov	r1, sp
40018948:	e1a00005 	mov	r0, r5
4001894c:	eb002807 	bl	40022970 <CyU3PDmaDscrGetConfig>
40018950:	e59d000c 	ldr	r0, [sp, #12]
40018954:	e59f10e4 	ldr	r1, [pc, #228]	; 40018a40 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018958:	e0000001 	and	r0, r0, r1
4001895c:	e58d000c 	str	r0, [sp, #12]
40018960:	e1a0100d 	mov	r1, sp
40018964:	e1a00005 	mov	r0, r5
40018968:	eb00281b 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001896c:	e59d0008 	ldr	r0, [sp, #8]
40018970:	e1a05800 	lsl	r5, r0, #16
40018974:	e1a05825 	lsr	r5, r5, #16
40018978:	e1b00006 	movs	r0, r6
4001897c:	e2461001 	sub	r1, r6, #1
40018980:	e1a06801 	lsl	r6, r1, #16
40018984:	e1a06826 	lsr	r6, r6, #16
40018988:	1affffed 	bne	40018944 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
4001898c:	e1d400b4 	ldrh	r0, [r4, #4]
40018990:	e3500007 	cmp	r0, #7
40018994:	1a000021 	bne	40018a20 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
40018998:	e3a07000 	mov	r7, #0
4001899c:	ea00001c 	b	40018a14 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
400189a0:	e2840014 	add	r0, r4, #20
400189a4:	e0800087 	add	r0, r0, r7, lsl #1
400189a8:	e1d000b0 	ldrh	r0, [r0]
400189ac:	e284103e 	add	r1, r4, #62	; 0x3e
400189b0:	e0811087 	add	r1, r1, r7, lsl #1
400189b4:	e1c100b0 	strh	r0, [r1]
400189b8:	e1a05000 	mov	r5, r0
400189bc:	e3a06000 	mov	r6, #0
400189c0:	ea00000e 	b	40018a00 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
400189c4:	e1a0100d 	mov	r1, sp
400189c8:	e1a00005 	mov	r0, r5
400189cc:	eb0027e7 	bl	40022970 <CyU3PDmaDscrGetConfig>
400189d0:	e59d000c 	ldr	r0, [sp, #12]
400189d4:	e59f1064 	ldr	r1, [pc, #100]	; 40018a40 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400189d8:	e0000001 	and	r0, r0, r1
400189dc:	e58d000c 	str	r0, [sp, #12]
400189e0:	e1a0100d 	mov	r1, sp
400189e4:	e1a00005 	mov	r0, r5
400189e8:	eb0027fb 	bl	400229dc <CyU3PDmaDscrSetConfig>
400189ec:	e59d0008 	ldr	r0, [sp, #8]
400189f0:	e59f104c 	ldr	r1, [pc, #76]	; 40018a44 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
400189f4:	e0015820 	and	r5, r1, r0, lsr #16
400189f8:	e2860001 	add	r0, r6, #1
400189fc:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018a00:	e1d400b8 	ldrh	r0, [r4, #8]
40018a04:	e1500006 	cmp	r0, r6
40018a08:	caffffed 	bgt	400189c4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
40018a0c:	e2870001 	add	r0, r7, #1
40018a10:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a14:	e1d400ba 	ldrh	r0, [r4, #10]
40018a18:	e1500007 	cmp	r0, r7
40018a1c:	caffffdf 	bgt	400189a0 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
40018a20:	e1d401b4 	ldrh	r0, [r4, #20]
40018a24:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018a28:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018a2c:	e1d401bc 	ldrh	r0, [r4, #28]
40018a30:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018a34:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018a38:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018a3c:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018a40:	0000fff0 	.word	0x0000fff0
40018a44:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

40018a48 <CyU3PDmaMultiChannelReset_TypeOneToMany>:
40018a48:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018a4c:	e1a04000 	mov	r4, r0
40018a50:	e1a00004 	mov	r0, r4
40018a54:	eb000229 	bl	40019300 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40018a58:	e1d451b4 	ldrh	r5, [r4, #20]
40018a5c:	e1d400b8 	ldrh	r0, [r4, #8]
40018a60:	e1d410ba 	ldrh	r1, [r4, #10]
40018a64:	e0000091 	mul	r0, r1, r0
40018a68:	e1a06800 	lsl	r6, r0, #16
40018a6c:	e1a06826 	lsr	r6, r6, #16
40018a70:	ea00000c 	b	40018aa8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
40018a74:	e1a0100d 	mov	r1, sp
40018a78:	e1a00005 	mov	r0, r5
40018a7c:	eb0027bb 	bl	40022970 <CyU3PDmaDscrGetConfig>
40018a80:	e59d000c 	ldr	r0, [sp, #12]
40018a84:	e59f10e4 	ldr	r1, [pc, #228]	; 40018b70 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018a88:	e0000001 	and	r0, r0, r1
40018a8c:	e58d000c 	str	r0, [sp, #12]
40018a90:	e1a0100d 	mov	r1, sp
40018a94:	e1a00005 	mov	r0, r5
40018a98:	eb0027cf 	bl	400229dc <CyU3PDmaDscrSetConfig>
40018a9c:	e59d0008 	ldr	r0, [sp, #8]
40018aa0:	e59f10cc 	ldr	r1, [pc, #204]	; 40018b74 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
40018aa4:	e0015820 	and	r5, r1, r0, lsr #16
40018aa8:	e1b00006 	movs	r0, r6
40018aac:	e2461001 	sub	r1, r6, #1
40018ab0:	e1a06801 	lsl	r6, r1, #16
40018ab4:	e1a06826 	lsr	r6, r6, #16
40018ab8:	1affffed 	bne	40018a74 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018abc:	e1d400b4 	ldrh	r0, [r4, #4]
40018ac0:	e3500008 	cmp	r0, #8
40018ac4:	1a000021 	bne	40018b50 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
40018ac8:	e3a07000 	mov	r7, #0
40018acc:	ea00001c 	b	40018b44 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018ad0:	e284001c 	add	r0, r4, #28
40018ad4:	e0800087 	add	r0, r0, r7, lsl #1
40018ad8:	e1d000b0 	ldrh	r0, [r0]
40018adc:	e2841046 	add	r1, r4, #70	; 0x46
40018ae0:	e0811087 	add	r1, r1, r7, lsl #1
40018ae4:	e1c100b0 	strh	r0, [r1]
40018ae8:	e1a05000 	mov	r5, r0
40018aec:	e3a06000 	mov	r6, #0
40018af0:	ea00000e 	b	40018b30 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018af4:	e1a0100d 	mov	r1, sp
40018af8:	e1a00005 	mov	r0, r5
40018afc:	eb00279b 	bl	40022970 <CyU3PDmaDscrGetConfig>
40018b00:	e59d000c 	ldr	r0, [sp, #12]
40018b04:	e59f1064 	ldr	r1, [pc, #100]	; 40018b70 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018b08:	e0000001 	and	r0, r0, r1
40018b0c:	e58d000c 	str	r0, [sp, #12]
40018b10:	e1a0100d 	mov	r1, sp
40018b14:	e1a00005 	mov	r0, r5
40018b18:	eb0027af 	bl	400229dc <CyU3PDmaDscrSetConfig>
40018b1c:	e59d0008 	ldr	r0, [sp, #8]
40018b20:	e1a05800 	lsl	r5, r0, #16
40018b24:	e1a05825 	lsr	r5, r5, #16
40018b28:	e2860001 	add	r0, r6, #1
40018b2c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018b30:	e1d400b8 	ldrh	r0, [r4, #8]
40018b34:	e1500006 	cmp	r0, r6
40018b38:	caffffed 	bgt	40018af4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018b3c:	e2870001 	add	r0, r7, #1
40018b40:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018b44:	e1d400ba 	ldrh	r0, [r4, #10]
40018b48:	e1500007 	cmp	r0, r7
40018b4c:	caffffdf 	bgt	40018ad0 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018b50:	e1d401b4 	ldrh	r0, [r4, #20]
40018b54:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018b58:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018b5c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018b60:	e1d401bc 	ldrh	r0, [r4, #28]
40018b64:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018b68:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018b6c:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018b70:	0000fff0 	.word	0x0000fff0
40018b74:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018b78 <CyU3PDmaMultiChannelSetXfer>:
40018b78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018b7c:	e1a04000 	mov	r4, r0
40018b80:	e1a05001 	mov	r5, r1
40018b84:	e1a06002 	mov	r6, r2
40018b88:	e3e01000 	mvn	r1, #0
40018b8c:	e1a00004 	mov	r0, r4
40018b90:	ebfffabc 	bl	40017688 <CyU3PDmaMultiChannelAcquireLock>
40018b94:	e1a07000 	mov	r7, r0
40018b98:	e3570000 	cmp	r7, #0
40018b9c:	0a000001 	beq	40018ba8 <CyU3PDmaMultiChannelSetXfer+0x30>
40018ba0:	e1a00007 	mov	r0, r7
40018ba4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018ba8:	e5940000 	ldr	r0, [r4]
40018bac:	e3500001 	cmp	r0, #1
40018bb0:	0a000000 	beq	40018bb8 <CyU3PDmaMultiChannelSetXfer+0x40>
40018bb4:	e3a07043 	mov	r7, #67	; 0x43
40018bb8:	e1d400ba 	ldrh	r0, [r4, #10]
40018bbc:	e1500006 	cmp	r0, r6
40018bc0:	ca000000 	bgt	40018bc8 <CyU3PDmaMultiChannelSetXfer+0x50>
40018bc4:	e3a07040 	mov	r7, #64	; 0x40
40018bc8:	e1d400b4 	ldrh	r0, [r4, #4]
40018bcc:	e3500009 	cmp	r0, #9
40018bd0:	1a000002 	bne	40018be0 <CyU3PDmaMultiChannelSetXfer+0x68>
40018bd4:	e3560000 	cmp	r6, #0
40018bd8:	0a000000 	beq	40018be0 <CyU3PDmaMultiChannelSetXfer+0x68>
40018bdc:	e3a07040 	mov	r7, #64	; 0x40
40018be0:	e3570000 	cmp	r7, #0
40018be4:	1a00002d 	bne	40018ca0 <CyU3PDmaMultiChannelSetXfer+0x128>
40018be8:	e3a02002 	mov	r2, #2
40018bec:	e3e01027 	mvn	r1, #39	; 0x27
40018bf0:	e28400b0 	add	r0, r4, #176	; 0xb0
40018bf4:	ebffc56d 	bl	4000a1b0 <_txe_event_flags_set>
40018bf8:	e5845070 	str	r5, [r4, #112]	; 0x70
40018bfc:	e1d400b4 	ldrh	r0, [r4, #4]
40018c00:	e2400005 	sub	r0, r0, #5
40018c04:	e3500005 	cmp	r0, #5
40018c08:	308ff100 	addcc	pc, pc, r0, lsl #2
40018c0c:	ea000020 	b	40018c94 <CyU3PDmaMultiChannelSetXfer+0x11c>
40018c10:	ea000003 	b	40018c24 <CyU3PDmaMultiChannelSetXfer+0xac>
40018c14:	ea000009 	b	40018c40 <CyU3PDmaMultiChannelSetXfer+0xc8>
40018c18:	ea000003 	b	40018c2c <CyU3PDmaMultiChannelSetXfer+0xb4>
40018c1c:	ea000009 	b	40018c48 <CyU3PDmaMultiChannelSetXfer+0xd0>
40018c20:	ea00000d 	b	40018c5c <CyU3PDmaMultiChannelSetXfer+0xe4>
40018c24:	e1a00000 	nop			; (mov r0, r0)
40018c28:	e1a00000 	nop			; (mov r0, r0)
40018c2c:	e1a02006 	mov	r2, r6
40018c30:	e1a01005 	mov	r1, r5
40018c34:	e1a00004 	mov	r0, r4
40018c38:	eb00001d 	bl	40018cb4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018c3c:	ea000016 	b	40018c9c <CyU3PDmaMultiChannelSetXfer+0x124>
40018c40:	e1a00000 	nop			; (mov r0, r0)
40018c44:	e1a00000 	nop			; (mov r0, r0)
40018c48:	e1a02006 	mov	r2, r6
40018c4c:	e1a01005 	mov	r1, r5
40018c50:	e1a00004 	mov	r0, r4
40018c54:	eb0000b2 	bl	40018f24 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018c58:	ea00000f 	b	40018c9c <CyU3PDmaMultiChannelSetXfer+0x124>
40018c5c:	e1a00000 	nop			; (mov r0, r0)
40018c60:	e59f0048 	ldr	r0, [pc, #72]	; 40018cb0 <CyU3PDmaMultiChannelSetXfer+0x138>
40018c64:	e5900000 	ldr	r0, [r0]
40018c68:	e3500000 	cmp	r0, #0
40018c6c:	1a000001 	bne	40018c78 <CyU3PDmaMultiChannelSetXfer+0x100>
40018c70:	e3a00047 	mov	r0, #71	; 0x47
40018c74:	eaffffca 	b	40018ba4 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018c78:	e1a02006 	mov	r2, r6
40018c7c:	e1a01005 	mov	r1, r5
40018c80:	e1a00004 	mov	r0, r4
40018c84:	e59f3024 	ldr	r3, [pc, #36]	; 40018cb0 <CyU3PDmaMultiChannelSetXfer+0x138>
40018c88:	e5933000 	ldr	r3, [r3]
40018c8c:	e12fff33 	blx	r3
40018c90:	ea000001 	b	40018c9c <CyU3PDmaMultiChannelSetXfer+0x124>
40018c94:	e1a00000 	nop			; (mov r0, r0)
40018c98:	e1a00000 	nop			; (mov r0, r0)
40018c9c:	e1a00000 	nop			; (mov r0, r0)
40018ca0:	e2840078 	add	r0, r4, #120	; 0x78
40018ca4:	ebffc60e 	bl	4000a4e4 <_txe_mutex_put>
40018ca8:	e1a00007 	mov	r0, r7
40018cac:	eaffffbc 	b	40018ba4 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018cb0:	40030d18 	.word	0x40030d18

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018cb4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018cb4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018cb8:	e24dd028 	sub	sp, sp, #40	; 0x28
40018cbc:	e1a04000 	mov	r4, r0
40018cc0:	e1a05001 	mov	r5, r1
40018cc4:	e1a06002 	mov	r6, r2
40018cc8:	e3a00002 	mov	r0, #2
40018ccc:	e5840000 	str	r0, [r4]
40018cd0:	e3a07000 	mov	r7, #0
40018cd4:	ea000005 	b	40018cf0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018cd8:	e2841024 	add	r1, r4, #36	; 0x24
40018cdc:	e0811087 	add	r1, r1, r7, lsl #1
40018ce0:	e1d100b0 	ldrh	r0, [r1]
40018ce4:	ebfff0ac 	bl	40014f9c <CyU3PDmaSocketDisable>
40018ce8:	e2870001 	add	r0, r7, #1
40018cec:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018cf0:	e1d400ba 	ldrh	r0, [r4, #10]
40018cf4:	e1500007 	cmp	r0, r7
40018cf8:	cafffff6 	bgt	40018cd8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
40018cfc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d00:	ebfff0a5 	bl	40014f9c <CyU3PDmaSocketDisable>
40018d04:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018d08:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d0c:	ebfff1bd 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
40018d10:	e2840014 	add	r0, r4, #20
40018d14:	e0800086 	add	r0, r0, r6, lsl #1
40018d18:	e1d000b0 	ldrh	r0, [r0]
40018d1c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018d20:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018d24:	e3a07000 	mov	r7, #0
40018d28:	ea000040 	b	40018e30 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018d2c:	e2841024 	add	r1, r4, #36	; 0x24
40018d30:	e0811087 	add	r1, r1, r7, lsl #1
40018d34:	e1d100b0 	ldrh	r0, [r1]
40018d38:	e28d1010 	add	r1, sp, #16
40018d3c:	ebfff0ae 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40018d40:	e3a00000 	mov	r0, #0
40018d44:	e58d0014 	str	r0, [sp, #20]
40018d48:	e58d0018 	str	r0, [sp, #24]
40018d4c:	e59d001c 	ldr	r0, [sp, #28]
40018d50:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018d54:	e58d001c 	str	r0, [sp, #28]
40018d58:	e59d001c 	ldr	r0, [sp, #28]
40018d5c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018d60:	e58d001c 	str	r0, [sp, #28]
40018d64:	e59d001c 	ldr	r0, [sp, #28]
40018d68:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018d6c:	e58d001c 	str	r0, [sp, #28]
40018d70:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018d74:	e3500001 	cmp	r0, #1
40018d78:	1a000003 	bne	40018d8c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018d7c:	e59d001c 	ldr	r0, [sp, #28]
40018d80:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018d84:	e58d001c 	str	r0, [sp, #28]
40018d88:	ea000002 	b	40018d98 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018d8c:	e59d001c 	ldr	r0, [sp, #28]
40018d90:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018d94:	e58d001c 	str	r0, [sp, #28]
40018d98:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018d9c:	e3500000 	cmp	r0, #0
40018da0:	0a000006 	beq	40018dc0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018da4:	e1d400b8 	ldrh	r0, [r4, #8]
40018da8:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018dac:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018db0:	e1800281 	orr	r0, r0, r1, lsl #5
40018db4:	e59d101c 	ldr	r1, [sp, #28]
40018db8:	e1800001 	orr	r0, r0, r1
40018dbc:	e58d001c 	str	r0, [sp, #28]
40018dc0:	e3e00000 	mvn	r0, #0
40018dc4:	e58d0020 	str	r0, [sp, #32]
40018dc8:	e1570006 	cmp	r7, r6
40018dcc:	ba000004 	blt	40018de4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018dd0:	e2840014 	add	r0, r4, #20
40018dd4:	e0800087 	add	r0, r0, r7, lsl #1
40018dd8:	e1d000b0 	ldrh	r0, [r0]
40018ddc:	e58d0010 	str	r0, [sp, #16]
40018de0:	ea000007 	b	40018e04 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018de4:	e2841014 	add	r1, r4, #20
40018de8:	e0811087 	add	r1, r1, r7, lsl #1
40018dec:	e1d100b0 	ldrh	r0, [r1]
40018df0:	e1a0100d 	mov	r1, sp
40018df4:	eb0026dd 	bl	40022970 <CyU3PDmaDscrGetConfig>
40018df8:	e59d0008 	ldr	r0, [sp, #8]
40018dfc:	e1a00820 	lsr	r0, r0, #16
40018e00:	e58d0010 	str	r0, [sp, #16]
40018e04:	e284103e 	add	r1, r4, #62	; 0x3e
40018e08:	e0811087 	add	r1, r1, r7, lsl #1
40018e0c:	e59d0010 	ldr	r0, [sp, #16]
40018e10:	e1c100b0 	strh	r0, [r1]
40018e14:	e2841024 	add	r1, r4, #36	; 0x24
40018e18:	e0811087 	add	r1, r1, r7, lsl #1
40018e1c:	e1d100b0 	ldrh	r0, [r1]
40018e20:	e28d1010 	add	r1, sp, #16
40018e24:	ebfff11e 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40018e28:	e2870001 	add	r0, r7, #1
40018e2c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018e30:	e1d400ba 	ldrh	r0, [r4, #10]
40018e34:	e1500007 	cmp	r0, r7
40018e38:	caffffbb 	bgt	40018d2c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018e3c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e40:	e28d1010 	add	r1, sp, #16
40018e44:	ebfff06c 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40018e48:	e58d5014 	str	r5, [sp, #20]
40018e4c:	e3a00000 	mov	r0, #0
40018e50:	e58d0018 	str	r0, [sp, #24]
40018e54:	e3550000 	cmp	r5, #0
40018e58:	1a000006 	bne	40018e78 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018e5c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018e60:	e3c00080 	bic	r0, r0, #128	; 0x80
40018e64:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018e68:	e59d001c 	ldr	r0, [sp, #28]
40018e6c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018e70:	e58d001c 	str	r0, [sp, #28]
40018e74:	ea000005 	b	40018e90 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018e78:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018e7c:	e3800080 	orr	r0, r0, #128	; 0x80
40018e80:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018e84:	e59d001c 	ldr	r0, [sp, #28]
40018e88:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018e8c:	e58d001c 	str	r0, [sp, #28]
40018e90:	e59d001c 	ldr	r0, [sp, #28]
40018e94:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018e98:	e58d001c 	str	r0, [sp, #28]
40018e9c:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018ea0:	e3500001 	cmp	r0, #1
40018ea4:	1a000003 	bne	40018eb8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018ea8:	e59d001c 	ldr	r0, [sp, #28]
40018eac:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018eb0:	e58d001c 	str	r0, [sp, #28]
40018eb4:	ea000002 	b	40018ec4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018eb8:	e59d001c 	ldr	r0, [sp, #28]
40018ebc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018ec0:	e58d001c 	str	r0, [sp, #28]
40018ec4:	e3e00000 	mvn	r0, #0
40018ec8:	e58d0020 	str	r0, [sp, #32]
40018ecc:	e1d481bc 	ldrh	r8, [r4, #28]
40018ed0:	e3a07000 	mov	r7, #0
40018ed4:	ea000007 	b	40018ef8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018ed8:	e1a0100d 	mov	r1, sp
40018edc:	e1a00008 	mov	r0, r8
40018ee0:	eb0026a2 	bl	40022970 <CyU3PDmaDscrGetConfig>
40018ee4:	e59d0008 	ldr	r0, [sp, #8]
40018ee8:	e1a08800 	lsl	r8, r0, #16
40018eec:	e1a08828 	lsr	r8, r8, #16
40018ef0:	e2870001 	add	r0, r7, #1
40018ef4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018ef8:	e1570006 	cmp	r7, r6
40018efc:	bafffff5 	blt	40018ed8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018f00:	e58d8010 	str	r8, [sp, #16]
40018f04:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018f08:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018f0c:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018f10:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018f14:	e28d1010 	add	r1, sp, #16
40018f18:	ebfff0e1 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40018f1c:	e28dd028 	add	sp, sp, #40	; 0x28
40018f20:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018f24 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018f24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018f28:	e24dd028 	sub	sp, sp, #40	; 0x28
40018f2c:	e1a04000 	mov	r4, r0
40018f30:	e1a05001 	mov	r5, r1
40018f34:	e1a06002 	mov	r6, r2
40018f38:	e3a00002 	mov	r0, #2
40018f3c:	e5840000 	str	r0, [r4]
40018f40:	e3a07000 	mov	r7, #0
40018f44:	ea000005 	b	40018f60 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018f48:	e284102c 	add	r1, r4, #44	; 0x2c
40018f4c:	e0811087 	add	r1, r1, r7, lsl #1
40018f50:	e1d100b0 	ldrh	r0, [r1]
40018f54:	ebfff010 	bl	40014f9c <CyU3PDmaSocketDisable>
40018f58:	e2870001 	add	r0, r7, #1
40018f5c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018f60:	e1d400ba 	ldrh	r0, [r4, #10]
40018f64:	e1500007 	cmp	r0, r7
40018f68:	cafffff6 	bgt	40018f48 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018f6c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f70:	ebfff009 	bl	40014f9c <CyU3PDmaSocketDisable>
40018f74:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018f78:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f7c:	ebfff121 	bl	40015408 <CyU3PDmaUpdateSocketSuspendOption>
40018f80:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018f84:	e28d1010 	add	r1, sp, #16
40018f88:	ebfff01b 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40018f8c:	e58d5014 	str	r5, [sp, #20]
40018f90:	e3a00000 	mov	r0, #0
40018f94:	e58d0018 	str	r0, [sp, #24]
40018f98:	e3550000 	cmp	r5, #0
40018f9c:	1a000006 	bne	40018fbc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018fa0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018fa4:	e3c00080 	bic	r0, r0, #128	; 0x80
40018fa8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018fac:	e59d001c 	ldr	r0, [sp, #28]
40018fb0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018fb4:	e58d001c 	str	r0, [sp, #28]
40018fb8:	ea000005 	b	40018fd4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018fbc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018fc0:	e3800080 	orr	r0, r0, #128	; 0x80
40018fc4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018fc8:	e59d001c 	ldr	r0, [sp, #28]
40018fcc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018fd0:	e58d001c 	str	r0, [sp, #28]
40018fd4:	e59d001c 	ldr	r0, [sp, #28]
40018fd8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018fdc:	e58d001c 	str	r0, [sp, #28]
40018fe0:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018fe4:	e3500001 	cmp	r0, #1
40018fe8:	1a000003 	bne	40018ffc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018fec:	e59d001c 	ldr	r0, [sp, #28]
40018ff0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018ff4:	e58d001c 	str	r0, [sp, #28]
40018ff8:	ea000002 	b	40019008 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018ffc:	e59d001c 	ldr	r0, [sp, #28]
40019000:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40019004:	e58d001c 	str	r0, [sp, #28]
40019008:	e3e00000 	mvn	r0, #0
4001900c:	e58d0020 	str	r0, [sp, #32]
40019010:	e1d481b4 	ldrh	r8, [r4, #20]
40019014:	e3a07000 	mov	r7, #0
40019018:	ea000007 	b	4001903c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
4001901c:	e1a0100d 	mov	r1, sp
40019020:	e1a00008 	mov	r0, r8
40019024:	eb002651 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019028:	e59d0008 	ldr	r0, [sp, #8]
4001902c:	e59f1148 	ldr	r1, [pc, #328]	; 4001917c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40019030:	e0018820 	and	r8, r1, r0, lsr #16
40019034:	e2870001 	add	r0, r7, #1
40019038:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001903c:	e1570006 	cmp	r7, r6
40019040:	bafffff5 	blt	4001901c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40019044:	e58d8010 	str	r8, [sp, #16]
40019048:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
4001904c:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40019050:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40019054:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019058:	e28d1010 	add	r1, sp, #16
4001905c:	ebfff090 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40019060:	e284001c 	add	r0, r4, #28
40019064:	e0800086 	add	r0, r0, r6, lsl #1
40019068:	e1d000b0 	ldrh	r0, [r0]
4001906c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40019070:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40019074:	e3a07000 	mov	r7, #0
40019078:	ea00003a 	b	40019168 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
4001907c:	e284102c 	add	r1, r4, #44	; 0x2c
40019080:	e0811087 	add	r1, r1, r7, lsl #1
40019084:	e1d100b0 	ldrh	r0, [r1]
40019088:	e28d1010 	add	r1, sp, #16
4001908c:	ebffefda 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40019090:	e3a00000 	mov	r0, #0
40019094:	e58d0014 	str	r0, [sp, #20]
40019098:	e58d0018 	str	r0, [sp, #24]
4001909c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400190a0:	e3c00080 	bic	r0, r0, #128	; 0x80
400190a4:	e58d0024 	str	r0, [sp, #36]	; 0x24
400190a8:	e59d001c 	ldr	r0, [sp, #28]
400190ac:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400190b0:	e58d001c 	str	r0, [sp, #28]
400190b4:	e59d001c 	ldr	r0, [sp, #28]
400190b8:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400190bc:	e58d001c 	str	r0, [sp, #28]
400190c0:	e59d001c 	ldr	r0, [sp, #28]
400190c4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400190c8:	e58d001c 	str	r0, [sp, #28]
400190cc:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
400190d0:	e3500001 	cmp	r0, #1
400190d4:	1a000003 	bne	400190e8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
400190d8:	e59d001c 	ldr	r0, [sp, #28]
400190dc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400190e0:	e58d001c 	str	r0, [sp, #28]
400190e4:	ea000002 	b	400190f4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
400190e8:	e59d001c 	ldr	r0, [sp, #28]
400190ec:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400190f0:	e58d001c 	str	r0, [sp, #28]
400190f4:	e3e00000 	mvn	r0, #0
400190f8:	e58d0020 	str	r0, [sp, #32]
400190fc:	e1570006 	cmp	r7, r6
40019100:	ba000004 	blt	40019118 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40019104:	e284001c 	add	r0, r4, #28
40019108:	e0800087 	add	r0, r0, r7, lsl #1
4001910c:	e1d000b0 	ldrh	r0, [r0]
40019110:	e58d0010 	str	r0, [sp, #16]
40019114:	ea000008 	b	4001913c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40019118:	e284101c 	add	r1, r4, #28
4001911c:	e0811087 	add	r1, r1, r7, lsl #1
40019120:	e1d100b0 	ldrh	r0, [r1]
40019124:	e1a0100d 	mov	r1, sp
40019128:	eb002610 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001912c:	e59d0008 	ldr	r0, [sp, #8]
40019130:	e1a00800 	lsl	r0, r0, #16
40019134:	e1a00820 	lsr	r0, r0, #16
40019138:	e58d0010 	str	r0, [sp, #16]
4001913c:	e2841046 	add	r1, r4, #70	; 0x46
40019140:	e0811087 	add	r1, r1, r7, lsl #1
40019144:	e59d0010 	ldr	r0, [sp, #16]
40019148:	e1c100b0 	strh	r0, [r1]
4001914c:	e284102c 	add	r1, r4, #44	; 0x2c
40019150:	e0811087 	add	r1, r1, r7, lsl #1
40019154:	e1d100b0 	ldrh	r0, [r1]
40019158:	e28d1010 	add	r1, sp, #16
4001915c:	ebfff050 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40019160:	e2870001 	add	r0, r7, #1
40019164:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40019168:	e1d400ba 	ldrh	r0, [r4, #10]
4001916c:	e1500007 	cmp	r0, r7
40019170:	caffffc1 	bgt	4001907c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40019174:	e28dd028 	add	sp, sp, #40	; 0x28
40019178:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001917c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40019180 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40019180:	e92d4030 	push	{r4, r5, lr}
40019184:	e24dd01c 	sub	sp, sp, #28
40019188:	e1a04000 	mov	r4, r0
4001918c:	e3a05000 	mov	r5, #0
40019190:	ea000031 	b	4001925c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40019194:	e2840014 	add	r0, r4, #20
40019198:	e0800085 	add	r0, r0, r5, lsl #1
4001919c:	e1d000b0 	ldrh	r0, [r0]
400191a0:	e284103e 	add	r1, r4, #62	; 0x3e
400191a4:	e0811085 	add	r1, r1, r5, lsl #1
400191a8:	e1c100b0 	strh	r0, [r1]
400191ac:	e2841024 	add	r1, r4, #36	; 0x24
400191b0:	e0811085 	add	r1, r1, r5, lsl #1
400191b4:	e1d100b0 	ldrh	r0, [r1]
400191b8:	ebffef77 	bl	40014f9c <CyU3PDmaSocketDisable>
400191bc:	e2841024 	add	r1, r4, #36	; 0x24
400191c0:	e0811085 	add	r1, r1, r5, lsl #1
400191c4:	e1d100b0 	ldrh	r0, [r1]
400191c8:	e28d1004 	add	r1, sp, #4
400191cc:	ebffef8a 	bl	40014ffc <CyU3PDmaSocketGetConfig>
400191d0:	e2840014 	add	r0, r4, #20
400191d4:	e0800085 	add	r0, r0, r5, lsl #1
400191d8:	e1d000b0 	ldrh	r0, [r0]
400191dc:	e58d0004 	str	r0, [sp, #4]
400191e0:	e3a00000 	mov	r0, #0
400191e4:	e58d0008 	str	r0, [sp, #8]
400191e8:	e58d000c 	str	r0, [sp, #12]
400191ec:	e3a00646 	mov	r0, #73400320	; 0x4600000
400191f0:	e58d0010 	str	r0, [sp, #16]
400191f4:	e2841024 	add	r1, r4, #36	; 0x24
400191f8:	e0811085 	add	r1, r1, r5, lsl #1
400191fc:	e1d100b0 	ldrh	r0, [r1]
40019200:	eb0006a3 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
40019204:	e3500000 	cmp	r0, #0
40019208:	0a000002 	beq	40019218 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
4001920c:	e59d0010 	ldr	r0, [sp, #16]
40019210:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019214:	e58d0010 	str	r0, [sp, #16]
40019218:	e3e00000 	mvn	r0, #0
4001921c:	e58d0014 	str	r0, [sp, #20]
40019220:	e1d400b4 	ldrh	r0, [r4, #4]
40019224:	e3500005 	cmp	r0, #5
40019228:	1a000002 	bne	40019238 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
4001922c:	e3a00040 	mov	r0, #64	; 0x40
40019230:	e58d0018 	str	r0, [sp, #24]
40019234:	ea000001 	b	40019240 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40019238:	e3a00041 	mov	r0, #65	; 0x41
4001923c:	e58d0018 	str	r0, [sp, #24]
40019240:	e2841024 	add	r1, r4, #36	; 0x24
40019244:	e0811085 	add	r1, r1, r5, lsl #1
40019248:	e1d100b0 	ldrh	r0, [r1]
4001924c:	e28d1004 	add	r1, sp, #4
40019250:	ebfff013 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40019254:	e2850001 	add	r0, r5, #1
40019258:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001925c:	e1d400ba 	ldrh	r0, [r4, #10]
40019260:	e1500005 	cmp	r0, r5
40019264:	caffffca 	bgt	40019194 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40019268:	e1d401bc 	ldrh	r0, [r4, #28]
4001926c:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40019270:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40019274:	ebffef48 	bl	40014f9c <CyU3PDmaSocketDisable>
40019278:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001927c:	e28d1004 	add	r1, sp, #4
40019280:	ebffef5d 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40019284:	e1d401bc 	ldrh	r0, [r4, #28]
40019288:	e58d0004 	str	r0, [sp, #4]
4001928c:	e3a00000 	mov	r0, #0
40019290:	e58d0008 	str	r0, [sp, #8]
40019294:	e58d000c 	str	r0, [sp, #12]
40019298:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
4001929c:	e58d0010 	str	r0, [sp, #16]
400192a0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400192a4:	eb00067a 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
400192a8:	e3500000 	cmp	r0, #0
400192ac:	0a000002 	beq	400192bc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
400192b0:	e59d0010 	ldr	r0, [sp, #16]
400192b4:	e3800b01 	orr	r0, r0, #1024	; 0x400
400192b8:	e58d0010 	str	r0, [sp, #16]
400192bc:	e3e00000 	mvn	r0, #0
400192c0:	e58d0014 	str	r0, [sp, #20]
400192c4:	e1d400b4 	ldrh	r0, [r4, #4]
400192c8:	e3500005 	cmp	r0, #5
400192cc:	1a000002 	bne	400192dc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
400192d0:	e3a000c0 	mov	r0, #192	; 0xc0
400192d4:	e58d0018 	str	r0, [sp, #24]
400192d8:	ea000001 	b	400192e4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
400192dc:	e3a000c2 	mov	r0, #194	; 0xc2
400192e0:	e58d0018 	str	r0, [sp, #24]
400192e4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400192e8:	e28d1004 	add	r1, sp, #4
400192ec:	ebffefec 	bl	400152a4 <CyU3PDmaSocketSetConfig>
400192f0:	e3a00000 	mov	r0, #0
400192f4:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
400192f8:	e28dd01c 	add	sp, sp, #28
400192fc:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40019300 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40019300:	e92d4030 	push	{r4, r5, lr}
40019304:	e24dd01c 	sub	sp, sp, #28
40019308:	e1a04000 	mov	r4, r0
4001930c:	e1d401b4 	ldrh	r0, [r4, #20]
40019310:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40019314:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019318:	ebffef1f 	bl	40014f9c <CyU3PDmaSocketDisable>
4001931c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019320:	e28d1004 	add	r1, sp, #4
40019324:	ebffef34 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40019328:	e1d401b4 	ldrh	r0, [r4, #20]
4001932c:	e58d0004 	str	r0, [sp, #4]
40019330:	e3a00000 	mov	r0, #0
40019334:	e58d0008 	str	r0, [sp, #8]
40019338:	e58d000c 	str	r0, [sp, #12]
4001933c:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019340:	e58d0010 	str	r0, [sp, #16]
40019344:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019348:	eb000651 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
4001934c:	e3500000 	cmp	r0, #0
40019350:	0a000002 	beq	40019360 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40019354:	e59d0010 	ldr	r0, [sp, #16]
40019358:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001935c:	e58d0010 	str	r0, [sp, #16]
40019360:	e3e00000 	mvn	r0, #0
40019364:	e58d0014 	str	r0, [sp, #20]
40019368:	e1d400b4 	ldrh	r0, [r4, #4]
4001936c:	e3500006 	cmp	r0, #6
40019370:	1a000002 	bne	40019380 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40019374:	e3a000c0 	mov	r0, #192	; 0xc0
40019378:	e58d0018 	str	r0, [sp, #24]
4001937c:	ea000001 	b	40019388 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40019380:	e3a000c1 	mov	r0, #193	; 0xc1
40019384:	e58d0018 	str	r0, [sp, #24]
40019388:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001938c:	e28d1004 	add	r1, sp, #4
40019390:	ebffefc3 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40019394:	e3a05000 	mov	r5, #0
40019398:	ea000035 	b	40019474 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
4001939c:	e284001c 	add	r0, r4, #28
400193a0:	e0800085 	add	r0, r0, r5, lsl #1
400193a4:	e1d000b0 	ldrh	r0, [r0]
400193a8:	e2841046 	add	r1, r4, #70	; 0x46
400193ac:	e0811085 	add	r1, r1, r5, lsl #1
400193b0:	e1c100b0 	strh	r0, [r1]
400193b4:	e284102c 	add	r1, r4, #44	; 0x2c
400193b8:	e0811085 	add	r1, r1, r5, lsl #1
400193bc:	e1d100b0 	ldrh	r0, [r1]
400193c0:	ebffeef5 	bl	40014f9c <CyU3PDmaSocketDisable>
400193c4:	e284102c 	add	r1, r4, #44	; 0x2c
400193c8:	e0811085 	add	r1, r1, r5, lsl #1
400193cc:	e1d100b0 	ldrh	r0, [r1]
400193d0:	e28d1004 	add	r1, sp, #4
400193d4:	ebffef08 	bl	40014ffc <CyU3PDmaSocketGetConfig>
400193d8:	e284001c 	add	r0, r4, #28
400193dc:	e0800085 	add	r0, r0, r5, lsl #1
400193e0:	e1d000b0 	ldrh	r0, [r0]
400193e4:	e58d0004 	str	r0, [sp, #4]
400193e8:	e3a00000 	mov	r0, #0
400193ec:	e58d0008 	str	r0, [sp, #8]
400193f0:	e58d000c 	str	r0, [sp, #12]
400193f4:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400193f8:	e58d0010 	str	r0, [sp, #16]
400193fc:	e284102c 	add	r1, r4, #44	; 0x2c
40019400:	e0811085 	add	r1, r1, r5, lsl #1
40019404:	e1d100b0 	ldrh	r0, [r1]
40019408:	eb000621 	bl	4001ac94 <CyU3PDmaIsSockAvlEnReqd>
4001940c:	e3500000 	cmp	r0, #0
40019410:	0a000002 	beq	40019420 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40019414:	e59d0010 	ldr	r0, [sp, #16]
40019418:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001941c:	e58d0010 	str	r0, [sp, #16]
40019420:	e3e00000 	mvn	r0, #0
40019424:	e58d0014 	str	r0, [sp, #20]
40019428:	e1d400b4 	ldrh	r0, [r4, #4]
4001942c:	e3500006 	cmp	r0, #6
40019430:	1a000002 	bne	40019440 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40019434:	e3a00040 	mov	r0, #64	; 0x40
40019438:	e58d0018 	str	r0, [sp, #24]
4001943c:	ea000001 	b	40019448 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40019440:	e3a00042 	mov	r0, #66	; 0x42
40019444:	e58d0018 	str	r0, [sp, #24]
40019448:	e284102c 	add	r1, r4, #44	; 0x2c
4001944c:	e0811085 	add	r1, r1, r5, lsl #1
40019450:	e1d100b0 	ldrh	r0, [r1]
40019454:	e28d1004 	add	r1, sp, #4
40019458:	ebffef91 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001945c:	e3a00000 	mov	r0, #0
40019460:	e2841064 	add	r1, r4, #100	; 0x64
40019464:	e0811085 	add	r1, r1, r5, lsl #1
40019468:	e1c100b0 	strh	r0, [r1]
4001946c:	e2850001 	add	r0, r5, #1
40019470:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40019474:	e1d400ba 	ldrh	r0, [r4, #10]
40019478:	e1500005 	cmp	r0, r5
4001947c:	caffffc6 	bgt	4001939c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40019480:	e28dd01c 	add	sp, sp, #28
40019484:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

40019488 <CyU3PDmaMultiChannelSetWrapUp>:
40019488:	e92d4070 	push	{r4, r5, r6, lr}
4001948c:	e1a04000 	mov	r4, r0
40019490:	e1a05001 	mov	r5, r1
40019494:	e3e01000 	mvn	r1, #0
40019498:	e1a00004 	mov	r0, r4
4001949c:	ebfff879 	bl	40017688 <CyU3PDmaMultiChannelAcquireLock>
400194a0:	e1a06000 	mov	r6, r0
400194a4:	e3560000 	cmp	r6, #0
400194a8:	0a000001 	beq	400194b4 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
400194ac:	e1a00006 	mov	r0, r6
400194b0:	e8bd8070 	pop	{r4, r5, r6, pc}
400194b4:	e5940000 	ldr	r0, [r4]
400194b8:	e3500004 	cmp	r0, #4
400194bc:	0a000003 	beq	400194d0 <CyU3PDmaMultiChannelSetWrapUp+0x48>
400194c0:	e5940000 	ldr	r0, [r4]
400194c4:	e3500002 	cmp	r0, #2
400194c8:	0a000000 	beq	400194d0 <CyU3PDmaMultiChannelSetWrapUp+0x48>
400194cc:	e3a06047 	mov	r6, #71	; 0x47
400194d0:	e1d400b4 	ldrh	r0, [r4, #4]
400194d4:	e3500006 	cmp	r0, #6
400194d8:	0a000005 	beq	400194f4 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
400194dc:	e1d400b4 	ldrh	r0, [r4, #4]
400194e0:	e3500008 	cmp	r0, #8
400194e4:	0a000002 	beq	400194f4 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
400194e8:	e1d400b4 	ldrh	r0, [r4, #4]
400194ec:	e3500009 	cmp	r0, #9
400194f0:	1a000003 	bne	40019504 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
400194f4:	e3550000 	cmp	r5, #0
400194f8:	0a000005 	beq	40019514 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
400194fc:	e3a06040 	mov	r6, #64	; 0x40
40019500:	ea000003 	b	40019514 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019504:	e1d400ba 	ldrh	r0, [r4, #10]
40019508:	e1500005 	cmp	r0, r5
4001950c:	ca000000 	bgt	40019514 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019510:	e3a06040 	mov	r6, #64	; 0x40
40019514:	e3560000 	cmp	r6, #0
40019518:	1a000003 	bne	4001952c <CyU3PDmaMultiChannelSetWrapUp+0xa4>
4001951c:	e2841024 	add	r1, r4, #36	; 0x24
40019520:	e0811085 	add	r1, r1, r5, lsl #1
40019524:	e1d100b0 	ldrh	r0, [r1]
40019528:	ebffef88 	bl	40015350 <CyU3PDmaSocketSetWrapUp>
4001952c:	e2840078 	add	r0, r4, #120	; 0x78
40019530:	ebffc3eb 	bl	4000a4e4 <_txe_mutex_put>
40019534:	e1a00006 	mov	r0, r6
40019538:	eaffffdc 	b	400194b0 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

4001953c <CyU3PDmaApplicationDefine>:
4001953c:	e92d4010 	push	{r4, lr}
40019540:	e24dd020 	sub	sp, sp, #32
40019544:	eb000051 	bl	40019690 <CyU3PDmaInit>
40019548:	e3a02028 	mov	r2, #40	; 0x28
4001954c:	e3a01000 	mov	r1, #0
40019550:	e59f007c 	ldr	r0, [pc, #124]	; 400195d4 <CyU3PDmaApplicationDefine+0x98>
40019554:	ebffc275 	bl	40009f30 <_txe_event_flags_create>
40019558:	e3a00c02 	mov	r0, #512	; 0x200
4001955c:	ebffa844 	bl	40003674 <CyU3PMemAlloc>
40019560:	e1a04000 	mov	r4, r0
40019564:	e3a0303c 	mov	r3, #60	; 0x3c
40019568:	e3a02c02 	mov	r2, #512	; 0x200
4001956c:	e1cd20f0 	strd	r2, [sp]
40019570:	e1a03004 	mov	r3, r4
40019574:	e3a02004 	mov	r2, #4
40019578:	e3a01000 	mov	r1, #0
4001957c:	e59f0054 	ldr	r0, [pc, #84]	; 400195d8 <CyU3PDmaApplicationDefine+0x9c>
40019580:	ebffc3ff 	bl	4000a584 <_txe_queue_create>
40019584:	e3a00b01 	mov	r0, #1024	; 0x400
40019588:	ebffa839 	bl	40003674 <CyU3PMemAlloc>
4001958c:	e1a04000 	mov	r4, r0
40019590:	e3a030a8 	mov	r3, #168	; 0xa8
40019594:	e3a02001 	mov	r2, #1
40019598:	e3a01000 	mov	r1, #0
4001959c:	e3a00002 	mov	r0, #2
400195a0:	e28dc00c 	add	ip, sp, #12
400195a4:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400195a8:	e3a02b01 	mov	r2, #1024	; 0x400
400195ac:	e1a03001 	mov	r3, r1
400195b0:	e58d2004 	str	r2, [sp, #4]
400195b4:	e59f2020 	ldr	r2, [pc, #32]	; 400195dc <CyU3PDmaApplicationDefine+0xa0>
400195b8:	e28f1020 	add	r1, pc, #32
400195bc:	e58d0008 	str	r0, [sp, #8]
400195c0:	e59f0028 	ldr	r0, [pc, #40]	; 400195f0 <CyU3PDmaApplicationDefine+0xb4>
400195c4:	e58d4000 	str	r4, [sp]
400195c8:	ebffc4d3 	bl	4000a91c <_txe_thread_create>
400195cc:	e28dd020 	add	sp, sp, #32
400195d0:	e8bd8010 	pop	{r4, pc}
400195d4:	4003192c 	.word	0x4003192c
400195d8:	40031954 	.word	0x40031954
400195dc:	4001ae40 	.word	0x4001ae40
400195e0:	445f3130 	.word	0x445f3130
400195e4:	545f414d 	.word	0x545f414d
400195e8:	41455248 	.word	0x41455248
400195ec:	00000044 	.word	0x00000044
400195f0:	40031884 	.word	0x40031884

Disassembly of section i.CyU3PDmaChannelHandleError:

400195f4 <CyU3PDmaChannelHandleError>:
400195f4:	e92d4010 	push	{r4, lr}
400195f8:	e1a04000 	mov	r4, r0
400195fc:	e3e01000 	mvn	r1, #0
40019600:	e284003c 	add	r0, r4, #60	; 0x3c
40019604:	ebffc381 	bl	4000a410 <_txe_mutex_get>
40019608:	e1d400b4 	ldrh	r0, [r4, #4]
4001960c:	e3500004 	cmp	r0, #4
40019610:	0a000001 	beq	4001961c <CyU3PDmaChannelHandleError+0x28>
40019614:	e1d401b0 	ldrh	r0, [r4, #16]
40019618:	ebffee5f 	bl	40014f9c <CyU3PDmaSocketDisable>
4001961c:	e1d400b4 	ldrh	r0, [r4, #4]
40019620:	e3500003 	cmp	r0, #3
40019624:	0a000001 	beq	40019630 <CyU3PDmaChannelHandleError+0x3c>
40019628:	e1d401b2 	ldrh	r0, [r4, #18]
4001962c:	ebffee5a 	bl	40014f9c <CyU3PDmaSocketDisable>
40019630:	e3a02002 	mov	r2, #2
40019634:	e3e01007 	mvn	r1, #7
40019638:	e2840074 	add	r0, r4, #116	; 0x74
4001963c:	ebffc2db 	bl	4000a1b0 <_txe_event_flags_set>
40019640:	e3a02000 	mov	r2, #0
40019644:	e3a01040 	mov	r1, #64	; 0x40
40019648:	e2840074 	add	r0, r4, #116	; 0x74
4001964c:	ebffc2d7 	bl	4000a1b0 <_txe_event_flags_set>
40019650:	e3a00005 	mov	r0, #5
40019654:	e5840000 	str	r0, [r4]
40019658:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
4001965c:	e3500000 	cmp	r0, #0
40019660:	0a000007 	beq	40019684 <CyU3PDmaChannelHandleError+0x90>
40019664:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40019668:	e3100040 	tst	r0, #64	; 0x40
4001966c:	0a000004 	beq	40019684 <CyU3PDmaChannelHandleError+0x90>
40019670:	e3a02000 	mov	r2, #0
40019674:	e3a01040 	mov	r1, #64	; 0x40
40019678:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
4001967c:	e1a00004 	mov	r0, r4
40019680:	e12fff33 	blx	r3
40019684:	e284003c 	add	r0, r4, #60	; 0x3c
40019688:	ebffc395 	bl	4000a4e4 <_txe_mutex_put>
4001968c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

40019690 <CyU3PDmaInit>:
40019690:	e92d4010 	push	{r4, lr}
40019694:	e3a02020 	mov	r2, #32
40019698:	e3a01000 	mov	r1, #0
4001969c:	e59f006c 	ldr	r0, [pc, #108]	; 40019710 <CyU3PDmaInit+0x80>
400196a0:	ebffa804 	bl	400036b8 <CyU3PMemSet>
400196a4:	e3a02080 	mov	r2, #128	; 0x80
400196a8:	e3a01000 	mov	r1, #0
400196ac:	e59f0060 	ldr	r0, [pc, #96]	; 40019714 <CyU3PDmaInit+0x84>
400196b0:	ebffa800 	bl	400036b8 <CyU3PMemSet>
400196b4:	e3a02020 	mov	r2, #32
400196b8:	e3a01000 	mov	r1, #0
400196bc:	e59f0054 	ldr	r0, [pc, #84]	; 40019718 <CyU3PDmaInit+0x88>
400196c0:	ebffa7fc 	bl	400036b8 <CyU3PMemSet>
400196c4:	e3a02040 	mov	r2, #64	; 0x40
400196c8:	e3a01000 	mov	r1, #0
400196cc:	e59f0048 	ldr	r0, [pc, #72]	; 4001971c <CyU3PDmaInit+0x8c>
400196d0:	ebffa7f8 	bl	400036b8 <CyU3PMemSet>
400196d4:	e3a02040 	mov	r2, #64	; 0x40
400196d8:	e3a01000 	mov	r1, #0
400196dc:	e59f003c 	ldr	r0, [pc, #60]	; 40019720 <CyU3PDmaInit+0x90>
400196e0:	ebffa7f4 	bl	400036b8 <CyU3PMemSet>
400196e4:	e3a00000 	mov	r0, #0
400196e8:	e59f1034 	ldr	r1, [pc, #52]	; 40019724 <CyU3PDmaInit+0x94>
400196ec:	e5810000 	str	r0, [r1]
400196f0:	eb002462 	bl	40022880 <CyU3PDmaDscrListCreate>
400196f4:	ebffa930 	bl	40003bbc <CyU3PDmaBufferInit>
400196f8:	e3a00000 	mov	r0, #0
400196fc:	e59f1024 	ldr	r1, [pc, #36]	; 40019728 <CyU3PDmaInit+0x98>
40019700:	e1c100b0 	strh	r0, [r1]
40019704:	e59f1020 	ldr	r1, [pc, #32]	; 4001972c <CyU3PDmaInit+0x9c>
40019708:	e1c100b0 	strh	r0, [r1]
4001970c:	e8bd8010 	pop	{r4, pc}
40019710:	40031744 	.word	0x40031744
40019714:	40031764 	.word	0x40031764
40019718:	400317e4 	.word	0x400317e4
4001971c:	40031804 	.word	0x40031804
40019720:	40031844 	.word	0x40031844
40019724:	40030cf4 	.word	0x40030cf4
40019728:	40030d1c 	.word	0x40030d1c
4001972c:	40030d1e 	.word	0x40030d1e

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

40019730 <CyU3PDmaIntHandler_TypeAuto>:
40019730:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019734:	e24dd01c 	sub	sp, sp, #28
40019738:	e1a04000 	mov	r4, r0
4001973c:	e5949004 	ldr	r9, [r4, #4]
40019740:	e5948008 	ldr	r8, [r4, #8]
40019744:	e3180040 	tst	r8, #64	; 0x40
40019748:	0a000003 	beq	4001975c <CyU3PDmaIntHandler_TypeAuto+0x2c>
4001974c:	e1a00009 	mov	r0, r9
40019750:	ebffffa7 	bl	400195f4 <CyU3PDmaChannelHandleError>
40019754:	e28dd01c 	add	sp, sp, #28
40019758:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001975c:	e3e01000 	mvn	r1, #0
40019760:	e289003c 	add	r0, r9, #60	; 0x3c
40019764:	ebffc329 	bl	4000a410 <_txe_mutex_get>
40019768:	e1d901b2 	ldrh	r0, [r9, #18]
4001976c:	e5941000 	ldr	r1, [r4]
40019770:	e1500821 	cmp	r0, r1, lsr #16
40019774:	1a00004b 	bne	400198a8 <CyU3PDmaIntHandler_TypeAuto+0x178>
40019778:	e1d901b2 	ldrh	r0, [r9, #18]
4001977c:	e3a0103f 	mov	r1, #63	; 0x3f
40019780:	e0015440 	and	r5, r1, r0, asr #8
40019784:	e1d901b2 	ldrh	r0, [r9, #18]
40019788:	e20060ff 	and	r6, r0, #255	; 0xff
4001978c:	e594000c 	ldr	r0, [r4, #12]
40019790:	e1a07800 	lsl	r7, r0, #16
40019794:	e1a07827 	lsr	r7, r7, #16
40019798:	e3180080 	tst	r8, #128	; 0x80
4001979c:	0a000012 	beq	400197ec <CyU3PDmaIntHandler_TypeAuto+0xbc>
400197a0:	e3a00001 	mov	r0, #1
400197a4:	e5890000 	str	r0, [r9]
400197a8:	e3a02000 	mov	r2, #0
400197ac:	e3a01001 	mov	r1, #1
400197b0:	e2890074 	add	r0, r9, #116	; 0x74
400197b4:	ebffc27d 	bl	4000a1b0 <_txe_event_flags_set>
400197b8:	ebffe599 	bl	40012e24 <CyU3PSysBarrierSync>
400197bc:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400197c0:	e3500000 	cmp	r0, #0
400197c4:	0a000028 	beq	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197c8:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400197cc:	e3100001 	tst	r0, #1
400197d0:	0a000025 	beq	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197d4:	e3a02000 	mov	r2, #0
400197d8:	e3a01001 	mov	r1, #1
400197dc:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197e0:	e1a00009 	mov	r0, r9
400197e4:	e12fff33 	blx	r3
400197e8:	ea00001f 	b	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197ec:	e3180002 	tst	r8, #2
400197f0:	0a00001d 	beq	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197f4:	e5990000 	ldr	r0, [r9]
400197f8:	e3500003 	cmp	r0, #3
400197fc:	1a00001a 	bne	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019800:	e3a00001 	mov	r0, #1
40019804:	e5890000 	str	r0, [r9]
40019808:	e59f0284 	ldr	r0, [pc, #644]	; 40019a94 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001980c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019810:	e0800386 	add	r0, r0, r6, lsl #7
40019814:	e5900014 	ldr	r0, [r0, #20]
40019818:	e3c00002 	bic	r0, r0, #2
4001981c:	e59f1270 	ldr	r1, [pc, #624]	; 40019a94 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019820:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019824:	e0811386 	add	r1, r1, r6, lsl #7
40019828:	e5810014 	str	r0, [r1, #20]
4001982c:	e3a02000 	mov	r2, #0
40019830:	e3a01002 	mov	r1, #2
40019834:	e2890074 	add	r0, r9, #116	; 0x74
40019838:	ebffc25c 	bl	4000a1b0 <_txe_event_flags_set>
4001983c:	ebffe578 	bl	40012e24 <CyU3PSysBarrierSync>
40019840:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019844:	e3500000 	cmp	r0, #0
40019848:	0a000007 	beq	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001984c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019850:	e3100002 	tst	r0, #2
40019854:	0a000004 	beq	4001986c <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019858:	e3a02000 	mov	r2, #0
4001985c:	e3a01002 	mov	r1, #2
40019860:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019864:	e1a00009 	mov	r0, r9
40019868:	e12fff33 	blx	r3
4001986c:	e3180e12 	tst	r8, #288	; 0x120
40019870:	0a000084 	beq	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019874:	ebffe56a 	bl	40012e24 <CyU3PSysBarrierSync>
40019878:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4001987c:	e3500000 	cmp	r0, #0
40019880:	0a000080 	beq	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019884:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019888:	e3100c01 	tst	r0, #256	; 0x100
4001988c:	0a00007d 	beq	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019890:	e3a02000 	mov	r2, #0
40019894:	e3a01c01 	mov	r1, #256	; 0x100
40019898:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001989c:	e1a00009 	mov	r0, r9
400198a0:	e12fff33 	blx	r3
400198a4:	ea000077 	b	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
400198a8:	e1d901b0 	ldrh	r0, [r9, #16]
400198ac:	e3a0103f 	mov	r1, #63	; 0x3f
400198b0:	e0015440 	and	r5, r1, r0, asr #8
400198b4:	e1d901b0 	ldrh	r0, [r9, #16]
400198b8:	e20060ff 	and	r6, r0, #255	; 0xff
400198bc:	e594000c 	ldr	r0, [r4, #12]
400198c0:	e1a07800 	lsl	r7, r0, #16
400198c4:	e1a07827 	lsr	r7, r7, #16
400198c8:	e3180001 	tst	r8, #1
400198cc:	0a00005f 	beq	40019a50 <CyU3PDmaIntHandler_TypeAuto+0x320>
400198d0:	e5990000 	ldr	r0, [r9]
400198d4:	e3500004 	cmp	r0, #4
400198d8:	0a00002b 	beq	4001998c <CyU3PDmaIntHandler_TypeAuto+0x25c>
400198dc:	e1a00000 	nop			; (mov r0, r0)
400198e0:	e1d901b6 	ldrh	r0, [r9, #22]
400198e4:	e28d100c 	add	r1, sp, #12
400198e8:	eb002420 	bl	40022970 <CyU3PDmaDscrGetConfig>
400198ec:	e59d000c 	ldr	r0, [sp, #12]
400198f0:	e58d0000 	str	r0, [sp]
400198f4:	e59d0018 	ldr	r0, [sp, #24]
400198f8:	e59f1198 	ldr	r1, [pc, #408]	; 40019a98 <CyU3PDmaIntHandler_TypeAuto+0x368>
400198fc:	e0010820 	and	r0, r1, r0, lsr #16
40019900:	e1cd00b4 	strh	r0, [sp, #4]
40019904:	e241100f 	sub	r1, r1, #15
40019908:	e59d0018 	ldr	r0, [sp, #24]
4001990c:	e0000001 	and	r0, r0, r1
40019910:	e1cd00b6 	strh	r0, [sp, #6]
40019914:	e59d0018 	ldr	r0, [sp, #24]
40019918:	e200000f 	and	r0, r0, #15
4001991c:	e1cd00b8 	strh	r0, [sp, #8]
40019920:	e1811241 	orr	r1, r1, r1, asr #4
40019924:	e59d0014 	ldr	r0, [sp, #20]
40019928:	e0010820 	and	r0, r1, r0, lsr #16
4001992c:	e1c901b6 	strh	r0, [r9, #22]
40019930:	ebffe53b 	bl	40012e24 <CyU3PSysBarrierSync>
40019934:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019938:	e3500000 	cmp	r0, #0
4001993c:	0a000002 	beq	4001994c <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019940:	e1dd10b6 	ldrh	r1, [sp, #6]
40019944:	e59d0000 	ldr	r0, [sp]
40019948:	ebffe2dc 	bl	400124c0 <CyU3PSysFlushDRegion>
4001994c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019950:	e3500000 	cmp	r0, #0
40019954:	0a000007 	beq	40019978 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019958:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001995c:	e3100008 	tst	r0, #8
40019960:	0a000004 	beq	40019978 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019964:	e1a0200d 	mov	r2, sp
40019968:	e3a01008 	mov	r1, #8
4001996c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019970:	e1a00009 	mov	r0, r9
40019974:	e12fff33 	blx	r3
40019978:	e1d901b6 	ldrh	r0, [r9, #22]
4001997c:	e1500007 	cmp	r0, r7
40019980:	1affffd6 	bne	400198e0 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
40019984:	e1c971be 	strh	r7, [r9, #30]
40019988:	ea000030 	b	40019a50 <CyU3PDmaIntHandler_TypeAuto+0x320>
4001998c:	e1d901b4 	ldrh	r0, [r9, #20]
40019990:	e28d100c 	add	r1, sp, #12
40019994:	eb0023f5 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019998:	e59d000c 	ldr	r0, [sp, #12]
4001999c:	e58d0000 	str	r0, [sp]
400199a0:	e59d0018 	ldr	r0, [sp, #24]
400199a4:	e59f10ec 	ldr	r1, [pc, #236]	; 40019a98 <CyU3PDmaIntHandler_TypeAuto+0x368>
400199a8:	e0010820 	and	r0, r1, r0, lsr #16
400199ac:	e1cd00b4 	strh	r0, [sp, #4]
400199b0:	e241100f 	sub	r1, r1, #15
400199b4:	e59d0018 	ldr	r0, [sp, #24]
400199b8:	e0000001 	and	r0, r0, r1
400199bc:	e1cd00b6 	strh	r0, [sp, #6]
400199c0:	e59d0018 	ldr	r0, [sp, #24]
400199c4:	e200000f 	and	r0, r0, #15
400199c8:	e1cd00b8 	strh	r0, [sp, #8]
400199cc:	e3a00001 	mov	r0, #1
400199d0:	e5890000 	str	r0, [r9]
400199d4:	e59f00b8 	ldr	r0, [pc, #184]	; 40019a94 <CyU3PDmaIntHandler_TypeAuto+0x364>
400199d8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400199dc:	e0800386 	add	r0, r0, r6, lsl #7
400199e0:	e5900014 	ldr	r0, [r0, #20]
400199e4:	e3c00001 	bic	r0, r0, #1
400199e8:	e59f10a4 	ldr	r1, [pc, #164]	; 40019a94 <CyU3PDmaIntHandler_TypeAuto+0x364>
400199ec:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400199f0:	e0811386 	add	r1, r1, r6, lsl #7
400199f4:	e5810014 	str	r0, [r1, #20]
400199f8:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400199fc:	e3500000 	cmp	r0, #0
40019a00:	0a000002 	beq	40019a10 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
40019a04:	e1dd10b6 	ldrh	r1, [sp, #6]
40019a08:	e59d0000 	ldr	r0, [sp]
40019a0c:	ebffe2ab 	bl	400124c0 <CyU3PSysFlushDRegion>
40019a10:	e3a02000 	mov	r2, #0
40019a14:	e3a01004 	mov	r1, #4
40019a18:	e2890074 	add	r0, r9, #116	; 0x74
40019a1c:	ebffc1e3 	bl	4000a1b0 <_txe_event_flags_set>
40019a20:	ebffe4ff 	bl	40012e24 <CyU3PSysBarrierSync>
40019a24:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019a28:	e3500000 	cmp	r0, #0
40019a2c:	0a000007 	beq	40019a50 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019a30:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019a34:	e3100004 	tst	r0, #4
40019a38:	0a000004 	beq	40019a50 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019a3c:	e1a0200d 	mov	r2, sp
40019a40:	e3a01004 	mov	r1, #4
40019a44:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019a48:	e1a00009 	mov	r0, r9
40019a4c:	e12fff33 	blx	r3
40019a50:	e3180020 	tst	r8, #32
40019a54:	0a00000b 	beq	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019a58:	ebffe4f1 	bl	40012e24 <CyU3PSysBarrierSync>
40019a5c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019a60:	e3500000 	cmp	r0, #0
40019a64:	0a000007 	beq	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019a68:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019a6c:	e3100080 	tst	r0, #128	; 0x80
40019a70:	0a000004 	beq	40019a88 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019a74:	e3a02000 	mov	r2, #0
40019a78:	e3a01080 	mov	r1, #128	; 0x80
40019a7c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019a80:	e1a00009 	mov	r0, r9
40019a84:	e12fff33 	blx	r3
40019a88:	e289003c 	add	r0, r9, #60	; 0x3c
40019a8c:	ebffc294 	bl	4000a4e4 <_txe_mutex_put>
40019a90:	eaffff2f 	b	40019754 <CyU3PDmaIntHandler_TypeAuto+0x24>
40019a94:	40030cf8 	.word	0x40030cf8
40019a98:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

40019a9c <CyU3PDmaIntHandler_TypeManual>:
40019a9c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019aa0:	e24dd034 	sub	sp, sp, #52	; 0x34
40019aa4:	e1a04000 	mov	r4, r0
40019aa8:	e5945004 	ldr	r5, [r4, #4]
40019aac:	e5946008 	ldr	r6, [r4, #8]
40019ab0:	e3160040 	tst	r6, #64	; 0x40
40019ab4:	0a000003 	beq	40019ac8 <CyU3PDmaIntHandler_TypeManual+0x2c>
40019ab8:	e1a00005 	mov	r0, r5
40019abc:	ebfffecc 	bl	400195f4 <CyU3PDmaChannelHandleError>
40019ac0:	e28dd034 	add	sp, sp, #52	; 0x34
40019ac4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40019ac8:	e3e01000 	mvn	r1, #0
40019acc:	e285003c 	add	r0, r5, #60	; 0x3c
40019ad0:	ebffc24e 	bl	4000a410 <_txe_mutex_get>
40019ad4:	e1d501b2 	ldrh	r0, [r5, #18]
40019ad8:	e5941000 	ldr	r1, [r4]
40019adc:	e1500821 	cmp	r0, r1, lsr #16
40019ae0:	1a0000d6 	bne	40019e40 <CyU3PDmaIntHandler_TypeManual+0x3a4>
40019ae4:	e594000c 	ldr	r0, [r4, #12]
40019ae8:	e1a07800 	lsl	r7, r0, #16
40019aec:	e1a07827 	lsr	r7, r7, #16
40019af0:	e3160002 	tst	r6, #2
40019af4:	0a000060 	beq	40019c7c <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019af8:	e5950000 	ldr	r0, [r5]
40019afc:	e3500003 	cmp	r0, #3
40019b00:	1a000013 	bne	40019b54 <CyU3PDmaIntHandler_TypeManual+0xb8>
40019b04:	e3a00001 	mov	r0, #1
40019b08:	e5850000 	str	r0, [r5]
40019b0c:	e3a02000 	mov	r2, #0
40019b10:	e3a01002 	mov	r1, #2
40019b14:	e2850074 	add	r0, r5, #116	; 0x74
40019b18:	ebffc1a4 	bl	4000a1b0 <_txe_event_flags_set>
40019b1c:	e3c66080 	bic	r6, r6, #128	; 0x80
40019b20:	ebffe4bf 	bl	40012e24 <CyU3PSysBarrierSync>
40019b24:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b28:	e3500000 	cmp	r0, #0
40019b2c:	0a000052 	beq	40019c7c <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019b30:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b34:	e3100002 	tst	r0, #2
40019b38:	0a00004f 	beq	40019c7c <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019b3c:	e3a02000 	mov	r2, #0
40019b40:	e3a01002 	mov	r1, #2
40019b44:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b48:	e1a00005 	mov	r0, r5
40019b4c:	e12fff33 	blx	r3
40019b50:	ea000049 	b	40019c7c <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019b54:	e1d500b4 	ldrh	r0, [r5, #4]
40019b58:	e3500002 	cmp	r0, #2
40019b5c:	1a000027 	bne	40019c00 <CyU3PDmaIntHandler_TypeManual+0x164>
40019b60:	e1a00000 	nop			; (mov r0, r0)
40019b64:	e1d501ba 	ldrh	r0, [r5, #26]
40019b68:	e28d1024 	add	r1, sp, #36	; 0x24
40019b6c:	eb00237f 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019b70:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b74:	e59f14a8 	ldr	r1, [pc, #1192]	; 4001a024 <CyU3PDmaIntHandler_TypeManual+0x588>
40019b78:	e0000001 	and	r0, r0, r1
40019b7c:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019b80:	e1d501ba 	ldrh	r0, [r5, #26]
40019b84:	e28d1024 	add	r1, sp, #36	; 0x24
40019b88:	eb002393 	bl	400229dc <CyU3PDmaDscrSetConfig>
40019b8c:	e1d511ba 	ldrh	r1, [r5, #26]
40019b90:	e1d501b0 	ldrh	r0, [r5, #16]
40019b94:	e3a02000 	mov	r2, #0
40019b98:	ebffedaf 	bl	4001525c <CyU3PDmaSocketSendEvent>
40019b9c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019ba0:	e59f1480 	ldr	r1, [pc, #1152]	; 4001a028 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019ba4:	e0010820 	and	r0, r1, r0, lsr #16
40019ba8:	e1c501ba 	strh	r0, [r5, #26]
40019bac:	e1d502b0 	ldrh	r0, [r5, #32]
40019bb0:	e28d1024 	add	r1, sp, #36	; 0x24
40019bb4:	eb00236d 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019bb8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019bbc:	e1c502b0 	strh	r0, [r5, #32]
40019bc0:	ebffe497 	bl	40012e24 <CyU3PSysBarrierSync>
40019bc4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019bc8:	e3500000 	cmp	r0, #0
40019bcc:	0a000007 	beq	40019bf0 <CyU3PDmaIntHandler_TypeManual+0x154>
40019bd0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019bd4:	e3100010 	tst	r0, #16
40019bd8:	0a000004 	beq	40019bf0 <CyU3PDmaIntHandler_TypeManual+0x154>
40019bdc:	e3a02000 	mov	r2, #0
40019be0:	e3a01010 	mov	r1, #16
40019be4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019be8:	e1a00005 	mov	r0, r5
40019bec:	e12fff33 	blx	r3
40019bf0:	e1d502b0 	ldrh	r0, [r5, #32]
40019bf4:	e1500007 	cmp	r0, r7
40019bf8:	1affffd9 	bne	40019b64 <CyU3PDmaIntHandler_TypeManual+0xc8>
40019bfc:	ea00001e 	b	40019c7c <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019c00:	e1a00000 	nop			; (mov r0, r0)
40019c04:	e1d501b8 	ldrh	r0, [r5, #24]
40019c08:	e28d1024 	add	r1, sp, #36	; 0x24
40019c0c:	eb002357 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019c10:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c14:	e3100008 	tst	r0, #8
40019c18:	1a000003 	bne	40019c2c <CyU3PDmaIntHandler_TypeManual+0x190>
40019c1c:	e3a02000 	mov	r2, #0
40019c20:	e3a01010 	mov	r1, #16
40019c24:	e2850074 	add	r0, r5, #116	; 0x74
40019c28:	ebffc160 	bl	4000a1b0 <_txe_event_flags_set>
40019c2c:	e1d502b0 	ldrh	r0, [r5, #32]
40019c30:	e28d1024 	add	r1, sp, #36	; 0x24
40019c34:	eb00234d 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019c38:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c3c:	e1c502b0 	strh	r0, [r5, #32]
40019c40:	ebffe477 	bl	40012e24 <CyU3PSysBarrierSync>
40019c44:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019c48:	e3500000 	cmp	r0, #0
40019c4c:	0a000007 	beq	40019c70 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019c50:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019c54:	e3100010 	tst	r0, #16
40019c58:	0a000004 	beq	40019c70 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019c5c:	e3a02000 	mov	r2, #0
40019c60:	e3a01010 	mov	r1, #16
40019c64:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019c68:	e1a00005 	mov	r0, r5
40019c6c:	e12fff33 	blx	r3
40019c70:	e1d502b0 	ldrh	r0, [r5, #32]
40019c74:	e1500007 	cmp	r0, r7
40019c78:	1affffe1 	bne	40019c04 <CyU3PDmaIntHandler_TypeManual+0x168>
40019c7c:	e3160010 	tst	r6, #16
40019c80:	0a000046 	beq	40019da0 <CyU3PDmaIntHandler_TypeManual+0x304>
40019c84:	e1d502b0 	ldrh	r0, [r5, #32]
40019c88:	e28d1024 	add	r1, sp, #36	; 0x24
40019c8c:	eb002337 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019c90:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c94:	e3100001 	tst	r0, #1
40019c98:	0a000040 	beq	40019da0 <CyU3PDmaIntHandler_TypeManual+0x304>
40019c9c:	e1d501b2 	ldrh	r0, [r5, #18]
40019ca0:	ebffecbd 	bl	40014f9c <CyU3PDmaSocketDisable>
40019ca4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ca8:	e59f1374 	ldr	r1, [pc, #884]	; 4001a024 <CyU3PDmaIntHandler_TypeManual+0x588>
40019cac:	e0000001 	and	r0, r0, r1
40019cb0:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019cb4:	e1d502b0 	ldrh	r0, [r5, #32]
40019cb8:	e28d1024 	add	r1, sp, #36	; 0x24
40019cbc:	eb002346 	bl	400229dc <CyU3PDmaDscrSetConfig>
40019cc0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cc4:	e1c502b0 	strh	r0, [r5, #32]
40019cc8:	e1d501b2 	ldrh	r0, [r5, #18]
40019ccc:	e28d100c 	add	r1, sp, #12
40019cd0:	ebffecc9 	bl	40014ffc <CyU3PDmaSocketGetConfig>
40019cd4:	e59d0018 	ldr	r0, [sp, #24]
40019cd8:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019cdc:	e58d0018 	str	r0, [sp, #24]
40019ce0:	e59d0018 	ldr	r0, [sp, #24]
40019ce4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019ce8:	e58d0018 	str	r0, [sp, #24]
40019cec:	e3a00000 	mov	r0, #0
40019cf0:	e58d001c 	str	r0, [sp, #28]
40019cf4:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019cf8:	e2400001 	sub	r0, r0, #1
40019cfc:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
40019d00:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019d04:	e3500000 	cmp	r0, #0
40019d08:	1a000004 	bne	40019d20 <CyU3PDmaIntHandler_TypeManual+0x284>
40019d0c:	e3a00010 	mov	r0, #16
40019d10:	e58d001c 	str	r0, [sp, #28]
40019d14:	e59d0020 	ldr	r0, [sp, #32]
40019d18:	e3c00010 	bic	r0, r0, #16
40019d1c:	e58d0020 	str	r0, [sp, #32]
40019d20:	e1d502b0 	ldrh	r0, [r5, #32]
40019d24:	e58d000c 	str	r0, [sp, #12]
40019d28:	e1d501b2 	ldrh	r0, [r5, #18]
40019d2c:	e28d100c 	add	r1, sp, #12
40019d30:	ebffed5b 	bl	400152a4 <CyU3PDmaSocketSetConfig>
40019d34:	e1d501ba 	ldrh	r0, [r5, #26]
40019d38:	e28d1024 	add	r1, sp, #36	; 0x24
40019d3c:	eb00230b 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019d40:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d44:	e59f12d8 	ldr	r1, [pc, #728]	; 4001a024 <CyU3PDmaIntHandler_TypeManual+0x588>
40019d48:	e0000001 	and	r0, r0, r1
40019d4c:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019d50:	e1d501ba 	ldrh	r0, [r5, #26]
40019d54:	e28d1024 	add	r1, sp, #36	; 0x24
40019d58:	eb00231f 	bl	400229dc <CyU3PDmaDscrSetConfig>
40019d5c:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019d60:	e3500000 	cmp	r0, #0
40019d64:	0a000004 	beq	40019d7c <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019d68:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019d6c:	e59f32b0 	ldr	r3, [pc, #688]	; 4001a024 <CyU3PDmaIntHandler_TypeManual+0x588>
40019d70:	e0021003 	and	r1, r2, r3
40019d74:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019d78:	ebffe1d0 	bl	400124c0 <CyU3PSysFlushDRegion>
40019d7c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019d80:	e59f12a0 	ldr	r1, [pc, #672]	; 4001a028 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019d84:	e0010820 	and	r0, r1, r0, lsr #16
40019d88:	e1c501ba 	strh	r0, [r5, #26]
40019d8c:	e1d511ba 	ldrh	r1, [r5, #26]
40019d90:	e1d501b0 	ldrh	r0, [r5, #16]
40019d94:	e3a02000 	mov	r2, #0
40019d98:	ebffed2f 	bl	4001525c <CyU3PDmaSocketSendEvent>
40019d9c:	ebffe420 	bl	40012e24 <CyU3PSysBarrierSync>
40019da0:	e3160080 	tst	r6, #128	; 0x80
40019da4:	0a000016 	beq	40019e04 <CyU3PDmaIntHandler_TypeManual+0x368>
40019da8:	e1d500b4 	ldrh	r0, [r5, #4]
40019dac:	e3500002 	cmp	r0, #2
40019db0:	1a000001 	bne	40019dbc <CyU3PDmaIntHandler_TypeManual+0x320>
40019db4:	e1d501b0 	ldrh	r0, [r5, #16]
40019db8:	ebffec77 	bl	40014f9c <CyU3PDmaSocketDisable>
40019dbc:	e3a00001 	mov	r0, #1
40019dc0:	e5850000 	str	r0, [r5]
40019dc4:	e3a02000 	mov	r2, #0
40019dc8:	e3a01001 	mov	r1, #1
40019dcc:	e2850074 	add	r0, r5, #116	; 0x74
40019dd0:	ebffc0f6 	bl	4000a1b0 <_txe_event_flags_set>
40019dd4:	ebffe412 	bl	40012e24 <CyU3PSysBarrierSync>
40019dd8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ddc:	e3500000 	cmp	r0, #0
40019de0:	0a000007 	beq	40019e04 <CyU3PDmaIntHandler_TypeManual+0x368>
40019de4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019de8:	e3100001 	tst	r0, #1
40019dec:	0a000004 	beq	40019e04 <CyU3PDmaIntHandler_TypeManual+0x368>
40019df0:	e3a02000 	mov	r2, #0
40019df4:	e3a01001 	mov	r1, #1
40019df8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019dfc:	e1a00005 	mov	r0, r5
40019e00:	e12fff33 	blx	r3
40019e04:	e3160e12 	tst	r6, #288	; 0x120
40019e08:	0a000082 	beq	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019e0c:	ebffe404 	bl	40012e24 <CyU3PSysBarrierSync>
40019e10:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019e14:	e3500000 	cmp	r0, #0
40019e18:	0a00007e 	beq	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019e1c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019e20:	e3100c01 	tst	r0, #256	; 0x100
40019e24:	0a00007b 	beq	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019e28:	e3a02000 	mov	r2, #0
40019e2c:	e3a01c01 	mov	r1, #256	; 0x100
40019e30:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019e34:	e1a00005 	mov	r0, r5
40019e38:	e12fff33 	blx	r3
40019e3c:	ea000075 	b	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019e40:	e594000c 	ldr	r0, [r4, #12]
40019e44:	e1a07800 	lsl	r7, r0, #16
40019e48:	e1a07827 	lsr	r7, r7, #16
40019e4c:	e3160001 	tst	r6, #1
40019e50:	0a00005d 	beq	40019fcc <CyU3PDmaIntHandler_TypeManual+0x530>
40019e54:	e5950000 	ldr	r0, [r5]
40019e58:	e3500004 	cmp	r0, #4
40019e5c:	0a000031 	beq	40019f28 <CyU3PDmaIntHandler_TypeManual+0x48c>
40019e60:	e1a00000 	nop			; (mov r0, r0)
40019e64:	e1d501be 	ldrh	r0, [r5, #30]
40019e68:	e28d1024 	add	r1, sp, #36	; 0x24
40019e6c:	eb0022bf 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019e70:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019e74:	e58d0000 	str	r0, [sp]
40019e78:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e7c:	e59f11a4 	ldr	r1, [pc, #420]	; 4001a028 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019e80:	e0010820 	and	r0, r1, r0, lsr #16
40019e84:	e1cd00b4 	strh	r0, [sp, #4]
40019e88:	e241100f 	sub	r1, r1, #15
40019e8c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e90:	e0000001 	and	r0, r0, r1
40019e94:	e1cd00b6 	strh	r0, [sp, #6]
40019e98:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e9c:	e200000f 	and	r0, r0, #15
40019ea0:	e1cd00b8 	strh	r0, [sp, #8]
40019ea4:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019ea8:	e3500000 	cmp	r0, #0
40019eac:	0a000002 	beq	40019ebc <CyU3PDmaIntHandler_TypeManual+0x420>
40019eb0:	e1dd10b6 	ldrh	r1, [sp, #6]
40019eb4:	e59d0000 	ldr	r0, [sp]
40019eb8:	ebffe180 	bl	400124c0 <CyU3PSysFlushDRegion>
40019ebc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ec0:	e3100008 	tst	r0, #8
40019ec4:	0a000003 	beq	40019ed8 <CyU3PDmaIntHandler_TypeManual+0x43c>
40019ec8:	e3a02000 	mov	r2, #0
40019ecc:	e3a01008 	mov	r1, #8
40019ed0:	e2850074 	add	r0, r5, #116	; 0x74
40019ed4:	ebffc0b5 	bl	4000a1b0 <_txe_event_flags_set>
40019ed8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019edc:	e59f1144 	ldr	r1, [pc, #324]	; 4001a028 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019ee0:	e0010820 	and	r0, r1, r0, lsr #16
40019ee4:	e1c501be 	strh	r0, [r5, #30]
40019ee8:	ebffe3cd 	bl	40012e24 <CyU3PSysBarrierSync>
40019eec:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ef0:	e3500000 	cmp	r0, #0
40019ef4:	0a000007 	beq	40019f18 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019ef8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019efc:	e3100008 	tst	r0, #8
40019f00:	0a000004 	beq	40019f18 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019f04:	e1a0200d 	mov	r2, sp
40019f08:	e3a01008 	mov	r1, #8
40019f0c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019f10:	e1a00005 	mov	r0, r5
40019f14:	e12fff33 	blx	r3
40019f18:	e1d501be 	ldrh	r0, [r5, #30]
40019f1c:	e1500007 	cmp	r0, r7
40019f20:	1affffcf 	bne	40019e64 <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019f24:	ea000028 	b	40019fcc <CyU3PDmaIntHandler_TypeManual+0x530>
40019f28:	e1d501b4 	ldrh	r0, [r5, #20]
40019f2c:	e28d1024 	add	r1, sp, #36	; 0x24
40019f30:	eb00228e 	bl	40022970 <CyU3PDmaDscrGetConfig>
40019f34:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019f38:	e58d0000 	str	r0, [sp]
40019f3c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f40:	e59f10e0 	ldr	r1, [pc, #224]	; 4001a028 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019f44:	e0010820 	and	r0, r1, r0, lsr #16
40019f48:	e1cd00b4 	strh	r0, [sp, #4]
40019f4c:	e241100f 	sub	r1, r1, #15
40019f50:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f54:	e0000001 	and	r0, r0, r1
40019f58:	e1cd00b6 	strh	r0, [sp, #6]
40019f5c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f60:	e200000f 	and	r0, r0, #15
40019f64:	e1cd00b8 	strh	r0, [sp, #8]
40019f68:	e3a00001 	mov	r0, #1
40019f6c:	e5850000 	str	r0, [r5]
40019f70:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019f74:	e3500000 	cmp	r0, #0
40019f78:	0a000002 	beq	40019f88 <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019f7c:	e1dd10b6 	ldrh	r1, [sp, #6]
40019f80:	e59d0000 	ldr	r0, [sp]
40019f84:	ebffe14d 	bl	400124c0 <CyU3PSysFlushDRegion>
40019f88:	e3a02000 	mov	r2, #0
40019f8c:	e3a01004 	mov	r1, #4
40019f90:	e2850074 	add	r0, r5, #116	; 0x74
40019f94:	ebffc085 	bl	4000a1b0 <_txe_event_flags_set>
40019f98:	e3c66080 	bic	r6, r6, #128	; 0x80
40019f9c:	ebffe3a0 	bl	40012e24 <CyU3PSysBarrierSync>
40019fa0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019fa4:	e3500000 	cmp	r0, #0
40019fa8:	0a000007 	beq	40019fcc <CyU3PDmaIntHandler_TypeManual+0x530>
40019fac:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019fb0:	e3100004 	tst	r0, #4
40019fb4:	0a000004 	beq	40019fcc <CyU3PDmaIntHandler_TypeManual+0x530>
40019fb8:	e1a0200d 	mov	r2, sp
40019fbc:	e3a01004 	mov	r1, #4
40019fc0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019fc4:	e1a00005 	mov	r0, r5
40019fc8:	e12fff33 	blx	r3
40019fcc:	e3160080 	tst	r6, #128	; 0x80
40019fd0:	0a000002 	beq	40019fe0 <CyU3PDmaIntHandler_TypeManual+0x544>
40019fd4:	e3a00006 	mov	r0, #6
40019fd8:	e5850000 	str	r0, [r5]
40019fdc:	ebffe390 	bl	40012e24 <CyU3PSysBarrierSync>
40019fe0:	e3160020 	tst	r6, #32
40019fe4:	0a00000b 	beq	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019fe8:	ebffe38d 	bl	40012e24 <CyU3PSysBarrierSync>
40019fec:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ff0:	e3500000 	cmp	r0, #0
40019ff4:	0a000007 	beq	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019ff8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ffc:	e3100080 	tst	r0, #128	; 0x80
4001a000:	0a000004 	beq	4001a018 <CyU3PDmaIntHandler_TypeManual+0x57c>
4001a004:	e3a02000 	mov	r2, #0
4001a008:	e3a01080 	mov	r1, #128	; 0x80
4001a00c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001a010:	e1a00005 	mov	r0, r5
4001a014:	e12fff33 	blx	r3
4001a018:	e285003c 	add	r0, r5, #60	; 0x3c
4001a01c:	ebffc130 	bl	4000a4e4 <_txe_mutex_put>
4001a020:	eafffea6 	b	40019ac0 <CyU3PDmaIntHandler_TypeManual+0x24>
4001a024:	0000fff0 	.word	0x0000fff0
4001a028:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

4001a02c <CyU3PDmaIntHandler_TypeManyToOne>:
4001a02c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001a030:	e24dd034 	sub	sp, sp, #52	; 0x34
4001a034:	e1a04000 	mov	r4, r0
4001a038:	e5945004 	ldr	r5, [r4, #4]
4001a03c:	e5946008 	ldr	r6, [r4, #8]
4001a040:	e3160040 	tst	r6, #64	; 0x40
4001a044:	0a000003 	beq	4001a058 <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
4001a048:	e1a00005 	mov	r0, r5
4001a04c:	eb00033d 	bl	4001ad48 <CyU3PDmaMultiChannelHandleError>
4001a050:	e28dd034 	add	sp, sp, #52	; 0x34
4001a054:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001a058:	e3e01000 	mvn	r1, #0
4001a05c:	e2850078 	add	r0, r5, #120	; 0x78
4001a060:	ebffc0ea 	bl	4000a410 <_txe_mutex_get>
4001a064:	e5940000 	ldr	r0, [r4]
4001a068:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a600 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a06c:	e0019820 	and	r9, r1, r0, lsr #16
4001a070:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a074:	e1500009 	cmp	r0, r9
4001a078:	1a0000d8 	bne	4001a3e0 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
4001a07c:	e594000c 	ldr	r0, [r4, #12]
4001a080:	e0007001 	and	r7, r0, r1
4001a084:	e3160002 	tst	r6, #2
4001a088:	0a000054 	beq	4001a1e0 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a08c:	e5950000 	ldr	r0, [r5]
4001a090:	e3500003 	cmp	r0, #3
4001a094:	0a000030 	beq	4001a15c <CyU3PDmaIntHandler_TypeManyToOne+0x130>
4001a098:	e1a00000 	nop			; (mov r0, r0)
4001a09c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a0a0:	e28d1024 	add	r1, sp, #36	; 0x24
4001a0a4:	eb002231 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a0a8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a0ac:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a600 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a0b0:	e0010820 	and	r0, r1, r0, lsr #16
4001a0b4:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a0b8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a0bc:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a0c0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a0c4:	e28d1024 	add	r1, sp, #36	; 0x24
4001a0c8:	eb002228 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a0cc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a0d0:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a604 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a0d4:	e0000001 	and	r0, r0, r1
4001a0d8:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a0dc:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a0e0:	e28d1024 	add	r1, sp, #36	; 0x24
4001a0e4:	eb00223c 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001a0e8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a0ec:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a608 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a0f0:	e0000001 	and	r0, r0, r1
4001a0f4:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a0f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a0fc:	e1a00820 	lsr	r0, r0, #16
4001a100:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a104:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a108:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a10c:	e1a00802 	lsl	r0, r2, #16
4001a110:	e1a00820 	lsr	r0, r0, #16
4001a114:	e3a02000 	mov	r2, #0
4001a118:	ebffec4f 	bl	4001525c <CyU3PDmaSocketSendEvent>
4001a11c:	ebffe340 	bl	40012e24 <CyU3PSysBarrierSync>
4001a120:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a124:	e3500000 	cmp	r0, #0
4001a128:	0a000007 	beq	4001a14c <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a12c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a130:	e3100010 	tst	r0, #16
4001a134:	0a000004 	beq	4001a14c <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a138:	e3a02000 	mov	r2, #0
4001a13c:	e3a01010 	mov	r1, #16
4001a140:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a144:	e1a00005 	mov	r0, r5
4001a148:	e12fff33 	blx	r3
4001a14c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a150:	e1500007 	cmp	r0, r7
4001a154:	1affffd0 	bne	4001a09c <CyU3PDmaIntHandler_TypeManyToOne+0x70>
4001a158:	ea000020 	b	4001a1e0 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a15c:	e3a00001 	mov	r0, #1
4001a160:	e5850000 	str	r0, [r5]
4001a164:	e1d500b4 	ldrh	r0, [r5, #4]
4001a168:	e3500005 	cmp	r0, #5
4001a16c:	1a00000a 	bne	4001a19c <CyU3PDmaIntHandler_TypeManyToOne+0x170>
4001a170:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a174:	e1a0100d 	mov	r1, sp
4001a178:	ebffeb9f 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001a17c:	e3a00000 	mov	r0, #0
4001a180:	e58d0010 	str	r0, [sp, #16]
4001a184:	e59d0014 	ldr	r0, [sp, #20]
4001a188:	e3c00002 	bic	r0, r0, #2
4001a18c:	e58d0014 	str	r0, [sp, #20]
4001a190:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a194:	e1a0100d 	mov	r1, sp
4001a198:	ebffec41 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001a19c:	e3a02000 	mov	r2, #0
4001a1a0:	e3a01002 	mov	r1, #2
4001a1a4:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a1a8:	ebffc000 	bl	4000a1b0 <_txe_event_flags_set>
4001a1ac:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a1b0:	ebffe31b 	bl	40012e24 <CyU3PSysBarrierSync>
4001a1b4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a1b8:	e3500000 	cmp	r0, #0
4001a1bc:	0a000007 	beq	4001a1e0 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a1c0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a1c4:	e3100002 	tst	r0, #2
4001a1c8:	0a000004 	beq	4001a1e0 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a1cc:	e3a02000 	mov	r2, #0
4001a1d0:	e3a01002 	mov	r1, #2
4001a1d4:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a1d8:	e1a00005 	mov	r0, r5
4001a1dc:	e12fff33 	blx	r3
4001a1e0:	e3160010 	tst	r6, #16
4001a1e4:	0a00004f 	beq	4001a328 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a1e8:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a1ec:	e28d1024 	add	r1, sp, #36	; 0x24
4001a1f0:	eb0021de 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a1f4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a1f8:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a600 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a1fc:	e0010820 	and	r0, r1, r0, lsr #16
4001a200:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a204:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a208:	e3100001 	tst	r0, #1
4001a20c:	0a000045 	beq	4001a328 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a210:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a214:	ebffeb60 	bl	40014f9c <CyU3PDmaSocketDisable>
4001a218:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a21c:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a604 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a220:	e0000001 	and	r0, r0, r1
4001a224:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a228:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a22c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a230:	eb0021e9 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001a234:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a238:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a23c:	e1a0100d 	mov	r1, sp
4001a240:	e1a00009 	mov	r0, r9
4001a244:	ebffeb6c 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001a248:	e59d000c 	ldr	r0, [sp, #12]
4001a24c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a250:	e58d000c 	str	r0, [sp, #12]
4001a254:	e59d000c 	ldr	r0, [sp, #12]
4001a258:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a25c:	e58d000c 	str	r0, [sp, #12]
4001a260:	e3a00000 	mov	r0, #0
4001a264:	e58d0010 	str	r0, [sp, #16]
4001a268:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a26c:	e2400001 	sub	r0, r0, #1
4001a270:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
4001a274:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a278:	e3500000 	cmp	r0, #0
4001a27c:	1a000004 	bne	4001a294 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
4001a280:	e3a00010 	mov	r0, #16
4001a284:	e58d0010 	str	r0, [sp, #16]
4001a288:	e59d0014 	ldr	r0, [sp, #20]
4001a28c:	e3c00010 	bic	r0, r0, #16
4001a290:	e58d0014 	str	r0, [sp, #20]
4001a294:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a298:	e58d0000 	str	r0, [sp]
4001a29c:	e1a0100d 	mov	r1, sp
4001a2a0:	e1a00009 	mov	r0, r9
4001a2a4:	ebffebfe 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001a2a8:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a2ac:	e28d1024 	add	r1, sp, #36	; 0x24
4001a2b0:	eb0021ae 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a2b4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a2b8:	e59f1344 	ldr	r1, [pc, #836]	; 4001a604 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a2bc:	e0000001 	and	r0, r0, r1
4001a2c0:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a2c4:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a2c8:	e28d1024 	add	r1, sp, #36	; 0x24
4001a2cc:	eb0021c2 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001a2d0:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a2d4:	e3500000 	cmp	r0, #0
4001a2d8:	0a000004 	beq	4001a2f0 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
4001a2dc:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
4001a2e0:	e59f331c 	ldr	r3, [pc, #796]	; 4001a604 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a2e4:	e0021003 	and	r1, r2, r3
4001a2e8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a2ec:	ebffe073 	bl	400124c0 <CyU3PSysFlushDRegion>
4001a2f0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a2f4:	e59f130c 	ldr	r1, [pc, #780]	; 4001a608 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a2f8:	e0000001 	and	r0, r0, r1
4001a2fc:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a300:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a304:	e1a00820 	lsr	r0, r0, #16
4001a308:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a30c:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a310:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a314:	e1a00802 	lsl	r0, r2, #16
4001a318:	e1a00820 	lsr	r0, r0, #16
4001a31c:	e3a02000 	mov	r2, #0
4001a320:	ebffebcd 	bl	4001525c <CyU3PDmaSocketSendEvent>
4001a324:	ebffe2be 	bl	40012e24 <CyU3PSysBarrierSync>
4001a328:	e3160080 	tst	r6, #128	; 0x80
4001a32c:	0a00001c 	beq	4001a3a4 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a330:	e3a08000 	mov	r8, #0
4001a334:	ea000005 	b	4001a350 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
4001a338:	e2851024 	add	r1, r5, #36	; 0x24
4001a33c:	e0811088 	add	r1, r1, r8, lsl #1
4001a340:	e1d100b0 	ldrh	r0, [r1]
4001a344:	ebffeb14 	bl	40014f9c <CyU3PDmaSocketDisable>
4001a348:	e2880001 	add	r0, r8, #1
4001a34c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a350:	e1d500ba 	ldrh	r0, [r5, #10]
4001a354:	e1500008 	cmp	r0, r8
4001a358:	cafffff6 	bgt	4001a338 <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
4001a35c:	e3a00001 	mov	r0, #1
4001a360:	e5850000 	str	r0, [r5]
4001a364:	e3a02000 	mov	r2, #0
4001a368:	e3a01001 	mov	r1, #1
4001a36c:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a370:	ebffbf8e 	bl	4000a1b0 <_txe_event_flags_set>
4001a374:	ebffe2aa 	bl	40012e24 <CyU3PSysBarrierSync>
4001a378:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a37c:	e3500000 	cmp	r0, #0
4001a380:	0a000007 	beq	4001a3a4 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a384:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a388:	e3100001 	tst	r0, #1
4001a38c:	0a000004 	beq	4001a3a4 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a390:	e3a02000 	mov	r2, #0
4001a394:	e3a01001 	mov	r1, #1
4001a398:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a39c:	e1a00005 	mov	r0, r5
4001a3a0:	e12fff33 	blx	r3
4001a3a4:	e3160e12 	tst	r6, #288	; 0x120
4001a3a8:	0a000091 	beq	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a3ac:	ebffe29c 	bl	40012e24 <CyU3PSysBarrierSync>
4001a3b0:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a3b4:	e3500000 	cmp	r0, #0
4001a3b8:	0a00008d 	beq	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a3bc:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a3c0:	e3100c01 	tst	r0, #256	; 0x100
4001a3c4:	0a00008a 	beq	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a3c8:	e3a02000 	mov	r2, #0
4001a3cc:	e3a01c01 	mov	r1, #256	; 0x100
4001a3d0:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a3d4:	e1a00005 	mov	r0, r5
4001a3d8:	e12fff33 	blx	r3
4001a3dc:	ea000084 	b	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a3e0:	e594000c 	ldr	r0, [r4, #12]
4001a3e4:	e1a07800 	lsl	r7, r0, #16
4001a3e8:	e1a07827 	lsr	r7, r7, #16
4001a3ec:	e3160001 	tst	r6, #1
4001a3f0:	0a000048 	beq	4001a518 <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
4001a3f4:	e5950000 	ldr	r0, [r5]
4001a3f8:	e3500004 	cmp	r0, #4
4001a3fc:	0a00007c 	beq	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a400:	e3a08000 	mov	r8, #0
4001a404:	ea000007 	b	4001a428 <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
4001a408:	e2850024 	add	r0, r5, #36	; 0x24
4001a40c:	e0800088 	add	r0, r0, r8, lsl #1
4001a410:	e1d000b0 	ldrh	r0, [r0]
4001a414:	e1500009 	cmp	r0, r9
4001a418:	1a000000 	bne	4001a420 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
4001a41c:	ea000004 	b	4001a434 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
4001a420:	e2880001 	add	r0, r8, #1
4001a424:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a428:	e1d500ba 	ldrh	r0, [r5, #10]
4001a42c:	e1500008 	cmp	r0, r8
4001a430:	cafffff4 	bgt	4001a408 <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
4001a434:	e1a00000 	nop			; (mov r0, r0)
4001a438:	e1a00000 	nop			; (mov r0, r0)
4001a43c:	e285103e 	add	r1, r5, #62	; 0x3e
4001a440:	e0811088 	add	r1, r1, r8, lsl #1
4001a444:	e1d100b0 	ldrh	r0, [r1]
4001a448:	e28d1024 	add	r1, sp, #36	; 0x24
4001a44c:	eb002147 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a450:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a454:	e58d0018 	str	r0, [sp, #24]
4001a458:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a45c:	e59f119c 	ldr	r1, [pc, #412]	; 4001a600 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a460:	e0010820 	and	r0, r1, r0, lsr #16
4001a464:	e1cd01bc 	strh	r0, [sp, #28]
4001a468:	e241100f 	sub	r1, r1, #15
4001a46c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a470:	e0000001 	and	r0, r0, r1
4001a474:	e1cd01be 	strh	r0, [sp, #30]
4001a478:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a47c:	e200000f 	and	r0, r0, #15
4001a480:	e1cd02b0 	strh	r0, [sp, #32]
4001a484:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a488:	e3500000 	cmp	r0, #0
4001a48c:	0a000002 	beq	4001a49c <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a490:	e1dd11be 	ldrh	r1, [sp, #30]
4001a494:	e59d0018 	ldr	r0, [sp, #24]
4001a498:	ebffe008 	bl	400124c0 <CyU3PSysFlushDRegion>
4001a49c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a4a0:	e3100008 	tst	r0, #8
4001a4a4:	0a000003 	beq	4001a4b8 <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a4a8:	e3a02000 	mov	r2, #0
4001a4ac:	e3a01008 	mov	r1, #8
4001a4b0:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a4b4:	ebffbf3d 	bl	4000a1b0 <_txe_event_flags_set>
4001a4b8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a4bc:	e59f113c 	ldr	r1, [pc, #316]	; 4001a600 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a4c0:	e0010820 	and	r0, r1, r0, lsr #16
4001a4c4:	e285103e 	add	r1, r5, #62	; 0x3e
4001a4c8:	e0811088 	add	r1, r1, r8, lsl #1
4001a4cc:	e1c100b0 	strh	r0, [r1]
4001a4d0:	ebffe253 	bl	40012e24 <CyU3PSysBarrierSync>
4001a4d4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a4d8:	e3500000 	cmp	r0, #0
4001a4dc:	0a000007 	beq	4001a500 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a4e0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a4e4:	e3100008 	tst	r0, #8
4001a4e8:	0a000004 	beq	4001a500 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a4ec:	e28d2018 	add	r2, sp, #24
4001a4f0:	e3a01008 	mov	r1, #8
4001a4f4:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a4f8:	e1a00005 	mov	r0, r5
4001a4fc:	e12fff33 	blx	r3
4001a500:	e285003e 	add	r0, r5, #62	; 0x3e
4001a504:	e0800088 	add	r0, r0, r8, lsl #1
4001a508:	e1d000b0 	ldrh	r0, [r0]
4001a50c:	e1500007 	cmp	r0, r7
4001a510:	1affffc9 	bne	4001a43c <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a514:	ea000036 	b	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a518:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a51c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a520:	eb002112 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a524:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a528:	e58d0018 	str	r0, [sp, #24]
4001a52c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a530:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a600 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a534:	e0010820 	and	r0, r1, r0, lsr #16
4001a538:	e1cd01bc 	strh	r0, [sp, #28]
4001a53c:	e241100f 	sub	r1, r1, #15
4001a540:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a544:	e0000001 	and	r0, r0, r1
4001a548:	e1cd01be 	strh	r0, [sp, #30]
4001a54c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a550:	e200000f 	and	r0, r0, #15
4001a554:	e1cd02b0 	strh	r0, [sp, #32]
4001a558:	e3a00001 	mov	r0, #1
4001a55c:	e5850000 	str	r0, [r5]
4001a560:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a564:	e3500000 	cmp	r0, #0
4001a568:	0a000002 	beq	4001a578 <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a56c:	e1dd11be 	ldrh	r1, [sp, #30]
4001a570:	e59d0018 	ldr	r0, [sp, #24]
4001a574:	ebffdfd1 	bl	400124c0 <CyU3PSysFlushDRegion>
4001a578:	e1d500b4 	ldrh	r0, [r5, #4]
4001a57c:	e3500005 	cmp	r0, #5
4001a580:	1a00000a 	bne	4001a5b0 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a584:	e1a0100d 	mov	r1, sp
4001a588:	e1a00009 	mov	r0, r9
4001a58c:	ebffea9a 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001a590:	e3a00000 	mov	r0, #0
4001a594:	e58d0010 	str	r0, [sp, #16]
4001a598:	e59d0014 	ldr	r0, [sp, #20]
4001a59c:	e3c00001 	bic	r0, r0, #1
4001a5a0:	e58d0014 	str	r0, [sp, #20]
4001a5a4:	e1a0100d 	mov	r1, sp
4001a5a8:	e1a00009 	mov	r0, r9
4001a5ac:	ebffeb3c 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001a5b0:	e3a02000 	mov	r2, #0
4001a5b4:	e3a01004 	mov	r1, #4
4001a5b8:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a5bc:	ebffbefb 	bl	4000a1b0 <_txe_event_flags_set>
4001a5c0:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a5c4:	ebffe216 	bl	40012e24 <CyU3PSysBarrierSync>
4001a5c8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a5cc:	e3500000 	cmp	r0, #0
4001a5d0:	0a000007 	beq	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a5d4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a5d8:	e3100004 	tst	r0, #4
4001a5dc:	0a000004 	beq	4001a5f4 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a5e0:	e28d2018 	add	r2, sp, #24
4001a5e4:	e3a01004 	mov	r1, #4
4001a5e8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a5ec:	e1a00005 	mov	r0, r5
4001a5f0:	e12fff33 	blx	r3
4001a5f4:	e2850078 	add	r0, r5, #120	; 0x78
4001a5f8:	ebffbfb9 	bl	4000a4e4 <_txe_mutex_put>
4001a5fc:	eafffe93 	b	4001a050 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a600:	0000ffff 	.word	0x0000ffff
4001a604:	0000fff0 	.word	0x0000fff0
4001a608:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a60c <CyU3PDmaIntHandler_TypeOneToMany>:
4001a60c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a610:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a614:	e1a04000 	mov	r4, r0
4001a618:	e594a004 	ldr	sl, [r4, #4]
4001a61c:	e5940000 	ldr	r0, [r4]
4001a620:	e59f1664 	ldr	r1, [pc, #1636]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a624:	e0016820 	and	r6, r1, r0, lsr #16
4001a628:	e5945008 	ldr	r5, [r4, #8]
4001a62c:	e3150040 	tst	r5, #64	; 0x40
4001a630:	0a000003 	beq	4001a644 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a634:	e1a0000a 	mov	r0, sl
4001a638:	eb0001c2 	bl	4001ad48 <CyU3PDmaMultiChannelHandleError>
4001a63c:	e28dd038 	add	sp, sp, #56	; 0x38
4001a640:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a644:	e3e01000 	mvn	r1, #0
4001a648:	e28a0078 	add	r0, sl, #120	; 0x78
4001a64c:	ebffbf6f 	bl	4000a410 <_txe_mutex_get>
4001a650:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a654:	e1500006 	cmp	r0, r6
4001a658:	0a0000fc 	beq	4001aa50 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a65c:	e594000c 	ldr	r0, [r4, #12]
4001a660:	e1a09800 	lsl	r9, r0, #16
4001a664:	e1a09829 	lsr	r9, r9, #16
4001a668:	e3a08000 	mov	r8, #0
4001a66c:	ea000007 	b	4001a690 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a670:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a674:	e0800088 	add	r0, r0, r8, lsl #1
4001a678:	e1d000b0 	ldrh	r0, [r0]
4001a67c:	e1500006 	cmp	r0, r6
4001a680:	1a000000 	bne	4001a688 <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a684:	ea000004 	b	4001a69c <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a688:	e2880001 	add	r0, r8, #1
4001a68c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a690:	e1da00ba 	ldrh	r0, [sl, #10]
4001a694:	e1500008 	cmp	r0, r8
4001a698:	cafffff4 	bgt	4001a670 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a69c:	e1a00000 	nop			; (mov r0, r0)
4001a6a0:	e3150002 	tst	r5, #2
4001a6a4:	0a00007e 	beq	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a6a8:	e59a0000 	ldr	r0, [sl]
4001a6ac:	e3500003 	cmp	r0, #3
4001a6b0:	0a00005a 	beq	4001a820 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a6b4:	e1a00000 	nop			; (mov r0, r0)
4001a6b8:	e28a1046 	add	r1, sl, #70	; 0x46
4001a6bc:	e0811088 	add	r1, r1, r8, lsl #1
4001a6c0:	e1d100b0 	ldrh	r0, [r1]
4001a6c4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a6c8:	eb0020a8 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a6cc:	e28a1046 	add	r1, sl, #70	; 0x46
4001a6d0:	e0811088 	add	r1, r1, r8, lsl #1
4001a6d4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a6d8:	e1c100b0 	strh	r0, [r1]
4001a6dc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a6e0:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a6e4:	e0017820 	and	r7, r1, r0, lsr #16
4001a6e8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a6ec:	e1a00007 	mov	r0, r7
4001a6f0:	eb00209e 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a6f4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6f8:	e59f1590 	ldr	r1, [pc, #1424]	; 4001ac90 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a6fc:	e0000001 	and	r0, r0, r1
4001a700:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a704:	e28d1028 	add	r1, sp, #40	; 0x28
4001a708:	e1a00007 	mov	r0, r7
4001a70c:	eb0020b2 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001a710:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a714:	e3a02000 	mov	r2, #0
4001a718:	e1a01007 	mov	r1, r7
4001a71c:	ebffeace 	bl	4001525c <CyU3PDmaSocketSendEvent>
4001a720:	ebffe1bf 	bl	40012e24 <CyU3PSysBarrierSync>
4001a724:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a728:	e3500000 	cmp	r0, #0
4001a72c:	0a000007 	beq	4001a750 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a730:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a734:	e3100010 	tst	r0, #16
4001a738:	0a000004 	beq	4001a750 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a73c:	e3a02000 	mov	r2, #0
4001a740:	e3a01010 	mov	r1, #16
4001a744:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a748:	e1a0000a 	mov	r0, sl
4001a74c:	e12fff33 	blx	r3
4001a750:	e28a0046 	add	r0, sl, #70	; 0x46
4001a754:	e0800088 	add	r0, r0, r8, lsl #1
4001a758:	e1d000b0 	ldrh	r0, [r0]
4001a75c:	e1500009 	cmp	r0, r9
4001a760:	1affffd4 	bne	4001a6b8 <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a764:	e59a0000 	ldr	r0, [sl]
4001a768:	e3500006 	cmp	r0, #6
4001a76c:	1a00004c 	bne	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a770:	e1da00b8 	ldrh	r0, [sl, #8]
4001a774:	e1da10ba 	ldrh	r1, [sl, #10]
4001a778:	e0000091 	mul	r0, r1, r0
4001a77c:	e1a08800 	lsl	r8, r0, #16
4001a780:	e1a08828 	lsr	r8, r8, #16
4001a784:	e1da71b4 	ldrh	r7, [sl, #20]
4001a788:	ea00000c 	b	4001a7c0 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a78c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a790:	e1a00007 	mov	r0, r7
4001a794:	eb002075 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a798:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a79c:	e3100008 	tst	r0, #8
4001a7a0:	0a000000 	beq	4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a7a4:	ea000007 	b	4001a7c8 <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a7a8:	e2480001 	sub	r0, r8, #1
4001a7ac:	e1a08800 	lsl	r8, r0, #16
4001a7b0:	e1a08828 	lsr	r8, r8, #16
4001a7b4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a7b8:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a7bc:	e0017820 	and	r7, r1, r0, lsr #16
4001a7c0:	e3580000 	cmp	r8, #0
4001a7c4:	1afffff0 	bne	4001a78c <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a7c8:	e1a00000 	nop			; (mov r0, r0)
4001a7cc:	e3580000 	cmp	r8, #0
4001a7d0:	1a000033 	bne	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7d4:	e3a00001 	mov	r0, #1
4001a7d8:	e58a0000 	str	r0, [sl]
4001a7dc:	e3a02000 	mov	r2, #0
4001a7e0:	e3a01001 	mov	r1, #1
4001a7e4:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a7e8:	ebffbe70 	bl	4000a1b0 <_txe_event_flags_set>
4001a7ec:	ebffe18c 	bl	40012e24 <CyU3PSysBarrierSync>
4001a7f0:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a7f4:	e3500000 	cmp	r0, #0
4001a7f8:	0a000029 	beq	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7fc:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a800:	e3100001 	tst	r0, #1
4001a804:	0a000026 	beq	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a808:	e3a02000 	mov	r2, #0
4001a80c:	e3a01001 	mov	r1, #1
4001a810:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a814:	e1a0000a 	mov	r0, sl
4001a818:	e12fff33 	blx	r3
4001a81c:	ea000020 	b	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a820:	e3a00001 	mov	r0, #1
4001a824:	e58a0000 	str	r0, [sl]
4001a828:	e1da00b4 	ldrh	r0, [sl, #4]
4001a82c:	e3500006 	cmp	r0, #6
4001a830:	1a00000a 	bne	4001a860 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a834:	e28d1004 	add	r1, sp, #4
4001a838:	e1a00006 	mov	r0, r6
4001a83c:	ebffe9ee 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001a840:	e3a00000 	mov	r0, #0
4001a844:	e58d0014 	str	r0, [sp, #20]
4001a848:	e59d0018 	ldr	r0, [sp, #24]
4001a84c:	e3c00002 	bic	r0, r0, #2
4001a850:	e58d0018 	str	r0, [sp, #24]
4001a854:	e28d1004 	add	r1, sp, #4
4001a858:	e1a00006 	mov	r0, r6
4001a85c:	ebffea90 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001a860:	e3a02000 	mov	r2, #0
4001a864:	e3a01002 	mov	r1, #2
4001a868:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a86c:	ebffbe4f 	bl	4000a1b0 <_txe_event_flags_set>
4001a870:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a874:	ebffe16a 	bl	40012e24 <CyU3PSysBarrierSync>
4001a878:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a87c:	e3500000 	cmp	r0, #0
4001a880:	0a000007 	beq	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a884:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a888:	e3100002 	tst	r0, #2
4001a88c:	0a000004 	beq	4001a8a4 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a890:	e3a02000 	mov	r2, #0
4001a894:	e3a01002 	mov	r1, #2
4001a898:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a89c:	e1a0000a 	mov	r0, sl
4001a8a0:	e12fff33 	blx	r3
4001a8a4:	e3150010 	tst	r5, #16
4001a8a8:	0a000059 	beq	4001aa14 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a8ac:	e28a1046 	add	r1, sl, #70	; 0x46
4001a8b0:	e0811088 	add	r1, r1, r8, lsl #1
4001a8b4:	e1d100b0 	ldrh	r0, [r1]
4001a8b8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a8bc:	eb00202b 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a8c0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a8c4:	e3100001 	tst	r0, #1
4001a8c8:	0a000051 	beq	4001aa14 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a8cc:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a8d0:	e0811088 	add	r1, r1, r8, lsl #1
4001a8d4:	e1d100b0 	ldrh	r0, [r1]
4001a8d8:	ebffe9af 	bl	40014f9c <CyU3PDmaSocketDisable>
4001a8dc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a8e0:	e59f13a8 	ldr	r1, [pc, #936]	; 4001ac90 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a8e4:	e0000001 	and	r0, r0, r1
4001a8e8:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a8ec:	e28a1046 	add	r1, sl, #70	; 0x46
4001a8f0:	e0811088 	add	r1, r1, r8, lsl #1
4001a8f4:	e1d100b0 	ldrh	r0, [r1]
4001a8f8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a8fc:	eb002036 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001a900:	e28a1046 	add	r1, sl, #70	; 0x46
4001a904:	e0811088 	add	r1, r1, r8, lsl #1
4001a908:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a90c:	e1c100b0 	strh	r0, [r1]
4001a910:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a914:	e0811088 	add	r1, r1, r8, lsl #1
4001a918:	e1d100b0 	ldrh	r0, [r1]
4001a91c:	e28d1004 	add	r1, sp, #4
4001a920:	ebffe9b5 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001a924:	e59d0010 	ldr	r0, [sp, #16]
4001a928:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a92c:	e58d0010 	str	r0, [sp, #16]
4001a930:	e59d0010 	ldr	r0, [sp, #16]
4001a934:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a938:	e58d0010 	str	r0, [sp, #16]
4001a93c:	e3a00000 	mov	r0, #0
4001a940:	e58d0014 	str	r0, [sp, #20]
4001a944:	e28a0064 	add	r0, sl, #100	; 0x64
4001a948:	e0800088 	add	r0, r0, r8, lsl #1
4001a94c:	e1d000b0 	ldrh	r0, [r0]
4001a950:	e2400001 	sub	r0, r0, #1
4001a954:	e28a1064 	add	r1, sl, #100	; 0x64
4001a958:	e0811088 	add	r1, r1, r8, lsl #1
4001a95c:	e1c100b0 	strh	r0, [r1]
4001a960:	e28a0064 	add	r0, sl, #100	; 0x64
4001a964:	e0800088 	add	r0, r0, r8, lsl #1
4001a968:	e1d000b0 	ldrh	r0, [r0]
4001a96c:	e3500000 	cmp	r0, #0
4001a970:	1a000004 	bne	4001a988 <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a974:	e3a00010 	mov	r0, #16
4001a978:	e58d0014 	str	r0, [sp, #20]
4001a97c:	e59d0018 	ldr	r0, [sp, #24]
4001a980:	e3c00010 	bic	r0, r0, #16
4001a984:	e58d0018 	str	r0, [sp, #24]
4001a988:	e28a0046 	add	r0, sl, #70	; 0x46
4001a98c:	e0800088 	add	r0, r0, r8, lsl #1
4001a990:	e1d000b0 	ldrh	r0, [r0]
4001a994:	e58d0004 	str	r0, [sp, #4]
4001a998:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a99c:	e0811088 	add	r1, r1, r8, lsl #1
4001a9a0:	e1d100b0 	ldrh	r0, [r1]
4001a9a4:	e28d1004 	add	r1, sp, #4
4001a9a8:	ebffea3d 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001a9ac:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a9b0:	e59f12d4 	ldr	r1, [pc, #724]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a9b4:	e0017820 	and	r7, r1, r0, lsr #16
4001a9b8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a9bc:	e1a00007 	mov	r0, r7
4001a9c0:	eb001fea 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001a9c4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9c8:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ac90 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a9cc:	e0000001 	and	r0, r0, r1
4001a9d0:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a9d4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a9d8:	e1a00007 	mov	r0, r7
4001a9dc:	eb001ffe 	bl	400229dc <CyU3PDmaDscrSetConfig>
4001a9e0:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a9e4:	e3500000 	cmp	r0, #0
4001a9e8:	0a000004 	beq	4001aa00 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a9ec:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a9f0:	e59f3298 	ldr	r3, [pc, #664]	; 4001ac90 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a9f4:	e0021003 	and	r1, r2, r3
4001a9f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a9fc:	ebffdeaf 	bl	400124c0 <CyU3PSysFlushDRegion>
4001aa00:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001aa04:	e3a02000 	mov	r2, #0
4001aa08:	e1a01007 	mov	r1, r7
4001aa0c:	ebffea12 	bl	4001525c <CyU3PDmaSocketSendEvent>
4001aa10:	ebffe103 	bl	40012e24 <CyU3PSysBarrierSync>
4001aa14:	e3150020 	tst	r5, #32
4001aa18:	0a000098 	beq	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aa1c:	ebffe100 	bl	40012e24 <CyU3PSysBarrierSync>
4001aa20:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001aa24:	e3500000 	cmp	r0, #0
4001aa28:	0a000094 	beq	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aa2c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001aa30:	e3100080 	tst	r0, #128	; 0x80
4001aa34:	0a000091 	beq	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aa38:	e3a02000 	mov	r2, #0
4001aa3c:	e3a01080 	mov	r1, #128	; 0x80
4001aa40:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001aa44:	e1a0000a 	mov	r0, sl
4001aa48:	e12fff33 	blx	r3
4001aa4c:	ea00008b 	b	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aa50:	e594000c 	ldr	r0, [r4, #12]
4001aa54:	e1a09800 	lsl	r9, r0, #16
4001aa58:	e1a09829 	lsr	r9, r9, #16
4001aa5c:	e3150001 	tst	r5, #1
4001aa60:	0a00006b 	beq	4001ac14 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001aa64:	e59a0000 	ldr	r0, [sl]
4001aa68:	e3500004 	cmp	r0, #4
4001aa6c:	0a000031 	beq	4001ab38 <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001aa70:	e1a00000 	nop			; (mov r0, r0)
4001aa74:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001aa78:	e28d1028 	add	r1, sp, #40	; 0x28
4001aa7c:	eb001fbb 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001aa80:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001aa84:	e58d001c 	str	r0, [sp, #28]
4001aa88:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa8c:	e59f11f8 	ldr	r1, [pc, #504]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aa90:	e0010820 	and	r0, r1, r0, lsr #16
4001aa94:	e1cd02b0 	strh	r0, [sp, #32]
4001aa98:	e241100f 	sub	r1, r1, #15
4001aa9c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aaa0:	e0000001 	and	r0, r0, r1
4001aaa4:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001aaa8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aaac:	e200000f 	and	r0, r0, #15
4001aab0:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001aab4:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001aab8:	e3500000 	cmp	r0, #0
4001aabc:	0a000002 	beq	4001aacc <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001aac0:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001aac4:	e59d001c 	ldr	r0, [sp, #28]
4001aac8:	ebffde7c 	bl	400124c0 <CyU3PSysFlushDRegion>
4001aacc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aad0:	e3100008 	tst	r0, #8
4001aad4:	0a000003 	beq	4001aae8 <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001aad8:	e3a02000 	mov	r2, #0
4001aadc:	e3a01008 	mov	r1, #8
4001aae0:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001aae4:	ebffbdb1 	bl	4000a1b0 <_txe_event_flags_set>
4001aae8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001aaec:	e59f1198 	ldr	r1, [pc, #408]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aaf0:	e0010820 	and	r0, r1, r0, lsr #16
4001aaf4:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001aaf8:	ebffe0c9 	bl	40012e24 <CyU3PSysBarrierSync>
4001aafc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab00:	e3500000 	cmp	r0, #0
4001ab04:	0a000007 	beq	4001ab28 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001ab08:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ab0c:	e3100008 	tst	r0, #8
4001ab10:	0a000004 	beq	4001ab28 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001ab14:	e28d201c 	add	r2, sp, #28
4001ab18:	e3a01008 	mov	r1, #8
4001ab1c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ab20:	e1a0000a 	mov	r0, sl
4001ab24:	e12fff33 	blx	r3
4001ab28:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001ab2c:	e1500009 	cmp	r0, r9
4001ab30:	1affffcf 	bne	4001aa74 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001ab34:	ea000036 	b	4001ac14 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab38:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001ab3c:	e28d1028 	add	r1, sp, #40	; 0x28
4001ab40:	eb001f8a 	bl	40022970 <CyU3PDmaDscrGetConfig>
4001ab44:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001ab48:	e58d001c 	str	r0, [sp, #28]
4001ab4c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001ab50:	e59f1134 	ldr	r1, [pc, #308]	; 4001ac8c <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001ab54:	e0010820 	and	r0, r1, r0, lsr #16
4001ab58:	e1cd02b0 	strh	r0, [sp, #32]
4001ab5c:	e241100f 	sub	r1, r1, #15
4001ab60:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001ab64:	e0000001 	and	r0, r0, r1
4001ab68:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001ab6c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001ab70:	e200000f 	and	r0, r0, #15
4001ab74:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001ab78:	e3a00001 	mov	r0, #1
4001ab7c:	e58a0000 	str	r0, [sl]
4001ab80:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001ab84:	e3500000 	cmp	r0, #0
4001ab88:	0a000002 	beq	4001ab98 <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001ab8c:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001ab90:	e59d001c 	ldr	r0, [sp, #28]
4001ab94:	ebffde49 	bl	400124c0 <CyU3PSysFlushDRegion>
4001ab98:	e1da00b4 	ldrh	r0, [sl, #4]
4001ab9c:	e3500006 	cmp	r0, #6
4001aba0:	1a00000a 	bne	4001abd0 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001aba4:	e28d1004 	add	r1, sp, #4
4001aba8:	e1a00006 	mov	r0, r6
4001abac:	ebffe912 	bl	40014ffc <CyU3PDmaSocketGetConfig>
4001abb0:	e3a00000 	mov	r0, #0
4001abb4:	e58d0014 	str	r0, [sp, #20]
4001abb8:	e59d0018 	ldr	r0, [sp, #24]
4001abbc:	e3c00001 	bic	r0, r0, #1
4001abc0:	e58d0018 	str	r0, [sp, #24]
4001abc4:	e28d1004 	add	r1, sp, #4
4001abc8:	e1a00006 	mov	r0, r6
4001abcc:	ebffe9b4 	bl	400152a4 <CyU3PDmaSocketSetConfig>
4001abd0:	e3a02000 	mov	r2, #0
4001abd4:	e3a01004 	mov	r1, #4
4001abd8:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001abdc:	ebffbd73 	bl	4000a1b0 <_txe_event_flags_set>
4001abe0:	e3c55080 	bic	r5, r5, #128	; 0x80
4001abe4:	ebffe08e 	bl	40012e24 <CyU3PSysBarrierSync>
4001abe8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001abec:	e3500000 	cmp	r0, #0
4001abf0:	0a000007 	beq	4001ac14 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001abf4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001abf8:	e3100004 	tst	r0, #4
4001abfc:	0a000004 	beq	4001ac14 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ac00:	e28d201c 	add	r2, sp, #28
4001ac04:	e3a01004 	mov	r1, #4
4001ac08:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ac0c:	e1a0000a 	mov	r0, sl
4001ac10:	e12fff33 	blx	r3
4001ac14:	e3150080 	tst	r5, #128	; 0x80
4001ac18:	0a000018 	beq	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ac1c:	e1da00b4 	ldrh	r0, [sl, #4]
4001ac20:	e3500006 	cmp	r0, #6
4001ac24:	1a000012 	bne	4001ac74 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001ac28:	e3a00001 	mov	r0, #1
4001ac2c:	e58a0000 	str	r0, [sl]
4001ac30:	e3a02000 	mov	r2, #0
4001ac34:	e3a01001 	mov	r1, #1
4001ac38:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001ac3c:	ebffbd5b 	bl	4000a1b0 <_txe_event_flags_set>
4001ac40:	ebffe077 	bl	40012e24 <CyU3PSysBarrierSync>
4001ac44:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ac48:	e3500000 	cmp	r0, #0
4001ac4c:	0a00000b 	beq	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ac50:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ac54:	e3100001 	tst	r0, #1
4001ac58:	0a000008 	beq	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ac5c:	e3a02000 	mov	r2, #0
4001ac60:	e3a01001 	mov	r1, #1
4001ac64:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ac68:	e1a0000a 	mov	r0, sl
4001ac6c:	e12fff33 	blx	r3
4001ac70:	ea000002 	b	4001ac80 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ac74:	e3a00006 	mov	r0, #6
4001ac78:	e58a0000 	str	r0, [sl]
4001ac7c:	ebffe068 	bl	40012e24 <CyU3PSysBarrierSync>
4001ac80:	e28a0078 	add	r0, sl, #120	; 0x78
4001ac84:	ebffbe16 	bl	4000a4e4 <_txe_mutex_put>
4001ac88:	eafffe6b 	b	4001a63c <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001ac8c:	0000ffff 	.word	0x0000ffff
4001ac90:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001ac94 <CyU3PDmaIsSockAvlEnReqd>:
4001ac94:	e1a01000 	mov	r1, r0
4001ac98:	e3a0003f 	mov	r0, #63	; 0x3f
4001ac9c:	e0000441 	and	r0, r0, r1, asr #8
4001aca0:	e3500003 	cmp	r0, #3
4001aca4:	1a000004 	bne	4001acbc <CyU3PDmaIsSockAvlEnReqd+0x28>
4001aca8:	e3a00001 	mov	r0, #1
4001acac:	e59f203c 	ldr	r2, [pc, #60]	; 4001acf0 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001acb0:	e1d220b0 	ldrh	r2, [r2]
4001acb4:	e1120110 	tst	r2, r0, lsl r1
4001acb8:	1a000008 	bne	4001ace0 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001acbc:	e3a0003f 	mov	r0, #63	; 0x3f
4001acc0:	e0000441 	and	r0, r0, r1, asr #8
4001acc4:	e3500004 	cmp	r0, #4
4001acc8:	1a000006 	bne	4001ace8 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001accc:	e3a00001 	mov	r0, #1
4001acd0:	e59f201c 	ldr	r2, [pc, #28]	; 4001acf4 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001acd4:	e1d220b0 	ldrh	r2, [r2]
4001acd8:	e1120110 	tst	r2, r0, lsl r1
4001acdc:	0a000001 	beq	4001ace8 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001ace0:	e3a00001 	mov	r0, #1
4001ace4:	e12fff1e 	bx	lr
4001ace8:	e3a00000 	mov	r0, #0
4001acec:	eafffffc 	b	4001ace4 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001acf0:	40030d1c 	.word	0x40030d1c
4001acf4:	40030d1e 	.word	0x40030d1e

Disassembly of section i.CyU3PDmaMsgSend:

4001acf8 <CyU3PDmaMsgSend>:
4001acf8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001acfc:	e1a04000 	mov	r4, r0
4001ad00:	e1a05001 	mov	r5, r1
4001ad04:	e1a07002 	mov	r7, r2
4001ad08:	e3570001 	cmp	r7, #1
4001ad0c:	1a000005 	bne	4001ad28 <CyU3PDmaMsgSend+0x30>
4001ad10:	e1a02005 	mov	r2, r5
4001ad14:	e1a01004 	mov	r1, r4
4001ad18:	e59f0024 	ldr	r0, [pc, #36]	; 4001ad44 <CyU3PDmaMsgSend+0x4c>
4001ad1c:	ebffbe86 	bl	4000a73c <_txe_queue_front_send>
4001ad20:	e1a06000 	mov	r6, r0
4001ad24:	ea000004 	b	4001ad3c <CyU3PDmaMsgSend+0x44>
4001ad28:	e1a02005 	mov	r2, r5
4001ad2c:	e1a01004 	mov	r1, r4
4001ad30:	e59f000c 	ldr	r0, [pc, #12]	; 4001ad44 <CyU3PDmaMsgSend+0x4c>
4001ad34:	ebffbed0 	bl	4000a87c <_txe_queue_send>
4001ad38:	e1a06000 	mov	r6, r0
4001ad3c:	e1a00006 	mov	r0, r6
4001ad40:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ad44:	40031954 	.word	0x40031954

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001ad48 <CyU3PDmaMultiChannelHandleError>:
4001ad48:	e92d4070 	push	{r4, r5, r6, lr}
4001ad4c:	e1a04000 	mov	r4, r0
4001ad50:	e3e01000 	mvn	r1, #0
4001ad54:	e2840078 	add	r0, r4, #120	; 0x78
4001ad58:	ebffbdac 	bl	4000a410 <_txe_mutex_get>
4001ad5c:	e1d400b4 	ldrh	r0, [r4, #4]
4001ad60:	e3500005 	cmp	r0, #5
4001ad64:	0a000002 	beq	4001ad74 <CyU3PDmaMultiChannelHandleError+0x2c>
4001ad68:	e1d400b4 	ldrh	r0, [r4, #4]
4001ad6c:	e3500007 	cmp	r0, #7
4001ad70:	1a00000d 	bne	4001adac <CyU3PDmaMultiChannelHandleError+0x64>
4001ad74:	e3a05000 	mov	r5, #0
4001ad78:	ea000005 	b	4001ad94 <CyU3PDmaMultiChannelHandleError+0x4c>
4001ad7c:	e2841024 	add	r1, r4, #36	; 0x24
4001ad80:	e0811085 	add	r1, r1, r5, lsl #1
4001ad84:	e1d100b0 	ldrh	r0, [r1]
4001ad88:	ebffe883 	bl	40014f9c <CyU3PDmaSocketDisable>
4001ad8c:	e2850001 	add	r0, r5, #1
4001ad90:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ad94:	e1d400ba 	ldrh	r0, [r4, #10]
4001ad98:	e1500005 	cmp	r0, r5
4001ad9c:	cafffff6 	bgt	4001ad7c <CyU3PDmaMultiChannelHandleError+0x34>
4001ada0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001ada4:	ebffe87c 	bl	40014f9c <CyU3PDmaSocketDisable>
4001ada8:	ea00000c 	b	4001ade0 <CyU3PDmaMultiChannelHandleError+0x98>
4001adac:	e3a05000 	mov	r5, #0
4001adb0:	ea000005 	b	4001adcc <CyU3PDmaMultiChannelHandleError+0x84>
4001adb4:	e284102c 	add	r1, r4, #44	; 0x2c
4001adb8:	e0811085 	add	r1, r1, r5, lsl #1
4001adbc:	e1d100b0 	ldrh	r0, [r1]
4001adc0:	ebffe875 	bl	40014f9c <CyU3PDmaSocketDisable>
4001adc4:	e2850001 	add	r0, r5, #1
4001adc8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001adcc:	e1d400ba 	ldrh	r0, [r4, #10]
4001add0:	e1500005 	cmp	r0, r5
4001add4:	cafffff6 	bgt	4001adb4 <CyU3PDmaMultiChannelHandleError+0x6c>
4001add8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001addc:	ebffe86e 	bl	40014f9c <CyU3PDmaSocketDisable>
4001ade0:	e3a02002 	mov	r2, #2
4001ade4:	e3e01007 	mvn	r1, #7
4001ade8:	e28400b0 	add	r0, r4, #176	; 0xb0
4001adec:	ebffbcef 	bl	4000a1b0 <_txe_event_flags_set>
4001adf0:	e3a02000 	mov	r2, #0
4001adf4:	e3a01040 	mov	r1, #64	; 0x40
4001adf8:	e28400b0 	add	r0, r4, #176	; 0xb0
4001adfc:	ebffbceb 	bl	4000a1b0 <_txe_event_flags_set>
4001ae00:	e3a00005 	mov	r0, #5
4001ae04:	e5840000 	str	r0, [r4]
4001ae08:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001ae0c:	e3500000 	cmp	r0, #0
4001ae10:	0a000007 	beq	4001ae34 <CyU3PDmaMultiChannelHandleError+0xec>
4001ae14:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001ae18:	e3100040 	tst	r0, #64	; 0x40
4001ae1c:	0a000004 	beq	4001ae34 <CyU3PDmaMultiChannelHandleError+0xec>
4001ae20:	e3a02000 	mov	r2, #0
4001ae24:	e3a01040 	mov	r1, #64	; 0x40
4001ae28:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001ae2c:	e1a00004 	mov	r0, r4
4001ae30:	e12fff33 	blx	r3
4001ae34:	e2840078 	add	r0, r4, #120	; 0x78
4001ae38:	ebffbda9 	bl	4000a4e4 <_txe_mutex_put>
4001ae3c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001ae40 <CyU3PDmaThreadEntry>:
4001ae40:	e92d4070 	push	{r4, r5, r6, lr}
4001ae44:	e24dd040 	sub	sp, sp, #64	; 0x40
4001ae48:	ea00003f 	b	4001af4c <CyU3PDmaThreadEntry+0x10c>
4001ae4c:	e3e02000 	mvn	r2, #0
4001ae50:	e1a0100d 	mov	r1, sp
4001ae54:	e59f00f4 	ldr	r0, [pc, #244]	; 4001af50 <CyU3PDmaThreadEntry+0x110>
4001ae58:	ebffbe5f 	bl	4000a7dc <_txe_queue_receive>
4001ae5c:	e1a05000 	mov	r5, r0
4001ae60:	e3550000 	cmp	r5, #0
4001ae64:	0a000000 	beq	4001ae6c <CyU3PDmaThreadEntry+0x2c>
4001ae68:	ea000037 	b	4001af4c <CyU3PDmaThreadEntry+0x10c>
4001ae6c:	e59d0000 	ldr	r0, [sp]
4001ae70:	e20040ff 	and	r4, r0, #255	; 0xff
4001ae74:	e3540000 	cmp	r4, #0
4001ae78:	0a000000 	beq	4001ae80 <CyU3PDmaThreadEntry+0x40>
4001ae7c:	ea000032 	b	4001af4c <CyU3PDmaThreadEntry+0x10c>
4001ae80:	e59d6004 	ldr	r6, [sp, #4]
4001ae84:	e1d600b4 	ldrh	r0, [r6, #4]
4001ae88:	e350000a 	cmp	r0, #10
4001ae8c:	308ff100 	addcc	pc, pc, r0, lsl #2
4001ae90:	ea000028 	b	4001af38 <CyU3PDmaThreadEntry+0xf8>
4001ae94:	ea000008 	b	4001aebc <CyU3PDmaThreadEntry+0x7c>
4001ae98:	ea000009 	b	4001aec4 <CyU3PDmaThreadEntry+0x84>
4001ae9c:	ea00000e 	b	4001aedc <CyU3PDmaThreadEntry+0x9c>
4001aea0:	ea00000a 	b	4001aed0 <CyU3PDmaThreadEntry+0x90>
4001aea4:	ea00000b 	b	4001aed8 <CyU3PDmaThreadEntry+0x98>
4001aea8:	ea00000e 	b	4001aee8 <CyU3PDmaThreadEntry+0xa8>
4001aeac:	ea000012 	b	4001aefc <CyU3PDmaThreadEntry+0xbc>
4001aeb0:	ea00000e 	b	4001aef0 <CyU3PDmaThreadEntry+0xb0>
4001aeb4:	ea000012 	b	4001af04 <CyU3PDmaThreadEntry+0xc4>
4001aeb8:	ea000014 	b	4001af10 <CyU3PDmaThreadEntry+0xd0>
4001aebc:	e1a00000 	nop			; (mov r0, r0)
4001aec0:	e1a00000 	nop			; (mov r0, r0)
4001aec4:	e1a0000d 	mov	r0, sp
4001aec8:	ebfffa18 	bl	40019730 <CyU3PDmaIntHandler_TypeAuto>
4001aecc:	ea00001b 	b	4001af40 <CyU3PDmaThreadEntry+0x100>
4001aed0:	e1a00000 	nop			; (mov r0, r0)
4001aed4:	e1a00000 	nop			; (mov r0, r0)
4001aed8:	e1a00000 	nop			; (mov r0, r0)
4001aedc:	e1a0000d 	mov	r0, sp
4001aee0:	ebfffaed 	bl	40019a9c <CyU3PDmaIntHandler_TypeManual>
4001aee4:	ea000015 	b	4001af40 <CyU3PDmaThreadEntry+0x100>
4001aee8:	e1a00000 	nop			; (mov r0, r0)
4001aeec:	e1a00000 	nop			; (mov r0, r0)
4001aef0:	e1a0000d 	mov	r0, sp
4001aef4:	ebfffc4c 	bl	4001a02c <CyU3PDmaIntHandler_TypeManyToOne>
4001aef8:	ea000010 	b	4001af40 <CyU3PDmaThreadEntry+0x100>
4001aefc:	e1a00000 	nop			; (mov r0, r0)
4001af00:	e1a00000 	nop			; (mov r0, r0)
4001af04:	e1a0000d 	mov	r0, sp
4001af08:	ebfffdbf 	bl	4001a60c <CyU3PDmaIntHandler_TypeOneToMany>
4001af0c:	ea00000b 	b	4001af40 <CyU3PDmaThreadEntry+0x100>
4001af10:	e1a00000 	nop			; (mov r0, r0)
4001af14:	e59f0038 	ldr	r0, [pc, #56]	; 4001af54 <CyU3PDmaThreadEntry+0x114>
4001af18:	e5900000 	ldr	r0, [r0]
4001af1c:	e3500000 	cmp	r0, #0
4001af20:	0a000003 	beq	4001af34 <CyU3PDmaThreadEntry+0xf4>
4001af24:	e1a0000d 	mov	r0, sp
4001af28:	e59f1024 	ldr	r1, [pc, #36]	; 4001af54 <CyU3PDmaThreadEntry+0x114>
4001af2c:	e5911000 	ldr	r1, [r1]
4001af30:	e12fff31 	blx	r1
4001af34:	ea000001 	b	4001af40 <CyU3PDmaThreadEntry+0x100>
4001af38:	e1a00000 	nop			; (mov r0, r0)
4001af3c:	e1a00000 	nop			; (mov r0, r0)
4001af40:	e1a00000 	nop			; (mov r0, r0)
4001af44:	ebffbf52 	bl	4000ac94 <_txe_thread_relinquish>
4001af48:	e1a00000 	nop			; (mov r0, r0)
4001af4c:	eaffffbe 	b	4001ae4c <CyU3PDmaThreadEntry+0xc>
4001af50:	40031954 	.word	0x40031954
4001af54:	40030d34 	.word	0x40030d34

Disassembly of section i.CyU3PGpifInit:

4001af58 <CyU3PGpifInit>:
4001af58:	e92d4010 	push	{r4, lr}
4001af5c:	e1a04000 	mov	r4, r0
4001af60:	e3540000 	cmp	r4, #0
4001af64:	0a000006 	beq	4001af84 <CyU3PGpifInit+0x2c>
4001af68:	e59f005c 	ldr	r0, [pc, #92]	; 4001afcc <CyU3PGpifInit+0x74>
4001af6c:	e5900000 	ldr	r0, [r0]
4001af70:	e1a00800 	lsl	r0, r0, #16
4001af74:	e1a00820 	lsr	r0, r0, #16
4001af78:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001af7c:	e59f1048 	ldr	r1, [pc, #72]	; 4001afcc <CyU3PGpifInit+0x74>
4001af80:	e5810000 	str	r0, [r1]
4001af84:	e3e00000 	mvn	r0, #0
4001af88:	e59f1040 	ldr	r1, [pc, #64]	; 4001afd0 <CyU3PGpifInit+0x78>
4001af8c:	e5810014 	str	r0, [r1, #20]
4001af90:	e3a00000 	mov	r0, #0
4001af94:	e5810018 	str	r0, [r1, #24]
4001af98:	e3a00e11 	mov	r0, #272	; 0x110
4001af9c:	e1c11300 	bic	r1, r1, r0, lsl #6
4001afa0:	e5810008 	str	r0, [r1, #8]
4001afa4:	ebffdf9e 	bl	40012e24 <CyU3PSysBarrierSync>
4001afa8:	e59f001c 	ldr	r0, [pc, #28]	; 4001afcc <CyU3PGpifInit+0x74>
4001afac:	e5900000 	ldr	r0, [r0]
4001afb0:	e1a00800 	lsl	r0, r0, #16
4001afb4:	e1a00820 	lsr	r0, r0, #16
4001afb8:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001afbc:	e59f1008 	ldr	r1, [pc, #8]	; 4001afcc <CyU3PGpifInit+0x74>
4001afc0:	e5810000 	str	r0, [r1]
4001afc4:	e3a00000 	mov	r0, #0
4001afc8:	e8bd8010 	pop	{r4, pc}
4001afcc:	e0010000 	.word	0xe0010000
4001afd0:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001afd4 <CyU3PPibApplicationDefine>:
4001afd4:	e92d4010 	push	{r4, lr}
4001afd8:	e24dd020 	sub	sp, sp, #32
4001afdc:	e3a00000 	mov	r0, #0
4001afe0:	e59f10dc 	ldr	r1, [pc, #220]	; 4001b0c4 <CyU3PPibApplicationDefine+0xf0>
4001afe4:	e5810000 	str	r0, [r1]
4001afe8:	e59f10d8 	ldr	r1, [pc, #216]	; 4001b0c8 <CyU3PPibApplicationDefine+0xf4>
4001afec:	e5810000 	str	r0, [r1]
4001aff0:	e59f10d4 	ldr	r1, [pc, #212]	; 4001b0cc <CyU3PPibApplicationDefine+0xf8>
4001aff4:	e5810000 	str	r0, [r1]
4001aff8:	e59f10d0 	ldr	r1, [pc, #208]	; 4001b0d0 <CyU3PPibApplicationDefine+0xfc>
4001affc:	e5810000 	str	r0, [r1]
4001b000:	e59f10cc 	ldr	r1, [pc, #204]	; 4001b0d4 <CyU3PPibApplicationDefine+0x100>
4001b004:	e5810000 	str	r0, [r1]
4001b008:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b0d8 <CyU3PPibApplicationDefine+0x104>
4001b00c:	e5810000 	str	r0, [r1]
4001b010:	e59f10c4 	ldr	r1, [pc, #196]	; 4001b0dc <CyU3PPibApplicationDefine+0x108>
4001b014:	e5810000 	str	r0, [r1]
4001b018:	e59f10c0 	ldr	r1, [pc, #192]	; 4001b0e0 <CyU3PPibApplicationDefine+0x10c>
4001b01c:	e5810000 	str	r0, [r1]
4001b020:	e59f10bc 	ldr	r1, [pc, #188]	; 4001b0e4 <CyU3PPibApplicationDefine+0x110>
4001b024:	e5810000 	str	r0, [r1]
4001b028:	e3a00b01 	mov	r0, #1024	; 0x400
4001b02c:	ebffa190 	bl	40003674 <CyU3PMemAlloc>
4001b030:	e1a04000 	mov	r4, r0
4001b034:	e3a030a8 	mov	r3, #168	; 0xa8
4001b038:	e3a02001 	mov	r2, #1
4001b03c:	e3a01000 	mov	r1, #0
4001b040:	e3a00004 	mov	r0, #4
4001b044:	e28dc00c 	add	ip, sp, #12
4001b048:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001b04c:	e3a02b01 	mov	r2, #1024	; 0x400
4001b050:	e1a03001 	mov	r3, r1
4001b054:	e58d2004 	str	r2, [sp, #4]
4001b058:	e59f2088 	ldr	r2, [pc, #136]	; 4001b0e8 <CyU3PPibApplicationDefine+0x114>
4001b05c:	e28f1088 	add	r1, pc, #136	; 0x88
4001b060:	e58d0008 	str	r0, [sp, #8]
4001b064:	e59f0090 	ldr	r0, [pc, #144]	; 4001b0fc <CyU3PPibApplicationDefine+0x128>
4001b068:	e58d4000 	str	r4, [sp]
4001b06c:	ebffbe2a 	bl	4000a91c <_txe_thread_create>
4001b070:	e3a02028 	mov	r2, #40	; 0x28
4001b074:	e3a01000 	mov	r1, #0
4001b078:	e59f0080 	ldr	r0, [pc, #128]	; 4001b100 <CyU3PPibApplicationDefine+0x12c>
4001b07c:	ebffbbab 	bl	40009f30 <_txe_event_flags_create>
4001b080:	e3a02000 	mov	r2, #0
4001b084:	e3a01010 	mov	r1, #16
4001b088:	e59f0070 	ldr	r0, [pc, #112]	; 4001b100 <CyU3PPibApplicationDefine+0x12c>
4001b08c:	ebffbc47 	bl	4000a1b0 <_txe_event_flags_set>
4001b090:	e3a00040 	mov	r0, #64	; 0x40
4001b094:	ebffa176 	bl	40003674 <CyU3PMemAlloc>
4001b098:	e1a04000 	mov	r4, r0
4001b09c:	e3a0303c 	mov	r3, #60	; 0x3c
4001b0a0:	e3a02040 	mov	r2, #64	; 0x40
4001b0a4:	e1cd20f0 	strd	r2, [sp]
4001b0a8:	e1a03004 	mov	r3, r4
4001b0ac:	e3a02001 	mov	r2, #1
4001b0b0:	e3a01000 	mov	r1, #0
4001b0b4:	e59f0048 	ldr	r0, [pc, #72]	; 4001b104 <CyU3PPibApplicationDefine+0x130>
4001b0b8:	ebffbd31 	bl	4000a584 <_txe_queue_create>
4001b0bc:	e28dd020 	add	sp, sp, #32
4001b0c0:	e8bd8010 	pop	{r4, pc}
4001b0c4:	40030d38 	.word	0x40030d38
4001b0c8:	40030d3c 	.word	0x40030d3c
4001b0cc:	40030d44 	.word	0x40030d44
4001b0d0:	40030d5c 	.word	0x40030d5c
4001b0d4:	40030d50 	.word	0x40030d50
4001b0d8:	40030d54 	.word	0x40030d54
4001b0dc:	40030d48 	.word	0x40030d48
4001b0e0:	40030d4c 	.word	0x40030d4c
4001b0e4:	40030d40 	.word	0x40030d40
4001b0e8:	4001b2bc 	.word	0x4001b2bc
4001b0ec:	505f3330 	.word	0x505f3330
4001b0f0:	545f4249 	.word	0x545f4249
4001b0f4:	41455248 	.word	0x41455248
4001b0f8:	00000044 	.word	0x00000044
4001b0fc:	400319b8 	.word	0x400319b8
4001b100:	40031990 	.word	0x40031990
4001b104:	40031a60 	.word	0x40031a60

Disassembly of section i.CyU3PPibInit:

4001b108 <CyU3PPibInit>:
4001b108:	e92d4070 	push	{r4, r5, r6, lr}
4001b10c:	e1a04000 	mov	r4, r0
4001b110:	e1a05001 	mov	r5, r1
4001b114:	e3a06000 	mov	r6, #0
4001b118:	ebffe724 	bl	40014db0 <CyFx3DevIsGpifSupported>
4001b11c:	e3500000 	cmp	r0, #0
4001b120:	1a000001 	bne	4001b12c <CyU3PPibInit+0x24>
4001b124:	e3a00046 	mov	r0, #70	; 0x46
4001b128:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b12c:	e59f0128 	ldr	r0, [pc, #296]	; 4001b25c <CyU3PPibInit+0x154>
4001b130:	e5900000 	ldr	r0, [r0]
4001b134:	e3500000 	cmp	r0, #0
4001b138:	0a000001 	beq	4001b144 <CyU3PPibInit+0x3c>
4001b13c:	e3a00043 	mov	r0, #67	; 0x43
4001b140:	eafffff8 	b	4001b128 <CyU3PPibInit+0x20>
4001b144:	e3550000 	cmp	r5, #0
4001b148:	1a000001 	bne	4001b154 <CyU3PPibInit+0x4c>
4001b14c:	e3a00041 	mov	r0, #65	; 0x41
4001b150:	eafffff4 	b	4001b128 <CyU3PPibInit+0x20>
4001b154:	e5d5000c 	ldrb	r0, [r5, #12]
4001b158:	e3500004 	cmp	r0, #4
4001b15c:	ba000001 	blt	4001b168 <CyU3PPibInit+0x60>
4001b160:	e3a00040 	mov	r0, #64	; 0x40
4001b164:	eaffffef 	b	4001b128 <CyU3PPibInit+0x20>
4001b168:	e1d500b0 	ldrh	r0, [r5]
4001b16c:	e3500002 	cmp	r0, #2
4001b170:	ba000002 	blt	4001b180 <CyU3PPibInit+0x78>
4001b174:	e1d500b0 	ldrh	r0, [r5]
4001b178:	e3500b01 	cmp	r0, #1024	; 0x400
4001b17c:	da000001 	ble	4001b188 <CyU3PPibInit+0x80>
4001b180:	e3a00040 	mov	r0, #64	; 0x40
4001b184:	eaffffe7 	b	4001b128 <CyU3PPibInit+0x20>
4001b188:	e3a00001 	mov	r0, #1
4001b18c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b25c <CyU3PPibInit+0x154>
4001b190:	e5810000 	str	r0, [r1]
4001b194:	e5d5000c 	ldrb	r0, [r5, #12]
4001b198:	e3a01b06 	mov	r1, #6144	; 0x1800
4001b19c:	e0010580 	and	r0, r1, r0, lsl #11
4001b1a0:	e1d510b0 	ldrh	r1, [r5]
4001b1a4:	e2411001 	sub	r1, r1, #1
4001b1a8:	e1a01b01 	lsl	r1, r1, #22
4001b1ac:	e1a01b21 	lsr	r1, r1, #22
4001b1b0:	e1800001 	orr	r0, r0, r1
4001b1b4:	e59f10a4 	ldr	r1, [pc, #164]	; 4001b260 <CyU3PPibInit+0x158>
4001b1b8:	e581000c 	str	r0, [r1, #12]
4001b1bc:	e5950004 	ldr	r0, [r5, #4]
4001b1c0:	e3500000 	cmp	r0, #0
4001b1c4:	0a000003 	beq	4001b1d8 <CyU3PPibInit+0xd0>
4001b1c8:	e1a00001 	mov	r0, r1
4001b1cc:	e590000c 	ldr	r0, [r0, #12]
4001b1d0:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001b1d4:	e581000c 	str	r0, [r1, #12]
4001b1d8:	e59f0080 	ldr	r0, [pc, #128]	; 4001b260 <CyU3PPibInit+0x158>
4001b1dc:	e590000c 	ldr	r0, [r0, #12]
4001b1e0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b1e4:	e59f1074 	ldr	r1, [pc, #116]	; 4001b260 <CyU3PPibInit+0x158>
4001b1e8:	e581000c 	str	r0, [r1, #12]
4001b1ec:	ebffe755 	bl	40014f48 <CyFx3PibPowerOn>
4001b1f0:	e5950008 	ldr	r0, [r5, #8]
4001b1f4:	e3500000 	cmp	r0, #0
4001b1f8:	0a000000 	beq	4001b200 <CyU3PPibInit+0xf8>
4001b1fc:	ebffe732 	bl	40014ecc <CyFx3PibDllEnable>
4001b200:	e59f005c 	ldr	r0, [pc, #92]	; 4001b264 <CyU3PPibInit+0x15c>
4001b204:	e5900000 	ldr	r0, [r0]
4001b208:	e3500000 	cmp	r0, #0
4001b20c:	0a000003 	beq	4001b220 <CyU3PPibInit+0x118>
4001b210:	e1a00004 	mov	r0, r4
4001b214:	eb0000d4 	bl	4001b56c <CyU3PPmmcInit>
4001b218:	e1a06000 	mov	r6, r0
4001b21c:	ea000002 	b	4001b22c <CyU3PPibInit+0x124>
4001b220:	e1a00004 	mov	r0, r4
4001b224:	ebffff4b 	bl	4001af58 <CyU3PGpifInit>
4001b228:	e1a06000 	mov	r6, r0
4001b22c:	e3e00000 	mvn	r0, #0
4001b230:	e59f1030 	ldr	r1, [pc, #48]	; 4001b268 <CyU3PPibInit+0x160>
4001b234:	e5810024 	str	r0, [r1, #36]	; 0x24
4001b238:	e3560000 	cmp	r6, #0
4001b23c:	1a000004 	bne	4001b254 <CyU3PPibInit+0x14c>
4001b240:	eb000009 	bl	4001b26c <CyU3PPibSocketInit>
4001b244:	e3a00007 	mov	r0, #7
4001b248:	eb001c4a 	bl	40022378 <CyU3PVicEnableInt>
4001b24c:	e3a00006 	mov	r0, #6
4001b250:	eb001c48 	bl	40022378 <CyU3PVicEnableInt>
4001b254:	e1a00006 	mov	r0, r6
4001b258:	eaffffb2 	b	4001b128 <CyU3PPibInit+0x20>
4001b25c:	40030d38 	.word	0x40030d38
4001b260:	e0052000 	.word	0xe0052000
4001b264:	40030d3c 	.word	0x40030d3c
4001b268:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001b26c <CyU3PPibSocketInit>:
4001b26c:	e3a00000 	mov	r0, #0
4001b270:	ea00000d 	b	4001b2ac <CyU3PPibSocketInit+0x40>
4001b274:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001b278:	e59f2038 	ldr	r2, [pc, #56]	; 4001b2b8 <CyU3PPibSocketInit+0x4c>
4001b27c:	e0822380 	add	r2, r2, r0, lsl #7
4001b280:	e582100c 	str	r1, [r2, #12]
4001b284:	e3e01000 	mvn	r1, #0
4001b288:	e59f2028 	ldr	r2, [pc, #40]	; 4001b2b8 <CyU3PPibSocketInit+0x4c>
4001b28c:	e0822380 	add	r2, r2, r0, lsl #7
4001b290:	e5821010 	str	r1, [r2, #16]
4001b294:	e3a01000 	mov	r1, #0
4001b298:	e59f2018 	ldr	r2, [pc, #24]	; 4001b2b8 <CyU3PPibSocketInit+0x4c>
4001b29c:	e0822380 	add	r2, r2, r0, lsl #7
4001b2a0:	e5821014 	str	r1, [r2, #20]
4001b2a4:	e2801001 	add	r1, r0, #1
4001b2a8:	e20100ff 	and	r0, r1, #255	; 0xff
4001b2ac:	e3500020 	cmp	r0, #32
4001b2b0:	baffffef 	blt	4001b274 <CyU3PPibSocketInit+0x8>
4001b2b4:	e12fff1e 	bx	lr
4001b2b8:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001b2bc <CyU3PPibThreadEntry>:
4001b2bc:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001b2c0:	e3a00005 	mov	r0, #5
4001b2c4:	ebffe25e 	bl	40013c44 <CyU3PSysModuleInitCompleteEvt>
4001b2c8:	e59f0278 	ldr	r0, [pc, #632]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b2cc:	e5900000 	ldr	r0, [r0]
4001b2d0:	e1a00800 	lsl	r0, r0, #16
4001b2d4:	e1a00820 	lsr	r0, r0, #16
4001b2d8:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001b2dc:	e59f1264 	ldr	r1, [pc, #612]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b2e0:	e5810000 	str	r0, [r1]
4001b2e4:	e3a000e1 	mov	r0, #225	; 0xe1
4001b2e8:	e59f125c 	ldr	r1, [pc, #604]	; 4001b54c <CyU3PPibThreadEntry+0x290>
4001b2ec:	e5810000 	str	r0, [r1]
4001b2f0:	ea000093 	b	4001b544 <CyU3PPibThreadEntry+0x288>
4001b2f4:	e3e03000 	mvn	r3, #0
4001b2f8:	e58d3000 	str	r3, [sp]
4001b2fc:	e28d3008 	add	r3, sp, #8
4001b300:	e3a02001 	mov	r2, #1
4001b304:	e59f0240 	ldr	r0, [pc, #576]	; 4001b54c <CyU3PPibThreadEntry+0x290>
4001b308:	e5901000 	ldr	r1, [r0]
4001b30c:	e59f023c 	ldr	r0, [pc, #572]	; 4001b550 <CyU3PPibThreadEntry+0x294>
4001b310:	ebffbb76 	bl	4000a0f0 <_txe_event_flags_get>
4001b314:	e1a04000 	mov	r4, r0
4001b318:	e59f122c 	ldr	r1, [pc, #556]	; 4001b54c <CyU3PPibThreadEntry+0x290>
4001b31c:	e59d0008 	ldr	r0, [sp, #8]
4001b320:	e5911000 	ldr	r1, [r1]
4001b324:	e0000001 	and	r0, r0, r1
4001b328:	e58d0008 	str	r0, [sp, #8]
4001b32c:	e3540000 	cmp	r4, #0
4001b330:	0a000000 	beq	4001b338 <CyU3PPibThreadEntry+0x7c>
4001b334:	ea000082 	b	4001b544 <CyU3PPibThreadEntry+0x288>
4001b338:	ea00007d 	b	4001b534 <CyU3PPibThreadEntry+0x278>
4001b33c:	e59d0008 	ldr	r0, [sp, #8]
4001b340:	e3100020 	tst	r0, #32
4001b344:	0a000017 	beq	4001b3a8 <CyU3PPibThreadEntry+0xec>
4001b348:	e59f0204 	ldr	r0, [pc, #516]	; 4001b554 <CyU3PPibThreadEntry+0x298>
4001b34c:	e5900000 	ldr	r0, [r0]
4001b350:	e3500000 	cmp	r0, #0
4001b354:	0a00000b 	beq	4001b388 <CyU3PPibThreadEntry+0xcc>
4001b358:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b558 <CyU3PPibThreadEntry+0x29c>
4001b35c:	e5900000 	ldr	r0, [r0]
4001b360:	e3100002 	tst	r0, #2
4001b364:	0a000007 	beq	4001b388 <CyU3PPibThreadEntry+0xcc>
4001b368:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b55c <CyU3PPibThreadEntry+0x2a0>
4001b36c:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001b370:	e1a01800 	lsl	r1, r0, #16
4001b374:	e1a01821 	lsr	r1, r1, #16
4001b378:	e3a00002 	mov	r0, #2
4001b37c:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b554 <CyU3PPibThreadEntry+0x298>
4001b380:	e5922000 	ldr	r2, [r2]
4001b384:	e12fff32 	blx	r2
4001b388:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b38c:	e5900000 	ldr	r0, [r0]
4001b390:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001b394:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b398:	e5810000 	str	r0, [r1]
4001b39c:	e59d0008 	ldr	r0, [sp, #8]
4001b3a0:	e3c00020 	bic	r0, r0, #32
4001b3a4:	e58d0008 	str	r0, [sp, #8]
4001b3a8:	e59d0008 	ldr	r0, [sp, #8]
4001b3ac:	e3100040 	tst	r0, #64	; 0x40
4001b3b0:	0a000027 	beq	4001b454 <CyU3PPibThreadEntry+0x198>
4001b3b4:	e59f0198 	ldr	r0, [pc, #408]	; 4001b554 <CyU3PPibThreadEntry+0x298>
4001b3b8:	e5900000 	ldr	r0, [r0]
4001b3bc:	e3500000 	cmp	r0, #0
4001b3c0:	0a000017 	beq	4001b424 <CyU3PPibThreadEntry+0x168>
4001b3c4:	e59f018c 	ldr	r0, [pc, #396]	; 4001b558 <CyU3PPibThreadEntry+0x29c>
4001b3c8:	e5900000 	ldr	r0, [r0]
4001b3cc:	e3100004 	tst	r0, #4
4001b3d0:	0a000013 	beq	4001b424 <CyU3PPibThreadEntry+0x168>
4001b3d4:	e59f016c 	ldr	r0, [pc, #364]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b3d8:	e5900020 	ldr	r0, [r0, #32]
4001b3dc:	e1a05800 	lsl	r5, r0, #16
4001b3e0:	e1a05825 	lsr	r5, r5, #16
4001b3e4:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001b3e8:	e3500a02 	cmp	r0, #8192	; 0x2000
4001b3ec:	1a000000 	bne	4001b3f4 <CyU3PPibThreadEntry+0x138>
4001b3f0:	e3a05a02 	mov	r5, #8192	; 0x2000
4001b3f4:	e59f0164 	ldr	r0, [pc, #356]	; 4001b560 <CyU3PPibThreadEntry+0x2a4>
4001b3f8:	e5900000 	ldr	r0, [r0]
4001b3fc:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001b400:	1a000001 	bne	4001b40c <CyU3PPibThreadEntry+0x150>
4001b404:	e3550004 	cmp	r5, #4
4001b408:	da000004 	ble	4001b420 <CyU3PPibThreadEntry+0x164>
4001b40c:	e1a01005 	mov	r1, r5
4001b410:	e3a00004 	mov	r0, #4
4001b414:	e59f2138 	ldr	r2, [pc, #312]	; 4001b554 <CyU3PPibThreadEntry+0x298>
4001b418:	e5922000 	ldr	r2, [r2]
4001b41c:	e12fff32 	blx	r2
4001b420:	e1a00000 	nop			; (mov r0, r0)
4001b424:	e59f012c 	ldr	r0, [pc, #300]	; 4001b558 <CyU3PPibThreadEntry+0x29c>
4001b428:	e5900000 	ldr	r0, [r0]
4001b42c:	e3100004 	tst	r0, #4
4001b430:	0a000004 	beq	4001b448 <CyU3PPibThreadEntry+0x18c>
4001b434:	e59f010c 	ldr	r0, [pc, #268]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b438:	e5900008 	ldr	r0, [r0, #8]
4001b43c:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b440:	e59f1100 	ldr	r1, [pc, #256]	; 4001b548 <CyU3PPibThreadEntry+0x28c>
4001b444:	e5810008 	str	r0, [r1, #8]
4001b448:	e59d0008 	ldr	r0, [sp, #8]
4001b44c:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b450:	e58d0008 	str	r0, [sp, #8]
4001b454:	e59d0008 	ldr	r0, [sp, #8]
4001b458:	e3100080 	tst	r0, #128	; 0x80
4001b45c:	0a000011 	beq	4001b4a8 <CyU3PPibThreadEntry+0x1ec>
4001b460:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b554 <CyU3PPibThreadEntry+0x298>
4001b464:	e5900000 	ldr	r0, [r0]
4001b468:	e3500000 	cmp	r0, #0
4001b46c:	0a00000a 	beq	4001b49c <CyU3PPibThreadEntry+0x1e0>
4001b470:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b558 <CyU3PPibThreadEntry+0x29c>
4001b474:	e5900000 	ldr	r0, [r0]
4001b478:	e3100001 	tst	r0, #1
4001b47c:	0a000006 	beq	4001b49c <CyU3PPibThreadEntry+0x1e0>
4001b480:	ebffe6ab 	bl	40014f34 <CyFx3PibGetDllStatus>
4001b484:	e1a05000 	mov	r5, r0
4001b488:	e1a01000 	mov	r1, r0
4001b48c:	e3a00001 	mov	r0, #1
4001b490:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b554 <CyU3PPibThreadEntry+0x298>
4001b494:	e5922000 	ldr	r2, [r2]
4001b498:	e12fff32 	blx	r2
4001b49c:	e59d0008 	ldr	r0, [sp, #8]
4001b4a0:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b4a4:	e58d0008 	str	r0, [sp, #8]
4001b4a8:	e59d0008 	ldr	r0, [sp, #8]
4001b4ac:	e3100001 	tst	r0, #1
4001b4b0:	0a00001f 	beq	4001b534 <CyU3PPibThreadEntry+0x278>
4001b4b4:	e3a02000 	mov	r2, #0
4001b4b8:	e28d1004 	add	r1, sp, #4
4001b4bc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b564 <CyU3PPibThreadEntry+0x2a8>
4001b4c0:	ebffbcc5 	bl	4000a7dc <_txe_queue_receive>
4001b4c4:	e1a04000 	mov	r4, r0
4001b4c8:	e3540000 	cmp	r4, #0
4001b4cc:	1a000015 	bne	4001b528 <CyU3PPibThreadEntry+0x26c>
4001b4d0:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b4d4:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b4d8:	e1b00720 	lsrs	r0, r0, #14
4001b4dc:	0a000014 	beq	4001b534 <CyU3PPibThreadEntry+0x278>
4001b4e0:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b4e4:	e20000ff 	and	r0, r0, #255	; 0xff
4001b4e8:	e3500004 	cmp	r0, #4
4001b4ec:	1a00000a 	bne	4001b51c <CyU3PPibThreadEntry+0x260>
4001b4f0:	e59f0070 	ldr	r0, [pc, #112]	; 4001b568 <CyU3PPibThreadEntry+0x2ac>
4001b4f4:	e5900000 	ldr	r0, [r0]
4001b4f8:	e3500000 	cmp	r0, #0
4001b4fc:	0a000005 	beq	4001b518 <CyU3PPibThreadEntry+0x25c>
4001b500:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b504:	e1a01442 	asr	r1, r2, #8
4001b508:	e20200ff 	and	r0, r2, #255	; 0xff
4001b50c:	e59f2054 	ldr	r2, [pc, #84]	; 4001b568 <CyU3PPibThreadEntry+0x2ac>
4001b510:	e5922000 	ldr	r2, [r2]
4001b514:	e12fff32 	blx	r2
4001b518:	ea000001 	b	4001b524 <CyU3PPibThreadEntry+0x268>
4001b51c:	e1a00000 	nop			; (mov r0, r0)
4001b520:	e1a00000 	nop			; (mov r0, r0)
4001b524:	ea000002 	b	4001b534 <CyU3PPibThreadEntry+0x278>
4001b528:	e59d0008 	ldr	r0, [sp, #8]
4001b52c:	e3c00001 	bic	r0, r0, #1
4001b530:	e58d0008 	str	r0, [sp, #8]
4001b534:	e59d0008 	ldr	r0, [sp, #8]
4001b538:	e3500000 	cmp	r0, #0
4001b53c:	1affff7e 	bne	4001b33c <CyU3PPibThreadEntry+0x80>
4001b540:	e1a00000 	nop			; (mov r0, r0)
4001b544:	eaffff6a 	b	4001b2f4 <CyU3PPibThreadEntry+0x38>
4001b548:	e0010000 	.word	0xe0010000
4001b54c:	40030d44 	.word	0x40030d44
4001b550:	40031990 	.word	0x40031990
4001b554:	40030d48 	.word	0x40030d48
4001b558:	40030d4c 	.word	0x40030d4c
4001b55c:	e0017000 	.word	0xe0017000
4001b560:	e0014000 	.word	0xe0014000
4001b564:	40031a60 	.word	0x40031a60
4001b568:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3PPmmcInit:

4001b56c <CyU3PPmmcInit>:
4001b56c:	e92d4010 	push	{r4, lr}
4001b570:	e1a04000 	mov	r4, r0
4001b574:	e3540000 	cmp	r4, #0
4001b578:	0a000042 	beq	4001b688 <CyU3PPmmcInit+0x11c>
4001b57c:	e3e00000 	mvn	r0, #0
4001b580:	e59f1148 	ldr	r1, [pc, #328]	; 4001b6d0 <CyU3PPmmcInit+0x164>
4001b584:	e581000c 	str	r0, [r1, #12]
4001b588:	e3a00000 	mov	r0, #0
4001b58c:	e5810010 	str	r0, [r1, #16]
4001b590:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b594:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b598:	e3a00000 	mov	r0, #0
4001b59c:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b5a0:	e5810008 	str	r0, [r1, #8]
4001b5a4:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b5a8:	e5900000 	ldr	r0, [r0]
4001b5ac:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b5b0:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b5b4:	e5810000 	str	r0, [r1]
4001b5b8:	e59f0114 	ldr	r0, [pc, #276]	; 4001b6d4 <CyU3PPmmcInit+0x168>
4001b5bc:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b5c0:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b5c4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b5c8:	e3a00001 	mov	r0, #1
4001b5cc:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b5d0:	e59f0100 	ldr	r0, [pc, #256]	; 4001b6d8 <CyU3PPmmcInit+0x16c>
4001b5d4:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b5d8:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b6dc <CyU3PPmmcInit+0x170>
4001b5dc:	e5900000 	ldr	r0, [r0]
4001b5e0:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b5e4:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b6dc <CyU3PPmmcInit+0x170>
4001b5e8:	e5900004 	ldr	r0, [r0, #4]
4001b5ec:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b5f0:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b6dc <CyU3PPmmcInit+0x170>
4001b5f4:	e5900008 	ldr	r0, [r0, #8]
4001b5f8:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b5fc:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b6dc <CyU3PPmmcInit+0x170>
4001b600:	e590000c 	ldr	r0, [r0, #12]
4001b604:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b608:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b6e0 <CyU3PPmmcInit+0x174>
4001b60c:	e5900000 	ldr	r0, [r0]
4001b610:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b614:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b6e0 <CyU3PPmmcInit+0x174>
4001b618:	e5900004 	ldr	r0, [r0, #4]
4001b61c:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b620:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b6e0 <CyU3PPmmcInit+0x174>
4001b624:	e5900008 	ldr	r0, [r0, #8]
4001b628:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b62c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b6e0 <CyU3PPmmcInit+0x174>
4001b630:	e590000c 	ldr	r0, [r0, #12]
4001b634:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b638:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b6e0 <CyU3PPmmcInit+0x174>
4001b63c:	e5900010 	ldr	r0, [r0, #16]
4001b640:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b644:	e59f0094 	ldr	r0, [pc, #148]	; 4001b6e0 <CyU3PPmmcInit+0x174>
4001b648:	e5900014 	ldr	r0, [r0, #20]
4001b64c:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b650:	e59f008c 	ldr	r0, [pc, #140]	; 4001b6e4 <CyU3PPmmcInit+0x178>
4001b654:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b658:	e3a00000 	mov	r0, #0
4001b65c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b660:	e3a00c02 	mov	r0, #512	; 0x200
4001b664:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b668:	e3a00000 	mov	r0, #0
4001b66c:	e5810004 	str	r0, [r1, #4]
4001b670:	e59f0070 	ldr	r0, [pc, #112]	; 4001b6e8 <CyU3PPmmcInit+0x17c>
4001b674:	e5810010 	str	r0, [r1, #16]
4001b678:	e3a00008 	mov	r0, #8
4001b67c:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b680:	e5810008 	str	r0, [r1, #8]
4001b684:	ea000002 	b	4001b694 <CyU3PPmmcInit+0x128>
4001b688:	e3a00000 	mov	r0, #0
4001b68c:	e59f103c 	ldr	r1, [pc, #60]	; 4001b6d0 <CyU3PPmmcInit+0x164>
4001b690:	e5810010 	str	r0, [r1, #16]
4001b694:	e59f0034 	ldr	r0, [pc, #52]	; 4001b6d0 <CyU3PPmmcInit+0x164>
4001b698:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b69c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b6a0:	e59f1028 	ldr	r1, [pc, #40]	; 4001b6d0 <CyU3PPmmcInit+0x164>
4001b6a4:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b6a8:	ebffdddd 	bl	40012e24 <CyU3PSysBarrierSync>
4001b6ac:	e59f0038 	ldr	r0, [pc, #56]	; 4001b6ec <CyU3PPmmcInit+0x180>
4001b6b0:	e5900000 	ldr	r0, [r0]
4001b6b4:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b6b8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b6bc:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b6c0:	e59f1024 	ldr	r1, [pc, #36]	; 4001b6ec <CyU3PPmmcInit+0x180>
4001b6c4:	e5810000 	str	r0, [r1]
4001b6c8:	e3a00000 	mov	r0, #0
4001b6cc:	e8bd8010 	pop	{r4, pc}
4001b6d0:	e0011000 	.word	0xe0011000
4001b6d4:	00019201 	.word	0x00019201
4001b6d8:	04010302 	.word	0x04010302
4001b6dc:	40012154 	.word	0x40012154
4001b6e0:	40012164 	.word	0x40012164
4001b6e4:	00ff8080 	.word	0x00ff8080
4001b6e8:	400a00fb 	.word	0x400a00fb
4001b6ec:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b6f0 <CyU3PMboxReset>:
4001b6f0:	e92d4010 	push	{r4, lr}
4001b6f4:	e3a00002 	mov	r0, #2
4001b6f8:	e59f1028 	ldr	r1, [pc, #40]	; 4001b728 <CyU3PMboxReset+0x38>
4001b6fc:	e5810004 	str	r0, [r1, #4]
4001b700:	e3a02002 	mov	r2, #2
4001b704:	e3a01010 	mov	r1, #16
4001b708:	e59f001c 	ldr	r0, [pc, #28]	; 4001b72c <CyU3PMboxReset+0x3c>
4001b70c:	ebffbaa7 	bl	4000a1b0 <_txe_event_flags_set>
4001b710:	e59f0010 	ldr	r0, [pc, #16]	; 4001b728 <CyU3PMboxReset+0x38>
4001b714:	e5900008 	ldr	r0, [r0, #8]
4001b718:	e3800003 	orr	r0, r0, #3
4001b71c:	e59f1004 	ldr	r1, [pc, #4]	; 4001b728 <CyU3PMboxReset+0x38>
4001b720:	e5810008 	str	r0, [r1, #8]
4001b724:	e8bd8010 	pop	{r4, pc}
4001b728:	e0010000 	.word	0xe0010000
4001b72c:	40031990 	.word	0x40031990

Disassembly of section i.CyU3PGpifConfigure:

4001b730 <CyU3PGpifConfigure>:
4001b730:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b734:	e1a04000 	mov	r4, r0
4001b738:	e1a05001 	mov	r5, r1
4001b73c:	e59f609c 	ldr	r6, [pc, #156]	; 4001b7e0 <CyU3PGpifConfigure+0xb0>
4001b740:	e3540000 	cmp	r4, #0
4001b744:	0a000001 	beq	4001b750 <CyU3PGpifConfigure+0x20>
4001b748:	e3550000 	cmp	r5, #0
4001b74c:	1a000001 	bne	4001b758 <CyU3PGpifConfigure+0x28>
4001b750:	e3a00040 	mov	r0, #64	; 0x40
4001b754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b758:	ebffe585 	bl	40014d74 <CyFx3DevIsGpifConfigurable>
4001b75c:	e3500000 	cmp	r0, #0
4001b760:	1a000001 	bne	4001b76c <CyU3PGpifConfigure+0x3c>
4001b764:	e3a00046 	mov	r0, #70	; 0x46
4001b768:	eafffff9 	b	4001b754 <CyU3PGpifConfigure+0x24>
4001b76c:	ebffe576 	bl	40014d4c <CyFx3DevIsGpif32Supported>
4001b770:	e3500000 	cmp	r0, #0
4001b774:	1a000007 	bne	4001b798 <CyU3PGpifConfigure+0x68>
4001b778:	e3540001 	cmp	r4, #1
4001b77c:	da000005 	ble	4001b798 <CyU3PGpifConfigure+0x68>
4001b780:	e5950004 	ldr	r0, [r5, #4]
4001b784:	e200000c 	and	r0, r0, #12
4001b788:	e3500004 	cmp	r0, #4
4001b78c:	9a000001 	bls	4001b798 <CyU3PGpifConfigure+0x68>
4001b790:	e3a00046 	mov	r0, #70	; 0x46
4001b794:	eaffffee 	b	4001b754 <CyU3PGpifConfigure+0x24>
4001b798:	e59f0044 	ldr	r0, [pc, #68]	; 4001b7e4 <CyU3PGpifConfigure+0xb4>
4001b79c:	e5900000 	ldr	r0, [r0]
4001b7a0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b7a4:	0a000001 	beq	4001b7b0 <CyU3PGpifConfigure+0x80>
4001b7a8:	e3a00043 	mov	r0, #67	; 0x43
4001b7ac:	eaffffe8 	b	4001b754 <CyU3PGpifConfigure+0x24>
4001b7b0:	e3a07001 	mov	r7, #1
4001b7b4:	ea000002 	b	4001b7c4 <CyU3PGpifConfigure+0x94>
4001b7b8:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b7bc:	e4860004 	str	r0, [r6], #4
4001b7c0:	e2877001 	add	r7, r7, #1
4001b7c4:	e1570004 	cmp	r7, r4
4001b7c8:	bafffffa 	blt	4001b7b8 <CyU3PGpifConfigure+0x88>
4001b7cc:	e5950000 	ldr	r0, [r5]
4001b7d0:	e59f100c 	ldr	r1, [pc, #12]	; 4001b7e4 <CyU3PGpifConfigure+0xb4>
4001b7d4:	e5810000 	str	r0, [r1]
4001b7d8:	e3a00000 	mov	r0, #0
4001b7dc:	eaffffdc 	b	4001b754 <CyU3PGpifConfigure+0x24>
4001b7e0:	e0014004 	.word	0xe0014004
4001b7e4:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b7e8 <CyU3PGpifDisable>:
4001b7e8:	e92d4070 	push	{r4, r5, r6, lr}
4001b7ec:	e1a04000 	mov	r4, r0
4001b7f0:	e59f0070 	ldr	r0, [pc, #112]	; 4001b868 <CyU3PGpifDisable+0x80>
4001b7f4:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b7f8:	e3800002 	orr	r0, r0, #2
4001b7fc:	e59f1064 	ldr	r1, [pc, #100]	; 4001b868 <CyU3PGpifDisable+0x80>
4001b800:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b804:	e3a0000a 	mov	r0, #10
4001b808:	ebffe057 	bl	4001396c <CyU3PBusyWait>
4001b80c:	e3a00000 	mov	r0, #0
4001b810:	e59f1050 	ldr	r1, [pc, #80]	; 4001b868 <CyU3PGpifDisable+0x80>
4001b814:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b818:	e3540000 	cmp	r4, #0
4001b81c:	0a000010 	beq	4001b864 <CyU3PGpifDisable+0x7c>
4001b820:	e3a00e22 	mov	r0, #544	; 0x220
4001b824:	e5810000 	str	r0, [r1]
4001b828:	e3a05000 	mov	r5, #0
4001b82c:	ea000007 	b	4001b850 <CyU3PGpifDisable+0x68>
4001b830:	e3a00000 	mov	r0, #0
4001b834:	e59f1030 	ldr	r1, [pc, #48]	; 4001b86c <CyU3PGpifDisable+0x84>
4001b838:	e0811205 	add	r1, r1, r5, lsl #4
4001b83c:	e5810008 	str	r0, [r1, #8]
4001b840:	e59f1028 	ldr	r1, [pc, #40]	; 4001b870 <CyU3PGpifDisable+0x88>
4001b844:	e0811205 	add	r1, r1, r5, lsl #4
4001b848:	e5810008 	str	r0, [r1, #8]
4001b84c:	e2855001 	add	r5, r5, #1
4001b850:	e3550c01 	cmp	r5, #256	; 0x100
4001b854:	3afffff5 	bcc	4001b830 <CyU3PGpifDisable+0x48>
4001b858:	e59f1014 	ldr	r1, [pc, #20]	; 4001b874 <CyU3PGpifDisable+0x8c>
4001b85c:	e3a0004c 	mov	r0, #76	; 0x4c
4001b860:	ebffffb2 	bl	4001b730 <CyU3PGpifConfigure>
4001b864:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b868:	e0014000 	.word	0xe0014000
4001b86c:	e0015000 	.word	0xe0015000
4001b870:	e0016000 	.word	0xe0016000
4001b874:	4001217c 	.word	0x4001217c

Disassembly of section i.CyU3PGpifLoad:

4001b878 <CyU3PGpifLoad>:
4001b878:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b87c:	e1a04000 	mov	r4, r0
4001b880:	e59f7264 	ldr	r7, [pc, #612]	; 4001baec <CyU3PGpifLoad+0x274>
4001b884:	e3540000 	cmp	r4, #0
4001b888:	0a000008 	beq	4001b8b0 <CyU3PGpifLoad+0x38>
4001b88c:	e1d400b0 	ldrh	r0, [r4]
4001b890:	e3500000 	cmp	r0, #0
4001b894:	1a000007 	bne	4001b8b8 <CyU3PGpifLoad+0x40>
4001b898:	e1d400bc 	ldrh	r0, [r4, #12]
4001b89c:	e3500000 	cmp	r0, #0
4001b8a0:	1a000004 	bne	4001b8b8 <CyU3PGpifLoad+0x40>
4001b8a4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b8a8:	e3500000 	cmp	r0, #0
4001b8ac:	1a000001 	bne	4001b8b8 <CyU3PGpifLoad+0x40>
4001b8b0:	e3a00040 	mov	r0, #64	; 0x40
4001b8b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b8b8:	e59f0230 	ldr	r0, [pc, #560]	; 4001baf0 <CyU3PGpifLoad+0x278>
4001b8bc:	e5900000 	ldr	r0, [r0]
4001b8c0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b8c4:	1a000003 	bne	4001b8d8 <CyU3PGpifLoad+0x60>
4001b8c8:	e59f0220 	ldr	r0, [pc, #544]	; 4001baf0 <CyU3PGpifLoad+0x278>
4001b8cc:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b8d0:	e3100001 	tst	r0, #1
4001b8d4:	0a000001 	beq	4001b8e0 <CyU3PGpifLoad+0x68>
4001b8d8:	e3a00043 	mov	r0, #67	; 0x43
4001b8dc:	eafffff4 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001b8e0:	ebffe523 	bl	40014d74 <CyFx3DevIsGpifConfigurable>
4001b8e4:	e3500000 	cmp	r0, #0
4001b8e8:	1a000001 	bne	4001b8f4 <CyU3PGpifLoad+0x7c>
4001b8ec:	e3a00046 	mov	r0, #70	; 0x46
4001b8f0:	eaffffef 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001b8f4:	ebffe514 	bl	40014d4c <CyFx3DevIsGpif32Supported>
4001b8f8:	e3500000 	cmp	r0, #0
4001b8fc:	1a00000c 	bne	4001b934 <CyU3PGpifLoad+0xbc>
4001b900:	e1d401b4 	ldrh	r0, [r4, #20]
4001b904:	e3500002 	cmp	r0, #2
4001b908:	ba000009 	blt	4001b934 <CyU3PGpifLoad+0xbc>
4001b90c:	e5940018 	ldr	r0, [r4, #24]
4001b910:	e3500000 	cmp	r0, #0
4001b914:	0a000006 	beq	4001b934 <CyU3PGpifLoad+0xbc>
4001b918:	e5940018 	ldr	r0, [r4, #24]
4001b91c:	e5900004 	ldr	r0, [r0, #4]
4001b920:	e200000c 	and	r0, r0, #12
4001b924:	e3500004 	cmp	r0, #4
4001b928:	9a000001 	bls	4001b934 <CyU3PGpifLoad+0xbc>
4001b92c:	e3a00046 	mov	r0, #70	; 0x46
4001b930:	eaffffdf 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001b934:	e1d400b0 	ldrh	r0, [r4]
4001b938:	e3500000 	cmp	r0, #0
4001b93c:	0a00003b 	beq	4001ba30 <CyU3PGpifLoad+0x1b8>
4001b940:	e5940004 	ldr	r0, [r4, #4]
4001b944:	e3500000 	cmp	r0, #0
4001b948:	1a000001 	bne	4001b954 <CyU3PGpifLoad+0xdc>
4001b94c:	e3a00040 	mov	r0, #64	; 0x40
4001b950:	eaffffd7 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001b954:	e3a05000 	mov	r5, #0
4001b958:	ea000031 	b	4001ba24 <CyU3PGpifLoad+0x1ac>
4001b95c:	e5940008 	ldr	r0, [r4, #8]
4001b960:	e3500000 	cmp	r0, #0
4001b964:	0a000002 	beq	4001b974 <CyU3PGpifLoad+0xfc>
4001b968:	e5940008 	ldr	r0, [r4, #8]
4001b96c:	e7d00005 	ldrb	r0, [r0, r5]
4001b970:	ea000000 	b	4001b978 <CyU3PGpifLoad+0x100>
4001b974:	e1a00005 	mov	r0, r5
4001b978:	e1a06800 	lsl	r6, r0, #16
4001b97c:	e1a06826 	lsr	r6, r6, #16
4001b980:	e0861086 	add	r1, r6, r6, lsl #1
4001b984:	e5940004 	ldr	r0, [r4, #4]
4001b988:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b98c:	e59f1160 	ldr	r1, [pc, #352]	; 4001baf4 <CyU3PGpifLoad+0x27c>
4001b990:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b994:	e0861086 	add	r1, r6, r6, lsl #1
4001b998:	e5940004 	ldr	r0, [r4, #4]
4001b99c:	e0800181 	add	r0, r0, r1, lsl #3
4001b9a0:	e5900004 	ldr	r0, [r0, #4]
4001b9a4:	e59f1148 	ldr	r1, [pc, #328]	; 4001baf4 <CyU3PGpifLoad+0x27c>
4001b9a8:	e0811205 	add	r1, r1, r5, lsl #4
4001b9ac:	e5810004 	str	r0, [r1, #4]
4001b9b0:	e0861086 	add	r1, r6, r6, lsl #1
4001b9b4:	e5940004 	ldr	r0, [r4, #4]
4001b9b8:	e0800181 	add	r0, r0, r1, lsl #3
4001b9bc:	e5900008 	ldr	r0, [r0, #8]
4001b9c0:	e59f112c 	ldr	r1, [pc, #300]	; 4001baf4 <CyU3PGpifLoad+0x27c>
4001b9c4:	e0811205 	add	r1, r1, r5, lsl #4
4001b9c8:	e5810008 	str	r0, [r1, #8]
4001b9cc:	e0861086 	add	r1, r6, r6, lsl #1
4001b9d0:	e5940004 	ldr	r0, [r4, #4]
4001b9d4:	e0800181 	add	r0, r0, r1, lsl #3
4001b9d8:	e590000c 	ldr	r0, [r0, #12]
4001b9dc:	e59f1114 	ldr	r1, [pc, #276]	; 4001baf8 <CyU3PGpifLoad+0x280>
4001b9e0:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b9e4:	e0861086 	add	r1, r6, r6, lsl #1
4001b9e8:	e5940004 	ldr	r0, [r4, #4]
4001b9ec:	e0800181 	add	r0, r0, r1, lsl #3
4001b9f0:	e5900010 	ldr	r0, [r0, #16]
4001b9f4:	e59f10fc 	ldr	r1, [pc, #252]	; 4001baf8 <CyU3PGpifLoad+0x280>
4001b9f8:	e0811205 	add	r1, r1, r5, lsl #4
4001b9fc:	e5810004 	str	r0, [r1, #4]
4001ba00:	e0861086 	add	r1, r6, r6, lsl #1
4001ba04:	e5940004 	ldr	r0, [r4, #4]
4001ba08:	e0800181 	add	r0, r0, r1, lsl #3
4001ba0c:	e5900014 	ldr	r0, [r0, #20]
4001ba10:	e59f10e0 	ldr	r1, [pc, #224]	; 4001baf8 <CyU3PGpifLoad+0x280>
4001ba14:	e0811205 	add	r1, r1, r5, lsl #4
4001ba18:	e5810008 	str	r0, [r1, #8]
4001ba1c:	e2850001 	add	r0, r5, #1
4001ba20:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ba24:	e1d400b0 	ldrh	r0, [r4]
4001ba28:	e1500005 	cmp	r0, r5
4001ba2c:	caffffca 	bgt	4001b95c <CyU3PGpifLoad+0xe4>
4001ba30:	e1d400bc 	ldrh	r0, [r4, #12]
4001ba34:	e3500000 	cmp	r0, #0
4001ba38:	0a000013 	beq	4001ba8c <CyU3PGpifLoad+0x214>
4001ba3c:	e5940010 	ldr	r0, [r4, #16]
4001ba40:	e3500000 	cmp	r0, #0
4001ba44:	0a000002 	beq	4001ba54 <CyU3PGpifLoad+0x1dc>
4001ba48:	e1d400bc 	ldrh	r0, [r4, #12]
4001ba4c:	e3500020 	cmp	r0, #32
4001ba50:	da000001 	ble	4001ba5c <CyU3PGpifLoad+0x1e4>
4001ba54:	e3a00040 	mov	r0, #64	; 0x40
4001ba58:	eaffff95 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001ba5c:	e3a05000 	mov	r5, #0
4001ba60:	ea000006 	b	4001ba80 <CyU3PGpifLoad+0x208>
4001ba64:	e5940010 	ldr	r0, [r4, #16]
4001ba68:	e0800085 	add	r0, r0, r5, lsl #1
4001ba6c:	e1d000b0 	ldrh	r0, [r0]
4001ba70:	e59f1084 	ldr	r1, [pc, #132]	; 4001bafc <CyU3PGpifLoad+0x284>
4001ba74:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ba78:	e2850001 	add	r0, r5, #1
4001ba7c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ba80:	e1d400bc 	ldrh	r0, [r4, #12]
4001ba84:	e1500005 	cmp	r0, r5
4001ba88:	cafffff5 	bgt	4001ba64 <CyU3PGpifLoad+0x1ec>
4001ba8c:	e1d401b4 	ldrh	r0, [r4, #20]
4001ba90:	e3500000 	cmp	r0, #0
4001ba94:	0a000012 	beq	4001bae4 <CyU3PGpifLoad+0x26c>
4001ba98:	e5940018 	ldr	r0, [r4, #24]
4001ba9c:	e3500000 	cmp	r0, #0
4001baa0:	1a000001 	bne	4001baac <CyU3PGpifLoad+0x234>
4001baa4:	e3a00040 	mov	r0, #64	; 0x40
4001baa8:	eaffff81 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001baac:	e3a05001 	mov	r5, #1
4001bab0:	ea000004 	b	4001bac8 <CyU3PGpifLoad+0x250>
4001bab4:	e5940018 	ldr	r0, [r4, #24]
4001bab8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001babc:	e4870004 	str	r0, [r7], #4
4001bac0:	e2850001 	add	r0, r5, #1
4001bac4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001bac8:	e1d401b4 	ldrh	r0, [r4, #20]
4001bacc:	e1500005 	cmp	r0, r5
4001bad0:	cafffff7 	bgt	4001bab4 <CyU3PGpifLoad+0x23c>
4001bad4:	e5940018 	ldr	r0, [r4, #24]
4001bad8:	e5900000 	ldr	r0, [r0]
4001badc:	e59f100c 	ldr	r1, [pc, #12]	; 4001baf0 <CyU3PGpifLoad+0x278>
4001bae0:	e5810000 	str	r0, [r1]
4001bae4:	e3a00000 	mov	r0, #0
4001bae8:	eaffff71 	b	4001b8b4 <CyU3PGpifLoad+0x3c>
4001baec:	e0014004 	.word	0xe0014004
4001baf0:	e0014000 	.word	0xe0014000
4001baf4:	e0015000 	.word	0xe0015000
4001baf8:	e0016000 	.word	0xe0016000
4001bafc:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001bb00 <CyU3PGpifRegisterCallback>:
4001bb00:	e59f1004 	ldr	r1, [pc, #4]	; 4001bb0c <CyU3PGpifRegisterCallback+0xc>
4001bb04:	e5810000 	str	r0, [r1]
4001bb08:	e12fff1e 	bx	lr
4001bb0c:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3PGpifSMStart:

4001bb10 <CyU3PGpifSMStart>:
4001bb10:	e92d4010 	push	{r4, lr}
4001bb14:	e1a02000 	mov	r2, r0
4001bb18:	e59f012c 	ldr	r0, [pc, #300]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bb1c:	e5900000 	ldr	r0, [r0]
4001bb20:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001bb24:	0a000004 	beq	4001bb3c <CyU3PGpifSMStart+0x2c>
4001bb28:	e59f0120 	ldr	r0, [pc, #288]	; 4001bc50 <CyU3PGpifSMStart+0x140>
4001bb2c:	e0800202 	add	r0, r0, r2, lsl #4
4001bb30:	e5900008 	ldr	r0, [r0, #8]
4001bb34:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001bb38:	1a000001 	bne	4001bb44 <CyU3PGpifSMStart+0x34>
4001bb3c:	e3a00044 	mov	r0, #68	; 0x44
4001bb40:	e8bd8010 	pop	{r4, pc}
4001bb44:	e59f0100 	ldr	r0, [pc, #256]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bb48:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bb4c:	e3100001 	tst	r0, #1
4001bb50:	0a000001 	beq	4001bb5c <CyU3PGpifSMStart+0x4c>
4001bb54:	e3a00043 	mov	r0, #67	; 0x43
4001bb58:	eafffff8 	b	4001bb40 <CyU3PGpifSMStart+0x30>
4001bb5c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bb60:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bb64:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001bb68:	e1800801 	orr	r0, r0, r1, lsl #16
4001bb6c:	e3800001 	orr	r0, r0, #1
4001bb70:	e59f40d4 	ldr	r4, [pc, #212]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bb74:	e5840118 	str	r0, [r4, #280]	; 0x118
4001bb78:	e1a00004 	mov	r0, r4
4001bb7c:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001bb80:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bc54 <CyU3PGpifSMStart+0x144>
4001bb84:	e000000e 	and	r0, r0, lr
4001bb88:	e180e802 	orr	lr, r0, r2, lsl #16
4001bb8c:	e1a00004 	mov	r0, r4
4001bb90:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001bb94:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001bb98:	e3800005 	orr	r0, r0, #5
4001bb9c:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bba0:	e1a00004 	mov	r0, r4
4001bba4:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001bba8:	e5900008 	ldr	r0, [r0, #8]
4001bbac:	e2003007 	and	r3, r0, #7
4001bbb0:	e3530001 	cmp	r3, #1
4001bbb4:	0a000004 	beq	4001bbcc <CyU3PGpifSMStart+0xbc>
4001bbb8:	e3530002 	cmp	r3, #2
4001bbbc:	0a00000b 	beq	4001bbf0 <CyU3PGpifSMStart+0xe0>
4001bbc0:	e3530003 	cmp	r3, #3
4001bbc4:	1a00001b 	bne	4001bc38 <CyU3PGpifSMStart+0x128>
4001bbc8:	ea000011 	b	4001bc14 <CyU3PGpifSMStart+0x104>
4001bbcc:	e1a00000 	nop			; (mov r0, r0)
4001bbd0:	e59f0080 	ldr	r0, [pc, #128]	; 4001bc58 <CyU3PGpifSMStart+0x148>
4001bbd4:	e1ce0000 	bic	r0, lr, r0
4001bbd8:	e3800005 	orr	r0, r0, #5
4001bbdc:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001bbe0:	e1800424 	orr	r0, r0, r4, lsr #8
4001bbe4:	e59f4060 	ldr	r4, [pc, #96]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bbe8:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bbec:	ea000013 	b	4001bc40 <CyU3PGpifSMStart+0x130>
4001bbf0:	e1a00000 	nop			; (mov r0, r0)
4001bbf4:	e59f0060 	ldr	r0, [pc, #96]	; 4001bc5c <CyU3PGpifSMStart+0x14c>
4001bbf8:	e1ce0000 	bic	r0, lr, r0
4001bbfc:	e3800005 	orr	r0, r0, #5
4001bc00:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001bc04:	e1800424 	orr	r0, r0, r4, lsr #8
4001bc08:	e59f403c 	ldr	r4, [pc, #60]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bc0c:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bc10:	ea00000a 	b	4001bc40 <CyU3PGpifSMStart+0x130>
4001bc14:	e1a00000 	nop			; (mov r0, r0)
4001bc18:	e59f0040 	ldr	r0, [pc, #64]	; 4001bc60 <CyU3PGpifSMStart+0x150>
4001bc1c:	e1ce0000 	bic	r0, lr, r0
4001bc20:	e3800005 	orr	r0, r0, #5
4001bc24:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001bc28:	e1800424 	orr	r0, r0, r4, lsr #8
4001bc2c:	e59f4018 	ldr	r4, [pc, #24]	; 4001bc4c <CyU3PGpifSMStart+0x13c>
4001bc30:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bc34:	ea000001 	b	4001bc40 <CyU3PGpifSMStart+0x130>
4001bc38:	e1a00000 	nop			; (mov r0, r0)
4001bc3c:	e1a00000 	nop			; (mov r0, r0)
4001bc40:	e1a00000 	nop			; (mov r0, r0)
4001bc44:	e3a00000 	mov	r0, #0
4001bc48:	eaffffbc 	b	4001bb40 <CyU3PGpifSMStart+0x30>
4001bc4c:	e0014000 	.word	0xe0014000
4001bc50:	e0015000 	.word	0xe0015000
4001bc54:	ff00003a 	.word	0xff00003a
4001bc58:	0080ffc5 	.word	0x0080ffc5
4001bc5c:	00c0ffc5 	.word	0x00c0ffc5
4001bc60:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001bc64 <CyU3PGpifSMSwitch>:
4001bc64:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001bc68:	e1a0c000 	mov	ip, r0
4001bc6c:	e59de018 	ldr	lr, [sp, #24]
4001bc70:	e3a04000 	mov	r4, #0
4001bc74:	e3510c01 	cmp	r1, #256	; 0x100
4001bc78:	ba000001 	blt	4001bc84 <CyU3PGpifSMSwitch+0x20>
4001bc7c:	e3a00040 	mov	r0, #64	; 0x40
4001bc80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001bc84:	e59f0150 	ldr	r0, [pc, #336]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bc88:	e5900000 	ldr	r0, [r0]
4001bc8c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001bc90:	1a000001 	bne	4001bc9c <CyU3PGpifSMSwitch+0x38>
4001bc94:	e3a00044 	mov	r0, #68	; 0x44
4001bc98:	eafffff8 	b	4001bc80 <CyU3PGpifSMSwitch+0x1c>
4001bc9c:	e59f0138 	ldr	r0, [pc, #312]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bca0:	e5900008 	ldr	r0, [r0, #8]
4001bca4:	e2006007 	and	r6, r0, #7
4001bca8:	e59f012c 	ldr	r0, [pc, #300]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bcac:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bcb0:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001bcb4:	e1800803 	orr	r0, r0, r3, lsl #16
4001bcb8:	e3800001 	orr	r0, r0, #1
4001bcbc:	e59f8118 	ldr	r8, [pc, #280]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bcc0:	e5880118 	str	r0, [r8, #280]	; 0x118
4001bcc4:	e3a00001 	mov	r0, #1
4001bcc8:	e1804801 	orr	r4, r0, r1, lsl #16
4001bccc:	e35c0c01 	cmp	ip, #256	; 0x100
4001bcd0:	aa000012 	bge	4001bd20 <CyU3PGpifSMSwitch+0xbc>
4001bcd4:	e1c80000 	bic	r0, r8, r0
4001bcd8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bcdc:	e1a05c20 	lsr	r5, r0, #24
4001bce0:	e59f00f8 	ldr	r0, [pc, #248]	; 4001bde0 <CyU3PGpifSMSwitch+0x17c>
4001bce4:	e7d00006 	ldrb	r0, [r0, r6]
4001bce8:	e0000005 	and	r0, r0, r5
4001bcec:	e59f80ec 	ldr	r8, [pc, #236]	; 4001bde0 <CyU3PGpifSMSwitch+0x17c>
4001bcf0:	e7d88006 	ldrb	r8, [r8, r6]
4001bcf4:	e008800c 	and	r8, r8, ip
4001bcf8:	e1500008 	cmp	r0, r8
4001bcfc:	1a000001 	bne	4001bd08 <CyU3PGpifSMSwitch+0xa4>
4001bd00:	e3844004 	orr	r4, r4, #4
4001bd04:	ea000006 	b	4001bd24 <CyU3PGpifSMSwitch+0xc0>
4001bd08:	e3a00008 	mov	r0, #8
4001bd0c:	e180040c 	orr	r0, r0, ip, lsl #8
4001bd10:	e1844000 	orr	r4, r4, r0
4001bd14:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bd18:	e580e120 	str	lr, [r0, #288]	; 0x120
4001bd1c:	ea000000 	b	4001bd24 <CyU3PGpifSMSwitch+0xc0>
4001bd20:	e3844004 	orr	r4, r4, #4
4001bd24:	e3520c01 	cmp	r2, #256	; 0x100
4001bd28:	aa000007 	bge	4001bd4c <CyU3PGpifSMSwitch+0xe8>
4001bd2c:	e3a00002 	mov	r0, #2
4001bd30:	e1800c02 	orr	r0, r0, r2, lsl #24
4001bd34:	e1844000 	orr	r4, r4, r0
4001bd38:	e59f009c 	ldr	r0, [pc, #156]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bd3c:	e5900018 	ldr	r0, [r0, #24]
4001bd40:	e3800001 	orr	r0, r0, #1
4001bd44:	e59f8090 	ldr	r8, [pc, #144]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bd48:	e5880018 	str	r0, [r8, #24]
4001bd4c:	e59f0088 	ldr	r0, [pc, #136]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bd50:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001bd54:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001bd58:	e3560001 	cmp	r6, #1
4001bd5c:	0a000004 	beq	4001bd74 <CyU3PGpifSMSwitch+0x110>
4001bd60:	e3560002 	cmp	r6, #2
4001bd64:	0a000009 	beq	4001bd90 <CyU3PGpifSMSwitch+0x12c>
4001bd68:	e3560003 	cmp	r6, #3
4001bd6c:	1a000015 	bne	4001bdc8 <CyU3PGpifSMSwitch+0x164>
4001bd70:	ea00000d 	b	4001bdac <CyU3PGpifSMSwitch+0x148>
4001bd74:	e1a00000 	nop			; (mov r0, r0)
4001bd78:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001bd7c:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001bd80:	e1800428 	orr	r0, r0, r8, lsr #8
4001bd84:	e59f8050 	ldr	r8, [pc, #80]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bd88:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bd8c:	ea00000f 	b	4001bdd0 <CyU3PGpifSMSwitch+0x16c>
4001bd90:	e1a00000 	nop			; (mov r0, r0)
4001bd94:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001bd98:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001bd9c:	e1800428 	orr	r0, r0, r8, lsr #8
4001bda0:	e59f8034 	ldr	r8, [pc, #52]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bda4:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bda8:	ea000008 	b	4001bdd0 <CyU3PGpifSMSwitch+0x16c>
4001bdac:	e1a00000 	nop			; (mov r0, r0)
4001bdb0:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001bdb4:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001bdb8:	e1800428 	orr	r0, r0, r8, lsr #8
4001bdbc:	e59f8018 	ldr	r8, [pc, #24]	; 4001bddc <CyU3PGpifSMSwitch+0x178>
4001bdc0:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bdc4:	ea000001 	b	4001bdd0 <CyU3PGpifSMSwitch+0x16c>
4001bdc8:	e1a00000 	nop			; (mov r0, r0)
4001bdcc:	e1a00000 	nop			; (mov r0, r0)
4001bdd0:	e1a00000 	nop			; (mov r0, r0)
4001bdd4:	e3a00000 	mov	r0, #0
4001bdd8:	eaffffa8 	b	4001bc80 <CyU3PGpifSMSwitch+0x1c>
4001bddc:	e0014000 	.word	0xe0014000
4001bde0:	400122ac 	.word	0x400122ac

Disassembly of section i.CyU3PConnectState:

4001bde4 <CyU3PConnectState>:
4001bde4:	e92d4070 	push	{r4, r5, r6, lr}
4001bde8:	e1a04000 	mov	r4, r0
4001bdec:	e1a06001 	mov	r6, r1
4001bdf0:	e59f0234 	ldr	r0, [pc, #564]	; 4001c02c <CyU3PConnectState+0x248>
4001bdf4:	e5d00008 	ldrb	r0, [r0, #8]
4001bdf8:	e3500000 	cmp	r0, #0
4001bdfc:	1a000001 	bne	4001be08 <CyU3PConnectState+0x24>
4001be00:	e3a00042 	mov	r0, #66	; 0x42
4001be04:	e8bd8070 	pop	{r4, r5, r6, pc}
4001be08:	ebffe41a 	bl	40014e78 <CyFx3DevIsUsb3Supported>
4001be0c:	e3500000 	cmp	r0, #0
4001be10:	1a000000 	bne	4001be18 <CyU3PConnectState+0x34>
4001be14:	e3a06000 	mov	r6, #0
4001be18:	e3a05000 	mov	r5, #0
4001be1c:	e3e01000 	mvn	r1, #0
4001be20:	e59f0208 	ldr	r0, [pc, #520]	; 4001c030 <CyU3PConnectState+0x24c>
4001be24:	ebffb979 	bl	4000a410 <_txe_mutex_get>
4001be28:	e3540000 	cmp	r4, #0
4001be2c:	1a00001a 	bne	4001be9c <CyU3PConnectState+0xb8>
4001be30:	e59f01f4 	ldr	r0, [pc, #500]	; 4001c02c <CyU3PConnectState+0x248>
4001be34:	e5d00008 	ldrb	r0, [r0, #8]
4001be38:	e3500004 	cmp	r0, #4
4001be3c:	ba000012 	blt	4001be8c <CyU3PConnectState+0xa8>
4001be40:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c02c <CyU3PConnectState+0x248>
4001be44:	e5d00008 	ldrb	r0, [r0, #8]
4001be48:	e3500005 	cmp	r0, #5
4001be4c:	ba000008 	blt	4001be74 <CyU3PConnectState+0x90>
4001be50:	e59f11d4 	ldr	r1, [pc, #468]	; 4001c02c <CyU3PConnectState+0x248>
4001be54:	e5d11009 	ldrb	r1, [r1, #9]
4001be58:	e3510003 	cmp	r1, #3
4001be5c:	1a000001 	bne	4001be68 <CyU3PConnectState+0x84>
4001be60:	e3a01001 	mov	r1, #1
4001be64:	ea000000 	b	4001be6c <CyU3PConnectState+0x88>
4001be68:	e3a01000 	mov	r1, #0
4001be6c:	e1a00001 	mov	r0, r1
4001be70:	eb00050f 	bl	4001d2b4 <CyU3PUsbPhyDisable>
4001be74:	e3a00003 	mov	r0, #3
4001be78:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c02c <CyU3PConnectState+0x248>
4001be7c:	e5c10008 	strb	r0, [r1, #8]
4001be80:	e3a00000 	mov	r0, #0
4001be84:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001be88:	e5810058 	str	r0, [r1, #88]	; 0x58
4001be8c:	e3a00000 	mov	r0, #0
4001be90:	e59f1194 	ldr	r1, [pc, #404]	; 4001c02c <CyU3PConnectState+0x248>
4001be94:	e5810044 	str	r0, [r1, #68]	; 0x44
4001be98:	ea00005f 	b	4001c01c <CyU3PConnectState+0x238>
4001be9c:	e59f0188 	ldr	r0, [pc, #392]	; 4001c02c <CyU3PConnectState+0x248>
4001bea0:	e5d00008 	ldrb	r0, [r0, #8]
4001bea4:	e3500003 	cmp	r0, #3
4001bea8:	0a00000b 	beq	4001bedc <CyU3PConnectState+0xf8>
4001beac:	e3500004 	cmp	r0, #4
4001beb0:	0a000004 	beq	4001bec8 <CyU3PConnectState+0xe4>
4001beb4:	e3500005 	cmp	r0, #5
4001beb8:	0a000004 	beq	4001bed0 <CyU3PConnectState+0xec>
4001bebc:	e3500006 	cmp	r0, #6
4001bec0:	1a000051 	bne	4001c00c <CyU3PConnectState+0x228>
4001bec4:	ea000002 	b	4001bed4 <CyU3PConnectState+0xf0>
4001bec8:	e1a00000 	nop			; (mov r0, r0)
4001becc:	e1a00000 	nop			; (mov r0, r0)
4001bed0:	e1a00000 	nop			; (mov r0, r0)
4001bed4:	e3a05043 	mov	r5, #67	; 0x43
4001bed8:	ea00004e 	b	4001c018 <CyU3PConnectState+0x234>
4001bedc:	e1a00000 	nop			; (mov r0, r0)
4001bee0:	e59f0144 	ldr	r0, [pc, #324]	; 4001c02c <CyU3PConnectState+0x248>
4001bee4:	e5d00007 	ldrb	r0, [r0, #7]
4001bee8:	e3500001 	cmp	r0, #1
4001beec:	0a00000f 	beq	4001bf30 <CyU3PConnectState+0x14c>
4001bef0:	e59f013c 	ldr	r0, [pc, #316]	; 4001c034 <CyU3PConnectState+0x250>
4001bef4:	e590001c 	ldr	r0, [r0, #28]
4001bef8:	e3500000 	cmp	r0, #0
4001befc:	0a000007 	beq	4001bf20 <CyU3PConnectState+0x13c>
4001bf00:	e59f012c 	ldr	r0, [pc, #300]	; 4001c034 <CyU3PConnectState+0x250>
4001bf04:	e5900014 	ldr	r0, [r0, #20]
4001bf08:	e3500000 	cmp	r0, #0
4001bf0c:	0a000003 	beq	4001bf20 <CyU3PConnectState+0x13c>
4001bf10:	e59f011c 	ldr	r0, [pc, #284]	; 4001c034 <CyU3PConnectState+0x250>
4001bf14:	e5900018 	ldr	r0, [r0, #24]
4001bf18:	e3500000 	cmp	r0, #0
4001bf1c:	1a000003 	bne	4001bf30 <CyU3PConnectState+0x14c>
4001bf20:	e59f0108 	ldr	r0, [pc, #264]	; 4001c030 <CyU3PConnectState+0x24c>
4001bf24:	ebffb96e 	bl	4000a4e4 <_txe_mutex_put>
4001bf28:	e3a00044 	mov	r0, #68	; 0x44
4001bf2c:	eaffffb4 	b	4001be04 <CyU3PConnectState+0x20>
4001bf30:	e3560000 	cmp	r6, #0
4001bf34:	0a000007 	beq	4001bf58 <CyU3PConnectState+0x174>
4001bf38:	e3a00000 	mov	r0, #0
4001bf3c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c038 <CyU3PConnectState+0x254>
4001bf40:	e5810014 	str	r0, [r1, #20]
4001bf44:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c03c <CyU3PConnectState+0x258>
4001bf48:	e5810000 	str	r0, [r1]
4001bf4c:	e59f10ec 	ldr	r1, [pc, #236]	; 4001c040 <CyU3PConnectState+0x25c>
4001bf50:	e5810000 	str	r0, [r1]
4001bf54:	ea000007 	b	4001bf78 <CyU3PConnectState+0x194>
4001bf58:	e59f00cc 	ldr	r0, [pc, #204]	; 4001c02c <CyU3PConnectState+0x248>
4001bf5c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001bf60:	e3500000 	cmp	r0, #0
4001bf64:	0a000003 	beq	4001bf78 <CyU3PConnectState+0x194>
4001bf68:	e59f00c0 	ldr	r0, [pc, #192]	; 4001c030 <CyU3PConnectState+0x24c>
4001bf6c:	ebffb95c 	bl	4000a4e4 <_txe_mutex_put>
4001bf70:	e3a000ff 	mov	r0, #255	; 0xff
4001bf74:	eaffffa2 	b	4001be04 <CyU3PConnectState+0x20>
4001bf78:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c02c <CyU3PConnectState+0x248>
4001bf7c:	e5806024 	str	r6, [r0, #36]	; 0x24
4001bf80:	e3a00000 	mov	r0, #0
4001bf84:	e59f10a0 	ldr	r1, [pc, #160]	; 4001c02c <CyU3PConnectState+0x248>
4001bf88:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bf8c:	e2810000 	add	r0, r1, #0
4001bf90:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bf94:	e3500000 	cmp	r0, #0
4001bf98:	0a000004 	beq	4001bfb0 <CyU3PConnectState+0x1cc>
4001bf9c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001c044 <CyU3PConnectState+0x260>
4001bfa0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001bfa4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bfa8:	e1100001 	tst	r0, r1
4001bfac:	0a000012 	beq	4001bffc <CyU3PConnectState+0x218>
4001bfb0:	e3560000 	cmp	r6, #0
4001bfb4:	0a000007 	beq	4001bfd8 <CyU3PConnectState+0x1f4>
4001bfb8:	e3a00000 	mov	r0, #0
4001bfbc:	e59f1068 	ldr	r1, [pc, #104]	; 4001c02c <CyU3PConnectState+0x248>
4001bfc0:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bfc4:	e3a00001 	mov	r0, #1
4001bfc8:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bfcc:	e3a00000 	mov	r0, #0
4001bfd0:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bfd4:	ea000002 	b	4001bfe4 <CyU3PConnectState+0x200>
4001bfd8:	e3a00000 	mov	r0, #0
4001bfdc:	e59f1048 	ldr	r1, [pc, #72]	; 4001c02c <CyU3PConnectState+0x248>
4001bfe0:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bfe4:	e1a00006 	mov	r0, r6
4001bfe8:	eb000527 	bl	4001d48c <CyU3PUsbPhyEnable>
4001bfec:	e3a00005 	mov	r0, #5
4001bff0:	e59f1034 	ldr	r1, [pc, #52]	; 4001c02c <CyU3PConnectState+0x248>
4001bff4:	e5c10008 	strb	r0, [r1, #8]
4001bff8:	ea000002 	b	4001c008 <CyU3PConnectState+0x224>
4001bffc:	e3a00004 	mov	r0, #4
4001c000:	e59f1024 	ldr	r1, [pc, #36]	; 4001c02c <CyU3PConnectState+0x248>
4001c004:	e5c10008 	strb	r0, [r1, #8]
4001c008:	ea000002 	b	4001c018 <CyU3PConnectState+0x234>
4001c00c:	e1a00000 	nop			; (mov r0, r0)
4001c010:	e3a05044 	mov	r5, #68	; 0x44
4001c014:	e1a00000 	nop			; (mov r0, r0)
4001c018:	e1a00000 	nop			; (mov r0, r0)
4001c01c:	e59f000c 	ldr	r0, [pc, #12]	; 4001c030 <CyU3PConnectState+0x24c>
4001c020:	ebffb92f 	bl	4000a4e4 <_txe_mutex_put>
4001c024:	e1a00005 	mov	r0, r5
4001c028:	eaffff75 	b	4001be04 <CyU3PConnectState+0x20>
4001c02c:	40031d60 	.word	0x40031d60
4001c030:	40031f00 	.word	0x40031f00
4001c034:	40031fb8 	.word	0x40031fb8
4001c038:	e0033000 	.word	0xe0033000
4001c03c:	40030da4 	.word	0x40030da4
4001c040:	40030da8 	.word	0x40030da8
4001c044:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001c048 <CyU3POtgGetMode>:
4001c048:	e59f0004 	ldr	r0, [pc, #4]	; 4001c054 <CyU3POtgGetMode+0xc>
4001c04c:	e5d00000 	ldrb	r0, [r0]
4001c050:	e12fff1e 	bx	lr
4001c054:	40030d74 	.word	0x40030d74

Disassembly of section i.CyU3POtgIsDeviceMode:

4001c058 <CyU3POtgIsDeviceMode>:
4001c058:	e3a01000 	mov	r1, #0
4001c05c:	e59f00b4 	ldr	r0, [pc, #180]	; 4001c118 <CyU3POtgIsDeviceMode+0xc0>
4001c060:	e5d00000 	ldrb	r0, [r0]
4001c064:	e3500000 	cmp	r0, #0
4001c068:	0a000003 	beq	4001c07c <CyU3POtgIsDeviceMode+0x24>
4001c06c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001c118 <CyU3POtgIsDeviceMode+0xc0>
4001c070:	e5d00000 	ldrb	r0, [r0]
4001c074:	e3500002 	cmp	r0, #2
4001c078:	1a000024 	bne	4001c110 <CyU3POtgIsDeviceMode+0xb8>
4001c07c:	e59f0098 	ldr	r0, [pc, #152]	; 4001c11c <CyU3POtgIsDeviceMode+0xc4>
4001c080:	e5d00000 	ldrb	r0, [r0]
4001c084:	e3500000 	cmp	r0, #0
4001c088:	0a000006 	beq	4001c0a8 <CyU3POtgIsDeviceMode+0x50>
4001c08c:	e3500002 	cmp	r0, #2
4001c090:	0a00000c 	beq	4001c0c8 <CyU3POtgIsDeviceMode+0x70>
4001c094:	e3500004 	cmp	r0, #4
4001c098:	0a00000b 	beq	4001c0cc <CyU3POtgIsDeviceMode+0x74>
4001c09c:	e3500005 	cmp	r0, #5
4001c0a0:	1a00000c 	bne	4001c0d8 <CyU3POtgIsDeviceMode+0x80>
4001c0a4:	ea000009 	b	4001c0d0 <CyU3POtgIsDeviceMode+0x78>
4001c0a8:	e1a00000 	nop			; (mov r0, r0)
4001c0ac:	e59f0064 	ldr	r0, [pc, #100]	; 4001c118 <CyU3POtgIsDeviceMode+0xc0>
4001c0b0:	e5d00000 	ldrb	r0, [r0]
4001c0b4:	e3500002 	cmp	r0, #2
4001c0b8:	1a000001 	bne	4001c0c4 <CyU3POtgIsDeviceMode+0x6c>
4001c0bc:	e3a00000 	mov	r0, #0
4001c0c0:	e12fff1e 	bx	lr
4001c0c4:	e1a00000 	nop			; (mov r0, r0)
4001c0c8:	e1a00000 	nop			; (mov r0, r0)
4001c0cc:	e1a00000 	nop			; (mov r0, r0)
4001c0d0:	e3a01001 	mov	r1, #1
4001c0d4:	ea000002 	b	4001c0e4 <CyU3POtgIsDeviceMode+0x8c>
4001c0d8:	e1a00000 	nop			; (mov r0, r0)
4001c0dc:	e3a01000 	mov	r1, #0
4001c0e0:	e1a00000 	nop			; (mov r0, r0)
4001c0e4:	e1a00000 	nop			; (mov r0, r0)
4001c0e8:	e59f0030 	ldr	r0, [pc, #48]	; 4001c120 <CyU3POtgIsDeviceMode+0xc8>
4001c0ec:	e5900000 	ldr	r0, [r0]
4001c0f0:	e3500000 	cmp	r0, #0
4001c0f4:	0a000005 	beq	4001c110 <CyU3POtgIsDeviceMode+0xb8>
4001c0f8:	e3510000 	cmp	r1, #0
4001c0fc:	1a000001 	bne	4001c108 <CyU3POtgIsDeviceMode+0xb0>
4001c100:	e3a00001 	mov	r0, #1
4001c104:	ea000000 	b	4001c10c <CyU3POtgIsDeviceMode+0xb4>
4001c108:	e3a00000 	mov	r0, #0
4001c10c:	e1a01000 	mov	r1, r0
4001c110:	e1a00001 	mov	r0, r1
4001c114:	eaffffe9 	b	4001c0c0 <CyU3POtgIsDeviceMode+0x68>
4001c118:	40030d74 	.word	0x40030d74
4001c11c:	40030d70 	.word	0x40030d70
4001c120:	40030d6c 	.word	0x40030d6c

Disassembly of section i.CyU3POtgIsHostMode:

4001c124 <CyU3POtgIsHostMode>:
4001c124:	e3a01000 	mov	r1, #0
4001c128:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c1d8 <CyU3POtgIsHostMode+0xb4>
4001c12c:	e5d00000 	ldrb	r0, [r0]
4001c130:	e3500001 	cmp	r0, #1
4001c134:	0a000003 	beq	4001c148 <CyU3POtgIsHostMode+0x24>
4001c138:	e59f0098 	ldr	r0, [pc, #152]	; 4001c1d8 <CyU3POtgIsHostMode+0xb4>
4001c13c:	e5d00000 	ldrb	r0, [r0]
4001c140:	e3500002 	cmp	r0, #2
4001c144:	1a000021 	bne	4001c1d0 <CyU3POtgIsHostMode+0xac>
4001c148:	e59f008c 	ldr	r0, [pc, #140]	; 4001c1dc <CyU3POtgIsHostMode+0xb8>
4001c14c:	e5d00000 	ldrb	r0, [r0]
4001c150:	e3500000 	cmp	r0, #0
4001c154:	0a000004 	beq	4001c16c <CyU3POtgIsHostMode+0x48>
4001c158:	e3500001 	cmp	r0, #1
4001c15c:	0a00000a 	beq	4001c18c <CyU3POtgIsHostMode+0x68>
4001c160:	e3500003 	cmp	r0, #3
4001c164:	1a00000b 	bne	4001c198 <CyU3POtgIsHostMode+0x74>
4001c168:	ea000008 	b	4001c190 <CyU3POtgIsHostMode+0x6c>
4001c16c:	e1a00000 	nop			; (mov r0, r0)
4001c170:	e59f0060 	ldr	r0, [pc, #96]	; 4001c1d8 <CyU3POtgIsHostMode+0xb4>
4001c174:	e5d00000 	ldrb	r0, [r0]
4001c178:	e3500002 	cmp	r0, #2
4001c17c:	1a000001 	bne	4001c188 <CyU3POtgIsHostMode+0x64>
4001c180:	e3a00000 	mov	r0, #0
4001c184:	e12fff1e 	bx	lr
4001c188:	e1a00000 	nop			; (mov r0, r0)
4001c18c:	e1a00000 	nop			; (mov r0, r0)
4001c190:	e3a01001 	mov	r1, #1
4001c194:	ea000002 	b	4001c1a4 <CyU3POtgIsHostMode+0x80>
4001c198:	e1a00000 	nop			; (mov r0, r0)
4001c19c:	e3a01000 	mov	r1, #0
4001c1a0:	e1a00000 	nop			; (mov r0, r0)
4001c1a4:	e1a00000 	nop			; (mov r0, r0)
4001c1a8:	e59f0030 	ldr	r0, [pc, #48]	; 4001c1e0 <CyU3POtgIsHostMode+0xbc>
4001c1ac:	e5900000 	ldr	r0, [r0]
4001c1b0:	e3500000 	cmp	r0, #0
4001c1b4:	0a000005 	beq	4001c1d0 <CyU3POtgIsHostMode+0xac>
4001c1b8:	e3510000 	cmp	r1, #0
4001c1bc:	1a000001 	bne	4001c1c8 <CyU3POtgIsHostMode+0xa4>
4001c1c0:	e3a00001 	mov	r0, #1
4001c1c4:	ea000000 	b	4001c1cc <CyU3POtgIsHostMode+0xa8>
4001c1c8:	e3a00000 	mov	r0, #0
4001c1cc:	e1a01000 	mov	r1, r0
4001c1d0:	e1a00001 	mov	r0, r1
4001c1d4:	eaffffea 	b	4001c184 <CyU3POtgIsHostMode+0x60>
4001c1d8:	40030d74 	.word	0x40030d74
4001c1dc:	40030d70 	.word	0x40030d70
4001c1e0:	40030d6c 	.word	0x40030d6c

Disassembly of section i.CyU3POtgIsStarted:

4001c1e4 <CyU3POtgIsStarted>:
4001c1e4:	e59f0004 	ldr	r0, [pc, #4]	; 4001c1f0 <CyU3POtgIsStarted+0xc>
4001c1e8:	e5900000 	ldr	r0, [r0]
4001c1ec:	e12fff1e 	bx	lr
4001c1f0:	40030d68 	.word	0x40030d68

Disassembly of section i.CyU3PSetEpConfig:

4001c1f4 <CyU3PSetEpConfig>:
4001c1f4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001c1f8:	e1a04000 	mov	r4, r0
4001c1fc:	e1a05001 	mov	r5, r1
4001c200:	e204607f 	and	r6, r4, #127	; 0x7f
4001c204:	e3a07000 	mov	r7, #0
4001c208:	e3a08000 	mov	r8, #0
4001c20c:	e3a09000 	mov	r9, #0
4001c210:	e3a0a000 	mov	sl, #0
4001c214:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c7a4 <CyU3PSetEpConfig+0x5b0>
4001c218:	e5d00008 	ldrb	r0, [r0, #8]
4001c21c:	e3500000 	cmp	r0, #0
4001c220:	1a000001 	bne	4001c22c <CyU3PSetEpConfig+0x38>
4001c224:	e3a00042 	mov	r0, #66	; 0x42
4001c228:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001c22c:	e3550000 	cmp	r5, #0
4001c230:	1a000001 	bne	4001c23c <CyU3PSetEpConfig+0x48>
4001c234:	e3a00041 	mov	r0, #65	; 0x41
4001c238:	eafffffa 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c23c:	e5950000 	ldr	r0, [r5]
4001c240:	e3500000 	cmp	r0, #0
4001c244:	0a000074 	beq	4001c41c <CyU3PSetEpConfig+0x228>
4001c248:	e1d500b8 	ldrh	r0, [r5, #8]
4001c24c:	e3500b01 	cmp	r0, #1024	; 0x400
4001c250:	ca000001 	bgt	4001c25c <CyU3PSetEpConfig+0x68>
4001c254:	e356000f 	cmp	r6, #15
4001c258:	da000001 	ble	4001c264 <CyU3PSetEpConfig+0x70>
4001c25c:	e3a00040 	mov	r0, #64	; 0x40
4001c260:	eafffff0 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c264:	e5d50004 	ldrb	r0, [r5, #4]
4001c268:	e3500000 	cmp	r0, #0
4001c26c:	0a000002 	beq	4001c27c <CyU3PSetEpConfig+0x88>
4001c270:	e5d50004 	ldrb	r0, [r5, #4]
4001c274:	e3500003 	cmp	r0, #3
4001c278:	da000001 	ble	4001c284 <CyU3PSetEpConfig+0x90>
4001c27c:	e3a00040 	mov	r0, #64	; 0x40
4001c280:	eaffffe8 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c284:	e5d5000a 	ldrb	r0, [r5, #10]
4001c288:	e3500010 	cmp	r0, #16
4001c28c:	ca000008 	bgt	4001c2b4 <CyU3PSetEpConfig+0xc0>
4001c290:	e5d5000a 	ldrb	r0, [r5, #10]
4001c294:	e3500001 	cmp	r0, #1
4001c298:	da000007 	ble	4001c2bc <CyU3PSetEpConfig+0xc8>
4001c29c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2a0:	e3500b01 	cmp	r0, #1024	; 0x400
4001c2a4:	aa000004 	bge	4001c2bc <CyU3PSetEpConfig+0xc8>
4001c2a8:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2ac:	e3500000 	cmp	r0, #0
4001c2b0:	0a000001 	beq	4001c2bc <CyU3PSetEpConfig+0xc8>
4001c2b4:	e3a00040 	mov	r0, #64	; 0x40
4001c2b8:	eaffffda 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c2bc:	e5d50004 	ldrb	r0, [r5, #4]
4001c2c0:	e1a00f00 	lsl	r0, r0, #30
4001c2c4:	e1a08a20 	lsr	r8, r0, #20
4001c2c8:	e5d50004 	ldrb	r0, [r5, #4]
4001c2cc:	e2000003 	and	r0, r0, #3
4001c2d0:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c7a8 <CyU3PSetEpConfig+0x5b4>
4001c2d4:	e7d1a000 	ldrb	sl, [r1, r0]
4001c2d8:	e5d5000a 	ldrb	r0, [r5, #10]
4001c2dc:	e3500000 	cmp	r0, #0
4001c2e0:	0a000004 	beq	4001c2f8 <CyU3PSetEpConfig+0x104>
4001c2e4:	e5d5000a 	ldrb	r0, [r5, #10]
4001c2e8:	e2400001 	sub	r0, r0, #1
4001c2ec:	e200000f 	and	r0, r0, #15
4001c2f0:	e18aa400 	orr	sl, sl, r0, lsl #8
4001c2f4:	ea000001 	b	4001c300 <CyU3PSetEpConfig+0x10c>
4001c2f8:	e3a00001 	mov	r0, #1
4001c2fc:	e5c5000a 	strb	r0, [r5, #10]
4001c300:	e5d50004 	ldrb	r0, [r5, #4]
4001c304:	e3500001 	cmp	r0, #1
4001c308:	1a000013 	bne	4001c35c <CyU3PSetEpConfig+0x168>
4001c30c:	e5950000 	ldr	r0, [r5]
4001c310:	e3500000 	cmp	r0, #0
4001c314:	0a000010 	beq	4001c35c <CyU3PSetEpConfig+0x168>
4001c318:	e5d5000b 	ldrb	r0, [r5, #11]
4001c31c:	e2000003 	and	r0, r0, #3
4001c320:	e1888600 	orr	r8, r8, r0, lsl #12
4001c324:	e5d5000a 	ldrb	r0, [r5, #10]
4001c328:	e5d5100b 	ldrb	r1, [r5, #11]
4001c32c:	e1600180 	smulbb	r0, r0, r1
4001c330:	e200003f 	and	r0, r0, #63	; 0x3f
4001c334:	e18aa100 	orr	sl, sl, r0, lsl #2
4001c338:	e5d5000b 	ldrb	r0, [r5, #11]
4001c33c:	e3500001 	cmp	r0, #1
4001c340:	da000005 	ble	4001c35c <CyU3PSetEpConfig+0x168>
4001c344:	e3560003 	cmp	r6, #3
4001c348:	0a000003 	beq	4001c35c <CyU3PSetEpConfig+0x168>
4001c34c:	e3560007 	cmp	r6, #7
4001c350:	0a000001 	beq	4001c35c <CyU3PSetEpConfig+0x168>
4001c354:	e3a0004d 	mov	r0, #77	; 0x4d
4001c358:	eaffffb2 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c35c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c360:	e3500000 	cmp	r0, #0
4001c364:	0a000004 	beq	4001c37c <CyU3PSetEpConfig+0x188>
4001c368:	e1d500b8 	ldrh	r0, [r5, #8]
4001c36c:	e3500b01 	cmp	r0, #1024	; 0x400
4001c370:	ca000001 	bgt	4001c37c <CyU3PSetEpConfig+0x188>
4001c374:	e1d500b8 	ldrh	r0, [r5, #8]
4001c378:	ea000000 	b	4001c380 <CyU3PSetEpConfig+0x18c>
4001c37c:	e3a00b01 	mov	r0, #1024	; 0x400
4001c380:	e1a07800 	lsl	r7, r0, #16
4001c384:	e1a07827 	lsr	r7, r7, #16
4001c388:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c7a4 <CyU3PSetEpConfig+0x5b0>
4001c38c:	e5d00008 	ldrb	r0, [r0, #8]
4001c390:	e3500005 	cmp	r0, #5
4001c394:	da00001e 	ble	4001c414 <CyU3PSetEpConfig+0x220>
4001c398:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c7a4 <CyU3PSetEpConfig+0x5b0>
4001c39c:	e5d00009 	ldrb	r0, [r0, #9]
4001c3a0:	e3500001 	cmp	r0, #1
4001c3a4:	0a000008 	beq	4001c3cc <CyU3PSetEpConfig+0x1d8>
4001c3a8:	e3500002 	cmp	r0, #2
4001c3ac:	1a000015 	bne	4001c408 <CyU3PSetEpConfig+0x214>
4001c3b0:	e5d50004 	ldrb	r0, [r5, #4]
4001c3b4:	e3500002 	cmp	r0, #2
4001c3b8:	1a000002 	bne	4001c3c8 <CyU3PSetEpConfig+0x1d4>
4001c3bc:	e3570c02 	cmp	r7, #512	; 0x200
4001c3c0:	da000000 	ble	4001c3c8 <CyU3PSetEpConfig+0x1d4>
4001c3c4:	e3a07c02 	mov	r7, #512	; 0x200
4001c3c8:	ea000010 	b	4001c410 <CyU3PSetEpConfig+0x21c>
4001c3cc:	e1a00000 	nop			; (mov r0, r0)
4001c3d0:	e5d50004 	ldrb	r0, [r5, #4]
4001c3d4:	e3500001 	cmp	r0, #1
4001c3d8:	1a000003 	bne	4001c3ec <CyU3PSetEpConfig+0x1f8>
4001c3dc:	e3570b01 	cmp	r7, #1024	; 0x400
4001c3e0:	ba000001 	blt	4001c3ec <CyU3PSetEpConfig+0x1f8>
4001c3e4:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c7ac <CyU3PSetEpConfig+0x5b8>
4001c3e8:	ea000005 	b	4001c404 <CyU3PSetEpConfig+0x210>
4001c3ec:	e5d50004 	ldrb	r0, [r5, #4]
4001c3f0:	e3500001 	cmp	r0, #1
4001c3f4:	0a000002 	beq	4001c404 <CyU3PSetEpConfig+0x210>
4001c3f8:	e3570040 	cmp	r7, #64	; 0x40
4001c3fc:	da000000 	ble	4001c404 <CyU3PSetEpConfig+0x210>
4001c400:	e3a07040 	mov	r7, #64	; 0x40
4001c404:	ea000001 	b	4001c410 <CyU3PSetEpConfig+0x21c>
4001c408:	e1a00000 	nop			; (mov r0, r0)
4001c40c:	e1a00000 	nop			; (mov r0, r0)
4001c410:	e1a00000 	nop			; (mov r0, r0)
4001c414:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001c418:	e1888000 	orr	r8, r8, r0
4001c41c:	e3e01000 	mvn	r1, #0
4001c420:	e59f0388 	ldr	r0, [pc, #904]	; 4001c7b0 <CyU3PSetEpConfig+0x5bc>
4001c424:	ebffb7f9 	bl	4000a410 <_txe_mutex_get>
4001c428:	e3140080 	tst	r4, #128	; 0x80
4001c42c:	0a000062 	beq	4001c5bc <CyU3PSetEpConfig+0x3c8>
4001c430:	e5950000 	ldr	r0, [r5]
4001c434:	e3500000 	cmp	r0, #0
4001c438:	1a00001d 	bne	4001c4b4 <CyU3PSetEpConfig+0x2c0>
4001c43c:	e59f0370 	ldr	r0, [pc, #880]	; 4001c7b4 <CyU3PSetEpConfig+0x5c0>
4001c440:	e59f1370 	ldr	r1, [pc, #880]	; 4001c7b8 <CyU3PSetEpConfig+0x5c4>
4001c444:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c448:	e3a00020 	mov	r0, #32
4001c44c:	e59f1368 	ldr	r1, [pc, #872]	; 4001c7bc <CyU3PSetEpConfig+0x5c8>
4001c450:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c454:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c458:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c45c:	e3a01001 	mov	r1, #1
4001c460:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c464:	e59f1354 	ldr	r1, [pc, #852]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c468:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c46c:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c470:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c474:	e3a01001 	mov	r1, #1
4001c478:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c47c:	e59f1340 	ldr	r1, [pc, #832]	; 4001c7c4 <CyU3PSetEpConfig+0x5d0>
4001c480:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c484:	e3a00000 	mov	r0, #0
4001c488:	e0861086 	add	r1, r6, r6, lsl #1
4001c48c:	e59f2334 	ldr	r2, [pc, #820]	; 4001c7c8 <CyU3PSetEpConfig+0x5d4>
4001c490:	e0821101 	add	r1, r2, r1, lsl #2
4001c494:	e5810004 	str	r0, [r1, #4]
4001c498:	e0861086 	add	r1, r6, r6, lsl #1
4001c49c:	e0821101 	add	r1, r2, r1, lsl #2
4001c4a0:	e5810008 	str	r0, [r1, #8]
4001c4a4:	e59f0304 	ldr	r0, [pc, #772]	; 4001c7b0 <CyU3PSetEpConfig+0x5bc>
4001c4a8:	ebffb80d 	bl	4000a4e4 <_txe_mutex_put>
4001c4ac:	e3a00000 	mov	r0, #0
4001c4b0:	eaffff5c 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c4b4:	e3a00001 	mov	r0, #1
4001c4b8:	e0861086 	add	r1, r6, r6, lsl #1
4001c4bc:	e59f2304 	ldr	r2, [pc, #772]	; 4001c7c8 <CyU3PSetEpConfig+0x5d4>
4001c4c0:	e0821101 	add	r1, r2, r1, lsl #2
4001c4c4:	e5810004 	str	r0, [r1, #4]
4001c4c8:	e0861086 	add	r1, r6, r6, lsl #1
4001c4cc:	e0821101 	add	r1, r2, r1, lsl #2
4001c4d0:	e5810008 	str	r0, [r1, #8]
4001c4d4:	e1d500b8 	ldrh	r0, [r5, #8]
4001c4d8:	e0861086 	add	r1, r6, r6, lsl #1
4001c4dc:	e0821101 	add	r1, r2, r1, lsl #2
4001c4e0:	e1c100b0 	strh	r0, [r1]
4001c4e4:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c7cc <CyU3PSetEpConfig+0x5d8>
4001c4e8:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c4ec:	e5d50004 	ldrb	r0, [r5, #4]
4001c4f0:	e3500002 	cmp	r0, #2
4001c4f4:	1a000007 	bne	4001c518 <CyU3PSetEpConfig+0x324>
4001c4f8:	e1d500b6 	ldrh	r0, [r5, #6]
4001c4fc:	e3500000 	cmp	r0, #0
4001c500:	da000004 	ble	4001c518 <CyU3PSetEpConfig+0x324>
4001c504:	e3a02001 	mov	r2, #1
4001c508:	e1a01006 	mov	r1, r6
4001c50c:	e1a00004 	mov	r0, r4
4001c510:	eb00031b 	bl	4001d184 <CyU3PUsbMapStream>
4001c514:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c7d0 <CyU3PSetEpConfig+0x5dc>
4001c518:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c51c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c520:	e3a01001 	mov	r1, #1
4001c524:	e1800611 	orr	r0, r0, r1, lsl r6
4001c528:	e59f1290 	ldr	r1, [pc, #656]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c52c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c530:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c534:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c538:	e59f1278 	ldr	r1, [pc, #632]	; 4001c7b8 <CyU3PSetEpConfig+0x5c4>
4001c53c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c540:	e3890001 	orr	r0, r9, #1
4001c544:	e59f1270 	ldr	r1, [pc, #624]	; 4001c7bc <CyU3PSetEpConfig+0x5c8>
4001c548:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c54c:	e2810040 	add	r0, r1, #64	; 0x40
4001c550:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c554:	e59f0278 	ldr	r0, [pc, #632]	; 4001c7d4 <CyU3PSetEpConfig+0x5e0>
4001c558:	e5900000 	ldr	r0, [r0]
4001c55c:	e3500000 	cmp	r0, #0
4001c560:	0a00007f 	beq	4001c764 <CyU3PSetEpConfig+0x570>
4001c564:	e3a00001 	mov	r0, #1
4001c568:	e59f1268 	ldr	r1, [pc, #616]	; 4001c7d8 <CyU3PSetEpConfig+0x5e4>
4001c56c:	e5911000 	ldr	r1, [r1]
4001c570:	e1110610 	tst	r1, r0, lsl r6
4001c574:	0a00007a 	beq	4001c764 <CyU3PSetEpConfig+0x570>
4001c578:	e59f0244 	ldr	r0, [pc, #580]	; 4001c7c4 <CyU3PSetEpConfig+0x5d0>
4001c57c:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c580:	e3a01001 	mov	r1, #1
4001c584:	e1800611 	orr	r0, r0, r1, lsl r6
4001c588:	e59f1234 	ldr	r1, [pc, #564]	; 4001c7c4 <CyU3PSetEpConfig+0x5d0>
4001c58c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c590:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c594:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c598:	e3a01001 	mov	r1, #1
4001c59c:	e1800611 	orr	r0, r0, r1, lsl r6
4001c5a0:	e59f1218 	ldr	r1, [pc, #536]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c5a4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c5a8:	e59f0224 	ldr	r0, [pc, #548]	; 4001c7d4 <CyU3PSetEpConfig+0x5e0>
4001c5ac:	e5901000 	ldr	r1, [r0]
4001c5b0:	e1a00004 	mov	r0, r4
4001c5b4:	eb0001ba 	bl	4001cca4 <CyU3PUsbEnableEpInterrupts>
4001c5b8:	ea000069 	b	4001c764 <CyU3PSetEpConfig+0x570>
4001c5bc:	e5950000 	ldr	r0, [r5]
4001c5c0:	e3500000 	cmp	r0, #0
4001c5c4:	1a00001e 	bne	4001c644 <CyU3PSetEpConfig+0x450>
4001c5c8:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c7b4 <CyU3PSetEpConfig+0x5c0>
4001c5cc:	e59f1208 	ldr	r1, [pc, #520]	; 4001c7dc <CyU3PSetEpConfig+0x5e8>
4001c5d0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c5d4:	e3a00020 	mov	r0, #32
4001c5d8:	e59f1200 	ldr	r1, [pc, #512]	; 4001c7e0 <CyU3PSetEpConfig+0x5ec>
4001c5dc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c5e0:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c5e4:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c5e8:	e2861010 	add	r1, r6, #16
4001c5ec:	e3a02001 	mov	r2, #1
4001c5f0:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c5f4:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c7c4 <CyU3PSetEpConfig+0x5d0>
4001c5f8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c5fc:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c600:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c604:	e2861010 	add	r1, r6, #16
4001c608:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c60c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c610:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c614:	e3a00000 	mov	r0, #0
4001c618:	e0861086 	add	r1, r6, r6, lsl #1
4001c61c:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c7e4 <CyU3PSetEpConfig+0x5f0>
4001c620:	e0821101 	add	r1, r2, r1, lsl #2
4001c624:	e5810004 	str	r0, [r1, #4]
4001c628:	e0861086 	add	r1, r6, r6, lsl #1
4001c62c:	e0821101 	add	r1, r2, r1, lsl #2
4001c630:	e5810008 	str	r0, [r1, #8]
4001c634:	e59f0174 	ldr	r0, [pc, #372]	; 4001c7b0 <CyU3PSetEpConfig+0x5bc>
4001c638:	ebffb7a9 	bl	4000a4e4 <_txe_mutex_put>
4001c63c:	e3a00000 	mov	r0, #0
4001c640:	eafffef8 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c644:	e3a00001 	mov	r0, #1
4001c648:	e0861086 	add	r1, r6, r6, lsl #1
4001c64c:	e59f2190 	ldr	r2, [pc, #400]	; 4001c7e4 <CyU3PSetEpConfig+0x5f0>
4001c650:	e0821101 	add	r1, r2, r1, lsl #2
4001c654:	e5810004 	str	r0, [r1, #4]
4001c658:	e0861086 	add	r1, r6, r6, lsl #1
4001c65c:	e0821101 	add	r1, r2, r1, lsl #2
4001c660:	e5810008 	str	r0, [r1, #8]
4001c664:	e1d500b8 	ldrh	r0, [r5, #8]
4001c668:	e0861086 	add	r1, r6, r6, lsl #1
4001c66c:	e0821101 	add	r1, r2, r1, lsl #2
4001c670:	e1c100b0 	strh	r0, [r1]
4001c674:	e59f016c 	ldr	r0, [pc, #364]	; 4001c7e8 <CyU3PSetEpConfig+0x5f4>
4001c678:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c67c:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c680:	e1800007 	orr	r0, r0, r7
4001c684:	e59f115c 	ldr	r1, [pc, #348]	; 4001c7e8 <CyU3PSetEpConfig+0x5f4>
4001c688:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c68c:	e5d50004 	ldrb	r0, [r5, #4]
4001c690:	e3500002 	cmp	r0, #2
4001c694:	1a00000e 	bne	4001c6d4 <CyU3PSetEpConfig+0x4e0>
4001c698:	e1d500b6 	ldrh	r0, [r5, #6]
4001c69c:	e3500000 	cmp	r0, #0
4001c6a0:	da00000b 	ble	4001c6d4 <CyU3PSetEpConfig+0x4e0>
4001c6a4:	e3a02001 	mov	r2, #1
4001c6a8:	e1a01006 	mov	r1, r6
4001c6ac:	e1a00004 	mov	r0, r4
4001c6b0:	eb0002b3 	bl	4001d184 <CyU3PUsbMapStream>
4001c6b4:	e59f0104 	ldr	r0, [pc, #260]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c6b8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c6bc:	e2861010 	add	r1, r6, #16
4001c6c0:	e3a02001 	mov	r2, #1
4001c6c4:	e1800112 	orr	r0, r0, r2, lsl r1
4001c6c8:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c6cc:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c6d0:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c7d0 <CyU3PSetEpConfig+0x5dc>
4001c6d4:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c6d8:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c7dc <CyU3PSetEpConfig+0x5e8>
4001c6dc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c6e0:	e3890001 	orr	r0, r9, #1
4001c6e4:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c7e0 <CyU3PSetEpConfig+0x5ec>
4001c6e8:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c6ec:	e2810040 	add	r0, r1, #64	; 0x40
4001c6f0:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c6f4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c7d4 <CyU3PSetEpConfig+0x5e0>
4001c6f8:	e5900000 	ldr	r0, [r0]
4001c6fc:	e3500000 	cmp	r0, #0
4001c700:	0a000017 	beq	4001c764 <CyU3PSetEpConfig+0x570>
4001c704:	e2860010 	add	r0, r6, #16
4001c708:	e3a01001 	mov	r1, #1
4001c70c:	e1a00011 	lsl	r0, r1, r0
4001c710:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c7d8 <CyU3PSetEpConfig+0x5e4>
4001c714:	e5911000 	ldr	r1, [r1]
4001c718:	e1100001 	tst	r0, r1
4001c71c:	0a000010 	beq	4001c764 <CyU3PSetEpConfig+0x570>
4001c720:	e59f009c 	ldr	r0, [pc, #156]	; 4001c7c4 <CyU3PSetEpConfig+0x5d0>
4001c724:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c728:	e2861010 	add	r1, r6, #16
4001c72c:	e3a02001 	mov	r2, #1
4001c730:	e1800112 	orr	r0, r0, r2, lsl r1
4001c734:	e59f1088 	ldr	r1, [pc, #136]	; 4001c7c4 <CyU3PSetEpConfig+0x5d0>
4001c738:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c73c:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c740:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c744:	e2861010 	add	r1, r6, #16
4001c748:	e1800112 	orr	r0, r0, r2, lsl r1
4001c74c:	e59f106c 	ldr	r1, [pc, #108]	; 4001c7c0 <CyU3PSetEpConfig+0x5cc>
4001c750:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c754:	e59f0078 	ldr	r0, [pc, #120]	; 4001c7d4 <CyU3PSetEpConfig+0x5e0>
4001c758:	e5901000 	ldr	r1, [r0]
4001c75c:	e1a00004 	mov	r0, r4
4001c760:	eb00014f 	bl	4001cca4 <CyU3PUsbEnableEpInterrupts>
4001c764:	e59f0038 	ldr	r0, [pc, #56]	; 4001c7a4 <CyU3PSetEpConfig+0x5b0>
4001c768:	e5d00008 	ldrb	r0, [r0, #8]
4001c76c:	e3500005 	cmp	r0, #5
4001c770:	ba000007 	blt	4001c794 <CyU3PSetEpConfig+0x5a0>
4001c774:	e1a00004 	mov	r0, r4
4001c778:	eb00040e 	bl	4001d7b8 <CyU3PUsbResetEp>
4001c77c:	e1a00004 	mov	r0, r4
4001c780:	eb0001a4 	bl	4001ce18 <CyU3PUsbFlushEp>
4001c784:	e3a02001 	mov	r2, #1
4001c788:	e3a01000 	mov	r1, #0
4001c78c:	e1a00004 	mov	r0, r4
4001c790:	eb00066c 	bl	4001e148 <CyU3PUsbStall>
4001c794:	e59f0014 	ldr	r0, [pc, #20]	; 4001c7b0 <CyU3PSetEpConfig+0x5bc>
4001c798:	ebffb751 	bl	4000a4e4 <_txe_mutex_put>
4001c79c:	e3a00000 	mov	r0, #0
4001c7a0:	eafffea0 	b	4001c228 <CyU3PSetEpConfig+0x34>
4001c7a4:	40031d60 	.word	0x40031d60
4001c7a8:	400122b0 	.word	0x400122b0
4001c7ac:	000003ff 	.word	0x000003ff
4001c7b0:	40031f00 	.word	0x40031f00
4001c7b4:	00004040 	.word	0x00004040
4001c7b8:	e0031418 	.word	0xe0031418
4001c7bc:	e0033500 	.word	0xe0033500
4001c7c0:	e0033000 	.word	0xe0033000
4001c7c4:	e0031000 	.word	0xe0031000
4001c7c8:	40031bdc 	.word	0x40031bdc
4001c7cc:	e0031c40 	.word	0xe0031c40
4001c7d0:	00400028 	.word	0x00400028
4001c7d4:	40030d9c 	.word	0x40030d9c
4001c7d8:	40030da0 	.word	0x40030da0
4001c7dc:	e0031498 	.word	0xe0031498
4001c7e0:	e0033600 	.word	0xe0033600
4001c7e4:	40031c9c 	.word	0x40031c9c
4001c7e8:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c7ec <CyU3PSetUsbCoreClock>:
4001c7ec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c7f0:	e1a04000 	mov	r4, r0
4001c7f4:	e1a05001 	mov	r5, r1
4001c7f8:	eb0016d5 	bl	40022354 <CyU3PVicDisableAllInterrupts>
4001c7fc:	e1a06000 	mov	r6, r0
4001c800:	e59f0064 	ldr	r0, [pc, #100]	; 4001c86c <CyU3PSetUsbCoreClock+0x80>
4001c804:	e5900008 	ldr	r0, [r0, #8]
4001c808:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c80c:	e59f1058 	ldr	r1, [pc, #88]	; 4001c86c <CyU3PSetUsbCoreClock+0x80>
4001c810:	e5810008 	str	r0, [r1, #8]
4001c814:	e3a07014 	mov	r7, #20
4001c818:	ea000001 	b	4001c824 <CyU3PSetUsbCoreClock+0x38>
4001c81c:	e1a00000 	nop			; (mov r0, r0)
4001c820:	e2477001 	sub	r7, r7, #1
4001c824:	e3570000 	cmp	r7, #0
4001c828:	1afffffb 	bne	4001c81c <CyU3PSetUsbCoreClock+0x30>
4001c82c:	e1850104 	orr	r0, r5, r4, lsl #2
4001c830:	e59f1034 	ldr	r1, [pc, #52]	; 4001c86c <CyU3PSetUsbCoreClock+0x80>
4001c834:	e5810008 	str	r0, [r1, #8]
4001c838:	e1a00001 	mov	r0, r1
4001c83c:	e5900008 	ldr	r0, [r0, #8]
4001c840:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c844:	e5810008 	str	r0, [r1, #8]
4001c848:	e3a07050 	mov	r7, #80	; 0x50
4001c84c:	ea000001 	b	4001c858 <CyU3PSetUsbCoreClock+0x6c>
4001c850:	e1a00000 	nop			; (mov r0, r0)
4001c854:	e2477001 	sub	r7, r7, #1
4001c858:	e3570000 	cmp	r7, #0
4001c85c:	1afffffb 	bne	4001c850 <CyU3PSetUsbCoreClock+0x64>
4001c860:	e1a00006 	mov	r0, r6
4001c864:	eb0016c8 	bl	4002238c <CyU3PVicEnableInterrupts>
4001c868:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c86c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c870 <CyU3PUibInit>:
4001c870:	e92d4010 	push	{r4, lr}
4001c874:	e3a04000 	mov	r4, #0
4001c878:	e3a00000 	mov	r0, #0
4001c87c:	e59f117c 	ldr	r1, [pc, #380]	; 4001ca00 <CyU3PUibInit+0x190>
4001c880:	e5810004 	str	r0, [r1, #4]
4001c884:	e5810008 	str	r0, [r1, #8]
4001c888:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c88c:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c890:	e581001c 	str	r0, [r1, #28]
4001c894:	e3e00000 	mvn	r0, #0
4001c898:	e581000c 	str	r0, [r1, #12]
4001c89c:	e5810004 	str	r0, [r1, #4]
4001c8a0:	e59f015c 	ldr	r0, [pc, #348]	; 4001ca04 <CyU3PUibInit+0x194>
4001c8a4:	e5810008 	str	r0, [r1, #8]
4001c8a8:	e3a00000 	mov	r0, #0
4001c8ac:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c8b0:	e3e00000 	mvn	r0, #0
4001c8b4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c8b8:	e59f0148 	ldr	r0, [pc, #328]	; 4001ca08 <CyU3PUibInit+0x198>
4001c8bc:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c8c0:	eb0016c4 	bl	400223d8 <CyFx3Usb2PhySetup>
4001c8c4:	e3e00000 	mvn	r0, #0
4001c8c8:	e59f113c 	ldr	r1, [pc, #316]	; 4001ca0c <CyU3PUibInit+0x19c>
4001c8cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c8d0:	e59f0138 	ldr	r0, [pc, #312]	; 4001ca10 <CyU3PUibInit+0x1a0>
4001c8d4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c8d8:	e3e00000 	mvn	r0, #0
4001c8dc:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c8e0:	e3a00000 	mov	r0, #0
4001c8e4:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c8e8:	e3a00001 	mov	r0, #1
4001c8ec:	e1811680 	orr	r1, r1, r0, lsl #13
4001c8f0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c8f4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c8f8:	e3a00043 	mov	r0, #67	; 0x43
4001c8fc:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c900:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c904:	e59f0108 	ldr	r0, [pc, #264]	; 4001ca14 <CyU3PUibInit+0x1a4>
4001c908:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c90c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c910:	e3a00040 	mov	r0, #64	; 0x40
4001c914:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c918:	e1800400 	orr	r0, r0, r0, lsl #8
4001c91c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c920:	e3a00040 	mov	r0, #64	; 0x40
4001c924:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c928:	e3a04001 	mov	r4, #1
4001c92c:	ea000015 	b	4001c988 <CyU3PUibInit+0x118>
4001c930:	e1a00004 	mov	r0, r4
4001c934:	eb000137 	bl	4001ce18 <CyU3PUsbFlushEp>
4001c938:	e59f00d8 	ldr	r0, [pc, #216]	; 4001ca18 <CyU3PUibInit+0x1a8>
4001c93c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c940:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c944:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ca18 <CyU3PUibInit+0x1a8>
4001c948:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c94c:	e3a00000 	mov	r0, #0
4001c950:	e59f10c4 	ldr	r1, [pc, #196]	; 4001ca1c <CyU3PUibInit+0x1ac>
4001c954:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c958:	e3840080 	orr	r0, r4, #128	; 0x80
4001c95c:	eb00012d 	bl	4001ce18 <CyU3PUsbFlushEp>
4001c960:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ca20 <CyU3PUibInit+0x1b0>
4001c964:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c968:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c96c:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ca20 <CyU3PUibInit+0x1b0>
4001c970:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c974:	e3a00000 	mov	r0, #0
4001c978:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ca24 <CyU3PUibInit+0x1b4>
4001c97c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c980:	e2840001 	add	r0, r4, #1
4001c984:	e20040ff 	and	r4, r0, #255	; 0xff
4001c988:	e3540010 	cmp	r4, #16
4001c98c:	baffffe7 	blt	4001c930 <CyU3PUibInit+0xc0>
4001c990:	e59f0090 	ldr	r0, [pc, #144]	; 4001ca28 <CyU3PUibInit+0x1b8>
4001c994:	e5900004 	ldr	r0, [r0, #4]
4001c998:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c99c:	e59f1084 	ldr	r1, [pc, #132]	; 4001ca28 <CyU3PUibInit+0x1b8>
4001c9a0:	e5810004 	str	r0, [r1, #4]
4001c9a4:	e3e00000 	mvn	r0, #0
4001c9a8:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c9ac:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c9b0:	e3a00b01 	mov	r0, #1024	; 0x400
4001c9b4:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c9b8:	e59f106c 	ldr	r1, [pc, #108]	; 4001ca2c <CyU3PUibInit+0x1bc>
4001c9bc:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c9c0:	e3a00015 	mov	r0, #21
4001c9c4:	eb00166b 	bl	40022378 <CyU3PVicEnableInt>
4001c9c8:	e59f0060 	ldr	r0, [pc, #96]	; 4001ca30 <CyU3PUibInit+0x1c0>
4001c9cc:	e5900000 	ldr	r0, [r0]
4001c9d0:	e3500000 	cmp	r0, #0
4001c9d4:	0a000008 	beq	4001c9fc <CyU3PUibInit+0x18c>
4001c9d8:	e59f0054 	ldr	r0, [pc, #84]	; 4001ca34 <CyU3PUibInit+0x1c4>
4001c9dc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c9e0:	e3100b01 	tst	r0, #1024	; 0x400
4001c9e4:	0a000004 	beq	4001c9fc <CyU3PUibInit+0x18c>
4001c9e8:	e3a01000 	mov	r1, #0
4001c9ec:	e3a0000b 	mov	r0, #11
4001c9f0:	e59f2038 	ldr	r2, [pc, #56]	; 4001ca30 <CyU3PUibInit+0x1c0>
4001c9f4:	e5922000 	ldr	r2, [r2]
4001c9f8:	e12fff32 	blx	r2
4001c9fc:	e8bd8010 	pop	{r4, pc}
4001ca00:	e0050000 	.word	0xe0050000
4001ca04:	00038081 	.word	0x00038081
4001ca08:	00004a3d 	.word	0x00004a3d
4001ca0c:	e0031000 	.word	0xe0031000
4001ca10:	0000095c 	.word	0x0000095c
4001ca14:	00004040 	.word	0x00004040
4001ca18:	e0031498 	.word	0xe0031498
4001ca1c:	e0033600 	.word	0xe0033600
4001ca20:	e0031418 	.word	0xe0031418
4001ca24:	e0033500 	.word	0xe0033500
4001ca28:	e0030000 	.word	0xe0030000
4001ca2c:	40031d60 	.word	0x40031d60
4001ca30:	40030dbc 	.word	0x40030dbc
4001ca34:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001ca38 <CyU3PUsbAckSetup>:
4001ca38:	e92d4010 	push	{r4, lr}
4001ca3c:	e3e01000 	mvn	r1, #0
4001ca40:	e59f00fc 	ldr	r0, [pc, #252]	; 4001cb44 <CyU3PUsbAckSetup+0x10c>
4001ca44:	ebffb671 	bl	4000a410 <_txe_mutex_get>
4001ca48:	eb000780 	bl	4001e850 <GetUsbLinkActive>
4001ca4c:	eb00019e 	bl	4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>
4001ca50:	e3500000 	cmp	r0, #0
4001ca54:	0a000002 	beq	4001ca64 <CyU3PUsbAckSetup+0x2c>
4001ca58:	e59f00e4 	ldr	r0, [pc, #228]	; 4001cb44 <CyU3PUsbAckSetup+0x10c>
4001ca5c:	ebffb6a0 	bl	4000a4e4 <_txe_mutex_put>
4001ca60:	e8bd8010 	pop	{r4, pc}
4001ca64:	e3a00000 	mov	r0, #0
4001ca68:	e59f10d8 	ldr	r1, [pc, #216]	; 4001cb48 <CyU3PUsbAckSetup+0x110>
4001ca6c:	e5810014 	str	r0, [r1, #20]
4001ca70:	e2810000 	add	r0, r1, #0
4001ca74:	e5d00009 	ldrb	r0, [r0, #9]
4001ca78:	e3500003 	cmp	r0, #3
4001ca7c:	1a000026 	bne	4001cb1c <CyU3PUsbAckSetup+0xe4>
4001ca80:	e59f00c4 	ldr	r0, [pc, #196]	; 4001cb4c <CyU3PUsbAckSetup+0x114>
4001ca84:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001ca88:	e3c00004 	bic	r0, r0, #4
4001ca8c:	e59f10b8 	ldr	r1, [pc, #184]	; 4001cb4c <CyU3PUsbAckSetup+0x114>
4001ca90:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001ca94:	e1a00001 	mov	r0, r1
4001ca98:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001ca9c:	e3c00004 	bic	r0, r0, #4
4001caa0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001caa4:	eb00162a 	bl	40022354 <CyU3PVicDisableAllInterrupts>
4001caa8:	e1a04000 	mov	r4, r0
4001caac:	e3a00001 	mov	r0, #1
4001cab0:	ebffdbad 	bl	4001396c <CyU3PBusyWait>
4001cab4:	e59f0090 	ldr	r0, [pc, #144]	; 4001cb4c <CyU3PUsbAckSetup+0x114>
4001cab8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001cabc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001cac0:	e59f1084 	ldr	r1, [pc, #132]	; 4001cb4c <CyU3PUsbAckSetup+0x114>
4001cac4:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001cac8:	e1a00004 	mov	r0, r4
4001cacc:	eb00162e 	bl	4002238c <CyU3PVicEnableInterrupts>
4001cad0:	e3a00c02 	mov	r0, #512	; 0x200
4001cad4:	e59f1074 	ldr	r1, [pc, #116]	; 4001cb50 <CyU3PUsbAckSetup+0x118>
4001cad8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001cadc:	e3a00016 	mov	r0, #22
4001cae0:	eb000ced 	bl	4001fe9c <CyU3PUsbAddToEventLog>
4001cae4:	e59f005c 	ldr	r0, [pc, #92]	; 4001cb48 <CyU3PUsbAckSetup+0x110>
4001cae8:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001caec:	e3500000 	cmp	r0, #0
4001caf0:	1a000010 	bne	4001cb38 <CyU3PUsbAckSetup+0x100>
4001caf4:	e3a00001 	mov	r0, #1
4001caf8:	e59f1054 	ldr	r1, [pc, #84]	; 4001cb54 <CyU3PUsbAckSetup+0x11c>
4001cafc:	e5810000 	str	r0, [r1]
4001cb00:	e3a02000 	mov	r2, #0
4001cb04:	e3a01064 	mov	r1, #100	; 0x64
4001cb08:	e59f0048 	ldr	r0, [pc, #72]	; 4001cb58 <CyU3PUsbAckSetup+0x120>
4001cb0c:	ebffb88d 	bl	4000ad48 <_txe_timer_change>
4001cb10:	e59f0040 	ldr	r0, [pc, #64]	; 4001cb58 <CyU3PUsbAckSetup+0x120>
4001cb14:	ebffb87b 	bl	4000ad08 <_txe_timer_activate>
4001cb18:	ea000006 	b	4001cb38 <CyU3PUsbAckSetup+0x100>
4001cb1c:	e59f002c 	ldr	r0, [pc, #44]	; 4001cb50 <CyU3PUsbAckSetup+0x118>
4001cb20:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001cb24:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001cb28:	e59f1020 	ldr	r1, [pc, #32]	; 4001cb50 <CyU3PUsbAckSetup+0x118>
4001cb2c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001cb30:	e3a00040 	mov	r0, #64	; 0x40
4001cb34:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001cb38:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb44 <CyU3PUsbAckSetup+0x10c>
4001cb3c:	ebffb668 	bl	4000a4e4 <_txe_mutex_put>
4001cb40:	eaffffc6 	b	4001ca60 <CyU3PUsbAckSetup+0x28>
4001cb44:	40031f00 	.word	0x40031f00
4001cb48:	40031d60 	.word	0x40031d60
4001cb4c:	e0033000 	.word	0xe0033000
4001cb50:	e0031000 	.word	0xe0031000
4001cb54:	40030dd0 	.word	0x40030dd0
4001cb58:	400326c0 	.word	0x400326c0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001cb5c <CyU3PUsbCreateDmaChannels>:
4001cb5c:	e92d4010 	push	{r4, lr}
4001cb60:	e24dd020 	sub	sp, sp, #32
4001cb64:	e3a00c02 	mov	r0, #512	; 0x200
4001cb68:	e1cd00b4 	strh	r0, [sp, #4]
4001cb6c:	e3a00001 	mov	r0, #1
4001cb70:	e1cd00b6 	strh	r0, [sp, #6]
4001cb74:	e3a00000 	mov	r0, #0
4001cb78:	e1cd00bc 	strh	r0, [sp, #12]
4001cb7c:	e3a00c03 	mov	r0, #768	; 0x300
4001cb80:	e1cd00ba 	strh	r0, [sp, #10]
4001cb84:	e3a00000 	mov	r0, #0
4001cb88:	e5cd0014 	strb	r0, [sp, #20]
4001cb8c:	e1cd00be 	strh	r0, [sp, #14]
4001cb90:	e1cd01b0 	strh	r0, [sp, #16]
4001cb94:	e1cd01b2 	strh	r0, [sp, #18]
4001cb98:	e58d0018 	str	r0, [sp, #24]
4001cb9c:	e58d001c 	str	r0, [sp, #28]
4001cba0:	e59f00ec 	ldr	r0, [pc, #236]	; 4001cc94 <CyU3PUsbCreateDmaChannels+0x138>
4001cba4:	e1cd00b8 	strh	r0, [sp, #8]
4001cba8:	e28d2004 	add	r2, sp, #4
4001cbac:	e3a01004 	mov	r1, #4
4001cbb0:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cc98 <CyU3PUsbCreateDmaChannels+0x13c>
4001cbb4:	ebffe411 	bl	40015c00 <CyU3PDmaChannelCreate>
4001cbb8:	e1a04000 	mov	r4, r0
4001cbbc:	e3540000 	cmp	r4, #0
4001cbc0:	0a000002 	beq	4001cbd0 <CyU3PUsbCreateDmaChannels+0x74>
4001cbc4:	e3a0004e 	mov	r0, #78	; 0x4e
4001cbc8:	e28dd020 	add	sp, sp, #32
4001cbcc:	e8bd8010 	pop	{r4, pc}
4001cbd0:	e59f00c4 	ldr	r0, [pc, #196]	; 4001cc9c <CyU3PUsbCreateDmaChannels+0x140>
4001cbd4:	e5900000 	ldr	r0, [r0]
4001cbd8:	e3500000 	cmp	r0, #0
4001cbdc:	0a000009 	beq	4001cc08 <CyU3PUsbCreateDmaChannels+0xac>
4001cbe0:	e3a01001 	mov	r1, #1
4001cbe4:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cc98 <CyU3PUsbCreateDmaChannels+0x13c>
4001cbe8:	ebffe274 	bl	400155c0 <CyU3PDmaChannelCacheControl>
4001cbec:	e1a04000 	mov	r4, r0
4001cbf0:	e3540000 	cmp	r4, #0
4001cbf4:	0a000003 	beq	4001cc08 <CyU3PUsbCreateDmaChannels+0xac>
4001cbf8:	e59f0098 	ldr	r0, [pc, #152]	; 4001cc98 <CyU3PUsbCreateDmaChannels+0x13c>
4001cbfc:	ebffe4f9 	bl	40015fe8 <CyU3PDmaChannelDestroy>
4001cc00:	e3a0004e 	mov	r0, #78	; 0x4e
4001cc04:	eaffffef 	b	4001cbc8 <CyU3PUsbCreateDmaChannels+0x6c>
4001cc08:	e3a00b01 	mov	r0, #1024	; 0x400
4001cc0c:	e1cd00b8 	strh	r0, [sp, #8]
4001cc10:	e3a00000 	mov	r0, #0
4001cc14:	e58d001c 	str	r0, [sp, #28]
4001cc18:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001cc1c:	e1cd00ba 	strh	r0, [sp, #10]
4001cc20:	e28d2004 	add	r2, sp, #4
4001cc24:	e3a01003 	mov	r1, #3
4001cc28:	e59f0070 	ldr	r0, [pc, #112]	; 4001cca0 <CyU3PUsbCreateDmaChannels+0x144>
4001cc2c:	ebffe3f3 	bl	40015c00 <CyU3PDmaChannelCreate>
4001cc30:	e1a04000 	mov	r4, r0
4001cc34:	e3540000 	cmp	r4, #0
4001cc38:	0a000003 	beq	4001cc4c <CyU3PUsbCreateDmaChannels+0xf0>
4001cc3c:	e59f0054 	ldr	r0, [pc, #84]	; 4001cc98 <CyU3PUsbCreateDmaChannels+0x13c>
4001cc40:	ebffe4e8 	bl	40015fe8 <CyU3PDmaChannelDestroy>
4001cc44:	e3a0004e 	mov	r0, #78	; 0x4e
4001cc48:	eaffffde 	b	4001cbc8 <CyU3PUsbCreateDmaChannels+0x6c>
4001cc4c:	e59f0048 	ldr	r0, [pc, #72]	; 4001cc9c <CyU3PUsbCreateDmaChannels+0x140>
4001cc50:	e5900000 	ldr	r0, [r0]
4001cc54:	e3500000 	cmp	r0, #0
4001cc58:	0a00000b 	beq	4001cc8c <CyU3PUsbCreateDmaChannels+0x130>
4001cc5c:	e3a01001 	mov	r1, #1
4001cc60:	e59f0038 	ldr	r0, [pc, #56]	; 4001cca0 <CyU3PUsbCreateDmaChannels+0x144>
4001cc64:	ebffe255 	bl	400155c0 <CyU3PDmaChannelCacheControl>
4001cc68:	e1a04000 	mov	r4, r0
4001cc6c:	e3540000 	cmp	r4, #0
4001cc70:	0a000005 	beq	4001cc8c <CyU3PUsbCreateDmaChannels+0x130>
4001cc74:	e59f001c 	ldr	r0, [pc, #28]	; 4001cc98 <CyU3PUsbCreateDmaChannels+0x13c>
4001cc78:	ebffe4da 	bl	40015fe8 <CyU3PDmaChannelDestroy>
4001cc7c:	e59f001c 	ldr	r0, [pc, #28]	; 4001cca0 <CyU3PUsbCreateDmaChannels+0x144>
4001cc80:	ebffe4d8 	bl	40015fe8 <CyU3PDmaChannelDestroy>
4001cc84:	e3a0004e 	mov	r0, #78	; 0x4e
4001cc88:	eaffffce 	b	4001cbc8 <CyU3PUsbCreateDmaChannels+0x6c>
4001cc8c:	e1a00004 	mov	r0, r4
4001cc90:	eaffffcc 	b	4001cbc8 <CyU3PUsbCreateDmaChannels+0x6c>
4001cc94:	00003f01 	.word	0x00003f01
4001cc98:	40031a9c 	.word	0x40031a9c
4001cc9c:	40030c80 	.word	0x40030c80
4001cca0:	40031b3c 	.word	0x40031b3c

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001cca4 <CyU3PUsbEnableEpInterrupts>:
4001cca4:	e200300f 	and	r3, r0, #15
4001cca8:	e3100080 	tst	r0, #128	; 0x80
4001ccac:	0a00002a 	beq	4001cd5c <CyU3PUsbEnableEpInterrupts+0xb8>
4001ccb0:	e59fc150 	ldr	ip, [pc, #336]	; 4001ce08 <CyU3PUsbEnableEpInterrupts+0x164>
4001ccb4:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ccb8:	e3120901 	tst	r2, #16384	; 0x4000
4001ccbc:	0a00000d 	beq	4001ccf8 <CyU3PUsbEnableEpInterrupts+0x54>
4001ccc0:	e3110001 	tst	r1, #1
4001ccc4:	0a000000 	beq	4001cccc <CyU3PUsbEnableEpInterrupts+0x28>
4001ccc8:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cccc:	e3110002 	tst	r1, #2
4001ccd0:	0a000000 	beq	4001ccd8 <CyU3PUsbEnableEpInterrupts+0x34>
4001ccd4:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001ccd8:	e3110004 	tst	r1, #4
4001ccdc:	0a000000 	beq	4001cce4 <CyU3PUsbEnableEpInterrupts+0x40>
4001cce0:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cce4:	e3110008 	tst	r1, #8
4001cce8:	0a000000 	beq	4001ccf0 <CyU3PUsbEnableEpInterrupts+0x4c>
4001ccec:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001ccf0:	e59fc110 	ldr	ip, [pc, #272]	; 4001ce08 <CyU3PUsbEnableEpInterrupts+0x164>
4001ccf4:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ccf8:	e59fc10c 	ldr	ip, [pc, #268]	; 4001ce0c <CyU3PUsbEnableEpInterrupts+0x168>
4001ccfc:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cd00:	e3120001 	tst	r2, #1
4001cd04:	0a00003e 	beq	4001ce04 <CyU3PUsbEnableEpInterrupts+0x160>
4001cd08:	e3110001 	tst	r1, #1
4001cd0c:	0a000000 	beq	4001cd14 <CyU3PUsbEnableEpInterrupts+0x70>
4001cd10:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cd14:	e3110002 	tst	r1, #2
4001cd18:	0a000000 	beq	4001cd20 <CyU3PUsbEnableEpInterrupts+0x7c>
4001cd1c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cd20:	e3110004 	tst	r1, #4
4001cd24:	0a000000 	beq	4001cd2c <CyU3PUsbEnableEpInterrupts+0x88>
4001cd28:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cd2c:	e3110010 	tst	r1, #16
4001cd30:	0a000000 	beq	4001cd38 <CyU3PUsbEnableEpInterrupts+0x94>
4001cd34:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cd38:	e3110020 	tst	r1, #32
4001cd3c:	0a000000 	beq	4001cd44 <CyU3PUsbEnableEpInterrupts+0xa0>
4001cd40:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cd44:	e3110040 	tst	r1, #64	; 0x40
4001cd48:	0a000000 	beq	4001cd50 <CyU3PUsbEnableEpInterrupts+0xac>
4001cd4c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cd50:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001ce0c <CyU3PUsbEnableEpInterrupts+0x168>
4001cd54:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cd58:	ea000029 	b	4001ce04 <CyU3PUsbEnableEpInterrupts+0x160>
4001cd5c:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001ce10 <CyU3PUsbEnableEpInterrupts+0x16c>
4001cd60:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cd64:	e3120901 	tst	r2, #16384	; 0x4000
4001cd68:	0a00000d 	beq	4001cda4 <CyU3PUsbEnableEpInterrupts+0x100>
4001cd6c:	e3110001 	tst	r1, #1
4001cd70:	0a000000 	beq	4001cd78 <CyU3PUsbEnableEpInterrupts+0xd4>
4001cd74:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cd78:	e3110002 	tst	r1, #2
4001cd7c:	0a000000 	beq	4001cd84 <CyU3PUsbEnableEpInterrupts+0xe0>
4001cd80:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cd84:	e3110004 	tst	r1, #4
4001cd88:	0a000000 	beq	4001cd90 <CyU3PUsbEnableEpInterrupts+0xec>
4001cd8c:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cd90:	e3110008 	tst	r1, #8
4001cd94:	0a000000 	beq	4001cd9c <CyU3PUsbEnableEpInterrupts+0xf8>
4001cd98:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001cd9c:	e59fc06c 	ldr	ip, [pc, #108]	; 4001ce10 <CyU3PUsbEnableEpInterrupts+0x16c>
4001cda0:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cda4:	e59fc068 	ldr	ip, [pc, #104]	; 4001ce14 <CyU3PUsbEnableEpInterrupts+0x170>
4001cda8:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cdac:	e3120001 	tst	r2, #1
4001cdb0:	0a000013 	beq	4001ce04 <CyU3PUsbEnableEpInterrupts+0x160>
4001cdb4:	e3110001 	tst	r1, #1
4001cdb8:	0a000000 	beq	4001cdc0 <CyU3PUsbEnableEpInterrupts+0x11c>
4001cdbc:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cdc0:	e3110002 	tst	r1, #2
4001cdc4:	0a000000 	beq	4001cdcc <CyU3PUsbEnableEpInterrupts+0x128>
4001cdc8:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cdcc:	e3110004 	tst	r1, #4
4001cdd0:	0a000000 	beq	4001cdd8 <CyU3PUsbEnableEpInterrupts+0x134>
4001cdd4:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cdd8:	e3110010 	tst	r1, #16
4001cddc:	0a000000 	beq	4001cde4 <CyU3PUsbEnableEpInterrupts+0x140>
4001cde0:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cde4:	e3110020 	tst	r1, #32
4001cde8:	0a000000 	beq	4001cdf0 <CyU3PUsbEnableEpInterrupts+0x14c>
4001cdec:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cdf0:	e3110040 	tst	r1, #64	; 0x40
4001cdf4:	0a000000 	beq	4001cdfc <CyU3PUsbEnableEpInterrupts+0x158>
4001cdf8:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cdfc:	e59fc010 	ldr	ip, [pc, #16]	; 4001ce14 <CyU3PUsbEnableEpInterrupts+0x170>
4001ce00:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ce04:	e12fff1e 	bx	lr
4001ce08:	e0031418 	.word	0xe0031418
4001ce0c:	e0033500 	.word	0xe0033500
4001ce10:	e0031498 	.word	0xe0031498
4001ce14:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001ce18 <CyU3PUsbFlushEp>:
4001ce18:	e92d4070 	push	{r4, r5, r6, lr}
4001ce1c:	e1a04000 	mov	r4, r0
4001ce20:	e204507f 	and	r5, r4, #127	; 0x7f
4001ce24:	e59f00a8 	ldr	r0, [pc, #168]	; 4001ced4 <CyU3PUsbFlushEp+0xbc>
4001ce28:	e5d00008 	ldrb	r0, [r0, #8]
4001ce2c:	e3500000 	cmp	r0, #0
4001ce30:	1a000001 	bne	4001ce3c <CyU3PUsbFlushEp+0x24>
4001ce34:	e3a00042 	mov	r0, #66	; 0x42
4001ce38:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ce3c:	e355000f 	cmp	r5, #15
4001ce40:	da000001 	ble	4001ce4c <CyU3PUsbFlushEp+0x34>
4001ce44:	e3a00040 	mov	r0, #64	; 0x40
4001ce48:	eafffffa 	b	4001ce38 <CyU3PUsbFlushEp+0x20>
4001ce4c:	e3e01000 	mvn	r1, #0
4001ce50:	e59f0080 	ldr	r0, [pc, #128]	; 4001ced8 <CyU3PUsbFlushEp+0xc0>
4001ce54:	ebffb56d 	bl	4000a410 <_txe_mutex_get>
4001ce58:	e3140080 	tst	r4, #128	; 0x80
4001ce5c:	0a00000c 	beq	4001ce94 <CyU3PUsbFlushEp+0x7c>
4001ce60:	e59f0074 	ldr	r0, [pc, #116]	; 4001cedc <CyU3PUsbFlushEp+0xc4>
4001ce64:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ce68:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ce6c:	e59f1068 	ldr	r1, [pc, #104]	; 4001cedc <CyU3PUsbFlushEp+0xc4>
4001ce70:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ce74:	e3a0000a 	mov	r0, #10
4001ce78:	ebffdabb 	bl	4001396c <CyU3PBusyWait>
4001ce7c:	e59f0058 	ldr	r0, [pc, #88]	; 4001cedc <CyU3PUsbFlushEp+0xc4>
4001ce80:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ce84:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001ce88:	e59f104c 	ldr	r1, [pc, #76]	; 4001cedc <CyU3PUsbFlushEp+0xc4>
4001ce8c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ce90:	ea00000b 	b	4001cec4 <CyU3PUsbFlushEp+0xac>
4001ce94:	e59f0044 	ldr	r0, [pc, #68]	; 4001cee0 <CyU3PUsbFlushEp+0xc8>
4001ce98:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ce9c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cea0:	e59f1038 	ldr	r1, [pc, #56]	; 4001cee0 <CyU3PUsbFlushEp+0xc8>
4001cea4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cea8:	e3a0000a 	mov	r0, #10
4001ceac:	ebffdaae 	bl	4001396c <CyU3PBusyWait>
4001ceb0:	e59f0028 	ldr	r0, [pc, #40]	; 4001cee0 <CyU3PUsbFlushEp+0xc8>
4001ceb4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ceb8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cebc:	e59f101c 	ldr	r1, [pc, #28]	; 4001cee0 <CyU3PUsbFlushEp+0xc8>
4001cec0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cec4:	e59f000c 	ldr	r0, [pc, #12]	; 4001ced8 <CyU3PUsbFlushEp+0xc0>
4001cec8:	ebffb585 	bl	4000a4e4 <_txe_mutex_put>
4001cecc:	e3a00000 	mov	r0, #0
4001ced0:	eaffffd8 	b	4001ce38 <CyU3PUsbFlushEp+0x20>
4001ced4:	40031d60 	.word	0x40031d60
4001ced8:	40031f00 	.word	0x40031f00
4001cedc:	e0031c40 	.word	0xe0031c40
4001cee0:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001cee4 <CyU3PUsbGetEP0Data>:
4001cee4:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001cee8:	e1a04000 	mov	r4, r0
4001ceec:	e1a05001 	mov	r5, r1
4001cef0:	e1a06002 	mov	r6, r2
4001cef4:	e59f8198 	ldr	r8, [pc, #408]	; 4001d094 <CyU3PUsbGetEP0Data+0x1b0>
4001cef8:	e59f0198 	ldr	r0, [pc, #408]	; 4001d098 <CyU3PUsbGetEP0Data+0x1b4>
4001cefc:	e5d00008 	ldrb	r0, [r0, #8]
4001cf00:	e3500000 	cmp	r0, #0
4001cf04:	1a000001 	bne	4001cf10 <CyU3PUsbGetEP0Data+0x2c>
4001cf08:	e3a00042 	mov	r0, #66	; 0x42
4001cf0c:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001cf10:	e3550000 	cmp	r5, #0
4001cf14:	1a000001 	bne	4001cf20 <CyU3PUsbGetEP0Data+0x3c>
4001cf18:	e3a00040 	mov	r0, #64	; 0x40
4001cf1c:	eafffffa 	b	4001cf0c <CyU3PUsbGetEP0Data+0x28>
4001cf20:	e3e01000 	mvn	r1, #0
4001cf24:	e59f0170 	ldr	r0, [pc, #368]	; 4001d09c <CyU3PUsbGetEP0Data+0x1b8>
4001cf28:	ebffb538 	bl	4000a410 <_txe_mutex_get>
4001cf2c:	e284000f 	add	r0, r4, #15
4001cf30:	e59f1168 	ldr	r1, [pc, #360]	; 4001d0a0 <CyU3PUsbGetEP0Data+0x1bc>
4001cf34:	e0004001 	and	r4, r0, r1
4001cf38:	e59f0164 	ldr	r0, [pc, #356]	; 4001d0a4 <CyU3PUsbGetEP0Data+0x1c0>
4001cf3c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cf40:	e3c00008 	bic	r0, r0, #8
4001cf44:	e59f1158 	ldr	r1, [pc, #344]	; 4001d0a4 <CyU3PUsbGetEP0Data+0x1c0>
4001cf48:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cf4c:	e59f0144 	ldr	r0, [pc, #324]	; 4001d098 <CyU3PUsbGetEP0Data+0x1b4>
4001cf50:	e5900018 	ldr	r0, [r0, #24]
4001cf54:	e3500000 	cmp	r0, #0
4001cf58:	1a000002 	bne	4001cf68 <CyU3PUsbGetEP0Data+0x84>
4001cf5c:	eb00005a 	bl	4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>
4001cf60:	e3500000 	cmp	r0, #0
4001cf64:	0a000008 	beq	4001cf8c <CyU3PUsbGetEP0Data+0xa8>
4001cf68:	e59f0134 	ldr	r0, [pc, #308]	; 4001d0a4 <CyU3PUsbGetEP0Data+0x1c0>
4001cf6c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cf70:	e3800008 	orr	r0, r0, #8
4001cf74:	e59f1128 	ldr	r1, [pc, #296]	; 4001d0a4 <CyU3PUsbGetEP0Data+0x1c0>
4001cf78:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cf7c:	e59f0118 	ldr	r0, [pc, #280]	; 4001d09c <CyU3PUsbGetEP0Data+0x1b8>
4001cf80:	ebffb557 	bl	4000a4e4 <_txe_mutex_put>
4001cf84:	e3a00051 	mov	r0, #81	; 0x51
4001cf88:	eaffffdf 	b	4001cf0c <CyU3PUsbGetEP0Data+0x28>
4001cf8c:	e59f0110 	ldr	r0, [pc, #272]	; 4001d0a4 <CyU3PUsbGetEP0Data+0x1c0>
4001cf90:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cf94:	e3800008 	orr	r0, r0, #8
4001cf98:	e59f1104 	ldr	r1, [pc, #260]	; 4001d0a4 <CyU3PUsbGetEP0Data+0x1c0>
4001cf9c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cfa0:	eb00062a 	bl	4001e850 <GetUsbLinkActive>
4001cfa4:	e1cd40b6 	strh	r4, [sp, #6]
4001cfa8:	e58d5000 	str	r5, [sp]
4001cfac:	e3a00000 	mov	r0, #0
4001cfb0:	e1cd00b8 	strh	r0, [sp, #8]
4001cfb4:	e1a0100d 	mov	r1, sp
4001cfb8:	e59f00e8 	ldr	r0, [pc, #232]	; 4001d0a8 <CyU3PUsbGetEP0Data+0x1c4>
4001cfbc:	ebffe75f 	bl	40016d40 <CyU3PDmaChannelSetupRecvBuffer>
4001cfc0:	e20070ff 	and	r7, r0, #255	; 0xff
4001cfc4:	e59f00d0 	ldr	r0, [pc, #208]	; 4001d09c <CyU3PUsbGetEP0Data+0x1b8>
4001cfc8:	ebffb545 	bl	4000a4e4 <_txe_mutex_put>
4001cfcc:	e3570000 	cmp	r7, #0
4001cfd0:	1a00002d 	bne	4001d08c <CyU3PUsbGetEP0Data+0x1a8>
4001cfd4:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d098 <CyU3PUsbGetEP0Data+0x1b4>
4001cfd8:	e5900014 	ldr	r0, [r0, #20]
4001cfdc:	e3500000 	cmp	r0, #0
4001cfe0:	0a000000 	beq	4001cfe8 <CyU3PUsbGetEP0Data+0x104>
4001cfe4:	ebfffe93 	bl	4001ca38 <CyU3PUsbAckSetup>
4001cfe8:	ea00000e 	b	4001d028 <CyU3PUsbGetEP0Data+0x144>
4001cfec:	e3a02064 	mov	r2, #100	; 0x64
4001cff0:	e1a0100d 	mov	r1, sp
4001cff4:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d0a8 <CyU3PUsbGetEP0Data+0x1c4>
4001cff8:	ebffe8b2 	bl	400172c8 <CyU3PDmaChannelWaitForRecvBuffer>
4001cffc:	e20070ff 	and	r7, r0, #255	; 0xff
4001d000:	e3570045 	cmp	r7, #69	; 0x45
4001d004:	1a000006 	bne	4001d024 <CyU3PUsbGetEP0Data+0x140>
4001d008:	eb00002f 	bl	4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>
4001d00c:	e3500000 	cmp	r0, #0
4001d010:	0a000001 	beq	4001d01c <CyU3PUsbGetEP0Data+0x138>
4001d014:	e3a00051 	mov	r0, #81	; 0x51
4001d018:	eaffffbb 	b	4001cf0c <CyU3PUsbGetEP0Data+0x28>
4001d01c:	e2488064 	sub	r8, r8, #100	; 0x64
4001d020:	ea000000 	b	4001d028 <CyU3PUsbGetEP0Data+0x144>
4001d024:	ea000001 	b	4001d030 <CyU3PUsbGetEP0Data+0x14c>
4001d028:	e3580000 	cmp	r8, #0
4001d02c:	1affffee 	bne	4001cfec <CyU3PUsbGetEP0Data+0x108>
4001d030:	e1a00000 	nop			; (mov r0, r0)
4001d034:	e3570000 	cmp	r7, #0
4001d038:	0a00000f 	beq	4001d07c <CyU3PUsbGetEP0Data+0x198>
4001d03c:	e3e01000 	mvn	r1, #0
4001d040:	e59f0054 	ldr	r0, [pc, #84]	; 4001d09c <CyU3PUsbGetEP0Data+0x1b8>
4001d044:	ebffb4f1 	bl	4000a410 <_txe_mutex_get>
4001d048:	e3a01001 	mov	r1, #1
4001d04c:	e3a00000 	mov	r0, #0
4001d050:	eb000376 	bl	4001de30 <CyU3PUsbSetEpNak>
4001d054:	e3a00064 	mov	r0, #100	; 0x64
4001d058:	ebffda43 	bl	4001396c <CyU3PBusyWait>
4001d05c:	e59f0044 	ldr	r0, [pc, #68]	; 4001d0a8 <CyU3PUsbGetEP0Data+0x1c4>
4001d060:	ebffe57b 	bl	40016654 <CyU3PDmaChannelReset>
4001d064:	e3a01000 	mov	r1, #0
4001d068:	e1a00001 	mov	r0, r1
4001d06c:	eb00036f 	bl	4001de30 <CyU3PUsbSetEpNak>
4001d070:	e59f0024 	ldr	r0, [pc, #36]	; 4001d09c <CyU3PUsbGetEP0Data+0x1b8>
4001d074:	ebffb51a 	bl	4000a4e4 <_txe_mutex_put>
4001d078:	ea000003 	b	4001d08c <CyU3PUsbGetEP0Data+0x1a8>
4001d07c:	e3560000 	cmp	r6, #0
4001d080:	0a000001 	beq	4001d08c <CyU3PUsbGetEP0Data+0x1a8>
4001d084:	e1dd00b4 	ldrh	r0, [sp, #4]
4001d088:	e1c600b0 	strh	r0, [r6]
4001d08c:	e1a00007 	mov	r0, r7
4001d090:	eaffff9d 	b	4001cf0c <CyU3PUsbGetEP0Data+0x28>
4001d094:	00001388 	.word	0x00001388
4001d098:	40031d60 	.word	0x40031d60
4001d09c:	40031f00 	.word	0x40031f00
4001d0a0:	0000fff0 	.word	0x0000fff0
4001d0a4:	e0031000 	.word	0xe0031000
4001d0a8:	40031b3c 	.word	0x40031b3c

Disassembly of section i.CyU3PUsbGetSpeed:

4001d0ac <CyU3PUsbGetSpeed>:
4001d0ac:	e59f0004 	ldr	r0, [pc, #4]	; 4001d0b8 <CyU3PUsbGetSpeed+0xc>
4001d0b0:	e5d00009 	ldrb	r0, [r0, #9]
4001d0b4:	e12fff1e 	bx	lr
4001d0b8:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbHostIsStarted:

4001d0bc <CyU3PUsbHostIsStarted>:
4001d0bc:	e59f0004 	ldr	r0, [pc, #4]	; 4001d0c8 <CyU3PUsbHostIsStarted+0xc>
4001d0c0:	e5900000 	ldr	r0, [r0]
4001d0c4:	e12fff1e 	bx	lr
4001d0c8:	40030d7c 	.word	0x40030d7c

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>:
4001d0cc:	e59f0038 	ldr	r0, [pc, #56]	; 4001d10c <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001d0d0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001d0d4:	e3500000 	cmp	r0, #0
4001d0d8:	1a000007 	bne	4001d0fc <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d0dc:	e59f002c 	ldr	r0, [pc, #44]	; 4001d110 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001d0e0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001d0e4:	e3100040 	tst	r0, #64	; 0x40
4001d0e8:	1a000003 	bne	4001d0fc <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d0ec:	e59f0020 	ldr	r0, [pc, #32]	; 4001d114 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001d0f0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001d0f4:	e3100c02 	tst	r0, #512	; 0x200
4001d0f8:	0a000001 	beq	4001d104 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001d0fc:	e3a00001 	mov	r0, #1
4001d100:	e12fff1e 	bx	lr
4001d104:	e3a00000 	mov	r0, #0
4001d108:	eafffffc 	b	4001d100 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001d10c:	40031d60 	.word	0x40031d60
4001d110:	e0031000 	.word	0xe0031000
4001d114:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001d118 <CyU3PUsbLoadBootloaderDescs>:
4001d118:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001d11c:	e1a04000 	mov	r4, r0
4001d120:	e3a06000 	mov	r6, #0
4001d124:	e5940008 	ldr	r0, [r4, #8]
4001d128:	e20070ff 	and	r7, r0, #255	; 0xff
4001d12c:	e1a00000 	nop			; (mov r0, r0)
4001d130:	ea00000f 	b	4001d174 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001d134:	e2843010 	add	r3, r4, #16
4001d138:	e0833186 	add	r3, r3, r6, lsl #3
4001d13c:	e5932004 	ldr	r2, [r3, #4]
4001d140:	e2843010 	add	r3, r4, #16
4001d144:	e0833186 	add	r3, r3, r6, lsl #3
4001d148:	e5d31001 	ldrb	r1, [r3, #1]
4001d14c:	e2843010 	add	r3, r4, #16
4001d150:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001d154:	eb0002bf 	bl	4001dc58 <CyU3PUsbSetDesc>
4001d158:	e1a05000 	mov	r5, r0
4001d15c:	e3550000 	cmp	r5, #0
4001d160:	0a000001 	beq	4001d16c <CyU3PUsbLoadBootloaderDescs+0x54>
4001d164:	e1a00005 	mov	r0, r5
4001d168:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001d16c:	e2860001 	add	r0, r6, #1
4001d170:	e20060ff 	and	r6, r0, #255	; 0xff
4001d174:	e1560007 	cmp	r6, r7
4001d178:	baffffed 	blt	4001d134 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001d17c:	e3a00000 	mov	r0, #0
4001d180:	eafffff8 	b	4001d168 <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001d184 <CyU3PUsbMapStream>:
4001d184:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d188:	e1a03000 	mov	r3, r0
4001d18c:	e203c07f 	and	ip, r3, #127	; 0x7f
4001d190:	e59f005c 	ldr	r0, [pc, #92]	; 4001d1f4 <CyU3PUsbMapStream+0x70>
4001d194:	e5d00008 	ldrb	r0, [r0, #8]
4001d198:	e3500000 	cmp	r0, #0
4001d19c:	1a000001 	bne	4001d1a8 <CyU3PUsbMapStream+0x24>
4001d1a0:	e3a00042 	mov	r0, #66	; 0x42
4001d1a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d1a8:	e35c000f 	cmp	ip, #15
4001d1ac:	da000001 	ble	4001d1b8 <CyU3PUsbMapStream+0x34>
4001d1b0:	e3a00040 	mov	r0, #64	; 0x40
4001d1b4:	eafffffa 	b	4001d1a4 <CyU3PUsbMapStream+0x20>
4001d1b8:	e3130080 	tst	r3, #128	; 0x80
4001d1bc:	0a000005 	beq	4001d1d8 <CyU3PUsbMapStream+0x54>
4001d1c0:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d1c4:	e180080c 	orr	r0, r0, ip, lsl #16
4001d1c8:	e1800002 	orr	r0, r0, r2
4001d1cc:	e59fe024 	ldr	lr, [pc, #36]	; 4001d1f8 <CyU3PUsbMapStream+0x74>
4001d1d0:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d1d4:	ea000004 	b	4001d1ec <CyU3PUsbMapStream+0x68>
4001d1d8:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d1dc:	e180080c 	orr	r0, r0, ip, lsl #16
4001d1e0:	e1800002 	orr	r0, r0, r2
4001d1e4:	e59fe010 	ldr	lr, [pc, #16]	; 4001d1fc <CyU3PUsbMapStream+0x78>
4001d1e8:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d1ec:	e3a00000 	mov	r0, #0
4001d1f0:	eaffffeb 	b	4001d1a4 <CyU3PUsbMapStream+0x20>
4001d1f4:	40031d60 	.word	0x40031d60
4001d1f8:	e00335c0 	.word	0xe00335c0
4001d1fc:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001d200 <CyU3PUsbOtgVbusChangeHandler>:
4001d200:	e92d4010 	push	{r4, lr}
4001d204:	e3a04000 	mov	r4, #0
4001d208:	e59f0094 	ldr	r0, [pc, #148]	; 4001d2a4 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d20c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001d210:	e3500000 	cmp	r0, #0
4001d214:	0a000005 	beq	4001d230 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001d218:	e59f0088 	ldr	r0, [pc, #136]	; 4001d2a8 <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001d21c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001d220:	e59f107c 	ldr	r1, [pc, #124]	; 4001d2a4 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d224:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001d228:	e1100001 	tst	r0, r1
4001d22c:	0a000008 	beq	4001d254 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001d230:	e3a04001 	mov	r4, #1
4001d234:	e3a00018 	mov	r0, #24
4001d238:	e59f106c 	ldr	r1, [pc, #108]	; 4001d2ac <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d23c:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d240:	e1c10000 	bic	r0, r1, r0
4001d244:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d248:	e3c00018 	bic	r0, r0, #24
4001d24c:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d250:	ea000009 	b	4001d27c <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d254:	ebfffbb2 	bl	4001c124 <CyU3POtgIsHostMode>
4001d258:	e3500000 	cmp	r0, #0
4001d25c:	0a000006 	beq	4001d27c <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d260:	e3a00018 	mov	r0, #24
4001d264:	e59f1040 	ldr	r1, [pc, #64]	; 4001d2ac <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d268:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d26c:	e1c10000 	bic	r0, r1, r0
4001d270:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d274:	e3800018 	orr	r0, r0, #24
4001d278:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d27c:	e59f002c 	ldr	r0, [pc, #44]	; 4001d2b0 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d280:	e5900004 	ldr	r0, [r0, #4]
4001d284:	e3500000 	cmp	r0, #0
4001d288:	0a000004 	beq	4001d2a0 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001d28c:	e59f001c 	ldr	r0, [pc, #28]	; 4001d2b0 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d290:	e1a01004 	mov	r1, r4
4001d294:	e5902004 	ldr	r2, [r0, #4]
4001d298:	e3a00002 	mov	r0, #2
4001d29c:	e12fff32 	blx	r2
4001d2a0:	e8bd8010 	pop	{r4, pc}
4001d2a4:	40031d60 	.word	0x40031d60
4001d2a8:	e0051000 	.word	0xe0051000
4001d2ac:	e0031000 	.word	0xe0031000
4001d2b0:	40030d74 	.word	0x40030d74

Disassembly of section i.CyU3PUsbPhyDisable:

4001d2b4 <CyU3PUsbPhyDisable>:
4001d2b4:	e92d4010 	push	{r4, lr}
4001d2b8:	e1a04000 	mov	r4, r0
4001d2bc:	e2841003 	add	r1, r4, #3
4001d2c0:	e20100ff 	and	r0, r1, #255	; 0xff
4001d2c4:	eb000af4 	bl	4001fe9c <CyU3PUsbAddToEventLog>
4001d2c8:	e3a00000 	mov	r0, #0
4001d2cc:	e59f1184 	ldr	r1, [pc, #388]	; 4001d458 <CyU3PUsbPhyDisable+0x1a4>
4001d2d0:	e5810000 	str	r0, [r1]
4001d2d4:	e59f0180 	ldr	r0, [pc, #384]	; 4001d45c <CyU3PUsbPhyDisable+0x1a8>
4001d2d8:	ebffb72e 	bl	4000af98 <_txe_timer_deactivate>
4001d2dc:	e3a00008 	mov	r0, #8
4001d2e0:	eb00141f 	bl	40022364 <CyU3PVicDisableInt>
4001d2e4:	e59f0174 	ldr	r0, [pc, #372]	; 4001d460 <CyU3PUsbPhyDisable+0x1ac>
4001d2e8:	e5900004 	ldr	r0, [r0, #4]
4001d2ec:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001d2f0:	e59f1168 	ldr	r1, [pc, #360]	; 4001d460 <CyU3PUsbPhyDisable+0x1ac>
4001d2f4:	e5810004 	str	r0, [r1, #4]
4001d2f8:	e3e00000 	mvn	r0, #0
4001d2fc:	e0411600 	sub	r1, r1, r0, lsl #12
4001d300:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d304:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d308:	e59f0154 	ldr	r0, [pc, #340]	; 4001d464 <CyU3PUsbPhyDisable+0x1b0>
4001d30c:	ebffe4d0 	bl	40016654 <CyU3PDmaChannelReset>
4001d310:	e59f0150 	ldr	r0, [pc, #336]	; 4001d468 <CyU3PUsbPhyDisable+0x1b4>
4001d314:	ebffe4ce 	bl	40016654 <CyU3PDmaChannelReset>
4001d318:	e3540000 	cmp	r4, #0
4001d31c:	0a00002b 	beq	4001d3d0 <CyU3PUsbPhyDisable+0x11c>
4001d320:	e3a00001 	mov	r0, #1
4001d324:	e59f1140 	ldr	r1, [pc, #320]	; 4001d46c <CyU3PUsbPhyDisable+0x1b8>
4001d328:	e5810060 	str	r0, [r1, #96]	; 0x60
4001d32c:	ebffb658 	bl	4000ac94 <_txe_thread_relinquish>
4001d330:	e3e00000 	mvn	r0, #0
4001d334:	e59f1134 	ldr	r1, [pc, #308]	; 4001d470 <CyU3PUsbPhyDisable+0x1bc>
4001d338:	e5810004 	str	r0, [r1, #4]
4001d33c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d340:	e0010000 	and	r0, r1, r0
4001d344:	e5900014 	ldr	r0, [r0, #20]
4001d348:	e59f1124 	ldr	r1, [pc, #292]	; 4001d474 <CyU3PUsbPhyDisable+0x1c0>
4001d34c:	e5810000 	str	r0, [r1]
4001d350:	e3a00000 	mov	r0, #0
4001d354:	e59f111c 	ldr	r1, [pc, #284]	; 4001d478 <CyU3PUsbPhyDisable+0x1c4>
4001d358:	e5810000 	str	r0, [r1]
4001d35c:	e3a01000 	mov	r1, #0
4001d360:	e59f0114 	ldr	r0, [pc, #276]	; 4001d47c <CyU3PUsbPhyDisable+0x1c8>
4001d364:	eb00146d 	bl	40022520 <CyFx3UsbWritePhyReg>
4001d368:	e3a01002 	mov	r1, #2
4001d36c:	e1a00001 	mov	r0, r1
4001d370:	ebfffd1d 	bl	4001c7ec <CyU3PSetUsbCoreClock>
4001d374:	e3a00002 	mov	r0, #2
4001d378:	ebffd97b 	bl	4001396c <CyU3PBusyWait>
4001d37c:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d380:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d384:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d388:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d38c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d390:	e3a00002 	mov	r0, #2
4001d394:	ebffd974 	bl	4001396c <CyU3PBusyWait>
4001d398:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d39c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d3a0:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001d3a4:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d3a8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d3ac:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001d3b0:	e590001c 	ldr	r0, [r0, #28]
4001d3b4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001d3b8:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001d3bc:	e581001c 	str	r0, [r1, #28]
4001d3c0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d484 <CyU3PUsbPhyDisable+0x1d0>
4001d3c4:	e5900000 	ldr	r0, [r0]
4001d3c8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d3cc:	ea00000e 	b	4001d40c <CyU3PUsbPhyDisable+0x158>
4001d3d0:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d3d4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d3d8:	e3800008 	orr	r0, r0, #8
4001d3dc:	e59f109c 	ldr	r1, [pc, #156]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d3e0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d3e4:	e3a01002 	mov	r1, #2
4001d3e8:	e1a00001 	mov	r0, r1
4001d3ec:	ebfffcfe 	bl	4001c7ec <CyU3PSetUsbCoreClock>
4001d3f0:	e3a00002 	mov	r0, #2
4001d3f4:	ebffd95c 	bl	4001396c <CyU3PBusyWait>
4001d3f8:	e59f0080 	ldr	r0, [pc, #128]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d3fc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d400:	e2000001 	and	r0, r0, #1
4001d404:	e59f1074 	ldr	r1, [pc, #116]	; 4001d480 <CyU3PUsbPhyDisable+0x1cc>
4001d408:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d40c:	e59f0074 	ldr	r0, [pc, #116]	; 4001d488 <CyU3PUsbPhyDisable+0x1d4>
4001d410:	e5900000 	ldr	r0, [r0]
4001d414:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001d418:	e59f1068 	ldr	r1, [pc, #104]	; 4001d488 <CyU3PUsbPhyDisable+0x1d4>
4001d41c:	e5810000 	str	r0, [r1]
4001d420:	e3a00000 	mov	r0, #0
4001d424:	e59f1040 	ldr	r1, [pc, #64]	; 4001d46c <CyU3PUsbPhyDisable+0x1b8>
4001d428:	e5c10009 	strb	r0, [r1, #9]
4001d42c:	ebfffb6c 	bl	4001c1e4 <CyU3POtgIsStarted>
4001d430:	e3500000 	cmp	r0, #0
4001d434:	0a000006 	beq	4001d454 <CyU3PUsbPhyDisable+0x1a0>
4001d438:	e3a00064 	mov	r0, #100	; 0x64
4001d43c:	ebffd94a 	bl	4001396c <CyU3PBusyWait>
4001d440:	e59f0040 	ldr	r0, [pc, #64]	; 4001d488 <CyU3PUsbPhyDisable+0x1d4>
4001d444:	e5900000 	ldr	r0, [r0]
4001d448:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d44c:	e59f1034 	ldr	r1, [pc, #52]	; 4001d488 <CyU3PUsbPhyDisable+0x1d4>
4001d450:	e5810000 	str	r0, [r1]
4001d454:	e8bd8010 	pop	{r4, pc}
4001d458:	40030dd0 	.word	0x40030dd0
4001d45c:	400326c0 	.word	0x400326c0
4001d460:	e0030000 	.word	0xe0030000
4001d464:	40031a9c 	.word	0x40031a9c
4001d468:	40031b3c 	.word	0x40031b3c
4001d46c:	40031d60 	.word	0x40031d60
4001d470:	e0033000 	.word	0xe0033000
4001d474:	40030da4 	.word	0x40030da4
4001d478:	40030dd4 	.word	0x40030dd4
4001d47c:	00001005 	.word	0x00001005
4001d480:	e0031000 	.word	0xe0031000
4001d484:	40030c78 	.word	0x40030c78
4001d488:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d48c <CyU3PUsbPhyEnable>:
4001d48c:	e92d4070 	push	{r4, r5, r6, lr}
4001d490:	e1a04000 	mov	r4, r0
4001d494:	e2841005 	add	r1, r4, #5
4001d498:	e20100ff 	and	r0, r1, #255	; 0xff
4001d49c:	eb000a7e 	bl	4001fe9c <CyU3PUsbAddToEventLog>
4001d4a0:	e3e00000 	mvn	r0, #0
4001d4a4:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d4a8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d4ac:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d4b0:	e3a00008 	mov	r0, #8
4001d4b4:	eb0013af 	bl	40022378 <CyU3PVicEnableInt>
4001d4b8:	e3a00009 	mov	r0, #9
4001d4bc:	eb0013ad 	bl	40022378 <CyU3PVicEnableInt>
4001d4c0:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d768 <CyU3PUsbPhyEnable+0x2dc>
4001d4c4:	e5900004 	ldr	r0, [r0, #4]
4001d4c8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d4cc:	e59f1294 	ldr	r1, [pc, #660]	; 4001d768 <CyU3PUsbPhyEnable+0x2dc>
4001d4d0:	e5810004 	str	r0, [r1, #4]
4001d4d4:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d4d8:	e5900000 	ldr	r0, [r0]
4001d4dc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d4e0:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d4e4:	e5810000 	str	r0, [r1]
4001d4e8:	e3540000 	cmp	r4, #0
4001d4ec:	0a000069 	beq	4001d698 <CyU3PUsbPhyEnable+0x20c>
4001d4f0:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d4f4:	e5900014 	ldr	r0, [r0, #20]
4001d4f8:	e59f126c 	ldr	r1, [pc, #620]	; 4001d76c <CyU3PUsbPhyEnable+0x2e0>
4001d4fc:	e5810000 	str	r0, [r1]
4001d500:	e3a00000 	mov	r0, #0
4001d504:	e59f1264 	ldr	r1, [pc, #612]	; 4001d770 <CyU3PUsbPhyEnable+0x2e4>
4001d508:	e5810000 	str	r0, [r1]
4001d50c:	e3e00000 	mvn	r0, #0
4001d510:	e59f125c 	ldr	r1, [pc, #604]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d514:	e5810004 	str	r0, [r1, #4]
4001d518:	e59f0258 	ldr	r0, [pc, #600]	; 4001d778 <CyU3PUsbPhyEnable+0x2ec>
4001d51c:	e5810008 	str	r0, [r1, #8]
4001d520:	e3e00000 	mvn	r0, #0
4001d524:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d528:	e59f024c 	ldr	r0, [pc, #588]	; 4001d77c <CyU3PUsbPhyEnable+0x2f0>
4001d52c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d530:	e59f0248 	ldr	r0, [pc, #584]	; 4001d780 <CyU3PUsbPhyEnable+0x2f4>
4001d534:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d538:	e3500000 	cmp	r0, #0
4001d53c:	0a000003 	beq	4001d550 <CyU3PUsbPhyEnable+0xc4>
4001d540:	e1a00001 	mov	r0, r1
4001d544:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d548:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d54c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d550:	e3a00000 	mov	r0, #0
4001d554:	e59f1224 	ldr	r1, [pc, #548]	; 4001d780 <CyU3PUsbPhyEnable+0x2f4>
4001d558:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d55c:	e59f0220 	ldr	r0, [pc, #544]	; 4001d784 <CyU3PUsbPhyEnable+0x2f8>
4001d560:	e5900000 	ldr	r0, [r0]
4001d564:	e3500000 	cmp	r0, #0
4001d568:	0a000003 	beq	4001d57c <CyU3PUsbPhyEnable+0xf0>
4001d56c:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d570:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d574:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d578:	ea000002 	b	4001d588 <CyU3PUsbPhyEnable+0xfc>
4001d57c:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d580:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d584:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d588:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d788 <CyU3PUsbPhyEnable+0x2fc>
4001d58c:	e5900000 	ldr	r0, [r0]
4001d590:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d594:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d598:	eb00139a 	bl	40022408 <CyFx3Usb3LnkSetup>
4001d59c:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d78c <CyU3PUsbPhyEnable+0x300>
4001d5a0:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d5a4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d5a8:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d5ac:	e1c10000 	bic	r0, r1, r0
4001d5b0:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d5b4:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d5b8:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d5bc:	e3a00000 	mov	r0, #0
4001d5c0:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d780 <CyU3PUsbPhyEnable+0x2f4>
4001d5c4:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d5c8:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d5cc:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d5d0:	e581001c 	str	r0, [r1, #28]
4001d5d4:	e3a01002 	mov	r1, #2
4001d5d8:	e1a00001 	mov	r0, r1
4001d5dc:	ebfffc82 	bl	4001c7ec <CyU3PSetUsbCoreClock>
4001d5e0:	eb00135b 	bl	40022354 <CyU3PVicDisableAllInterrupts>
4001d5e4:	e1a05000 	mov	r5, r0
4001d5e8:	e3a00000 	mov	r0, #0
4001d5ec:	e59f119c 	ldr	r1, [pc, #412]	; 4001d790 <CyU3PUsbPhyEnable+0x304>
4001d5f0:	e5810000 	str	r0, [r1]
4001d5f4:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d5f8:	e59f1174 	ldr	r1, [pc, #372]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d5fc:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d600:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d604:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d608:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d60c:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d610:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d614:	e3a00064 	mov	r0, #100	; 0x64
4001d618:	ebffd8d3 	bl	4001396c <CyU3PBusyWait>
4001d61c:	e59f0150 	ldr	r0, [pc, #336]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d620:	e5900000 	ldr	r0, [r0]
4001d624:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d628:	e59f1144 	ldr	r1, [pc, #324]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d62c:	e5810000 	str	r0, [r1]
4001d630:	e59f015c 	ldr	r0, [pc, #348]	; 4001d794 <CyU3PUsbPhyEnable+0x308>
4001d634:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d638:	e3a01080 	mov	r1, #128	; 0x80
4001d63c:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d640:	eb0013b6 	bl	40022520 <CyFx3UsbWritePhyReg>
4001d644:	e3a01d06 	mov	r1, #384	; 0x180
4001d648:	e59f0148 	ldr	r0, [pc, #328]	; 4001d798 <CyU3PUsbPhyEnable+0x30c>
4001d64c:	eb0013b3 	bl	40022520 <CyFx3UsbWritePhyReg>
4001d650:	e3a01080 	mov	r1, #128	; 0x80
4001d654:	e59f0140 	ldr	r0, [pc, #320]	; 4001d79c <CyU3PUsbPhyEnable+0x310>
4001d658:	eb0013b0 	bl	40022520 <CyFx3UsbWritePhyReg>
4001d65c:	e1a00005 	mov	r0, r5
4001d660:	eb001349 	bl	4002238c <CyU3PVicEnableInterrupts>
4001d664:	e59f0108 	ldr	r0, [pc, #264]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d668:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d66c:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d670:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d774 <CyU3PUsbPhyEnable+0x2e8>
4001d674:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d678:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d67c:	e581001c 	str	r0, [r1, #28]
4001d680:	e3a00064 	mov	r0, #100	; 0x64
4001d684:	ebffd8b8 	bl	4001396c <CyU3PBusyWait>
4001d688:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d68c:	e59f110c 	ldr	r1, [pc, #268]	; 4001d7a0 <CyU3PUsbPhyEnable+0x314>
4001d690:	e5810008 	str	r0, [r1, #8]
4001d694:	ea000031 	b	4001d760 <CyU3PUsbPhyEnable+0x2d4>
4001d698:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d780 <CyU3PUsbPhyEnable+0x2f4>
4001d69c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d6a0:	e3500000 	cmp	r0, #0
4001d6a4:	0a000000 	beq	4001d6ac <CyU3PUsbPhyEnable+0x220>
4001d6a8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d6ac:	e3a00001 	mov	r0, #1
4001d6b0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d780 <CyU3PUsbPhyEnable+0x2f4>
4001d6b4:	e5c10009 	strb	r0, [r1, #9]
4001d6b8:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d6bc:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d7a4 <CyU3PUsbPhyEnable+0x318>
4001d6c0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d6c4:	e3a00000 	mov	r0, #0
4001d6c8:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d780 <CyU3PUsbPhyEnable+0x2f4>
4001d6cc:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d6d0:	e59f008c 	ldr	r0, [pc, #140]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d6d4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d6d8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d6dc:	e59f1080 	ldr	r1, [pc, #128]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d6e0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d6e4:	e1a00001 	mov	r0, r1
4001d6e8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d6ec:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d6f0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d6f4:	e3a00002 	mov	r0, #2
4001d6f8:	ebffd89b 	bl	4001396c <CyU3PBusyWait>
4001d6fc:	e59f0060 	ldr	r0, [pc, #96]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d700:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d704:	e2000001 	and	r0, r0, #1
4001d708:	e59f1054 	ldr	r1, [pc, #84]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d70c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d710:	e1a00001 	mov	r0, r1
4001d714:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d718:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d71c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d720:	e3a00064 	mov	r0, #100	; 0x64
4001d724:	ebffd890 	bl	4001396c <CyU3PBusyWait>
4001d728:	eb00132a 	bl	400223d8 <CyFx3Usb2PhySetup>
4001d72c:	e59f0074 	ldr	r0, [pc, #116]	; 4001d7a8 <CyU3PUsbPhyEnable+0x31c>
4001d730:	e59f102c 	ldr	r1, [pc, #44]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d734:	e5810008 	str	r0, [r1, #8]
4001d738:	e3a00050 	mov	r0, #80	; 0x50
4001d73c:	ebffd88a 	bl	4001396c <CyU3PBusyWait>
4001d740:	e3a01000 	mov	r1, #0
4001d744:	e3a00002 	mov	r0, #2
4001d748:	ebfffc27 	bl	4001c7ec <CyU3PSetUsbCoreClock>
4001d74c:	e59f0010 	ldr	r0, [pc, #16]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d750:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d754:	e3c00008 	bic	r0, r0, #8
4001d758:	e59f1004 	ldr	r1, [pc, #4]	; 4001d764 <CyU3PUsbPhyEnable+0x2d8>
4001d75c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d760:	eaffffd0 	b	4001d6a8 <CyU3PUsbPhyEnable+0x21c>
4001d764:	e0031000 	.word	0xe0031000
4001d768:	e0030000 	.word	0xe0030000
4001d76c:	40030da4 	.word	0x40030da4
4001d770:	40030dd4 	.word	0x40030dd4
4001d774:	e0033000 	.word	0xe0033000
4001d778:	00038081 	.word	0x00038081
4001d77c:	00004a3d 	.word	0x00004a3d
4001d780:	40031d60 	.word	0x40031d60
4001d784:	40030d60 	.word	0x40030d60
4001d788:	40030dac 	.word	0x40030dac
4001d78c:	00000908 	.word	0x00000908
4001d790:	40030d94 	.word	0x40030d94
4001d794:	00310418 	.word	0x00310418
4001d798:	00001006 	.word	0x00001006
4001d79c:	00001024 	.word	0x00001024
4001d7a0:	e0052000 	.word	0xe0052000
4001d7a4:	e0032000 	.word	0xe0032000
4001d7a8:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d7ac <CyU3PUsbPowerOn>:
4001d7ac:	e92d4010 	push	{r4, lr}
4001d7b0:	eb00133a 	bl	400224a0 <CyFx3UsbPowerOn>
4001d7b4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d7b8 <CyU3PUsbResetEp>:
4001d7b8:	e92d4070 	push	{r4, r5, r6, lr}
4001d7bc:	e1a04000 	mov	r4, r0
4001d7c0:	e204507f 	and	r5, r4, #127	; 0x7f
4001d7c4:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d888 <CyU3PUsbResetEp+0xd0>
4001d7c8:	e5d00008 	ldrb	r0, [r0, #8]
4001d7cc:	e3500000 	cmp	r0, #0
4001d7d0:	1a000001 	bne	4001d7dc <CyU3PUsbResetEp+0x24>
4001d7d4:	e3a00042 	mov	r0, #66	; 0x42
4001d7d8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d7dc:	e355000f 	cmp	r5, #15
4001d7e0:	da000001 	ble	4001d7ec <CyU3PUsbResetEp+0x34>
4001d7e4:	e3a00040 	mov	r0, #64	; 0x40
4001d7e8:	eafffffa 	b	4001d7d8 <CyU3PUsbResetEp+0x20>
4001d7ec:	e3e01000 	mvn	r1, #0
4001d7f0:	e59f0094 	ldr	r0, [pc, #148]	; 4001d88c <CyU3PUsbResetEp+0xd4>
4001d7f4:	ebffb305 	bl	4000a410 <_txe_mutex_get>
4001d7f8:	ebfffe2b 	bl	4001d0ac <CyU3PUsbGetSpeed>
4001d7fc:	e3500003 	cmp	r0, #3
4001d800:	1a00001c 	bne	4001d878 <CyU3PUsbResetEp+0xc0>
4001d804:	e59f0084 	ldr	r0, [pc, #132]	; 4001d890 <CyU3PUsbResetEp+0xd8>
4001d808:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d80c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d810:	e59f1078 	ldr	r1, [pc, #120]	; 4001d890 <CyU3PUsbResetEp+0xd8>
4001d814:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d818:	e3140080 	tst	r4, #128	; 0x80
4001d81c:	0a00000a 	beq	4001d84c <CyU3PUsbResetEp+0x94>
4001d820:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d824:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d828:	e3866011 	orr	r6, r6, #17
4001d82c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d830:	e3a00002 	mov	r0, #2
4001d834:	ebffd84c 	bl	4001396c <CyU3PBusyWait>
4001d838:	e3c60010 	bic	r0, r6, #16
4001d83c:	e3806001 	orr	r6, r0, #1
4001d840:	e59f004c 	ldr	r0, [pc, #76]	; 4001d894 <CyU3PUsbResetEp+0xdc>
4001d844:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d848:	ea00000a 	b	4001d878 <CyU3PUsbResetEp+0xc0>
4001d84c:	e59f0044 	ldr	r0, [pc, #68]	; 4001d898 <CyU3PUsbResetEp+0xe0>
4001d850:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d854:	e3806011 	orr	r6, r0, #17
4001d858:	e59f0038 	ldr	r0, [pc, #56]	; 4001d898 <CyU3PUsbResetEp+0xe0>
4001d85c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d860:	e3a00002 	mov	r0, #2
4001d864:	ebffd840 	bl	4001396c <CyU3PBusyWait>
4001d868:	e3c60010 	bic	r0, r6, #16
4001d86c:	e3806001 	orr	r6, r0, #1
4001d870:	e59f0020 	ldr	r0, [pc, #32]	; 4001d898 <CyU3PUsbResetEp+0xe0>
4001d874:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d878:	e59f000c 	ldr	r0, [pc, #12]	; 4001d88c <CyU3PUsbResetEp+0xd4>
4001d87c:	ebffb318 	bl	4000a4e4 <_txe_mutex_put>
4001d880:	e3a00000 	mov	r0, #0
4001d884:	eaffffd3 	b	4001d7d8 <CyU3PUsbResetEp+0x20>
4001d888:	40031d60 	.word	0x40031d60
4001d88c:	40031f00 	.word	0x40031f00
4001d890:	e0033000 	.word	0xe0033000
4001d894:	e0033500 	.word	0xe0033500
4001d898:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d89c <CyU3PUsbSendEP0Data>:
4001d89c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d8a0:	e1a04000 	mov	r4, r0
4001d8a4:	e1a05001 	mov	r5, r1
4001d8a8:	e59f71ac 	ldr	r7, [pc, #428]	; 4001da5c <CyU3PUsbSendEP0Data+0x1c0>
4001d8ac:	e59f01ac 	ldr	r0, [pc, #428]	; 4001da60 <CyU3PUsbSendEP0Data+0x1c4>
4001d8b0:	e5d00008 	ldrb	r0, [r0, #8]
4001d8b4:	e3500000 	cmp	r0, #0
4001d8b8:	1a000001 	bne	4001d8c4 <CyU3PUsbSendEP0Data+0x28>
4001d8bc:	e3a00042 	mov	r0, #66	; 0x42
4001d8c0:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d8c4:	e3550000 	cmp	r5, #0
4001d8c8:	1a000001 	bne	4001d8d4 <CyU3PUsbSendEP0Data+0x38>
4001d8cc:	e3a00040 	mov	r0, #64	; 0x40
4001d8d0:	eafffffa 	b	4001d8c0 <CyU3PUsbSendEP0Data+0x24>
4001d8d4:	e3e01000 	mvn	r1, #0
4001d8d8:	e59f0184 	ldr	r0, [pc, #388]	; 4001da64 <CyU3PUsbSendEP0Data+0x1c8>
4001d8dc:	ebffb2cb 	bl	4000a410 <_txe_mutex_get>
4001d8e0:	e59f0180 	ldr	r0, [pc, #384]	; 4001da68 <CyU3PUsbSendEP0Data+0x1cc>
4001d8e4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d8e8:	e3c00008 	bic	r0, r0, #8
4001d8ec:	e59f1174 	ldr	r1, [pc, #372]	; 4001da68 <CyU3PUsbSendEP0Data+0x1cc>
4001d8f0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d8f4:	e59f0164 	ldr	r0, [pc, #356]	; 4001da60 <CyU3PUsbSendEP0Data+0x1c4>
4001d8f8:	e5900018 	ldr	r0, [r0, #24]
4001d8fc:	e3500000 	cmp	r0, #0
4001d900:	1a000002 	bne	4001d910 <CyU3PUsbSendEP0Data+0x74>
4001d904:	ebfffdf0 	bl	4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>
4001d908:	e3500000 	cmp	r0, #0
4001d90c:	0a000008 	beq	4001d934 <CyU3PUsbSendEP0Data+0x98>
4001d910:	e59f0150 	ldr	r0, [pc, #336]	; 4001da68 <CyU3PUsbSendEP0Data+0x1cc>
4001d914:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d918:	e3800008 	orr	r0, r0, #8
4001d91c:	e59f1144 	ldr	r1, [pc, #324]	; 4001da68 <CyU3PUsbSendEP0Data+0x1cc>
4001d920:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d924:	e59f0138 	ldr	r0, [pc, #312]	; 4001da64 <CyU3PUsbSendEP0Data+0x1c8>
4001d928:	ebffb2ed 	bl	4000a4e4 <_txe_mutex_put>
4001d92c:	e3a00000 	mov	r0, #0
4001d930:	eaffffe2 	b	4001d8c0 <CyU3PUsbSendEP0Data+0x24>
4001d934:	e59f012c 	ldr	r0, [pc, #300]	; 4001da68 <CyU3PUsbSendEP0Data+0x1cc>
4001d938:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d93c:	e3800008 	orr	r0, r0, #8
4001d940:	e59f1120 	ldr	r1, [pc, #288]	; 4001da68 <CyU3PUsbSendEP0Data+0x1cc>
4001d944:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d948:	e1a00001 	mov	r0, r1
4001d94c:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d950:	e1500004 	cmp	r0, r4
4001d954:	2a000003 	bcs	4001d968 <CyU3PUsbSendEP0Data+0xcc>
4001d958:	e1a00001 	mov	r0, r1
4001d95c:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d960:	e1a04800 	lsl	r4, r0, #16
4001d964:	e1a04824 	lsr	r4, r4, #16
4001d968:	eb0003b8 	bl	4001e850 <GetUsbLinkActive>
4001d96c:	e1cd40b4 	strh	r4, [sp, #4]
4001d970:	e284000f 	add	r0, r4, #15
4001d974:	e59f10f0 	ldr	r1, [pc, #240]	; 4001da6c <CyU3PUsbSendEP0Data+0x1d0>
4001d978:	e0000001 	and	r0, r0, r1
4001d97c:	e1cd00b6 	strh	r0, [sp, #6]
4001d980:	e58d5000 	str	r5, [sp]
4001d984:	e3a00000 	mov	r0, #0
4001d988:	e1cd00b8 	strh	r0, [sp, #8]
4001d98c:	e1a0100d 	mov	r1, sp
4001d990:	e59f00d8 	ldr	r0, [pc, #216]	; 4001da70 <CyU3PUsbSendEP0Data+0x1d4>
4001d994:	ebffe571 	bl	40016f60 <CyU3PDmaChannelSetupSendBuffer>
4001d998:	e20060ff 	and	r6, r0, #255	; 0xff
4001d99c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001da64 <CyU3PUsbSendEP0Data+0x1c8>
4001d9a0:	ebffb2cf 	bl	4000a4e4 <_txe_mutex_put>
4001d9a4:	e3560000 	cmp	r6, #0
4001d9a8:	1a000029 	bne	4001da54 <CyU3PUsbSendEP0Data+0x1b8>
4001d9ac:	e59f00ac 	ldr	r0, [pc, #172]	; 4001da60 <CyU3PUsbSendEP0Data+0x1c4>
4001d9b0:	e5900014 	ldr	r0, [r0, #20]
4001d9b4:	e3500000 	cmp	r0, #0
4001d9b8:	0a000000 	beq	4001d9c0 <CyU3PUsbSendEP0Data+0x124>
4001d9bc:	ebfffc1d 	bl	4001ca38 <CyU3PUsbAckSetup>
4001d9c0:	ea00000d 	b	4001d9fc <CyU3PUsbSendEP0Data+0x160>
4001d9c4:	e3a01064 	mov	r1, #100	; 0x64
4001d9c8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001da70 <CyU3PUsbSendEP0Data+0x1d4>
4001d9cc:	ebffe5f1 	bl	40017198 <CyU3PDmaChannelWaitForCompletion>
4001d9d0:	e20060ff 	and	r6, r0, #255	; 0xff
4001d9d4:	e3560045 	cmp	r6, #69	; 0x45
4001d9d8:	1a000006 	bne	4001d9f8 <CyU3PUsbSendEP0Data+0x15c>
4001d9dc:	ebfffdba 	bl	4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>
4001d9e0:	e3500000 	cmp	r0, #0
4001d9e4:	0a000001 	beq	4001d9f0 <CyU3PUsbSendEP0Data+0x154>
4001d9e8:	e3a00000 	mov	r0, #0
4001d9ec:	eaffffb3 	b	4001d8c0 <CyU3PUsbSendEP0Data+0x24>
4001d9f0:	e2477064 	sub	r7, r7, #100	; 0x64
4001d9f4:	ea000000 	b	4001d9fc <CyU3PUsbSendEP0Data+0x160>
4001d9f8:	ea000001 	b	4001da04 <CyU3PUsbSendEP0Data+0x168>
4001d9fc:	e3570000 	cmp	r7, #0
4001da00:	1affffef 	bne	4001d9c4 <CyU3PUsbSendEP0Data+0x128>
4001da04:	e1a00000 	nop			; (mov r0, r0)
4001da08:	e3560000 	cmp	r6, #0
4001da0c:	0a000010 	beq	4001da54 <CyU3PUsbSendEP0Data+0x1b8>
4001da10:	e3e01000 	mvn	r1, #0
4001da14:	e59f0048 	ldr	r0, [pc, #72]	; 4001da64 <CyU3PUsbSendEP0Data+0x1c8>
4001da18:	ebffb27c 	bl	4000a410 <_txe_mutex_get>
4001da1c:	e3a01001 	mov	r1, #1
4001da20:	e3a00080 	mov	r0, #128	; 0x80
4001da24:	eb000101 	bl	4001de30 <CyU3PUsbSetEpNak>
4001da28:	e3a00064 	mov	r0, #100	; 0x64
4001da2c:	ebffd7ce 	bl	4001396c <CyU3PBusyWait>
4001da30:	e59f0038 	ldr	r0, [pc, #56]	; 4001da70 <CyU3PUsbSendEP0Data+0x1d4>
4001da34:	ebffe306 	bl	40016654 <CyU3PDmaChannelReset>
4001da38:	e3a00080 	mov	r0, #128	; 0x80
4001da3c:	ebfffcf5 	bl	4001ce18 <CyU3PUsbFlushEp>
4001da40:	e3a01000 	mov	r1, #0
4001da44:	e3a00080 	mov	r0, #128	; 0x80
4001da48:	eb0000f8 	bl	4001de30 <CyU3PUsbSetEpNak>
4001da4c:	e59f0010 	ldr	r0, [pc, #16]	; 4001da64 <CyU3PUsbSendEP0Data+0x1c8>
4001da50:	ebffb2a3 	bl	4000a4e4 <_txe_mutex_put>
4001da54:	e1a00006 	mov	r0, r6
4001da58:	eaffff98 	b	4001d8c0 <CyU3PUsbSendEP0Data+0x24>
4001da5c:	00001388 	.word	0x00001388
4001da60:	40031d60 	.word	0x40031d60
4001da64:	40031f00 	.word	0x40031f00
4001da68:	e0031000 	.word	0xe0031000
4001da6c:	0000fff0 	.word	0x0000fff0
4001da70:	40031a9c 	.word	0x40031a9c

Disassembly of section i.CyU3PUsbSendErdy:

4001da74 <CyU3PUsbSendErdy>:
4001da74:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001da78:	e1a04000 	mov	r4, r0
4001da7c:	e1a05001 	mov	r5, r1
4001da80:	e1a0000d 	mov	r0, sp
4001da84:	e3a02000 	mov	r2, #0
4001da88:	e1a03002 	mov	r3, r2
4001da8c:	e1a06002 	mov	r6, r2
4001da90:	e880004c 	stm	r0, {r2, r3, r6}
4001da94:	e204600f 	and	r6, r4, #15
4001da98:	e2047080 	and	r7, r4, #128	; 0x80
4001da9c:	e59f00b4 	ldr	r0, [pc, #180]	; 4001db58 <CyU3PUsbSendErdy+0xe4>
4001daa0:	e5d00008 	ldrb	r0, [r0, #8]
4001daa4:	e3500000 	cmp	r0, #0
4001daa8:	1a000001 	bne	4001dab4 <CyU3PUsbSendErdy+0x40>
4001daac:	e3a00042 	mov	r0, #66	; 0x42
4001dab0:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001dab4:	ebfffd7c 	bl	4001d0ac <CyU3PUsbGetSpeed>
4001dab8:	e3500003 	cmp	r0, #3
4001dabc:	1a000004 	bne	4001dad4 <CyU3PUsbSendErdy+0x60>
4001dac0:	e59f0094 	ldr	r0, [pc, #148]	; 4001db5c <CyU3PUsbSendErdy+0xe8>
4001dac4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dac8:	e200003f 	and	r0, r0, #63	; 0x3f
4001dacc:	e3500010 	cmp	r0, #16
4001dad0:	0a000001 	beq	4001dadc <CyU3PUsbSendErdy+0x68>
4001dad4:	e3a000ff 	mov	r0, #255	; 0xff
4001dad8:	eafffff4 	b	4001dab0 <CyU3PUsbSendErdy+0x3c>
4001dadc:	e204007f 	and	r0, r4, #127	; 0x7f
4001dae0:	e350000f 	cmp	r0, #15
4001dae4:	da000001 	ble	4001daf0 <CyU3PUsbSendErdy+0x7c>
4001dae8:	e3a00040 	mov	r0, #64	; 0x40
4001daec:	eaffffef 	b	4001dab0 <CyU3PUsbSendErdy+0x3c>
4001daf0:	e59f0064 	ldr	r0, [pc, #100]	; 4001db5c <CyU3PUsbSendErdy+0xe8>
4001daf4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001daf8:	e3a01004 	mov	r1, #4
4001dafc:	e1810c80 	orr	r0, r1, r0, lsl #25
4001db00:	e58d0000 	str	r0, [sp]
4001db04:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001db08:	e3800003 	orr	r0, r0, #3
4001db0c:	e1800406 	orr	r0, r0, r6, lsl #8
4001db10:	e58d0004 	str	r0, [sp, #4]
4001db14:	e3570000 	cmp	r7, #0
4001db18:	0a000005 	beq	4001db34 <CyU3PUsbSendErdy+0xc0>
4001db1c:	e59f003c 	ldr	r0, [pc, #60]	; 4001db60 <CyU3PUsbSendErdy+0xec>
4001db20:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db24:	e3100008 	tst	r0, #8
4001db28:	0a000006 	beq	4001db48 <CyU3PUsbSendErdy+0xd4>
4001db2c:	e58d5008 	str	r5, [sp, #8]
4001db30:	ea000004 	b	4001db48 <CyU3PUsbSendErdy+0xd4>
4001db34:	e59f0028 	ldr	r0, [pc, #40]	; 4001db64 <CyU3PUsbSendErdy+0xf0>
4001db38:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db3c:	e3100008 	tst	r0, #8
4001db40:	0a000000 	beq	4001db48 <CyU3PUsbSendErdy+0xd4>
4001db44:	e58d5008 	str	r5, [sp, #8]
4001db48:	e1a0000d 	mov	r0, sp
4001db4c:	eb00123c 	bl	40022444 <CyFx3Usb3SendTP>
4001db50:	e3a00000 	mov	r0, #0
4001db54:	eaffffd5 	b	4001dab0 <CyU3PUsbSendErdy+0x3c>
4001db58:	40031d60 	.word	0x40031d60
4001db5c:	e0033000 	.word	0xe0033000
4001db60:	e0033500 	.word	0xe0033500
4001db64:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001db68 <CyU3PUsbSendNrdy>:
4001db68:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001db6c:	e1a04000 	mov	r4, r0
4001db70:	e1a05001 	mov	r5, r1
4001db74:	e1a0000d 	mov	r0, sp
4001db78:	e3a02000 	mov	r2, #0
4001db7c:	e1a03002 	mov	r3, r2
4001db80:	e1a06002 	mov	r6, r2
4001db84:	e880004c 	stm	r0, {r2, r3, r6}
4001db88:	e204600f 	and	r6, r4, #15
4001db8c:	e2047080 	and	r7, r4, #128	; 0x80
4001db90:	e59f00b0 	ldr	r0, [pc, #176]	; 4001dc48 <CyU3PUsbSendNrdy+0xe0>
4001db94:	e5d00008 	ldrb	r0, [r0, #8]
4001db98:	e3500000 	cmp	r0, #0
4001db9c:	1a000001 	bne	4001dba8 <CyU3PUsbSendNrdy+0x40>
4001dba0:	e3a00042 	mov	r0, #66	; 0x42
4001dba4:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001dba8:	ebfffd3f 	bl	4001d0ac <CyU3PUsbGetSpeed>
4001dbac:	e3500003 	cmp	r0, #3
4001dbb0:	1a000004 	bne	4001dbc8 <CyU3PUsbSendNrdy+0x60>
4001dbb4:	e59f0090 	ldr	r0, [pc, #144]	; 4001dc4c <CyU3PUsbSendNrdy+0xe4>
4001dbb8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dbbc:	e200003f 	and	r0, r0, #63	; 0x3f
4001dbc0:	e3500010 	cmp	r0, #16
4001dbc4:	0a000001 	beq	4001dbd0 <CyU3PUsbSendNrdy+0x68>
4001dbc8:	e3a000ff 	mov	r0, #255	; 0xff
4001dbcc:	eafffff4 	b	4001dba4 <CyU3PUsbSendNrdy+0x3c>
4001dbd0:	e204007f 	and	r0, r4, #127	; 0x7f
4001dbd4:	e350000f 	cmp	r0, #15
4001dbd8:	da000001 	ble	4001dbe4 <CyU3PUsbSendNrdy+0x7c>
4001dbdc:	e3a00040 	mov	r0, #64	; 0x40
4001dbe0:	eaffffef 	b	4001dba4 <CyU3PUsbSendNrdy+0x3c>
4001dbe4:	e59f0060 	ldr	r0, [pc, #96]	; 4001dc4c <CyU3PUsbSendNrdy+0xe4>
4001dbe8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dbec:	e3a01004 	mov	r1, #4
4001dbf0:	e1810c80 	orr	r0, r1, r0, lsl #25
4001dbf4:	e58d0000 	str	r0, [sp]
4001dbf8:	e3870002 	orr	r0, r7, #2
4001dbfc:	e1800406 	orr	r0, r0, r6, lsl #8
4001dc00:	e58d0004 	str	r0, [sp, #4]
4001dc04:	e3570000 	cmp	r7, #0
4001dc08:	0a000005 	beq	4001dc24 <CyU3PUsbSendNrdy+0xbc>
4001dc0c:	e59f003c 	ldr	r0, [pc, #60]	; 4001dc50 <CyU3PUsbSendNrdy+0xe8>
4001dc10:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001dc14:	e3100008 	tst	r0, #8
4001dc18:	0a000006 	beq	4001dc38 <CyU3PUsbSendNrdy+0xd0>
4001dc1c:	e58d5008 	str	r5, [sp, #8]
4001dc20:	ea000004 	b	4001dc38 <CyU3PUsbSendNrdy+0xd0>
4001dc24:	e59f0028 	ldr	r0, [pc, #40]	; 4001dc54 <CyU3PUsbSendNrdy+0xec>
4001dc28:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001dc2c:	e3100008 	tst	r0, #8
4001dc30:	0a000000 	beq	4001dc38 <CyU3PUsbSendNrdy+0xd0>
4001dc34:	e58d5008 	str	r5, [sp, #8]
4001dc38:	e1a0000d 	mov	r0, sp
4001dc3c:	eb001200 	bl	40022444 <CyFx3Usb3SendTP>
4001dc40:	e3a00000 	mov	r0, #0
4001dc44:	eaffffd6 	b	4001dba4 <CyU3PUsbSendNrdy+0x3c>
4001dc48:	40031d60 	.word	0x40031d60
4001dc4c:	e0033000 	.word	0xe0033000
4001dc50:	e0033500 	.word	0xe0033500
4001dc54:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001dc58 <CyU3PUsbSetDesc>:
4001dc58:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dc5c:	e1a03000 	mov	r3, r0
4001dc60:	e3a0c000 	mov	ip, #0
4001dc64:	e59f01b8 	ldr	r0, [pc, #440]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dc68:	e5d00008 	ldrb	r0, [r0, #8]
4001dc6c:	e3500000 	cmp	r0, #0
4001dc70:	1a000001 	bne	4001dc7c <CyU3PUsbSetDesc+0x24>
4001dc74:	e3a00042 	mov	r0, #66	; 0x42
4001dc78:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dc7c:	e3520000 	cmp	r2, #0
4001dc80:	1a000001 	bne	4001dc8c <CyU3PUsbSetDesc+0x34>
4001dc84:	e3a00040 	mov	r0, #64	; 0x40
4001dc88:	eafffffa 	b	4001dc78 <CyU3PUsbSetDesc+0x20>
4001dc8c:	e3530009 	cmp	r3, #9
4001dc90:	308ff103 	addcc	pc, pc, r3, lsl #2
4001dc94:	ea00004d 	b	4001ddd0 <CyU3PUsbSetDesc+0x178>
4001dc98:	ea000007 	b	4001dcbc <CyU3PUsbSetDesc+0x64>
4001dc9c:	ea00000a 	b	4001dccc <CyU3PUsbSetDesc+0x74>
4001dca0:	ea000011 	b	4001dcec <CyU3PUsbSetDesc+0x94>
4001dca4:	ea000022 	b	4001dd34 <CyU3PUsbSetDesc+0xdc>
4001dca8:	ea00002f 	b	4001dd6c <CyU3PUsbSetDesc+0x114>
4001dcac:	ea00003c 	b	4001dda4 <CyU3PUsbSetDesc+0x14c>
4001dcb0:	ea000011 	b	4001dcfc <CyU3PUsbSetDesc+0xa4>
4001dcb4:	ea000008 	b	4001dcdc <CyU3PUsbSetDesc+0x84>
4001dcb8:	ea000040 	b	4001ddc0 <CyU3PUsbSetDesc+0x168>
4001dcbc:	e1a00000 	nop			; (mov r0, r0)
4001dcc0:	e59f0160 	ldr	r0, [pc, #352]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dcc4:	e5802004 	str	r2, [r0, #4]
4001dcc8:	ea000043 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dccc:	e1a00000 	nop			; (mov r0, r0)
4001dcd0:	e59f0150 	ldr	r0, [pc, #336]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dcd4:	e5802000 	str	r2, [r0]
4001dcd8:	ea00003f 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dcdc:	e1a00000 	nop			; (mov r0, r0)
4001dce0:	e59f0140 	ldr	r0, [pc, #320]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dce4:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001dce8:	ea00003b 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dcec:	e1a00000 	nop			; (mov r0, r0)
4001dcf0:	e59f0130 	ldr	r0, [pc, #304]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dcf4:	e5802008 	str	r2, [r0, #8]
4001dcf8:	ea000037 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dcfc:	e1a00000 	nop			; (mov r0, r0)
4001dd00:	e59f0120 	ldr	r0, [pc, #288]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dd04:	e580201c 	str	r2, [r0, #28]
4001dd08:	e5d20007 	ldrb	r0, [r2, #7]
4001dd0c:	e3100040 	tst	r0, #64	; 0x40
4001dd10:	0a000003 	beq	4001dd24 <CyU3PUsbSetDesc+0xcc>
4001dd14:	e3a00001 	mov	r0, #1
4001dd18:	e59fe104 	ldr	lr, [pc, #260]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dd1c:	e5ce0006 	strb	r0, [lr, #6]
4001dd20:	ea000002 	b	4001dd30 <CyU3PUsbSetDesc+0xd8>
4001dd24:	e3a00000 	mov	r0, #0
4001dd28:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dd2c:	e5ce0006 	strb	r0, [lr, #6]
4001dd30:	ea000029 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dd34:	e1a00000 	nop			; (mov r0, r0)
4001dd38:	e59f00e8 	ldr	r0, [pc, #232]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dd3c:	e5802018 	str	r2, [r0, #24]
4001dd40:	e5d20007 	ldrb	r0, [r2, #7]
4001dd44:	e3100040 	tst	r0, #64	; 0x40
4001dd48:	0a000003 	beq	4001dd5c <CyU3PUsbSetDesc+0x104>
4001dd4c:	e3a00001 	mov	r0, #1
4001dd50:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dd54:	e5ce0006 	strb	r0, [lr, #6]
4001dd58:	ea000002 	b	4001dd68 <CyU3PUsbSetDesc+0x110>
4001dd5c:	e3a00000 	mov	r0, #0
4001dd60:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dd64:	e5ce0006 	strb	r0, [lr, #6]
4001dd68:	ea00001b 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dd6c:	e1a00000 	nop			; (mov r0, r0)
4001dd70:	e59f00b0 	ldr	r0, [pc, #176]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dd74:	e5802014 	str	r2, [r0, #20]
4001dd78:	e5d20007 	ldrb	r0, [r2, #7]
4001dd7c:	e3100040 	tst	r0, #64	; 0x40
4001dd80:	0a000003 	beq	4001dd94 <CyU3PUsbSetDesc+0x13c>
4001dd84:	e3a00001 	mov	r0, #1
4001dd88:	e59fe094 	ldr	lr, [pc, #148]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dd8c:	e5ce0006 	strb	r0, [lr, #6]
4001dd90:	ea000002 	b	4001dda0 <CyU3PUsbSetDesc+0x148>
4001dd94:	e3a00000 	mov	r0, #0
4001dd98:	e59fe084 	ldr	lr, [pc, #132]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001dd9c:	e5ce0006 	strb	r0, [lr, #6]
4001dda0:	ea00000d 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001dda4:	e1a00000 	nop			; (mov r0, r0)
4001dda8:	e3510010 	cmp	r1, #16
4001ddac:	da000000 	ble	4001ddb4 <CyU3PUsbSetDesc+0x15c>
4001ddb0:	e3a0c04b 	mov	ip, #75	; 0x4b
4001ddb4:	e59f0070 	ldr	r0, [pc, #112]	; 4001de2c <CyU3PUsbSetDesc+0x1d4>
4001ddb8:	e7802101 	str	r2, [r0, r1, lsl #2]
4001ddbc:	ea000006 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001ddc0:	e1a00000 	nop			; (mov r0, r0)
4001ddc4:	e59f005c 	ldr	r0, [pc, #92]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001ddc8:	e5802070 	str	r2, [r0, #112]	; 0x70
4001ddcc:	ea000002 	b	4001dddc <CyU3PUsbSetDesc+0x184>
4001ddd0:	e1a00000 	nop			; (mov r0, r0)
4001ddd4:	e3a00050 	mov	r0, #80	; 0x50
4001ddd8:	eaffffa6 	b	4001dc78 <CyU3PUsbSetDesc+0x20>
4001dddc:	e1a00000 	nop			; (mov r0, r0)
4001dde0:	e59f0040 	ldr	r0, [pc, #64]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001dde4:	e5900000 	ldr	r0, [r0]
4001dde8:	e3500000 	cmp	r0, #0
4001ddec:	0a00000a 	beq	4001de1c <CyU3PUsbSetDesc+0x1c4>
4001ddf0:	e59f0030 	ldr	r0, [pc, #48]	; 4001de28 <CyU3PUsbSetDesc+0x1d0>
4001ddf4:	e5900020 	ldr	r0, [r0, #32]
4001ddf8:	e3500000 	cmp	r0, #0
4001ddfc:	0a000006 	beq	4001de1c <CyU3PUsbSetDesc+0x1c4>
4001de00:	e59f001c 	ldr	r0, [pc, #28]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001de04:	e5d00008 	ldrb	r0, [r0, #8]
4001de08:	e3500003 	cmp	r0, #3
4001de0c:	aa000002 	bge	4001de1c <CyU3PUsbSetDesc+0x1c4>
4001de10:	e3a00003 	mov	r0, #3
4001de14:	e59fe008 	ldr	lr, [pc, #8]	; 4001de24 <CyU3PUsbSetDesc+0x1cc>
4001de18:	e5ce0008 	strb	r0, [lr, #8]
4001de1c:	e1a0000c 	mov	r0, ip
4001de20:	eaffff94 	b	4001dc78 <CyU3PUsbSetDesc+0x20>
4001de24:	40031d60 	.word	0x40031d60
4001de28:	40031fb8 	.word	0x40031fb8
4001de2c:	40031fd8 	.word	0x40031fd8

Disassembly of section i.CyU3PUsbSetEpNak:

4001de30 <CyU3PUsbSetEpNak>:
4001de30:	e92d4070 	push	{r4, r5, r6, lr}
4001de34:	e1a04000 	mov	r4, r0
4001de38:	e1a06001 	mov	r6, r1
4001de3c:	e59f0198 	ldr	r0, [pc, #408]	; 4001dfdc <CyU3PUsbSetEpNak+0x1ac>
4001de40:	e5d00008 	ldrb	r0, [r0, #8]
4001de44:	e3500000 	cmp	r0, #0
4001de48:	1a000001 	bne	4001de54 <CyU3PUsbSetEpNak+0x24>
4001de4c:	e3a00042 	mov	r0, #66	; 0x42
4001de50:	e8bd8070 	pop	{r4, r5, r6, pc}
4001de54:	e204007f 	and	r0, r4, #127	; 0x7f
4001de58:	e350000f 	cmp	r0, #15
4001de5c:	da000001 	ble	4001de68 <CyU3PUsbSetEpNak+0x38>
4001de60:	e3a00040 	mov	r0, #64	; 0x40
4001de64:	eafffff9 	b	4001de50 <CyU3PUsbSetEpNak+0x20>
4001de68:	e3e01000 	mvn	r1, #0
4001de6c:	e59f016c 	ldr	r0, [pc, #364]	; 4001dfe0 <CyU3PUsbSetEpNak+0x1b0>
4001de70:	ebffb166 	bl	4000a410 <_txe_mutex_get>
4001de74:	e3560000 	cmp	r6, #0
4001de78:	0a000028 	beq	4001df20 <CyU3PUsbSetEpNak+0xf0>
4001de7c:	e3140080 	tst	r4, #128	; 0x80
4001de80:	0a000012 	beq	4001ded0 <CyU3PUsbSetEpNak+0xa0>
4001de84:	e59f0150 	ldr	r0, [pc, #336]	; 4001dfdc <CyU3PUsbSetEpNak+0x1ac>
4001de88:	e5d00009 	ldrb	r0, [r0, #9]
4001de8c:	e3500003 	cmp	r0, #3
4001de90:	1a000006 	bne	4001deb0 <CyU3PUsbSetEpNak+0x80>
4001de94:	e59f0148 	ldr	r0, [pc, #328]	; 4001dfe4 <CyU3PUsbSetEpNak+0x1b4>
4001de98:	e204100f 	and	r1, r4, #15
4001de9c:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001dea0:	e3855003 	orr	r5, r5, #3
4001dea4:	e204100f 	and	r1, r4, #15
4001dea8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001deac:	ea000046 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001deb0:	e59f0130 	ldr	r0, [pc, #304]	; 4001dfe8 <CyU3PUsbSetEpNak+0x1b8>
4001deb4:	e204100f 	and	r1, r4, #15
4001deb8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001debc:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001dec0:	e59f1120 	ldr	r1, [pc, #288]	; 4001dfe8 <CyU3PUsbSetEpNak+0x1b8>
4001dec4:	e204200f 	and	r2, r4, #15
4001dec8:	e7810102 	str	r0, [r1, r2, lsl #2]
4001decc:	ea00003e 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001ded0:	e59f0104 	ldr	r0, [pc, #260]	; 4001dfdc <CyU3PUsbSetEpNak+0x1ac>
4001ded4:	e5d00009 	ldrb	r0, [r0, #9]
4001ded8:	e3500003 	cmp	r0, #3
4001dedc:	1a000007 	bne	4001df00 <CyU3PUsbSetEpNak+0xd0>
4001dee0:	e59f0104 	ldr	r0, [pc, #260]	; 4001dfec <CyU3PUsbSetEpNak+0x1bc>
4001dee4:	e204100f 	and	r1, r4, #15
4001dee8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001deec:	e3805003 	orr	r5, r0, #3
4001def0:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dfec <CyU3PUsbSetEpNak+0x1bc>
4001def4:	e204100f 	and	r1, r4, #15
4001def8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001defc:	ea000032 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001df00:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dff0 <CyU3PUsbSetEpNak+0x1c0>
4001df04:	e204100f 	and	r1, r4, #15
4001df08:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001df0c:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001df10:	e59f10d8 	ldr	r1, [pc, #216]	; 4001dff0 <CyU3PUsbSetEpNak+0x1c0>
4001df14:	e204200f 	and	r2, r4, #15
4001df18:	e7810102 	str	r0, [r1, r2, lsl #2]
4001df1c:	ea00002a 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001df20:	e3140080 	tst	r4, #128	; 0x80
4001df24:	0a000014 	beq	4001df7c <CyU3PUsbSetEpNak+0x14c>
4001df28:	e59f00ac 	ldr	r0, [pc, #172]	; 4001dfdc <CyU3PUsbSetEpNak+0x1ac>
4001df2c:	e5d00009 	ldrb	r0, [r0, #9]
4001df30:	e3500003 	cmp	r0, #3
4001df34:	1a000008 	bne	4001df5c <CyU3PUsbSetEpNak+0x12c>
4001df38:	e59f00a4 	ldr	r0, [pc, #164]	; 4001dfe4 <CyU3PUsbSetEpNak+0x1b4>
4001df3c:	e204100f 	and	r1, r4, #15
4001df40:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001df44:	e3c50002 	bic	r0, r5, #2
4001df48:	e3805001 	orr	r5, r0, #1
4001df4c:	e59f0090 	ldr	r0, [pc, #144]	; 4001dfe4 <CyU3PUsbSetEpNak+0x1b4>
4001df50:	e204100f 	and	r1, r4, #15
4001df54:	e7805101 	str	r5, [r0, r1, lsl #2]
4001df58:	ea00001b 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001df5c:	e59f0084 	ldr	r0, [pc, #132]	; 4001dfe8 <CyU3PUsbSetEpNak+0x1b8>
4001df60:	e204100f 	and	r1, r4, #15
4001df64:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001df68:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001df6c:	e59f1074 	ldr	r1, [pc, #116]	; 4001dfe8 <CyU3PUsbSetEpNak+0x1b8>
4001df70:	e204200f 	and	r2, r4, #15
4001df74:	e7810102 	str	r0, [r1, r2, lsl #2]
4001df78:	ea000013 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001df7c:	e59f0058 	ldr	r0, [pc, #88]	; 4001dfdc <CyU3PUsbSetEpNak+0x1ac>
4001df80:	e5d00009 	ldrb	r0, [r0, #9]
4001df84:	e3500003 	cmp	r0, #3
4001df88:	1a000008 	bne	4001dfb0 <CyU3PUsbSetEpNak+0x180>
4001df8c:	e59f0058 	ldr	r0, [pc, #88]	; 4001dfec <CyU3PUsbSetEpNak+0x1bc>
4001df90:	e204100f 	and	r1, r4, #15
4001df94:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001df98:	e3c00002 	bic	r0, r0, #2
4001df9c:	e3805001 	orr	r5, r0, #1
4001dfa0:	e59f0044 	ldr	r0, [pc, #68]	; 4001dfec <CyU3PUsbSetEpNak+0x1bc>
4001dfa4:	e204100f 	and	r1, r4, #15
4001dfa8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dfac:	ea000006 	b	4001dfcc <CyU3PUsbSetEpNak+0x19c>
4001dfb0:	e59f0038 	ldr	r0, [pc, #56]	; 4001dff0 <CyU3PUsbSetEpNak+0x1c0>
4001dfb4:	e204100f 	and	r1, r4, #15
4001dfb8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dfbc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001dfc0:	e59f1028 	ldr	r1, [pc, #40]	; 4001dff0 <CyU3PUsbSetEpNak+0x1c0>
4001dfc4:	e204200f 	and	r2, r4, #15
4001dfc8:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dfcc:	e59f000c 	ldr	r0, [pc, #12]	; 4001dfe0 <CyU3PUsbSetEpNak+0x1b0>
4001dfd0:	ebffb143 	bl	4000a4e4 <_txe_mutex_put>
4001dfd4:	e3a00000 	mov	r0, #0
4001dfd8:	eaffff9c 	b	4001de50 <CyU3PUsbSetEpNak+0x20>
4001dfdc:	40031d60 	.word	0x40031d60
4001dfe0:	40031f00 	.word	0x40031f00
4001dfe4:	e0033500 	.word	0xe0033500
4001dfe8:	e0031418 	.word	0xe0031418
4001dfec:	e0033600 	.word	0xe0033600
4001dff0:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001dff4 <CyU3PUsbSetLinkPowerState>:
4001dff4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dff8:	e1a01000 	mov	r1, r0
4001dffc:	e3a030ff 	mov	r3, #255	; 0xff
4001e000:	e59f0138 	ldr	r0, [pc, #312]	; 4001e140 <CyU3PUsbSetLinkPowerState+0x14c>
4001e004:	e5d00008 	ldrb	r0, [r0, #8]
4001e008:	e3500000 	cmp	r0, #0
4001e00c:	1a000001 	bne	4001e018 <CyU3PUsbSetLinkPowerState+0x24>
4001e010:	e3a00042 	mov	r0, #66	; 0x42
4001e014:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001e018:	e59f0120 	ldr	r0, [pc, #288]	; 4001e140 <CyU3PUsbSetLinkPowerState+0x14c>
4001e01c:	e5d00008 	ldrb	r0, [r0, #8]
4001e020:	e3500005 	cmp	r0, #5
4001e024:	aa000001 	bge	4001e030 <CyU3PUsbSetLinkPowerState+0x3c>
4001e028:	e3a00044 	mov	r0, #68	; 0x44
4001e02c:	eafffff8 	b	4001e014 <CyU3PUsbSetLinkPowerState+0x20>
4001e030:	ebfffc1d 	bl	4001d0ac <CyU3PUsbGetSpeed>
4001e034:	e3500003 	cmp	r0, #3
4001e038:	0a000001 	beq	4001e044 <CyU3PUsbSetLinkPowerState+0x50>
4001e03c:	e3a000ff 	mov	r0, #255	; 0xff
4001e040:	eafffff3 	b	4001e014 <CyU3PUsbSetLinkPowerState+0x20>
4001e044:	e59f00f8 	ldr	r0, [pc, #248]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e048:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e04c:	e200203f 	and	r2, r0, #63	; 0x3f
4001e050:	e3510000 	cmp	r1, #0
4001e054:	0a000004 	beq	4001e06c <CyU3PUsbSetLinkPowerState+0x78>
4001e058:	e3510001 	cmp	r1, #1
4001e05c:	0a000015 	beq	4001e0b8 <CyU3PUsbSetLinkPowerState+0xc4>
4001e060:	e3510002 	cmp	r1, #2
4001e064:	1a00002f 	bne	4001e128 <CyU3PUsbSetLinkPowerState+0x134>
4001e068:	ea000020 	b	4001e0f0 <CyU3PUsbSetLinkPowerState+0xfc>
4001e06c:	e1a00000 	nop			; (mov r0, r0)
4001e070:	e59f00cc 	ldr	r0, [pc, #204]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e074:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e078:	e3100c02 	tst	r0, #512	; 0x200
4001e07c:	1a00000b 	bne	4001e0b0 <CyU3PUsbSetLinkPowerState+0xbc>
4001e080:	e59f00bc 	ldr	r0, [pc, #188]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e084:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e088:	e200203f 	and	r2, r0, #63	; 0x3f
4001e08c:	e3520011 	cmp	r2, #17
4001e090:	ba000006 	blt	4001e0b0 <CyU3PUsbSetLinkPowerState+0xbc>
4001e094:	e3520013 	cmp	r2, #19
4001e098:	ca000004 	bgt	4001e0b0 <CyU3PUsbSetLinkPowerState+0xbc>
4001e09c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e0a0:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e0a4:	e3800c02 	orr	r0, r0, #512	; 0x200
4001e0a8:	e59fc094 	ldr	ip, [pc, #148]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e0ac:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e0b0:	e3a03000 	mov	r3, #0
4001e0b4:	ea00001e 	b	4001e134 <CyU3PUsbSetLinkPowerState+0x140>
4001e0b8:	e1a00000 	nop			; (mov r0, r0)
4001e0bc:	e3520010 	cmp	r2, #16
4001e0c0:	1a000009 	bne	4001e0ec <CyU3PUsbSetLinkPowerState+0xf8>
4001e0c4:	e59f0074 	ldr	r0, [pc, #116]	; 4001e140 <CyU3PUsbSetLinkPowerState+0x14c>
4001e0c8:	e5d00006 	ldrb	r0, [r0, #6]
4001e0cc:	e3100004 	tst	r0, #4
4001e0d0:	0a000005 	beq	4001e0ec <CyU3PUsbSetLinkPowerState+0xf8>
4001e0d4:	e59f0068 	ldr	r0, [pc, #104]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e0d8:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e0dc:	e3800001 	orr	r0, r0, #1
4001e0e0:	e59fc05c 	ldr	ip, [pc, #92]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e0e4:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e0e8:	e3a03000 	mov	r3, #0
4001e0ec:	ea000010 	b	4001e134 <CyU3PUsbSetLinkPowerState+0x140>
4001e0f0:	e1a00000 	nop			; (mov r0, r0)
4001e0f4:	e3520010 	cmp	r2, #16
4001e0f8:	1a000009 	bne	4001e124 <CyU3PUsbSetLinkPowerState+0x130>
4001e0fc:	e59f003c 	ldr	r0, [pc, #60]	; 4001e140 <CyU3PUsbSetLinkPowerState+0x14c>
4001e100:	e5d00006 	ldrb	r0, [r0, #6]
4001e104:	e3100008 	tst	r0, #8
4001e108:	0a000005 	beq	4001e124 <CyU3PUsbSetLinkPowerState+0x130>
4001e10c:	e59f0030 	ldr	r0, [pc, #48]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e110:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e114:	e3800002 	orr	r0, r0, #2
4001e118:	e59fc024 	ldr	ip, [pc, #36]	; 4001e144 <CyU3PUsbSetLinkPowerState+0x150>
4001e11c:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e120:	e3a03000 	mov	r3, #0
4001e124:	ea000002 	b	4001e134 <CyU3PUsbSetLinkPowerState+0x140>
4001e128:	e1a00000 	nop			; (mov r0, r0)
4001e12c:	e3a03040 	mov	r3, #64	; 0x40
4001e130:	e1a00000 	nop			; (mov r0, r0)
4001e134:	e1a00000 	nop			; (mov r0, r0)
4001e138:	e1a00003 	mov	r0, r3
4001e13c:	eaffffb4 	b	4001e014 <CyU3PUsbSetLinkPowerState+0x20>
4001e140:	40031d60 	.word	0x40031d60
4001e144:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001e148 <CyU3PUsbStall>:
4001e148:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e14c:	e1a04000 	mov	r4, r0
4001e150:	e1a05001 	mov	r5, r1
4001e154:	e1a06002 	mov	r6, r2
4001e158:	e204700f 	and	r7, r4, #15
4001e15c:	e3a08000 	mov	r8, #0
4001e160:	e59f0344 	ldr	r0, [pc, #836]	; 4001e4ac <CyU3PUsbStall+0x364>
4001e164:	e5d00008 	ldrb	r0, [r0, #8]
4001e168:	e3500000 	cmp	r0, #0
4001e16c:	1a000001 	bne	4001e178 <CyU3PUsbStall+0x30>
4001e170:	e3a00042 	mov	r0, #66	; 0x42
4001e174:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001e178:	e204007f 	and	r0, r4, #127	; 0x7f
4001e17c:	e350000f 	cmp	r0, #15
4001e180:	da000001 	ble	4001e18c <CyU3PUsbStall+0x44>
4001e184:	e3a00040 	mov	r0, #64	; 0x40
4001e188:	eafffff9 	b	4001e174 <CyU3PUsbStall+0x2c>
4001e18c:	e3570000 	cmp	r7, #0
4001e190:	1a000003 	bne	4001e1a4 <CyU3PUsbStall+0x5c>
4001e194:	e3550000 	cmp	r5, #0
4001e198:	1a000001 	bne	4001e1a4 <CyU3PUsbStall+0x5c>
4001e19c:	e3a00040 	mov	r0, #64	; 0x40
4001e1a0:	eafffff3 	b	4001e174 <CyU3PUsbStall+0x2c>
4001e1a4:	e59f0300 	ldr	r0, [pc, #768]	; 4001e4ac <CyU3PUsbStall+0x364>
4001e1a8:	e5d00009 	ldrb	r0, [r0, #9]
4001e1ac:	e3500000 	cmp	r0, #0
4001e1b0:	1a000001 	bne	4001e1bc <CyU3PUsbStall+0x74>
4001e1b4:	e3a00000 	mov	r0, #0
4001e1b8:	eaffffed 	b	4001e174 <CyU3PUsbStall+0x2c>
4001e1bc:	e3e01000 	mvn	r1, #0
4001e1c0:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e4b0 <CyU3PUsbStall+0x368>
4001e1c4:	ebffb091 	bl	4000a410 <_txe_mutex_get>
4001e1c8:	e3570000 	cmp	r7, #0
4001e1cc:	1a000037 	bne	4001e2b0 <CyU3PUsbStall+0x168>
4001e1d0:	ebfffbbd 	bl	4001d0cc <CyU3PUsbIsNewCtrlRqtRecvd>
4001e1d4:	e3500000 	cmp	r0, #0
4001e1d8:	0a000003 	beq	4001e1ec <CyU3PUsbStall+0xa4>
4001e1dc:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e4b0 <CyU3PUsbStall+0x368>
4001e1e0:	ebffb0bf 	bl	4000a4e4 <_txe_mutex_put>
4001e1e4:	e3a00000 	mov	r0, #0
4001e1e8:	eaffffe1 	b	4001e174 <CyU3PUsbStall+0x2c>
4001e1ec:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e4ac <CyU3PUsbStall+0x364>
4001e1f0:	e5d00009 	ldrb	r0, [r0, #9]
4001e1f4:	e3500003 	cmp	r0, #3
4001e1f8:	1a00001b 	bne	4001e26c <CyU3PUsbStall+0x124>
4001e1fc:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e4b4 <CyU3PUsbStall+0x36c>
4001e200:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e204:	e3800004 	orr	r0, r0, #4
4001e208:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e4b4 <CyU3PUsbStall+0x36c>
4001e20c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e210:	e1a00001 	mov	r0, r1
4001e214:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e218:	e3800004 	orr	r0, r0, #4
4001e21c:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e220:	eb00104b 	bl	40022354 <CyU3PVicDisableAllInterrupts>
4001e224:	e1a0a000 	mov	sl, r0
4001e228:	e3a00001 	mov	r0, #1
4001e22c:	ebffd5ce 	bl	4001396c <CyU3PBusyWait>
4001e230:	e59f027c 	ldr	r0, [pc, #636]	; 4001e4b4 <CyU3PUsbStall+0x36c>
4001e234:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e238:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e23c:	e59f1270 	ldr	r1, [pc, #624]	; 4001e4b4 <CyU3PUsbStall+0x36c>
4001e240:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e244:	e1a0000a 	mov	r0, sl
4001e248:	eb00104f 	bl	4002238c <CyU3PVicEnableInterrupts>
4001e24c:	e3a00000 	mov	r0, #0
4001e250:	e59f1260 	ldr	r1, [pc, #608]	; 4001e4b8 <CyU3PUsbStall+0x370>
4001e254:	e5810000 	str	r0, [r1]
4001e258:	e59f125c 	ldr	r1, [pc, #604]	; 4001e4bc <CyU3PUsbStall+0x374>
4001e25c:	e5810000 	str	r0, [r1]
4001e260:	e59f0258 	ldr	r0, [pc, #600]	; 4001e4c0 <CyU3PUsbStall+0x378>
4001e264:	ebffb34b 	bl	4000af98 <_txe_timer_deactivate>
4001e268:	ea00000c 	b	4001e2a0 <CyU3PUsbStall+0x158>
4001e26c:	e59f0250 	ldr	r0, [pc, #592]	; 4001e4c4 <CyU3PUsbStall+0x37c>
4001e270:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e274:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e278:	e59f1244 	ldr	r1, [pc, #580]	; 4001e4c4 <CyU3PUsbStall+0x37c>
4001e27c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e280:	e1a00001 	mov	r0, r1
4001e284:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e288:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e28c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e290:	e1a00001 	mov	r0, r1
4001e294:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e298:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001e29c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e2a0:	e59f0208 	ldr	r0, [pc, #520]	; 4001e4b0 <CyU3PUsbStall+0x368>
4001e2a4:	ebffb08e 	bl	4000a4e4 <_txe_mutex_put>
4001e2a8:	e3a00000 	mov	r0, #0
4001e2ac:	eaffffb0 	b	4001e174 <CyU3PUsbStall+0x2c>
4001e2b0:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e4ac <CyU3PUsbStall+0x364>
4001e2b4:	e5d00009 	ldrb	r0, [r0, #9]
4001e2b8:	e3500003 	cmp	r0, #3
4001e2bc:	1a000033 	bne	4001e390 <CyU3PUsbStall+0x248>
4001e2c0:	e3140080 	tst	r4, #128	; 0x80
4001e2c4:	0a000017 	beq	4001e328 <CyU3PUsbStall+0x1e0>
4001e2c8:	e3550000 	cmp	r5, #0
4001e2cc:	0a00000a 	beq	4001e2fc <CyU3PUsbStall+0x1b4>
4001e2d0:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e4c8 <CyU3PUsbStall+0x380>
4001e2d4:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e2d8:	e3899005 	orr	r9, r9, #5
4001e2dc:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e2e0:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001e2e4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2e8:	e1a01800 	lsl	r1, r0, #16
4001e2ec:	e1a01821 	lsr	r1, r1, #16
4001e2f0:	e1a00004 	mov	r0, r4
4001e2f4:	ebfffdde 	bl	4001da74 <CyU3PUsbSendErdy>
4001e2f8:	ea000041 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e2fc:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e4c8 <CyU3PUsbStall+0x380>
4001e300:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e304:	e3899011 	orr	r9, r9, #17
4001e308:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e30c:	e3a00001 	mov	r0, #1
4001e310:	ebffd595 	bl	4001396c <CyU3PBusyWait>
4001e314:	e3c90014 	bic	r0, r9, #20
4001e318:	e3809001 	orr	r9, r0, #1
4001e31c:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e4c8 <CyU3PUsbStall+0x380>
4001e320:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e324:	ea000036 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e328:	e3550000 	cmp	r5, #0
4001e32c:	0a00000b 	beq	4001e360 <CyU3PUsbStall+0x218>
4001e330:	e59f0194 	ldr	r0, [pc, #404]	; 4001e4cc <CyU3PUsbStall+0x384>
4001e334:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e338:	e3809005 	orr	r9, r0, #5
4001e33c:	e59f0188 	ldr	r0, [pc, #392]	; 4001e4cc <CyU3PUsbStall+0x384>
4001e340:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e344:	e28000c0 	add	r0, r0, #192	; 0xc0
4001e348:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e34c:	e1a01800 	lsl	r1, r0, #16
4001e350:	e1a01821 	lsr	r1, r1, #16
4001e354:	e1a00004 	mov	r0, r4
4001e358:	ebfffdc5 	bl	4001da74 <CyU3PUsbSendErdy>
4001e35c:	ea000028 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e360:	e59f0164 	ldr	r0, [pc, #356]	; 4001e4cc <CyU3PUsbStall+0x384>
4001e364:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e368:	e3809011 	orr	r9, r0, #17
4001e36c:	e59f0158 	ldr	r0, [pc, #344]	; 4001e4cc <CyU3PUsbStall+0x384>
4001e370:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e374:	e3a00001 	mov	r0, #1
4001e378:	ebffd57b 	bl	4001396c <CyU3PBusyWait>
4001e37c:	e3c90014 	bic	r0, r9, #20
4001e380:	e3809001 	orr	r9, r0, #1
4001e384:	e59f0140 	ldr	r0, [pc, #320]	; 4001e4cc <CyU3PUsbStall+0x384>
4001e388:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e38c:	ea00001c 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e390:	e3140080 	tst	r4, #128	; 0x80
4001e394:	0a00000d 	beq	4001e3d0 <CyU3PUsbStall+0x288>
4001e398:	e3550000 	cmp	r5, #0
4001e39c:	0a000005 	beq	4001e3b8 <CyU3PUsbStall+0x270>
4001e3a0:	e59f0128 	ldr	r0, [pc, #296]	; 4001e4d0 <CyU3PUsbStall+0x388>
4001e3a4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e3a8:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e3ac:	e59f111c 	ldr	r1, [pc, #284]	; 4001e4d0 <CyU3PUsbStall+0x388>
4001e3b0:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e3b4:	ea000012 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e3b8:	e59f0110 	ldr	r0, [pc, #272]	; 4001e4d0 <CyU3PUsbStall+0x388>
4001e3bc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e3c0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e3c4:	e59f1104 	ldr	r1, [pc, #260]	; 4001e4d0 <CyU3PUsbStall+0x388>
4001e3c8:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e3cc:	ea00000c 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e3d0:	e3550000 	cmp	r5, #0
4001e3d4:	0a000005 	beq	4001e3f0 <CyU3PUsbStall+0x2a8>
4001e3d8:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e4d4 <CyU3PUsbStall+0x38c>
4001e3dc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e3e0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e3e4:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e4d4 <CyU3PUsbStall+0x38c>
4001e3e8:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e3ec:	ea000004 	b	4001e404 <CyU3PUsbStall+0x2bc>
4001e3f0:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e4d4 <CyU3PUsbStall+0x38c>
4001e3f4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e3f8:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e3fc:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e4d4 <CyU3PUsbStall+0x38c>
4001e400:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e404:	e3560000 	cmp	r6, #0
4001e408:	0a000023 	beq	4001e49c <CyU3PUsbStall+0x354>
4001e40c:	e3550000 	cmp	r5, #0
4001e410:	1a000021 	bne	4001e49c <CyU3PUsbStall+0x354>
4001e414:	e59f0090 	ldr	r0, [pc, #144]	; 4001e4ac <CyU3PUsbStall+0x364>
4001e418:	e5d00009 	ldrb	r0, [r0, #9]
4001e41c:	e3500003 	cmp	r0, #3
4001e420:	1a00000b 	bne	4001e454 <CyU3PUsbStall+0x30c>
4001e424:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001e428:	e3140080 	tst	r4, #128	; 0x80
4001e42c:	0a000000 	beq	4001e434 <CyU3PUsbStall+0x2ec>
4001e430:	e3888010 	orr	r8, r8, #16
4001e434:	e59f0078 	ldr	r0, [pc, #120]	; 4001e4b4 <CyU3PUsbStall+0x36c>
4001e438:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e43c:	e1a00000 	nop			; (mov r0, r0)
4001e440:	e59f006c 	ldr	r0, [pc, #108]	; 4001e4b4 <CyU3PUsbStall+0x36c>
4001e444:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e448:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e44c:	0afffffb 	beq	4001e440 <CyU3PUsbStall+0x2f8>
4001e450:	ea000011 	b	4001e49c <CyU3PUsbStall+0x354>
4001e454:	e3140080 	tst	r4, #128	; 0x80
4001e458:	0a000000 	beq	4001e460 <CyU3PUsbStall+0x318>
4001e45c:	e3877010 	orr	r7, r7, #16
4001e460:	e59f005c 	ldr	r0, [pc, #92]	; 4001e4c4 <CyU3PUsbStall+0x37c>
4001e464:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e468:	e1a00000 	nop			; (mov r0, r0)
4001e46c:	e59f0050 	ldr	r0, [pc, #80]	; 4001e4c4 <CyU3PUsbStall+0x37c>
4001e470:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e474:	e3100c01 	tst	r0, #256	; 0x100
4001e478:	0afffffb 	beq	4001e46c <CyU3PUsbStall+0x324>
4001e47c:	e3877020 	orr	r7, r7, #32
4001e480:	e59f003c 	ldr	r0, [pc, #60]	; 4001e4c4 <CyU3PUsbStall+0x37c>
4001e484:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e488:	e1a00000 	nop			; (mov r0, r0)
4001e48c:	e59f0030 	ldr	r0, [pc, #48]	; 4001e4c4 <CyU3PUsbStall+0x37c>
4001e490:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e494:	e3100c01 	tst	r0, #256	; 0x100
4001e498:	0afffffb 	beq	4001e48c <CyU3PUsbStall+0x344>
4001e49c:	e59f000c 	ldr	r0, [pc, #12]	; 4001e4b0 <CyU3PUsbStall+0x368>
4001e4a0:	ebffb00f 	bl	4000a4e4 <_txe_mutex_put>
4001e4a4:	e3a00000 	mov	r0, #0
4001e4a8:	eaffff31 	b	4001e174 <CyU3PUsbStall+0x2c>
4001e4ac:	40031d60 	.word	0x40031d60
4001e4b0:	40031f00 	.word	0x40031f00
4001e4b4:	e0033000 	.word	0xe0033000
4001e4b8:	40030dd0 	.word	0x40030dd0
4001e4bc:	40030dd4 	.word	0x40030dd4
4001e4c0:	400326c0 	.word	0x400326c0
4001e4c4:	e0031000 	.word	0xe0031000
4001e4c8:	e0033500 	.word	0xe0033500
4001e4cc:	e0033600 	.word	0xe0033600
4001e4d0:	e0031418 	.word	0xe0031418
4001e4d4:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e4d8 <CyU3PUsbStart>:
4001e4d8:	e92d4070 	push	{r4, r5, r6, lr}
4001e4dc:	e59f0324 	ldr	r0, [pc, #804]	; 4001e808 <CyU3PUsbStart+0x330>
4001e4e0:	e5900000 	ldr	r0, [r0]
4001e4e4:	e3500000 	cmp	r0, #0
4001e4e8:	1a000001 	bne	4001e4f4 <CyU3PUsbStart+0x1c>
4001e4ec:	e3a00010 	mov	r0, #16
4001e4f0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e4f4:	e59f0310 	ldr	r0, [pc, #784]	; 4001e80c <CyU3PUsbStart+0x334>
4001e4f8:	e5d00008 	ldrb	r0, [r0, #8]
4001e4fc:	e3500000 	cmp	r0, #0
4001e500:	0a000001 	beq	4001e50c <CyU3PUsbStart+0x34>
4001e504:	e3a00043 	mov	r0, #67	; 0x43
4001e508:	eafffff8 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e50c:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e810 <CyU3PUsbStart+0x338>
4001e510:	e5900000 	ldr	r0, [r0]
4001e514:	e3500000 	cmp	r0, #0
4001e518:	0a00006b 	beq	4001e6cc <CyU3PUsbStart+0x1f4>
4001e51c:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e814 <CyU3PUsbStart+0x33c>
4001e520:	eb00059e 	bl	4001fba0 <CyU3PUibSocketInit>
4001e524:	ebfff98c 	bl	4001cb5c <CyU3PUsbCreateDmaChannels>
4001e528:	e1a04000 	mov	r4, r0
4001e52c:	e3540000 	cmp	r4, #0
4001e530:	0a000001 	beq	4001e53c <CyU3PUsbStart+0x64>
4001e534:	e1a00004 	mov	r0, r4
4001e538:	eaffffec 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e53c:	e3a00001 	mov	r0, #1
4001e540:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e80c <CyU3PUsbStart+0x334>
4001e544:	e5c10008 	strb	r0, [r1, #8]
4001e548:	e5950004 	ldr	r0, [r5, #4]
4001e54c:	e5c10009 	strb	r0, [r1, #9]
4001e550:	e1a00005 	mov	r0, r5
4001e554:	ebfffaef 	bl	4001d118 <CyU3PUsbLoadBootloaderDescs>
4001e558:	e1a04000 	mov	r4, r0
4001e55c:	e3540000 	cmp	r4, #0
4001e560:	0a000001 	beq	4001e56c <CyU3PUsbStart+0x94>
4001e564:	e1a00004 	mov	r0, r4
4001e568:	eaffffe0 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e56c:	e3a00006 	mov	r0, #6
4001e570:	e59f1294 	ldr	r1, [pc, #660]	; 4001e80c <CyU3PUsbStart+0x334>
4001e574:	e5c10008 	strb	r0, [r1, #8]
4001e578:	e2810000 	add	r0, r1, #0
4001e57c:	e5d00009 	ldrb	r0, [r0, #9]
4001e580:	e3500003 	cmp	r0, #3
4001e584:	1a000002 	bne	4001e594 <CyU3PUsbStart+0xbc>
4001e588:	e3a00001 	mov	r0, #1
4001e58c:	e59f1284 	ldr	r1, [pc, #644]	; 4001e818 <CyU3PUsbStart+0x340>
4001e590:	e5810000 	str	r0, [r1]
4001e594:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e598:	e59f127c 	ldr	r1, [pc, #636]	; 4001e81c <CyU3PUsbStart+0x344>
4001e59c:	e1500001 	cmp	r0, r1
4001e5a0:	1a000015 	bne	4001e5fc <CyU3PUsbStart+0x124>
4001e5a4:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e5a8:	e59f1270 	ldr	r1, [pc, #624]	; 4001e820 <CyU3PUsbStart+0x348>
4001e5ac:	e1500001 	cmp	r0, r1
4001e5b0:	3a000007 	bcc	4001e5d4 <CyU3PUsbStart+0xfc>
4001e5b4:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e5b8:	e3500000 	cmp	r0, #0
4001e5bc:	0a000001 	beq	4001e5c8 <CyU3PUsbStart+0xf0>
4001e5c0:	e3a00001 	mov	r0, #1
4001e5c4:	ea000000 	b	4001e5cc <CyU3PUsbStart+0xf4>
4001e5c8:	e3a00000 	mov	r0, #0
4001e5cc:	e59f1238 	ldr	r1, [pc, #568]	; 4001e80c <CyU3PUsbStart+0x334>
4001e5d0:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e5d4:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e5d8:	e59f1244 	ldr	r1, [pc, #580]	; 4001e824 <CyU3PUsbStart+0x34c>
4001e5dc:	e1500001 	cmp	r0, r1
4001e5e0:	3a000008 	bcc	4001e608 <CyU3PUsbStart+0x130>
4001e5e4:	e59f023c 	ldr	r0, [pc, #572]	; 4001e828 <CyU3PUsbStart+0x350>
4001e5e8:	e5900000 	ldr	r0, [r0]
4001e5ec:	e3800002 	orr	r0, r0, #2
4001e5f0:	e59f1230 	ldr	r1, [pc, #560]	; 4001e828 <CyU3PUsbStart+0x350>
4001e5f4:	e5810000 	str	r0, [r1]
4001e5f8:	ea000002 	b	4001e608 <CyU3PUsbStart+0x130>
4001e5fc:	e3a00001 	mov	r0, #1
4001e600:	e59f1204 	ldr	r1, [pc, #516]	; 4001e80c <CyU3PUsbStart+0x334>
4001e604:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e608:	e3e00000 	mvn	r0, #0
4001e60c:	e59f1218 	ldr	r1, [pc, #536]	; 4001e82c <CyU3PUsbStart+0x354>
4001e610:	e5810004 	str	r0, [r1, #4]
4001e614:	e59f0214 	ldr	r0, [pc, #532]	; 4001e830 <CyU3PUsbStart+0x358>
4001e618:	e5810008 	str	r0, [r1, #8]
4001e61c:	e3e00000 	mvn	r0, #0
4001e620:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e624:	e59f0208 	ldr	r0, [pc, #520]	; 4001e834 <CyU3PUsbStart+0x35c>
4001e628:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e62c:	e3a00000 	mov	r0, #0
4001e630:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e634:	e3e00000 	mvn	r0, #0
4001e638:	e0811680 	add	r1, r1, r0, lsl #13
4001e63c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e640:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e838 <CyU3PUsbStart+0x360>
4001e644:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e648:	e3e00000 	mvn	r0, #0
4001e64c:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e650:	e3a00000 	mov	r0, #0
4001e654:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e658:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e65c:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e660:	e5810004 	str	r0, [r1, #4]
4001e664:	e3a00008 	mov	r0, #8
4001e668:	eb000f42 	bl	40022378 <CyU3PVicEnableInt>
4001e66c:	e3a00009 	mov	r0, #9
4001e670:	eb000f40 	bl	40022378 <CyU3PVicEnableInt>
4001e674:	ebfffa8c 	bl	4001d0ac <CyU3PUsbGetSpeed>
4001e678:	e1a06000 	mov	r6, r0
4001e67c:	eb0006b5 	bl	40020158 <CyU3PUsbEpPrepare>
4001e680:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e828 <CyU3PUsbStart+0x350>
4001e684:	e5900000 	ldr	r0, [r0]
4001e688:	e3100002 	tst	r0, #2
4001e68c:	1a000003 	bne	4001e6a0 <CyU3PUsbStart+0x1c8>
4001e690:	e3e00000 	mvn	r0, #0
4001e694:	e5850000 	str	r0, [r5]
4001e698:	e3a00000 	mov	r0, #0
4001e69c:	e585000c 	str	r0, [r5, #12]
4001e6a0:	e3e00000 	mvn	r0, #0
4001e6a4:	e59f1190 	ldr	r1, [pc, #400]	; 4001e83c <CyU3PUsbStart+0x364>
4001e6a8:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e6ac:	e3a00b01 	mov	r0, #1024	; 0x400
4001e6b0:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e6b4:	e59f1150 	ldr	r1, [pc, #336]	; 4001e80c <CyU3PUsbStart+0x334>
4001e6b8:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e6bc:	e3a00015 	mov	r0, #21
4001e6c0:	eb000f2c 	bl	40022378 <CyU3PVicEnableInt>
4001e6c4:	e3a000fe 	mov	r0, #254	; 0xfe
4001e6c8:	eaffff88 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e6cc:	e1a00000 	nop			; (mov r0, r0)
4001e6d0:	e59f0168 	ldr	r0, [pc, #360]	; 4001e840 <CyU3PUsbStart+0x368>
4001e6d4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e6d8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e6dc:	e59f115c 	ldr	r1, [pc, #348]	; 4001e840 <CyU3PUsbStart+0x368>
4001e6e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e6e4:	e3a00002 	mov	r0, #2
4001e6e8:	ebffd49f 	bl	4001396c <CyU3PBusyWait>
4001e6ec:	e59f014c 	ldr	r0, [pc, #332]	; 4001e840 <CyU3PUsbStart+0x368>
4001e6f0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e6f4:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e6f8:	e59f1140 	ldr	r1, [pc, #320]	; 4001e840 <CyU3PUsbStart+0x368>
4001e6fc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e700:	e1a00001 	mov	r0, r1
4001e704:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e708:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e70c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e710:	e1a00001 	mov	r0, r1
4001e714:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e718:	e3800008 	orr	r0, r0, #8
4001e71c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e720:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e724:	e5900008 	ldr	r0, [r0, #8]
4001e728:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e72c:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e730:	e5810008 	str	r0, [r1, #8]
4001e734:	e3a00002 	mov	r0, #2
4001e738:	ebffd48b 	bl	4001396c <CyU3PBusyWait>
4001e73c:	ebfff645 	bl	4001c058 <CyU3POtgIsDeviceMode>
4001e740:	e3500000 	cmp	r0, #0
4001e744:	0a000002 	beq	4001e754 <CyU3PUsbStart+0x27c>
4001e748:	ebfffa5b 	bl	4001d0bc <CyU3PUsbHostIsStarted>
4001e74c:	e3500000 	cmp	r0, #0
4001e750:	0a000001 	beq	4001e75c <CyU3PUsbStart+0x284>
4001e754:	e3a00047 	mov	r0, #71	; 0x47
4001e758:	eaffff64 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e75c:	e3a01002 	mov	r1, #2
4001e760:	e1a00001 	mov	r0, r1
4001e764:	ebfff820 	bl	4001c7ec <CyU3PSetUsbCoreClock>
4001e768:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e844 <CyU3PUsbStart+0x36c>
4001e76c:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e848 <CyU3PUsbStart+0x370>
4001e770:	e5810000 	str	r0, [r1]
4001e774:	ebfff633 	bl	4001c048 <CyU3POtgGetMode>
4001e778:	e3500000 	cmp	r0, #0
4001e77c:	1a000003 	bne	4001e790 <CyU3PUsbStart+0x2b8>
4001e780:	ebfffc09 	bl	4001d7ac <CyU3PUsbPowerOn>
4001e784:	e3a00000 	mov	r0, #0
4001e788:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e840 <CyU3PUsbStart+0x368>
4001e78c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e790:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e84c <CyU3PUsbStart+0x374>
4001e794:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e840 <CyU3PUsbStart+0x368>
4001e798:	e5810008 	str	r0, [r1, #8]
4001e79c:	e00108c0 	and	r0, r1, r0, asr #17
4001e7a0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e7a4:	e3800008 	orr	r0, r0, #8
4001e7a8:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e7ac:	eb000662 	bl	4002013c <CyU3PUsbDescInit>
4001e7b0:	ebfff8e9 	bl	4001cb5c <CyU3PUsbCreateDmaChannels>
4001e7b4:	e1a04000 	mov	r4, r0
4001e7b8:	e3540000 	cmp	r4, #0
4001e7bc:	0a000001 	beq	4001e7c8 <CyU3PUsbStart+0x2f0>
4001e7c0:	e1a00004 	mov	r0, r4
4001e7c4:	eaffff49 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e7c8:	e3a00001 	mov	r0, #1
4001e7cc:	e59f1038 	ldr	r1, [pc, #56]	; 4001e80c <CyU3PUsbStart+0x334>
4001e7d0:	e5c10008 	strb	r0, [r1, #8]
4001e7d4:	e2810000 	add	r0, r1, #0
4001e7d8:	e5d00007 	ldrb	r0, [r0, #7]
4001e7dc:	e3500001 	cmp	r0, #1
4001e7e0:	1a000002 	bne	4001e7f0 <CyU3PUsbStart+0x318>
4001e7e4:	e3a00003 	mov	r0, #3
4001e7e8:	e5c10008 	strb	r0, [r1, #8]
4001e7ec:	ea000002 	b	4001e7fc <CyU3PUsbStart+0x324>
4001e7f0:	e3a00002 	mov	r0, #2
4001e7f4:	e59f1010 	ldr	r1, [pc, #16]	; 4001e80c <CyU3PUsbStart+0x334>
4001e7f8:	e5c10008 	strb	r0, [r1, #8]
4001e7fc:	ebfff81b 	bl	4001c870 <CyU3PUibInit>
4001e800:	e1a00004 	mov	r0, r4
4001e804:	eaffff39 	b	4001e4f0 <CyU3PUsbStart+0x18>
4001e808:	40030d80 	.word	0x40030d80
4001e80c:	40031d60 	.word	0x40031d60
4001e810:	40030c88 	.word	0x40030c88
4001e814:	40002000 	.word	0x40002000
4001e818:	40030d90 	.word	0x40030d90
4001e81c:	42335846 	.word	0x42335846
4001e820:	00010101 	.word	0x00010101
4001e824:	00010200 	.word	0x00010200
4001e828:	40030d64 	.word	0x40030d64
4001e82c:	e0033000 	.word	0xe0033000
4001e830:	00038081 	.word	0x00038081
4001e834:	00004a3d 	.word	0x00004a3d
4001e838:	0000095c 	.word	0x0000095c
4001e83c:	e0051000 	.word	0xe0051000
4001e840:	e0031000 	.word	0xe0031000
4001e844:	de001011 	.word	0xde001011
4001e848:	e0050000 	.word	0xe0050000
4001e84c:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e850 <GetUsbLinkActive>:
4001e850:	e92d4010 	push	{r4, lr}
4001e854:	e59f0064 	ldr	r0, [pc, #100]	; 4001e8c0 <GetUsbLinkActive+0x70>
4001e858:	e5d00009 	ldrb	r0, [r0, #9]
4001e85c:	e3500003 	cmp	r0, #3
4001e860:	1a000015 	bne	4001e8bc <GetUsbLinkActive+0x6c>
4001e864:	e59f0058 	ldr	r0, [pc, #88]	; 4001e8c4 <GetUsbLinkActive+0x74>
4001e868:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e86c:	e3c00004 	bic	r0, r0, #4
4001e870:	e59f104c 	ldr	r1, [pc, #76]	; 4001e8c4 <GetUsbLinkActive+0x74>
4001e874:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e878:	e1a00001 	mov	r0, r1
4001e87c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e880:	e3c00004 	bic	r0, r0, #4
4001e884:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e888:	e59f0030 	ldr	r0, [pc, #48]	; 4001e8c0 <GetUsbLinkActive+0x70>
4001e88c:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e890:	e3500000 	cmp	r0, #0
4001e894:	1a000008 	bne	4001e8bc <GetUsbLinkActive+0x6c>
4001e898:	e1a00001 	mov	r0, r1
4001e89c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e8a0:	e200403f 	and	r4, r0, #63	; 0x3f
4001e8a4:	e3540011 	cmp	r4, #17
4001e8a8:	0a000001 	beq	4001e8b4 <GetUsbLinkActive+0x64>
4001e8ac:	e3540012 	cmp	r4, #18
4001e8b0:	1a000001 	bne	4001e8bc <GetUsbLinkActive+0x6c>
4001e8b4:	e3a00000 	mov	r0, #0
4001e8b8:	ebfffdcd 	bl	4001dff4 <CyU3PUsbSetLinkPowerState>
4001e8bc:	e8bd8010 	pop	{r4, pc}
4001e8c0:	40031d60 	.word	0x40031d60
4001e8c4:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e8c8 <CyU3PHsGrantIntrHandler>:
4001e8c8:	e92d4010 	push	{r4, lr}
4001e8cc:	e59f005c 	ldr	r0, [pc, #92]	; 4001e930 <CyU3PHsGrantIntrHandler+0x68>
4001e8d0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e8d4:	e3100080 	tst	r0, #128	; 0x80
4001e8d8:	0a000013 	beq	4001e92c <CyU3PHsGrantIntrHandler+0x64>
4001e8dc:	e59f0050 	ldr	r0, [pc, #80]	; 4001e934 <CyU3PHsGrantIntrHandler+0x6c>
4001e8e0:	e5900014 	ldr	r0, [r0, #20]
4001e8e4:	e59f1048 	ldr	r1, [pc, #72]	; 4001e934 <CyU3PHsGrantIntrHandler+0x6c>
4001e8e8:	e581000c 	str	r0, [r1, #12]
4001e8ec:	e2810000 	add	r0, r1, #0
4001e8f0:	e5900018 	ldr	r0, [r0, #24]
4001e8f4:	e5810010 	str	r0, [r1, #16]
4001e8f8:	e59f0038 	ldr	r0, [pc, #56]	; 4001e938 <CyU3PHsGrantIntrHandler+0x70>
4001e8fc:	e5900000 	ldr	r0, [r0]
4001e900:	e3500000 	cmp	r0, #0
4001e904:	0a000004 	beq	4001e91c <CyU3PHsGrantIntrHandler+0x54>
4001e908:	e3a01001 	mov	r1, #1
4001e90c:	e3a00006 	mov	r0, #6
4001e910:	e59f2020 	ldr	r2, [pc, #32]	; 4001e938 <CyU3PHsGrantIntrHandler+0x70>
4001e914:	e5922000 	ldr	r2, [r2]
4001e918:	e12fff32 	blx	r2
4001e91c:	e3a00002 	mov	r0, #2
4001e920:	e59f1014 	ldr	r1, [pc, #20]	; 4001e93c <CyU3PHsGrantIntrHandler+0x74>
4001e924:	e5c10009 	strb	r0, [r1, #9]
4001e928:	eb00060a 	bl	40020158 <CyU3PUsbEpPrepare>
4001e92c:	e8bd8010 	pop	{r4, pc}
4001e930:	e0031000 	.word	0xe0031000
4001e934:	40031fb8 	.word	0x40031fb8
4001e938:	40030dbc 	.word	0x40030dbc
4001e93c:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUibApplicationDefine:

4001e940 <CyU3PUibApplicationDefine>:
4001e940:	e92d4030 	push	{r4, r5, lr}
4001e944:	e24dd01c 	sub	sp, sp, #28
4001e948:	eb000178 	bl	4001ef30 <CyU3PUibInitVars>
4001e94c:	e3a00b01 	mov	r0, #1024	; 0x400
4001e950:	ebff9347 	bl	40003674 <CyU3PMemAlloc>
4001e954:	e1a05000 	mov	r5, r0
4001e958:	e3550000 	cmp	r5, #0
4001e95c:	0a00004f 	beq	4001eaa0 <CyU3PUibApplicationDefine+0x160>
4001e960:	e3a030a8 	mov	r3, #168	; 0xa8
4001e964:	e3a02000 	mov	r2, #0
4001e968:	e3a00004 	mov	r0, #4
4001e96c:	e58d000c 	str	r0, [sp, #12]
4001e970:	e58d2010 	str	r2, [sp, #16]
4001e974:	e58d2014 	str	r2, [sp, #20]
4001e978:	e58d3018 	str	r3, [sp, #24]
4001e97c:	e3a02b01 	mov	r2, #1024	; 0x400
4001e980:	e3a03000 	mov	r3, #0
4001e984:	e58d2004 	str	r2, [sp, #4]
4001e988:	e59f2118 	ldr	r2, [pc, #280]	; 4001eaa8 <CyU3PUibApplicationDefine+0x168>
4001e98c:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e990:	e58d0008 	str	r0, [sp, #8]
4001e994:	e59f0120 	ldr	r0, [pc, #288]	; 4001eabc <CyU3PUibApplicationDefine+0x17c>
4001e998:	e58d5000 	str	r5, [sp]
4001e99c:	ebffafde 	bl	4000a91c <_txe_thread_create>
4001e9a0:	e1a04000 	mov	r4, r0
4001e9a4:	e3540000 	cmp	r4, #0
4001e9a8:	1a00003c 	bne	4001eaa0 <CyU3PUibApplicationDefine+0x160>
4001e9ac:	e3a00080 	mov	r0, #128	; 0x80
4001e9b0:	ebff932f 	bl	40003674 <CyU3PMemAlloc>
4001e9b4:	e1a05000 	mov	r5, r0
4001e9b8:	e3550000 	cmp	r5, #0
4001e9bc:	0a000009 	beq	4001e9e8 <CyU3PUibApplicationDefine+0xa8>
4001e9c0:	e3a0303c 	mov	r3, #60	; 0x3c
4001e9c4:	e3a02080 	mov	r2, #128	; 0x80
4001e9c8:	e1cd20f0 	strd	r2, [sp]
4001e9cc:	e1a03005 	mov	r3, r5
4001e9d0:	e3a02004 	mov	r2, #4
4001e9d4:	e3a01000 	mov	r1, #0
4001e9d8:	e59f00e0 	ldr	r0, [pc, #224]	; 4001eac0 <CyU3PUibApplicationDefine+0x180>
4001e9dc:	ebffaee8 	bl	4000a584 <_txe_queue_create>
4001e9e0:	e1a04000 	mov	r4, r0
4001e9e4:	ea000000 	b	4001e9ec <CyU3PUibApplicationDefine+0xac>
4001e9e8:	e3a04010 	mov	r4, #16
4001e9ec:	e3540000 	cmp	r4, #0
4001e9f0:	1a000004 	bne	4001ea08 <CyU3PUibApplicationDefine+0xc8>
4001e9f4:	e3a02028 	mov	r2, #40	; 0x28
4001e9f8:	e3a01000 	mov	r1, #0
4001e9fc:	e59f00c0 	ldr	r0, [pc, #192]	; 4001eac4 <CyU3PUibApplicationDefine+0x184>
4001ea00:	ebffad4a 	bl	40009f30 <_txe_event_flags_create>
4001ea04:	e1a04000 	mov	r4, r0
4001ea08:	e3540000 	cmp	r4, #0
4001ea0c:	1a000005 	bne	4001ea28 <CyU3PUibApplicationDefine+0xe8>
4001ea10:	e3a03038 	mov	r3, #56	; 0x38
4001ea14:	e3a02000 	mov	r2, #0
4001ea18:	e1a01002 	mov	r1, r2
4001ea1c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001eac8 <CyU3PUibApplicationDefine+0x188>
4001ea20:	ebffadfc 	bl	4000a218 <_txe_mutex_create>
4001ea24:	e1a04000 	mov	r4, r0
4001ea28:	e3540000 	cmp	r4, #0
4001ea2c:	1a00000a 	bne	4001ea5c <CyU3PUibApplicationDefine+0x11c>
4001ea30:	e3a0302c 	mov	r3, #44	; 0x2c
4001ea34:	e3a02000 	mov	r2, #0
4001ea38:	e3a00064 	mov	r0, #100	; 0x64
4001ea3c:	e88d0005 	stm	sp, {r0, r2}
4001ea40:	e1cd20f8 	strd	r2, [sp, #8]
4001ea44:	e1a03002 	mov	r3, r2
4001ea48:	e59f207c 	ldr	r2, [pc, #124]	; 4001eacc <CyU3PUibApplicationDefine+0x18c>
4001ea4c:	e3a01000 	mov	r1, #0
4001ea50:	e59f0078 	ldr	r0, [pc, #120]	; 4001ead0 <CyU3PUibApplicationDefine+0x190>
4001ea54:	ebffb0dd 	bl	4000add0 <_txe_timer_create>
4001ea58:	e1a04000 	mov	r4, r0
4001ea5c:	e3540000 	cmp	r4, #0
4001ea60:	1a00000a 	bne	4001ea90 <CyU3PUibApplicationDefine+0x150>
4001ea64:	e3a0302c 	mov	r3, #44	; 0x2c
4001ea68:	e3a02001 	mov	r2, #1
4001ea6c:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001ea70:	e58d1000 	str	r1, [sp]
4001ea74:	e98d000e 	stmib	sp, {r1, r2, r3}
4001ea78:	e3a03000 	mov	r3, #0
4001ea7c:	e59f2050 	ldr	r2, [pc, #80]	; 4001ead4 <CyU3PUibApplicationDefine+0x194>
4001ea80:	e1a01003 	mov	r1, r3
4001ea84:	e59f004c 	ldr	r0, [pc, #76]	; 4001ead8 <CyU3PUibApplicationDefine+0x198>
4001ea88:	ebffb0d0 	bl	4000add0 <_txe_timer_create>
4001ea8c:	e1a04000 	mov	r4, r0
4001ea90:	e3540000 	cmp	r4, #0
4001ea94:	1a000001 	bne	4001eaa0 <CyU3PUibApplicationDefine+0x160>
4001ea98:	e59f001c 	ldr	r0, [pc, #28]	; 4001eabc <CyU3PUibApplicationDefine+0x17c>
4001ea9c:	ebffb089 	bl	4000acc8 <_txe_thread_resume>
4001eaa0:	e28dd01c 	add	sp, sp, #28
4001eaa4:	e8bd8030 	pop	{r4, r5, pc}
4001eaa8:	4001fcac 	.word	0x4001fcac
4001eaac:	555f3430 	.word	0x555f3430
4001eab0:	545f4249 	.word	0x545f4249
4001eab4:	41455248 	.word	0x41455248
4001eab8:	00000044 	.word	0x00000044
4001eabc:	40031df4 	.word	0x40031df4
4001eac0:	40031e9c 	.word	0x40031e9c
4001eac4:	40031ed8 	.word	0x40031ed8
4001eac8:	40031f00 	.word	0x40031f00
4001eacc:	4001fc3c 	.word	0x4001fc3c
4001ead0:	400326c0 	.word	0x400326c0
4001ead4:	4001efe8 	.word	0x4001efe8
4001ead8:	400326ec 	.word	0x400326ec

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001eadc <CyU3PUibDevCtrlEvtHandler>:
4001eadc:	e92d4010 	push	{r4, lr}
4001eae0:	e59f01c8 	ldr	r0, [pc, #456]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eae4:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001eae8:	e3140c01 	tst	r4, #256	; 0x100
4001eaec:	0a000008 	beq	4001eb14 <CyU3PUibDevCtrlEvtHandler+0x38>
4001eaf0:	e3a00c01 	mov	r0, #256	; 0x100
4001eaf4:	e59f11b4 	ldr	r1, [pc, #436]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eaf8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eafc:	eb000995 	bl	40021158 <CyU3PUsbResumeHandler>
4001eb00:	e59f01a8 	ldr	r0, [pc, #424]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb04:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb08:	e3800c01 	orr	r0, r0, #256	; 0x100
4001eb0c:	e59f119c 	ldr	r1, [pc, #412]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb10:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb14:	e3140004 	tst	r4, #4
4001eb18:	0a000008 	beq	4001eb40 <CyU3PUibDevCtrlEvtHandler+0x64>
4001eb1c:	e3a00004 	mov	r0, #4
4001eb20:	e59f1188 	ldr	r1, [pc, #392]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb24:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb28:	eb000d6c 	bl	400220e0 <CyU3PUsbSuspendHandler>
4001eb2c:	e59f017c 	ldr	r0, [pc, #380]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb30:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb34:	e3800004 	orr	r0, r0, #4
4001eb38:	e59f1170 	ldr	r1, [pc, #368]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb3c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb40:	e3140008 	tst	r4, #8
4001eb44:	0a000008 	beq	4001eb6c <CyU3PUibDevCtrlEvtHandler+0x90>
4001eb48:	e3a00008 	mov	r0, #8
4001eb4c:	e59f115c 	ldr	r1, [pc, #348]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb50:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb54:	eb00092e 	bl	40021014 <CyU3PUsbResetHandler>
4001eb58:	e59f0150 	ldr	r0, [pc, #336]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb5c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb60:	e3800008 	orr	r0, r0, #8
4001eb64:	e59f1144 	ldr	r1, [pc, #324]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb68:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb6c:	e3140010 	tst	r4, #16
4001eb70:	0a000008 	beq	4001eb98 <CyU3PUibDevCtrlEvtHandler+0xbc>
4001eb74:	e3a00010 	mov	r0, #16
4001eb78:	e59f1130 	ldr	r1, [pc, #304]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb7c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb80:	ebffff50 	bl	4001e8c8 <CyU3PHsGrantIntrHandler>
4001eb84:	e59f0124 	ldr	r0, [pc, #292]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb88:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb8c:	e3800010 	orr	r0, r0, #16
4001eb90:	e59f1118 	ldr	r1, [pc, #280]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb94:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb98:	e3140040 	tst	r4, #64	; 0x40
4001eb9c:	0a000018 	beq	4001ec04 <CyU3PUibDevCtrlEvtHandler+0x128>
4001eba0:	e59f010c 	ldr	r0, [pc, #268]	; 4001ecb4 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eba4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001eba8:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001ebac:	e59f1100 	ldr	r1, [pc, #256]	; 4001ecb4 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001ebb0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001ebb4:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001ebb8:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001ebbc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001ebc0:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001ebc4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001ebc8:	e1a00001 	mov	r0, r1
4001ebcc:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001ebd0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001ebd4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001ebd8:	e3a00040 	mov	r0, #64	; 0x40
4001ebdc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ebe0:	e3a00001 	mov	r0, #1
4001ebe4:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ecb8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ebe8:	e5810014 	str	r0, [r1, #20]
4001ebec:	eb000b38 	bl	400218d4 <CyU3PUsbSetupCommand>
4001ebf0:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebf4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ebf8:	e3800040 	orr	r0, r0, #64	; 0x40
4001ebfc:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ec00:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ec04:	e3140080 	tst	r4, #128	; 0x80
4001ec08:	0a000006 	beq	4001ec28 <CyU3PUibDevCtrlEvtHandler+0x14c>
4001ec0c:	e3a00080 	mov	r0, #128	; 0x80
4001ec10:	e59f1098 	ldr	r1, [pc, #152]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ec14:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ec18:	e1c10000 	bic	r0, r1, r0
4001ec1c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ec20:	e3800080 	orr	r0, r0, #128	; 0x80
4001ec24:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ec28:	e3140b02 	tst	r4, #2048	; 0x800
4001ec2c:	0a00001e 	beq	4001ecac <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001ec30:	e59f0080 	ldr	r0, [pc, #128]	; 4001ecb8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ec34:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001ec38:	e3500000 	cmp	r0, #0
4001ec3c:	1a000002 	bne	4001ec4c <CyU3PUibDevCtrlEvtHandler+0x170>
4001ec40:	e3a00501 	mov	r0, #4194304	; 0x400000
4001ec44:	e59f1068 	ldr	r1, [pc, #104]	; 4001ecb4 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001ec48:	e5810074 	str	r0, [r1, #116]	; 0x74
4001ec4c:	e3a00b02 	mov	r0, #2048	; 0x800
4001ec50:	e59f1058 	ldr	r1, [pc, #88]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ec54:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ec58:	e59f0058 	ldr	r0, [pc, #88]	; 4001ecb8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ec5c:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001ec60:	e3500000 	cmp	r0, #0
4001ec64:	0a00000b 	beq	4001ec98 <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001ec68:	e59f004c 	ldr	r0, [pc, #76]	; 4001ecbc <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ec6c:	e5900000 	ldr	r0, [r0]
4001ec70:	e3500000 	cmp	r0, #0
4001ec74:	0a000004 	beq	4001ec8c <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001ec78:	e3a01000 	mov	r1, #0
4001ec7c:	e3a0000a 	mov	r0, #10
4001ec80:	e59f2034 	ldr	r2, [pc, #52]	; 4001ecbc <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ec84:	e5922000 	ldr	r2, [r2]
4001ec88:	e12fff32 	blx	r2
4001ec8c:	e3a00000 	mov	r0, #0
4001ec90:	e59f1020 	ldr	r1, [pc, #32]	; 4001ecb8 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ec94:	e5810040 	str	r0, [r1, #64]	; 0x40
4001ec98:	e59f0010 	ldr	r0, [pc, #16]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ec9c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eca0:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001eca4:	e59f1004 	ldr	r1, [pc, #4]	; 4001ecb0 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eca8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ecac:	e8bd8010 	pop	{r4, pc}
4001ecb0:	e0031000 	.word	0xe0031000
4001ecb4:	e0032000 	.word	0xe0032000
4001ecb8:	40031d60 	.word	0x40031d60
4001ecbc:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUibEPEvtHandler:

4001ecc0 <CyU3PUibEPEvtHandler>:
4001ecc0:	e92d4070 	push	{r4, r5, r6, lr}
4001ecc4:	e59f0244 	ldr	r0, [pc, #580]	; 4001ef10 <CyU3PUibEPEvtHandler+0x250>
4001ecc8:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001eccc:	e59f123c 	ldr	r1, [pc, #572]	; 4001ef10 <CyU3PUibEPEvtHandler+0x250>
4001ecd0:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001ecd4:	e0004001 	and	r4, r0, r1
4001ecd8:	e59f0234 	ldr	r0, [pc, #564]	; 4001ef14 <CyU3PUibEPEvtHandler+0x254>
4001ecdc:	e5900000 	ldr	r0, [r0]
4001ece0:	e0044000 	and	r4, r4, r0
4001ece4:	e3a05001 	mov	r5, #1
4001ece8:	ea000080 	b	4001eef0 <CyU3PUibEPEvtHandler+0x230>
4001ecec:	e3a00001 	mov	r0, #1
4001ecf0:	e1140510 	tst	r4, r0, lsl r5
4001ecf4:	0a00003b 	beq	4001ede8 <CyU3PUibEPEvtHandler+0x128>
4001ecf8:	e59f0218 	ldr	r0, [pc, #536]	; 4001ef18 <CyU3PUibEPEvtHandler+0x258>
4001ecfc:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ed00:	e59f0214 	ldr	r0, [pc, #532]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001ed04:	e5900000 	ldr	r0, [r0]
4001ed08:	e3500000 	cmp	r0, #0
4001ed0c:	0a000033 	beq	4001ede0 <CyU3PUibEPEvtHandler+0x120>
4001ed10:	e59f0208 	ldr	r0, [pc, #520]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001ed14:	e5900000 	ldr	r0, [r0]
4001ed18:	e3100001 	tst	r0, #1
4001ed1c:	0a000008 	beq	4001ed44 <CyU3PUibEPEvtHandler+0x84>
4001ed20:	e3160702 	tst	r6, #524288	; 0x80000
4001ed24:	0a000006 	beq	4001ed44 <CyU3PUibEPEvtHandler+0x84>
4001ed28:	e3852080 	orr	r2, r5, #128	; 0x80
4001ed2c:	e59f01f0 	ldr	r0, [pc, #496]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001ed30:	e5d01009 	ldrb	r1, [r0, #9]
4001ed34:	e3a00001 	mov	r0, #1
4001ed38:	e59f31dc 	ldr	r3, [pc, #476]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001ed3c:	e5933000 	ldr	r3, [r3]
4001ed40:	e12fff33 	blx	r3
4001ed44:	e59f01d4 	ldr	r0, [pc, #468]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001ed48:	e5900000 	ldr	r0, [r0]
4001ed4c:	e3100002 	tst	r0, #2
4001ed50:	0a000008 	beq	4001ed78 <CyU3PUibEPEvtHandler+0xb8>
4001ed54:	e3160602 	tst	r6, #2097152	; 0x200000
4001ed58:	0a000006 	beq	4001ed78 <CyU3PUibEPEvtHandler+0xb8>
4001ed5c:	e3852080 	orr	r2, r5, #128	; 0x80
4001ed60:	e59f01bc 	ldr	r0, [pc, #444]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001ed64:	e5d01009 	ldrb	r1, [r0, #9]
4001ed68:	e3a00002 	mov	r0, #2
4001ed6c:	e59f31a8 	ldr	r3, [pc, #424]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001ed70:	e5933000 	ldr	r3, [r3]
4001ed74:	e12fff33 	blx	r3
4001ed78:	e59f01a0 	ldr	r0, [pc, #416]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001ed7c:	e5900000 	ldr	r0, [r0]
4001ed80:	e3100004 	tst	r0, #4
4001ed84:	0a000008 	beq	4001edac <CyU3PUibEPEvtHandler+0xec>
4001ed88:	e3160501 	tst	r6, #4194304	; 0x400000
4001ed8c:	0a000006 	beq	4001edac <CyU3PUibEPEvtHandler+0xec>
4001ed90:	e3852080 	orr	r2, r5, #128	; 0x80
4001ed94:	e59f0188 	ldr	r0, [pc, #392]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001ed98:	e5d01009 	ldrb	r1, [r0, #9]
4001ed9c:	e3a00004 	mov	r0, #4
4001eda0:	e59f3174 	ldr	r3, [pc, #372]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001eda4:	e5933000 	ldr	r3, [r3]
4001eda8:	e12fff33 	blx	r3
4001edac:	e59f016c 	ldr	r0, [pc, #364]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001edb0:	e5900000 	ldr	r0, [r0]
4001edb4:	e3100008 	tst	r0, #8
4001edb8:	0a000008 	beq	4001ede0 <CyU3PUibEPEvtHandler+0x120>
4001edbc:	e3160502 	tst	r6, #8388608	; 0x800000
4001edc0:	0a000006 	beq	4001ede0 <CyU3PUibEPEvtHandler+0x120>
4001edc4:	e3852080 	orr	r2, r5, #128	; 0x80
4001edc8:	e59f0154 	ldr	r0, [pc, #340]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001edcc:	e5d01009 	ldrb	r1, [r0, #9]
4001edd0:	e3a00008 	mov	r0, #8
4001edd4:	e59f3140 	ldr	r3, [pc, #320]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001edd8:	e5933000 	ldr	r3, [r3]
4001eddc:	e12fff33 	blx	r3
4001ede0:	e59f0130 	ldr	r0, [pc, #304]	; 4001ef18 <CyU3PUibEPEvtHandler+0x258>
4001ede4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ede8:	e2850010 	add	r0, r5, #16
4001edec:	e3a01001 	mov	r1, #1
4001edf0:	e1140011 	tst	r4, r1, lsl r0
4001edf4:	0a00003b 	beq	4001eee8 <CyU3PUibEPEvtHandler+0x228>
4001edf8:	e59f0128 	ldr	r0, [pc, #296]	; 4001ef28 <CyU3PUibEPEvtHandler+0x268>
4001edfc:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ee00:	e59f0114 	ldr	r0, [pc, #276]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001ee04:	e5900000 	ldr	r0, [r0]
4001ee08:	e3500000 	cmp	r0, #0
4001ee0c:	0a000033 	beq	4001eee0 <CyU3PUibEPEvtHandler+0x220>
4001ee10:	e59f0108 	ldr	r0, [pc, #264]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001ee14:	e5900000 	ldr	r0, [r0]
4001ee18:	e3100001 	tst	r0, #1
4001ee1c:	0a000008 	beq	4001ee44 <CyU3PUibEPEvtHandler+0x184>
4001ee20:	e3160702 	tst	r6, #524288	; 0x80000
4001ee24:	0a000006 	beq	4001ee44 <CyU3PUibEPEvtHandler+0x184>
4001ee28:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001ee2c:	e5d01009 	ldrb	r1, [r0, #9]
4001ee30:	e1a02005 	mov	r2, r5
4001ee34:	e3a00001 	mov	r0, #1
4001ee38:	e59f30dc 	ldr	r3, [pc, #220]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001ee3c:	e5933000 	ldr	r3, [r3]
4001ee40:	e12fff33 	blx	r3
4001ee44:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001ee48:	e5900000 	ldr	r0, [r0]
4001ee4c:	e3100002 	tst	r0, #2
4001ee50:	0a000008 	beq	4001ee78 <CyU3PUibEPEvtHandler+0x1b8>
4001ee54:	e3160602 	tst	r6, #2097152	; 0x200000
4001ee58:	0a000006 	beq	4001ee78 <CyU3PUibEPEvtHandler+0x1b8>
4001ee5c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001ee60:	e5d01009 	ldrb	r1, [r0, #9]
4001ee64:	e1a02005 	mov	r2, r5
4001ee68:	e3a00002 	mov	r0, #2
4001ee6c:	e59f30a8 	ldr	r3, [pc, #168]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001ee70:	e5933000 	ldr	r3, [r3]
4001ee74:	e12fff33 	blx	r3
4001ee78:	e59f00a0 	ldr	r0, [pc, #160]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001ee7c:	e5900000 	ldr	r0, [r0]
4001ee80:	e3100004 	tst	r0, #4
4001ee84:	0a000008 	beq	4001eeac <CyU3PUibEPEvtHandler+0x1ec>
4001ee88:	e3160501 	tst	r6, #4194304	; 0x400000
4001ee8c:	0a000006 	beq	4001eeac <CyU3PUibEPEvtHandler+0x1ec>
4001ee90:	e59f008c 	ldr	r0, [pc, #140]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001ee94:	e5d01009 	ldrb	r1, [r0, #9]
4001ee98:	e1a02005 	mov	r2, r5
4001ee9c:	e3a00004 	mov	r0, #4
4001eea0:	e59f3074 	ldr	r3, [pc, #116]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001eea4:	e5933000 	ldr	r3, [r3]
4001eea8:	e12fff33 	blx	r3
4001eeac:	e59f006c 	ldr	r0, [pc, #108]	; 4001ef20 <CyU3PUibEPEvtHandler+0x260>
4001eeb0:	e5900000 	ldr	r0, [r0]
4001eeb4:	e3100008 	tst	r0, #8
4001eeb8:	0a000008 	beq	4001eee0 <CyU3PUibEPEvtHandler+0x220>
4001eebc:	e3160502 	tst	r6, #8388608	; 0x800000
4001eec0:	0a000006 	beq	4001eee0 <CyU3PUibEPEvtHandler+0x220>
4001eec4:	e59f0058 	ldr	r0, [pc, #88]	; 4001ef24 <CyU3PUibEPEvtHandler+0x264>
4001eec8:	e5d01009 	ldrb	r1, [r0, #9]
4001eecc:	e1a02005 	mov	r2, r5
4001eed0:	e3a00008 	mov	r0, #8
4001eed4:	e59f3040 	ldr	r3, [pc, #64]	; 4001ef1c <CyU3PUibEPEvtHandler+0x25c>
4001eed8:	e5933000 	ldr	r3, [r3]
4001eedc:	e12fff33 	blx	r3
4001eee0:	e59f0040 	ldr	r0, [pc, #64]	; 4001ef28 <CyU3PUibEPEvtHandler+0x268>
4001eee4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001eee8:	e2850001 	add	r0, r5, #1
4001eeec:	e20050ff 	and	r5, r0, #255	; 0xff
4001eef0:	e3550010 	cmp	r5, #16
4001eef4:	baffff7c 	blt	4001ecec <CyU3PUibEPEvtHandler+0x2c>
4001eef8:	e59f002c 	ldr	r0, [pc, #44]	; 4001ef2c <CyU3PUibEPEvtHandler+0x26c>
4001eefc:	e5900004 	ldr	r0, [r0, #4]
4001ef00:	e3800010 	orr	r0, r0, #16
4001ef04:	e59f1020 	ldr	r1, [pc, #32]	; 4001ef2c <CyU3PUibEPEvtHandler+0x26c>
4001ef08:	e5810004 	str	r0, [r1, #4]
4001ef0c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ef10:	e0031000 	.word	0xe0031000
4001ef14:	40030da0 	.word	0x40030da0
4001ef18:	e0031418 	.word	0xe0031418
4001ef1c:	40030d98 	.word	0x40030d98
4001ef20:	40030d9c 	.word	0x40030d9c
4001ef24:	40031d60 	.word	0x40031d60
4001ef28:	e0031498 	.word	0xe0031498
4001ef2c:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ef30 <CyU3PUibInitVars>:
4001ef30:	e92d4010 	push	{r4, lr}
4001ef34:	e3a0207c 	mov	r2, #124	; 0x7c
4001ef38:	e3a01000 	mov	r1, #0
4001ef3c:	e59f0070 	ldr	r0, [pc, #112]	; 4001efb4 <CyU3PUibInitVars+0x84>
4001ef40:	ebff91dc 	bl	400036b8 <CyU3PMemSet>
4001ef44:	e3a02074 	mov	r2, #116	; 0x74
4001ef48:	e3a01000 	mov	r1, #0
4001ef4c:	e59f0064 	ldr	r0, [pc, #100]	; 4001efb8 <CyU3PUibInitVars+0x88>
4001ef50:	ebff91d8 	bl	400036b8 <CyU3PMemSet>
4001ef54:	e3a00000 	mov	r0, #0
4001ef58:	e59f105c 	ldr	r1, [pc, #92]	; 4001efbc <CyU3PUibInitVars+0x8c>
4001ef5c:	e5810000 	str	r0, [r1]
4001ef60:	e59f1058 	ldr	r1, [pc, #88]	; 4001efc0 <CyU3PUibInitVars+0x90>
4001ef64:	e5810000 	str	r0, [r1]
4001ef68:	e59f1054 	ldr	r1, [pc, #84]	; 4001efc4 <CyU3PUibInitVars+0x94>
4001ef6c:	e5810000 	str	r0, [r1]
4001ef70:	e59f1050 	ldr	r1, [pc, #80]	; 4001efc8 <CyU3PUibInitVars+0x98>
4001ef74:	e5810000 	str	r0, [r1]
4001ef78:	e59f104c 	ldr	r1, [pc, #76]	; 4001efcc <CyU3PUibInitVars+0x9c>
4001ef7c:	e5810000 	str	r0, [r1]
4001ef80:	e59f1048 	ldr	r1, [pc, #72]	; 4001efd0 <CyU3PUibInitVars+0xa0>
4001ef84:	e5810000 	str	r0, [r1]
4001ef88:	e59f1044 	ldr	r1, [pc, #68]	; 4001efd4 <CyU3PUibInitVars+0xa4>
4001ef8c:	e5810000 	str	r0, [r1]
4001ef90:	e59f1040 	ldr	r1, [pc, #64]	; 4001efd8 <CyU3PUibInitVars+0xa8>
4001ef94:	e5810000 	str	r0, [r1]
4001ef98:	e59f103c 	ldr	r1, [pc, #60]	; 4001efdc <CyU3PUibInitVars+0xac>
4001ef9c:	e5810000 	str	r0, [r1]
4001efa0:	e59f1038 	ldr	r1, [pc, #56]	; 4001efe0 <CyU3PUibInitVars+0xb0>
4001efa4:	e5810000 	str	r0, [r1]
4001efa8:	e59f1034 	ldr	r1, [pc, #52]	; 4001efe4 <CyU3PUibInitVars+0xb4>
4001efac:	e5810000 	str	r0, [r1]
4001efb0:	e8bd8010 	pop	{r4, pc}
4001efb4:	40031d60 	.word	0x40031d60
4001efb8:	40031fb8 	.word	0x40031fb8
4001efbc:	40030d80 	.word	0x40030d80
4001efc0:	40030d84 	.word	0x40030d84
4001efc4:	40030d88 	.word	0x40030d88
4001efc8:	40030dd4 	.word	0x40030dd4
4001efcc:	40030dbc 	.word	0x40030dbc
4001efd0:	40030dc0 	.word	0x40030dc0
4001efd4:	40030dc4 	.word	0x40030dc4
4001efd8:	40030d98 	.word	0x40030d98
4001efdc:	40030d9c 	.word	0x40030d9c
4001efe0:	40030da0 	.word	0x40030da0
4001efe4:	40030d60 	.word	0x40030d60

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001efe8 <CyU3PUibLnkErrClrTimerCb>:
4001efe8:	e92d4010 	push	{r4, lr}
4001efec:	e1a04000 	mov	r4, r0
4001eff0:	ebfff82d 	bl	4001d0ac <CyU3PUsbGetSpeed>
4001eff4:	e3500003 	cmp	r0, #3
4001eff8:	1a000003 	bne	4001f00c <CyU3PUibLnkErrClrTimerCb+0x24>
4001effc:	e59f000c 	ldr	r0, [pc, #12]	; 4001f010 <CyU3PUibLnkErrClrTimerCb+0x28>
4001f000:	e5900014 	ldr	r0, [r0, #20]
4001f004:	e59f1008 	ldr	r1, [pc, #8]	; 4001f014 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001f008:	e5810000 	str	r0, [r1]
4001f00c:	e8bd8010 	pop	{r4, pc}
4001f010:	e0033000 	.word	0xe0033000
4001f014:	40030da4 	.word	0x40030da4

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001f018 <CyU3PUibLnkIntrEvtHandler>:
4001f018:	e92d4010 	push	{r4, lr}
4001f01c:	e59f008c 	ldr	r0, [pc, #140]	; 4001f0b0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001f020:	e5904004 	ldr	r4, [r0, #4]
4001f024:	e3140902 	tst	r4, #32768	; 0x8000
4001f028:	0a00000b 	beq	4001f05c <CyU3PUibLnkIntrEvtHandler+0x44>
4001f02c:	e59f0080 	ldr	r0, [pc, #128]	; 4001f0b4 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001f030:	e5900000 	ldr	r0, [r0]
4001f034:	e59f1074 	ldr	r1, [pc, #116]	; 4001f0b0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001f038:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001f03c:	eb000859 	bl	400211a8 <CyU3PUsbSSConnecthandler>
4001f040:	e3a00902 	mov	r0, #32768	; 0x8000
4001f044:	e59f1064 	ldr	r1, [pc, #100]	; 4001f0b0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001f048:	e5810004 	str	r0, [r1, #4]
4001f04c:	e1c10000 	bic	r0, r1, r0
4001f050:	e5900008 	ldr	r0, [r0, #8]
4001f054:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001f058:	e5810008 	str	r0, [r1, #8]
4001f05c:	e3140801 	tst	r4, #65536	; 0x10000
4001f060:	0a000007 	beq	4001f084 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001f064:	eb0008cc 	bl	4002139c <CyU3PUsbSSDisConnecthandler>
4001f068:	e3a00801 	mov	r0, #65536	; 0x10000
4001f06c:	e59f103c 	ldr	r1, [pc, #60]	; 4001f0b0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001f070:	e5810004 	str	r0, [r1, #4]
4001f074:	e1810000 	orr	r0, r1, r0
4001f078:	e5900008 	ldr	r0, [r0, #8]
4001f07c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001f080:	e5810008 	str	r0, [r1, #8]
4001f084:	e3140802 	tst	r4, #131072	; 0x20000
4001f088:	0a000007 	beq	4001f0ac <CyU3PUibLnkIntrEvtHandler+0x94>
4001f08c:	eb000926 	bl	4002152c <CyU3PUsbSSReset>
4001f090:	e3a00802 	mov	r0, #131072	; 0x20000
4001f094:	e59f1014 	ldr	r1, [pc, #20]	; 4001f0b0 <CyU3PUibLnkIntrEvtHandler+0x98>
4001f098:	e5810004 	str	r0, [r1, #4]
4001f09c:	e1810000 	orr	r0, r1, r0
4001f0a0:	e5900008 	ldr	r0, [r0, #8]
4001f0a4:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001f0a8:	e5810008 	str	r0, [r1, #8]
4001f0ac:	e8bd8010 	pop	{r4, pc}
4001f0b0:	e0033000 	.word	0xe0033000
4001f0b4:	40030dac 	.word	0x40030dac

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001f0b8 <CyU3PUibProtEpIntrEvtHandler>:
4001f0b8:	e92d4070 	push	{r4, r5, r6, lr}
4001f0bc:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f478 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001f0c0:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001f0c4:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f478 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001f0c8:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001f0cc:	e0005001 	and	r5, r0, r1
4001f0d0:	e3a04001 	mov	r4, #1
4001f0d4:	ea0000df 	b	4001f458 <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001f0d8:	e3a00001 	mov	r0, #1
4001f0dc:	e1150410 	tst	r5, r0, lsl r4
4001f0e0:	0a000081 	beq	4001f2ec <CyU3PUibProtEpIntrEvtHandler+0x234>
4001f0e4:	e59f0390 	ldr	r0, [pc, #912]	; 4001f47c <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f0e8:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f0ec:	e3160901 	tst	r6, #16384	; 0x4000
4001f0f0:	0a00002a 	beq	4001f1a0 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f0f4:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f0f8:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f0fc:	e3800002 	orr	r0, r0, #2
4001f100:	e59f1374 	ldr	r1, [pc, #884]	; 4001f47c <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f104:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f108:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001f10c:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f110:	e1a01802 	lsl	r1, r2, #16
4001f114:	e1a01821 	lsr	r1, r1, #16
4001f118:	e20420ff 	and	r2, r4, #255	; 0xff
4001f11c:	e3820080 	orr	r0, r2, #128	; 0x80
4001f120:	ebfffa90 	bl	4001db68 <CyU3PUsbSendNrdy>
4001f124:	e20410ff 	and	r1, r4, #255	; 0xff
4001f128:	e3810080 	orr	r0, r1, #128	; 0x80
4001f12c:	ebfff9a1 	bl	4001d7b8 <CyU3PUsbResetEp>
4001f130:	e3a0000a 	mov	r0, #10
4001f134:	ebffd20c 	bl	4001396c <CyU3PBusyWait>
4001f138:	e59f2340 	ldr	r2, [pc, #832]	; 4001f480 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001f13c:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f140:	e1a01802 	lsl	r1, r2, #16
4001f144:	e1a01821 	lsr	r1, r1, #16
4001f148:	e20420ff 	and	r2, r4, #255	; 0xff
4001f14c:	e3820080 	orr	r0, r2, #128	; 0x80
4001f150:	ebfffa47 	bl	4001da74 <CyU3PUsbSendErdy>
4001f154:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001f158:	e59f131c 	ldr	r1, [pc, #796]	; 4001f47c <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f15c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f160:	e59f031c 	ldr	r0, [pc, #796]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f164:	e5900000 	ldr	r0, [r0]
4001f168:	e3100020 	tst	r0, #32
4001f16c:	0a00000b 	beq	4001f1a0 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f170:	e3a00001 	mov	r0, #1
4001f174:	e59f130c 	ldr	r1, [pc, #780]	; 4001f488 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f178:	e5911000 	ldr	r1, [r1]
4001f17c:	e1110410 	tst	r1, r0, lsl r4
4001f180:	0a000006 	beq	4001f1a0 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f184:	e20400ff 	and	r0, r4, #255	; 0xff
4001f188:	e3802080 	orr	r2, r0, #128	; 0x80
4001f18c:	e3a01003 	mov	r1, #3
4001f190:	e3a00020 	mov	r0, #32
4001f194:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f198:	e5933000 	ldr	r3, [r3]
4001f19c:	e12fff33 	blx	r3
4001f1a0:	e3160801 	tst	r6, #65536	; 0x10000
4001f1a4:	0a000004 	beq	4001f1bc <CyU3PUibProtEpIntrEvtHandler+0x104>
4001f1a8:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f1ac:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f1b0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001f1b4:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f47c <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f1b8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f1bc:	e3a00001 	mov	r0, #1
4001f1c0:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f488 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f1c4:	e5911000 	ldr	r1, [r1]
4001f1c8:	e1110410 	tst	r1, r0, lsl r4
4001f1cc:	0a000044 	beq	4001f2e4 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f1d0:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1d4:	e5900000 	ldr	r0, [r0]
4001f1d8:	e3500000 	cmp	r0, #0
4001f1dc:	0a000040 	beq	4001f2e4 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f1e0:	e59f029c 	ldr	r0, [pc, #668]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1e4:	e5900000 	ldr	r0, [r0]
4001f1e8:	e3100001 	tst	r0, #1
4001f1ec:	0a000008 	beq	4001f214 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f1f0:	e3160b01 	tst	r6, #1024	; 0x400
4001f1f4:	0a000006 	beq	4001f214 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f1f8:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1fc:	e3802080 	orr	r2, r0, #128	; 0x80
4001f200:	e3a01003 	mov	r1, #3
4001f204:	e3a00001 	mov	r0, #1
4001f208:	e59f327c 	ldr	r3, [pc, #636]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f20c:	e5933000 	ldr	r3, [r3]
4001f210:	e12fff33 	blx	r3
4001f214:	e59f0268 	ldr	r0, [pc, #616]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f218:	e5900000 	ldr	r0, [r0]
4001f21c:	e3100002 	tst	r0, #2
4001f220:	0a000008 	beq	4001f248 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f224:	e3160a01 	tst	r6, #4096	; 0x1000
4001f228:	0a000006 	beq	4001f248 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f22c:	e20400ff 	and	r0, r4, #255	; 0xff
4001f230:	e3802080 	orr	r2, r0, #128	; 0x80
4001f234:	e3a01003 	mov	r1, #3
4001f238:	e3a00002 	mov	r0, #2
4001f23c:	e59f3248 	ldr	r3, [pc, #584]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f240:	e5933000 	ldr	r3, [r3]
4001f244:	e12fff33 	blx	r3
4001f248:	e59f0234 	ldr	r0, [pc, #564]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f24c:	e5900000 	ldr	r0, [r0]
4001f250:	e3100004 	tst	r0, #4
4001f254:	0a000008 	beq	4001f27c <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f258:	e3160a02 	tst	r6, #8192	; 0x2000
4001f25c:	0a000006 	beq	4001f27c <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f260:	e20400ff 	and	r0, r4, #255	; 0xff
4001f264:	e3802080 	orr	r2, r0, #128	; 0x80
4001f268:	e3a01003 	mov	r1, #3
4001f26c:	e3a00004 	mov	r0, #4
4001f270:	e59f3214 	ldr	r3, [pc, #532]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f274:	e5933000 	ldr	r3, [r3]
4001f278:	e12fff33 	blx	r3
4001f27c:	e59f0200 	ldr	r0, [pc, #512]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f280:	e5900000 	ldr	r0, [r0]
4001f284:	e3100010 	tst	r0, #16
4001f288:	0a000008 	beq	4001f2b0 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f28c:	e3160c02 	tst	r6, #512	; 0x200
4001f290:	0a000006 	beq	4001f2b0 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f294:	e20400ff 	and	r0, r4, #255	; 0xff
4001f298:	e3802080 	orr	r2, r0, #128	; 0x80
4001f29c:	e3a01003 	mov	r1, #3
4001f2a0:	e3a00010 	mov	r0, #16
4001f2a4:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2a8:	e5933000 	ldr	r3, [r3]
4001f2ac:	e12fff33 	blx	r3
4001f2b0:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2b4:	e5900000 	ldr	r0, [r0]
4001f2b8:	e3100040 	tst	r0, #64	; 0x40
4001f2bc:	0a000008 	beq	4001f2e4 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f2c0:	e3160802 	tst	r6, #131072	; 0x20000
4001f2c4:	0a000006 	beq	4001f2e4 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f2c8:	e20400ff 	and	r0, r4, #255	; 0xff
4001f2cc:	e3802080 	orr	r2, r0, #128	; 0x80
4001f2d0:	e3a01003 	mov	r1, #3
4001f2d4:	e3a00040 	mov	r0, #64	; 0x40
4001f2d8:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2dc:	e5933000 	ldr	r3, [r3]
4001f2e0:	e12fff33 	blx	r3
4001f2e4:	e59f0190 	ldr	r0, [pc, #400]	; 4001f47c <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f2e8:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f2ec:	e2840010 	add	r0, r4, #16
4001f2f0:	e3a01001 	mov	r1, #1
4001f2f4:	e1150011 	tst	r5, r1, lsl r0
4001f2f8:	0a000055 	beq	4001f454 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001f2fc:	e59f018c 	ldr	r0, [pc, #396]	; 4001f490 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f300:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f304:	e2840010 	add	r0, r4, #16
4001f308:	e1a00011 	lsl	r0, r1, r0
4001f30c:	e59f1174 	ldr	r1, [pc, #372]	; 4001f488 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f310:	e5911000 	ldr	r1, [r1]
4001f314:	e1100001 	tst	r0, r1
4001f318:	0a00004b 	beq	4001f44c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f31c:	e59f0168 	ldr	r0, [pc, #360]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f320:	e5900000 	ldr	r0, [r0]
4001f324:	e3500000 	cmp	r0, #0
4001f328:	0a000047 	beq	4001f44c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f32c:	e59f0150 	ldr	r0, [pc, #336]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f330:	e5900000 	ldr	r0, [r0]
4001f334:	e3100001 	tst	r0, #1
4001f338:	0a000007 	beq	4001f35c <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f33c:	e3160b01 	tst	r6, #1024	; 0x400
4001f340:	0a000005 	beq	4001f35c <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f344:	e20420ff 	and	r2, r4, #255	; 0xff
4001f348:	e3a01003 	mov	r1, #3
4001f34c:	e3a00001 	mov	r0, #1
4001f350:	e59f3134 	ldr	r3, [pc, #308]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f354:	e5933000 	ldr	r3, [r3]
4001f358:	e12fff33 	blx	r3
4001f35c:	e59f0120 	ldr	r0, [pc, #288]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f360:	e5900000 	ldr	r0, [r0]
4001f364:	e3100002 	tst	r0, #2
4001f368:	0a000007 	beq	4001f38c <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f36c:	e3160a01 	tst	r6, #4096	; 0x1000
4001f370:	0a000005 	beq	4001f38c <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f374:	e20420ff 	and	r2, r4, #255	; 0xff
4001f378:	e3a01003 	mov	r1, #3
4001f37c:	e3a00002 	mov	r0, #2
4001f380:	e59f3104 	ldr	r3, [pc, #260]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f384:	e5933000 	ldr	r3, [r3]
4001f388:	e12fff33 	blx	r3
4001f38c:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f390:	e5900000 	ldr	r0, [r0]
4001f394:	e3100004 	tst	r0, #4
4001f398:	0a000007 	beq	4001f3bc <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f39c:	e3160a02 	tst	r6, #8192	; 0x2000
4001f3a0:	0a000005 	beq	4001f3bc <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f3a4:	e20420ff 	and	r2, r4, #255	; 0xff
4001f3a8:	e3a01003 	mov	r1, #3
4001f3ac:	e3a00004 	mov	r0, #4
4001f3b0:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f3b4:	e5933000 	ldr	r3, [r3]
4001f3b8:	e12fff33 	blx	r3
4001f3bc:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f3c0:	e5900000 	ldr	r0, [r0]
4001f3c4:	e3100010 	tst	r0, #16
4001f3c8:	0a000007 	beq	4001f3ec <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f3cc:	e3160c02 	tst	r6, #512	; 0x200
4001f3d0:	0a000005 	beq	4001f3ec <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f3d4:	e20420ff 	and	r2, r4, #255	; 0xff
4001f3d8:	e3a01003 	mov	r1, #3
4001f3dc:	e3a00010 	mov	r0, #16
4001f3e0:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f3e4:	e5933000 	ldr	r3, [r3]
4001f3e8:	e12fff33 	blx	r3
4001f3ec:	e59f0090 	ldr	r0, [pc, #144]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f3f0:	e5900000 	ldr	r0, [r0]
4001f3f4:	e3100040 	tst	r0, #64	; 0x40
4001f3f8:	0a000007 	beq	4001f41c <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f3fc:	e3160802 	tst	r6, #131072	; 0x20000
4001f400:	0a000005 	beq	4001f41c <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f404:	e20420ff 	and	r2, r4, #255	; 0xff
4001f408:	e3a01003 	mov	r1, #3
4001f40c:	e3a00040 	mov	r0, #64	; 0x40
4001f410:	e59f3074 	ldr	r3, [pc, #116]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f414:	e5933000 	ldr	r3, [r3]
4001f418:	e12fff33 	blx	r3
4001f41c:	e59f0060 	ldr	r0, [pc, #96]	; 4001f484 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f420:	e5900000 	ldr	r0, [r0]
4001f424:	e3100020 	tst	r0, #32
4001f428:	0a000007 	beq	4001f44c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f42c:	e3160901 	tst	r6, #16384	; 0x4000
4001f430:	0a000005 	beq	4001f44c <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f434:	e20420ff 	and	r2, r4, #255	; 0xff
4001f438:	e3a01003 	mov	r1, #3
4001f43c:	e3a00020 	mov	r0, #32
4001f440:	e59f3044 	ldr	r3, [pc, #68]	; 4001f48c <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f444:	e5933000 	ldr	r3, [r3]
4001f448:	e12fff33 	blx	r3
4001f44c:	e59f003c 	ldr	r0, [pc, #60]	; 4001f490 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f450:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f454:	e2844001 	add	r4, r4, #1
4001f458:	e3540010 	cmp	r4, #16
4001f45c:	baffff1d 	blt	4001f0d8 <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f460:	e59f002c 	ldr	r0, [pc, #44]	; 4001f494 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f464:	e5900004 	ldr	r0, [r0, #4]
4001f468:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f46c:	e59f1020 	ldr	r1, [pc, #32]	; 4001f494 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f470:	e5810004 	str	r0, [r1, #4]
4001f474:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f478:	e0033000 	.word	0xe0033000
4001f47c:	e0033500 	.word	0xe0033500
4001f480:	e00335c0 	.word	0xe00335c0
4001f484:	40030d9c 	.word	0x40030d9c
4001f488:	40030da0 	.word	0x40030da0
4001f48c:	40030d98 	.word	0x40030d98
4001f490:	e0033600 	.word	0xe0033600
4001f494:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f498 <CyU3PUibProtIntrEvtHandler>:
4001f498:	e92d4010 	push	{r4, lr}
4001f49c:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f574 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4a0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f4a4:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f574 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4a8:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f4ac:	e0004001 	and	r4, r0, r1
4001f4b0:	e3140c02 	tst	r4, #512	; 0x200
4001f4b4:	0a000006 	beq	4001f4d4 <CyU3PUibProtIntrEvtHandler+0x3c>
4001f4b8:	e3a00c02 	mov	r0, #512	; 0x200
4001f4bc:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f574 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4c0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f4c4:	e3a00001 	mov	r0, #1
4001f4c8:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f578 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f4cc:	e5810014 	str	r0, [r1, #20]
4001f4d0:	eb0008ff 	bl	400218d4 <CyU3PUsbSetupCommand>
4001f4d4:	e3140901 	tst	r4, #16384	; 0x4000
4001f4d8:	0a00000a 	beq	4001f508 <CyU3PUibProtIntrEvtHandler+0x70>
4001f4dc:	e59f0090 	ldr	r0, [pc, #144]	; 4001f574 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4e0:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f4e4:	e3c00004 	bic	r0, r0, #4
4001f4e8:	e59f1084 	ldr	r1, [pc, #132]	; 4001f574 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4ec:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f4f0:	e1a00001 	mov	r0, r1
4001f4f4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f4f8:	e3c00004 	bic	r0, r0, #4
4001f4fc:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f500:	e3a00901 	mov	r0, #16384	; 0x4000
4001f504:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f508:	e3140b02 	tst	r4, #2048	; 0x800
4001f50c:	0a000012 	beq	4001f55c <CyU3PUibProtIntrEvtHandler+0xc4>
4001f510:	e59f0060 	ldr	r0, [pc, #96]	; 4001f578 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f514:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f518:	e3500000 	cmp	r0, #0
4001f51c:	0a00000b 	beq	4001f550 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f520:	e59f0054 	ldr	r0, [pc, #84]	; 4001f57c <CyU3PUibProtIntrEvtHandler+0xe4>
4001f524:	e5900000 	ldr	r0, [r0]
4001f528:	e3500000 	cmp	r0, #0
4001f52c:	0a000004 	beq	4001f544 <CyU3PUibProtIntrEvtHandler+0xac>
4001f530:	e3a01000 	mov	r1, #0
4001f534:	e3a0000a 	mov	r0, #10
4001f538:	e59f203c 	ldr	r2, [pc, #60]	; 4001f57c <CyU3PUibProtIntrEvtHandler+0xe4>
4001f53c:	e5922000 	ldr	r2, [r2]
4001f540:	e12fff32 	blx	r2
4001f544:	e3a00000 	mov	r0, #0
4001f548:	e59f1028 	ldr	r1, [pc, #40]	; 4001f578 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f54c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f550:	e3a00b02 	mov	r0, #2048	; 0x800
4001f554:	e59f1018 	ldr	r1, [pc, #24]	; 4001f574 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f558:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f55c:	e59f001c 	ldr	r0, [pc, #28]	; 4001f580 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f560:	e5900004 	ldr	r0, [r0, #4]
4001f564:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f568:	e59f1010 	ldr	r1, [pc, #16]	; 4001f580 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f56c:	e5810004 	str	r0, [r1, #4]
4001f570:	e8bd8010 	pop	{r4, pc}
4001f574:	e0033000 	.word	0xe0033000
4001f578:	40031d60 	.word	0x40031d60
4001f57c:	40030dbc 	.word	0x40030dbc
4001f580:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f584 <CyU3PUibSendDescr>:
4001f584:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f588:	e1a04000 	mov	r4, r0
4001f58c:	e1a05001 	mov	r5, r1
4001f590:	e3a06000 	mov	r6, #0
4001f594:	e3a07000 	mov	r7, #0
4001f598:	e3a08000 	mov	r8, #0
4001f59c:	e3a09000 	mov	r9, #0
4001f5a0:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001fb8c <CyU3PUibSendDescr+0x608>
4001f5a4:	e0000825 	and	r0, r0, r5, lsr #16
4001f5a8:	e58d0000 	str	r0, [sp]
4001f5ac:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f5b0:	e5d00009 	ldrb	r0, [r0, #9]
4001f5b4:	e3500003 	cmp	r0, #3
4001f5b8:	1a000001 	bne	4001f5c4 <CyU3PUibSendDescr+0x40>
4001f5bc:	e3a00c02 	mov	r0, #512	; 0x200
4001f5c0:	ea000000 	b	4001f5c8 <CyU3PUibSendDescr+0x44>
4001f5c4:	e3a00040 	mov	r0, #64	; 0x40
4001f5c8:	e1a0a800 	lsl	sl, r0, #16
4001f5cc:	e1a0a82a 	lsr	sl, sl, #16
4001f5d0:	e1a00c24 	lsr	r0, r4, #24
4001f5d4:	e3500006 	cmp	r0, #6
4001f5d8:	0a0000b4 	beq	4001f8b0 <CyU3PUibSendDescr+0x32c>
4001f5dc:	ca000006 	bgt	4001f5fc <CyU3PUibSendDescr+0x78>
4001f5e0:	e3500001 	cmp	r0, #1
4001f5e4:	0a00000b 	beq	4001f618 <CyU3PUibSendDescr+0x94>
4001f5e8:	e3500002 	cmp	r0, #2
4001f5ec:	0a000020 	beq	4001f674 <CyU3PUibSendDescr+0xf0>
4001f5f0:	e3500003 	cmp	r0, #3
4001f5f4:	1a00013b 	bne	4001fae8 <CyU3PUibSendDescr+0x564>
4001f5f8:	ea00007b 	b	4001f7ec <CyU3PUibSendDescr+0x268>
4001f5fc:	e3500007 	cmp	r0, #7
4001f600:	0a0000b8 	beq	4001f8e8 <CyU3PUibSendDescr+0x364>
4001f604:	e3500009 	cmp	r0, #9
4001f608:	0a000122 	beq	4001fa98 <CyU3PUibSendDescr+0x514>
4001f60c:	e350000f 	cmp	r0, #15
4001f610:	1a000134 	bne	4001fae8 <CyU3PUibSendDescr+0x564>
4001f614:	ea0000f6 	b	4001f9f4 <CyU3PUibSendDescr+0x470>
4001f618:	e1a00000 	nop			; (mov r0, r0)
4001f61c:	e59f056c 	ldr	r0, [pc, #1388]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f620:	e5d00009 	ldrb	r0, [r0, #9]
4001f624:	e3500003 	cmp	r0, #3
4001f628:	1a000008 	bne	4001f650 <CyU3PUibSendDescr+0xcc>
4001f62c:	e59f0560 	ldr	r0, [pc, #1376]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f630:	e5900004 	ldr	r0, [r0, #4]
4001f634:	e3500000 	cmp	r0, #0
4001f638:	0a00000c 	beq	4001f670 <CyU3PUibSendDescr+0xec>
4001f63c:	e3a09001 	mov	r9, #1
4001f640:	e3a06012 	mov	r6, #18
4001f644:	e59f0548 	ldr	r0, [pc, #1352]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f648:	e5908004 	ldr	r8, [r0, #4]
4001f64c:	ea000007 	b	4001f670 <CyU3PUibSendDescr+0xec>
4001f650:	e59f053c 	ldr	r0, [pc, #1340]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f654:	e5900000 	ldr	r0, [r0]
4001f658:	e3500000 	cmp	r0, #0
4001f65c:	0a000003 	beq	4001f670 <CyU3PUibSendDescr+0xec>
4001f660:	e3a09001 	mov	r9, #1
4001f664:	e3a06012 	mov	r6, #18
4001f668:	e59f0524 	ldr	r0, [pc, #1316]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f66c:	e5908000 	ldr	r8, [r0]
4001f670:	ea000128 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001f674:	e1a00000 	nop			; (mov r0, r0)
4001f678:	e59f0510 	ldr	r0, [pc, #1296]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f67c:	e5d00009 	ldrb	r0, [r0, #9]
4001f680:	e3500002 	cmp	r0, #2
4001f684:	1a00001a 	bne	4001f6f4 <CyU3PUibSendDescr+0x170>
4001f688:	e59f0504 	ldr	r0, [pc, #1284]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f68c:	e5900014 	ldr	r0, [r0, #20]
4001f690:	e3500000 	cmp	r0, #0
4001f694:	0a00004f 	beq	4001f7d8 <CyU3PUibSendDescr+0x254>
4001f698:	e3a09001 	mov	r9, #1
4001f69c:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f6a0:	e5908014 	ldr	r8, [r0, #20]
4001f6a4:	e5900014 	ldr	r0, [r0, #20]
4001f6a8:	e5d00002 	ldrb	r0, [r0, #2]
4001f6ac:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f6b0:	e5911014 	ldr	r1, [r1, #20]
4001f6b4:	e5d11003 	ldrb	r1, [r1, #3]
4001f6b8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6bc:	e1500825 	cmp	r0, r5, lsr #16
4001f6c0:	2a000007 	bcs	4001f6e4 <CyU3PUibSendDescr+0x160>
4001f6c4:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f6c8:	e5900014 	ldr	r0, [r0, #20]
4001f6cc:	e5d00002 	ldrb	r0, [r0, #2]
4001f6d0:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f6d4:	e5911014 	ldr	r1, [r1, #20]
4001f6d8:	e5d11003 	ldrb	r1, [r1, #3]
4001f6dc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6e0:	ea000000 	b	4001f6e8 <CyU3PUibSendDescr+0x164>
4001f6e4:	e1a00825 	lsr	r0, r5, #16
4001f6e8:	e1a06800 	lsl	r6, r0, #16
4001f6ec:	e1a06826 	lsr	r6, r6, #16
4001f6f0:	ea000038 	b	4001f7d8 <CyU3PUibSendDescr+0x254>
4001f6f4:	e59f0494 	ldr	r0, [pc, #1172]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f6f8:	e5d00009 	ldrb	r0, [r0, #9]
4001f6fc:	e3500001 	cmp	r0, #1
4001f700:	1a00001a 	bne	4001f770 <CyU3PUibSendDescr+0x1ec>
4001f704:	e59f0488 	ldr	r0, [pc, #1160]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f708:	e5900018 	ldr	r0, [r0, #24]
4001f70c:	e3500000 	cmp	r0, #0
4001f710:	0a000030 	beq	4001f7d8 <CyU3PUibSendDescr+0x254>
4001f714:	e3a09001 	mov	r9, #1
4001f718:	e59f0474 	ldr	r0, [pc, #1140]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f71c:	e5908018 	ldr	r8, [r0, #24]
4001f720:	e5900018 	ldr	r0, [r0, #24]
4001f724:	e5d00002 	ldrb	r0, [r0, #2]
4001f728:	e59f1464 	ldr	r1, [pc, #1124]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f72c:	e5911018 	ldr	r1, [r1, #24]
4001f730:	e5d11003 	ldrb	r1, [r1, #3]
4001f734:	e1800401 	orr	r0, r0, r1, lsl #8
4001f738:	e1500825 	cmp	r0, r5, lsr #16
4001f73c:	2a000007 	bcs	4001f760 <CyU3PUibSendDescr+0x1dc>
4001f740:	e59f044c 	ldr	r0, [pc, #1100]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f744:	e5900018 	ldr	r0, [r0, #24]
4001f748:	e5d00002 	ldrb	r0, [r0, #2]
4001f74c:	e59f1440 	ldr	r1, [pc, #1088]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f750:	e5911018 	ldr	r1, [r1, #24]
4001f754:	e5d11003 	ldrb	r1, [r1, #3]
4001f758:	e1800401 	orr	r0, r0, r1, lsl #8
4001f75c:	ea000000 	b	4001f764 <CyU3PUibSendDescr+0x1e0>
4001f760:	e1a00825 	lsr	r0, r5, #16
4001f764:	e1a06800 	lsl	r6, r0, #16
4001f768:	e1a06826 	lsr	r6, r6, #16
4001f76c:	ea000019 	b	4001f7d8 <CyU3PUibSendDescr+0x254>
4001f770:	e59f041c 	ldr	r0, [pc, #1052]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f774:	e590001c 	ldr	r0, [r0, #28]
4001f778:	e3500000 	cmp	r0, #0
4001f77c:	0a000015 	beq	4001f7d8 <CyU3PUibSendDescr+0x254>
4001f780:	e3a09001 	mov	r9, #1
4001f784:	e59f0408 	ldr	r0, [pc, #1032]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f788:	e590801c 	ldr	r8, [r0, #28]
4001f78c:	e590001c 	ldr	r0, [r0, #28]
4001f790:	e5d00002 	ldrb	r0, [r0, #2]
4001f794:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f798:	e591101c 	ldr	r1, [r1, #28]
4001f79c:	e5d11003 	ldrb	r1, [r1, #3]
4001f7a0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f7a4:	e1500825 	cmp	r0, r5, lsr #16
4001f7a8:	2a000007 	bcs	4001f7cc <CyU3PUibSendDescr+0x248>
4001f7ac:	e59f03e0 	ldr	r0, [pc, #992]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f7b0:	e590001c 	ldr	r0, [r0, #28]
4001f7b4:	e5d00002 	ldrb	r0, [r0, #2]
4001f7b8:	e59f13d4 	ldr	r1, [pc, #980]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f7bc:	e591101c 	ldr	r1, [r1, #28]
4001f7c0:	e5d11003 	ldrb	r1, [r1, #3]
4001f7c4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f7c8:	ea000000 	b	4001f7d0 <CyU3PUibSendDescr+0x24c>
4001f7cc:	e1a00825 	lsr	r0, r5, #16
4001f7d0:	e1a06800 	lsl	r6, r0, #16
4001f7d4:	e1a06826 	lsr	r6, r6, #16
4001f7d8:	e3580000 	cmp	r8, #0
4001f7dc:	0a000001 	beq	4001f7e8 <CyU3PUibSendDescr+0x264>
4001f7e0:	e3a00002 	mov	r0, #2
4001f7e4:	e5c80001 	strb	r0, [r8, #1]
4001f7e8:	ea0000ca 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001f7ec:	e1a00000 	nop			; (mov r0, r0)
4001f7f0:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f7f4:	e1a0b820 	lsr	fp, r0, #16
4001f7f8:	e35b0010 	cmp	fp, #16
4001f7fc:	ca000003 	bgt	4001f810 <CyU3PUibSendDescr+0x28c>
4001f800:	e59f0390 	ldr	r0, [pc, #912]	; 4001fb98 <CyU3PUibSendDescr+0x614>
4001f804:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f808:	e3500000 	cmp	r0, #0
4001f80c:	1a000013 	bne	4001f860 <CyU3PUibSendDescr+0x2dc>
4001f810:	e59f0378 	ldr	r0, [pc, #888]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f814:	e5d00007 	ldrb	r0, [r0, #7]
4001f818:	e3500001 	cmp	r0, #1
4001f81c:	0a000022 	beq	4001f8ac <CyU3PUibSendDescr+0x328>
4001f820:	e59f0374 	ldr	r0, [pc, #884]	; 4001fb9c <CyU3PUibSendDescr+0x618>
4001f824:	e5900000 	ldr	r0, [r0]
4001f828:	e3500000 	cmp	r0, #0
4001f82c:	0a00001e 	beq	4001f8ac <CyU3PUibSendDescr+0x328>
4001f830:	e1a01005 	mov	r1, r5
4001f834:	e1a00004 	mov	r0, r4
4001f838:	e59f235c 	ldr	r2, [pc, #860]	; 4001fb9c <CyU3PUibSendDescr+0x618>
4001f83c:	e5922000 	ldr	r2, [r2]
4001f840:	e12fff32 	blx	r2
4001f844:	e1a09000 	mov	r9, r0
4001f848:	e3590000 	cmp	r9, #0
4001f84c:	0a000016 	beq	4001f8ac <CyU3PUibSendDescr+0x328>
4001f850:	e3a00001 	mov	r0, #1
4001f854:	e59f1334 	ldr	r1, [pc, #820]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f858:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f85c:	ea000012 	b	4001f8ac <CyU3PUibSendDescr+0x328>
4001f860:	e59f0330 	ldr	r0, [pc, #816]	; 4001fb98 <CyU3PUibSendDescr+0x614>
4001f864:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f868:	e5d00000 	ldrb	r0, [r0]
4001f86c:	e1500825 	cmp	r0, r5, lsr #16
4001f870:	2a000003 	bcs	4001f884 <CyU3PUibSendDescr+0x300>
4001f874:	e59f031c 	ldr	r0, [pc, #796]	; 4001fb98 <CyU3PUibSendDescr+0x614>
4001f878:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f87c:	e5d00000 	ldrb	r0, [r0]
4001f880:	ea000000 	b	4001f888 <CyU3PUibSendDescr+0x304>
4001f884:	e1a00825 	lsr	r0, r5, #16
4001f888:	e1a06800 	lsl	r6, r0, #16
4001f88c:	e1a06826 	lsr	r6, r6, #16
4001f890:	e59f0300 	ldr	r0, [pc, #768]	; 4001fb98 <CyU3PUibSendDescr+0x614>
4001f894:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f898:	e3500000 	cmp	r0, #0
4001f89c:	0a000002 	beq	4001f8ac <CyU3PUibSendDescr+0x328>
4001f8a0:	e3a09001 	mov	r9, #1
4001f8a4:	e59f02ec 	ldr	r0, [pc, #748]	; 4001fb98 <CyU3PUibSendDescr+0x614>
4001f8a8:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f8ac:	ea000099 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001f8b0:	e1a00000 	nop			; (mov r0, r0)
4001f8b4:	e59f02d8 	ldr	r0, [pc, #728]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f8b8:	e5900008 	ldr	r0, [r0, #8]
4001f8bc:	e3500000 	cmp	r0, #0
4001f8c0:	0a000007 	beq	4001f8e4 <CyU3PUibSendDescr+0x360>
4001f8c4:	e59f02c4 	ldr	r0, [pc, #708]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f8c8:	e5d00009 	ldrb	r0, [r0, #9]
4001f8cc:	e3500003 	cmp	r0, #3
4001f8d0:	0a000003 	beq	4001f8e4 <CyU3PUibSendDescr+0x360>
4001f8d4:	e3a09001 	mov	r9, #1
4001f8d8:	e3a0600a 	mov	r6, #10
4001f8dc:	e59f02b0 	ldr	r0, [pc, #688]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f8e0:	e5908008 	ldr	r8, [r0, #8]
4001f8e4:	ea00008b 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001f8e8:	e1a00000 	nop			; (mov r0, r0)
4001f8ec:	e59f029c 	ldr	r0, [pc, #668]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f8f0:	e5d00009 	ldrb	r0, [r0, #9]
4001f8f4:	e3500002 	cmp	r0, #2
4001f8f8:	1a00001a 	bne	4001f968 <CyU3PUibSendDescr+0x3e4>
4001f8fc:	e59f0290 	ldr	r0, [pc, #656]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f900:	e5900018 	ldr	r0, [r0, #24]
4001f904:	e3500000 	cmp	r0, #0
4001f908:	0a000034 	beq	4001f9e0 <CyU3PUibSendDescr+0x45c>
4001f90c:	e3a09001 	mov	r9, #1
4001f910:	e59f027c 	ldr	r0, [pc, #636]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f914:	e5908018 	ldr	r8, [r0, #24]
4001f918:	e5900018 	ldr	r0, [r0, #24]
4001f91c:	e5d00002 	ldrb	r0, [r0, #2]
4001f920:	e59f126c 	ldr	r1, [pc, #620]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f924:	e5911018 	ldr	r1, [r1, #24]
4001f928:	e5d11003 	ldrb	r1, [r1, #3]
4001f92c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f930:	e1500825 	cmp	r0, r5, lsr #16
4001f934:	2a000007 	bcs	4001f958 <CyU3PUibSendDescr+0x3d4>
4001f938:	e59f0254 	ldr	r0, [pc, #596]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f93c:	e5900018 	ldr	r0, [r0, #24]
4001f940:	e5d00002 	ldrb	r0, [r0, #2]
4001f944:	e59f1248 	ldr	r1, [pc, #584]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f948:	e5911018 	ldr	r1, [r1, #24]
4001f94c:	e5d11003 	ldrb	r1, [r1, #3]
4001f950:	e1800401 	orr	r0, r0, r1, lsl #8
4001f954:	ea000000 	b	4001f95c <CyU3PUibSendDescr+0x3d8>
4001f958:	e1a00825 	lsr	r0, r5, #16
4001f95c:	e1a06800 	lsl	r6, r0, #16
4001f960:	e1a06826 	lsr	r6, r6, #16
4001f964:	ea00001d 	b	4001f9e0 <CyU3PUibSendDescr+0x45c>
4001f968:	e59f0220 	ldr	r0, [pc, #544]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001f96c:	e5d00009 	ldrb	r0, [r0, #9]
4001f970:	e3500001 	cmp	r0, #1
4001f974:	1a000019 	bne	4001f9e0 <CyU3PUibSendDescr+0x45c>
4001f978:	e59f0214 	ldr	r0, [pc, #532]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f97c:	e5900014 	ldr	r0, [r0, #20]
4001f980:	e3500000 	cmp	r0, #0
4001f984:	0a000015 	beq	4001f9e0 <CyU3PUibSendDescr+0x45c>
4001f988:	e3a09001 	mov	r9, #1
4001f98c:	e59f0200 	ldr	r0, [pc, #512]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f990:	e5908014 	ldr	r8, [r0, #20]
4001f994:	e5900014 	ldr	r0, [r0, #20]
4001f998:	e5d00002 	ldrb	r0, [r0, #2]
4001f99c:	e59f11f0 	ldr	r1, [pc, #496]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f9a0:	e5911014 	ldr	r1, [r1, #20]
4001f9a4:	e5d11003 	ldrb	r1, [r1, #3]
4001f9a8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f9ac:	e1500825 	cmp	r0, r5, lsr #16
4001f9b0:	2a000007 	bcs	4001f9d4 <CyU3PUibSendDescr+0x450>
4001f9b4:	e59f01d8 	ldr	r0, [pc, #472]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f9b8:	e5900014 	ldr	r0, [r0, #20]
4001f9bc:	e5d00002 	ldrb	r0, [r0, #2]
4001f9c0:	e59f11cc 	ldr	r1, [pc, #460]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f9c4:	e5911014 	ldr	r1, [r1, #20]
4001f9c8:	e5d11003 	ldrb	r1, [r1, #3]
4001f9cc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f9d0:	ea000000 	b	4001f9d8 <CyU3PUibSendDescr+0x454>
4001f9d4:	e1a00825 	lsr	r0, r5, #16
4001f9d8:	e1a06800 	lsl	r6, r0, #16
4001f9dc:	e1a06826 	lsr	r6, r6, #16
4001f9e0:	e3580000 	cmp	r8, #0
4001f9e4:	0a000001 	beq	4001f9f0 <CyU3PUibSendDescr+0x46c>
4001f9e8:	e3a00007 	mov	r0, #7
4001f9ec:	e5c80001 	strb	r0, [r8, #1]
4001f9f0:	ea000048 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001f9f4:	e1a00000 	nop			; (mov r0, r0)
4001f9f8:	e59f0194 	ldr	r0, [pc, #404]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001f9fc:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001fa00:	e3500000 	cmp	r0, #0
4001fa04:	0a000022 	beq	4001fa94 <CyU3PUibSendDescr+0x510>
4001fa08:	e59f0180 	ldr	r0, [pc, #384]	; 4001fb90 <CyU3PUibSendDescr+0x60c>
4001fa0c:	e5d00009 	ldrb	r0, [r0, #9]
4001fa10:	e3500003 	cmp	r0, #3
4001fa14:	0a000008 	beq	4001fa3c <CyU3PUibSendDescr+0x4b8>
4001fa18:	e59f0174 	ldr	r0, [pc, #372]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fa1c:	e5900000 	ldr	r0, [r0]
4001fa20:	e3500000 	cmp	r0, #0
4001fa24:	0a00001a 	beq	4001fa94 <CyU3PUibSendDescr+0x510>
4001fa28:	e59f0164 	ldr	r0, [pc, #356]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fa2c:	e5900000 	ldr	r0, [r0]
4001fa30:	e5d00002 	ldrb	r0, [r0, #2]
4001fa34:	e3500010 	cmp	r0, #16
4001fa38:	1a000015 	bne	4001fa94 <CyU3PUibSendDescr+0x510>
4001fa3c:	e3a09001 	mov	r9, #1
4001fa40:	e59f014c 	ldr	r0, [pc, #332]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fa44:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001fa48:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001fa4c:	e5d00002 	ldrb	r0, [r0, #2]
4001fa50:	e59f113c 	ldr	r1, [pc, #316]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fa54:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001fa58:	e5d11003 	ldrb	r1, [r1, #3]
4001fa5c:	e1800401 	orr	r0, r0, r1, lsl #8
4001fa60:	e1500825 	cmp	r0, r5, lsr #16
4001fa64:	2a000007 	bcs	4001fa88 <CyU3PUibSendDescr+0x504>
4001fa68:	e59f0124 	ldr	r0, [pc, #292]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fa6c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001fa70:	e5d00002 	ldrb	r0, [r0, #2]
4001fa74:	e59f1118 	ldr	r1, [pc, #280]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fa78:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001fa7c:	e5d11003 	ldrb	r1, [r1, #3]
4001fa80:	e1800401 	orr	r0, r0, r1, lsl #8
4001fa84:	ea000000 	b	4001fa8c <CyU3PUibSendDescr+0x508>
4001fa88:	e1a00825 	lsr	r0, r5, #16
4001fa8c:	e1a06800 	lsl	r6, r0, #16
4001fa90:	e1a06826 	lsr	r6, r6, #16
4001fa94:	ea00001f 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001fa98:	e1a00000 	nop			; (mov r0, r0)
4001fa9c:	e59f00f0 	ldr	r0, [pc, #240]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001faa0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001faa4:	e3500000 	cmp	r0, #0
4001faa8:	0a00000d 	beq	4001fae4 <CyU3PUibSendDescr+0x560>
4001faac:	e3a09001 	mov	r9, #1
4001fab0:	e59f00dc 	ldr	r0, [pc, #220]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001fab4:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001fab8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001fabc:	e5d00000 	ldrb	r0, [r0]
4001fac0:	e1500825 	cmp	r0, r5, lsr #16
4001fac4:	2a000003 	bcs	4001fad8 <CyU3PUibSendDescr+0x554>
4001fac8:	e59f00c4 	ldr	r0, [pc, #196]	; 4001fb94 <CyU3PUibSendDescr+0x610>
4001facc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001fad0:	e5d00000 	ldrb	r0, [r0]
4001fad4:	ea000000 	b	4001fadc <CyU3PUibSendDescr+0x558>
4001fad8:	e1a00825 	lsr	r0, r5, #16
4001fadc:	e1a06800 	lsl	r6, r0, #16
4001fae0:	e1a06826 	lsr	r6, r6, #16
4001fae4:	ea00000b 	b	4001fb18 <CyU3PUibSendDescr+0x594>
4001fae8:	e1a00000 	nop			; (mov r0, r0)
4001faec:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fb9c <CyU3PUibSendDescr+0x618>
4001faf0:	e5900000 	ldr	r0, [r0]
4001faf4:	e3500000 	cmp	r0, #0
4001faf8:	0a000005 	beq	4001fb14 <CyU3PUibSendDescr+0x590>
4001fafc:	e1a01005 	mov	r1, r5
4001fb00:	e1a00004 	mov	r0, r4
4001fb04:	e59f2090 	ldr	r2, [pc, #144]	; 4001fb9c <CyU3PUibSendDescr+0x618>
4001fb08:	e5922000 	ldr	r2, [r2]
4001fb0c:	e12fff32 	blx	r2
4001fb10:	e1a09000 	mov	r9, r0
4001fb14:	e1a00000 	nop			; (mov r0, r0)
4001fb18:	e1a00000 	nop			; (mov r0, r0)
4001fb1c:	e3590001 	cmp	r9, #1
4001fb20:	1a000017 	bne	4001fb84 <CyU3PUibSendDescr+0x600>
4001fb24:	e3580000 	cmp	r8, #0
4001fb28:	0a000015 	beq	4001fb84 <CyU3PUibSendDescr+0x600>
4001fb2c:	e1a01008 	mov	r1, r8
4001fb30:	e1a00006 	mov	r0, r6
4001fb34:	ebfff758 	bl	4001d89c <CyU3PUsbSendEP0Data>
4001fb38:	e1a07000 	mov	r7, r0
4001fb3c:	e3570000 	cmp	r7, #0
4001fb40:	1a000009 	bne	4001fb6c <CyU3PUibSendDescr+0x5e8>
4001fb44:	e59d0000 	ldr	r0, [sp]
4001fb48:	e1560000 	cmp	r6, r0
4001fb4c:	aa000006 	bge	4001fb6c <CyU3PUibSendDescr+0x5e8>
4001fb50:	e24a0001 	sub	r0, sl, #1
4001fb54:	e1100006 	tst	r0, r6
4001fb58:	1a000003 	bne	4001fb6c <CyU3PUibSendDescr+0x5e8>
4001fb5c:	e1a01008 	mov	r1, r8
4001fb60:	e3a00000 	mov	r0, #0
4001fb64:	ebfff74c 	bl	4001d89c <CyU3PUsbSendEP0Data>
4001fb68:	e1a07000 	mov	r7, r0
4001fb6c:	e3570000 	cmp	r7, #0
4001fb70:	0a000003 	beq	4001fb84 <CyU3PUibSendDescr+0x600>
4001fb74:	e3a02000 	mov	r2, #0
4001fb78:	e3a01001 	mov	r1, #1
4001fb7c:	e1a00002 	mov	r0, r2
4001fb80:	ebfff970 	bl	4001e148 <CyU3PUsbStall>
4001fb84:	e1a00009 	mov	r0, r9
4001fb88:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001fb8c:	0000ffff 	.word	0x0000ffff
4001fb90:	40031d60 	.word	0x40031d60
4001fb94:	40031fb8 	.word	0x40031fb8
4001fb98:	40031fd8 	.word	0x40031fd8
4001fb9c:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PUibSocketInit:

4001fba0 <CyU3PUibSocketInit>:
4001fba0:	e3a00000 	mov	r0, #0
4001fba4:	ea00000d 	b	4001fbe0 <CyU3PUibSocketInit+0x40>
4001fba8:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fbac:	e59f2080 	ldr	r2, [pc, #128]	; 4001fc34 <CyU3PUibSocketInit+0x94>
4001fbb0:	e0822380 	add	r2, r2, r0, lsl #7
4001fbb4:	e582100c 	str	r1, [r2, #12]
4001fbb8:	e3e01000 	mvn	r1, #0
4001fbbc:	e59f2070 	ldr	r2, [pc, #112]	; 4001fc34 <CyU3PUibSocketInit+0x94>
4001fbc0:	e0822380 	add	r2, r2, r0, lsl #7
4001fbc4:	e5821010 	str	r1, [r2, #16]
4001fbc8:	e3a01000 	mov	r1, #0
4001fbcc:	e59f2060 	ldr	r2, [pc, #96]	; 4001fc34 <CyU3PUibSocketInit+0x94>
4001fbd0:	e0822380 	add	r2, r2, r0, lsl #7
4001fbd4:	e5821014 	str	r1, [r2, #20]
4001fbd8:	e2801001 	add	r1, r0, #1
4001fbdc:	e20100ff 	and	r0, r1, #255	; 0xff
4001fbe0:	e3500010 	cmp	r0, #16
4001fbe4:	baffffef 	blt	4001fba8 <CyU3PUibSocketInit+0x8>
4001fbe8:	e3a00000 	mov	r0, #0
4001fbec:	ea00000d 	b	4001fc28 <CyU3PUibSocketInit+0x88>
4001fbf0:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fbf4:	e59f203c 	ldr	r2, [pc, #60]	; 4001fc38 <CyU3PUibSocketInit+0x98>
4001fbf8:	e0822380 	add	r2, r2, r0, lsl #7
4001fbfc:	e582100c 	str	r1, [r2, #12]
4001fc00:	e3e01000 	mvn	r1, #0
4001fc04:	e59f202c 	ldr	r2, [pc, #44]	; 4001fc38 <CyU3PUibSocketInit+0x98>
4001fc08:	e0822380 	add	r2, r2, r0, lsl #7
4001fc0c:	e5821010 	str	r1, [r2, #16]
4001fc10:	e3a01000 	mov	r1, #0
4001fc14:	e59f201c 	ldr	r2, [pc, #28]	; 4001fc38 <CyU3PUibSocketInit+0x98>
4001fc18:	e0822380 	add	r2, r2, r0, lsl #7
4001fc1c:	e5821014 	str	r1, [r2, #20]
4001fc20:	e2801001 	add	r1, r0, #1
4001fc24:	e20100ff 	and	r0, r1, #255	; 0xff
4001fc28:	e3500010 	cmp	r0, #16
4001fc2c:	baffffef 	blt	4001fbf0 <CyU3PUibSocketInit+0x50>
4001fc30:	e12fff1e 	bx	lr
4001fc34:	e0038000 	.word	0xe0038000
4001fc38:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001fc3c <CyU3PUibStatusTimerCb>:
4001fc3c:	e92d4010 	push	{r4, lr}
4001fc40:	e1a04000 	mov	r4, r0
4001fc44:	e59f0050 	ldr	r0, [pc, #80]	; 4001fc9c <CyU3PUibStatusTimerCb+0x60>
4001fc48:	e5900000 	ldr	r0, [r0]
4001fc4c:	e3500000 	cmp	r0, #0
4001fc50:	0a000010 	beq	4001fc98 <CyU3PUibStatusTimerCb+0x5c>
4001fc54:	e59f0044 	ldr	r0, [pc, #68]	; 4001fca0 <CyU3PUibStatusTimerCb+0x64>
4001fc58:	e5d00009 	ldrb	r0, [r0, #9]
4001fc5c:	e3500003 	cmp	r0, #3
4001fc60:	1a00000c 	bne	4001fc98 <CyU3PUibStatusTimerCb+0x5c>
4001fc64:	e59f0038 	ldr	r0, [pc, #56]	; 4001fca4 <CyU3PUibStatusTimerCb+0x68>
4001fc68:	e5900000 	ldr	r0, [r0]
4001fc6c:	e3500000 	cmp	r0, #0
4001fc70:	0a000008 	beq	4001fc98 <CyU3PUibStatusTimerCb+0x5c>
4001fc74:	e3a01000 	mov	r1, #0
4001fc78:	e1a00001 	mov	r0, r1
4001fc7c:	ebfff77c 	bl	4001da74 <CyU3PUsbSendErdy>
4001fc80:	e3a02000 	mov	r2, #0
4001fc84:	e3a01064 	mov	r1, #100	; 0x64
4001fc88:	e59f0018 	ldr	r0, [pc, #24]	; 4001fca8 <CyU3PUibStatusTimerCb+0x6c>
4001fc8c:	ebffac2d 	bl	4000ad48 <_txe_timer_change>
4001fc90:	e59f0010 	ldr	r0, [pc, #16]	; 4001fca8 <CyU3PUibStatusTimerCb+0x6c>
4001fc94:	ebffac1b 	bl	4000ad08 <_txe_timer_activate>
4001fc98:	e8bd8010 	pop	{r4, pc}
4001fc9c:	40030dd0 	.word	0x40030dd0
4001fca0:	40031d60 	.word	0x40031d60
4001fca4:	40030dd4 	.word	0x40030dd4
4001fca8:	400326c0 	.word	0x400326c0

Disassembly of section i.CyU3PUibThreadEntry:

4001fcac <CyU3PUibThreadEntry>:
4001fcac:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001fcb0:	e3a05000 	mov	r5, #0
4001fcb4:	e59f505c 	ldr	r5, [pc, #92]	; 4001fd18 <CyU3PUibThreadEntry+0x6c>
4001fcb8:	e3a00001 	mov	r0, #1
4001fcbc:	e59f1058 	ldr	r1, [pc, #88]	; 4001fd1c <CyU3PUibThreadEntry+0x70>
4001fcc0:	e5810000 	str	r0, [r1]
4001fcc4:	e3a02020 	mov	r2, #32
4001fcc8:	e3a01000 	mov	r1, #0
4001fccc:	e59f004c 	ldr	r0, [pc, #76]	; 4001fd20 <CyU3PUibThreadEntry+0x74>
4001fcd0:	ebff8e78 	bl	400036b8 <CyU3PMemSet>
4001fcd4:	ea00000e 	b	4001fd14 <CyU3PUibThreadEntry+0x68>
4001fcd8:	e3e03000 	mvn	r3, #0
4001fcdc:	e58d3000 	str	r3, [sp]
4001fce0:	e28d3004 	add	r3, sp, #4
4001fce4:	e3a02001 	mov	r2, #1
4001fce8:	e1a01005 	mov	r1, r5
4001fcec:	e59f0030 	ldr	r0, [pc, #48]	; 4001fd24 <CyU3PUibThreadEntry+0x78>
4001fcf0:	ebffa8fe 	bl	4000a0f0 <_txe_event_flags_get>
4001fcf4:	e1a04000 	mov	r4, r0
4001fcf8:	e3540000 	cmp	r4, #0
4001fcfc:	0a000000 	beq	4001fd04 <CyU3PUibThreadEntry+0x58>
4001fd00:	ea000003 	b	4001fd14 <CyU3PUibThreadEntry+0x68>
4001fd04:	e59d0004 	ldr	r0, [sp, #4]
4001fd08:	eb0002a1 	bl	40020794 <CyU3PUsbHandleEvents>
4001fd0c:	ebffabe0 	bl	4000ac94 <_txe_thread_relinquish>
4001fd10:	e1a00000 	nop			; (mov r0, r0)
4001fd14:	eaffffef 	b	4001fcd8 <CyU3PUibThreadEntry+0x2c>
4001fd18:	073fbfe1 	.word	0x073fbfe1
4001fd1c:	40030d80 	.word	0x40030d80
4001fd20:	400326a0 	.word	0x400326a0
4001fd24:	40031ed8 	.word	0x40031ed8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001fd28 <CyU3PUibVbusChangeHandler>:
4001fd28:	e92d4010 	push	{r4, lr}
4001fd2c:	e3a00000 	mov	r0, #0
4001fd30:	e59f114c 	ldr	r1, [pc, #332]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fd34:	e5810060 	str	r0, [r1, #96]	; 0x60
4001fd38:	e59f0148 	ldr	r0, [pc, #328]	; 4001fe88 <CyU3PUibVbusChangeHandler+0x160>
4001fd3c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fd40:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fd44:	e1100001 	tst	r0, r1
4001fd48:	0a00000b 	beq	4001fd7c <CyU3PUibVbusChangeHandler+0x54>
4001fd4c:	e3a00002 	mov	r0, #2
4001fd50:	eb000051 	bl	4001fe9c <CyU3PUsbAddToEventLog>
4001fd54:	e59f0130 	ldr	r0, [pc, #304]	; 4001fe8c <CyU3PUibVbusChangeHandler+0x164>
4001fd58:	e5900000 	ldr	r0, [r0]
4001fd5c:	e3500000 	cmp	r0, #0
4001fd60:	0a000010 	beq	4001fda8 <CyU3PUibVbusChangeHandler+0x80>
4001fd64:	e3a01000 	mov	r1, #0
4001fd68:	e3a0000b 	mov	r0, #11
4001fd6c:	e59f2118 	ldr	r2, [pc, #280]	; 4001fe8c <CyU3PUibVbusChangeHandler+0x164>
4001fd70:	e5922000 	ldr	r2, [r2]
4001fd74:	e12fff32 	blx	r2
4001fd78:	ea00000a 	b	4001fda8 <CyU3PUibVbusChangeHandler+0x80>
4001fd7c:	e3a00001 	mov	r0, #1
4001fd80:	eb000045 	bl	4001fe9c <CyU3PUsbAddToEventLog>
4001fd84:	e59f0100 	ldr	r0, [pc, #256]	; 4001fe8c <CyU3PUibVbusChangeHandler+0x164>
4001fd88:	e5900000 	ldr	r0, [r0]
4001fd8c:	e3500000 	cmp	r0, #0
4001fd90:	0a000004 	beq	4001fda8 <CyU3PUibVbusChangeHandler+0x80>
4001fd94:	e3a01000 	mov	r1, #0
4001fd98:	e3a0000c 	mov	r0, #12
4001fd9c:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fe8c <CyU3PUibVbusChangeHandler+0x164>
4001fda0:	e5922000 	ldr	r2, [r2]
4001fda4:	e12fff32 	blx	r2
4001fda8:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fe88 <CyU3PUibVbusChangeHandler+0x160>
4001fdac:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fdb0:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fdb4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fdb8:	e1100001 	tst	r0, r1
4001fdbc:	0a000022 	beq	4001fe4c <CyU3PUibVbusChangeHandler+0x124>
4001fdc0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fdc4:	e5d00008 	ldrb	r0, [r0, #8]
4001fdc8:	e3500005 	cmp	r0, #5
4001fdcc:	ba000000 	blt	4001fdd4 <CyU3PUibVbusChangeHandler+0xac>
4001fdd0:	eb0008d6 	bl	40022130 <HandleVbusOffEvent>
4001fdd4:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fdd8:	e5d00008 	ldrb	r0, [r0, #8]
4001fddc:	e3500004 	cmp	r0, #4
4001fde0:	1a00001e 	bne	4001fe60 <CyU3PUibVbusChangeHandler+0x138>
4001fde4:	e59f0098 	ldr	r0, [pc, #152]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fde8:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fdec:	e59f1090 	ldr	r1, [pc, #144]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fdf0:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001fdf4:	e2810000 	add	r0, r1, #0
4001fdf8:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fdfc:	e3500000 	cmp	r0, #0
4001fe00:	0a00000a 	beq	4001fe30 <CyU3PUibVbusChangeHandler+0x108>
4001fe04:	e3a00000 	mov	r0, #0
4001fe08:	e59f1080 	ldr	r1, [pc, #128]	; 4001fe90 <CyU3PUibVbusChangeHandler+0x168>
4001fe0c:	e5810014 	str	r0, [r1, #20]
4001fe10:	e59f107c 	ldr	r1, [pc, #124]	; 4001fe94 <CyU3PUibVbusChangeHandler+0x16c>
4001fe14:	e5810000 	str	r0, [r1]
4001fe18:	e59f1078 	ldr	r1, [pc, #120]	; 4001fe98 <CyU3PUibVbusChangeHandler+0x170>
4001fe1c:	e5810000 	str	r0, [r1]
4001fe20:	e59f105c 	ldr	r1, [pc, #92]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fe24:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fe28:	e5810050 	str	r0, [r1, #80]	; 0x50
4001fe2c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fe30:	e59f104c 	ldr	r1, [pc, #76]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fe34:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001fe38:	ebfff593 	bl	4001d48c <CyU3PUsbPhyEnable>
4001fe3c:	e3a00005 	mov	r0, #5
4001fe40:	e59f103c 	ldr	r1, [pc, #60]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fe44:	e5c10008 	strb	r0, [r1, #8]
4001fe48:	ea000004 	b	4001fe60 <CyU3PUibVbusChangeHandler+0x138>
4001fe4c:	e59f0030 	ldr	r0, [pc, #48]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fe50:	e5d00008 	ldrb	r0, [r0, #8]
4001fe54:	e3500005 	cmp	r0, #5
4001fe58:	ba000000 	blt	4001fe60 <CyU3PUibVbusChangeHandler+0x138>
4001fe5c:	eb0008b3 	bl	40022130 <HandleVbusOffEvent>
4001fe60:	ebfff0df 	bl	4001c1e4 <CyU3POtgIsStarted>
4001fe64:	e3500000 	cmp	r0, #0
4001fe68:	0a000000 	beq	4001fe70 <CyU3PUibVbusChangeHandler+0x148>
4001fe6c:	ebfff4e3 	bl	4001d200 <CyU3PUsbOtgVbusChangeHandler>
4001fe70:	e59f000c 	ldr	r0, [pc, #12]	; 4001fe84 <CyU3PUibVbusChangeHandler+0x15c>
4001fe74:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fe78:	e59f1008 	ldr	r1, [pc, #8]	; 4001fe88 <CyU3PUibVbusChangeHandler+0x160>
4001fe7c:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fe80:	e8bd8010 	pop	{r4, pc}
4001fe84:	40031d60 	.word	0x40031d60
4001fe88:	e0051000 	.word	0xe0051000
4001fe8c:	40030dbc 	.word	0x40030dbc
4001fe90:	e0033000 	.word	0xe0033000
4001fe94:	40030da4 	.word	0x40030da4
4001fe98:	40030da8 	.word	0x40030da8

Disassembly of section i.CyU3PUsbAddToEventLog:

4001fe9c <CyU3PUsbAddToEventLog>:
4001fe9c:	e59f1058 	ldr	r1, [pc, #88]	; 4001fefc <CyU3PUsbAddToEventLog+0x60>
4001fea0:	e5911000 	ldr	r1, [r1]
4001fea4:	e3510000 	cmp	r1, #0
4001fea8:	0a000012 	beq	4001fef8 <CyU3PUsbAddToEventLog+0x5c>
4001feac:	e59f104c 	ldr	r1, [pc, #76]	; 4001ff00 <CyU3PUsbAddToEventLog+0x64>
4001feb0:	e5911000 	ldr	r1, [r1]
4001feb4:	e59f2044 	ldr	r2, [pc, #68]	; 4001ff00 <CyU3PUsbAddToEventLog+0x64>
4001feb8:	e5922000 	ldr	r2, [r2]
4001febc:	e2822001 	add	r2, r2, #1
4001fec0:	e59f3038 	ldr	r3, [pc, #56]	; 4001ff00 <CyU3PUsbAddToEventLog+0x64>
4001fec4:	e5832000 	str	r2, [r3]
4001fec8:	e59f202c 	ldr	r2, [pc, #44]	; 4001fefc <CyU3PUsbAddToEventLog+0x60>
4001fecc:	e5922000 	ldr	r2, [r2]
4001fed0:	e7c20001 	strb	r0, [r2, r1]
4001fed4:	e2831000 	add	r1, r3, #0
4001fed8:	e5911000 	ldr	r1, [r1]
4001fedc:	e59f2020 	ldr	r2, [pc, #32]	; 4001ff04 <CyU3PUsbAddToEventLog+0x68>
4001fee0:	e5922000 	ldr	r2, [r2]
4001fee4:	e1510002 	cmp	r1, r2
4001fee8:	3a000002 	bcc	4001fef8 <CyU3PUsbAddToEventLog+0x5c>
4001feec:	e3a01000 	mov	r1, #0
4001fef0:	e2832000 	add	r2, r3, #0
4001fef4:	e5821000 	str	r1, [r2]
4001fef8:	e12fff1e 	bx	lr
4001fefc:	40030db0 	.word	0x40030db0
4001ff00:	40030db4 	.word	0x40030db4
4001ff04:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001ff08 <CyU3PUsbCheckUsb3Disconnect>:
4001ff08:	e92d4070 	push	{r4, r5, r6, lr}
4001ff0c:	e3a04e19 	mov	r4, #400	; 0x190
4001ff10:	e3a06002 	mov	r6, #2
4001ff14:	e59f01fc 	ldr	r0, [pc, #508]	; 40020118 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001ff18:	e1d000b0 	ldrh	r0, [r0]
4001ff1c:	e3500001 	cmp	r0, #1
4001ff20:	da000008 	ble	4001ff48 <CyU3PUsbCheckUsb3Disconnect+0x40>
4001ff24:	e59f01ec 	ldr	r0, [pc, #492]	; 40020118 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001ff28:	e1d010b0 	ldrh	r1, [r0]
4001ff2c:	e1a00004 	mov	r0, r4
4001ff30:	ebffc3e4 	bl	40010ec8 <__aeabi_idivmod>
4001ff34:	e1a04800 	lsl	r4, r0, #16
4001ff38:	e1a04824 	lsr	r4, r4, #16
4001ff3c:	e2840001 	add	r0, r4, #1
4001ff40:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001ff44:	e3a06001 	mov	r6, #1
4001ff48:	e59f01cc 	ldr	r0, [pc, #460]	; 4002011c <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff4c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001ff50:	e200503f 	and	r5, r0, #63	; 0x3f
4001ff54:	e3550010 	cmp	r5, #16
4001ff58:	ba000004 	blt	4001ff70 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001ff5c:	e3550017 	cmp	r5, #23
4001ff60:	ca000002 	bgt	4001ff70 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001ff64:	e3a00000 	mov	r0, #0
4001ff68:	e59f11b0 	ldr	r1, [pc, #432]	; 40020120 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ff6c:	e5810000 	str	r0, [r1]
4001ff70:	e59f01a8 	ldr	r0, [pc, #424]	; 40020120 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ff74:	e5900000 	ldr	r0, [r0]
4001ff78:	e3500000 	cmp	r0, #0
4001ff7c:	1a000000 	bne	4001ff84 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001ff80:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ff84:	ea000010 	b	4001ffcc <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001ff88:	e1a00006 	mov	r0, r6
4001ff8c:	ebffa38f 	bl	40008dd0 <_tx_thread_sleep>
4001ff90:	e59f0184 	ldr	r0, [pc, #388]	; 4002011c <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff94:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001ff98:	e200503f 	and	r5, r0, #63	; 0x3f
4001ff9c:	e59f017c 	ldr	r0, [pc, #380]	; 40020120 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ffa0:	e5900000 	ldr	r0, [r0]
4001ffa4:	e3500000 	cmp	r0, #0
4001ffa8:	0a000003 	beq	4001ffbc <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001ffac:	e3550010 	cmp	r5, #16
4001ffb0:	ba000005 	blt	4001ffcc <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001ffb4:	e3550017 	cmp	r5, #23
4001ffb8:	ca000003 	bgt	4001ffcc <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001ffbc:	e3a00000 	mov	r0, #0
4001ffc0:	e59f1158 	ldr	r1, [pc, #344]	; 40020120 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ffc4:	e5810000 	str	r0, [r1]
4001ffc8:	ea000004 	b	4001ffe0 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001ffcc:	e1b00004 	movs	r0, r4
4001ffd0:	e2441001 	sub	r1, r4, #1
4001ffd4:	e1a04801 	lsl	r4, r1, #16
4001ffd8:	e1a04824 	lsr	r4, r4, #16
4001ffdc:	1affffe9 	bne	4001ff88 <CyU3PUsbCheckUsb3Disconnect+0x80>
4001ffe0:	e1a00000 	nop			; (mov r0, r0)
4001ffe4:	e59f0134 	ldr	r0, [pc, #308]	; 40020120 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ffe8:	e5900000 	ldr	r0, [r0]
4001ffec:	e3500000 	cmp	r0, #0
4001fff0:	0a000047 	beq	40020114 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fff4:	e59f0128 	ldr	r0, [pc, #296]	; 40020124 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fff8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fffc:	e3100a02 	tst	r0, #8192	; 0x2000
40020000:	0a000020 	beq	40020088 <CyU3PUsbCheckUsb3Disconnect+0x180>
40020004:	e59f0118 	ldr	r0, [pc, #280]	; 40020124 <CyU3PUsbCheckUsb3Disconnect+0x21c>
40020008:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002000c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40020010:	e59f110c 	ldr	r1, [pc, #268]	; 40020124 <CyU3PUsbCheckUsb3Disconnect+0x21c>
40020014:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020018:	e3a00002 	mov	r0, #2
4002001c:	ebffce52 	bl	4001396c <CyU3PBusyWait>
40020020:	e59f0100 	ldr	r0, [pc, #256]	; 40020128 <CyU3PUsbCheckUsb3Disconnect+0x220>
40020024:	e5900004 	ldr	r0, [r0, #4]
40020028:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4002002c:	e59f10f4 	ldr	r1, [pc, #244]	; 40020128 <CyU3PUsbCheckUsb3Disconnect+0x220>
40020030:	e5810004 	str	r0, [r1, #4]
40020034:	e3a00001 	mov	r0, #1
40020038:	ebffce4b 	bl	4001396c <CyU3PBusyWait>
4002003c:	e59f00d8 	ldr	r0, [pc, #216]	; 4002011c <CyU3PUsbCheckUsb3Disconnect+0x214>
40020040:	e590001c 	ldr	r0, [r0, #28]
40020044:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020048:	e59f10cc 	ldr	r1, [pc, #204]	; 4002011c <CyU3PUsbCheckUsb3Disconnect+0x214>
4002004c:	e581001c 	str	r0, [r1, #28]
40020050:	e59f00d4 	ldr	r0, [pc, #212]	; 4002012c <CyU3PUsbCheckUsb3Disconnect+0x224>
40020054:	e5900000 	ldr	r0, [r0]
40020058:	e581002c 	str	r0, [r1, #44]	; 0x2c
4002005c:	e3a00001 	mov	r0, #1
40020060:	ebffce41 	bl	4001396c <CyU3PBusyWait>
40020064:	e59f00bc 	ldr	r0, [pc, #188]	; 40020128 <CyU3PUsbCheckUsb3Disconnect+0x220>
40020068:	e5900004 	ldr	r0, [r0, #4]
4002006c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020070:	e59f10b0 	ldr	r1, [pc, #176]	; 40020128 <CyU3PUsbCheckUsb3Disconnect+0x220>
40020074:	e5810004 	str	r0, [r1, #4]
40020078:	e3a01000 	mov	r1, #0
4002007c:	e3a00002 	mov	r0, #2
40020080:	ebfff1d9 	bl	4001c7ec <CyU3PSetUsbCoreClock>
40020084:	ea000022 	b	40020114 <CyU3PUsbCheckUsb3Disconnect+0x20c>
40020088:	e59f00a0 	ldr	r0, [pc, #160]	; 40020130 <CyU3PUsbCheckUsb3Disconnect+0x228>
4002008c:	e5900000 	ldr	r0, [r0]
40020090:	e3500000 	cmp	r0, #0
40020094:	0a000007 	beq	400200b8 <CyU3PUsbCheckUsb3Disconnect+0x1b0>
40020098:	e3a00000 	mov	r0, #0
4002009c:	e59f108c 	ldr	r1, [pc, #140]	; 40020130 <CyU3PUsbCheckUsb3Disconnect+0x228>
400200a0:	e5810000 	str	r0, [r1]
400200a4:	e3a00001 	mov	r0, #1
400200a8:	ebfff481 	bl	4001d2b4 <CyU3PUsbPhyDisable>
400200ac:	e3a00001 	mov	r0, #1
400200b0:	ebfff4f5 	bl	4001d48c <CyU3PUsbPhyEnable>
400200b4:	eaffffb1 	b	4001ff80 <CyU3PUsbCheckUsb3Disconnect+0x78>
400200b8:	e59f0074 	ldr	r0, [pc, #116]	; 40020134 <CyU3PUsbCheckUsb3Disconnect+0x22c>
400200bc:	e5900078 	ldr	r0, [r0, #120]	; 0x78
400200c0:	e3500000 	cmp	r0, #0
400200c4:	0a000011 	beq	40020110 <CyU3PUsbCheckUsb3Disconnect+0x208>
400200c8:	e3a00001 	mov	r0, #1
400200cc:	ebfff478 	bl	4001d2b4 <CyU3PUsbPhyDisable>
400200d0:	e3a00003 	mov	r0, #3
400200d4:	e59f1058 	ldr	r1, [pc, #88]	; 40020134 <CyU3PUsbCheckUsb3Disconnect+0x22c>
400200d8:	e5c10008 	strb	r0, [r1, #8]
400200dc:	e3a00000 	mov	r0, #0
400200e0:	e5c10009 	strb	r0, [r1, #9]
400200e4:	e581002c 	str	r0, [r1, #44]	; 0x2c
400200e8:	e59f0048 	ldr	r0, [pc, #72]	; 40020138 <CyU3PUsbCheckUsb3Disconnect+0x230>
400200ec:	e5900000 	ldr	r0, [r0]
400200f0:	e3500000 	cmp	r0, #0
400200f4:	0a000006 	beq	40020114 <CyU3PUsbCheckUsb3Disconnect+0x20c>
400200f8:	e3a01000 	mov	r1, #0
400200fc:	e3a00014 	mov	r0, #20
40020100:	e59f2030 	ldr	r2, [pc, #48]	; 40020138 <CyU3PUsbCheckUsb3Disconnect+0x230>
40020104:	e5922000 	ldr	r2, [r2]
40020108:	e12fff32 	blx	r2
4002010c:	ea000000 	b	40020114 <CyU3PUsbCheckUsb3Disconnect+0x20c>
40020110:	eb00008e 	bl	40020350 <CyU3PUsbFallBackToUsb2>
40020114:	eaffff99 	b	4001ff80 <CyU3PUsbCheckUsb3Disconnect+0x78>
40020118:	40030dd8 	.word	0x40030dd8
4002011c:	e0033000 	.word	0xe0033000
40020120:	40030d84 	.word	0x40030d84
40020124:	e0031000 	.word	0xe0031000
40020128:	e0030000 	.word	0xe0030000
4002012c:	40030c78 	.word	0x40030c78
40020130:	40030d94 	.word	0x40030d94
40020134:	40031d60 	.word	0x40031d60
40020138:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbDescInit:

4002013c <CyU3PUsbDescInit>:
4002013c:	e92d4010 	push	{r4, lr}
40020140:	e3a02074 	mov	r2, #116	; 0x74
40020144:	e3a01000 	mov	r1, #0
40020148:	e59f0004 	ldr	r0, [pc, #4]	; 40020154 <CyU3PUsbDescInit+0x18>
4002014c:	ebff8d59 	bl	400036b8 <CyU3PMemSet>
40020150:	e8bd8010 	pop	{r4, pc}
40020154:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbEpPrepare:

40020158 <CyU3PUsbEpPrepare>:
40020158:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002015c:	e1a04000 	mov	r4, r0
40020160:	e3a05001 	mov	r5, #1
40020164:	ea000061 	b	400202f0 <CyU3PUsbEpPrepare+0x198>
40020168:	e59f01b8 	ldr	r0, [pc, #440]	; 40020328 <CyU3PUsbEpPrepare+0x1d0>
4002016c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020170:	e3100901 	tst	r0, #16384	; 0x4000
40020174:	0a000029 	beq	40020220 <CyU3PUsbEpPrepare+0xc8>
40020178:	e0850085 	add	r0, r5, r5, lsl #1
4002017c:	e59f11a8 	ldr	r1, [pc, #424]	; 4002032c <CyU3PUsbEpPrepare+0x1d4>
40020180:	e0810100 	add	r0, r1, r0, lsl #2
40020184:	e1d070b0 	ldrh	r7, [r0]
40020188:	e59f0198 	ldr	r0, [pc, #408]	; 40020328 <CyU3PUsbEpPrepare+0x1d0>
4002018c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020190:	e2000b03 	and	r0, r0, #3072	; 0xc00
40020194:	e1a06520 	lsr	r6, r0, #10
40020198:	e2440001 	sub	r0, r4, #1
4002019c:	e0800080 	add	r0, r0, r0, lsl #1
400201a0:	e59f1188 	ldr	r1, [pc, #392]	; 40020330 <CyU3PUsbEpPrepare+0x1d8>
400201a4:	e0810100 	add	r0, r1, r0, lsl #2
400201a8:	e2461001 	sub	r1, r6, #1
400201ac:	e7908101 	ldr	r8, [r0, r1, lsl #2]
400201b0:	e1570008 	cmp	r7, r8
400201b4:	8a000001 	bhi	400201c0 <CyU3PUsbEpPrepare+0x68>
400201b8:	e3570000 	cmp	r7, #0
400201bc:	1a000000 	bne	400201c4 <CyU3PUsbEpPrepare+0x6c>
400201c0:	e1a07008 	mov	r7, r8
400201c4:	e3540003 	cmp	r4, #3
400201c8:	1a000005 	bne	400201e4 <CyU3PUsbEpPrepare+0x8c>
400201cc:	e59f0160 	ldr	r0, [pc, #352]	; 40020334 <CyU3PUsbEpPrepare+0x1dc>
400201d0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201d4:	e3800001 	orr	r0, r0, #1
400201d8:	e59f1154 	ldr	r1, [pc, #340]	; 40020334 <CyU3PUsbEpPrepare+0x1dc>
400201dc:	e7810105 	str	r0, [r1, r5, lsl #2]
400201e0:	ea000008 	b	40020208 <CyU3PUsbEpPrepare+0xb0>
400201e4:	e59f013c 	ldr	r0, [pc, #316]	; 40020328 <CyU3PUsbEpPrepare+0x1d0>
400201e8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201ec:	e1a00520 	lsr	r0, r0, #10
400201f0:	e1a00500 	lsl	r0, r0, #10
400201f4:	e1a01b07 	lsl	r1, r7, #22
400201f8:	e1a01b21 	lsr	r1, r1, #22
400201fc:	e1800001 	orr	r0, r0, r1
40020200:	e59f1120 	ldr	r1, [pc, #288]	; 40020328 <CyU3PUsbEpPrepare+0x1d0>
40020204:	e7810105 	str	r0, [r1, r5, lsl #2]
40020208:	e59f0128 	ldr	r0, [pc, #296]	; 40020338 <CyU3PUsbEpPrepare+0x1e0>
4002020c:	e7807105 	str	r7, [r0, r5, lsl #2]
40020210:	e3850080 	orr	r0, r5, #128	; 0x80
40020214:	e3a02001 	mov	r2, #1
40020218:	e3a01000 	mov	r1, #0
4002021c:	ebfff7c9 	bl	4001e148 <CyU3PUsbStall>
40020220:	e59f0114 	ldr	r0, [pc, #276]	; 4002033c <CyU3PUsbEpPrepare+0x1e4>
40020224:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020228:	e3100901 	tst	r0, #16384	; 0x4000
4002022c:	0a00002d 	beq	400202e8 <CyU3PUsbEpPrepare+0x190>
40020230:	e0850085 	add	r0, r5, r5, lsl #1
40020234:	e59f1104 	ldr	r1, [pc, #260]	; 40020340 <CyU3PUsbEpPrepare+0x1e8>
40020238:	e0810100 	add	r0, r1, r0, lsl #2
4002023c:	e1d070b0 	ldrh	r7, [r0]
40020240:	e59f00f4 	ldr	r0, [pc, #244]	; 4002033c <CyU3PUsbEpPrepare+0x1e4>
40020244:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020248:	e2000b03 	and	r0, r0, #3072	; 0xc00
4002024c:	e1a06520 	lsr	r6, r0, #10
40020250:	e2440001 	sub	r0, r4, #1
40020254:	e0800080 	add	r0, r0, r0, lsl #1
40020258:	e59f10d0 	ldr	r1, [pc, #208]	; 40020330 <CyU3PUsbEpPrepare+0x1d8>
4002025c:	e0810100 	add	r0, r1, r0, lsl #2
40020260:	e2461001 	sub	r1, r6, #1
40020264:	e7908101 	ldr	r8, [r0, r1, lsl #2]
40020268:	e1570008 	cmp	r7, r8
4002026c:	8a000001 	bhi	40020278 <CyU3PUsbEpPrepare+0x120>
40020270:	e3570000 	cmp	r7, #0
40020274:	1a000000 	bne	4002027c <CyU3PUsbEpPrepare+0x124>
40020278:	e1a07008 	mov	r7, r8
4002027c:	e3540003 	cmp	r4, #3
40020280:	1a000005 	bne	4002029c <CyU3PUsbEpPrepare+0x144>
40020284:	e59f00b8 	ldr	r0, [pc, #184]	; 40020344 <CyU3PUsbEpPrepare+0x1ec>
40020288:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002028c:	e3800001 	orr	r0, r0, #1
40020290:	e59f10ac 	ldr	r1, [pc, #172]	; 40020344 <CyU3PUsbEpPrepare+0x1ec>
40020294:	e7810105 	str	r0, [r1, r5, lsl #2]
40020298:	ea000008 	b	400202c0 <CyU3PUsbEpPrepare+0x168>
4002029c:	e59f0098 	ldr	r0, [pc, #152]	; 4002033c <CyU3PUsbEpPrepare+0x1e4>
400202a0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400202a4:	e1a00520 	lsr	r0, r0, #10
400202a8:	e1a00500 	lsl	r0, r0, #10
400202ac:	e1a01b07 	lsl	r1, r7, #22
400202b0:	e1a01b21 	lsr	r1, r1, #22
400202b4:	e1800001 	orr	r0, r0, r1
400202b8:	e59f107c 	ldr	r1, [pc, #124]	; 4002033c <CyU3PUsbEpPrepare+0x1e4>
400202bc:	e7810105 	str	r0, [r1, r5, lsl #2]
400202c0:	e59f0080 	ldr	r0, [pc, #128]	; 40020348 <CyU3PUsbEpPrepare+0x1f0>
400202c4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400202c8:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
400202cc:	e1800007 	orr	r0, r0, r7
400202d0:	e59f1070 	ldr	r1, [pc, #112]	; 40020348 <CyU3PUsbEpPrepare+0x1f0>
400202d4:	e7810105 	str	r0, [r1, r5, lsl #2]
400202d8:	e3a02001 	mov	r2, #1
400202dc:	e3a01000 	mov	r1, #0
400202e0:	e1a00005 	mov	r0, r5
400202e4:	ebfff797 	bl	4001e148 <CyU3PUsbStall>
400202e8:	e2850001 	add	r0, r5, #1
400202ec:	e20050ff 	and	r5, r0, #255	; 0xff
400202f0:	e3550010 	cmp	r5, #16
400202f4:	baffff9b 	blt	40020168 <CyU3PUsbEpPrepare+0x10>
400202f8:	e3540003 	cmp	r4, #3
400202fc:	1a000005 	bne	40020318 <CyU3PUsbEpPrepare+0x1c0>
40020300:	e59f1044 	ldr	r1, [pc, #68]	; 4002034c <CyU3PUsbEpPrepare+0x1f4>
40020304:	e5911068 	ldr	r1, [r1, #104]	; 0x68
40020308:	e3510000 	cmp	r1, #0
4002030c:	0a000001 	beq	40020318 <CyU3PUsbEpPrepare+0x1c0>
40020310:	e3a01001 	mov	r1, #1
40020314:	ea000000 	b	4002031c <CyU3PUsbEpPrepare+0x1c4>
40020318:	e3a01000 	mov	r1, #0
4002031c:	e1a00001 	mov	r0, r1
40020320:	eb000853 	bl	40022474 <CyFx3UsbDmaPrefetchEnable>
40020324:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40020328:	e0031418 	.word	0xe0031418
4002032c:	40031bdc 	.word	0x40031bdc
40020330:	400122b4 	.word	0x400122b4
40020334:	e0033500 	.word	0xe0033500
40020338:	e0031c40 	.word	0xe0031c40
4002033c:	e0031498 	.word	0xe0031498
40020340:	40031c9c 	.word	0x40031c9c
40020344:	e0033600 	.word	0xe0033600
40020348:	e0031c80 	.word	0xe0031c80
4002034c:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbFallBackToUsb2:

40020350 <CyU3PUsbFallBackToUsb2>:
40020350:	e92d4010 	push	{r4, lr}
40020354:	e59f0234 	ldr	r0, [pc, #564]	; 40020590 <CyU3PUsbFallBackToUsb2+0x240>
40020358:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002035c:	e3500000 	cmp	r0, #0
40020360:	0a000006 	beq	40020380 <CyU3PUsbFallBackToUsb2+0x30>
40020364:	e59f0228 	ldr	r0, [pc, #552]	; 40020594 <CyU3PUsbFallBackToUsb2+0x244>
40020368:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002036c:	e59f121c 	ldr	r1, [pc, #540]	; 40020590 <CyU3PUsbFallBackToUsb2+0x240>
40020370:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020374:	e1100001 	tst	r0, r1
40020378:	1a000000 	bne	40020380 <CyU3PUsbFallBackToUsb2+0x30>
4002037c:	e8bd8010 	pop	{r4, pc}
40020380:	e3a00050 	mov	r0, #80	; 0x50
40020384:	ebfffec4 	bl	4001fe9c <CyU3PUsbAddToEventLog>
40020388:	eb0007f1 	bl	40022354 <CyU3PVicDisableAllInterrupts>
4002038c:	e1a04000 	mov	r4, r0
40020390:	e3a01000 	mov	r1, #0
40020394:	e59f01fc 	ldr	r0, [pc, #508]	; 40020598 <CyU3PUsbFallBackToUsb2+0x248>
40020398:	eb000860 	bl	40022520 <CyFx3UsbWritePhyReg>
4002039c:	e1a00004 	mov	r0, r4
400203a0:	eb0007f9 	bl	4002238c <CyU3PVicEnableInterrupts>
400203a4:	e3a00a01 	mov	r0, #4096	; 0x1000
400203a8:	e59f11ec 	ldr	r1, [pc, #492]	; 4002059c <CyU3PUsbFallBackToUsb2+0x24c>
400203ac:	e5810054 	str	r0, [r1, #84]	; 0x54
400203b0:	e59f01d8 	ldr	r0, [pc, #472]	; 40020590 <CyU3PUsbFallBackToUsb2+0x240>
400203b4:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400203b8:	e2800001 	add	r0, r0, #1
400203bc:	e59f11cc 	ldr	r1, [pc, #460]	; 40020590 <CyU3PUsbFallBackToUsb2+0x240>
400203c0:	e5810058 	str	r0, [r1, #88]	; 0x58
400203c4:	e3a00000 	mov	r0, #0
400203c8:	e59f11d0 	ldr	r1, [pc, #464]	; 400205a0 <CyU3PUsbFallBackToUsb2+0x250>
400203cc:	e5810000 	str	r0, [r1]
400203d0:	e59f01cc 	ldr	r0, [pc, #460]	; 400205a4 <CyU3PUsbFallBackToUsb2+0x254>
400203d4:	ebffaaef 	bl	4000af98 <_txe_timer_deactivate>
400203d8:	e3a00002 	mov	r0, #2
400203dc:	ebffcd62 	bl	4001396c <CyU3PBusyWait>
400203e0:	e3a01002 	mov	r1, #2
400203e4:	e1a00001 	mov	r0, r1
400203e8:	ebfff0ff 	bl	4001c7ec <CyU3PSetUsbCoreClock>
400203ec:	e3a00002 	mov	r0, #2
400203f0:	ebffcd5d 	bl	4001396c <CyU3PBusyWait>
400203f4:	e59f01ac 	ldr	r0, [pc, #428]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
400203f8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400203fc:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020400:	e59f11a0 	ldr	r1, [pc, #416]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020404:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020408:	e3a00002 	mov	r0, #2
4002040c:	ebffcd56 	bl	4001396c <CyU3PBusyWait>
40020410:	e59f0190 	ldr	r0, [pc, #400]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020414:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020418:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4002041c:	e59f1184 	ldr	r1, [pc, #388]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020420:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020424:	e2410a01 	sub	r0, r1, #4096	; 0x1000
40020428:	e5900004 	ldr	r0, [r0, #4]
4002042c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020430:	e2411a01 	sub	r1, r1, #4096	; 0x1000
40020434:	e5810004 	str	r0, [r1, #4]
40020438:	e2810a03 	add	r0, r1, #12288	; 0x3000
4002043c:	e590001c 	ldr	r0, [r0, #28]
40020440:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020444:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020448:	e581001c 	str	r0, [r1, #28]
4002044c:	e59f0158 	ldr	r0, [pc, #344]	; 400205ac <CyU3PUsbFallBackToUsb2+0x25c>
40020450:	e5900000 	ldr	r0, [r0]
40020454:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020458:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
4002045c:	e5900000 	ldr	r0, [r0]
40020460:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40020464:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
40020468:	e5810000 	str	r0, [r1]
4002046c:	e3a00005 	mov	r0, #5
40020470:	ebffcd3d 	bl	4001396c <CyU3PBusyWait>
40020474:	e59f0134 	ldr	r0, [pc, #308]	; 400205b0 <CyU3PUsbFallBackToUsb2+0x260>
40020478:	e5900000 	ldr	r0, [r0]
4002047c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40020480:	e59f1128 	ldr	r1, [pc, #296]	; 400205b0 <CyU3PUsbFallBackToUsb2+0x260>
40020484:	e5810000 	str	r0, [r1]
40020488:	e3a0000a 	mov	r0, #10
4002048c:	ebffcd36 	bl	4001396c <CyU3PBusyWait>
40020490:	e3e00000 	mvn	r0, #0
40020494:	e59f110c 	ldr	r1, [pc, #268]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020498:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4002049c:	e5810524 	str	r0, [r1, #1316]	; 0x524
400204a0:	e5810810 	str	r0, [r1, #2064]	; 0x810
400204a4:	e59f0108 	ldr	r0, [pc, #264]	; 400205b4 <CyU3PUsbFallBackToUsb2+0x264>
400204a8:	ebffd869 	bl	40016654 <CyU3PDmaChannelReset>
400204ac:	e59f0104 	ldr	r0, [pc, #260]	; 400205b8 <CyU3PUsbFallBackToUsb2+0x268>
400204b0:	ebffd867 	bl	40016654 <CyU3PDmaChannelReset>
400204b4:	e3a00000 	mov	r0, #0
400204b8:	e59f10dc 	ldr	r1, [pc, #220]	; 4002059c <CyU3PUsbFallBackToUsb2+0x24c>
400204bc:	e5810008 	str	r0, [r1, #8]
400204c0:	e3e00000 	mvn	r0, #0
400204c4:	e5810004 	str	r0, [r1, #4]
400204c8:	e3a00000 	mov	r0, #0
400204cc:	e5810408 	str	r0, [r1, #1032]	; 0x408
400204d0:	e3e00000 	mvn	r0, #0
400204d4:	e5810404 	str	r0, [r1, #1028]	; 0x404
400204d8:	e1c10820 	bic	r0, r1, r0, lsr #16
400204dc:	e5900004 	ldr	r0, [r0, #4]
400204e0:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400204e4:	e2411a03 	sub	r1, r1, #12288	; 0x3000
400204e8:	e5810004 	str	r0, [r1, #4]
400204ec:	e2810a01 	add	r0, r1, #4096	; 0x1000
400204f0:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
400204f4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
400204f8:	e2811a01 	add	r1, r1, #4096	; 0x1000
400204fc:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020500:	e1a00001 	mov	r0, r1
40020504:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020508:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4002050c:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020510:	e3a00001 	mov	r0, #1
40020514:	e59f1074 	ldr	r1, [pc, #116]	; 40020590 <CyU3PUsbFallBackToUsb2+0x240>
40020518:	e5c10009 	strb	r0, [r1, #9]
4002051c:	e3a00000 	mov	r0, #0
40020520:	e5810044 	str	r0, [r1, #68]	; 0x44
40020524:	e3a00501 	mov	r0, #4194304	; 0x400000
40020528:	e59f108c 	ldr	r1, [pc, #140]	; 400205bc <CyU3PUsbFallBackToUsb2+0x26c>
4002052c:	e5810074 	str	r0, [r1, #116]	; 0x74
40020530:	e3a00002 	mov	r0, #2
40020534:	ebffcd0c 	bl	4001396c <CyU3PBusyWait>
40020538:	e59f0068 	ldr	r0, [pc, #104]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
4002053c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020540:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020544:	e59f105c 	ldr	r1, [pc, #92]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020548:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002054c:	e3a00064 	mov	r0, #100	; 0x64
40020550:	ebffcd05 	bl	4001396c <CyU3PBusyWait>
40020554:	eb00079f 	bl	400223d8 <CyFx3Usb2PhySetup>
40020558:	e59f0060 	ldr	r0, [pc, #96]	; 400205c0 <CyU3PUsbFallBackToUsb2+0x270>
4002055c:	e59f1044 	ldr	r1, [pc, #68]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020560:	e5810008 	str	r0, [r1, #8]
40020564:	e3a00050 	mov	r0, #80	; 0x50
40020568:	ebffccff 	bl	4001396c <CyU3PBusyWait>
4002056c:	e3a01000 	mov	r1, #0
40020570:	e3a00002 	mov	r0, #2
40020574:	ebfff09c 	bl	4001c7ec <CyU3PSetUsbCoreClock>
40020578:	e59f0028 	ldr	r0, [pc, #40]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
4002057c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020580:	e3c00008 	bic	r0, r0, #8
40020584:	e59f101c 	ldr	r1, [pc, #28]	; 400205a8 <CyU3PUsbFallBackToUsb2+0x258>
40020588:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002058c:	eaffff7a 	b	4002037c <CyU3PUsbFallBackToUsb2+0x2c>
40020590:	40031d60 	.word	0x40031d60
40020594:	e0051000 	.word	0xe0051000
40020598:	00001005 	.word	0x00001005
4002059c:	e0033000 	.word	0xe0033000
400205a0:	40030dd0 	.word	0x40030dd0
400205a4:	400326c0 	.word	0x400326c0
400205a8:	e0031000 	.word	0xe0031000
400205ac:	40030c78 	.word	0x40030c78
400205b0:	e0050000 	.word	0xe0050000
400205b4:	40031a9c 	.word	0x40031a9c
400205b8:	40031b3c 	.word	0x40031b3c
400205bc:	e0032000 	.word	0xe0032000
400205c0:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

400205c4 <CyU3PUsbGetEpStatus>:
400205c4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400205c8:	e1a04000 	mov	r4, r0
400205cc:	e204600f 	and	r6, r4, #15
400205d0:	e59f0090 	ldr	r0, [pc, #144]	; 40020668 <CyU3PUsbGetEpStatus+0xa4>
400205d4:	e5d00009 	ldrb	r0, [r0, #9]
400205d8:	e3500003 	cmp	r0, #3
400205dc:	1a00000b 	bne	40020610 <CyU3PUsbGetEpStatus+0x4c>
400205e0:	e3140080 	tst	r4, #128	; 0x80
400205e4:	0a000004 	beq	400205fc <CyU3PUsbGetEpStatus+0x38>
400205e8:	e59f007c 	ldr	r0, [pc, #124]	; 4002066c <CyU3PUsbGetEpStatus+0xa8>
400205ec:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400205f0:	e2000004 	and	r0, r0, #4
400205f4:	e58d0000 	str	r0, [sp]
400205f8:	ea00000f 	b	4002063c <CyU3PUsbGetEpStatus+0x78>
400205fc:	e59f006c 	ldr	r0, [pc, #108]	; 40020670 <CyU3PUsbGetEpStatus+0xac>
40020600:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020604:	e2000004 	and	r0, r0, #4
40020608:	e58d0000 	str	r0, [sp]
4002060c:	ea00000a 	b	4002063c <CyU3PUsbGetEpStatus+0x78>
40020610:	e3140080 	tst	r4, #128	; 0x80
40020614:	0a000004 	beq	4002062c <CyU3PUsbGetEpStatus+0x68>
40020618:	e59f0054 	ldr	r0, [pc, #84]	; 40020674 <CyU3PUsbGetEpStatus+0xb0>
4002061c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020620:	e2000801 	and	r0, r0, #65536	; 0x10000
40020624:	e58d0000 	str	r0, [sp]
40020628:	ea000003 	b	4002063c <CyU3PUsbGetEpStatus+0x78>
4002062c:	e59f0044 	ldr	r0, [pc, #68]	; 40020678 <CyU3PUsbGetEpStatus+0xb4>
40020630:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020634:	e2000801 	and	r0, r0, #65536	; 0x10000
40020638:	e58d0000 	str	r0, [sp]
4002063c:	e59d0000 	ldr	r0, [sp]
40020640:	e3500000 	cmp	r0, #0
40020644:	0a000001 	beq	40020650 <CyU3PUsbGetEpStatus+0x8c>
40020648:	e3a00001 	mov	r0, #1
4002064c:	e58d0000 	str	r0, [sp]
40020650:	e1a0100d 	mov	r1, sp
40020654:	e3a00002 	mov	r0, #2
40020658:	ebfff48f 	bl	4001d89c <CyU3PUsbSendEP0Data>
4002065c:	e1a05000 	mov	r5, r0
40020660:	e1a00005 	mov	r0, r5
40020664:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020668:	40031d60 	.word	0x40031d60
4002066c:	e0033500 	.word	0xe0033500
40020670:	e0033600 	.word	0xe0033600
40020674:	e0031418 	.word	0xe0031418
40020678:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

4002067c <CyU3PUsbHandleClearFeature>:
4002067c:	e92d4070 	push	{r4, r5, r6, lr}
40020680:	e1a04000 	mov	r4, r0
40020684:	e3a05000 	mov	r5, #0
40020688:	e3540001 	cmp	r4, #1
4002068c:	0a000006 	beq	400206ac <CyU3PUsbHandleClearFeature+0x30>
40020690:	e3540002 	cmp	r4, #2
40020694:	0a00000b 	beq	400206c8 <CyU3PUsbHandleClearFeature+0x4c>
40020698:	e3540030 	cmp	r4, #48	; 0x30
4002069c:	0a00000f 	beq	400206e0 <CyU3PUsbHandleClearFeature+0x64>
400206a0:	e3540031 	cmp	r4, #49	; 0x31
400206a4:	1a00002d 	bne	40020760 <CyU3PUsbHandleClearFeature+0xe4>
400206a8:	ea00001c 	b	40020720 <CyU3PUsbHandleClearFeature+0xa4>
400206ac:	e1a00000 	nop			; (mov r0, r0)
400206b0:	e59f00d8 	ldr	r0, [pc, #216]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
400206b4:	e5d00006 	ldrb	r0, [r0, #6]
400206b8:	e3c00002 	bic	r0, r0, #2
400206bc:	e59f10cc 	ldr	r1, [pc, #204]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
400206c0:	e5c10006 	strb	r0, [r1, #6]
400206c4:	e1a00000 	nop			; (mov r0, r0)
400206c8:	e59f00c0 	ldr	r0, [pc, #192]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
400206cc:	e5d00009 	ldrb	r0, [r0, #9]
400206d0:	e3500003 	cmp	r0, #3
400206d4:	0a000000 	beq	400206dc <CyU3PUsbHandleClearFeature+0x60>
400206d8:	e3a05001 	mov	r5, #1
400206dc:	ea000021 	b	40020768 <CyU3PUsbHandleClearFeature+0xec>
400206e0:	e1a00000 	nop			; (mov r0, r0)
400206e4:	e59f00a4 	ldr	r0, [pc, #164]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
400206e8:	e5d00009 	ldrb	r0, [r0, #9]
400206ec:	e3500003 	cmp	r0, #3
400206f0:	1a000009 	bne	4002071c <CyU3PUsbHandleClearFeature+0xa0>
400206f4:	e59f0094 	ldr	r0, [pc, #148]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
400206f8:	e5d00008 	ldrb	r0, [r0, #8]
400206fc:	e3500006 	cmp	r0, #6
40020700:	1a000005 	bne	4002071c <CyU3PUsbHandleClearFeature+0xa0>
40020704:	e59f0084 	ldr	r0, [pc, #132]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
40020708:	e5d00006 	ldrb	r0, [r0, #6]
4002070c:	e3c00004 	bic	r0, r0, #4
40020710:	e59f1078 	ldr	r1, [pc, #120]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
40020714:	e5c10006 	strb	r0, [r1, #6]
40020718:	e3a05001 	mov	r5, #1
4002071c:	ea000011 	b	40020768 <CyU3PUsbHandleClearFeature+0xec>
40020720:	e1a00000 	nop			; (mov r0, r0)
40020724:	e59f0064 	ldr	r0, [pc, #100]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
40020728:	e5d00009 	ldrb	r0, [r0, #9]
4002072c:	e3500003 	cmp	r0, #3
40020730:	1a000009 	bne	4002075c <CyU3PUsbHandleClearFeature+0xe0>
40020734:	e59f0054 	ldr	r0, [pc, #84]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
40020738:	e5d00008 	ldrb	r0, [r0, #8]
4002073c:	e3500006 	cmp	r0, #6
40020740:	1a000005 	bne	4002075c <CyU3PUsbHandleClearFeature+0xe0>
40020744:	e59f0044 	ldr	r0, [pc, #68]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
40020748:	e5d00006 	ldrb	r0, [r0, #6]
4002074c:	e3c00008 	bic	r0, r0, #8
40020750:	e59f1038 	ldr	r1, [pc, #56]	; 40020790 <CyU3PUsbHandleClearFeature+0x114>
40020754:	e5c10006 	strb	r0, [r1, #6]
40020758:	e3a05001 	mov	r5, #1
4002075c:	ea000001 	b	40020768 <CyU3PUsbHandleClearFeature+0xec>
40020760:	e1a00000 	nop			; (mov r0, r0)
40020764:	e1a00000 	nop			; (mov r0, r0)
40020768:	e1a00000 	nop			; (mov r0, r0)
4002076c:	e3550000 	cmp	r5, #0
40020770:	0a000001 	beq	4002077c <CyU3PUsbHandleClearFeature+0x100>
40020774:	ebfff0af 	bl	4001ca38 <CyU3PUsbAckSetup>
40020778:	ea000003 	b	4002078c <CyU3PUsbHandleClearFeature+0x110>
4002077c:	e3a02000 	mov	r2, #0
40020780:	e3a01001 	mov	r1, #1
40020784:	e1a00002 	mov	r0, r2
40020788:	ebfff66e 	bl	4001e148 <CyU3PUsbStall>
4002078c:	e8bd8070 	pop	{r4, r5, r6, pc}
40020790:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbHandleEvents:

40020794 <CyU3PUsbHandleEvents>:
40020794:	e92d4070 	push	{r4, r5, r6, lr}
40020798:	e1a04000 	mov	r4, r0
4002079c:	e3140040 	tst	r4, #64	; 0x40
400207a0:	0a000000 	beq	400207a8 <CyU3PUsbHandleEvents+0x14>
400207a4:	ebfff8cc 	bl	4001eadc <CyU3PUibDevCtrlEvtHandler>
400207a8:	e3140020 	tst	r4, #32
400207ac:	0a000000 	beq	400207b4 <CyU3PUsbHandleEvents+0x20>
400207b0:	ebfff942 	bl	4001ecc0 <CyU3PUibEPEvtHandler>
400207b4:	e3140080 	tst	r4, #128	; 0x80
400207b8:	0a000000 	beq	400207c0 <CyU3PUsbHandleEvents+0x2c>
400207bc:	ebfffa15 	bl	4001f018 <CyU3PUibLnkIntrEvtHandler>
400207c0:	e3140c01 	tst	r4, #256	; 0x100
400207c4:	0a000000 	beq	400207cc <CyU3PUsbHandleEvents+0x38>
400207c8:	ebfffb32 	bl	4001f498 <CyU3PUibProtIntrEvtHandler>
400207cc:	e3140c02 	tst	r4, #512	; 0x200
400207d0:	0a000000 	beq	400207d8 <CyU3PUsbHandleEvents+0x44>
400207d4:	ebfffa37 	bl	4001f0b8 <CyU3PUibProtEpIntrEvtHandler>
400207d8:	e3140b01 	tst	r4, #1024	; 0x400
400207dc:	0a000006 	beq	400207fc <CyU3PUsbHandleEvents+0x68>
400207e0:	e59f0378 	ldr	r0, [pc, #888]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
400207e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400207e8:	e3500b02 	cmp	r0, #2048	; 0x800
400207ec:	1a000001 	bne	400207f8 <CyU3PUsbHandleEvents+0x64>
400207f0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400207f4:	ebffa175 	bl	40008dd0 <_tx_thread_sleep>
400207f8:	ebfffd4a 	bl	4001fd28 <CyU3PUibVbusChangeHandler>
400207fc:	e3140b02 	tst	r4, #2048	; 0x800
40020800:	0a000000 	beq	40020808 <CyU3PUsbHandleEvents+0x74>
40020804:	eb0003ae 	bl	400216c4 <CyU3PUsbSendCompliancePatterns>
40020808:	e3140a01 	tst	r4, #4096	; 0x1000
4002080c:	0a00000c 	beq	40020844 <CyU3PUsbHandleEvents+0xb0>
40020810:	e59f034c 	ldr	r0, [pc, #844]	; 40020b64 <CyU3PUsbHandleEvents+0x3d0>
40020814:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020818:	e3100902 	tst	r0, #32768	; 0x8000
4002081c:	0a000008 	beq	40020844 <CyU3PUsbHandleEvents+0xb0>
40020820:	e3a00001 	mov	r0, #1
40020824:	e59f133c 	ldr	r1, [pc, #828]	; 40020b68 <CyU3PUsbHandleEvents+0x3d4>
40020828:	e5810000 	str	r0, [r1]
4002082c:	e59f1338 	ldr	r1, [pc, #824]	; 40020b6c <CyU3PUsbHandleEvents+0x3d8>
40020830:	e5810000 	str	r0, [r1]
40020834:	ebfffdb3 	bl	4001ff08 <CyU3PUsbCheckUsb3Disconnect>
40020838:	e3a00000 	mov	r0, #0
4002083c:	e59f1328 	ldr	r1, [pc, #808]	; 40020b6c <CyU3PUsbHandleEvents+0x3d8>
40020840:	e5810000 	str	r0, [r1]
40020844:	e3140301 	tst	r4, #67108864	; 0x4000000
40020848:	0a000013 	beq	4002089c <CyU3PUsbHandleEvents+0x108>
4002084c:	e59f031c 	ldr	r0, [pc, #796]	; 40020b70 <CyU3PUsbHandleEvents+0x3dc>
40020850:	e5900000 	ldr	r0, [r0]
40020854:	e3500000 	cmp	r0, #0
40020858:	0a000008 	beq	40020880 <CyU3PUsbHandleEvents+0xec>
4002085c:	e59f0300 	ldr	r0, [pc, #768]	; 40020b64 <CyU3PUsbHandleEvents+0x3d0>
40020860:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020864:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
40020868:	e3a02080 	mov	r2, #128	; 0x80
4002086c:	e1821920 	orr	r1, r2, r0, lsr #18
40020870:	e3a00012 	mov	r0, #18
40020874:	e59f22f4 	ldr	r2, [pc, #756]	; 40020b70 <CyU3PUsbHandleEvents+0x3dc>
40020878:	e5922000 	ldr	r2, [r2]
4002087c:	e12fff32 	blx	r2
40020880:	e3a00b02 	mov	r0, #2048	; 0x800
40020884:	e59f12e8 	ldr	r1, [pc, #744]	; 40020b74 <CyU3PUsbHandleEvents+0x3e0>
40020888:	e5810000 	str	r0, [r1]
4002088c:	e1c10000 	bic	r0, r1, r0
40020890:	e5900004 	ldr	r0, [r0, #4]
40020894:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020898:	e5810004 	str	r0, [r1, #4]
4002089c:	e3140901 	tst	r4, #16384	; 0x4000
400208a0:	0a000008 	beq	400208c8 <CyU3PUsbHandleEvents+0x134>
400208a4:	e59f02c4 	ldr	r0, [pc, #708]	; 40020b70 <CyU3PUsbHandleEvents+0x3dc>
400208a8:	e5900000 	ldr	r0, [r0]
400208ac:	e3500000 	cmp	r0, #0
400208b0:	0a000004 	beq	400208c8 <CyU3PUsbHandleEvents+0x134>
400208b4:	e3a01000 	mov	r1, #0
400208b8:	e3a00003 	mov	r0, #3
400208bc:	e59f22ac 	ldr	r2, [pc, #684]	; 40020b70 <CyU3PUsbHandleEvents+0x3dc>
400208c0:	e5922000 	ldr	r2, [r2]
400208c4:	e12fff32 	blx	r2
400208c8:	e3140a02 	tst	r4, #8192	; 0x2000
400208cc:	0a000008 	beq	400208f4 <CyU3PUsbHandleEvents+0x160>
400208d0:	e59f0298 	ldr	r0, [pc, #664]	; 40020b70 <CyU3PUsbHandleEvents+0x3dc>
400208d4:	e5900000 	ldr	r0, [r0]
400208d8:	e3500000 	cmp	r0, #0
400208dc:	0a000004 	beq	400208f4 <CyU3PUsbHandleEvents+0x160>
400208e0:	e3a01000 	mov	r1, #0
400208e4:	e3a00002 	mov	r0, #2
400208e8:	e59f2280 	ldr	r2, [pc, #640]	; 40020b70 <CyU3PUsbHandleEvents+0x3dc>
400208ec:	e5922000 	ldr	r2, [r2]
400208f0:	e12fff32 	blx	r2
400208f4:	e3140902 	tst	r4, #32768	; 0x8000
400208f8:	0a000022 	beq	40020988 <CyU3PUsbHandleEvents+0x1f4>
400208fc:	e59f0274 	ldr	r0, [pc, #628]	; 40020b78 <CyU3PUsbHandleEvents+0x3e4>
40020900:	e5900000 	ldr	r0, [r0]
40020904:	e3500000 	cmp	r0, #0
40020908:	0a00001e 	beq	40020988 <CyU3PUsbHandleEvents+0x1f4>
4002090c:	eb000690 	bl	40022354 <CyU3PVicDisableAllInterrupts>
40020910:	e1a06000 	mov	r6, r0
40020914:	e3a00001 	mov	r0, #1
40020918:	ebffcc13 	bl	4001396c <CyU3PBusyWait>
4002091c:	e59f0258 	ldr	r0, [pc, #600]	; 40020b7c <CyU3PUsbHandleEvents+0x3e8>
40020920:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40020924:	e3c00803 	bic	r0, r0, #196608	; 0x30000
40020928:	e59f124c 	ldr	r1, [pc, #588]	; 40020b7c <CyU3PUsbHandleEvents+0x3e8>
4002092c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40020930:	e1a00006 	mov	r0, r6
40020934:	eb000694 	bl	4002238c <CyU3PVicEnableInterrupts>
40020938:	e3a00001 	mov	r0, #1
4002093c:	ebffa123 	bl	40008dd0 <_tx_thread_sleep>
40020940:	e3a00000 	mov	r0, #0
40020944:	e59f122c 	ldr	r1, [pc, #556]	; 40020b78 <CyU3PUsbHandleEvents+0x3e4>
40020948:	e5810000 	str	r0, [r1]
4002094c:	e59f0228 	ldr	r0, [pc, #552]	; 40020b7c <CyU3PUsbHandleEvents+0x3e8>
40020950:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40020954:	e3100c02 	tst	r0, #512	; 0x200
40020958:	1a00000a 	bne	40020988 <CyU3PUsbHandleEvents+0x1f4>
4002095c:	e59f01fc 	ldr	r0, [pc, #508]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
40020960:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020964:	e3500000 	cmp	r0, #0
40020968:	1a000006 	bne	40020988 <CyU3PUsbHandleEvents+0x1f4>
4002096c:	e59f01ec 	ldr	r0, [pc, #492]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
40020970:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
40020974:	e3500000 	cmp	r0, #0
40020978:	1a000002 	bne	40020988 <CyU3PUsbHandleEvents+0x1f4>
4002097c:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020980:	e59f11f4 	ldr	r1, [pc, #500]	; 40020b7c <CyU3PUsbHandleEvents+0x3e8>
40020984:	e5810050 	str	r0, [r1, #80]	; 0x50
40020988:	e3140401 	tst	r4, #16777216	; 0x1000000
4002098c:	0a000020 	beq	40020a14 <CyU3PUsbHandleEvents+0x280>
40020990:	e59f01e4 	ldr	r0, [pc, #484]	; 40020b7c <CyU3PUsbHandleEvents+0x3e8>
40020994:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020998:	e200503f 	and	r5, r0, #63	; 0x3f
4002099c:	e3550011 	cmp	r5, #17
400209a0:	0a000001 	beq	400209ac <CyU3PUsbHandleEvents+0x218>
400209a4:	e3550012 	cmp	r5, #18
400209a8:	1a000018 	bne	40020a10 <CyU3PUsbHandleEvents+0x27c>
400209ac:	e59f01cc 	ldr	r0, [pc, #460]	; 40020b80 <CyU3PUsbHandleEvents+0x3ec>
400209b0:	e5900000 	ldr	r0, [r0]
400209b4:	e3500000 	cmp	r0, #0
400209b8:	0a000014 	beq	40020a10 <CyU3PUsbHandleEvents+0x27c>
400209bc:	e3a00005 	mov	r0, #5
400209c0:	ebffcbe9 	bl	4001396c <CyU3PBusyWait>
400209c4:	e59f01b0 	ldr	r0, [pc, #432]	; 40020b7c <CyU3PUsbHandleEvents+0x3e8>
400209c8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400209cc:	e200503f 	and	r5, r0, #63	; 0x3f
400209d0:	e3550011 	cmp	r5, #17
400209d4:	0a000001 	beq	400209e0 <CyU3PUsbHandleEvents+0x24c>
400209d8:	e3550012 	cmp	r5, #18
400209dc:	1a000001 	bne	400209e8 <CyU3PUsbHandleEvents+0x254>
400209e0:	e3a00000 	mov	r0, #0
400209e4:	ebfff582 	bl	4001dff4 <CyU3PUsbSetLinkPowerState>
400209e8:	e3a00001 	mov	r0, #1
400209ec:	ebffa0f7 	bl	40008dd0 <_tx_thread_sleep>
400209f0:	e59f0188 	ldr	r0, [pc, #392]	; 40020b80 <CyU3PUsbHandleEvents+0x3ec>
400209f4:	e5900000 	ldr	r0, [r0]
400209f8:	e3500000 	cmp	r0, #0
400209fc:	0a000003 	beq	40020a10 <CyU3PUsbHandleEvents+0x27c>
40020a00:	e3a02000 	mov	r2, #0
40020a04:	e3a01401 	mov	r1, #16777216	; 0x1000000
40020a08:	e59f0174 	ldr	r0, [pc, #372]	; 40020b84 <CyU3PUsbHandleEvents+0x3f0>
40020a0c:	ebffa5e7 	bl	4000a1b0 <_txe_event_flags_set>
40020a10:	e1a00000 	nop			; (mov r0, r0)
40020a14:	e3140402 	tst	r4, #33554432	; 0x2000000
40020a18:	0a000019 	beq	40020a84 <CyU3PUsbHandleEvents+0x2f0>
40020a1c:	e3a00052 	mov	r0, #82	; 0x52
40020a20:	ebfffd1d 	bl	4001fe9c <CyU3PUsbAddToEventLog>
40020a24:	e59f1134 	ldr	r1, [pc, #308]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
40020a28:	e5d11009 	ldrb	r1, [r1, #9]
40020a2c:	e3510003 	cmp	r1, #3
40020a30:	1a000001 	bne	40020a3c <CyU3PUsbHandleEvents+0x2a8>
40020a34:	e3a01001 	mov	r1, #1
40020a38:	ea000000 	b	40020a40 <CyU3PUsbHandleEvents+0x2ac>
40020a3c:	e3a01000 	mov	r1, #0
40020a40:	e1a00001 	mov	r0, r1
40020a44:	ebfff21a 	bl	4001d2b4 <CyU3PUsbPhyDisable>
40020a48:	e3a00001 	mov	r0, #1
40020a4c:	ebffa0df 	bl	40008dd0 <_tx_thread_sleep>
40020a50:	e59f0108 	ldr	r0, [pc, #264]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
40020a54:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020a58:	e3500000 	cmp	r0, #0
40020a5c:	0a000005 	beq	40020a78 <CyU3PUsbHandleEvents+0x2e4>
40020a60:	e59f0120 	ldr	r0, [pc, #288]	; 40020b88 <CyU3PUsbHandleEvents+0x3f4>
40020a64:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020a68:	e59f10f0 	ldr	r1, [pc, #240]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
40020a6c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020a70:	e1100001 	tst	r0, r1
40020a74:	0a000002 	beq	40020a84 <CyU3PUsbHandleEvents+0x2f0>
40020a78:	e59f10e0 	ldr	r1, [pc, #224]	; 40020b60 <CyU3PUsbHandleEvents+0x3cc>
40020a7c:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020a80:	ebfff281 	bl	4001d48c <CyU3PUsbPhyEnable>
40020a84:	e3140801 	tst	r4, #65536	; 0x10000
40020a88:	0a000006 	beq	40020aa8 <CyU3PUsbHandleEvents+0x314>
40020a8c:	e59f00f8 	ldr	r0, [pc, #248]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020a90:	e5900000 	ldr	r0, [r0]
40020a94:	e3500000 	cmp	r0, #0
40020a98:	0a000002 	beq	40020aa8 <CyU3PUsbHandleEvents+0x314>
40020a9c:	e59f10e8 	ldr	r1, [pc, #232]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020aa0:	e5910000 	ldr	r0, [r1]
40020aa4:	e12fff30 	blx	r0
40020aa8:	e3140802 	tst	r4, #131072	; 0x20000
40020aac:	0a000006 	beq	40020acc <CyU3PUsbHandleEvents+0x338>
40020ab0:	e59f00d4 	ldr	r0, [pc, #212]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020ab4:	e5900004 	ldr	r0, [r0, #4]
40020ab8:	e3500000 	cmp	r0, #0
40020abc:	0a000002 	beq	40020acc <CyU3PUsbHandleEvents+0x338>
40020ac0:	e59f10c4 	ldr	r1, [pc, #196]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020ac4:	e5910004 	ldr	r0, [r1, #4]
40020ac8:	e12fff30 	blx	r0
40020acc:	e3140701 	tst	r4, #262144	; 0x40000
40020ad0:	0a000006 	beq	40020af0 <CyU3PUsbHandleEvents+0x35c>
40020ad4:	e59f00b0 	ldr	r0, [pc, #176]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020ad8:	e5900008 	ldr	r0, [r0, #8]
40020adc:	e3500000 	cmp	r0, #0
40020ae0:	0a000002 	beq	40020af0 <CyU3PUsbHandleEvents+0x35c>
40020ae4:	e59f10a0 	ldr	r1, [pc, #160]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020ae8:	e5910008 	ldr	r0, [r1, #8]
40020aec:	e12fff30 	blx	r0
40020af0:	e3140702 	tst	r4, #524288	; 0x80000
40020af4:	0a000006 	beq	40020b14 <CyU3PUsbHandleEvents+0x380>
40020af8:	e59f008c 	ldr	r0, [pc, #140]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020afc:	e590000c 	ldr	r0, [r0, #12]
40020b00:	e3500000 	cmp	r0, #0
40020b04:	0a000002 	beq	40020b14 <CyU3PUsbHandleEvents+0x380>
40020b08:	e59f107c 	ldr	r1, [pc, #124]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020b0c:	e591000c 	ldr	r0, [r1, #12]
40020b10:	e12fff30 	blx	r0
40020b14:	e3140601 	tst	r4, #1048576	; 0x100000
40020b18:	0a000006 	beq	40020b38 <CyU3PUsbHandleEvents+0x3a4>
40020b1c:	e59f0068 	ldr	r0, [pc, #104]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020b20:	e5900010 	ldr	r0, [r0, #16]
40020b24:	e3500000 	cmp	r0, #0
40020b28:	0a000002 	beq	40020b38 <CyU3PUsbHandleEvents+0x3a4>
40020b2c:	e59f1058 	ldr	r1, [pc, #88]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020b30:	e5910010 	ldr	r0, [r1, #16]
40020b34:	e12fff30 	blx	r0
40020b38:	e3140602 	tst	r4, #2097152	; 0x200000
40020b3c:	0a000006 	beq	40020b5c <CyU3PUsbHandleEvents+0x3c8>
40020b40:	e59f0044 	ldr	r0, [pc, #68]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020b44:	e5900014 	ldr	r0, [r0, #20]
40020b48:	e3500000 	cmp	r0, #0
40020b4c:	0a000002 	beq	40020b5c <CyU3PUsbHandleEvents+0x3c8>
40020b50:	e59f1034 	ldr	r1, [pc, #52]	; 40020b8c <CyU3PUsbHandleEvents+0x3f8>
40020b54:	e5910014 	ldr	r0, [r1, #20]
40020b58:	e12fff30 	blx	r0
40020b5c:	e8bd8070 	pop	{r4, r5, r6, pc}
40020b60:	40031d60 	.word	0x40031d60
40020b64:	e0031000 	.word	0xe0031000
40020b68:	40030d84 	.word	0x40030d84
40020b6c:	40030d88 	.word	0x40030d88
40020b70:	40030dbc 	.word	0x40030dbc
40020b74:	e0030000 	.word	0xe0030000
40020b78:	40030d8c 	.word	0x40030d8c
40020b7c:	e0033000 	.word	0xe0033000
40020b80:	40030dd4 	.word	0x40030dd4
40020b84:	40031ed8 	.word	0x40031ed8
40020b88:	e0051000 	.word	0xe0051000
40020b8c:	40031ddc 	.word	0x40031ddc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020b90 <CyU3PUsbHandleGetStatus>:
40020b90:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020b94:	e1a04000 	mov	r4, r0
40020b98:	e1a05001 	mov	r5, r1
40020b9c:	e3a07000 	mov	r7, #0
40020ba0:	e3a00000 	mov	r0, #0
40020ba4:	e58d0000 	str	r0, [sp]
40020ba8:	e3540000 	cmp	r4, #0
40020bac:	0a000004 	beq	40020bc4 <CyU3PUsbHandleGetStatus+0x34>
40020bb0:	e3540001 	cmp	r4, #1
40020bb4:	0a00001e 	beq	40020c34 <CyU3PUsbHandleGetStatus+0xa4>
40020bb8:	e3540002 	cmp	r4, #2
40020bbc:	1a00002b 	bne	40020c70 <CyU3PUsbHandleGetStatus+0xe0>
40020bc0:	ea000023 	b	40020c54 <CyU3PUsbHandleGetStatus+0xc4>
40020bc4:	e1a00000 	nop			; (mov r0, r0)
40020bc8:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020bcc:	1a00000d 	bne	40020c08 <CyU3PUsbHandleGetStatus+0x78>
40020bd0:	ebffed1c 	bl	4001c048 <CyU3POtgGetMode>
40020bd4:	e3500002 	cmp	r0, #2
40020bd8:	1a000008 	bne	40020c00 <CyU3PUsbHandleGetStatus+0x70>
40020bdc:	e59f00a0 	ldr	r0, [pc, #160]	; 40020c84 <CyU3PUsbHandleGetStatus+0xf4>
40020be0:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020be4:	e3500000 	cmp	r0, #0
40020be8:	0a000001 	beq	40020bf4 <CyU3PUsbHandleGetStatus+0x64>
40020bec:	e3a00001 	mov	r0, #1
40020bf0:	ea000000 	b	40020bf8 <CyU3PUsbHandleGetStatus+0x68>
40020bf4:	e3a00000 	mov	r0, #0
40020bf8:	e5cd0000 	strb	r0, [sp]
40020bfc:	ea00000b 	b	40020c30 <CyU3PUsbHandleGetStatus+0xa0>
40020c00:	e3a00000 	mov	r0, #0
40020c04:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020c08:	e59f0074 	ldr	r0, [pc, #116]	; 40020c84 <CyU3PUsbHandleGetStatus+0xf4>
40020c0c:	e5d00006 	ldrb	r0, [r0, #6]
40020c10:	e5cd0000 	strb	r0, [sp]
40020c14:	e59f0068 	ldr	r0, [pc, #104]	; 40020c84 <CyU3PUsbHandleGetStatus+0xf4>
40020c18:	e5d00009 	ldrb	r0, [r0, #9]
40020c1c:	e3500003 	cmp	r0, #3
40020c20:	1a000002 	bne	40020c30 <CyU3PUsbHandleGetStatus+0xa0>
40020c24:	e5dd0000 	ldrb	r0, [sp]
40020c28:	e3c00002 	bic	r0, r0, #2
40020c2c:	e5cd0000 	strb	r0, [sp]
40020c30:	e1a00000 	nop			; (mov r0, r0)
40020c34:	e1a0100d 	mov	r1, sp
40020c38:	e3a00002 	mov	r0, #2
40020c3c:	ebfff316 	bl	4001d89c <CyU3PUsbSendEP0Data>
40020c40:	e1a06000 	mov	r6, r0
40020c44:	e3560000 	cmp	r6, #0
40020c48:	1a000000 	bne	40020c50 <CyU3PUsbHandleGetStatus+0xc0>
40020c4c:	e3a07001 	mov	r7, #1
40020c50:	ea000008 	b	40020c78 <CyU3PUsbHandleGetStatus+0xe8>
40020c54:	e1a00000 	nop			; (mov r0, r0)
40020c58:	e20500ff 	and	r0, r5, #255	; 0xff
40020c5c:	ebfffe58 	bl	400205c4 <CyU3PUsbGetEpStatus>
40020c60:	e3500000 	cmp	r0, #0
40020c64:	1a000000 	bne	40020c6c <CyU3PUsbHandleGetStatus+0xdc>
40020c68:	e3a07001 	mov	r7, #1
40020c6c:	ea000001 	b	40020c78 <CyU3PUsbHandleGetStatus+0xe8>
40020c70:	e1a00000 	nop			; (mov r0, r0)
40020c74:	e1a00000 	nop			; (mov r0, r0)
40020c78:	e1a00000 	nop			; (mov r0, r0)
40020c7c:	e1a00007 	mov	r0, r7
40020c80:	eaffffdf 	b	40020c04 <CyU3PUsbHandleGetStatus+0x74>
40020c84:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbHandleSetFeature:

40020c88 <CyU3PUsbHandleSetFeature>:
40020c88:	e92d4070 	push	{r4, r5, r6, lr}
40020c8c:	e1a04000 	mov	r4, r0
40020c90:	e3a05000 	mov	r5, #0
40020c94:	e3540001 	cmp	r4, #1
40020c98:	0a000006 	beq	40020cb8 <CyU3PUsbHandleSetFeature+0x30>
40020c9c:	e3540002 	cmp	r4, #2
40020ca0:	0a00000b 	beq	40020cd4 <CyU3PUsbHandleSetFeature+0x4c>
40020ca4:	e3540030 	cmp	r4, #48	; 0x30
40020ca8:	0a00000e 	beq	40020ce8 <CyU3PUsbHandleSetFeature+0x60>
40020cac:	e3540031 	cmp	r4, #49	; 0x31
40020cb0:	1a00002a 	bne	40020d60 <CyU3PUsbHandleSetFeature+0xd8>
40020cb4:	ea00001a 	b	40020d24 <CyU3PUsbHandleSetFeature+0x9c>
40020cb8:	e1a00000 	nop			; (mov r0, r0)
40020cbc:	e59f00cc 	ldr	r0, [pc, #204]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020cc0:	e5d00006 	ldrb	r0, [r0, #6]
40020cc4:	e3800002 	orr	r0, r0, #2
40020cc8:	e59f10c0 	ldr	r1, [pc, #192]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020ccc:	e5c10006 	strb	r0, [r1, #6]
40020cd0:	e1a00000 	nop			; (mov r0, r0)
40020cd4:	ebfff0f4 	bl	4001d0ac <CyU3PUsbGetSpeed>
40020cd8:	e3500003 	cmp	r0, #3
40020cdc:	0a000000 	beq	40020ce4 <CyU3PUsbHandleSetFeature+0x5c>
40020ce0:	e3a05001 	mov	r5, #1
40020ce4:	ea00001f 	b	40020d68 <CyU3PUsbHandleSetFeature+0xe0>
40020ce8:	e1a00000 	nop			; (mov r0, r0)
40020cec:	ebfff0ee 	bl	4001d0ac <CyU3PUsbGetSpeed>
40020cf0:	e3500003 	cmp	r0, #3
40020cf4:	1a000009 	bne	40020d20 <CyU3PUsbHandleSetFeature+0x98>
40020cf8:	e59f0090 	ldr	r0, [pc, #144]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020cfc:	e5d00008 	ldrb	r0, [r0, #8]
40020d00:	e3500006 	cmp	r0, #6
40020d04:	1a000005 	bne	40020d20 <CyU3PUsbHandleSetFeature+0x98>
40020d08:	e59f0080 	ldr	r0, [pc, #128]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020d0c:	e5d00006 	ldrb	r0, [r0, #6]
40020d10:	e3800004 	orr	r0, r0, #4
40020d14:	e59f1074 	ldr	r1, [pc, #116]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020d18:	e5c10006 	strb	r0, [r1, #6]
40020d1c:	e3a05001 	mov	r5, #1
40020d20:	ea000010 	b	40020d68 <CyU3PUsbHandleSetFeature+0xe0>
40020d24:	e1a00000 	nop			; (mov r0, r0)
40020d28:	ebfff0df 	bl	4001d0ac <CyU3PUsbGetSpeed>
40020d2c:	e3500003 	cmp	r0, #3
40020d30:	1a000009 	bne	40020d5c <CyU3PUsbHandleSetFeature+0xd4>
40020d34:	e59f0054 	ldr	r0, [pc, #84]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020d38:	e5d00008 	ldrb	r0, [r0, #8]
40020d3c:	e3500006 	cmp	r0, #6
40020d40:	1a000005 	bne	40020d5c <CyU3PUsbHandleSetFeature+0xd4>
40020d44:	e59f0044 	ldr	r0, [pc, #68]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020d48:	e5d00006 	ldrb	r0, [r0, #6]
40020d4c:	e3800008 	orr	r0, r0, #8
40020d50:	e59f1038 	ldr	r1, [pc, #56]	; 40020d90 <CyU3PUsbHandleSetFeature+0x108>
40020d54:	e5c10006 	strb	r0, [r1, #6]
40020d58:	e3a05001 	mov	r5, #1
40020d5c:	ea000001 	b	40020d68 <CyU3PUsbHandleSetFeature+0xe0>
40020d60:	e1a00000 	nop			; (mov r0, r0)
40020d64:	e1a00000 	nop			; (mov r0, r0)
40020d68:	e1a00000 	nop			; (mov r0, r0)
40020d6c:	e3550000 	cmp	r5, #0
40020d70:	0a000001 	beq	40020d7c <CyU3PUsbHandleSetFeature+0xf4>
40020d74:	ebffef2f 	bl	4001ca38 <CyU3PUsbAckSetup>
40020d78:	ea000003 	b	40020d8c <CyU3PUsbHandleSetFeature+0x104>
40020d7c:	e3a02000 	mov	r2, #0
40020d80:	e3a01001 	mov	r1, #1
40020d84:	e1a00002 	mov	r0, r2
40020d88:	ebfff4ee 	bl	4001e148 <CyU3PUsbStall>
40020d8c:	e8bd8070 	pop	{r4, r5, r6, pc}
40020d90:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020d94 <CyU3PUsbReEnableUsb3>:
40020d94:	e92d4010 	push	{r4, lr}
40020d98:	e3a00051 	mov	r0, #81	; 0x51
40020d9c:	ebfffc3e 	bl	4001fe9c <CyU3PUsbAddToEventLog>
40020da0:	e59f018c 	ldr	r0, [pc, #396]	; 40020f34 <CyU3PUsbReEnableUsb3+0x1a0>
40020da4:	e5900004 	ldr	r0, [r0, #4]
40020da8:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020dac:	e59f1180 	ldr	r1, [pc, #384]	; 40020f34 <CyU3PUsbReEnableUsb3+0x1a0>
40020db0:	e5810004 	str	r0, [r1, #4]
40020db4:	e3e00000 	mvn	r0, #0
40020db8:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020dbc:	e5810004 	str	r0, [r1, #4]
40020dc0:	e59f0170 	ldr	r0, [pc, #368]	; 40020f38 <CyU3PUsbReEnableUsb3+0x1a4>
40020dc4:	e5810008 	str	r0, [r1, #8]
40020dc8:	e3e00000 	mvn	r0, #0
40020dcc:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020dd0:	e59f0164 	ldr	r0, [pc, #356]	; 40020f3c <CyU3PUsbReEnableUsb3+0x1a8>
40020dd4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020dd8:	e59f0160 	ldr	r0, [pc, #352]	; 40020f40 <CyU3PUsbReEnableUsb3+0x1ac>
40020ddc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020de0:	e3500000 	cmp	r0, #0
40020de4:	0a000003 	beq	40020df8 <CyU3PUsbReEnableUsb3+0x64>
40020de8:	e1a00001 	mov	r0, r1
40020dec:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020df0:	e3800c01 	orr	r0, r0, #256	; 0x100
40020df4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020df8:	e3a00000 	mov	r0, #0
40020dfc:	e59f113c 	ldr	r1, [pc, #316]	; 40020f40 <CyU3PUsbReEnableUsb3+0x1ac>
40020e00:	e5810044 	str	r0, [r1, #68]	; 0x44
40020e04:	e59f0138 	ldr	r0, [pc, #312]	; 40020f44 <CyU3PUsbReEnableUsb3+0x1b0>
40020e08:	e5900000 	ldr	r0, [r0]
40020e0c:	e3500000 	cmp	r0, #0
40020e10:	0a000003 	beq	40020e24 <CyU3PUsbReEnableUsb3+0x90>
40020e14:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020e18:	e59f1128 	ldr	r1, [pc, #296]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020e1c:	e5810050 	str	r0, [r1, #80]	; 0x50
40020e20:	ea000002 	b	40020e30 <CyU3PUsbReEnableUsb3+0x9c>
40020e24:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020e28:	e59f1118 	ldr	r1, [pc, #280]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020e2c:	e5810050 	str	r0, [r1, #80]	; 0x50
40020e30:	eb000574 	bl	40022408 <CyFx3Usb3LnkSetup>
40020e34:	e59f0110 	ldr	r0, [pc, #272]	; 40020f4c <CyU3PUsbReEnableUsb3+0x1b8>
40020e38:	e59f1108 	ldr	r1, [pc, #264]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020e3c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020e40:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020e44:	e1c10000 	bic	r0, r1, r0
40020e48:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020e4c:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020e50:	e5810158 	str	r0, [r1, #344]	; 0x158
40020e54:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020e58:	e581001c 	str	r0, [r1, #28]
40020e5c:	e3a01000 	mov	r1, #0
40020e60:	e3a00001 	mov	r0, #1
40020e64:	ebffee60 	bl	4001c7ec <CyU3PSetUsbCoreClock>
40020e68:	e3a0000a 	mov	r0, #10
40020e6c:	ebffcabe 	bl	4001396c <CyU3PBusyWait>
40020e70:	eb000537 	bl	40022354 <CyU3PVicDisableAllInterrupts>
40020e74:	e1a04000 	mov	r4, r0
40020e78:	e3a00000 	mov	r0, #0
40020e7c:	e59f10cc 	ldr	r1, [pc, #204]	; 40020f50 <CyU3PUsbReEnableUsb3+0x1bc>
40020e80:	e5810000 	str	r0, [r1]
40020e84:	e3a00a01 	mov	r0, #4096	; 0x1000
40020e88:	e59f10b8 	ldr	r1, [pc, #184]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020e8c:	e5810054 	str	r0, [r1, #84]	; 0x54
40020e90:	e1c10080 	bic	r0, r1, r0, lsl #1
40020e94:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e98:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020e9c:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020ea0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020ea4:	e3a00064 	mov	r0, #100	; 0x64
40020ea8:	ebffcaaf 	bl	4001396c <CyU3PBusyWait>
40020eac:	e59f0094 	ldr	r0, [pc, #148]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020eb0:	e5900000 	ldr	r0, [r0]
40020eb4:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020eb8:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020ebc:	e59f1084 	ldr	r1, [pc, #132]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020ec0:	e5810000 	str	r0, [r1]
40020ec4:	e59f0088 	ldr	r0, [pc, #136]	; 40020f54 <CyU3PUsbReEnableUsb3+0x1c0>
40020ec8:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020ecc:	e3a01080 	mov	r1, #128	; 0x80
40020ed0:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020ed4:	eb000591 	bl	40022520 <CyFx3UsbWritePhyReg>
40020ed8:	e3a01d06 	mov	r1, #384	; 0x180
40020edc:	e59f0074 	ldr	r0, [pc, #116]	; 40020f58 <CyU3PUsbReEnableUsb3+0x1c4>
40020ee0:	eb00058e 	bl	40022520 <CyFx3UsbWritePhyReg>
40020ee4:	e3a01080 	mov	r1, #128	; 0x80
40020ee8:	e59f006c 	ldr	r0, [pc, #108]	; 40020f5c <CyU3PUsbReEnableUsb3+0x1c8>
40020eec:	eb00058b 	bl	40022520 <CyFx3UsbWritePhyReg>
40020ef0:	e59f003c 	ldr	r0, [pc, #60]	; 40020f34 <CyU3PUsbReEnableUsb3+0x1a0>
40020ef4:	e5900004 	ldr	r0, [r0, #4]
40020ef8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020efc:	e59f1030 	ldr	r1, [pc, #48]	; 40020f34 <CyU3PUsbReEnableUsb3+0x1a0>
40020f00:	e5810004 	str	r0, [r1, #4]
40020f04:	e1a00004 	mov	r0, r4
40020f08:	eb00051f 	bl	4002238c <CyU3PVicEnableInterrupts>
40020f0c:	e59f0034 	ldr	r0, [pc, #52]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020f10:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020f14:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020f18:	e59f1028 	ldr	r1, [pc, #40]	; 40020f48 <CyU3PUsbReEnableUsb3+0x1b4>
40020f1c:	e5810054 	str	r0, [r1, #84]	; 0x54
40020f20:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020f24:	e581001c 	str	r0, [r1, #28]
40020f28:	e3a00064 	mov	r0, #100	; 0x64
40020f2c:	ebffca8e 	bl	4001396c <CyU3PBusyWait>
40020f30:	e8bd8010 	pop	{r4, pc}
40020f34:	e0030000 	.word	0xe0030000
40020f38:	00038081 	.word	0x00038081
40020f3c:	00004a3d 	.word	0x00004a3d
40020f40:	40031d60 	.word	0x40031d60
40020f44:	40030d60 	.word	0x40030d60
40020f48:	e0033000 	.word	0xe0033000
40020f4c:	00000908 	.word	0x00000908
40020f50:	40030d94 	.word	0x40030d94
40020f54:	00310418 	.word	0x00310418
40020f58:	00001006 	.word	0x00001006
40020f5c:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020f60 <CyU3PUsbRegisterEventCallback>:
40020f60:	e92d4010 	push	{r4, lr}
40020f64:	e1a04000 	mov	r4, r0
40020f68:	e59f0038 	ldr	r0, [pc, #56]	; 40020fa8 <CyU3PUsbRegisterEventCallback+0x48>
40020f6c:	e5804000 	str	r4, [r0]
40020f70:	e59f0034 	ldr	r0, [pc, #52]	; 40020fac <CyU3PUsbRegisterEventCallback+0x4c>
40020f74:	e5d00008 	ldrb	r0, [r0, #8]
40020f78:	e3500000 	cmp	r0, #0
40020f7c:	0a000008 	beq	40020fa4 <CyU3PUsbRegisterEventCallback+0x44>
40020f80:	e59f0028 	ldr	r0, [pc, #40]	; 40020fb0 <CyU3PUsbRegisterEventCallback+0x50>
40020f84:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020f88:	e59f101c 	ldr	r1, [pc, #28]	; 40020fac <CyU3PUsbRegisterEventCallback+0x4c>
40020f8c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020f90:	e1100001 	tst	r0, r1
40020f94:	0a000002 	beq	40020fa4 <CyU3PUsbRegisterEventCallback+0x44>
40020f98:	e3a01000 	mov	r1, #0
40020f9c:	e3a0000b 	mov	r0, #11
40020fa0:	e12fff34 	blx	r4
40020fa4:	e8bd8010 	pop	{r4, pc}
40020fa8:	40030dbc 	.word	0x40030dbc
40020fac:	40031d60 	.word	0x40031d60
40020fb0:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020fb4 <CyU3PUsbRegisterSetupCallback>:
40020fb4:	e59f2050 	ldr	r2, [pc, #80]	; 4002100c <CyU3PUsbRegisterSetupCallback+0x58>
40020fb8:	e5820000 	str	r0, [r2]
40020fbc:	e3510001 	cmp	r1, #1
40020fc0:	1a000003 	bne	40020fd4 <CyU3PUsbRegisterSetupCallback+0x20>
40020fc4:	e3a02000 	mov	r2, #0
40020fc8:	e59f3040 	ldr	r3, [pc, #64]	; 40021010 <CyU3PUsbRegisterSetupCallback+0x5c>
40020fcc:	e5c32007 	strb	r2, [r3, #7]
40020fd0:	ea00000c 	b	40021008 <CyU3PUsbRegisterSetupCallback+0x54>
40020fd4:	e3a02001 	mov	r2, #1
40020fd8:	e59f3030 	ldr	r3, [pc, #48]	; 40021010 <CyU3PUsbRegisterSetupCallback+0x5c>
40020fdc:	e5c32007 	strb	r2, [r3, #7]
40020fe0:	e2832000 	add	r2, r3, #0
40020fe4:	e5d22008 	ldrb	r2, [r2, #8]
40020fe8:	e3520000 	cmp	r2, #0
40020fec:	da000005 	ble	40021008 <CyU3PUsbRegisterSetupCallback+0x54>
40020ff0:	e2832000 	add	r2, r3, #0
40020ff4:	e5d22008 	ldrb	r2, [r2, #8]
40020ff8:	e3520003 	cmp	r2, #3
40020ffc:	aa000001 	bge	40021008 <CyU3PUsbRegisterSetupCallback+0x54>
40021000:	e3a02003 	mov	r2, #3
40021004:	e5c32008 	strb	r2, [r3, #8]
40021008:	e12fff1e 	bx	lr
4002100c:	40030dc0 	.word	0x40030dc0
40021010:	40031d60 	.word	0x40031d60

Disassembly of section i.CyU3PUsbResetHandler:

40021014 <CyU3PUsbResetHandler>:
40021014:	e92d4010 	push	{r4, lr}
40021018:	e3a00001 	mov	r0, #1
4002101c:	e59f1124 	ldr	r1, [pc, #292]	; 40021148 <CyU3PUsbResetHandler+0x134>
40021020:	e5c10009 	strb	r0, [r1, #9]
40021024:	e59f0120 	ldr	r0, [pc, #288]	; 4002114c <CyU3PUsbResetHandler+0x138>
40021028:	e5900018 	ldr	r0, [r0, #24]
4002102c:	e59f1118 	ldr	r1, [pc, #280]	; 4002114c <CyU3PUsbResetHandler+0x138>
40021030:	e581000c 	str	r0, [r1, #12]
40021034:	e2810000 	add	r0, r1, #0
40021038:	e5900014 	ldr	r0, [r0, #20]
4002103c:	e5810010 	str	r0, [r1, #16]
40021040:	e59f0108 	ldr	r0, [pc, #264]	; 40021150 <CyU3PUsbResetHandler+0x13c>
40021044:	e5900000 	ldr	r0, [r0]
40021048:	e3500000 	cmp	r0, #0
4002104c:	0a000010 	beq	40021094 <CyU3PUsbResetHandler+0x80>
40021050:	e59f00f0 	ldr	r0, [pc, #240]	; 40021148 <CyU3PUsbResetHandler+0x134>
40021054:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40021058:	e3500000 	cmp	r0, #0
4002105c:	1a000007 	bne	40021080 <CyU3PUsbResetHandler+0x6c>
40021060:	e3a01000 	mov	r1, #0
40021064:	e1a00001 	mov	r0, r1
40021068:	e59f20e0 	ldr	r2, [pc, #224]	; 40021150 <CyU3PUsbResetHandler+0x13c>
4002106c:	e5922000 	ldr	r2, [r2]
40021070:	e12fff32 	blx	r2
40021074:	e3a00001 	mov	r0, #1
40021078:	e59f10c8 	ldr	r1, [pc, #200]	; 40021148 <CyU3PUsbResetHandler+0x134>
4002107c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021080:	e3a01000 	mov	r1, #0
40021084:	e3a00004 	mov	r0, #4
40021088:	e59f20c0 	ldr	r2, [pc, #192]	; 40021150 <CyU3PUsbResetHandler+0x13c>
4002108c:	e5922000 	ldr	r2, [r2]
40021090:	e12fff32 	blx	r2
40021094:	e59f00b8 	ldr	r0, [pc, #184]	; 40021154 <CyU3PUsbResetHandler+0x140>
40021098:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
4002109c:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400210a0:	e59f10ac 	ldr	r1, [pc, #172]	; 40021154 <CyU3PUsbResetHandler+0x140>
400210a4:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400210a8:	e3a00001 	mov	r0, #1
400210ac:	ebffca2e 	bl	4001396c <CyU3PBusyWait>
400210b0:	e59f009c 	ldr	r0, [pc, #156]	; 40021154 <CyU3PUsbResetHandler+0x140>
400210b4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400210b8:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400210bc:	e59f1090 	ldr	r1, [pc, #144]	; 40021154 <CyU3PUsbResetHandler+0x140>
400210c0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400210c4:	e3a00001 	mov	r0, #1
400210c8:	ebffca27 	bl	4001396c <CyU3PBusyWait>
400210cc:	e3a00040 	mov	r0, #64	; 0x40
400210d0:	e59f107c 	ldr	r1, [pc, #124]	; 40021154 <CyU3PUsbResetHandler+0x140>
400210d4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210d8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210dc:	e1c10000 	bic	r0, r1, r0
400210e0:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
400210e4:	e3800901 	orr	r0, r0, #16384	; 0x4000
400210e8:	e5810418 	str	r0, [r1, #1048]	; 0x418
400210ec:	e1a00001 	mov	r0, r1
400210f0:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
400210f4:	e3800901 	orr	r0, r0, #16384	; 0x4000
400210f8:	e5810498 	str	r0, [r1, #1176]	; 0x498
400210fc:	e3a00001 	mov	r0, #1
40021100:	ebfffc14 	bl	40020158 <CyU3PUsbEpPrepare>
40021104:	e59f003c 	ldr	r0, [pc, #60]	; 40021148 <CyU3PUsbResetHandler+0x134>
40021108:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
4002110c:	e3500000 	cmp	r0, #0
40021110:	0a00000b 	beq	40021144 <CyU3PUsbResetHandler+0x130>
40021114:	e59f002c 	ldr	r0, [pc, #44]	; 40021148 <CyU3PUsbResetHandler+0x134>
40021118:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4002111c:	e3500003 	cmp	r0, #3
40021120:	3a000002 	bcc	40021130 <CyU3PUsbResetHandler+0x11c>
40021124:	e3a00000 	mov	r0, #0
40021128:	e59f1018 	ldr	r1, [pc, #24]	; 40021148 <CyU3PUsbResetHandler+0x134>
4002112c:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021130:	e59f001c 	ldr	r0, [pc, #28]	; 40021154 <CyU3PUsbResetHandler+0x140>
40021134:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021138:	e3100901 	tst	r0, #16384	; 0x4000
4002113c:	1a000000 	bne	40021144 <CyU3PUsbResetHandler+0x130>
40021140:	ebffff13 	bl	40020d94 <CyU3PUsbReEnableUsb3>
40021144:	e8bd8010 	pop	{r4, pc}
40021148:	40031d60 	.word	0x40031d60
4002114c:	40031fb8 	.word	0x40031fb8
40021150:	40030dbc 	.word	0x40030dbc
40021154:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40021158 <CyU3PUsbResumeHandler>:
40021158:	e92d4010 	push	{r4, lr}
4002115c:	e59f003c 	ldr	r0, [pc, #60]	; 400211a0 <CyU3PUsbResumeHandler+0x48>
40021160:	e5d00008 	ldrb	r0, [r0, #8]
40021164:	e3500005 	cmp	r0, #5
40021168:	ba00000b 	blt	4002119c <CyU3PUsbResumeHandler+0x44>
4002116c:	e59f0030 	ldr	r0, [pc, #48]	; 400211a4 <CyU3PUsbResumeHandler+0x4c>
40021170:	e5900000 	ldr	r0, [r0]
40021174:	e3500000 	cmp	r0, #0
40021178:	0a000004 	beq	40021190 <CyU3PUsbResumeHandler+0x38>
4002117c:	e3a01000 	mov	r1, #0
40021180:	e3a00003 	mov	r0, #3
40021184:	e59f2018 	ldr	r2, [pc, #24]	; 400211a4 <CyU3PUsbResumeHandler+0x4c>
40021188:	e5922000 	ldr	r2, [r2]
4002118c:	e12fff32 	blx	r2
40021190:	e3a00006 	mov	r0, #6
40021194:	e59f1004 	ldr	r1, [pc, #4]	; 400211a0 <CyU3PUsbResumeHandler+0x48>
40021198:	e5c10008 	strb	r0, [r1, #8]
4002119c:	e8bd8010 	pop	{r4, pc}
400211a0:	40031d60 	.word	0x40031d60
400211a4:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbSSConnecthandler:

400211a8 <CyU3PUsbSSConnecthandler>:
400211a8:	e92d4010 	push	{r4, lr}
400211ac:	e59f01d4 	ldr	r0, [pc, #468]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
400211b0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211b4:	e3100a02 	tst	r0, #8192	; 0x2000
400211b8:	0a00002b 	beq	4002126c <CyU3PUsbSSConnecthandler+0xc4>
400211bc:	e59f01c8 	ldr	r0, [pc, #456]	; 4002138c <CyU3PUsbSSConnecthandler+0x1e4>
400211c0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400211c4:	e200403f 	and	r4, r0, #63	; 0x3f
400211c8:	ea000003 	b	400211dc <CyU3PUsbSSConnecthandler+0x34>
400211cc:	ebffa6b0 	bl	4000ac94 <_txe_thread_relinquish>
400211d0:	e59f01b4 	ldr	r0, [pc, #436]	; 4002138c <CyU3PUsbSSConnecthandler+0x1e4>
400211d4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400211d8:	e200403f 	and	r4, r0, #63	; 0x3f
400211dc:	e59f01a4 	ldr	r0, [pc, #420]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
400211e0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211e4:	e3100901 	tst	r0, #16384	; 0x4000
400211e8:	0a000001 	beq	400211f4 <CyU3PUsbSSConnecthandler+0x4c>
400211ec:	e3540008 	cmp	r4, #8
400211f0:	0afffff5 	beq	400211cc <CyU3PUsbSSConnecthandler+0x24>
400211f4:	e3540017 	cmp	r4, #23
400211f8:	1a00000a 	bne	40021228 <CyU3PUsbSSConnecthandler+0x80>
400211fc:	e59f018c 	ldr	r0, [pc, #396]	; 40021390 <CyU3PUsbSSConnecthandler+0x1e8>
40021200:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40021204:	e3500000 	cmp	r0, #0
40021208:	1a000002 	bne	40021218 <CyU3PUsbSSConnecthandler+0x70>
4002120c:	e3a00010 	mov	r0, #16
40021210:	ebfffb21 	bl	4001fe9c <CyU3PUsbAddToEventLog>
40021214:	eb000060 	bl	4002139c <CyU3PUsbSSDisConnecthandler>
40021218:	e3a00003 	mov	r0, #3
4002121c:	e59f116c 	ldr	r1, [pc, #364]	; 40021390 <CyU3PUsbSSConnecthandler+0x1e8>
40021220:	e5c10009 	strb	r0, [r1, #9]
40021224:	e8bd8010 	pop	{r4, pc}
40021228:	e59f0158 	ldr	r0, [pc, #344]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
4002122c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021230:	e3100901 	tst	r0, #16384	; 0x4000
40021234:	1a000000 	bne	4002123c <CyU3PUsbSSConnecthandler+0x94>
40021238:	eafffff9 	b	40021224 <CyU3PUsbSSConnecthandler+0x7c>
4002123c:	e59f0144 	ldr	r0, [pc, #324]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
40021240:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40021244:	e3800008 	orr	r0, r0, #8
40021248:	e59f1138 	ldr	r1, [pc, #312]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
4002124c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40021250:	e1a00001 	mov	r0, r1
40021254:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021258:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4002125c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021260:	e1a00001 	mov	r0, r1
40021264:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40021268:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4002126c:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40021270:	e59f111c 	ldr	r1, [pc, #284]	; 40021394 <CyU3PUsbSSConnecthandler+0x1ec>
40021274:	e5810008 	str	r0, [r1, #8]
40021278:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4002127c:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40021280:	e581001c 	str	r0, [r1, #28]
40021284:	e3a00003 	mov	r0, #3
40021288:	e59f1100 	ldr	r1, [pc, #256]	; 40021390 <CyU3PUsbSSConnecthandler+0x1e8>
4002128c:	e5c10009 	strb	r0, [r1, #9]
40021290:	e59f00f0 	ldr	r0, [pc, #240]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
40021294:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021298:	e3800902 	orr	r0, r0, #32768	; 0x8000
4002129c:	e59f10e4 	ldr	r1, [pc, #228]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
400212a0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400212a4:	e1a00001 	mov	r0, r1
400212a8:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400212ac:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400212b0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400212b4:	e3a00001 	mov	r0, #1
400212b8:	ebffc9ab 	bl	4001396c <CyU3PBusyWait>
400212bc:	e59f00c4 	ldr	r0, [pc, #196]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
400212c0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400212c4:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400212c8:	e59f10b8 	ldr	r1, [pc, #184]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
400212cc:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400212d0:	e3a00001 	mov	r0, #1
400212d4:	ebffc9a4 	bl	4001396c <CyU3PBusyWait>
400212d8:	e3a00000 	mov	r0, #0
400212dc:	ebffeecd 	bl	4001ce18 <CyU3PUsbFlushEp>
400212e0:	e3a00080 	mov	r0, #128	; 0x80
400212e4:	ebffeecb 	bl	4001ce18 <CyU3PUsbFlushEp>
400212e8:	e59f009c 	ldr	r0, [pc, #156]	; 4002138c <CyU3PUsbSSConnecthandler+0x1e4>
400212ec:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
400212f0:	e3800001 	orr	r0, r0, #1
400212f4:	e59f1090 	ldr	r1, [pc, #144]	; 4002138c <CyU3PUsbSSConnecthandler+0x1e4>
400212f8:	e5810500 	str	r0, [r1, #1280]	; 0x500
400212fc:	e3a00c02 	mov	r0, #512	; 0x200
40021300:	e1c11200 	bic	r1, r1, r0, lsl #4
40021304:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021308:	e1810200 	orr	r0, r1, r0, lsl #4
4002130c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021310:	e3800001 	orr	r0, r0, #1
40021314:	e2811a02 	add	r1, r1, #8192	; 0x2000
40021318:	e5810600 	str	r0, [r1, #1536]	; 0x600
4002131c:	e3a00c02 	mov	r0, #512	; 0x200
40021320:	e1c11200 	bic	r1, r1, r0, lsl #4
40021324:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021328:	e3a00000 	mov	r0, #0
4002132c:	ebfff121 	bl	4001d7b8 <CyU3PUsbResetEp>
40021330:	e3a00000 	mov	r0, #0
40021334:	ebffeeb7 	bl	4001ce18 <CyU3PUsbFlushEp>
40021338:	e3a00080 	mov	r0, #128	; 0x80
4002133c:	ebfff11d 	bl	4001d7b8 <CyU3PUsbResetEp>
40021340:	e3a00080 	mov	r0, #128	; 0x80
40021344:	ebffeeb3 	bl	4001ce18 <CyU3PUsbFlushEp>
40021348:	e3a00c02 	mov	r0, #512	; 0x200
4002134c:	e59f1034 	ldr	r1, [pc, #52]	; 40021388 <CyU3PUsbSSConnecthandler+0x1e0>
40021350:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021354:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021358:	e59f0038 	ldr	r0, [pc, #56]	; 40021398 <CyU3PUsbSSConnecthandler+0x1f0>
4002135c:	e5900000 	ldr	r0, [r0]
40021360:	e3500000 	cmp	r0, #0
40021364:	0a000004 	beq	4002137c <CyU3PUsbSSConnecthandler+0x1d4>
40021368:	e3a01001 	mov	r1, #1
4002136c:	e3a00000 	mov	r0, #0
40021370:	e59f2020 	ldr	r2, [pc, #32]	; 40021398 <CyU3PUsbSSConnecthandler+0x1f0>
40021374:	e5922000 	ldr	r2, [r2]
40021378:	e12fff32 	blx	r2
4002137c:	e3a00003 	mov	r0, #3
40021380:	ebfffb74 	bl	40020158 <CyU3PUsbEpPrepare>
40021384:	eaffffa6 	b	40021224 <CyU3PUsbSSConnecthandler+0x7c>
40021388:	e0031000 	.word	0xe0031000
4002138c:	e0033000 	.word	0xe0033000
40021390:	40031d60 	.word	0x40031d60
40021394:	e0052000 	.word	0xe0052000
40021398:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

4002139c <CyU3PUsbSSDisConnecthandler>:
4002139c:	e92d4010 	push	{r4, lr}
400213a0:	e59f0164 	ldr	r0, [pc, #356]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
400213a4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400213a8:	e3500000 	cmp	r0, #0
400213ac:	0a000005 	beq	400213c8 <CyU3PUsbSSDisConnecthandler+0x2c>
400213b0:	e59f0158 	ldr	r0, [pc, #344]	; 40021510 <CyU3PUsbSSDisConnecthandler+0x174>
400213b4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400213b8:	e59f114c 	ldr	r1, [pc, #332]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
400213bc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400213c0:	e1100001 	tst	r0, r1
400213c4:	0a00004e 	beq	40021504 <CyU3PUsbSSDisConnecthandler+0x168>
400213c8:	e59f013c 	ldr	r0, [pc, #316]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
400213cc:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400213d0:	e2800001 	add	r0, r0, #1
400213d4:	e59f1130 	ldr	r1, [pc, #304]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
400213d8:	e5810058 	str	r0, [r1, #88]	; 0x58
400213dc:	e59f0130 	ldr	r0, [pc, #304]	; 40021514 <CyU3PUsbSSDisConnecthandler+0x178>
400213e0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400213e4:	e3100a02 	tst	r0, #8192	; 0x2000
400213e8:	0a000020 	beq	40021470 <CyU3PUsbSSDisConnecthandler+0xd4>
400213ec:	e59f0120 	ldr	r0, [pc, #288]	; 40021514 <CyU3PUsbSSDisConnecthandler+0x178>
400213f0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400213f4:	e3c00903 	bic	r0, r0, #49152	; 0xc000
400213f8:	e59f1114 	ldr	r1, [pc, #276]	; 40021514 <CyU3PUsbSSDisConnecthandler+0x178>
400213fc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021400:	e3a00002 	mov	r0, #2
40021404:	ebffc958 	bl	4001396c <CyU3PBusyWait>
40021408:	e59f0108 	ldr	r0, [pc, #264]	; 40021518 <CyU3PUsbSSDisConnecthandler+0x17c>
4002140c:	e5900004 	ldr	r0, [r0, #4]
40021410:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021414:	e59f10fc 	ldr	r1, [pc, #252]	; 40021518 <CyU3PUsbSSDisConnecthandler+0x17c>
40021418:	e5810004 	str	r0, [r1, #4]
4002141c:	e3a00001 	mov	r0, #1
40021420:	ebffc951 	bl	4001396c <CyU3PBusyWait>
40021424:	e59f00f0 	ldr	r0, [pc, #240]	; 4002151c <CyU3PUsbSSDisConnecthandler+0x180>
40021428:	e590001c 	ldr	r0, [r0, #28]
4002142c:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021430:	e59f10e4 	ldr	r1, [pc, #228]	; 4002151c <CyU3PUsbSSDisConnecthandler+0x180>
40021434:	e581001c 	str	r0, [r1, #28]
40021438:	e59f00e0 	ldr	r0, [pc, #224]	; 40021520 <CyU3PUsbSSDisConnecthandler+0x184>
4002143c:	e5900000 	ldr	r0, [r0]
40021440:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021444:	e3a00001 	mov	r0, #1
40021448:	ebffc947 	bl	4001396c <CyU3PBusyWait>
4002144c:	e59f00c4 	ldr	r0, [pc, #196]	; 40021518 <CyU3PUsbSSDisConnecthandler+0x17c>
40021450:	e5900004 	ldr	r0, [r0, #4]
40021454:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021458:	e59f10b8 	ldr	r1, [pc, #184]	; 40021518 <CyU3PUsbSSDisConnecthandler+0x17c>
4002145c:	e5810004 	str	r0, [r1, #4]
40021460:	e3a01000 	mov	r1, #0
40021464:	e3a00002 	mov	r0, #2
40021468:	ebffecdf 	bl	4001c7ec <CyU3PSetUsbCoreClock>
4002146c:	ea000025 	b	40021508 <CyU3PUsbSSDisConnecthandler+0x16c>
40021470:	e3a00001 	mov	r0, #1
40021474:	e59f1090 	ldr	r1, [pc, #144]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
40021478:	e5c10009 	strb	r0, [r1, #9]
4002147c:	ebffef8c 	bl	4001d2b4 <CyU3PUsbPhyDisable>
40021480:	e59f0084 	ldr	r0, [pc, #132]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
40021484:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40021488:	e3500000 	cmp	r0, #0
4002148c:	0a000019 	beq	400214f8 <CyU3PUsbSSDisConnecthandler+0x15c>
40021490:	e59f008c 	ldr	r0, [pc, #140]	; 40021524 <CyU3PUsbSSDisConnecthandler+0x188>
40021494:	e5900000 	ldr	r0, [r0]
40021498:	e3500000 	cmp	r0, #0
4002149c:	0a000005 	beq	400214b8 <CyU3PUsbSSDisConnecthandler+0x11c>
400214a0:	e3a00000 	mov	r0, #0
400214a4:	e59f1078 	ldr	r1, [pc, #120]	; 40021524 <CyU3PUsbSSDisConnecthandler+0x188>
400214a8:	e5810000 	str	r0, [r1]
400214ac:	e3a00001 	mov	r0, #1
400214b0:	ebffeff5 	bl	4001d48c <CyU3PUsbPhyEnable>
400214b4:	ea000013 	b	40021508 <CyU3PUsbSSDisConnecthandler+0x16c>
400214b8:	e3a00003 	mov	r0, #3
400214bc:	e59f1048 	ldr	r1, [pc, #72]	; 4002150c <CyU3PUsbSSDisConnecthandler+0x170>
400214c0:	e5c10008 	strb	r0, [r1, #8]
400214c4:	e3a00000 	mov	r0, #0
400214c8:	e5c10009 	strb	r0, [r1, #9]
400214cc:	e581002c 	str	r0, [r1, #44]	; 0x2c
400214d0:	e59f0050 	ldr	r0, [pc, #80]	; 40021528 <CyU3PUsbSSDisConnecthandler+0x18c>
400214d4:	e5900000 	ldr	r0, [r0]
400214d8:	e3500000 	cmp	r0, #0
400214dc:	0a000009 	beq	40021508 <CyU3PUsbSSDisConnecthandler+0x16c>
400214e0:	e3a01000 	mov	r1, #0
400214e4:	e3a00014 	mov	r0, #20
400214e8:	e59f2038 	ldr	r2, [pc, #56]	; 40021528 <CyU3PUsbSSDisConnecthandler+0x18c>
400214ec:	e5922000 	ldr	r2, [r2]
400214f0:	e12fff32 	blx	r2
400214f4:	ea000003 	b	40021508 <CyU3PUsbSSDisConnecthandler+0x16c>
400214f8:	e3a00000 	mov	r0, #0
400214fc:	ebffefe2 	bl	4001d48c <CyU3PUsbPhyEnable>
40021500:	ea000000 	b	40021508 <CyU3PUsbSSDisConnecthandler+0x16c>
40021504:	ebfffa07 	bl	4001fd28 <CyU3PUibVbusChangeHandler>
40021508:	e8bd8010 	pop	{r4, pc}
4002150c:	40031d60 	.word	0x40031d60
40021510:	e0051000 	.word	0xe0051000
40021514:	e0031000 	.word	0xe0031000
40021518:	e0030000 	.word	0xe0030000
4002151c:	e0033000 	.word	0xe0033000
40021520:	40030c78 	.word	0x40030c78
40021524:	40030d94 	.word	0x40030d94
40021528:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PUsbSSReset:

4002152c <CyU3PUsbSSReset>:
4002152c:	e92d4010 	push	{r4, lr}
40021530:	e3a04000 	mov	r4, #0
40021534:	e59f0170 	ldr	r0, [pc, #368]	; 400216ac <CyU3PUsbSSReset+0x180>
40021538:	e5d00009 	ldrb	r0, [r0, #9]
4002153c:	e3500003 	cmp	r0, #3
40021540:	0a000000 	beq	40021548 <CyU3PUsbSSReset+0x1c>
40021544:	e8bd8010 	pop	{r4, pc}
40021548:	e59f0160 	ldr	r0, [pc, #352]	; 400216b0 <CyU3PUsbSSReset+0x184>
4002154c:	e5900000 	ldr	r0, [r0]
40021550:	e3500000 	cmp	r0, #0
40021554:	0a000004 	beq	4002156c <CyU3PUsbSSReset+0x40>
40021558:	e3a01001 	mov	r1, #1
4002155c:	e3a00004 	mov	r0, #4
40021560:	e59f2148 	ldr	r2, [pc, #328]	; 400216b0 <CyU3PUsbSSReset+0x184>
40021564:	e5922000 	ldr	r2, [r2]
40021568:	e12fff32 	blx	r2
4002156c:	e59f0140 	ldr	r0, [pc, #320]	; 400216b4 <CyU3PUsbSSReset+0x188>
40021570:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021574:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40021578:	e59f1134 	ldr	r1, [pc, #308]	; 400216b4 <CyU3PUsbSSReset+0x188>
4002157c:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021580:	e3a00001 	mov	r0, #1
40021584:	ebffc8f8 	bl	4001396c <CyU3PBusyWait>
40021588:	e59f0124 	ldr	r0, [pc, #292]	; 400216b4 <CyU3PUsbSSReset+0x188>
4002158c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021590:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021594:	e59f1118 	ldr	r1, [pc, #280]	; 400216b4 <CyU3PUsbSSReset+0x188>
40021598:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
4002159c:	e3a00001 	mov	r0, #1
400215a0:	ebffc8f1 	bl	4001396c <CyU3PBusyWait>
400215a4:	e3a00000 	mov	r0, #0
400215a8:	ebffee1a 	bl	4001ce18 <CyU3PUsbFlushEp>
400215ac:	e3a00080 	mov	r0, #128	; 0x80
400215b0:	ebffee18 	bl	4001ce18 <CyU3PUsbFlushEp>
400215b4:	e59f00fc 	ldr	r0, [pc, #252]	; 400216b8 <CyU3PUsbSSReset+0x18c>
400215b8:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
400215bc:	e3800001 	orr	r0, r0, #1
400215c0:	e59f10f0 	ldr	r1, [pc, #240]	; 400216b8 <CyU3PUsbSSReset+0x18c>
400215c4:	e5810500 	str	r0, [r1, #1280]	; 0x500
400215c8:	e3a00c02 	mov	r0, #512	; 0x200
400215cc:	e1c11200 	bic	r1, r1, r0, lsl #4
400215d0:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400215d4:	e1810200 	orr	r0, r1, r0, lsl #4
400215d8:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
400215dc:	e3800001 	orr	r0, r0, #1
400215e0:	e2811a02 	add	r1, r1, #8192	; 0x2000
400215e4:	e5810600 	str	r0, [r1, #1536]	; 0x600
400215e8:	e3a00c02 	mov	r0, #512	; 0x200
400215ec:	e1c11200 	bic	r1, r1, r0, lsl #4
400215f0:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400215f4:	e3a00000 	mov	r0, #0
400215f8:	ebfff06e 	bl	4001d7b8 <CyU3PUsbResetEp>
400215fc:	e3a00000 	mov	r0, #0
40021600:	ebffee04 	bl	4001ce18 <CyU3PUsbFlushEp>
40021604:	e3a00080 	mov	r0, #128	; 0x80
40021608:	ebfff06a 	bl	4001d7b8 <CyU3PUsbResetEp>
4002160c:	e3a00080 	mov	r0, #128	; 0x80
40021610:	ebffee00 	bl	4001ce18 <CyU3PUsbFlushEp>
40021614:	e3a00c02 	mov	r0, #512	; 0x200
40021618:	e59f1094 	ldr	r1, [pc, #148]	; 400216b4 <CyU3PUsbSSReset+0x188>
4002161c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021620:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021624:	e3a04001 	mov	r4, #1
40021628:	ea000019 	b	40021694 <CyU3PUsbSSReset+0x168>
4002162c:	e0840084 	add	r0, r4, r4, lsl #1
40021630:	e59f1084 	ldr	r1, [pc, #132]	; 400216bc <CyU3PUsbSSReset+0x190>
40021634:	e0810100 	add	r0, r1, r0, lsl #2
40021638:	e5900004 	ldr	r0, [r0, #4]
4002163c:	e3500001 	cmp	r0, #1
40021640:	1a000005 	bne	4002165c <CyU3PUsbSSReset+0x130>
40021644:	e3840080 	orr	r0, r4, #128	; 0x80
40021648:	ebffedf2 	bl	4001ce18 <CyU3PUsbFlushEp>
4002164c:	e3840080 	orr	r0, r4, #128	; 0x80
40021650:	e3a02001 	mov	r2, #1
40021654:	e3a01000 	mov	r1, #0
40021658:	ebfff2ba 	bl	4001e148 <CyU3PUsbStall>
4002165c:	e0840084 	add	r0, r4, r4, lsl #1
40021660:	e59f1058 	ldr	r1, [pc, #88]	; 400216c0 <CyU3PUsbSSReset+0x194>
40021664:	e0810100 	add	r0, r1, r0, lsl #2
40021668:	e5900004 	ldr	r0, [r0, #4]
4002166c:	e3500001 	cmp	r0, #1
40021670:	1a000005 	bne	4002168c <CyU3PUsbSSReset+0x160>
40021674:	e1a00004 	mov	r0, r4
40021678:	ebffede6 	bl	4001ce18 <CyU3PUsbFlushEp>
4002167c:	e3a02001 	mov	r2, #1
40021680:	e3a01000 	mov	r1, #0
40021684:	e1a00004 	mov	r0, r4
40021688:	ebfff2ae 	bl	4001e148 <CyU3PUsbStall>
4002168c:	e2840001 	add	r0, r4, #1
40021690:	e20040ff 	and	r4, r0, #255	; 0xff
40021694:	e3540010 	cmp	r4, #16
40021698:	baffffe3 	blt	4002162c <CyU3PUsbSSReset+0x100>
4002169c:	e3a00005 	mov	r0, #5
400216a0:	e59f1004 	ldr	r1, [pc, #4]	; 400216ac <CyU3PUsbSSReset+0x180>
400216a4:	e5c10008 	strb	r0, [r1, #8]
400216a8:	eaffffa5 	b	40021544 <CyU3PUsbSSReset+0x18>
400216ac:	40031d60 	.word	0x40031d60
400216b0:	40030dbc 	.word	0x40030dbc
400216b4:	e0031000 	.word	0xe0031000
400216b8:	e0033000 	.word	0xe0033000
400216bc:	40031bdc 	.word	0x40031bdc
400216c0:	40031c9c 	.word	0x40031c9c

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

400216c4 <CyU3PUsbSendCompliancePatterns>:
400216c4:	e92d4070 	push	{r4, r5, r6, lr}
400216c8:	e3a04001 	mov	r4, #1
400216cc:	e59f01ec 	ldr	r0, [pc, #492]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216d0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400216d4:	e200503f 	and	r5, r0, #63	; 0x3f
400216d8:	e3550017 	cmp	r5, #23
400216dc:	0a000000 	beq	400216e4 <CyU3PUsbSendCompliancePatterns+0x20>
400216e0:	e8bd8070 	pop	{r4, r5, r6, pc}
400216e4:	e3a00003 	mov	r0, #3
400216e8:	e59f11d4 	ldr	r1, [pc, #468]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
400216ec:	e5c10009 	strb	r0, [r1, #9]
400216f0:	e3a00001 	mov	r0, #1
400216f4:	e5810064 	str	r0, [r1, #100]	; 0x64
400216f8:	e3a00000 	mov	r0, #0
400216fc:	e5810060 	str	r0, [r1, #96]	; 0x60
40021700:	e3a00d57 	mov	r0, #5568	; 0x15c0
40021704:	e59f11b4 	ldr	r1, [pc, #436]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021708:	e5810054 	str	r0, [r1, #84]	; 0x54
4002170c:	e59f01b4 	ldr	r0, [pc, #436]	; 400218c8 <CyU3PUsbSendCompliancePatterns+0x204>
40021710:	e5900000 	ldr	r0, [r0]
40021714:	e3500000 	cmp	r0, #0
40021718:	0a000004 	beq	40021730 <CyU3PUsbSendCompliancePatterns+0x6c>
4002171c:	e3a01000 	mov	r1, #0
40021720:	e3a00015 	mov	r0, #21
40021724:	e59f219c 	ldr	r2, [pc, #412]	; 400218c8 <CyU3PUsbSendCompliancePatterns+0x204>
40021728:	e5922000 	ldr	r2, [r2]
4002172c:	e12fff32 	blx	r2
40021730:	e1a00000 	nop			; (mov r0, r0)
40021734:	e59f0184 	ldr	r0, [pc, #388]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021738:	e5900064 	ldr	r0, [r0, #100]	; 0x64
4002173c:	e3100002 	tst	r0, #2
40021740:	0a000031 	beq	4002180c <CyU3PUsbSendCompliancePatterns+0x148>
40021744:	e59f0180 	ldr	r0, [pc, #384]	; 400218cc <CyU3PUsbSendCompliancePatterns+0x208>
40021748:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002174c:	e59f116c 	ldr	r1, [pc, #364]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021750:	e5810138 	str	r0, [r1, #312]	; 0x138
40021754:	e3a00001 	mov	r0, #1
40021758:	ebff9d9c 	bl	40008dd0 <_tx_thread_sleep>
4002175c:	e59f015c 	ldr	r0, [pc, #348]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021760:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021764:	e3c00002 	bic	r0, r0, #2
40021768:	e59f1150 	ldr	r1, [pc, #336]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002176c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021770:	e3540004 	cmp	r4, #4
40021774:	1a000020 	bne	400217fc <CyU3PUsbSendCompliancePatterns+0x138>
40021778:	ea00000d 	b	400217b4 <CyU3PUsbSendCompliancePatterns+0xf0>
4002177c:	e59f013c 	ldr	r0, [pc, #316]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021780:	e590001c 	ldr	r0, [r0, #28]
40021784:	e3800008 	orr	r0, r0, #8
40021788:	e59f1130 	ldr	r1, [pc, #304]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002178c:	e581001c 	str	r0, [r1, #28]
40021790:	e3a0000a 	mov	r0, #10
40021794:	ebffc874 	bl	4001396c <CyU3PBusyWait>
40021798:	e59f0120 	ldr	r0, [pc, #288]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002179c:	e590001c 	ldr	r0, [r0, #28]
400217a0:	e3c00008 	bic	r0, r0, #8
400217a4:	e59f1114 	ldr	r1, [pc, #276]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400217a8:	e581001c 	str	r0, [r1, #28]
400217ac:	e3a0001e 	mov	r0, #30
400217b0:	ebffc86d 	bl	4001396c <CyU3PBusyWait>
400217b4:	e59f0104 	ldr	r0, [pc, #260]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
400217b8:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400217bc:	e3100006 	tst	r0, #6
400217c0:	1a00000d 	bne	400217fc <CyU3PUsbSendCompliancePatterns+0x138>
400217c4:	e59f00f8 	ldr	r0, [pc, #248]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
400217c8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400217cc:	e3500000 	cmp	r0, #0
400217d0:	0a000005 	beq	400217ec <CyU3PUsbSendCompliancePatterns+0x128>
400217d4:	e59f00f4 	ldr	r0, [pc, #244]	; 400218d0 <CyU3PUsbSendCompliancePatterns+0x20c>
400217d8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400217dc:	e59f10e0 	ldr	r1, [pc, #224]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
400217e0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400217e4:	e1100001 	tst	r0, r1
400217e8:	0a000003 	beq	400217fc <CyU3PUsbSendCompliancePatterns+0x138>
400217ec:	e59f00d0 	ldr	r0, [pc, #208]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
400217f0:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400217f4:	e3500000 	cmp	r0, #0
400217f8:	0affffdf 	beq	4002177c <CyU3PUsbSendCompliancePatterns+0xb8>
400217fc:	e3a01009 	mov	r1, #9
40021800:	e2840001 	add	r0, r4, #1
40021804:	ebffbdaf 	bl	40010ec8 <__aeabi_idivmod>
40021808:	e20140ff 	and	r4, r1, #255	; 0xff
4002180c:	e59f00ac 	ldr	r0, [pc, #172]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021810:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021814:	e3100004 	tst	r0, #4
40021818:	1a00000d 	bne	40021854 <CyU3PUsbSendCompliancePatterns+0x190>
4002181c:	e59f00a0 	ldr	r0, [pc, #160]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
40021820:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021824:	e3500000 	cmp	r0, #0
40021828:	0a000005 	beq	40021844 <CyU3PUsbSendCompliancePatterns+0x180>
4002182c:	e59f009c 	ldr	r0, [pc, #156]	; 400218d0 <CyU3PUsbSendCompliancePatterns+0x20c>
40021830:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021834:	e59f1088 	ldr	r1, [pc, #136]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
40021838:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002183c:	e1100001 	tst	r0, r1
40021840:	0a000003 	beq	40021854 <CyU3PUsbSendCompliancePatterns+0x190>
40021844:	e59f0078 	ldr	r0, [pc, #120]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
40021848:	e5900060 	ldr	r0, [r0, #96]	; 0x60
4002184c:	e3500001 	cmp	r0, #1
40021850:	1a000009 	bne	4002187c <CyU3PUsbSendCompliancePatterns+0x1b8>
40021854:	e59f0064 	ldr	r0, [pc, #100]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021858:	e5900064 	ldr	r0, [r0, #100]	; 0x64
4002185c:	e3c00004 	bic	r0, r0, #4
40021860:	e59f1058 	ldr	r1, [pc, #88]	; 400218c0 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021864:	e5810064 	str	r0, [r1, #100]	; 0x64
40021868:	e3a00c06 	mov	r0, #1536	; 0x600
4002186c:	e5810138 	str	r0, [r1, #312]	; 0x138
40021870:	e3a00000 	mov	r0, #0
40021874:	e5810054 	str	r0, [r1, #84]	; 0x54
40021878:	ea000002 	b	40021888 <CyU3PUsbSendCompliancePatterns+0x1c4>
4002187c:	e3a00001 	mov	r0, #1
40021880:	ebff9d52 	bl	40008dd0 <_tx_thread_sleep>
40021884:	eaffffaa 	b	40021734 <CyU3PUsbSendCompliancePatterns+0x70>
40021888:	e1a00000 	nop			; (mov r0, r0)
4002188c:	e59f0034 	ldr	r0, [pc, #52]	; 400218c8 <CyU3PUsbSendCompliancePatterns+0x204>
40021890:	e5900000 	ldr	r0, [r0]
40021894:	e3500000 	cmp	r0, #0
40021898:	0a000004 	beq	400218b0 <CyU3PUsbSendCompliancePatterns+0x1ec>
4002189c:	e3a01000 	mov	r1, #0
400218a0:	e3a00016 	mov	r0, #22
400218a4:	e59f201c 	ldr	r2, [pc, #28]	; 400218c8 <CyU3PUsbSendCompliancePatterns+0x204>
400218a8:	e5922000 	ldr	r2, [r2]
400218ac:	e12fff32 	blx	r2
400218b0:	e3a00000 	mov	r0, #0
400218b4:	e59f1008 	ldr	r1, [pc, #8]	; 400218c4 <CyU3PUsbSendCompliancePatterns+0x200>
400218b8:	e5810064 	str	r0, [r1, #100]	; 0x64
400218bc:	eaffff87 	b	400216e0 <CyU3PUsbSendCompliancePatterns+0x1c>
400218c0:	e0033000 	.word	0xe0033000
400218c4:	40031d60 	.word	0x40031d60
400218c8:	40030dbc 	.word	0x40030dbc
400218cc:	400122d8 	.word	0x400122d8
400218d0:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

400218d4 <CyU3PUsbSetupCommand>:
400218d4:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400218d8:	e3a06000 	mov	r6, #0
400218dc:	e3a07000 	mov	r7, #0
400218e0:	e59f07c0 	ldr	r0, [pc, #1984]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
400218e4:	e5d00009 	ldrb	r0, [r0, #9]
400218e8:	e3500003 	cmp	r0, #3
400218ec:	1a00001a 	bne	4002195c <CyU3PUsbSetupCommand+0x88>
400218f0:	e59f07b4 	ldr	r0, [pc, #1972]	; 400220ac <CyU3PUsbSetupCommand+0x7d8>
400218f4:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
400218f8:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
400218fc:	e3a00001 	mov	r0, #1
40021900:	e59f17a0 	ldr	r1, [pc, #1952]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021904:	e5810050 	str	r0, [r1, #80]	; 0x50
40021908:	e3a00000 	mov	r0, #0
4002190c:	e59f179c 	ldr	r1, [pc, #1948]	; 400220b0 <CyU3PUsbSetupCommand+0x7dc>
40021910:	e5810000 	str	r0, [r1]
40021914:	e59f0798 	ldr	r0, [pc, #1944]	; 400220b4 <CyU3PUsbSetupCommand+0x7e0>
40021918:	ebffa59e 	bl	4000af98 <_txe_timer_deactivate>
4002191c:	e3a00b02 	mov	r0, #2048	; 0x800
40021920:	e59f1784 	ldr	r1, [pc, #1924]	; 400220ac <CyU3PUsbSetupCommand+0x7d8>
40021924:	e5810404 	str	r0, [r1, #1028]	; 0x404
40021928:	e1c10000 	bic	r0, r1, r0
4002192c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021930:	e200603f 	and	r6, r0, #63	; 0x3f
40021934:	e3560011 	cmp	r6, #17
40021938:	0a000001 	beq	40021944 <CyU3PUsbSetupCommand+0x70>
4002193c:	e3560012 	cmp	r6, #18
40021940:	1a000003 	bne	40021954 <CyU3PUsbSetupCommand+0x80>
40021944:	e3a02000 	mov	r2, #0
40021948:	e3a01401 	mov	r1, #16777216	; 0x1000000
4002194c:	e59f0764 	ldr	r0, [pc, #1892]	; 400220b8 <CyU3PUsbSetupCommand+0x7e4>
40021950:	ebffa216 	bl	4000a1b0 <_txe_event_flags_set>
40021954:	e3a06000 	mov	r6, #0
40021958:	ea00000d 	b	40021994 <CyU3PUsbSetupCommand+0xc0>
4002195c:	e59f0744 	ldr	r0, [pc, #1860]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021960:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021964:	e3500000 	cmp	r0, #0
40021968:	0a000006 	beq	40021988 <CyU3PUsbSetupCommand+0xb4>
4002196c:	e59f0734 	ldr	r0, [pc, #1844]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021970:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021974:	e3500003 	cmp	r0, #3
40021978:	2a000002 	bcs	40021988 <CyU3PUsbSetupCommand+0xb4>
4002197c:	e3a00001 	mov	r0, #1
40021980:	e59f1720 	ldr	r1, [pc, #1824]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021984:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021988:	e59f072c 	ldr	r0, [pc, #1836]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
4002198c:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
40021990:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
40021994:	e3a01064 	mov	r1, #100	; 0x64
40021998:	e59f0720 	ldr	r0, [pc, #1824]	; 400220c0 <CyU3PUsbSetupCommand+0x7ec>
4002199c:	ebffd5fd 	bl	40017198 <CyU3PDmaChannelWaitForCompletion>
400219a0:	e1a06000 	mov	r6, r0
400219a4:	e3560000 	cmp	r6, #0
400219a8:	0a00000b 	beq	400219dc <CyU3PUsbSetupCommand+0x108>
400219ac:	e3560042 	cmp	r6, #66	; 0x42
400219b0:	0a000009 	beq	400219dc <CyU3PUsbSetupCommand+0x108>
400219b4:	e3a01001 	mov	r1, #1
400219b8:	e3a00000 	mov	r0, #0
400219bc:	ebfff11b 	bl	4001de30 <CyU3PUsbSetEpNak>
400219c0:	e3a00064 	mov	r0, #100	; 0x64
400219c4:	ebffc7e8 	bl	4001396c <CyU3PBusyWait>
400219c8:	e59f06f0 	ldr	r0, [pc, #1776]	; 400220c0 <CyU3PUsbSetupCommand+0x7ec>
400219cc:	ebffd320 	bl	40016654 <CyU3PDmaChannelReset>
400219d0:	e3a01000 	mov	r1, #0
400219d4:	e1a00001 	mov	r0, r1
400219d8:	ebfff114 	bl	4001de30 <CyU3PUsbSetEpNak>
400219dc:	e3a01064 	mov	r1, #100	; 0x64
400219e0:	e59f06dc 	ldr	r0, [pc, #1756]	; 400220c4 <CyU3PUsbSetupCommand+0x7f0>
400219e4:	ebffd5eb 	bl	40017198 <CyU3PDmaChannelWaitForCompletion>
400219e8:	e1a06000 	mov	r6, r0
400219ec:	e3560000 	cmp	r6, #0
400219f0:	0a00000d 	beq	40021a2c <CyU3PUsbSetupCommand+0x158>
400219f4:	e3560042 	cmp	r6, #66	; 0x42
400219f8:	0a00000b 	beq	40021a2c <CyU3PUsbSetupCommand+0x158>
400219fc:	e3a01001 	mov	r1, #1
40021a00:	e3a00080 	mov	r0, #128	; 0x80
40021a04:	ebfff109 	bl	4001de30 <CyU3PUsbSetEpNak>
40021a08:	e3a00064 	mov	r0, #100	; 0x64
40021a0c:	ebffc7d6 	bl	4001396c <CyU3PBusyWait>
40021a10:	e59f06ac 	ldr	r0, [pc, #1708]	; 400220c4 <CyU3PUsbSetupCommand+0x7f0>
40021a14:	ebffd30e 	bl	40016654 <CyU3PDmaChannelReset>
40021a18:	e3a00080 	mov	r0, #128	; 0x80
40021a1c:	ebffecfd 	bl	4001ce18 <CyU3PUsbFlushEp>
40021a20:	e3a01000 	mov	r1, #0
40021a24:	e3a00080 	mov	r0, #128	; 0x80
40021a28:	ebfff100 	bl	4001de30 <CyU3PUsbSetEpNak>
40021a2c:	e3a06000 	mov	r6, #0
40021a30:	e20490ff 	and	r9, r4, #255	; 0xff
40021a34:	e209a060 	and	sl, r9, #96	; 0x60
40021a38:	e2090003 	and	r0, r9, #3
40021a3c:	e58d0008 	str	r0, [sp, #8]
40021a40:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021a44:	e1a08420 	lsr	r8, r0, #8
40021a48:	e59f0678 	ldr	r0, [pc, #1656]	; 400220c8 <CyU3PUsbSetupCommand+0x7f4>
40021a4c:	e000b824 	and	fp, r0, r4, lsr #16
40021a50:	e0050000 	and	r0, r5, r0
40021a54:	e58d0004 	str	r0, [sp, #4]
40021a58:	e59f0668 	ldr	r0, [pc, #1640]	; 400220c8 <CyU3PUsbSetupCommand+0x7f4>
40021a5c:	e0000825 	and	r0, r0, r5, lsr #16
40021a60:	e58d0000 	str	r0, [sp]
40021a64:	e3140080 	tst	r4, #128	; 0x80
40021a68:	0a000003 	beq	40021a7c <CyU3PUsbSetupCommand+0x1a8>
40021a6c:	e59d0000 	ldr	r0, [sp]
40021a70:	e59f1644 	ldr	r1, [pc, #1604]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
40021a74:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021a78:	ea000002 	b	40021a88 <CyU3PUsbSetupCommand+0x1b4>
40021a7c:	e59d0000 	ldr	r0, [sp]
40021a80:	e59f1634 	ldr	r1, [pc, #1588]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
40021a84:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
40021a88:	e3a00000 	mov	r0, #0
40021a8c:	e59f1614 	ldr	r1, [pc, #1556]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021a90:	e5810040 	str	r0, [r1, #64]	; 0x40
40021a94:	e59f0620 	ldr	r0, [pc, #1568]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
40021a98:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021a9c:	e3c00008 	bic	r0, r0, #8
40021aa0:	e59f1614 	ldr	r1, [pc, #1556]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
40021aa4:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021aa8:	e3a00000 	mov	r0, #0
40021aac:	e59f15f4 	ldr	r1, [pc, #1524]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021ab0:	e5810018 	str	r0, [r1, #24]
40021ab4:	e5810070 	str	r0, [r1, #112]	; 0x70
40021ab8:	e59f05fc 	ldr	r0, [pc, #1532]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
40021abc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021ac0:	e3800008 	orr	r0, r0, #8
40021ac4:	e59f15f0 	ldr	r1, [pc, #1520]	; 400220bc <CyU3PUsbSetupCommand+0x7e8>
40021ac8:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021acc:	e59f05d4 	ldr	r0, [pc, #1492]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021ad0:	e5d00007 	ldrb	r0, [r0, #7]
40021ad4:	e3500001 	cmp	r0, #1
40021ad8:	0a000001 	beq	40021ae4 <CyU3PUsbSetupCommand+0x210>
40021adc:	e35a0000 	cmp	sl, #0
40021ae0:	0a000024 	beq	40021b78 <CyU3PUsbSetupCommand+0x2a4>
40021ae4:	e35a0000 	cmp	sl, #0
40021ae8:	1a000012 	bne	40021b38 <CyU3PUsbSetupCommand+0x264>
40021aec:	e3580009 	cmp	r8, #9
40021af0:	1a000010 	bne	40021b38 <CyU3PUsbSetupCommand+0x264>
40021af4:	e35b0001 	cmp	fp, #1
40021af8:	1a00000b 	bne	40021b2c <CyU3PUsbSetupCommand+0x258>
40021afc:	e59f15a4 	ldr	r1, [pc, #1444]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021b00:	e5d10009 	ldrb	r0, [r1, #9]
40021b04:	ebfff993 	bl	40020158 <CyU3PUsbEpPrepare>
40021b08:	e3a00006 	mov	r0, #6
40021b0c:	e59f1594 	ldr	r1, [pc, #1428]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021b10:	e5c10008 	strb	r0, [r1, #8]
40021b14:	e5c1b00c 	strb	fp, [r1, #12]
40021b18:	e2810000 	add	r0, r1, #0
40021b1c:	e5d00006 	ldrb	r0, [r0, #6]
40021b20:	e2000001 	and	r0, r0, #1
40021b24:	e5c10006 	strb	r0, [r1, #6]
40021b28:	ea000002 	b	40021b38 <CyU3PUsbSetupCommand+0x264>
40021b2c:	e3a00005 	mov	r0, #5
40021b30:	e59f1570 	ldr	r1, [pc, #1392]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021b34:	e5c10008 	strb	r0, [r1, #8]
40021b38:	e59f058c 	ldr	r0, [pc, #1420]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021b3c:	e5900000 	ldr	r0, [r0]
40021b40:	e3500000 	cmp	r0, #0
40021b44:	0a000005 	beq	40021b60 <CyU3PUsbSetupCommand+0x28c>
40021b48:	e1a01005 	mov	r1, r5
40021b4c:	e1a00004 	mov	r0, r4
40021b50:	e59f2574 	ldr	r2, [pc, #1396]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021b54:	e5922000 	ldr	r2, [r2]
40021b58:	e12fff32 	blx	r2
40021b5c:	e1a07000 	mov	r7, r0
40021b60:	e3570001 	cmp	r7, #1
40021b64:	1a000003 	bne	40021b78 <CyU3PUsbSetupCommand+0x2a4>
40021b68:	e3a00001 	mov	r0, #1
40021b6c:	e59f1534 	ldr	r1, [pc, #1332]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021b70:	e5810040 	str	r0, [r1, #64]	; 0x40
40021b74:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021b78:	e35a0000 	cmp	sl, #0
40021b7c:	1a000140 	bne	40022084 <CyU3PUsbSetupCommand+0x7b0>
40021b80:	e3580009 	cmp	r8, #9
40021b84:	0a0000b1 	beq	40021e50 <CyU3PUsbSetupCommand+0x57c>
40021b88:	ca00000b 	bgt	40021bbc <CyU3PUsbSetupCommand+0x2e8>
40021b8c:	e3580009 	cmp	r8, #9
40021b90:	308ff108 	addcc	pc, pc, r8, lsl #2
40021b94:	ea000137 	b	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021b98:	ea000014 	b	40021bf0 <CyU3PUsbSetupCommand+0x31c>
40021b9c:	ea000029 	b	40021c48 <CyU3PUsbSetupCommand+0x374>
40021ba0:	ea000134 	b	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021ba4:	ea000057 	b	40021d08 <CyU3PUsbSetupCommand+0x434>
40021ba8:	ea000132 	b	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021bac:	ea000131 	b	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021bb0:	ea000099 	b	40021e1c <CyU3PUsbSetupCommand+0x548>
40021bb4:	ea00012f 	b	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021bb8:	ea00009d 	b	40021e34 <CyU3PUsbSetupCommand+0x560>
40021bbc:	e358000c 	cmp	r8, #12
40021bc0:	0a0000fb 	beq	40021fb4 <CyU3PUsbSetupCommand+0x6e0>
40021bc4:	ca000004 	bgt	40021bdc <CyU3PUsbSetupCommand+0x308>
40021bc8:	e358000a 	cmp	r8, #10
40021bcc:	0a0000c5 	beq	40021ee8 <CyU3PUsbSetupCommand+0x614>
40021bd0:	e358000b 	cmp	r8, #11
40021bd4:	1a000127 	bne	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021bd8:	ea0000d6 	b	40021f38 <CyU3PUsbSetupCommand+0x664>
40021bdc:	e3580030 	cmp	r8, #48	; 0x30
40021be0:	0a0000f7 	beq	40021fc4 <CyU3PUsbSetupCommand+0x6f0>
40021be4:	e3580031 	cmp	r8, #49	; 0x31
40021be8:	1a000122 	bne	40022078 <CyU3PUsbSetupCommand+0x7a4>
40021bec:	ea000114 	b	40022044 <CyU3PUsbSetupCommand+0x770>
40021bf0:	e1a00000 	nop			; (mov r0, r0)
40021bf4:	e59d0008 	ldr	r0, [sp, #8]
40021bf8:	e3500001 	cmp	r0, #1
40021bfc:	1a00000c 	bne	40021c34 <CyU3PUsbSetupCommand+0x360>
40021c00:	e59f04c4 	ldr	r0, [pc, #1220]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021c04:	e5900000 	ldr	r0, [r0]
40021c08:	e3500000 	cmp	r0, #0
40021c0c:	0a000008 	beq	40021c34 <CyU3PUsbSetupCommand+0x360>
40021c10:	e1a01005 	mov	r1, r5
40021c14:	e1a00004 	mov	r0, r4
40021c18:	e59f24ac 	ldr	r2, [pc, #1196]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021c1c:	e5922000 	ldr	r2, [r2]
40021c20:	e12fff32 	blx	r2
40021c24:	e1a07000 	mov	r7, r0
40021c28:	e3570000 	cmp	r7, #0
40021c2c:	0a000000 	beq	40021c34 <CyU3PUsbSetupCommand+0x360>
40021c30:	ea000112 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021c34:	e59d0008 	ldr	r0, [sp, #8]
40021c38:	e59d1004 	ldr	r1, [sp, #4]
40021c3c:	ebfffbd3 	bl	40020b90 <CyU3PUsbHandleGetStatus>
40021c40:	e1a07000 	mov	r7, r0
40021c44:	ea00010d 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021c48:	e1a00000 	nop			; (mov r0, r0)
40021c4c:	e59d0008 	ldr	r0, [sp, #8]
40021c50:	e3500000 	cmp	r0, #0
40021c54:	1a000002 	bne	40021c64 <CyU3PUsbSetupCommand+0x390>
40021c58:	e20b00ff 	and	r0, fp, #255	; 0xff
40021c5c:	ebfffa86 	bl	4002067c <CyU3PUsbHandleClearFeature>
40021c60:	eaffffc3 	b	40021b74 <CyU3PUsbSetupCommand+0x2a0>
40021c64:	e3a07000 	mov	r7, #0
40021c68:	e59f0438 	ldr	r0, [pc, #1080]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021c6c:	e5d00007 	ldrb	r0, [r0, #7]
40021c70:	e3500000 	cmp	r0, #0
40021c74:	1a00000e 	bne	40021cb4 <CyU3PUsbSetupCommand+0x3e0>
40021c78:	e59f044c 	ldr	r0, [pc, #1100]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021c7c:	e5900000 	ldr	r0, [r0]
40021c80:	e3500000 	cmp	r0, #0
40021c84:	0a00000a 	beq	40021cb4 <CyU3PUsbSetupCommand+0x3e0>
40021c88:	e1a01005 	mov	r1, r5
40021c8c:	e1a00004 	mov	r0, r4
40021c90:	e59f2434 	ldr	r2, [pc, #1076]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021c94:	e5922000 	ldr	r2, [r2]
40021c98:	e12fff32 	blx	r2
40021c9c:	e1a07000 	mov	r7, r0
40021ca0:	e3570000 	cmp	r7, #0
40021ca4:	0a000002 	beq	40021cb4 <CyU3PUsbSetupCommand+0x3e0>
40021ca8:	e3a00001 	mov	r0, #1
40021cac:	e59f13f4 	ldr	r1, [pc, #1012]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021cb0:	e5810040 	str	r0, [r1, #64]	; 0x40
40021cb4:	e3570000 	cmp	r7, #0
40021cb8:	1a000011 	bne	40021d04 <CyU3PUsbSetupCommand+0x430>
40021cbc:	e59d0008 	ldr	r0, [sp, #8]
40021cc0:	e3500002 	cmp	r0, #2
40021cc4:	1a00000e 	bne	40021d04 <CyU3PUsbSetupCommand+0x430>
40021cc8:	e35b0000 	cmp	fp, #0
40021ccc:	1a00000c 	bne	40021d04 <CyU3PUsbSetupCommand+0x430>
40021cd0:	e59d1004 	ldr	r1, [sp, #4]
40021cd4:	e20100ff 	and	r0, r1, #255	; 0xff
40021cd8:	e3a02001 	mov	r2, #1
40021cdc:	e3a01000 	mov	r1, #0
40021ce0:	ebfff118 	bl	4001e148 <CyU3PUsbStall>
40021ce4:	e3500000 	cmp	r0, #0
40021ce8:	1a000005 	bne	40021d04 <CyU3PUsbSetupCommand+0x430>
40021cec:	e59d1004 	ldr	r1, [sp, #4]
40021cf0:	e20100ff 	and	r0, r1, #255	; 0xff
40021cf4:	ebffeeaf 	bl	4001d7b8 <CyU3PUsbResetEp>
40021cf8:	ebffeb4e 	bl	4001ca38 <CyU3PUsbAckSetup>
40021cfc:	e3a07001 	mov	r7, #1
40021d00:	ea0000de 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021d04:	ea0000dd 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021d08:	e1a00000 	nop			; (mov r0, r0)
40021d0c:	e59d0008 	ldr	r0, [sp, #8]
40021d10:	e3500000 	cmp	r0, #0
40021d14:	1a00001b 	bne	40021d88 <CyU3PUsbSetupCommand+0x4b4>
40021d18:	e35b0003 	cmp	fp, #3
40021d1c:	0a000004 	beq	40021d34 <CyU3PUsbSetupCommand+0x460>
40021d20:	e35b0004 	cmp	fp, #4
40021d24:	0a000002 	beq	40021d34 <CyU3PUsbSetupCommand+0x460>
40021d28:	e20b00ff 	and	r0, fp, #255	; 0xff
40021d2c:	ebfffbd5 	bl	40020c88 <CyU3PUsbHandleSetFeature>
40021d30:	eaffff8f 	b	40021b74 <CyU3PUsbSetupCommand+0x2a0>
40021d34:	e59f036c 	ldr	r0, [pc, #876]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021d38:	e5d00007 	ldrb	r0, [r0, #7]
40021d3c:	e3500000 	cmp	r0, #0
40021d40:	1a00000f 	bne	40021d84 <CyU3PUsbSetupCommand+0x4b0>
40021d44:	e59f0380 	ldr	r0, [pc, #896]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021d48:	e5900000 	ldr	r0, [r0]
40021d4c:	e3500000 	cmp	r0, #0
40021d50:	0a00000b 	beq	40021d84 <CyU3PUsbSetupCommand+0x4b0>
40021d54:	e1a01005 	mov	r1, r5
40021d58:	e1a00004 	mov	r0, r4
40021d5c:	e59f2368 	ldr	r2, [pc, #872]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021d60:	e5922000 	ldr	r2, [r2]
40021d64:	e12fff32 	blx	r2
40021d68:	e1a07000 	mov	r7, r0
40021d6c:	e3570000 	cmp	r7, #0
40021d70:	0a000003 	beq	40021d84 <CyU3PUsbSetupCommand+0x4b0>
40021d74:	e3a00001 	mov	r0, #1
40021d78:	e59f1328 	ldr	r1, [pc, #808]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021d7c:	e5810040 	str	r0, [r1, #64]	; 0x40
40021d80:	eaffff7b 	b	40021b74 <CyU3PUsbSetupCommand+0x2a0>
40021d84:	ea0000bd 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021d88:	e3a07000 	mov	r7, #0
40021d8c:	e59f0314 	ldr	r0, [pc, #788]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021d90:	e5d00007 	ldrb	r0, [r0, #7]
40021d94:	e3500000 	cmp	r0, #0
40021d98:	1a00000e 	bne	40021dd8 <CyU3PUsbSetupCommand+0x504>
40021d9c:	e59f0328 	ldr	r0, [pc, #808]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021da0:	e5900000 	ldr	r0, [r0]
40021da4:	e3500000 	cmp	r0, #0
40021da8:	0a00000a 	beq	40021dd8 <CyU3PUsbSetupCommand+0x504>
40021dac:	e1a01005 	mov	r1, r5
40021db0:	e1a00004 	mov	r0, r4
40021db4:	e59f2310 	ldr	r2, [pc, #784]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021db8:	e5922000 	ldr	r2, [r2]
40021dbc:	e12fff32 	blx	r2
40021dc0:	e1a07000 	mov	r7, r0
40021dc4:	e3570000 	cmp	r7, #0
40021dc8:	0a000002 	beq	40021dd8 <CyU3PUsbSetupCommand+0x504>
40021dcc:	e3a00001 	mov	r0, #1
40021dd0:	e59f12d0 	ldr	r1, [pc, #720]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021dd4:	e5810040 	str	r0, [r1, #64]	; 0x40
40021dd8:	e3570000 	cmp	r7, #0
40021ddc:	1a00000d 	bne	40021e18 <CyU3PUsbSetupCommand+0x544>
40021de0:	e59d0008 	ldr	r0, [sp, #8]
40021de4:	e3500002 	cmp	r0, #2
40021de8:	1a00000a 	bne	40021e18 <CyU3PUsbSetupCommand+0x544>
40021dec:	e35b0000 	cmp	fp, #0
40021df0:	1a000008 	bne	40021e18 <CyU3PUsbSetupCommand+0x544>
40021df4:	e59d1004 	ldr	r1, [sp, #4]
40021df8:	e20100ff 	and	r0, r1, #255	; 0xff
40021dfc:	e3a02000 	mov	r2, #0
40021e00:	e3a01001 	mov	r1, #1
40021e04:	ebfff0cf 	bl	4001e148 <CyU3PUsbStall>
40021e08:	e3500000 	cmp	r0, #0
40021e0c:	1a000001 	bne	40021e18 <CyU3PUsbSetupCommand+0x544>
40021e10:	ebffeb08 	bl	4001ca38 <CyU3PUsbAckSetup>
40021e14:	e3a07001 	mov	r7, #1
40021e18:	ea000098 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021e1c:	e1a00000 	nop			; (mov r0, r0)
40021e20:	e1a01005 	mov	r1, r5
40021e24:	e1a00004 	mov	r0, r4
40021e28:	ebfff5d5 	bl	4001f584 <CyU3PUibSendDescr>
40021e2c:	e1a07000 	mov	r7, r0
40021e30:	ea000092 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021e34:	e1a00000 	nop			; (mov r0, r0)
40021e38:	e3a07001 	mov	r7, #1
40021e3c:	e59f128c 	ldr	r1, [pc, #652]	; 400220d0 <CyU3PUsbSetupCommand+0x7fc>
40021e40:	e3a00001 	mov	r0, #1
40021e44:	ebffee94 	bl	4001d89c <CyU3PUsbSendEP0Data>
40021e48:	e1a06000 	mov	r6, r0
40021e4c:	ea00008b 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021e50:	e1a00000 	nop			; (mov r0, r0)
40021e54:	e3a07001 	mov	r7, #1
40021e58:	e35b0000 	cmp	fp, #0
40021e5c:	0a000005 	beq	40021e78 <CyU3PUsbSetupCommand+0x5a4>
40021e60:	e35b0001 	cmp	fp, #1
40021e64:	1a00001a 	bne	40021ed4 <CyU3PUsbSetupCommand+0x600>
40021e68:	e59f1238 	ldr	r1, [pc, #568]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021e6c:	e5d10009 	ldrb	r0, [r1, #9]
40021e70:	ebfff8b8 	bl	40020158 <CyU3PUsbEpPrepare>
40021e74:	e1a00000 	nop			; (mov r0, r0)
40021e78:	e35b0000 	cmp	fp, #0
40021e7c:	1a000001 	bne	40021e88 <CyU3PUsbSetupCommand+0x5b4>
40021e80:	e3a00005 	mov	r0, #5
40021e84:	ea000000 	b	40021e8c <CyU3PUsbSetupCommand+0x5b8>
40021e88:	e3a00006 	mov	r0, #6
40021e8c:	e59f1214 	ldr	r1, [pc, #532]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021e90:	e5c10008 	strb	r0, [r1, #8]
40021e94:	e5c1b00c 	strb	fp, [r1, #12]
40021e98:	e2810000 	add	r0, r1, #0
40021e9c:	e5d00006 	ldrb	r0, [r0, #6]
40021ea0:	e2000001 	and	r0, r0, #1
40021ea4:	e5c10006 	strb	r0, [r1, #6]
40021ea8:	e59f0224 	ldr	r0, [pc, #548]	; 400220d4 <CyU3PUsbSetupCommand+0x800>
40021eac:	e5900000 	ldr	r0, [r0]
40021eb0:	e3500000 	cmp	r0, #0
40021eb4:	0a000004 	beq	40021ecc <CyU3PUsbSetupCommand+0x5f8>
40021eb8:	e1a0100b 	mov	r1, fp
40021ebc:	e3a00005 	mov	r0, #5
40021ec0:	e59f220c 	ldr	r2, [pc, #524]	; 400220d4 <CyU3PUsbSetupCommand+0x800>
40021ec4:	e5922000 	ldr	r2, [r2]
40021ec8:	e12fff32 	blx	r2
40021ecc:	ebffead9 	bl	4001ca38 <CyU3PUsbAckSetup>
40021ed0:	ea000002 	b	40021ee0 <CyU3PUsbSetupCommand+0x60c>
40021ed4:	e1a00000 	nop			; (mov r0, r0)
40021ed8:	e3a06040 	mov	r6, #64	; 0x40
40021edc:	e1a00000 	nop			; (mov r0, r0)
40021ee0:	e1a00000 	nop			; (mov r0, r0)
40021ee4:	ea000065 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021ee8:	e1a00000 	nop			; (mov r0, r0)
40021eec:	e59f01d8 	ldr	r0, [pc, #472]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021ef0:	e5900000 	ldr	r0, [r0]
40021ef4:	e3500000 	cmp	r0, #0
40021ef8:	0a000008 	beq	40021f20 <CyU3PUsbSetupCommand+0x64c>
40021efc:	e1a01005 	mov	r1, r5
40021f00:	e1a00004 	mov	r0, r4
40021f04:	e59f21c0 	ldr	r2, [pc, #448]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021f08:	e5922000 	ldr	r2, [r2]
40021f0c:	e12fff32 	blx	r2
40021f10:	e1a07000 	mov	r7, r0
40021f14:	e3570000 	cmp	r7, #0
40021f18:	0a000000 	beq	40021f20 <CyU3PUsbSetupCommand+0x64c>
40021f1c:	ea000057 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021f20:	e3a07001 	mov	r7, #1
40021f24:	e59f11ac 	ldr	r1, [pc, #428]	; 400220d8 <CyU3PUsbSetupCommand+0x804>
40021f28:	e3a00001 	mov	r0, #1
40021f2c:	ebffee5a 	bl	4001d89c <CyU3PUsbSendEP0Data>
40021f30:	e1a06000 	mov	r6, r0
40021f34:	ea000051 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021f38:	e1a00000 	nop			; (mov r0, r0)
40021f3c:	e59f0188 	ldr	r0, [pc, #392]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021f40:	e5900000 	ldr	r0, [r0]
40021f44:	e3500000 	cmp	r0, #0
40021f48:	0a000008 	beq	40021f70 <CyU3PUsbSetupCommand+0x69c>
40021f4c:	e1a01005 	mov	r1, r5
40021f50:	e1a00004 	mov	r0, r4
40021f54:	e59f2170 	ldr	r2, [pc, #368]	; 400220cc <CyU3PUsbSetupCommand+0x7f8>
40021f58:	e5922000 	ldr	r2, [r2]
40021f5c:	e12fff32 	blx	r2
40021f60:	e1a07000 	mov	r7, r0
40021f64:	e3570000 	cmp	r7, #0
40021f68:	0a000000 	beq	40021f70 <CyU3PUsbSetupCommand+0x69c>
40021f6c:	ea000043 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021f70:	e59f1130 	ldr	r1, [pc, #304]	; 400220a8 <CyU3PUsbSetupCommand+0x7d4>
40021f74:	e5c1b00d 	strb	fp, [r1, #13]
40021f78:	e59f0154 	ldr	r0, [pc, #340]	; 400220d4 <CyU3PUsbSetupCommand+0x800>
40021f7c:	e5900000 	ldr	r0, [r0]
40021f80:	e3500000 	cmp	r0, #0
40021f84:	0a000007 	beq	40021fa8 <CyU3PUsbSetupCommand+0x6d4>
40021f88:	e20b00ff 	and	r0, fp, #255	; 0xff
40021f8c:	e59d2004 	ldr	r2, [sp, #4]
40021f90:	e1800402 	orr	r0, r0, r2, lsl #8
40021f94:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021f98:	e3a00007 	mov	r0, #7
40021f9c:	e59f2130 	ldr	r2, [pc, #304]	; 400220d4 <CyU3PUsbSetupCommand+0x800>
40021fa0:	e5922000 	ldr	r2, [r2]
40021fa4:	e12fff32 	blx	r2
40021fa8:	e3a07001 	mov	r7, #1
40021fac:	ebffeaa1 	bl	4001ca38 <CyU3PUsbAckSetup>
40021fb0:	ea000032 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021fb4:	e1a00000 	nop			; (mov r0, r0)
40021fb8:	e3a07001 	mov	r7, #1
40021fbc:	ebffea9d 	bl	4001ca38 <CyU3PUsbAckSetup>
40021fc0:	ea00002e 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40021fc4:	e1a00000 	nop			; (mov r0, r0)
40021fc8:	ebffec37 	bl	4001d0ac <CyU3PUsbGetSpeed>
40021fcc:	e3500003 	cmp	r0, #3
40021fd0:	1a000019 	bne	4002203c <CyU3PUsbSetupCommand+0x768>
40021fd4:	e35b0000 	cmp	fp, #0
40021fd8:	1a000017 	bne	4002203c <CyU3PUsbSetupCommand+0x768>
40021fdc:	e59d0004 	ldr	r0, [sp, #4]
40021fe0:	e3500000 	cmp	r0, #0
40021fe4:	1a000014 	bne	4002203c <CyU3PUsbSetupCommand+0x768>
40021fe8:	e59d0000 	ldr	r0, [sp]
40021fec:	e3500006 	cmp	r0, #6
40021ff0:	1a000011 	bne	4002203c <CyU3PUsbSetupCommand+0x768>
40021ff4:	e3a07001 	mov	r7, #1
40021ff8:	e3a02000 	mov	r2, #0
40021ffc:	e59f10d8 	ldr	r1, [pc, #216]	; 400220dc <CyU3PUsbSetupCommand+0x808>
40022000:	e3a00020 	mov	r0, #32
40022004:	ebffebb6 	bl	4001cee4 <CyU3PUsbGetEP0Data>
40022008:	e1a06000 	mov	r6, r0
4002200c:	e59f00c0 	ldr	r0, [pc, #192]	; 400220d4 <CyU3PUsbSetupCommand+0x800>
40022010:	e5900000 	ldr	r0, [r0]
40022014:	e3500000 	cmp	r0, #0
40022018:	0a000008 	beq	40022040 <CyU3PUsbSetupCommand+0x76c>
4002201c:	e3560000 	cmp	r6, #0
40022020:	1a000006 	bne	40022040 <CyU3PUsbSetupCommand+0x76c>
40022024:	e3a01000 	mov	r1, #0
40022028:	e3a00008 	mov	r0, #8
4002202c:	e59f20a0 	ldr	r2, [pc, #160]	; 400220d4 <CyU3PUsbSetupCommand+0x800>
40022030:	e5922000 	ldr	r2, [r2]
40022034:	e12fff32 	blx	r2
40022038:	ea000000 	b	40022040 <CyU3PUsbSetupCommand+0x76c>
4002203c:	e3a07000 	mov	r7, #0
40022040:	ea00000e 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40022044:	e1a00000 	nop			; (mov r0, r0)
40022048:	ebffec17 	bl	4001d0ac <CyU3PUsbGetSpeed>
4002204c:	e3500003 	cmp	r0, #3
40022050:	1a000007 	bne	40022074 <CyU3PUsbSetupCommand+0x7a0>
40022054:	e59d0004 	ldr	r0, [sp, #4]
40022058:	e3500000 	cmp	r0, #0
4002205c:	1a000004 	bne	40022074 <CyU3PUsbSetupCommand+0x7a0>
40022060:	e59d0000 	ldr	r0, [sp]
40022064:	e3500000 	cmp	r0, #0
40022068:	1a000001 	bne	40022074 <CyU3PUsbSetupCommand+0x7a0>
4002206c:	e3a07001 	mov	r7, #1
40022070:	ebffea70 	bl	4001ca38 <CyU3PUsbAckSetup>
40022074:	ea000001 	b	40022080 <CyU3PUsbSetupCommand+0x7ac>
40022078:	e1a00000 	nop			; (mov r0, r0)
4002207c:	e1a00000 	nop			; (mov r0, r0)
40022080:	e1a00000 	nop			; (mov r0, r0)
40022084:	e3570001 	cmp	r7, #1
40022088:	1a000001 	bne	40022094 <CyU3PUsbSetupCommand+0x7c0>
4002208c:	e3560000 	cmp	r6, #0
40022090:	0a000003 	beq	400220a4 <CyU3PUsbSetupCommand+0x7d0>
40022094:	e3a02000 	mov	r2, #0
40022098:	e3a01001 	mov	r1, #1
4002209c:	e1a00002 	mov	r0, r2
400220a0:	ebfff028 	bl	4001e148 <CyU3PUsbStall>
400220a4:	eafffeb2 	b	40021b74 <CyU3PUsbSetupCommand+0x2a0>
400220a8:	40031d60 	.word	0x40031d60
400220ac:	e0033000 	.word	0xe0033000
400220b0:	40030dd0 	.word	0x40030dd0
400220b4:	400326c0 	.word	0x400326c0
400220b8:	40031ed8 	.word	0x40031ed8
400220bc:	e0031000 	.word	0xe0031000
400220c0:	40031b3c 	.word	0x40031b3c
400220c4:	40031a9c 	.word	0x40031a9c
400220c8:	0000ffff 	.word	0x0000ffff
400220cc:	40030dc0 	.word	0x40030dc0
400220d0:	40031d6c 	.word	0x40031d6c
400220d4:	40030dbc 	.word	0x40030dbc
400220d8:	40031d6d 	.word	0x40031d6d
400220dc:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbSuspendHandler:

400220e0 <CyU3PUsbSuspendHandler>:
400220e0:	e92d4010 	push	{r4, lr}
400220e4:	e59f003c 	ldr	r0, [pc, #60]	; 40022128 <CyU3PUsbSuspendHandler+0x48>
400220e8:	e5d00008 	ldrb	r0, [r0, #8]
400220ec:	e3500005 	cmp	r0, #5
400220f0:	ba00000b 	blt	40022124 <CyU3PUsbSuspendHandler+0x44>
400220f4:	e59f0030 	ldr	r0, [pc, #48]	; 4002212c <CyU3PUsbSuspendHandler+0x4c>
400220f8:	e5900000 	ldr	r0, [r0]
400220fc:	e3500000 	cmp	r0, #0
40022100:	0a000004 	beq	40022118 <CyU3PUsbSuspendHandler+0x38>
40022104:	e3a01000 	mov	r1, #0
40022108:	e3a00002 	mov	r0, #2
4002210c:	e59f2018 	ldr	r2, [pc, #24]	; 4002212c <CyU3PUsbSuspendHandler+0x4c>
40022110:	e5922000 	ldr	r2, [r2]
40022114:	e12fff32 	blx	r2
40022118:	e3a00005 	mov	r0, #5
4002211c:	e59f1004 	ldr	r1, [pc, #4]	; 40022128 <CyU3PUsbSuspendHandler+0x48>
40022120:	e5c10008 	strb	r0, [r1, #8]
40022124:	e8bd8010 	pop	{r4, pc}
40022128:	40031d60 	.word	0x40031d60
4002212c:	40030dbc 	.word	0x40030dbc

Disassembly of section i.HandleVbusOffEvent:

40022130 <HandleVbusOffEvent>:
40022130:	e92d4010 	push	{r4, lr}
40022134:	e59f00e0 	ldr	r0, [pc, #224]	; 4002221c <HandleVbusOffEvent+0xec>
40022138:	e5d00009 	ldrb	r0, [r0, #9]
4002213c:	e3500003 	cmp	r0, #3
40022140:	1a000002 	bne	40022150 <HandleVbusOffEvent+0x20>
40022144:	e3a00001 	mov	r0, #1
40022148:	ebffec59 	bl	4001d2b4 <CyU3PUsbPhyDisable>
4002214c:	ea000022 	b	400221dc <HandleVbusOffEvent+0xac>
40022150:	e59f00c8 	ldr	r0, [pc, #200]	; 40022220 <HandleVbusOffEvent+0xf0>
40022154:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40022158:	e3100901 	tst	r0, #16384	; 0x4000
4002215c:	0a00001c 	beq	400221d4 <HandleVbusOffEvent+0xa4>
40022160:	e59f00b8 	ldr	r0, [pc, #184]	; 40022220 <HandleVbusOffEvent+0xf0>
40022164:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40022168:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4002216c:	e59f10ac 	ldr	r1, [pc, #172]	; 40022220 <HandleVbusOffEvent+0xf0>
40022170:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022174:	e3a00002 	mov	r0, #2
40022178:	ebffc5fb 	bl	4001396c <CyU3PBusyWait>
4002217c:	e59f00a0 	ldr	r0, [pc, #160]	; 40022224 <HandleVbusOffEvent+0xf4>
40022180:	e5900004 	ldr	r0, [r0, #4]
40022184:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40022188:	e59f1094 	ldr	r1, [pc, #148]	; 40022224 <HandleVbusOffEvent+0xf4>
4002218c:	e5810004 	str	r0, [r1, #4]
40022190:	e3a00001 	mov	r0, #1
40022194:	ebffc5f4 	bl	4001396c <CyU3PBusyWait>
40022198:	e59f0088 	ldr	r0, [pc, #136]	; 40022228 <HandleVbusOffEvent+0xf8>
4002219c:	e590001c 	ldr	r0, [r0, #28]
400221a0:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
400221a4:	e59f107c 	ldr	r1, [pc, #124]	; 40022228 <HandleVbusOffEvent+0xf8>
400221a8:	e581001c 	str	r0, [r1, #28]
400221ac:	e59f0078 	ldr	r0, [pc, #120]	; 4002222c <HandleVbusOffEvent+0xfc>
400221b0:	e5900000 	ldr	r0, [r0]
400221b4:	e581002c 	str	r0, [r1, #44]	; 0x2c
400221b8:	e3a00001 	mov	r0, #1
400221bc:	ebffc5ea 	bl	4001396c <CyU3PBusyWait>
400221c0:	e59f005c 	ldr	r0, [pc, #92]	; 40022224 <HandleVbusOffEvent+0xf4>
400221c4:	e5900004 	ldr	r0, [r0, #4]
400221c8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400221cc:	e59f1050 	ldr	r1, [pc, #80]	; 40022224 <HandleVbusOffEvent+0xf4>
400221d0:	e5810004 	str	r0, [r1, #4]
400221d4:	e3a00000 	mov	r0, #0
400221d8:	ebffec35 	bl	4001d2b4 <CyU3PUsbPhyDisable>
400221dc:	e3a01000 	mov	r1, #0
400221e0:	e3a00001 	mov	r0, #1
400221e4:	e59f2044 	ldr	r2, [pc, #68]	; 40022230 <HandleVbusOffEvent+0x100>
400221e8:	e5922000 	ldr	r2, [r2]
400221ec:	e12fff32 	blx	r2
400221f0:	e3a00000 	mov	r0, #0
400221f4:	e59f1020 	ldr	r1, [pc, #32]	; 4002221c <HandleVbusOffEvent+0xec>
400221f8:	e581002c 	str	r0, [r1, #44]	; 0x2c
400221fc:	e3a00004 	mov	r0, #4
40022200:	e5c10008 	strb	r0, [r1, #8]
40022204:	e3a00000 	mov	r0, #0
40022208:	e5c10009 	strb	r0, [r1, #9]
4002220c:	e5810054 	str	r0, [r1, #84]	; 0x54
40022210:	e5810058 	str	r0, [r1, #88]	; 0x58
40022214:	e5810048 	str	r0, [r1, #72]	; 0x48
40022218:	e8bd8010 	pop	{r4, pc}
4002221c:	40031d60 	.word	0x40031d60
40022220:	e0031000 	.word	0xe0031000
40022224:	e0030000 	.word	0xe0030000
40022228:	e0033000 	.word	0xe0033000
4002222c:	40030c78 	.word	0x40030c78
40022230:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3POsTimerInit:

40022234 <CyU3POsTimerInit>:
40022234:	e92d4070 	push	{r4, r5, r6, lr}
40022238:	e1a04000 	mov	r4, r0
4002223c:	e3a00004 	mov	r0, #4
40022240:	eb000047 	bl	40022364 <CyU3PVicDisableInt>
40022244:	e59f00f0 	ldr	r0, [pc, #240]	; 4002233c <CyU3POsTimerInit+0x108>
40022248:	e5905014 	ldr	r5, [r0, #20]
4002224c:	e3a00064 	mov	r0, #100	; 0x64
40022250:	ebffc5c5 	bl	4001396c <CyU3PBusyWait>
40022254:	e3850c03 	orr	r0, r5, #768	; 0x300
40022258:	e59f10dc 	ldr	r1, [pc, #220]	; 4002233c <CyU3POsTimerInit+0x108>
4002225c:	e5810014 	str	r0, [r1, #20]
40022260:	e3a00064 	mov	r0, #100	; 0x64
40022264:	ebffc5c0 	bl	4001396c <CyU3PBusyWait>
40022268:	e59f00cc 	ldr	r0, [pc, #204]	; 4002233c <CyU3POsTimerInit+0x108>
4002226c:	e5905014 	ldr	r5, [r0, #20]
40022270:	e3540000 	cmp	r4, #0
40022274:	0a000001 	beq	40022280 <CyU3POsTimerInit+0x4c>
40022278:	e3540ffa 	cmp	r4, #1000	; 0x3e8
4002227c:	da000006 	ble	4002229c <CyU3POsTimerInit+0x68>
40022280:	e3a00001 	mov	r0, #1
40022284:	e59f10b4 	ldr	r1, [pc, #180]	; 40022340 <CyU3POsTimerInit+0x10c>
40022288:	e1c100b0 	strh	r0, [r1]
4002228c:	e3a00020 	mov	r0, #32
40022290:	e59f10ac 	ldr	r1, [pc, #172]	; 40022344 <CyU3POsTimerInit+0x110>
40022294:	e5810000 	str	r0, [r1]
40022298:	ea000004 	b	400222b0 <CyU3POsTimerInit+0x7c>
4002229c:	e59f009c 	ldr	r0, [pc, #156]	; 40022340 <CyU3POsTimerInit+0x10c>
400222a0:	e1c040b0 	strh	r4, [r0]
400222a4:	e1a00284 	lsl	r0, r4, #5
400222a8:	e59f1094 	ldr	r1, [pc, #148]	; 40022344 <CyU3POsTimerInit+0x110>
400222ac:	e5810000 	str	r0, [r1]
400222b0:	e59f008c 	ldr	r0, [pc, #140]	; 40022344 <CyU3POsTimerInit+0x110>
400222b4:	e5900000 	ldr	r0, [r0]
400222b8:	e2400007 	sub	r0, r0, #7
400222bc:	e59f1080 	ldr	r1, [pc, #128]	; 40022344 <CyU3POsTimerInit+0x110>
400222c0:	e5810000 	str	r0, [r1]
400222c4:	e3a06000 	mov	r6, #0
400222c8:	ea000001 	b	400222d4 <CyU3POsTimerInit+0xa0>
400222cc:	e2860001 	add	r0, r6, #1
400222d0:	e20060ff 	and	r6, r0, #255	; 0xff
400222d4:	e3a00001 	mov	r0, #1
400222d8:	e1a00610 	lsl	r0, r0, r6
400222dc:	e59f1060 	ldr	r1, [pc, #96]	; 40022344 <CyU3POsTimerInit+0x110>
400222e0:	e5911000 	ldr	r1, [r1]
400222e4:	e1500001 	cmp	r0, r1
400222e8:	9afffff7 	bls	400222cc <CyU3POsTimerInit+0x98>
400222ec:	e59f0050 	ldr	r0, [pc, #80]	; 40022344 <CyU3POsTimerInit+0x110>
400222f0:	e5900000 	ldr	r0, [r0]
400222f4:	e59f1040 	ldr	r1, [pc, #64]	; 4002233c <CyU3POsTimerInit+0x108>
400222f8:	e581001c 	str	r0, [r1, #28]
400222fc:	e3a00064 	mov	r0, #100	; 0x64
40022300:	ebffc599 	bl	4001396c <CyU3PBusyWait>
40022304:	e3a00004 	mov	r0, #4
40022308:	eb00001a 	bl	40022378 <CyU3PVicEnableInt>
4002230c:	e59f0028 	ldr	r0, [pc, #40]	; 4002233c <CyU3POsTimerInit+0x108>
40022310:	e5900014 	ldr	r0, [r0, #20]
40022314:	e3c05c03 	bic	r5, r0, #768	; 0x300
40022318:	e3a00b01 	mov	r0, #1024	; 0x400
4002231c:	e1800586 	orr	r0, r0, r6, lsl #11
40022320:	e1855000 	orr	r5, r5, r0
40022324:	e3855c01 	orr	r5, r5, #256	; 0x100
40022328:	e3a00064 	mov	r0, #100	; 0x64
4002232c:	ebffc58e 	bl	4001396c <CyU3PBusyWait>
40022330:	e59f0004 	ldr	r0, [pc, #4]	; 4002233c <CyU3POsTimerInit+0x108>
40022334:	e5805014 	str	r5, [r0, #20]
40022338:	e8bd8070 	pop	{r4, r5, r6, pc}
4002233c:	e0050000 	.word	0xe0050000
40022340:	40030dd8 	.word	0x40030dd8
40022344:	40030ddc 	.word	0x40030ddc

Disassembly of section i.CyU3PVicClearInt:

40022348 <CyU3PVicClearInt>:
40022348:	e3a00000 	mov	r0, #0
4002234c:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40022350:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40022354 <CyU3PVicDisableAllInterrupts>:
40022354:	e3a01000 	mov	r1, #0
40022358:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
4002235c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40022360:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40022364 <CyU3PVicDisableInt>:
40022364:	e3a01001 	mov	r1, #1
40022368:	e1a01011 	lsl	r1, r1, r0
4002236c:	e3a02000 	mov	r2, #0
40022370:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40022374:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40022378 <CyU3PVicEnableInt>:
40022378:	e3a01001 	mov	r1, #1
4002237c:	e1a01011 	lsl	r1, r1, r0
40022380:	e3a02000 	mov	r2, #0
40022384:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40022388:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

4002238c <CyU3PVicEnableInterrupts>:
4002238c:	e3a01000 	mov	r1, #0
40022390:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40022394:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40022398 <CyU3PVicInit>:
40022398:	e92d4010 	push	{r4, lr}
4002239c:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
400223a0:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
400223a4:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
400223a8:	e3e00000 	mvn	r0, #0
400223ac:	e3a01000 	mov	r1, #0
400223b0:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
400223b4:	e3a00000 	mov	r0, #0
400223b8:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
400223bc:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
400223c0:	ebffffe0 	bl	40022348 <CyU3PVicClearInt>
400223c4:	eb000001 	bl	400223d0 <__CyU3PVicSetupIntVectors_veneer>
400223c8:	e8bd8010 	pop	{r4, pc}
400223cc:	00000000 	andeq	r0, r0, r0

400223d0 <__CyU3PVicSetupIntVectors_veneer>:
400223d0:	e51ff004 	ldr	pc, [pc, #-4]	; 400223d4 <__CyU3PVicSetupIntVectors_veneer+0x4>
400223d4:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

400223d8 <CyFx3Usb2PhySetup>:
400223d8:	e59f0008 	ldr	r0, [pc, #8]	; 400223e8 <CyFx3Usb2PhySetup+0x10>
400223dc:	e59f1008 	ldr	r1, [pc, #8]	; 400223ec <CyFx3Usb2PhySetup+0x14>
400223e0:	e581000c 	str	r0, [r1, #12]
400223e4:	e12fff1e 	bx	lr
400223e8:	00d4a480 	.word	0x00d4a480
400223ec:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

400223f0 <CyFx3Usb3LnkRelaxHpTimeout>:
400223f0:	e59f0008 	ldr	r0, [pc, #8]	; 40022400 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
400223f4:	e59f1008 	ldr	r1, [pc, #8]	; 40022404 <CyFx3Usb3LnkRelaxHpTimeout+0x14>
400223f8:	e58100c4 	str	r0, [r1, #196]	; 0xc4
400223fc:	e12fff1e 	bx	lr
40022400:	000009c4 	.word	0x000009c4
40022404:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40022408 <CyFx3Usb3LnkSetup>:
40022408:	e59f1024 	ldr	r1, [pc, #36]	; 40022434 <CyFx3Usb3LnkSetup+0x2c>
4002240c:	e59f0024 	ldr	r0, [pc, #36]	; 40022438 <CyFx3Usb3LnkSetup+0x30>
40022410:	e580109c 	str	r1, [r0, #156]	; 0x9c
40022414:	e5801080 	str	r1, [r0, #128]	; 0x80
40022418:	e59f101c 	ldr	r1, [pc, #28]	; 4002243c <CyFx3Usb3LnkSetup+0x34>
4002241c:	e5801084 	str	r1, [r0, #132]	; 0x84
40022420:	e59f1018 	ldr	r1, [pc, #24]	; 40022440 <CyFx3Usb3LnkSetup+0x38>
40022424:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40022428:	e3a0107d 	mov	r1, #125	; 0x7d
4002242c:	e5801078 	str	r1, [r0, #120]	; 0x78
40022430:	e12fff1e 	bx	lr
40022434:	00002710 	.word	0x00002710
40022438:	e0033000 	.word	0xe0033000
4002243c:	00fa004b 	.word	0x00fa004b
40022440:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

40022444 <CyFx3Usb3SendTP>:
40022444:	e5902000 	ldr	r2, [r0]
40022448:	e59f1020 	ldr	r1, [pc, #32]	; 40022470 <CyFx3Usb3SendTP+0x2c>
4002244c:	e5812450 	str	r2, [r1, #1104]	; 0x450
40022450:	e5902004 	ldr	r2, [r0, #4]
40022454:	e5812454 	str	r2, [r1, #1108]	; 0x454
40022458:	e5900008 	ldr	r0, [r0, #8]
4002245c:	e5810458 	str	r0, [r1, #1112]	; 0x458
40022460:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
40022464:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022468:	e5810460 	str	r0, [r1, #1120]	; 0x460
4002246c:	e12fff1e 	bx	lr
40022470:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

40022474 <CyFx3UsbDmaPrefetchEnable>:
40022474:	e3500000 	cmp	r0, #0
40022478:	e59f001c 	ldr	r0, [pc, #28]	; 4002249c <CyFx3UsbDmaPrefetchEnable+0x28>
4002247c:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40022480:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
40022484:	12811a09 	addne	r1, r1, #36864	; 0x9000
40022488:	e3c22903 	bic	r2, r2, #49152	; 0xc000
4002248c:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40022490:	e1811002 	orr	r1, r1, r2
40022494:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40022498:	e12fff1e 	bx	lr
4002249c:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

400224a0 <CyFx3UsbPowerOn>:
400224a0:	e92d4010 	push	{r4, lr}
400224a4:	e59f406c 	ldr	r4, [pc, #108]	; 40022518 <CyFx3UsbPowerOn+0x78>
400224a8:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400224ac:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400224b0:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400224b4:	e3a0000a 	mov	r0, #10
400224b8:	ebffca78 	bl	40014ea0 <CyFx3BusyWait>
400224bc:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400224c0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400224c4:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400224c8:	e3a00064 	mov	r0, #100	; 0x64
400224cc:	ebffca73 	bl	40014ea0 <CyFx3BusyWait>
400224d0:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400224d4:	e3100001 	tst	r0, #1
400224d8:	0afffffc 	beq	400224d0 <CyFx3UsbPowerOn+0x30>
400224dc:	ebffca65 	bl	40014e78 <CyFx3DevIsUsb3Supported>
400224e0:	e59f4034 	ldr	r4, [pc, #52]	; 4002251c <CyFx3UsbPowerOn+0x7c>
400224e4:	e3500000 	cmp	r0, #0
400224e8:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
400224ec:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
400224f0:	03a0000a 	moveq	r0, #10
400224f4:	0bffca69 	bleq	40014ea0 <CyFx3BusyWait>
400224f8:	ebffca40 	bl	40014e00 <CyFx3DevIsOtgSupported>
400224fc:	e3500000 	cmp	r0, #0
40022500:	18bd8010 	popne	{r4, pc}
40022504:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40022508:	e584080c 	str	r0, [r4, #2060]	; 0x80c
4002250c:	e8bd4010 	pop	{r4, lr}
40022510:	e3a0000a 	mov	r0, #10
40022514:	eaffca61 	b	40014ea0 <CyFx3BusyWait>
40022518:	e0037000 	.word	0xe0037000
4002251c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40022520 <CyFx3UsbWritePhyReg>:
40022520:	e59f2084 	ldr	r2, [pc, #132]	; 400225ac <CyFx3UsbWritePhyReg+0x8c>
40022524:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022528:	e3120901 	tst	r2, #16384	; 0x4000
4002252c:	012fff1e 	bxeq	lr
40022530:	e59f2078 	ldr	r2, [pc, #120]	; 400225b0 <CyFx3UsbWritePhyReg+0x90>
40022534:	e5820024 	str	r0, [r2, #36]	; 0x24
40022538:	e3803801 	orr	r3, r0, #65536	; 0x10000
4002253c:	e5823024 	str	r3, [r2, #36]	; 0x24
40022540:	e5923028 	ldr	r3, [r2, #40]	; 0x28
40022544:	e3130801 	tst	r3, #65536	; 0x10000
40022548:	0afffffc 	beq	40022540 <CyFx3UsbWritePhyReg+0x20>
4002254c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022550:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022554:	e3100801 	tst	r0, #65536	; 0x10000
40022558:	1afffffc 	bne	40022550 <CyFx3UsbWritePhyReg+0x30>
4002255c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022560:	e3810802 	orr	r0, r1, #131072	; 0x20000
40022564:	e5820024 	str	r0, [r2, #36]	; 0x24
40022568:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002256c:	e3100801 	tst	r0, #65536	; 0x10000
40022570:	0afffffc 	beq	40022568 <CyFx3UsbWritePhyReg+0x48>
40022574:	e5821024 	str	r1, [r2, #36]	; 0x24
40022578:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002257c:	e3100801 	tst	r0, #65536	; 0x10000
40022580:	1afffffc 	bne	40022578 <CyFx3UsbWritePhyReg+0x58>
40022584:	e3810702 	orr	r0, r1, #524288	; 0x80000
40022588:	e5820024 	str	r0, [r2, #36]	; 0x24
4002258c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022590:	e3100801 	tst	r0, #65536	; 0x10000
40022594:	0afffffc 	beq	4002258c <CyFx3UsbWritePhyReg+0x6c>
40022598:	e5821024 	str	r1, [r2, #36]	; 0x24
4002259c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400225a0:	e3100801 	tst	r0, #65536	; 0x10000
400225a4:	1afffffc 	bne	4002259c <CyFx3UsbWritePhyReg+0x7c>
400225a8:	e12fff1e 	bx	lr
400225ac:	e0031000 	.word	0xe0031000
400225b0:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

400225b4 <CyU3PDmaDscrChainCreate>:
400225b4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400225b8:	e24dd018 	sub	sp, sp, #24
400225bc:	e1a04000 	mov	r4, r0
400225c0:	e1a05001 	mov	r5, r1
400225c4:	e1a06002 	mov	r6, r2
400225c8:	e1a07003 	mov	r7, r3
400225cc:	e3a0a000 	mov	sl, #0
400225d0:	eb0000a6 	bl	40022870 <CyU3PDmaDscrGetFreeCount>
400225d4:	e1500005 	cmp	r0, r5
400225d8:	aa000002 	bge	400225e8 <CyU3PDmaDscrChainCreate+0x34>
400225dc:	e3a00010 	mov	r0, #16
400225e0:	e28dd018 	add	sp, sp, #24
400225e4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400225e8:	e3540000 	cmp	r4, #0
400225ec:	1a000001 	bne	400225f8 <CyU3PDmaDscrChainCreate+0x44>
400225f0:	e3a00040 	mov	r0, #64	; 0x40
400225f4:	eafffff9 	b	400225e0 <CyU3PDmaDscrChainCreate+0x2c>
400225f8:	e3550000 	cmp	r5, #0
400225fc:	1a000001 	bne	40022608 <CyU3PDmaDscrChainCreate+0x54>
40022600:	e3a00040 	mov	r0, #64	; 0x40
40022604:	eafffff5 	b	400225e0 <CyU3PDmaDscrChainCreate+0x2c>
40022608:	e1a09005 	mov	r9, r5
4002260c:	e1a00004 	mov	r0, r4
40022610:	eb00005e 	bl	40022790 <CyU3PDmaDscrGet>
40022614:	e1d480b0 	ldrh	r8, [r4]
40022618:	ea000029 	b	400226c4 <CyU3PDmaDscrChainCreate+0x110>
4002261c:	e3590000 	cmp	r9, #0
40022620:	0a000002 	beq	40022630 <CyU3PDmaDscrChainCreate+0x7c>
40022624:	e28d0014 	add	r0, sp, #20
40022628:	eb000058 	bl	40022790 <CyU3PDmaDscrGet>
4002262c:	ea000001 	b	40022638 <CyU3PDmaDscrChainCreate+0x84>
40022630:	e1d400b0 	ldrh	r0, [r4]
40022634:	e58d0014 	str	r0, [sp, #20]
40022638:	e3560000 	cmp	r6, #0
4002263c:	0a000015 	beq	40022698 <CyU3PDmaDscrChainCreate+0xe4>
40022640:	e35a0000 	cmp	sl, #0
40022644:	1a000013 	bne	40022698 <CyU3PDmaDscrChainCreate+0xe4>
40022648:	e1a00006 	mov	r0, r6
4002264c:	ebff85c5 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022650:	e58d0004 	str	r0, [sp, #4]
40022654:	e59f00a0 	ldr	r0, [pc, #160]	; 400226fc <CyU3PDmaDscrChainCreate+0x148>
40022658:	e0000006 	and	r0, r0, r6
4002265c:	e58d0010 	str	r0, [sp, #16]
40022660:	e59d0004 	ldr	r0, [sp, #4]
40022664:	e3500000 	cmp	r0, #0
40022668:	1a000000 	bne	40022670 <CyU3PDmaDscrChainCreate+0xbc>
4002266c:	e3a0a010 	mov	sl, #16
40022670:	e59d0004 	ldr	r0, [sp, #4]
40022674:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022678:	3a000004 	bcc	40022690 <CyU3PDmaDscrChainCreate+0xdc>
4002267c:	e59d0004 	ldr	r0, [sp, #4]
40022680:	e0800006 	add	r0, r0, r6
40022684:	e59f1074 	ldr	r1, [pc, #116]	; 40022700 <CyU3PDmaDscrChainCreate+0x14c>
40022688:	e1500001 	cmp	r0, r1
4002268c:	3a000004 	bcc	400226a4 <CyU3PDmaDscrChainCreate+0xf0>
40022690:	e3a0a010 	mov	sl, #16
40022694:	ea000002 	b	400226a4 <CyU3PDmaDscrChainCreate+0xf0>
40022698:	e3a00000 	mov	r0, #0
4002269c:	e58d0004 	str	r0, [sp, #4]
400226a0:	e58d0010 	str	r0, [sp, #16]
400226a4:	e58d7008 	str	r7, [sp, #8]
400226a8:	e1dd01b4 	ldrh	r0, [sp, #20]
400226ac:	e1800800 	orr	r0, r0, r0, lsl #16
400226b0:	e58d000c 	str	r0, [sp, #12]
400226b4:	e28d1004 	add	r1, sp, #4
400226b8:	e1a00008 	mov	r0, r8
400226bc:	eb0000c6 	bl	400229dc <CyU3PDmaDscrSetConfig>
400226c0:	e1dd81b4 	ldrh	r8, [sp, #20]
400226c4:	e1b00009 	movs	r0, r9
400226c8:	e2491001 	sub	r1, r9, #1
400226cc:	e1a09801 	lsl	r9, r1, #16
400226d0:	e1a09829 	lsr	r9, r9, #16
400226d4:	1affffd0 	bne	4002261c <CyU3PDmaDscrChainCreate+0x68>
400226d8:	e35a0000 	cmp	sl, #0
400226dc:	0a000004 	beq	400226f4 <CyU3PDmaDscrChainCreate+0x140>
400226e0:	e1d400b0 	ldrh	r0, [r4]
400226e4:	e3a03001 	mov	r3, #1
400226e8:	e1a02003 	mov	r2, r3
400226ec:	e1a01005 	mov	r1, r5
400226f0:	eb000003 	bl	40022704 <CyU3PDmaDscrChainDestroy>
400226f4:	e1a0000a 	mov	r0, sl
400226f8:	eaffffb8 	b	400225e0 <CyU3PDmaDscrChainCreate+0x2c>
400226fc:	0000fff0 	.word	0x0000fff0
40022700:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

40022704 <CyU3PDmaDscrChainDestroy>:
40022704:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40022708:	e1a04000 	mov	r4, r0
4002270c:	e1a05001 	mov	r5, r1
40022710:	e1a06002 	mov	r6, r2
40022714:	e1a07003 	mov	r7, r3
40022718:	ea000015 	b	40022774 <CyU3PDmaDscrChainDestroy+0x70>
4002271c:	e1a0100d 	mov	r1, sp
40022720:	e1a00004 	mov	r0, r4
40022724:	eb000091 	bl	40022970 <CyU3PDmaDscrGetConfig>
40022728:	e3570000 	cmp	r7, #0
4002272c:	0a000004 	beq	40022744 <CyU3PDmaDscrChainDestroy+0x40>
40022730:	e59d0000 	ldr	r0, [sp]
40022734:	e3500000 	cmp	r0, #0
40022738:	0a000001 	beq	40022744 <CyU3PDmaDscrChainDestroy+0x40>
4002273c:	e59d0000 	ldr	r0, [sp]
40022740:	ebff85eb 	bl	40003ef4 <CyU3PDmaBufferFree>
40022744:	e3560000 	cmp	r6, #0
40022748:	0a000003 	beq	4002275c <CyU3PDmaDscrChainDestroy+0x58>
4002274c:	e59d0008 	ldr	r0, [sp, #8]
40022750:	e59f1034 	ldr	r1, [pc, #52]	; 4002278c <CyU3PDmaDscrChainDestroy+0x88>
40022754:	e0018820 	and	r8, r1, r0, lsr #16
40022758:	ea000002 	b	40022768 <CyU3PDmaDscrChainDestroy+0x64>
4002275c:	e59d0008 	ldr	r0, [sp, #8]
40022760:	e1a08800 	lsl	r8, r0, #16
40022764:	e1a08828 	lsr	r8, r8, #16
40022768:	e1a00004 	mov	r0, r4
4002276c:	eb000058 	bl	400228d4 <CyU3PDmaDscrPut>
40022770:	e1a04008 	mov	r4, r8
40022774:	e1b00005 	movs	r0, r5
40022778:	e2451001 	sub	r1, r5, #1
4002277c:	e1a05801 	lsl	r5, r1, #16
40022780:	e1a05825 	lsr	r5, r5, #16
40022784:	1affffe4 	bne	4002271c <CyU3PDmaDscrChainDestroy+0x18>
40022788:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
4002278c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

40022790 <CyU3PDmaDscrGet>:
40022790:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022794:	e1a04000 	mov	r4, r0
40022798:	e3a08000 	mov	r8, #0
4002279c:	e3540000 	cmp	r4, #0
400227a0:	1a000001 	bne	400227ac <CyU3PDmaDscrGet+0x1c>
400227a4:	e3a00040 	mov	r0, #64	; 0x40
400227a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400227ac:	e3e01000 	mvn	r1, #0
400227b0:	e59f00ac 	ldr	r0, [pc, #172]	; 40022864 <CyU3PDmaDscrGet+0xd4>
400227b4:	ebff9f15 	bl	4000a410 <_txe_mutex_get>
400227b8:	e59f00a8 	ldr	r0, [pc, #168]	; 40022868 <CyU3PDmaDscrGet+0xd8>
400227bc:	e1d000b0 	ldrh	r0, [r0]
400227c0:	e3500000 	cmp	r0, #0
400227c4:	0a000022 	beq	40022854 <CyU3PDmaDscrGet+0xc4>
400227c8:	e3a06000 	mov	r6, #0
400227cc:	ea00001e 	b	4002284c <CyU3PDmaDscrGet+0xbc>
400227d0:	e59f0094 	ldr	r0, [pc, #148]	; 4002286c <CyU3PDmaDscrGet+0xdc>
400227d4:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400227d8:	e3750001 	cmn	r5, #1
400227dc:	0a000017 	beq	40022840 <CyU3PDmaDscrGet+0xb0>
400227e0:	e3a07001 	mov	r7, #1
400227e4:	ea000012 	b	40022834 <CyU3PDmaDscrGet+0xa4>
400227e8:	e1150007 	tst	r5, r7
400227ec:	1a00000d 	bne	40022828 <CyU3PDmaDscrGet+0x98>
400227f0:	e1850007 	orr	r0, r5, r7
400227f4:	e59f1070 	ldr	r1, [pc, #112]	; 4002286c <CyU3PDmaDscrGet+0xdc>
400227f8:	e7810106 	str	r0, [r1, r6, lsl #2]
400227fc:	e2410004 	sub	r0, r1, #4
40022800:	e1c080b2 	strh	r8, [r0, #2]
40022804:	e1d000b0 	ldrh	r0, [r0]
40022808:	e2400001 	sub	r0, r0, #1
4002280c:	e2411004 	sub	r1, r1, #4
40022810:	e1c100b0 	strh	r0, [r1]
40022814:	e1c480b0 	strh	r8, [r4]
40022818:	e2810044 	add	r0, r1, #68	; 0x44
4002281c:	ebff9f30 	bl	4000a4e4 <_txe_mutex_put>
40022820:	e3a00000 	mov	r0, #0
40022824:	eaffffdf 	b	400227a8 <CyU3PDmaDscrGet+0x18>
40022828:	e1a07087 	lsl	r7, r7, #1
4002282c:	e2880001 	add	r0, r8, #1
40022830:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022834:	e3570000 	cmp	r7, #0
40022838:	1affffea 	bne	400227e8 <CyU3PDmaDscrGet+0x58>
4002283c:	ea000001 	b	40022848 <CyU3PDmaDscrGet+0xb8>
40022840:	e2880020 	add	r0, r8, #32
40022844:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022848:	e2866001 	add	r6, r6, #1
4002284c:	e3560010 	cmp	r6, #16
40022850:	3affffde 	bcc	400227d0 <CyU3PDmaDscrGet+0x40>
40022854:	e59f0008 	ldr	r0, [pc, #8]	; 40022864 <CyU3PDmaDscrGet+0xd4>
40022858:	ebff9f21 	bl	4000a4e4 <_txe_mutex_put>
4002285c:	e3a0004a 	mov	r0, #74	; 0x4a
40022860:	eaffffd0 	b	400227a8 <CyU3PDmaDscrGet+0x18>
40022864:	4003275c 	.word	0x4003275c
40022868:	40032718 	.word	0x40032718
4002286c:	4003271c 	.word	0x4003271c

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022870 <CyU3PDmaDscrGetFreeCount>:
40022870:	e59f0004 	ldr	r0, [pc, #4]	; 4002287c <CyU3PDmaDscrGetFreeCount+0xc>
40022874:	e1d000b0 	ldrh	r0, [r0]
40022878:	e12fff1e 	bx	lr
4002287c:	40032718 	.word	0x40032718

Disassembly of section i.CyU3PDmaDscrListCreate:

40022880 <CyU3PDmaDscrListCreate>:
40022880:	e92d4010 	push	{r4, lr}
40022884:	e3a02040 	mov	r2, #64	; 0x40
40022888:	e3a01000 	mov	r1, #0
4002288c:	e59f0034 	ldr	r0, [pc, #52]	; 400228c8 <CyU3PDmaDscrListCreate+0x48>
40022890:	ebff8388 	bl	400036b8 <CyU3PMemSet>
40022894:	e3a00001 	mov	r0, #1
40022898:	e59f102c 	ldr	r1, [pc, #44]	; 400228cc <CyU3PDmaDscrListCreate+0x4c>
4002289c:	e5810004 	str	r0, [r1, #4]
400228a0:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
400228a4:	e1c100b0 	strh	r0, [r1]
400228a8:	e3a00001 	mov	r0, #1
400228ac:	e1c100b2 	strh	r0, [r1, #2]
400228b0:	e3a03038 	mov	r3, #56	; 0x38
400228b4:	e3a02000 	mov	r2, #0
400228b8:	e1a01002 	mov	r1, r2
400228bc:	e59f000c 	ldr	r0, [pc, #12]	; 400228d0 <CyU3PDmaDscrListCreate+0x50>
400228c0:	ebff9e54 	bl	4000a218 <_txe_mutex_create>
400228c4:	e8bd8010 	pop	{r4, pc}
400228c8:	4003271c 	.word	0x4003271c
400228cc:	40032718 	.word	0x40032718
400228d0:	4003275c 	.word	0x4003275c

Disassembly of section i.CyU3PDmaDscrPut:

400228d4 <CyU3PDmaDscrPut>:
400228d4:	e92d4070 	push	{r4, r5, r6, lr}
400228d8:	e1a04000 	mov	r4, r0
400228dc:	e3540c02 	cmp	r4, #512	; 0x200
400228e0:	aa000001 	bge	400228ec <CyU3PDmaDscrPut+0x18>
400228e4:	e3540000 	cmp	r4, #0
400228e8:	1a000001 	bne	400228f4 <CyU3PDmaDscrPut+0x20>
400228ec:	e3a00040 	mov	r0, #64	; 0x40
400228f0:	e8bd8070 	pop	{r4, r5, r6, pc}
400228f4:	e3e01000 	mvn	r1, #0
400228f8:	e59f0064 	ldr	r0, [pc, #100]	; 40022964 <CyU3PDmaDscrPut+0x90>
400228fc:	ebff9ec3 	bl	4000a410 <_txe_mutex_get>
40022900:	e1a00004 	mov	r0, r4
40022904:	e1a01fc4 	asr	r1, r4, #31
40022908:	e0841da1 	add	r1, r4, r1, lsr #27
4002290c:	e1a062c1 	asr	r6, r1, #5
40022910:	e59f0050 	ldr	r0, [pc, #80]	; 40022968 <CyU3PDmaDscrPut+0x94>
40022914:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022918:	e1a00004 	mov	r0, r4
4002291c:	e1a01fc4 	asr	r1, r4, #31
40022920:	e0841da1 	add	r1, r4, r1, lsr #27
40022924:	e1a012c1 	asr	r1, r1, #5
40022928:	e0441281 	sub	r1, r4, r1, lsl #5
4002292c:	e3a02001 	mov	r2, #1
40022930:	e1c55112 	bic	r5, r5, r2, lsl r1
40022934:	e59f002c 	ldr	r0, [pc, #44]	; 40022968 <CyU3PDmaDscrPut+0x94>
40022938:	e7805106 	str	r5, [r0, r6, lsl #2]
4002293c:	e2400004 	sub	r0, r0, #4
40022940:	e1d000b0 	ldrh	r0, [r0]
40022944:	e2800001 	add	r0, r0, #1
40022948:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4002294c:	e59f1018 	ldr	r1, [pc, #24]	; 4002296c <CyU3PDmaDscrPut+0x98>
40022950:	e1c100b0 	strh	r0, [r1]
40022954:	e2810044 	add	r0, r1, #68	; 0x44
40022958:	ebff9ee1 	bl	4000a4e4 <_txe_mutex_put>
4002295c:	e3a00000 	mov	r0, #0
40022960:	eaffffe2 	b	400228f0 <CyU3PDmaDscrPut+0x1c>
40022964:	4003275c 	.word	0x4003275c
40022968:	4003271c 	.word	0x4003271c
4002296c:	40032718 	.word	0x40032718

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022970 <CyU3PDmaDscrGetConfig>:
40022970:	e92d4070 	push	{r4, r5, r6, lr}
40022974:	e1a05000 	mov	r5, r0
40022978:	e1a04001 	mov	r4, r1
4002297c:	e3550c02 	cmp	r5, #512	; 0x200
40022980:	aa000001 	bge	4002298c <CyU3PDmaDscrGetConfig+0x1c>
40022984:	e3550000 	cmp	r5, #0
40022988:	1a000001 	bne	40022994 <CyU3PDmaDscrGetConfig+0x24>
4002298c:	e3a00040 	mov	r0, #64	; 0x40
40022990:	e8bd8070 	pop	{r4, r5, r6, pc}
40022994:	e3540000 	cmp	r4, #0
40022998:	1a000001 	bne	400229a4 <CyU3PDmaDscrGetConfig+0x34>
4002299c:	e3a00040 	mov	r0, #64	; 0x40
400229a0:	eafffffa 	b	40022990 <CyU3PDmaDscrGetConfig+0x20>
400229a4:	e59f102c 	ldr	r1, [pc, #44]	; 400229d8 <CyU3PDmaDscrGetConfig+0x68>
400229a8:	e5911000 	ldr	r1, [r1]
400229ac:	e0810205 	add	r0, r1, r5, lsl #4
400229b0:	e3a01010 	mov	r1, #16
400229b4:	ebffbea5 	bl	40012450 <CyU3PSysClearDRegion>
400229b8:	ebffc119 	bl	40012e24 <CyU3PSysBarrierSync>
400229bc:	e59f0014 	ldr	r0, [pc, #20]	; 400229d8 <CyU3PDmaDscrGetConfig+0x68>
400229c0:	e5900000 	ldr	r0, [r0]
400229c4:	e0800205 	add	r0, r0, r5, lsl #4
400229c8:	e890004e 	ldm	r0, {r1, r2, r3, r6}
400229cc:	e884004e 	stm	r4, {r1, r2, r3, r6}
400229d0:	e3a00000 	mov	r0, #0
400229d4:	eaffffed 	b	40022990 <CyU3PDmaDscrGetConfig+0x20>
400229d8:	40030de0 	.word	0x40030de0

Disassembly of section i.CyU3PDmaDscrSetConfig:

400229dc <CyU3PDmaDscrSetConfig>:
400229dc:	e92d4070 	push	{r4, r5, r6, lr}
400229e0:	e1a04000 	mov	r4, r0
400229e4:	e1a05001 	mov	r5, r1
400229e8:	e3540c02 	cmp	r4, #512	; 0x200
400229ec:	aa000001 	bge	400229f8 <CyU3PDmaDscrSetConfig+0x1c>
400229f0:	e3540000 	cmp	r4, #0
400229f4:	1a000001 	bne	40022a00 <CyU3PDmaDscrSetConfig+0x24>
400229f8:	e3a00040 	mov	r0, #64	; 0x40
400229fc:	e8bd8070 	pop	{r4, r5, r6, pc}
40022a00:	e3550000 	cmp	r5, #0
40022a04:	1a000001 	bne	40022a10 <CyU3PDmaDscrSetConfig+0x34>
40022a08:	e3a00040 	mov	r0, #64	; 0x40
40022a0c:	eafffffa 	b	400229fc <CyU3PDmaDscrSetConfig+0x20>
40022a10:	e59f002c 	ldr	r0, [pc, #44]	; 40022a44 <CyU3PDmaDscrSetConfig+0x68>
40022a14:	e5900000 	ldr	r0, [r0]
40022a18:	e0800204 	add	r0, r0, r4, lsl #4
40022a1c:	e895004e 	ldm	r5, {r1, r2, r3, r6}
40022a20:	e880004e 	stm	r0, {r1, r2, r3, r6}
40022a24:	e59f1018 	ldr	r1, [pc, #24]	; 40022a44 <CyU3PDmaDscrSetConfig+0x68>
40022a28:	e5911000 	ldr	r1, [r1]
40022a2c:	e0810204 	add	r0, r1, r4, lsl #4
40022a30:	e3a01010 	mov	r1, #16
40022a34:	ebffbe85 	bl	40012450 <CyU3PSysClearDRegion>
40022a38:	ebffc0f9 	bl	40012e24 <CyU3PSysBarrierSync>
40022a3c:	e3a00000 	mov	r0, #0
40022a40:	eaffffed 	b	400229fc <CyU3PDmaDscrSetConfig+0x20>
40022a44:	40030de0 	.word	0x40030de0

Disassembly of section i.CyU3PDmaIntHandler:

40022a48 <CyU3PDmaIntHandler>:
40022a48:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40022a4c:	e1a04000 	mov	r4, r0
40022a50:	e1a05001 	mov	r5, r1
40022a54:	e204003f 	and	r0, r4, #63	; 0x3f
40022a58:	e1857400 	orr	r7, r5, r0, lsl #8
40022a5c:	e59f0150 	ldr	r0, [pc, #336]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022a60:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a64:	e0800385 	add	r0, r0, r5, lsl #7
40022a68:	e5900010 	ldr	r0, [r0, #16]
40022a6c:	e59f1140 	ldr	r1, [pc, #320]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022a70:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a74:	e0811385 	add	r1, r1, r5, lsl #7
40022a78:	e5911014 	ldr	r1, [r1, #20]
40022a7c:	e0009001 	and	r9, r0, r1
40022a80:	e59f0130 	ldr	r0, [pc, #304]	; 40022bb8 <CyU3PDmaIntHandler+0x170>
40022a84:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a88:	e7906105 	ldr	r6, [r0, r5, lsl #2]
40022a8c:	e3560000 	cmp	r6, #0
40022a90:	0a000038 	beq	40022b78 <CyU3PDmaIntHandler+0x130>
40022a94:	e1a00000 	nop			; (mov r0, r0)
40022a98:	e59f0114 	ldr	r0, [pc, #276]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022a9c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022aa0:	e0800385 	add	r0, r0, r5, lsl #7
40022aa4:	e5900010 	ldr	r0, [r0, #16]
40022aa8:	e59f1104 	ldr	r1, [pc, #260]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022aac:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022ab0:	e0811385 	add	r1, r1, r5, lsl #7
40022ab4:	e5911014 	ldr	r1, [r1, #20]
40022ab8:	e0000001 	and	r0, r0, r1
40022abc:	e1899000 	orr	r9, r9, r0
40022ac0:	e2098e12 	and	r8, r9, #288	; 0x120
40022ac4:	e59f00e8 	ldr	r0, [pc, #232]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022ac8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022acc:	e0800385 	add	r0, r0, r5, lsl #7
40022ad0:	e5900014 	ldr	r0, [r0, #20]
40022ad4:	e1c00008 	bic	r0, r0, r8
40022ad8:	e59f10d4 	ldr	r1, [pc, #212]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022adc:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022ae0:	e0811385 	add	r1, r1, r5, lsl #7
40022ae4:	e5810014 	str	r0, [r1, #20]
40022ae8:	e1c90008 	bic	r0, r9, r8
40022aec:	e59f10c0 	ldr	r1, [pc, #192]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022af0:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022af4:	e0811385 	add	r1, r1, r5, lsl #7
40022af8:	e5810010 	str	r0, [r1, #16]
40022afc:	e59f00b0 	ldr	r0, [pc, #176]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022b00:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022b04:	e7900385 	ldr	r0, [r0, r5, lsl #7]
40022b08:	e1a00800 	lsl	r0, r0, #16
40022b0c:	e1a00820 	lsr	r0, r0, #16
40022b10:	e58d000c 	str	r0, [sp, #12]
40022b14:	e59f0098 	ldr	r0, [pc, #152]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022b18:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022b1c:	e0800385 	add	r0, r0, r5, lsl #7
40022b20:	e5900010 	ldr	r0, [r0, #16]
40022b24:	e59f1088 	ldr	r1, [pc, #136]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022b28:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022b2c:	e0811385 	add	r1, r1, r5, lsl #7
40022b30:	e5911014 	ldr	r1, [r1, #20]
40022b34:	e0008001 	and	r8, r0, r1
40022b38:	e3580000 	cmp	r8, #0
40022b3c:	1affffd5 	bne	40022a98 <CyU3PDmaIntHandler+0x50>
40022b40:	e3a00901 	mov	r0, #16384	; 0x4000
40022b44:	e58d0000 	str	r0, [sp]
40022b48:	e59d0000 	ldr	r0, [sp]
40022b4c:	e58d0000 	str	r0, [sp]
40022b50:	e59d0000 	ldr	r0, [sp]
40022b54:	e1800807 	orr	r0, r0, r7, lsl #16
40022b58:	e58d0000 	str	r0, [sp]
40022b5c:	e58d6004 	str	r6, [sp, #4]
40022b60:	e58d9008 	str	r9, [sp, #8]
40022b64:	e3a02000 	mov	r2, #0
40022b68:	e1a01002 	mov	r1, r2
40022b6c:	e1a0000d 	mov	r0, sp
40022b70:	ebffe060 	bl	4001acf8 <CyU3PDmaMsgSend>
40022b74:	ea00000d 	b	40022bb0 <CyU3PDmaIntHandler+0x168>
40022b78:	e59f003c 	ldr	r0, [pc, #60]	; 40022bbc <CyU3PDmaIntHandler+0x174>
40022b7c:	e5900000 	ldr	r0, [r0]
40022b80:	e3500000 	cmp	r0, #0
40022b84:	0a000005 	beq	40022ba0 <CyU3PDmaIntHandler+0x158>
40022b88:	e1a01009 	mov	r1, r9
40022b8c:	e1a00007 	mov	r0, r7
40022b90:	e59f2024 	ldr	r2, [pc, #36]	; 40022bbc <CyU3PDmaIntHandler+0x174>
40022b94:	e5922000 	ldr	r2, [r2]
40022b98:	e12fff32 	blx	r2
40022b9c:	ea000003 	b	40022bb0 <CyU3PDmaIntHandler+0x168>
40022ba0:	e59f000c 	ldr	r0, [pc, #12]	; 40022bb4 <CyU3PDmaIntHandler+0x16c>
40022ba4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022ba8:	e0800385 	add	r0, r0, r5, lsl #7
40022bac:	e5809010 	str	r9, [r0, #16]
40022bb0:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40022bb4:	40030cf8 	.word	0x40030cf8
40022bb8:	40030d20 	.word	0x40030d20
40022bbc:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PGpioInit:

40022bc0 <CyU3PGpioInit>:
40022bc0:	e92d4070 	push	{r4, r5, r6, lr}
40022bc4:	e1a04000 	mov	r4, r0
40022bc8:	e1a06001 	mov	r6, r1
40022bcc:	e59f00fc 	ldr	r0, [pc, #252]	; 40022cd0 <CyU3PGpioInit+0x110>
40022bd0:	e5900000 	ldr	r0, [r0]
40022bd4:	e3500000 	cmp	r0, #0
40022bd8:	0a000001 	beq	40022be4 <CyU3PGpioInit+0x24>
40022bdc:	e3a00043 	mov	r0, #67	; 0x43
40022be0:	e8bd8070 	pop	{r4, r5, r6, pc}
40022be4:	e3540000 	cmp	r4, #0
40022be8:	1a000001 	bne	40022bf4 <CyU3PGpioInit+0x34>
40022bec:	e3a00041 	mov	r0, #65	; 0x41
40022bf0:	eafffffa 	b	40022be0 <CyU3PGpioInit+0x20>
40022bf4:	e1a00006 	mov	r0, r6
40022bf8:	eb00013b 	bl	400230ec <CyU3PRegisterGpioCallBack>
40022bfc:	ebffc552 	bl	4001414c <CyU3PLppGpioBlockIsOn>
40022c00:	e3500000 	cmp	r0, #0
40022c04:	0a000003 	beq	40022c18 <CyU3PGpioInit+0x58>
40022c08:	e59f00c4 	ldr	r0, [pc, #196]	; 40022cd4 <CyU3PGpioInit+0x114>
40022c0c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022c10:	e3100001 	tst	r0, #1
40022c14:	1a000020 	bne	40022c9c <CyU3PGpioInit+0xdc>
40022c18:	e1a00004 	mov	r0, r4
40022c1c:	ebffc4a8 	bl	40013ec4 <CyU3PGpioSetClock>
40022c20:	e1a05000 	mov	r5, r0
40022c24:	e3550000 	cmp	r5, #0
40022c28:	0a000001 	beq	40022c34 <CyU3PGpioInit+0x74>
40022c2c:	e1a00005 	mov	r0, r5
40022c30:	eaffffea 	b	40022be0 <CyU3PGpioInit+0x20>
40022c34:	e59f109c 	ldr	r1, [pc, #156]	; 40022cd8 <CyU3PGpioInit+0x118>
40022c38:	e3a00004 	mov	r0, #4
40022c3c:	ebffc546 	bl	4001415c <CyU3PLppInit>
40022c40:	e1a05000 	mov	r5, r0
40022c44:	e3550000 	cmp	r5, #0
40022c48:	0a000001 	beq	40022c54 <CyU3PGpioInit+0x94>
40022c4c:	e1a00005 	mov	r0, r5
40022c50:	eaffffe2 	b	40022be0 <CyU3PGpioInit+0x20>
40022c54:	e59f0078 	ldr	r0, [pc, #120]	; 40022cd4 <CyU3PGpioInit+0x114>
40022c58:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022c5c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022c60:	e59f106c 	ldr	r1, [pc, #108]	; 40022cd4 <CyU3PGpioInit+0x114>
40022c64:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022c68:	e3a0000a 	mov	r0, #10
40022c6c:	ebffc33e 	bl	4001396c <CyU3PBusyWait>
40022c70:	e59f005c 	ldr	r0, [pc, #92]	; 40022cd4 <CyU3PGpioInit+0x114>
40022c74:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022c78:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022c7c:	e59f1050 	ldr	r1, [pc, #80]	; 40022cd4 <CyU3PGpioInit+0x114>
40022c80:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022c84:	e1a00000 	nop			; (mov r0, r0)
40022c88:	e59f0044 	ldr	r0, [pc, #68]	; 40022cd4 <CyU3PGpioInit+0x114>
40022c8c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022c90:	e3100001 	tst	r0, #1
40022c94:	0afffffb 	beq	40022c88 <CyU3PGpioInit+0xc8>
40022c98:	ea000007 	b	40022cbc <CyU3PGpioInit+0xfc>
40022c9c:	e59f1034 	ldr	r1, [pc, #52]	; 40022cd8 <CyU3PGpioInit+0x118>
40022ca0:	e3a00004 	mov	r0, #4
40022ca4:	ebffc52c 	bl	4001415c <CyU3PLppInit>
40022ca8:	e1a05000 	mov	r5, r0
40022cac:	e3550000 	cmp	r5, #0
40022cb0:	0a000001 	beq	40022cbc <CyU3PGpioInit+0xfc>
40022cb4:	e1a00005 	mov	r0, r5
40022cb8:	eaffffc8 	b	40022be0 <CyU3PGpioInit+0x20>
40022cbc:	e3a00001 	mov	r0, #1
40022cc0:	e59f1008 	ldr	r1, [pc, #8]	; 40022cd0 <CyU3PGpioInit+0x110>
40022cc4:	e5810000 	str	r0, [r1]
40022cc8:	e3a00000 	mov	r0, #0
40022ccc:	eaffffc3 	b	40022be0 <CyU3PGpioInit+0x20>
40022cd0:	40030ef8 	.word	0x40030ef8
40022cd4:	e0001000 	.word	0xe0001000
40022cd8:	40022cdc 	.word	0x40022cdc

Disassembly of section i.CyU3PGpioInt_Handler:

40022cdc <CyU3PGpioInt_Handler>:
40022cdc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022ce0:	e3a06000 	mov	r6, #0
40022ce4:	e3a05000 	mov	r5, #0
40022ce8:	e3a04001 	mov	r4, #1
40022cec:	ea000029 	b	40022d98 <CyU3PGpioInt_Handler+0xbc>
40022cf0:	e59f0198 	ldr	r0, [pc, #408]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022cf4:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022cf8:	e1100004 	tst	r0, r4
40022cfc:	0a000021 	beq	40022d88 <CyU3PGpioInt_Handler+0xac>
40022d00:	e59f0188 	ldr	r0, [pc, #392]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022d04:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022d08:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022d0c:	e59f117c 	ldr	r1, [pc, #380]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022d10:	e7810205 	str	r0, [r1, r5, lsl #4]
40022d14:	e59f0178 	ldr	r0, [pc, #376]	; 40022e94 <CyU3PGpioInt_Handler+0x1b8>
40022d18:	e5900000 	ldr	r0, [r0]
40022d1c:	e3500000 	cmp	r0, #0
40022d20:	0a000018 	beq	40022d88 <CyU3PGpioInt_Handler+0xac>
40022d24:	e1a06005 	mov	r6, r5
40022d28:	e1a07005 	mov	r7, r5
40022d2c:	ea00000e 	b	40022d6c <CyU3PGpioInt_Handler+0x90>
40022d30:	e1a00007 	mov	r0, r7
40022d34:	ebffc098 	bl	40012f9c <CyU3PIsGpioComplexIOConfigured>
40022d38:	e3500000 	cmp	r0, #0
40022d3c:	0a000001 	beq	40022d48 <CyU3PGpioInt_Handler+0x6c>
40022d40:	e1a06007 	mov	r6, r7
40022d44:	ea00000a 	b	40022d74 <CyU3PGpioInt_Handler+0x98>
40022d48:	e2870020 	add	r0, r7, #32
40022d4c:	ebffc092 	bl	40012f9c <CyU3PIsGpioComplexIOConfigured>
40022d50:	e3500000 	cmp	r0, #0
40022d54:	0a000002 	beq	40022d64 <CyU3PGpioInt_Handler+0x88>
40022d58:	e2870020 	add	r0, r7, #32
40022d5c:	e20060ff 	and	r6, r0, #255	; 0xff
40022d60:	ea000003 	b	40022d74 <CyU3PGpioInt_Handler+0x98>
40022d64:	e2870008 	add	r0, r7, #8
40022d68:	e20070ff 	and	r7, r0, #255	; 0xff
40022d6c:	e3570020 	cmp	r7, #32
40022d70:	baffffee 	blt	40022d30 <CyU3PGpioInt_Handler+0x54>
40022d74:	e1a00000 	nop			; (mov r0, r0)
40022d78:	e1a00006 	mov	r0, r6
40022d7c:	e59f1110 	ldr	r1, [pc, #272]	; 40022e94 <CyU3PGpioInt_Handler+0x1b8>
40022d80:	e5911000 	ldr	r1, [r1]
40022d84:	e12fff31 	blx	r1
40022d88:	e59f0108 	ldr	r0, [pc, #264]	; 40022e98 <CyU3PGpioInt_Handler+0x1bc>
40022d8c:	e0004084 	and	r4, r0, r4, lsl #1
40022d90:	e2850001 	add	r0, r5, #1
40022d94:	e20050ff 	and	r5, r0, #255	; 0xff
40022d98:	e3540080 	cmp	r4, #128	; 0x80
40022d9c:	9affffd3 	bls	40022cf0 <CyU3PGpioInt_Handler+0x14>
40022da0:	e59f00e8 	ldr	r0, [pc, #232]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022da4:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022da8:	e3500000 	cmp	r0, #0
40022dac:	0a000017 	beq	40022e10 <CyU3PGpioInt_Handler+0x134>
40022db0:	e3a05000 	mov	r5, #0
40022db4:	ea000013 	b	40022e08 <CyU3PGpioInt_Handler+0x12c>
40022db8:	e59f00d0 	ldr	r0, [pc, #208]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022dbc:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022dc0:	e3a01001 	mov	r1, #1
40022dc4:	e1100511 	tst	r0, r1, lsl r5
40022dc8:	0a00000c 	beq	40022e00 <CyU3PGpioInt_Handler+0x124>
40022dcc:	e59f00c8 	ldr	r0, [pc, #200]	; 40022e9c <CyU3PGpioInt_Handler+0x1c0>
40022dd0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40022dd4:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022dd8:	e59f10bc 	ldr	r1, [pc, #188]	; 40022e9c <CyU3PGpioInt_Handler+0x1c0>
40022ddc:	e7810105 	str	r0, [r1, r5, lsl #2]
40022de0:	e59f00ac 	ldr	r0, [pc, #172]	; 40022e94 <CyU3PGpioInt_Handler+0x1b8>
40022de4:	e5900000 	ldr	r0, [r0]
40022de8:	e3500000 	cmp	r0, #0
40022dec:	0a000003 	beq	40022e00 <CyU3PGpioInt_Handler+0x124>
40022df0:	e1a00005 	mov	r0, r5
40022df4:	e59f1098 	ldr	r1, [pc, #152]	; 40022e94 <CyU3PGpioInt_Handler+0x1b8>
40022df8:	e5911000 	ldr	r1, [r1]
40022dfc:	e12fff31 	blx	r1
40022e00:	e2850001 	add	r0, r5, #1
40022e04:	e20050ff 	and	r5, r0, #255	; 0xff
40022e08:	e3550020 	cmp	r5, #32
40022e0c:	baffffe9 	blt	40022db8 <CyU3PGpioInt_Handler+0xdc>
40022e10:	e59f0078 	ldr	r0, [pc, #120]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022e14:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022e18:	e3500000 	cmp	r0, #0
40022e1c:	0a00001a 	beq	40022e8c <CyU3PGpioInt_Handler+0x1b0>
40022e20:	e3a05000 	mov	r5, #0
40022e24:	ea000016 	b	40022e84 <CyU3PGpioInt_Handler+0x1a8>
40022e28:	e59f0060 	ldr	r0, [pc, #96]	; 40022e90 <CyU3PGpioInt_Handler+0x1b4>
40022e2c:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022e30:	e3a01001 	mov	r1, #1
40022e34:	e1100511 	tst	r0, r1, lsl r5
40022e38:	0a00000f 	beq	40022e7c <CyU3PGpioInt_Handler+0x1a0>
40022e3c:	e59f0058 	ldr	r0, [pc, #88]	; 40022e9c <CyU3PGpioInt_Handler+0x1c0>
40022e40:	e2851020 	add	r1, r5, #32
40022e44:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022e48:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022e4c:	e59f0048 	ldr	r0, [pc, #72]	; 40022e9c <CyU3PGpioInt_Handler+0x1c0>
40022e50:	e2852020 	add	r2, r5, #32
40022e54:	e7801102 	str	r1, [r0, r2, lsl #2]
40022e58:	e59f0034 	ldr	r0, [pc, #52]	; 40022e94 <CyU3PGpioInt_Handler+0x1b8>
40022e5c:	e5900000 	ldr	r0, [r0]
40022e60:	e3500000 	cmp	r0, #0
40022e64:	0a000004 	beq	40022e7c <CyU3PGpioInt_Handler+0x1a0>
40022e68:	e2851020 	add	r1, r5, #32
40022e6c:	e20100ff 	and	r0, r1, #255	; 0xff
40022e70:	e59f101c 	ldr	r1, [pc, #28]	; 40022e94 <CyU3PGpioInt_Handler+0x1b8>
40022e74:	e5911000 	ldr	r1, [r1]
40022e78:	e12fff31 	blx	r1
40022e7c:	e2850001 	add	r0, r5, #1
40022e80:	e20050ff 	and	r5, r0, #255	; 0xff
40022e84:	e3550020 	cmp	r5, #32
40022e88:	baffffe6 	blt	40022e28 <CyU3PGpioInt_Handler+0x14c>
40022e8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022e90:	e0001000 	.word	0xe0001000
40022e94:	40030efc 	.word	0x40030efc
40022e98:	0000ffff 	.word	0x0000ffff
40022e9c:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022ea0 <CyU3PGpioSetSimpleConfig>:
40022ea0:	e92d4070 	push	{r4, r5, r6, lr}
40022ea4:	e1a04000 	mov	r4, r0
40022ea8:	e1a05001 	mov	r5, r1
40022eac:	e3a06000 	mov	r6, #0
40022eb0:	e59f00d0 	ldr	r0, [pc, #208]	; 40022f88 <CyU3PGpioSetSimpleConfig+0xe8>
40022eb4:	e5900000 	ldr	r0, [r0]
40022eb8:	e3500000 	cmp	r0, #0
40022ebc:	1a000001 	bne	40022ec8 <CyU3PGpioSetSimpleConfig+0x28>
40022ec0:	e3a00042 	mov	r0, #66	; 0x42
40022ec4:	e8bd8070 	pop	{r4, r5, r6, pc}
40022ec8:	e1a00004 	mov	r0, r4
40022ecc:	ebffc03e 	bl	40012fcc <CyU3PIsGpioValid>
40022ed0:	e3500000 	cmp	r0, #0
40022ed4:	1a000001 	bne	40022ee0 <CyU3PGpioSetSimpleConfig+0x40>
40022ed8:	e3a00040 	mov	r0, #64	; 0x40
40022edc:	eafffff8 	b	40022ec4 <CyU3PGpioSetSimpleConfig+0x24>
40022ee0:	e3550000 	cmp	r5, #0
40022ee4:	1a000001 	bne	40022ef0 <CyU3PGpioSetSimpleConfig+0x50>
40022ee8:	e3a00041 	mov	r0, #65	; 0x41
40022eec:	eafffff4 	b	40022ec4 <CyU3PGpioSetSimpleConfig+0x24>
40022ef0:	e5d50010 	ldrb	r0, [r5, #16]
40022ef4:	e3500005 	cmp	r0, #5
40022ef8:	da000001 	ble	40022f04 <CyU3PGpioSetSimpleConfig+0x64>
40022efc:	e3a00040 	mov	r0, #64	; 0x40
40022f00:	eaffffef 	b	40022ec4 <CyU3PGpioSetSimpleConfig+0x24>
40022f04:	e1a00004 	mov	r0, r4
40022f08:	ebffc029 	bl	40012fb4 <CyU3PIsGpioSimpleIOConfigured>
40022f0c:	e3500000 	cmp	r0, #0
40022f10:	1a000001 	bne	40022f1c <CyU3PGpioSetSimpleConfig+0x7c>
40022f14:	e3a00044 	mov	r0, #68	; 0x44
40022f18:	eaffffe9 	b	40022ec4 <CyU3PGpioSetSimpleConfig+0x24>
40022f1c:	e595000c 	ldr	r0, [r5, #12]
40022f20:	e3500000 	cmp	r0, #0
40022f24:	0a000000 	beq	40022f2c <CyU3PGpioSetSimpleConfig+0x8c>
40022f28:	e3866040 	orr	r6, r6, #64	; 0x40
40022f2c:	e5950004 	ldr	r0, [r5, #4]
40022f30:	e3500000 	cmp	r0, #0
40022f34:	0a000000 	beq	40022f3c <CyU3PGpioSetSimpleConfig+0x9c>
40022f38:	e3866010 	orr	r6, r6, #16
40022f3c:	e5950008 	ldr	r0, [r5, #8]
40022f40:	e3500000 	cmp	r0, #0
40022f44:	0a000000 	beq	40022f4c <CyU3PGpioSetSimpleConfig+0xac>
40022f48:	e3866020 	orr	r6, r6, #32
40022f4c:	e5950000 	ldr	r0, [r5]
40022f50:	e3500000 	cmp	r0, #0
40022f54:	0a000000 	beq	40022f5c <CyU3PGpioSetSimpleConfig+0xbc>
40022f58:	e3866001 	orr	r6, r6, #1
40022f5c:	e5d50010 	ldrb	r0, [r5, #16]
40022f60:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022f64:	e0010c00 	and	r0, r1, r0, lsl #24
40022f68:	e1866000 	orr	r6, r6, r0
40022f6c:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022f70:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022f74:	e59f0010 	ldr	r0, [pc, #16]	; 40022f8c <CyU3PGpioSetSimpleConfig+0xec>
40022f78:	e7806104 	str	r6, [r0, r4, lsl #2]
40022f7c:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022f80:	e3a00000 	mov	r0, #0
40022f84:	eaffffce 	b	40022ec4 <CyU3PGpioSetSimpleConfig+0x24>
40022f88:	40030ef8 	.word	0x40030ef8
40022f8c:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022f90 <CyU3PGpioSetValue>:
40022f90:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022f94:	e1a04000 	mov	r4, r0
40022f98:	e1a05001 	mov	r5, r1
40022f9c:	e59f00b8 	ldr	r0, [pc, #184]	; 4002305c <CyU3PGpioSetValue+0xcc>
40022fa0:	e5900000 	ldr	r0, [r0]
40022fa4:	e3500000 	cmp	r0, #0
40022fa8:	1a000001 	bne	40022fb4 <CyU3PGpioSetValue+0x24>
40022fac:	e3a00042 	mov	r0, #66	; 0x42
40022fb0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022fb4:	e1a00004 	mov	r0, r4
40022fb8:	ebffc003 	bl	40012fcc <CyU3PIsGpioValid>
40022fbc:	e3500000 	cmp	r0, #0
40022fc0:	1a000001 	bne	40022fcc <CyU3PGpioSetValue+0x3c>
40022fc4:	e3a00040 	mov	r0, #64	; 0x40
40022fc8:	eafffff8 	b	40022fb0 <CyU3PGpioSetValue+0x20>
40022fcc:	e1a00004 	mov	r0, r4
40022fd0:	ebffbff7 	bl	40012fb4 <CyU3PIsGpioSimpleIOConfigured>
40022fd4:	e3500000 	cmp	r0, #0
40022fd8:	0a000002 	beq	40022fe8 <CyU3PGpioSetValue+0x58>
40022fdc:	e59f007c 	ldr	r0, [pc, #124]	; 40023060 <CyU3PGpioSetValue+0xd0>
40022fe0:	e0807104 	add	r7, r0, r4, lsl #2
40022fe4:	ea00000d 	b	40023020 <CyU3PGpioSetValue+0x90>
40022fe8:	e1a00004 	mov	r0, r4
40022fec:	ebffbfea 	bl	40012f9c <CyU3PIsGpioComplexIOConfigured>
40022ff0:	e3500000 	cmp	r0, #0
40022ff4:	0a000007 	beq	40023018 <CyU3PGpioSetValue+0x88>
40022ff8:	e1a00004 	mov	r0, r4
40022ffc:	e1a01fc4 	asr	r1, r4, #31
40023000:	e0841ea1 	add	r1, r4, r1, lsr #29
40023004:	e1a011c1 	asr	r1, r1, #3
40023008:	e0441181 	sub	r1, r4, r1, lsl #3
4002300c:	e59f2050 	ldr	r2, [pc, #80]	; 40023064 <CyU3PGpioSetValue+0xd4>
40023010:	e0827201 	add	r7, r2, r1, lsl #4
40023014:	ea000001 	b	40023020 <CyU3PGpioSetValue+0x90>
40023018:	e3a00044 	mov	r0, #68	; 0x44
4002301c:	eaffffe3 	b	40022fb0 <CyU3PGpioSetValue+0x20>
40023020:	e5970000 	ldr	r0, [r7]
40023024:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40023028:	e3160102 	tst	r6, #-2147483648	; 0x80000000
4002302c:	1a000001 	bne	40023038 <CyU3PGpioSetValue+0xa8>
40023030:	e3a00044 	mov	r0, #68	; 0x44
40023034:	eaffffdd 	b	40022fb0 <CyU3PGpioSetValue+0x20>
40023038:	e3550000 	cmp	r5, #0
4002303c:	0a000001 	beq	40023048 <CyU3PGpioSetValue+0xb8>
40023040:	e3866001 	orr	r6, r6, #1
40023044:	ea000000 	b	4002304c <CyU3PGpioSetValue+0xbc>
40023048:	e3c66001 	bic	r6, r6, #1
4002304c:	e5876000 	str	r6, [r7]
40023050:	e5976000 	ldr	r6, [r7]
40023054:	e3a00000 	mov	r0, #0
40023058:	eaffffd4 	b	40022fb0 <CyU3PGpioSetValue+0x20>
4002305c:	40030ef8 	.word	0x40030ef8
40023060:	e0001100 	.word	0xe0001100
40023064:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40023068 <CyU3PGpioSimpleGetValue>:
40023068:	e92d4070 	push	{r4, r5, r6, lr}
4002306c:	e1a04000 	mov	r4, r0
40023070:	e1a06001 	mov	r6, r1
40023074:	e59f0068 	ldr	r0, [pc, #104]	; 400230e4 <CyU3PGpioSimpleGetValue+0x7c>
40023078:	e5900000 	ldr	r0, [r0]
4002307c:	e3500000 	cmp	r0, #0
40023080:	1a000001 	bne	4002308c <CyU3PGpioSimpleGetValue+0x24>
40023084:	e3a00042 	mov	r0, #66	; 0x42
40023088:	e8bd8070 	pop	{r4, r5, r6, pc}
4002308c:	e1a00004 	mov	r0, r4
40023090:	ebffbfcd 	bl	40012fcc <CyU3PIsGpioValid>
40023094:	e3500000 	cmp	r0, #0
40023098:	1a000001 	bne	400230a4 <CyU3PGpioSimpleGetValue+0x3c>
4002309c:	e3a00040 	mov	r0, #64	; 0x40
400230a0:	eafffff8 	b	40023088 <CyU3PGpioSimpleGetValue+0x20>
400230a4:	e3560000 	cmp	r6, #0
400230a8:	1a000001 	bne	400230b4 <CyU3PGpioSimpleGetValue+0x4c>
400230ac:	e3a00041 	mov	r0, #65	; 0x41
400230b0:	eafffff4 	b	40023088 <CyU3PGpioSimpleGetValue+0x20>
400230b4:	e59f002c 	ldr	r0, [pc, #44]	; 400230e8 <CyU3PGpioSimpleGetValue+0x80>
400230b8:	e7905104 	ldr	r5, [r0, r4, lsl #2]
400230bc:	e3150040 	tst	r5, #64	; 0x40
400230c0:	0a000003 	beq	400230d4 <CyU3PGpioSimpleGetValue+0x6c>
400230c4:	e2050002 	and	r0, r5, #2
400230c8:	e1a000a0 	lsr	r0, r0, #1
400230cc:	e5860000 	str	r0, [r6]
400230d0:	ea000001 	b	400230dc <CyU3PGpioSimpleGetValue+0x74>
400230d4:	e2050001 	and	r0, r5, #1
400230d8:	e5860000 	str	r0, [r6]
400230dc:	e3a00000 	mov	r0, #0
400230e0:	eaffffe8 	b	40023088 <CyU3PGpioSimpleGetValue+0x20>
400230e4:	40030ef8 	.word	0x40030ef8
400230e8:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

400230ec <CyU3PRegisterGpioCallBack>:
400230ec:	e59f1004 	ldr	r1, [pc, #4]	; 400230f8 <CyU3PRegisterGpioCallBack+0xc>
400230f0:	e5810000 	str	r0, [r1]
400230f4:	e12fff1e 	bx	lr
400230f8:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PRegisterUartCallBack:

400230fc <CyU3PRegisterUartCallBack>:
400230fc:	e59f1004 	ldr	r1, [pc, #4]	; 40023108 <CyU3PRegisterUartCallBack+0xc>
40023100:	e5810000 	str	r0, [r1]
40023104:	e12fff1e 	bx	lr
40023108:	40030f0c 	.word	0x40030f0c

Disassembly of section i.CyU3PUartGetLock:

4002310c <CyU3PUartGetLock>:
4002310c:	e92d4010 	push	{r4, lr}
40023110:	e3a04000 	mov	r4, #0
40023114:	e59f0044 	ldr	r0, [pc, #68]	; 40023160 <CyU3PUartGetLock+0x54>
40023118:	e5900000 	ldr	r0, [r0]
4002311c:	e3500000 	cmp	r0, #0
40023120:	1a000001 	bne	4002312c <CyU3PUartGetLock+0x20>
40023124:	e3a00044 	mov	r0, #68	; 0x44
40023128:	e8bd8010 	pop	{r4, pc}
4002312c:	ebff96a2 	bl	40008bbc <_tx_thread_identify>
40023130:	e3500000 	cmp	r0, #0
40023134:	0a000000 	beq	4002313c <CyU3PUartGetLock+0x30>
40023138:	e3e04000 	mvn	r4, #0
4002313c:	e1a01004 	mov	r1, r4
40023140:	e59f001c 	ldr	r0, [pc, #28]	; 40023164 <CyU3PUartGetLock+0x58>
40023144:	ebff9cb1 	bl	4000a410 <_txe_mutex_get>
40023148:	e3500000 	cmp	r0, #0
4002314c:	0a000001 	beq	40023158 <CyU3PUartGetLock+0x4c>
40023150:	e3a0001d 	mov	r0, #29
40023154:	eafffff3 	b	40023128 <CyU3PUartGetLock+0x1c>
40023158:	e3a00000 	mov	r0, #0
4002315c:	eafffff1 	b	40023128 <CyU3PUartGetLock+0x1c>
40023160:	40030f08 	.word	0x40030f08
40023164:	40032e3c 	.word	0x40032e3c

Disassembly of section i.CyU3PUartInit:

40023168 <CyU3PUartInit>:
40023168:	e92d4010 	push	{r4, lr}
4002316c:	e3a00003 	mov	r0, #3
40023170:	ebffbf9c 	bl	40012fe8 <CyU3PIsLppIOConfigured>
40023174:	e3500000 	cmp	r0, #0
40023178:	1a000001 	bne	40023184 <CyU3PUartInit+0x1c>
4002317c:	e3a00044 	mov	r0, #68	; 0x44
40023180:	e8bd8010 	pop	{r4, pc}
40023184:	e59f00b8 	ldr	r0, [pc, #184]	; 40023244 <CyU3PUartInit+0xdc>
40023188:	e5900000 	ldr	r0, [r0]
4002318c:	e3500000 	cmp	r0, #0
40023190:	0a000001 	beq	4002319c <CyU3PUartInit+0x34>
40023194:	e3a00043 	mov	r0, #67	; 0x43
40023198:	eafffff8 	b	40023180 <CyU3PUartInit+0x18>
4002319c:	e3a03038 	mov	r3, #56	; 0x38
400231a0:	e3a02000 	mov	r2, #0
400231a4:	e1a01002 	mov	r1, r2
400231a8:	e59f0098 	ldr	r0, [pc, #152]	; 40023248 <CyU3PUartInit+0xe0>
400231ac:	ebff9c19 	bl	4000a218 <_txe_mutex_create>
400231b0:	e3a00d96 	mov	r0, #9600	; 0x2580
400231b4:	ebffc506 	bl	400145d4 <CyU3PUartSetClock>
400231b8:	e1a04000 	mov	r4, r0
400231bc:	e3540000 	cmp	r4, #0
400231c0:	0a000001 	beq	400231cc <CyU3PUartInit+0x64>
400231c4:	e1a00004 	mov	r0, r4
400231c8:	eaffffec 	b	40023180 <CyU3PUartInit+0x18>
400231cc:	e59f1078 	ldr	r1, [pc, #120]	; 4002324c <CyU3PUartInit+0xe4>
400231d0:	e3a00003 	mov	r0, #3
400231d4:	ebffc3e0 	bl	4001415c <CyU3PLppInit>
400231d8:	e1a04000 	mov	r4, r0
400231dc:	e3540000 	cmp	r4, #0
400231e0:	0a000001 	beq	400231ec <CyU3PUartInit+0x84>
400231e4:	e1a00004 	mov	r0, r4
400231e8:	eaffffe4 	b	40023180 <CyU3PUartInit+0x18>
400231ec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231f0:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
400231f4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400231f8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231fc:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023200:	e3a0000a 	mov	r0, #10
40023204:	ebffc1d8 	bl	4001396c <CyU3PBusyWait>
40023208:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002320c:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023210:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023214:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023218:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
4002321c:	e1a00000 	nop			; (mov r0, r0)
40023220:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023224:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023228:	e3100001 	tst	r0, #1
4002322c:	0afffffb 	beq	40023220 <CyU3PUartInit+0xb8>
40023230:	e3a00001 	mov	r0, #1
40023234:	e59f1008 	ldr	r1, [pc, #8]	; 40023244 <CyU3PUartInit+0xdc>
40023238:	e5810000 	str	r0, [r1]
4002323c:	e3a00000 	mov	r0, #0
40023240:	eaffffce 	b	40023180 <CyU3PUartInit+0x18>
40023244:	40030f08 	.word	0x40030f08
40023248:	40032e3c 	.word	0x40032e3c
4002324c:	40023250 	.word	0x40023250

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40023250 <CyU3PUartInt_ThreadHandler>:
40023250:	e92d4070 	push	{r4, r5, r6, lr}
40023254:	ebffffac 	bl	4002310c <CyU3PUartGetLock>
40023258:	e1a05000 	mov	r5, r0
4002325c:	e3550000 	cmp	r5, #0
40023260:	0a000000 	beq	40023268 <CyU3PUartInt_ThreadHandler+0x18>
40023264:	e8bd8070 	pop	{r4, r5, r6, pc}
40023268:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002326c:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40023270:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023274:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40023278:	e0004001 	and	r4, r0, r1
4002327c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023280:	e5804808 	str	r4, [r0, #2056]	; 0x808
40023284:	e59f0078 	ldr	r0, [pc, #120]	; 40023304 <CyU3PUartInt_ThreadHandler+0xb4>
40023288:	e5900000 	ldr	r0, [r0]
4002328c:	e3500000 	cmp	r0, #0
40023290:	1a000001 	bne	4002329c <CyU3PUartInt_ThreadHandler+0x4c>
40023294:	eb00001b 	bl	40023308 <CyU3PUartReleaseLock>
40023298:	eafffff1 	b	40023264 <CyU3PUartInt_ThreadHandler+0x14>
4002329c:	e3140001 	tst	r4, #1
400232a0:	0a000004 	beq	400232b8 <CyU3PUartInt_ThreadHandler+0x68>
400232a4:	e3a01000 	mov	r1, #0
400232a8:	e1a00001 	mov	r0, r1
400232ac:	e59f2050 	ldr	r2, [pc, #80]	; 40023304 <CyU3PUartInt_ThreadHandler+0xb4>
400232b0:	e5922000 	ldr	r2, [r2]
400232b4:	e12fff32 	blx	r2
400232b8:	e3140008 	tst	r4, #8
400232bc:	0a000004 	beq	400232d4 <CyU3PUartInt_ThreadHandler+0x84>
400232c0:	e3a01000 	mov	r1, #0
400232c4:	e3a00001 	mov	r0, #1
400232c8:	e59f2034 	ldr	r2, [pc, #52]	; 40023304 <CyU3PUartInt_ThreadHandler+0xb4>
400232cc:	e5922000 	ldr	r2, [r2]
400232d0:	e12fff32 	blx	r2
400232d4:	e3140c02 	tst	r4, #512	; 0x200
400232d8:	0a000007 	beq	400232fc <CyU3PUartInt_ThreadHandler+0xac>
400232dc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232e0:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
400232e4:	e200040f 	and	r0, r0, #251658240	; 0xf000000
400232e8:	e1a01c20 	lsr	r1, r0, #24
400232ec:	e3a00002 	mov	r0, #2
400232f0:	e59f200c 	ldr	r2, [pc, #12]	; 40023304 <CyU3PUartInt_ThreadHandler+0xb4>
400232f4:	e5922000 	ldr	r2, [r2]
400232f8:	e12fff32 	blx	r2
400232fc:	eb000001 	bl	40023308 <CyU3PUartReleaseLock>
40023300:	eaffffd7 	b	40023264 <CyU3PUartInt_ThreadHandler+0x14>
40023304:	40030f0c 	.word	0x40030f0c

Disassembly of section i.CyU3PUartReleaseLock:

40023308 <CyU3PUartReleaseLock>:
40023308:	e92d4010 	push	{r4, lr}
4002330c:	e59f0030 	ldr	r0, [pc, #48]	; 40023344 <CyU3PUartReleaseLock+0x3c>
40023310:	e5900000 	ldr	r0, [r0]
40023314:	e3500000 	cmp	r0, #0
40023318:	1a000001 	bne	40023324 <CyU3PUartReleaseLock+0x1c>
4002331c:	e3a00044 	mov	r0, #68	; 0x44
40023320:	e8bd8010 	pop	{r4, pc}
40023324:	e59f001c 	ldr	r0, [pc, #28]	; 40023348 <CyU3PUartReleaseLock+0x40>
40023328:	ebff9c6d 	bl	4000a4e4 <_txe_mutex_put>
4002332c:	e3500000 	cmp	r0, #0
40023330:	0a000001 	beq	4002333c <CyU3PUartReleaseLock+0x34>
40023334:	e3a0001d 	mov	r0, #29
40023338:	eafffff8 	b	40023320 <CyU3PUartReleaseLock+0x18>
4002333c:	e3a00000 	mov	r0, #0
40023340:	eafffff6 	b	40023320 <CyU3PUartReleaseLock+0x18>
40023344:	40030f08 	.word	0x40030f08
40023348:	40032e3c 	.word	0x40032e3c

Disassembly of section i.CyU3PUartSetConfig:

4002334c <CyU3PUartSetConfig>:
4002334c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023350:	e1a04000 	mov	r4, r0
40023354:	e1a05001 	mov	r5, r1
40023358:	e3a07000 	mov	r7, #0
4002335c:	e59f01f0 	ldr	r0, [pc, #496]	; 40023554 <CyU3PUartSetConfig+0x208>
40023360:	e5900000 	ldr	r0, [r0]
40023364:	e3500000 	cmp	r0, #0
40023368:	1a000001 	bne	40023374 <CyU3PUartSetConfig+0x28>
4002336c:	e3a00042 	mov	r0, #66	; 0x42
40023370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023374:	e3540000 	cmp	r4, #0
40023378:	1a000001 	bne	40023384 <CyU3PUartSetConfig+0x38>
4002337c:	e3a00041 	mov	r0, #65	; 0x41
40023380:	eafffffa 	b	40023370 <CyU3PUartSetConfig+0x24>
40023384:	e5940004 	ldr	r0, [r4, #4]
40023388:	e5941000 	ldr	r1, [r4]
4002338c:	e1900001 	orrs	r0, r0, r1
40023390:	1a000001 	bne	4002339c <CyU3PUartSetConfig+0x50>
40023394:	e3a00040 	mov	r0, #64	; 0x40
40023398:	eafffff4 	b	40023370 <CyU3PUartSetConfig+0x24>
4002339c:	e5d40015 	ldrb	r0, [r4, #21]
400233a0:	e3500003 	cmp	r0, #3
400233a4:	ba000001 	blt	400233b0 <CyU3PUartSetConfig+0x64>
400233a8:	e3a00040 	mov	r0, #64	; 0x40
400233ac:	eaffffef 	b	40023370 <CyU3PUartSetConfig+0x24>
400233b0:	e5d40014 	ldrb	r0, [r4, #20]
400233b4:	e3500001 	cmp	r0, #1
400233b8:	0a000004 	beq	400233d0 <CyU3PUartSetConfig+0x84>
400233bc:	e5d40014 	ldrb	r0, [r4, #20]
400233c0:	e3500002 	cmp	r0, #2
400233c4:	0a000001 	beq	400233d0 <CyU3PUartSetConfig+0x84>
400233c8:	e3a00040 	mov	r0, #64	; 0x40
400233cc:	eaffffe7 	b	40023370 <CyU3PUartSetConfig+0x24>
400233d0:	e594000c 	ldr	r0, [r4, #12]
400233d4:	e3500000 	cmp	r0, #0
400233d8:	1a000003 	bne	400233ec <CyU3PUartSetConfig+0xa0>
400233dc:	e3550000 	cmp	r5, #0
400233e0:	0a000001 	beq	400233ec <CyU3PUartSetConfig+0xa0>
400233e4:	e3a00040 	mov	r0, #64	; 0x40
400233e8:	eaffffe0 	b	40023370 <CyU3PUartSetConfig+0x24>
400233ec:	ebffff46 	bl	4002310c <CyU3PUartGetLock>
400233f0:	e1a06000 	mov	r6, r0
400233f4:	e3560000 	cmp	r6, #0
400233f8:	0a000001 	beq	40023404 <CyU3PUartSetConfig+0xb8>
400233fc:	e3a0001d 	mov	r0, #29
40023400:	eaffffda 	b	40023370 <CyU3PUartSetConfig+0x24>
40023404:	e5940010 	ldr	r0, [r4, #16]
40023408:	ebffc471 	bl	400145d4 <CyU3PUartSetClock>
4002340c:	e1a06000 	mov	r6, r0
40023410:	e3560000 	cmp	r6, #0
40023414:	0a000002 	beq	40023424 <CyU3PUartSetConfig+0xd8>
40023418:	ebffffba 	bl	40023308 <CyU3PUartReleaseLock>
4002341c:	e1a00006 	mov	r0, r6
40023420:	eaffffd2 	b	40023370 <CyU3PUartSetConfig+0x24>
40023424:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023428:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
4002342c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023430:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023434:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023438:	e5940004 	ldr	r0, [r4, #4]
4002343c:	e3500000 	cmp	r0, #0
40023440:	0a000001 	beq	4002344c <CyU3PUartSetConfig+0x100>
40023444:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40023448:	e3877001 	orr	r7, r7, #1
4002344c:	e5940000 	ldr	r0, [r4]
40023450:	e3500000 	cmp	r0, #0
40023454:	0a000000 	beq	4002345c <CyU3PUartSetConfig+0x110>
40023458:	e3877002 	orr	r7, r7, #2
4002345c:	e5940008 	ldr	r0, [r4, #8]
40023460:	e3500000 	cmp	r0, #0
40023464:	0a000000 	beq	4002346c <CyU3PUartSetConfig+0x120>
40023468:	e3877a06 	orr	r7, r7, #24576	; 0x6000
4002346c:	e594000c 	ldr	r0, [r4, #12]
40023470:	e3500000 	cmp	r0, #0
40023474:	0a000004 	beq	4002348c <CyU3PUartSetConfig+0x140>
40023478:	e3877b01 	orr	r7, r7, #1024	; 0x400
4002347c:	e3a00001 	mov	r0, #1
40023480:	e59f10d0 	ldr	r1, [pc, #208]	; 40023558 <CyU3PUartSetConfig+0x20c>
40023484:	e5810000 	str	r0, [r1]
40023488:	ea000002 	b	40023498 <CyU3PUartSetConfig+0x14c>
4002348c:	e3a00000 	mov	r0, #0
40023490:	e59f10c0 	ldr	r1, [pc, #192]	; 40023558 <CyU3PUartSetConfig+0x20c>
40023494:	e5810000 	str	r0, [r1]
40023498:	e5d40014 	ldrb	r0, [r4, #20]
4002349c:	e3a01c03 	mov	r1, #768	; 0x300
400234a0:	e0010400 	and	r0, r1, r0, lsl #8
400234a4:	e1877000 	orr	r7, r7, r0
400234a8:	e5d40015 	ldrb	r0, [r4, #21]
400234ac:	e3500001 	cmp	r0, #1
400234b0:	0a000002 	beq	400234c0 <CyU3PUartSetConfig+0x174>
400234b4:	e3500002 	cmp	r0, #2
400234b8:	1a000006 	bne	400234d8 <CyU3PUartSetConfig+0x18c>
400234bc:	ea000002 	b	400234cc <CyU3PUartSetConfig+0x180>
400234c0:	e1a00000 	nop			; (mov r0, r0)
400234c4:	e3877008 	orr	r7, r7, #8
400234c8:	ea000004 	b	400234e0 <CyU3PUartSetConfig+0x194>
400234cc:	e1a00000 	nop			; (mov r0, r0)
400234d0:	e3877018 	orr	r7, r7, #24
400234d4:	ea000001 	b	400234e0 <CyU3PUartSetConfig+0x194>
400234d8:	e1a00000 	nop			; (mov r0, r0)
400234dc:	e1a00000 	nop			; (mov r0, r0)
400234e0:	e1a00000 	nop			; (mov r0, r0)
400234e4:	e3877807 	orr	r7, r7, #458752	; 0x70000
400234e8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234ec:	e5807800 	str	r7, [r0, #2048]	; 0x800
400234f0:	e59f0064 	ldr	r0, [pc, #100]	; 4002355c <CyU3PUartSetConfig+0x210>
400234f4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400234f8:	e5810818 	str	r0, [r1, #2072]	; 0x818
400234fc:	e1a00005 	mov	r0, r5
40023500:	ebfffefd 	bl	400230fc <CyU3PRegisterUartCallBack>
40023504:	e3550000 	cmp	r5, #0
40023508:	0a000003 	beq	4002351c <CyU3PUartSetConfig+0x1d0>
4002350c:	e59f004c 	ldr	r0, [pc, #76]	; 40023560 <CyU3PUartSetConfig+0x214>
40023510:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023514:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023518:	ea000002 	b	40023528 <CyU3PUartSetConfig+0x1dc>
4002351c:	e3a00000 	mov	r0, #0
40023520:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023524:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023528:	e3a00001 	mov	r0, #1
4002352c:	e59f1030 	ldr	r1, [pc, #48]	; 40023564 <CyU3PUartSetConfig+0x218>
40023530:	e5810000 	str	r0, [r1]
40023534:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023538:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
4002353c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023540:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023544:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023548:	ebffff6e 	bl	40023308 <CyU3PUartReleaseLock>
4002354c:	e3a00000 	mov	r0, #0
40023550:	eaffff86 	b	40023370 <CyU3PUartSetConfig+0x24>
40023554:	40030f08 	.word	0x40030f08
40023558:	40030f00 	.word	0x40030f00
4002355c:	00000603 	.word	0x00000603
40023560:	00000309 	.word	0x00000309
40023564:	40030f04 	.word	0x40030f04

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023568 <CyU3PUartTxSetBlockXfer>:
40023568:	e92d4070 	push	{r4, r5, r6, lr}
4002356c:	e1a05000 	mov	r5, r0
40023570:	e59f003c 	ldr	r0, [pc, #60]	; 400235b4 <CyU3PUartTxSetBlockXfer+0x4c>
40023574:	e5900000 	ldr	r0, [r0]
40023578:	e3500000 	cmp	r0, #0
4002357c:	1a000001 	bne	40023588 <CyU3PUartTxSetBlockXfer+0x20>
40023580:	e3a00044 	mov	r0, #68	; 0x44
40023584:	e8bd8070 	pop	{r4, r5, r6, pc}
40023588:	ebfffedf 	bl	4002310c <CyU3PUartGetLock>
4002358c:	e1a04000 	mov	r4, r0
40023590:	e3540000 	cmp	r4, #0
40023594:	0a000001 	beq	400235a0 <CyU3PUartTxSetBlockXfer+0x38>
40023598:	e1a00004 	mov	r0, r4
4002359c:	eafffff8 	b	40023584 <CyU3PUartTxSetBlockXfer+0x1c>
400235a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235a4:	e5805820 	str	r5, [r0, #2080]	; 0x820
400235a8:	ebffff56 	bl	40023308 <CyU3PUartReleaseLock>
400235ac:	e3a00000 	mov	r0, #0
400235b0:	eafffff3 	b	40023584 <CyU3PUartTxSetBlockXfer+0x1c>
400235b4:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cErrorRecovery:

400235b8 <CyU3PI2cErrorRecovery>:
400235b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400235bc:	e1a04000 	mov	r4, r0
400235c0:	e3a07000 	mov	r7, #0
400235c4:	e3a08000 	mov	r8, #0
400235c8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235cc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235d0:	e59f1164 	ldr	r1, [pc, #356]	; 4002373c <CyU3PI2cErrorRecovery+0x184>
400235d4:	e5810000 	str	r0, [r1]
400235d8:	e59f5160 	ldr	r5, [pc, #352]	; 40023740 <CyU3PI2cErrorRecovery+0x188>
400235dc:	e1a00000 	nop			; (mov r0, r0)
400235e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235e4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235e8:	e3100201 	tst	r0, #268435456	; 0x10000000
400235ec:	0a000002 	beq	400235fc <CyU3PI2cErrorRecovery+0x44>
400235f0:	e1b00005 	movs	r0, r5
400235f4:	e2455001 	sub	r5, r5, #1
400235f8:	1afffff8 	bne	400235e0 <CyU3PI2cErrorRecovery+0x28>
400235fc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023600:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
40023604:	e3a00000 	mov	r0, #0
40023608:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002360c:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023610:	e3e00000 	mvn	r0, #0
40023614:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023618:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002361c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023620:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023624:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023628:	e3a00005 	mov	r0, #5
4002362c:	ebffc0ce 	bl	4001396c <CyU3PBusyWait>
40023630:	e3540000 	cmp	r4, #0
40023634:	0a000032 	beq	40023704 <CyU3PI2cErrorRecovery+0x14c>
40023638:	e3a00000 	mov	r0, #0
4002363c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023640:	e5810438 	str	r0, [r1, #1080]	; 0x438
40023644:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023648:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002364c:	e3100008 	tst	r0, #8
40023650:	1a000000 	bne	40023658 <CyU3PI2cErrorRecovery+0xa0>
40023654:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023658:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002365c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023660:	e3100002 	tst	r0, #2
40023664:	0a000000 	beq	4002366c <CyU3PI2cErrorRecovery+0xb4>
40023668:	e3a07202 	mov	r7, #536870912	; 0x20000000
4002366c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023670:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023674:	e1800007 	orr	r0, r0, r7
40023678:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002367c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023680:	e1e05741 	mvn	r5, r1, asr #14
40023684:	ea000004 	b	4002369c <CyU3PI2cErrorRecovery+0xe4>
40023688:	e1b00005 	movs	r0, r5
4002368c:	e2455001 	sub	r5, r5, #1
40023690:	1a000001 	bne	4002369c <CyU3PI2cErrorRecovery+0xe4>
40023694:	e3a08054 	mov	r8, #84	; 0x54
40023698:	ea000003 	b	400236ac <CyU3PI2cErrorRecovery+0xf4>
4002369c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236a0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236a4:	e3100008 	tst	r0, #8
400236a8:	0afffff6 	beq	40023688 <CyU3PI2cErrorRecovery+0xd0>
400236ac:	e1a00000 	nop			; (mov r0, r0)
400236b0:	e3580000 	cmp	r8, #0
400236b4:	1a00000b 	bne	400236e8 <CyU3PI2cErrorRecovery+0x130>
400236b8:	e59f5080 	ldr	r5, [pc, #128]	; 40023740 <CyU3PI2cErrorRecovery+0x188>
400236bc:	ea000004 	b	400236d4 <CyU3PI2cErrorRecovery+0x11c>
400236c0:	e1b00005 	movs	r0, r5
400236c4:	e2455001 	sub	r5, r5, #1
400236c8:	1a000001 	bne	400236d4 <CyU3PI2cErrorRecovery+0x11c>
400236cc:	e3a08054 	mov	r8, #84	; 0x54
400236d0:	ea000003 	b	400236e4 <CyU3PI2cErrorRecovery+0x12c>
400236d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236d8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236dc:	e3100002 	tst	r0, #2
400236e0:	1afffff6 	bne	400236c0 <CyU3PI2cErrorRecovery+0x108>
400236e4:	e1a00000 	nop			; (mov r0, r0)
400236e8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236ec:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400236f0:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
400236f4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400236f8:	e5810400 	str	r0, [r1, #1024]	; 0x400
400236fc:	e3a00001 	mov	r0, #1
40023700:	ebffc099 	bl	4001396c <CyU3PBusyWait>
40023704:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023708:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002370c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023710:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023714:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023718:	e3a00005 	mov	r0, #5
4002371c:	ebffc092 	bl	4001396c <CyU3PBusyWait>
40023720:	e3e00000 	mvn	r0, #0
40023724:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023728:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002372c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023730:	e580640c 	str	r6, [r0, #1036]	; 0x40c
40023734:	e1a00008 	mov	r0, r8
40023738:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002373c:	40030f20 	.word	0x40030f20
40023740:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

40023744 <CyU3PI2cGetLock>:
40023744:	e92d4010 	push	{r4, lr}
40023748:	e3a04000 	mov	r4, #0
4002374c:	e59f0044 	ldr	r0, [pc, #68]	; 40023798 <CyU3PI2cGetLock+0x54>
40023750:	e5900000 	ldr	r0, [r0]
40023754:	e3500000 	cmp	r0, #0
40023758:	1a000001 	bne	40023764 <CyU3PI2cGetLock+0x20>
4002375c:	e3a00044 	mov	r0, #68	; 0x44
40023760:	e8bd8010 	pop	{r4, pc}
40023764:	ebff9514 	bl	40008bbc <_tx_thread_identify>
40023768:	e3500000 	cmp	r0, #0
4002376c:	0a000000 	beq	40023774 <CyU3PI2cGetLock+0x30>
40023770:	e3e04000 	mvn	r4, #0
40023774:	e1a01004 	mov	r1, r4
40023778:	e59f001c 	ldr	r0, [pc, #28]	; 4002379c <CyU3PI2cGetLock+0x58>
4002377c:	ebff9b23 	bl	4000a410 <_txe_mutex_get>
40023780:	e3500000 	cmp	r0, #0
40023784:	0a000001 	beq	40023790 <CyU3PI2cGetLock+0x4c>
40023788:	e3a0001d 	mov	r0, #29
4002378c:	eafffff3 	b	40023760 <CyU3PI2cGetLock+0x1c>
40023790:	e3a00000 	mov	r0, #0
40023794:	eafffff1 	b	40023760 <CyU3PI2cGetLock+0x1c>
40023798:	40030f18 	.word	0x40030f18
4002379c:	40032e74 	.word	0x40032e74

Disassembly of section i.CyU3PI2cInit:

400237a0 <CyU3PI2cInit>:
400237a0:	e92d4010 	push	{r4, lr}
400237a4:	e3a00000 	mov	r0, #0
400237a8:	ebffbe0e 	bl	40012fe8 <CyU3PIsLppIOConfigured>
400237ac:	e3500000 	cmp	r0, #0
400237b0:	1a000001 	bne	400237bc <CyU3PI2cInit+0x1c>
400237b4:	e3a00044 	mov	r0, #68	; 0x44
400237b8:	e8bd8010 	pop	{r4, pc}
400237bc:	e59f00bc 	ldr	r0, [pc, #188]	; 40023880 <CyU3PI2cInit+0xe0>
400237c0:	e5900000 	ldr	r0, [r0]
400237c4:	e3500000 	cmp	r0, #0
400237c8:	0a000001 	beq	400237d4 <CyU3PI2cInit+0x34>
400237cc:	e3a00043 	mov	r0, #67	; 0x43
400237d0:	eafffff8 	b	400237b8 <CyU3PI2cInit+0x18>
400237d4:	e59f00a8 	ldr	r0, [pc, #168]	; 40023884 <CyU3PI2cInit+0xe4>
400237d8:	ebffc1f8 	bl	40013fc0 <CyU3PI2cSetClock>
400237dc:	e1a04000 	mov	r4, r0
400237e0:	e3540000 	cmp	r4, #0
400237e4:	0a000001 	beq	400237f0 <CyU3PI2cInit+0x50>
400237e8:	e1a00004 	mov	r0, r4
400237ec:	eafffff1 	b	400237b8 <CyU3PI2cInit+0x18>
400237f0:	e59f1090 	ldr	r1, [pc, #144]	; 40023888 <CyU3PI2cInit+0xe8>
400237f4:	e3a00000 	mov	r0, #0
400237f8:	ebffc257 	bl	4001415c <CyU3PLppInit>
400237fc:	e1a04000 	mov	r4, r0
40023800:	e3540000 	cmp	r4, #0
40023804:	0a000001 	beq	40023810 <CyU3PI2cInit+0x70>
40023808:	e1a00004 	mov	r0, r4
4002380c:	eaffffe9 	b	400237b8 <CyU3PI2cInit+0x18>
40023810:	e3a03038 	mov	r3, #56	; 0x38
40023814:	e3a02000 	mov	r2, #0
40023818:	e1a01002 	mov	r1, r2
4002381c:	e59f0068 	ldr	r0, [pc, #104]	; 4002388c <CyU3PI2cInit+0xec>
40023820:	ebff9a7c 	bl	4000a218 <_txe_mutex_create>
40023824:	e3a00000 	mov	r0, #0
40023828:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002382c:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023830:	e3a0000a 	mov	r0, #10
40023834:	ebffc04c 	bl	4001396c <CyU3PBusyWait>
40023838:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002383c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023840:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023844:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023848:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
4002384c:	e1a00000 	nop			; (mov r0, r0)
40023850:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023854:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023858:	e3100001 	tst	r0, #1
4002385c:	0afffffb 	beq	40023850 <CyU3PI2cInit+0xb0>
40023860:	e3a00000 	mov	r0, #0
40023864:	e59f1024 	ldr	r1, [pc, #36]	; 40023890 <CyU3PI2cInit+0xf0>
40023868:	e5810000 	str	r0, [r1]
4002386c:	e3a00001 	mov	r0, #1
40023870:	e2411008 	sub	r1, r1, #8
40023874:	e5810000 	str	r0, [r1]
40023878:	e3a00000 	mov	r0, #0
4002387c:	eaffffcd 	b	400237b8 <CyU3PI2cInit+0x18>
40023880:	40030f18 	.word	0x40030f18
40023884:	000186a0 	.word	0x000186a0
40023888:	40023894 	.word	0x40023894
4002388c:	40032e74 	.word	0x40032e74
40023890:	40030f20 	.word	0x40030f20

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

40023894 <CyU3PI2cInt_ThreadHandler>:
40023894:	e92d4070 	push	{r4, r5, r6, lr}
40023898:	ebffffa9 	bl	40023744 <CyU3PI2cGetLock>
4002389c:	e1a05000 	mov	r5, r0
400238a0:	e3550000 	cmp	r5, #0
400238a4:	0a000000 	beq	400238ac <CyU3PI2cInt_ThreadHandler+0x18>
400238a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400238ac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238b0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400238b4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400238b8:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
400238bc:	e0004001 	and	r4, r0, r1
400238c0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238c4:	e5804408 	str	r4, [r0, #1032]	; 0x408
400238c8:	e59f00b0 	ldr	r0, [pc, #176]	; 40023980 <CyU3PI2cInt_ThreadHandler+0xec>
400238cc:	e5900000 	ldr	r0, [r0]
400238d0:	e3500000 	cmp	r0, #0
400238d4:	1a000001 	bne	400238e0 <CyU3PI2cInt_ThreadHandler+0x4c>
400238d8:	eb000098 	bl	40023b40 <CyU3PI2cReleaseLock>
400238dc:	eafffff1 	b	400238a8 <CyU3PI2cInt_ThreadHandler+0x14>
400238e0:	e3140001 	tst	r4, #1
400238e4:	0a000004 	beq	400238fc <CyU3PI2cInt_ThreadHandler+0x68>
400238e8:	e3a01000 	mov	r1, #0
400238ec:	e1a00001 	mov	r0, r1
400238f0:	e59f2088 	ldr	r2, [pc, #136]	; 40023980 <CyU3PI2cInt_ThreadHandler+0xec>
400238f4:	e5922000 	ldr	r2, [r2]
400238f8:	e12fff32 	blx	r2
400238fc:	e3140008 	tst	r4, #8
40023900:	0a000004 	beq	40023918 <CyU3PI2cInt_ThreadHandler+0x84>
40023904:	e3a01000 	mov	r1, #0
40023908:	e3a00001 	mov	r0, #1
4002390c:	e59f206c 	ldr	r2, [pc, #108]	; 40023980 <CyU3PI2cInt_ThreadHandler+0xec>
40023910:	e5922000 	ldr	r2, [r2]
40023914:	e12fff32 	blx	r2
40023918:	e3140040 	tst	r4, #64	; 0x40
4002391c:	0a000004 	beq	40023934 <CyU3PI2cInt_ThreadHandler+0xa0>
40023920:	e3a01000 	mov	r1, #0
40023924:	e3a00002 	mov	r0, #2
40023928:	e59f2050 	ldr	r2, [pc, #80]	; 40023980 <CyU3PI2cInt_ThreadHandler+0xec>
4002392c:	e5922000 	ldr	r2, [r2]
40023930:	e12fff32 	blx	r2
40023934:	e3140080 	tst	r4, #128	; 0x80
40023938:	0a000004 	beq	40023950 <CyU3PI2cInt_ThreadHandler+0xbc>
4002393c:	e3a01000 	mov	r1, #0
40023940:	e3a00003 	mov	r0, #3
40023944:	e59f2034 	ldr	r2, [pc, #52]	; 40023980 <CyU3PI2cInt_ThreadHandler+0xec>
40023948:	e5922000 	ldr	r2, [r2]
4002394c:	e12fff32 	blx	r2
40023950:	e3140c01 	tst	r4, #256	; 0x100
40023954:	0a000007 	beq	40023978 <CyU3PI2cInt_ThreadHandler+0xe4>
40023958:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002395c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023960:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023964:	e1a01c20 	lsr	r1, r0, #24
40023968:	e3a00004 	mov	r0, #4
4002396c:	e59f200c 	ldr	r2, [pc, #12]	; 40023980 <CyU3PI2cInt_ThreadHandler+0xec>
40023970:	e5922000 	ldr	r2, [r2]
40023974:	e12fff32 	blx	r2
40023978:	eb000070 	bl	40023b40 <CyU3PI2cReleaseLock>
4002397c:	eaffffc9 	b	400238a8 <CyU3PI2cInt_ThreadHandler+0x14>
40023980:	40030f1c 	.word	0x40030f1c

Disassembly of section i.CyU3PI2cReceiveBytes:

40023984 <CyU3PI2cReceiveBytes>:
40023984:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40023988:	e1a04000 	mov	r4, r0
4002398c:	e1a05001 	mov	r5, r1
40023990:	e1a06002 	mov	r6, r2
40023994:	e1a07003 	mov	r7, r3
40023998:	e59f0194 	ldr	r0, [pc, #404]	; 40023b34 <CyU3PI2cReceiveBytes+0x1b0>
4002399c:	e5900000 	ldr	r0, [r0]
400239a0:	e3500000 	cmp	r0, #0
400239a4:	1a000001 	bne	400239b0 <CyU3PI2cReceiveBytes+0x2c>
400239a8:	e3a00044 	mov	r0, #68	; 0x44
400239ac:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400239b0:	e59f0180 	ldr	r0, [pc, #384]	; 40023b38 <CyU3PI2cReceiveBytes+0x1b4>
400239b4:	e5900000 	ldr	r0, [r0]
400239b8:	e3500000 	cmp	r0, #0
400239bc:	0a000001 	beq	400239c8 <CyU3PI2cReceiveBytes+0x44>
400239c0:	e3a00044 	mov	r0, #68	; 0x44
400239c4:	eafffff8 	b	400239ac <CyU3PI2cReceiveBytes+0x28>
400239c8:	e3550000 	cmp	r5, #0
400239cc:	0a000001 	beq	400239d8 <CyU3PI2cReceiveBytes+0x54>
400239d0:	e3540000 	cmp	r4, #0
400239d4:	1a000001 	bne	400239e0 <CyU3PI2cReceiveBytes+0x5c>
400239d8:	e3a00041 	mov	r0, #65	; 0x41
400239dc:	eafffff2 	b	400239ac <CyU3PI2cReceiveBytes+0x28>
400239e0:	e5d40008 	ldrb	r0, [r4, #8]
400239e4:	e3500000 	cmp	r0, #0
400239e8:	0a000002 	beq	400239f8 <CyU3PI2cReceiveBytes+0x74>
400239ec:	e5d40008 	ldrb	r0, [r4, #8]
400239f0:	e3500008 	cmp	r0, #8
400239f4:	da000001 	ble	40023a00 <CyU3PI2cReceiveBytes+0x7c>
400239f8:	e3a00040 	mov	r0, #64	; 0x40
400239fc:	eaffffea 	b	400239ac <CyU3PI2cReceiveBytes+0x28>
40023a00:	e3560000 	cmp	r6, #0
40023a04:	1a000001 	bne	40023a10 <CyU3PI2cReceiveBytes+0x8c>
40023a08:	e3a00000 	mov	r0, #0
40023a0c:	eaffffe6 	b	400239ac <CyU3PI2cReceiveBytes+0x28>
40023a10:	ebffff4b 	bl	40023744 <CyU3PI2cGetLock>
40023a14:	e1a08000 	mov	r8, r0
40023a18:	e3580000 	cmp	r8, #0
40023a1c:	0a000001 	beq	40023a28 <CyU3PI2cReceiveBytes+0xa4>
40023a20:	e1a00008 	mov	r0, r8
40023a24:	eaffffe0 	b	400239ac <CyU3PI2cReceiveBytes+0x28>
40023a28:	e3a0bd07 	mov	fp, #448	; 0x1c0
40023a2c:	e1a00000 	nop			; (mov r0, r0)
40023a30:	e3a02001 	mov	r2, #1
40023a34:	e1a01006 	mov	r1, r6
40023a38:	e1a00004 	mov	r0, r4
40023a3c:	eb000166 	bl	40023fdc <MyI2cSendCommand>
40023a40:	e1a08000 	mov	r8, r0
40023a44:	e3580000 	cmp	r8, #0
40023a48:	0a000000 	beq	40023a50 <CyU3PI2cReceiveBytes+0xcc>
40023a4c:	ea00002a 	b	40023afc <CyU3PI2cReceiveBytes+0x178>
40023a50:	e3a0a000 	mov	sl, #0
40023a54:	ea000020 	b	40023adc <CyU3PI2cReceiveBytes+0x158>
40023a58:	e59f00dc 	ldr	r0, [pc, #220]	; 40023b3c <CyU3PI2cReceiveBytes+0x1b8>
40023a5c:	e58d0000 	str	r0, [sp]
40023a60:	ea000006 	b	40023a80 <CyU3PI2cReceiveBytes+0xfc>
40023a64:	e59d0000 	ldr	r0, [sp]
40023a68:	e2401001 	sub	r1, r0, #1
40023a6c:	e3500000 	cmp	r0, #0
40023a70:	e58d1000 	str	r1, [sp]
40023a74:	1a000001 	bne	40023a80 <CyU3PI2cReceiveBytes+0xfc>
40023a78:	e3a08055 	mov	r8, #85	; 0x55
40023a7c:	ea000004 	b	40023a94 <CyU3PI2cReceiveBytes+0x110>
40023a80:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a84:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023a88:	e38b1002 	orr	r1, fp, #2
40023a8c:	e1100001 	tst	r0, r1
40023a90:	0afffff3 	beq	40023a64 <CyU3PI2cReceiveBytes+0xe0>
40023a94:	e1a00000 	nop			; (mov r0, r0)
40023a98:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a9c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023aa0:	e110000b 	tst	r0, fp
40023aa4:	0a000000 	beq	40023aac <CyU3PI2cReceiveBytes+0x128>
40023aa8:	e3a0804a 	mov	r8, #74	; 0x4a
40023aac:	e3580000 	cmp	r8, #0
40023ab0:	0a000005 	beq	40023acc <CyU3PI2cReceiveBytes+0x148>
40023ab4:	e3a00001 	mov	r0, #1
40023ab8:	ebfffebe 	bl	400235b8 <CyU3PI2cErrorRecovery>
40023abc:	e3500000 	cmp	r0, #0
40023ac0:	0a000000 	beq	40023ac8 <CyU3PI2cReceiveBytes+0x144>
40023ac4:	e3a08054 	mov	r8, #84	; 0x54
40023ac8:	ea000005 	b	40023ae4 <CyU3PI2cReceiveBytes+0x160>
40023acc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ad0:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
40023ad4:	e7c5000a 	strb	r0, [r5, sl]
40023ad8:	e28aa001 	add	sl, sl, #1
40023adc:	e15a0006 	cmp	sl, r6
40023ae0:	3affffdc 	bcc	40023a58 <CyU3PI2cReceiveBytes+0xd4>
40023ae4:	e1a00000 	nop			; (mov r0, r0)
40023ae8:	e3580000 	cmp	r8, #0
40023aec:	0a000002 	beq	40023afc <CyU3PI2cReceiveBytes+0x178>
40023af0:	e1b00007 	movs	r0, r7
40023af4:	e2477001 	sub	r7, r7, #1
40023af8:	1affffcc 	bne	40023a30 <CyU3PI2cReceiveBytes+0xac>
40023afc:	e1a00000 	nop			; (mov r0, r0)
40023b00:	e358004a 	cmp	r8, #74	; 0x4a
40023b04:	1a000007 	bne	40023b28 <CyU3PI2cReceiveBytes+0x1a4>
40023b08:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b0c:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
40023b10:	e3190040 	tst	r9, #64	; 0x40
40023b14:	0a000000 	beq	40023b1c <CyU3PI2cReceiveBytes+0x198>
40023b18:	e3a08045 	mov	r8, #69	; 0x45
40023b1c:	e3190080 	tst	r9, #128	; 0x80
40023b20:	0a000000 	beq	40023b28 <CyU3PI2cReceiveBytes+0x1a4>
40023b24:	e3a08055 	mov	r8, #85	; 0x55
40023b28:	eb000004 	bl	40023b40 <CyU3PI2cReleaseLock>
40023b2c:	e1a00008 	mov	r0, r8
40023b30:	eaffff9d 	b	400239ac <CyU3PI2cReceiveBytes+0x28>
40023b34:	40030f14 	.word	0x40030f14
40023b38:	40030f10 	.word	0x40030f10
40023b3c:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023b40 <CyU3PI2cReleaseLock>:
40023b40:	e92d4010 	push	{r4, lr}
40023b44:	e59f0030 	ldr	r0, [pc, #48]	; 40023b7c <CyU3PI2cReleaseLock+0x3c>
40023b48:	e5900000 	ldr	r0, [r0]
40023b4c:	e3500000 	cmp	r0, #0
40023b50:	1a000001 	bne	40023b5c <CyU3PI2cReleaseLock+0x1c>
40023b54:	e3a00044 	mov	r0, #68	; 0x44
40023b58:	e8bd8010 	pop	{r4, pc}
40023b5c:	e59f001c 	ldr	r0, [pc, #28]	; 40023b80 <CyU3PI2cReleaseLock+0x40>
40023b60:	ebff9a5f 	bl	4000a4e4 <_txe_mutex_put>
40023b64:	e3500000 	cmp	r0, #0
40023b68:	0a000001 	beq	40023b74 <CyU3PI2cReleaseLock+0x34>
40023b6c:	e3a0001d 	mov	r0, #29
40023b70:	eafffff8 	b	40023b58 <CyU3PI2cReleaseLock+0x18>
40023b74:	e3a00000 	mov	r0, #0
40023b78:	eafffff6 	b	40023b58 <CyU3PI2cReleaseLock+0x18>
40023b7c:	40030f18 	.word	0x40030f18
40023b80:	40032e74 	.word	0x40032e74

Disassembly of section i.CyU3PI2cSetConfig:

40023b84 <CyU3PI2cSetConfig>:
40023b84:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023b88:	e1a04000 	mov	r4, r0
40023b8c:	e1a05001 	mov	r5, r1
40023b90:	e59f01e0 	ldr	r0, [pc, #480]	; 40023d78 <CyU3PI2cSetConfig+0x1f4>
40023b94:	e5900000 	ldr	r0, [r0]
40023b98:	e3500000 	cmp	r0, #0
40023b9c:	1a000001 	bne	40023ba8 <CyU3PI2cSetConfig+0x24>
40023ba0:	e3a00042 	mov	r0, #66	; 0x42
40023ba4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023ba8:	e3540000 	cmp	r4, #0
40023bac:	1a000001 	bne	40023bb8 <CyU3PI2cSetConfig+0x34>
40023bb0:	e3a00041 	mov	r0, #65	; 0x41
40023bb4:	eafffffa 	b	40023ba4 <CyU3PI2cSetConfig+0x20>
40023bb8:	e5940004 	ldr	r0, [r4, #4]
40023bbc:	e3500000 	cmp	r0, #0
40023bc0:	1a000003 	bne	40023bd4 <CyU3PI2cSetConfig+0x50>
40023bc4:	e3550000 	cmp	r5, #0
40023bc8:	0a000001 	beq	40023bd4 <CyU3PI2cSetConfig+0x50>
40023bcc:	e3a00040 	mov	r0, #64	; 0x40
40023bd0:	eafffff3 	b	40023ba4 <CyU3PI2cSetConfig+0x20>
40023bd4:	ebfffeda 	bl	40023744 <CyU3PI2cGetLock>
40023bd8:	e1a06000 	mov	r6, r0
40023bdc:	e3560000 	cmp	r6, #0
40023be0:	0a000001 	beq	40023bec <CyU3PI2cSetConfig+0x68>
40023be4:	e1a00006 	mov	r0, r6
40023be8:	eaffffed 	b	40023ba4 <CyU3PI2cSetConfig+0x20>
40023bec:	e3a00000 	mov	r0, #0
40023bf0:	e59f1184 	ldr	r1, [pc, #388]	; 40023d7c <CyU3PI2cSetConfig+0x1f8>
40023bf4:	e5810000 	str	r0, [r1]
40023bf8:	e5940000 	ldr	r0, [r4]
40023bfc:	ebffc0ef 	bl	40013fc0 <CyU3PI2cSetClock>
40023c00:	e1a06000 	mov	r6, r0
40023c04:	e3560000 	cmp	r6, #0
40023c08:	1a00000e 	bne	40023c48 <CyU3PI2cSetConfig+0xc4>
40023c0c:	e3a00206 	mov	r0, #1610612736	; 0x60000000
40023c10:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c14:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023c18:	e1e07741 	mvn	r7, r1, asr #14
40023c1c:	ea000004 	b	40023c34 <CyU3PI2cSetConfig+0xb0>
40023c20:	e1b00007 	movs	r0, r7
40023c24:	e2477001 	sub	r7, r7, #1
40023c28:	1a000001 	bne	40023c34 <CyU3PI2cSetConfig+0xb0>
40023c2c:	e3a06054 	mov	r6, #84	; 0x54
40023c30:	ea000003 	b	40023c44 <CyU3PI2cSetConfig+0xc0>
40023c34:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c38:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c3c:	e3100008 	tst	r0, #8
40023c40:	0afffff6 	beq	40023c20 <CyU3PI2cSetConfig+0x9c>
40023c44:	e1a00000 	nop			; (mov r0, r0)
40023c48:	e3560000 	cmp	r6, #0
40023c4c:	1a00000b 	bne	40023c80 <CyU3PI2cSetConfig+0xfc>
40023c50:	e59f7128 	ldr	r7, [pc, #296]	; 40023d80 <CyU3PI2cSetConfig+0x1fc>
40023c54:	ea000004 	b	40023c6c <CyU3PI2cSetConfig+0xe8>
40023c58:	e1b00007 	movs	r0, r7
40023c5c:	e2477001 	sub	r7, r7, #1
40023c60:	1a000001 	bne	40023c6c <CyU3PI2cSetConfig+0xe8>
40023c64:	e3a06054 	mov	r6, #84	; 0x54
40023c68:	ea000003 	b	40023c7c <CyU3PI2cSetConfig+0xf8>
40023c6c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c70:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023c74:	e3100002 	tst	r0, #2
40023c78:	1afffff6 	bne	40023c58 <CyU3PI2cSetConfig+0xd4>
40023c7c:	e1a00000 	nop			; (mov r0, r0)
40023c80:	e3560000 	cmp	r6, #0
40023c84:	0a000002 	beq	40023c94 <CyU3PI2cSetConfig+0x110>
40023c88:	ebffffac 	bl	40023b40 <CyU3PI2cReleaseLock>
40023c8c:	e1a00006 	mov	r0, r6
40023c90:	eaffffc3 	b	40023ba4 <CyU3PI2cSetConfig+0x20>
40023c94:	e3a00000 	mov	r0, #0
40023c98:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c9c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023ca0:	e3a06000 	mov	r6, #0
40023ca4:	e5940000 	ldr	r0, [r4]
40023ca8:	e59f10d4 	ldr	r1, [pc, #212]	; 40023d84 <CyU3PI2cSetConfig+0x200>
40023cac:	e1500001 	cmp	r0, r1
40023cb0:	8a000000 	bhi	40023cb8 <CyU3PI2cSetConfig+0x134>
40023cb4:	e3a06004 	mov	r6, #4
40023cb8:	e5940004 	ldr	r0, [r4, #4]
40023cbc:	e3500000 	cmp	r0, #0
40023cc0:	0a000007 	beq	40023ce4 <CyU3PI2cSetConfig+0x160>
40023cc4:	e3866001 	orr	r6, r6, #1
40023cc8:	e3a00001 	mov	r0, #1
40023ccc:	e59f10b4 	ldr	r1, [pc, #180]	; 40023d88 <CyU3PI2cSetConfig+0x204>
40023cd0:	e5810000 	str	r0, [r1]
40023cd4:	e1d400bc 	ldrh	r0, [r4, #12]
40023cd8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023cdc:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023ce0:	ea000005 	b	40023cfc <CyU3PI2cSetConfig+0x178>
40023ce4:	e3a00000 	mov	r0, #0
40023ce8:	e59f1098 	ldr	r1, [pc, #152]	; 40023d88 <CyU3PI2cSetConfig+0x204>
40023cec:	e5810000 	str	r0, [r1]
40023cf0:	e59f0094 	ldr	r0, [pc, #148]	; 40023d8c <CyU3PI2cSetConfig+0x208>
40023cf4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023cf8:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023cfc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023d00:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023d04:	e59f0084 	ldr	r0, [pc, #132]	; 40023d90 <CyU3PI2cSetConfig+0x20c>
40023d08:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d0c:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023d10:	e5940008 	ldr	r0, [r4, #8]
40023d14:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023d18:	e3e00000 	mvn	r0, #0
40023d1c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023d20:	e1a00005 	mov	r0, r5
40023d24:	eb0000a8 	bl	40023fcc <CyU3PRegisterI2cCallBack>
40023d28:	e3550000 	cmp	r5, #0
40023d2c:	0a000003 	beq	40023d40 <CyU3PI2cSetConfig+0x1bc>
40023d30:	e59f005c 	ldr	r0, [pc, #92]	; 40023d94 <CyU3PI2cSetConfig+0x210>
40023d34:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d38:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023d3c:	ea000002 	b	40023d4c <CyU3PI2cSetConfig+0x1c8>
40023d40:	e3a00000 	mov	r0, #0
40023d44:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d48:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023d4c:	e3a00001 	mov	r0, #1
40023d50:	e59f1040 	ldr	r1, [pc, #64]	; 40023d98 <CyU3PI2cSetConfig+0x214>
40023d54:	e5810000 	str	r0, [r1]
40023d58:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023d5c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023d60:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023d64:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d68:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023d6c:	ebffff73 	bl	40023b40 <CyU3PI2cReleaseLock>
40023d70:	e3a00000 	mov	r0, #0
40023d74:	eaffff8a 	b	40023ba4 <CyU3PI2cSetConfig+0x20>
40023d78:	40030f18 	.word	0x40030f18
40023d7c:	40030f20 	.word	0x40030f20
40023d80:	00007fff 	.word	0x00007fff
40023d84:	000186a0 	.word	0x000186a0
40023d88:	40030f10 	.word	0x40030f10
40023d8c:	0000ffff 	.word	0x0000ffff
40023d90:	00000502 	.word	0x00000502
40023d94:	000001c9 	.word	0x000001c9
40023d98:	40030f14 	.word	0x40030f14

Disassembly of section i.CyU3PI2cTransmitBytes:

40023d9c <CyU3PI2cTransmitBytes>:
40023d9c:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023da0:	e1a04000 	mov	r4, r0
40023da4:	e1a05001 	mov	r5, r1
40023da8:	e1a06002 	mov	r6, r2
40023dac:	e59f020c 	ldr	r0, [pc, #524]	; 40023fc0 <CyU3PI2cTransmitBytes+0x224>
40023db0:	e5900000 	ldr	r0, [r0]
40023db4:	e3500000 	cmp	r0, #0
40023db8:	1a000002 	bne	40023dc8 <CyU3PI2cTransmitBytes+0x2c>
40023dbc:	e3a00044 	mov	r0, #68	; 0x44
40023dc0:	e28dd010 	add	sp, sp, #16
40023dc4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023dc8:	e59f01f4 	ldr	r0, [pc, #500]	; 40023fc4 <CyU3PI2cTransmitBytes+0x228>
40023dcc:	e5900000 	ldr	r0, [r0]
40023dd0:	e3500000 	cmp	r0, #0
40023dd4:	0a000001 	beq	40023de0 <CyU3PI2cTransmitBytes+0x44>
40023dd8:	e3a00044 	mov	r0, #68	; 0x44
40023ddc:	eafffff7 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023de0:	e3550000 	cmp	r5, #0
40023de4:	0a000001 	beq	40023df0 <CyU3PI2cTransmitBytes+0x54>
40023de8:	e3540000 	cmp	r4, #0
40023dec:	1a000001 	bne	40023df8 <CyU3PI2cTransmitBytes+0x5c>
40023df0:	e3a00041 	mov	r0, #65	; 0x41
40023df4:	eafffff1 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023df8:	e5d40008 	ldrb	r0, [r4, #8]
40023dfc:	e3500000 	cmp	r0, #0
40023e00:	0a000002 	beq	40023e10 <CyU3PI2cTransmitBytes+0x74>
40023e04:	e5d40008 	ldrb	r0, [r4, #8]
40023e08:	e3500008 	cmp	r0, #8
40023e0c:	da000001 	ble	40023e18 <CyU3PI2cTransmitBytes+0x7c>
40023e10:	e3a00040 	mov	r0, #64	; 0x40
40023e14:	eaffffe9 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023e18:	e3560000 	cmp	r6, #0
40023e1c:	1a000001 	bne	40023e28 <CyU3PI2cTransmitBytes+0x8c>
40023e20:	e3a00000 	mov	r0, #0
40023e24:	eaffffe5 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023e28:	ebfffe45 	bl	40023744 <CyU3PI2cGetLock>
40023e2c:	e1a07000 	mov	r7, r0
40023e30:	e3570000 	cmp	r7, #0
40023e34:	0a000001 	beq	40023e40 <CyU3PI2cTransmitBytes+0xa4>
40023e38:	e1a00007 	mov	r0, r7
40023e3c:	eaffffdf 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023e40:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023e44:	e1a00000 	nop			; (mov r0, r0)
40023e48:	e3a07000 	mov	r7, #0
40023e4c:	e5d50000 	ldrb	r0, [r5]
40023e50:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e54:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023e58:	e3a02000 	mov	r2, #0
40023e5c:	e1a01006 	mov	r1, r6
40023e60:	e1a00004 	mov	r0, r4
40023e64:	eb00005c 	bl	40023fdc <MyI2cSendCommand>
40023e68:	e1a07000 	mov	r7, r0
40023e6c:	e3570000 	cmp	r7, #0
40023e70:	0a000000 	beq	40023e78 <CyU3PI2cTransmitBytes+0xdc>
40023e74:	ea000043 	b	40023f88 <CyU3PI2cTransmitBytes+0x1ec>
40023e78:	e3a08001 	mov	r8, #1
40023e7c:	ea000018 	b	40023ee4 <CyU3PI2cTransmitBytes+0x148>
40023e80:	e59f9140 	ldr	r9, [pc, #320]	; 40023fc8 <CyU3PI2cTransmitBytes+0x22c>
40023e84:	ea000004 	b	40023e9c <CyU3PI2cTransmitBytes+0x100>
40023e88:	e1b00009 	movs	r0, r9
40023e8c:	e2499001 	sub	r9, r9, #1
40023e90:	1a000001 	bne	40023e9c <CyU3PI2cTransmitBytes+0x100>
40023e94:	e3a07055 	mov	r7, #85	; 0x55
40023e98:	ea000004 	b	40023eb0 <CyU3PI2cTransmitBytes+0x114>
40023e9c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ea0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023ea4:	e38a1010 	orr	r1, sl, #16
40023ea8:	e1100001 	tst	r0, r1
40023eac:	0afffff5 	beq	40023e88 <CyU3PI2cTransmitBytes+0xec>
40023eb0:	e1a00000 	nop			; (mov r0, r0)
40023eb4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023eb8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023ebc:	e110000a 	tst	r0, sl
40023ec0:	0a000000 	beq	40023ec8 <CyU3PI2cTransmitBytes+0x12c>
40023ec4:	e3a0704a 	mov	r7, #74	; 0x4a
40023ec8:	e3570000 	cmp	r7, #0
40023ecc:	0a000000 	beq	40023ed4 <CyU3PI2cTransmitBytes+0x138>
40023ed0:	ea000005 	b	40023eec <CyU3PI2cTransmitBytes+0x150>
40023ed4:	e7d50008 	ldrb	r0, [r5, r8]
40023ed8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023edc:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023ee0:	e2888001 	add	r8, r8, #1
40023ee4:	e1580006 	cmp	r8, r6
40023ee8:	3affffe4 	bcc	40023e80 <CyU3PI2cTransmitBytes+0xe4>
40023eec:	e1a00000 	nop			; (mov r0, r0)
40023ef0:	e1560008 	cmp	r6, r8
40023ef4:	1a000013 	bne	40023f48 <CyU3PI2cTransmitBytes+0x1ac>
40023ef8:	e3570000 	cmp	r7, #0
40023efc:	1a000011 	bne	40023f48 <CyU3PI2cTransmitBytes+0x1ac>
40023f00:	e59f90c0 	ldr	r9, [pc, #192]	; 40023fc8 <CyU3PI2cTransmitBytes+0x22c>
40023f04:	ea000004 	b	40023f1c <CyU3PI2cTransmitBytes+0x180>
40023f08:	e1b00009 	movs	r0, r9
40023f0c:	e2499001 	sub	r9, r9, #1
40023f10:	1a000001 	bne	40023f1c <CyU3PI2cTransmitBytes+0x180>
40023f14:	e3a07055 	mov	r7, #85	; 0x55
40023f18:	ea000004 	b	40023f30 <CyU3PI2cTransmitBytes+0x194>
40023f1c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f20:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023f24:	e38a1008 	orr	r1, sl, #8
40023f28:	e1100001 	tst	r0, r1
40023f2c:	0afffff5 	beq	40023f08 <CyU3PI2cTransmitBytes+0x16c>
40023f30:	e1a00000 	nop			; (mov r0, r0)
40023f34:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f38:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f3c:	e110000a 	tst	r0, sl
40023f40:	0a000000 	beq	40023f48 <CyU3PI2cTransmitBytes+0x1ac>
40023f44:	e3a0704a 	mov	r7, #74	; 0x4a
40023f48:	e3570000 	cmp	r7, #0
40023f4c:	0a000006 	beq	40023f6c <CyU3PI2cTransmitBytes+0x1d0>
40023f50:	e3a00001 	mov	r0, #1
40023f54:	ebfffd97 	bl	400235b8 <CyU3PI2cErrorRecovery>
40023f58:	e3500000 	cmp	r0, #0
40023f5c:	0a000002 	beq	40023f6c <CyU3PI2cTransmitBytes+0x1d0>
40023f60:	ebfffef6 	bl	40023b40 <CyU3PI2cReleaseLock>
40023f64:	e3a00054 	mov	r0, #84	; 0x54
40023f68:	eaffff94 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023f6c:	e3570000 	cmp	r7, #0
40023f70:	0a000004 	beq	40023f88 <CyU3PI2cTransmitBytes+0x1ec>
40023f74:	e59d000c 	ldr	r0, [sp, #12]
40023f78:	e2401001 	sub	r1, r0, #1
40023f7c:	e3500000 	cmp	r0, #0
40023f80:	e58d100c 	str	r1, [sp, #12]
40023f84:	1affffaf 	bne	40023e48 <CyU3PI2cTransmitBytes+0xac>
40023f88:	e1a00000 	nop			; (mov r0, r0)
40023f8c:	e357004a 	cmp	r7, #74	; 0x4a
40023f90:	1a000007 	bne	40023fb4 <CyU3PI2cTransmitBytes+0x218>
40023f94:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f98:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023f9c:	e31b0040 	tst	fp, #64	; 0x40
40023fa0:	0a000000 	beq	40023fa8 <CyU3PI2cTransmitBytes+0x20c>
40023fa4:	e3a07045 	mov	r7, #69	; 0x45
40023fa8:	e31b0080 	tst	fp, #128	; 0x80
40023fac:	0a000000 	beq	40023fb4 <CyU3PI2cTransmitBytes+0x218>
40023fb0:	e3a07055 	mov	r7, #85	; 0x55
40023fb4:	ebfffee1 	bl	40023b40 <CyU3PI2cReleaseLock>
40023fb8:	e1a00007 	mov	r0, r7
40023fbc:	eaffff7f 	b	40023dc0 <CyU3PI2cTransmitBytes+0x24>
40023fc0:	40030f14 	.word	0x40030f14
40023fc4:	40030f10 	.word	0x40030f10
40023fc8:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023fcc <CyU3PRegisterI2cCallBack>:
40023fcc:	e59f1004 	ldr	r1, [pc, #4]	; 40023fd8 <CyU3PRegisterI2cCallBack+0xc>
40023fd0:	e5810000 	str	r0, [r1]
40023fd4:	e12fff1e 	bx	lr
40023fd8:	40030f1c 	.word	0x40030f1c

Disassembly of section i.MyI2cSendCommand:

40023fdc <MyI2cSendCommand>:
40023fdc:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023fe0:	e1a04000 	mov	r4, r0
40023fe4:	e1a06001 	mov	r6, r1
40023fe8:	e1a07002 	mov	r7, r2
40023fec:	e3a00000 	mov	r0, #0
40023ff0:	e59f1108 	ldr	r1, [pc, #264]	; 40024100 <MyI2cSendCommand+0x124>
40023ff4:	e5810000 	str	r0, [r1]
40023ff8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ffc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40024000:	e3100202 	tst	r0, #536870912	; 0x20000000
40024004:	0a000006 	beq	40024024 <MyI2cSendCommand+0x48>
40024008:	e3a00000 	mov	r0, #0
4002400c:	ebfffd69 	bl	400235b8 <CyU3PI2cErrorRecovery>
40024010:	e1a05000 	mov	r5, r0
40024014:	e3550000 	cmp	r5, #0
40024018:	0a000001 	beq	40024024 <MyI2cSendCommand+0x48>
4002401c:	e1a00005 	mov	r0, r5
40024020:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40024024:	e59f80d8 	ldr	r8, [pc, #216]	; 40024104 <MyI2cSendCommand+0x128>
40024028:	e1a00000 	nop			; (mov r0, r0)
4002402c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40024030:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40024034:	e3100203 	tst	r0, #805306368	; 0x30000000
40024038:	0a000002 	beq	40024048 <MyI2cSendCommand+0x6c>
4002403c:	e1b00008 	movs	r0, r8
40024040:	e2488001 	sub	r8, r8, #1
40024044:	1afffff8 	bne	4002402c <MyI2cSendCommand+0x50>
40024048:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002404c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40024050:	e3100203 	tst	r0, #805306368	; 0x30000000
40024054:	0a000001 	beq	40024060 <MyI2cSendCommand+0x84>
40024058:	e3a00045 	mov	r0, #69	; 0x45
4002405c:	eaffffef 	b	40024020 <MyI2cSendCommand+0x44>
40024060:	e3a00000 	mov	r0, #0
40024064:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40024068:	e5810424 	str	r0, [r1, #1060]	; 0x424
4002406c:	e5d42008 	ldrb	r2, [r4, #8]
40024070:	e1a01004 	mov	r1, r4
40024074:	e1a0000d 	mov	r0, sp
40024078:	ebff7e15 	bl	400038d4 <CyU3PMemCopy>
4002407c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40024080:	e59d0000 	ldr	r0, [sp]
40024084:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40024088:	e59d0004 	ldr	r0, [sp, #4]
4002408c:	e5810420 	str	r0, [r1, #1056]	; 0x420
40024090:	e3a00000 	mov	r0, #0
40024094:	e5810428 	str	r0, [r1, #1064]	; 0x428
40024098:	e3e00000 	mvn	r0, #0
4002409c:	e5810408 	str	r0, [r1, #1032]	; 0x408
400240a0:	e3a00d07 	mov	r0, #448	; 0x1c0
400240a4:	e5810404 	str	r0, [r1, #1028]	; 0x404
400240a8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400240ac:	e5806438 	str	r6, [r0, #1080]	; 0x438
400240b0:	e1d400ba 	ldrh	r0, [r4, #10]
400240b4:	e5810418 	str	r0, [r1, #1048]	; 0x418
400240b8:	e3570000 	cmp	r7, #0
400240bc:	0a000004 	beq	400240d4 <MyI2cSendCommand+0xf8>
400240c0:	e5d40008 	ldrb	r0, [r4, #8]
400240c4:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
400240c8:	e38000e0 	orr	r0, r0, #224	; 0xe0
400240cc:	e5810428 	str	r0, [r1, #1064]	; 0x428
400240d0:	ea000003 	b	400240e4 <MyI2cSendCommand+0x108>
400240d4:	e5d40008 	ldrb	r0, [r4, #8]
400240d8:	e38000c0 	orr	r0, r0, #192	; 0xc0
400240dc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400240e0:	e5810428 	str	r0, [r1, #1064]	; 0x428
400240e4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400240e8:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
400240ec:	e3800010 	orr	r0, r0, #16
400240f0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400240f4:	e5810428 	str	r0, [r1, #1064]	; 0x428
400240f8:	e3a00000 	mov	r0, #0
400240fc:	eaffffc7 	b	40024020 <MyI2cSendCommand+0x44>
40024100:	40030f20 	.word	0x40030f20
40024104:	00007fff 	.word	0x00007fff
